{
    "title": "Widow's Welcome",
    "pages": [
        "<p align=\"center\">Author's Note: I've been working on a huge Pinwheel project for about seven months now, which has ballooned into a trilogy that will be making its way to this site in the next couple of months, but I wanted to take some time off to get a short story out for Halloween. I hope you guys enjoy it!</p>\n\n<p align=\"center\">CHAPTER 1: HOUSE ON THE HILL</p>\n\nSheets of rain lashed against the windshield as the car wound through the forest, its tires skidding on the old dirt road, kicking up torrents of mud that left streaks across its flanks. It was a full moon, but dark clouds choked the sky, and a thick fog had rolled in between the gnarled trunks of the naked trees. Freddy cursed to himself under his breath, keeping his eyes on the shadowy path ahead as he reached for his high beams. They lanced forth, cutting through the first few feet of mist like a knife but quickly fading as the haze consumed them. He squinted, but between the torrential downpour and the obscuring mist, he could scarcely see ten feet ahead.\n\nThe vehicle groaned as he eased up on the accelerator, frustration furrowing his brow as he found himself torn between making good time and not wrapping his '93 Bronco around a tree. He tapped at the GPS that was crudely mounted above his dash with a suction cup, his cab bathed in red light as it flashed a no signal warning.\n\n\"Piece of shit,\" he grumbled to nobody in particular. The only reason that he was out here to begin with was because the app had suggested a quicker route, something that it had assured him was a shortcut that would shave an hour off his journey. At this rate, he wasn't even going to make it to the meeting at all, never mind on time.\n\nThere was a hiss of static as he tried to turn on the radio, cycling between the channels to no avail, each station spewing out nothing but crackling noise. It was like he'd driven off the map entirely, like some ancient mariner sailing his ship off the edge of the world.\n\nHe returned his attention to the road instead, his vehicle slowing to a crawl as he navigated through the woods. Even with four-wheel-drive, the truck was having a hell of a time finding purchase on the track, if it could even be described as one. Winter had stripped the trees of their leaves, creating a canopy above his head like the interlocking fingers of some skeletal creature, the gaunt branches swaying in the wind. Just where the hell had he ended up?\n\nAs he rounded another bend in the snaking road, there was a sound like a gunshot, Freddy almost jumping out of his skin as the truck suddenly veered off the road. He fought against the wheel, but there was nothing he could do, his seat belt digging into his shoulder as the vehicle plunged nose-first into a ditch. There was a loud thud, then he opened his eyes to see grass directly ahead of him.\n\nMuttering things that would make a sailor blush, he fumbled to unbuckle his seat belt, then struggled out through the driver's side door. The drop was higher than he was anticipating, and he stumbled as he landed, immediately pulling up the hood of his jacket to protect himself from the hammering rain. As he turned, he saw that his truck was hopelessly stuck. It had plunged grill-first into a ditch, muddy water now rising past its headlights, the rear wheels lifted a good foot off the ground.\n\nHis shoes splashing in the mud, he walked around to the other side of the vehicle, raising a hand to shield his face from the almost horizontal downpour. There was the issue -- the front left tire had blown. There must have been something sharp on the road, maybe a broken bottle or a piece of rusty metal. He had a spare in the back, but there was no way he was getting his truck out of the ditch without a tow. Turning his back to the wind to stop his phone from getting soaked, he tried to make a call but quickly realized that the device wasn't faring any better than his GPS.\n\nUttering one last curse, he reached into the cab for his keys, then set off along the dirt track. He had no idea what lay ahead of him. All he knew was that he hadn't passed a gas station or another driver for a solid hour, so there was a marginally higher chance of finding help if he kept going.\n\nLightning cracked across the sky, Freddy pulling his jacket tighter as he trudged along the side of the road. This was the kind of weather that a raincoat provided little protection against, the frigid water and creeping wind finding their way into every little crack and crevice. He glanced up as he passed beneath one of the swaying trees, seeing an owl perched on one of its branches, its yellow eyes peering down at him like beacons. The bird wasn't faring much better than he was, its wings wrapped around itself protectively as the wind ruffled its dark feathers.\n\nFreddy spared one last glance at his truck, then headed off down the path.\n\n<p align=\"center\">***</p>\n\nFreddy had been walking for a couple of hours, and his shoes and socks were completely waterlogged, the friction starting to rub his feet raw. He was shivering, his jacket so soaked that he wasn't even sure if it was wet on the inside or just cold. He had passed the point where turning back would have been an option, so he had decided to keep going, surmising that he must come across civilization eventually. Inconvenience was starting to turn to danger, and annoyance to genuine concern for his safety. Although he was sticking to the road, he was still lost in the middle of a forest, and his phone was a useless hunk of plastic.\n\nAs the rolling fog cleared for a brief moment, he spotted a glow ahead. There was something off in the distance, maybe a house or a gas station, its elevation putting it above the treeline. The dim pinpricks of yellow light were quickly shrouded in mist again, but it was enough to get a vague sense of direction, so he kept going.\n\nHe eventually reached a fork in the road, a smaller path that led off into the woods. It was overgrown, somehow in even worse shape than the dirt track. High above the trees, he could see that faint glow, like a lighthouse warning ships away from the shore. There must be someone home if the lights were on. Swallowing his apprehension, he made his way down the track. He soon started to climb uphill, the terrain growing rockier, the dense woodland thinning out.\n\nThrough the haze, Freddy glimpsed his destination. It wasn't a gas station, but an old house -- no, a mansion. It was perched atop a hill slap bang in the middle of the woods, conspicuously isolated, the way that it rose above the mist making it look like it was sitting on a solitary island in an ocean of shifting fog. The only access was the winding trail that he was currently following. The place was old -- he could see the pointed silhouette of a Victorian-style turret -- but buildings that had been constructed in the 1700s weren't unusual in the region. Still, as he advanced towards it, he couldn't help but feel a chill crawl down his spine.\n\nAn obstacle soon blocked his path. There was a high wall around the property, the old stonework cracked and weathered, a pair of heavy iron gates standing in his way. They were painted jet black, and they had long ago fallen prey to clinging vines, leaving them so overgrown that he doubted whether they would actually open anymore. To either side of the gates were stone pillars, and sitting atop each one was a grimacing gargoyle, their shining bronze tarnished with green patina due to decades of oxidation.\n\nFreddy appraised the gates, noticing that they didn't seem to be chained, and decided to give them a push. To his surprise, they creaked open with relative ease, as though the visibly rusted metal had been oiled only recently. The desiccated creepers that had looked like they would seal the way shut simply crumbled and fell away. These gates couldn't have been opened in years, so why were there lights on in the house? There must be some other way inside, maybe a rear entrance.\n\nHe was trespassing beyond this point, but it wasn't like there was a buzzer or an intercom, so he had little choice but to head inside. The grounds were just as overgrown as the forest beyond, what had probably once been carefully tended trees and flowerbeds now overflowing, the harsh weather turning many of the plants into dried-out husks. He passed a stone fountain filled with stagnant water that now played home to weeds, its chipped surface coated in lichens, the statue that stood atop its pedestal sculpted into the shape of a woman in a flowing gown. The large jug that she was hefting over her shoulder must have been a water spout at one point, but it was dry now.\n\nDespite how abandoned the place looked, the path leading up to the house was bathed in golden light from a lamp on the porch, drawing him in like a moth to the flame. He craned his neck to get a better look at the property as he neared, seeing that it was built in a Gothic style, probably putting it at two or three hundred years old. It was three stories tall, made from dark brickwork that had been stained and weathered by age, more creepers making their way towards the gray tiles on the roof. At each of the four corners of the building was a tall, cylindrical turret with a pointed cone, and there were balconies on the upper floors that looked out over the garden. There was elaborate ornamentation everywhere he looked, with balustrades on the roof and tracery on the large bay windows that faced the gate. It would have been a lavish property worthy of a millionaire had it not been in such a state of decay, but despite its appearance, light still poured out through the filthy glass.\n\nHoping that he wasn't about to be greeted with the barrel of a shotgun, Freddy trudged up the path, taking cover from the rain beneath the sloping porch. He flipped open his hood so as to appear less threatening, his mop of damp hair sticking to his face as he tried to brush it aside, then reached for the brass knocker on the door. He rapped once, twice, then stepped back as he waited for someone to answer. After what must have been a couple of minutes, he noticed a shadow making its way along the building. Something inside was blocking the light as it moved towards the door from the left wing of the manor, passing in front of each window in turn, the glass too dirty to make out any kind of detail. It slipped out of view as it entered the foyer, Freddy feeling a lump form in his throat.\n\nThe sound of a sliding bolt rose above the patter of the rain, and the door swung open on squeaking hinges to reveal a tall figure. Freddy couldn't help but take a faltering step back as the stranger loomed over him. Their features were cast into shadow by the chandelier on the ceiling behind them, but the porch light soon revealed them as they drew closer.\n\nIt was a woman, tall and willowy, with raven hair so long that it reached the small of her back. The first thing that he noticed was her clothing. She was wearing a gown made from a heavy, black fabric whose hem reached low enough to obscure her feet, tapering into a narrow waist that might have been the product of an unseen corset. She wore a jacket that looked almost like the upper half of a two-piece suit, but in a more feminine style that gripped her figure tightly, the two halves joined by a single button that gave it the appearance of a butterfly's wings. The lapels were open wide to expose the soft ruffles of the cream-colored bodice that she wore beneath it, its collar fastened about her slender neck tightly enough that it looked uncomfortable. The sleeves were equally form-fitting, though they expanded at the shoulders to give them a wider profile. The outfit was decorated with swirling embroidery in shining gold, outlining the hem, the lapels of the jacket, and the cuffs with ornate patterns. It was clearly an old style, but not so old as to raise eyebrows.\n\nAs his eyes wandered up to her face, he was struck by her lily-white skin, the dark hues of her hair and her choice of clothing making it all the more apparent. Her cheeks almost seemed drained of warmth, and suddenly, the frigid wind behind him seemed welcoming in comparison. She peered back at him with a pair of blue eyes so icy that they bordered on gray, expressionless save for a hint of curiosity. She was older than he was, maybe in her late thirties or early forties, if he had to guess. She clasped her hands neatly in front of her, waiting for him to explain himself.\n\n\"H-hi,\" he stammered, not sure how else to address her. \"I'm really sorry to bother you, but my...I crashed my car in the woods,\" he continued as he gestured over his shoulder with his thumb. \"With all the rain, I just lost control and...into a ditch, y'know? I saw that your lights were on, and...my cell doesn't have any reception...\" He trailed off, realizing that she was waiting for him to get to the point. \"Can I use your phone?\"\n\nShe looked him up and down, then her pale face broke out into a warm smile, and she stepped aside with a gesture for him to enter.\n\n\"I'm afraid that I don't have a working telephone,\" she replied, her voice deep and breathy. \"But please, come in out of the rain all the same. You're liable to catch your death out there.\"\n\nHe stepped into the foyer, finding it just as lavish as the exterior of the building and no less run down. The ornate chandelier that hung high above their heads was draped with a thick layer of cobwebs, making it look like it hadn't been cleaned in years. Even the bulbs were dusty, dimming the light that they cast on the checkerboard tiles below. There were elaborate plaster casts of flowers and cherubs on the ceiling, the paint that had once adorned them now peeling. At the far end of the room was a winding staircase that led to the upper floors, carved from some kind of rich, dark wood that might be mahogany. The banister was sculpted all the way up, Freddy taking a moment to admire it.\n\n\"You're soaked to the bone,\" the woman said, watching him drip rainwater on her tiles. He was indeed drenched, his wet clothes sticking to him, his shoes leaving muddy footprints.\n\n\"Jeez, I'm sorry,\" he grumbled as he raised his arms impotently as though that might somehow help. \"I'm tracking mud all over your floor.\"\n\n\"No matter,\" she said sweetly, gesturing to the leftmost doorway that led deeper into the building. \"If you haven't noticed by now, the property isn't quite as well-maintained as it once was. Please, take a seat by the fire.\"\n\nThe tall woman shadowed him as he made his way into the next room, passing beneath a high arch and into a short hallway. There were windows to his left, but he couldn't see out into the garden due to the grime that coated them. Against the right wall was a series of small tables that were adorned with marble busts of men and women that he didn't recognize. There were paintings, too, but most of them were covered over with protective sheets that were themselves caked in dust and cobwebs.\n\nAt the far end of the hall was a door, and after the stranger encouraged him to open it, he stepped through into an expansive room. The ceiling here was just as impressively high as the one in the foyer, and there was another chandelier draped with a blanket of silvery spiderwebs hanging from its center. To his left was one of the bay windows that he had seen from outside, and at the far end of the room was a fireplace with a marble mantle in onyx black that looked as though it must have weighed a solid ton, the stone carved with intricate reliefs of plants and animals. A welcoming fire roared in the hearth, its wavering flames doing more to light the room than the dim chandelier, casting the furniture that was arranged around it in an orange glow. Couches, padded armchairs, and coffee tables faced it in a rough crescent. It was all dark leather, maybe black or brown -- it was hard to tell in the gloom.\n\nThe woman guided him over to an armchair by the fire, Freddy grimacing as he left wet footprints on what must have been a very old and expensive carpet. She seemed indifferent, even though it would probably have cost him a month's wages to have the thing steam washed. The old, cracked leather creaked as he sat down, its padding so soft that he felt like the chair was trying to swallow him whole. The warmth of the fireplace immediately began to drive off the chill, and just being off his feet for a moment was a huge relief.\n\n\"This won't do,\" the woman tutted, looming over him as she stood beside his chair. \"Allow me to fetch you a change of clothes, and we can set yours to dry by the fire.\"\n\n\"A change of clothes?\" Freddy repeated, raising a skeptical eyebrow. \"But, how-\"\n\n\"I'd say that you wear a size forty-two,\" she said, those icy eyes playing over him. \"Trust me, tailoring is my profession. Please wait here. I'll return shortly.\"\n\n\"But, I just needed to use your...\"\n\nShe was already gone, gliding gracefully out of the room, the hem of her black dress trailing behind her. Now alone, Freddy glanced around, taking in his strange surroundings. Like the rest of the house, everything had an air of disuse about it, as though the sheets and coverings that would have protected the furniture had only recently been removed. A fine layer of dust coated every surface, and the cobwebs were ever-present. They also looked old -- the kind that obviously had no living spiders tending to them, waving in the air gently like tattered wedding veils. They were confined mostly to the corners of the high ceilings, so they were probably a bitch to reach without a ladder. Still, the fire roared on a bed of freshly cut logs, and hearing the rain hammering against the bay windows made him feel oddly cozy.\n\nHe wanted to remove his wet clothes, but without anywhere obvious to hang them, he preferred to just wait for his host to return. What was her deal, anyway? She had told him that she didn't have a working phone, but she'd probably surmised that there wasn't really anywhere else for him to go. The company meeting was a write-off, just like his car. All he could do now was wait for the storm to clear.\n\nHe noticed something sitting on a small table by the window. It was a phone. He glanced over the backrest of his seat to check if the woman had come back yet, then slowly rose to his feet, walking over to examine it. It was an old rotary phone, and when he lifted the receiver to his ear, he heard nothing but an electrical hum.\n\n\"The phone lines are down because of the storm, I'm afraid.\"\n\nFreddy replaced the receiver, turning to see the strange woman standing in the doorway with that same warm smile on her face, a bundle of fabric clasped against her chest.\n\n\"Sorry,\" Freddy stammered, making his way back to his seat. \"Thought I'd check.\"\n\n\"It happens every time we have bad weather,\" she explained, striding over to him. \"The lines are old and poorly-maintained, as you can no doubt imagine. All it takes is a little wind and rain to put them out of commission.\" A crack of lightning distracted her, the flash bleeding through the grimy windows. \"And what frightful weather!\" she continued with a chuckle. \"I'm surprised you made it here at all.\"\n\n\"Do you get any cell reception up here?\" Freddy asked. The woman didn't respond, and as the silence became awkward, he reached into his pocket for his phone. \"I guess not,\" he mumbled after checking the connection. \"No WiFi either...\"\n\n\"You should get out of those wet clothes,\" she said, changing the subject. She set the bundle of fabric down on the armrest of his chair, then approached the fireplace, where she produced some kind of iron rack. She unfolded it in front of the crackling flames, then turned to him expectantly. \"How do you take your tea? I'm afraid that I'm not quite as perceptive when it comes to guessing one's preferred flavors.\"\n\n\"Tea?\" he asked.\n\n\"I'll fetch some while you change,\" she continued, passing him on her way to the door.",
        "\"Hang on,\" he protested. \"How do you know these will even fit me?\"\n\n\"My late husband had a very similar build,\" she explained, pausing at the exit to glance back at him. \"Sugar, cream, or both?\"\n\n\"I don't really drink tea,\" he replied with a shrug. \"Honestly, I'll take anything warm right now. Thank you!\" he added as she vanished into the foyer again.\n\nMaking tea was as much an excuse to give him some privacy as it was to make him a drink, so he wasted no time stripping off his jacket. It was so wet that it was tangibly heavy, and he draped it over the rack by the fireplace, his socks squelching in his shoes with each step. Next came his jeans, then his shirt, then his underwear. He felt a little strange leaving his shorts in full view of a total stranger, but it wasn't like he could stuff them in his pocket. Now nude and cupping his junk in one hand, he began to inspect the clothes that she had brought him.\n\nImmediately, he was impressed by their quality. These weren't hand-me-downs, these were fitted suits of the kind you'd have to get tailored. He'd been expecting some sweatpants and a faded t-shirt, not a dinner jacket. Could this be all that she'd kept of her husband's wardrobe? As weird as he felt putting on a dead guy's dress shirt, it was better than catching pneumonia. As he got dressed, he remarked at how well everything fit him. Similar build was an understatement -- the guy must have been Freddy's long-lost twin. Even the sleeves were the perfect length to expose the white cuffs of the shirt beneath them. He had expected a musty smell, assuming that they'd been languishing in a cupboard for years, but they felt like they had just come back from the dry cleaners. There were no shoes, but he had a dry pair of socks, so that was better than nothing. When he was done, he was wearing a two-piece suit, like he was about to attend a banquet with the goddamned Queen of England. All he was missing was a bow tie.\n\nAs he dried his hair with a towel that she had provided, the woman returned, a silver tray with a teapot and a pair of cups balanced deftly in one hand.\n\n\"Ah, so it fits,\" she remarked as she walked over to set the tray on the nearby coffee table.\n\n\"You could say that,\" he replied, watching as she began to pour the tea. \"Sorry, I feel like we skipped the introductions. My name's Frederick, but everyone calls me Freddy.\"\n\n\"Freddy,\" she said, as though she was testing how the word felt on her tongue. \"You can call me Moira.\"\n\n\"Thanks again,\" he added sheepishly. \"I'd be kind of fu-I mean, I'd be in a real jam if I hadn't happened upon your place when I did.\"\n\n\"Has hospitality gone out of fashion?\" she chuckled, pouring a second cup. \"You're welcome to stay until the storm blows over, of course. This manor is rather isolated, and I'm afraid it's quite a drive to get back to civilization. You won't be going anywhere in this,\" she added with a nod to the bay windows. \"I have an abundance of spare bedrooms, so you're welcome to stay overnight if it doesn't clear up before morning. So many empty rooms,\" she said with a wistful sigh, setting the teapot down with a clink of fine china. \"Even with a full staff, this place would feel empty.\"\n\n\"Do you live here alone?\" Freddy asked, taking one of the steaming mugs as she passed it to him. \"This is a big place for one person to take care of.\"\n\n\"After my husband passed and my son took a job in another state, I became the sole resident,\" she replied as she took a conservative sip of her tea. \"We had staff members at one point -- maids, groundskeepers, and butlers -- but I use so little of the building that paying to maintain it seemed like a waste of money. That's the reason the place is in such a sorry state,\" she added apologetically. \"Paying so many salaries to keep rooms that never see any use in pristine condition was a poor use of the funds my husband left me.\"\n\n\"My condolences,\" Freddy added, bringing his cup to his lips. Whatever she had guessed, it had been right. The tea was delicious.\n\n\"I appreciate the sentiment, but it wasn't a recent occurrence,\" she replied.\n\nHe didn't want to say it out loud, but Moira was remarkably bold to let strangers into what was obviously an absurdly expensive house when she lived by herself. Wasn't she afraid of thieves? She didn't even keep the gate locked. Perhaps she was hiding a Derringer under the folds of that blouse.\n\n\"So, what brings you all the way out here on such a dreadful night?\" she asked, taking a seat in the armchair beside his. Again, he remarked on how tall she was. The chairs were identical, but while the backrest reached Freddy's head, it barely rose to Moira's shoulders. She must be six foot five, maybe more.\n\n\"I was on my way to a business meeting,\" he replied, taking another drink from his cup. \"I work for a consulting firm, nothing too interesting. To be perfectly honest, I have no idea where the hell I even am. My GPS must have glitched out because the damned thing sent me miles out into the sticks and told me it was a shortcut. You know how those things can be sometimes.\"\n\nShe gave him a very non-committal nod, sipping from her teacup again, holding her pinky finger out daintily as she drank.\n\n\"I guess I won't be making it to the meeting at all now,\" he grumbled.\n\n\"I'm sorry to hear that,\" Moira said. \"If it's any consolation, I'm glad to have a little company. I don't get many visitors out here, as you can probably imagine.\"\n\n\"If you don't mind my asking, why...are you here?\" Freddy began hesitantly. \"Why not move somewhere more populated? This place must be worth a lot, even if it's...\" He struggled to find a more polite word than run-down. \"Seen better days.\"\n\n\"Oh, I couldn't possibly,\" she replied. \"My family has lived here for generations, and our history goes back hundreds of years. My mother, my grandmother, and her mother before her all saw to it that this old place was still standing by the time they handed it off to the next caretaker. I would be remiss to abandon that duty.\"\n\n\"A relative of yours?\" Freddy asked, nodding to a larger-than-life painting that was hanging above the mantle. It was a depiction of a man with mutton chop sideburns, his outfit that of some Civil War-era general, a cutlass at his side.\n\n\"That would be my...great, great grandfather,\" she replied. \"There are paintings and busts of my family throughout the house. You can scarcely walk ten feet without seeing one of them.\"\n\n\"Sorry, this all feels kind of surreal,\" Freddy chuckled. \"You asked me if hospitality had gone out of style, but unless you're running an Airbnb out of this place, taking in strangers and offering them a room for the night is pretty unusual. If there's anything I can do to repay you...\"\n\n\"Nonsense,\" she replied with a dismissive wave of her hand. \"You showed up at my door soaking wet and asking for help. What kind of monster would I be to turn you away?\"\n\nThere was a brief flash of lightning, followed by another crack of thunder that made Freddy jump in his seat, the electric lights on the chandelier fizzling out. They were cast into darkness, only the glow of the fire illuminating the room.\n\n\"Darn,\" Moira muttered, glancing up at the ceiling. \"That was the electrical system. I'm afraid it might be down for a while. I have candles, of course.\"\n\n\"Don't worry about it, I have a flashlight app on my phone,\" he replied. \"Though, I think I left my charger in my car,\" he added with a roll of his eyes. \"MacGuyver over here, right?\"\n\n\"Yes, quite,\" she replied as she lifted her cup to her lips.\n\n\"So, what do you do for fun up here?\" Freddy asked as he tried to make conversation. \"I'm gonna guess there isn't a seventy-inch TV hidden away in another room.\"\n\n\"My hobbies, you mean?\" she replied. \"I'm partial to spending my nights in the library with a good book, and as I mentioned, tailoring is my passion. I was employed as a seamstress before my late husband's estate allowed me to retire early.\"\n\n\"You made clothes?\" Freddy asked. He wasn't quite sure what being a seamstress entailed.\n\n\"I tailored clothes, yes,\" she explained with a smile. \"I made the dress that I'm wearing right now, along with that suit.\"\n\n\"Wow, really?\" Freddy marveled as he glanced down at the jacket. \"I don't even really have a frame of reference for how much work that would take. I buy all of my clothes at the department store,\" he said with a dry chuckle. \"The only time I ever wore a suit like this was when I went to a friend's wedding, but I rented that one, so it doesn't really count. This one fits a lot better.\"\n\n\"I'm partial to embroidery and crochet,\" she continued, setting down her empty teacup. \"It helps prevent idleness from dulling my skills.\"\n\n\"My grandma used to knit hats for us,\" Freddy volunteered, not sure what else to say. \"That's about all I know of the subject.\"\n\n\"How old are you, if you don't mind my asking?\" she said as she turned her ice-blue eyes on him.\n\n\"I'm twenty-five,\" he replied.\n\n\"Only a year shy of my son,\" she added with a smile. \"You must be terribly frustrated, not being able to contact your family to let them know where you are. They'll worry themselves half to death.\"\n\n\"Oh, I don't have anyone waiting up for me,\" he admitted.\n\n\"Really?\" she asked, cocking an eyebrow at him in mild surprise. \"I'd expect a strapping young man of your age to have a wife or at least a lady friend anxiously awaiting his return. Times are changing indeed.\"\n\n\"I guess I have a poor work-life balance,\" he chuckled, shifting in his seat uncomfortably. He'd needed to go to the bathroom since he arrived, but Moira was so courteous and formal, and he couldn't think of a polite way to ask. \"May I...uh...use your washroom?\" he finally said.\n\n\"Of course,\" she replied, rising from her seat to tower over him again. \"You must have been walking along that old road for hours before you arrived. Please, follow me.\"\n\nThey left the warmth of the fire, Moira pausing on her way out of the room to pick up an old brass candlestick from a table beside the door, along with a box of matches. She struck one of them, then lit the wick, its flickering light casting dancing shadows down the hallway.\n\n\"No flashlights on hand?\" Freddy asked. He reached into his pocket, producing his phone, Moira watching curiously as the screen lit up his face. With a few taps, the LED on the camera lit up, and he pointed it down the corridor. Moira seemed impressed, but if she was in her forties, it was conceivable for her to have grown up without cell phones.\n\nShe led him back into the foyer, then they took a left, heading up the spiral staircase. It wound up through the building like a twisting spine, the aged wood creaking with each step, the carpet emitting puffs of dust as they climbed to the next floor. Freddy swept his flashlight beam across the landing, his heart skipping a beat when he saw a pair of piercing eyes staring back at him. It was just another old painting, this time featuring a woman with striking features. She had long, dark hair, and a pair of ice-blue eyes. She looked familiar...too familiar.\n\n\"Is that a painting of you?\" Freddy asked as Moira stepped onto the landing behind him. \"It looks old. Really old.\"\n\n\"My grandmother, Bethany,\" she replied. \"My mother used to tell me that I was her spitting image.\"\n\n\"Yeah, I can see the resemblance,\" he muttered.\n\nThey took a right, walking along another dark corridor, passing by rows of closed doors. The manor had looked large from the outside, but it seemed even bigger on the inside. Maybe it was a blend of the unfamiliar layout and the darkness playing tricks on him.\n\n\"You'll find the facilities through here,\" Moira said, gesturing to one of the doors. \"Do be conservative with your use of the hot water, won't you? Who knows when the power will come back on, and I fear I won't survive long without my tea.\"\n\n\"I wouldn't usually say no to a hot shower, but I think I've had my fill of water for one day,\" he replied as he turned the brass knob. He left her holding her candlestick as he stepped into the bathroom, finding that it was almost the size of his apartment. There was an iron bathtub sitting practically in the center of the tiled floor that looked large enough to bathe a horse, surrounded by curtains for privacy, and flanked by a pair of tall candelabras. Off to the left was an ornate washbasin made from white marble, and beside it was yet another door, this one leading into a smaller room with a toilet.\n\nFreddy set his phone down atop a nearby radiator, looking at his shadowy face in a mirror that was mounted on the wall as he relieved himself, the glass almost too dusty to see into. He reached out and ran a finger through it, leaving a clean trail. He would have thought that Moira would at least keep the bathroom clean, but there were probably several of them spread throughout the house. Surprised that the flush even worked, he washed his hands in the basin, then left the bathroom with the sound of creaking pipes echoing behind him. His host was waiting for him outside, her black gown blending into the darkness, making it look like her pale face was floating in the air.\n\n\"I trust you found everything that you needed?\" she asked, and he nodded. \"Wonderful. Tell me, how long has it been since you last ate? You must have been on the road for a good few hours to have ended up where you did, and walking so far must have given you quite an appetite.\"\n\n\"Oh,\" he replied, blinking back at her smiling face. \"That's very generous of you. I guess it has been a while since I had something to eat.\"\n\n\"Then it's settled,\" she replied, raising her candlestick as she led him back down the corridor. \"I do detest dining alone, you know.\"\n\n\"Well, I'm...happy to be of help,\" he said as he hurried to keep up with her long strides. She proceeded back down the spiral staircase, Freddy sparing one last glance at the uncanny portrait of her grandmother before following behind her. He had elected to switch off his phone, wanting to conserve the battery in case he needed it later. Something told him that Moira likely didn't have any spare USB-C chargers on hand...\n\n\"I was actually already preparing a meal before you arrived,\" she continued, lifting the hem of her gown as she descended so as not to trip. \"I like to dine late, you see. I find that it helps settle my stomach. There should be plenty enough for both of us.\"\n\n\"Hey, don't go hungry on my account,\" Freddy replied as they returned to the foyer. \"I'll take a packet of ramen or a cup noodle if that's what's on offer. I'm not gonna impose.\"\n\n\"While they say that beggars can't be choosers, properly feeding one's guests is a matter of hospitality,\" she replied. \"I'm old-fashioned that way.\"\n\nThis time, they went in the opposite direction to the living room, walking down a similar corridor.\n\n\"This was once the servant wing where the staff used to live,\" she explained, another flash of lightning from outside momentarily illuminating the hallway through the dirty windows that looked out onto the grounds. \"The kitchens are in this part of the manor, as you might expect. While I certainly miss having a team of people prepare my meals, I don't think it's an exaggeration to say that I've become rather proficient in their absence.\"\n\nThis area of the manor was indeed less lavishly furnished, but it was still very impressive. Even quarters intended for servants were still larger and more extravagant than anything that he was used to. She led him through more winding corridors until the scent of cooking food reached his nose, his stomach immediately starting to growl in response. He must have been hungrier than he'd thought. They entered an expansive kitchen with arches made from exposed brickwork that made it feel like a cellar, tables and marble counters occupying the cold stone floor. Freddy could feel its chill creeping through his socks. The cupboards were all the same dark wood as the banister on the stairs, and there was some kind of wooden rack hanging from iron chains above the table in the center of the room, from which were suspended all of the pots and cooking utensils.\n\nTo say that it had a rustic feel would be an understatement. Freddy couldn't see a microwave or a dishwasher anywhere, no modern appliances at all. There wasn't even a coffee machine. The room was lit by another fire, but this one was crackling beneath a cast-iron oven, the flames contained behind a glass door. That explained how she was able to cook during a power outage.\n\nMoira walked over to it and put on an oven mitt before popping one of the doors open, the sound of metal on metal filling the room as the hinge creaked. It reminded Freddy of a coal furnace more than a cooking appliance.\n\n\"Fetch me the cart, would you?\" she asked.\n\nFreddy glanced around the room for a moment, unsure what she was referring to, but quickly spotted a wheeled cart of the kind one might use to deliver room service in a hotel. He pushed it over to her, watching with wide eyes as she slid an entire roast turkey out of the oven. It was massive, like something from a Thanksgiving commercial, its crispy skin perfectly browned. It was resting on a bed of roasted vegetables, its mouth-watering juices sloshing around in the bottom of the pan. His host took a moment to place a pair of frilly, white coverings over its feet, then transferred it to the cart. Next came a pan filled with enough roast potatoes to feed a family of five, along with a gravy boat and some cutlery.\n\n\"You were going to eat all of this by yourself?\" Freddy asked skeptically, eyeing the feast that she had laid out on the cart. She was a large woman, to be sure, but not so large that she could eat an entire ten-pound turkey in one sitting.\n\n\"I would have put most of it in the freezer,\" she explained. \"I can't very well saw a frozen turkey into more appropriate portions, can I?\"\n\nThat didn't explain the potatoes, but Freddy was too hungry to worry about it too much.\n\n\"Follow me,\" she added, starting to push the cart across the kitchen. \"The dining room is this way.\"\n\n\"Why not eat here?\" Freddy asked, nodding to the table in the middle of the kitchen. It was the size of a dining table in its own right, surrounded by a dozen chairs.\n\n\"That table is for the servants,\" she chuckled, as though the very idea was absurd. \"I wouldn't have my dinner guest eat in the kitchen.\"\n\n\"Your kitchen is larger than my apartment,\" he added, but she kept on walking.\n\nThey made their way through more gloomy corridors, Moira setting down her candlestick on her cart, its wheels squeaking on the stone floors. When they started seeing busts and paintings again, Freddy knew that they had returned to the left wing of the manor, the hallway soon opening up into another space large enough to give him vertigo. This one was a truly immense dining hall, the high, sloping ceiling and the exposed beams above his head giving him the impression that he was stepping into some kind of cathedral. There was a long table running down its center that could have seated fifty people on each side, and there was a throne-like chair with a tall backrest at the far end. Rising behind it was yet another larger-than-life portrait, this one portraying a man riding a horse on some unknown battlefield. The painting alone had a similar surface area to the table in the kitchen they had just left.\n\nMoira walked all the way to the far end of the room, then left her cart beside the table, leaning over to light a couple of candelabras that were sitting on its varnished surface. In the light of the candles, she transferred the dishes to the table, then took her place in the throne-like chair at its head. Freddy stood there in awe for a few moments before she gestured to the place to her left, and he slid into the seat beside her.\n\n\"Huh,\" he mumbled, watching as she gripped one of the little frilly covers on the turkey's leg as she cut into it with a knife. \"I've seen those things in commercials, but I never knew what they were for until now.\"",
        "\"They stop one's fingers from getting greasy,\" she explained, carving off a generous piece of breast meat. It hit his plate with a palpable slap, followed by servings of roast vegetables and potatoes. She offered him the gravy boat, and he drizzled his meal with it, watching the brown liquid pool on the fine china.\n\n\"You sure you weren't expecting guests?\" he asked, watching as Moira filled her own plate.\n\n\"Your arrival took me completely by surprise,\" she replied.\n\nFreddy wanted to tell her that he hadn't asked if she had been expecting him personally, but decided against it, starting on his meal. It tasted just as good as it looked, the meat soft and succulent, the crispy skin crackling as it peeled away. The potatoes had the perfect consistency -- fluffy on the inside but crunchy on the outside.\n\n\"You weren't kidding,\" he chuckled, his prior uncertainty quickly forgotten. \"You're not just proficient -- you're a master chef.\"\n\n\"You flatter me, Freddy,\" she cooed as she popped a forkful of turkey into her mouth. He noted that she finished chewing before continuing, never forgetting her impeccable manners. \"I've had to learn to feed myself in the absence of any kitchen staff.\"\n\n\"This is probably the best meal I've had since that wedding I mentioned,\" he added, Moira smiling in quiet amusement as he cut into another potato to release a wisp of steam. He glanced around the room, once again feeling a tug of vertigo as he marveled at its sheer size. The pair of candelabras cast dancing shadows on the walls, their light not even reaching halfway down the length of the table, leaving Freddy and Moira sitting in an isolated island of illumination. Like the rest of the manor, the rafters above were joined together by blankets of old cobwebs, and there was a fine layer of dust on every surface. The near end of the table was clean, at least. Still, it did little to detract from the sight, Freddy craning his neck as he ate another gravy-soaked potato.\n\n\"I can see why you don't like to eat alone,\" he added as he glanced down the length of the table. It was so long that they could probably have set up some pins at the far end and used it as a bowling lane. \"There's being alone, then there's being alone...in here.\"\n\n\"It does make one feel rather small,\" she replied, following his gaze. \"When several generations of my family still lived under this roof, and there was an army of servants tending to an equal number of rowdy dinner guests, I can assure you that it felt far more homely. So many parties have been thrown in this hall, so many feasts enjoyed, so many birthdays and holidays celebrated. It shames me to see it so empty and neglected. Then again, that describes everything in this house,\" she added with a sigh.\n\n\"It's not too hard to imagine all these candles lit and all these seats filled,\" Freddy said, and that seemed to cheer her up a little.\n\n\"Oh!\" she exclaimed, putting a hand to her mouth as her expression suddenly changed to one of surprise. \"Where are my manners? I haven't offered you anything to drink!\"\n\n\"Don't worry about it,\" Freddy replied, amused by her sudden outburst. \"You've laid out a feast for me, I'm not gonna complain about the lack of wine. Really, you don't need to trouble yourself,\" he protested as she rose to her feet.\n\n\"I insist,\" she said with a smile that he couldn't help but return. \"I'll only be a moment.\"\n\nShe glided out of the dining hall, Freddy turning in his seat to watch her vanish, her dark gown seeming to melt into the darkness. Truth be told, he'd done his fair share of wine tours, and the prospect of sampling a bottle from what must be a well-stocked cellar was an attractive one. He resumed his meal, and before very long, Moira had returned. She was carrying a bottle of red wine, along with a pair of crystal glasses, setting them down on the table beside him with a clink.\n\n\"I think a mature Bordeaux should pair nicely with white meat,\" she said, practically humming to herself as she filled one of the glasses with crimson liquid. Her enthusiasm was infectious. Judging by the dust that caked the bottle, it had probably been sitting in the wine cellar for a long time, languishing while Moira awaited an opportunity to break it out. She really was treating his unannounced visit as an occasion.\n\nShe passed him one of the glasses, and he took a conservative sip, nodding in approval. It was great -- exquisite, even. As she had said, its savory flavor perfectly complemented their meal. As she sat back down, he reached for the bottle, wiping some of the dust from its label. As his eyes played over the text, he narrowly avoided a spit-take, Moira glancing at him curiously.\n\n\"Why, whatever's the matter, Freddy?\"\n\n\"This...this is a Ch\u00e2teau P\u00e9trus!\" he sputtered. \"It's dated nineteen-eighteen! Moira, this bottle is worth more than my car!\"\n\n\"You know your wines,\" she replied with an impressed smile, not even addressing the situation.\n\n\"Moira, I can't drink this!\" he continued as he sat there with his mouth agape.\n\n\"I would be quite offended if you didn't,\" she said, though her expression never lost its warmth. \"It's rare that I have an excuse to raid the cellar, and that bottle would probably have spent another hundred years collecting dust if you hadn't arrived at my door. My late husband used to scold me for bending the spines of his books,\" she added with a chuckle. \"I would tell him that books wish to be read, and I also believe that wines wish to be drunk. Besides, we can't very well put it back on the rack now, can we?\" She took a sip from her own glass, watching him expectantly until he followed suit. \"There's a good boy,\" she purred.\n\nFreddy took a moment to consider whether she was old enough to call him that without it being weird, but the allure of the absurdly expensive wine distracted him from his doubts. Somehow, knowing how much it was worth made it taste even better, despite the nagging doubt in the back of his mind warning him that he was drinking liquid gold.\n\n\"I'm so glad you're enjoying the meal,\" Moira said, watching as he sliced off another piece of turkey. \"It's nice to be able to cook for someone else. Living here alone can be so dreary.\"\n\n\"Yeah, my compliments to the chef,\" he replied. \"You know, you could probably turn this place into a mean bed and breakfast,\" he added as he gestured to the cavernous dining hall. \"You have tons of empty rooms, and your cooking is restaurant-grade. Maybe it'd give you something to occupy your time with and get you a little more company. Who knows, perhaps the income would be enough to do some renovations. You could return the manor to its glory days.\"\n\n\"That's a nice idea,\" she replied, spearing another potato on her fork. \"I'm not sure I'd want so many strangers wandering my halls at all hours, though. I'd prefer some more...intimate company, someone I can really get to know.\"\n\n\"What, like remarrying?\" Freddy asked.\n\n\"Something like that,\" she replied with a smile.\n\n<p align=\"center\">***</p>\n\nThey chatted for a while as they ate, Moira asking him questions about his work and his life, seeming remarkably interested in his mundane replies. Nothing that he did was especially unusual or noteworthy, but he didn't get the impression that she was just being polite or that she was humoring him.\n\nEventually, they finished their feast, Freddy setting down his cutlery as he patted his full stomach. She'd fed him so well that he hadn't even been able to clean his plate. Moira had eaten conspicuously less than he had, but she had drunk an equal amount of wine, the bottle now sitting all but empty on the table beside him.\n\n\"It looks like the storm is showing no signs of letting up,\" she remarked, another crack of thunder shaking the rafters above them. \"The hour grows late,\" she added with a sigh, turning her blue eyes back to him. \"You must be getting awfully tired, Freddy. Why don't I show you to your room?\"\n\n\"That would be great,\" he replied, suppressing a yawn. \"Between walking in the rain for hours and the meal you just fed me, I'm about ready to keel over. Let me help you with the dishes first, though.\"\n\n\"No need,\" she said with a dismissive wave of her hand. \"They'll be here in the morning.\"\n\nShe rose from her throne at the head of the table and picked up her candlestick, Freddy following behind her as she led him out of the dining hall. They arrived at yet another spiral staircase, this one leading up to the higher levels from the servant quarters, the old steps creaking as they climbed. It was still hard to get a sense of direction in the manor, but the left/right divide between the servant quarters and the family's living area gave him some idea of where he was. They headed right, walking across a long landing, passing by rows of doors. One of them was open a crack, giving Freddy a scant view inside. It looked like an old private study. There was a desk in the middle of the room, the lumps in the sheet that covered it suggesting that there was stationary and maybe a lamp beneath it, the wall behind it covered in shelves that were stacked end to end with dusty old books.\n\nThey returned to the left wing of the house, Moira eventually stopping in front of a long, straight staircase that led to the next floor. It was steep and narrow, clearly very old, and there was another closed door at the end of it.\n\n\"This guest bedroom is probably in the best shape of all of them,\" she explained, turning to glance back at him. Something about the way that Freddy had to lift his chin to look up at her pale face made butterflies swarm in his stomach. Maybe it was the wine -- he'd drunk at least half of the bottle, not wanting to waste the opportunity. He was feeling a little fuzzier than usual as a result. \"I keep it maintained in case a family member calls to tell me they're visiting.\"\n\n\"Makes sense,\" Freddy replied.\n\n\"I'm afraid it may still be a little dusty,\" she continued apologetically, mounting the first step. \"I don't get many visitors.\"\n\nFreddy waited a moment, then followed after her. The way that her gown accentuated her hourglass figure drew his eye, her wide hips swaying with each step, that long skirt trailing behind her. She was dressed so modestly, almost matronly, yet the master seamstress had tailored an outfit that clung to her like a second skin. More than that, it seemed to guide his gaze in a way that felt very deliberate, and there was nowhere else to look on this narrow staircase. There was that fluttery feeling again -- probably the wine...\n\nShe reached the top and opened the door, ushering him in, her candle illuminating the guest bedroom. As he had anticipated, it was suitably lavish, with enough floor space that he could probably have fit his entire apartment inside it almost twice over. A massive king-sized canopy bed sat in the middle of the carpet, the billowing drapery that cascaded down to the floor making it resemble a giant tent. There was a writing desk beneath a large window that looked out over the grounds, the glass just as grimy as he had come to expect, and there was a table equipped with a tilting mirror that would presumably be used by female guests to apply makeup. As well as cupboards and dressers for storing belongings, there was a chest at the foot of the bed, certainly an archaic touch.\n\n\"You should be able to find everything that you need in here,\" Moira said, using her candle to light a candelabra that was mounted on the wall. She gestured to a door at the other end of the room. \"There's an en-suite bathroom, so there should be no need for you to go wandering the halls in the dark.\"\n\nThe implication that he should stay in the room once she left wasn't lost on him, and it was perfectly understandable. Having no belongings to unpack, there wasn't much for him to do other than take his phone from his pocket and set it on a convenient bedside table. He gave the bed a once-over, finding that the sheets and pillows looked clean. More than that -- they looked fresh, as though they had been laid out specially for him. Unless she changed the bedding every day, the odds of her happening to make the bed in time for his arrival were pretty slim.\n\n\"Your clothes will be dry by the morning,\" Moira added. \"I'll come and wake you at sunrise.\"\n\n\"I know I keep thanking you, but I'm going to repeat myself,\" Freddy said as he turned to face her. \"I really appreciate you taking me in out of the rain, offering me food and a place to sleep. If I hadn't seen the lights through the fog, I could still be out there in the storm trying to find a gas station.\"\n\nThere was another crack of thunder as if to punctuate his statement, sheets of rain hammering on the window with renewed ferocity.\n\n\"I consider it my duty,\" she replied, tipping her head in a subtle bow. \"After all that wine, you must be tired,\" she added with a gesture to the bed. \"Please, get some rest. I'm sorry that it's a little drafty -- it's unavoidable in such an old house -- but closing the drapes should help keep the cold out.\"\n\n\"Thanks, I'll do that,\" he replied as he watched her walk over to the door.\n\n\"Goodnight, Freddy,\" she cooed as she closed it behind her. He waited for the sound of a key turning, but it seemed that she trusted him enough not to lock him in.\n\nFreddy sat down on the edge of the mattress, finding it springy and plush, taking a moment to reflect on the strange events of the day. The crash, his miserable walk through the forest, finding the manor through the choking fog. Moira had invited him in, she had clothed him, fed him -- seemingly without any fear or suspicion. Under different circumstances, he might have wondered if she had an ulterior motive, but maybe she really did embody some outdated sense of civic duty and hospitality.\n\nStill, some of what she'd said didn't add up. Why did she have a set of clothes on hand that fit him so well that they felt tailored for him? Why had she been preparing a meal so large when she had barely eaten any of it herself? The story about her living in isolation in this remote manor seemed fishy, too. Moira was like a woman frozen in time. He hadn't spotted a single television or computer in the house, there was no WiFi, and he hadn't seen her whip out a cellphone. There were no appliances in the kitchen, no blenders or toasters, and even the rooms that he would expect to see regular use looked all but abandoned. Moira was clearly hiding something from him, but that said, she didn't owe any explanations to a stranger who had turned up on her doorstep uninvited.\n\nHe began to take off the clothes that she had given him, folding them carefully before setting them atop a nearby dresser. The draft was more apparent when he had stripped down to his shorts, but it was a damn sight better than being outside. The storm was still hammering against the window like it was trying to find a way to get at him. He walked over and tried to see through the glass, but found that it was too dirty to pick out much more than vague shadows.\n\nHis next stop was the en-suite bathroom, Freddy finding that it was furnished similarly to the previous one he'd visited. There was an ornate toilet and a marble washbasin, along with a cast-iron bathtub that looked heavy enough that he wondered how they'd even got it up here. After ridding himself of all the wine and giving his face a brief wash in the basin, he stepped back outside. In the flickering light of the candles, he noticed a golden glint, drawing his attention to a dresser beside the door. It was a large, old key.\n\nAfter a moment of hesitation, he made his way over to it, lifting it off the varnished wood. Would it be rude to lock the door? Moira had said that she'd return in the morning, and he didn't want to keep her out, but something about the strangeness of the whole situation made him feel distinctly uneasy. If nothing else, he would sleep more soundly knowing that his host couldn't get in without announcing herself first. She had shown him nothing but kindness, but he didn't really know anything about her yet. Better safe than sorry.\n\nHe turned the key in the lock with a mechanical clunk, then headed for bed, climbing up onto the mattress. The four bedposts towered over him as he wriggled beneath the sheets, and he leaned over to close the drapes, the heavy fabric keeping out the chill. Even the bed was about as large as the bathroom in his apartment. As his head sank into the pile of soft pillows, he remarked that the sheets even smelled fresh. There wasn't a hint of mustiness about them. Could Moira have slipped away to change the linens when she had gone in search of clothes or when she had left to fetch the wine?\n\nAt this point, he was too tired and too tipsy to care. Freddy let himself settle into the comfortable sheets, fatigue quickly carrying him off to sleep.\n\n<p align=\"center\">CHAPTER 2: BLACK WIDOW</p>\n\nFreddy was awoken by a noise like fingernails scraping on glass.\n\nHe sat up in the bed, finding himself momentarily confused by his unfamiliar surroundings, his brain soon catching up with his body. The storm was raging outside, he could practically feel the strength of the wind as it crashed against the side of the manor like waves against a sea wall. It whistled through every crack and gap that it could find, but the drapes kept his bed isolated from the cold. Another rumble of thunder startled him, a flash of light illuminating the dark room. The candles must have gone out by now.\n\nWary of leaving his warm pocket of air, he slid out from beneath the covers, braving the chill to pull open one of the curtains. It was dark, but not so much that he was blind. Enough light from the full moon made it through the clouds and the dirty glass to let him see the vague outlines of the furniture. He spared a wary glance at the window, but couldn't see much through it other than shadows. As his racing heart slowed, he surmised that it was probably a tree branch scraping against the other side of the glass, or perhaps some airborne debris carried by the storm.\n\nRealizing that his bladder was once again full, he slipped off the mattress, hopping along on the frigid carpet barefooted like he was walking on ice. He fumbled for his phone, finding it where he had left it on the bedside table, then turned on the flashlight function. As the bright beam swept across the room, he considered how much more welcoming it had looked under the warmer light of the candles. Far from cozy, it seemed downright hostile now, the pale light and inky shadows playing tricks on his eyes.\n\nHe made his way across the room, the distance between the bed and the bathroom seeming excessive, opening the heavy door with an audible creak. After setting his phone on the edge of the washbasin, he relieved himself, glancing at the mirror above the toilet as he whistled to himself idly. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nA shadow suddenly passed through the room behind him, noticeable enough that it caught his attention, Freddy narrowing his eyes.\n\nThat wasn't a branch swaying in the wind -- that was a large object with mass enough to blot out the moonlight. He slowly picked up his phone, then crept out into the dark bedroom, sweeping the narrow beam across the old furniture. It was only the camera LED, so it was barely bright enough to cut through the gloom, motes of dust dancing in its cold light. Freddy approached the windows, their sudden rattling startling him as he neared, but it was just the wind. They were old and loose, barely up to the challenge of keeping out the gale.\n\nHe reached across the desk that was sat beneath them, giving the knob a twist to ensure that they were as securely closed as possible. Rainwater was seeping in through the gap between the frames and the sill -- not enough to be an issue, but he should probably inform Moira the next morning. Then again, it was probably a proverbial drop in the bucket compared to the work the manor needed.",
        "Satisfied, he returned to his bed, sliding the drapes shut behind him. The lingering warmth of the sheets was a welcome reprieve from the cold, drafty room, and he found himself quickly drifting off to sleep again.\n\nThere was an explosive crash, Freddy almost jumping out of his skin as he jolted back to alertness. Something was tearing at the drapes, his hazy mind conjuring images of monsters trying to find their way in, but he quickly realized that it was the wind. As he poked his head through the curtains, he saw that the windows had blown wide open, rain and airborne leaves pouring inside.\n\nCursing to himself, he hurried out of bed and over to the windows, fighting against the force of the gale to get them closed. The sound of rushing wind filled his ears, the storm whipping at his hair, spraying him with icy rain. By the time he managed to secure them again, both the desk and his bare chest were splattered with droplets of cold water, Freddy scowling at his own reflection for a moment. There was a stray leaf in his hair, and he grumbled to himself as he reached up to brush it away. He retrieved his phone again, then made for the bathroom, looking for a way to dry himself off. There was a convenient hand towel on a rack by the washbasin that did the trick, Freddy pausing to examine it for a moment. It was embroidered with the letters M and L in shining gold thread. Could those be Moira's initials, perhaps? He had never asked her surname.\n\nAs he reemerged, there was a strange creaking sound that seemed to emanate from within the bedroom itself, Freddy stopping in his tracks. Raising the phone above his head like a flashlight, he swept it around, but it didn't help him much. The room was full of furniture that created unfamiliar shapes in the darkness, such as an armchair off in one corner, and a tall lamp covered with a sheet that could easily have been mistaken for a lurking figure. There was movement, but it came from the thick cobwebs that clung to the edges of the ceiling, the wind that made it inside making them wave and ripple eerily.\n\n\"Come on, Freddy,\" he muttered to himself under his breath. \"What, do you need a night light?\"\n\nThe manor was incredibly old, it was in poor condition, and there was a goddamned category one raging outside. It would be strange if the place wasn't creaking and settling.\n\nThe moment that he stepped onto the carpet, his phone died, plunging him into darkness. He glanced down at the display, seeing it pulse red a few times, flashing an empty battery icon before petering out. He'd finally drained it.\n\n\"Shit,\" he hissed.\n\nHolding one arm out in front of him like a blind man, he began to stumble his way towards the bed, its outline barely recognizable as his eyes struggled to adjust to an almost pitch blackness. He saw movement in his peripheral vision, shifting shadows in the darkness, but he tried to keep his focus on the drapes.\n\nAs he reached the center of the room, he saw a shape out of the corner of his eye, this one recognizable enough to give him pause. Slowly, he turned his head to look back over his shoulder, a cold stab of fear piercing his chest. There was something there, partially hidden behind an old armchair in the corner of the bedroom, perfectly still. He could see a defined head, what might be long hair or a ghostly shawl draped over it, so black that it was almost indistinguishable from a shadow.\n\nNo, he was being foolish. It was another lamp with a sheet covering it, one that he simply hadn't noticed before. It was too tall to be a person anyway. So, why did he feel a chill creeping up his spine? Why did it feel like someone or something was watching him, unseen? This was something beyond superstition, more instinctual, as though some primal facet of his mind was warning him that there was a sabertooth tiger lurking just out of view at the edge of his campfire. He wasn't a child who feared the dark, and he knew perfectly well how the human mind sought to make sense of shapes and faces, pareidolia creating patterns where there were none. Even so, he found the feeling impossible to shake.\n\nIt was a relief when his fingers finally touched fabric, and he felt his way around to the side of the mattress, slipping back inside the tent-like canopy. Enough fumbling in the dark -- he needed to get some sleep. Freddy wrapped the sheets around himself tightly, creating a warm cocoon to ward off the cold that had crept in through the open windows, willing himself to relax.\n\nAnother flash of lightning illuminated the room, and for that split second, he saw a shadow cast on the drapes at the foot of his bed. He sat up, feeling his heart start to race, but he was practically blind without a light source. He waited for another flash with bated breath, and when it came, the shadow appeared once more to a chorus of rumbling thunder. It was a humanoid figure with something draped over its head and shoulders, the same one that he had glimpsed hiding in the corner, the storm giving him a brief snapshot of it moving closer.\n\nHis fear morphed into a kind of reckless anger as fight won out over flight, and he lunged forward, tearing open the drapes at the bottom of the bed. Standing on the carpet only a few feet away was a tall figure, Freddy just able to make out her features in the darkness. It was Moira. What he had assumed to be a sheet over the figure's head was just her long hair, and her signature black dress seemed to blend into the shadows around her. He couldn't see her pale face -- it was obscured by her long hair, as though she was staring intently at the floor.\n\nHe had locked the door, so how the hell had she gotten inside?\n\n\"Why did you shut me out, Freddy?\" she asked. Her usually breathy voice had grown deeper, taking on a more sinister tone. \"Didn't you appreciate my hospitality?\"\n\nFreddy opened his mouth to reply, to demand what she was doing here, but the words caught in his throat as she began to grow taller. Already an imposing woman, she started to stretch, her head inching closer to the high ceiling. No, she wasn't growing, she was rising. The hem of her black gown was lifting off the floor, as though she was levitating into the air.\n\nA flash of lightning illuminated something black and glossy, picking out a series of sharp points that protruded from beneath her dress, pressing into the carpet below. As they began to spread wider, lifting her gown as they went, he realized that they were legs. The giant, segmented limbs of an insect stepped into view one by one, their rigid carapace like jet-black plastic. He could hear the thud of them impacting the floor, creaking like old wood as they seemed to flex and stretch, as though hiding them beneath her dress had left them sore. When Moira's head finally brushed the ceiling, she must have risen eight feet off the carpet, and the span of her legs was just as wide.\n\nFreddy was frozen in terror. He couldn't move, he couldn't run, he couldn't even breathe. All he could do was stare up at the humanoid figure that was held aloft by the monstrous legs, like a hand puppet dangling from someone's wrist. Her long, black hair still cascaded over her face, her arms hanging limply at her sides. She looked like she was being lifted by a giant spider.\n\n\"I was kind enough to feed you,\" she whispered, the eerie rattle in the back of her throat making him shiver. \"Won't you return the favor?\"\n\nShe sprang into motion, her heavy legs thudding on the carpet as she raced towards the bed, closing the scant few feet that separated them in an instant. Freddy lurched backwards as she ripped the drapes from the bedframe with a swipe of her hand. The thick, wooden bedposts splintered like toothpicks as she squeezed her now bulbous body between them, the flare of her narrow waist expanding into something far wider than her hips had ever been. Her upper body seemed to float through the air as it loomed over him, Moira reaching up to brush her long hair aside, exposing her pale face. It was no different than he remembered it, her dark lips curled into a warm smile that contrasted starkly with her monstrous form, those icy eyes reflecting the scant moonlight like a pair of silver coins as they peered down at him.\n\n\"Keep still for a moment, love,\" she cooed in the same enchanting voice that she had used when she had invited him into her home. Had it been a honey trap all along? Was her hospitality that of a spider inviting a fly into its web -- fattening it before the feast?\n\nAs she stepped forward, her many insect limbs surrounding the bed on all sides like the bars of a cage, Freddy got a brief glimpse of what lay beneath her dress. It was the fat, round abdomen of a spider, just as inky black as her legs and her beautiful gown. It must have been thicker than his torso, like a giant beanbag chair, soft in a way that made him recoil. The billowing gown was draped over it like a tent, its delicate ruffles falling over the first joint in her splayed limbs.\n\nThere was a sudden flurry of movement as she brought some of those legs to bear, Freddy turning his face away, unable to do anything to escape the figure that was hovering directly over him. They moved with the speed and finesse of a tailor's needle, so fast that Freddy could only catch snippets of what she was doing. There was an orifice on the tail end of her bulbous abdomen, and long, silvery strands were being extruded from it. They glistened in the moonlight, Moira using her many legs to manipulate the silken fibers, coiling and spooling them like string. Before he even understood what was happening, Freddy realized that he was stuck, his assailant cocooning him like a captured bug. She glued him to the mattress, wrapping her silk around the bedposts to secure his wrists, then doing the same with his ankles. The layers of sticky, taut fibers grew thicker and thicker until he could scarcely move, his limbs bound tightly.\n\nHe struggled and fought, but it was to no avail. Whatever this substance was, it was as strong as steel, and it bonded to his skin like super glue. As he peered up at Moira, his eyes wide with terror, he felt a droplet of cold water fall to his cheek. Her hair was damp, her pale skin was wet, and her dress was soaked through. Unable to enter through the locked door, she must have climbed up the side of the manor and burst in through the window, leaving him to assume that it had been the storm. The shadows, the sounds of nails on the glass -- it had all been her doing.\n\n\"I'm sorry to be such a bother, Freddy,\" she cooed as she backed up a little to bring her face level with his. Her long, wet hair dragged across the pillows beside his head, the straight strands tickling his face as she hovered so close that he could feel the warmth of her breath. Even in these circumstances, her sculpted features still leapt out at him, her porcelain skin giving her an almost ethereal beauty. \"So few people come through these woods, and I get so lonely up here, so starved of company. I put those caltrops on the road, knowing that anyone who drove by would have no choice but to seek refuge here. Luring the unwary into my den is, shall we say, my nature...\"\n\n\"You gave me that flat?\" Freddy hissed, fear giving way to anger once again. \"This whole thing was your fault?\"\n\n\"Only a little white lie,\" she purred, reaching down a hand to brush it against his cheek. Her fingers were cold, still wet from the rain, Freddy struggling to pull away from her. \"I still wined and dined you, didn't I? I still invited you in and warmed you by my fire. Didn't you enjoy my company?\"\n\n\"Was anything you told me true?\" he asked. \"Just who the hell are you?\"\n\n\"Some of it was true,\" she protested, putting on an exaggerated pout. \"I live alone in this old manor, and I survive my late husband. What does it matter if he died ten years ago or a hundred?\"\n\n\"The painting on the landing...that wasn't your grandmother,\" Freddy added. \"You haven't aged a day since that was painted, have you?\"\n\n\"How sweet of you to flatter this old spider,\" she chuckled. \"You're such a darling boy, Freddy. I hibernate between meals, biding my time until a new opportunity presents itself. I am nothing if not patient. It's been decades since I had to say goodbye to my last visitor, and you're the first eligible young bachelor who's fallen into my web since.\"\n\n\"What the hell do you want from me?\" he spat, his fire making her smirk. \"Are you...are you going to eat me or something?\"\n\n\"Goodness, no,\" she said as she laughed behind her hand. \"I'm afraid that I want to sate a different kind of hunger. Loneliness can eat at one in much the same way as starvation, you know. I languish in these empty halls, longing for company, pining for the touch of another. When I discovered that I had finally succeeded in ensnaring a young man, one with no wife waiting for him at home, I almost couldn't believe my good fortune.\"\n\n\"What would you have done if I'd been a woman or a family with kids?\" Freddy asked.\n\n\"I would have shown them the same courtesies, then sent them on their way,\" she replied with a shrug. \"Won't you consider it, Freddy?\" she purred as she ran her wet fingers across his bare chest. \"It could all be yours. A feast every night, your choice of wine from the cellar, a place to call home that isn't the size of a shoebox. Me,\" she added, her tone turning sultry.\n\n\"I don't even know what you are,\" he replied, straining against his bonds impotently.\n\n\"Then, let me show you,\" she said as she raised a hand to the ruffles of her bodice. She began to undo the buttons one by one, Freddy slowing his struggling as he watched, curiosity getting the better of him. With each one that she unfastened, the mass within the velvety garment weighed more heavily on it, starting to spread it open. Soon, he glimpsed pale skin, the still-damp fabric parting as her breasts slipped free of their support. They bounced gently with the motion, hanging there above his head, swaying subtly as she unbuttoned the garment down to the point where her lapels met. Her lily-white skin was misted with droplets of rainwater, giving it a sheen that reflected the moonlight, her nipples pink and prominent. Freddy couldn't take his eyes off them -- they were so generous, each one of them large enough to comfortably fill his cupped hands.\n\nMoira was so prim and proper, her sudden nudity contrasting with her modest gown in ways that even the most revealing bikini or enticing lingerie couldn't have matched. His heart raced as he watched that flawless, silky skin brush against the ruffled fabric of her clothes, standing out starkly against the jet-black of her dress.\n\n\"It would be a lie if I told you that I was all woman,\" she said, Freddy watching her delicate flesh spill around her slender fingers as she groped herself. It was as soft as the melting wax of her candles, her digits sinking tantalizing deep into her yielding fat. \"But, I think that I'm woman enough that you won't be disappointed.\"\n\nShe brought herself closer, the fine, wet strands of her hair piling on the pillows to either side of his head. He watched her hanging breasts come down towards him, her supple flesh spilling across his chest as she let their weight rest on him, her skin cool and slick due to the rainwater that had permeated her dress. They poured over his sides like warm cake batter, not quite generous enough to reach the mattress. She brought her lips to his, her dark lipstick making them glossy in the moonlight, parting them ever so slightly in the expectation of a kiss. He could smell the rain on her, as well as an enticing, floral perfume that made his head spin.\n\nStill more angry than aroused, he turned his head away from her -- the only act of defiance that remained to him in his bound state. Rather than be insulted or offended, those expectant lips curled into a smile.\n\n\"Are you still angry with me, Freddy?\" she whispered. \"I'm not such a bad apple. Perhaps I can find a way to change your mind...\"\n\nShe began to slide lower, her smooth, wet skin gliding against his own as she let her pillowy breasts drag down his torso. Her long, dark hair did the same, tickling him as it was pulled over his shoulders and across his chest. He lurched as she planted a kiss on his belly, those soft lips crawling towards his navel, the sensation making him strain against the sticky silk. She trailed her nails down towards his shorts, dragging them across his ribs with a feather-light touch, hooking them around his waistband. As her mop of silky hair cleared his abdomen, he saw that she had left prominent lipstick marks on his skin, the sight making his heart quicken.\n\nMoira eyed the growing bulge in his shorts, then leaned in to give it a kiss, Freddy feeling the warmth of her breath through the thin layer of fabric that separated them.\n\n\"You can still ask me to stop, you know,\" she purred as she hovered there. When she got no reply, she smirked, starting to tug his underwear down. His member flopped free, quickly swelling to full mast as Moira watched, wetting her lips in anticipation. He lurched as he felt them brush the sensitive underside of his glans, her exploratory kiss making his member bounce in the air, the taut silk keeping him securely in place. He couldn't move any of his limbs by even an inch. All he could do was lower his head to look down at Moira, watching as she wrapped those pale, slender fingers around his shaft. She began to stroke slowly, her grip just tight enough that he could feel it, the rainwater making her touch slippery. Her skin was so impossibly soft that it felt like she was wearing velvet gloves.\n\n\"How I have missed the warmth of a man,\" she purred, smiling as he throbbed within the confines of her fist. Her damp hair draped over his thighs as she brought her lips to his tip, sliding it into her mouth. Freddy gritted his teeth as his tender glans was encompassed by hot, slippery flesh, the flat of her tongue cushioning him as she let him pulse against it. She didn't move, she didn't lick or suck, she just held him there as she let him wallow in the sensation. It quickly became too much for him to stand, and he tried to buck in frustration, Moira pulling away.\n\n\"You're more eager than you let on,\" she chuckled, running her thumb over the dark ring of lipstick that she left beneath the head of his cock. \"I want you to want me, Freddy,\" she added as her silver eyes flashed in the dark. \"You've never had a woman like me before, I promise you that.\"\n\n\"Aren't I just the first guy who came along?\" he shot back, fighting through the lingering pleasure for a moment.\n\n\"Oh, Freddy,\" she replied with a sordid chuckle. \"I can afford to be very patient. If I didn't find you delicious, you wouldn't still be here. You're young, vigorous, and you mind your manners. I like that you know your wines,\" she added, pausing to give his shaft another gentle kiss that made his heart race. \"The fact that you're even asking these things when my lips are wrapped around your manhood tells me that I made a choice selection. I can be romantic if you want me to be,\" she cooed, circling his tip with one of her index fingers. \"Is that how you'd have me, Freddy? Spreadeagled on a bed of roses, a bottle of ros\u00e9 at my side?\"\n\nShe took him into her mouth again, and this time, he felt her slippery tongue circle his glans slowly. It crept beneath his foreskin, the warm, wet muscle painting his sensitive flesh as she lapped. She was so gentle and careful, contrasting with her monstrous appearance, each tender lick making Freddy feel like he was melting into the bed. She paused for a moment, letting his pulsing member press against her cheek, his skin shining with her saliva.\n\n\"Do you think you could learn to love me?\" she asked, batting her long lashes at him. \"With the right...incentives, of course.\"",
        "She suckled dotingly on his head, swirling her tongue around it, the incomparably soft inner lining of her mouth bearing down on him as she drew him deeper. Her sucking grew more ardent, her hand starting to stroke his shaft now, her tongue dancing across his exposed glans with surprising finesse. Something about being bound like this made him feel a kind of vulnerability that only heightened his pleasure, each fruitless tug of the silk webbing that secured his wrists to the bedposts reminding him that he was here at Moira's pleasure. She could do whatever she wanted with him -- to him -- and the prospect was gradually becoming more attractive.\n\nMoira paused her gentle nursing for a moment, letting his member slide past her lips with a wet pop, leaving him throbbing in the cold air. He could see movement behind her, those arachnid legs moving frantically again. They passed something to her human hands, draping her fingers in silvery webbing, Moira lifting them so that he could see better.\n\n\"Did you ever play Cat's Cradle as a child?\" she asked, spreading her digits to show him the glistening threads that joined them. With movements so quick and fluid that he could scarcely follow them, she formed the webs into a shape like a pair of Xs, then again into one that resembled a ladder. \"The goal is to pass the shape between the players, changing it a little each time, until it breaks or becomes too complex. Seeing as you're...indisposed,\" she added as she glanced up at him. \"I think we'll have to give it a new spin.\"\n\nShe brought her hands to his erection, draping the delicate strands over it, then started to wind them around his shaft. She was so dexterous, so skilled, soon cocooning his swollen length in what looked like a web of gossamer fabric. There were strands attached to each of her fingertips, he realized, looped around them like tiny nooses. It looked like she was about to put on a puppet show where his member was the opening act. Moira kept her eyes on his, watching him carefully as she gave one of the strands a slight tug, Freddy grunting as he felt something tighten around his cock.\n\nOnly now did he realize that each of those fine threads was connected to a point in the silken lattice, the surrounding strands tightening when Moira pulled. She did it again, closer to his base this time, strands as soft as satin constricting as though he was being squeezed between her thumb and forefinger. Like plucking at the strings of a harp, she began to play, her fingers moving in a slow wave as that sensation of tightness glided up his shaft.\n\n\"Didn't I warn you that you'd never had a woman like me before?\" she said, affording herself a satisfied smile as she drank in his reaction. \"Once I've learned what threads to pluck -- everything that makes you tick -- you'll beg to stay. I know it.\"\n\nShe moved her fingers in the air, tweaking and tugging at those strands, the novel and unexpected sensations making Freddy flinch and writhe. It was hard to believe that the same silk that felt so wonderfully soft against his skin was the same material that bound his hands and feet, more than strong enough to resist the ardent struggling of a grown man. It was likely far stronger than that, even.\n\nIt almost felt like phantom fingers were stroking him, or like dozens of pairs of disembodied lips were pursing around his shaft at once, all in different places. He felt the first unreserved, irresistible wave of pleasure crash over him, his stomach swarming with butterflies as she made him her willing plaything. Was she right? If she stopped now, would he beg her to continue?\n\nUsing nothing but the shining threads, Moira guided his member to her lips again, maneuvering it into her mouth. She doted on his glans as she kept up her strange game, the ever-alternating sensations of tightness now joined by the feeling of her hot, wet tongue tracing every contour of his anatomy. Her black lipstick rubbed off on his skin, leaving lurid trails to mark where her lips had roamed, her tongue just as practiced as her fingers.\n\n\"Fuck,\" Freddy snarled through gritted teeth as she stimulated his glans with a maddening flurry of licks.\n\n\"Language,\" she chided in a mocking tone, tightening all of the strands at once. If it was supposed to deter him, it had the opposite effect, the bedframe creaking as his spine arched off the mattress. \"Perhaps I should wring one out of you so that you can last longer when it really counts,\" she added. \"It might be wrong of me to toy with you like this, but it's been decades, and I'm oh so excited to get to know you intimately. A strapping young man like yourself should have enough stamina to provide at least a few hours of entertainment, wouldn't you agree?\"\n\n\"A few hours?\" Freddy stammered, his face starting to redden.\n\n\"Oh, look at you blushing,\" she cooed as another warm smile brightened her face. \"You didn't think I'd be satisfied with a quick roll in the hay after decades of hibernation, did you, darling? I like that you're a little shy,\" she added, giving his member another tug that sent his head spinning. \"Men who feel that they have to take charge in every situation are such a terrible bore, and I'm old enough to be somewhat set in my ways.\"\n\nHer hands began to move again, Freddy feeling the silk lattice tighten. Moira's spider legs sprang into motion, passing up more coils of sticky threads, his host wrapping them around his length so quickly that her fingers became a blur. When she pulled them away, his member was completely cocooned in the silvery threads from its base to its tip, so tight that he could make out every contour of his shaft through the thin layer. She gripped it in her fist, starting to stroke, Freddy lurching again as the unexpected sensation surprised him. It was so impossibly smooth, like she had wrapped his erection in the most luxuriant satin. Where the droplets of fluid that clung to the fibers that bound him were sticky like glue, these were slippery, creating a slick layer on the inside of the cocoon.\n\n\"Soft and slippery, aren't they?\" Moira cooed as she noticed his expression. \"I can produce several kinds of silk, you know. Some are good for holding my dinner in place, while others make excellent threads for sewing. These are a little different.\"\n\nShe started to pump her hand in earnest, stroking him through the webbing, its slimy inner surface gliding against his skin. It seemed as thin as latex, doing nothing to dull the sensation of her slow massage, what felt like satin soaked in lubricant sliding up and down his aching length.\n\n\"Come for me, now,\" she purred in that intoxicating voice. \"I want you to last long enough that I can really enjoy you when we move on to the main course.\"\n\nIt was a request that he couldn't have refused even if he had wanted to, her stroking finding a ruthless pace, her fist squeezing him tightly as she milked him through the slippery threads. Every time his cock pulsed or flexed, the cocoon fought against it, creating a wonderful sensation of tightness that took his breath away.\n\nEach pump of her fist sent a throb of pleasure radiating through him, burning through his nerves like a fever. His member was beating like a heart in her grasp, the need for relief growing more urgent and more difficult to repress with each teasing motion of her hand. It soon became too much for him, his very breath seemingly tied to her cruel rhythm, his resolve crumbling.\n\nHe tried to double over as a ripple of ecstasy tightened the muscles in his abdomen, but the webbing that bound his hands prevented it, Moira watching him strain as his climax tore through him. The first rope of his seed pumped into the cocoon, inflating a small pocket of silk at its tip like a little balloon. The next groaning stab of pleasure was joined by another, the pocket swelling with each wad of his emission, Freddy filling it like the reservoir in a condom. Moira kept up her stroking all the while, wringing his ejaculate from him, eager to prolong his delicious suffering.\n\nNot being able to move was frustrating, maddening, but it only made the warm waves of ecstasy that crashed over him all the more poignant. Gradually, the sharp, unfiltered sensations took on a more fuzzy and indistinct quality as euphoria settled over him like a heated blanket. He collapsed back onto the bed, his burning muscles relaxing, one final shiver of delight making him buck as Moira squeezed out the last of his emission. The reservoir at the tip of the silken cocoon was full now -- he could see the pearly fluid sloshing around inside it. Moira pulled the slimy threads off him with one quick motion of her hand, then tossed them aside like a discarded sock, leaving him clean save for the remnants of the slimy substance that had coated them.\n\n\"Feeling better?\" she chuckled, the vibrations of her spider-like legs traveling up through the bedframe as she rose to her full height again. She drew closer until the abdomen that was concealed beneath her black gown was hovering over him, her human torso lifting towards the ceiling. \"I think it's time that I showed you what I really am.\"\n\nShe reached for the button that held the jacket-like upper half of her dress together, popping it open, then spreading her lapels apart. Her already exposed breasts wobbled with the motion as she shrugged off the dark fabric, pulling her arms out of the clinging sleeves, letting the dark garment fall around her waist. Next came her ruffled bodice, Moira undoing what buttons remained, exposing more of her pale skin as she opened it up. It was still wet from the rain that had soaked through her clothes, making it shine in the moonlight, almost like she had been waxed. Freddy's eyes were drawn to her flat stomach, following two sculpted rows of subtle muscle that carved a dimple in her belly, tapering down towards her navel. What lay below was still hidden by the wide skirt of her dress, her milky skin stopping just short of her pubic mound.\n\nPerhaps noting where he was looking, she smirked, then began to lift the long hem. Her bulbous spider abdomen was too large for her to slide it down any further, so she had to raise it over her head. He watched, mesmerized as she lifted her bosom along with it, a ripple spreading through her delicate fat as her boobs fell to clap against her torso. Her sheet of long, straight hair fell about her shoulders as she let the waterlogged garment fall to the carpet, reaching up to run her fingers through the jet-black strands.\n\nOnly now did Freddy's gaze wander lower, and what he saw at first confused, then shocked him. Like a mythical centaur, where her narrow waist began to flare out into her inviting hips, her lily-white skin gave way to chitinous plates the same onyx shade as her hair. At first, it looked like she was being eaten by a giant spider, but he quickly realized that it was an extension of her body. Below her human waist was an almost fully-formed arachnid, with eight segmented legs attached to a kind of armored thorax, along with a swollen abdomen that protruded from behind it. Where the monstrous spider's head should have been, it instead tapered into her lithe, feminine form. Her human body stopped right where her mound should have been, leaving her paradoxically smooth where he would have expected her loins to be.\n\n\"As I said,\" she began, spreading her arms wide as though presenting herself to him. \"I'm not all woman, but I'm enough to please you in more ways than you realize.\"\n\nFreddy wasn't even sure if what he was seeing was real. Lingering arousal and tipsiness from the wine still clouded his judgment, the dark carapace that covered the lower half of her body blending into the shadows. It made her oddly indistinct, like a mirage. Still, he could sense her sheer mass as she loomed over him, those monstrous legs sending pangs of instinctive fear through him. He should have been terrified to the point of passing out, but he knew now that she had no intention of hurting him, and the feminine curves of her upper body still tugged at his primate brain in ways that were impossible to suppress. The way that those sumptuous breasts swayed gently every time she moved, the definition of her trim midriff, the perfect hourglass of her wide hips. Something about the place that her glistening, porcelain skin transitioned to carapace made him think of low-cut jeans and revealing lingerie, his lust-addled brain turning even that into a thing of attraction and mystery.\n\n\"How are we supposed to...\" Freddy trailed off, glancing pointedly at her smooth mound.\n\n\"I guess you must have come around if that was your first thought,\" she replied with a sly chuckle. \"Don't you worry your pretty little head about that for the time being. Here, I have another way for you to make yourself useful.\"\n\nIn the dark bedroom, her upper body seemed to float over the bed towards him like a ghost, Moira cupping her breasts in her hands to stop them from swinging like pendulums as she lowered herself down towards him. When she released them, he felt their weight plop down on his chest, her hands reached up to cradle his cheeks. Her skin was pleasantly cool, still wet from the rain, her raven hair framing her smiling face as she poised there above him.\n\n\"I'm an old-fashioned woman,\" she whispered, stroking his burning cheek with an affection that sent a wonderful shiver crawling down his spine. \"There's nothing quite like a good kiss to get me warmed up. Will you indulge me, Freddy?\"\n\nShe leaned closer, and this time, he didn't turn his head away from her. Those dark lips met his, her embrace starting off gentle, almost reserved. It was hard to believe that these pillowy lips had been wrapped around his cock only minutes prior. Gradually, she became more aggressive, Freddy tasting the tip of her tongue as it brushed lightly against his own. There was more of that unexpected affection, as though she was expressing her desire for him with each teasing lick, the smell of her perfume and the tickle of her long hair making him swoon.\n\nHer kiss soon became deeper, more passionate, a comely sigh escaping her as she leaned into him. Her satin flesh was coated in a slippery sheen of her warm saliva, Moira growing more brazen as she explored his inner cheeks, tickling the roof of his mouth. It was like she was pouring her desire for him -- her need -- into every agile stroke. It was no less practiced than her dexterous fingers, and she showed no less skill with her tongue than she did with her threads, Freddy allowing himself to lie back into the pillows as she worked her magic on him.\n\n\"Why, how rude of me,\" she muttered as she broke away to let him catch his breath. There was a beautiful flush in her cheeks now, her arousal painted on her face like rouge. \"I forgot that you were still...indisposed.\"\n\nOne of those sharp, arachnid legs emerged from the gloom above him, Freddy following it with wary eyes as it moved towards the top of the bed. Using its pointed foot like a blade, Moira sliced open the webbing that was wrapped around his hand, the severed strands falling away. He flexed his fingers, watching as she did the same on the opposite side, releasing him from his bonds.\n\n\"Now, don't get too comfortable,\" she warned. \"I have use of your hands, but only for a time. Perhaps it's my unconventional heritage talking, but I like to be able to set my own pace -- to control the flow of an encounter. You understand, I'm sure.\"\n\nShe took his hand and guided it to her chest, letting one of her breasts fill his palm, fat as soft as velvet engulfing his fingers up to the knuckle as he squeezed. It felt like he was shaping warm putty, her quivering flesh just as malleable beneath his digits, bulging between them when he applied pressure. And her skin -- good lord -- her skin was just as soft and as smooth as her luxuriant webbing. The dampness of the rainwater that still soaked her made her slick to the touch, the slippery, silky meat of her bosom sliding out of his grasp as he struggled to juggle her assets. He brought in his other arm, taking generous handfuls now, all reservations thrown to the wind. How he had admired her breasts, and now they were all his, Freddy struggling to contain his excitement as he indulged himself.\n\n\"That's it,\" Moira cooed, a shiver of pleasure rolling through her. \"Take your fill of me. It's been so long since I've felt the touch of a man.\"\n\nShe leaned in again, locking him in another slow, probing kiss as he rolled her inviting flesh between his fingers. As her agile tongue entwined with his own, he found one of her nipples, firm and engorged with desire. Moira's measured pace faltered as he caught it between his fingers, giving it a gentle pinch, his partner's massive body quaking. Her long arachnid legs seemed to tremble, growing weak at their joints just as a normal woman's knees might weaken. For someone so aloof and commanding, she was remarkably receptive, his host breaking off her embrace to bury her face in the nape of his neck as he kneaded her yielding fat like fresh dough.\n\n\"You can be rough with me,\" she purred, her hot breath blowing on his ear. \"Don't be scared to manhandle me a little -- there's nothing a human could do to harm me...\"\n\nEmboldened by her sultry plea, he grew more aggressive, Moira letting slip a breathy chuckle of delight as he probed deeper. Beneath flesh like memory foam was firmer, more sensitive breast tissue, Moira shuddering as he massaged it. Her hard, swollen nipples pressed into his palms, practically begging for his attention.\n\nCupping one of her breasts, he raised it higher, its wobbling meat spilling over his hand like he was trying to lift a mound of jello from below. Realizing what he was trying to do, Moira lifted herself higher, bringing her chest to eye level. That silky skin and cushiony fat felt even softer against his cheeks, Moira letting her breasts spill around his head as her warm cleavage engulfed him. She gave him no choice but to fill his lungs with that floral perfume, the natural, more carnal scent of her body chasing it.\n\nFreddy took a moment to bask there, completely surrounded by heaving flesh, then he surfaced like a dolphin to see her gazing down at him. Struggling to get a grip as his fingers glided on her damp skin, he brought one of her nipples to his mouth, drawing it between his lips. Moira stiffened as he pursed them tightly, feeling the swollen protrusion on the flat of his tongue. A shuddering sigh let him know that she was enjoying the sensation as he began to circle it slowly, glad of an opportunity to get her back for her earlier teasing. He trapped it between his teeth and tongue gently, battering it with quick flurries of licks, sucking it deep into his mouth. He clawed at her inviting flesh all the while, its texture irresistible. Moira's breathing grew ragged as he switched to the other nipple, not wanting to neglect it, leaving her skin shining with his saliva.\n\n\"You're so greedy,\" she laughed, the motion making her breasts shake. \"I like that eagerness in a man. I have a lot of lost time to make up for, after all.\"\n\nShe shivered again as he drew on her nipple, making a lazy, teasing lap around her areola with his tongue. Her slender fingers delved into his hair as she drew him close in encouragement, her arachnid limbs starting to tremble.\n\n\"Alright,\" she sighed, finally pulling away. Freddy watched her ample chest rise away from him, his focus returning to Moira's blushing face as she hovered over the bed. \"I think I'm warmed up enough now, and it looks like you're ready to go again,\" she added with a pointed glance down at his renewed erection. \"Give me your hands, darling. You won't be needing them...\"\n\nShe was giving him a choice this time, her silver eyes watching him in the gloom, waiting for his compliance. Something about allowing himself to be bound voluntarily made his heart race, and Moira seemed to sense that in him, her lips curling into a smile as he presented his hands to her. She took them in hers, their fingers interlocking, trapping him in another bawdy kiss as she pressed them against the mattress.",
        "Freddy could see those spider legs moving out of the corners of his eyes, but his lids soon closed of their own accord as his seductive host treated him to another dizzying display of finesse from her tongue. When she rose away, he found that his hands were wrapped in sticky threads again, securing them tightly to the bedposts.\n\n\"Good boy,\" she purred, her voice like honey in his ears. \"We'll make a loyal husband out of you yet.\"\n\nHer arachnid limbs thudded against the old floorboards as she repositioned herself, Freddy's head swimming with a blend of anticipation and apprehension. There was nothing between her legs. In fact, she had no legs. What she wanted was obvious, but how she intended to proceed was a mystery to him.\n\nAs he watched, immobilized, she curled her arachnid body to bring the tip of her bulbous abdomen down towards him. He tried to recoil instinctively, fearing that some massive stinger was about to unsheath itself, but he was prevented from doing so by the webbing that bound him. Instead, he saw the orifice that must have extruded her silk, a set of four lips arranged in a cross pattern. Like a blooming flower, the fleshy petals opened up, revealing something pink and wet that contrasted with her black carapace. His eyes followed a drooping strand of fluid that glistened in the low light as it dripped from one of the lips, falling to his thigh. Whether it was one of her threads or something more lurid, he couldn't tell. As much as her lower extremities filled him with fear, the sight of those prehensile lips flexing as she brought them down towards his erection made his cock throb in the air. The allure of that wet, twitching opening overrode any misgivings that he had, desire robbing him of his inhibitions just as effectively as any wine.\n\n\"Don't be afraid,\" she cooed in that sweet voice. \"It may look a little different from what you're used to, but you should never judge a book by its cover, especially when you don't know what delights might be lurking between its pages...\"\n\nOne of those four lips brushed his cock, licking him like a tongue. While its outer surface was as black as ink, its inner surface was coated in soft, rosy flesh like the lining of a cheek. It was wet with something slippery and warm -- perhaps the same substance that she had secreted when she had cocooned his member. All four of the appendages reached out to touch his glans, guiding it towards the winking opening between them like some kind of docking procedure. She had enough fine control over them that she was able to peel back his foreskin to expose his glans. Every time her velutinous, slippery flesh glanced him, Freddy gritted his teeth. He was still sensitive from his prior orgasm.\n\n\"Just lie back and let me have you,\" Moira growled, her usually soothing voice taking on a more aggressive tone. He could tell how much she wanted this from the way that her spider legs were trembling, another thick rope of what might be her excitement oozing from between her lips to drape itself over his member like she was icing an eclair.\n\nThe feverish heat of her insides contrasted starkly with the cool night air as Moira slipped his sensitive tip inside her, what felt like a ring of tight muscle joining her four petals as they gripped him with surprising strength. As she inched him deeper, he found himself engulfed by what felt like folds of opulent silk, drenched in some kind of warm, slick fluid that had the consistency of syrup. Walls of pillowy flesh rippled and clenched around him, almost as though they were struggling to accommodate his girth, Moira pausing when she reached the widest part of his shaft.\n\n\"Oh, to be so full again,\" she groaned, slurring her words as her long lashes fluttered like the wings of a butterfly. \"Allow me a moment to-\"\n\nFreddy couldn't stand being only halfway inside her, and he bucked reflexively, burying his cock all the way to its base. Moira sucked in a sharp gasp, her sopping passage narrowing around his length in a quivering contraction, those walls of wet satin seeming to grip him just as tightly as one of her tailored suits.\n\nHis host shuddered, a groan of surprise and pleasure escaping her pursed lips, her eight legs almost giving out.\n\n\"Freddy!\" she gasped, her chiding tone doing little to mask the wavering in her voice. \"Don't you know that it's rude to disobey your host? We'll have to work on those manners of yours.\"\n\nShe lifted her abdomen, her insides clinging to him tightly as he slid out of her, Freddy emitting a grunt of disappointment. Still a little unsteady on her legs, Moira began to extrude more silk, her arachnid limbs a blur as she weaved it into a kind of net. She draped it over his hips, then secured it beneath the bedframe, Freddy's eyes widening as she pulled it taut with a tug. He couldn't even raise himself off the mattress now -- he was glued to the bed. She had left a hole in the webbing for his erection to poke through, Freddy glancing down to see his skin shining with her fluids. Moira reached down, gripping a small thread near his base between her thumb and forefinger, giving it a gentle tweak. The silk around his cock tightened like a noose, forcing more blood into his already swollen member, and he failed to suppress a groan of pleasure. It felt like she'd just slipped a cock ring onto him.\n\n\"What're you doing?\" he grunted.\n\n\"That's better,\" Moira chuckled, her voice dripping with palpable desire as she brought her strange loins back to his pulsing member. \"Didn't I tell you that I'm rather particular about setting the pace? Now, behave yourself, unless you want me to wrap you up like an Egyptian mummy with only your manhood exposed. Actually...\" She paused for a moment, staring off into space as she bit her lower lip. \"No. As much as the thought stirs me, we shouldn't be too hasty.\"\n\nBefore he could ask her what she was talking about, she slammed her abdomen down on him again, Freddy unable to even arch his spine as a wave of tingling pleasure coursed through him. She impaled herself on his cock, taking him all the way to the hilt, her four lips splaying wide to accommodate him.\n\nThat tunnel of wet flesh stretched over him like a vinyl glove, walls of quivering muscle parting to accommodate him, almost like her body was taking a mold of his throbbing cock. He felt himself bottom out, his tip bumping against more of her slick insides, the shiver of lust that passed through her translating into her loins to make them ripple up his length. She held him there for a few more moments, the impulse to thrust driving him wild, but he was so tightly secured to the bed that he couldn't move an inch.\n\n\"I'd tell you to lie still and let the lady of the house have her fun, but it doesn't look like you have much of a choice in the matter,\" she said as she wet her dark lips in anticipation. \"Don't worry -- I know my own strength. Just relax, and enjoy...\"\n\nShe began to circle her bulbous abdomen, stirring him around inside her, the wonderful texture of her clinging passage swirling around his shaft. He was so acutely aware of every wrinkle and imperfection, every flutter and squeeze of the muscles in her depths making his head spin. It felt like a phantom hand was reaching through the barrier of her flesh to stroke him, gloved in a warm, slippery membrane.\n\n\"Do...we need any protection?\" he grunted, wincing as she gave him another teasing squeeze.\n\n\"Oh, I wouldn't worry about that,\" she replied without really answering his question.\n\nIt was strange to see her so far away from him, her human torso seeming to hover in the air a few feet above the bed. His brain insisted that she should be straddling him, her pert breasts bouncing within arm's reach, her milky thighs sandwiching his waist. Instead, the waves of intoxicating pleasure were coming from that black, swollen abdomen. He watched as Moira reached up to cup one of her boobs in her hand, rolling her nipple between her fingers as she threw her head back, reveling in the sensations that assailed her.\n\n\"Mmm, I can feel you twitching inside me,\" she moaned as her pace began to increase. \"You're as hard as a rock, Freddy. Honestly, I didn't think you'd come around so quickly,\" she added with a sordid chuckle. \"Perhaps I underestimated your...flexibility.\"\n\nThere was a thud as she repositioned a couple of her arachnid legs to bring herself closer, more of her considerable weight pressing down on him. She began to thrust now, lifting the mass of her abdomen off him, Freddy watching as that pink flesh clung to him tightly on its way up his shaft. She left his skin slick with her sordid juices, globs of what might be excitement or her spider-like secretions sliding down towards his base. His monstrous lover poised there for a few moments with only the head of his cock still lodged inside her, gripped by those four fleshy petals, then she let herself slowly descend again.\n\nFreddy tried to lurch but was once again frustrated by his bonds, every crease of her inner folds that passed over his tender glans sending a jolt of ecstasy tearing up his spine. Moira knew exactly what she was doing, finding a lazy, teasing pace that kept him wanting.\n\nFar from being covered in hard carapace, her abdomen was surprisingly soft, wobbling with her thrusting motions. He had compared it to a beanbag chair in size and shape, but that comparison was more accurate than he had realized. It almost seemed to be full of fat, judging by the way a ripple spread through it when it came down on his shaft, like it had more in common with her breasts than an insect's hard exoskeleton. It was actually spilling over his thighs at its lowest point, reminding him of the soft cheeks of a partner's butt as she mounted him.\n\nMoira slowed her thrusting as she hilted his member, starting to rock her abdomen back and forth like a normal woman might rock her hips while riding him, grinding his cock against her velvet walls as though she was trying to hit some hard to reach spot. She had far more control over her movements than a normal woman, too. Her abdomen was attached to the rest of her body at only a single narrow point, almost like a secondary waist, and it seemed able to curl and flex independently. It would have to, or it wouldn't be able to extrude silk with the dexterity and precision that it did. The result was a level of discipline that would have put any belly dancer or gymnast to shame, her upper body keeping as still as a gyroscope while her arachnid extremities made a teasing figure of eight below. She started to move from side to side like a swinging pendulum, keeping him on his toes, subjecting him to every delight that her strange body could offer.\n\nEven though she already had him on his back, her seduction was not yet complete -- not until he agreed to stay. It was almost as if she was showing him what she was capable of as well as indulging her own long-dormant desires. Just like when she had asked for his hands before binding them, this was about his participation, his assent. She certainly had the power to keep him here against his will if she chose to, but that wasn't the point. Moira wanted him to want her.\n\nHer artful movements began to falter, her steady pace becoming erratic as her pleasure mounted along with his own. As much as she so obviously reveled in exerting control, she had been hibernating in this empty manor for untold decades, and she needed this even more badly than he did. Dry spell was an understatement.\n\n\"You don't disappoint,\" she said with a low, bawdy moan. \"Just...hold on for me, won't you? My instincts are demanding that I rush to the finish, but you're reaching places that nobody has touched in a lifetime, and I...I want to savor it...\"\n\n\"Whatever you need,\" he replied, gritting his teeth as her sultry chuckling made her loins narrow around him.\n\n\"Dutiful husband, indeed,\" she cooed as she drove her chubby abdomen into his lap again. She lowered her human torso down closer to him, Freddy watching her ample breasts sway, beads of shining sweat now joining the moisture that wet her flawless skin. He tried to reach for them impulsively, his mouth starting to water at the sight of her rosy nipples, but he was quickly reminded that he was tied to the bed. Moira laughed at his frustration, shaking her shoulders to make her bosom bounce enticingly, the heavy globes clapping against her torso.\n\n\"Don't fret, darling,\" she said in a voice so soothing it could have pacified a charging bull. \"Is our gratification not all the more delicious when it's delayed?\"\n\n\"I suppose you know a thing or two about delayed gratification,\" he grunted between her punishing thrusts.\n\n\"That's an apt way to put it,\" she chuckled, her amusement more genuine than seductive this time. \"Speaking of which, I believe we've delayed long enough.\"\n\nThe damp muscles of her tunnel kneaded and squeezed him in wracking waves each time she took him to the base, her most intimate reaches clamping down tighter with every stab of pleasure that rocked her. Their coupling was growing frantic now, all poise and grace abandoned as Moira began to fuck him in earnest, pumping her soft abdomen into his lap like a piston. He could hear the wet, lurid sounds of their rutting as she moved atop him, her powerful grip creating a wonderful suction that made him feel like her burning depths were being vacuum-packed around his shaft.\n\nWhen Freddy glanced up at her human half, he saw that her hands were buried in her own heaving bosom, Moira delving her slender fingers into her sensitive flesh as she kneaded desperately. Her damp hair fell over her face as she doubled over, the raven strands sticking to her shining skin, a throb of ecstasy making her arachnid limbs tremble.\n\nShe brought one of those sharp feet towards his belly, Freddy flinching away reflexively, but the leg merely sliced through the webbing that was keeping his pelvis immobilized. Now free to move his hips again, he did just that, lifting his butt off the mattress to meet her frantic thrusts.\n\n\"That's it,\" she growled, all pretense of modesty forgotten. \"Harder! Hold nothing back!\"\n\nFreddy did his best to oblige, the pair finding a punishing rhythm together, the old bedframe creaking worryingly as she drove him into the mattress. He could feel an urgent, distracting pressure starting to well inside him, each impact of her wobbling abdomen pushing him closer and closer to the edge. It was a struggle to hold out -- he didn't want to finish before Moira was satisfied, not after how long she had waited for this.\n\nTiny points of light began to dance before his eyes, pleasure washing over him like waves of crackling static, radiating throughout his body. It felt like the very pulse of his existence was inexorably tied to his partner's punishing rhythm, Freddy matching her pace, pushing harder and deeper each time she came down on him. Her sopping passage only seemed to grow tighter and wetter as their coupling dragged on, thick ropes of what might be spider silk or her sexual juices draping themselves over his thighs and dampening the sheets between his legs. Her clenching, velvet flesh glided along his shaft on a thick layer of slippery fluid, ensuring that he could slide in and out of her in spite of how fiercely she was gripping him. There was just enough texture and friction for each thrust to rob him of his breath.\n\nHe glanced up at Moira, watching her rock back and forth, her hands wandering across the wet skin of her belly and breasts. She was lost in her fugue, her head bowed, her curtain of raven hair falling over her burning face. Between the strands, he could catch glimpses of her silver eyes reflecting the moonlight, staring back at him with a palpable hunger.\n\nShe brought their lovemaking to a fever pitch, Freddy sensing that she was getting close in the way that her silken insides contracted around him in fluttering spasms, the sensation robbing him of the last of his willpower. Her rutting stopped abruptly, and she froze up, plunging her abdomen into his lap as those four lips closed around him tightly. He felt the first pulse of her climax, hearing a stifled gasp from above as her loins spasmed, Freddy finding himself trapped in a prison of damp flesh. Moira took in another sharp breath as she felt a rope of his hot, thick seed well up inside her like magma, his member flexing as he flooded her deepest reaches.\n\nFreddy's eyes snapped shut, and he struggled against his bonds reflexively, his body contorting as another orgasm crashed over him. The ecstasy was inescapable, almost too much for him to bear, Moira keeping him lodged securely inside her as she trembled with each rope of his seed that painted her depths. The pair were locked in a shivering, grunting feedback loop, each fresh surge of pleasure accompanied by a flex or a clench that was felt by their counterpart.\n\nGradually, their ragged breathing grew more regular, their racing hearts slowing as post-coital bliss set in. The spasms of pleasure grew less frequent, the two lovers sharing one last pained sigh as Moira lifted her abdomen off his aching erection. His skin was coated in a sheen of her glistening juices, linked to her splayed petals by fat, drooping ropes of their emissions.\n\nMoira seemed to deflate like a punctured pool toy, her spider legs almost giving out, her human torso lowering down towards him. There was a sudden flurry of movement as she freed him, slicing away the webbing that secured his limbs to the bedposts, Freddy reaching up to welcome her. His hands wandered across her sweat-drenched skin, her damp hair brushing his face as they embraced, sharing an exhausted kiss. He could tell that she was sated, all of the burning need that she had been bottling up for so long finally quenched, her pace becoming relaxed and affectionate.\n\n\"I'm so glad I caught you in my web,\" she chuckled, reaching up to part her long hair so that he could see her face. Her cheeks were flushed a rosy red, contrasting beautifully with her pale skin, her dark lips curled into a warm smile. There wasn't much lipstick left on them now -- it was all on Freddy.\n\n\"I dunno if I'd call putting caltrops on the road so that I crash my car catching me in a web, but whatever floats your boat,\" he replied with a satisfied grin.\n\n\"So,\" she added, a little more hesitant this time. \"Do you...still want to leave in the morning? If you haven't figured it out by now, I don't mean to keep you here against your wishes.\"\n\nHe considered for a moment, his host furrowing her brow as she waited for a reply.\n\n\"I think I need some more convincing,\" he finally said, Moira smirking at him as the pair melted into another passionate embrace.\n\n<p align=\"center\">CHAPTER 3: MIND YOUR MANORS</p>\n\nThe tow truck's engine roared as it dragged the wrecked Bronco out of the ditch that had been its home for the last couple of days, the deflated front tire digging a furrow in the wet mud. Freddy walked around the vehicle to get a look at the damage, his hands tightly stowed in the pockets of his jacket in an attempt to ward off the chill wind. The entire front quarter of his jeep had been submerged in dirty water, and the grill was full of debris from the storm, wet leaves and mud caking it.\n\nThe tow truck's driver opened the door to the cab and hopped out, walking over to stand beside Freddy. He was an older man wearing a red checkered shirt that was struggling to contain his prominent beer belly.\n\n\"Yeah, you ain't drivin' outta here,\" the man said as he reached up to adjust his cap. \"I'm gonna need to take her back to the shop and give her a once-over. We'll get that tire changed, check the engine for damage. I can pretty much guarantee you're gonna need an oil change and new spark plugs at a bare minimum before she's road-worthy again.\"\n\n\"Fucking thing looks like you just dredged it out of a lake,\" Freddy replied with a sigh. \"I would have called for a tow sooner, but there's no goddamned cell reception out here.\"",
        "\"Yeah, the old roads in these woods are a bit of a death trap,\" the driver replied as he turned to look back along the dirt track. \"Every couple of years, someone has an accident down here. What we need is asphalt and some street lights, but you try convincing the county to do anythin' about it.\"\n\n\"Well, you have my insurance details,\" Freddy said as he extended a hand to the man. \"I appreciate you coming all the way out here.\"\n\n\"You need a ride back to town?\" the driver asked. \"I don't think there are any motels around here -- not unless the squirrels have opened up a bed and breakfast.\"\n\n\"Nah, I actually live nearby,\" he replied as he turned to point into the woods. \"There's an old manor on a hill a few miles up the road.\"\n\n\"The old Livingston place?\" the man added skeptically. \"I thought it was fallin' apart? You look like you're from out of town, so I'm guessin' you bought it?\"\n\n\"That's right,\" Freddy replied with a nod. \"My fiance and I just moved in -- that's why I was driving up here. A few licks of paint, and the old place'll be back to its former glory. It's a beautiful property, it's just been neglected without anyone around to take care of it.\"\n\n\"Well, any man who can afford to snap up a mansion and still chooses to drive a car like this has my respect,\" the driver added with a chuckle. \"We'll get her back up and runnin', don't you worry.\"\n\nFreddy bade the man farewell, standing in the middle of the road as he watched the truck tow his Bronco away, the vehicle soon disappearing around one of the many winding bends. He flipped up the furry hood of his jacket, then turned to make his way back home.\n\nAfter a bit of a walk, he arrived at the manor's overgrown gates, then headed up the path that led through the abandoned grounds. There was a lot of work to do, but these gardens would be home to vibrant flowers again one day soon. He pushed open the door, taking off his muddy shoes in the foyer, then turned left down the hallway that led to the living room.\n\nAs he stepped through the door, he was greeted by the warmth of the hearth, its orange flames crackling as they bathed the room in their glow. Moira was sitting in an armchair beside it, a glass of red wine in hand. She turned her head as he entered, giving him a smile that was just as warm as the fire. There was a hint of desire behind those silver eyes, a promise that the next night would be just as animated as their last. After what she'd subjected him to, he was surprised that he could walk at all.\n\n\"Is everything taken care of?\" she asked as he shrugged off his jacket, taking a seat in the chair next to hers.\n\n\"They towed my truck,\" he replied, settling into the plush leather with a creak. \"It's a little beat up, but with the money I'll save on rent, paying for repairs shouldn't be an issue.\"\n\n\"Don't assume that you'll be staying here for free,\" Moira added, flashing him a smile. \"Your living expenses will be a trivial cost to cover, but there is much to be done.\"\n\n\"Huh?\" he said, momentarily confused.\n\n\"Just like me, this manor needs a loving touch to bring it back to life,\" she explained as she took a sip of her wine. \"Oh, how I'm looking forward to having a strapping young man around the house again. You can help me salvage the flower beds, we can clean the upper floors, we can plug all of those awful leaks. You'll have your marital duties to attend to, naturally,\" she added as she looked him up and down pointedly. \"I'll make it very worth your while...\"\n\n\"Yeah, I could do that,\" Freddy replied as she handed him a glass of wine. \"No problem.\"\n\n\"It can wait, though,\" she added as she settled back into her chair. \"We should take a few days, maybe a couple of weeks, to get to know one another more intimately. Call it...a honeymoon,\" she said in a tone that made his heart flutter. \"What do you say, darling?\"\n\n\"I believe you told me that it was rude to disobey my host,\" he replied, raising his glass to her.\n\n<p align=\"center\">~THE END~</p>"
    ],
    "authorname": "Snekguy",
    "tags": [
        "milf",
        "older woman",
        "arachne",
        "monstergirl",
        "large breasts",
        "gentle femdom",
        "light bondage",
        "spider",
        "blowjob",
        "webbing"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/widows-welcome"
}