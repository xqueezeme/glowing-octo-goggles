{
    "title": "Women's Studies Ch. 11",
    "pages": [
        "\"He asked me to be his Valentine,\" I said nervously as soon as I sat down in Dr. Price's office.\n\n\"Danny? Really?\" she smiled showing surprise, and what appeared to be a hint of excitement.\n\nI had let myself get sucked back into messaging with him again. Just the thought of this man thinking of me was enough to make me lose all rational thought, causing me to fall right back into whimsical daydreams while talking with him on the phone, or messaging back and forth.\n\nDanny had asked me two days ago to spend Valentine's Day with him, and like a nuclear blast, it was enough to bring me back to reality, and send my fantastical thoughts crumbling down to rubble around me. I hadn't messaged him back since, and by the few texts he had sent, I was sure he was beginning to worry.\n\nDr. Price had already signed off on my breast surgery, and as it was, I had already had the procedure done. She had asked if I would continue seeing her to discuss my personal life, and after some thought I had accepted. Her rates were affordable, and even after paying for the slightly tender breasts I now enjoyed, I still had quite a bit of money left over.\n\n\"You don't seem very enthused by this turn of events,\" she observed.\n\n\"Why the hell should I be enthused?\" I asked a little erratically, emphasizing her choice of word. \"I've been trying to distance myself from him for a long time, but he always finds a way to charm his way back in,\" I said looking down at my phone in my hands. \"He will text me and I'll respond, trying to blow him off so he will get the hint, and before you know it, we've been messaging for over two hours!\"\n\n\"You make this seem like a bad thing,\" Dr. Price said.\n\n\"It is!\" I told her. \"You know why I can't tell him about me!\"\n\n\"You know,\" she said adjusting her seat. \"I've been thinking about that. There really isn't as much danger in telling him as you might think.\"\n\n\"Really?\" I asked wryly.\n\n\"Just hear me out,\" she said holding up a hand to forestall me. \"If everything goes perfectly, you have nothing to worry about. He will accept you for who you are, and you two could live happily ever after. If it goes badly, and he is completely repulsed by you, do you really think he would go around telling people about it?\"\n\nHer words made me think for a few moments.\n\n\"Just to be clear, these words have no reflection on how I actually feel. They are just a representation of a worst-case scenario,\" she continued evenly. \"He is disgusted. He has just found out that he spent the last few months falling for another guy, making out with him, and fooling around. Not only was he fooled, but by his own actions and thoughts, what he has done is gay. Now if you were in his shoes, would you want to go spreading that around? Or maybe you would just walk away and forget any of it ever happened,\" she finished.\n\nShe had a good point. Thinking about how Alex would have handled the situation before Lexi came around, I didn't think I would have risked telling anybody. I would like to believe that I wasn't such a tool back then, but deep down I knew better. Alex had been repressed and sheltered. If circumstances never necessitated the need for Lexi, I would most likely still be exactly the same.\n\n\"That...makes a lot of sense,\" I said a little sheepishly, slouching back into the couch as I relaxed slightly.\n\n\"You say it makes sense, but you don't seem as relieved as I thought you'd be,\" she said seeing the nervous look on my face.\n\n\"I'm still scared to tell him,\" I whispered, focusing on my fidgeting fingers in my lap. \"What if he hates me?\"\n\n\"Then he hates you,\" Dr. Price said casually.\n\nThe definitive way she said that didn't help my emotional state, and I told her so. \"That's...refreshing.\"\n\n\"Would you rather torture yourself wondering?\" she asked just as casually as before as she examined the nib of her pen. \"You can spend the rest of your life wondering, torturing your thoughts, about how he might react, or in just one short week you could know the truth. It might not end up being the truth you're hoping for, but you will know it, and you will finally be able to move onto the next part of your life.\"\n\nEventually we were able to move off of the Danny topic, and on to other more uplifting things, like how I was feeling about my new breasts. That was a fun topic. The added weight on my chest felt sublime, even with my tender, stretched skin. I still thought about what she had said about my Danny problem though. Her solution seemed simple on the face of it, but the possible outcome still inspired a great deal of fear. Less about his possible retaliation, and more so on how bad the emotional fall out would be.\n\nAs our session ended, I felt like I had a stronger understanding of my options in life, but I still didn't know what I was going to choose. I really liked this guy, and it would be wonderful if I could truly be myself with him, but I had created this fucked up situation.\n\nIt felt like so long ago since I had first met him. I hadn't even planned on liking him in this way, let alone any guy for that matter. I was just flattered that he took so much interest in me as a girl right after I had just begun pretending to be Lexi. Now, I actually was Lexi, and my feelings for him had evolved way beyond my intentions. No matter my trepidation, a small part of hope inside kept whispering for me to tell him.\n\nWith my nervousness still coursing throughout my body, I broke down and pulled into a drive-thru halfway back to campus. It had been months since I had indulged in the golden arches while trying to maintain my girlish figure. Abigail had gotten both Kennedy and I into yoga, but even with that, and my high metabolism, I felt a strong need to conform to my feminine beauty standards.\n\nAfter I finished my disgustingly delicious Happy Meal, and was crumpling the hamburger wrapper in my palms, I felt slightly disgusted with myself for breaking, but ironically happy. I had forgotten just how marvelous salty French fries tasted. I still had my problems hanging ahead of me, but at least I wasn't hungry as I finished my drive back to campus.\n\nThinking about Danny, and Valentine's Day, I didn't feel like going to my last class for the day, so I made my way up the stairs of Evens Hall to my dorm room for some alone time. I knew exactly what would help me take my mind off my problems and make me feel incredible all at the same time.\n\nAs soon as I got into my room, I began stripping off my clothes. Once my jeans, jacket, and top were on the floor, I stepped in front of our full-length mirror and admired my new breasts.\n\nThey were still a little tender, but not even that could have taken the smile from my face. I unsnapped the hideous looking granny-style bra, that had been recommended for post-surgery support, and let the straps slide slowly off my shoulders as I savored the tantalizing sight of my breasts slowly coming into view.\n\nThey were larger than I had expected, but the doctor had told me that there would be swelling for some time before they settled. It felt so incredible, finally having real breasts. Breast forms might have been a blessed solution before, and might have given me some illusion of what real breasts would feel like, but nothing could compare to the real thing.\n\nHaving been neglected for so long, covered by breast forms, the skin around my breasts was incredibly sensitive. Even the slightest brush of cloth against them felt pleasurable. And the weight of them hanging there on my chest was wonderful.\n\nI stared with adoration at my two new best friends as I slowly turned from angle to angle, examining them and how great they looked with the rest of my body. The natural slope of my chest looked seductive, and the round curves of the breasts themselves screamed sex and femininity. The drastic increase in breast size even stretched my boyish dark nipples, slightly increasing them from a modest quarter size to an ample half dollar, which I loved.\n\nStanding there in just my pink panties, I loved what I saw in front of me, and even felt my cock tugging at my underwear signaling its strong approval as well. My arousal rising, I let my thighs rub together teasingly as I gently let my fingers trace around the soft sensitive skin of my breasts. As one hand slipped down to my panties and inside the waistband, I couldn't help but bite my lip seductively as I slowly rubbed my aching cock between my thighs before finally setting it free.\n\nIt was such a wonderful feeling, knowing in my bones that I was attractive and desirable. Hell, if I wanted to fuck myself this badly, I knew I had to be hot as hell. I spent some time feasting on my own body as I teased my cock and breasts. I tried to savor these feelings as long as I could, the deep feelings of contentment at what I saw staring back at me in the mirror. I didn't know how to describe the feeling except for blissfully full. In the end, I found myself panting, and on my knees, my cum covering the mirror in violent pearlescent stripes, as I tried to catch my breath. This wasn't the first time I had come like this since my surgery, and I knew it wouldn't be my last.\n\nFeeling wonderfully spent, I used my discarded top to quickly scrub my semen from the mirror before crawling beneath the inviting covers of my bed. There was a small smile on my lips as I drifted off to sleep, holding my precious breasts in my hands.\n\n*** *** ***\n\nI woke up feeling someone else sliding into bed with me. Feeling so relaxed, I refused to open my eyes. In my blissful contentment, it took me a few moments to notice the citrus body spray warning me that it was Kennedy beside me.\n\nAfter such a wonderful orgasm, and my refreshing nap, I felt relaxed as I lay there with my eyes closed feeling Kennedy slide up next to me. After only a minute of feeling Kennedy's warmth pressed against mine, I felt the comforter being tugged slowly down my naked body to expose my breasts to the cool air in the room.\n\n\"Don't even think about it!\" I said the moment I felt her warm breath over my hardened nipple.\n\n\"Come on!\" she huffed, daring a very pleasurable flick of her tongue against my swollen nub.\n\n\"Cut it out!\" I said again, this time opening my eyes and pulling the covers back over me, shielding myself from her as well as the chill.\n\n\"I'll be gentle, I promise,\" she pleaded next to me.\n\n\"We tried that already,\" I said, thinking back to the last time I let Kennedy indulge herself at my expense. \"You can't control yourself enough to be gentle.\"\n\n\"This time will be different,\" she pleaded further, sitting up slightly next to me.\n\n\"Nope,\" I said firmly. I had not spent all of that time, money, and stress on my new breasts for Kennedy to get carried away and mess them up before they healed properly. \"I see the plastic surgeon in two days, and if he gives the all clear, you can go to town on them,\" I promised. \"But not a second before.\"\n\n\"You're no fun,\" she sighed, leaning back against the headboard.\n\n\"I told you she wouldn't go for it,\" Abigail said, surprising me slightly by her presence. She had been very quiet up until now, sitting at her desk studying.\n\n\"Don't you have homework to do, Kennedy?\" Abigail asked. \"I literally never see you studying.\"\n\n\"It's called strategic class selection,\" Kennedy said, tilting her head to look at our friend slyly. \"I only have one class that gives out a steady workload. The rest of them I can mostly coast through.\"\n\n\"Do you even have a Major yet?\" Abigail asked.\n\n\"Nope,\" Kennedy replied. \"It doesn't really matter to me. I'm only here for two things. Because my father bribed me to come, and so I can find out who he is.\"\n\n\"Just think,\" Abigail offered whimsically, \"you could actually get a first-class education while you're here. And for free too!\"\n\n\"I don't know,\" Kennedy said as she stretched out like a sexy cat on our mattress. \"I kind of like how things are going right now. I don't want to change up anything and risk it.\"\n\nFeeling a little anxious about how much time I had spent out of my granny-style boulder holder, I carefully slid out of bed and slipped back on my unflattering bra. Pulling on an old Alex t-shirt, I sat back down on the bed in my panties.\n\nAll of this talk of studying had reminded me of how much of my classes I had been missing lately. In between doctors' appointments, and regularly seeing my shrink, not to mention the surgery and the down time I took to recuperate, I was falling behind. While Abigail and I clicked away on our laptops, Kennedy settled down to take a little nap.\n\nIt seemed that I had really missed a lot over the last few days. After checking the web page for my classes, I realized how much trouble I was actually in. I had missed two exams that I had to make up, and had a number of papers that were late and pending. As it stood, if I didn't catch up quickly, I would be failing two of my classes. Even if I made up every assignment, I would still be severely close to losing my scholarship for not maintaining a C+ average.\n\n*BZZZZZ* My cellphone skittered across Abigail's desk.\n\n\"You have a message,\" Abigail said, looking at the screen. \"It's from Danny!\" she said in a more teasing tone, seeing who it was.\n\nIt was the last thing I needed on my mind right now. Seeing how bad my academic future was looking had been quite a shock. The absolute last thing I wanted was to be kicked out of school, and adding the stress of Danny into this already volatile mix was stress I didn't need. Talking with Dr. Price had made things seem so much clearer, but that clarity seemed to be wearing off. She had minimized the potential fall out of that situation from Chernobyl to a hand grenade, but from my understanding, hand grenades still killed people all the time.\n\n\"What does he want?\" I asked, trying to focus on repairing my academic future as I pulled up a notepad on my screen and began making a long list of assignments I had to complete.\n\n\"He wants to know if he scared you off with Valentine's Day talk,\" Abigail relayed.\n\n\"Shit,\" I sighed. \"Just tell him...tell him I can't.\"\n\n\"Are you sure?\" Abigail asked. \"It's Valentine's Day.\"\n\n\"I just realized I'm failing two classes, and if I don't fix this, I'll lose my scholarship,\" I said with a little tightness in my voice. \"I have an ass ton of work to do and I'm going to be too busy.\"\n\n\"Can we help?\" Abigail asked.\n\n\"I don't think so,\" I said shaking my head.\n\nAbigail went quiet as her thumbs went to work messaging Danny back for me. I felt relieved and a little guilty for putting this off even longer, but my excuse was solid.\n\n*** *** ***\n\nI spent the next couple of days in an almost fugue state of panic-studying. When I wasn't in class listening to lectures, I was a madwoman on my computer researching and writing essays and papers. I even cut out a lot of travel time by camping out in the halls while I worked with my overheated laptop keeping my thighs warm. I would leave the dorm for my morning classes, and I wouldn't return until after my last class of the day, cutting out the long walk from Evens Hall.\n\nIt was tedious work as I slowly chipped away at the giant mound of assignments, but every little bit I got through, the less I had in front of me. I began looking a little ragged from the lack of sleep, and Kennedy and Abigail seemed a little worried about me. They both offered to write some of my papers, but I just couldn't ask them to help. These were still things I needed to know for the classes, and them doing it for me wouldn't help me when finals arrived. I also would have felt even crappier than I already did if I cheated.\n\nThankfully, my follow up appointment with the surgeon was scheduled on a Friday, well after my only class that day.\n\n\"They still feel a little sore,\" I commented as the doctor examined my breasts.\n\n\"That's to be expected,\" he replied. \"Your skin was quite elastic, but that doesn't mean that soreness from stretching won't be present. The scars seem to be healing quite nicely. I expect those to fade even more over time.\"\n\n\"When do you think the swelling will go down?\" I asked. They were larger than I had anticipated, and I'd been waiting for them to shrink a little.\n\n\"It looks like all the swelling is gone to me,\" he commented. \"All that's left is the settling.\"\n\nThis news was a little bit of a shock.\n\n\"Are you sure?\" I asked, reflexively raising my hands to my breasts. They still felt so huge! When I had been looking for breast sizes, I had been looking for something modest, only slightly larger than the breast forms I'd had.\n\n\"I've been doing this for ten years. I'm as sure as I can be,\" he said gesturing for me to dress. \"What you see now is what you'll have going forward. Like I said, there will be a little bit more settling in the future, but the difference will be minimal.\"\n\nAs he took his final notes, I looked at myself in the mirror. They were just so...big. They weren't jumbo boobs or anything, but I was so used to my breast forms. I had been anticipating something only a tad larger. It could have simply been buyer's remorse. In reality, they were relatively the same size as Abigail's or Kennedy's breasts, but I was smaller than them.\n\n\"You're fine to switch back to normal bras now, and it's safe for you to resume normal sexual activity. I would refrain from any...aggressive treatment for the next few weeks though,\" he said. \"I would like to see you again in another month, just to keep track of your progress. You can set up an appointment with Stephanie on your way out.\"\n\nWhen I got back to our room, I was mentally exhausted. I still had so much work to do. Between all of my papers and the exams I had to cram for, I had about twenty thousand words to write, and around two hundred pages of text to read. I had been working so hard the last few days that even the thought of more hurt my brain.\n\nResigning to my torment, I kicked off my heeled boots and tossed my jacket onto the back of my chair. Grabbing a heavy textbook, I settled in on the bed for some reading. I spent over an hour at it, barely getting anywhere. All of the words seemed to run together, and I had been trying to read the same page for over ten minutes. I was even taking care to read each individual word, but by the end of the sentence I had absolutely no clue what I had just read. By the time Kennedy walked in, I was at my wits end.\n\n\"Fuck!\" I yelled, throwing the demon book onto the floor.\n\n\"Are you okay?\" Kennedy asked, setting down her things.\n\n\"No,\" I said rubbing my eyes, sore from trying to read. \"I spent the last five minutes trying to read the same sentence. My brain hurts,\" I said sliding down the headboard and onto my pillow.\n\n\"You just need a break,\" Kennedy said climbing up onto the bed to sit next to me and stroke my hair. \"Why don't you call it an early night and just relax.\"\n\n\"I have too much work to make up,\" I said, slightly pouting at how screwed I felt. \"Besides, I'm too stressed to relax.\"\n\n\"I know a few relaxation techniques,\" Kennedy offered teasingly. \"Besides, Abigail and I have been talking and we're going to help you. We know you don't want us to write anything for you, but we can do the research, and make some detailed notes for you to go off of. That would seriously cut down on what you have to do.\"\n\n\"You guys don't have to help me,\" I said. \"I got myself into this-\"\n\n\"And we're going to help you get out of it,\" Kennedy finished for me. \"We want to help. You're so tired, you look like you've been on the wrong end of an all-night gang bang...and not in a good way.\"\n\n\"Uh...thanks?\" I said, not knowing exactly how to take that last bit.\n\n\"Anything for you,\" Kennedy smiled comfortingly. \"Now, close your eyes and let mama take care of you.\"\n\nKennedy had me role over and she slowly began massaging me, starting at my shoulders and working her way down. The moment she began, I let out a long sigh and let my eyes close. After a few luxurious passes, she began lifting my shirt slowly.",
        "\"Are you just trying to get to my boobs,\" I mumbled from the hypnotic state I was in.\n\n\"It depends, did the doc give you the okay?\" Kennedy asked slyly.\n\n\"You're such a perv,\" I mumbled happily, feeling her thumbs run along my back as she worked my shirt up.\n\nI slowly raised up onto my elbows as Kennedy pulled my top over my breasts, and then helping me maneuver my arms and head out of it.\n\nHer hands continued their work along my back, and after a while I felt her unsnap my bra. I knew what she was really after, but what she was doing felt so relaxing.\n\nTen minutes later, Kennedy was nudging me to roll over and I was putty in her hands. She pulled the straps of my bra from my arms and began to rub my shoulders, then slowly down to my breasts.\n\n\"Gentle,\" I whispered, feeling her lips close around one of my nipples, teasing my flesh.\n\nHer soft tongue slowly circled and flicked at my swollen bud as her hand teased my other breast. It felt lovely; the way Kennedy was exploring my body. It was very pleasurable and relaxing the way she took her time.\n\nI became lost in the feeling of her lips and tongue, coupled with her hot, humid breath teasing me. Even the soft tickles of her hair with every subtle move she made, pulled me further under her spell as I basked in her worship.\n\nMy breast forms and I had always had a love-hate relationship. They were the breasts I never had, but I was always ashamed that they weren't real. I never took off my bra around anyone if I could help it, and even when they were touched, I never got anything out of it. Finally being able to feel what it was like to have someone lick and tease my sensitive breasts felt unimaginable.\n\nThings changed when I felt a second mouth on my opposite breast. A pair of soft lips kissed my hard nipple causing me to finally open my eyes. Looking down, I saw Abigail's smiling eyes staring up at me as she softly suckled on the tip of my breast.\n\nWith both of them here now, the gentle relaxing play that Kennedy started slowly began to escalate. I had loved how relaxing her treatment had been, but looking down at my two best girls as they sensually nursed from me, I couldn't contain my rising arousal.\n\nAs they both tugged down my panties from either side, I moved up onto my elbows in anticipation before Kennedy placed a hand on my chest to ease me back down.\n\n\"You just relax,\" Kennedy said as she let her fingers wrap around my cock to stroke me. \"We'll do all the heavy lifting.\"\n\nEven more eager than Kennedy, Abigail quickly stripped off her clothes and climbed back onto the bed, working her way up my legs until she was hovering right near my hips, just in front of where Kennedy was holding my rampant erection.\n\n\"Who's the eager beaver?\" Kennedy asked, amused.\n\n\"She is,\" Abigail smiled shyly as she ran her fingers down through her sparse crop of sexy pubic hair, slowly running circles around her excited clit.\n\nKennedy and I both giggled at her words.\n\nWhile it wasn't as athletic as we had become accustomed to, it was very sensual. We both watched as Abigail slowly lowered her tight pussy down my cock. Kennedy settled in next to me on her side, her long hair tickling my skin as she resumed kissing and gently massaging my breasts.\n\nAbigail's pace never faltered or increased as she rode me with small gyrating motions. After Kennedy's massage, it was easy to let my body relax under their care. I let my arm wrap around Kennedy, holding her close to me as I let their pleasure envelope me. With Abigail's slow pace, it took a while for my pleasure to build.\n\nAs soon as I felt that familiar tingle, my body began to tense up again. Kennedy, feeling my imminent release, increased her attention to my nipples. I could feel her teeth lightly grasping my nub to roll back and forth, mixing slight amounts of pain to my pleasure. Reflexively, my fingers gripped her hair, but the sensations she was causing felt amazing, sending even more tingles through my body. Just as I came, she bit down hard, forcing me to cry out as I shot blast after blast of cum into Abigail's talented pussy.\n\nA short while later, we were huddled naked with the covers pulled over our heads. The heat from our bodies and combined breath easily warmed the confined space. It felt liberating to be free like this, not feeling the need to wear a bra to hide my shame. And the pleasure! I had never been into nipple play before. I loved playing with other peoples, but as for my own, it was never a consideration. The way it felt to have Kennedy licking and sucking on them...and biting them...I never knew how much I was missing out on.\n\nI felt so relaxed, but at the same time so awake now.\n\nA strange thought came into my mind.\n\n\"How do you guys decide?\" I asked, before really thinking about it.\n\n\"Decide what?\" Abigail asked beside me.\n\n\"Who goes first?\" I elaborated, realizing they hadn't been privy to my full chain of thought. \"I mean with me.\"\n\n\"Rock, paper, scissors,\" Kennedy replied kissing my rib-cage.\n\n\"So, I pretty much never had a say?\" I asked, amused.\n\n\"Nope,\" they both replied in unison before giggling.\n\n*** *** ***\n\nWith Kennedy and Abigail's help, and expert use of relaxation techniques, I was nearly caught up with my workload by Tuesday. I hadn't really expected their help to make as much of a difference, but Abigail busted through all two hundred pages of my reading, consolidating it down to just over twenty pages of detailed notes on everything I should know. While she did that, Kennedy spent her considerable free time doing research online for the papers I was writing, cutting my writing time in half.\n\nI only had one more exam to make up, and a couple more papers left. With the finish line in sight, it was time for a little celebration. That and I was suffering from a severe bra deficiency.\n\n\"You've had the all clear for almost a week,\" Abigail said as I hooked my bra in place. \"Don't you think it's time to get some new bras?\"\n\n\"It's fine, Abigail,\" I said looking down at it.\n\n\"If by fine, you mean it should be taken out back and shot, then we're in agreement,\" Kennedy said coming up behind me. \"Say it with me girls,\" she said hooking an arm around Abigail and I. \"Cleavage! You got boobies now! It's time to show a little skin!\"\n\n\"Skin?\" Abigail asked. \"It's still sixty degrees outside.\"\n\n\"That's summer weather in Minnesota,\" Kennedy shrugged. \"I'm not saying you gotta slut it up, but maybe just a demi-cup or something. Just anything to get rid of that hideous thing.\"\n\nShe was right, this bra was definitely built with only functionality in mind. It was a plain tan color with thick shoulder straps and soft, bulky material.\n\n\"How about we just pick up one or two while we're out?\" Kennedy offered. \"You said we were taking the night off anyway.\"\n\n\"Fine!\" I acceded. It was hard to be angry with her pestering, because she was right. My bra collection had gone from dozens, to just two in the last few weeks.\n\nBra shopping was a lot different than I last remembered. When you can actually feel the material on your breasts, you become a lot pickier. Also, there was more breast to support, making wrangling these puppies into a bra that would comfortably hold them more of a challenge.\n\nKennedy and Abigail were more than willing to offer suggestions and help trying them on. One surprise was my cup size. I was a D. My breasts were essentially the same size as Kennedy or Abigail's, but a smaller frame equals a larger cup size.\n\nSurprisingly, as soon as our shopping was under way, Abigail had just as much input on my selections as Kennedy. She had been rather passive for the most part, but she was just as eager to push me towards something skimpier as Kennedy was.\n\n\"They're fake,\" Abigail said as I tried to push away a very flimsy and transparent blue lace number. \"You're not really looking for a whole lot of support.\"\n\n\"You'll be able to see my nipples through that!\" I countered.\n\n\"It's kind of the point,\" Abigail replied. \"Try it on and let us see.\"\n\nThey took a lot of pleasure from checking me out in all the different bras.\n\nWhen we finally left the mall, I had six new bras that were deemed worthy of purchase, and a new top, a belated boob-day gift from Kennedy that she insisted I wore out of the store. It was a tight-fitting long sleeve V-neck t-shirt that stretched provocatively across my breasts and revealed, what I felt was, an uncomfortable amount of cleavage. It was hard getting over the habit of constantly making sure my breast forms were completely covered.\n\nFor their help, dinner was my treat. I took them out to one of the nicer steak houses by campus. As we ate, we chatted about what we were doing for Valentine's Day on Saturday. Kennedy seemed set on having a movie night on the couch in the common room. We would pretty much have the place to ourselves that night with almost every other girl in our room having a date. Skylar was the only one besides us without plans, and she was usually a riot to hang out with. If she wanted to spend some time with us for a night on the couch, none of us had any objection.\n\nI could tell that Abigail was looking a little uncomfortable with all of Kennedy's Celebration of Single talk, so I steered the conversation away which landed onto a topic they were both very fond of at the moment...my breasts. That was fun. Both of them talking enthusiastically about my new boobies while the server refilled our drinks.\n\nAs we walked back to my car, Kennedy and Abigail were having a good laugh over how hard our server was perving down the opening of my top. I was blushing like mad, but I kind of liked that he took notice. I knew exactly how I felt when I saw some really pretty breasts, and knowing that he saw me like that left me feeling empowered.\n\nAs we were getting into my car, I received an email alert and quickly thumbed it open.\n\n\"What's wrong?\" Abigail asked, seeing my mood sour.\n\n\"It's an email from Mrs. Reynolds, she's in charge of Scholarship,\" I said a little forlorn. \"She wants to see me tomorrow to discuss my academic performance.\"\n\n\"You're almost all caught up!\" Kennedy defended. \"Why would she want to see you?\"\n\n\"Probably because the grades haven't been submitted yet,\" I offered sadly. \"That, and with all of the penalties for turning in assignments late...\"\n\n\"You'll be fine,\" Abigail said soothingly as she rubbed my shoulder from the back seat.\n\nI hoped she was right. I had put in so much work getting back on track. I was still kicking myself for letting things get so bad. I had become so blinded by my quest for breasts that I had almost let my life come to ruins. As sad as it sounded, all I had right now were my friends and Mayweather. I just hoped that I had corrected things before it was too late.\n\n*** *** ***\n\n\"Hi. I'm Lexi Allen. I'm here for an appointment with Mrs. Reynolds,\" I stated to her secretary. \"It's about my scholarship.\"\n\n\"I'm not seeing your name here,\" the secretary stated slowly as she scanned the appointment book.\n\n\"I got an email last night that said to be here at two o'clock,\" I offered.\n\n\"I see,\" she said tapping her finger on one of the many post-it notes on her desktop. \"You're to go to the second floor, Mr. Decker's office.\"\n\n\"The Assistant Dean?\" I asked, feeling a little worried.\n\n\"That's the one,\" she said jovially. She obviously didn't realize what a creep the man was.\n\n\"Um...Do you know why I'm seeing him?\" I asked cautiously.\n\n\"I don't know,\" she said. \"Mrs. Reynolds made the change earlier today.\"\n\nFeeling more worried now than I was when I walked into the building; I slowly turned away from her desk and began moving towards the stairs. The last time I'd had an encounter with Decker, I barely got out of it. The man seemed to have it out for me, and I had no clue as to why.\n\n\"You can go right in Miss Allen,\" his secretary said upon seeing me enter the outer office. \"He's expecting you.\"\n\n\"You're late,\" Mr. Decker stated as soon as I stepped into his office.\n\n\"I only just found out about the change,\" I explained. I was only two minutes late, and I had to walk up a flight of stairs in heels.\n\n\"Tardiness is a very unbecoming trait, Miss Allen,\" Mr. Decker said, blatantly talking at my breasts as he leaned back in his chair. \"So are excuses.\"\n\nI could already feel a slow boil of anger rising inside of me. I didn't know exactly what it was about this man, but within seconds, and with a few short words, this man had the ability to infuriate me to no end. The way he looked at people, and his general attitude, seemed to just set me off.\n\nKnowing that I was already in trouble, I resolved to speak as little as possible here. The last thing I needed was for this to devolve into me screaming at him.\n\nAs I waited for him to continue, his creeper-eyes seemed glued to my breasts. For the first time since I had gotten them, I wished I hadn't so he wouldn't be able to stare at them. And I wanted to burn this damn jacket. It was nice, a short leather motorcycle style jacket, but with my added volume, it no longer wanted to close all the way, accentuating my new assets.\n\n\"I've taken a special interest in your scholarship status,\" he eventually continued, thumbing through some papers on his desk. \"Your first semester here was...adequate-\"\n\n\"I aced all but one of my classes!\" I cut in defending myself.\n\n\"Please don't interrupt,\" he said in a firm, steady voice. \"As I was saying, your first semester was adequate, but this semester you seem to be failing half of your classes. In order to keep your scholarship, you need to maintain a C plus average. Now, I've spoken with your teachers, and they've been telling me that you haven't been attending classes regularly, and that your assignments have either been turned in late, or not at all. What do you have to say for yourself?\"\n\n\"I have been having some personal issues,\" I began. \"But that's over now. I've caught up on all of my assignments already and my grades will go up.\"\n\n\"Really? Another excuse?\" he asked. \"And a flimsy one at that. What are these personal issues that have brought you to the brink of losing your scholarship?\"\n\n\"It's personal,\" I said, not wanting to tell him the truth.\n\n\"I see,\" he sneered. I could almost feel him thinking that my breasts were larger as he leered at them.\n\nHe stared at me for a few moments with his fingers steepled against his lips as he leered at my body. I wholeheartedly wished that I was wearing a different top right now. I could feel his creepy eyes, like branding irons on my exposed cleavage. Damn Kennedy.\n\n\"You're being put on academic probation starting immediately,\" he began again. \"If you miss one class, one assignment, one test, your scholarship will be pulled. If there are any disciplinary problems, whether you start them or not, you will be gone. And don't think your friend's daddy will be able to help you. Am I understood?\"\n\n\"Yes,\" I said fighting the urge to throw something.\n\n\"You will also be seeing one of our academic counselors twice a week until your grades are all above a C plus average,\" he said before curtly dismissing me. \"You can go Miss Allen.\"\n\nI was so pissed that I didn't even realize where I was going. By the time I looked up, I was all the way on the other side of campus in the opposite direction of the dorms. Turning to go back to Evens Hall, I tried to calm myself. Yes, Decker was a gigantic sack of dicks, but that wasn't exactly a newsflash. I already knew that I was close to losing my scholarship, and I had done everything I could to fix it. What really hurt was that tool rubbing it in my face.\n\nAs I calmed down, I tried to think of why he had it out for me. It wasn't like I fucked his daughter or anything, and he couldn't know about me or I would have been expelled already. Nothing seemed to come to mind. Something that did come to my mind however was that I totally missed out on a chance to see if my plan with the keypad and nail polish had worked on his office. Kennedy was going to be pissed. We had all been a little distracted lately, but at the first mention of Decker, she would be asking if it was working.\n\nI was almost to Evens Hall when my phone buzzed inside my back pocket, and all the calm I had worked so hard to cultivate evaporated.\n\n*** *** ***\n\n\"What the hell is this?\" I asked, angrily barging into our room, holding up my phone in front of Abigail's face.\n\n\"It looks like a message from Danny,\" she answered carefully.\n\nCatching that something was going on, Kennedy pulled her ear buds out and sat up on her elbows.\n\n\"Yeah, it's a message from him confirming our date for Friday night!\" I shot back at her. \"A date I specifically told you that I didn't want to go on.\"\n\n\"To be fair, you never said you didn't want to go,\" Abigail said. \"You told me you didn't have the time with all of your class work. You don't have that problem now.\"\n\n\"You know damn well why I told you to cancel!\" I raved, wondering how I was going to fix this.\n\n\"Maybe stop being a pussy!\" Abigail yelled back at me, jumping to her feet and startling me.\n\nWe both stared angrily at each other for a few moments, Kennedy watching open mouthed. My anxiety finally battered down my anger though. I was afraid to tell Danny that I was a transsexual.\n\n\"You have nothing to worry about,\" Abigail said in a softer tone, seeing my mood change. \"Kennedy and I know about you. We both love you. And what about your friend Josh?\"\n\n\"Don't forget Miss June,\" Kennedy piped in from her post on the bed, reminding us of her presence.\n\n\"How can we forget about Miss June,\" Abigail said flatly, giving Kennedy a look. \"Too soon.\"\n\nShe still forgave Kennedy and I about keeping my sister's identity a secret, but it was still a bit of a sore topic.\n\n\"What I'm trying to say is you're an amazing person,\" Abigail continued. \"I can't see a scenario where he won't accept you.\"\n\n\"Thanks, Abby,\" I smiled weakly. Her sincere evaluation of me was welcomed, but I still didn't have the faith that she did.\n\n\"Group hug?\" Kennedy asked, adding a little comic relief causing all of us to laugh.\n\n\"Don't trust her,\" Abigail whispered loudly. \"She just wants to get handsy.\"\n\n\"Hell yeah, I do,\" Kennedy laughed.\n\nNervous about what was to come, I was able to keep Kennedy at bay while I tried to figure out what was going on. It turned out that Abigail sent more than one message to Danny from my phone that day. Since Danny had work on Saturday, he wanted to do our date on Friday. It was a little short notice, but with all my work caught up, I didn't really have anything else planned. One thing that bothered me was the severe lack of details. Abigail told me the only thing he said in his message was to dress fancy.\n\n*** *** ***\n\nIt was the big day, and our predate preparations had begun yesterday. Last night, Abigail and Kennedy made sure my skin was waxed silky smooth, and redyed my hair. My roguish bob had been growing out and it was now down to my shoulders in the back, and in the front, it was tickling my collarbone. Keeping with my original style, we stuck with the blonde over black. There was a brief moment where I contemplated getting it cut again, but I decided against it. I wanted to let my hair grow out some, even if it meant going through that in between haircuts phase. Despite the amount of work involved, Kennedy and Abigail seemed to take great pleasure in helping me.\n\n\"He better appreciate this,\" Kennedy nearly shouted over the hair dryer she was using to dry my nails.\n\n\"Don't be silly,\" Abigail shouted back smiling. \"He's going to love it!\"\n\n\"I hope so,\" I said nervously, the sound of the hair dryer swallowing my words. \"What I'm still trying to figure out, is how you didn't think to press for details about this date he has planned,\" I directed to Abigail who was working a curling iron on my hair.",
        "\"I assumed it was supposed to be a surprise,\" Abigail shrugged.\n\n\"Trust me, there will be enough surprises on this date. The last thing we needed was more,\" I said.\n\n\"So, you're really going to tell him then?\" Abigail shouted, her words ringing out as Kennedy shut off the hair dryer.\n\n\"That's the plan,\" I sighed.\n\nAbigail was finished. I didn't know how she did it, but those loose, casual looking curls of blonde and black hair perfectly framed my face giving me an elegant look. I hadn't been expecting very much with my hair style, but this was something else.\n\nWe had started getting me ready three hours before Danny was supposed to pick me up, and now, thirty minutes before seven o' clock I was finally able to sit and take a breather.\n\n\"You should go just like this,\" Kennedy said smiling at me from her place on our bed. \"Forget the dress.\"\n\nI wasn't sure I could do that. Abigail wanted to make it up to me for her deception, so she was letting me wear her dress again. The dress. The red silk one with the black coral beading that swirled down from the bust. She knew exactly how that dress made me feel the last time, and after Danny told her I should dress fancy, she immediately thought of me wearing it for him.\n\nNot wanting to wrinkle it in any way, I had postponed donning it until the last minute. Currently I was completely topless, only wearing black silk stockings with a garter to hold them up, a pair of lacy black panties showcasing my perky ass, and my Christian Louboutin heels courtesy of Abigail.\n\n\"While I'm sure he would enjoy the sight,\" I began, \"It will be hard enough keeping warm in my dress as it is.\"\n\n\"If things go really well, you won't need the dress to keep warm,\" Kennedy shot back as she quickly ducked out into the common room for a moment.\n\n\"Do you really think you'll sleep with him?\" Abigail asked quietly as soon as the door shut behind Kennedy.\n\n\"Maybe,\" I blushed a little. I may not have been a stranger to anal play, but admitting that I was more than ready to sleep with a guy still rubbed up against my emerging feminine modesty. And there was no way that my obvious deflection was anything but a flat-out confession in her eyes.\n\nI didn't know what I expected from Abigail, but the amount of blushing and avoidance of eye contact wasn't on the list. \"What's it like?\" she asked. \"You know, having something in there?\"\n\nI was a little taken aback that she wanted to know, but I guess it was only natural. When Abigail lost her virginity to me, her and Kennedy talked about it all in incredible detail, comparing notes. I decided to tell her the unvarnished truth.\n\n\"I thought it would be disgusting and horrible,\" I admitted. \"And it did hurt a little the first time, but there was so much more,\" I smiled, recalling the sensations. \"It was so dirty, but in a hot way, and feeling him so hard inside of me...it was incredible, but it wasn't the best part. With every thrust, I felt something building inside of me, something powerful. It swelled and pulsed, and filled me up until I couldn't take any more, and then it filled me some more. When I finally came, it was like an explosion ripping through my body and waves of pleasure crashing down on me at the same time. It was the single best thing I've ever felt,\" I smiled thinking about it.\n\nAbigail was panting slightly from my recitation as Kennedy burst back into the room.\n\n\"Just in case,\" she said holding up the square package of a condom.\n\n\"Kennedy!\" Abigail exclaimed.\n\n\"Like we all haven't been thinking about it,\" she scoffed. \"Besides, Skylar's got a ton of them. She won't miss it, and better safe than sorry,\" she finished as she tucked it into my small clutch.\n\nJust then my phone began to beep and buzz on the vanity and I hopped up to check it. \"He's early!\" I nearly squealed, seeing his message on my phone that he was already downstairs.\n\nAll three of us quickly jumped into action. Abigail held my gown open and Kennedy gave me a steadying hand as I stepped into the back of the dress. Abigail was very gentle, working around my hair as she fastened the halter-top while Kennedy smoothed and straightened my skirts. Looking down and seeing my bright red toenail polish peeking out from my open toed heels, I was glad Kennedy talked me into painting them as well.\n\n\"I think we're all set,\" Abigail said taking a step back to look me over. \"Oh! Umm.\"\n\n\"What?\" I asked, worried. \"What's wrong?\"\n\n\"It's... nothing,\" Kennedy tried to assure me.\n\n\"Kennedy!\" Abigail admonished. Then in a more gentle tone she addressed me. \"We have a slight...wardrobe malfunction.\"\n\n\"Did it rip?\" I asked, scared for the beautiful dress.\n\n\"Well...no,\" Abigail tried again.\n\n\"What she's trying to say is you have slightly more boobs than the last time,\" Kennedy said.\n\n\"What?\" I asked, twisting by the mirror.\n\nKennedy wasn't lying. You could clearly see the round curve of my breasts coming out the sides of the dress. The way the halter slowly curved as it ran down my side to my lower back left very little forgiveness for boob size. I had never even thought to try it on again to check the fit. My change in breast size never factored into any of my thoughts for this date.\n\n\"Let me see if I have something else you can wear,\" Abigail said rushing to her closet.\n\n\"Leave it,\" Kennedy said, letting the back of her fingers brush against my exposed flesh, sending small chills through me. \"A little side boob action never hurt anyone.\" Then to me, \"Are you ready?\"\n\nI swallowed nervously as I nodded my head and she handed me a small black clutch with my things in it. I was embarrassed by how my breasts were exposed, but really, in the grand scheme of things, my breasts weren't that big of a deal right now.\n\n\"You're going to be great,\" Abigail said reassuringly as her and Kennedy walked me down to meet Danny. \"Deep breaths.\"\n\n\"If anything goes wrong, call us and we'll be there in a flash,\" Kennedy whispered from my other side.\n\n\"Nothing is going to go wrong!\" Abigail said shooting a fierce look at Kennedy across me.\n\nI felt so over done for a simple Valentine's date. I received a lot of looks from girls as we walked the halls and they took in my rich, elegant gown. Surprisingly, none of them batted an eye at my side boob, and most of them even seemed friendly. It was a nice change from our pre-Christmas, near-social exile.\n\nNot feeling so judged, I began to feel more relaxed.\n\nThat all changed the moment we reached the wide staircase leading down to the ground floor. The moment we turned the corner I caught a glimpse of him through the banister and my heart floated up as if gravity had abandoned it.\n\nDanny stood in the middle of the foyer in a black and white tux, complete with bow tie and cummerbund. I had seen him dressed nicely before, in dark jeans and button up shirt, but this look was something new altogether. His dark brown hair was neatly combed, and even his eyes seemed to sparkle.\n\nThe way he stood, with his hands clasped behind his back, left him looking strong and resplendent. I had never before thought that a man could look beautiful, but if any man ever did, it was Danny, here and now.\n\n\"You look...\" he began as I made the last few steps down the stairs. \"Wow!\" he finished, slightly shaking his head as his eyes drank me in.\n\n\"Thank you,\" I blushed after a gently reminding prod from Abigail beside me. \"You look beautiful too. Handsome...I meant handsome!\"\n\n\"From you, I'll take whatever I can get,\" he smiled before revealing the bouquet of dark red roses behind his back. \"These are for you.\"\n\n\"They're lovely,\" I said, accepting them and pressing them to my nose to take in their scent.\n\nWe spent a few moments awkwardly staring into each other's eyes before Kennedy broke our little trance.\n\n\"Well, we just wanted to see Lexi off,\" Kennedy said.\n\n\"Oh...Uh...It's nice to see you again Kennedy... Abigail,\" he said remembering his manners, or just that anyone else existed around us. I didn't fault him; I was having the same problem.\n\n\"You two have a good night,\" Abigail smiled, slightly tugging Kennedy back up the stairs with her.\n\n\"Are you ready?\" Danny asked holding out his arm.\n\n\"As I'll ever be,\" I smiled nervously, letting my arm slip into his.\n\nThe walk back to his car was silent except for the distinct click of my heels on the pavement beneath us.\n\n\"Is this your car!\" I asked when he led me towards a shiny black muscle car.\n\n\"Yeah,\" he said a little surprised. \"You like it?\"\n\n\"Is this a 74' Skylark?\" I asked admiring how pristine it looked.\n\n\"It's a 72' actually,\" he said looking a little relieved. \"I was worried that my car would spoil the image of our fancy evening. I almost borrowed my aunts Lexus.\"\n\n\"This is way better than any Lexus,\" I smiled.\n\nLike the gentleman he was, he opened the door for me. Thankfully I had already had some practice in this dress and I carefully sat on the seat and twisted into the car, minding my skirts in the process. As I leaned back in the seat, I was once again reminded of my fully exposed back as the cool fabric sent a chill through my skin.\n\nAfter closing the door for me, Danny raced to the other side of the car and hopped in. As the engine came to life, another set of thrills swept through me as I felt and heard the low throaty rumble from the eight-cylinder engine.\n\n\"So, what do you have planned for tonight?\" I asked once we began moving.\n\n\"Are you sure you wouldn't prefer it to be a surprise?\" he asked, giving me one of his charming smirks.\n\nI couldn't help but blush under his eyes. To distract myself from the overwhelming feelings I was having, I began fiddling with the flowers in my lap. I had never been given flowers before, and as a boy I found them tacky and clich\u00e9. As Lexi, something in me melted at the thought of a guy giving me something so delicate and beautiful.\n\n\"Can I at least get a hint?\" I asked.\n\nHe paused for a long moment before responding.\n\n\"There will be dancing,\" he said a little too carefully.\n\nDuring our drive we listened to the faint music coming from the radio, and talked about our lives. I knew Danny was going to school for engineering, but he had never really told me where that decision had come from. For that matter, I didn't know very much about him at all really. I knew how he made me feel, and I knew how kind and passionate he could be. Most of the things we had talked about on the phone had been about our daily lives. Somehow, we had never gotten into the deep personal stuff.\n\n\"Well, once I learned what a screwdriver was, it was pretty much downhill from there,\" Danny said as he drove. \"I took apart anything I could get my hands on. My toys, appliances, nothing was safe really. I remember one time my aunt came home to find our TV set in pieces on the living room floor. She was furious!\" he chuckled remembering. \"We were both surprised when it still worked after I put it back together. I never did figure out how the picture got on the screen though.\"\n\n\"That's funny!\" I laughed. \"So, you live with your aunt?\"\n\n\"Not anymore, but she raised me,\" he said. \"My parents died when I was about seven and she took me in. I've had my own place since I finished high school though.\"\n\n\"I'm sorry to hear about your parents,\" I said.\n\n\"I was really young,\" he said shrugging uncomfortably. \"I don't remember them that much. You know, you could come and see my place sometime...if you're that interested in my living situation.\"\n\n\"Slow down, Romeo,\" I laughed touching his arm softly. \"It's only our first date.\"\n\n\"Really?\" he asked. \"What about those other times?\"\n\n\"Abigail and Kennedy said that they don't count,\" I informed him. \"A date is when you ask me out and then we go out, not when we run into each other while we're both already out.\"\n\n\"Ah,\" he mused. \"Well, we'll have to fix that then, won't we?\"\n\n\"I hope so,\" I said sincerely.\n\nWe were driving in downtown Phoenix for a few minutes before Danny announced we were close. I was really beginning to wonder where we were going as I looked out the window for clues.\n\nWhen we pulled up outside the Phoenix Symphony Hall, I was surprised. Out of all the guesses I had running through my head, this wasn't even on the list. A valet quickly came to open my door and help me out of the car, and after getting a ticket, Danny quickly joined me.\n\n\"I really hope you don't mind the ballet,\" he said taking my arm. \"My aunt gets tickets to these things, but never goes. I thought this would be a perfect place to take you for Valentine's.\"\n\n\"I've never actually been to a ballet before,\" I confessed. As new as it was to me, I was still excited to experience this.\n\n\"Really? For some reason I thought you would have been before,\" he said looking slightly crestfallen.\n\n\"What are we seeing?\" I smiled, leaning into him slightly as we walked inside.\n\n\"Cinderella.\"\n\nAs we walked up the steps to the entrance, I saw many other people dressed just as nicely as us in dashing tuxedos and elegant gowns. I felt extremely out of place in a crowd like this, and I was thankful of this gown that Abigail let me wear. In anything that I owned, I would have felt so self-conscious.\n\nWaiting for the ballet to start we grabbed a couple cocktails in the lounge and continued our conversation.\n\n\"The last time we talked, you told me you and your mom were having a fight, have you guys worked that out?\" Danny asked me.\n\n\"No,\" I began, not exactly liking the direction our conversation was going. \"I don't think we will either.\"\n\n\"That's too bad,\" he offered.\n\n\"Not if you knew my mother,\" I countered.\n\n\"Where will you go after you graduate?\" he asked. \"Will you go back to Colorado?\"\n\n\"I don't really see any reason to,\" I said. \"And there are some pretty good reasons to stay right here.\"\n\n\"Am I one of those reasons?\" he asked, leaning in a little closer.\n\n\"I'll let you know,\" I smiled feigning a little coyness. If tonight went well, he would be. I just wanted to get through this night first.\n\nThe ballet was more than I ever expected it could be. The music and amazing dancing was spectacular. The way they used their movements to portray their love, and the danger, as well as Cinderella's transformation...The story seemed to resonate with my current situation in life. My own mother the wicked stepmother, Danny the handsome prince, and my sister and best friends standing in for the fairy godmother.\n\nI twirled a single rose in between my fingers as I walked out of the theater with Danny after the ballet ended. When our date first began, I felt like I had forever to tell him the truth, but time seemed to be slipping away from me now. I knew I had to tell him tonight. If I didn't do it tonight, then I never would. I could feel my heart racing in my chest at the thought of finally coming clean.\n\n\"We still have some time before our dinner reservations,\" Danny observed, causing me to jump at the sudden sound of his voice. \"Are you okay?\"\n\n\"Yes, I'm fine,\" I smiled trying to cover my reaction. \"Just a little cold is all.\"\n\n\"I can imagine,\" he said, quickly removing his jacket to rest it on my shoulders. \"That dress is beautiful, but it doesn't cover very much in the back...or the sides.\"\n\n\"No, I guess it doesn't,\" I blushed at his reminder of how exposed the sides of my breasts were.\n\n\"You're so beautiful when you're blushing,\" he observed.\n\nHe was so close to me as he settled his jacket on my shoulders, I could feel the warmth from his body, a blissful welcome to the chilly night air. I looked up into his eyes as his hands rested on my shoulders and I felt so small next to him, so vulnerable, but so entranced at the same time. I had felt those lips before, and the feel of his embrace. I craved that sort of touch from him.\n\nMy thoughts left me as I closed the last few inches between us to wrap my arms around his neck. I lifted up as far as I could on my heeled feet and pulled him down to meet my lips. His firm chest pressed into me, and his arms snaked around my waist underneath his coat and I could feel his cold hands warm themselves on the bare skin of my lower back.\n\nAs my lips tugged at his, and our soft tongues danced, I felt a passion building between us. His hand slowly traveled up my back, teasing my skin, and I could feel his forearm brush against the side of my breast, nearly causing my cock to surge forth, attempting to free itself from my panties. The mere thought of that happening shocked me out of my trance and I quickly pulled away gulping as I tried to catch my breath.\n\n\"Are you okay?\" Danny asked seeing my reaction and the panic in my face. \"Did I do something wrong?\"\n\n\"I'm...I'm...\" I began. \"No, you didn't do anything wrong,\" I finally said, turning away from him, scared about what I had to do next.\n\nI had planned on waiting until later on in the night to do this, but it seemed that I couldn't trust myself with him. I had told myself that I wouldn't do anything more with him until he finally knew the truth. The last thing I needed was for him to have one more fresh memory of deceit from me. After that kiss, it was too late.\n\n\"I need to tell you something,\" I began, speaking to the air in front of me. \"Something about me.\"\n\n\"What is it?\" He asked with gentle concern as he rested his hands on my shoulders. \"What's wrong?\"\n\n\"I've been lying to you about me,\" I choked out. \"I'm not who you think I am.\"\n\n\"It doesn't matter,\" he said gently stroking my shoulders. \"I care about you.\"\n\n\"When we met that first time, you were so nice to me,\" I continued, ignoring his words. \"I never thought I would see you again. Then I saw you again and you remembered me. We'd been drinking and I let things go a lot farther than I should have. I never meant for any of this. I promise,\" I said fighting back tears. \"At first it was just something about me you didn't know, but the more we saw each other and the more we talked, it became something I was lying to you about.\"\n\n\"It's okay,\" he tried calming me down. It was plain by my quivering voice that something was wrong. \"I don't care what it is. There isn't anything you could say that would make me not love you,\" he said. \"Since I first saw you, I felt something between us. When I didn't get your number that first time, I was kicking myself for letting someone like you get away. When I saw you again, I thought it was fate giving me another chance...another chance to be with you.\"\n\n\"When I wake up, you're the first thing I think about, and when I go to sleep you are what I dream about,\" he said gently turning me to face him, tilting my chin up to softly kiss my lips. \"I hope you feel the same.\"\n\n\"I do,\" I said quietly before summoning all the courage I could. Not able to speak and look him in the eyes, I looked down. \"But I was born a boy,\" I nearly whispered.\n\nI spoke so softly I wasn't sure he heard me. Things seemed to slow down around me. His hands on my shoulders didn't move, and it seemed as if we both had stopped breathing. Finally, he began laughing and I thought for a moment that everything would be okay. As he laughed, I looked up into his eyes with so much hope.\n\n\"You totally had me!\" he said, still chuckling. \"There is no way you were ever a boy!\"\n\nIn a moment, my hope was dashed. As he looked down at me, thinking that this was all some sort of joke, I began feeling more and more let down. I should have never told him, I thought sadly to myself. Part of me wanted to play along and tell him that this was all a big joke, but I couldn't. I had already done the hard part, and if he didn't accept me then I could move on and forget about him...eventually.\n\n\"Wait,\" he said, his expression changing. \"You're...you're being serious,\" he said taking a step back, his eyes scrutinizing me even further.\n\n\"Yes,\" I said sadly. I could feel the tears welling up in my eyes as I saw his expression change, first from concern, then to hurt, and finally to anger.",
        "\"You're a...\" he began loudly, before looking around and lowering his voice. \"You're some kind of fag?\" he asked.\n\n\"I'm a woman now,\" I said, trying and failing to sound firm.\n\n\"You're a freak! Oh my God!\" he said, touching his lips as he stared at me. \"I think I'm going to be sick.\"\n\n\"Please, Danny!\" I tried, reaching for his hand.\n\n\"No!\" he said firmly. \"I can't believe you! How could you do this to me? I'm not gay!\"\n\n\"Danny!\" I pleaded, feeling the first tear fall on my cheek.\n\n\"I can't do this,\" he said with a quiet rage as his hands balled up at his sides. \"We never met. I don't know you,\" he said backing away from me as he shook his head in disbelief.\n\nAs I watched him go, I felt more ice-cold tears run down my cheeks. I didn't know how long I stood there, hoping that he would come back, but by the time I pulled myself together my feet ached in my heels.\n\nI made my way towards the street as I called myself a cab. The driver, an older gentleman, commented on my nice dress as I got in, but I barely heard him. I guess he could feel my mood because after I gave him my address the rest of the ride passed in silence.\n\nBefore we arrived at the dorms, I dabbed away my tears and touched up my makeup from the back seat. My emotions were still reeling from tonight's events, but I firmly stomped them down as I tried to compose myself. As soon as the cab came to a stop, I paid the cabbie and got out, leaving the single red rose on the seat behind me. As beautiful as it was, and as nice as it was to receive, the last thing I needed was another reminder of this awful night.\n\nI made it halfway to Evens Hall before I had to stop and remove my heels. I wasn't used to walking in something so high yet, and any more added pain might just break what little composure I had managed scrape together. Holding my dress off the floor, I kept my head down as I climbed the stairs to my suite. After passing through what felt like a crowded common room, I was finally in my room.\n\nAs soon as I closed the door behind me, and saw Kennedy and Abigail lying together on our bed watching a movie on their laptop, I broke down.\n\n\"You were supposed to call us!\" Kennedy exclaimed, seeing how upset I was.\n\nShe quickly jumped out of bed to pull me into her arms, and Abigail wasn't far behind her. They guided me over to the bed where I sat down, and they comforted me as I cried my eyes out. I didn't need to tell them how it went or give them the play by play. They knew exactly how bad it went and forcing me to relive it was something they would never ask of me.\n\n\"I'm so sorry,\" Abigail said as she stroked my back through Danny's jacket that I was still wearing on my shoulders. \"He doesn't deserve someone as special as you.\"\n\nI let their words wash over me as their gentle touch comforted me. I wasn't sure how much of what they said I really believed. I had really liked this man and felt incredible with him. To have it turn out like this was devastating.\n\nA year ago, I would have never cried over a girl, let alone a guy. I hadn't really noticed exactly how much I had changed until I wept openly in the arms of my friends. I just wished it didn't hurt so much.\n\nThey held me for a long time before my tears finally stopped. When I reassured them that I was okay, Abigail helped me to my feet, and together they undressed me, and tucked me into bed with one of them on either side of me. In the dark, they stroked my soft skin underneath the warm covers until I finally drifted off to sleep.\n\n*** *** ***\n\nI awoke to sunlight pouring in from the gap in the curtains, and an empty bed. My first thought was disappointment that Kennedy and Abigail weren't there, but as I scrubbed the sleep from my eyes, I recalled how horribly my night had ended. I had known it was a long shot that Danny would be okay with me, but knowing something might end badly, and experiencing it, were two different things. Before I could sink under another tidal wave of self-pity, Abigail opened the door, carrying a tray with food on it.\n\n\"My dad always makes me waffles when I'm upset,\" Abigail said setting the tray across my lap.\n\nOn the tray was a giant waffle with strawberries, whipped cream, and maple syrup. I still felt awful, like I was somehow physically ill, but the food smelled delicious. I was hungry, and not wanting to disappoint Abigail, I sat up in bed and took a bite.\n\n\"It's good right?\" Abigail smiled hopefully as she sat beside me.\n\n\"It's delicious, Abby,\" I said truthfully. \"Thank you.\"\n\n\"You're welcome, Sweetie,\" she said, brushing a strand of hair from my face.\n\nI continued to eat while she quietly sat beside me, leaning against my shoulder. It felt nice to have her so close. I had almost taken for granted how amazing my friends were. When they found out about me, there was no hesitation, no anger or ridicule. They accepted me completely, and they loved me.\n\nI had hoped Danny would be the same way, but the law of numbers was unbeatable. With so many people accepting me so willingly, I was bound to eventually run into someone who hated everything that I was when they found out. I just wished it didn't have to be Danny.\n\n\"Kennedy and I are still going to watch movies tonight,\" Abigail said beside me. \"We could use our best friend with us,\" she finished.\n\n\"I don't know,\" I began. \"I might not be the best company.\"\n\n\"With two other girls who couldn't find themselves dates for the big day?\" Abigail asked. \"I think you'll fit right in. Kennedy's picking up some romantic comedies for us to watch. We can laugh and cry together while we eat popcorn and junk food.\"\n\n*** *** ***\n\nI was still a little reluctant to be a part of this little pow-wow. My stomach was still in knots, and all I wanted to do was burrow myself under the blankets and sleep away my misery. What sealed it for me was the fact that I didn't have to get dressed up, and I only had to walk fifteen paces.\n\n\"Where's Skylar?\" I asked, letting myself fall into the couch next to Kennedy. \"I thought she was staying in tonight too?\"\n\n\"Booty call,\" Kennedy said as she examined a couple DVD cases.\n\n\"She got a call a little bit ago and said she had to go out for a while,\" Abigail said.\n\n\"Make it sound as nice as you want,\" Kennedy said. \"It's V-Day and she got a last-minute call? She's out for a night of singles banging.\"\n\nKennedy's vulgar humor was refreshing.\n\n\"What happened to getting popcorn?\" Abigail asked, holding up an empty bowl from the kitchen area.\n\n\"We needed something a little stronger,\" Kennedy replied pulling out several heart shaped boxes of chocolates from the bag by her feet. \"Try feeling sad after a couple of boxes of these bad boys,\" she finished, tossing one to me, and another over the couch to Abigail.\n\n\"I don't think eating my way into my freshman fifteen is going to make me feel better,\" I said examining the box.\n\n\"Please,\" Kennedy scoffed looking at me. \"Your freshman fifteen is sitting on your chest. Besides, we can always find a way to burn some calories later,\" she said eyeing me with the same hunger she did for the chocolates.\n\n\"What movies did you get?\" Abigail asked finally taking her place on the other side of Kennedy.\n\n\"We've got The Notebook, Kate and Leopold, and Deadpool,\" she said ticking off the titles.\n\n\"Deadpool?\" Abigail asked. \"What's that about?\"\n\n\"It's a love story about this guy that has cancer and the woman he loves. He goes on this quest to find a cure for himself so that he can spend the rest of his life with her,\" Kennedy laid on thickly. \"It sounds kind of depressing, but it's really funny too. You'll love it.\"\n\nI couldn't believe Kennedy was trying to pass off Deadpool as a romantic comedy. I guess it was, in all honesty. There was enduring love, and comedy...but the movie was supposed to be a brutal blood bath of indiscriminate ass kicking. I popped open a box of chocolates and settled in. This night just got a little bit more interesting.\n\nIn true V-Day fashion, we started things off with the Notebook. In retrospect, that was a horrible movie choice. We found ourselves crying long before the end. As the credits began to roll, Kennedy hopped up to switch the movie, and after we all took a little stretch, we settled back in.\n\n\"Uh...Kennedy?\" Abigail said as the opening scene unfurled. \"I thought you said this was a romantic comedy?\"\n\n\"It is,\" Kennedy blushed slightly.\n\n\"The movie started like forty seconds ago and six people are already dead,\" Abigail pointed out.\n\n\"It only adds to the heartbreak,\" Kennedy said, sheepishly shrugging her shoulders. \"Trust me.\"\n\nAbigail settled in reluctantly and we continued to watch the movie. As uncomfortable as she was watching people being shot in the face, or having their limbs severed, I was actually enjoying myself. It had been a while since I could indulge in something like this. With all of my schoolwork and the added complications of being a new girl, I rarely found time for these old delights.\n\nAs the violence on screen progressed, Kennedy slipped her old friend from its hiding spot between the cushions. It had been a little while since I had seen her break out her flask, but with the mood of tonight, it was well fitting. Kennedy casually placed the tip of her pink dildo-shaped flask to her lips and began to suck. From the slight wince in her expression, it was tequila filling that phallus.\n\nWithout a second thought, I reached for it after she had her drink, and took a long pull for myself. With the exception of present company, my life felt like shit right now. I wasn't sure if I really loved Danny, but I felt for him strongly, and for him to throw me away like some repulsive piece of garbage...it hurt. I didn't think he would tell anyone, with the way he reacted, but the possibility of his anger getting the better of him still hung out there in the air, like some potential symbol of doom hovering over me.\n\nWith no solutions to my problem, alcohol seemed a perfect option. I let the tip slide into my mouth until I had my lips wrapped tightly around the crown, and began to suck for all I was worth. A warm flow of liquid splashed into my mouth leaving a bitter, distinct taste that was most definitely tequila. I quickly gulped down the fluid and went for more.\n\n\"Woah!\" Kennedy said, pulling the cock flask from my lips. \"Slow down there!\"\n\n\"What?\" Abigail said, pulling her eyes from the television to see what Kennedy was talking about. \"Really Kennedy, alcohol?\"\n\n\"Don't sound so shocked,\" Kennedy said eyeing her. \"Or so innocent. What else are we supposed to do? We're all alone on V-Day and our friend needs a pick me up.\"\n\n\"Please don't call it V-Day,\" I said reaching for the flask in Kennedy's hands only to have Abigail beat me to it. \"It makes me think of something venereal.\"\n\n\"Not far off...with all the action that'll be going on tonight,\" Kennedy speculated as Abigail succumb to peer pressure and sucked from the tequila cock.\n\n\"Kennedy, there's something I've been meaning to ask you about this flask,\" I began; finally putting voice to something I had thought about multiple times. \"If you use the flask to hide that we have alcohol in the dorms, how do you fill it back up?\"\n\n\"Haha!\" Kennedy laughed. \"I thought you were about to ask me if I use that as a dildo!\"\n\n\"Wait...Do you?\" I asked, now more curious about this turn.\n\n\"You guys tell me,\" Kennedy smirked. \"Do you taste a little something extra on that flask?\"\n\n\"Ew!\" Abigail cried out, quickly pulling her lips from the flask. \"That's gross!\"\n\n\"Really?\" Kennedy asked, turning to face Abigail. \"This from the girl that loves licking my pussy?\"\n\n\"That's different, I'm not drinking from your pussy,\" Abigail said.\n\n\"Speak for yourself,\" I said reaching over Kennedy for the flask and then taking another drink. \"So, how do you refill it?\"\n\n\"I have a couple bottles hidden in a pair of boots I never wear, in the back of my closet,\" Kennedy explained while she peeled the wrapper off of a new box of chocolates. \"I lock the door when Skylar goes out and refill it. Not that I think Skylar would be one to go tell on me. I'm more worried that she might drink it all and not replace it.\"\n\n\"Shh,\" Abigail said, her eyes glued to the screen as she popped a chocolate into her mouth.\n\nKennedy and I shared a chuckle, seeing that Abigail had let herself become drawn into the storyline. We slowly drank our tequila as we watched Ryan Reynolds dismember his enemies one by one while slinging witty one-liners. The girls both got a giggle out of the controversial sex scene where Morena Baccarin pegs Ryan Reynolds with a strap-on. I felt my cheeks blush a little as they both eyed me after that.\n\nThe movie was nearing its end when I finally peeled my eyes away from the screen again, looking for something a little less alcoholic to drink, only to find Kennedy and Abigail making out next to me.\n\nTheir kiss was one of slow, sensual passion. Both of their eyes closed as their bright pink tongues slid along each other's between their open mouths. Kennedy's hand was down Abigail's pajama pants, And Abigail was holding her wrist in place as she slowly bucked her hips under Kennedy's manipulations.\n\nI caught myself watching them for a bit as I felt my cock grow in my panties. Most of our encounters were with the three of us in a tangle of sexy limbs, I hardly got the chance to see the both of them on their own like this. I might have been a girl now, but seeing two women share so much passion and lust was still something I fantasized about.\n\nI slowly rubbed my thighs together as I watched them and even found myself tracing my fingers around my sensitive nipples, another sensation that I was still becoming used to. It was so erotic watching them. I could tell the moment Abigail began to near her climax. Her fingers tightened around Kennedy's wrist, her knuckles going white, and the almost indiscernible increase in her panting breath escaping between their lips.\n\nKennedy's hand began moving faster between her thighs and Abigail's hips began to thrust harder until, with one final thrust, her body tensed up and trembled as she began to gasp from the waves of pleasure flooding through her body.\n\nKennedy's hand slowed its motions as Abigail slowly came down from her high, and she sweetly kissed her friend, savoring the look of bliss she had inspired.\n\nIt was only then that I realized how heavy my own breathing was, and how painful my cock felt, confined as it was. I slowly slipped my hand down to readjust myself when Abigail finally opened her eyes and saw me.\n\n\"Sorry,\" Abigail smiled nervously, her post orgasmic blush still staining her face.\n\nKennedy whispered something in Abigail's ear and then the both of them pounced on me, carrying me to the floor in a gale of laughter. As soon as I got up to my knees, I was attacked again. Abigail came at me from the front while Kennedy took the rear, trapping me between them and their playful giggles.\n\nAbigail's lips quickly found mine, and for a moment I let myself forget my troubles. I slipped into her kiss, letting her tease out a little bit of joy into my life. When I felt hands lifting my shirt, I remembered where we were and tried to protest.\n\n\"What if someone comes back?\" I asked.\n\n\"It's only ten, we have time,\" Kennedy breathed into my ear.\n\nIt sounded like sound logic to me. At their urging, I raised my hands over my head and my top was quickly ripped from my body. Before my breasts were even free, Abigail's hands were down the front of my pants fishing inside my panties for my cock. Another set of hands gripped my pajamas and panties and yanked them roughly down my hips. Still on my knees, I had to struggle to kick my legs free.\n\nKneeling naked between them, they continued their assault on me before tearing themselves away to stare at each other for a long moment. Before I could catch my breath, they both began pounding their fists against their open hands.\n\n\"Yes!\" Kennedy cried out, excited.\n\n\"Two out of three?\" Abigail offered hopefully.\n\n\"Not a chance!\" Kennedy laughed from behind me.\n\n\"You guys are so weird,\" I laughed realizing they had just played rock-paper-scissors for my cock.\n\n\"Who cares?\" Kennedy said crawling over to the coffee table. \"Just fuck me.\"\n\nKennedy quickly stripped off her clothes and kneeled over the coffee table, presenting her delicious ass to me. Not caring, I moved behind her, letting my cock slap against her ass. I lined myself up, and in one long thrust, I sank all the way into her soaked pussy.\n\n\"Oh!\" she called out in surprise at my abruptness.\n\nI held still for a moment, savoring the feel of her wet folds wrapped around me like warm silk. Before I began my work in earnest, Abigail came up behind me to wrap her arms around me, her naked body molding to mine with her hard nipples digging into my soft flesh. Her hands found my sensitive breasts, caressing them gently as she kissed my neck.\n\n\"Fuck her good,\" Abigail whispered sluttily in my ear.\n\nMoving one hand down to my hip, she pulled me back towards her, slowly moving our bodies in unison. She pulled me out almost to the tip before thrusting her hips forward, pushing me roughly into Kennedy like a carnal version of Newton's Cradle.\n\nI held on to Kennedy's succulent hips, and I relished in the pleasure as Abigail used my body to fuck our best friend. Loud slapping sounds echoed off the walls and hard-wood floors in the large open common room. I didn't know how long I was going to last, but if Kennedy's cries were any indication, it was definitely going to be longer than her.\n\nAbigail abandoned my tits as she gripped both of my hips tightly, hell bent on helping me power Kennedy through what looked to be a promising orgasm.\n\nI didn't hear the sound of the door over our fucking. I was too focused on Kennedy, and seeing if Abigail and I combined could fuck her into a coma. What I did hear was the crashing sound near the kitchen area by the front door.\n\n\"I'm okay!\" A drunken voice called out. \"I'm okay!\"\n\n \n\nAll three of us froze instantly at the sound of a voice. I tried to look behind us, but with the couch in the way, and Abigail burying her head into my shoulder in an attempt to hide, I couldn't see much of anything.\n\nAll of a sudden, I saw a very well-worn blonde pop back to her feet. It was Skylar. Out of all of the people to come back early I would have expected her last. The girl was notorious for wearing men out.\n\n\"I think I might've drank a lil' too much,\" she said slightly stumbling as she made her way closer to her room, using the furniture for support.\n\nWe were all stock still, Kennedy and I both staring at her wide eyed while Abigail played the world's worst impression of an invisible statue as she continued to hide her face in my shoulder. The way Skylar was acting, she was still oblivious to what she had walked in on.\n\n\"Got a bit carried away with my fella,\" Skylar continued, working her way along the back of the couch.\n\n\"Whoa!\" she said with a lopsided smile as she finally noticed that we were naked. She was standing almost right next to the side of the couch, our full nakedness on display.\n\nHer eyes seemed to drink us in for a few moments before she shook her head and took a step away from us, swaying dangerously without support.\n\n\"I saw nothin',\" she said with a smile and an over exaggerated wink before giving us an awkward two fingered salute. \"Carry on.\"\n\nTurning her back to us, she carefully made her way to her door, and after one last long look at our naked tryst, she closed the door behind her.\n\n\"Fuck!\" Abigail exclaimed as soon as the door shut.\n\n\"I don't think she saw anything,\" Kennedy sighed, resting her cheek on the coffee table in relief.\n\n\"Are you thick?\" Abigail said. \"She saw everything! We're fucking fucking naked!\"",
        "\"I meant Lexi,\" Kennedy clarified. \"The angle was all wrong and the hardest part to hide is inside me.\"\n\nHearing her reassurance left me relieved. After my last dreadful coming out encounter, the last thing I needed was another bad experience.\n\n\"We should go back to our room,\" Abigail suggested.\n\n\"Not yet...please,\" Kennedy begged. \"I was so close. Just a little more.\"\n\nKennedy was being very compelling, and it had a lot less to do with her words and more to do with her skilled pussy pulsating around my throbbing cock.\n\n\"We can do whatever the hell you want,\" Abigail said, moving to pull away from me. \"Just, back in our room.\"\n\nAs Abigail pulled back, I slowly eased myself out of Kennedy to her displeasure. At the last moment, I slammed my cock back into her as hard as I could and began fucking her with every ounce of strength I had.\n\n\"Oh, FUCK!\" Kennedy yelped as I viciously pounded into her.\n\nHer unrestrained cries filled the air, adding her musical voice to my percussion. The way she was still milking my cock was driving me wild, and I couldn't hold out much longer. Reaching for what little I had left, I tightened every muscle in my body as I tried to thrust harder. The pain and pleasure built, and thankfully, we both cried out in relief as I flooded her with my cum. Exhausted, she collapsed in her own trembling orgasm.\n\nI only waited for a few seconds before pulling out of her, causing her to yelp again in surprise. In my quickness to get to my feet, I stumbled and fell back on my ass. I finally noticed that Abigail hadn't left the room yet. She was sitting awkwardly gaping at both of us.\n\n\"Help Kennedy,\" I gasped as I tried to scoop up all of our discarded clothing.\n\nStaggering to my feet, I walked to our room with my cock swinging dangerously in front of me for anyone that might walk in. Abigail, with her arm around Kennedy followed behind me.\n\n\"Are you going to fuck me like that?\" Abigail asked excitedly."
    ],
    "authorname": "Son_of_Battles",
    "tags": [
        "crossdressing",
        "college sex",
        "valentines day",
        "teen",
        "fantastic titties",
        "surprise",
        "caught",
        "group sex",
        "trouble",
        "transsexual"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/womens-studies-ch-11"
}