{
    "title": "Pandora's Panties",
    "pages": [
        "Author's Notes: You know how sometimes you feel playful? Naughty? Mischievous? And sometimes, I don't know about you, but I just feel, well, raunchy! Like I MUST get the raw out. This story, written for the 2015 Halloween Contest, was originally meant to tease, mercilessly. However, the characters, one of them inanimate, took over in unexpected ways. The resulting story is loads better for the careful reading and suggestions made by my honest and insightful editor, the talented and very patient . \n\nLet me know whether you enjoyed the story - please vote and leave your comments.\n\n\n\n~~~~~~~\n\nHalloween in New Orleans, I thought, might be the best part of the meeting I had to attend. That, and Jack Presbitt. Now that would be a treat. \n\nI've always liked Halloween - my favorite holiday. These days, I liked to wear something a little sexy or a little scary, nothing too extreme, just a bit unexpected. I often wore a costume to work as well - I liked the surprise on the faces of my colleagues who don't expect any surprises from me, the sober CFO. What I usually hate is what happened to me last year - having to spend Halloween on a business trip. Except what I thought would be an awful, boring conference I hadn't wanted to attend turned out to be an opportunity for an enjoyable little romp with my friend Jack. \n\nI had been part of a project involving colleagues at a couple of other companies, a few universities, and even a government lab. We had all received money for a large education project, and had to attend a yearly meeting to discuss our progress and coordinate our plans for the following year. If the money I'd received for this project hadn't been so substantial, I would have blown off the meeting. But it was too big and I had to suck it up and go, even when I realized that the only time everyone could get together included October 31st. At least one of my favorite colleagues would be at the meeting, Jack Presbitt. He and I had been an item quite a few years back. We'd parted ways amicably, and he'd gotten married and had himself two blond, blue-eyed kids (both above average, of course). Whenever we'd run into each other, we'd flirt up a storm every time. Since Jack lived in New Orleans, I assumed he'd certainly be at the meeting.\n\nI'd managed to stay single - I always told my parents that they hadn't invested all that money in my education so I could spend my time washing some man's dirty underwear. In truth, when I'd been interested in getting married most, I hadn't met anyone who'd captured my imagination. Eventually I had given up on the idea and settled into a series of hot relationships that generally ended becoming comfortable and eventually boring, by which time both parties were ready to go on to greener pastures. Lately I'd started getting antsy again. It was a bit disturbing that the fuse on the fireworks was fizzling out faster than in the past, and my patience was getting shorter and shorter the closer I was getting to menopause. Frankly I felt like my time was running out and I didn't want to waste it on lukewarm relationships with \"Mr. Nice Guy, But...\" \n\nInstead, I'd take the opportunity, whenever I could, to let my hair down at out-of-town conferences. After the requisite happy hour mixers with glasses of white wine and hors d'oeuvres standing in for dinner, I'd beg off, pleading a long travel day. I'd go back to my room, change into some tight little black number, thigh highs and high-heeled boots, and head out clubbing. Preferably somewhere where they'd play good jazz, blues or funk, and where they had a good selection of single malts and a knowledgeable bartender who enjoyed surprising his customers with something out of the ordinary. \n\nIf I was really lucky there'd be good dance music and a nice dance floor where I could lose myself in the grooves and feel myself getting hot and slick between my thighs. Well-oiled above my thigh highs and warm and fuzzy all over at 2 or 3 am, I'd hop a taxi ride to the hotel, strip down to my sexy lingerie, and have me a hot date with my fingers and my favorite travel vibrator before calling it a night.\n\nThe last couple of times when I'd been at a conference with Jack, he'd come with me to the clubs. We'd had a few drinks, reminisced about old times, then he'd invited me to dance to some old song that had brought back memories. He was a great dancer - he had the body for it, tall and slim but not too thin, a graceful mover. He was one of those men at ease in his own skin, who liked to get down and to feel a woman's body rub up against his. I'd found it hard to part chastely from him at the end of those nights, but I didn't want to cause trouble in his marriage. I'd let him go with an easy laugh after indulging in our usual bouts of shameless flirtations that still managed to stay safely this side of cheating.\n\nThe last time had been the hardest. Jack knew his way around a woman's body on the dance floor, and that time we'd gone to a Country & Western bar, even though neither one of us had dressed for it. We'd started with a nice and easy Texas two-step, and I'd leaned in to him, enjoying meeting him hip to hip. Later we'd trotted out our Texas swing steps and twirls, both of us taking advantage of the closeness. Casually, his arms or even hands would brush the sides of my breasts, and once I felt his thumb stray over my nipple, making it even stiffer than it had been before. No way he hadn't noticed! \n\nAs he swung me in front of him, his arms crossed in front of my waist, I had pushed my buttocks into his crotch. I had made it look accidental at first, but by the end of the night I was grinding into him purposefully and feeling the shapely outline of his swollen shaft pressing between the cheeks of my ass and against my hip as he moved me around during the dance. Both our eyes were half-closed. He'd hugged me close and given me a kiss on the lips, half chaste and half very much not, and I'd let my pelvis rock forward for balance, feeling his cock rub my stomach and sending tingles down below. \n\nWhen we got into the taxi, I was very conscious of the hem of my tight dress riding up my legs to just below my butt. Under the guise of helping me in, he put his hand on my hip to steady me. I felt it brush the curve of my buttock and somehow, accidentally, his long fingers touched the too-narrow crotch of my panties. By then I was sopping wet, and there was no way he hadn't felt the moisture that had seeped through the thin satiny fabric, making a wet spot. The panties were entirely inadequate at containing the wetness, and having his fingers on the fabric and brushing against the naked tumescent flesh had been hot and infuriating. I felt predatory and could barely keep myself under control, but took his hint as he said good night to me in the lobby of the hotel to check on his messages with the hotel desk. It would be just me and my vibe again, sharing some quality time.\n\nTo my surprise, he'd called later that night. \n\n\"Did I wake you?\"\n\n\"No, I couldn't sleep, I was doing some work.\" \n\n\"You were so hot tonight, teasing me mercilessly.\"\n\n\"Teasing you?\" I demurred. \"I did no such thing. What about you?\"\n\n\"Don't lie to me, Amy. Time for me to return the favor. Part your legs and reach down between them. Let your fingers travel up to the juncture between your thighs and tell me what you find there.\"\n\nI nearly closed my eyes as I reached my still-moist crotch. \"My panties, as it turns out.\"\n\n\"Tell me about them. They were quite wet earlier.\"\n\n\"Still are, Jack. Feeling your fingers didn't help.\" \n\n\"Or helped a lot. You deserved that, rubbing your ass against me like that, woman,\" he said. \"I'm stroking my shaft. I can't not stroke it, it's so fucking hard right now, thinking of you. Press the fabric of your panties between your pussy lips, darling. Push the fabric around a bit, slide it around along those wet, wet lips. Tell me how it feels!\"\n\n\"Slimy and thick, Jack. The fabric is very slippery, and completely soaked though. The crotch is very narrow and bordered in lace, and the lace tickles me a little bit, and does nothing at all to contain my juice. My inner thighs are smeared with it.\"\n\n\"I know - I could feel that fabric was whisper-thin. You may as well not have worn any panties, but they are so very hot. Push the fabric aside now, Amy. Dip your fingers into your... what do you call that place between your thighs?\"\n\nI paused a bit before answering, enjoying heightening the mood. \"My cunt, Jack. My cunt. How deep should I push my fingers in?\"\n\nI heard him suck his breath in.\n\n\"Before you do push in, run your fingers around the inside of the lips and enjoy the feel of the slimy-ness. Touch your clit for me, dear. I used to love to suck your clit, Amy. You liked me to suck it hard, so hard I was worried I would hurt you, give your cunt a hickey. But you always wanted it even harder. I loved your clit!\"\n\nI could hear a soft squelching sound through the phone, and imagined his hand on his shaft, remembering its length and girth. I was salivating.\n\n\"Now, use just one finger and go in to your second knuckle and rub it in and out,\" he said. I knew he wanted to taunt me - one finger was barely a tease. \n\n\"Find your G-spot, darling,\" he continued. \"Your G-spot had me enthralled - I still remember the first time I felt it. Do you remember? I wasn't convinced it existed - there'd been an article throwing doubt on G-spots. But you showed me where yours was, and told me how good it felt for me to rub it with my fingers and with my cock. Of course I had to defer to real life experience.\"\n\nI pushed my fingers in and twisted them about, moved them in and out and rubbed especially hard against the rough patch of nerve-filled skin he was reminiscing about. It felt so good I was squirming against my fingers and remembering his cock penetrating me and pushing all the way in, then changing the angle on the out-stroke so that he was rubbing harder against my clit.\n\n\"OK, Amy, now I want you to take out your fingers and smear that thick fluid all over your mouth. Do you know what it did to me, to touch your wet panties in that damn taxi? I loved the wetness, Amy. I could smell you even in the club, when we were dancing. You were so wet and your scent was unmistakable, like an animal in heat. Your cunt must smell divine now!\"\n\nI did as he asked, though he couldn't see me, I just couldn't resist the heat in his voice. I loved his request, and the fact that he'd made it.\n\n\"How do your lips taste, Amy?\"\n\n\"So good, Jack - the same as you remember,\" I answered, trying to poke back at him a bit.\n\n\"Amy, now I want you to use your vibrator...\"\n\n\"What vibrator?\" \n\n\"Don't bluff me, Amy. I know you always have a vibrator with you when you travel. Is it still that battery-driven, penis-shaped black one? Or is it your white one that you use to massage your clit?\"\n\nI sighed. He remembered, all right. He knew my foibles, that's for sure. My libido had ratcheted up several notches in the past few years, and I often needed both vibrators to satisfy me.\n\n\"Use it now - turn it on and stroke on either side of your clit. Push your fingers inside your cunt and find your G-spot, and while you're stroking it, massage your clit or wherever feels best.\"\n\nI did as he asked me. He hadn't had to ask, I was already on it, but I loved that he had asked. And that he'd remembered I didn't like the vibrator exactly on my clit until the very end, and that I loved my G-spot attended to. \n\n\"You know I'm stroking myself faster now, Amy, as you're pleasuring yourself. My hips are moving too, as if I were fucking you. I know you wanted me to do that earlier today. Didn't you?\"\n\nAll I could manage was a whimper and a scream as the vibrator and my hand succeeded in bringing me to a climax. Through my shudders and clenching of my muscles, I heard him grunt out his own orgasm.\n\n\"I'm cumming for you, Amy - I'm cumming! Ahhhhhhhhh!\" I could hear his hand sliding fast along his shaft and the wet soft slapping sounds of what must have been lotion or lube making his shaft slick.\n\nWe were both silent but breathing hard for the next twenty or thirty seconds. Through the fog of the orgasmic aftermath I remembered fondly the spectacular sessions of sex we'd shared, and wondered what had made us drift apart. Maybe it was his having to move when his company relocated him to Boston while I stayed on the West Coast. I couldn't remember us having had any huge fights, or even those long and painful downward slides that many relationships take to their inevitable denouement. \n\n\"Oh, Amy,\" he finally spoke softly, his voice surprisingly intimate for having had to make it through both our phones. \"I've missed you.\"\n\n\"I've missed you too, Jack. You know, I can't remember what split us up. Made us drift apart.\"\n\n\"Don't you? I do.\"\n\n\"Yeah? What was it?\"\n\nHe sighed so softly I almost missed it. \n\n\"I wanted kids. You wanted your career,\" he said. \"At the time you didn't think you could have both at the same time.\"\n\n\"Oh.\"\n\nThere was nothing I could say. Truth was truth. \n\n\"Amy? I still think of you often.\"\n\n\"Thank you, Jack. I think of you as well.\"\n\n\"Good night, Amy.\"\n\n\"Good night, Jack. Sweet dreams. And thank you for...\"\n\n\"Yes, darling. Thank you, too.\"\n\nThat had been a year or so ago, and my vaginal muscles still clenched and twitched every time I thought of our impromptu cybersex tryst. It was one my very favorite fantasies to think about when I felt the need to masturbate.\n\n<Center>*****</Center>\n\nI checked in to the Maison Dupuy Hotel, looking around to spot any of my colleagues who would be attending the meeting this time. I saw a couple of them, nodded and smiled at them, but didn't see Jack. I had a slight frisson - what if he didn't come? I had so looked forward to seeing him again, half thinking - hell, hoping! - that we'd repeat last year's tryst.\n\nThe mixer later that evening was pleasant enough, everyone exchanging personal life anecdotes of the past year over glasses of bubbly and hors d'oeuvres. We'd worked with each other long enough that people knew many of the wives or husbands and even some of the kids. No one asked me directly if I was still single, but as usual I wore my rings on the wrong fingers of both hands, my ring finger still naked, and my status remained an open book. A couple of hours later we had gotten mired deep into work politics, and I'd had enough of the chit chat and was ready to start on the second half of my evening. Still no Jack, so I'd be alone. No matter.\n\nWhen I got back to my room, a small package was in front of the door, exquisitely wrapped in luxurious satiny paper, a velvet ribbon topping it off. I picked it up, found the small note and read the handwritten script, \"From an old admirer, with much love!\" Hmm. Was this from Jack? It must be! He certainly knew how to pique my interest. Still, sending someone a package like this? Weird.\n\nI turned the box over and shook it gently, looking for some hint of its origin or its sender, but its outside gave away nothing. I took it inside with me, placed it on the bed, and went to shower. As I lathered, enjoying the luxurious feel of the bubbly liquid on my skin, I felt the business part of the day slowly drain away. I spent perhaps a bit more than strictly necessary soaping my nipples and the sensitive underside of my breasts, then swirling the hand covered in foam over the shallow curve of my stomach. When I reached my pubic mound, I decided I may as well shave, and slathered some more foam on, covering the labia and the crack between my cheeks. I couldn't resist sneaking a finger along the inside of each lip, running the finger around and around the inverted V of the clit hood, adding tiny circles to the slick, swelling nub of flesh to make sure it was... spotless. \n\nI shaved carefully, then spread some conditioner on, to prevent razor burn. And I simply had to let my fingers explore the inside repeatedly, the thumb massaging over my clit as I twisted my fingers inside the channel, dragging the knuckles along the rough upper wall, that mass of nerve endings beginning to throb. Thinking of it as an \"amuse-bouche,\" a palate teaser to the rest of the night, I stopped just in time, holding back my climax. I rinsed myself, ignoring the yearning that had swelled and already threatened to overflow.\n\nAfter drying, I smoothed the hotel's luxurious skin lotion all over my neck, my limbs, breasts and stomach. The act itself made my nerves tingle and I felt the reawakening of that need slithering high between my thighs. With reluctance, I turned my thoughts to dressing, and my eyes fell on the package laying on the bed.\n\nStill naked, I opened the box, revealing several layers of deep forest green tissue paper kept closed with cellophane tape embossed with gold lettering: Pandora's Chest. On top sat a small box which, when I opened it, disclosed a truffle. I admired it briefly before biting into it, savoring its creaminess as it melted slowly in my mouth and infused my tongue and palate with its rich mix of tastes, hazelnut cream mixed with chocolate and tinged with a sprinkle of salted caramel. Mmmmmmmm. If anyone wanted to poison me, they would have found a cheaper way to do it. On the other hand, if they insisted on spending this kind of money on such a lovely piece of chocolate, I would gladly take the risk of being poisoned.\n\nAs I was finishing the truffle, I opened the tissue papers and saw the panties. They were made of the thinnest satin, their color a deep dark maroon, almost brown, bordered in black lace and accented with a tiny black velvet bow. A rather intimate gift - who the hell had given me these? It was almost creepy. I turned away from the open box spilling its tissue paper and pulled out the packaged thigh-highs I'd set aside for the night. I sat on the bed next to the box and begun the painstaking process of pulling on the stockings, slowly, making sure I didn't start a run. Every once in a while my eyes shifted to the opened box. I looked in the mirror, adjusted the elasticized lace on each thigh and made sure the seams were correctly in their place. Not for the first time, I thought how titillating it was to run a finger on the inside of the lace edge.\n\nThe opened box was still mocking me. Winking at me. Here we are, the panties said. Try us on. And, as if to underscore the whole ridiculous dilemma of whether I should give in to this seductive yet mysterious and odd gift, I felt that tell-tale moisture begin to seep out between my labia. My body was a needy, greedy traitor.\n\nFinally, I felt the material, soft and sensuous between my fingers. The panties felt delicious. On a whim, I slid them on, the fabric brushing my skin like a whisper. As I pulled them all the way up I felt, for a second, like the crotch tightened to my mound just slightly, as if a hand had patted me, the palm just above my vulva and the fingers reaching down between my thighs. I shook my head to clear away the strangely arousing sensation. I walked over to the mirror, swaying my hips a little - they fit me perfectly, the material laying seamlessly on my skin. \n\nI set about getting dressed, pulling on a black satin corset sprinkled with tiny zirconium stones. Cinching it tight, I enjoyed the feeling of my breasts being pushed up and together, accentuating my cleavage. I made sure my nipples were safely tucked under the top edge of the corset, and noted that if I laughed a little too hard, the nipples would escape the corset and peek over the edge. A rather racy thought... I'd just have to be careful when I laughed, and mind who was looking. \n\nThe corset held my ribcage and waist firmly but not too tightly - I wasn't into the body modification that some women engaged in, attempting to turn their torso into the hourglass shape of an 18th or 19th century courtesan. I put on the thin silver chair with the black pearls, threaded its end through the clasp in front and let the teardrop-shaped pearl in its silver setting at the end of the chain lodge between the globes of my breasts. I couldn't resist a light caress of the flesh, and smiled at the tingle that raced down between my thighs.",
        "I finished dressing, slipping on the stockings, then hooking them into the garter belt. I pulled on a very short, tight skirt that, even with objectively critical eyes, outlined my curves very nicely. I then slipped on my black boots, smoothing the supple leather around my calves as I zipped them up, and admired the way the heels lengthened the line of my calves and thighs. Not for the first time I thought how good an investment the gym had been. Not bad, not bad at all. \n\nAs I turned around in front of the mirror, making sure everything hung correctly, it seemed as if a pair of hands molded to my ass and gripped my cheeks firmly, the finger tips just reaching into the crack, pulling the flesh just slightly apart. The sensation was so realistic that I irrationally looked behind me to make sure no one else was in my room. What the hell? Maybe I was so keyed up to be going out that I was particularly sensitive to every stretch of fabric across my body.\n\nI quickly put on a bit of eyeshadow, a light sprinkling of powder, and brushed on some mascara, then carefully put on the dusky pink lip balm. Done, but not overdone. I grabbed my room key, credit card, driver's license and some cash, shoved them all in the hidden pocket of my light black coat, took one last look at myself in the mirror, and headed out.\n\n<Center>*****</Center>\n\nThe club I'd picked hosted BDSM nights twice a month, but this was not one of those. Still, some of the decor reminded me of its use as a dungeon. Loud industrial and electronic music pulsed from the speakers and near-naked dancers in make-shift cages undulated sinuously in time with the thrumming bass. I walked up to the bar and ordered a Jameson's on the rocks, exchanging a few words with the bartender, then picked out a table to nurse my drink while taking in the people swarming around. The club's tables were clustered in two areas, each raised on a low platform on either side of a broad walkway that had the dance floor on one end and the bar area at the other. \n\nI was enjoying looking at people letting go of day-to-day cares, bodies writhing to the music, letting the throbbing bass flow through their veins. Their inhibitions were dropping with each thrust of hip or pelvis, each swing of hip or knee. As the night went on, I felt my tension from the day slowly drain away and the music and ambiance took its place. I found myself musing about Jack and our past, our relationship that had started and seemingly quit unresolved. I thought about my career, the reason Jack had given for our split. Yes, I'd become successful. Yes, I earned a good salary, traveled all over the world, owned a beautiful condo in an outstanding location. And I'd paid for it in working long evening and weekend hours spent in an office or at home, making sure I stayed on top of the game. Making sure that I was taken seriously, and more - that the men working alongside me respected me. I'd built my reputation based on my work, not on my pretty smile or long legs and shapely boobs. I suppose none of those attributes had hurt. It was tough not to notice how the \"beautiful people\" rose up the ranks and got the corner offices and the status symbols, the extra push up the ladder. \n\nBut here I was, a glass of Irish whiskey in front of me, alone. Did I really want to be here alone? Certainly I wouldn't have invited anyone I shared an office with to join me tonight. But even had I not wanted to be alone, whom would I have picked? Whom among the men I'd been with in the past, some fewer than two weeks, others - like Jack - for years, would I have chosen as my mate for life? Or at the very least to share a bedroom with every night, breakfast in the morning, and willing to share laundry and cooking duties with? A good question indeed... \n\nAs the night went on, I let those thoughts drift away from me on the sound waves and returned to watching the dancers. With the advancing hours the music was more throbbing, the dancers writhing more lewdly, the accidental touches becoming more purposeful, more lingering - the hand that had earlier casually brushed against the curve of a breast or a hip now rested on a waist, traveled down the curve of buttocks. The legs of partners intertwined, pelvises grinding intensely against each other. \n\nI realized the cleft between my legs was drawing attention to itself: my thighs were slick with the seeping moisture. I pulled forward to the edge of my seat, crossing my legs tightly, my thigh muscles clenching and putting pressure on that inner cluster of nerve endings. Paradoxically, increasing the pressure without relieved the pressure within. As I did so, a tongue seemed to emerge from somewhere, from nowhere, slick and wet and firm. It slid around my outer lips, then squirmed its way in between my crossed thighs. I was so startled I uncrossed my legs. Again, what the hell? The tongue burrowed deeper inside and swirled around the inside of my channel, punctuating the swirls with a dragging motion from back to front, right over the rough patch along the upper wall. The sensation was so realistic, so arousing that I sat up and arched my back into it. \n\nAs if on cue, a mouth closed over my outer lips, tightening into an \"O\" over the top of my clit, the tongue coming out to meet the lips and licking upwards. The tongue differed from other tongues I'd had the pleasure to feel, closer in texture to the rougher tongues of cats. It covered, however, a much larger area, and the pressure it brought to bear made me arch towards the table, so hard that I moved it forward a notch. \n\nI heard the moan escape me as if it wasn't my throat releasing it but someone else's, some wanton, greedy woman in the throes of passion. I wanted to scoot back in my chair, but the mouth and tongue worked together, sucking and fucking me so thoroughly that I simply gave in to them and let the swiping and suctioning motions take me over. Too soon the inexorable build in sensation spilled over and I felt my muscles spasm in that familiar rhythmic pulse I craved, but felt too rarely. As the seconds passed and the pulses subsided, the mouth released slightly and, with something like a lingering kiss on my lower lips, disappeared. \n\nI opened my eyes, realizing that I had scrunched them closed. My whole body was straight and clenched on the edge of my seat. I looked around, relaxing very slowly to not draw attention to the change in my posture in case anyone might be watching me. No one in my general area was looking at me; all had their eyes forward on the dancers still grinding and pumping into each other on the stage. \n\nI pushed back my chair and looked under the table as casually as I could. \"Fuck me,\" I let escape a whisper, \"what the hell was that?\" Discreetly, I reached between my thighs and felt my panties - they were absolutely drenched, the sticky fluid coating the insides of my legs and, as I moved the panties aside to feel my labia out of curiosity, the copious juices that had pooled there dribbled over my fingers and down my hand onto my thighs and skirt and chair. I used some of the napkins I'd grabbed along with my drink and, trying to make it look as if I was washing away a stain, tried to sop up the wetness as much as possible. Then I slumped in my chair, completely spent, exhausted. \n\nWhat had that been about? Looking around me yet again, I saw nothing out of the ordinary \u2014 the club was the same club, the dancers as lewd and fluid as ever, and no one seemed to take notice of me. Did I just hallucinate? Daydream? \n\nI took another sip of my drink, thanking the alcohol for its smooth warmth coating my throat as it went down. It had started with those panties... \n\nI finished my drink and made my way out of the club. I hadn't seen anyone tempting enough to play with, and the orgasm I'd just experienced had completely unsettled me. It had been one of the strongest orgasms I'd ever had; few of the men I'd been with had been able to elicit that strong a response from me. This had been... out of this world!\n\n<Center>*****</center>\n\nAs I reached my hotel and my room I wondered again if and when Jack would show up. A twinge of sadness hit me as I considered the possibility that something may have happened which would keep him from attending. That would truly be too bad.\n\nI stripped off my skirt and kicked off my boots as I walked into the room, leaving the corset and panties on for now, parked my phone and my iPad on the night table, and sprawled carelessly on the bed, closing my eyes. Tonight had been strange and bizarre and yes, unsettling \u2014 I couldn't think of enough appropriate words to describe what had happened at the club. Still, that orgasm had been \"out of this world\" good. Instead of being sated, my pussy was demanding another.\n\nThe phone's vibrations startled me out of my doze. \n\n\"Hey, Amy! I just got here, from another conference. Barely made it back.\"\n\n\"Jack, hey there! I'm sorry! Turbulence?\"\n\n\"Not bad weather. I came from Spain. They held us up in security so long in Atlanta we nearly missed our flight! And my luggage is still AWOL.\"\n\n\"Oh, no. You OK? I'd invite you over for a drink but I just got back to my room and I'm bushed.\" \n\n\"You? Bushed? What'd you do, run into a herd of twenty-somethings?\" he quipped, sounding very like Jack.\n\n\"Cute! No, those days are over. I did, however, have the weirdest experience ever.\"\n\n\"Invite me to your room and tell me about it. And let me empty you mini-bar. I could really use it.\"\n\n\"I'm really, really tired, Jack. By the way, you didn't leave me anything at the hotel, did you?\"\n\nSeveral seconds passed.\n\n\"Sorry, had an itch to scratch. Leave you something? Like what?\"\n\n\"A package? From a lingerie shop, perhaps?\"\n\n\"A lingerie shop? Hmmm, do you have some admirers lurking about, dearling?\"\n\n\"It's been a long time since you've called me that, Jack. You're the only one who's ever used that term. Your very own made up word...\"\n\nSilence again, for 20 or 30 seconds.\n\n\"Jack? Still there?\"\n\n\"Yes, I am...\"\n\n\"What's wrong?\"\n\nAgain, a pause, though shorter this time.\n\n\"Ask me over and I'll tell you.\"\n\n\"Is it appropriate for a married man to be visiting an ex after midnight, Jack?\"\n\n\"Only technically married, dearling. Not for much longer.\"\n\nNow it was my turn to pause. Jack getting divorced? He didn't talk much about his marriage, I presumed because he wanted to be careful of my feelings. I'd always assumed it was heaven-sent. \n\n\"All right,\" I relented. \"Come on over. Room 312.\"\n\n\"I'm in 315. Pretty much across the hall from you!\"\n\nHe was here, at the hotel? \"I thought you'd be staying at your house. You still live here in NOLA, don't you?\"\n\n\"No. And yes. Tell you soon.\"\n\n\"K then. Since you're here, bring a glass. I'm otherwise well-prepared.\"\n\n\"What happened to your second glass?\"\n\n\"It's filled with my toothbrush and vibrators!\"\n\nThat silenced him. \n\nIt took about fifteen seconds to hear a soft scratching sound on my door. I'd barely had time to wrap my short silk travel robe over myself. When I opened the door, Jack was standing there, wearing jeans and a black T-shirt, his hair wet and a bit disheveled from, I presumed, a shower. I'd caught him with his hand in mid-air, curled up like a cat's when it scratches to be let into the house.\n\n\"One drink, Jack. I'm sorry it was such a harrowing flight. Why are you staying here?\"\n\n\"I decided it would be easier, since I'm helping host the meeting, to stay here with everybody else. And I moved out of my house, anyway. I'm renting a place temporarily.\"\n\n\"It's great to see you. Take a load off.\"\n\nI pointed him to the armchair in the corner of the room, near the floor-to-ceiling windows. I had pulled the curtains aside - someone would need binoculars to look in and actually see anything, and the view of the street lined with three- and four-storied houses with their shallow wrought iron balconies was nice. I took the glass he'd brought with him and poured us both a healthy dose of the Balvenie single malt Scotch I'd picked up at a liquor store near the hotel.\n\nWe sipped our Scotch in silence for a minute. I enjoyed the warm, slight tingling as the amber liquid slid down my throat, a hint of the sherry cask it had been finished in. They hadn't named it DoubleWood for nothing. \n\n\"Do you want to tell me about it?\"\n\n\"Livvie's taken up with someone else. It's been going on for some time, I think, but she... ummm... sort of confessed about a year ago.\"\n\n\"Ah. Do you know him?\"\n\n\"Her. It's a her. She's one of Livvie's prot\u00e9g\u00e9s from work. Been to our house countless times. Of course, I was oblivious. Didn't even enter my mind.\"\n\nWhat a blow it must have been to him, I thought. \"How did you find out?\"\n\n\"Caught them in flagrante. Came home early one afternoon, after I'd sent in a manuscript. There was Livvie, on her back in our bed, with Melinda - that's her name - stretched out buck naked and butt in the air between Livvie's legs, eating her out.\"\n\nI looked at him a little to gauge his mental state before saying, \"Sounds hot as hell. I'm twitching already.\"\n\nHe smiled at me, a quiet, rueful smile. \"Yeah, well. It sort of was. And sort of not. She was so close to her climax she didn't even acknowledge me. Just groaned and ground and rutted. I'll never get this out of my head: her eyes half closed, holding on with both hands to the slats of the bed board behind her, arching into Melinda's face. And when she finally realized I was standing there, she moaned louder and used one hand to push Melinda's head harder into her cunt while using the other hand to leverage her butt off the bed. She was nearly smothering Melinda. God, the noises they were making...\"\n\nHe took a gulp of his Scotch. \"I was just rooted there, staring. And when Livvie came down from her orgasm, she invited me to join them. Melinda just looked over her shoulder at me and said, \"Taking lessons, Jack? I hear you could use some.\" The fucking bitch! Her lips were stained red with blood, and Livvie had blood all over her mound and thighs. Livvie used to make such a production whenever she got her period. I couldn't touch her for days before or after. Said she was too sensitive.\"\n\nMy own experience was that sex was great medicine for menstrual pains, but who knows? Everyone had their own idiosyncrasies. \n\n\"So... that was a year ago?\" I asked him.\n\n\"Yeah. She tried to make things better by getting me to join them. She wanted me to agree to her and Melinda seeing each other. I wasn't willing to put up with it - if she had asked me before, maybe I would have acquiesced. But she never thought to tell me that she wanted to be with a woman. It was a done deal, and the choice was never mine to make.\"\n\n\"But Jack, that would be pretty hard for her, don't you think? Telling you that's what she wanted?\"\n\nHe shrugged. \"Maybe so. Anyway, I moved out and filed for divorce. It's a good thing the girls are pretty much grown. One's a junior in college, the other one's in her last year in high school.\"\n\n\"Did you tell them?\"\n\nHe shook his head. \"No. We told them mom and dad just needed to do their own thing. Had their own priorities now, or some such bullshit.\"\n\n\"When exactly did this happen, Jack?\"\n\n\"About this time last year. A little before we had this same gathering.\"\n\n\"Why didn't you say anything?\"\n\n\"I thought about it. But I didn't know whether you would feel, I don't know, weird. And it was too fresh, I was too unsettled...\"\n\nI hadn't meant to do what I did, but I couldn't watch his pain and not comfort him. I reached around him in the arm chair and, bending over him, I gave him a hug and rubbed my cheek against his. I felt my silk robe and corset-clad breasts press into him, but decided that Jack needed the comfort more than I needed to protect myself. He reached his arms back around me and, turning his head, his lips found mine. He had always been a good kisser, and he reminded me of it now.\n\n\"Amy.\"\n\nHe pulled me around and into his lap, and as he did so, my robe gaped open, revealing the tops of my breasts pushed up by the corset. He groaned at the sight and I felt the stirring underneath me. He buried his nose in my cleavage, his whiskers chaffing against my breasts. Despite the sting, he felt so good I squirmed, and felt him swell even more under me.\n\nPlacing my hands on both his cheeks, I kissed him, first brushing my lips against his, then fitting our lips against each other's. \n\n\"Livvie was always incredibly jealous of you. She held it over me, said I should have stayed with you. When I refused to budge to her pleas to stay together, she claimed I never loved her like I'd loved you.\"\n\nI looked in his eyes, remembering how overheated Jack could make me feel. His kisses intensified and his eyes, pupils already wide with desire, widened even more, hunger spilling out of them. He pushed my robe off my shoulders and placed his hands just above my hips. \n\n\"She might be right,\" he said. \"You're gorgeous, dearling. You make me hunger for you like I've never hungered for anyone else. You bring an animal out of me, every time. I thought I was over you, but all of it came roaring back last year. You have no idea how I've waited for this meeting.\"\n\nHe swept his hands upwards, sliding them while squeezing me at the same time. His tongue reached for the swelling breasts that spilled out of the top of the corset, the pink flesh of the nipples having escaped its confines and peeking out indecently, shamelessly. He took one between his teeth and squeezed, the pressure sending a twinge directly between my legs, while he stroked the other one with the pad of his thumb. When he switched his attention from one breast to the other, he pushed his thumbs down into the top of the corset, bringing out more of the breast, and ran his tongue along the overflowing flesh under the nipple. It felt heavenly. \n\nJust then a newly-familiar feeling awoke in my crotch. \n\nI felt Jack's hand slide farther down, feeling me through my panties. As soon as he touched the thin wet satin, he groaned and ground his crotch harder into me. He rubbed my mound with the heel of his hand, sliding it down onto my clit. Sneaking his fingers around the panties' crotch, he sank them into the wet folds underneath. He pumped in and out of me, his fingers dragging against my G-spot the way he knew I liked. As he did so, I felt a new sensation, as if another finger reached below and parted my butt cheeks, sliding the viscous juice from my pussy down to my puckered opening and smeared the fluids around it. Jack pushed another of his fingers into my cunt, moving in and out, filling me deliciously. As he did so, and in time with his movements, that other finger continued to slip and slide my cunt juice around my small opening, and finally breached the ring of muscle just slightly at the same time Jack's fingers scraped against my G-spot. I moaned and arched into his hand, and that other finger took advantage and pushed farther in, rotating around the inside of that tight ring of muscle and nerve endings, sliding ever so slightly in and out.\n\nI was so close to cumming, but I wanted something more. I slid away from Jack's hand and crawled on the bed, propping myself on my hands and knees and backing up close to the edge of the mattress, arching my back and looking over my shoulder at him. \n\n\"I want you to take me this way.\"\n\nHis hands wrapped around my waist, squeezing me and feeling the stays of my corset. His hands were so large they almost encircled me. He swiped his hands down to my hips and I could feel his fingers sliding into the elastic band of the panties. I felt an odd twinge of alarm. I couldn't say why, but I didn't want him to take off the panties.\n\n\"No, Jack,\" I said, \"leave them on!\" I blurted, impatiently. \"Just move the crotch aside.\"\n\n\"Mmmmhmmm, yes dear. You are so hot, dearling.\"",
        "He moved the material and I felt his cockhead rubbing against my dripping lips, dragging the moisture around to my clit and back down. \n\n\"Oh god, dearling. This brings back so many memories of how we used to be together.\"\n\nSoon the head breached my labia and I felt him push in, his delicious girth sliding into me, the fit tight and sinfully perfect. As he moved back and forth inside me, that other disembodied finger slid around my tight little hole, and again breached my forbidden channel. Just then what seemed like yet another finger, or perhaps a tongue, materialized on my clit. It too began to slide around and flick that swollen flesh in time with Jack's shaft and the finger in my anus. The pressure had been mounting in my pussy like a pressure cooker, all these sensations melding together into some irresistible volcanic eruption or a dam bursting and flooding, and I couldn't contain myself any longer. My cunt squirted long streams of fluid just as Jack's cock began to throb and spurt rhythmically.\n\nEventually we both collapsed sideways on the bed, Jack's head propped up on my shoulder. He must have been eyeing what my own eyes were riveted on, the prominent wet spots sinking into the sheet-covered comforter on my bed.\n\n\"I didn't know you were a squirter, dearling.\"\n\n\"I didn't either. This is my first time. What a mess!\"\n\n\"That was amazing. How did you do that?\"\n\n\"Squirt? I have no idea!\"\n\n\"No, no! I felt like your fingers were reaching back and fondling and pulling on my balls. And then you seemed to reach even farther back, pressing on my taint. I know you've done that in the past, but...both your arms were on the bed! Then finally what pushed me over was a finger just breaching my asshole! I just couldn't hold back any longer!\"\n\n\"Wow,\" I said, exhausted. I tugged on his arm wrapped around me and squirmed a bit into his crotch, \"I never knew how talented I was. Jack, I'm dead tired. Why don't you stay here?\"\n\n\"I thought you'd never ask.\"\n\n\"But Jack, it wasn't my fingers. It must have been the panties.\"\n\n\"The panties? What are you talking about?\"\n\n\"My panties... They're magic,\" I mumbled, and fell asleep.\n\nI don't remember when we finally crawled under the covers. Luckily the wet spots were on the edge of the bed, and we had plenty of room to avoid them. Later that night I got up and, reluctantly, took off the panties to hand-wash them. As I did I felt the material again, thin satin like that of many other panties, but noticed thin black threads woven into to crotch, blending in beautifully with the dark brown-maroon color. I wrung them out gently and hung them up to dry. I had no clue what they were all about, but I loved them. I vaguely wondered where I could get more, so I would always be able to wear a pair.\n\n<Center>*****</center>\n\nThe next day the meeting started with people milling around the coffee pot, helping themselves to breakfast pastries and fruit from a side table set up by the hotel staff. Hello's and chit-chat all around, oiling the gears before we got down to work. The start was a bit slow but the meeting picked up its pace as folks went through their progress reports. The discussions got livelier and the sharing of ideas became easier. It was not unlike when the two partners in a couple are separated for a long time: you need to get reacquainted, push aside the veils of self-consciousness that build up over the time spent apart. The longer the separation, the thicker and heavier the veils, the harder it is to take them down. I felt that way about Jack, too - what was last night leading to, if anything?\n\nHe was seated across the conference table from me and a few seats down. We occasionally threw glances at each other, both of us trying to be very casual and professional and not attract attention. The meeting went on and on; most of my colleagues had little new and nothing surprising to say. I breathed a sigh of relief when my own presentation was over. Not that there was anything difficult about it; I just could not focus my attention on it, or my audience. My thoughts were on Jack, and what was building up again between us. At last he got up to give his spiel, and I had a good excuse to give him my undivided attention. \n\nHe was questioned at length about trivial details, and as he tried to put one or another of our colleagues' worries to rest, I found myself focusing on his long, elegant fingers as he leaned on the table, propping himself on his hands. And when he stretched himself to his full height, some six feet tall, my eyes were drawn to his crotch. I had to mentally slap myself and drag my eyes away lest I give him a complex or anyone else noticed. At one point, I saw the corner of his mouth slip upwards as he gazed my way obliquely. That smile of his was truly devilish.\n\nWithout thinking about it, I crossed my thighs and shifted my weight forward in my chair, leaning my elbows on the table and trying to look fascinated at his answers to questions rather than at his tall slim build and green eyes, somewhat obscured behind his metal framed glasses. The glare of the room lights off the lenses made it difficult to read what was in them.\n\nWhen Jack had left my room that morning, after another rather acrobatic and sweaty gymnastics session, I had taken a lengthy shower. The panties had dried and were ready to don again. I couldn't resist. I had no idea what hold they had on me, but whatever it was, I liked it.\n\nMy thoughts now were only on relieving the pressure that had built up deep in my pussy, that pressure that only a cock or a climax, ideally both, could possibly relieve. As I pressed my thighs closed and down on the edge of my chair, I felt the now-familiar fingers begin circling and probing. Delicately at first, almost tentative. Then, deeper and deeper, abrading the inside of my channel. A thumb now joined the fingers, massaging my clit exquisitely, finally pushing me over the brink. The gasp that escaped my lips was loud enough that several of my neighbors at the table looked at me. \n\nJack, eyes narrowed, said, \"Gesundheit! Do you need a tissue or maybe a glass of water, Dr. Novack?\" \n\nI glared back at him, fully aware that, like the old days, he'd read my face and knew what had just happened. \"Thank you, no. I just have something stuck in my throat. I'm OK.\"\n\n\"Let me know. It's no trouble at all.\"\n\nThe woman on my left pushed a full glass of water towards me. I smiled as graciously as I could muster and looked down at my notepad, scribbling some random note to make it look as if I'd been deep in thought and had just had an important idea. But the panties weren't done with me. The crotch bunched up and squeezed my labia, massaging me again and again, scraping in and out. It felt like four fingers bunched together, their knuckles bowed outwards, were filling me and stretching me and reaching for my cervix, pushing me up that roller coaster all over again, shoving in and out with increasing speed until...\n\n\"Amy? What do you think?\" my counterpart from one of the other groups piped up, lobbing his question at me.\n\nI couldn't think what to answer him. What were they talking about?\n\n\"Why don't we address all the financial details of the projects at once, tomorrow, after we've finished defining their scope. I think it will be more efficient than doing it piecemeal,\" Jack said, ever considerate and helpful. \n\nAt that moment I wondered if he actually knew what the panties were doing to me between my legs, and had had anything to do with my sexually very obliging undergarment with the inopportune timing. Lucky for me, the others around the table nodded their assent and bowed to Jack's wisdom, and I could relax, my indiscretion undetected. \n\nAt the end of our work session, I managed to slip away after feigning a headache to excuse myself from the group dinner. It wasn't until a couple of hours later that I heard the phone buzz, alerting me to the text coming in. I knew it had to be Jack. \n\nYou OK?\n\nYes. Just tired.\n\nNot like you.\n\nIt happens.\n\nYou had that \"look.\"\n\nWhat look? I was feigning innocence, not very successfully. My phone rang, and I picked it up.\n\n\"THAT look,\" Jack said, emphatically. \"The look you get when you cross and squeeze your thighs together and masturbate in public.\"\n\n\"Mmmm, and what look is that?\"\n\n\"A bit slack-jawed. Eyes very focused, on nothing at all. I've never run across another woman who could do that.\"\n\n\"Do what? Focus on nothing at all?\"\n\n\"Masturbate like you do.\"\n\n\"Ever thought that you're not getting out enough?\" I laughed.\n\n\"Ha! You sound tired.\"\n\n\"I am, Jack. I'll see you tomorrow.\"\n\n\"Meet me downstairs for breakfast tomorrow morning. I'll text you about 8 am.\"\n\nFor expediency I said, \"K,\" then rolled over and fell asleep.\n\n<Center>*****</center>\n\nJack texted me about 7:30 in the morning, but didn't wait to meet me at breakfast. He knocked on my door and gently pushed into my room when I answered. \n\n\"I'm still not dressed. Just got out of the shower. Why don't you take a seat, I'll be right out.\"\n\nMy morning routine would normally be very brief, but I paid some attention to adding a bit of make-up in deference to my colleagues. When I came out of the bathroom, dressed only in panties, bra, and thigh high stockings, Jack was seated in the desk chair. He'd found the box that had held the magic panties, as I'd come to think of them, had come in, and was turning it over and over in his hands, taking in its every minute detail.\n\n\"Where did you get this?\" he asked.\n\n\"Don't know, actually. It was here on my doorstep when I arrived, with a note.\" He looked at me, eyes a bit narrowed in thought, then turned his attention back to the box.\n\n\"I've seen this kind of wrapping before. Livvie got some of her lingerie from this shop. Swore by it.\"\n\nI had just pulled up my skirt and was in the middle of zipping up the side zipper when what he said struck me full force. \"Livvie?\"\n\nHe nodded.\n\n\"Why would Livvie make me a present of panties?\"\n\nHe shook his head from side to side. \"I don't know. Are those them?\" he tipped his chin in the direction of the maroon panties, which were casually draped over the arm of a chair where I'd stripped them off before my shower. I wasn't the most orderly or modest of people, but then, Jack might remember that from our former days together.\n\nHe picked up the panties, turned them over slowly, even more carefully than he'd checked out the box, then brought them up to his nose and sniffed the crotch.\n\n\"What are you doing?\" I asked him, incensed. The sight of him doing that had just ratcheted up my libido from 0 to 60 in less than a second. There was something rather lewd about his picking up such an intimate clothing item and treating it as he would a fetish object. As if to underscore that last thought, he inhaled deeply and rubbed them against his nose and mouth. He tried to hide it but I saw his tongue flick out and taste the satin fabric, then again, scrunching his face as if at a very unpleasant taste. \n\n\"What? It can't be that bad!\" I said, reaching out for the panties, vaguely insulted. He closed his eyes, sighed and handed them over without explaining further.\n\n\"Are you going on that sight-seeing trip today?\" he asked. He was referring to the outing that our meeting's hosts had arranged for those for whom this was the first trip to New Orleans. \n\n\"No. I don't need another trip to the depths of tourist hell. I was going to go to Frenchmen Street, find some live music in one of the clubs.\"\n\nHe nodded. \"I'll go with you, but before we go to one of your clubs, we're going to take a little side trip.\" \n\n\"To where?\"\n\n\"A botanica in Bywater. We're going to find out more about who sent you those panties. Why don't you wrap them up?\"\n\n\"But they're not clean!\"\n\n\"It's OK, even better for what we need.\"\n\n\"What's a botanica?\"\n\n\"You'll see.\"\n\n<Center>*****</center>\n\nAfter the day's meeting, we returned quickly to our rooms, changed into more casual clothing. Jack picked me up from my room and watched me pack the panties into the layers of deep green tissue paper in their box. We grabbed a cab to the Bywater neighborhood, part of the what had been the upper 9th Ward, and saved from a lot of Hurricane Katrina's devastation by its privileged location on higher ground. The cab dropped us off on St. Claude Ave, in front of a low wood-sided building, colorfully painted with various folk art images and skeletons. A sign above the double door read Heaven's Breath Botanica. Jack paid the cab driver and we crossed the street and entered, and we were immediately barraged with color, sounds, and scents assailing our eyes and ears.\n\nThe shelves of the Botanica were filled with glass vials, colorful feathers, some synthetic, others natural, and candles of all sizes and shapes, some free-standing, others poured in glass with the colorful images of saints on their sides. Bottles, embroidered flags, and altar cloths or tapestries hung on the walls amidst iconic-looking pictures of strange looking saints and African-style masks. At one end of the room was a table covered in all manner of items, a mish-mash of offerings, bottles of wine or other dark-colored liquids. A split counter ran parallel to one of the walls, the shelves packed tightly with racks of drawers. It was as if we had stepped into a different world entirely, one which I had never encountered except in pictures.\n\nThe music playing completed the tableau - somewhat similar to the sounds of Mardi Gras, yet its own. I was overwhelmed, but Jack strode to a dark chocolate-skinned saleswoman standing behind the counter as if nothing was more natural in the world than this cacophony. She was sporting thin braids decorated intricately with metal beads that clinked softly whenever she moved her head.\n\n\"Good evening. Is Manbo Celine here?\"\n\n\"She is out on an errand right now, but I expect her back any minute now. May I be of help?\"\n\nJack turned to me and took the box containing the panties from me, handing it to the lady behind the counter.\n\n\"Does this box look familiar? Is this something that may have been bought or... modified... here?\" \n\nThe saleswoman took the box and placed it on the counter carefully, then took off its top and placed it next to the box. She looked at the contents, fingered the tissue paper and opened its folds, revealing the panties, their color more maroon in the light of the shop. She did not touch them. \n\n\"As far as I know, we don't sell anything like this, but Sallie Anne and Celine, they would be the ones to ask.\"\n\n\"Does it look like a...?\" Jack asked.\n\n\"A gris-gris? Truly, I don't know. It's possible. A rather unconventional one, though I've run across much stranger ones. But really, Sallie Anne or Celine are the ones to ask,\" she repeated.\n\nJack nodded. \"OK, we'll wait for Celine.\" He re-packed the box and, taking my hand, led us away from the counter. \n\nWe wandered about the shop, taking in the myriad objects ranging from unusual or unfamiliar, to downright strange. The scents of candles and incense wafted in and out of her noses, mixing with something sweet-smelling, vaguely reminiscent of rum. I drifted towards the books, my eyes skimming the shelves with paperbacks graced with colorful covers about unfamiliar personages and rites in countries like Haiti and other Caribbean islands where African slaves had brought Vodou rites with them from West Africa and had blended them with the old, musty Catholicism of old Spanish priests.\n\nAt some point I sensed that we were being watched, that unsettling feeling of being under someone else's magnifying glass. \n\n\"Good afternoon,\" spoke the warm voice, right over my shoulder. \n\nI jumped, startled. When I recovered, I looked over my shoulders straight into a pair of very intense and seemingly very intelligent eyes. \"Uh, yes,\" I nodded. Why had I just lost my cool?\n\n\"Manbo Celine?\" Jack asked. \"Do you remember me? We met, quite some time ago.\" He stretched his hand to her and she took it after a few seconds' hesitation, taking his extended hand with both of hers. \n\n\"Jack! What a pleasure! It's been such a long time!\" The remains of a Brooklyn accent were layered just below a slight lilt. \n\n\"Yes, indeed it has. I could use your help, Celine,\" he said, in a tone that made me wonder if they had ever been intimate.\n\n\"Come on back and tell me how I can help you,\" she answered, leading us through the shop and a doorway curtained with strings of colorful beads. Beyond was a much smaller room, a table in its center, covered in a long, flowing African-patterned cloth with a crystal ball sitting on a stand. On the far side of the table was a large wooden chair, its seat adorned with a large colorful cushion. Celine pointed to a couple of other chairs and gestured for us to sit, while she herself took the throne-like seat. \n\n\"Jack, darling. Do tell what brings you here.\" \n\n\"I don't think I ever thought I would need your professional help, but I have a puzzle I think you might be able to help solve for us.\"\n\n\"A puzzle! I love puzzles!\" Celine rubbed her hands together, a broad smile on her face. \"But first, do tell me how Livvie is doing. And please, introduce me to your friend,\" she nodded to me, the smile on her lips not reaching her eyes. There was some history between them that I could not yet decipher. \n\n\"Oh, I'm sorry. This is Amy Novack, an old friend and colleague of mine. How is your shop doing? I gather well.\"\n\n\"Yes, very well. We help people who need some spiritual support. Katrina devastated so many. We've tried to do our part, however small.\"\n\n\"I think you are being rather modest by the sounds of it, Celine. I hear many look to you for guidance.\"\n\n\"I and the other Voodoo priests and priestesses simply pass on the wisdom and kindness of the spirits. I try to smooth the path of those in despair, the hurt, the dismay. A psychologist of sorts. Tell me how Olivia is doing.\"\n\nJack shifted in his seat. \"We've separated a while ago now. Getting a divorce.\"\n\n\"Ah,\" Celine paused a bit. \"It's been, what? Fifteen years?\"\n\n\"Eighteen, nearly nineteen.\"\n\n\"And the girls? Two or three?\"\n\n\"Two. One's a sophomore in college, the other in her last year in high school. Both doing fine, luckily.\" \n\n\"And Olivia? Restless as always?\"\n\n\"More so, I suppose. Have you two kept in touch?\"\n\n\"Now and then, now and then. She calls me occasionally. It's been some time.\"\n\n\"You used to be quite close.\"\n\nClose, this Voodoo priestess and Jack's wife? I didn't get it, but somewhere in that mystery lay the answer of Jack's bringing me to this shop to find answers about the panties. The walls were almost completely covered in religious images, many of them of the Virgin Mary and baby Jesus, but other saints as well decorated the walls. Along one wall, a long table was arrayed with candles interspersed with small plates and cups filled with bits of fruits or nuts. \n\nJack placed the box on the table. \n\n\"This is the puzzle,\" he said. \n\n\"Ah.\" She reached for it and removed the top, then opened the tissue paper folds. In the low light of the room, the dark green tissue looked almost black. \n\n\"Not one of mine,\" Celine said, after examining the contents of the box briefly. \"May I? I assume this is what you need my help for?\" she asked Jack.\n\n\"Yes.\"\n\nShe reached for the folded panties and, after unfolding them carefully, looked at me. \"May I?\" she asked, this time directing her gaze at me instead of Jack. \n\nI nodded, faintly embarrassed but also very curious. I had trusted Jack so far, wanting to understand what was going on, but having someone I didn't know at all handle such an intimate piece of clothing made me uncomfortable. Still, I was fascinated by how concentrated she was on the garment, how gingerly she handled it. And before I could react, she did what Jack had done earlier in my hotel room. She brought the panties to her nose and sniffed the material deeply, then she too tasted the crotch. ",
        "\"Bitter. Some Jimson weed. Datura. And something else... a bit of... hmmm,\" she looked at Jack, startled. \"No, not mine. But I think I know whose work this might be. The panties are indeed a gris-gris, as you suspected. They're intended to seduce the wearer with sensual pleasure, to draw her into their world of decadence and away from a loved one. The pleasure they give is meant to be unmatched, and thus they will distance the wearer from her husband or boyfriend or lover. No man would be able to compete with these. If my suspicions are correct, and I am pretty sure they are, the panties are cursed with a vengeance spell.\"\n\nI looked at Jack and he, in turn, looked at me. \"Why?\" I asked.\n\n\"Jealousy, I suppose,\" he said.\n\nCeline shook her head. \"Yes, but more than that. These, I think, bear the vindictiveness of someone spurned who wants to hurt both the wearer and her loved one. And it's a very personal spell. A spell that required intimate knowledge of the rival and her lover.\"\n\nJack and I were both speechless. \n\n\"How would she know, Jack?\" I asked.\n\nHe lowered his eyes to his hands, opened palms up, in his lap. \"I told her. We shared... intimate stories of our previous lovers. She got off on my telling her about you. And I did, before I came to realize she'd become obsessed with you. When I figured out what was happening, I stopped.\"\n\n\"And that was when things started to fall apart?\" Celine asked. \n\nJack nodded. \"It was almost as if Amy had become a third in our marriage. Livvie was simply obsessed with hearing about her. Claimed I loved Amy and that I no longer needed her. She wanted me to invite Amy to join us, in bed - she thought that would revive our passion for each other. I refused to do it. That's when she started withholding sex.\"\n\nI looked at Jack, puzzled and horrified. \n\n\"But Livvie wouldn't stop at that. Livvie was always extremely sexual,\" Celine said, softly.\n\nI looked at Celine and wondered how she would know that about Jack's wife.\n\n\"She brought another woman into our bed, and fucked her. She must have always planned for me to catch the two of them at it. That's why she was trying to talk me into staying. She was trying to use Mel as a substitute for you. She was convinced I loved you, and was trying to win me over from you, with Mel. But it all fell apart when I wasn't taken with Mel, and didn't want to stay.\"\n\n\"So...,\" I said, staring at the panties, then at Celine. \"They were meant to lead me to neglect Jack?\"\n\n\"Soon Jack would have been no match for these. They would have taken you over. You would have never given Jack the time of day. No man could have competed with them. Or woman,\" she added.\n\nAll three of us fell silent, staring at the panties. \n\n\"So, what now? Burn them?\" I asked after a minute or so, looking from Celine to Jack and back again. Inside, I cringed. I didn't want to destroy them.\n\nThe two of them were staring intently at each other. \n\n\"The curse won't die that way. It has touched you already. It can only be transferred, it cannot be neutralized or annulled,\" Celine said.\n\n\"But it can be transferred? How?\"\n\n\"With the panties. Whoever owns the panties will inherit the curse. As long as the curse moves to someone else, it will no longer affect you.\"\n\n\"But I can't give these to anyone! For one, who gives a pair of used panties as a gift? And who would knowingly take them?\"\n\n\"Well, they would not come from you. You still have the card?\" \n\nI remembered I had kept the card in my bag, wanting to check it against Jack's handwriting. I dug it out now. \n\n\"Here it is,\" I said, handing it to Jack.\n\nHe opened it and read the handwriting: \"From an admirer, with much love!\" Looking up at me, he said, \"See? This was all the inducement you needed to put them on. No, dearling, don't be embarrassed,\" he said, watching me blush. \"This must be a pretty strong spell. I'm sure they lured you in.\"\n\nI squirmed. \"The spell is resilient, yes?\" I asked Celine, wanting to change the subject. \"I mean, I washed the panties already, and the spell stayed.\"\n\n\"Oh no, water would not be enough to get rid of it. It might even make it stronger,\" Celine said. \"Listen, these days, only an unethical Voodoo priest or priestess would agree to cast a spell like this. They would have had to know what they were doing. And only they would be able to undo it.\"\n\n\"But you know who did it? Whose handiwork this is?\" I asked. \n\n\"Yes and no. I have my suspicions. There are about twenty of us practicing in the States, a few more in Canada. Of course some in Haiti. Any one of us could have done it, but only some actually would do it. Most of us are very committed to use Voodoo only for the good. But some of us... Still, I wouldn't be able to guess exactly who did it. Not just by feeling or looking at the panties.\"\n\n\"But Livvie would know,\" I said.\n\n\"She would never tell me,\" Jack said. \"And certainly wouldn't tell you.\"\n\n\"Can't you think of a way to trick her?\"\n\nJack sat for a while in silence. \"Livvie knows who could take the spell off. So if we send her back the panties...\"\n\nCeline shook her head again. \"As I said earlier, or meant to, the curse has to be transferred away from you to someone else. It cannot be destroyed, and it cannot be ignored. The only way the curse will move away from you is when the panties are worn by someone else.\"\n\nJack nodded again, looking thoughtful. \"I know what to do. Thank you, Celine.\"\n\nHe took out his checkbook, wrote out a check, and handed it to Celine. When she looked at it, her eyes widened.\n\n\"Jack, I can't take this! This is what I charge when I give a whole-day workshop! I barely gave you a half-hour consultation.\"\n\n\"Celine, please... put it to good use. I know there are plenty of good things you can do with it. But only you could have helped us, and you didn't have to do it.\"\n\nShe looked at Jack a little longer, then took the check and slid it under one of the candles on the table behind her.\n\n\"Thank you, Jack. I know just what to do with this. And tell my sister I love her. Despite everything,\" she said.\n\nJack nodded as he re-wrapped the box with the panties. Placing his hand on my back, he gently pushed me in the direction of the doorway back into the shop.\n\n\"I can't thank you enough, Celine. Take care of yourself.\" He hugged and kissed her on both cheeks, then watched as Celine and I shook hands. \n\n\"You take good care of him, Amy. He's one of a kind,\" she whispered to me.\n\nAnd with that, we left Heaven's Breath and headed back in the direction of Marigny and Frenchmen St.\n\nIt took me about ten seconds to review what had happened in my mind, and more than thirty to try to frame the question. In the end, I just blurted it out, no finesse at all.\n\n\"Sisters?!? Livvie and Celine are sisters?\"\n\n\"Sorority sisters, dearling. They went to college together, back in New York. That's where I originally met Celine, hung out with her. Friends only,\" he added, preempting my question. \"I ran into Celine again a few years later, at a party. I was on the rebound from you. She introduced me to Livvie, her sorority sister. They'd been really close. Got into some crazy stuff together.\"\n\n\"So Livvie is also into Voodoo?\"\n\n\"Not really, at least not that I know. But she was around when Celine got interested in it. Eventually Celine traveled to Haiti and got initiated properly as a priestess. Livvie was always fascinated with the culture and the mystery surrounding Voodoo. It appealed to her, but not in a spiritual sense, like Celine. She was more attracted to it by the... pyrotechnics, if you will.\"\n\n\"So, it sounds like you have a plan.\"\n\n\"I do,\" he said slowly. \"Are you sure you want to know it? Actually, it's pretty simple, but it would be easier if you helped me with it.\"\n\n\"Shoot, Jack.\"\n\n\"So... we want to give the panties to someone who will wear them, and we want to get them back to Livvie. Even if she doesn't know how to get rid of the spell herself, which I think is likely, she knows who could. So it's safest for everyone if the panties get back to her, and if she has a vested interest in getting rid of the spell.\"\n\nI thought I could start seeing an inkling of his plan. \"But she would never wear them. Especially knowing they were the ones she'd given me.\" \n\n\"No, she would not. But Mel likely would,\" he said. \"Mel is as likely to get seduced by them as you were, and that would affect Livvie eventually. When she finds out, she'll want to get rid of the curse.\"\n\nI nodded. To get rid of the curse, I'd have to get rid of the panties. I thought of the incredible orgasms I'd experienced wearing the panties and was saddened not to experience them again. But I had no reason to doubt Celine's warning that the panties were cursed with a vengeance spell, and that my dependence on them would get worse. And, after all, Jack was pretty damn good in his own right.\n\n\"You liked wearing the panties, didn't you, Amy? They felt good?\" \n\nI shrugged. \"They felt great. But... they're panties. I don't want to have sex with panties for the rest of my life. Not that there's anything wrong with panties,\" I winked, \"but I much prefer real flesh and blood men.\"\n\nJack squeezed my hand, and cleared his throat.\n\n\"Amy... do you think, perhaps, you might want to have another try at being together? I know they say you can never go back. But I'd really like to try.\"\n\nI halted. \"Are you serious?\"\n\nHe stopped as well, and gave me a bear hug. \"Never more serious, dearling. Dead serious!\"\n\n\"Well, then. What's the rest of your plan for getting rid of the panties?\"\n\n\"We clean the panties, re-wrap them, and deliver them to Mel, anonymously. I'm afraid you'll have to do it, Amy. She might recognize me. She's never met you, though, you should be safe.\"\n\n\"When are we going to do this?\"\n\n\"How long did it take them to dry? Overnight?\"\n\n\"Yeah. A few hours.\"\n\n\"Perfect. Then let's get them ready tonight. You can drop them off tomorrow late afternoon, early evening. She's usually over at my house by about then. She gets there before Livvie.\"\n\n\"OK.\" \n\nI felt a little wistful. I was thinking how nice it would be to use the panties one more time before giving them away. I didn't want to admit how much they'd burrowed under my skin. But it would be just as well go cold turkey now, rather than postpone the inevitable and make it even harder. Celine had said the more the panties were worn, the more their effect would take hold.\n\nJack squeezed my hand gently, bringing me out of my reverie. \"Hey, which club are we going to? I'm starving!\"\n\n<Center>*****</center>\n\nOur colleagues had broken off our meeting about 5 pm, giving the New Orleans residents with kids enough time to get back to their families for Halloween. Some of them had plans to take their kids trick or treating, while another was hosting a kids' party at her house. \n\nJack and I returned to my room. I had not only washed but gently ironed the panties, making sure to fold them as enticingly as I could. I had been so taken with the deep green tissue paper in which they'd been wrapped that I had preserved it intact. I re-wrapped them and placed the card Jack had dictated to me on top. I'd used my most elegant, careful writing: \"To my seductive lover, Melinda. May these bring you as much pleasure as you bring me.\"\n\nThe cab had dropped us off at the corner of Jack's street. Jack stopped at a small coffee shop to wait for me, while I walked on. I took advantage of the cover of the deepening dusk to unobtrusively leave the box on the doorstep of Jack and Livvie's house. Although not opulent, it was one of the beautiful,\"gingerbread\"-style houses in the Garden District, on a street lined with old chestnut trees. After dropping off the box as planned, I told myself I just wanted a quick look around. Jack would be happy nursing his coffee. I walked back behind the house on a path lined with rose bushes that had been severely cut back for the winter. The smallish lawn was immaculately trimmed, with beds of flowers going right up to two matching sets of French doors. The house was dark, and on a whim I decided to hide in the bushes flanking the doors. \n\nPerhaps five or ten minutes later I heard vague noises coming from the front of the house. Soon after, the lights turned on behind the French doors nearest to me and I saw a slender woman, in her late twenties or early thirties, stride into the room, placing the familiar box on the king-sized bed. This must be Melinda. She was on the tall side, with long, glossy and nearly black hair that fell in soft waves around her shoulders. She dumped her shoulder bag carelessly on the floor by a vanity, and stretched herself on the bed, arms out. She lay that way no longer than a minute or so, when suddenly she sat up and reached for the box. \n\nShe read the card and smirked, then set the card on one of the nightstands, and took out the panties. Even from where I was hidden, I could sense the delight with which she handled the panties, turning them front and back, admiring the workmanship and the fabric. I knew so well how soft and sensuous that fabric must have felt between her fingers. She stripped off her clothes, throwing her shirt and skirt on the floor. Leaving on her black bra, her stockings and her garter belt, but shimmying out of her own panties and sliding on mine - now hers. As she did so, I noted she did not shave her pussy, dark curls becoming clearly visible and then hidden again as she exchanged one set of panties for the other. Her smooth skin was bathed in the warm golden glow of the room lights, a soft complimentary tone.\n\nShe bunched up a couple of the pillows against the backrest, and lay herself on them, reclining at a comfortable angle. But she did not look comfortable - she moved her legs to and fro restlessly. Leaning back against the pillows, she half closed her eyes and placed one hand on her breast, kneading and squeezing the flesh of one, then the other. At length, she pulled one of her breasts out of the cup of the bra, revealing her nipple, teasing and pulling at it, rolling the deep purple-pink flesh between her long fingers. She fiddled with it a bit more, stroking the skin surrounding it and cupping the underside of her breast in her hand, then repeated the motions, pinching her other nipple. As she did so, her face betrayed some discomfort, her forehead rippling and causing two creases to form just above her nose. Again she fondled the underside of her breasts and rubbed the flesh around her nipples, arching her back upwards. \n\nAs she did so, she dug her heels into the mattress and her knees parted enough to give me an unimpeded view of her maroon satin-covered pussy, unruly curls escaping on either side of the panties' crotch. The fingers of one of her hands traveled down over the slight curve of her stomach and down between her upper thighs, trailing her nails over the naked flesh exposed between the panties and the top bands of her stockings. Soon she raked her nails over the narrow crotch of the panties, then began to make small circles with her nails above where her clit would be. I could just make out that the panties became somewhat transparent. Eventually she let her fingers slide underneath the material and I could see them under the satin, circling, circling faster in tighter and tighter circles. When she withdrew her fingers I could see them glint in the light with the juice of her cunt, which she smeared on her right breast first, then the left.\n\nThinking about the panties and their effects on me, I propped myself against the trunk of a tree facing the French doors, partially obscured by a low bush. I had worn black clothes and had even sheathed my hands in black lace gloves, appropriately enough for Halloween, so I worried only about hiding my face in the shadows. My own pussy was seeping its thick fluids, in sympathy with Mel's, and I snaked one of my hands down between my legs.\n\nI could see a sheen of sweat on Mel's forehead now. With one hand back inside the panties, fingers curled on what I assumed must be her clit, Mel rummaged in the drawer of the nightstand. She seemed agitated, even frantic, and finally pulled out several small objects I could not see clearly. With her free hand she reached for one of the small objects next to her and, squeezing it between her fingers, she clamped it on one side of her labia majora. It was a wooden clothespin. Then she followed it\n\nwith another two in quick succession, pulling on her flesh so that the clothespins looked like they outlined one side of the panties' crotch.\n\nShe pressed the crotch of the panties with her knuckles between her pussy lips, rubbing the material back and forth, then she put another matching three clothespins on the other side. Each clothespin she added caused her frown to deepen, but at the same time her back arched. When she was done, her cunt lips were held open by the clothespins, only the valley between them barely covered by the maroon material of the panties. With the fingers of her other hand, she flicked and snapped the clothespins against each other. I could imagine the soft clicking sound of the wooden pins as they bumped against each other, and my fingers rubbed more urgently between my legs without any more thought to being seen. \n\nI was torn between watching Mel's hands and the panties, and watching her facial expressions oscillate between delight, surprise, ecstasy, and near-pain. Her hands were never far from touching the panties, but it looked like the panties were affecting her whole body - breasts jiggling, neck arching, her facial contortions, her hips and pubic mound moving with what seemed like uncontrolled jerks, all to the rhythm of the panties transmitted to her fingers and the rest her body.\n\nWith the fingers of both hands she rubbed the material of the panties up and down along the sopping wet cleft, pushing the panties deeper into her cunt and sliding the fabric up and down against the glistening flesh. As she handled the material, her hips moved rhythmically with her fingers, up off the bed. I had a completely unimpeded view of her cunt, which flowed liberally. \n\nHer face was almost desperate in its contortions now as she pressed into her mound and ground her fingers and the crotch of the panties deeper and deeper into her cleft, until both her first and second knuckles were hidden and the black curls of her pussy hair spilled, matted and gleaming, clear sticky juice stretching like spit between her fingers. She withdrew them and brought them to her lips, licking them clean, her eyes closed. \n\nJust then an older woman with ash-blonde hair stepped into the room, took in the sight of the near-naked Mel, and in one step lunged onto the bed. I supposed this must be Livvie, though I had not seen her before. \n\nHer shout was loud enough that I could hear it clearly through the glass doors. \"Where did you get those?\"\n\nMel's voice was clear. \"I thought you gave them to me! Didn't you write the card? Oh my God, Liv, they feel amazing!\"\n\nWith a back swipe of her hand, Livvie snapped off the clothespins from one side then the other of Mel's cunt lips. I both heard Mel's wail emanating from the room as well as saw her face contorted in pain. Livvie's head went straight between Mel's knees. I imagined she'd fastened her mouth there, imagined her sucking on Mel and the crotch of the panties, though of course I couldn't see. \n\nThen, pulling her head back and still moving swiftly, Livvie plunged all the fingers of her right head into Mel's cunt and began pushing and pulling them out in a punishingly fast rhythm.\n\n\"You want amazing? Here's amazing! I'm better than those fucking panties!\"\n\nMel's pelvis rose higher and higher off the bed, her heels digging deep into the bed, toes curled tightly. She was swaying, having lost control of her movements, until I saw Livvie's head sharply snap back as a stream of fluid shot out of Mel's cunt and bathed everything close by. Her pelvis spasming and thigh muscles clenched and twitching, Mel's whole face was scrunched into a rictus of something between pain and pleasure. ",
        "Livvie swiped her own hand across her face. As Mel's spasms slowly subsided, I heard a deep, raw scream as Livvie tore the panties asunder, with no attention to being gentle, while screaming at Mel, incoherent, aching peals of frustration. The ripped maroon fabric seemed to roll up and shrivel.\n\n\"Those were not for you! They were meant for Amy, to get back at Jack!\"\n\n\"Liv, what is wrong with you? They felt great! Are you OK?\" \n\nLiv's shoulders were heaving, and Mel rose to comfort her, when all of a sudden my attention was drawn to the large pair of hands that reached around my breasts and embraced me from behind. The hands then slid down and, pulling aside my top, reached into my skirt. Finding no panties to interfere with their progress, the fingers found my clit and began their seducing, whirling dance with it. Even if his hands hadn't given him away, the quick look over my shoulder and the shape of the cheek and chin rubbing against my own would have identified Jack. \n\n\"I worried about you being gone so long. I came to see if you landed in trouble and needed rescuing. And you do. But of a different sort than I imagined.\"\n\nHe pulled one of his hands away and I immediately heard his jeans' zipper being opened and felt the jeans themselves being shoved impatiently downwards on his thighs, after which, moving my skirt out of the way, he plunged his rock-hard shaft into my slimy wet cunt. Our bodies found their natural rhythm, me leaning for balance onto the wall in front of me, not caring at all whether the light from inside or the noise would we were making would give us away. And when my climax spiraled inexorably up from my cunt into my stomach and chest, I screamed Jack's name as he, in turn screamed mine and pulsed long spurts of cum into me.\n\nWe went completely silent and still, afraid of being discovered, but the glass must have been thick enough, and Livvie and Mel caught up in their own throes of passion, that nothing happened. From the looks of it, they'd become lost in each other again, Mel liberally laying kisses on Liv's face and neck, her hands roaming all over Livvie's body. They didn't turn around. \n\nWe could hear the neighbors' dogs barking, and the laughter and screams of kids tripping over each other from house to house, but other than those sounds coming from the street, nothing. We were in a bubble, just Jack and I, and through the French doors, Livvie and Mel and the torn maroon strips of fabric, looking inconsequential on the bed. \n\n\"How'd you know I was back here?\"\n\n\"You weren't in front, and you hadn't come back. If you'd gone inside, it would have been through a back door, so I came back here to investigate. And found you.\"\n\nI leaned into him, relaxing for the first time that day.\n\n\"It's done, Amy,\" Jack finally spoke softly in my ear. \"It's time.\"\n\n\"Time for what?\" I whispered back. \n\n\"For second chances...\"\n\n_____________\n\nI really hope you enjoyed my story. If you did, please remember to vote and leave a comment."
    ],
    "authorname": "legerdemer",
    "tags": [
        "masturbation",
        "cunt juice",
        "magical panties",
        "self-pleasure",
        "erotic encounters",
        "cyber sex",
        "cunnilingus",
        "squirting",
        "voyeurism",
        "clothespins"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/pandoras-panties"
}