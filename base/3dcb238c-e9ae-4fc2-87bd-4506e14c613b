{
    "title": "Lost Empire Ch. 20",
    "pages": [
        "Derrick wasn't happy, not happy at all, he needed to get out of here and get things done. All this pomp and crap was starting to wear really thin on his patience. He'd just released part of the shield around the palace but wasn't ready to completely yet. He felt that there were still far too many threats out there to let his guard down yet. Mary on the other hand was thrilled to no ends to have human bodies within the confines of the palace again, after over two hundred years. Hartwell and many of his men were walking around still in a somewhat of a fog. \n\nDerrick pulled Hartwell aside a few hours later, \"What did your command say about all the proof that we provided them?\" \n\n\"That's the thing,\" Hartwell answered, \"after I relayed most of it, they told me to maintain radio blackout. I guess they are also afraid that command has been inundated with spies. I had always thought that command was the one place that wouldn't have spies,\" here Hartwell shrugged, \"guess I was wrong.\" \n\n\"I was afraid of that; these bastards have had quite a bit of time to infiltrate the ranks. I had Mary relay a message to the top officers about the tests that we have designed. I'll let them know the results as soon as we test it out on that one crew member.\" Derrick told him, though he was still afraid that this test was going to be as terminal as those in the past had been. \n\nSighing Hartwell wasn't all that happy about having a spy on board, though the thought of losing a crew member didn't appeal to him either. \"So..., how are you suggesting that we handle this?\" Hartwell asked Derrick. \n\nThinking, Derrick was at a loss a moment, \"Hmm,\" he said then an idea started to form. Motioning for Hartwell Derrick started, \"I got an idea, first we'll bring her here then...\" \n\n1st specialist Ensign Callie stared at the huge room that she was in. What a complete waste of space and money she thought walking around the throne room. Shaking her head she didn't even know why she'd been picked for this assignment; she was a tech specialist not a soldier. Sighing she'd have to get with the Rear Admiral later about re-assignment. Walking further in she saw a tall man with sandy blond hair and dark brown eyes greeting everyone that was passing through. \n\nStopping suddenly she reached into her pocket to make sure that the weapon was there. Smiling she walked toward the man a determined gait now to her step. Looking up at the approaching female Derrick smiled and extended his hand toward her. \"I want to personally thank you for your...,\" Derrick started. \n\nCallie pulled the weapon from her pocket and fired at Derrick laughing as she stated, \"Die you imposter to the throne, the nobles will never let you rule!\" Then to her horror the beam of the weapon passed through the Emperor striking the ground where he was standing. Swiftly a syringe appeared at her neck as she slumped to the ground the surprise still on her face. \n\nDerrick appeared a moment later, \"Take her to the interrogation room I'll be there in a few minutes, I want you there also Hartwell, we need to record all of this.\" There was a flourish of activity while the young woman was transported to the aforementioned room. Derrick watched as Mary attached several restraints and began scanning the woman looking for everything she could. \n\nAmazingly her old scans had found nothing, but the new ones that Derrick had suggested were beginning to find all manner of hidden weapons, poisons, and powerful micro explosives. Shaking his head Derrick saw that several more scans that he'd added to Mary's repertoire of tests still hadn't been used. Again as Mary started over Derrick's eyes grew wider as the hidden arsenal began to steadily grow. \n\nA few minutes later Derrick nodded when the last of the hidden weapons were taken off. Shaking his head Derrick knew he had his work cut out for him. Nodding to Mary, Derrick stepped to another projector and literally vanished only to appear across the room moments later. Nodding again Derrick watched as Mary administered another injection. With a groan the young woman's eyes fluttered open. \n\n\"Rear Admiral, what is going on,\" came Callie's startled question. \n\n\"Well you tried to assassinate the Emperor, for one. We also know that you are working for one of the two factions that wish to eliminate the emperor.\" Hartwell told her a slight growl to his voice. Derrick smiled then nodded to Mary who started an odd green beam on the woman's head. \n\nAt first nothing happened then the woman's face twisted into a sadistic smile. A different voice soon erupted from her mouth. \"So your pathetic, ancient tech detected me after all, so this will be an actual challenge after all. Hello you mechanical bitch!\" The voice shouted at Mary. \"I know that nothing will phase you, at least not 'til she is dead.\" \n\n\"As you suspected sire, the programs would have had me administer a lethal amount of radiation. All levels are constant, you may proceed my lord.\" Mary told Derrick a moment later. \n\n\"HA! Enjoy your little victory! I have... WHAT!!??? You discovered all of them it is not possible! You have not had the time to...\" Looking at Derrick the woman's face twisted into rage. \"You will learn nothing I have been conditioned well beyond your level of...\" \n\n\"Who ordered the execution? Taiolan or Shiolan? You will answer me now or suffer pain unlike any you have ever known. We can extract you and simply drain what we want from you, but I figure you'd rather die this way.\" Derrick told the voice coming from the young woman. \n\n\"You wouldn't dare, even if you had the capability,\" the voice spit back at Derrick. \n\n\"Oh we have it and more,\" here Derrick sighed and nodded to Mary. A large arm came out of the wall with a set of ancient headphone looking apparatus attached to it. Nodding again the arm descended and barely touched them to the woman's head. \n\nThe voice began to laugh, \"You haven't the guts to...\" Derrick sighed and nodded to Mary, as the current began to flow through the equipment an eerie scream began to issue from the woman's mouth. \"NO! NO! It's not possible stop! You're killing me!\" \n\nSmiling Derrick said, \"Like it matters you're dead any way you look at it, so you going to talk?\" \n\nThe woman's face twisted into another mask of rage as she spit at Derrick. \"Go to hell you undeserving Republic scum!\" \n\n\"Fine have it your way, oh by the way you will be returned to your soul core. Well in a way all the pain that you feel in death will. Well, enjoy, I will.\" Derrick told the voice then moved off as the woman's hand produced another weapon and fired at him. Again the beam passed through Derrick, \"Tsk, tsk, so sloppy, alright Mary no more.\" \n\nMary nodded with a little smile on her lips as current again flowed through the equipment. This time the voice screamed even louder for a few minutes then was gone, Callie's body finally free relaxed. Derrick looked at the part of the personality that they had captured; hell of a way to start a reign as Emperor he thought. \n\n\"Alright Mary,\" Derrick said as the hologram of him disappeared and he reappeared across the room near the door. \"Begin extracting all that you can before it expires.\" \n\n\"I have already begun as I felt that we would not have much time. I will display all that I retrieve as soon as the process is finished.\" Mary told Derrick with a small smile on her face. \n\nPulling a small blue disk from a protector in his pocket Derrick slipped it into a nearby slot. \"Mary program rho, epsilon, psi, alpha, iota, rho enact and enable.\" \"Yes Sire I am... Sire? Is this the finish of it?\" Mary asked startled. \n\n\"No I am afraid that it will only destroy about another ten percent of the program, I estimate that we have eradicated eighty seven percent of it now.\" Derrick told her. \n\n\"No Sire I estimate that eighty six point ninety seven percent of it is gone now, time to destruction has been delayed another two years. The remainder of the program will reach my core in another ten years. Considering that you came up with another twelve percent in only months, I now believe that you will completely clear me soon.\" Large tears were falling from Mary's eyes, \"Thank you sire, you have given this unit a chance to exist again.\" Here Mary bowed low to Derrick as did the others in the room. Hartwell was winking at Derrick causing him to shake his head in frustration. \n\n\"Mary is there any way that we can prepare her so that they can't use her again like this? She is a fine officer and I'd hate for the Rangers to lose her.\" Derrick asked Mary a few moments later as he looked down on the young woman. \n\n\"I believe that the program you were working on earlier just might work, though I could go in and strengthen her mind. I am afraid that it would take a few days though.\" Mary told Derrick as he had started to go over the data they had so far. \n\n\"Here Mary,\" Derrick said as he stepped to the console and started typing at blinding speed again. Those in the room backed up a considerable distance as they all watched Derrick with open mouths. Hartwell just smiled he'd seen this before so really nothing new to him. \n\nA few minutes later Derrick stepped back waiting for Mary to assimilate all that he'd just added. \"Yes Sire,\" came Mary's reply as she started to incorporate all of the new program Derrick had just written. \"Going over all scans now, I am picking up anomalous energy readings right before the weapon was pulled. Yes sire I believe I can boost her mind to the point that she can resist them without trying. Though I must caution Sire, they will know that she was aided.\" \n\nDerrick thought on that a moment, he'd not really expected them to tell that she'd been helped but then again how many of their agents were ever caught? Stepping back to the console Derrick started to type for several moments then stepped back. \"I think that might help to hide it, not the best but I think it will work. At least 'til it's too late for the soul source and all of what's left is reabsorbed.\" \n\nMary was looking over the new data that Derrick had entered, yes it was possible an actual challenge for her. Smiling, she was starting to believe that this man would be the greatest Emperor of all, though he still had to get the rest of the Empire to fall in line. \n\n1st specialist Ensign Callie awoke an hour later with an enormous headache. Trying to rise off the soft cot ... no wait she was in a bed?! What in the hell was going on? Groaning she again attempted to sit up, holding her head feeling as if the world was spinning. Looking beside the bed she saw an older looking woman with grey hair watching her. \n\n\"Who are you?\" Callie asked a moment later. \n\n\"I am Mary; I am the palace A.I. or rather a holographic representation of the A.I.\" Mary smiled at the woman sweetly. \n\n\"Ok, am I a prisoner? I remember walking into the throne room then I saw the Emperor. I felt such rage then an almost giddiness at the thought of killing him then nothing 'til I awoke here. What in the hell is going on?\" The wide eyed and almost panicked woman said. She'd remembered the execution and was afraid that she was next in line for the same. \n\n\"No, you are not a prisoner; you were under the influence of one of the sects. One sect that wishes to remove the Emperor before he can enact laws to rid the galaxy of them.\" Mary told the now shaking woman. \n\n\"What is to become of me? If I am not to be executed, then what punishment will I face?\" The shaking woman asked having backed into a corner truly afraid that she'd never again see the light of day. \n\n\"I was instructed... perhaps I should let the Emperor explain.\" Mary told the woman. \n\nA moment later a hologram of the same tall, sandy blond hair and dark brown eyed man she'd seen before appeared. \"Hello Callie, I am Emperor Derrick O'Toma. If you are willing we have a mission that I think you would be extremely interested in.\" \n\n\"Me? Why me? I am nothing a nobody.\" Callie asked, \"Oh sorry,\" she said to Mary. \"I forgot that it is...\" \n\n\"A hologram?\" A wide smiling Derrick finished for her causing her mouth to drop open. \"True due to ... uh circumstances and several hundred protocols, I cannot be there at this moment but trust me this is interactive. You see you are a hologram to me also.\" Callie was only nodding, her wonderment at the hologram grabbing almost all her attention. \n\n\"Anyway we have a mission that I feel will send a message to the sects. I will not send you without your consent but they will find you and try to extract what they put in your head. Oh don't worry it is gone we scan you once an hour to ensure it is truly gone. The thing is if there is nothing to take out they will kill you. So young lady are you up for it?\" When Callie just shook her head Derrick said, \"Ok rest and we'll talk later ok?\" Again all Callie could do was nod. \n\n\"Are you in need of a meal?\" Mary asked, \"We have a very fine chef who can make whatever you request to get your strength back.\" \n\nCallie smiled slyly, she was damn near famished and the hologram DID say that she could have whatever she wanted. \n\nDerrick sat a moment thinking of a way out of here, ah! He thought, \"Mary I am going to the fleet it is almost time for the next ship's emergence.\" Mary nodded and sighed it was going to be a full time job watching this one. \"Shelby.\" Derrick said into the com at his wrist, \"time to emergence?\" \n\n\"I'd say that she should be finished within a few hours Derrick,\" Shelby replied elated that Derrick had called her. \n\n\"Alright IMT,\" within seconds Derrick was on the bridge. All the ship holograms appeared, \"I called all of you here because we need to start adding to the fleet. Zan I want you to stand guard over 1000, I know that you will guard her far better than any other.\" \n\n\"I thank you Sire, I will do the best I can,\" Zan told Derrick bowing low. \n\n\"Conner I need you to accompany Shelby and I to the outer rim, I want you to be scanning for the signals I have given you while we are there, alright?\" Derrick told Conner who looked at Shelby then smiled. \n\n\"Yes your lordship, it is an honor.\" Conner replied bowing low. \n\n\"Tempro I need you to stay here and provide support for Zan only if it is necessary.\" Derrick ordered. \n\n\"Yes Sire, I will endeavor to help protect them both if necessary.\" Tempro said proud and bowing. \n\n\"Alright we need to go and get this done.\" Derrick told them, \"Shelby, transmit the coordinates to Conner.\" \n\n\"At once Derrick,\" Shelby told him, then there was the familiar wind up of the engine then they were gone. Sighing Mary tracked them all the way across the galaxy. Shaking her head she knew she was in for a truly epic reign by Derrick O'Toma. \n\nShelby and Conner exited the Trans-warp within the vicinity of a galactic rim system. \"Shelby can you detect any life out here?\" Derrick asked her. \n\n\"Beginning scans now, the third and last world of this system has an area I am having difficulty penetrating.\" Shelby replied a few moments later. \"Switching energy now, I am getting readings though something is starting to modulate the shields. I believe that we have been detected Derrick.\" A moment later a blast hit the shields effectively rocking the ship. \n\n\"Shelby, Conner, damage report!\" Derrick yelled. \n\n\"No damage, no direct hit sire,\" Conner told him. \n\n\"No structural damage, the blast had insufficient energy to cause any damage.\" Turning toward Derrick Shelby advised, \"I believe that it was only a warning. As the blast was fired I detected where it came from I estimate that those firing at us haven't much more power than what we just witnessed. An effective warning to say the least Derrick, orders on how to proceed?\" \n\nDerrick looked at the readings a moment then replied, \"Open a channel Shelby let me talk to who is down there, maybe we can give a little warning of our own.\" \n\nShelby nodded turning away then told Derrick, \"All ready Derrick.\" \n\n\"To the unknown assailants, this is Emperor O'Toma please be advised you are firing upon a superior force. I advise you to...\" Derrick had started. \n\nSuddenly Derrick speech was interrupted, \"I advise YOU, Emperor, or whomever you are to move on, this is restricted space and I will use deadly force to defend it.\" The voice shouted at them. \n\nDerrick smiled still the same hot head he was back then, shoot first, and screw whatever was next. \"So Rayb still as much a hot head as you used to be huh?\" \n\n\"I said mov... huh? What was that last? Could swear you called me...,\" Derrick had been trying to lock onto Rayburn the moment he contacted him. Shelby looked at Derrick and nodded, a moment later the man was in front of Derrick, \"that damnable word... Ray..b. What the hell is this!! Where am I?\" Looking around the man spotted Derrick laughing in the command chair. \"COMMANDER!!?? Oh my god you're still alive!!\" Running up the man embraced Derrick in a fierce hug. \"Damn it sir! We were all told that you were dead!\" \n\nShelby appeared a moment later advising Derrick, \"Derrick I am detecting a massive build up of energy from his residence I am afraid that it will go critical if no action is taken.\" \n\nRayburn's mouth dropped open as he walked around the hologram of Shelby, \"My god a projection within a self contained system of a three-dimensional image! It is absolutely beautiful!\" \n\nShelby giggled, \"He is as tech advanced as the last one Derrick, though this one is better mannered. Uh Derrick suggestions as to our current problem?\" \n\n\"Can you effect a shutdown of the systems?\" Derrick asked her. \n\n\"NO! You can't do a shut down; it will cause a massive power feedback destroying half of the planet. Just decrease the input power to the 5 central nodes; that should render the system in standby mode.\" Rayburn advised. \n\n\"Thank you sir I would have discovered that fact 2.3 seconds too late.\" Shelby told the startled man. \n\n\"My god man,\" Rayburn told Derrick, \"a fully sentient, anatomically perfect, cybernetic advanced artificial intelligence.\" Rayburn fell to his knees, and then looked up at Derrick. \"Uh sir? Could I like stay here for an extended period of time? At least 'til I expire?\" \n\nLaughing Derrick patted the man on the back, \"I felt quite the same way Rayburn, though I must caution against trying to pry too far.\" \n\n\"Why so sir?\" Rayburn asked still staring at the hologram of Shelby. \n\n\"They don't like anyone probing too far in their memory circuits they can provide quite a nasty shock.\" Derrick told the man with a smile. Rayburn look up at Derrick again shocked that Derrick had understood all that he'd just said. \n\n\"Are you sure you are Commander O'Toma? He never seemed to understand what I was talking about before.\" Rayburn told Derrick, sighing Derrick took the man to his experiment that had almost killed him. \n\n\"Ah! I see you have incorporated a human cyber download station,\" looking over the system Rayburn shook his head mumbling to his self. \"Seven buffers yes, sync capacitors, overload drain good, good.\" Then Rayburn stopped and looked at Derrick, \"My god sir! You have no backup in case of primary failure! You are one lucky son of a...\" Looking at Shelby, Rayburn swallowed, \"... gun sir. This could have cut out and took you with it!\"\n\nDerrick was startled a moment then began to smile, damn he was glad that Rayburn was on board he hadn't said so yet but Derrick knew he was with them. \n\n\"So,\" Derrick began, \"can I count on you? I need a trouble shooter like you in the new Empire.\" \n\nRayburn stared at Derrick for the longest time then tears began to slowly fall from his eyes. \"Sir I have had such a hard time since I got out, no one has wanted me or to have me around. Are you sure you want as big of a... messed up old soldier like me? They said I have a type of delayed PTSD it isn't like what most have.\" Here the man sighed, \"I can become extremely violent, are you really sure sir?\" ",
        "Derrick had been smiling the whole time, \"Well, you remember how bad Kimison was? With all the trouble he had when he got out. Then they sent him to that hell hole. We got him out and he, for better choice of words is a hell of a lot better. I think we can help you without much problem, Mary?\" \n\nA moment later the hologram of Mary appeared, \"Yes Sire?\" \n\n\"I need you to scan Rayburn here, tell me if his condition is curable.\" Derrick told the hologram. \n\nRayburn's mouth dropped open, \"You ha...ha...have two of them? It's not possible. NO!!\" Grabbing a nearby pipe Derrick had been using a few days before, he was soon advancing upon Derrick. \n\n\"Sergeant!\" Derrick yelled at the man. For a moment the man looked as if he recognized Derrick then roared and started to advance again. Suddenly a stream of electricity hit the man whose face registered shock then he slumped to the deck. \n\n\"Really, your Lordship you have to stop putting yourself in these situations!\" Mary told Derrick shaking her finger at him as if she would a child. \"Sire it is extremely difficult to protect you if you are out here so much.\" \n\n\"Just scan Rayburn and see if we can repair the damage that was done by the war.\" Derrick advised her. \n\nA small rectangular shaped light panel detached from the console. Emitting an eerie green beam that swept back and forth across the man's head. A few minutes later the light panel retreated, \"I have finished Sire. It appears that this man has a high state of resistance to all that is affecting him. He is curable but it will take at least three treatments. I am sorry Sire, but his higher resistance requires that I go slower.\" \n\nDerrick smiled, \"As I told you with Kimison, Mary, there is no need to apologize, the simple fact that these men can be healed is in its self a small miracle.\" \n\n\"No Sire, no miracle just a science that seems to have been lost over the centuries that the empire has been laying dormant.\" Mary told Derrick watching him to gauge his reaction. \n\n\"We really need to bring the empire back to what it was Mary. We have to or everything that all the emperors worked for will be for nothing.\" Derrick said suddenly noticing that Mary was watching him as closely as she was. \"What is wrong Mary?\" \n\n\"You,\" Mary started, \"embody all that the first emperor did. I am so very proud to be able to serve another man as great as he was Sire.\" \n\n\"Uh, thank you Mary but it is just how I feel, what I feel is right. This Empire survived for over eight hundred years only to be destroyed by petty greed and jealously. All the things I was taught to not be.\" Derrick told her as his mind drifted back to the past for a few minutes. \n\nOn board Tempro the short cropped blond hair, medium build man, with a smooth face was worried. So far none of the experiments had yielded any successes as of yet. He was pacing back and forth his mother Mary wasn't going to be happy he'd tried all 100,000 tissue samples that he had, nothing had worked. They had all failed each almost as horrible as the last, even terminating them as early as he had, still had caused a bit of instability with him. \n\nMary appeared a few moments later noticing immediately that her son Tempro was starting to experience a slight break down in his programming. Sighing she walked to him and embraced Tempro, \"I am so sorry my son, I did not mean to cause you such pain. I know that the experiments all failed but I have gone over all the data and I think I am beginning to see a pattern.\" \n\nTempro was surprised then slowly melted into the embrace of Mary then the tears started. \"I am so sorry mother that I have failed so much. A pattern mother?\" Nodding Mary outlined what she'd seen from all the samples so far. Tempro also nodded finally seeing why they had started to fail. \n\nMary stood by watching as Tempro started again armed with the new knowledge. He had gotten twice as far before there was any sign of failure. Smiling this time he'd watched all the indicators and was actually starting to see where he needed to go. Smiling he thanked Mary it made things a whole lot easier when the body had no real consciousness or even the beginning of a personality. Smiling Mary figured now maybe they had a chance to succeed; unfortunately they would have to have Derrick or hmmmm maybe this new compatriot of the Emperor. \n\nShelby and Conner emerged near the moon of the Imperial world. Derrick was preparing to go back to the palace when Zan called. \n\n\"Yes Zan is everything alright?\" Derrick said. \n\n\"Yes Sire, I thought you would like to know my wing mate is ready.\" Zan told Derrick excited. \n\n\"Very well, 1000?\" Derrick asked of the newest addition to the fleet. \n\n\"Yes Sire,\" A young, slender, long straight brown haired teen appeared in front of Derrick bowing Low. She was of course stark naked, stifling the urge to smile (it was nice yes but he really had to talk to all the A.I.'s about appearing naked). \n\n\"I'm not sure if you were told of this but I insist that all the ship's A.I.'s go by the name that they were given.\" Derrick instructed the new hologram. \n\nStill bowing the young teen nodded, \"Yes Sire it will be so.\" \n\n\"So please what was the name that you were called.\" Derrick smiled pleased that this was going as well as it was. \n\nShyly at first the teen looked up smiling she stated, \"I was named Sherry Sire.\" \n\nDerrick's mouth dropped agape, holy crap he hadn't expected this!"
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-20"
}