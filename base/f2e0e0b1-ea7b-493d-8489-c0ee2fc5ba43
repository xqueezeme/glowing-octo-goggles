{
    "title": "Imperius Ch. 04",
    "pages": [
        "To my wonderful and very patient returning readers: Here at last is Chapter four of Imperius. Your feedback has been enduringly helpful, and I look forward to any that you can continue to provide. \n\nTo any new readers: This is the 4th part of a series, and this installment in particular might be difficult to follow without the context of previous chapters. I suggest that you give chapter one a try before reading this one. \n\n~ * ~ \n\nLilah startled awake at the feeling of cold water being poured over her naked body, the sounds of a stirring Imperial encampment permeating her senses. Mairi, at Lilah's side, cried out with a whimper at the shock, her head of shining brown hair lifting off of Lilah's shoulder. \n\n\"Wake up, wake up all!\" Caius, the commander in charge of wrangling the Illythian captives was calling out airily as he strode amidst the caravans. His manner was brisk and businesslike, as though rousing inattentive students. He had been in charge of them for two days since their capture, and throughout the transportation he had proven himself indisposed to temper. His response to delay or defiance was a kind of amiable intolerance, readily prepared to offer punishment, but without any particular malice. \n\nAll around them, their fellow prisoners\u2014each one caged like an animal\u2014were being roused in the same way, gasping and shivering in the morning chill as Imperial soldiers doused them with hoses. \n\nThe caravans used to transport them over the rolling emerald hills of Illythiel had come to a halt in an open clearing, hovering less than a meter above the ground and surrounded by war tents as far as any of them could see. There, the soldiers with hoses began their work, and the sounds around them were rising to a cacophony that the prisoners would not have slept through even without the hoses. \n\nWith the prisoners awake, a crowd of Imperial soldiers began to form outside their cages. \n\n\"Lilah, they're all staring,\" Mairi whispered, half-petrified by the sight of a crowd of legion soldiers watching her. \n\n\"Try to ignore them,\" Lilah murmured back, her own expression determinedly calm. \"Don't let them see your fear.\" \n\n\"Pretend they're all wearing silly underwear,\" Antony suggested mildly from the next cage over, his Valencian accent lilting at the edges. \"That's what I do.\" \n\nMairi made a small, panicked sound in response, and hid her face against Lilah's shoulder. \n\nMairi had taken the capture the hardest of them. There was no guile or secrecy in her nature, and throughout her several months near the war-front, she had been among the least suited to it. Her hands, warm and gentle as they were, shook at the sound of every shell strike. Lilah had done her best to look out for her. For all the good it had done. \n\nLilah murmured to her comfortingly, ashamed that it was all she could do and even moreso that it was as much for her own sake as it was for Mairi's. That she was burying her anger and pain beneath the shadow of someone else's. \n\nShe glanced back at Antony over Mairi's head. \n\nHe sat directly behind Lilah, his back parallel to her's, slender and urbane. His tawny, sun-kissed skin marked him as unusual amongst the mostly blonde and red-haired Illythian captives just as much as his unruffled demeanor. \n\nHe had been unusually quiet as they travelled, and Lilah was struck with such a sense of contemplation from him that she had let him be. There was no comfort she could offer him now anyway. He had defied the orders of his own country in joining the Illythian cause, though doing so had been as much of Valence's sake as Illythiel's. He had striven to stem the tide of the Imperius and prevent it coming that much closer to conquering his own country. \n\nThat he would be taken at the very moment the Imperial onslaught had begun to overwhelm their every effort, when he had been at the center of so much hope only months before was a cruelty beyond measure. \n\nSitting motionless across from Antony was Diarmuid, his bear-like, thickly muscled build taking up a good portion of the space, hunched as he was. He was the palest of all of them, his hair a copper flame in the gloom of the day, matched by his short beard. Though they were faint, Lilah knew the scattering of freckles across his nose by memory just as she knew that his grim silence was not a sign of temper, but of guilt. Their capture weighed heavily on his shoulder\u2014much more heavily than he deserved, she thought, though she couldn't tell him so now. \n\n\"Did you see if Eris got away?\" she asked Antony in a low murmur instead, her lips barely moving. \n\nLilah could barely discern the minute shake of his head. \"We can only hope,\" he said. \n\nEach captive was guided out of their cage amidst a tumult of attention. The soldiers seemed amused to observe them stumbling on their sore legs and trying in vain to cover their nudity with their shackled hands. \n\nLilah helped Mairi find her footing, her efforts complicated by the restrains. Behind her, Antony was all ease and grace, his wavy dark hair tied back and romantically windswept after two days in a cage, traveling over rolling terrain. Diarmuid looked as though he saw none of the commotion and merely gaze forward with solemn dignity. \n\nLilah was surprised to see the same bone-deep weariness in the soldiers' eyes that she knew in those of the regiment. These soldiers had initially been promised a brief campaign in Illythiel, where the technology was decades behind their own, the weather was temperate, and the enemy was mostly cloth makers and farmers. And where the few true soldiers among their military would value honor too highly to dedicate much time to tactics or strategy. \n\nWhat they had found instead was a place where the enemy had a singular knowledge of how to use the landscape, rarely fought straight on, and introduced startling mechanical innovations to the battlefield when they did. The clockwork Goliaths the Illythian regiment employed at the front line, mechanical men that wielded astounding force and power without risking a single Illythian life in the process, were just one example. It hadn't been far into the war before the Illythian troops suddenly seemed able to command mist itself, hurling mechanisms at the legion horde that released a scentless white smoke in their midst and turned all to confusion. The short campaign they had expect stretched on, and now it had lasted longer than any other nation they had conquered, a fact that gave the Illythians a sense of grim pride. \n\nThey were lined up against a wall, and before many of the captives knew what would expected of them, they were hosed down yet again, cringing and cowering against the frigid torrent. Lilah was amongst those who tried to stand erect in the face of this humiliation and pain, but she did resort to covering her private parts against the force of the water. The effect was a Venus-like pose that drew her some notice in the crowd. \n\nShe looked up to find numerous pairs of eyes fixed on her, each glittering with lurid insinuation. One of them, she was unnerved to see, was Commander Caius himself, though his manner was more dignified than many in the crowd. \n\nHe waited, calm and genial, for the crowd to quiet before he began to saunter his way down the line, and imperial archivist and a lieutenant following at his shoulder. \n\nLilah lowered her eyes to the ground as they came nearer, though they stopped in front of Diarmuid first. \n\n\"Well, here is quite a figure,\" said Caius, taking in his height appreciatively. \"A fighter?\" \n\n\"His tags list him as an officer. He was found guarding an enemy medical team,\" said his lieutenant at his side in a guttural voice. Lilah had heard him referred to as Gracchus. He was a broad man, dark and thickly bearded, with an air of experience and scars to testify it. His eyes were deep set and vaguely animalistic enough to be intimidating, but there was a deep sense of professionalism as well, rigid yet oddly reassuring. Like Caius, Gracchus observed the captives without malice, which could not be said for most of the crowd. \n\nDiarmund stood expressionless in the face of their scrutiny, the kindness in his grey green eyes dimmed to something stoic. \n\n\"Or failing to guard, I suppose,\" the archivist remarked nastily. She was a broad faced woman, with a wide chin and close-cropped black hair. Diarmuid made no reply, but Lilah could feel how precisely the words had found his rawest nerve. \n\n\"They'll be putting you into the arena, I'd wager. I can just imagine how all that moon pale skin will gleam with oil. All those highborn women will be asking for you after every fight.\" \n\n\"They will be disappointed,\" replied Diarmuid. \n\n\"Now that, my friend,\" said the Caius, his tone mild, \"Is not something you want as much as you think.\" \n\nThey continued down the line, stepping in front of Antony next. From all that she had seen of the Legion thus far, the proceeding was startlingly casual. No matter how much the soldiers chose to call out taunts or mocking observations, the officers seemed inclined to be permissive. \n\n\"Your name?\" Caius asked Antony, and Lilah was startled to hear him respond in a voice entirely unlike his own. Gone was the dashing Valencian Captain with the irreverent wit. Here was an unctuous, amenable man with nothing resembling the bearing of a soldier, and a thicker, darker accent than the one she knew. It sounded distinctly Navarrene to Lilah, though she doubted many of her countrymen would have placed it so quickly. Navarre was far to the south, and she had encountered a few of it's people during her brief time in Valence, but even the renowned merchant princes of the country only traveled so much, and rarely as far north as Illythiel. \n\n\"Xavier, Messire. At your service,\" he bowed his head, his every movement a flourish. \n\n\"You had no battle tag,\" Caius remarked, a guarded aspect surfacing in his usual sardonic demeanor. \n\n\"I am no soldier, Messire. A mere merchant, offering my services wherever I can in these troubled times.\" \n\n\"There were no wares with you.\" \n\n\"I had not yet acquired permission to peddle them to the soldiers...and I imagine, I will not again have the opportunity.\" \n\nLilah kept her head lowered, holding her breath in the tension of the moment. Antony was an established figure among the Illythian regiment, a foreigner who volunteered to fight their battles with them, and excelled at it. The Imperius would deem his capture a coup of the highest order, and here he was attempting to convince them it hadn't happened at all. More, he was attempting to convince them he was Navarrene, which could entitle him to Imperial citizenship. It was a high stakes gambit he played, and Lilah held her breath in the suspense of it. \n\n\"You think much of your own usefulness, Master Xavier,\" said Caius, \"Prove it to us, and this may not be a difficult transition for you. We shall discuss this Illythian entrepreneurship of yours further, you and I.\" \n\nIt was Lilah's turn, and she felt hot and dizzy at the scrutiny. Nude, shackled, and surrounded by leering enemy soldiers, it was all she could do to keep her back straight, her expression calm. \n\nThe broad faced woman's eyes were as mocking with her as they had been with Diarmuid and Antony\u2014Xavier, she corrected herself. It would be better to think in terms of his deception, for all their sakes, in case she was ever asked. \n\n\"Claremont,\" Caius said, drawing her war tag out of pouch in front of her, and studying it. The word \"medical\" was written just beneath. \"It sounds more Valencian than Illythian.\" \n\n\"That's nothing unusual,\" Gracchus remarked. \"Put Illythians and Valencians together, they're as likely to breed as to fight.\" \n\nThe woman barked out a laugh. \"And here I thought it was the Skadiri the Illythians were like that with.\" \n\n\"It's both,\" he replied, still looking Lilah over, his eyes cold and hard. \"Illythians act prim, but behind doors they're like rabbits, and just as timid. Valencians aristocrats and Skadiri barbarians each get their pick.\" \n\n\"I don't know about timid,\" said a soldier from the crowd, \"I've fought some Illythian soldiers that were more like white leopards.\" \n\n\"What, hiding behind their tails?\" another asked back, to a round of laughter. \n\n\"Rabbits are thrice as fierce as Illythians, anyway. I've seen one fight a cobra and come away unscathed.\" \n\n\"Still just like an Illythian, then. Dodging about. If the rabbit had actually needed to wrestle its way free, you know which would have won.\" \n\n\"This one can wrestle my cobra any time,\" called a different soldier to raucous amusement. \n\nLilah's cheeks burned. She lowered her eyes, longing desperately to disappear. The thought of Mairi beside her, doubtlessly all the more terrified to face her turn after this, was all that helped her keep her poise despite the depth of her blush. They were being provoked deliberately, tested and measured, and Lilah determined to give them no more weapons to use against her. \n\n\"I've heard of her,\" said Gracchus, in his growling voice, and the crowd of spectating soldiers quickly quieted, \"Illythian captives talk about her from time to time. The angel on the battlefield, they call her. Some fanciful tale about wading through the thick of combat, patching wounds and searching for a lost love.\" \n\nThe interest in the small crowd sharpened perceptibly. Imperials notoriously relished displaying notable captives. Stories of their being showcased in their combat arena and aristocratic pleasure houses abounded. Each served as an emblem of conquest, of the might of the Imperius. \n\nBut Caius was gazing at the hologram hovering before him, as though he were prompted to recall some vague memory. \"What name did you say, Gracchus?\" \n\n\"Claremont, Lilah. Medical officer.\" \n\nThere was a pause, and a tinge of regret in Caius' voice when he spoke again. \"Mark her for the Imperial household,\" he said, all amiable nonchalance forgotten, \"And reach Consular Vero to request an audience.\" \n\n~ * ~ \n\nLilah lifted her shoulders off of the table and gazed at the tent doorway. Her entire body felt alive with the lingering ripples of her orgasm. She could still feel damp arousal between her thighs, his essence seeping from her quim. Her clothing, if you could call the sheer silk lingerie her captors had dressed her in \"clothing,\" was torn asunder, leaving her chilled and unkempt. \n\nMagnus had torn it away from her. \n\nMagnus, she thought grimly, as she rose to her feet. Why had she called him by his name? What possible benefit could there be in trying to penetrate his veneer of control\u2014Even if she could, did she expect to like what she saw underneath?  \n\nHe was, admittedly, startlingly attractive. It wasn't necessarily just good looks\u2014he had those, but she had seen men with more classical features than his\u2014It was an energy he exuded. There was a heady undercurrent when he entered a room, crackling with willpower, and she was drawn to it in spite of his being her enemy, the conquering invader of her country, her enslaver. He who would have her dressed in metal lingerie and paraded amongst his rivals. \n\nI should be relieved to be alone, Lilah thought ruefully. The more attention he focused on her, the greater her sense of humiliation. But however much she resented her enslavement, the day to day reality of it had been worse before Magnus had claimed her, and still was for the hundreds of Illythians who had been captured. \n\nAnd Illythiel was not the only country the bound by Imperial enslavement. She walked around his desk, watching a holographic map of her country shift before her eyes. \n\nThe Imperius had been born in the heart of Drace, in the minds of philosophers with visions of utopia and the hearts of warriors with ambitions of glory. They first conquered the Gauthrien nomads that travelled the wilds betwixt Drace and Navarre. The Navarrenes, with their renowned art and commerce, had been lured by the promise of a new world of economic possibility. They had signed a concordance to accept Imperial authority without having ever lifted weapons to resist it. \n\nD'Azure in the south, with its jungle climes and golden pyramids, resisted the influence of the Imperius for years before the eastern half conceded to its might, dividing the nation. \n\nThe world had expected Valence to be next. \n\nUntil then, the Imperial military had spread by slow and systematic degrees outward from its Dracian center, and the smaller Valencian empire nestled in the northwest of Navarre seemed certain to be next. Conquering it promised innumerable resources. Wealth, fine oils and fabrics, a horde of the world's greatest artisans and rivers of wine rendered Valence a beguiling fruit indeed, and Valence had readied its armies in expectation of the inevitable. \n\nWhen the Legion had taken to the skies and swarmed over far-flung, far-northern Skadir instead, it took the world by surprise. \n\nAnd it had sent Illythiel into a state of desperation. The implications were clear. The Imperius would swarm the north, the better to surround Valence on three sides. \n\nThat Illythiel would be foremost a means by which the Imperius would close in on its true goal was not lost on the Illythian leadership. They begged Valence for aid, for their armies to unite, that their two nations might stand as bastions against the threat together. \n\nValence declined. They needed their armies to protect their own borders. Valence offered tacit support through trade, but no overt declarations of alliance. Otherwise, Illythiel was on its own, and had been for three grueling years of war. \n\nStill, all hope was not yet lost. For all the Imperial confidence and the plans for preemptive celebration, General Arturius still leads the rebellion with his dwindled regiment in the north, trying to turn the tide. \n\nIn the meanwhile, Lilah would have to adapt, both in her role as a slave, and in the unwanted fascination that came with it. \n\nIt was like a snare, she thought, covering her face with her hands. The more she struggled against it, the more tightly it constricted. \n\n\"Well,\" came a voice from the tent's entrance. Lilah turned to see Saphir, looking at her ruined clothing mournfully. \"I suppose it might have been worse.\" \n\nHe held a small stack of fabric. She didn't move to his side or beg him to tell her she was not to be thrown back among the caravan slaves. \n\nBut she was tempted. \n\nLilah crossed her arms over her bare chest, more chilled than ever. Saphir took notice and, placing the pile in the war table, drew the topmost bit of cloth. A silvery cloak unfurled in his hands, and he draped it gently about her shoulders. She looked down, feeling subdued and strangely guilty. \n\n\"He left without a word,\" she said. \"Saphir, what does the Praetor do with slaves he becomes displeased or bored with?\" she asked. \n\nSomething flickered in Saphir's eyes. It might have been amusement. \n\n~ * ~ \n\nGet ahold of yourself, Magnus told himself silently as he strode through the encampment. You still have a war to win. \n\nIt was true. As far as his men were concerned, Magnus' tactics were the first reason that the Imperial campaign in Illythiel stood on the brink of success. While some of his colleagues might disagree with this assessment, he intended to see this war out to its conclusion, and soon. \n\nA three year campaign, nearly at its apex, and his colleagues wanted to throw a party. Worse, they had managed to convince the Legate that it was necessary, a practical move to incentivize the soldiers. \n\nAnd perhaps it would do that much, Magnus allowed as he neared the slave caravans. They were floating contraptions, hovering above the ground silently, only giving off a low hum when actually in motion. \n\nThe visible cages were filled with many of the most beautiful of the Illythian captives, male and female alike. Upon being delivered to the imperial capital, most of these slaves would be groomed in luxury, their skin massaged with oil and their bodies draped with silks and gemstones. For now, a simpler preparation would do. ",
        "Behind the caravan, grooms washed the slaves briskly, brushing their hair until it shone and dressing them scantily in a color that marked their role and rank among the Illythian regiment. \n\nThere was a processing tent behind that, and on a whim, Magnus entered it. \n\nInside there were a dozen officials inspecting as many new slaves in various states of undress. Pontius, a fawning consular for whom Magnus felt a particular disdain, appeared to be in charge. \n\n\"This particular waist-cloth-,\" Pontius was explaining to one of his assistants, as he demonstrated on a trembling female captive in blue, \"-is slitted here to allow for accessibility.\" \n\nThe young woman cringed away from him, and Pontius caught her chin in a cruel grip, \"If you don't like my fingers, girl,\" he said pulling her close to him by the waist and pressing his groin against hers, \"I'll be happy to use something else.\" \n\nThe girl's lips trembled as tears spilled from her large eyes. \n\nShe was a cherub of a girl, and an exception to the Illythian predisposition toward pale skin and red or golden curls. Her shining nut-brown hair reached her waist and framed a rounded face with wide-set doe eyes. She gave an immediate impression of being at once dainty and plump. While her wrists and ankles were as slender and delicate, there was a distinct youthfulness to the gentle rondeur of her petite figure. \n\n\"As for the brassiere,\" Pontius continued, and while his voice remained businesslike, Magnus could hear the relish underneath, \"-it can be unclasped in the front\u2014My liege!\" \n\nPontius had seen him, and as he hurried to Magnus' side, his thin lips spreading in an unctuous smile. \"This is an unlooked-for honor, my lord. May I offer you any assistance?\" \n\n\"I'm curious how many captives we'll be allowing the soldiers access to at this...party,\" Magnus replied. \n\n\"Ah well\u2014none of those in Consular Vero's keeping, naturally. He is solely responsible for procuring a stable for the exclusive use of the Imperial household.\" Magnus watched Pontius attempt to suppress the envious curl of his thin lips, and fail. \n\n\"I, however, have been honored with the task of overseeing the management of the largest bulk of useful slaves. Those intended for the arena and the pleasure houses.\" \n\n\"My colleague Jadir, has been granted the task of herding the less desirable slaves,\" Pontius continued in a tone that suggested this served as some consolation for his being denied the privilege of training the most breathtaking captives. \"The ugly and infirm,\" he added helpfully. \n\n\"I see,\" said Magnus, keeping his opinion\u2014that it was rather rich of Pontius to be quite so disdainful of the less attractive when he himself had lips the shape of dying worms and skin the color of curdled milk\u2014to himself. \n\n\"Needless to say, the supply for tonight's festivities are coming entirely from my own stock, and I can assure that we are being selective. We are choosing those that have proven reasonably manageable, and we are dividing them between those intended for the officers and those intended for the lower ranks. Everyone shall have an opportunity to enjoy themselves\u2014but we wouldn't want any unfortunate mishaps. My most beauteous pets shall be reserved for those of deserving stature.\" Pontius paused to afford Magnus an obsequious nod. \"Of course none of them are as captivating as the vision you graced us with earlier today,\" Pontius added, and Magnus concealed his amusement as the Consular grasped for a way to launch an inquiry that wasn't utterly presumptuous. \n\n\"Will you be...partaking of the festivities, my liege?\" Pontius asked. \"I know you do not entirely approve, but\u2014,\" \n\n\"I'll be attending the party, if briefly,\" Magnus replied shortly. He moved toward the processing table and lifted one of the electronic tablets from its surface. \n\n\"Are all of the processed captives given a semi-permanent contraceptive during their examination?\" \n\n\"All of the woman, yes,\" Pontius said, nodding. \"Only...some of the men. We will provide an electronic record for when a new insertion is required, just as we do for all the slaves currently in the capital, but it lasts twelve years and it's only rarely necessary.\" \n\n\"Can it be safely removed at any time?\" \n\nPontius seemed only slightly taken aback. \"Yes, my liege\u2014but doing so is rarely sanctioned before a slave is granted citizenship.\" \n\n\"I see,\" Magnus said again, still studying the tablet. \"I would like to have all the records for the medical corps we've captured so far delivered to me,\" he added, in the unmistakable tone of someone accustomed to obedience. \n\n\"Of course, my liege.\" \n\nMagnus' walk back toward his war tent was one of a great deal more peace of mind than his walk away from it. \n\nHe nodded to Daegon, standing guard with a grim and slightly feral expression, before he lifted the curtain and stepped through. \n\n\"There,\" Magnus heard Saphir say as he entered. \"Now look in the mirror and tell me you don't look breathtaking.\" \n\nMagnus' breathing felt perfectly normal, but his cock was another matter. His loins felt alive with fresh, frustrating hunger at the sight of her. \n\nThe Lilah in front of him was temptation in human form, barely reconcilable with her usual demure gentility. She sat in the center of the tent, her back to him, her slender shoulders and lithe midriff bare and creamy in the lamplight. What little fabric covered her intimate places was a lurid shade of scarlet. A length of red gossamer descended from the supple, satinesque lingerie and covered her legs and arms without concealing them. The lavish accents of gold against her skin were unchanged, yet now they emphasized more than ever the golden lustre of her hair. \n\nHe wanted to feel the silken caress of that hair against his cock, to do slow, unspeakable things to her tempting body. He wanted to forget this witless festivity his idiot colleagues insisted on and end the war this very evening so that he could take her away from this place, where there was even the faintest chance she might escape him. \n\nFor now, however, he was bound by duty\u2014absurd as the duty may be. \n\nMagnus crossed his arms as he stood in the entrance, watching them. \n\nLilah reacted to him first, catching his reflection in the hand mirror she obediently\u2014if a bit listlessly\u2014observed herself in. He saw her eyes contract in the glassy surface before she lowered the mirror onto her lap. \n\n\"Come,\" he said. \"The party begins.\" \n\n~ * ~ \n\nThe celebration commenced formally at dusk, but that was not to say that there was a lack of spectacle before then. \n\nEvery visible captive seemed to be providing entertainment of one sort or another. Slaves were displayed everywhere, garbed and bound in a thoroughly provocative fashion. One Illythian woman they passed by was tied to a post while a small cluster of soldiers teased and fondled her. Lilah saw one of the soldiers pour wine down her throat before kissing her roughly. \n\nAn improvised fence had been constructed in which two Illythian soldiers were grappling with one another in a makeshift gladiatorial arena. \n\nThey were given neither arms or armor, which didn't surprise Lilah very much. Not only were they still in the center of Illythian territory, dealing with captives whose will remained mostly unbroken, but there seemed to be a great deal of wine being poured. \n\nThe heat was oppressive. These were mostly southern soldiers, accustomed to the desert-scape of Drace and D'Azure, and the sultry heat of Navarre. The Illythian night was much too chill for their taste, and they compensated with a myriad of hot lamps, washing the camp with golden warmth. \n\nMagnus looked at these with a trace of disgust for the careless excess they represented\u2014if they enemy hadn't know their position before, they did now\u2014but Lilah had to own that she would be more uncomfortable without them, exposed to the chill of the night air with nothing but the absurd lingerie she was dressed in. \n\nA small, stage-like structure overlooked the grappling soldiers and it was toward this that Magnus strode, Saphir and Daegon trailing behind, with Lilah in between. \n\nMingling on top of the structure was much of the same group Lilah recognized from the Legate's tent. Praetors, Consulars, and the Legate himself sipped wine amongst the officers deemed important enough to stand atop the dais. \n\nMagnus nodded agreeably to most of these as he passed, but moved directly toward a brawny man wearing full armor who seemed to be standing guard rather than sharing in the festivities. He looked familiar to Lilah. \n\n\"Captain Gracchus,\" said Magnus, as the two men gripped one another's wrists briefly, \"Thank you for assigning your men to the perimeter.\" \n\n\"My liege,\" Gracchus replied in a voice as deep and hoarse and churning gravel, and Lilah remembered him. He had been present during her processing as a slave. His very presence had been enough to make the guards straighten their backs and sweat.  \n\nNow she watched him incline his head to Magnus respectfully, \"My men know their duty, and they don't distract easily,\" he said. His deep set eyes evaluated Lilah briefly before they cut back to Magnus. \"We will be vigilant.\" \n\n\"I am certain of it,\" said Magnus, \"What of events in the north?\" \n\n\"We have our sights on Islamuir for the next outpost,\" said Gracchus. Lilah behind Magnus' shoulder, felt the blood drain from her face. \"It's difficult to get any sky-ships close, but there's a water channel that our smaller ships can\u2014,\" \n\n\"Magnus,\" interrupted Legatus Hesiod, having approached. His tone was fondly scolding, and his eyes looked amused. \"I hope you don't plan to talk tactics the entire evening.\" \n\nMagnus bowed to the older man respectfully, \"Not at all, my liege. May I have some more wine brought to you?\" \n\n\"Nonsense, come join me at the balcony\u2014and bring your splendid companion. We're watching the most interesting little dramas unfold. I've never witnessed anything like it. We've have the arena in the capitol, of course, and they do know how to put on a show\u2014but this!\" He led Magnus, who guided Lilah by the arm as he followed, toward the edge of the dais. The crowd of officers parted for them. \"This is truly fascinating,\" said the Legate, gesturing to the men below. \"Those two served in the same unit, and they didn't want to fight each other at first, promises of extra rations or no. But then the guards took to whipping them for every hesitation, and now they're trying very hard to give us a show without really hurting one another.\" \n\nLilah reminded herself to breathe, and searched the crowd of chained captives waiting their turn inside the tent for anyone she knew, her eyes zeroing in quickly on the tallest and palest man in the group. \n\nDiarmund, she thought, staring at him. There was an ursine quality to him, a thickset muscularity than made him appear athletic, yet not hard. His soft grey eyes were also scanning the captives around him, and when at last they rose to meet hers he startled at the sight, his lips parting ever so slightly. \n\nLilah looked away, certain Magnus had seen and uncertain whether she should want him to or not. He might be able to save anyone he pleased from the arena, but she hadn't the faintest idea whether they'd be better off for it. When she dared a glance back at Diarmund, he was staring into the small arena with studied focus. \n\nThe bout ended when one of the reluctant fighters lost their strength, and lay unconscious, while the other stared down at them with haunted eyes. \n\nTwo new captives were led through the fence and this time, Lilah didn't hide her recognition. She gripped the railing in front of her in utter distress, barely caring that Magnus studied her reaction. It was the girl he'd seen Pontius toying with earlier, the petite beauty with the long, walnut hair. \n\nLilah knew her as Mairi, the youngest nurse in her unit, and the most timid person Lilah had ever met. \n\nA gangly woman with hair like a fiery orange cloud and a pointed fox-like face entered the enclosure behind her. Like Diarmund, she had freckles, but whereas his sprinkled the bridge of his nose, hers dusted her entire face, chest, and shoulders. Her curls were not as defined as Lilah's, but they were courser, frazzled into wild fullness around her face. \n\nThere was a strange sort of beauty to her, and a strange sort of grace. Her arms and legs seemed over-long and awkward when she stood still, but there was a loping smoothing to her gait when she was in full stride. \n\nElspeth, Lilah thought, watching the woman take her position in the center of the fence. She knew her as well as she knew Mairi, if far less fondly. \n\nBoth women were marked as medical recruits by the blue fabric they wore, and Lilah wondered if Magnus were behind this. It was a strange transition, to go from watching a pair of brawny men scrapping to a pair of female nurses. \n\nBut the Imperial soldiers around the fence didn't seem to mind the change at all. Indeed, many of them leered and catcalled in anticipation as the bout was marked to begin. Mairi looked terrified, while Elspeth looked around at their captors with hard insolence. She spared the dais a particularly dark glance, and did a double take at Lilah, just as Diarmund had. She took in the scarlet silk, the golden filigree, and sneered with cold disgust. \n\nLilah took a shivery breath, feeling scalded. The match was declared commenced, and Elspeth loped toward Mairi, grim and unhesitant. The sight made Lilah's hot shame turn cold and settle in her stomach like lead. Elspeth was going to take out her rage on Mairi, and give the watching Imperials exactly what they wanted in the process. Lilah wanted to call out, to curse Elspeth for an impetuous fool. \n\nInstead she swallowed the words, and gripped the railing tightly, seeming oblivious to the observation her anxiety engendered among several of those around her. \n\nMairi darted away from her opponent, skirting timidly out of reach. But she wasn't quick, and Elspeth herded her into a corner with little effort. The observing soldiers jeered with disappointment at the lack of real spectacle, which only seemed to panic Mairi all the more. Turning frantic, she tried to race around the larger woman, but Elspeth veered with her and caught her by the arm. \n\nTurning, Elspeth hurled Mairi into the ground, and lowered over her from behind. She settled onto the smaller woman's midsection, snatched at one of Mairi's little hands, and pulled her arm across her back with ruthless force. Elsbeth other hand burrowed into Mairi's hair, and tugged her head back brutally until Mairi was forced into a painful arched position. \n\nAcross the distance between them, Elspeth's eyes found Lilah's, and her gaze was deep with malice and meaning. \n\nMairi, as much out of terror as pain, let out a keening scream. \n\nWithout hesitation or warning, Lilah jumped the railing and dropped into the enclosure. She landed gracefully enough, though the damp earth gave beneath her, and raced toward Elspeth and Mairi. \n\nBehind her, there were cries of surprise, many of which shifted swiftly into amusement. Magnus, not the least bit amused, made to jump in after her himself and drag her back out, but the Legate placed a firm hand on his arm before he could do so.  \n\n\"Wait,\" Hesiod said, suddenly emanating the authority that lurked beneath the surface of his usual conciliatory tone. \n\nWhen Lilah reached the two other women, Elsbeth was still holding Mairi's head to the ground, but the unpreparedness was a feint. As soon as Lilah came into striking distance, she turned and pushed her legs out, catching Lilah in her stomach and hurling her over Elsbeth's head. Lilah's own speed worked against her, and she landed hard enough to shock her lungs into inefficacy. \n\nLilah gasped for air as she felt Elspeth's weight drop on top of her, but when the larger woman's hands came into contact with her neck, Lilah felt a wave of adrenaline take hold of her senses. She threw a punch toward Elspeth's cheek, and it landed with a dull crack of sound. She threw a second, harder blow, and it was enough send Elspeth's head reeling back and loose her hold enough for Lilah to wriggle out from under the larger woman. \n\nBy the time she'd found her footing, so had Elspeth, who rubbed at her mouth in disbelief. \"Where did you learn to punch like that?\" she said, watching Lilah incredulously. \n\n\"It's been a long war,\" Lilah replied, her voice coming out shakier than she intended. \n\nThe soldiers around them were laughing and calling for more, enthused by the change of pace. \n\nLilah noticed with some relief that Mairi was scrambling to her feet and hurrying out of proximity, but Elsbeth took advantage of Lilah's moment of distraction and lunged at her. Lilah barely danced aside in time. She was not at all confident that grappling with Elsbeth up close would go well for her, with neither strength nor reach on Lilah's side. \n\n\"You've come out of it well enough, Imperial whore,\" snarled Elspeth. \"Does all the gold and silk make it worth your while?\" \n\nLilah's insides felt frozen, but she met Elspeth's sneering contempt without flinching, \"You don't have the slightest idea what you're talking about.\" \n\n\"No?\" Elspeth replied, her lip curling. \"Are you going to pretend you don't have a choice?\" She began to circle Lilah, who matched her movements warily, ignoring catcalls on all sides. \"Poor thing,\" Elspeth said, and pouted with exaggerated, mocking sympathy. \"Well-fed and clothed like a little imperial pet. What hardship you've endured!\" \n\nElspeth lunged again, throwing a punch that Lilah narrowly dodged. \n\nAnd then countered. \n\nShe caught Elspeth on the temple with a single sharp blow, then danced out of reach, her guard in place. Elspeth was no more a soldier than she was, but where Lilah had floundered in defense training during early recruitment, Elspeth had excelled. Lilah was as wary as she'd been when Elspeth had lunged the first time\u2014more, as now she no longer had any tricks up her sleeve. Her only hope was to keep dodging. \n\nElspeth's eyes narrowed at her, calculating, her posture hunched and feral, \"You shouldn't have interfered, you know. Hell, Mairi'd be better off if these fights were to the death. It would be a blessing in comparison to being an Imperial toy.\" \n\nLilah's eyes flared like blue fire, cold outrage beneath their brilliant surface, \"Death is never a blessing.\" \n\nElspeth laughter was hard with spite. \"You know, that's your problem. That's always been your problem. You're so desperate to hide from the bad things that you'll scrape and bend to the first figure of authority who gives you an order.\" \n\nShe gestured toward the dais, \"Well, is it worth it? You can tell me. Is it a little fun? Do they feed you by the hand like a little kitten? Or\u2014are you more like a puppy? You know a little b\u2014Oof!\" \n\nLilah dove low into Elspeth leg, sending the larger woman forward into the damp earth. But Elspeth recovered quickly, catching Lilah's own leg before she could dart out of reach or capitalize on her upper hand. The two women rolled, struggling viciously, and Elspeth came up on top. \n\nBefore Elspeth's hands could close around Lilah's throat, Lilah beat her to it, pressing her palms flush to Elspeth's thyroid gland to hold her off. She expected Elspeth to try moving Lilah's hands first, but it seemed that Elspeth was too full of fury. She simply tried to throttle Lilah back. \n\nLilah held her grip, but Elspeth had the longer arms and her fingers closed around Lilah's neck firmly, choking the strength out of her. The struggle was doomed on both sides perhaps, as both of them fought a losing battle for breath, but Elspeth was seemed to be getting by far the greater sense of satisfaction out of it. \n\nThen Elspeth's weight was gone, lifted off her. Lilah could hear dull shouting all around her, but she couldn't make out any of the words. A dark shape filled her blurred vision, and hands touched her face, but she gasped for breath, unheeding. ",
        "She rolled to her side, and felt a hand on her back. When at last she drew in a long, ragged breath, the sounds around her began to form a coherent shape. \n\n\"No, I've got her.\" \n\n\"My liege\u2014,\" \n\n\"I've got her.\" \n\nShe was lifted into familiar arms as though she weighed nothing, and she trembled at the look in the grey eyes that gazed into hers. \n\nMagnus carried her to his sky-ship, ignoring her hesitant protests, and took her to the extravagant washroom she had first seen that very morning. It felt like ages had past since Saphir had dressed her that morning, and given her advice on how to maneuver through the dangers of her new position. \n\nMagnus bade Saphir to draw her a bath, but he stood by himself in the process, watching her scrub herself gingerly and towel-drying her hair when she rose from the water. \n\nSaphir left them. \n\nMagnus continued to dry her, warming her arms with friction. It felt to Lilah as though the silence between them thickened. She avoided his stoic gaze. \n\n\"I should punish you for this,\" he said at last. His fingers brushed over a darkening bruise on her shoulder, and his eyes turned cold. \"I still might,\" he said, his voice a quiet growl that made Lilah's stomach flutter strangely. \n\nHer fear battled with her desperation, and desperation won ought, guiding her courage in the process. \n\nHer eyes lifted, with their brilliant, arresting shade of blue, and held his. \"Please, save her,\" she said. Magnus studied her. The depths of feeling in her gaze was raw and real, and softly intoxicating. He wanted to hold her face and kiss her full, pouting lips until that expression melted into hazy desire. He wanted to trace patterns of pleasure on her cheeks and her neck with his lips. He wanted to feel her, hot and trembling in his arms and explore every inch of her flesh until she couldn't think of anything else but what he was doing to her, and begging him to stop and not to stop and to finish it and to please never let it end. \n\n\"The timid doll?\" He asked, his eyes narrowing infinitesimally. \"And how do you propose I do that?\" He lifted a lock of her damp hair, feeling it's texture. \"More importantly, why does this little one matter so particularly to you?\" \n\nShe placed her hands on his chest, sweetly hesitant and hopeful, \"You could offer to purchase her. They would give you anything you asked\u2014,\" \n\nMagnus, who had conceived an intent to buy the girl the moment he sense Lilah's reaction to the sight of the her, wore an expression of perfect skepticism. \n\n\"And why should I?\" he asked, still holding Lilah close to him by her shoulders. \n\nHer scent teased his senses, and he luxuriated in it. \n\nShe hesitated again, but lifted her hands to his face. He nearly startled at the sensation of her touching him of her own will. Her fingers were like silk against his skin, and when she drew his lips to hers, the taste was softer, sweeter than ever before. The kiss deepened slowly, like a wine opening to the air. She tasted like candied flowers and surrender. \n\nMagnus drowned, happily, in the pleasure of it. \n\n\"Are you attempting to play the seductress, Lilah?\" he asked, but the amusement in his voice was roughened by desire. \n\nLilah breathed him in and said nothing, giving herself over to her own darker impulses, each brush of her lips a caress on his skin. His kiss was dark and deep, and made her feel like she was twisting in a warm wave of shadowy need. \n\nBut for once, he drew back. It was his turn to find his breathing shakier than he expected. \"You're still injured,\" he said, with a minute shake of his head. \"I could hurt you.\" \n\nHer eyes searched his, solemn and deep as a summer sky. \n\n\"Then hurt me.\" \n\nHe inhaled, and seized her against him, kissing her as though he might breath her into himself. He poured his need, his anger, and all that he had no name for into the kiss, and felt her give in return. She challenged and yielded all at once, matching his rhythm and his heat while bending to his every silent demand, his every instructive gesture. \n\nHe lifted her, guiding her legs around his waist, and moved with the excessive precision of a self-aware drunkard toward the day-bed. He lowered her onto it, and rose over her, but she lifted to him, and claimed his lips in a kiss that caused raw yearning to tighten deliciously around his loins. He kissed every inch of skin he should reach, drawing her rose colored nipples between his lips and nibbling at the succulent, satiny flesh. \n\nLilah's cunt was hot, wet, and quivering, and her thighs were drenched in her own desire. Lilah, too lost in her own secret impulses to keep them secret, ran her hands through his thick black hair, and rose up, straddling him. She registered his fresh flicker of surprise, but kissed it away before she could hesitate or second guess herself, and when he moaned into the kiss, the sound sent waves of pleasure racing along her skin from her cunt to her fingertips. His cock slid into her slickly, and he arched instantly at the sensation. Her cunt tightened around around him like a hungry mouth. She rode him, slowly at first, and then with writhing carnality. She tossed her hair back as she slid up and down his length, her lids heavy with indolent pleasure. \n\nHe watched her, oblivious to everything but soft light of her eyes and the tight velvet sheath of her quim, and then he seized her thighs in his hands. She moaned, wriggling for more of him, her modesty forgotten. Her pleading was obvious, wordless as it was. \n\nHe took control, thrusting upward into her hungry cunt, reveling in her brazen sensual pleading and the damp liquid of her arousal around his throbbing cock. A shining, thin veil of sweat had formed on the surface of her skin, and he seized her hair to bring some part of that skin to his mouth. His tongue found her throat, and he licked her from the hollow of her neck to her chin. His cock spasmed in a fresh, wild throb at the taste, savory and sweet at once. \n\nIt was Lilah who came first; throwing her head back, Her cries turning into a long, keening note of indefinable ecstasy and every muscle in her body growing taut. \n\nGripping her slender hips, he thrust once, twice more, and with a third pulsing shove he lost himself, spending his essence into her even as her cum bathed the skin around his cock. Lilah let out a long, shivering gasp as she felt her cunt overflow with his seed and dropped onto his chest, her breathing labored and her body suffused the afterglow of her orgasm. Beneath the flickering pleasure, she could feel the soreness deepening in her muscles after her struggle in the ring. She lifted her head, only to bury her face in his chest. He lifted his hand to her hair, startled. \n\nSomething constricted in his chest when her heard her speak again, her voice quiet and tender. \n\n\"Please, master.\""
    ],
    "authorname": "Damoiselle",
    "tags": [
        "reluctance",
        "slave collar",
        "male dominant",
        "female submissive",
        "science fiction",
        "spoils of war",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/imperius-ch-04"
}