{
    "title": "All I Need Pt. 05",
    "pages": [
        "Author's Note:\n\nAll characters in this story are at least 18 years old. This story contains incest and graphic sexual activity, you have been forewarned. \n\nThis is Part Five of the story, All I Need, and picks up directly after the events in Part Four. I would encourage you to read the earlier parts of the story before reading this in order to understand what is going on.\n\nSpecial thanks to cliffhangingtom for providing valuable feedback and encouragement. Constructive feedback is always appreciated. I enjoy reading what people think of my story and respond to all rational feedback.\n\n* * *\n\nPart Five.\n\nI sat on the bench outside of the hospital for a long while. I don't know if I was feeling shock, exhaustion, or just complete emotional devastation. Maybe I hurt so badly inside that my body shut down all feeling in response. I'm not sure. All I know is that I simply felt hollow. Hollow and numb.\n\nIt could have been all the goddamned painkillers they had given me for all I knew. \n\nFinally, I made myself get up and start walking, although I wasn't sure where I was going yet. I walked about twenty yards, into the park that was next door to the hospital, and fell to my knees at the base of a large tree. I suddenly broke out in a silent sob, ignoring the searing pain coming from the center of my face. There were no tears. I felt like my chest was caving in on nothing at all and I had trouble breathing. I briefly wondered if this was what a heart attack felt like, but felt no numbness in my arm. I had only heard about the numbness thing, and had no idea if it was accurate for diagnosing heart attacks. I later suspected that this might have been a panic attack.\n\nI must have been a sight as I walked through the park. Some guy with his face all bruised up from the broken nose, meandering aimlessly across a public park in a blood stained shirt. I noticed more than one person staring at me, not that I cared. I let out a dry, humorless chuckle when I reflected on the coincidence that I had left Amy's last boyfriend looking very much like I did now. Amy. I wanted to find Amy so badly. But they hadn't thrown her out. She still had somewhere to live. Maybe I should stay away for a while and give our father time to cool down. I didn't want to make it worse for her.\n\nBy the time dusk had arrived, I returned to my car and drove a while, finding myself standing in front of Dr. Miller's studio. I didn't know where else to go. If I went to one of my friends, I'd have to explain what had taken place. That was not something I could handle right now, and I had at least enough clarity to know that much. John may have let it go for a little while, but eventually he'd make it his life's work to get the story out of me. Meg? Hell, no. That would cause more trouble than it would solve. I let myself in the studio and sat gingerly onto the sofa in the back of the room. The doctor had told me my cracked ribs would hurt for weeks. Slouching on the sofa was out. Instead, I leaned back against an armrest carefully avoiding putting pressure on my kidney. I was under strict instruction to return to the hospital if I saw blood in my urine and to avoid putting unnecessary pressure on my left kidney where I had been kicked. Out of sheer exhaustion, I slipped into the fitful sleep of those who know, without question, that they will never be the same again.\n\nWhen I woke up, I saw Dr. Miller sitting at one of the tables with a cup of coffee. He heard me stirring, and turned his head toward me.\n\n\"What the hell happened to you, Adam?\"\n\nI hadn't thought this far ahead, and didn't know what to say. I looked down at the hospital bracelet still on my wrist. \n\n\"I was in an accident. I didn't know where else to go.\"\n\n\"You couldn't go home?\" He poured a second cup of coffee and slid it over to me. \n\n\"I... can't go home.\" I felt the brace on my nose shift as my face struggled to stay composed. \"I don't have one anymore, I guess.\" \n\n\"I see.\" He sighed, and looked at me sternly. \"Are you in some kind of serious trouble? Legally, I mean.\"\n\n\"I don't think so.\" I shook my head. \"Not drugs or anything like that, if that's what you are asking.\"\n\n\"What kind of trouble are you in, then?\" He looked down at the coffee in front of me and back at me.\n\n\"The kind that makes me it were something as simple as a drug problem by comparison.\" I mumbled as I picked up the cup and took a sip. The brace kept shifting on my nose and was just too irritating. I pulled it off and dropped it on the table. \n\nHe smirked a little at that. \"Good. You still have a bit of wise ass in you, at least.\" \n\n\"Dr. Miller, I don't know what to do. I feel like everything in my life has been ripped away from me.\" I surprised myself at how it felt to say that out loud. I sounded like a whining asshole. \"And now I sound melodramatic. Crap.\"\n\n\"Call me Jeff, Adam. This isn't about school right now, and we're friends, wouldn't you agree? When we aren't on campus, you don't need to call me Dr. Miller.\" \n\n\"Okay.\"\n\n\"So tell me what's going on, then. Be honest.\"\n\n\"I'm not sure I should tell you. I suppose there are some legal sides to it, but that's really really minor in the grand scheme. It's heavy stuff. You will probably want to throw me out of here if I tell you and I really don't want that.\"\n\n\"Try me. You may be surprised.\" Dr. Miller took off his glasses and rubbed the bridge of his nose.\n\nFuck it. I needed to tell someone, I guess. \"I fell in love with someone I shouldn't have. She's completely amazing. But the consequences of being with her have caught up with me.\"\n\nI motioned to my face and lifted my shirt so that he could see the large discolored bruises along my rib cage. You could actually make out a shoe print in one of them. \n\n\"My father did this to me. I haven't seen him since then. I probably deserved it. I've been disowned and I don't know where my sister is. I love her. We've been sleeping together for quite some time. We overslept night before last and were caught. Fucking stupid mistake to make.\"\n\nSilence.\n\n\"Yeah, I know. I'm fucked up in the head.\"\n\n\"I didn't say that.\" Dr. Miller replied. \"How long was this going on before your father found out?\"\n\n\"Almost a year, I guess. Maybe longer.\"\n\n\"Hmm... Okay.\" He slapped his hand on the table. \"Becky, my wife, is on her way up here with some food. I called her when I found you asleep in here. We need to get you fed and cleaned up. But here is what I am thinking.\" \n\nHe paused to drink \"I'll get her to stop by the house this afternoon and grab some blankets and a couple of pillows for you. You can stay here in the studio for a while. Until you get your feet under you, at least. There's a fridge, a stove, the bathroom. It's not really meant to be lived in, but it will do for now.\"\n\n\"Thanks, Jeff. This means a lot.\" I replied with genuine gratitude. I looked around the place a moment. I could make do.\n\n\"Do you think your family will allow me to go to your house and get some more of your things?\"\n\n\"I have no idea. I don't know what will happen with them anymore. But, I have to talk to Amy.\"\n\n\"I highly doubt that will be a possibility right now.\" Dr. Miller gave me a look. \"Besides, you are in no condition to talk to her anyway. You need to get your head together first. And, to be honest, you'd probably scare her to death if she saw what you look like right now.\"\n\nI hung my head in resignation. He was probably right.\n\nDr. Miller refilled his coffee and leaned against the counter, looking me over. \n\n\"You aren't the first person to find themselves in this predicament, and you won't be the last. You'll get through it, and you'll find yourself a stronger person. I don't expect you'll believe that, though.\"\n\nI definitely didn't feel very strong at the moment, and I wasn't very sure about getting through it, either. I nodded at him anyway, wishing it didn't hurt to breathe. \n\n* * *\n\n\"This key is for a storage locker on Oak Avenue. The remainder of your possessions are stored there. Your father was going to throw it all out, but I persuaded him otherwise.\n\nIt would be foolish of me to think that your father and I could keep you two from contacting each other in some way. We both know that just isn't possible. But I beg you to take some time and consider just how much damage your reckless, irresponsible behavior has caused. We are both devastated by the selfish, vile choices you two have made. But we are the only ones who have knowledge of it. This could easily ruin both of your lives if people found out, and has already changed the two of you irreparably. Your relationship with each other and with us will never be the same again. Had your father chosen to go to the police, you would be in jail right now. I don't even want to think of the years of psychiatric counseling that you are both desperately in need of. \n\nDeep down in your heart, you surely can see this. You are too smart of a person to not be able to see it. \n\nI am begging you to be the stronger, responsible older brother that I know you can be, Adam. If you truly love her as much as you say that you do, please stay away from her. Give her a chance to heal and move on with her life. I know that you are both hurting right now. But you still have a chance to lead fulfilling lives, have careers, meet other people, eventually raise families of your own. Maybe, somewhere down the line, things will work out where you will be able to mend some of the fences with your father. \n\nI sincerely hope that you heal and find happiness. I hope and pray that you take my words to heart. Do the right thing, Adam.\"\n\nI read the words on the page several times before dropping the letter on the desk. Dr. Miller looked me over as he set down another box of art supplies. \n\n\"I assume that wasn't a letter filled with forgiveness and begging you to come home?\" He asked dryly.\n\n\"Nope. That was pretty much the exact opposite of what it was.\" I sighed bitterly, before getting to my feet and going to help him unload the rest of the supplies from his car. \n\nHe had contacted my mother and she'd asked him to deliver the letter and key to me. She told him that my father had taken a vacation from work and was currently taking Amy to visit some of his relatives in New York. I knew, in an vague way, that our father had a brother in New York and some other relatives, but I had never met any of them. Clearly, they were determined to put as much space between us as possible. \n\nAs much as I wanted to see Amy, I didn't have the slightest idea how to find them in New York. Maybe once they got back, I could sneak over while our parents were at work. But my mother's words nagged at my mind as I gingerly stacked canvases in the corner of the room. I wasn't sure what to do.\n\n* * *\n\nIn my dream, I fought back. When the first hit connected with my nose, I took the blow. When the second hit me in the stomach, I did nothing. When he kicked for my ribs, I rolled. I yelled for Amy to get out of the house. Somehow, she was dressed now. She tries to argue with me. She's screaming at my father to stop. He grabs her elbow and flings her away from us, intent on getting to me. I tackle him. In that dream logic way, the fight is just over. I grab Amy and we leave. We sleep in my car near the park. I tell here that we'll be okay. I tell her that everything is fine. I wake up in the dark art studio alone. \n\nIt's only three in the morning. Fuck. I never slept anymore. And with dreams like that, who the hell would want to? \n\nIt had now been three weeks since we'd been discovered. I hadn't left the art studio at all except for food, even then only late at night when there were fewer people around. The idea of even engaging in small talk with people filled me with complete dread. Dr. Miller's wife, Becky, was a registered nurse. She checked up on me several times, monitoring the healing progress on my ribs. More than once, I caught her eyeing my supply of prescription painkillers, doing a mental count of how many she thought I should approximately have left. As devastated as I was, it had never occurred to me to purposely overdose myself on the pills. \n\nI didn't want to be around people at all if I could avoid it. I flinched every time Becky would try to put a reassuring hand on my shoulder. Being touched by someone suddenly became a totally unwelcome sensation. I didn't know how to deal with it. Grief and stress do fucked up things to your mind, I guess. I certainly couldn't bring myself to go back to class. Anytime I got around any place that reminded me of Amy, I would be wracked with grief again. I wasn't sleeping, barely eating, and felt like someone had carved out a large chunk from the center of my chest. I went by my parents house a few times, always after dark, and the upstairs bedrooms were always dark. I never knocked, simply stood out at the street and watched the house for a few minutes. I saw no sign of Amy there on any of these visits.\n\nMy phone had been disconnected the day after I took up residence in the art studio. It had been a relatively simple affair sign up for a new cell phone plan under my own name, but I immediately discovered that Amy's phone had been disconnected as well. My facebook page and email accounts had several messages from friends asking where I was, why I hadn't been to class, and so on. I didn't want to reply. The idea of talking to anyone who knew me made me cringe. Checking Amy's facebook page revealed that she hadn't posted anything to it since before we'd been caught. \n\nFacebook's message window popped up on my laptop screen as a message from a friend appeared and I remembered that I had my settings set to show people when I was online. Instead of replying, I went to settings and deactivated the account. Then I went to my email accounts and did the same. I felt a strange sense of relief at being cut off from the world. I shut down the laptop and paced the room a bit. \n\nI still had pain in my chest, but it had started to ease up a bit. My face only showed minor discoloration from the bruises now, but was still really tender when I touched it. \n\nI began thinking about ways to get away from here. Some kind of fresh start. Somewhere no one knew me and I could try to put myself back together. It didn't feel like that was possible here. I had too many memories here and all of them filled me with ache. I didn't have enough money to really move and have any sort of security. I considered the military for the first time in my life, and quickly realized that wasn't going to be the answer. After doing some research on the peace corps, which I was only vaguely familiar with, I decided that was not my answer either. By sheer coincidence, Dr. Miller offered me a solution that I had not seen coming just a few days later.\n\n\"I heard about a job opportunity that I think could be really good for you, if you wanted it.\" He began.\n\nI was disinterestedly picking away at a bowl of pasta and glanced up at him. \n\n\"An artist friend of mine in Milos is looking for an assistant. Room and board is included. It would be a serious change of pace for you, and you could learn a lot of technique from him.\"\n\n\"Milos? Where is that?\" I asked, trying to place the name but coming up empty. As long as it wasn't here, I was probably going to take it.\n\n\"It's an island off of the coast of Greece. Quite a beautiful place, I must say. I took my wife there to visit him a couple of years ago.\"\n\nFor the first time in a month, I felt a tinge of interest in something. This could certainly be the change I was looking for. Greece? Damn. That was farther than I'd ever traveled in my life. I didn't know a damned thing about Greece, either. In my head, I pictured that they ate a lot of lamb, for some reason. Other than some vague memories of Greek mythology stories from my childhood, I couldn't have told anyone more than five sentences about the place. Statues, of course. They had ancient statues. \n\n\"Room and board is included?\"\n\n\"Yes. It isn't much of a salary, I should point out. But when you factor in room and board, it's more than sufficient.\"\n\n\"Is he an artist I'm familiar with?\" I asked.\n\n\"Have you heard of Theron Cain?\"\n\n\"He works in oils, doesn't he? Surrealist landscape artist? You have a book of his work in your office.\"\n\n\"That's the guy. Are you interested?\" \n\nI really had nothing to lose at this point. It could certainly help clear my head to get away from here for a while. I didn't know how to find Amy at the moment, although it was only a matter of time. What was worse is that I wasn't completely sure that I should. For her sake, not my own. I kept thinking about letter my mother had written. Would Amy have a better life if I wasn't in it? I know she wouldn't think so. At least not now. I didn't really care much what happened to myself at this point. \n\nThe following day, I rented another storage building in the same complex as the one my possessions were already stored in and transferred everything to the new space. I did not know how long the current one was rented for and it was the last bit of control that my parents had over me. Severing that tie, put me completely on my own. I also stored most of what I had brought with me when I moved into the art studio. The rest of my possessions fit into two bags. I spent the remainder of the week getting my passport photos taken, booking my flight, and selling my car. I didn't get that much for it because I was needing to sell it in a hurry, but the hell with it. \n\nOn Sunday morning, a few hours before my flight, I took a cab to my parents street and made a very bored cab driver park a couple of doors down while I gave the place one final look. I watched my father exit the house and drive away. Summoning every bit of courage that I possessed, I got out of the cab and walked to the front door. \n\nI looked down at the porch cement as I knocked, almost afraid of who would answer the door. But no one did. I knocked again, and got no answer. I heard no signs of movement in the house at all. It was empty. I took a few steps out onto the lawn and looked up at Amy's window. I couldn't see anything except the ceiling of her room. I looked at the door handle and saw that the locks were shiny and new. Of course he had changed the locks. My keys would be worthless. Feeling defeated, I returned to the cab and headed for the airport.\n\n* * *\n\nNineteen hours and three planes later, I stepped off out of a tiny single engine plane near some town called Zefiria on the island of Milos. I walked to baggage claim and waited for my luggage. The airport was not very large and it took only a few minutes. As soon as I picked up my bags, I turned to see a fairly attractive. short brunette woman, who looked to be in her late thirties to early forties smiling up at me.\n\n\"Adam Matheson?\" She said in a thick British accent.\n\n\"Yes, ma'am.\" I replied, raising an eyebrow.\n\n\"I'm Margaret Cain. Theron asked me to pick you up.\" \n\n\"Ah! Nice to meet you.\" I extended my hand. She shook it firmly with a surprisingly tight grip.\n\n\"Welcome to Greece. Was it a nice flight?\"\n\n\"It was long. Especially the Newark to Athens flight. But I'm glad for a change of scenery.\" I took on my recently adopted fake persona of a person who felt like they still had a reason to breathe. \n\n\"I imagine it was. But hopefully you will like it here. We'll meet up with Theron in Klima for lunch and get you settled in.\" She led me out to her car.\n\nI had read up a little bit on Milos before leaving the States and was surprised that the entire population of the island was less than five thousand people. Then again, the whole island was only about 14 miles across. The photographs I had seen did not even begin to do the place justice. It was breathtaking. For the first time in a long while, I felt something almost like optimism. This was a far cry from home. The rock formations that lined some of the beaches were astonishingly beautiful. White and gray monoliths, carved away by the waves, jutting up proudly from the earth like bones of giant, long extinct creatures of old. Amy would love this place.",
        "Theron was already at the small cafe near the beach when we arrived. He was a thin man who looked to be in his mid-forties, dressed in a simple t-shirt, shorts, and sandals. He stood up to greet me in an accent every bit as thick as Margaret's.\n\n\"Adam? Pleasure to meet you, sir. I am excited to work with you. Please, sit.\" He gestured to the table. \n\n\"Thanks.\" I sat down and found myself slightly taken aback by his pleasantness. A waiter brought a cup of coffee and took my order. \n\n\"I saw you once before at an art show at the university, but didn't get a chance to speak with you. I didn't know then that our paths would cross like this, or I would have been sure to introduce myself.\" He continued.\n\n\"Oh really? I'm sorry, but I don't remember seeing you there. No offense.\" I was surprised.\n\n\"It's quite all right, I was there early for only a few minutes and left soon after. But your work was a big part of why I was there.\" \n\n\"Mine?\" I replied in genuine surprise. I had been looking around at the architecture of the buildings that surrounded us, but now he had my full attention.\n\n\"Jeff has spoken highly of you, Adam. He insisted that I should see your work and I happened to be in town for business at the time of the show. I came by and saw the ones you had displayed. I was quite impressed. I even bought one of your pieces, you'll see back at my studio.\"\n\n\"Wow. Thank you so much.\" I didn't know what else to say. A famous, successful artist had actually liked one of my paintings enough to buy it. I was blown away. \n\n\"Which painting, may I ask?\" I was really curious now.\n\n\"I believe it was titled 'Judgment'. A haunting black and white piece. It resonated with me on a deep level, although I only recently came to figure out why that might be.\" He gave me a careful look.\n\nMy initial excitement had faded visibly and he had seen it happen.\n\n\"You aren't a fan of the piece, I take it?\"\n\n\"I almost didn't put it in the show. I don't like that one at all.\"\n\n\"Because you had a lot of emotion tied up in it, no doubt.\" He wasn't asking.\n\n\"Yeah, I was in a dark frame of mind when I painted that one. Bad memories.\" I fought to stay composed. The guilt and uncertainty of that night didn't hold a candle to the shit I felt now.\n\n\"Guilt. Shame. Fear. You can see it all in the design. It's a powerful piece, once you have most of the puzzle pieces in place to know what you are seeing.\"\n\n\"You took all that from that painting?\" I felt really raw and exposed.\n\n\"I didn't at first. I just knew it resonated. Once Jeff told me about your relationship with your sister, it all made sense. It made me even more glad that I bought the piece. It will remain in my collection forever.\" He said as he watched me pale in shock. Margaret gave us both a small smile and stared thoughtfully at her salad.\n\n\"Dr. Miller told you about that?\" \n\n\"You can relax, Adam. Your secret is safe.\"\n\nI looked up at him, still in shock. Margaret reached over and took his hand on top of the table.\n\n\"Theron here is my brother.\" Margaret spoke up, smiling as she kissed the back of his hand. \"And I've loved him since I was a small child.\"\n\n\"We have been together since we were in college ourselves. We fought it for a long time, but resisting our feelings for each other became too much to bear. Before finally accepting the love we felt for each other, Margaret was nearly suicidal, and I was on a self destructive path of a different variety. So we know very well how you feel.\"\n\n\"Holy shit.\" I leaned back in my chair. \n\n\"Sorry!\" I added hastily, realizing I had cursed in front of my new employer.\n\n\"Don't be.\" He laughed. Margaret started snickering as well. \"But you can see why Jeff thought you would benefit from working with me. Both for your art and your life. And hopefully you can understand why I might be able to recognize the pain you felt when you painted 'Judgment'.\"\n\nI nodded. \n\n\"Jeff told us what happened with you. I'm sorry you experienced such harsh rejection by your family. Our own situation was much different. We were orphaned when our parents died in a plane crash many years ago. They never knew about us. Our extended families were another matter entirely.\" Margaret spoke up, giving my arm a sympathetic squeeze.\n\nI fought to keep my tears in check. I had known these people less than an hour and already found myself with all of my cards on the table. I was a raw, broken, shell of a person with nothing more to hide.\n\n\"Hopefully, you can find some comfort and happiness here with us. We want to help you however we can. And I meant it when I said I was a fan of your work. I really am looking forward to working with you.\" Theron sounded sincere.\n\n\"I can't believe this. This whole situation.\" I looked out at the beach, taking in the beautiful blue water. It seemed impossibly blue.\n\n\"It's a lot to take in.\" Theron agreed. \"When Jeff called me, I knew I had to try to help. It's not often that you meet someone who's gone through a situation as unusual as ours.\"\n\n\"I imagine not.\" I chuckled for the first time in weeks. \"I can't believe you are fan of my stuff.\"\n\n\"Why not? You have talent, Adam. You aren't well known to the art world yet, but that will change with time.\" He sounded certain when he said it, as if it were a fact and not a pipe dream.\n\n* * * \n\nTheron led me through a large work space. The walls and ceiling were stone, making me ponder how old this place was. Large windows allowed natural light to flow through the room. Huge canvases, some as much as fifteen feet long, leaned against the walls. I had never painted on a surface that large and couldn't imagine how long it must take to paint something at that scale. He motioned to a short corridor the was set in one back wall. He hit a light switch and set one of my bags on by the doorway. I walked into the room and looked around. For a room made out of stone, the place looked rather comfortable. The walls were stone, painted white, and the only wood in the place was the furniture and door frames. There was a bed in a back corner, with an end table next to it. A work bench, book case, and closet made up the back wall. A small round table with two chairs was set in the center of the room. A simple and beautiful hand made vase was centered on the table. \n\n\"It's not much, but I think you'll find it comfortable.\" Theron said. \"Feel free to repaint the place if you don't care for the color. This was the color that the house came with.\"\n\n\"I don't need a lot, really.\" I replied. \n\n\"There is a small kitchen over through this doorway here. And a bathroom through that door over by the corner. I'm afraid there's not a television out here, but we can take care of that soon.\" He continued.\n\n\"I can watch plenty of stuff on my laptop, there's really not a need for a TV. I don't really plan on watching much television anyway.\"\n\n\"Whatever you prefer is fine. If you decide you'd like a television out here eventually, we will be happy to help you with that. We would have set you up in the main house, but thought you might prefer the privacy that being out by the studio can provide.\"\n\n\"This is great, Theron. This is much better than I was anticipating. The way Jeff talked,, I expected that it would just be a bed in a corner and maybe a closet.\" I responded.\n\nTheron nodded in response, but seemed pleased.\n\n\"I'll leave you to get settled in for a while then. I'm sure you are worn out from the flight and all.\" He turned and headed for the door, then paused. \"Listen, I know you have been through a lot lately. If you ever want to talk about it, I'll be glad to listen. I imagine given the peculiar circumstances you have dealt with, there haven't been many people you can talk to about it.\"\n\n\"Thanks.\"\n\n\"Alright then. There's not much in your fridge out here right now, but Margaret will take you into town tomorrow to get you stocked up. When you are ready for dinner, come up to the main house and we'll go get something. I'm afraid neither of us are very good cooks. Especially when compared to the local cuisine.\" \n\nWith that, Theron left me in my new home. I sat at the small round table, pulled out my laptop and connected to the internet using the WiFi password Theron had given me. I checked Amy's facebook page and saw, as before, that nothing had been updated on it in weeks. I closed the laptop and sighed. There really wasn't much more I could do right now. Was it a mistake to come here? I couldn't stay back in Austin, I was going crazy there. I folded my arms, and put my head down. Too late now, either way. \n\n* * * \n\nThe rocks felt insanely hot against the backs of my legs. I couldn't tell for sure, but it seemed like I was at least eighty or a hundred feet up. I had spent the last half hour climbing up the side of the rock formation overlooking the bay. The crystal clear, blue water below looked warm and inviting. The base of the rock outcropping to my right looked was what had originally commanded my attention, however. \n\nI stood up, taking in the smell of the breeze blowing in across the water, and looked to the right. I felt hollow as I stared down at the rocks below that were so white that they looked like they were glowing. I felt a strange sense of relief at the thought of taking the jump. I chuckled bitterly at the idea that I'd leave behind one final painting of deep red on the white rocks below if I did it. Man, I have a fucked up sense of humor sometimes. I sighed heavily.\n\nIs this really the kind of person I am? I kept asking myself this question. Ever since I had discovered this particular rock formation a couple of weeks before, it had continued to draw me back to it. The idea of feeling nothing felt so much better than feeling the hollowness that continued to plague me. Coming here hadn't solved that hollow feeling as I had hoped. I had always considered the idea of doing something like this to be cowardly, to be letting whatever you were facing win. But here I was, debating with myself whether or not I was the kind of person who would take the selfish route to relief. I was out of tears by now, and just felt drained and empty.\n\nHere I was, sitting in one of the most beautiful places I had ever seen, feeling just about as lost as I ever had in my life. Not today, I finally thought to myself, I'm being irrational about this again. I turned back to the left over the water. Out of the corner of my eye, I saw movement. I glanced over and saw Margaret's small shape sitting on a boulder far below, about twenty yards away. She was watching me with what looked like a worried expression. It was hard to tell from this distance. Her small hand came up to wave at me. I waved back. \n\nI stepped back a couple of yards then ran toward the cliff edge, launching myself out over the water as I'd done at least a dozen times since my arrival. There was that brief moment of panic, worrying that I hadn't kicked off the cliff side hard enough. Then came the all too brief half second feeling of weightlessness, followed by the rush of wind, just before the splash. I felt the warm water wash over me, air bubbles churned noisily all around me. I gathered my bearings, and propelled myself through the water in long strokes toward the surface. I broke through the water and felt the hot sun on my face, as I took a deep breath. I made my way to the shore a few moments later to find Margaret standing there with a towel in her hand.\n\n\"I know you don't believe it now, but it gets better Adam.\" She said sadly, handing me the towel.\n\n\"If you say so.\" I replied, wiping my face with the towel. \n\n\"I didn't believe it when people tried to tell me that, either. I don't blame you for doubting me. But I'm glad you decided to stick around a while longer. We love having you here.\" She commented, trying to hide the concern in her voice. She put a hand up to my shoulder and gripped it just a little. An attempt to be reassuring, I guess. \n\n\"Thanks. It just overwhelms me sometimes.\" I sighed. \"I start thinking stupid thoughts. I know it's not rational, at least. It's easier to ignore when I realize that.\"\n\n\"I know. Recognizing it is the real turning point.\" Margaret nodded. \n\n\"I can't do it if you're watching me, anyway. I'd feel too guilty for making someone watch that happen.\" I stared back at the pile of rock.\n\n\"That's the idea.\" She gave me a soft smile. \n\n\"That's playing dirty, lady.\" I gave her a tiny smirk.\n\n\"Yep. I can tell you have a kind heart. Under the circumstances, I'm willing to exploit it. And I'm not sorry, either. Do you want to eat something? We can go get some dinner if you like?\" She asked.\n\n\"I'll pass. But thank you. I'm just not really hungry right now.\" I replied as I looked back up at the cliff. I didn't know then that it was the last time I'd climb that particular group of rocks. \n\nMargaret was right, it did eventually get better.\n\n* * * \n\nThe next few months went by quickly. I found that I quickly became good friends with Theron and Margaret, despite them being almost twice my age. Theron worked on with very large canvases, often more than twelve feet across and had me help him stretch the canvas material over the frames to set them. He also kept me busy with sawing and sanding wood to use for the canvas frames. None of this seemed to be anything he couldn't handle himself, and I suspected that he had me doing it more to keep my mind occupied than because he actually needed the help. The busyness helped ease my depression.\n\nI learned that Margaret was heavily involved in pottery, which explained her deceptively strong hands. She taught me to throw clay and use the pottery wheels. I found the process tiring and tedious, but was still fascinated with the end results. My attempts to make relatively simple things like bowls and cups were generally agreed upon by both of the Cains as dismal failures. Out of sheer stubbornness, I used one of my lopsided bowls for paint mixing, until I accidentally dropped it one afternoon, effectively ending my fledgling career as a potter. \n\nTheron enjoyed fishing and paddling his small boat out around the island. Eventually, he got me to go fishing with him. I found it surprisingly enjoyable. He laughed when I asked about sharks and explained that there weren't many to be found around the island and that he'd never even heard of an attack in the area. I quickly discovered the caves along the water's edge and spent a lot of time swimming in the tide pools inside them. I loved the quiet solitude of the place, and often walked the beaches at night.\n\nTheron and Margaret were both very interested in how my relationship with Amy had started and asked lots of questions about her. I showed them the drawing that I had done of her the night she fell asleep on the sofa and agreed that it was the most realistic drawing that they had ever seen me produce. I missed her constantly.\n\nBy the end of the fourth month, I found myself standing in front of a large, blank canvas for the first time in what felt like ages. I was positioned by an open window with the fresh salt air blowing in from the bay. Theron was across the room working on a canvas of his own. I put on my headphones, after several weeks of not listening to any music at all, and called up the first song that came to mind. One that reminded me of Amy. It was a song that I had loaded on her phone the day before she left for Rome, and it was a favorite of mine. Radiohead's \"All I Need\" started playing on repeat as I picked up a tube of paint and set to work. \n\nFor a few minutes, I stood with the brush full of paint just sitting in my hand next to the canvas. Finally, I just dropped the brush in the rinse water and squirted crimson paint into my palm. I began smearing it on the canvas, creating vine-like curves across the length of it. I added more crimson and yellow to my palm and kept working the image. It was like trying to finger paint as an adult. There wasn't as much control. But the raw image felt more visceral to me for some reason. As it began coming together, I worked faster. I became enthralled in the work and lost myself in it. \n\nWhen I finished coating the entire canvas in paint, I grabbed a rag, wet it, and began wiping away sections of the acrylic paint in a circular pattern, being sure to leave some of the image intact, creating an effect of round objects that were lighter in color than the rest. I grabbed my bottle of water and splashed some on the canvas. Then I cupped my hand and put a small amount of white paint in it, adding water and creating a milky thin wash. I splashed that across the canvas as well. The resulting look of the image was somewhat like it was cloudy and melting. Finally, I grabbed a brush and began working on details in crimson. The raw, hand painted background adding a new dimension to the design in a way I hadn't done before. Hours later, I leaned back against a bar stool and looked over the finished design.\n\n\"Damn.\" Theron spoke up, startling me. I looked over to see he and Margaret sitting on the stone steps behind me that lead up to the dining area of the studio, watching me.\n\n\"That was fun to watch,\" Margaret said, smiling. \"Are you finished with it?\"\n\n\"I think so.\" I said, somewhat embarrassed to be observed like that. Amy was the only person who had ever really watched me paint outside of a classroom before. \n\n\"I think you are, too.\" Theron said. \"Most impressive. I love it.\"\n\nI washed up my brushes and cleaned the paint off of my hands. I felt a sense of accomplishment for the first time in a long while. Another of the clouds over my spirits seemed to fade away a little. \n\nIt was late afternoon and I was famished. We all went out to eat at the cafe in Klima again, and I went to the beach while they returned home. I sat atop a large rock formation and looked out at the beautiful clear blue water as the sun disappeared for the night. I didn't feel at peace, but I felt as close I thought I probably ever would. I missed Amy with everything that was in me, but I felt like maybe I was giving her the chance that my mother so desperately wanted for her to have a normal life. I wondered what she was doing now. I wished she were here with me. This view would have blown her away. I wished to take her down to one of the tide pools inside the caves and make love to her there with the only light shining up from where the outside sun would shine through the pool. The familiar knot tightened in my stomach and I wept silently in the dark.\n\nEarly the next morning, I went down to the studio and looked over the painting I had done the day before. I was pleased with the results and placed it against the wall. I grabbed a fresh canvas, picked a song, and went to work on it. By evening, I'd completed another. I became prolific. My color choices became brighter than I normally used, not because I was in a better mood, but because I didn't want to use the typical earth tones that tended to be my routine color choices. I also began to work on a larger scale, the largest of them being one that measured six feet across. That one had overdone it and I settled into a more comfortable two feet by four feet format for most of them.\n\nA few more months passed and I participated in a couple of small local shows around Greece. I even had a couple of paintings on display in one of the larger galleries in Athens. I began to make a small amount of money, nothing even close to enough to live on, but at least I was generating some income from my paintings. Still, I couldn't help admitting that I was achieving a tiny amount of success as an artist, which was something I could never have fathomed happening. Much like the rest of my pay since arriving here, I simply put the money in savings and more or less forgot about it.\n\n* * *\n\nOne afternoon, after delivering a new painting of Theron's for display at a large gallery in Athens, I walked a couple of blocks down the street to grab some lunch at a small cafe. Not knowing my way around Greek cuisine very well, I blindly ordered the youvetsi from the menu. It arrived shortly after and was edible, but not something I would typically order for myself. I sat at a curbside table under a large umbrella, picking at it disinterestedly and watching traffic pass by. ",
        "I was lost in my thoughts for a while, thinking how much Amy would love to check out the architecture around here, when I heard a feminine voice speaking to me. Her Greek accent was thick, but her English was flawless.\n\n\"It's not their best dish, is it?\"\n\nI looked up to see a very attractive, tall, slender woman with olive skin and green eyes smiling down at me. She had long, dark hair pulled back in a light ponytail and was dressed in an elegant black dress with a small black purse in her hand.\n\n\"It's fine, really. I'm just not that hungry.\" I replied.\n\n\"Do you mind if I join you?\" She asked, politely. I couldn't think of a polite way to decline her on a moment's notice, so I gave her a small smile and motioned her to a chair.\n\n\"Thank you. I get tired of eating alone at lunch every day.\" She smiled again. \"You don't recognize me, do you?\"\n\n\"I'm sorry, I don't.\" I was now puzzled. Did I know her from somewhere?\n\n\"I'm Natali. I work at the gallery.\" \n\n\"Oh, right! I'm sorry, I should have remembered.\" I pondered if I had ever seen her there. I never paid much attention to the people there. I think I vaguely recalled seeing a tall, dark haired woman around.\n\n\"How do you like working for Mr. Cain?\" \n\nA waiter came up and she ordered moussaka without so much as a glance at the menu.\n\n\"It's a good job. Keeps me busy, but still allows me time to work on my own paintings. He and his wife are good people.\"\n\n\"They seem to be.\" She agreed.\n\nAfter a few moments of silence, Natali asked, \"So what brought you here from America?\"\n\n\"I don't know. A fresh start somewhere new. I wanted something different.\" I shrugged.\n\n\"Somewhere new? You are in one of the oldest cities in the world!\" She laughed brightly. It took me a moment to realize she was making a joke.\n\n\"Yeah, well. It's not Austin, so it's good enough for my purpose.\"\n\n\"Austin? Texas?\" She asked, her green eyes seemed to stare through me. It made me uncomfortable, even though she was polite and friendly.\n\n\"Yeah.\" I replied as I picked at my pasta. It was the sauce, I decided, that made the dish unappetizing.\n\n\"You don't look like what I picture an American from Texas to look like.\" Smiling at me again.\n\n\"I left my chaps and spurs in the States.\" I quipped.\n\nShe looked me over for a moment, a couple of wrinkles appearing between her eyebrows. Then one of her eyebrows cocked to a high point.\n\n\"You are joking with me.\" She decided aloud. I couldn't help chuckling.\n\n\"Ah, you are!\" She exclaimed, delighted. \"You should smile more. You have a nice smile.\"\n\nShe put a hand gently on my forearm, and it finally dawned on me that she was flirting.\n\n\"Thanks.\" I picked at my food some more, scraping the offending sauce away.\n\n\"You really don't like that very much, do you?\" \n\n\"Not really,\" I admitted. \"I'm not used to the food here, yet. Still trying different dishes.\"\n\n\"Would would you eat if you could have anything?\"\n\n\"That's easy. Egg rolls. Hot and sour soup. Some good lo mien.\" I replied.\n\n\"I know a place. If you'd like to meet me for dinner?\" Her eyes met mine expectantly. \n\nI looked back down at my plate, trying to think of how I could turn her down without hurting her feelings. The obvious answer occurred to me a half second later.\n\n\"I'm sorry, I've got to head back in a couple of hours.\" \n\n\"Oh. That's too bad. Maybe another time.\" She briefly looked down, her smile faltered a little. But it returned almost immediately. \n\n\"Maybe so. When I don't have to get back to the island so soon.\" I lied, aiming for politeness.\n\n\"Sounds good to me.\" She replied, brightly. \n\nWe finished our meal, or more accurately, she finished her meal as I picked at mine in disdain and paid for our bills separately. I turned to wave goodbye to her and instead was met with a brief hug. She gave me her business card with a home number written on the back and walked back toward the gallery.\n\nShe seemed like a nice girl and was certainly beautiful, I thought. But the idea of getting involved with anyone just made my stomach churn. There was only one person I wanted to be with. I flipped the card over in my hand and read over it.\n\n\"Natali Panagakos,\" Her name was followed by some Greek lettering that I assumed meant sales representative or something similar. The only other thing I could read on the card were the words \"fine arts.\" Fair enough, I shrugged. I slipped the card in my back pocket and walked back to the ferry.\n\nBack on Milos, I told the Cains about the encounter over dinner. They both listened with great interest. Margaret was, of course, completely amused at my obliviousness to having been hit on by a girl until she had touched me.\n\n\"I know her family,\" Theron observed. \"They are nice people. You could certainly do worse if you decided to pursue her.\"\n\n\"I'm not going to pursue her. That wouldn't do anyone any good, I don't think.\" I replied, thoughtfully. \n\n\"I understand.\" He replied as he exchanged a slight glance with Margaret, who shrugged. I didn't know what that meant and I didn't ask.\n\nI was pretty sure that I was better off alone at this point. The relationship I'd had with Amy was irreplaceable. There wasn't any reason to bother with anyone else as far as I was concerned.\n\n* * *\n\nEventually, November rolled around and I realized for the first time that I had a pretty decent idea of where I could find Amy. She would likely be in Colorado for the week, as called for by family tradition. I pulled out my laptop and priced flights to the US. I chose a flight and sat with my credit card in my hand, about to put in the information to buy the ticket when I froze up. I must have lingered there for ten minutes, indecisive. What would I even say at this point? How could I approach the entire family that way? It's not like I could just knock on their door, walk in, hug everyone except my parents, and sweep Amy up in my arms. What if she didn't want me anymore? The very idea sounded absurd. I closed the laptop and went for a walk.\n\nThe afternoon of Thanksgiving Day, which meant nothing other than Thursday in Greece, I sat at my kitchen counter staring at my phone for a few long minutes. I finally picked it up and called Aunt Linda's place. On the fourth ring, someone picked up. I could hear the jovial atmosphere in the background. I swallowed hard at the sound of Aunt Linda's voice.\n\n\"Hello?\"\n\n\"Happy Thanksgiving, Aunt Linda.\"\n\n\"Oh my god, is this Adam?!\" She exclaimed.\n\n\"Yes, it is. I'm sorry I couldn't be there this year. I miss you guys.\" I tried to sound better than I felt.\n\n\"I'm so glad you called. We miss you, too! Holly! Holly, it's Adam.\" I heard Aunt Linda call to my mother. Shit, I thought to myself. \n\n\"Aunt Linda!\" I tried not to shout, trying to get her attention back.\n\n\"Yes?\" She sounded puzzled by my desperation.\n\n\"Is Amy there?\"\n\n\"No, she's not, Adam. She stayed in California for the break. You didn't know that?\" Now she definitely sounded confused. My heart sank. California? How the hell was I supposed to find her there?\n\n\"Okay, thanks. Send everyone my love.\" I replied.\n\n\"Don't you want to say hello to your mother? She's right he-\" I hung up before I had to face that conversation.\n\nI slumped at the counter and stared at the wall for a long while.\n\n* * * \n\nWhen I left the United States, I had originally expected to be gone for just a few months at most. I had now been in Greece for three years. I had come to really enjoy living there and the idea of returning to the States filled me with a sense of dread. At one point I looked into renting a house near Theron and Margaret's home, but they were adamant that I continue living in the small apartment built off of Theron's studio. I felt that I was about as comfortable as I could ever expect to be, and although the gaping hole in my life that Amy had once occupied was still there, it had diminished somewhat. I can't say that she was ever far from my thoughts. \n\nOver time, Natali's gentle persistence eventually wore me down and we went out on a date during one of my visits to the mainland. Before the date even started, I knew that it was a mistake. I carefully explained to her that I was just not in a place emotionally where I could handle being in a relationship with someone. I made sure that she understood it wasn't about her and that I thought she was a great person. She claimed to understand and, after a slightly awkward couple of weeks, we settled into a comfortable friendship. I had worried that she was holding out hope for me to eventually want to be with her, but she began dating another guy soon after and I relaxed. \n\nShe was a fan of my work and showed some of my pieces to a friend who worked at a gallery in Rome. Before long, I had pieces showing in a gallery there, as well. When I traveled to Rome to deliver the pieces, I stayed at the Palazzo, the same hotel Amy had stayed at when she was in Rome several years before. I pulled out my phone in the hotel room and looked through the pictures she had sent me from that very hotel. As silly as it seemed, even to me, I wondered if I was staying the the same room that she had. I sat on the balcony that night, listening to Swans' \"Love of Life\" album, and wished she were with me. \n\nA few months later, I was in my biggest gallery show yet. This time in London. Theron had a big show there and had pulled strings with the gallery owner to be sure that I was included in the show. Theron gave me a thirty foot section of wall space near the entrance to his gallery and ensured that my name and art was included on the promotional materials for the gallery opening. As I selected pieces for the show, I joked that I felt like the opening act for a concert. He commented that it was a good comparison. \n\nTheron and Margaret both found my thought process surrounding the pricing of my work for the show to be hysterically funny. Every time I would jot down a price on the list, Theron would come behind me and scratch through it, writing in absurdly ridiculous amounts instead.\n\n\"Oh, fuck off Theron! No one is ever going to pay 18,000 quid for that. I painted it in three hours.. I practically pissed on the canvas!\" I exclaimed, trying to write the price back in at two thousand. Honestly, I still felt I was ripping people off asking two thousand for it.\n\n\"This isn't those piss ant little college shows you used to do. This is a real show at a serious gallery. They don't know you did that in three hours. And so what if you did? Eighteen thousand is a bargain for that painting. I think you should price it at twenty five thousand quid, myself!\" Theron barked back at me.\n\n\"You have got to be kidding me. I don't know if you've been drinking the salt water out there or what, but you are out of your goddamned mind.\" I shook my head at him in frustration. Margaret just cackled at our bickering.\n\n\"I should be taping this.\" She remarked at one point, earning looks of exasperation from both of us.\n\nThey finally bullied me into agreeing to their pricing plan, arguing that they had years of experience in the art world and that I didn't understand the value of my work. By the time it was all said and done, I had set a total value of my paintings to be featured in the show at a little over 340,000 Euro. I found that number staggering to contemplate. \n\nThe three of us flew to London together the week of the show and they were both further amused by my excitement about seeing England for the first time. They had both grown up there, and found the place to be rather dull. \n\nThe night of the opening, I was dressed in a suit and tie. It was not my idea, but Margaret had insisted. The gallery was packed with people and I was slightly thrilled to see the degree of interest in my work. Theron introduced me to a couple of other very well known artists that were friends of his and I felt I did a fairly good job of hiding my sense of awe at meeting some of them. I was surprised to find that a couple of them shared my generally cynical view of the art world. But what really unnerved me was the realization that some of the art critics that attended the opening were looking over my work and taking notes. \n\nI don't think it had hit me until that moment that my work would be viewed by serious, world renowned art critics this evening. Theron was off working the crowd, greeting some fans, and so on. Margaret noticed the look on my face and brought me a glass of wine. She assured me that it was going well so far and that I didn't need to be concerned about the critics. I drained the wine in about thirty seconds and a server handed me a replacement. \n\nAn older British woman approached us and claimed to be a fan of my work. I tried to be gracious about it, but was again very uncomfortable with the idea that I actually had fans. It turned out that this woman had purchased one of my paintings at a previous show in Athens and had actually come to this show to see my work, not Theron's. Margaret flashed me a huge smile when she overheard that and nodded at me as if to say she had told me so. The woman gave me an email address and asked that I send her photos of any new pieces I would consider selling that were not currently on display. I assured her that I would and she went on her way. I didn't find out until later that it was considered extremely rude by most serious artists and galleries for a buyer to request to see work that was not currently on display. I didn't see a problem with it, myself. \n\nAbout an hour after the show started, I was able to ignore the critics milling about and began to get bored. Truthfully, I was surprised I lasted that long. I normally lost patience with these things in the first twenty minutes. I sipped a glass of wine, wishing it was a beer, and was chatting with Margaret when I heard a soft voice behind me that made my heart seize up.\n\n\"Your new work is beautiful, Adam.\" \n\nI turned and saw Amy standing before me, a shy and hesitant smile on her face. Her eyes were tired but warm and beautiful. She was dressed in a tight, dark blue dress that ended a few inches above her knees with matching heels. The sapphire necklace that I had given her for Christmas years before dangled from her gorgeous neck. Her hair, now longer, was hanging loosely over one shoulder, exposing her neck fully on one side. She didn't look a day older than when I'd last saw her, over three years before. She took my goddamned breath away.\n\nI opened my mouth to speak, and words wouldn't form. I just stared at her for a long moment, just as she stared at me. My mind started racing through thoughts so quickly that I could hardly form them into words. Part of my mind was screaming at myself at the top of it's lungs to speak, while another was racing through questions. Did she resent me? She would have every right to. I left her behind. I fucking left her behind. Why the fuck did I do that? Did she still want me? Need me like I needed her? Speak, goddamn you! She's right here. Fucking speak! Has she moved on? Is she over me? She's here. She can't hate me. Right? Make your mouth work. Hug her. Hold her. Don't. You. Fucking. Cry. \n\n\"I wasn't sure I should come.\" She finally spoke, her lower lip trembling with uncertainty.\n\n\"I'm so glad you did.\" I replied, taking my first breath of air in what I thought may have been nearly a minute. In my mind, my words sounded distant, like I was on autopilot for a moment. I wasn't prepared for to see her. I had so much to say. I tried desperately to get my thoughts in order. Fuck! She was really here! I ached to hold her in my arms. \n\n\"So it's okay that I'm here?\" Her voice cracked a little, still hesitant. A storm of emotions was clearly visible in her beautiful blue eyes. I could only imagine the same could be seen in mine, assuming I didn't look as afraid as I felt. Afraid of her. Afraid of myself. Afraid she'd leave. Afraid of... everything.\n\n\"It's more than okay. I just can't believe that I'm seeing you.\" I stepped forward and hugged her, no longer able to control my impulse. The hell with my fears, I had to hold her. At least once. \n\nHer arms wrapped around me in a tight embrace and she started shaking. Her wonderful, familiar scent filled my lungs. My body had missed her on a cellular level, as I felt rocked to my very core by the warm softness of her small frame encased in mine. Every fiber of my being was focused on holding her in my arms again. I felt a tightness deep in my chest, a feeling I had possessed for so long that I no longer remembered it was not a part of me, slowly begin to uncoil. \n\nWe didn't speak for a few long moments, neither of us willing to release our grip on the other. We both seemed to physically vibrate with the power of the moment we were sharing. \n\n\"You were so fucking hard to find.\" She nearly whispered, her voice choking the words out. I could feel her tears dampening my shoulder. \n\n\"I've missed you so much.\" I breathed in her ear, my voice cracking around the knot in my throat. I tightened my arms around her in a squeeze for a moment but couldn't will myself to let go of her yet. A tear of my own slid down my face, despite my efforts to contain it.\n\nFinally, she pulled away from me a few inches, her hands sliding down my arms to take both of my hands in hers. She smiled at me as warmly as ever, relief and elation written all over her face despite the tears that caused her mascara to bleed tiny black lines. Many of my questions fell away from my mind in that moment, no longer relevant as I looked in her eyes. They still shone with her love for me. As blue as the water back home. \n\nI heard someone clear their throat suggestively nearby and glanced up to see Theron standing a few feet away with his arm around Margaret. They both had huge expectant grins painted on their faces. Hell, Margaret looked like she may start bouncing at any moment. Margaret wordlessly held a tissue out to Amy, who took accepted it and held it to each of her eyes. \n\nTheron mouthed the word \"Amy?\" to me, although he looked certain that he already knew the answer. I nodded slightly, suddenly remembering where I was and that we were in a room full of people.\n\n\"You must be Amy.\" Theron said. Amy glanced at me with a puzzled expression, but nodded to him.\n\n\"This is Theron Cain and his wife, Margaret. This is Theron's show.\" I explained.\n\nTheron extended his hand and Amy shook it politely, her other hand still holding mine.\n\nMargaret leaned over and planted a kiss on Amy's cheek, motioning to me. \"I can't tell you how important you are to this man. I'm so very glad to get the chance to meet you.\"\n\nAmy didn't seem to mind Margaret's well meaning affection, despite her being a stranger and hugged herself to my arm, which was still trapped fiercely in her grip. \n\n\"He's everythi-\" She started to speak and buried her face in my shoulder instead, shaking against me. I pulled my free arm up around her and held her close.\n\nPeople were moving through the gallery, blissfully unaware of us and the tremendous importance of our reunion. We weren't being stared at, but I wanted to be alone with Amy all the same. I didn't care about the show at all anymore. My little sister was back in my arms and that was the only thing that mattered to me right now. I looked up at Theron, who nodded at me as if reading my mind.\n\n\"Get out of here, man. I'll call you in the morning and tell you how the rest of the show went. You've got more important things to take care of.\" He smiled at me, and put his arm around Margaret again. \n\nMargaret's eyes were shimmering like she was going to start crying at any moment as she smiled more widely than I would have guessed she was capable of.\n\n\"Thanks.\" I acknowledged, and led Amy out of the gallery to the street. Her arm was still wrapped around me as we walked. I wasn't going to complain.\n\nI started to hail a cab, but decided to walk for a while instead.",
        "\"Do you need to sit somewhere?\" I asked her. She shook her head, letting out a little gasp as she tried to recompose herself.\n\nWe walked alongside the gallery building in silence for a few moments, without a destination in mind. I tried to organize my thoughts, not wanting to terrify her with a mountain of questions and declarations. She seemed to be calming down and I thought she was probably trying to do the same. We passed a well tended pavilion that was positioned next to the gallery and came across a Starbuck's. \n\nI walked toward the entrance and Amy, seeing the building, broke her silence.\n\n\"You always hated Starbuck's. You said they were a cult and were going to slip potassium in the coffee at any moment and take out half the world's population.\" \n\n\"I still do. And I stand by my theory.\" I replied, grinning a little at the memory. \"But you used to love the stuff.\"\n\n\"Let's find somewhere else.\" She said, sliding her hand down my arm to interlace our fingers. I suspected her arm was tiring from the grip she'd had on mine for so long now. I know my arm was grateful for a little respite, but I would have died before I voiced a complaint.\n\nWe kept wandering down the block and I suddenly had a silly urge to state the obvious.\n\n\"We're walking the streets of London together. Who would have thought that would happen?\" I asked.\n\nShe stopped walking and gripped my hand a little tighter signaling to do the same. I turned to face her as she moved in closer to me. Smiling up at me, she said \"I'd always hoped to.\"\n\nI got lost in her smile for a moment and, impulsively, I kissed her. Her lips met mine and parted immediately. Our tongues gently explored each others' mouths, remembering their favorite places. It wasn't a hungry, driven kiss. It was a passionate, loving kiss. I felt years of tension and longing falling away from me. If anything had ever felt more right to me in my life than this moment, I didn't know what it would be. My free hand came up and wrapped around the side of her neck, my thumb resting just beneath her ear. She purred contentedly against me, letting out a relieved sounding sigh.\n\n\"Was that okay?\" I asked, hesitantly, when our lips parted. I didn't know where we stood, really. I didn't know if she had someone else in her life, now. It had been years, after all, and I'd acted on impulse, kissing her almost instinctively. She hadn't acted like it was a bad move, but... Christ, I was thinking too much again.\n\n\"Oh god, yes. Do it again.\" She exclaimed and moved her lips back to mine. We kissed again, deeper this time, a little hungrier. She whimpered into my mouth, a satisfied sound that told me that she felt this was as right as I did. \n\nWe were interrupted when my arm was struck by a woman with an armload of shopping bags as she passed us and I suddenly remembered we were standing on a relatively busy sidewalk.\n\n\"Sorry, excuse me.\" The woman said over her shoulder. \n\n\"We're gonna get run over if we keep standing like this,\" I muttered and we resumed our walk. \n\nAmy took the lead now, and it took me a moment to realize where she was leading us. There was a diner up ahead that had booths lining the walls and didn't look extremely packed at the moment. I held open the door for her and followed her inside. \n\nOnce we were settled into a booth and I finally had both hands free for a moment, I reached up and loosened my tie. As I slid it into the pocket of my suit jacket, Amy shot me a look.\n\n\"Why'd you do that?\" She asked.\n\n\"It was uncomfortable,\" I replied as I unbuttoned the top button of my dress shirt and felt a great sense of relief.\n\n\"You look good in a suit.\" Amy observed.\n\nA waitress came and took our order. I didn't ask, but I think we both ordered more out of politeness and nervousness than anything. I certainly wasn't hungry. By the time our waitress headed for the kitchen, I felt I had put off the inevitable long enough. It was time to ask questions. I wasn't quite sure where to start.\n\n\"Are you vacationing here or..?\" I ventured.\n\n\"Kind of. I guess. I came here looking for you.\" She smiled at the last bit, reaching across the table to take my hand.\n\n\"Wow. You heard about the show in Austin?\" I didn't think it had been advertised that widely. I mean, I understood that it could be found online, but I hadn't thought it would so prominent as to be heard about in the States. \n\n\"Well, Portland, actually. I found an announcement for it online and saw your name.\"\n\n\"Jesus. And you came all the way here in case it was me, just from seeing my name?\" I was a little surprised, even though I shouldn't have been. I would have gone farther, if I knew for sure she'd be there. \n\n\"I'm glad you did, don't get me wrong.\" I added defensively, as a tiny grin crept over her face. I wasn't exactly oozing confidence at the moment. In a perfect world, she might end up mocking me for this one day. How weird is it that I missed her making fun of me? Hell, I missed everything about her.\n\n\"This is incredible. You're really here. I really found you. We're together.\" The words nearly exploded from her as she broke into on of her most excited smiles that spread from ear to ear. \"I almost can't believe it.\"\n\n\"Yeah\" I chuckled, feeling slightly giddy as her words sunk in. \"We're together. You really found me.\"\n\n\"I love you.\" I told her, feeling nearly as nervous as I had the first time I had said those words to her in a non-familial context. \n\nHer long delicate fingers moved to intertwine with my own again. She looked up at me, her stunning blue eyes locked with mine. \"I love you, too.\"\n\n\"So there's no one waiting for you back at the hotel? Or in Portland?\" I asked, regretting my insecurity immediately.\n\n\"No, baby. There's no one but you. There could never be anyone else.\" She squeezed my hand, rubbing her thumb over mine.\n\n\"That's a relief,\" I sighed. \"I mean, you let me kiss you and all, so I thought... I just... Fuck.\" I brought my other arm up on the table and buried my face in the crook of my elbow. This is my little sister, the love of my life. Why can't I just talk to her? Fuck. I sighed in exasperation. \n\nShe reached across and ruffled my hair. I looked up into her soft smile. \n\n\"I'm nervous too, baby. It's okay.\" She reassured me.\n\n\"I'm sorry. I just have so many things going around in my mind.\" \n\n\"Me, too.\" Amy replied. \"So let me ask, you don't have a girl waiting for you back... wherever?\"\n\nI raised my head from the table and looked at her again.\n\n\"No one could ever replace you. Why even bother trying?\" She adopted the relieved expression I'd had a few moments earlier.\n\n\"So, do you live in London now?\" She asked as our waitress arrived with our coffee. \n\n\"No, but I do live in Europe.\" I tried to give her a mysterious smile.\n\n\"Really? That's exciting.\" \n\n\"It wasn't at first. But I've gotten used to it.\" I sipped my coffee.\n\n\"Can I ask what happened after I went upstairs that morning? When I came back down, you were gone and he wouldn't tell me where you went.\"\n\nShe had been taking a sip of her coffee, but she set it down and stared at it for a long moment. She reached over and picked up her spoon, dumped a sugar packet in her coffee and started stirring. Her small tongue slid across her lower lip, moistening it, as she prepared to speak.\n\n\"I was screaming at him. I couldn't believe he was blaming you for everything. And what he fucking did to you. My god...\" Her eyes welled up a little, but she seemed to contain it. \"It got to where I was just incoherent. I don't even remember what I was yelling anymore. I was so scared, you seemed so badly hurt.\" \n\nShe paused. \"How bad was it? I never could get an answer. I found out you went to the hospital, but all they would say was that you were discharged the same day.\"\n\n\"It could have been worse.\" I shrugged. I didn't want to get her worked up over it now, I'd long since healed from that whole debacle. \n\n\"Anyway, mom took me out to the car and drove to grandma's for a while. She just wanted to get me away from him for a while. And away from you, I guess. Later, dad took me to see our uncle in New York for a couple of weeks. That was a horrible trip. I didn't want to go, of course. He threatened to have you arrested if I didn't. He refused to listen to anything I had to say about us. He was convinced that you had taken advantage of me somehow, and wouldn't let me tell him otherwise. I don't know how I never realized what an asshole he was to you before. I know you made black sheep jokes, but I didn't see how serious it was.\" She dropped her spoon on her napkin and took another sip of her coffee before looking back at me. The sadness in her eyes gnawed at me. I reached up and put my hand to the side of her face, hoping to reassure her. She nuzzled her face in my palm for a moment and kissed my palm before she continued speaking. \n\n\"Anyway, you know he canceled the cellphones. He shut off the internet connection at the house, as well. He was trying to do anything he could think of to eliminate ways for you to contact me for a while.\"\n\n\"Yeah, I figured that was what happened.\" \n\n\"By the time we got back home from New York, I was a complete wreck. I dropped out for the semester. Mom had put the rest of your stuff in storage, so your bedroom was mostly empty. I used to go in your room and just sit against the wall on the floor for hours. It was as close to you as I could get. It used to piss him off something awful. Dad even took the painting that you had given me out of my room and put it in storage with the other stuff. He never knew about this, at least.\" She placed her hand on the necklace I had given her.\n\nIt made me ache to think of how much it must have pained her to be there. At least I had been able to go somewhere new, without constant reminders of her everywhere. \n\n\"After a couple of weeks, mom sent me to Colorado to stay with Aunt Linda and Courtney for a while. She told them that you had some huge fight with dad, had left home, and that I was have a really hard time dealing with it. So I stayed there for a couple of months with them. I missed you so badly that I broke down one night and told Courtney the truth about us. She was shocked, but eventually she accepted it. She's never told anyone. She tried to help me find you, but by then you seemed to have disappeared off of the planet.\" \n\n\"That was two or three months after?\" I asked, remembering that I had left for Greece by then.\n\n\"Yeah, not quite three months. We had no luck at all. When you called Aunt Linda's that first Thanksgiving, Courtney was really upset that she couldn't get to the phone in time. Mom was pretty upset, too. She just wanted to know you were okay. We weren't the only ones looking for you, either. John contacted me a few times, so did Megan. No one knew where you went. When you decided to disappear, you did a damned good job of it. Oh! Megan married Man-bun, by the way. Turns out his name is Eric.\" She gave me a weak smile, that grew when I started laughing.\n\n\"Oh wow.\" I laughed. I couldn't imagine Megan being married. \"Does he still have a man bun?\" \n\n\"I don't know. I haven't been back there in a while. I got a job with a finance company in Portland after graduation. I've only been there a couple of months, though. I took a few days off to come here.\"\n\n\"So you got your degree? That's awesome!\" I exclaimed, genuinely proud of her. \n\n\"Thanks,\" She smiled, amused at how excited I was for her. The waitress returned with our food and made sure we didn't need refills on our coffee.\n\n\"So what happened after Colorado?\" I asked, picking up a piece of bacon and eyeing it with intent.\n\n\"I didn't want to go back home. I just couldn't take it there any more. I applied to transfer my credits to UCLA and was accepted. I qualified for a couple of grants and moved into the dorms there. I hit the books hard to keep myself busy. I wasn't really trying to graduate early, but that was a pleasant side effect. I was just trying to keep moving. Most of my free time was spent online trying to find any mention of you.\"\n\n\"I imagine there wasn't much to find.\" \n\n\"Not a damned thing.\" She agreed. \n\n\"Until last month when I found the announcement online for the art opening, I was worried you might have died or something. But, surely we would have gotten word of that. It was really lucky that I even heard about the show. I wasn't looking for you to be in Europe. I thought you might be in Houston or Dallas or somewhere close by. Maybe San Antonio. Surely, at least in the same country. I thought one of my best chances to find you might be if you did a show somewhere. I'm subscribed to mailing lists for art galleries all over the place. It must be more than a hundred of them. Some of the listings are for multiple galleries that do these cross promotions for each other. That's the only reason I saw anything for the show at all. When I saw your name and saw the show was in London, I couldn't believe it I feel like I haven't slept in weeks, waiting for tonight to get here. I even called the gallery from the States trying to find a home address for you. They wouldn't tell me anything.\"\n\n\"Probably thought you might be a stalker.\" I chuckled.\n\n\"My turn to ask a few things.\" She said, as she watched me swallow the last of the piece of bacon.\n\n\"Go for it.\"\n\n\"Where have you been all this time? Where did you go?\"\n\n\" At first I stayed at Jeff... er... Dr. Miller's art studio. Once I was able to, I tried to find you and couldn't figure out how to reach you. I used to sneak by our parent's house and watch for you, but you were never there. After a while, I just kind of fell apart. Everywhere I went reminded me of you. And it hurt to be around. I was so fucked up by it all. I just couldn't stay anymore. After about a month or so, I got offered a job as Theron's personal assistant in Greece. I took it as a chance to try to get myself together. I've been living on an island in Greece ever since.\"\n\n\"Holy shit. Greece? Really?\" She looked at me wide eyed, forgetting she had a fork full of shredded potatoes in her hand.\n\n\"Yeah. Milos, Greece.\"\n\n\"Wow. That explains your tan. What's it like?\"\n\n\"It's fucking beautiful. The water is an amazing shade of blue and crystal clear. There's these incredible rock formations along the beach and all kinds of natural caves. It's really something.\" I told her as I glanced down at my hands. Tan? I hadn't realized. \n\nShe smiled wistfully at my description. \"It sounds amazing.\"\n\n\"You like Portland?\"\n\n\"It's okay. Rains a lot. Humid.\"\n\n\"I didn't exactly plan on Greece.\" I explained. \"Well, I guess I kind of did, only because it was somewhere besides Austin and it was the first opportunity to come up. I would have gone anywhere. I could have been offered to go to Nigeria and I would have gone. As long as no one knew me. Somewhere without memories.\"\n\nAmy nodded and looked out the diner window at the cars driving by out on the street, taking in the sights of London. I watched her, still trying to wrap my head around the idea that she was here. It blew me away that she had come all this way just to find me. I would have done the same if I knew that she wanted me as badly as I wanted her. But Amy had done flown here blindly after not seeing me for three years. It suddenly occurred to me that she was a braver, stronger person than I. But I had always kind of thought so.\n\n\"When do you head back to Greece?\" She asked.\n\n\"Our flight leaves Monday afternoon. Yours?\" It was Friday. I hadn't thought about it until this moment. There was no way in hell I was going to lose track of her again.\n\n\"I'm supposed to fly back day after tomorrow, but I don't think I'm going. I don't really care if I ever go back to Portland. I don't want to be away from you again.\" She looked at me with a hopeful expression in her eyes, as if she needed to hear that I wanted her to stay.\n\n\"Fuck Portland. I need you with me, Amy.\" I replied taking her hand again for emphasis. \n\nAmy's whole face lit up in a beaming smile and she looked like she was about to launch herself over the table at me. Instead, she darted around the table and wrapped me in a huge hug, squealing in delight like she was a little kid again. I couldn't help chuckling at her. For a moment, she was my adorable little sister. And the woman of my dreams. Even now, years later, my brain sometimes hiccuped over those strangely stitched together bits of data. \n\n\"Oh god, Adam. I'm so fucking excited!\" She gasped, as she tried her best to crack a few of my ribs in her embrace. I was hugging her back, of course. But I wasn't trying to inflict bodily harm. I happened to glance over the top of her head and noticed our waitress standing next to a couple of other staff grinning at us. I didn't care. I never wanted to let her go.\n\n\"I love you so much, Adam.\" She cried, tears of happiness sliding down her cheeks.\n\nI held her to me, stroking her hair softly. \"I love you too, beautiful. I love you with all my heart.\"\n\nFinally, her arms gave out on her, and she settled in on my side of the booth with me. I pulled her plate across from her side for her and passed over her coffee. She finished her meal half sitting in my lap. I didn't mind. Although, I did have to chuckle when a bit of shredded potato went rogue and slipped down the cleavage of her dress, sending her on a flustered trip to the bathroom. \n\nWe spent hours sitting in the booth catching up about what had happened over the past couple of years. Amy brought me up to date on family matters, in as much as I cared to know. Brad had finally proposed to Brenda and they were married. Amy had attended the wedding as a bridesmaid, and endured a number of questions about my absence. She told me about attending UCLA and we compared our experiences in Rome. Between the time change and the long, emotional evening, Amy's adrenaline and excitement about our reunion finally lost the battle to fatigue and she suddenly seemed about to fall asleep next to me in the booth. \n\nI flagged down our new waitress, as there had been a shift change in the interim, and got our bill. I made sure to tip our new waitress well, and gave her a second tip, requesting that she pass it to our former waitress. I had long had a soft spot for what I considered to be an unjust pay system for wait staff. \n\nAmy climbed out of the booth and took my hand as soon as I stood up. I couldn't help noticing that one of my ass cheeks had fallen asleep. I freed my hand from hers to stretch a second, only to have it snatched back the moment I lowered my arms. As we walked out of the diner, I noticed that it looked like the sun might be coming up and checked my watch. \n\n\"Holy shit. It's almost five.\" I commented.\n\n\"No wonder I'm exhausted,\" Amy yawned. \"Where's your hotel?\"\n\n\"Whoa now... I'm not sure that's proper.\" I attempted my best poker face.\n\n\"Oh? Um.. Okay, I can-\" She began, looking a little crestfallen. \n\nI pointed to the tall hotel, almost directly across the street from the gallery. \"It's that one.\"\n\n\"Don't do that to me. I'm tired, damn it.\" She whined, with a hint of amusement in her voice.\n\nWe walked back to the hotel, the movement causing her to wake up a little along the way.\n\n\"You shouldn't have listened to mom.\" She said as the elevator doors closed in the hotel a few minutes later.\n\n\"I know. I'm sorry.\" We both knew she was talking about the letter.\n\n\"That's why you didn't keep trying to find me, right? After the first year, I mean.\"\n\nI nodded, feeling guilty. I could have tried harder, and I knew it. \n\n\"It's okay. I get it. I saw the letter. It would have screwed me up, too.\" Her hand reached over to take mine. \"But she's not us. And she doesn't know how strongly we feel about each other. She was wrong. Hell, she probably even realizes that by now. Not that the she isn't too stubborn to admit it. It doesn't matter anymore. You're here now.\"",
        "The elevator doors opened a moment later and we walked down the hall to my room. I fought with the lock a moment, listening to her snicker softly as I did so. Mercifully, the damned lock finally disengaged and I let her in the room. \n\n\"Wow, that gallery must love you.\" She exclaimed as she looked around the room. While not lavish, it was a rather nice hotel room with a large living area in addition to the tiny kitchen and bathroom. \n\n\"This was Theron's doing. I never spoke to them.\" I replied.\n\nShe looked down at herself as if something had suddenly occurred to her. \n\n\"Do you have a shirt I can borrow? I can't sleep in this dress.\" She asked. I briefly considered suggesting she sleep nude, but found myself too shy to suggest it. \n\nI walked to my luggage and pulled one of my shirts out for her. She took it from me and kissed me on the cheek.\n\n\"Thanks, baby.\" She smiled as she entered the bathroom and closed the door. \n\nFeeling only the tiniest bit of disappointment at her lack of exhibitionism, I flopped on the sofa in the living area of the hotel suite. So she didn't want to get naked in front of me. Big deal, I told myself. She's back in my life, that's what matters. I didn't get much further in my thoughts than that before I was fast asleep.\n\nI woke on the sofa, still in my dress shirt and slacks from the night before, with a hell of a sore neck from the angle I'd fallen asleep in. The sun, coming in through the windows was bright and I checked my phone to see what time it was. Holy crap, I thought to myself, when I realized it was already past noon. Suddenly, I remembered the night before and scanned the room. I spotted the lump bundled up on the bed and walked over to it. \n\nAmy lay fast asleep, curled up in a fetal position under the blanket. Only her face, a bit of shoulder, and one hand could be seen under the wad of blankets she'd piled on herself. I guess it had been chilly when we came in the room, I couldn't remember. I noticed her dress carefully draped over a chair at the desk in the corner. Oh yeah, she'd borrowed a shirt. I leaned against the wall and folded my arms, just watching her sleep for a few minutes. Just being in the same room with her made me feel better than I had felt about the world in a long time. I marveled, not for the first time, at her angelic beauty and how peaceful she always looked when she slept. I thought about going to take a shower, but that might wake her up and I didn't want to do that. She looked too beautiful and peaceful to disturb.\n\n\"What?\" she asked, snapping me back into focus. She stretched a long, full body stretch with both arms far above her head. The blankets shifted down her body a bit, revealing the way my old Cure shirt hugged to her body. I could make out the swell of her breasts beneath the shirt. \n\n\"Just watching you sleep.\" I replied.\n\n\"Mm... I did a bit of that last night myself.\" She yawned and scratched at her rib cage. \"When I got out of the shower, you were dead to the world.\"\n\n\"Never even heard the shower turn on. Damn.\" I had been exhausted from nerves before the show, combined with the adrenaline of our reunion and the long night, I hadn't stood a chance of staying awake. \"Speaking of showers... Back in a bit.\"\n\nAfter I showered and changed clothes, she got up and took her dress into the bathroom with her to change. I couldn't help but be appreciative of her long, sexy legs sticking out from under my shirt as she vanished into the bathroom. \n\nWhile she was changing, her phone began chiming from the nightstand. I glanced at it, reflexively and saw it was Courtney. For a moment, I considered answering it, just to mess with Courtney's head, unsure if she would recognize my voice, but thought better of it. It went to voicemail.\n\n\"Can you zip this for me?\" Amy asked as she emerged from the bathroom holding her dress up. \"Was that my phone?\"\n\nI couldn't help and admiring the curve of Amy's spine as I zipped it up in the dress, taking the liberty to wrap my arms around her from behind and plant a kiss on the side of her neck when I was done. She purred softly, and melted back into me, framing my arms around her with her own. She rocked back and forth for a few moments with her eyes closed, until she started trembling slightly. I moved to release her and ask what was wrong, but she snatched me back to her fiercely as soon as I shifted away. \n\n\"Don't.\" She said, softly.\n\n\"Okay,\" I replied, a little uncertain.\n\n\"I've missed you holding me so much. Just.. hold me, okay?\"\n\n\"As long as you like.\" I replied, more than content to oblige. \"Are you okay?\"\n\n\"I'm perfect. I missed you is all. This feel so right.\" Her eyes were still closed as she leaned back against me, still rocking lightly. \"Don't let me go.\"\n\n\"I won't. I promise. Never again.\" I tightened my grip around her a little, and meant every word.\n\nA short while later, apparently satisfied for the moment, she collected her phone from the night stand. As she was putting on her heels, she asked \"So what's the plan today?\"\n\n\"Lunch, for certain. I don't need to be back at the gallery until this evening. Probably should check in with Theron at some point. What do you have in mind?\"\n\n\"I'd like to go to my hotel and change before lunch, if that's okay. After we eat, maybe go see some of London? We may never be here again.\" She gave me a hopeful smile, one she knew was hard to resist from a lifetime of practice. I flashed on a memory of using that smile on our father when we were kids in order to score a dollhouse she'd had her eyes on for months. It had worked then, just like it working now. Hopelessly wrapped around her finger as always. Damn it.\n\nWe caught a cab to her hotel, where Amy changed into a simple black dress that extended almost to her ankles but had a fascinating habit of clinging to the curves of her body when she walked. For something that left so little flesh exposed, it was looked very sexy on her. After lunch, we went to see the royal palace and took a walk through St. James's Park along the lake. As we walked, she told me about her job and the friends she had made since living in Portland. I told her more about Milos and the nearby islands. Over the last couple of years, I had become acquainted with a few locals on Milos, mostly shopkeepers that I frequented and neighbors. Ever the introvert, my only true friends on the island were limited to the Cains. \n\nAmy insisted we pester a female passerby to take a photo of us on the blue bridge that crossed the lake in the park, and I obliged her in the name of not spoiling the mood. She was well aware of my disdain for having my photograph taken and took advantage of my generous mood by asking the kind woman to take a few more pictures than seemed necessary. When we resumed our walk, she took my arm in hers and planted a kiss on my cheek. We had just enough time to check out the Churchill museum before going back to collect her things from her hotel and transporting them to mine. \n\nI had to meet Theron at the gallery shortly after to take care of a couple of minor press interview type things that Theron's agent had set up. They went pretty much as I expected, only asking me a couple of minor questions and then focusing on Theron. I was basically a tag along for this show and I was perfectly comfortable with that. Honestly, even if they didn't ask me a single question, I was still pleased. Never, in my wildest dreams, would I have expected to have my paintings hanging in an art gallery in London. Throughout the interviews, Amy continually smiled at me from the bench that she shared with Margaret. They seemed to chat quite a bit among themselves and have a decent time of it.\n\nOver dinner at a nearby restaurant, Theron informed me that the show had been very successful the night before. But both he and Margaret were much more interested in hearing about how Amy had come to be in London at the same time as us. He seemed pleased with himself when he learned that Amy had found out about the show from an announcement that she had found online. \n\n\"I guess I have more than one reason to be grateful to him for letting me piggyback onto his show, now.\" I commented to Amy, knowing that it would annoy Theron who found my self deprecation to be an irritant.\n\n\"He didn't piggyback onto my show. I invited him to share the gallery with me. The humble prick won't give himself any credit.\" Theron smirked to Amy, barely taking my bait.\n\n\"Adam never really has when it comes to his art.\" Amy replied, causing me to roll my eyes. I caught an elbow to my ribs in retaliation. That hadn't happened in a long time and my reflexes weren't up to par. \n\n\"You should hear how he used to go on about his skateboarding prowess when he was in high school, though. You'd think he was trying out for the Olympics.\" She added, causing Theron and Margaret to chuckle. \n\n\"Really, Amy? How many dinners did I have to sit through hearing about human pyramid this and team cheer number 437 that when you were cheer leading?\" I looked at Theron, \"You want to know what's truly tedious? Listening to someone spend hours practicing a cheer loudly across the hall from your bedroom.\"\n\nWe all had a great time at dinner carrying on, us telling stories of growing up back in Texas, the Cains telling us about growing up around Manchester. I quizzed him thoroughly about several of the bands that I loved from that area and was disappointed that he knew little to nothing in the way of interesting tidbits about them. I had hoped that he had seen them at early club shows or something before they made it big. Turns out Theron was too much of a bookworm for his own good and missed out on a lot of great concerts, for which I thoroughly berated him, much to his sister's amusement. Amy rolled her eyes at me, not for the first time, for going off into one of my long winded music nerd rants. \n\nThroughout the meal, Amy kept her hand on my thigh, occasionally giving it a slight squeeze. She leaned on my shoulder a lot, seeming to want to keep herself in contact with me as much as possible. I wasn't complaining in the least, as I wanted the same thing. \n\nThe night air was crisp on the walk back to the hotel, and I found myself wishing I'd thought to bring a jacket. Amy must have felt the same way because she stayed cuddled up against me for the entire walk. We parted ways with Theron and Margaret at the hotel and retired to my room.\n\nI sat on the couch in the hotel room, flipping through channels without interest while Amy showered. I thought over the logistics of getting her to Greece. We'd probably have to ship her stuff separately, I thought. I didn't know how much stuff she had, but it wasn't going to be cheap, I suspected. Maybe I'd finally go back to Austin and get the last of my stuff out of storage while I was at it. It'd be good to sever that last tie with the place. And I'm sure Dr. Miller was sick of me sending him money every six months to renew my lease on the storage space. I was trying to remember how much stuff I had left in that storage building when I heard the water shut off in the bathroom.\n\nAmy walked out of the bathroom wearing the shirt she had borrowed from me the night before. Her long, slender legs were bare under the shirt once again, which extended almost halfway to her knees. Effortlessly sexy, I thought, as my eyes worshiped her lovely form.\n\n\"You probably shouldn't be looking at your sister like that.\" She said shyly, biting her lower lip.\n\n\"I shouldn't?\" I replied, raising an eyebrow.\n\n\"Not if you want her to keep her clothes on.\" She grinned as she sashayed toward me. I found myself temporarily without a response as she neared. Her skin was flushed a slight pink from the hot water of the shower, and I could feel the heat radiating from her body although she hadn't yet touched me.\n\nShe stood next to me, looking down at where I was sitting on the couch with a tentative expression. I reached out and placed a hand on one of her warm, soft thighs just above her knee. Her eyes closed a moment and she let out a small sigh. Hooking my hand behind her knee, I drew her closer to me.\n\n\"Come here,\" I breathed. She sat happily across my lap, hooking an arm around my neck. Her skin was so warm and soft against me. She gave me a delighted smile, her lower lip caught between her teeth. My little sister could be so goddamned adorable. \n\nWithout thinking, acting on a reawakened instinct that had been dormant for years, my hand slid under her shirt over her ribs and cupped her breast. My cock, already erect, strained against my the fabric of my boxers like a wild beast shoving angrily against the bars of its cage. She whimpered, closing her eyes and clutching herself against me tightly. \n\n\"Oh god, Amy.\" I breathed as her nipple hardened against my palm. \"I've missed you so fucking much.\"\n\nHer lips found mine and our tongues met in a sensuous battle. She gripped my head in both of her hands, arching herself toward me. The fresh, mint smell of her toothpaste filled my lungs. My hand massaged her breast, as the other moved beneath her shirt, resting on the bare skin at the small of her back. Amy groaned her pleasure into my mouth, pausing to let out a ragged breath. \n\nI rolled her nipple gently between my thumb and forefinger before giving it a light tug, causing her to gasp sharply. I could feel her entire body tremble in response. She rubbed her thighs together in my lap and looked up at me through half closed eyelids.\n\n\"Do that again.\" She sighed. A small smile crept across my lips as I complied. Again, I was rewarded with a sharp gasp, and I became aware that I could smell her arousal. Her thighs were locked together tightly in my lap, her eyes squeezed shut tight. The sound that escaped her lips made both my heart and my cock lurch like a bad driver downshifting on the highway. \n\nI pulled her close to me, nuzzling my face against the side of her neck before planting my lips on it. She purred against me, petting the back of my head with one hand as I held her. My lips moved up the curve of her throat, pausing to feel her pulse racing through the vein in her neck. Impulsively, I licked it, using my tongue to feel the throb of her heartbeat. I kept going to her jawline, then nibbled her earlobe gently, causing her to shiver.\n\n\"I love you so much, beautiful.\" I whispered directly into her ear canal. I punctuated the statement with a kiss right where her ear and her jaw met, a spot I remembered she loved to be kissed. \"I still can't believe I'm holding you again.\"\n\nShe pulled away from me slightly, looking directly in my eyes. Her eyes shimmered before me, filled with a deep and consuming love that was plainly visible within them. Her mouth opened the tiniest bit, and I thought I heard an intake of breath before she dove on me. Her mouth and tongue working their way the length of my neck as I had done to hers. She bathed the area between my clavicle and neck with her tongue before fastening her mouth to the tendon just above it and sucking as hard as she could. I couldn't resist a tiny chuckle, despite the erotic moment, as I knew exactly what she was up to. She liked to leave her mark on me, but was often unable to do so as much as she wished due to the secrecy of our relationship. But that need for secrecy was no longer present, and she claimed her territory with abandon.\n\nI continued to massage her breast with my hand, while she kissed all around my neck, unwilling to release my hold on her wonderfully soft flesh. It had been so long since I'd held her in my arms and felt her body against mine. I had long wondered what it would be like to be with my little sister again like this, imagining in my head that the hunger for her would overtake me and I'd all but tackle her to the ground and take her right wherever I happened to find her. \n\nInstead, I found myself worshiping every moment I spent with her, taking my time to enjoy every sensation that was revisited on my body and making sure that I gave her more than she gave me. I knew that part of that was a bid to prolong the moment I actually entered her, which I still felt anxious about. It had been more than three years, after all. I knew my chances of lasting long once she invited me to enter her were all but non-existent. So I felt like it was my mission to be sure that everything else was totally memorable for her. She was the most precious thing in the world to me, and I wanted her to know it.\n\nAmy, apparently satisfied with her efforts on my neck, let go of me to put a hand on either side of the sofa behind me and lifted herself up from me. She swung a leg around, pivoting so that she was straddling me and settled back down against me. I felt my erection pressing against her crotch, and even through the clothes we had on, I could feel the heat emitting from her. \n\n\"There,\" she sighed contentedly as she ground her panties-clad mound against my crotch, \"that's more like it.\" \n\nSuddenly finding myself with better access to her body without risk of letting her fall to the floor, I moved my other hand under her shirt to take her second breast in my hand as well. She moaned her approval, followed by her breathing becoming more rapid. My thumbs grazed her nipples, toying with them while I palmed her breasts, pushing them together and kneading them like a kitten with a rag.\n\nShe mumbled something I couldn't make out between her raspy breaths.\n\n\"What was that?\" I asked softly, nuzzling her throat gently before I placed a kiss on her esophagus.\n\n\"I said I've missed you touching me. Your hands on me.\" She repeated. \"Fuck, I feel like I'm about to come already.\"\n\n\"I wouldn't mind,\" I grinned into her throat, as I found and gently tugged both of her hardened nipples at once. A loud groan shuddered from her body, her thighs quivering so much that I could see them vibrating from the corner of my eye. She ground her crotch against mine. \n\n\"That was playing dirty.\" She groaned in my ear, tilting her head the other way causing her long black hair to fan out and away from the side of her neck I had not yet kissed. I didn't feel the least bit guilty.\n\nInstead, I dropped my hands from her breasts and hooked my fingers around the hem of her shirt, lifting it up. She raised her arms as I pulled it off of her, exposing her beautiful, round, creamy breasts to me. I took a moment, with my hands resting on her hips, to appreciate the vision before me.\n\n\"You're staring at me.\" She blushed.\n\n\"I can't help it. You're so beautiful.\" I replied, cupping a breast lovingly in my hand as I gazed at her.\n\n\"I'm glad you think so. You're not bad either, you know.\" She smiled as she tugged on my shirt as well.\n\nI leaned forward from the back of the couch so she could pull my shirt off and drop it beside us on top of her own. She moved back against me and I felt her nipples graze against my chest, the contact sending delicious chills through me. I hugged her bare torso against mine, feeling the warmth from her body. My hands glided down her back to cup the globes of her ass, pulling her against me as she planted kisses across my shoulder.\n\n\"Take me to bed, baby. I need you.\" She breathed. I was in no position to deny my beautiful sister anything, and tightened my grip on her ass to ensure I was supporting her. I stood as she wrapped her legs around my waist and carried her to the bed, gently setting her down on the edge of it.\n\nShe rolled away from me and I was left staring at the graceful curve of her bare back and her gorgeous ass, now only partially hidden from my view by a very small pair of black panties. She climbed up on to the bed and laid down across it. She looked over her bare shoulder at me with a glance that made me swallow hard. I pulled off my shorts and boxers, then crawled into the bed, planting a kiss on her spine as I lay down.\n\nAmy rolled to face me, smiling wickedly, and slid down the bed. I felt her hot breath on my penis and held my breath in anticipation. Her tongue bathed the head of my cock for a moment, then her mouth closed over it and began moving me in and out of her mouth. I gathered her hair in my hands, keeping it out of her face as she alternated between licking and sucking my shaft. Her delicate fingers raked their nails lightly over my balls, making me suck in a sharp breath. ",
        "\"Oh god, baby. You're amazing.\" I sighed, as she purred happily in response. Her eyes were watching mine as I gazed down at her. I brought a hand down to graze her cheek, affectionately, and her eyes close softly. She let out a contented hum that vibrated down my cock and made it lurch against her. I felt my balls tightening up and ran my fingers through her hair, trying not to buck my hips into her face.\n\n\"Jesus, Amy. I'm gonna come.\" I groaned. She just purred around my cock and began bobbing her head faster. Within moments I began erupting in my sweet baby sister's mouth. She moaned excitedly, swallowing my load as fast as she could. For a brief moment, I felt like I would never stop ejaculating. But, it finally subsided, and I rolled onto my back, out of breath. Amy crawled up to join me, laying her head on my shoulder. I put an arm around her as she cuddled up to me. \n\n\"Did your baby sister do good?\" She softly asked, with a hint of playfulness in her voice.\n\n\"So good,\" I replied, before my hand crept over to play with her exposed breast. She smiled against me as I kneaded her soft flesh, feeling her nipple against my palm. She was clearly enjoying the attention and playfully gave my neck a series of small kisses, licks, and nips as I felt her up. Eventually, I let my hand slide down her side, tracing the outline of her wonderful flesh. It glided down over her ribs, along the side of her stomach which now fluttered under my gentle touch, up along the swell of her hip and finally settled to clutch her ass. She moaned deliciously under my touch and seemed to hold her breath the lower my hand moved.\n\n\"I'll never get tired of your touch, baby.\" She breathed.\n\nI smiled and gave her ass a good squeeze as a reply, then rolled her onto her back and began kissing her breasts. One of her hands was on my head, holding me to her breast as my tongue worshiped her nipple with great reverence. Her other hand was clutching the pillow above her in a fist, as she arched her back, trying to force more of her breast in my mouth. Amy let out a loud moan that filled the room. I continued to suckle on her nipple for a few more moments before moving to give her other nipple a similar treatment. \n\nAmy's stomach fluttered every time my lips touched her skin as I moved progressively lower on her body. Her gasps became more and more audible as she was lost to the sensation of my touch. My fingers hooked into the material of her panties at her hips and she raised her ass to allow me to remove them from her. The smell of her arousal made my erection ache with need. I'd had my eyes closed, taking in her scent, and I suddenly realized that she was no longer shaved. Instead, she had a neatly trimmed patch of black fur above her lips. I didn't comment on it, instead choosing to nuzzle it lightly with my cheek in a fluid motion as I moved the last half inch to slide my tongue over her slit.\n\nHer body trembled in response and I heard a sharp gasp above me. I parted her welcoming folds with my tongue and began lapping at the glistening secretions that her body released. She writhed above me, both of her hands clutching at her breasts as she released a series of ragged moans. Sliding a finger into her, I brought my tongue up to gently make a pass over her clit. No sooner did my tongue make contact than she bucked her hips, letting out a cry of release loud enough that there was no way the people in neighboring hotel rooms did not hear. She doubled over away from me, thighs clamped tightly together, eyes clinched. Her entire body was shaking from the force of her orgasm. \n\nI moved up next to her, feeling a little pleased with myself, and gently stroked her hair. She rolled over to smile at me, and wrapped her arms around me. Her lips moved up to meet mine in a long, passionate kiss. She pulled me against her and rolled onto her back, I rolled with her until I was positioned above her. Her legs parted and she snaked a hand down to grab my shaft. \n\n\"I'm dying to feel you inside me.\" She sighed, giving me one of her most seductive smiles.\n\nShe positioned me over her entrance and I gently slid forward, easily gliding into her wet folds. We both moaned as her pussy swallowed my entire length, her body welcoming me into her like the long, lost love that I was. I began to move in and out of her, thrusting gently as her body began thrusting back at me. Her feet came up to hook behind my thighs, pulling me against her harder with each downward stroke. Her body felt like it was on fire beneath me. She whimpered and moaned with every stroke, jagged breaths escaping her as she shoved herself against me for all she was worth.\n\n\"Oh, Adam,\" she moaned my name, \"Oh fuck.\"\n\nI increased my thrusts, knowing that there was no greater feeling in the world than being inside her. My need for her seemed to transcend the physical. I didn't believe in souls, but if I did, I might have argued that my soul yearned for her as I continued my thrusts. She began holding her breaths, then releasing them in small whimpers as her orgasm drew closer. I rolled my hips a little as I thrust, trying to increase the sensation for her of my dick sliding into her tight canal. One of my hands moved up to massage her breast, and she let out a loud moan.\n\n\"So close, baby. I'm so close.\" She whispered, as both of her hands clutched the bed sheets above her head. \n\nI could feel my own orgasm beginning to build as I took in the erotic vision below me. She was the loveliest and most exquisite creature I'd ever seen, and seeing her losing herself in ecstasy was something that had always rattled me to my core. It felt magnified ten fold by this moment, our bodies joined after so long.\n\n\"Come for me, princess.\" I whispered against her ear. \"I want to hear you come.\" \n\nHer hands wrapped around the back of my head, holding me against her face as she placed her mouth against my ear. \n\n\"Soon, my love,\" she managed to gasp into my ear between moans. \"Oh god... All for you... uhhhn... baby.\"\n\nHer hands kept my head gripped tight, as her groans raised in pitch and intensity. She seemed incapable of speaking as our bodies rocked together.\n\n\"That's it, beautiful. Come for me.\" I repeated, feeling the walls of her pussy clenching hard against me. She let out a loud cry, her quivering thighs gripping my hips as tightly as she could. Amy's small frame bucked hard against me, her chest heaving and forcing out a series of loud cries as wave after wave of her orgasm slammed through her body. My own body propelled toward orgasm in response to her cries and I groaned out her name as my cock released a jet of semen into her body, triggering a second orgasm from deep within her. She shook violently beneath me, vibrating like a tuning fork as my dick continued to erupt, bathing her walls with my come. \n\nWhen I became aware of my surroundings again, erection fading rapidly inside her, I realized that she was crying.\n\n\"What's wrong?\" I asked, concerned, brushing her hair from her lovely face.\n\n\"Nothing at all.\" She sniffled, smiling as she rolled over to cuddle tightly against me.\n\nShe opened her eyes, another tear sliding down her face toward the pillow, to lock them on my own. \"I was starting to think I may never see you again. But here you are. And it's everything I want it to be. I love you, Adam. I love you so fucking much.\"\n\n\"I love you, too. I'll love you til I'm dead and gone.\" I replied, pulling her more tightly against me.\n\n* * *\n\nBy morning, we'd had sex four times, I'd lost count of her orgasms, and we were both feeling rather raw and sore. When we finally fell asleep, wrapped in each others arms, the sun was beginning to come up. I know I would have happily slept until afternoon if the hotel room hadn't rung at ten in the morning and woke me up. I strained to reach it from my current position half under Amy's sleeping form. \n\n\"Yeah?\" I answered groggily.\n\n\"Long night?\" I could hear the humor in Theron's voice.\n\n\"What's going on?\" I asked, not being awake enough yet for verbal warfare.\n\n\"Well, we were going to see if you two wanted to meet for breakfast in an hour, but why don't we try to meet up for lunch instead? Say around one? Clearly you need more sleep.\"\n\n\"Sounds good. Lobby at one?\" I asked.\n\n\"Perfect. See you then.\"\n\nI think I was asleep again before the phone finished settling on the cradle. \n\nA couple of hours later, freshly showered, I sat in the lobby with Amy. Theron and Margaret walked up to us, smiling. They both looked tired. \n\n\"Didn't sleep much either, I guess?\" I asked.\n\n\"Well, we would have, but the couple in the room next to us kept us up half the night.\" He smirked. I'd forgotten their room was next door to mine.\n\n\"Oh god!\" Amy blushed deeper than I had ever seen her, and buried her face in her hands. I started cracking up, finding her embarrassment far too amusing to be very bothered by my own role in the matter. Theron and Margaret were both laughing as well.\n\nFinally, Margaret put a hand on Amy's shoulder.\n\n\"Relax, dear. A little lost sleep is a tiny price to pay for seeing your brother so happy this morning. I've never seen him this way.\"\n\nAmy looked up at her and went from blushing to pale.\n\n\"Oh, I guess he was too busy to catch you up on things.\" Margaret smiled, reassuringly. Then she sat up in a formal pose and motioned to Theron. \"Amy, I'd like you to meet my brother, Theron.\"\n\nTheron nodded his head, smiling, and said. \"Nice to meet you, Amy.\"\n\n\"Wow.\" Amy looked at me wide eyed and back at them.\n\n\"That's how I wound up in Greece.\" I explained. \"I told Dr. Miller the truth about what happened when he wanted to know why I couldn't go home when I left the hospital that day. He was friends with Theron and thought that it may help for me to be around people who understood what we'd been dealing with.\"\n\nAmy nodded and began to relax. She took my hand in hers. \n\n\"Now then, have you bothered to check reviews of the show yet? I imagine not.\" Theron asked me.\n\n\"No, I haven't.\"\n\n\"I thought not.\" He replied with a smirk, passing his tablet computer to me. \"You sounded a bit preoccupied last night.\" \n\nAmy blushed again, but not as red as she had been. I looked down at the tablet. The screen was on a website of a world famous art critic. The article talked about how successful Theron Cain's new exhibit was and talked, at length, glowingly, about the work of a new artist named Adam Matheson. My jaw fell open and I looked up at Theron who was now grinning ear to ear. \n\n\"What?\" Asked Amy. I passed her the tablet.\n\n\"That's not the only one, either.\" Theron said. \"I've read nothing but positive reviews all morning.\"\n\n\"Holy shit.\" I replied.\n\n\"...Matheson's work exposes the unspoken visceral truths of the human condition.\" Amy read aloud from the article, grinning at me like a madwoman. \n\nI cocked an eyebrow at her.\n\n\"What the hell paintings was he looking at?\" I asked as Theron burst out laughing.\n\n\"Let's get some food, we can look over reviews later.\" Margaret spoke up, amused, but clearly hungry.\n\n\"Definitely,\" I agreed, having not eaten since before the show last night.\n\n\"What time is your flight?\" I asked Amy, suddenly remembering that she was supposed to return to the States today.\n\n\"In about... six hours,\" She said, looking down at her phone to check the time. \n\n\"Are you trying to get rid of me already?\" She teased.\n\n\"Hell, no. I'm just thinking about how long we have to decide how we're handle everything, logistically speaking..\" I replied.\n\nOver lunch, we worked out that Amy would go back to Portland that night after all, in order to get things ready to be able to join me in Greece. When I got back to the island, I'd work on getting things ready for a second person to share the apartment for a while, until we could find something a little bit larger. Then I'd likely fly to Portland to help her get things sorted out and packed. \n\nAt one point during the meal, Amy got a phone call. I watched in mild amusement as she excitedly told Courtney that she had, indeed, found me in London. There were a lot of half finished sentences machine gunning back and forth across the phone line, and Theron began snickering. I wasn't far behind him, earning both of us stern looks from Margaret. Amy was nearly bouncing in the booth when she told Courtney that she was moving to Europe to live with me. \n\nAfter lunch, I made arrangements to meet back up with the Cains after seeing Amy off at the airport and we parted company so that Amy I spend time together before she had to leave. \n\n\"When did you get to London?\" I asked, taking in the amount of clothes she had spread across the bed in the hotel room. Most of them had been packed already, and for reasons unfathomable to me, she had unpacked just to return them to her bags a few minutes later. If Theron was right and there were a lot more shows on the horizon, I suspected I'd see a scene like this play out many times in the future.\n\n\"Friday afternoon. Why?\" She asked as she started stacking the clothes in her suitcase.\n\n\"Just noticing that you still pack three times as many clothes as you need.\"\n\n\"Oh shut up.\"\n\nI picked up a heavily creased piece of paper, that had fallen from her luggage. It had been folded and refolded so many times that it practically fell open in my hand. It was a printed page from the gallery's website promoting our exhibit. It mentioned Theron most prominently, but stated that the exhibit would also feature \"new works by American abstract artist Adam Matheson.\" My name had been circled on the page with a pen multiple times and had several question marks drawn next to it. Little feminine looking hearts were doodled along the edge of the page as well as what I thought looked like a couple of flight numbers. \n\n\"Snoop.\" Amy said, looking up from her packing.\n\n\"Stalker.\"\n\n\"Gonna get a restraining order?\" She asked playfully. Her hair sliding forward across her face as she packed.\n\n\"I don't think I have to worry too much. You're not very good at it.\" I smirked.\n\n\"Well, I didn't have much to work with, jackass.\"\n\n\"I haven't been called that in a long time.\" I chuckled. She laughed too, and we fell into a comfortable silence for a few minutes while she finished packing up the last of her stuff. It was so great hearing her laugh. Being called a jackass gave me a warm familiar feeling in my heart. Most of my life, that had been a term meant to annoy me. In some ways, it still was. But it's funny the meaning had changed over the years. And how badly I now realized I had missed the moniker. \n\n\"Do you still talk to our parents?\" I asked.\n\n\"I keep in touch with mom. It's tense sometimes. She knows I was still looking for you. She keeps holding out hope that I'll drop it. Dad, not so much. It's never been the same. I tried to not be angry with him. I mean, I know we shocked the hell out of them both, but he reacted so badly. What he did to you.\" She shuddered at the memory. I was never that horrified by his actions against me. I had worried more about her than myself throughout that whole event. I realized now just how hard it had to have been for her to witness. And it seemed to have burned in her memory. \"We just don't have much to say to each other, anymore. At least not much that won't lead to a screaming match. He knows I resent him. And I don't think he's in too big of a hurry to try to change my mind about it.\"\n\n\"I'm sorry. I don't know that it would ever have gone any differently. I always knew that our relationship would cost us. No matter how many ways I thought of to try to tell them about us, I always felt like the end result was the same. They just couldn't accept it. And I can't even really fault them for that. It's got to be a hard thing to come to terms with. And it's not like we exactly eased them into it, either.\" \n\nAmy came over and sat in my lap, wrapping her arms around me in a big hug. She smelled wonderful. \n\n\"It was worth it though, right?\" She asked.\n\n\"Absolutely worth it.\" I replied, returning her hug.\n\n\"Are you going to tell them you found me?\" I asked. My fingers ran through her hair affectionately. Her eyes closed and she tilted her head into my hand.\n\n\"I'll need to tell mom sooner or later.\" She said with a sigh. \n\n\"I can't just leave the country without a word. Unlike some people.\" Amy emphasized the word 'some' while giving me a look of fake irritation.\n\n\"That should be an interesting conversation. I don't envy you.\" I tactfully elected to ignore the second part of her comment. \n\n\"You're not going to disappear again while I'm in Portland, right?\" She smiled while she asked, but I could see the glint of worry in her eyes. \"I know it's a silly thing to worry about. I just.. want to hear you say it, I guess.\"\n\n\"I'll never disappear on you again, sweetheart. I promise.\" \n\n\"You'd better not. I'll stalk you again just to kick your ass.\" She reached for her phone and checked the time.\n\n\"How much longer before we need to get you to the airport?\"\n\n\"I really need to head over there in about two hours.\"\n\nMy heart sank a bit at the thought of her going away again, even if it was only for a couple of weeks. Hopefully, I'd be able to visit her in Portland sooner than that.\n\n\"That sucks.\"\n\n\"I was just thinking the same thing. You think two hours is long enough for sex, a shower, and a cab ride to Heathrow?\" She grinned at me and ground herself in my lap suggestively. \n\n\"We can certainly give it a good try.\"\n\n* * *\n\nIt was hard to let her get on the plane. I got the feeling that it was just as hard for her to leave me behind. We exchanged our phone numbers and she made sure that she got Theron and Margaret's as well. I held her in my arms at the boarding gate until the flight attendant finally told her to get on the plane or miss the flight.\n\nI stayed at the airport until I saw the plane take off, pondering the turn of events that had occurred in the last 48 hours. We had been reunited for less than two days. And then she was gone again, even if it wasn't for very long. I resisted an urge to walk to the ticket counter right that moment and book the next flight back to the States. I felt a familiar tightness in my chest that I hadn't experienced in a couple of years. I sat on a bench with my hands on my knees, staring resolutely at the ground. Taking a few deep breaths, I managed to calm myself down. Finally, I caught a cab back to my hotel and took a long nap. \n\nThat night, I met up with Theron and Margaret for dinner. They could barely stop smiling at me the entire time and made me self conscious. Margaret, in particular, was beside herself with excitement. \n\n\"It's going to be a long couple of weeks.\" I mused. \n\n\"I have a feeling it's going to go by faster than you think.\" Theron replied between bites of steak.\n\n\"I hope so. I just need to get a new bed and clean up the apartment a bit. There isn't a lot of prep work to be done, really.\" I thought out loud as I stabbed a piece of potato with my fork and stared at it absently. \n\n\"Thanks for being okay with her moving into the apartment with me. It really means a lot.\" I added, looking up at Theron.\n\n\"Absolutely. We wouldn't have it any other way.\" Margaret spoke up as Theron nodded.\n\n\"Did you get a chance to look over any other reviews yet?\" Theron asked, knowing full well that I hadn't. \n\nWhen I shook my head, he wiped his hands off on his napkin and pulled his tablet computer out again. He opened a website and passed it over to me.\n\n\"Matheson is an essential and uniquely American voice responding to the current postmodern condition.\" I read aloud, making a sour face at the screen.\n\n\"Seriously, where do they get this stuff? What the hell does that even mean? Do these guys just keep a thesaurus on the back of their toilet and make up statements about the stuff they look at? Look at this bullshit.\" I motioned to one of the paintings photographed in the article and read from the caption beneath it. \"...a raw, visceral look into a fractured mind.' Seriously? It's an aborted attempt to paint a goddamned nautilus shell that I added a bunch of godforsaken sponge textures over!\""
    ],
    "authorname": "Anomic",
    "tags": [
        "incest",
        "incest drama",
        "sister",
        "sibling incest",
        "brother sister romance",
        "taboo",
        "romantic incest",
        "loving incest",
        "sibling love",
        "little sister"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/all-i-need-pt-05"
}