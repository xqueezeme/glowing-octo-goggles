{
    "title": "Unlikely Love Pt. 06",
    "pages": [
        "** At last, the conclusion, many thanks to Annag98 for all of her help and friendship, and to all of you for your kindness and support, this was a big project for me. Enjoy! ** \n\nElena\n\nI spent most of the next day simply crying, my heart felt like it had been ripped out and dropped right into an emotional blender. Part of me was angry: Angry at myself for letting Tamara in so deep; angry at Tamara for seemingly teasing me, and angry at the entire universe for tearing her out of my life. At the same time, I picked up my phone about a dozen or so times, wanting to call her or send a text, even if it was a simple apology. What bothered me more than anything else was that I had lost someone I had felt genuinely close to, and fond of, even if attraction was out of the question.\n\nI needed to distract myself, so my first thought was work, which had worked pretty well in the past when I had a really bad breakup. I stopped myself for a second, wondering if that was the right word, we had never been a couple, never dated, and certainly never been intimate. No, it was not a breakup, not in the conventional sense at least. Maybe it was more like a fight, like we simply were not talking to each other, but that left open the possibility of eventually reconnecting. \n\nAs I walked into the Bessmer building, I noticed the expression on some familiar faces, like they could read the anguish like a brightly lit neon sign. Maybe this was yet another huge mistake, I seemed to be making a habit of them lately. I pushed back my doubts and stepped into the elevator and punched the pearl-colored button for the sixteenth floor. I had always liked the old-fashioned appearance of the building, and of the elevator in particular. As the ornate door creaked open, I realized that I hadn't thought about Tamara for about thirty minutes, which encouraged me a bit. Just as I was about to congratulate myself on taking a step forward, I felt the pain again, and forced the tears back. Damned feelings!\n\nMy phone chimed as I closed my office door, and my heart jumped, hoping it might be at least some minor communication from Tamara, just to ease the feeling that she was completely gone from my life. I silently cursed when I saw Lena's name, the last thing I needed was her bullshit or annoying comments. Ignoring her completely, I sat the phone down and started working on my computer, updating some claims based on new information that the customer had provided to me.\n\nAs the message notification sound chimed again, I groaned with annoyance, ready to tear into her for just poking at me. My face went white when I saw Tamara's name, and I felt myself tremble, both from fear and expectation. I hesitated for a moment and then clicked on the message. 'Hey, are you ok? Feel bad about how things ended up.' the text read.\n\nI felt myself paralyzed, torn between simply lying and saying I was fine or at least saying enough that I wasn't without making her feel worse than she obviously did. What the hell was I supposed to say? \n\nJust as I was about to put in some lame response, the phone chimed again, this time it was Lena again. 'Hey, fucking answer me!' it read in bold.\n\nI growled. 'WHAT?' I typed, knowing she had a thick skin and was virtually impervious to being offended. Plus, I really didn't care if I pissed her off, she was annoying as hell! \n\nAs I was about to respond, my phone rang, and Lena's picture and name popped up. Shit, there was no way to pretend I wasn't available, she could tell I read her message, so I answered. \"Ummmm, Hi?\" I said, trying not to sound annoyed.\n\nI heard Lena grunt. \"Well there you are, I thought you were dead or something!\" she exclaimed.\n\nWell, part of me feels dead for sure, I thought. Clearing my throat, I said, \"Well maybe a little hungover, but nothing a cup of coffee or five won't cure.\" I tried to laugh to cement the illusion more fully.\n\n\"Yeah, well you and straight girly were doing some pretty heavy flirting,\" Lena said, laughing as if it was the most ridiculous thing in the world she had ever heard.\n\n\"You are just bound and determined to annoy the hell outta me today, aren't you?\"\n\nLena laughed again. \"Oh and see, you aren't denying it! Gotcha!\" she said.\n\n\"Very funny,\" I said, exasperated.\n\nI heard her let out a big sigh, which I knew was her signature move when she was about to say something serious. \"Hey look, I know I give you tons of shit, but I really care about you as a friend, I have known you like forever,\" she said, her tone uncharacteristically soft.\n\n\"Okay,\" I responded, having no idea where she was headed with her comment.\n\n\"You and I have both had horrible heartbreaks with straight girls. You've played it really smart for a very long time, but this is a huge fuck-up,\" Lena said, almost lecturing now.\n\n\"Oh will you just give it up! We are just friends!\" I said, aware of how sharp my response was, dreading what she might say next.\n\n\"No, no, no, you are not getting off that easy, missy. I can read you like a book, so can most of our friends. You are in love with the girl you know you can never have!\"\n\nI shouldn't have been surprised, Lena had prodded me on this a few times, and on all of those occasions she had been out of her mind and I told her so in no uncertain terms.\n\n\"No, I am not, and this game is getting old, Lena. Drop it or I'm hanging up on you!\" I said, aware that I was almost shouting now. It was a good thing my office door was closed tightly.\n\nLena laughed again, it wasn't the derisive way she often did, it was sheer amusement. \"Look, no need to deny it, I already know, you two carry on like a couple. What's funny about it is that she's clearly in love with you too, she just doesn't understand that.\"\n\nIt was my turn to laugh, and I took it eagerly. \"Straight girl? In love with a lesbian? You're completely insane!\" I said, giggling with a snort.\n\nLena snorted her disapproval in response. \"Didn't say she wanted to fuck you, said she is smitten with you, there is a difference! Ok, I said my piece, you go do whatever the hell you feel like with it!\" she said, hanging up on me.\n\nDid I know Tamara cared about me, cared a lot? Of course, that was never in doubt! Did I think she had romantic feelings for me? No, by definition that was impossible, and I discarded Lena's words as rapidly as I did expired paperwork at my job. If she was trying to mess with my head by saying that, it wasn't going to work!\n\nOh shit, I had forgotten Tamara's text message! Pulling my messaging app back up, I found the note and clicked on reply. 'Honestly, kinda hurting right now. Not your fault.' I texted back, wondering if it was honest and yet not hurtful.\n\nFor several minutes there was silence, making me think at first that she had shut down on me, but I could see her typing something, something that looked like a long message. I waited for the response, but nothing came, and then I could see her typing again. When the message came through, it simply read, 'Well I am hurting too, but the way I handled it was just idiotic. Sorry.'\n\nI was having trouble processing the conversation, on the one hand, Tamara shared the broken feeling I was experiencing and felt bad about it, and on the other she was the source of the pain even if unintentionally. Exactly what was I supposed to do with that? Part of me wanted to run away and cut off all contact, but the rest of me was desperate to hold to any connection. Regretting that I had told her my feelings, I responded, 'Well it wasn't fair of me to lay all that on you. Not something you had any need to know.'\n\nThe whole business of her typing and apparently deleting the message and starting over happened a couple times. 'I suspected it, just... well... maybe kinda.' she texted with a smiley face. One thing was certain, I had consistently gotten mixed messages from Tamara, but none of it seemed conscious or on purpose, maybe there was a one in a million chance that she really did have sexual feelings for me. No, probably not, so might as well just push that possibility aside permanently.\n\nI had no idea what to say next, so I just said something like I had to go, and she replied with ok or something similar. While I felt some relief while communicating, the empty feeling still remained, like she belonged there and wasn't. 'All good, talk soon ok?' I said, then laying my phone down. Maybe some distance was best for a while, but that gaping hole in my life felt incredibly empty.\n\nTamara and I continued to sporadically text over the weeks that followed, and even had one phone conversation but it was ridiculously awkward. Lots of silence and fumbling for words. It made me really sad, because we used to have such an effortless way of interacting and now it just seemed like joyless work just to have a conversation. I missed us, if that was even the right way to say it, the hours of just talking, hanging out, having a drink or two, and the rest. I craved the interactions that we had at the ceramics studio and even just having coffee together.\n\nI kept expecting, or rather hoping, that Tamara would ask to get together to clear the air, even if it was just something low-key like coffee or cocktails, but ended up disappointed. Part of me was pissed at her for closing herself off again, because she had come so far in opening up and making positive changes in her life. What a waste!\n\nWhile still hurt over all the things that had transpired, I finally forced myself to accept that friendship was as close as we would get, though even before the blow-up that friendship was pretty damned awesome. And that connection to her was worth holding on to, and reviving, because I needed it, and on some level Tamara needed it too.\n\nThanksgiving with my family was as enjoyable and awkward as usual, with my disapproving parents peppering me with inappropriate questions and my twin brothers trying to set me up with some horrible friend of theirs. My brother Gregory, the younger twin by five minutes, did make a comment about the spark being gone from my eyes, which I just brushed off with some comment about how awful his haircut was that day. I tried to fight thoughts of how much I wished Tamara had been there to meet my family, though I would not have envied all of the teasing and insinuations they would have thrown at her.\n\nFeeling that familiar ache, I excused myself and went outside, bringing my phone. When I was at a safe distance away from the house, I dialed her number, letting it ring the typical number of times before the call went to voicemail. Damnit, she was avoiding my calls now, something she knew I hated. I fought the urge to throw my phone, at least for a few seconds, but then my anger got the better of me. Just as I was about to hurl it down the street, my phone rang, and I could see it was her. Now I felt bad that I had assumed the worst.\n\n\"Hello?\" I said, trying to remain aloof until I could sense what her mood was.\n\n\"Um, hey... girl.\" Tamara said, a reserved tone in her voice.\n\nI couldn't tell if she was trying to be distant too, or just unsure of what to say, after all it had been weeks since we last talked and it was awkward to say the least. After a second, I realized that I was the one that had called her, so she was probably on guard since she had no idea what I wanted. Then again, I wasn't completely sure what I wanted either.\n\nI took in a deep breath, trying to contain the numerous conflicting emotions that were coursing through me, painfully aware that an awkward silence was building the likes of which had screwed up our conversation last time. No way, not this time!\n\n\"Look, I miss you, like really, really miss you. I miss our talks, our joking and carrying on, and just hanging out,\" I blurted out, wanting to say it before I changed my mind.\n\nTamara sniffed, as if she had been crying a moment before, and then let out a long sigh, like she was releasing some huge burden from her shoulders. \"I miss you too, gawd you have no fucking idea how much. There has been this... huge hole in my life... since... well you know... and it's been... really... hard...\"\n\nI found myself smiling in spite of myself, knowing that she had been feeling as empty as me and wanting, maybe even aching, to reconnect. \"Well, let's just start over, ok? Forget about the crazy shit that happened, and just get back to having fun together,\" I said, almost giggling.\n\n\"Yeah, I would love that. I really... had no idea how much you meant to me... until... well... we weren't talking... and being around each other.\" Tamara answered. I could hear the smile in her voice.\n\nIn that moment, the black cloud hanging over us vanished, and things felt a lot like they had been before the Halloween incident, which we both clearly wanted to forget ever happened. I cleared my throat. \"Well let's change that right now then,\" I proposed.\n\n\"Oh? How exactly? I am at my parents' house right now, probably not going to just be able to take off.\"\n\nI laughed. \"No, no, silly girl. Tomorrow. I hate the whole Black Friday fiasco, never do any of that. But, I do always start decorating for Christman, and I know how much you love that kind of stuff. Why don't you come over and we'll do that together?\" I said, a smile in my own voice now.\n\nI almost didn't get a chance to finish the sentence before Tamara interrupted. \"Yes! Yes, yes! Deal!\" she said with an enthusiasm I hadn't felt from her in a long time.\n\nI avoided saying something like, 'It's a date' and instead just replied, \"So happy to hear that. See you at ten, unless that's too early.\"\n\n\"I'll be there at nine, bringing coffee,\" Tamara responded giggling. And all at once, my world was brighter again. \n\nTamara\n\nI stumbled out of Elena's house sobbing, my eyes filled with tears and my heart feeling like it would shatter into a million pieces. I assumed that she hadn't followed me out, and even if she had, the last thing I wanted to do right then was talk. It took me five tries to get my key in the ignition, and when I did I sped off, just wanting to be alone.\n\nI burst through my front door still crying, slamming it behind me and hurling my purse across the room in frustration. Why had I even said anything? Why didn't I just let it go when she asked, after the third or fourth time? I was furious at myself, knowing I should never have allowed the physical contact to happen, nor let it keep going either. I dropped to my knees and screamed in frustration, making the window glass rattle from the force of the sound.\n\nI felt alone for the first time in a long time. Not alone like just being by myself, but alone, alone, isolated, disconnected, friendless and utterly cut off from anything and everyone. Everything I had recently accomplished in my life, at work and even personally, now seemed to go sour, making me feel acutely numb.\n\nMy feelings over the next few hours ranged from desperate grief to fierce anger, and never stayed the same for more than a few minutes. My appetite was shit, I had no desire to eat and suspected I wouldn't be able to keep it down anyway. Around two o'clock I decided I should try something in my system, but promptly vomited the sandwich up within fifteen minutes. Two hours later, I braved some saltines and managed to keep them down.\n\nWhen night finally came around, all I wanted to do was sleep, so I took a pill that I knew would keep me out for the count the whole night. I was willing to deal with the hangover effect the next day if I could get some peace for several hours. My dreams were bizarre and fragmented, when I awoke the next morning the memories of them had faded but the dark and frightening feeling accompanying them had not.\n\nI called in sick to work, something I almost never had done, which rattled my coworkers and direct reports enough to ask if I was all right. I gave a truthful, noncommittal answer, even by text, which seemed to satisfy them, and soon no one was bothering me. I was still in my halloween costume, which I pulled off of me, shredded with scissors, and threw into the trash. I had adored the outfit but it just made me feel awful now.\n\nMy phone had bounced out of my purse when I threw it, I found it while walking to the kitchen, and picked it up. I pulled up Elena's number and it displayed a picture of her with a broad smile that right now just annoyed me. I turned off the phone and groaned, collapsing on the couch that I had once exiled my now-ex husband to. I had hoped the night's rest would have made me feel less terrible, but it truthfully hadn't helped much. \n\nI started to reach for my phone again, then pulled back. I was probably the last person Elena wanted to hear from now, I had pretty much stomped all over her heart. I went to set it down, hesitated, sat it down, picked it up again, and finally started typing. Worst case scenario, she would ignore my next, not answer, and delete it. I struggled for sincere words that would do justice to the offense, and ended up relying on a trite apology.\n\nMy message ended up saying something generic, namely, 'Hope you are ok, I feel just terrible about how things happened.' maybe it was lame, but it was something.\n\nI found myself incredibly anxious, to the point that I got up and started pacing back and forth. On nearly every occasion we messaged each other, Elena would respond almost immediately. It was a far cry from the girl-waiting-for-a-guy-to-call situation I had been in when I was younger. Usually I can see dots telling me that she is answering, but this time there were none. Just silence, no response, nothing at all.\n\nMy heart sank. Apparently things between us were worse than I thought, probably irreparable now. My eyes started tearing up, I managed to fight them back, and just let my phone hit the floor. Fuck. Well that was it, the final slamming of the door in my face, making the aching inside even worse, and I was powerless to push it away. Just as I was about to completely lose my ever loving mind, my phone sounded, making me feel both anxious and relieved at the same time.\n\nThe message was heartfelt but short. It read, 'TBH, hurting right now, but it's not your fault at all.'\n\nTo quote Elena herself, I thought, Bullshit. It was too my fault, my fault for letting things get to the point that they did, my fault for saying anything at all, and my fault for falling apart and turning her world into a huge mess. I had already responded badly to her before, the last thing i wanted to do was repeat the same stupid mistake. What was I supposed to say? Rightly claim it was my fault? Apologize again? Say nothing?\n\nI started typing an apology, saying I had messed up, to blame me for all of it, and then stopped and deleted the whole text. I began another one suggesting we sit down and talk, but then thought that might just annoy her even more. Erasing that one, I ended up just typing, 'Yeah, very hurt here too, hate how I handled things, so, so sorry.'\n\nThis time I didn't have to wait very long for an answer, the message popped up shortly after. 'It was selfish to dump all of that onto you, wasn't anything you needed to know about.' the words said, with a broken heart icon after it.\n\nI sighed, the part when I had told Elena I saw how she looked at me was true, but I had ignored it just thinking it was a by-product of our genuine affection for one another. That was something I couldn't take back, but I wanted to dull the effect of saying it, so I answered, 'I suspected, maybe kinda sorta...'\n\nThis time there was a pause, which made my stomach tighten, fearing some immediate reprisal or banishment from her life. Fortunately the message was neutral enough, and it read, 'It's all good, nothing to worry about ok? Talk soon.'",
        "While polite, that message told me she wanted to be left alone, not like never-talk-to-me-again, but more like asking me to wait for her to reach out instead of intruding on her in her time of pain. I both understood and resented it, and I resolved to respect her wishes, even at the expense of my own feelings. That's what friends do, right? Put the other person before themselves.\n\nLots of silence and anguish filled my life in the weeks that followed. Periodically I would get texts from Elena, but never once did she ask to see me or even talk with me over the phone. That did change one day when she called me one evening out of the blue, but it was not really a conversation, just the exchange of sterile niceties, and a generous amount of silence peppered with \"ums\" and \"mm hmms.\" I hated how it sounded and how it felt and it just drove me deeper into a depression I worried would consume all of me. Eventually there was just more silence, and I thought I would never hear from her ever again.\n\nThat changed at about three in the afternoon on Thanksgiving day as I was doing the dishes after our less than stellar dinner. My father managed to bestow a few compliments on how i had taken hold of my own life, but not without a tray of criticisms that would have overflowed the platter the turkey had been on. My mother was running a plate of food over to one of our elderly neighbors, and my father was on the couch as we did the 'women's work.'\n\nWhen my phone rang, I couldn't imagine who would be calling me on a holiday, unless it was some horrific work emergency of some kind. I grabbed it and walked out the back door between several molting elm trees, not even bothering to see who was calling. I almost answered it, and then panicked wondering if she was going to deliver a final farewell and never speak to me again. While I wrestled with what to do, the ringing stopped. Shit, I had waited too long, and now I worried that I blew it.\n\nMy fingers jumped into action and I clicked on the missed call immediately, freezing up for a second when she answered the phone. I defaulted to our usual greeting, saying, \"Hey girl,\" in a rather flat tone. The second or two of silence seemed to just confirm my suspicions that she was about to cut off all contact, and I felt my stomach churning, which was bad considering how much I had eaten.\n\nThen she said three words that I never expected, not the phrase of affection between couples, but in that moment something far more meaningful. \"I miss you,\" she said, her voice full of emotion as she added, \"I mean I really miss you, like in the worst way possible. I miss talking and laughing and just having fun together.\"\n\nI was dumbfounded for a moment, my eyes filled with tears and I tried with all my might not to just start crying out loud hearing that. I took in a breath, and in a hideous sniffly voice said, \"Oh my fucking gawd, Elena, you have no earthly cluw how much i missed you, how big a hole I had in my life... after, you know...\"\n\nHearing that must have thrilled her, because her voice brightened instantly. \"Well let's just forget all that crap, leave it behind and, well, just start over. Have fun together like we did before,\" she said almost too cheerily.\n\nI giggled, one of the first times sincerely since everything had fallen apart. \"I'd like that,\" I said, adding, \"In fact I need that, it really shows me how much you mean to me, when you were... well... not there, not being around..\"\n\nElena giggled in response. \"Well why don't we change that right now?\" she said.\n\nI rolled my eyes knowing the judgmental comments I would have to endure if I told my father that I was leaving right after Thanksgiving dinner. No, that would create all sorts of problems for me, despite feeling so eager to reconcile with Elena.\n\n\"Well I would love to, but I'm at my folks and pretty sure I would catch hell if I just left,\" I said, trying not to sound like I was disinterested.\n\n\"No no, silly one. Tomorrow. My house. I hate Black Friday but I do start decorating for Christmas,\" Elena said, laughing heartily.\n\n\"Oh really? \" I responded, my ears perking up.\n\n\"Yes really. Now be over here at ten and we can get started,\" she answered.\n\n\"Nope, I'll be there at nine with two fistfuls of coffee in my hands, hun,\" I said, feeling a shiver pass through me.\n\n\"See you then, girl!\" she shot back.\n\nWell it looked like things were about to get better!\n\nElena\n\nI got up at seven, earlier than I usually do on a holiday, full of anticipation about Tamara's coming over, since it was our first face to face encounter since halloween. Sensitive to the trappings of the party, I dressed in jeans and a zip-up top that I made sure looked discreet. I wanted her comfortable, not fearing a repeat of what drove us apart in the first place.\n\nProbably due to our estrangement, she didn't let herself in as she had done so many times, but rang the bell. I pulled the door open, seeing her broad smile, smiling back and then feeling her wrap her arms around me and pulled me into a big bear hug that caught me off guard. This was where things had gotten strange last time, but for a moment I drank in the sensations of her body on mine, her kiss on my cheek, and the smell of her perfume.\n\nOnce Tamara pulled back, I was intrigued by the expression on her face, which was virtually glowing, not with desire but with sheer adoration, if not love. Love that I knew was friendship but love just the same. \"Thanks for this, I have missed you fiercely!\" she said, shedding her coat and stepping inside.\n\nHer outfit was equally practical and conservative, faded blue jeans and a black top that showed skin but not her cleavage, tied up on a clasp on her shoulder. There was nothing overtly sexy about the way she was dressed, but I felt the pull towards her again, pushing it from my head.\n\nWithin minutes we were laughing and joking like nothing had ever happened, hanging bows and decorations almost as if it was our own house and not just mine, downing the coffee that she had brought, forcing me to make more. It took several hours to finish up the interior, and then we moved on to the outside, which took about an hour more.\n\nTamara was teasing me about hanging some of the lights crooked when we came back in, and I wanted to slap her on the ass as I had done before, but chose not to. As she headed to the kitchen to refill her coffee, she looked up above the arch that led from the main room. \"Mistletoe, huh?\" she said with a giggle.\n\nI winced, hoping it didn't seem like I was trying to get her in a compromising situation, \"No, no no, girl, I had that up days ago,\" I said in a tone of warning.\n\nTamara burst into laughter. \"Oh suuuure, are you telling me you don't use it to get a lip lock on some poor unsuspecting straight girl?\" she said with a wink.\n\nI tried to think of something clever to deflect the comment even though I found it entertaining. \"Nope, not me, that's Lena's trick, and I don't try to trick anybody.\" I said, meaning it.\n\n\"Oh I know that, I was just giving you shit that's all,\" she said, almost howling with laughter.\n\n\"Fine, fine, smartass. Never resorted to cheap entrapment. Everything above board, consensual, and the whole lot. Besides, it's just a kiss, that's all,\" I said.\n\nTamara looked up at it. \"Yeah that seems pretty harmless,\" she muttered, then looked down at me. \"Even for a straight girl.\"\n\nI felt alarm bells in my head, this was the spot where things went off the rails last time, not exactly but close enough.\n\n\"Ok, just one kiss then. No more and certainly nothing else,\" Tamara said, standing under the sprig.\n\nMy mouth dropped open. \"No, no, this is how things got fucked up last time, hun.\"\n\n\"I was buzzed and got caught up in the moment. Right now I am stone cold sober and the only buzz I have is from coffee.\"\n\nFuck, was she serious? \"No, I don't...\" I began.\n\n\"Want to kiss me?\" Tamara said.\n\nBravo, she had managed to back me into a corner. If I said yes I ran the risk of just chasing her off all over again, and if I said no I would be a liar and she would call me on it, guaranteed. \"I... didn't say that... I... I... just...\"\n\nTamara stuck her tongue out. \"Something to cross off my bucket list. And hmmmm maybe an early Christmas present. Just one kiss, that's all and a nice sweet one at that, nothing more.\" \n\nI was in a position where I felt I couldn't say no, but fearful of losing my best friend once and for all. I reluctantly moved closer, shaking my head. \"Just one.\"\n\n\"Just one,\" Tamara echoed.\n\nShe looked as gorgeous and sexy as ever, hair and makeup perfect, realizing in that moment that she had made herself up for me. I brought my face close to hers, looking into her eyes, watching her lip quiver. \"Just... one... kiss...\" I said, slipping my hand behind her neck and pulling her lips to mine.\n\nI felt an enormous rush as I gave my straight best friend the first lesbian kiss of her life, which she immediately gave in to, no resistance, no hesitation, she was all in. I gently massaged my lips with hers, keeping my mouth closed, careful not to trespass, sticking to the terms of the agreement.\n\nHer lips moved against mine, and they tasted more amazing than I had imagined. Tamara was kissing me back, not a friendly kiss or peck but without a doubt a lover's kiss. My desire for her surged, but I still managed to control myself and broke the soft kiss after a few moments.\n\nTamara gasped. \"Oh... gawd...\" as I pulled back, but made no motion to pull away herself, keeping our lips hovering almost against each other. Her eyes were locked with mine, and filled with desire, desire that I never expected to see.\n\nIt felt like we were being pulled into one another, but we both kept our distance, albeit a tiny distance. \"You... ok? Just... one...\" I gasped, but aching to show her just how mind blowing kissing another woman could be.\n\n\"Just... one... more... please,\" she said, as if pleading me to throw caution to the wind.\n\nI covered her lips with mine, this kiss more insistent and passionate but still as sweet, and I heard her moan as she returned the kiss with equal desire. We had crossed a line now, we were making out, and neither of us had any desire to stop. \"Lips... making... love,\" she gasped between wet kisses.\n\nUnexpectedly, I felt Tamara part her lips and offer me her tongue, meeting it with mine in a gentle erotic dance that revealed the depth of her desire. Straight or not, she was giving herself to me, and unless she stopped and ran off I was going to bring her to my bed and make love to her with a passion I was certain she never knew existed. Her body pressed into mine, much like it had during our dance, in fact it felt like a continuation, or what should have happened, what we both needed to happen.\n\nI desperately wanted to touch her, needed to touch her, but remembered her reaction last time, and this was something new to her. This was a sapphic sexual dance now, and I was leading and guiding Tamara, and I knew I needed to be slow and gentle. I knew she loved kissing, and gawd she could kiss, her lips tasted warm and sweet and I was all too happy to indulge in that as long as she wanted.\n\nTamara began squirming as our kissing continued, this was much further than things had gone before, and it felt like she had surrendered to the desire wholeheartedly, her doubts and fears completely discarded. I turned her head slightly to one side and began peppering kisses along her jaw line, making her body shiver as a deep moan escaped her perfect lips.\n\n\"Oh my gawwwwd, Elena,\" she gasped, her hands on my hips, pulling me harder against her.\n\n\"Feel good? You ok?\" I said, kissing my way down to her neck. Hearing her moan my name that way thrilled me a thousand times more than I could have ever anticipated.\n\n\"Yes, yes, yes!\" Tamara moaned loudly.\n\n\"Mmmmmm good,\" I said as my lips touched her neck, knowing first hand how mind-blowing kissing that spot on a woman's body could be. I kissed softly at first, then more insistently, but sensually and not aggressively. This lovely creature had been used by so many men in her life, and I wanted her to feel adored, even worshiped. I was going to worship every inch of her skin with my lips and tongue, giving her the kind of pleasure that she deserved.\n\n\"Ohhhhhh that feels... fucking amazing. Gawd, please don't stop,\" Tamara groaned, clutching me almost in desperation, grinding her body into mine.\n\n\"Never,\" I gasped as I plastered another deep kiss against her neck. I could tell Tamara was ready for me to touch her, but I still wanted to give her a chance to slow things down in case she started having second thoughts. Given the reactions of her body and the sounds she was making, it was unlikely, but I wanted the choice to be hers, not mine. Patience was key, this kind of lovemaking would change her forever, and I knew how to respect that. I had been with several straight women over the years, and every experience was different, but in every case where things progressed, they crossed a threshold into a new world. My world.\n\nAs I bit Tamara's neck, her back arched and she moaned in the sexiest way I had ever heard a woman do, signaling that there was no turning back. She was mine now, but I still wanted to stretch the foreplay out as long as possible. \"Feeling good, love?\" I whispered as I nipped her skin a second time.\n\nTamara was so turned on in that moment that she apparently couldn't form words, and just nodded. I smiled as I continued kissing her neck again, eliciting more moans.\n\n\"This is how women make love, my sweet Tamara, long and slow and sensual, making sure that it's all about your pleasure,\" I purred.\n\nShe squealed as I nibbled at her neck, just below her ear. I could tell she found the whispering to be a huge turn on, so I continued doing it. \"I am in love with you, baby. Have been for a long while now. Wanted this to happen more than anything, wanted you.\"\n\n\"Oh fuck, Elena, I am yours. Been yours longer than I even realized. Losing... you... helped me... discover... that.\n\nTamara trembled, almost violently.\n\n\"Yes, baby, you are mine now. You... belong... to... me,\" I gasped as I bit gently into her neck, slipping my hand over her breast, \"Every... inch... of... you... body... and... soul.\"\n\n\"Yes... all yours,\" she gasped. That statement removed any doubt as to her feelings, nothing was going to stop this now. I began slowly caressing her breast, feeling her body move in response, matching the rhythm perfectly.\n\nI cupped her face with my free hand, pressing several soft kisses on her lips before looking her right in the eye. \"We can stay... here... or...\" I said, letting her complete the sentence.\n\n\"...go to your bed. Where you want me. Where you have always wanted me,\" Tamara said firmly.\n\nPart of me wanted to just reach for her hand to lead her, but I wanted to communicate intimacy more than just a sheer desire to engage with her sexually, so I slid my hand around her waist and pulled her along gently. \"Please,\" I said softly, wanting to reinforce that this was her choice and not simply my idea. Tamara nodded, her face flush with desire, and we slowly began moving towards the stairway. She leaned her head on my shoulder as we shuffled up the steps one at a time. Once inside, I slowly sat Tamara on the bed, still standing and looking down at her. There were so many ways I could go about this, ranging from mildly aggressive to excruciatingly slow and teasing. As with so many other things in my life, I just followed my instincts.\n\nSitting next to her, I cupped her face with my hand and leaned in to kiss her again, feeling her part her lips and slip her tongue slowly in my mouth. Feeling playful, I wrapped my lips around her tongue and began sucking on it, sliding my hand beneath her top, caressing her waist with my thumb. I felt her shudder and out of the corner of my eye watched her legs part ever so slightly. As my lips continued my work on her tongue, my hand caressed upwards, lifting her top ever so slowly so as not to startle her. I released the kiss and slowly pulled her top up and over her head, making certain that it fell to the floor.\n\nI smiled as I saw the black lace bra that hugged her breasts, drawing my eyes to the supple curves, which I knew were aching for my touch. Planting a wet kiss on her lips, I put my fingers over her left strap and inched it towards her shoulder, biting and kissing the skin, making Tamara writhe.\n\n\"Oh... Elena... fuck me,\" she blurted out.\n\nPushing the bra strap further, I giggled softly. \"Oh really now, you sure?\" I said teasingly, pushing it off her shoulder now, and attending to the other.\n\n\"Yes pleaseeeeee,\" Tamara hissed.\n\nOh damn this was getting good, I wanted to tease her more though. \"Asking a lesbian to fuck you? Straight girl wants to be tasted?\" I purred.\n\n\"Fuck... yes... please...\" Tamara whimpered.\n\nI unhooked her bra and also tossed it to the floor, leaning back to look at her breasts, jutting up at me, nipples hard, marveling at how exceptional they were. \"My gawd your breasts are gorgeous. I must confess I wanted to do this even that night we met,\" I said, my hands cupping them gently, and then guiding her body to lay face up on the bed.\n\nShe moaned as I kissed between them, licking the skin and cupping them again. I gently unzipped her jeans, and she wriggled out of them aggressively, leaving her body in nothing but an amazing but tasteful black lace thong that hinted at what lay beneath, from every indication a bare pussy. I dipped my finger under the elastic of the waist and watched as Tamara parted her legs for me, nodding, gasping \"Gawd... yes...\" Without stopping, I tugged her panties off with my free hand, not wanting anything to slow things down.\n\nAs I slid my hand slowly down towards her sexual center, I continued my oral loving of her breasts, timing the moment where both my fingers touched her wetness and my lips encircled her nipple. Tamara's body lurched passionately, har hand cradling my head as if urging me on. I needed no invitation but was pleased all the more, knowing in that moment that my stimulation of her body was in perfect synchronization. Her reactions told me that she had never felt anything even remotely like this before, and that she was hopelessly addicted to it now.\n\nNothing could stop this now, we were both given completely over to the passion, surrendered to the hunger, and she was primed at any second to have the most explosive mind-bending orgasm of her entire life. My two fingers found her petite clit, and I increased my sucking motions as I massaged her, eventually sliding my fingers inside and letting my thumb take over the stimulation of her center.\n\nAs I felt her climax build, my lips left her breasts and returned to her neck. \"That's it, baby, give in, cum for me, cum for your lover,\" I gasped, still fingering her gently but firmly. Tamara's back arched as the orgasm took her, pulling me against her as if she was worried I might disappear, gasping my name again and again, trembling and eventually sinking back into the bed.\n\nOne lesson I wanted Tamara to never forget was how simple multiple orgasms were with another woman, so as she was recovering, I moved between her legs and cradled her ass, blowing on her pussy and then breathing in her intoxicating scent. \"My Tamara,\" I said aloud as I buried my face between her legs.\n\n\"Oh... my.. .fucking... g...\" she started to say as she felt my expert tongue invade her, though she failed to finish the sentence. This was the moment I had longed for, tasting her pussy, drinking in her sexy taste, and her reveling in me doing it. I gave her no mercy as I gently consumed her, feeling a second orgasm quickly build and crash over her, and then a third. Tamara's last orgam felt like it had shattered her, with her screams, unintelligible moans, and her fingers yanking at my hair. I had experienced my share of great lovers, but this time was more intimate, more intense, more touching, and infinitely more pleasurable than any I could remember. I hoped it felt the same way to her as well.",
        "I slipped up next to her quivering body, pulling her into me and letting her panting face settle into my neck in a distinct cuddling posture. Clearly the experience had been even more intense and powerful than I had anticipated, because Tamara remained in that position for a full three or four minutes without saying a word.\n\n\"Elena... I... wow...\" she gasped.\n\n\"I hope that was ok for you,\" I said, poking fun.\n\nTamara giggled as she playfully pushed me away and sat up. \"Um, ok doesn't even come close to describing it. That was... the most amazing thing I have ever felt... ever... with any... one.\" she said, rubbing her forehand for a moment.\n\nI smiled and gave her a peck on the lips. \"Well, that was what I was going for. I mean what do you expect after almost a year of foreplay hmmmm?\"\n\nThe look on her face was one of absolute adoration, as if I was some sort of angel that had appeared to her in a vision. \"Thank you doesn't do it justice,\" she said with a smile.\n\nI patted her on the cheek. \"Oh it was my pleasure,\" I giggled.\n\nTamara gave me a crooked grin, and looked at my disheveled clothing. \"Well, not really, I am here naked and glowing and you are still fully dressed.\" she chided.\n\nI put my fingers on her lips. \"Shhhh, no need for that, this was about you, not me.\" I said softly.\n\nTamara gave me a soft kiss on the lips. \"I'm in love with you too, you know. I really struggled with that, because I couldn't get my head around it, me being straight and all. But in the end what matters is you!\" she sighed.\n\n\"And?\" I asked, unsure of where she was going with the conversation.\n\nTamara leaned close and kissed my neck, slipping her hand over my breast. \"And I want you too,\" she purred.\n\nI had hoped that she had entertained the notion of returning pleasure at some point, but worried that doing it too soon could backfire. \"All in good time, there's no rush,\" I gasped, realizing that she was doing to my neck what I had done to hers.\n\n\"Please,\" Tamara whispered, \"truly make me yours.\"\n\nShit, she had played a card I never expected her to play. \"Ok baby, then it's time to introduce you to my body, let me guide you,\" I sighed, finding myself with butterflies at the thought of her between my legs doing things I thought she never, ever would. I slowly removed my top, leaving my satin bra in place, watching her gaze on my cleavage.\n\nI took her hand and slipped it over my bra, watching her eyes widen, and she discovered what touching another woman truly felt like. \"How does that feel, baby?\" I asked, almost in a whisper.\n\nTamara looked mesmerized, her lips parted slightly, staring at the movement of my breast as I moved her hand in a circular motion, letting her fully caress me. I felt my nipple harden under her touch, making her gasp, fueling a look of desire in her eyes. Without saying a word, I pushed her face into the rich valley between them, letting my breasts press against her cheeks in a subtle erotic kiss. I moaned as I felt her kiss there and run her tongue up and down. For someone who had never done that before she was doing an incredible job.\n\nI unhooked my bra and dropped it on the bed, slipping my finger under her chin, guiding her face upwards until her lips were level with my nipple, wondering if she would act on my hint or pretend she was oblivious. I watched my straight friend, who was progressively less so with every passing minute, lick her full lips and lean in to kiss the nipple aching for her mouth. Tamara kissed it twice, and then, looking up at me, wrapped her lips around it, making me moan. \"Ohhhhh that's it baby, take your very first taste of my breasts,\" I breathed out, thinking after the words had left my lips that it was either corny or ridiculous.\n\nTamara apparently interpreted it in the sexy way I intended as she began gently sucking, lost in the moment, squirming and shivering. She was sucking gently, both hands around the breast, as if savoring how it felt and tasted. I have never gotten a lot out of breast play before but something about her eagerness and tenderness were incredibly erotic to me. It felt as if she was connecting with me, and drawing some part of me into her very self through her actions. I found myself getting increasingly wetter as she continued. I had so much to teach her but she already was well on her way to being an amazing lover. She switched to the other breast and I was surprised when I experienced a small orgasm, my first with her, but certainly not the last. Tamara watched me as I rode out the mild climax, in awe that she had managed to do anything that created pleasure for me.\n\nAfter coming back down from the minor high, I shed my pants and then my panties as she watched, her eyes widening as she gazed on my pussy for the very first time. \"Wow so... smooth... and wet...\" she gasped.\n\nI took her hand, kissed it, and placed it on my aching wetness, trying not to react too strongly to her touching me like that. Gawd I had ached for that moment so many times it was maddening. Smiling, I pushed two of her fingers into me and then pulled it back out, waiting to see how she felt about it all.\n\nTamara looked at the glistening juices on her hand, the wetness and arousal, as if fascinated by it. She closed her eyes and breathed in the scent, making her shiver, as if letting it possess her somehow. Licking her lips, eyes still closed, Tamara slid them into her mouth, moaning as she took in my taste. My taste!\n\nAs she opened her eyes I knew what she wanted, and I ached for it too, fantasizing so many times of having her face between my legs, going down on me. I lowered myself on the bed, facing up, legs parted, inviting my formerly straight love to complete her journey to my world. Eyes locked on the prize, she inched her way forward, breathing in my scent, aware that she was about to truly become mine.\n\nI moaned and leaned my head back as I felt her lips on me, and her tongue dip in and taste. \"Oh gawd baby you are mine forever. Yesssss, that's it, taste me, lick, there just like that. Gawd you are doing an amazing job,\" I said, knowing what I was saying was totally true. My hands were in Tamara's hair, caressing it, cooing as I spoke to her, coaching her through eating her first pussy, truly making her mine. She got frustrated a few times, but was determined and before too long I was having a pretty decent orgasm from her efforts.\n\nI pulled her up and wrapped my legs around her, kissing her and tasting myself on her hips, her face coated from her time eating me out. \"So, how was it?\" I asked, winking at her and giggling a little bit.\n\nTamara reached up and touched my face gently, stroking up and down my cheek just the way a lover would do. \"There are just... no... words,\" she said, planting a kiss on my lips and then my neck. She settled into me even more, and I pulled her bare skin against mine, savoring the sensations of our breasts pressed together.\n\nI sighed contentedly, knowing she had crossed over so many sexual lines that I knew had been artificially drawn for her. We were in love, and lovers, and the first time together was incredibly sexy and memorable. \"You know,\" I began, \"when I said you belong to me now... it wasn't just playful talk during lovemaking, I meant every word of it. I want you at my side, in my bed, everything.\"\n\nShe snuggled in even more and nuzzled my neck, almost like she wanted to crawl up inside me somehow. \"Yes, I do know that, and you need to know I have never ever felt anything like this before, the connection, the love, the passion, it's... like for the first time it's real for me,\" she whispered.\n\nAs she said that, I heard Tamara'a voice fade and knew she had fallen asleep, and her breathing slowed to a quiet rhythm. I had never once felt as content as I did in that moment, so vulnerable and surrendered to someone else, and I soon fell asleep myself.\n\nTamara\n\nMy dreams that night were sensual but not necessarily erotic, hearkening back to the dance on halloween, pressed against Elena, feeling sensations that were scary and exciting all at the same time. Her eyes were staring into mine, and I could feel her whispering into my mind somehow coaxing me just to give in, to the desires, to the feelings, to her.\n\nI woke up understandably horny, but resisted the urge to finger myself, concerned that I might really get lost to the feelings and later do something I might regret. Regret? What I regretted most was hurting the one person in my life that actually cared about me as a person, not as someone to get something from. Knowing that we had reconnected lifted a huge burden from my shoulders, washed away the guilt and filled that aching void I had felt since we had last seen each other.\n\nLooking at my potential wardrobe I was very conflicted. The last thing I wanted to do was dress a little sexy and bring back to mind the fiasco of our last time face to face, nor did I want to appear to be teasing her or something. I also didn't want to appear careless about how I looked either. Damn it, why did it have to be so unclear? I grabbed a pair of jeans that hugged my curves nicely, and a nice black top that had a neck that was low enough to extend a bit below my collarbone but not enough to tease any of my breasts. I turned to one side to look at my reflection, and then the other. Okay, that looked decent enough while being low-key, so I grabbed my keys and started on the short drive to Elena's house.\n\nAs I got out of my car and made my way up the concrete steps to the front door, I felt a pang of anxiety, well more than a pang but not like a full-blown panic attack. What if she was really upset and just not telling me? What if all I got today was a stern talking to or a yelling session that made me cry? I debated whether to turn and just leave, but that seemed just cruel on my part. I had grown to trust her, so I reminded myself of that and rang the bell.\n\nElena looked cute and relaxed when she opened the door, smiling at me in a way that told me that everything was all right between us now. I felt butterflies and my insides melt, I realized the second I saw her face just how much I had missed her. Without thinking, I jumped forward and wrapped my arms around her in a huge hug that seemed to catch her off guard.\n\n\"I am so sorry, Elena, Fuck, you have no clue how much I missed you!\" I said, choking up for a moment. I kissed her softly on the cheek, ensuring that I didn't linger too long.\n\n\"Shhh, it's ok Tamara, nothing to be sorry for, everything is ok,\" she said in a half-whispered tone.\n\nI released my hold, feeling like there was nothing negative between us now, relieved and excited just to hang around her again. I glanced around at the piles of boxes and containers littered about the room and laughed. \"Well I see you go as all-out for Christmas as you do Halloween, Wonder Woman!\"\n\nWe moved around inside the house hanging decorations of every kind, making smartass comments and jokes as we went along. Elena and I burned through two pots of coffee and the caffeine made us act absolutely silly. I thought we were almost finished at one point and made the wisecrack, \"Well that's a good day's work out of the way!\" I quipped.\n\n\"No, trust me, you will be very busy for a while!\" Elena said, gesturing to an enormous box of old-fashioned lights, each strand wrapped up with zip ties.\n\n\"Do I need a ladder?\" I asked, not mentioning how skittish being off the ground could make me feel.\n\nElena laughed. \"No, babe, just work on the hedges for now, that'll take you at least an hour,\" she said, grinning.\n\nI carried the box outside and sat it in the grass, buttoning my coat up to keep the chill off of my skin. Snapping off the tie, I plugged in the first strand to the outlet next to the hedge and began weaving them in and out of the leaves of the shrubs right next to the front of the house. Fortunately, I finished the task well ahead of Elena's estimate, though she did tease me a little about the pattern I had used. I was having such a great time, I gladly dished back anything she playfully threw at me.\n\n\"I need a refill,\" I said to her, waving the coffee mug around casually.\n\n\"In the kitchen,\" Elena said, pointing the way, as if somehow I had forgotten where it was.\n\nI shuffled over to the archway leading to the kitchen and coffee pot, not needing more but wanting more. Just as I was about to cross the threshold, I caught sight of something in my peripheral vision, forcing me to look up to see what it was. Mistletoe? Well, it technically was the Christmas season now, so it's not like it was outlandishly out of place or something. I did hear warning bells go off in my head, since that was the crux of what had happened between us when we saw each other last. I decided to play it lighthearted, because I could always pass it all off as just joking around.\n\n\"Hmm, is that what I think it is? Mistletoe?\" I said, chuckling.\n\nElena's face went white, which made me regret even asking anything, clearly she was caught off guard and apparently worrying about my reaction to it. \"Oh no, no, no, not what you think, girl, I've had that up for a while now,\" she said, a slight trembling sound in her voice.\n\nI could tell from Elena's reaction that it was coincidental, or something so inconsequential that she had forgotten it was even there, which made me feel it was all right to have some fun with it. \"Hmm, you sure? Could be a perfect excuse to give some unsuspecting straight girl a nice lesbian kiss?\" I said, not able to keep a straight face and just howling with laughter.\n\nI watched a smile break over her face, as she leaned her head slightly to the side. \"No, no, that's Lena's style of dirty trick, I hate that kind of thing,\" she said with a musical tone in her voice.\n\nI giggled and almost snorted listening to her respond, aware that I had broached a topic we really had never discussed between ourselves. Since it was probably smart to just leave well enough alone, I tried to steer the conversation away from the subject. I waved my hand dismissively at Elena. \"Oh girl, I know that, just had to give you crap about it, that's all,\" I answered.\n\n\"Smartass,\" she muttered.\n\n\"And proud of it,\" I said with a smile and wink.\n\nElena let out a sigh, and the look on her face seemed to indicate she wasn't quite done talking about it. \"I am sure you have had your share of idiotic stunts to trick you into stuff. That's not me, everything had to be clear and above board, consent included.\"\n\nI was having too much fun seeing her get rattled, and against my better judgment, piled it on some more. Looking up at the mistletoe, I made a clicking sound with my mouth. \"Yeah that seems pretty nonthreatening, even for a little old straight girl,\" I said, looking at her, smiling, showing her I was still joking.\n\n\"Yeah, right.\"\n\nIn that moment I almost felt like the joke was on me, because the image of Elena kissing me felt intriguing, making me wonder how that would feel and what her lips would taste like. Somehow the relatively innocent teasing had opened up a Pandora's box of curiosity in me that had never happened before. Speaking before I thought it through, I said, \"Ok then, you can have one, and I mean only one kiss. Nothing else.\"\n\nI wanted to giggle as I watched Elena's face turn bright red, like I had unearthed some dirty secret she didn't want to admit to. She shook her head almost violently. \"No way, this is how we got things so screwed up last time. I don't want to...\" she began.\n\n\"Kiss me?\" I asked, having no idea why I was suddenly so caught up in the notion.\n\nElena's mouth fell open in shock, as if I had just bested her in some board game and she was in disbelief. \"Stop, I never said that,\" she said, stammering now.\n\nI stepped under the archway and stuck my tongue out at her, now clearly daring her, but also aware that I could end up alienating her completely. \"Consider it an early Christmas present, El. Maybe something for me to cross off my bucket list. Just a short and sweet simple kiss, that's all,\" I added. I had never called her El, or anything besides her actual name, and kissing another woman was never even on any bucket list for me. What had gotten into me?\n\nElena seemed intrigued and confused in the same space of time, but to my surprise she started moving close to me. \"Just one, right?\" she asked cautiously.\n\nI nodded. Shit, was I really doing this? It felt like something or someone else was in control of me at that moment, and that someone answered, \"Just one. Nothing else.\"\n\nElena stepped to me slowly, one step at a time, presumably to give me space to call the whole thing off, but for some reason the spell that I found myself under ruled that out entirely. I felt powerful butterflies in my tummy as she got close to me, anticipating what would come next. \"Okay, love, just... one... kiss...\" she whispered, her lips touching mine.\n\nA shiver shot up my spine that radiated out to the furthest point of my extremities, inflaming my senses and tearing Pandora's box wide open. Elena fitted her lips perfectly to mine, gently caressing mine like a deeply sensual massage, as if for that one moment we were merged into a single body and connected down to our very souls. My entire body ached for nothing else but to stay feeling that way forever.\n\nAll of the feelings and desires I had fought so hard to suppress erupted into my conscious mind, preventing me from ever denying them again. I knew I loved Elena, but once I felt that kiss I knew I was in love with her, and i wanted her, and it no longer mattered if she was gay and I was straight. I wanted her and I wanted to be hers!\n\nSuddenly the spell was broken, and I realized that she had finished the one kiss we had agreed to, though her hips stayed just inches from mine, reminding me how they felt. Every inch of me was on fire, I knew my nipples were hard and moisture had oozed out between my legs, all from one simple kiss. Never once in my life had anything felt so incredible, so sexy, and oh so right.\n\n\"You ok? Just one, like... we said,\" she whispered, arousal saturating her voice.\n\nJust one? I don't think so, how about another and another and anything that comes after. Elena's warm breath caressed my lips, clearly ready to offer me more. \"Just... one...\" I said, drawing a breath, and then adding, \"...more.\"\n\nElena's lips sought mine out again, this time communicating a deep hunger, but still gentle enough to feel loving. These kisses were sweet, sensual, erotic, and hungry, and I wanted more; more of them, and more of her! My head was awash with desire, knowing full well that I was fully making out with another woman and absolutely loving it. She managed to gasp the words, \"Our... lips... making... love,\" as she kissed me deeply and repeatedly.\n\nDamn right they are, and I want more. Wanting to signal to her that I was ready for more, I parted my lips slightly, wanting to taste her mouth and tongue along with it. Instantly, I felt the tip of her tongue touch mine, marveling at its gentle power, and at the skill she wielded it with. Having endured years of rough tongue kissing from male lovers, it felt so much richer and sexier. Instead of feeling like my mouth was being violated, this was the sensation of teasing, of playful ardor, of gentle strength used with my sensations in mind.\n\nAfter what seemed like an eternity of sheer delight in making out with Elena, I felt her lift her lips from mine and kiss my chin. \"Just enjoy it angel,\" she said in a hushed whisper, kissing towards my neck.\n\nDamn, my neck was my weak spot, the one place that could instantly turn me on, how the hell did she know that without me saying anything? Holding my hips in her hands, I felt Elena's talented lips reach their destination, on my neck, softly, with her tongue tickling the skin ever so slightly. My body didn't just tremble, it quaked, all on its own, giving me shivers of pleasure that cascaded throughout every inch of me, \"Oh... my... GAWD... Elena,\" I moaned, loudly enough that anyone in the house would have heard it.",
        "Elena responded to me in the sexiest voice I had ever heard. \"Oooooo are you ok, love? That feel good?\" she said, lips hovering just above my neck.\n\nI could barely think, let alone speak, but I did groan out one word to her, \"Yes,\" over and over again.\n\n\"Mmmmm good, so good,\" she said, her lips touching my neck in earnest now.\n\nNeck kisses and whispers together were a guaranteed turn on, I could feel my pussy dripping now, so turned on I thought I might shatter at any second. Her breasts were pressed into mine, nipples hard and rubbing when our bodily motion aligned just right, sending more shockwaves through me almost violently. I squirmed and moaned incessantly, which just served to urge her on.\n\n\"Don't stop. Oh my gawd that feels... fucking... amazing,\" I gasped.\n\n\"Ohhhh never,\" Elena answered, gently gnawing at my neck in earnest now. Maybe it would leave a mark but I didn't fucking care. I loved how this felt.\n\nShe moved her body on mine gently, kissing my neck, absolutely worshiping every inch of it, leaving me tingling all over. As she nipped the skin strategically, my back arched, forcing my breasts against hers and making our nipples grind against one another. \"Feeling good, love?\" she asked, licking my neck and kissing it once more. All I could do was moan.\n\nElena growled playfully, kissing my neck as she spoke again. \"This is how women make love, sweet Tamara. Loooong, slooow, sensualllll, all about bringing you the most pleasure,\" she said sexily, moving her lips to that sensitive spot right under my ear, biting gently.\n\n\"Unghhhhhhhhh oh fuck...\"\n\n\"I'm deeply in love with you, Tamara. Been in love for a while, and so wanted... this... us... to happen,\" Elena moaned, grinding into me earnestly.\n\nMy body shook hearing that, and I responded so she would know how I felt too. She needed to know. I wanted her to know. \"I... unghh... love you too... so much... been yours... longer than... I know... Losing you... showed me... how much,\" I gasped.\n\nMy confession emboldened Elena, and I felt her hand slip over my left breast, cupping it softly, making my body shake powerfully. \"Mmmmm yes, Tamara, you belong to me now, every inch of you, mind, soul, body, everything,\" she said, staking her claim to my heart and body and I was all too happy to surrender it all to her. The words 'you are mine now' echoed in my head as her caresses to my breast drove my arousal still higher.\n\n\"Yessssss... yours... all yours,\" I gasped, trying to catch my breath.\n\nAll at once, I felt a hand to my face, making me focus on my lover's soft beautiful face as she kissed me a few times. \"We... can... stay here or...\" she began to say.\n\nI knew what she was about to say, she was inviting me to her bed, to consummate our love, and to show me pleasure I had never felt before. I interrupted her, touching her face and saying, \"...go to your bed. To our bed. To where you have wanted me and where I need to be.\"\n\nElena's expression was one of desire, love, and gratitude. Guiding me next to her, she touched my face and almost silently whispered the word, \"Please?\" which made me melt inside. This woman was inviting me, asking me, not demanding or implying somehow I owed it to her, which is what I was used to at this stage. It was beyond sexy, and I nodded, and we made our way up to her palatial bedroom. I leaned into her, just relishing the closeness I already felt, and looking forward to more.\n\nOnce inside, Elena kissed me on the forehead and sat me down on the edge of her bed, then turning and closing the doors to ensure I knew what happened here was just between us. She slid up and sat next to me, stroking my face for a few moments, and then leaned in to kiss me. As before, her lips caressed mine, this time just a touch more insistently, prompting me to part my lips and slip my tongue in.\n\nBefore I could even catch a breath, she startled me by wrapping her lips around my tongue, sending shockwaves through me, somehow she knew every secret of my body and exactly how to pleasure it. I squirmed as she kept up the motions of her lips, feeling her hands on my bare skin on my lower back, feeling her slowly lifting my black top upwards. I lifted my arms so that Elena could pull it up and away, separating our kiss and starting the process of revealing my body for her to enjoy.\n\nA smile spread over Elena's lips as she let her eyes caress my body, giving me another kiss and placing her hand on my bra strap. As she slowly slid it aside, she kissed and nibbled on my skin, making me tremble. Gawd it felt so fucking amazing! I moaned as she continued, eventually feeling so overcome from the sensations that I cried out, \"Oh Elena, please fuck me... please!\"\n\nI felt her push the strap off my shoulder and down my arms, continuing to tease my skin with kisses and love bites. \"Ohhhh are you sure?\" she asked, moaning into my skin.\n\nMy body shook as I heard her asking me, and I was so worked up all I could manage to say was \"Yes, yes, yes, Elena!\"\n\nElena kissed the opposite side of my neck and began sliding that strap away too. Giggling, she asked, \"Oh does the straight girl want the lesbian to eat her out? Fuck her?\"\n\nI couldn't stand much more of her teasing, answering her with a throaty, \"Oh my fucking gawd, yes!\"\n\nI felt Elena finish the process of peeling away my bra, and she backed up far enough to look at my breasts, heaving a bit from my rapid breathing. \"Your breasts are absolutely gorgeous, baby,\" she said, cupping one in her hand, making me shudder, leaning in to whisper to me, \"I wanted to do that from the first moment we met.\" As both her hands began caressing my breasts, I felt her push me back so I was lying face up on her bed.\n\nHer lips and hands descended on my breasts, cupping caressing, licking and kissing them, while one hand unzipped my faded blue jeans. I didn't even need the hint, I knew exactly what she wanted, my pussy, going down on me, and I ached for her to do it. I got out of my jeans as fast as I could without pushing her away, and then moved my legs apart, inviting her to have her way with me.\n\nI felt Elena smile, feeling her smooth fingers tickle my tummy, inching lower until I felt her cross the boundary of my thong. Within moments, I felt her beginning to suck on my left breast, as her fingers invaded my pussy. \"Ohhhhhhhh yessssss,\" I groaned out as I felt her lips and fingers inflict intense pleasure on my body.\n\nMy back arched as she continued her gentle fingering, sliding two fingers in and out, sucking on my breasts rhythmically, making my body spasm with every movement. I was moaning deeply, writhing, feeling the tension building up so much that it almost became painful. I threw my head back and forth, rocking my hips and moaning loudly, and at that point I felt Elena touch my clit, massaging slowly, I could feel the orgasm bubbling up from deep inside me, like pure lava, electric and all-encompassing.\n\nElena's lips were suddenly on my neck again, whispering to me, saying, \"That's it, sweet thing, cum for me, cum for your Elena.\" At that exact moment, the climax took me over, forcing my body upwards, deep sounds pushing out through my lips, yanking her against me with all my might, and shaking violently. My mind shattered as I felt it pour over me, but once it had run its course, I collapsed, breathing heavily.\n\nNever before in my life had I ever cum that hard, and if I even dared to compare it to what i had considered the best one, it would have eclipsed beyond the point of no comparison. 'Wow' didn't even seem to do it justice, even as I was recovering from the incredible feelings of moments before. As I felt Elena pull away, I took in a deep breath, eyes still closed, recovering, ready to express my deep gratitude once I felt I could think rationally again.\n\nNot even a moment later I felt her warm breaths caressing my inner thighs, as she uttered the word, \"Mine.\" Oh shit, she was about to go down on me, the thrill of anticipation made me shiver. Here I was, not long ago a straight married woman, practically begging another woman to bury her head between my legs. A woman that I adored and had fallen in love with. A woman I wanted more than anything.\n\n\"Oh Tamara, you taste... amazing!\" Elena gasped as the tip of her tongue tasted my labia, seemingly careful not to stimulate me too much. After dipping it in to taste me once more, she fastened her lips to mine and plunged her tongue deep inside my already quivering pussy. I had gotten oral plenty of times from former lovers, but this was at a depth of pleasure and intimacy that I had never experienced.\n\n\"Oh my... fucking... gawddddd,\" I gasped as I felt Elen'a delicious tongue penetrating me and devouring me, somehow reaching a spot in my soul and touching it. Gawd she was good, there was no fucking way I would ever give this up, I was hooked now. My well-practiced mask had melted, I embraced this, her passionate licking of my pussy, and her caresses. I grabbed her head, intertwining my fingers in her hair, pushing her against me as she ate my pussy with a delicate but aggressive skill that felt beyond amazing.\n\nAnother, more intense climax crashed over me, my back arching, making me release a loud scream of pleasure, her name interspersed among the squeals and noises that were entirely new to me. Before I could even recover from the second orgasm, a third slammed into me, stronger than the other two combined, my body thrashing violently, involuntarily yanking Elena's hair hard over and over again. I lost all control over my movements, and even blacked out for a moment, eventually coming back down to earth an inch at a time. Now that was great sex!\n\nSeveral minutes must have passed, because Elena was next to me on the bed, her arms gently encircling me in a snuggle of sorts, my head tucked into her shoulder. I struggled to speak, but managed to find a few words eventually. \"Damn... Elena...I had no idea... gawd... wow.\" I managed to croak out, looking up at her finally.\n\nElena had that tooth smile on her face that I loved, licking her lips before she responded to me. \"Well I hope that was an ok experience for you,\" she said, giggling as she spoke.\n\nI found myself laughing, to the point of having difficulty catching my breath. Breathing in deeply to calm my fit of giggles, I sat up in Elena's bed and looked down at her lovingly. \"Ha! Ok doesn't even cover it... that was... amazing... never felt that before, well... with anyone,\" I said, my voice trailing off.\n\nElena smiled and gave me a gentle kiss. \"Well... that is exactly what I intended, my sweet Tamara. And what did you expect after a solid year of foreplay hmmmmm?\"\n\nI smiled and let out a breath, touching her cheek softly. \"Well I am not sure thank you even comes close to giving it justice,\" I said quietly.\n\nElena smiled and gave me a quick kiss on my nose. \"No need, the pleasure was all mine,\" she said with a wink and a soft pat on my bare ass.\n\nI giggled a bit. \"Not really, I'm completely naked you are still dressed!\" I said, tugging at the edge of her top playfully.\n\nElena silenced me, placing two fingers across my lips. \"Shhhh now, this was all about you and your pleasure hun,\" she said, wagging her other finger in a playfully scolding gesture.\n\nI slipped my hand over her wrist and pulled it away from my mouth, and touched my lips to hers for a moment. \"It's more than that. I am in love with you too,\" I whispered.\n\n\"Oh I know that, don't worry.\"\n\nI sighed, knowing she wasn't getting what I was trying to say. \"No, it's more than that, I... just had a hell of a time really wrapping my mind around that, I mean I am straight, so kinda doesn't align with that. But what I figured out was it wasn't about if you were another woman or gay or whatever, was about the fact that it was you. Just you. Nothing else,\" I said, slowly.\n\n\"Ok? And?\" Elena said, not defensive but wondering what I was trying to say.\n\nI felt anxious. These were uncharted waters for me and it wasn't clear what I should say or do to communicate the fact that I wanted to give back to her, if she would even allow that at this point. Actions speak louder than words, so perhaps that was a good place to start. I had found myself drawn to her breasts often, and I wanted to touch them, so I placed a trembling hand on one, making her intake a breath sharply. \"And I... want you... too,\" I breathed out, kissing her softly.\n\nElena was unexpectedly shaken by my admission, and was silent for a few moments, I could tell she was worried the idea might be too much for me to take so soon. \"It's all good, there is no rush, in time, we can... you can... if you want to.\"\n\nI leaned in and planted a few kisses on her neck. \"Oh yes, gawd yes I want to, make me yours, help me love you,\" I said, gasping.\n\nElena let out an incredibly sexy moan, the first indication that I had managed to arouse her, which gave me a strange thrill. \"Mmmmmm in that case, let me guide you, let you meet another woman's body for the first time.\" I watched her pull back and slowly, teasingly inched up her shirt, exposing her olive skin to me, drawing my eyes to her breasts once the clothing had been discarded.\n\nShe took my hand slowly and placed it on her breast, gently tucking it inside her bra, and then slipping her hand over mine. Her breast felt incredibly warm, inviting and perfect, as if it was molding to my touch, as her hand began to move in a circular motion. I gasped, feeling her nipple harden, our eyes locked, lips parted, feeling my own body responding to the sensations. I watched her body move with my guided caresses, suddenly feeling the urge to touch both her breasts.\n\n\"How does that all feel to you, love?\" Elena said, a sexy purr filling her voice.\n\nBefore I could really answer, Elena removed her hand from mine, and slipped it around the back of my neck, much as she had during our first kiss which seemed like a lifetime ago. I felt her pushing me just in front of her breasts, the line of her cleavage just inches from my nose, holding me there for a second, as if getting me comfortable being that close. Before I realized it, my face was deep in between her breasts, nose right at her sternum, her warm skin enveloping my cheeks. I felt a shiver run through me, and one urge took me over that blocked out everything else: I had to taste them!\n\nI pushed my tongue out and felt her cleavage welcome it openly, caressing it, her skin tasted so sexy, and I was lost in the feeling of her breasts. Moments later, I began licking up and down the valley between them with a slow methodical pattern. Fuck, I could do this forever! I felt Elena shaking as I continued my oral lovemaking of her skin, and was perplexed when I felt her pull me back and tilt my head up to look at her.\n\nIn that brief moment, she had managed to unhook her bra with her free hand and let it fall away, and when I glanced back down, her bare breast and nipple were almost at my lips. I couldn't keep from licking my lips, feeling a powerful urge to taste the hard nipple, like it was calling to me. I gave it a brief kiss, which made me want to do it more, so I did, but then gave in to the desire to suck on it. As my lips closed around it, I heard Elena sigh. I had never done this before but it felt so hot, so sexy and so right.\n\nI heard Elena moan and say something but I was so lost in what I was doing and how it made me feel that I couldn't quite make out the words. My eyes were closed, my lips pulling the nipple in and out in a sucking motion, swirling my tongue around it, slipping a hand around each side of her breasts to steady it as I devoured it. I was enjoying it, enjoying her, and enjoying myself, feeling my pussy essence dripping down my inner thighs as I did.\n\nI released the nipple and moved on to the other, feeling Elena squirm and moan as I continued my sexy work on her body. All I wanted was her, in that moment, showing her how much I wanted her and how much I craved her. I got lost in it, hearing some hints from her as to what felt best, and then felt her breast quiver as her breathing began to get deep and rapid. Her soft moans broke my concentration enough to help me realize that she was about to cum, for me, because of what I was doing, even if my technique was poor. The realization was incredible to me, that I was making another woman climax, this woman, whom I adored.\n\nOnce she caught her breath, Elena slipped off her pants, and then her rather sexy black panties, parting her legs somewhat, revealing to me her pussy for the very first time. Overall it was like mine, but the lips thicker and more pronounced, shaved bare like mine but her scent filled the room like an erotic perfume. To my amazement, her lips were wet, almost dripping, looking like an erotic flower with petals covered with the morning dew. I found my eyes transfixed, fascinated with how it moved as she shifted her position a bit, and wanting to look closer. \"Wow... you are... so... Smooth... and gawd, so... wet...\" I gasped.\n\nSmiling, and without saying a word, Elena took my hand in hers, isolating my index and middle fingers and folding back the rest lovingly. She guided my fingers between her legs, and we both gasped as they slid inside her, eventually holding me still, and then slowly drawing them back out.\n\nI drew my hand back, lifted it up and studied the slick juices coating my fingers, fascinated by it, knowing they came from a woman other than myself. I had tasted myself many times, accustomed to it, even enjoying it, but this was a different thing altogether, almost surreal. Elena's scent emanated from it, tickling my sense of smell and made it feel like she was invading me, permeating every cell in my body and creating a whole new me. I felt a strong desire to taste it. Wasn't that the point of having her on my fingers like this, becoming hers in yet another way?\n\nMy eyes closed slowly as my lips parted and welcomed the new visitor inside, feeling the taste hit my tongue, tasting another woman, tasting her essence. It had a tangy taste to it, which made me think of her as spicy, but beyond pleasurable to taste, realizing that as I did I was truly taking her inside me.\n\nOnce I opened my eyes, I saw that Elena had repositioned face up on the bed, knees bent slightly, clearly inviting me between her legs to taste from the source. In that moment I knew two things, one, that this crossed a final line essentially deflowering me as a straight woman, and two, that I was ready to do it without hesitation.\n\nI knelt down between her parted legs, seeing the desire in her eyes which just made me want it even more. I positioned myself so my lips were mere inches from her wetness, the scent wildly intoxicating, heightening my desire, making my head move right to where she wanted me. I touched her outer lips with my tongue, making her lift her back off of the bed and moan, fingers on the back of my head, caressing my hair. \"Ohhhhh Tamara, you are finally mine. That's it baby, taste me, lick me,\" she gasped.\n\nI pushed my tongue deep into her, feeling the walls of her pussy contract around it as I moved it in and out for a bit, switching to licks up and down the length of her womanhood next. Once that was done, I opened my mouth and aligned my lips with her labia, pressing my face to them and tongue kissing her pussy like it was her mouth, which made her writhe. I continued licking and kissing her, desperate to bring her to a climax, and wondering why it was taking so long.\n\nElena slipped her hands around my head and wordlessly guided my lips to her clit, making me perturbed that I had forgotten something so basic. My tongue began working her sexual center, and her body began moving in a far more powerful way. \"Oh mmmmm yes yes right there. Jusssst like that, baby,\" she moaned.\n\nI began gently sucking on her clit, much like I had on her nipple earlier, which apparently was the magic combination, because moments later she was thrashing and moaning in a way that a porn star might even, though in this case I knew it was real. I felt a thrill of accomplishment ripple through me as I hear her impassioned cries, felt her body writhe, and utter my name a few times.",
        "After a few moments, I felt Elena pulling on my hand, her naked flesh against mine, wrapping her body around mine. \"So... how was it?\" she asked, voice quivering.\n\nI took in deep breath, unsure how to express what I was feeling, though the feeling was pretty amazing. \"Good... I just don't... have the... words...\" I said, leaning over to kiss her, expressing both my gratitude and desire in the same moment. We just snuggled together for a while, just feeling each other breathe, then Elena broke the silence.\n\n\"Just to be clear, when I said you are mine and belong to me, it wasn't just the heat of the moment, I meant every word of it. I want you here, with me, by my side, sharing my life, everything.\" She said, as if she had rehearsed the whole thing in her head as we were quiet.\n\nI loved the feeling of my face in her neck, it made me feel adored and protected, so I scooted closer and put my head there. \"Oh I know that for sure, and I feel the same. Honestly, I haven't ever felt even a tenth of this with anyone, ever. We have this... connection, passion and a deep bond that is just amazing,\" I said reassuringly, suddenly feeling my eyes heavy. I had never made love for that long before, and it took a lot out of me, and before I knew it, I was fast asleep.\n\nElena\n\nAs I slowly began waking up a few hours later, I started smiling in wonder at how amazing and erotic my dreams had been. A split-second later, I realized that I had a gorgeous, formerly straight brunette, the woman of my dreams, wrapped around me, her skin against mine. While it was a relaxed pose since Tamara was still asleep, I was struck by the deep attachment it implied, making me smile even bigger. I was content just to hold and watch her sleep, feeling her heartbeat, and feeling her breathing slow and rhythmically. It was a beautiful moment, and I wanted to just savor it, and be the first thing she saw when she woke up.\n\nTamara twitched and then I heard her take in a deep breath and stretch, which just pushed her naked flesh more firmly into mine. Her eyes fluttered for a moment, like she was trying to focus, and she looked at me and giggled. \"Well, hey there,\" she whispered, stroking my face.\n\n\"Hey there, love,\" I replied, giving her a wet, soft kiss, then adding, \"Sleep well?\"\n\nTamara nodded, snuggling into me again, and licking her lips as if savoring the kiss. \"Mmmm hmmm,\" she said with a contented sigh.\n\nI knew this had been a huge step for her, and felt a pang of worry wondering if she would have second thoughts once the reality of it all sank in. Given her reaction during our blow-up, it seemed reasonable to assume that. I cleared my throat. \"You ok? Any... regrets?\" I asked, keeping my tone free of concern.\n\nTamara started giggling almost incessantly, which concerned me at first, until she kissed my cheek. \"Not a single one, this was the most incredible and natural thing in the world to me. Plus, I love you, plain and simple,\" she said firmly.\n\n\"Well I got the feeling you had never cum that many times before,\" I said, tickling her, making her jump.\n\nTamara stuck her tongue out. \"Ya got that right, been too many times I didn't cum at all, it was... really... amazing,\" she answered.\n\n\"Well there are so many other ways...\" I said, not completing my sentence, waiting to gauge her reaction.\n\nI watched a smile form on her lips, a mischievous and somewhat curious grin, and she sat up and looked down at me. \"Oh, got more to show me? Teach me?\" she teased.\n\nIn one motion, I pushed her on to her back and swung my leg over her, straddling her, making her eyes widen. \"Oh yes, baby lots more,\" I said, purring, \"Just not all at once, I want you to savor it.\" I slowly ran my fingers up and down her tummy, tickling her navel, before moving upwards to trace around the edges of her breasts.\n\n\"Damn, Elena, you know how to touch me perfectly,\" Tamara gasped, her body shivering.\n\nI grabbed her hands and pinned them above her head, making her eyes widen, settling my body on hers, ensuring that my breasts were pressing into hers, moved my legs so they were separating hers. It was a deliciously vulnerable position for her and turned me on intensely. I knew her neck was her secret arousal spot, so I began kissing and gently nibbling it while breathing heavily and moaning, making her back arch a bit.\n\n\"I know exactly how to love you, to pleasure you, and so very happy to do it, love,\" I gasped into her neck. I wanted to wind her up a bit before trying anything else with her, I wanted the build-up to enhance the orgasm that would claim her later. Without releasing her hands, I began moving my body over hers, ensuring that my breasts rubbed nicely against hers and my knee started slowly grinding her pussy. Gawd she was already quite wet!\n\nTo my sheer delight, Tamara began gyrating her body beneath mine in a naked erotic dance that made shivers shoot up my spine. She was grinding against my knee slowly, methodically, and hungrily, showing me just how quickly she was learning the secrets of love between two women. The smouldering look of lust emanating from her eyes was sexy and confirmed my suspicions. My little, not so straight, girl had truly crossed over and embraced me, embraced lesbian passion, and given over completely to it. Whether I could truly call her gay remained to be seen, but I was more than happy just as she was.\n\n\"Fuck. Kiss me. Please. Gawd,\" Tamara began begging.\n\nMy lips touched hers and she instantly parted her lips and slid her tongue along mine, which seemed to be asking for as much attention as had her words. I was all too happy to oblige, exploring her mouth with deep passion, which she eagerly returned, the pace of her frenetic grinding increasing. I knew she could climax any second, but I wanted that to happen differently, so I rose and backed away from her a little.\n\nTamara looked confused and even annoyed, obviously not understanding why I had interrupted her pleasure, reaching for her leg and lifting it up so I could kiss her calf. I could tell her what I was up to but wanted her to experience it and feel it instead. With a sly smile, I slipped my leg between hers, watching her furrowed brow reveal that she still wasn't sure what was happening. Lifting her ass a bit, I lowered my wet pussy right against hers, watching her eyes go wide as the sensations hit her the first time.\n\n\"Oh gawd... gawd... that's so... wow... fuck... oh fuck...\" she gasped, her body shaking, her arousal now exponentially greater.\n\n\"Oh yes, my sweet little Tamara, we are fucking now... really fucking... girl to girl... my pussy kissing yours,\" I said, my hips starting to gyrate, grinding powerfully into her. It was tricky doing this especially so early on with a lover, but I knew it would be incredible for her if I did things correctly. I repositioned once or twice, hoping I had the alignment just right.\n\nTamara's head leaned back, her eyes closed, clinging to me for dear life, at first just letting me grind my pussy against hers, making her shriek and shudder. \"Ohhhh fuck... fuckkkkkk meeeeee,\" she squealed, now grinding back against me with equal fervor. Lifting her head back up, her eyes locked with mine, moaning as she stared at me. After several moments, her eyes closed and I could feel her womanhood pulsing against mine as a new climax washed over her. The sight of her pleasure and the sensation between my legs overcame me and I had a strong orgasm in response, a feat I had seldom been able to pull off that way with previous lovers. Our collective moans and cries rose together as one voice, just as our bodies were one and our souls now joined. Once we rode out the intense shared climax, we fell back on to the bed, clinging to each other for dear life. I thought it was safe to say that neither of us had ever felt that kind of thing before, which just made our bond more powerful.\n\nTamara\n\nWhen I woke up later, it took me a few seconds for my eyes to focus, and when I did I saw Elena's face smiling at me, her hair thoroughly disheveled. I blushed. I always felt self-conscious after waking up, fearing I looked awful and would make the person run away screaming. The look in her eyes, however, was one of pure adoration and it instantly reassured me that there was nothing I needed to worry about. \"Hi there,\" I said, almost chuckling.\n\nElena's lips lowered to mine, giving me a soft kiss which still had the faded remnants of my taste on them. \"Hi, love, did you sleep well?\" she asked.\n\nStill worried that I looked frightful, I nuzzled into her, catching my breath and nodded with a muffled, \"Mmmm yes.\"\n\nElena slipped her finger under my chin, pulling my face up just enough to make full eye contact with me, a soft but concerned expression on her face. \"Um, you all right? Any... regrets?\" she asked softly.\n\nInternally, my reaction was to laugh and say, Are you fucking kidding me, I am way more than ok! I did end up letting out a small laugh, which escalated into a brief fit of the giggles, which was not the reaction I wanted her to see. I calmed down after a moment and planted a quick peck on her cheek to reassure her. \"No regrets, not one, not ever. That was like... the most amazing thing I have everfelt,\" I said, pausing for a moment, and then adding, \"Plus, I love you, plain and simple.\" Was there anything more to say after that? Not for me at least!\n\nElena's fingers jabbed playfully into my ribs, tickling me and making me laugh. \"Yeah, well I got the distinct impression that you had never had that many orgasms in a row before,\" she said with a huge grin.\n\nI jutted my pink tongue out between my teeth for a moment. \"That's an understatement, hun. Sadly, there were quite a few times I didn't even cum at all with someone else, of course I figured out that it wasn't my fault,\" I replied, still smiling.\n\nElena planted a kiss on the tip of my nose, treating me to a whiff of her almost-faded perfume. \"Oh, but you have no idea, sweet thing, there are so... many... ways... to...\" she began, her voice trailing off.\n\nDamn this woman could make me smile nonstop. \"Oh is that a fact? Got more tricks to show me hmmm?\" I said with an exaggerated wink.\n\nWithout warning, she flipped my body around, facing upwards, catching me so off guard that I squealed, \"Oof.\" What I failed to notice for a second or two was that she had managed to slide her leg between mine.\n\n\"Oh patience there, babe, not all at once, I want you to... savor it, there's no rush,\" she said with a lilting voice, brushing her fingertips up my torso, then stroking the underside of my breasts.\n\nMy nipples instantly reacted, hardening at the touch, and sending shockwaves throughout my body, making me marvel at her skill. Almost overcome by the sensations, I gasped, \"Oh gawd, you know how to touch me... perfectly... ohhhhhh wow...\"\n\nAll at once, I felt Elena pin my arms above my head, pressing her breasts right into mine, making our nipples rub in the most sensual way possible. As she pushed my legs apart with her knee, I felt her lips feasting on my neck again, making her gasp. \"I know exactly how to touch you, caress you, and pleasure you, Tamara, and so enjoy loving your body,\" she responded, her lips caressing my neck erotically.\n\nIn that position, all I could do was let her have her way with me, and it's all I wanted anyway. Elena began rubbing her body on mine, breasts kissing and caressing each other, and her knee wedged between my legs, grinding into my wetness, increasing my already building arousal. All I wanted was more of those sensations, more of the passion, more of her, and my body began moving back against hers in an erotic dance that was intensely pleasurable. \"Oh damn... Elena... yesssss... ohhhhhhhh gawd fuck me, fuck me now!\" I shouted, not caring who might hear.\n\nIn one smooth motion, her mouth abandoned my neck and fitted itself to mine, her tongue slipping between my lips like a wet snake, and virtually wrapping around mine. My body reacted immediately, my hips grinding against her knee as if trying to permanently join with it. I felt my entire self on fire like a living flame, wanting more of Elena, more of the heat, more of the pleasure. I felt an orgasm building, so powerful that it felt like an erotic tsunami, ready to crash over me at any moment.\n\nI was in a daze, so it took a moment for me to realize that Elena had pulled back from me, and honestly I felt a flash of anger to be denied a climax that was within a finger's reach from me so to speak. When I looked up to ask for an explanation, I saw Elena kissing my leg above my ankle, a very mischievous look on her face. I felt her wetness sliding down the inside of my left leg, and before I could fully understand what was happening, I felt a searing hot wetness press against my pussy. The feeling was overwhelming, our bodies fully and completely one, more intimately than any connection I had experienced in my life, but multiplied exponentially.\n\n\"Oh... fuck... gawd... that's... thats...\" I said, seeing stars and so overwhelmed by the intensity of the moment that I couldn't speak or even think at that point. I had sensed it on some level before but now I knew this was the person I had waited for, hoped for, longed for, my forever friend, lover and soulmate.\n\n\"Yes, sweet little Tamara, we are fucking, girl to girl, together, my pussy fucking yours!\" Elena growled, making me grind back even more fiercely.\n\nNothing else mattered in that moment, just us, bodies together, bonded in a way I never imagined possible with another human being, and something I would sell my soul forever never to lose. Forcing myself to focus, I gripped the back of her neck with my hand, making our eyes meet. I knew I was about to cum, and from the flushed look on Elena's face, she was about to as well. I wanted, even needed our eyes locked as we came together. I gasped and grunted something that sounded like \"Oh fuck me... fuck me... Elena...\" which was probably a violent scream, though I was scarcely conscious enough to know for certain.\n\nI felt my orgasm erupt, my pussy pulsating rapidly, as if trying to grip Elena's and pull it right inside my body. My back arched and every cell in my body felt electrified, and I felt a sympathetic response from between her legs that slammed into me and reflected the intensity back at her again. It felt as if her life force had entered me and that our souls were locked into an amazingly pleasurable dance together. We rode out the feeling, unable to speak, writhing, gasping, and moaning, finally coalescing into a deep calm that collapsed us into each other tightly. We both whispered a hushed, \"I love you\" as we sank into a deep slumber together.\n\nEpilogue\n\nElena and Tamara were inseparable after that, and made their relationship public. That delighted Elena's family, but initially had the opposite reaction with Tamara's. Her mother was shocked and her father was very hostile at first, though they both warmed up over time, eventually accepting them both and welcoming Elena Into their family with open arms. They got married in a small ceremony at the Grand Hotel the very weekend of the Bessmer Bash, which they hadn't intentionally planned, but found delightfully entertaining.\n\nTamara got promoted to Vice President of her company within a year of their wedding, and became well-known as one of the prominent women in the IT industry for years after. A few years later, they started a consulting firm together and traveled the world together speaking at conferences.\n\nIn later years, those who knew them described their relationship as a 'love story for the ages' that delighted and inspired many, and told again and again. Tamara and Elena would often laugh and remember that it all began at an event that neither of them wanted to be at, between two people who were worlds apart, and yet brought together in an amazing and unlikely love."
    ],
    "authorname": "christa_p",
    "tags": [
        "straight",
        "seduction",
        "first time",
        "romance",
        "passion",
        "erotic",
        "love"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/unlikely-love-pt-06"
}