{
    "title": "American Beauty",
    "pages": [
        "When I pulled open the door to the tavern, the sound that came pouring out was like a crowd at a sporting event. \"And I bet I know the name of the game that's being played,\" I thought wryly.\n\nAs I walked in, the noise level dropped noticeably, but I ignored the attention I'd drawn and scanned the room until I spotted Marge waving at me from the table she'd commandeered. As I walked over to sit with her, the noise gradually resumed its previous level.\n\nShe stood up as I approached. Uncertain how to greet her, I awkwardly reached out to shake her hand, but she ignored it to give me a welcoming hug the way women do. That simple gesture gave me a warm feeling; the other secretaries in the executive suite had pretty much given me the cold shoulder. As secretary to the president of Magnetadyne, Marge was pretty much the queen bee among the other ladies, so to have her ask me out for a drink was a big deal.\n\n\"I'm glad you could come, Jessica,\" she said as we both sat down. \"I wanted to get to know you a little better.\"\n\n\"I really appreciate the invitation, Marge,\" I said, \"and my friends call me Jess.\"\n\nJust then a perky waitress appeared to take our orders. Marge asked for a beer, then raised her eyebrows slightly when I asked for a wine spritzer, but she didn't make a comment.\n\n\"I really appreciate your invitation, Marge,\" I told her sincerely. \"It hasn't been easy getting settled at Magnetadyne, so it means a lot that you'd reach out to me. Some of the other ladies don't seem to like me all that much.\"\n\nShe reached over and patted my hand. \"It's not that they don't like you, Jess, it's just that you're the newcomer and Mary, the woman you replaced, had been with us for years before she retired.\"\n\n\"I guess I can understand that,\" I said.\n\n\"And to be honest,\" Marge went on, \"there's also your appearance. I guess some of the others are a little intimidated because you're so beau...\"\n\n\"Please don't use that word, Marge!\" I interrupted. \"I'm not trying to be falsely modest,\" I said hastily as she raised her eyebrows again, \"but I'm not truly beautiful. I could never land a job as a top model.\"\n\nShe looked at me skeptically. \"I'm not so sure about that,\" she said. \"But no matter what, most of us would kill to have your looks, and that inevitably generates a little envy.\"\n\nI shook my head. \"They wouldn't be so envious if they knew how my looks have affected my life. In many ways, beauty is a curse, not an advantage.\"\n\nNow she clearly didn't believe me. \"Every one of those gals spends a small fortune on clothes, hair dressers and make-up trying to look the way you do naturally. We're the ones who're cursed!\"\n\nI shook my head again. \"You might think so, but you'd be wrong. For example, I go through life with my eyes focused on the ground, like one of the untouchables in India. I don't dare look up for fear of making eye contact with a man, because if I do the odds are he's going to hit on me.\"\n\n\"Is that such a bad thing?\" Marge asked in amusement.\n\n\"Yes,\" I said emphatically, \"when it happens almost constantly and when the men who approach me are so creepy or obnoxious.\"\n\n\"Oh come on,\" Marge said, \"surely some of them are nice guys.\"\n\n\"You'd be surprised,\" I told her. \"In my experience, the nice guys are either too polite or tend to think I'm out of their league and don't even try. It's mostly the horn dogs and creeps who make the moves.\"\n\n\"I can't believe a woman who looks like you doesn't get approached by handsome guys. What about them?\"\n\n\"In some ways, Marge, they're as bad or worse. The ones I've met think they're God's gift to women - that I should be grateful just to be seen with them. What's worse, they'll toss you aside in a heartbeat for the next pretty face that comes along.\"\n\nAt that moment, our waitress reappeared and set another wine spritzer in front of me. \"I didn't order that,\" I said in confusion.\n\n\"I know,\" the waitress said. \"That guy asked me to bring it over,\" she said, gesturing back over my shoulder.\n\nI should have known better but I glanced in that direction only to see a heavy-set businessman bearing down on me. He grabbed an empty chair from a nearby table and, after giving Marge a cursory nod, sat down facing me. \"Hey, my name is Al,\" he said, \"you look like you could use some company.\"\n\nI heaved a sigh. \"I'm sorry, Al,\" I said politely, \"but I already have company. My girlfriend and I just want to relax and talk in private.\"\n\nHe didn't even turn his florid face in Marge's direction. \"Aw, that doesn't sound like much fun. Listen, let's have a couple of drinks together and then we'll go some place where we can find a little more action.\"\n\n\"No,\" I said firmly, \"I'm not interested.\"\n\n\"Come on, baby,\" he said, grabbing my hand in his sweaty palm, \"you could have a lot more fun with me than with her.\"\n\nI glanced over at Marge with an \"I told you so\" expression, then turned back to the creep. \"How long ago did you move to this country?\" I asked him blandly.\n\nHe looked at me in confusion. \"Hunh? What? I never moved here - I was born in America.\"\n\n\"And yet you never learned the meaning of the word \"no,\" I said in mock disbelief.\n\nMarge laughed out loud, and the guy's face turned even redder. He stood up so quickly that he knocked the chair over. Picking it up hastily, he turned and stalked away. As he left, we could hear him mutter, \"Damned dyke!\"\n\nI turned back to Marge. \"Now do you believe me?\"\n\n\"Wow, that was pretty ugly,\" she said, still snickering at the guy's hasty retreat.\n\n\"And that was with zero encouragement on my part,\" I went on. \"You can just imagine what would happen if I'd given out any positive signals. And it's not just making eye contact, I have to be careful about what I wear too. If I don't want that kind of attention I have to pick what I wear carefully so I don't inadvertently expose too much skin.\"\n\nMarge started to respond, but I was on a roll and pressed on. \"Here's another thing: I saw you react when I ordered the wine spritzer, but I always have to be careful about how much I drink. I can't afford to relax in social situations, I have to be constantly on my guard to make sure I don't attract unwanted attention. It's like I told you, looking like I do is like being on probation - one little mistake and I'm in trouble again.\"\n\nSuddenly a thought came to Marge and her eyes widened. \"Wait a minute, do you get hit on at the office too.\"\n\nI gave her a wry smile. \"Frequently,\" I said.\n\nShe looked aghast, \"Not Tom Moffatt?\" she asked anxiously. \n\n\"Oh, no,\" I said hastily. \"My boss is a real sweetheart. He treats me more like a granddaughter than an employee. I've never had any problems with him.\"\n\nShe looked relieved for a moment; then her eyes narrowed. \"What about the silver-bearded wonder?\"\n\nI laughed. As the VP of Sales and Marketing, my boss had two direct reports. Scott Benson, the Director of Sales, was a divorced man in his late thirties with a goatee and mustache that were prematurely grey. People in the office said he was a genius; they also said he was a real ladies' man.\n\nI laughed. \"He hit on me my first day.\"\n\nMarge smirked.\n\n\"And every day after that,\" I went on, and she burst into laughter.\n\n\"What about Peter?\" she asked curiously.\n\nPeter Hammil, the Director of Marketing, was Mr. Moffatt's other direct report. \n\n\"He hasn't come on to me directly,\" I admitted, \"but he looks me over when he thinks I'm not aware of it.\"\n\nShe nodded. \"Well he'd better not - he's married.\" Then she asked, \"Any others?\"\n\nI nodded my head. \"Except for my boss, pretty much all of them.\"\n\nThat drew another snicker from her. Then she went on. \"So is there a man in your life right now?\" \n\n\"No, I'm pretty much out of the dating game,\" I told her.\n\n\"That's pretty hard to believe,\" Marge asked incredulously. Then her eyes narrowed slightly. \"Has there ever been a serious man in your life?\"\n\nThe pain in my palms made me realize how tightly my fists were clenched. \"There was one, but it's a pretty painful story. Let's just save that for another time, shall we?\"\n\nMarge nodded sympathetically and we switched to other, less sensitive issues. By the time we left the tavern and I headed for home, I felt like I had made a friend. I hoped so - I didn't have very many.\n\nAs I drove I was glad Marge hadn't asked me about the women in the office. I'd been hit on by a couple of them too. The thing is, men can be hard to handle, but at least they're predictable. The women are worse: they pretend to like you and then cut you to ribbons behind your back out of jealousy or envy. They can be incredibly catty, and I've been scratched, emotionally speaking, more than once.\n\nThe next week I was working on some correspondence Mr. Moffatt had left me when Peter Hammill came up to my desk. He waited till I had finished typing a sentence and then asked if he could interrupt me for a few minutes. \"I have a really big favor to ask,\" he said.\n\nI was on my guard instantly, wondering if this was when Peter would make his move. But when he pulled up a chair beside my desk and began to talk, he surprised me.\n\n\"Do you know Karen, Scott's secretary?\" he asked.\n\n\"I've met her,\" I told him, \"but I can't say I know her well.\" She was young and pretty in a girl-next-door way, and she seemed reasonably intelligent, as best I could tell. \"Why do you ask?\"\n\n\"Well, Scott's really down on her because she was a little late with a report he wanted, and I'm afraid he's going to let her go.\"\n\nThat certainly wouldn't surprise me. In the short time I'd been at Magnetadyne, there was probably more turnover in Scott's department than any other in the company. He was a perfectionist, and when any of his people failed to meet his impossible standards, he seemed to take delight in pointing out their flaws, usually doing so in front of others. He'd fired more than a few people, and several others had either transferred or quit. Yet senior management seemed to turn a blind eye to his lack of people-management skills, probably because of his sales results, I guessed.\n\nPeter went on, \"I'm hoping you can do something to help her keep her job.\"\n\nSuddenly a light bulb lit up in my head and I thought I understood what was happening. \"Are you sleeping with her?\" I demanded.\n\nHe recoiled in shock. \"What? No, of course not! She's married - and so am I!\"\n\nI looked at him coldly. \"Being married doesn't stop a lot of guys from messing around. But if you're not sleeping with her, why would you want to help Scott's secretary?\"\n\nPeter was wary, but he went on with his quest regardless. \"I guess I feel responsible for her.\" When he saw my expression, he hastened to say, \"No, not in that way. I was the one who hired her. She was bright and eager, and I thought she had a lot of potential - I still do. Anyway, when Scott got promoted to Sales Director, I recommended her for his secretary. It was a nice promotion for her and I thought she'd do well. I guess I didn't consider the way Scott is with people. The bottom line is I feel guilty for putting her into the line of fire and I'd like to save her if I can.\"\n\nI watched him carefully as he told his story. He didn't seem to be hiding another motive, but some men can be very devious, especially when it comes to sex.\n\n\"So what exactly do you want me to do?\" I asked.\n\nHe looked at me earnestly. \"I was hoping there might be some work she could help you with while Scott is out of town this week. Then, if you could write him a memo saying complimentary things about her with a copy to Mr. Moffatt, it would be hard for Scott to fire her for incompetence.\"\n\nFrom what I knew of Scott, Peter's plan would probably work. Scott was the type who never missed an opportunity to suck up to his superiors.\n\nI focused on Peter again. I was still uncertain about his true motives so I decided on a temporizing move. \"I'll tell you what, Peter, you suggest to Karen that she have lunch with me today. After I talk with her, I'll see if I think I can help her.\"\n\nHe stood up. \"Okay, Jess, thanks\" he said, \"I'll go talk to her right away.\" He turned to go, then turned back. \"I really hope you can help her; she's a good kid and deserves better.\"\n\nFifteen minutes later I got a call from Karen, and we agreed to go out for lunch. I knew that wouldn't be a problem since neither Scott nor Mr. Moffatt were in the office, and I hoped she'd feel more free to talk away from work.\n\nWhen we got to the restaurant, I thought at first I might have made a mistake. The waiter hovered over us for what seemed like forever trying to chat me up, but finally he brought our order and left, giving Karen and me a chance to talk.\n\nI looked at her sternly. \"I want you to be honest with me, Karen. Are you and Peter having an affair?\"\n\nShe gasped in surprise. \"Oh, no! Whatever made you think that?\"\n\nI ignored her question. \"Well, has he come on to you? Do you think he's trying to start something with you?\"\n\nNow she was indignant. \"Certainly not! I don't think he's that kind of person, and even if he were, I'm happily married and Peter knows it. He's even met my husband.\"\n\nWatching and listening to her, I really didn't think Karen was trying to hide anything. Still . . .\n\n\"Okay,\" I told her, \"but I still can't understand why he'd go to so much trouble to try to protect you.\"\n\nShe shrugged her shoulders. \"I'm not really sure either - most bosses wouldn't. I guess Peter is just a nice guy. In any case, I'm really grateful.\"\n\nHer answer didn't sound rehearsed to me. Maybe Peter's request was nothing more than it appeared. In any case, I didn't want the woman sitting across from me to suffer at the hands of a bully like Scott Benson.\n\n\"Okay, Karen, here's what we're going to do,\" I said, and her eyes shone with gratitude as I outlined the plan. \n\nA week later I had just gotten off the phone when I spotted Peter standing there. I could tell he'd been staring at me because he hastily shifted his glance away when I looked up. \"What can I do for you, Peter?\" I asked.\n\n\"I just wanted to stop by and thank you for helping Karen,\" he said. \"I was in Scott's office talking about Expo and noticed your memo sitting on his desk. I really appreciate your giving her a little executive cover.\"\n\nI smiled at him. \"I'm glad I could help. Karen does seem to have a lot of potential, and it would be a shame for the company to lose her.\"\n\nHe nodded and started to leave, but I felt a little guilty about doubting him before so I spoke up quickly. \"For what it's worth, I'm impressed that you went to so much trouble for someone who doesn't even work for you.\"\n\nHe actually blushed! \"Well, it was no more than anyone else would have done.\"\n\nI nodded, but in my experience people don't go out of their way to help others unless they want something in return. It was nice to learn there were exceptions. \"I'm still impressed,\" I told him.\n\nHe started to leave again but then turned back. \"Listen, I was just about to go down to the cafeteria to grab some lunch. Would you care to join me?\"\n\nOrdinarily I would have turned down an invitation like that, but Peter did seem to be a genuinely nice guy and I thought it couldn't hurt to have another friend. \"Sure, that would be great.\"\n\nOver lunch I learned a number of things about Peter Hammill. The first was that he was devoted to his wife Callie. \"She's an interior designer, and a damned good one,\" he told me. He pulled out his cellphone and started showing me pictures of her (she was lovely) and of some rooms she had designed (they were impressive). \"She's even done work for some of our executives,\" he told me proudly.\n\nBut before he could go on, we were interrupted by one of his people who needed a decision from Peter about some collateral material for Expo. While Peter was dealing with that issue, another member of his team came up with another work question. Before long, a team meeting had convened at our table.\n\nPeter turned and pantomimed his apologies, but I waved them off and beckoned for him to go on. Then I sat quietly watching him in action with his people. When they would ask his opinion, he would take the time to listen and then ask his own questions, often eliciting the answers from them. I also found it revealing to see how comfortable his people were dealing with him. They deferred to his judgment but clearly weren't intimidated or obsequious. \n\nWhen I finally slipped away, I had a much clearer picture of Peter. \"Very interesting,\" I thought. \"It's nice to see someone in authority who doesn't act like a jerk.\"\n\nThat afternoon Marge stopped by my desk to ask me to join her at the tavern again. I was gratified to get a second invitation and gladly accepted.\n\nOnce her beer and my wine spritzer had been delivered, she leaned on the table and looked at me carefully. \"I saw you eating lunch with Peter today. Anything going on between you two that I should know about?\"\n\n\"Not at all,\" I said hastily. \"He came by about some business just before lunch, so it was only natural that we'd wander down to the cafeteria together. I was glad because it gave me a chance to get to know him a little better.\"\n\nMarge looked at me slyly. \"So what did you learn?\"\n\n\"Well, I learned that he seems like a genuinely nice guy. He also seems to be a good leader who's respected by the people who work for him.\"\n\nWhen I saw Marge looking expectantly, I went on. \"And I learned that he's a happily married man who loves and admires his wife,\" I said firmly.\n\nMarge cocked her head and asked, \"And that's all?\"\n\nI sighed. \"Look, Marge, I told you I'm not in the market for male companionship right now. Even if I were, I'm not a homewrecker,\" I said forcefully.\n\nShe looked at me carefully, and her expression became more sympathetic. \"Somebody really hurt you badly, didn't they? Want to talk about it?\"\n\nI was about to deny it, but suddenly something inside seemed to give way and, to my surprise, I heard the whole ugly story start to pour out of me.\n\n\"I found Mr. Right my senior year in college. Actually, I guess, he found me, but whatever the case, I knew he was the one right away. We got married soon after graduation and started our lives together, just like it's supposed to happen in the American Dream.\n\n\"He took a lot of pride in my appearance and loved for us to go out to places where he could show me off. At first I felt a little uncomfortable with that, but it made him so ,uh, 'enthusiastic' when we went home that I was happy to do it. Even when he began to ask me to wear more revealing clothes, I was willing to go along to please him.\"\n\nMy throat had gotten dry, so I paused to take a sip of my drink.\n\n\"Before I met him, I hadn't been very active sexually. I guess I didn't want to get a reputation. Anyway, once we were married, our sex life was really good, at least for me. But my dear husband wasn't satisfied. After a couple of years he introduced the idea of role playing. At first I was hurt because I thought that meant he was dissatisfied with me. But I soon learned that what he really wanted was for me to fantasize about other men when we were in bed together. I tried to explain that I couldn't separate love and sex, but he kept urging me, so finally I began to pretend he was Brad Pitt.\"\n\n\"Oooh, good choice!\" Marge interjected. \"He's a real hunk.\"\n\nI looked at her in exasperation and she quieted down.\n\n\"That satisfied him for a little while, but soon movie stars weren't enough. Next he wanted me to talk about my old boyfriends and then other men we knew. I was really uncomfortable fantasizing about 'real people,' but he was persistent, so I went along for his sake. Then he started a new phase where he'd take me to nightclubs and bars and encourage me to interact with other men. He'd want me to let them buy drinks for me and dance with me. Afterwards he'd quiz me on which ones I thought were attractive and he'd want to know if I would have gone out with them if I were still single.",
        "\"When I finally admitted that some of them seemed pretty attractive, it was like I'd flipped his 'on' switch. He became very excited, and for a while I enjoyed all the extra attention I got from him in bed. But when he asked me if I'd consider going out with someone for real, I was hurt and confused. I told him he was the only man I wanted and that 'forsaking all others' was something that I really meant.\n\n\"He backed off for a while, but soon he was back at it, asking leading questions, making sly comments. Finally, he told me that if I truly loved him I would actually sleep with another man.\"\n\n\"Why would he do that?\" Marge asked, shaking her head in puzzlement. \"Was he looking for an excuse to see other women?\n\n\"I wondered the same thing,\" I told her, \"but he swore he had no interest in anyone else. He said what he wanted was to see me in action, to watch what I did and how I acted in the throes of passion. He kept saying how much I'd love the experience of sex with other men, and how he wanted to make me happy. I told him the only thing that would make me happy would be for him to forget all this nonsense.\"\n\n\"But he didn't, did he?\" Marge asked.\n\n\"No, he didn't,\" I said. \"I came home from work one Friday to see a strange car parked in front of our house. When I went inside, my husband was talking with two very large men. He introduced them to me, and then dumbfounded me. 'These guys have the biggest cocks I've ever seen,' he blurted out. 'They're going to fuck you all night and give you a thrill like you've never felt in your life! You're going to love it.'\"\n\nI paused to blot the tears that were running down my cheeks. \"Marge, I couldn't believe it. All my life men had treated me as though I were a piece of meat, and now my husband, the man I loved and trusted, was doing the same thing. He wanted to give me to two men I'd never even met, just for his selfish gratification. He didn't give a damn about my feelings, my wishes - all he wanted was to use my body for his pleasure, just like all the rest of them. It felt like the ultimate betrayal.\n\n\"Anyway, I made an excuse, slipped out of the house, drove straight to my parents' home and never went back. After I got my divorce, I decided to leave town so I wouldn't risk running into him again. That's how I wound up here.\"\n\nMarge reached over to take my hand. \"I'm so sorry, Jess. That must have been terrible for you.\"\n\n\"You know what, that wasn't even the worst thing about it,\" I went on. \"While he was telling me what those men were going to do to me that evening, I glanced around the room and noticed boxes filled with lighting equipment and video cameras. That bastard was going to tape the whole thing. I'd have probably wound up on some porn site if I'd done what he wanted!\"\n\nMarge's face paled. \"That's just unbelievable!\"\n\nI was crying now and couldn't seem to stop. \"What gets to me the most is wondering what I did wrong. What did I do to make him want to see me that way? What could I have done differently to save my marriage? I just feel like such a failure.\"\n\nShe squeezed my hand gently. \"Jess, you can't blame yourself. You didn't do anything to bring that on, and there was nothing you could have done to prevent it. It was your ex's problem, not yours.\"\n\n\"Maybe,\" I said, \"but I can't help still feeling that way. In any case, you can understand why I'm not real interested in men right now.\"\n\nAs I sat there wiping my face, out of the corner of my eye I spotted a man approaching our table with two drinks in his hands. But when he caught sight of the tears running down my cheeks, he made an abrupt about-face and headed back toward the bar.\n\nMarge must have seen him as well because she gave a little laugh. \"Well, at least one good thing has come out of this: it looks like you've found an effective way to ward off unwanted advances!\"\n\nI had to smile at that through my tears.\n\nWhen we left the tavern, Marge stayed at my side protectively until we reached my car. Then she gave me a big hug and told me, \"Hang in there, Jess. It will get better.\"\n\nI hoped she was right.\n\nThe next couple of weeks at work that spring were crazy as we got closer and closer to Expo. This was a critical event for Magnetadyne. The company would be launching its new line of components at the show, and it was counting on landing major orders. A successful show would set the tone for the whole year; a miscue could have serious consequences.\n\nCompounding the frenzy was the rumor that blazed through the office: that my boss, Mr. Moffatt, was about to announce his retirement. I had my doubts. I'd neither heard nor seen anything from him to indicate that was true.\n\nThe second part of the rumor was that either Peter or Scott was going to be picked to succeed Mr. Moffatt as vice president. That really stirred the pot, dividing the office into three camps. There were those in the pro-Scott group who hoped to gain from his promotion. The second group, of course, consisted of those who were loyal to Peter and felt their leader should be picked. The third was the \"anyone-but-Scott\" group: those who were appalled at Scott's arrogance and fearful of what life might be like if he were in charge. The result was chaos, with lots of short tempers exacerbated by tight deadlines.\n\nIn the middle of all this ado, Mr. Moffatt called me into his office early one afternoon with an urgent request. Scott had given him some pricing information for the Expo to review, and now Mr. Moffatt wanted Scott to see his comments. But when I called Scott's cellphone I learned that Scott was working from home. He suggested that I bring the materials out to him.\n\nI didn't particularly like the role of messenger, and the fact that Scott wanted me to come out to his home made me suspicious. But Mr. Moffatt needed a quick response, so I got my car out of the parking garage and set my GPS to Scott's home address.\n\nScott's house was located at the end of a cul-de-sac in the kind of neighborhood I would have expected for an up-and-coming executive. I parked out front and took the packet of materials to his front porch. But when I rang the doorbell there was no answer. \n\nThat surprised me, and I tried to peer in the windows to see if anyone was home. Then I checked around the side of the house, but I still didn't see anyone. I pulled out my cellphone to try to call him, but before I could make the call I thought I heard voices coming from around back. I hesitated, but finally I started walking around toward the back of the house.\n\nIt quickly became clear that the voices were coming from a screened-in porch at the back of the house. As I got nearer my steps slowed because there was something odd about what I was hearing. Cautiously I peeked around the corner only to draw back in startled embarrassment. The sounds I'd heard were the sounds of Scott having sex with some woman!\n\nI stood there paralyzed by uncertainty. Under the circumstances, I could hardly make my presence known, but I was still supposed to deliver the material for Scott to review. Then, as I hesitated, I heard the woman moaning, and I'm ashamed to admit that prurient interest took over. It had been so long since I'd had sex that the sight and sounds of this unexpected encounter totally overcame my good sense.\n\nIt was clear from the sounds she was making that the woman was thoroughly enjoying Scott's attention. As I peeked again, I could see her lying nude on a chaise-lounge, with Scott kneeling at her side. One of his hands was tweaking her nipple while the other was burrowing between her legs, causing her to arch her back in pleasure. \n\nAs I watched I felt my breathing accelerate and my panties grow damp. Involuntarily I reached up and rubbed my breast through my blouse, trying to alleviate the need that had suddenly blossomed there. I'd never watched live sex before and I found it both fascinating and arousing.\n\nI realized that I was still holding my cellphone in my hand and, without really thinking about what I was doing, I held it up and began shooting video of the erotic scene playing out before me. As I watched, Scott climbed up on the chaise and the brunette sat up and began worshipping his erect penis. Whatever else you might say about Scott, it was clear that he was physically well equipped for the challenge.\n\nApparently the woman could wait no longer and scrambled to impale herself on Scott. She straddled him and used her hand to position his penis so she could slip down on him. Even from that distance I could tell that she needed no extra lubrication, and a sudden breeze wafted the scent of her arousal to me. She groaned mightily and held still for a moment as he filled her; then she began to rock her hips back and forth, using him to stimulate her inner depths.\n\nEvery now and then she would bend down to kiss him passionately, and I thought to myself, \"She is really into Scott.\" To be honest, it made me a little jealous: why couldn't I have someone to be crazy about in my life?\n\nApparently Scott was not content to maintain a passive role because he abruptly sat up and pushed the woman onto her back. In an instant he was driving himself into her, and she began to gasp and moan as he drove her to a frenzy. Her arms clasped him tightly as if trying to pull him even deeper into her, her hands clawed and tugged at his back and hips.\n\nScott had been largely quiet to this point, but suddenly he began to speak to the brunette, goading her with his words. \"Do you like that, baby? Does that feel good? Have you ever had better?\"\n\n\"No, Scott,\" she groaned, \"you fuck me so good!\"\n\n\"Better than your husband?\" he taunted. \"Am I better than Peter?\"\n\nA chill shot through me, but I told myself it might just be a coincidence.\n\n\"Oh, God, Scott,\" the woman replied fervently, \"he can doesn't even come close. He's never made me feel the way you do!\"\n\n\"Don't you feel guilty fucking me while he's slaving away at Magnetadyne?\" Scott teased her, and I felt sick to my stomach. \n\n\"I love it,\" she gasped. \"It makes me feel so wicked being here, knowing he hasn't got a clue.\"\n\n\"And when I get promoted to VP,\" Scott went on, \"I'm going to fuck him over just the way I fucked his wife!\" he boasted. With that he accelerated his assault and the woman's words dissolved into groans that soon crested into screams.\n\nShe was making so much noise that I feared Scott's neighbors would hear her and spot me playing Peeping Tom, so I hurried back to the front of the house. I quickly stashed the papers inside Scott's screen door and then ran to my car. As I drove away, I was so shaken that my hands were trembling.\n\n\"Oh, God, what am I going to do?\" I kept asking myself. \"I can't tell Peter. It would kill him to discover that Callie is cheating on him. And with Scott, of all people! But I've got to tell him - I can't keep something like this from him.\"\n\nWhen I got back to the office, I hurried to my desk and did my best to keep busy. But all I could think about was Scott and Peter's wife going at each other while mocking poor Peter. The memory made me sick at my stomach. \"He's a good guy and good-looking too. Why would she cheat on him?\" I kept asking myself.\n\nFinally, as the afternoon wore on, I couldn't stand it any more. I picked up the phone and made the call I'd been dreading. \"Peter? It's Jess. Are you going to be around the office for a while?\"\n\nHe laughed, \"Oh, yeah, I'm probably going to be working late every night till Expo.\"\n\n\"Can I come by and see you for a little while around 5:30?\" I asked.\n\n\"Sure, come on by whenever you'd like,\" he said cheerfully. I grimaced; I knew he wouldn't be very cheerful after I talked with him.\n\nWalking to Peter's office felt like walking into a hospital for surgery: you know you have to go, but every nerve in your body is screaming at you to run in the opposite direction. When I got there, Peter greeted me with a cheery wave, but when he saw my expression he sat up in his chair, a look of concern on his face. \"What is it, Jess, what's happened?\"\n\nI sat down heavily in one of his desk chairs. \"I have some bad news, Peter. I don't want to be the one to pass this on, but I just don't have a choice.\"\n\n\"It's alright,\" he said, \"you can tell me.\"\n\nI couldn't look him in the eye. \"This afternoon, Mr. Moffatt asked me to take some documents out to Scott's home. When I got there, no one answered the doorbell, so I walked around outside his house and heard some noise. When I looked on his screened-in porch, this is what I saw.\" \n\nWith that I turned on my cellphone to play back the video I'd taken, then handed it to Peter. When he saw Scott crouched beside the female figure lying on the chaise-lounge, he gave a harsh laugh. \"So that's what Scott calls 'working from home,'\" he said derisively. \"I can't say I'm surprised.\"\n\nHe started to hand my phone back to me, but I pushed it back to him. \"Keep watching,\" I said in a low, sick voice.\n\nI could tell whenthe brunette sat up and began to give Scott head because Peter's face looked he'd been hit stabbed with a knife. I couldn't help it: I began to cry. It's a terrible thing to see a man's illusions shattered before your eyes. His face registered shock, pain and anger, all at the same moment.\n\nAs he sat there in anguish, I quickly reached over and tried to take my phone out of his hands because I didn't want him to hear what I knew was coming next. But he wouldn't let the phone go. \"There's more, isn't there?\" he asked in a strained voice. \n\n\"You don't want to watch it, Peter,\" I said, but I knew that wouldn't stop him.\n\nThen we heard Peter's wife gasping and moaning, and Scott's voice goading her. When she began to talk about how good Scott was and how much she enjoyed screwing behind her husband's back, Peter's face went pale. I silently prayed I might never see anyone humiliated like that again.\n\nFinally the video shut off, and Peter slumped in his chair. After a few moments he raised his head to stare at me with haggard eyes. \"You know what really got to me the most? It wasn't just that Callie cheated on me. That's bad enough. But the way she held him and kissed him and caressed him. They weren't just having sex, they were making love.\"\n\nI groped desperately for something to say that might ease his pain, but nothing would come to me. All I could do was repeat, \"I'm so sorry, Peter, I'm so sorry.\"\n\nAs he hung his head in despair, something that had been bothering me all afternoon suddenly came into focus, and I blurted out in a voice louder than I intended, \"I just realized something, Peter. Scott must have wanted me to see him with Callie! He specifically asked Mr. Moffatt to have me deliver those papers. He wanted me to hear them and see them together, he wanted to embarrass me and to make me tell you!\"\n\n\"That son-of-a-bitch,\" Peter swore. \"He's always hated me and this is his way of getting back at me.\"\n\n\"But why?\" I asked. \"I can understand that the two of you are rivals, but why would he be so vindictive?\"\n\nPeter sighed. \"Back before you joined Magnetadyne, Scott used to report to me. I thought he was brilliant but somewhat impulsive. I even saved his job one time when he became hyper-defensive about an expense account he'd submitted. Audit asked a routine question about it and Scott flew off the handle. He wrote the head of Audit a snarky memo that essentially said 'How dare you question me - go to hell!' Scott copied me on the memo and I was able to stop it before it was delivered to the VP of Auditing. Then I calmed Scott down, got him to delete the memo and the whole thing went away as far as I was concerned. Sometime later the sales director job opened up, and I recommended Scott for the position.\"\n\nI shook my head in confusion. \"Wait a minute, are you saying that Scott hates you because you recommended him for a promotion? I'd have thought he'd be eternally grateful.\"\n\nPeter shook his head. \"In your world and mine, that would be true. But in Scott's world, no one is as smart as he, and the idea that he owes anything to anyone is anathema to him. You might say he's never forgiven me for putting him in my debt.\"\n\nNow it was my turn to shake my head. \"But I still don't understand why he'd take the risk of revealing his affair. Wouldn't that get him in trouble with Magnetadyne?\"\n\nPeter's voice was cold and bitter. \"Not really. The company would see it as a personal matter between Callie and Scott; they wouldn't want to get involved. No, I think the reason Scott wanted me to find out is to provoke me into doing something foolish that will get me fired. Even if I don't, he's probably hoping that I'll be so humiliated here in the office that my work will suffer while I'm caught up in a messy divorce.\"\n\nHe looked at me carefully. \"And I think he decided to use you as the messenger as payback for resisting his advances.\"\n\nMy cheeks flushed, first in embarrassment and then in anger. But although I resented being used by Scott, I was more concerned about Peter. The tone of his voice worried me. \"What are you going to do now?\" I asked.\n\nHe clenched his fists tightly for a moment, then relaxed. \"For the time being, I'm not going to do anything except concentrate on getting ready for Expo. I damned sure can't afford to lose my job now. But once it's over, you can be sure that I'm going to divorce Callie and find a way to even the score with Scott.\"\n\n\"Peter, I've experienced betrayal in my life, so I can understand some of what you're feeling right now. If there's anything I can do to help, please let me know. But whatever you decide, don't do anything that will wind up hurting yourself.\"\n\n\"Thanks, Jess,\" he said quietly. \"I appreciate that. I also appreciate the courage it must have taken for you to bring this to me. The only thing I'd ask for now would be for you not to let anyone else know what you've found out. As for me, I'm just going to bury myself in work; that's the only thing I know to do to help with the pain.\" He looked at me wryly. \"It will also give me an excuse to stay away from Callie.\"\n\nI glanced back at him as I turned to leave and I felt like my heart would break. It was devastating seeing a good, decent man whose whole life had suddenly collapsed on top of him.\n\nThere were only a few work days left before Expo, and the tension seemed to ratchet up every day. Part of that tension, of course, was simply a reaction to the deadlines connected with such a high-stakes event, but this time there was an added animosity between Marketing and Sales that seemed to infect almost everyone on the two teams.\n\nPouring fuel on the fire were the rumors about Mr. Moffatt. Not only did the water-cooler conversation hint that his retirement was imminent, but now the story was circulating that Scott Benson would be succeeding him. The result was that the people on Scott's team became more obsequious than ever trying to curry Scott's favor, while the people who worked with Peter were upset and anxious at the prospect of corporate life under Scott's rule.\n\nI became a sort of de facto member of Peter's group and regularly offered them help wherever I could. The first few times I sat down at the lunch table with them I drew a few questioning looks, but with Peter's obvious approval they accepted me. As a result, they made no effort to hide from me their reactions to all that was going on.\n\nThe fervor of their attitudes toward Scott was almost shocking. \"If he gets the VP slot, it will be a disaster for the company\" was a common theme. \"Why would senior management even consider promoting such a terrible boss?\" was another. It was disturbing to hear qualified, capable people considering leaving the company if Scott got the VP job.\n\nOn the other hand, their regard for Peter was as high as their opinion of Scott was low. Several times when Peter wasn't around, one of his people volunteered a story about how Peter had helped solve a problem. He had a way of offering constructive suggestions that encouraged the person to go back and do a better job. It seemed obvious to me what the company should do, but I knew that executives all too often focus totally on the short-term bottom line and are oblivious to what would be best for the long term.",
        "If the stress on his group was high, it was painfully obvious to me that Peter was nearing the breaking point. The combination of a critical deadline, his rivalry with Scott and the revelations about Callie were almost unbearable - I was afraid something was going to give.\n\nI was so worried about him that two days before the start of Expo I went to Peter's office. Even though it was well after normal work hours, I felt certain I would find him there, and I wasn't disappointed. He was surrounded by a small group of his key people staring at something on his computer screen.\n\nI didn't want to interrupt him so I paused at his door to watch him carefully. I knew he was tired from the long hours he'd been keeping, but the lines and dark shadows I saw on his face revealed an additional burden, one only I knew about. It disturbed me, yet I could think of nothing I could do to help.\n\nJust then, he looked up and spotted me. \"Hey, Jess,\" he said, \"come in and have a look at this,\" indicating what was on his monitor. When I went around and looked over his shoulder, all I saw was what appeared to be a view of an empty room hung with curtains around the walls. \n\n\"Um, that's nice,\" I said uncertainly. \"What am I looking at?\"\n\n\"This is a new set-up we're testing. What you're seeing is a live feed from our hospitality suite at the MGM Grand in Vegas!\" Peter said proudly. \"Now watch this,\" he went on, pecking at the keyboard. The view switched to a large hall. As Peter zoomed in, the view narrowed to a major exhibit that was under construction. \"That's the Magnatadyne booth at Expo, or it will be as soon as the display people get everything set up,\" he said. \n\nI looked at him in confusion. \"Why exactly do you need a live feed from Expo?\" I asked.\n\nInstead of answering, Peter motioned to a woman in the group. \"Debby, you came up with the idea, tell Jess what you've got in mind.\" \n\nImmediately she began babbling like an excited kid at show-and-tell. \"It'll be great,\" she enthused. \"It'll give us a chance to watch the booth set-up in real time and make adjustments if needed. Once a show starts, it could give us a feel for what our customers react to, positive or negative. It could also give employees here at headquarters a chance to see for themselves what goes on at a show like this, to see how their efforts make a difference.\"\n\nWhile she was talking, several other team members began pointing out additional applications and possible refinements. As they continued to talk animatedly, Peter turned to me. \"We've never done anything like this before, Jess. We'll test it out for Expo; then, if it works the way we hope, it will give us a new way to make our marketing efforts at the next big show.\"\n\n\"That's really something,\" I said sincerely. \"I'll bet Mr. Moffatt will be impressed when he sees it.\"\n\nAt the mention of Mr. Moffatt's name, Debby jerked her head up with a sour look on her face. \"I wish he'd be impressed enough to recommend Peter, not Scott Benson!\" she blurted out. Then she clapped her hand over her mouth in embarrassment when she remembered that I worked for Mr. Moffatt. \"I didn't mean that the way it sounded,\" she said defensively, but it was clear to me that she had meant every word. And while I didn't say anything, I wholeheartedly agreed with her.\n\nBut Debby's comment seemed to set off a storm of emotions, and others began to chip in with their own thoughts. Peter quickly spoke up in an effort to diffuse the situation. \"We're all a little tense about what may happen, but it's out of our control. Let's just concentrate on the things that are our responsibility and let senior management do whatever it's going to do.\"\n\nOne of the others piped up, \"Yeah, but if Scott winds up with the VP job, life here is going to be a living hell!\"\n\n\"That's right,\" another said. \"Why can't they see what a terrible leader Scott would make?\"\n\nI was watching Peter and I saw his head snap up at that last comment. \"What if they could see?\" he said. \"What if they had a chance to see the real Peter in action?\"\n\n\"That would be perfect,\" someone said, \"but how could we make that happen?\"\n\nPeter explained his idea and the office became a Babel of excited voices asking questions and tossing out ideas. I leaned back against a wall and watched the interplay. After a while the objections coalesced into a plan and their excitement transformed into purpose. When the hubbub had pretty well subsided, Peter held up his hand to get everyone's attention. \"Listen, people, there's something all of us need to understand. What we're talking about here might open some eyes in the executive suite, but it might also backfire horribly. So let's agree right now that if anything happens, I'm the one who'll take the fall. We need to set this up so no one else's role in this is visible.\"\n\nImmediately there was a storm of protest, but Peter held firm and finally the rest grudgingly agreed. I think that while they were loyal to Peter and wanted to back him, at heart none of them could afford to lose their jobs if their little ploy went sour. But from my perspective, I thought it was admirable that Peter wanted to protect his team, even at the risk of putting his own job on the line.\n\nShortly after that Peter ended the meeting and sent everyone home, but he asked me to stay behind. When everyone else had gone, he looked at me carefully. \"Jess, if this crazy scheme has any real chance of working, you're going to have a critical role. We can try to hide your involvement, but there's a good chance that someone could figure it out. Are you sure you want to take that risk?\"\n\nI thought about it, asking myself how I really felt. I knew that Scott would make a terrible VP and that working as his executive assistant would be intolerable. I also hated what Scott had done to Peter, and it made it even worse that Scott had used me to deliver his message. Those thoughts mixed with memories of my own failed marriage, and they only increased my sympathy for Peter and my determination to help him.\n\n\"Count me in,' I told Peter firmly. \"I want to help you any way I can.\"\n\n\"Thanks, Jess,\" he said. \"That really means a lot to me.\"\n\nThe day before Expo officially opened, Peter and others of his team flew out to Vegas to make the final preparations. Once the show officially opened, it would be non-stop demonstrations, customer meetings and a never-ending flow of visitors milling through Magnetadyne's massive exhibit.\n\nAfter Expo launched, whenever I had a lull in my work I'd wander down to the control room of the trial Peter's team had set up at headquarters to get an update on what was happening. I could sit in front of an extra-large monitor and watch a live feed from the Expo floor. I frequently spotted Peter working with our product demonstrators or consulting with some of the display people. The only time I saw Scott was when the monitor was switched to the hospitality suite. There you could often catch him schmoozing with a purchasing executive or senior researcher from one of our customers. From what I could see, I had to admit that Scott seemed to be doing a good job.\n\nPeter's plan wasn't scheduled to go into motion until the evening of the last day of Expo. He wanted to make sure that nothing would interfere with the company's sales efforts; he also wanted to catch Scott when the pressure was off and his guard might be down.\n\nBut for the small group of us aware of the scheme, the tension kept mounting as the deadline approached. Everything had been carefully scripted and timed to the minute. It was nerve-wracking to wait, but there was nothing more we could do.\n\nOn the last day of Expo I had stayed at my desk, not wanting to get in the way. When my phone finally rang late that afternoon, I almost jumped out of my seat. When I answered, no one was on the line, and I knew that was my signal to start. I quickly entered Mr. Moffatt's office to retrieve his smartphone. My boss had many strengths but communications technology wasn't one of them. He seldom used his smartphone and usually left it at the office when he went out of town. I had already checked to be sure he'd done so this time; now I picked it up and quickly thumbed in a text message. Once I had everything keyed in, I hurried down to the control center Peter's team had established. There were still several steps before I did my thing.\n\nThe big monitor was displaying the view from the hospitality suite. Scott and the people from his team were milling around, most with a drink in their hands, enjoying the successful completion of another major show. Peter was there too, but only a few of his team members were present.\n\nWe could see Peter check his watch; then he looked up to where he knew the cameras were located and gave a small nod. The game was afoot!\n\nDebby, the woman I'd met earlier in Peter's office, bent over the microphone in front of the monitor and responded, \"Roger that, we are go for launch.\" It was obvious that Peter had heard her through the small microphone in his ear because he nodded again. She flipped a switch and spoke quietly, \"Commence stage one.\" One of Peter's people in the room responded with a surreptitious nod, then went over to one of Scott's salesman. He stuck out his hand to the salesman and began offering his congratulations. Even at a distance we could see the smile break out on the salesman's face. \n\nDebby toggled the speaker switch to a different setting and repeated the same instructions. As we watched, one of Peter's product demonstrators strolled over to another of Scott's people and began talking to him. The man's face took on a look of surprise, and although we couldn't hear anything, it appeared obvious that he was asking for confirmation.\n\nSeveral other members' of Peter's team repeated the process, and we could see the excitement starting to build among Scott's team.\n\nDebby glanced over her shoulder at me, her mouth taut. \"The word is starting to spread,\" she said. \"Get ready.\"\n\nAs I watched the screen closely, Peter made a slight adjustment to something under his jacket and suddenly we could hear the rustle of material as he walked over to his adversary. \"Well, Scott,\" he said, extending his hand, \"it looks like you've won. Congratulations.\"\n\n\"What are you talking about, Peter?\" Scott snarled suspiciously, refusing to take the proffered hand.\n\n\"I just heard that Mr. Moffatt announced his retirement at the Executive Committee meeting this afternoon. I also heard that the Committee elected you to be his successor,\" Peter said.\n\nOn the screen, we could see Scott looking at Peter warily. \"I haven't heard any such thing. What kind of game are you trying to play, Hammill?\"\n\nJust then, one of Scott's people came over and began clapping him on the back. \"Way to go, boss! We just heard the news.\"\n\n\"What news? What are you talking about?\"\n\nThe salesman was undaunted. \"It's all over the show, Scott. You're going to be the new VP of Sales and Marketing!\"\n\nAs Scott looked at him uncertainly, another one of his people came up to offer congratulations. Debby zoomed the camera in on Scott's face, and we could clearly see exultation warring with hesitation. Scott gave a little hand gesture.\n\nDebby looked back at me. \"That's your cue,\" she said. I held up Mr. Moffatt's smartphone and clicked SEND on the text message I'd prepared. I noticed that my hands were slightly sweaty.\n\nIt was easy to tell when the text went through because Scott jumped as though he'd been shocked. Quickly he grabbed the smartphone out of his pocket and checked the text he'd just received. I knew what he was reading because Peter and I had carefully composed it:\n\n<blockquote>Congrats, Scott. At Exec Comm today, I announced my retirement. You will succeed me in the VP role. Will talk tomorrow in my office. Moffatt.</blockquote>\n\n\"Yes!\" Scott yelled, pumping his fist in the air. \"I knew it, I knew it!\" He shoved his phone at Scott and said, \"Read it and weep, Hammill.\"\n\nImmediately, more of his people began crowding around Scott. People eager to show their loyalty maneuvered to shake his hand and make obsequious compliments. Someone brought over a bottle of champagne and glasses for a toast, while another went to the sound board and switched the music to a raucous pop tune.\n\nAs the alcohol flowed and the impromptu party began to swing into motion, Peter forced his way back to Scott's side and returned his smartphone. \"Well, Scott,\" he asked, \"do you have any big changes in mind, or will you be continuing the course that Mr. Moffatt set?\"\n\nScott gulped down his glass of champagne and then leaned toward Peter, his face taking on an ugly expression. \"You better believe there are going to be changes. Moffatt was a fat old windbag who couldn't sell pussy to the French Foreign Legion. I'm going to shake things up big time, starting with the Marketing group. Moffatt tolerated mediocrity way too long; now I'm going to start clearing out the dead wood. And in case you haven't already guessed it, Peter, my philosophy is that the first place to look for rot in a department is at the top. So you might want to polish up your resume, understand?\" \n\nWith that, he poked his finger into Peter's chest, and for one heart-stopping moment I thought Peter was going to punch him out and ruin everything. But Peter kept his cool and merely said, \"We'll see, Scott, we'll see.\"\n\nThe group milling around Scott now drew him away from the confrontation, and we could clearly hear Scott's voice over the noise: \"Come on, everybody, it's time to party. Drinks are on me!\"\n\nPeter turned and looked up to face the cameras he knew were hidden there. \"Okay,\" he said quietly, \"I think we got exactly what we were hoping for. Tell all our people to get out of the hospitality suite now; I don't want any confrontations.\" Then he fiddled with the microphone and the sound shut off.\n\nAt the control desk Debby gave a few quick instructions, and we could see Peter's people quietly exiting the suite. When the last of them were gone, she turned and gave me a fierce, triumphal look. \"We did it!\" she exclaimed. \"When Moffatt and the other executives see that little outburst they'll get a picture of the real Scott Benson, and I don't think they're going to like what they see!\"\n\nI felt like dancing; it seemed too good to be true. Yes, there might be some questions about how Scott came to believe he'd been promoted, but I felt that Mr. Moffatt and others would forget them in light of the terrible things Scott had just blurted out. Not only had he insulted Mr. Moffatt directly, but his attack on the Marketing function was an indirect insult as well. I knew for a fact that Mr. Moffatt thought highly of Peter's team's work and had given him favorable marks on his annual review. No, I felt sure those comments would seal Scott's fate.\n\nDespite or perhaps because of the tension we'd all felt, I couldn't sleep well that night, and I wound up going into work early the next morning. Mr. Moffatt always held a post mortem after every big show, and I couldn't wait to see how this one went.\n\nThere was no one around in the executive suite when I got to the office, so I decided to run down to Peter's area to see if any of his team was there. But when I got to the control room, I was shocked to find Debby bent over her keyboard, crying her eyes out.\n\n\"Debby, Debby,\" I asked urgently, \"what is it? What's wrong?\"\n\nShe looked up at me with bloodshot eyes and cried, \"It's gone, it's all gone!\"\n\n\"What's gone?\" I asked apprehensively.\n\n\"All the footage from the hospitality suite last night,\" she said. \"I had it all stored on a server, and during the night the server went down. Now it's all gone and we don't have a back-up. Everything's ruined!\"\n\nI heard a sound behind me and looked up to see Peter come in. He'd obviously overheard Debby's words because his face had turned pale. \"What are we going to do, Peter?\" I asked.\n\nHe slowly shook his head from side to side. \"I don't know what we can do. This could turn out bad, very bad.\"\n\nThen, to my amazement, he straightened up, went over to Debby and began to console her. \"It's alright, Deb,\" he said gently. \"It wasn't your fault. You system worked perfectly and you did a wonderful job keeping everything on plan. Sometimes bad things just happen.\"\n\n\"I should have made a back-up,\" she sobbed.\n\n\"Those servers never give us any trouble,\" he said soothingly. \"No one could have expected a system crash.\"\n\nHe looked up at me. \"You better get up to your office. If there's any way you can stall Mr. Moffatt, that would be great. I'll try to think of something.\"\n\nI nodded and headed back to the elevator, fighting to hold back my own tears. Not only did we not have Scott's incriminating show of arrogance and disrespect, but now Peter would have to try to explain why he had misled his fellow director. Everything that seemed so perfect only a short while ago now seemed to have turned to ashes.\n\nWhen I got off the elevator I hurried to my desk and tried to fix my appearance so Mr. Moffatt wouldn't see how upset I was. But I needn't have worried: no sooner had I gotten settled than he came striding in, and it was immediately obvious that he was extremely angry.\n\n\"Ms. Martin, call Scott Benson's office and get him up here immediately,\" he barked.\n\nWith trembling fingers I dialed Scott's office and got Karen. After I hung up, I poked my head in Mr. Moffatt's office. \"His secretary said he isn't in yet,\" I told him. \"She said he was late getting back from Las Vegas last night and hasn't made it in to the office.\"\n\n\"Well, tell her I want to see him the instant he arrives,\" he said angrily. \"And then get Peter Hammill up here.\"\n\n\"Yessir,\" I said, trying to keep my voice from trembling.\n\nI called Peter's office and he answered the phone. \"Oh, Peter, Mr. Moffatt wants you and Scott up here ASAP,\" I said. Then I lowered my voice. \"And he's madder than a hornet's nest,\" I added.\n\nI heard Peter sigh, and then he said in a resigned tone, \"Alright, Jess, I'll be right there.\"\n\nWhen Peter got up to the office, his face had the look of a condemned man. He gave me a weak smile and walked in to meet his fate. \"It'll probably be my fate too,\" I thought, \"when Mr. Moffatt finds out what I did.\"\n\nThe door to Mr. Moffatt's office was open so Scott could join the meeting, and I don't mind admitting that I was eavesdropping. But it still wasn't easy hearing what was being said because of the loud beating of my heart.\n\nNormally Mr. Moffatt was a real gentleman, but today there were no formalities. \"What do you know about the shenanigans that went on at the Magnetadyne hospitality suite yesterday evening?\" he demanded of Peter.\n\n\"Well,\" Peter began, \"after Expo formally ended, we all congregated back in the hospitality suite to unwind before going back to our rooms to pack. Then . . .\"\n\nBefore Peter could continue, Scott Benson burst into the office, looking a little rough around the edges but wearing a smug smile on his face. I saw him give Peter a sneer before turning to Mr. Moffatt. \"Sorry I'm late, boss, but the celebration last night got a little wild.\"\n\nMr. Moffatt stared at him angrily. \"And just what were you celebrating?\" he demanded.\n\nScott looked at him oddly. \"My team wanted to celebrate my promotion to VP to succeed you after you retire,\" he said as though Mr. Moffatt was a school boy.\n\n\"What are you talking about, Benson? I haven't announced any plans to retire.\"\n\n\"Sure you did,\" Scott replied cockily, \"you announced it at the Executive Committee meeting yesterday.\"\n\n\"I most certainly did not,\" Mr. Moffatt burst out, \"nor was there any discussion of any successor.\"\n\nI stole a glance at Peter. He wasn't enjoying Scott's discomfort because he knew where this conversation would inevitably lead.\n\nBut Scott was not to be dissuaded. \"Of course you did,\" he declared, and, pulling out his smartphone, he held it up and stated smugly, \"I have your text message right here.\"",
        "Mr. Moffatt looked at him with astonishment. \"I never sent you any such text,\" he said flatly.\n\n\"Sure you did,\" Scott said, activating his phone, \"I'll show you.\" Holding the phone in one hand he used the other to call up the list of his text messages. Then he cursed and began to scroll frantically through the list. Finally he stopped and looked up. \"It's been erased!\" he said angrily. \"Someone must have deliberately erased it.\"\n\nI thought I spotted a faint smile on Peter's lips, but when Scott turned to confront him, Peter's face was a blank.\n\nBut Scott wasn't through. To everyone's astonishment he reached across Mr. Moffatt's desk and boldly snatched up his phone. \"Not even password protected!\" I heard him mutter as he proceeded to call up Mr. Moffatt's text message function. There was nothing listed. \"Where are all your texts?\" Scott demanded loudly.\n\nI'd worked with Mr. Moffatt long enough to know that he was growing angrier by the second. \"I don't send text messages. If I want to communicate with someone, I call them.\"\n\nScott looked around accusingly. \"Somebody sent me a text message announcing my promotion, and now they've erased the evidence on my phone and on yours!\" He stared at Peter, then turned his head in my direction. I quickly ducked back behind the door.\n\n\"Young man,\" Mr. Moffatt thundered, \"none of this is important. We're having this meeting because I want to know what went on in the hospitality suite last night. Would you care to explain?\"\n\n\"There's really nothing to explain,\" Scott said hastily. \"After somebody misled me into believing I had been promoted, my team and I had a little celebration, that's all. It wouldn't have happened if I hadn't been the victim of a malicious prank.\"\n\n\"I see,\" Mr. Moffatt said somewhat ominously. Then he looked up. \"Ms. Martin, would you come help me, please?\"\n\nWhen I hurried to his side, he pointed at his computer. \"Can you set this damned thing up so we can look at some pictures I got by email?\"\n\nI quickly went to his keyboard and expanded the window to full-screen mode. \"It's all set,\" I assured him.\n\n\"Good,\" he said. \"Now, please check my email for one from Lucas Masterson.\" As I did so, he looked at Scott and Peter. \"Does the name Lucas Masterson mean anything to either of you?\"\n\nScott quickly piped up, \"Of course. Lucas Masterson is president of Masterson Industries, our biggest single customer.\"\n\n\"Very good, Scott,\" Mr. Moffatt said patronizingly. \"And would you agree that we would always want to impress Mr. Masterson with our professionalism and competence?\"\n\n\"Of course,\" Scott said with a puzzled look on his face.\n\nNow Mr. Moffatt's tone was low and menacing. \"Late last night I received a call from Lucas, who's an old friend of mine. He wanted to know if this Expo was typical of the type of behavior we condone at Magnetadyne. When I professed my ignorance, he sent me an email with some photographs he took when he went looking for someone from Magnetadyne who could answer a question. Ms. Martin, would you display those photos for us?\"\n\nHesitantly I clicked to start the slide show in motion. The first picture showed a group of people from our Sales department milling around the bar at the hospitality suite. It appeared that people were helping themselves to the liquor there.\n\nThe next slide showed Scott standing on a small stage that had been erected next to the bar. He was drinking from a bottle and leading the people below him in a cheer. I noted that there was a banner with the Magnetadyne name and logo directly behind the stage. The story was that Mr. Moffatt had personally designed the company's logo: an upright hand with the index finger making the number one sign. I knew Mr. Moffatt wouldn't be happy to see that included in the picture.\n\nBut the next photo was worse. Now in addition to Scott there were two young women standing on either side of him, and he had his arms around both. I glanced over at Peter and mouthed, \"Who are they?\" He shrugged his shoulders in ignorance.\n\nThe next picture showed Scott dancing with the two women on the stage. Looking at them, my impression was that all three of them were quite drunk. That impression was reinforced by the fact that the two women appeared to be performing a striptease, to Scott's obvious delight.\n\nWhen the next photograph flashed onscreen, a collective gasp filled the room. One of the nymphets had lost all of her clothes, and Scott was fondling her to the cheers of the audience.\n\nBefore I could stop it, the next shot came onscreen revealing Scott using a three-dimensional model of the company logo like a dildo on the complaisant young woman.\n\n\"Turn it off!\" Mr. Moffatt shouted, and I quickly shut off the monitor to hide the offending image.\n\n\"Mr. Benson, not only did you disgrace yourself last night, but you brought disgrace on Magnetadyne Industries as well,\" he thundered.\n\nScott's face was red, and he angrily shouted, \"Wait a minute, I'm the victim here. None of this would have happened if I hadn't been tricked into believing I'd been promoted.\"\n\n\"Thank God you weren't promoted!\" Mr. Moffatt roared. Then he regained his composure somewhat. \"It doesn't make the slightest difference to me why you acted the way you did. The fact remains that your behavior was totally outrageous and completely unacceptable. Even if the head of our best customer hadn't walked in and seen the debauchery, you would still have been setting a terrible example for your own people.\"\n\nHe turned abruptly to me. \"Ms. Martin, get HR and Security up here right away. Have them escort Mr. Benson back to his office and tell them he has fifteen minutes to remove any personal items from his desk. Effective immediately, Mr. Benson's employment with Magnetadyne is terminated for cause.\"\n\n\"Yessir,\" I squeaked, and hastened to make the calls.\n\nBehind me, I heard Scott yelling. \"This is all your fault, Hammill. You set me up!\" But before he could do or say anything more, one of our Security personnel arrived and began to escort Scott away. As they waited for the elevator, Peter came out of Mr. Moffatt's office and walked up beside Scott. I was out in the hallway looking for the HR representative so I was just able to hear what Peter whispered to Scott: \"You fucked my wife, now you're the one who's fucked.\"\n\nScott snarled like an animal, but the Security man quickly stepped between them. The elevator arrived just then with the head of HR, so the three of them got on and rode down, leaving Peter and me behind. As I turned to go back to the office, Peter said quietly, \"When you get a chance, please come see me. I need to talk to you about all this.\"\n\nI assured him I would and then hastened back to Mr. Moffatt's door. \"Is there anything I can do for you, Mr. Moffatt?\" I asked.\n\nHe looked up at me with weary eyes, and I could tell that all this had taken a toll on him. \"Yes, actually there are three things I need, Ms. Martin. First and foremost, please accept my apologies for making you view those lewd photographs. At least I managed to stop them before the shot that showed Scott, um, having sex with that little tramp, but I had forgotten what he'd done in the way of foreplay.\"\n\nI smiled and nodded my appreciation for his gentlemanly sensitivity. \n\n\"The second thing you could do would be to try to get Lucas Masterson on the phone so I can apologize to him again and let him know what steps I've taken this morning to ensure this debacle will not be repeated.\"\n\nI started to go back to my desk, but he stopped me. \"And once you've reached Lucas, could you please get those damned photographs off my computer and phone? I don't ever want to see them again.\"\n\nI nodded and picked up his phone to take it back at my desk. As I did so he gave me a shrewd look. \"I don't know who led Scott to believe he'd been promoted,\" he said and my heart leapt into my throat. \"But I think I owe him - or her - a debt of gratitude for helping reveal Scott's true nature.\" I couldn't tell for sure, but I think I saw the slightest of grins on his face before he resumed his normal manner. \"Now about that phone call to Lucas . . .,\" he said, and I scurried off to my desk.\n\nBy the time lunch rolled around, the news of Scott's dismissal was all over the building, and stories about what had caused it were rampant. I did my best to avoid any conversations about the subject; I figured that I had been way too close for comfort and didn't want any more conjecture about my role than there already might be.\n\nBut I did make it a point to go by Peter's office. I wanted to let him know what Mr. Moffatt had said to me because I thought it might reassure Peter that there was no other shoe about to drop.\n\nI expected that he would be greatly relieved, but after I'd finished I still saw the weariness etched on his face and that bothered me. Nevertheless, I asked him the question that had bothered me ever since I saw the incriminating slide show this morning: \"Peter, who were those two women with Scott?\" \n\nHe gave me a little smile. \"I don't know for sure, but I suspect they were 'freebirds,'\" he said. When he saw my confusion, he went on, \"We get them at almost every trade show. They're people who sneak into the show looking for free food, free booze and a free party in the hospitality suites. And if the conditions are just right, they also might be up for a little free sex.\"\n\n\"You've never . . .\" I started, but he waved me off immediately. \"Never,\" he said firmly. \"In the first place, only a fool would risk exposure to whatever diseases they might have. Second, I'm a faithful husband and . . .\" He stopped abruptly and his face grew bitter. My heart went out to him. \n\n\"So when do you plan to confront her?\" I asked gently.\n\n\"When I get home from work today,\" he said wearily. \"I've been working with an attorney and I'm going to give Callie the papers in person tonight.\"\n\n\"I'm so sorry, Peter,\" I said softly. \"I've been so focused on this mess with Scott that I almost forgot about her.\"\n\nThen a thought came to mind. \"Peter, I don't know if it would help, but I haven't yet deleted those photos that Lucas Masterson took. Would you like me to print out a copy for you?\"\n\nHe thought about it and then nodded. \"Yes, please. I'd like to show Callie just what kind of man she chose over me,\" he said grimly.\n\nWhen I returned to his office to give him the prints I'd made, he was already preparing to leave. \"I want to be waiting for her when she gets home,\" he told me. \"Besides, I might as well get out of here - I won't be worth a damn until I get this over with.\"\n\n\"I understand,\" I told him. \"But if you'd like to talk about it afterwards, I'll be here.\"\n\n\"Thanks,\" he said, \"I'd like that. You're really the only one who knows what's going on.\"\n\nThat evening Marge invited me to go out for a drink but I declined. I was exhausted from the drama that had played out that morning, and now I was concerned about Peter. I couldn't seem to get my mind off the confrontation he was facing, and I knew I would be lousy company for Marge.\n\nFor the second night in a row I had trouble sleeping, and once again I wound up going in to the office early in hopes of seeing Peter. I was waiting outside his office when he arrived, and he thanked me for the cup of coffee I'd brought for him.\n\nWhen we were seated on the sofa and arm chair in his office, I couldn't wait any longer and asked him how things went with Callie. \"About like you'd expect,\" he said, and proceeded to tell me the whole story.\n\n<blockquote>I was waiting at the kitchen table when Callie got home from work. She was startled to see me; usually, I get home much later than her. Anyway, she came over, sat down across from me and asked me what was going on. I knew I couldn't put it off any longer so I handed her an envelope.\n\n\"What's this?\" she asked, but I just told her to see for herself. She opened the envelope and began to look at the screen-captures I'd taken from your video of Scott's screened-in porch. When she saw the first shot she wasn't sure what she was seeing, but when she turned over the next photo, she gasped in shock. Then she hastily thumbed through the rest of the set before looking up at me. Her face was red, and I wondered whether she was more upset about what she'd done or the fact that she'd been caught doing it.\n\n\"Peter, I know what I did was wrong but this was just a one-time mistake I made. You'd been so tied up at work and it had been so long since we made love that when Scott came on to me I just couldn't help myself.\"\n\nI shook my head in disgust. \"That's not true and you know it, Callie. This wasn't a single moment of weakness, it was an ongoing affair.\"\n\n\"No, I swear, this was the only time it happened.\"\n\nInstead of arguing with her, I held up my cellphone and started to play the video I'd copied from your phone. The expression on her face was priceless as she went from discomfort to defensiveness to outright anger as she was forced to watch her antics on the small screen. But when the soundtrack began to replay her laughter at making me her cuckold, she was embarrassed enough to yell, \"Turn it off, dammit!\" \n\nI let it play a moment longer, then stopped it.\n\n\"Alright, fine, you know about us. And I suppose those are divorce papers in the other envelope?\" she asked coolly.\n\nI pushed it across the table and she quickly riffled through the pages. I thought she'd be taken aback, but she seemed pretty nonchalant about being served. \"It doesn't really matter,\" she said. \"I was planning to file for divorce myself as soon as Scott gets that big promotion at work.\"\n\n\"So you tossed our marriage away because you wanted the money and prestige of being married to a big executive?\" I asked bitterly.\n\n\"Look, Peter, let's be realistic about this. You've been working all those long hours - and ignoring me in the process, I might add - but let's face it: you were getting absolutely nowhere.\"\n\nThat really made me angry. \"I was working those long hours to make a better life for the two of us!\" I said heatedly. \"I thought that was what you wanted.\"\n\nShe gave me a patronizing smile. \"That's what I thought for a long time, but while I was redecorating Scott's home he gave me the real lowdown on you and your career. You're just spinning your wheels at Magnetadyne while he's about to jump to the next level.\"\n\n\"On that video it looked to me like you were much more interested in his cock than his career path,\" I said nastily.\n\nShe had the decency to blush. \"Maybe I like both of them better than what you have to offer,\" she snapped back at me.\n\nSuddenly I felt old and tired. I rubbed my face. \"So you and Scott plan to get married as soon as our divorce is final and he lands that big promotion?\" I asked.\n\n\"Exactly,\" she said.\n\n\"What if I were to tell you that Scott isn't going to get that big promotion after all?\"\n\nShe gave me a calculating look. \"I'd say you were a pathetic, clumsy liar.\"\n\n\"What if I were to tell you that Scott was fired for cause from Magnetadyne this very morning?\" I asked.\n\nI saw fear flit across her eyes, but she recovered quickly. \"That's impossible,\" she said loudly. \"He's doing great and his sales team is setting records. There's no way they could do without him.\"\n\nI guess I have a sadistic streak in me because I found myself enjoying this. I reached in my jacket pocket and pulled out another envelope. \"What's that?\" she demanded.\n\n\"Just some candid shots of your boyfriend taken at Expo in Vegas earlier this week,\" I said. \"You better have a close look because I can assure you that Mr. Moffatt was very interested when he saw them this morning.\"\n\nI opened the envelope and showed her the first photo. She relaxed a little. \"Nobody's going to complain about a sales director blowing off a little steam after a successful trade show,\" she said.\n\nThe second photo also elicited no comment from her, but I could see that she was growing apprehensive. When I turned the next photo over, she gave a little gasp. \"Who are those two floozies with Scott?\" she asked jealously.\n\n\"Beats me,\" I said. \"I've never seen them before in my life. But Scott seems to be on very close terms with them,\" I added, and flipped the next shot over.\n\nShe said nothing, but her face grew dark as she saw the impromptu striptease. And when she saw the photo of Scott diddling one of the women with the company logo, she slammed her fist into the table. When I turned over the last two photos showing him performing various sexual acts on the two drunken women, she broke down and began to cry. \"How could he cheat on me that way?\" she blubbered. \"How could he humiliate me in front of all those people?\" \n\nThe irony of her reaction left me speechless.\n\nAfter a while she raised her head and stared at me through reddened eyes. \"Is it true?\" she asked.\n\n\"Is what true?\" I snapped.\n\n\"Scott told me you were sleeping with your boss's secretary.\"\n\n\"Is that what this is all about?\" I asked in astonishment. \"You started an affair with Scott to get revenge on me?\"\n\n\"I've seen her. She's so beautiful I figured you couldn't resist her.\"\n\n\"I hate to break it to you, but not everyone has the same morals as you and Scott. For your information, I have always been 100% faithful to you.\" I stared at her and shook my head in disgust. \"I can't believe you took the word of a . . . a salesman!\"\n\nHer head went back down and she began to cry piteously.\n\nI got up from the table, grabbed my keys and went out to get myself some dinner. When I returned, I found that Callie had packed her personal things and left.</blockquote>\n\nI felt so sad listening to him. \"That must have been just awful for you, Peter!\" I said when he had finished. \"How are you doing now?\"\n\n\"To be honest,\" he said quietly, \"my emotions are all over the place. I feel a lot of bitterness toward Callie for cheating on me, yet I can't help feeling depressed that my marriage is ending. I'm glad that Scott got what he deserved, but I feel wrung out by the whole experience. More than anything else, Jess, I just feel exhausted.\"\n\n\"I know it's bad, Peter, but I promise you that it will get better,\" I said.\n\nAlthough the executives tried to keep a lid on the circumstances leading to Scott's ignominious dismissal, there were too many people who knew at least some of the facts, and the story was the number one subject of gossip for the next few weeks. Ironically, it was Scott's old team that was the most eager to dish the dirt, perhaps in revenge for the way he had treated them as their boss. Peter's team members generally kept their confidences, but it was clear they felt like they were delighted by the outcome.\n\nUnfortunately, the back-story about the role Scott had played in Peter and Callie's divorce also became common gossip in the halls. No one asked Peter about it directly, but whenever he left the room, furtive comments and hushed conversations began. I hated that for his sake, but there was nothing I could do to protect him. Knowing as much as I did, I could only keep quiet on the whole matter. I did try to keep in touch with Peter as often as possible to make sure he was doing okay. I found myself looking for excuses to drop by his office during the day or to eat lunch at the table with his team. \n\nEvery so often, Marge would come by and take me to her favorite tavern after work. In her position as the CEO's assistant, I expect she probably knew almost as much about what had happened as I did, but she never brought up the subject at our little outings. She did make a point of asking me how Peter was doing, and I tried to keep her posted on what I'd seen and observed. She also kept asking how I was doing, which seemed odd to me because I had been only peripherally involved. But she always asked and I always reassured her that everything was fine.\n\nAbout four months later, I got a call one afternoon from Debby, the woman who had run the control desk for Peter during Expo. She told me that his team was holding a little surprise celebration for Peter after work and wanted to know if I'd like to join them. When I asked her what the occasion was, she told me that Peter's divorce had just become final. Of course I told her that I'd be there.",
        "The celebration took place in the private room of a bar that many of the Marketing people frequented. When I got there the room was festooned with silly banners sporting messages like \"Free at Last,\" \"Peter is Available\" and \"Look out Ladies.\" I thought it was all pretty juvenile and in bad taste, but apparently everyone else felt differently.\n\nThe noise level was high, thanks in part to several kegs of beer that were quickly being drained by the crowd. I thought it was nice that his team held Peter in such high regard, but when I saw him in the crowd, it looked to me like he wasn't enjoying the celebration as much as the rest of them.\n\nSomeone tried to get him to make a speech, and after futile attempts to resist he clambered up on a table. But instead of making humorous remarks, he kept things short and to the point. After thanking everyone for the party and paying tribute to their efforts again at Expo, he invited them all to carry on enjoying themselves. Then he quickly jumped back down into the crowd.\n\nAs the revelry resumed, I quickly made my way over to him, and we grabbed an unoccupied table and sat down. \"Thanks for coming, Jess,\" he said. \"How do you like the party?\"\n\nI looked carefully at his face and saw the lines were still there around his eyes. \"More to the point, how do you like it, Peter?\" I asked.\n\nThe jovial expression that he'd been trying to maintain slipped away, and I could clearly see how unhappy he was. \"I know I'm supposed to be all fired up and excited about being a bachelor again, but honestly, what I feel right now is depressed, and I'm not even sure why.\"\n\n\"I think I can tell you, because that's exactly the way I felt after divorcing my husband. My guess is that you're down because you're mourning the loss of your marriage.\"\n\n\"But that doesn't make sense, Jess. I don't want to be married to Callie any more, not after the things she did and the way she treated me. There's no way I could ever trust her again,\" he said fiercely.\n\n\"Of course not,\" I said soothingly. \"But what you're mourning is something different. You probably always pictured yourself in a committed relationship. Maybe you wanted to start a family at some point. Callie destroyed all that. It's no wonder you feel depressed: you've lost the picture of how your life would be.\"\n\nHe looked at me closely for a moment, then nodded slowly. \"There's a lot of truth in that, Jess.\" He looked at me again. \"Thanks for being such a good friend.\"\n\nJust then, some of his workmates came over and grabbed him by the arm. \"This won't do: too much solemnity, too much sobriety. Come on, Peter!\" With that they pulled him away, but as he left he smiled and waved at me.\n\nI soon slipped out the door and headed home. Parties like that aren't my style, but I felt good about being helpful to Peter, and I found myself smiling all the way home.\n\nNow that his divorce was behind him, I kept waiting for Peter to brighten up and come out of his depression. In some ways it was clear that he was on the mend, but that didn't seem to translate into any change in the way he acted, at least toward me. He'd wave and smile when he saw me, and we still seemed to be on the same wavelength whenever we talked. But I kept looking for something more that I never seemed to find.\n\nA week or two later, Mr. Moffatt called me into his office. After asking me to close the door, he gestured to me to have a seat. \"Please keep what I'm about to tell you in confidence, Ms. Martin\" he said. \"You remember that Executive Committee meeting that took place during Expo? Well, I actually did tell the Committee that I was planning to retire. But once I found about the debacle with Scott Benson the Committee asked me to stick around and try to clean up the mess he had made.\n\n\"But now everything seems to be running pretty smoothly, and I'm going to go ahead with my plans to step down. I'll be making the announcement after lunch today, but I wanted to give you advance notice so you wouldn't be caught by surprise.\"\n\nI was shocked at his news but grateful for his courtesy to me.\n\n\"The other thing you need to know,\" he said, \"is that you'll be getting a new boss: Peter Hammill. I hope you'll be pleased at that news.\"\n\n\"Oh, Mr. Moffatt, I'm delighted for Peter, but you've been so wonderful to work for I'm really going to miss you.\" With that I stood up and stepped around his desk to gave him a big hug. He beamed at me and gave me some very nice compliments. Then he asked me to call Peter and have him come up.\n\nWhen the two of them finished their meeting and Peter came out, I made a point of congratulating him on his well-deserved promotion. \"Thanks, Jess,\" he said warmly, \"that really means a lot to me.\"\n\nAs he left the office, his warmth lingered with me for a while but then the feeling began to fade as I gave the whole situation more thought. By the afternoon I was in a blue funk.\n\nAt the end of the day Marge popped her head around the corner and asked me to come with her to the tavern after work. \"Marge, I've got some things I need to do at home,\" I told her, but she wouldn't take no for an answer. I guess part of what makes her so valuable to the CEO is that when she pursues something she is absolutely dogged about it. Ultimately, I gave in.\n\nOnce we were seated in the tavern, she leaned over the table and fixed me with an intense stare. \"Alright, Jess, let's have it: what's eating at you?\"\n\n\"I don't know what you're talking about, Marge,\" I protested.\n\n\"Bullshit!\" she said, which shocked me because Marge almost never curses. \"You've been moping around for the last few weeks like a little kid with a sick dog, and today you're acting like your dog died. I would have thought you'd be happy about working for Peter. Tell me what's wrong.\"\n\nI tried to resist but suddenly something gave way inside and I found myself wiping away my tears while trying to put my feelings into words. \"Peter's promotion is the last straw, Marge. I just don't think I can bear to see him and be so near him every day.\"\n\n\"I don't understand, Jess, why not?\"\n\nI sniffled. \"I know that his wife's affair and their divorce were rough on him, but once the divorce was final, I thought he'd relax around me, maybe want to get together or go out with me. But whenever I see him he still treats me like a friend, like one of the gang. It's killing me.\"\n\nShe looked at me sympathetically. \"You really have it bad for him, don't you? You've always felt that way about him.\"\n\n\"No,\" I protested, \"I didn't have feelings for him when he was married. I mean, I admired him and enjoyed working with him, but it was strictly professional. I'd never let myself get interested like that in a married man.\"\n\n\"For someone who wasn't interested 'like that,' you sure managed to spend a lot of time with him,\" she remarked dryly.\n\n\"But I had to,\" I said. \"He was a key part of Mr. Moffatt's team.\"\n\n\"Uh-huh, sure,\" Marge said patronizingly. \"But after you saw his wife with Scott, the way you thought about him started to change.\"\n\n\"How did you know that?\" I gasped.\n\nMarge just grinned at me. Then her face grew serious again. \"So you thought you had a relationship with Peter, and you hoped it would grow into something special, is that right?\"\n\n\"I guess so,\" I admitted quietly.\n\nShe looked at me in silence for a minute. Then she said, \"You know, you really are a dumb blonde!\"\n\n\"Now wait just a minute, Marge,\" I said angrily, \"you may be a friend but you have no right to speak to me like that!\"\n\nShe folded her arms and leaned across the table. \"I stand by what I said: you're acting like a dumb blonde. Now be quiet and listen to me for a minute. I think half the people at Magnetadyne know you have a major crush on Peter Hammill. But what have you ever done to let him know that?\"\n\n\"I've done lots of things,\" I said indignantly. \"I go by to see him every chance I get. I make it a point to have lunch with his team when he eats in the cafeteria. I . . .\"\n\n\"Isn't that what you did back when he was married?\" Marge asked.\n\n\"Well, yes,\" I admitted, \"but not so often,\" I added weakly.\n\n\"So how would he know that your feelings have changed if your actions don't show it?\" she asked.\n\nBefore I could answer, she demanded, \"Have you ever even touched him?\"\n\n\"No,\" I gasped, \"I would never do that!\"\n\n\"I mean touched him on the arm or the hand - anything to make a physical connection with him?\"\n\n\"I'm sure I have,\" I temporized, but for the life of me I couldn't recall ever having done so. \n\n\"You're afraid to touch men for fear they'll take it the wrong way, aren't you?\"\n\n\"Maybe a little,\" I admitted.\n\nShe continued to gaze at me. Suddenly she asked rhetorically,\"You know what's wrong with you, Jess? The problem is that you're too beautiful.\"\n\nI opened my mouth to speak, but Marge cut me off. \"All your life you've been able to rely on your looks. You didn't have to worry about finding men, they kept coming out of the woodwork for you. I'll bet your first husband found you, not the other way around.\"\n\nI looked down at the table. \"Well, maybe. The first time we met he came up to me at a party in college.\"\n\n\"And that's my point: you've gotten used to being passive, waiting for the guy to make the first move. If he doesn't pass the test, you wave him away, then sit back and wait for the next one to show up.\"\n\n\"But . . .\"\n\n\"And that's not all. The fact is you use your beauty as a shield to keep men away, even ones you might actually be interested in.\"\n\n\"But . . .\" \n\n\"And the reason you do that is not because you're arrogant or egotistical but because you're scared. You're afraid to take a risk, afraid to put yourself out there because you might make a bad choice. So you wind up hiding behind your beauty, hoping that Mr. Right will eventually find you and break through your defenses.\"\n\nI was speechless.\n\nBut Marge wasn't finished. \"And I'll bet the reason you're so scared is because the one man you did choose, the one you thought was Mr. Right, turned out to be the biggest mistake of your life. Ever since you've been afraid to venture out and take a risk again. So even though a part of you is desperate to try to build a relationship with Peter, another part of you says to stay back and wait. All you do is hang around and hope he'll break through your barriers to pursue you.\"\n\nI couldn't look at her.\n\nShe came across the table, gave me a hug and kissed me on the cheek. \"Think about what I've been saying, Jess. Just see if there isn't some truth there.\" Then she left.\n\nThat night I tossed and turned in bed thinking about what Marge had said. Some of it had been painful and not all of it was true, but I had to admit that she'd been right about a lot of things. Finally, sometime in the early morning hours I came to a decision. Even then, I slept only fitfully.\n\nAs soon as I got to work, I made a phone call and then went off to put my plan in action. I didn't know if I was doing the right thing, but at least I wasn't being passive.\n\nShortly after I got back to my desk, Peter came up to meet with Mr. Moffatt again. They spent a long time going over marketing plans together, but finally the session broke up. As he was leaving, Peter stopped by my desk and said, \"I'm really looking forward to working more closely with you, Jess.\"\n\nI took a deep breath and stood up. \"Peter, earlier this morning I met with HR and made arrangements for a transfer. In two weeks I'm going to start working in another department.\"\n\nHe took a step backward as though I'd slapped him in the face. \"But why, Jess? Have I done something to offend you?\"\n\nOut of the corner of my eye I saw Mr. Moffatt standing in the doorway to his office with a look of concern on his face. I focused on Peter.\n\n\"No, Peter, you haven't done a thing, it's me. Over the last few months I've developed strong feelings for you. But the company strictly prohibits relationships between employees and their bosses, and since I intend to pursue those feelings, I can't work for you.\"\n\nOver Peter's shoulder I spotted Marge peeking around the corner, but I kept my eyes on Peter, holding my breath to see how he would respond. He stared at me in surprise. \"But you never said or did anything,\" he said.\n\nI glanced at Marge. \"I know,\" I said, \"but I am now.\"\n\nPeter said nothing, and time seemed to slow down. Then, as I stood there with my heart in my throat, he suddenly stepped forward and grabbed my shoulders in his hands. \"Under the circumstances, I think we can dispense with the customary two-weeks' notice,\" he said, and kissed me with such passion and promise that I could scarcely hear the applause coming from Marge and Mr. Moffatt."
    ],
    "authorname": "FrancisMacomber",
    "tags": [
        "cheating wife",
        "infidelity",
        "unfaithfulness",
        "romance"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/american-beauty"
}