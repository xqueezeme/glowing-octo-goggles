{
    "title": "The Office Team-Building Day Ch. 13",
    "pages": [
        "Office Politics\n\nSitting in my office on an average Wednesday, I found myself distracted. \n\nI was unable to focus on my work for more than a few minutes at a time, and my mind kept returning to events that had recently transpired. Ever since my boss Carmen and I had caught the strategic director Gary sexually harassing my colleague Courtney using a hidden camera in my office, I had been plotting ways to get my revenge. We had the smoking gun: irrefutable evidence that he had abused his position of power and threatened Courtney, in the hopes that she would perform sexual acts on him. Carmen had intervened just in time, saving Courtney from the humiliation of succumbing to his insistent demands, or on the other hand, losing her job. Since that time, the feeling in the office was one of tension, especially between Courtney, Carmen, and me. Gary had made himself scarce, but it wasn't enough; I needed to know he would never bother Courtney (or any of my other colleagues) again.\n\nI had spoken with Carmen about what to do, but she refused to submit the video to HR since she would have to explain the existence of the hidden cameras in my office. And since neither of us had directly witnessed the harassment, we could not make a case against Gary without the video. Furthermore, Gary was Carmen's superior, and she was reluctant to rock the boat since she might find herself out of a job.\n\n\"But we have to do SOMETHING!\" I said, pacing and gesturing wildly in Carmen's office the day after the incident.\n\nCarmen, maintaining her calm demeanour, watched me over the rims of her black-framed librarian's glasses, her long legs crossed, her hands neatly folded on her knee just below the hem of her short black skirt. Her light grey jumper was stretched tightly across her marvelous bust, her nipples poking out sensuously from the woolen fabric.\n\n\"My hands are tied. I'm not willing to sacrifice my job for Courtney's,\" she said simply.\n\n\"I understand that, but... he's just going to do it again!\"\n\n\"Possibly,\" Carmen vaguely shrugged.\n\n\"Doesn't it bother you? Don't you care at all?\" I asked pleadingly.\n\nCarmen eyed me sternly.\n\n\"Don't question my morals. I will do what is in my power to do, but I will not risk my career. It is Courtney's responsibility to bring this to the attention of the human resources department, and if she does she will receive my support, but I will not be the victim. I'm sorry if that upsets you, but I cannot fight an indiscretion with another indiscretion,\" she finished.\n\nI sat down heavily in the chair opposite Carmen's desk and ran my hands through my hair.\n\n\"Ok, fine. I get it,\" I said, defeated.\n\n\"I'll keep an eye on her, as I know you will. Be smart about this. I know you're a clever boy,\" Carmen said.\n\nShe stood and opened her office door, inviting me to leave. I admired her curvy figure before standing and making to leave. As I passed her, Carmen took my hand and tuned my palm upwards. With her other hand she placed a small object in mine.\n\n\"Don't make me regret this,\" she whispered in my ear, then patted my bottom, ushering me out the door.\n\nAs I made my way back to my office, I slipped the USB stick Carmen had placed in my palm into my trouser pocket.\n\n******************\n\nI tapped the end of my pen on the report I was reading, recalling these events. Of course, the USB stick contained the video of Gary's perverted proposition to Courtney, but what did Carmen expect me to do with it? I knew that any attempt to implicate her would be met with a stern denial, and I had no proof. I knew that taking the video to HR would be risking my job as well as Courtney's, not to mention the invasion of privacy... how would I explain having hidden cameras in my office? As I contemplated these questions, I heard a soft knock on my door.\n\n\"Come in,\" I said.\n\nThe door opened and Courtney popped her pretty head in. She had been absent the day before, no doubt afraid to come back after being harassed by Gary.\n\n\"Hello,\" she said in her soft, singsong voice. \"Have you got a moment?\"\n\n\"For you, of course,\" I smiled, gesturing to a chair.\n\nCourtney smiled and entered. She wore a snug pink blouse and black trousers with high heels. Her buttons were undone just to the point where I could see a tiny bit of her gorgeous cleavage. She sat and glanced about nervously.\n\n\"Are you feeling ok? I noticed you were away yesterday,\" I began.\n\n\"Yes, I'm fine. I... Gary, he... he acted inappropriately towards me after you left on Monday. Carmen came to my rescue, but I just didn't feel like I could come in yesterday. It was so... so creepy and awful,\" Courtney shuddered as she spoke. \n\n\"I remember you told me to get him to meet me in this office. Why?\" she asked.\n\n\"Um, it was because I know Carmen would be able to keep an eye on you. You can see my office more easily than yours from where her office is. I told her to watch for anything suspicious when I left,\" I lied.\n\n\"Oh... well thank you. That was very kind. She came in just in time.\" Courtney was clearly uncomfortable recalling the incident, and it made me furious to think of Gary groping her and advancing on her with his filthy cock out.\n\n\"Good, good. Courtney, is there anything I can do to help?\"\n\n\"Thank you, but no, I don't think so. I've got to stand up to him. I think I might go to HR about this. I really don't want to lose my job, but I don't think I can handle something like that happening again,\" said Courtney, fidgeting and squirming in her chair.\n\n\"Listen, can you hold off on doing that for a few days? I have an idea that may solve your problem,\" I suggested.\n\n\"No, I don't want to get you in trouble. I don't want to cause any fuss-\"\n\n\"-It's no fuss. Please, trust me. Just a couple days.\"\n\nCourtney looked me in the eyes for a moment.\n\n\"What are you planning?\"\n\n\"I can't say. Just... trust me, ok?\" I said hopefully.\n\nShe sighed, her huge bust heaving and pulling at the buttons on her blouse.\n\n\"Ok,\" she said, leaning forward and touching my knee. \"... but only because it's you.\" \n\nShe smiled weakly and stood to leave.\n\n\"Thank you,\" she said softly before turning and walking back to her office.\n\nI turned back to my desk and resumed tapping my pen against its surface, lost in thought. \n\nPlotting.\n\n*****************************************\n\nOur company was participating in an industry conference in the latter half of that week, which happened to be hosted close to our premises. It consisted mostly of talks, presentations, workshops, and social events for networking. Although I was not required to attend, I requested that I accompany Carmen on the penultimate afternoon.\n\n\"I don't know why you would want to come to this. It's usually dull, and full of stuffed shirts,\" said Carmen, holding a teacup to her lips.\n\n\"Your shirt is looking rather stuffed, Ms. Beaumont,\" I jibed, admiring her bust straining against her light blue blouse underneath a navy blazer.\n\n\"Yes, very clever,\" she smirked sarcastically at me, then turned her eyes to the crowd of suits milling about in the conference room.\n\nThe last presentation of the afternoon had ended and people were preparing to make their way to the hotel bar for cocktails. I loosened my tie and put my hands in my pockets, scanning the faces. I found the one I was looking for.\n\n\"There's Gary. And there... that's his wife, isn't it?\" I tipped my chin, indicating the direction I was looking.\n\n\"Yes. Sylvia Voynov,\" confirmed Carmen.\n\n\"Wow. You wonder why he goes looking for it elsewhere. She's gorgeous.\"\n\nMrs. Voynov looked a good 15 years younger than her middle-aged husband. She was petite, slender, her straight blonde hair tied tightly back from her forehead in a bun. She wore a grey suit jacket and skirt with high heels, which showed off her perfectly shaped legs. Her white blouse was unbuttoned alluringly low, but not so much as to be unprofessional, and the swells of her breasts were visible under her shape-hugging jacket. Her eyes were light blue, and her brilliant smile was framed by her ruby red lips, her lipstick managing not to be garish despite the contrast with her business attire. She had beautiful eastern European features, with high, sharp cheekbones and doe eyes. Those around her were positively captured by her presence.\n\n\"Alright then, no need to stare,\" said Carmen with a hint of jealousy.\n\n\"Sorry, but... what is wrong with that guy? Is he mental?\" I was incredulous.\n\n\"No, he's just a pervert. It wouldn't matter who he's with, he just enjoys having power over others.\"\n\n\"I guess so. And something tells me she didn't marry him for his looks or his charming personality.\"\n\nSylvia was chatting with a group of men as her husband looked about disinterestedly.\n\n\"I've heard rumours that she's got more clout with the board than he does. He's probably not the only one that enjoys power,\" I said, referring to stories I'd heard about Mrs. Voynov's influence in our company.\n\n\"He's got where he is because of his family. She saw an opportunity to move into a position of authority quickly and efficiently through him. They're using each other, really. The thing is, I think they both know it, and neither of them minds,\" Carmen said, finishing her tea.\n\n\"The rumours you heard are true. He has a more senior position in the organisation, but she has much more influence. She's much smarter than he is. She's got most of the board members eating out of her hand,\" continued Carmen.\n\n\"Interesting. Do you think you could introduce us at some point this evening?\" I asked.\n\nCarmen narrowed her eyes and looked at me suspiciously.\n\n\"Why?\" she said, after an evaluative pause.\n\nI didn't think I could get away with lying to my boss, so I decided to be honest.\n\n\"Well, you know how you gave me the USB-\"\n\n\"-Stop. Never mind. I have no idea to what you are referring, and I don't care to know,\" she interrupted meaningfully. \"Now, won't you join me for a cocktail?\"\n\n\"It would be my pleasure,\" I smiled and gestured to the exit. \"After you, my dear.\"\n\n*******************************************\n\nCarmen and I stood near a large window looking out over the night lights of the city. The bar was busy, but not crowded, a collegial buzz permeating the room. Some people were still networking, while others were simply unwinding after the conference. Carmen and I made polite conversation as we watched Sylvia and Gary move about the room. They barely had a spare moment to themselves.\n\n\"I don't like my chances, Carmen,\" I said, swirling my gin and tonic.\n\n\"Be patient. They're here to network, not for pleasure. You'll get your turn,\" she replied, toying with the toothpick skewering the olives in her martini.\n\nI admired Carmen as she gazed across the room, her long, dark hair falling across her cheek, her cleavage pouting invitingly between the 'v' of her blouse, buttoned low.\n\n\"You know, we could always go back to your place for a drink. This can wait,\" I hinted, hoping Carmen would accept my suggestion.\n\nCarmen looked back to me and smirked.\n\n\"Getting cold feet, are we?\"\n\n\"No, honestly. I just thought it would be nice for the two of us to spend some time together... as friends rather than colleagues.\"\n\n\"Oh right, as 'friends'. I doubt it,\" she scoffed.\n\n\"Hey, I take offense to that. Alright, yes, I find you very attractive, that's no secret. But I genuinely enjoy your company... when you're not yelling at me to meet deadlines, that is.\"\n\nShe scrutinised me for a few moments, and her lips were touched with the faintest smile. She opened her mouth to reply, but something caught her eye and she looked away.\n\n\"Here's your chance, darling,\" she said, straightening up and putting her martini glass on a nearby table. \n\nCarmen waved across the room.\n\nSylvia approached us purposefully, Gary trailing slightly behind her. Her hips swung sexily as her dainty fingers clasped her champagne glass.\n\n\"Carmen, so nice to see you,\" she greeted us in a soft, but confident voice, mature, but not aged.\n\nCarmen and Sylvia kissed each others' cheeks. Gary ignored me in favour of glaring disdainfully at Carmen. \n\n\"I hope the conference wasn't too boring,\" said Sylvia.\n\n\"I managed to stay awake for most of it,\" joked Carmen, who seemed to be on quite familiar terms with Mrs. Voynov.\n\nCarmen introduced me to Syliva, and I extended my hand. Sylvia took it, then leaned in to politely press her cheek against mine, saying, \"Goodness, there's no need to be so formal, dear. It's happy hour.\"\n\n\"Thank you, Mrs. Voynov. It's a pleasure to finally meet you,\" I said, enjoying the floral scent of her perfume.\n\n\"And you. Carmen has had many good things to say about you. You're a fabulous asset to the company, from what I hear,\" replied Sylvia, smiling brilliantly, the faint lines at the corner of her eyes giving her an air of sophistication.\n\n\"Is that so? Well it's the first I've heard of it,\" I said, laughing.\n\n\"I'm just being careful that you don't get a swollen head,\" quipped Carmen with an obvious double-entendre.\n\n\"Well you should know that she's spoken very highly of you to me. Strange how you don't seem to take much notice of these things, Gary,\" said Sylvia with a side glance at her husband.\n\n\"I've got bigger things to worry about than individual employee performance. That's Carmen's job,\" Gary tried to say in a calm manner, but it just came off as patronising.\n\n\"It's everyone's job to recognise good performance, honey. Just be careful Carmen, I might try to lure him away from your department,\" said Sylvia, touching my arm.\n\nGary rolled his eyes and threw back the rest of his drink. He burped, then shook his empty glass.\n\n\"If you'll excuse me,\" he said, turning away and marching towards the bar.\n\n\"I'll excuse myself as well, Sylvia. I've just seen Kevin and I need to catch up with him about the annual report. I'll speak with you later.\"\n\nCarmen kissed Sylvia's cheek and turned to leave, giving me a subtle wink on her way out.\n\n\"Please ignore my husband. He seems to have a bee in his bonnet about Carmen and anyone who works under her. He probably resents the fact that Carmen's done more for the company than he has. Oh, forgive me... enough office politics. What did you think of the conference?\" \n\nSylvia and I made conversation about the conference and the company. I shared some ideas for business and product development for our department, in which she seemed genuinely interested. In fact, we had very similar views about the company and its direction. Sylvia struck me as a strong, intelligent, competent business woman, who knew the value of her people. I found myself admiring and respecting her, and was confused about why she would stay with such a horrible husband.\n\n\"Goodness, I'm sorry about all this shop talk, but it's nice to know we have such an engaged person such as yourself working for us. I don't often get to exchange ideas outside the board members. It's refreshing.\"\n\n\"I'm glad to have had the chance to share my perspective, Mrs. Voynov.\"\n\n\"Sylvia, please. Would you care for another drink?\" she said, turning her body to look for the wait staff.\n\n\"Yes please, Sylvia.\" I liked the sound of her name as I spoke it.\n\nShe flagged a waiter who took our order. I began to think about what I had come there for; what I intended to say to Sylvia. It seemed an impossible thing-I was intending to expose her husband's infidelity and unlawful behaviour with concrete proof to his wife... whom I had just met! It seemed absurd, unreal. But the thought of Courtney being harassed fueled my purpose. I had to do it. I decided that after another drink or two I would have enough courage to take the plunge.\n\nOur drinks arrived and Sylvia raised her glass.\n\n\"To your health and hard work,\" she said, smiling.\n\n\"And yours.\"\n\nWe clinked our glasses and drank. As she tipped her head, I admired the pale skin of her neck, her womanly collarbones, and her decolletage. I noticed that her white blouse was also unbuttoned quite low... had she done this as we were speaking? Her breasts made beautiful curved cleavage with the help of her bra, and I felt my balls tingle. I was unsure if Sylvia had seen me admiring her neck and breasts, but if she had she was too polite to draw attention to it.\n\nAfter a few more minutes of conversation, I decided to take the plunge.\n\n\"Um... Sylvia, I have a rather, erm, delicate matter that I'd like to speak to you about, if I may,\" I began, almost shaking from nervousness.\n\n\"Oh?\" she said, a small crease forming between her thin eyebrows.\n\n\"Yes. It concerns... your husband,\" I said carefully.\n\nHer smile faded and her expression became stern. I immediately backpedaled.\n\n\"I'm sorry, I shouldn't have... it's not appropriate of me-my apologise,\" I stammered badly, feeling like an utter fool.\n\nSylvia looked around the room, then back at me, still with a threatening undertone.\n\n\"No. Not here. Take this,\" she said, handing me her business card. \"Send me a blank text in a few minutes. I'll contact you after. Do not speak of this to anyone, do you understand?\"\n\nI nodded in acquiescence. She held out her hand for me to shake.\n\n\"It was a pleasure meeting you,\" she said smiling again, as if nothing had happened.\n\n\"The pleasure was all mine,\" I said, confused, but managing to smile back.\n\nShe turned and approached a group of people with whom she conversed. I entered the number from her business card into my phone and sent the blank text to her and watched as she retrieved her phone from her handbag. She looked at her phone, then spoke with the others, excusing herself and leaving the room. I sipped my drink and stared out the window, wondering what I hoped to accomplish. How would she react? What if I had just ruined my career? I was filled with dread and anxiety, but there was no backing out now.\n\n\"That seemed to have gone well,\" a voice said beside me.\n\n\"I imagine she wants to meet in private to discuss this,\" I said to Carmen, feeling shaken.\n\n\"Be careful. Don't get yourself fired. I might actually miss you,\" she said, putting her hand on my shoulder.\n\n\"And the truth comes out,\" I said, smiling, gazing into Carmen's dark eyes.\n\nOur eye contact was broken when Carmen's phone rang and she fished into her handbag to retrieve it. Looking at the screen, she paused.\n\n\"I have to take this. Gook luck,\" she said, then turned quickly and crossed the room, vanishing through the doors to find a quieter location to talk.\n\nI sipped my drink and waited, feeling awkward, shifting nervously. The minutes ticked by and I was beginning to get cold feet when my phone rang in my hand.\n\n\"Hello?\"\n\n\"Meet me in room 2015. Come alone, and do not tell anyone where you are going.\" \n\nThen the line disconnected.\n\nI put my phone back in my pocket, drained my glass, and left the room, careful to avoid anyone I might know.\n\n***************************************************\n\nI tapped my foot nervously in the lift on my way to room 2015 to meet Mrs. Voynov, wondering what I had gotten myself into. Of course, it was much too late to back out now. Besides, I had not done anything wrong, I was simply trying to expose Gary's sexual harassment of Courtney.\n\nI got off on the 20th floor and made my way down the wide corridor to Sylvia's room. I knocked softly on the door and waited. The lock clicked and the door opened a crack. \n\n\"Is anyone in the hallway?\" Sylvia's hushed voice asked.\n\nI looked around.\n\n\"No.\"\n\nThe door opened and Sylvia admitted me into her room. She hooked the 'do not disturb' sign on the door handle and closed it quietly. She still wore her suit, her hair still tightly bound in a bun.\n\nThe room was large, with modern decor. The entrance hallway had a closet on the right, and a small kitchenette on the left. Beyond, a sunken lounge area with leather couches occupied the left side of the room. To the right was a king size bed, and the far wall had floor-to-ceiling windows peering out over the city. A small buffet table was tucked into the far left corner of the room, and I saw a bottle of champagne sitting on it, chilling in a bucket. The lighting was dim-only a table lamp beside one of the couches illuminated the room.",
        "Sylvia brushed past me and walked to the buffet, pouring herself a glass of champagne. She took a long sip, facing away from me, then topped up her glass again. She paused, looking out the window, then turned around. \n\n\"Please, come in.\"\n\nI walked into the room tentatively, my hands in my pockets, palms sweating.\n\n\"Nice room,\" I said, looking about.\n\nSylvia did not reply, but walked into the living area and motioned to a large leather armchair. I sat and waited. She remained standing by the gas fireplace on the wall. She set her glass on the mantlepiece and folded her hands in front of her.\n\n\"Before you say anything, please let me explain something. I assume you came here to tell me you have seen or heard of my husband being unfaithful. Perhaps you mean to blackmail me, or seek some favour, or perhaps even to simply warn or inform me of his indiscretions. I tell you now that you will gain nothing from this. You have nothing that will give you any advantage over me, and no information that I am not already aware of, and any attempt to threaten or extort me will be met with your swift dismissal from this company, not to mention criminal proceedings, if necessary. I'm telling you this to save you any embarrassment and unpleasantness. I'm already displeased enough that you had the audacity to bring this up at a social function, but I shall now give you the opportunity to leave and this whole matter will be forgotten. Do you understand?\"\n\n\"Yes, I understand.\"\n\n\"Very well.\"\n\nNeither of us moved. A few awkward moments passed. Sylvia crossed her arms and frowned.\n\n\"Aren't you going to leave?\" she asked, finally.\n\n\"Well, no. I'm not here to threaten you or upset you... but I do have some information you may not be aware of. It affects me, my colleagues, and the company. Yes, it does concern your husband, which makes it a very delicate matter, but I think you'll understand why I chose to bring it to you,\" I said, and fished into my pocket. \"Perhaps you should watch this.\"\n\nI handed the usb stick out to her. She eyed me suspiciously, then approached, taking the usb and looking at it.\n\n\"There's a video on there. You can watch it at your leisure, but I'd like to explain-\"\n\n\"-We'll watch it now,\" said Sylvia, going to a wall panel that had controls for the room's large television mounted above the fireplace. \n\nShe plugged in the usb and retrieved the remote control. She turned on the tv and we waited. \n\n\"I-\"\n\n\"-Sssh!\" she hissed.\n\nWe both watched the video in silence. We watched Gary harass and threaten Courtney. We watched Carmen enter just in time to stop Gary from assaulting Courtney. The video stopped after Gary left my office. Sylvia continued to stare at the blank screen. I waited for her to respond, but she made no sound, and remained motionless.\n\n\"Sylvia, I'm sorry you had to see this. But you can understand my concern. I didn't know what to do, so I decided to speak to you directly,\" I said quietly, still waiting for her to react.\n\n\"Does anyone else know of this?\" she asked coldly, still staring at the blank screen.\n\n\"No.\"\n\nSylvia took her glass from the mantlepiece and drank, emptying the contents. She sighed heavily and turned to walk back to the buffet.\n\n\"Again, I'm sorry. But I can't let him do this. Courtney is my friend. And god knows how many other women he's done this to.\"\n\nSylvia poured herself another glass of champagne. She sipped from the glass then returned to the lounge area. She stood in front of my chair, looking at me challengingly. I thought I could see the glint of tears in her eyes, although I couldn't tell if they were from sorrow, anger, embarrassment, or frustration.\n\n\"How did you get this video? Whose office is this?\" she said.\n\n\"It's... it's mine. I set up a hidden camera in my office because I was worried about... well, exactly what you saw. I didn't feel right putting a camera in Courtney's office, so I got her to work in my office, knowing Gary would likely drop by.\"\n\nI didn't know if she believed it, but it didn't seem to be the most important fact at the time.\n\n\"That's why I didn't go to HR. How the hell would I explain a hidden camera in my office?\" I offered.\n\nSylvia scrutinised me, then sighed and turned her head, closing her eyes. She stepped to the couch nearby and sat down heavily, putting her glass on the coffee table and her head in her hands.\n\n\"Jesus fucking Christ,\" she cursed.\n\nI thought it best to remain quiet.\n\n\"I know he sleeps around, that's no secret. But this... this is different.\"\n\nAnother long silence followed.\n\n\"I'm sorry, Sylvia. I know this must be hard,\" I offered.\n\nShe lifted her head and looked at me for a few moments, then sighed.\n\n\"Well, it's not good news, that's for certain, but I'm glad you brought it to my attention. I'll deal with it. You won't have to worry about him bothering anyone in your office, I promise you. This is not the only copy, I'm assuming?\"\n\nI was about to respond, but evidently her question was rhetorical, as she waved her hand dismissively.\n\n\"That's fine, I suppose. But I'd like to make an agreement with you: this stays between us. Is that clear?\" she said sternly.\n\n\"Of course, Sylvia. I won't breathe a word of it to anyone.\"\n\n\"And why should I trust you?\"\n\n\"I can only tell you that I am a man of my word. I'm sorry I can't offer you more than that, but I assure you, it will be enough. Besides, you have a significant advantage over me if it came down to your word versus mine. You're Mrs. Voynov... I'm just a guy that works for you,\" I said, smiling warmly.\n\nAfter a pause, she smiled back.\n\n\"Indeed,\" she said confidently as she picked up her glass and drank more champagne. \"Well, I think that's enough unpleasantness for one evening,\" she said, standing.\n\nI quickly stood up and buttoned my suit jacket.\n\n\"Thank you for speaking to me about this. And for the pleasant conversation at the bar. You're an amazing woman, Syliva, I hope we can talk again soon,\" I said, preparing to leave.\n\nSylvia raised her eyebrows. \"Leaving so soon?\"\n\n\"Erm... I, uh... was there something else?\" I stammered.\n\n\"You're not going to let me drink this bottle of champagne all by myself, are you? Besides, I only booked this hotel room so we could talk. I'd like to use it a little while longer. Unless of course you have somewhere you have to be.\"\n\n\"No, I don't. Um... sure, yeah. I'd be happy to stay and chat,\" I replied, delighted that Sylvia still wanted me around after giving her such bad news.\n\n\"Are you sure your wife or girlfriend wouldn't mind?\" she asked pointedly.\n\n\"I'm sure she would... if I had one.\"\n\n\"Lovely.\"\n\nSylvia turned and walked to the buffet.\n\n\"Please, take your jacket off. Make yourself comfortable,\" she said over her shoulder.\n\nI took my suit jacket off and draped it over the back of the chair. I took my cufflinks out and rolled up my sleeves, then walked over to the window.\n\n\"What a view,\" I said, whistling.\n\nI also noticed a jacuzzi tub at the far right side of the room, beyond the bed. I became excited at the prospect of a romantic dip with Sylvia, but pushed it out of my mind, not wanting to get my hopes up.\n\nThe city lights sparkled below us. Sylvia turned and handed my a glass of champagne.\n\n\"Cheers again. To good company, this time,\" she said, winking.\n\nWe clinked glasses and drank.\n\n\"Here you are telling me to relax-you've still got your jacket on,\" I pointed out.\n\n\"So I do. Here,\" she responded, handing me her glass to hold as she unbuttoned her jacket and slid it off, pulling her shoulders back.\n\nHer breasts pressed firmly against her shirt as she stuck her chest out towards me. I could see her small nipples poking through her blouse. She watched me admire her bust as she folded her jacket and placed it on the back of a nearby chair. She retrieved her glass and walked (hips swaying again) to the lounge area and seated herself on the couch, picking up a nearby remote control. She pushed a button and a flame sprang to life in the gas fireplace. With the push of another button, soft music began to play from the integrated speakers in the wall. She kicked off her high heels and curled her legs up next to her.\n\nI took my seat in the large armchair next to the couch and stared at the fire for a moment before looking back at Sylvia. She was removing pins from her bun and placing them on the table next to her. Her breasts rose when she put her arms up, pressing firmly against the fabric of her blouse. Her breasts looked medium-sized, and appeared round and perky, but it may have been the push-up bra she was wearing. I admired the way her pencil skirt hugged her narrow waist, and accentuated the womanly curve of her hips. Her legs were lean and toned, and she wore sheer black stockings.\n\nFinally, she shook her hair loose, her long, light golden locks tumbling about her face and shoulders.\n\n\"Mmmmm, much better,\" she intoned softly, then said, \"Is something the matter?\"\n\nI realised too late that I had been staring at her, mouth slightly agape, stunned by her beauty. I felt my face become hot and looked away quickly, clearing my throat.\n\n\"Ah, no... no, I'm fine thanks,\" then noticing her amused smile, said, \"It's just... If you don't mind my saying, Sylvia, you are breathtakingly gorgeous. I'm sorry if I was rude... \"\n\n\"Oh nonsense. I'm quite flattered, actually,\" she replied, her smile widening to reveal her perfect, even teeth between her full ruby red lips.\n\nWe sat in silence for a few moments, looking into the flames and sipping our champagne. It was not uncomfortable or awkward in the least, and I felt my attraction to Sylvia growing. She was confident, dignified, poised, but had the sense of putting others at ease in her presence without even uttering a word. As I had experienced before, she could also assert her authority or become intimidating in much the same fashion. \n\nPresently, Silvia looked over at me, pausing before speaking.\n\n\"I imagine you are quite popular with women, no? Particularly with the women in your department, as I've heard through Carmen.\"\n\nI stiffened and tried not to appear surprised.\n\n\"Oh? And what might you have heard?\" I asked cautiously, trying to be casual.\n\n\"Never you mind. The reason I ask is because you are a young, successful, attractive man, yet you don't have a partner.\"\n\nThe made this statement as if it were a question. I shrugged.\n\n\"I'm happy with my life at the moment. I suppose I could say I haven't met the right woman, and any other cliched excuse, but the truth is I'm not really looking.\"\n\n\"No? I think you're looking. But not for a relationship. I think you're looking for... experiences. Is that perhaps why you came to me?\" she said, not betraying any discernible emotion.\n\n\"I'm not sure what you mean-\"\n\n\"-of course you know what I mean. I can see the way you look at me. Just a moment ago you made a point of mentioning how attractive you find me. You're telling me these things don't serve a purpose?\"\n\nI was shocked at her direct approach.\n\n\"No! I came to you because of my friend... \"\n\n\"Friend... \" echoed Sylvia, grinning faintly.\n\n\"Yes, my friend,\" I repeated, undeterred. \n\n\"I'm not sure what you've heard, but my no matter what else they happen to be, my friends are very dear to me and I will help them when I can. That's why I came to you. And it was at great professional risk that I did so. You may question my motives all you like, and I can't say I blame you, but I am an honest man. I had no ulterior motives for coming to you.\"\n\n\"Are you having sex with this colleague?\" she said without missing a beat, pointing at the blank tv screen, indicating the video of Courtney.\n\n\"I'm honest, Sylvia, but I'm not stupid. Whether I have a sexual relationship with Courtney or not is not the issue. I'm doing this for her, not for me,\" I said, meeting Sylvia's steady gaze.\n\nShe smiled and tossed her hair, then took another sip of her champagne. I could see the faint red marks on the edge of the glass from her lipstick. She was toying with me, and enjoying it. It was frustrating, and I felt helpless to avoid it. I took a deep breath to calm myself down, then deliberately placed my champagne glass on the table and stood, picking my suit jacket up off the back of the chair.\n\n\"Look, I came here to try to resolve this matter with Courtney, and I feel like that has been taken care of. Thank you for helping me, Mrs. Voynov, and if there's anything I can do in return just let me know.\"\n\nI turned to go.\n\n\"Sit down. Don't be so melodramatic,\" she said.\n\n\"I'm sorry, I just don't like having my motives questioned. I'm helping Courtney because she's a friend. I'm complimenting you because I find you very attractive. It's a simple as that-nothing more, nothing less. I don't like playing games, and if it takes me leaving to prove that to you, then so be it,\" I replied, gesturing towards the door.\n\nSylvia appraised me silently for a moment, then nodded once. \"Very well. I believe you. Now please, sit down and have a drink with me.\"\n\nI put my jacket back on the chair and dropped back into my seat, picking up my glass and taking a large mouthful. Sylvia just stared at me with her enigmatic smile, and sparkling blue eyes.\n\n\"I like you. And I can see why Carmen likes you. I'm glad to have you working for us,\" she said simply.\n\nI smiled weakly.\n\nShe continued, \"and I can see that you're clever enough to know that we could have had this conversation in any number of places aside from an expensive hotel room, sipping champagne in front of the fire... \"\n\nShe patted the couch cushion next to her, and said, \"Sit here, darling.\"\n\nI hesitated for a moment, then stood and sat beside her, putting my arm behind her on the back of the soft leather couch. She put her hand on the back of my head and leaned in, kissing me firmly and deeply on the mouth. Our tongues danced in each others' mouths and I felt her hand grip a fistful of my hair. I put my hand on her leg as we made out, the minutes passing, my cock stirring in my trousers. \n\nFinally, we broke apart, both flushed and breathing hard. Her breasts rose and fell dramatically under her blouse. She looked at me with fire in her eyes, then her expression softened and she laughed softly.\n\n\"You've got... \" she said, wiping her lipstick from my face with her thumb.\n\n\"Well, you've certainly passed that test,\" she added, looking at me approvingly. \"Take off your shoes.\"\n\nI quickly obeyed, removing my shoes, and when I sat back up, I noticed that Sylvia had un-tucked and unbuttoned her blouse. Her medium-sized, pale, soft breasts pouted out of the lacy black cups of her bra invitingly. Her chest was lightly flushed, and her eyes were hungry. Her fingers stroked my cheek, then moved down my neck to my shirt, setting to work on the top few buttons. I pulled my tie roughly and tossed it onto the floor. Sylvia's nimble fingers unbuttoned my shirt and she pushed it open, running her hand over my chest and abs.\n\n\"Oh my... your body is even better than it looked in that snug shirt,\" she purred.\n\nI pulled her to me and kissed her again, my hand running along her thigh. Her fingers had continued their journey downward and had found my zipper, undoing it quickly. I felt her tongue writhe against mine as she reached inside my trousers. Suddenly, she gasped and pulled back, her eyes wide. She looked down, where her hand had vanished through my fly.\n\n\"That's not... \" she said, then quickly pulled her hand back, deciding to go straight to the source.\n\nShe stuffed her hand into my boxers and gripped my semi-erect shaft firmly, pulling it roughly out into the open. It sprung free from my trousers, waving in the air like a charmed snake. Sylvia's small hand gripped it at the base-her fingers not able to touch around my thick girth-and squeezed it gently as she stared in awe.\n\n\"My goodness... \" she breathed, amazed. \n\n\"You are incredibly well-endowed, my darling,\" she said, recovering herself; although her eyes were still wide and staring at my exposed penis.\n\n\"So I've been told,\" I replied, removing my hand from her leg so she could have the best view of my cock.\n\nShe tipped my cock down toward my knees to examine its impressive length. Her pretty blue eyes studied it thoroughly as her other hand subconsciously reached to her chest, her fingertips brushing her pouting bust. She let my cock fall back against my stomach and gently fingered my balls, rolling them about, then traced her index up the underside of my cock to the frenulum.\n\n\"Well, you certainly put my husband to shame. In more ways than one,\" she mused, as her hand continued up my stomach and over my chest.\n\nSylvia slid her legs off the couch and stood up facing me, her hands on her hips, her shirt open, her lips slightly pursed.\n\n\"Stroke it for me,\" she said.\n\nIt was not a suggestion-it was an order. I sat up to take my shirt off, but she stopped me with her hand.\n\n\"No. Keep it on, but open. Your trousers too. Just stroke your cock and watch me.\"\n\nI wrapped my hand around my dick and began stroking it slowly, admiring Sylvia's slender frame. She watched me for a moment, then slowly peeled her blouse from her shoulders, sticking her chest out to emphasise her breasts. She let the shirt fall to the floor and ran her hands up her sides sensuously. She turned around slowly and took hold of the zipper at the back of her skirt, pulling it down inch by inch. She was wearing a pair of lacy black g-string panties, and my cock throbbed and grew in my hand as I watched her hook her thumbs in the waist of the skirt and gradually slide it down over her hips, wiggling them from side to side as the material slid over her skin.\n\nAs the skirt slid down over her firm, toned buttocks, and along her thighs, she bent over, her ass cheeks spreading slightly, the thin strip of black material appearing, just covering her asshole. She bent lower, keeping her knees straight, and I could see the edges of her pale pussy lips, barely covered by the lacy material of her panties. The skirt continued its way down, exposing her stockings. My mouth gaped at her firm, slender legs as her skirt finally reached the floor.\n\nShe held her ankles, demonstrating her impressive flexibility, and turned her head to the side to look at me. I had a powerful urge to stand up, pull her panties out of her ass crack, stuff my cock into her hot pussy, and fuck her hard and fast until I blew my load deep inside her.\n\n\"Wow... \" I said, stupidly. \n\nI was struck dumb by her sexual allure, her perfectly toned legs and buttocks, the burning expression in her eyes. She stood up straight again, her butt cheeks closing over the string of her panties. Her blouse came down just above the bottom of her butt cheeks, which had soft curves underneath where they met her legs. She shrugged her blouse from her shoulders and let it fall to her elbows, looking over her shoulder to make sure I was still stroking my cock. She needn't have worried-I was already rock hard.\n\nShe put her arms down and let her blouse slide slowly down until her hands were holding it. She then turned around quickly and tossed it at me and it landed on my face, obscuring my view. I laughed and pulled it away. She was smiling widely at me, her hands on her hips again, her eyes scanning my body, glancing approvingly at my erect manhood. She was a vision in her lingerie, her lacy black bra and panties, her stockings. Her blonde hair fell around her, framing her pretty heart-shaped face. Her clear, blue eyes sparkled mischievously and her shoulders turned inward as she stared lasciviously at my erect member. Her desire was almost palpable, and my balls tingled as I watched her devour me with her gaze.\n\nSylvia stepped forward and bent down, putting her hands on my knees and looking into my eyes.\n\n\"I hope you're as good at fucking as you are at your job.\"",
        "She took my hand and pulled my arm abruptly, making me stand. She walked to the desk and retrieved a chair, placing it in the lounge area, near the coffee table.\n\n\"Sit,\" she ordered.\n\nI did as asked and she immediately straddled me, putting her arms behind me on the back of the chair. She began to gyrate to the music, hovering above my erection, swaying sensuously, her eyes teasing me, her breasts rising and falling visibly. \n\nI reached toward her thighs.\n\n\"No. Not yet. Stroke your cock for me,\" she said.\n\nI gripped my shaft and continued to masturbate, smelling her sweet perfume, her skin. She moved her breasts within a few centimeters of my nose. I wanted to bury my face in her cleavage. It was sweet torture.\n\nSwinging her legs smoothly behind her, she spun around and put her hands on my knees, her beautiful ass facing me. She bounced it tantilisingly in front of my cock. I felt the blood surge in my shaft and moaned softly, overcome by the desire to thrust it into her, to feel her hot pussy devour my cock. She backed up until my column rested between her buttocks. I moved my hand and she began a tortuously slow movement, sliding her bottom against my shaft... up and down. I moaned again and she added more pressure, pivoting her hips. I gripped the sides of the seat of my chair firmly, my knuckles white. Sylvia looked over her shoulder, grinning.\n\n\"Does that feel nice, honey? You like the way my ass strokes your big cock?\"\n\n\"God yes, Sylvia. It's so good,\" I groaned.\n\nShe chuckled and jiggled her ass up and down quickly, giving my cock several small jerks, which made me jump and suck air between my teeth. She laughed again.\n\n\"Your cock is so hot against my ass. I bet you're dying to fuck me,\" she teased.\n\n\"Absolutely. I want you so bad.\"\n\n\"Oh but I'm not even close to finished teasing you,\" she replied.\n\nShe moved away from me and bent down slowly to retrieve something from the floor, giving me an eyeful of her perfect ass. She walked around me and I felt her hands on my arms.\n\n\"Put them behind you,\" she said.\n\nI obeyed, and felt her tying my wrists with a silky fabric. My necktie. She secured them quickly and firmly, inclining me to think she'd had practice, then stood in front of me again. She roughly pulled my shirt off my shoulders, sliding it down my arms and back, bunching behind me. Another bond. Next, she unfastened my pants and belt, and slid it from the loops in one quick motion. She looked at it contemplatively, then draped it around her neck, and busied her fingers at my waistband.\n\n\"Lift your ass,\" she ordered.\n\nI tipped my hips up, raising my ass from the seat of the chair, and Sylvia slid my trousers down my legs, bunching them at my feet, still around my ankles. My cock rested on my stomach, hard and throbbing. I wanted her to stroke it, to suck it, to ride it. My skin burned and my fingers twitched to touch her, feel her skin against mine, breathe her in.\n\nTaking the belt from her shoulders, she looped it around my cock and pulled the ends. My dick head bulged as she squeezed the shaft with the leather, bringing her face close to mine. She kissed me as she pulled harder, biting my lip, sucking my tongue, aggressive, passionate. My arms strained and my shoulders flexed. She had tied my hands well.\n\n\"Oooh, someone's eager. Tell me what you want, darling,\" she said softly, her face nearly touching mine, her smile briliant.\n\n\"I want to touch you, Sylvia. I want to feel you against me. I want to taste you. I want to pick you up and throw you on the bed and fuck you.\"\n\n\"Oooou I like that,\" she cooed, giggling.\n\nShe loosened the belt and let it fall to the floor, then swayed in front of me again, turning away, her hips swinging, her waist curving, her arms reaching back to unfasten her bra. She took it off slowly and held it up, then dropped it on the floor. She turned again, one arm across her bust, the other running her fingers through her hair. Her breasts bulged under her arm as she straddled me again, leaning in and putting her mouth on my ear.\n\n\"Tell me what you want,\" she whispered.\n\n\"I want you to show me your breasts, show me your body. Put your tits in my face. Let me suck your nipples,\" I growled softly, feeling her hair tickle my face.\n\nShe grabbed my hair and held my head steady, pointed at her breasts. She slowly slid her arm away, her pretty tits jiggling into view, capped by small pink nipples, rock hard. My cock twitched on my stomach and I sighed in appreciation of her perfectly-shaped breasts.\n\n\"Oh yeah... \" I said, my heavy breath on her chest.\n\nI saw her skin break out into goosebumps, and her areolas tightened. I glanced up to see her looking down at me, her mouth slightly open. She was breathing heavily too.\n\n\"Do you like them?\" she asked.\n\n\"Oh Sylvia... they're beautiful. So perfect, so pretty. Please let me taste them. I'm literally drooling to suck them.\"\n\nShe didn't laugh this time. I could see that her lust was overcoming her. She would not be able to tease me long without needing release herself. My bonds were literal, and held fast, but she was also bound. Bound by her self-restraint, her game of teasing. Now I could see those bonds weaken, resisting the force of her sexual desire. \n\nA phone beeped.\n\nHer head snapped up, breaking the hypnosis. She squeezed my chin and kissed me hard, then moved to the back of the room. I heard the sound of ice rattling in the bucket. A few moments later, she stood in front of me again, a full glass of champagne in hand. With a satisfied smile, she looked me up and down.\n\n\"What is it?\" I asked.\n\nSylvia didn't reply. I squirmed in my chair. She laughed. Moments passed. \n\nThen a knock.\n\nWithout surprise or hesitation, Sylvia turned and walked to the door of the room, peeking through the spy hole. I squirmed again. Was this a trick? Some form of blackmail? I cursed myself for not being more careful, for being so foolhardy.\n\nSylvia opened the door and reached out to pull the inquisitor into the room.\n\nIt was Carmen.\n\nBeing pulled into the room had spun her around so she faced the door, which Sylvia closed quickly behind her. Carmen seemed genuinely shocked to see her employer standing topless, wearing only stockings and panties.\n\n\"Syl! What the hell is going on? What-\" began Carmen. \n\n\"Shh. Come,\" she replied.\n\nShe took Carmen by the hand and led her into the room to the lounge. Carmen stopped when she saw me, her eyes widening.\n\n\"Oh! God, Syl... wh... what is he doing here?\" she said, unconvincingly.\n\nSylvia strolled casually behind Carmen, as if having a naked man tied to a chair in her room was as normal as having a coffee table. She wasn't convinced either.\n\n\"Now now honey, you don't expect me to believe he didn't talk to you about everything beforehand, do you? I'll save us the conversation then: I've seen the video, we've talked it out and come to an agreement. No more needs to be said, understood?\"\n\nIt was strange seeing someone have the upper hand with Carmen, when I was so used to seeing her in a dominant role at work.\n\n\"Ummm, yes, I understand,\" said Carmen, recovering quickly. \"But how does that explain...?\" she said, gesturing toward me.\n\n\"He's a smart, charming, attractive young man. I wanted to have a little fun with him. You of all people should understand.\"\n\n\"What's that supposed to mean?\" challenged Carmen, crossing her arms. \n\nShe was still wearing her business suit, her slacks tight, her blouse buttoned low underneath her blazer, her dark hair falling in waves over her shoulder.\n\nSylvia raised her eyebrows.\n\n\"You haven't fucked him yet?\" she asked bluntly.\n\nCarmen blushed deep red and appeared cross. \n\n\"I am a professional, Sylvia. I don't sleep around with my employees.\"\n\nSylvia seemed to scrutinise Carmen for some time, before finally appearing satisfied with her answer. \n\n\"I see. I respect you for that, Carmen. And I would never question your professionalism,\" she added, approaching me and draping her arm over my shoulders, stroking my chest. \n\n\"But we're not at work now, and I asked you here for a reason.\"\n\n\"I don't think this is appropriate-\"\n\n\"-I don't care. I've seen you with him. I've heard you speak about him. I know there's more to it than a professional relationship. I also know there's quite a lot you're not telling me. I have a knack for these things, darling. Intuition. It's what's made me successful in business. You can't keep secrets from me.\"\n\nCarmen turned her head toward me. Her auburn eyes smouldered with anger. \n\n\"What did you tell her?\" she asked me through gritted teeth.\n\n\"He didn't tell me anything,\" said Sylvia in my defense. \"At least nothing about the two of you. I know he fucked that busty colleague of his, though he tactfully avoided openly admitting it,\" she finished, patting my shoulder patronisingly.\n\n\"Now, I'd prefer to invite you to enjoy this evening with your colleague, rather than command you,\" continued Sylvia, walking over to Carmen.\n\nShe slid her fingers down the lapel of Carmen's jacket and unbuttoned it. Then she reached over Carmen's shoulders and began to slip the jacket form her shoulders. Carmen stared at me wordlessly, letting the jacket fall form her arms. Sylvia draped it over the couch and touched Carmen's arm.\n\n\"We're going to enjoy yourselves. We're going to have this lovely man fuck us senseless,\" said Sylvia, handing the glass of champagne to Carmen.\n\nCarmen took the glass wordlessly, Sylvia's fingers now busy at the buttons of her blouse. My mind was buzzing with excitement. I had desired Carmen for so long. She had teased me endlessly, watched me have sex with our colleagues, and her friends. Never once giving me the satisfaction of pleasuring her. Was this my chance? Would Carmen finally make the move from voyeur to participant? My cock swelled on my stomach at the thought. I watched Sylvia slowly unbutton Carmen's blouse, revealing her navy bra supporting her enormous breasts.\n\nSylvia pushed the blouse off Carmen's shoulders and hummed. \n\n\"My goodness, darling, you have beautiful breasts.\"\n\nHer hands drifted over the bulging orbs and moved down to her waist. She unfastened Carmen's tight pants and unzipped them. Carmen looked at Sylvia, and I noticed her chest swell. I was well acquainted with Carmen's love of women, and knew she was getting excited watching her topless employer strip her.\n\nShe slid her blouse from her arms, moving her champagne glass from one hand to the other, and let it fall to the floor. She took a long sip from her glass and reached out to touch Sylvia's arm delicately as Sylvia peeled her pants down over Carmen's womanly hips. She was wearing a navy thong. Sylvia slid the pants down, helping Carmen step out of them carefully.\n\nSylvia stood and admired Carmen's body for a moment, before taking her hand and leading her to me. She retrieved her glass form the coffee table and sat in a leather armchair in front of us, crossing her legs.\n\n\"Well, go on then. He is yours, Carmen. Oooh, look at that, his cock is swelling just looking at you,\" she noticed.\n\nIt was true. My dick had regained its rock-hardness as I admired Carmen. We looked at each other steadily, unblinking, wondering if either of us would say something, or back down. I wanted my eyes to speak for me. I tried to make them tell Carmen that I was hers, that I wanted her to be mine. That this was our chance to take our relationship further. Her eyes were difficult to read, as always, but I thought I detected a mixture of lust, of hesitation, of longing.\n\nShe lifted her glass to her lips and drank, emptying the contents. She calmly set the glass on the table. She approached me, her gaze wandering over my body. She looked at Sylvia, and a faint smile touched her lips. She looked back at me, confident. In control.\n\n\"You want to see my tits, don't you?\" she said.\n\n\"God yes, Carmen. I've wanted that for so long,\" I replied.\n\nOf course, I had seen them many times, but I wanted to play the part. She looked down at her tits and caressed the cups of her bra.\n\n\"Say please.\"\n\n\"Please, Carmen, let me see your pretty breasts.\"\n\nShe smiled devilishly as she reached back behind her, her boobs bulging out of her bra. She unfastened the clasp and let the straps fall from her shoulders. She lifted the cups away and held the bra at arm's length, dropping it at my feet. Her tits were as glorious as ever. Large, round, proud, with big nipples, erect. My cock twitched.\n\n\"Mmmm, I think he likes them, Carmen,\" spoke Sylvia, her fingers trailing absently along her breasts, as if comparing her size with Carmen's.\n\n\"Do I ever. Your breasts are beautiful,\" I said sincerely.\n\nCarmen seemed pleased.\n\n\"Why don't you give him a closer look, honey?\" suggested Sylvia, drinking from her glass.\n\nCarmen straddled my legs, as Sylvia had done, and her tits swayed alluringly. As she reached out to put her hands on my shoulders, I saw them trembling ever so slightly. She must have felt the same nervous anticipation that I had.\n\nShe leaned forward, bringing her breasts close to my face. My mouth watered, my arms strained again against the chair. I sighed as she brought her bulging orbs closer.\n\n\"Whose titties are better, hun, mine or Courtney's?\" she asked.\n\n\"Yours, of course,\" I said. \n\nShe knew it was a lie, but didn't seem to care. And at that moment, it was a very close contest anyway.\n\n\"Good answer,\" she said.\n\nShe began to sway to the music, her breasts swaying with her, mesmerising me like a hypnotist's watch. She jiggled them, shook them, bounced them, squeezed them between her arms. \n\n\"Let me kiss them, Carmen. Let me suck your nipples. Let me put my face between those lovely tits,\" I begged.\n\nShe laughed and ran her hands up my neck and into my hair. She made me look up into her eyes. She was still wearing her black-rimmed glasses. My eyes were pleading. Hers were burning. \n\nShe gripped my hair tightly and pulled me forward. The smell of her perfume was strong. She had dabbed her cleavage. I swallowed hard. She guided my face to the side and ever so gently brushed her nipple against my cheek. Like an orienting reflex, I tried to turn my head toward her offered breast. She pulled my hair, keeping me in place. She pressed her tit against my cheek, brushing it, poking it. She did the same with her other breast, rubbing it on the side of my face, her nipple occasionally poking my eye.\n\nWiggling her chest, she batted her tits against my cheeks as she pushed my nose between them. The soft, sweetly scented flesh made me mad with desire. I pursed my lips, kissing her breasts, licking. I felt a nipple graze my lips and I latched on, sucking it hard into my mouth. I heard Carmen gasp.\n\nI looked up at her again as I suckled her tit. Her expression had changed. I saw pure pleasure, pure desire. She allowed me to feast on her bosom, kissing, licking, sucking. She rubbed her breasts all over my face, offering them to me like a gift. I moaned as I indulged on her bust, she moaned in response.\n\nSylvia, meanwhile, had stood and approached us. She watched me suck Carmen's tits with captivated interest. She touched Carmen's shoulder.\n\n\"Honey, lean back a little,\" she said.\n\nCarmen stuck her chest out and tipped her head back as Sylvia tipped her glass over Carmen's breasts. I saw her nipples become harder as the cold champagne poured over her boobs and down her stomach, dripping onto me. Carmen leaned in again, and my slurping filled the room as I licked and sucked the liquid from her tits.\n\nCarmen was nearly panting at this point, her cheeks rosy red.\n\n\"Ooooh fuck it,\" she said, and grabbed my face, lowering her lips to mine. \n\nShe hesitated for a second, our lips nearly touching. I felt her breath mixing with mine. The urgency and intensity between us was like electricity; a live wire.\n\nThe kiss was explosive. Our lips met softly at first, then escalated. The passion was heated as our tongues writhed, exchanging our saliva. She sucked champagne from my lips and I sucked her tongue. The occasionally nip from our teeth caused us to jump. When we broke apart, I had no idea how much time had passed. It could have been seconds or hours. I was dazed.\n\nPandora's box was opened. There was no going back after this. Her eyes told the story as clearly as an open book. The kiss was the key. We were changed.\n\n\"Carmen... \" I whispered.\n\nShe touched my lips with her fingers lovingly, trembling. I became aware of a warmth on my right thigh. She had ground her pussy against me in the heat of the moment. She was wet and hot, even through her panties.\n\n\"Good god,\" said Sylvia.\n\nShe stared in amazement at us, one hand squeezing her breast, the other touching her cheek.\n\n\"That was the sexiest kiss I have ever seen. You've wanted this for a while, haven't you Carmen?\"\n\nShe didn't answer. She was still gazing into my eyes, lost. Sylvia stroked Carmen's hair, and pushed our lips together again. We kissed passionately, but with more control, more purpose. I felt Sylvia remove the pants from my ankles and push my feet apart. Carmen rode my thigh as she kissed me. I felt another warm spot on my other thigh. Sylvia had straddled that leg and was grinding her cunt on me. I felt her hand on my cock.\n\n\"Ooooh yes, that's nice and hard,\" she moaned as she stroked me. \"Ok honey, it's my turn.\"\n\nCarmen leaned back to allow Sylvia to kiss me. I could taste the champagne on her tongue. I felt pressure on my balls. Carmen was rolling them in her fingers as Sylvia jerked me off. The women's hands were all over me, stroking my hair, my face, my neck, my shoulders, arms, and chest. They caressed my cheeks and kneaded my thighs, fluttered over my stomach and squeezed my penis. I kissed them alternately as I felt their weight on my legs, their wet, panty-clad mounds grinding against me. They shared my cock, each with one hand on my shaft, stroking its length, cupping the head, fingering my balls. They watched me squirm, delighted, smiling, giggling. Their breasts bobbed and wiggled with the movement of their arms.\n\nI groaned as Sylvia squeezed my cock just below my head, several thick drops of pre-cum oozing from the tip. She carefully collected the clear fluid on her fingers and held them to her nose, smelling me.\n\n\"Mmmmm, you smell incredible, honey. I think I'll let your boss have the first taste of you, though,\" she said, turning to Carmen.\n\nShe reached her hand to Carmen's full lips. Carmen opened them, looking Sylvia in the eyes, and took her fingers into her mouth. Her cheeks pulled in as she sucked my pre-cum from Sylvia's fingers, her eyes closing briefly as she savoured my taste. I felt her thighs tense and she moaned loudly.\n\n\"Oooooh that tastes so good,\" she sighed. \"You have to try some, Syl.\"\n\nSylvia made to reach for my cock again, but Carmen put her hand on Sylvia's neck and pulled her toward her, planting her lips against Sylvia's before she could protest. Sylvia was shocked at first, her eyes wide with surprise, but she soon melted into the kiss, her mouth opening to receive Carmen's tongue. Carmen's hand was still gripping my cock, squeezing more pre-cum from me as she made out with Sylvia. \n\nWhen they parted, Sylvia took a moment to catch her breath.\n\n\"Oh my god... Carmen... you naughty thing,\" was all she could say.\n\n\"Fuck that was sexy,\" I said. \"Can you kiss each other again and let me suck on your tits?\" I asked.\n\n\"Getting feisty, are we? I suppose I could allow that,\" replied Sylvia.\n\nThe women cupped their breasts, offering them to me as they leaned in. Their lips met above me as I tongued their boobs hungrily, the warm, soft flesh pressing against my face.\n\nAfter a minute, Carmen said, \"God, my panties are soaked.\"\n\n\"I think it's time to take them off,\" Sylvia responded.\n\nSylvia helped Carmen to her feet and they both turned around to show off their sexy asses. As if rehearsed, they bent over in unison and slid their panties down over their hips and buttocks, down their legs. I admired the two pairs of bare cunt lips, the two puckered assholes, the two sets of toned legs.",
        "They turned back around to reveal their slits, Carmen's pubic hair in a landing strip, Sylvia's a small triangle of blonde.\n\n\"Mine are soaked too,\" commented Sylvia, gingerly touching the lacy material.\n\n\"Let me feel,\" said Carmen, taking the black panties from her and fingering them.\n\nSylvia snatched Carmen's navy thong from her other hand and touched them. Carmen, meanwhile, was already holding Sylvia's panties to her nose and mouth, smelling them.\n\n\"Carmen!\" exclaimed Sylvia, taken aback.\n\nCarmen ignored her, and said, \"Mmmm you smell wonderful, honey.\"\n\nSylvia looked at her, then down at the panties in her hand. Hesitantly, she brought them up to her face and smelled them. Carmen watched her excitedly.\n\n\"Do you like how my pussy smells?\" she asked.\n\nThis was the Carmen I knew and loved.\n\n\"God... I've never smelled anyone's panties before. But it's turning me on. Mmmm,\" moaned Sylvia, her breasts rising as she inhaled Carmen's musk.\n\nCarmen caressed her large breasts as she touched Sylvia's panties to her lips. Sylvia had turned her attention to me, and stood astride my leg, holding my chin.\n\n\"I think someone else wants to taste your pussy,\" she said, then stuffed Carmen's thong into my mouth.\n\nI sucked the fabric eagerly, tasting a tangy flavour, arousing me further. I moaned.\n\nCarmen grinned and pushed Sylvia's panties into my mouth with hers. The aroma and flavour of both women's pussies filled my nostrils and stimulated my tastebuds.\n\n\"Look at this pervert suck our wet panties like a lolly. It's making me want to suck something too,\" Sylvia said, looking down at my cock, the head shiny with my pre-cum.\n\nShe knelt down on the carpet next to my leg and picked up my dick, stroking it firmly. Carmen knelt on my right, resting her heavy tits on my thigh. Sylvia wasted no time and began to lick my shaft up and down. She watched me as she did so, her pretty blue eyes sparkling. Carmen leaned in to tongue my balls, juggling them in her mouth. She moved up, licking the other side of my column in imitation of Sylvia. I savoured the moment, as it was the first time Carmen's lips had touched my cock.\n\n\"It's such a big cock. There's more than enough for both of us,\" giggled Sylvia, batting my dick against their cheeks.\n\nShe pointed my erect dick at Carmen's face and said, \"Go ahead, honey. I know you've wanted to do this for some time.\"\n\nCarmen looked at Sylvia, then up at me. There was a moment of hesitation, then she moved up, her tongue trailing along my length. She flicked her tongue on my tip and I jumped. She laughed, then slowly, carefully, inserted my head between her soft lips.\n\nI moaned as she suckled the tip, then moved down, taking a few inches and bobbing her head slowly and purposefully, watching me the whole time. Sylvia stroked in time with Carmen's sucking, eventually building up a steady rhythm. Carmen's suction was strong, and her mouth was hot and wet. Her tongue massaged my dick wonderfully. I moaned around the panties again.\n\n\"I think he likes it,\" said Sylvia. \"Ok, my turn.\"\n\nShe pulled my dick from Carmen's sweet mouth with a 'pop', and immediately put it into hers, sucking harder and faster than Carmen. My stomach clenched as I groaned, my hips lifting off the chair, pushing more of my cock into Sylvia's mouth. The pleasure was intense.\n\nThe women shared me, blowing me with their experienced mouths, taking me deeper, gagging on my big cock. It became a contest of who could take me deeper, and before long both women were panting, and their spit had dripped down my shaft and balls, and was dripping from their chins onto their beautiful breasts. This seemed to give Sylvia an idea.\n\n\"Put your tits around his cock, Carmen. I would love to see you tit fuck him with that big bust of yours.\"\n\nCarmen immediately took to the idea, and drooled into her ample cleavage before leaning over and sliding my wet cock between the fleshy pillows. She pushed them together and lifted her bosom, beginning to wank be with her breasts. My dick head popped out from between her tits with each stroke. Her breasts were warm, and her spit allowed my member to glide between them smoothly.\n\n\"Oh, that looks so sexy, hun,\" moaned Sylvia, playing with her own breasts. \"I thought his cock would be completely covered by those huge tits, but it still pokes out when you drop them. How does it feel?\"\n\n\"It feels incredible, Syl. I can feel his thick, hard shaft slide between them. Most men's cocks just get lost in my titties, and after a minute I'll feel a warmth and pull them apart to see a deflating cock and cum sticking to my breasts, but I'll bet he spurts his load right out of my cleavage and onto my chin!\" Carmen said, laughing.\n\nShe titty fucked me for a few minutes, readjusting a few times to make sure there was a nice constant pressure against my dick, and spitting on it to maintain lubrication. Sylvia was touching herself between her legs and tugging on her nipple. She became impatient.\n\n\"Let me try, darling. I know my tits aren't as big as yours, but I want to feel it too,\" she said insistently.\n\nCarmen released me from her busty caress, kissed my tip, then helped push my dick between Sylvia's smaller-but my no means flat-chested-bosom. Although her boobs did not completely envelop my cock, they were more firm than Carmen's, and Sylvia used her fingers to prevent my thick girth from slipping out from between them. She began moving her torso, masturbating me with her breasts.\n\n\"Oooooh, it does feel nice. His shaft is so hot, and it feels like it's going to burst.\"\n\nI mumbled to the women unintelligibly, my words muffled behind their panties.\n\n\"Oh shut up. Keep those panties in there and just enjoy my tits,\" barked Sylvia.\n\nShe seemed to take great pleasure in the act, and looked up at me often to make sure I was enjoying it too. They passed my cock back and forth, sometimes sucking it, sometimes tit wanking it, sometimes just spitting on it and stroking it. I knew I would not last much longer, and uttered an urgent moan as Carmen dropped her big tits on my dick enthusiastically.\n\n\"I think he's going to cum soon. You can have the honours, Carmen. I want to see him spurt all over your tits.\"\n\nCarmen looked at Sylvia with an almost worried expression.\n\n\"Oh don't worry, honey. He's still going to fuck us, but when he does I don't want him cumming too quickly. We'll get this orgasm out of the way so he can pleasure us properly,\" she reassured Carmen.\n\n\"Thank god! I'm so fucking horny right now there's no way I'm leaving without taking this big cock inside me,\" Carmen said, expressing her relief as she looked up over her glasses into my eyes.\n\nShe dribbled on my dick head sandwiched between her enormous breasts and gripped her tits firmly. She rubbed them quickly and firmly along my length, bouncing them off my thigh as she panted with the effort.\n\n\"Come on, baby, gimme that cum. Shoot that load all over my big titties,\" she said in a husky voice.\n\nSylvia leaned over me and kissed my stomach and chest, watching Carmen's tits wank my cock. I emitted muffled growls as I lifted my hips in time with with Carmen's stroking bust.\n\n\"Mmmmm, he's close honey, I can tell. Cum now! Give it to her!\" cried Sylvia, her nails digging into my thigh.\n\nCarmen's eyes never left mine. They were beautiful and alluring. I couldn't resist her any longer. Another muffled moan through her and Sylvia's panties signified my release. As my dick head vanished into the soft cleft of Carmen's cleavage, I felt a hot surge in my loins. A powerful jet of semen exploded from between her tits, striking the underside of her chin and splattering on her bosom. \n\n\"Oh!\" she cried out and smiled up at me.\n\nAs she dropped her boobs on my dick , my tip emerged and blasted her chin again, dripping down into the hollow at her throat. She laughed and looked down just as I erupted again, shooting a thick wad up her face and onto her glasses. She opened her mouth to receive the next few spurts, then looked up at me again as she rolled my cum around her mouth with her tongue, then swallowed the milky liquid, licking her full lips with relish.\n\nI growled as Carmen used her bountiful breasts to pump more cum from my cock, leaping out and splashing down onto the tops of her tits. She slowed her pace as my orgasm subsided. I shuddered as she kneaded her tits around my dick. Sylvia gripped my shaft from below and pulled it from Carmen's chesty embrace, lowering her head to suck the remaining drops of cum from my member.\n\nAs Sylvia cleaned my cock with her mouth, Carmen held her cum-splattered breasts together, admiring the abstract patterns of pearly jizz as it dripped over her bulging tits like a pair of freshly glazed hot cross buns. She rubbed them together as my spunk spilled into her cleavage and over her nipples. She had milked a huge load from me. I felt drained and light headed. My arms vaguely ached from straining against my necktie.\n\n\"It seems you can be just as productive at play as you are at work,\" noted Carmen, gazing down at my pearly cum coating her bosom, then looked up at me with a wry grin.\n\nTurning my head to the side, I let the women's panties fall from my mouth, off my shoulder and on to the floor.\n\n\"If you only knew how long I've been waiting to cum on those beautiful breasts, Carmen,\" I sighed, watching a thick drop of semen dangle from her chin.\n\nSylvia lifted her head from my lap and licked her lips, still cradling my softening cock in her palm, then stared at the mess on Carmen's face, neck, and breasts.\n\n\"My god... that is a lot of cum,\" she mused. \"Here, let me... \" she continued, gingerly lifting Carmen's glasses from her nose and inspecting the dripping wad on one of the lenses.\n\nShe put her lips over it and sucked the cum off, then set them aside. She then leaned in to kiss Carmen, carefully licking my cum from her neck and chin before putting her mouth over Carmen's. She moved down again, sucking and licking more cum from Carmen's tits as we watched. Carmen held her breasts out to Sylvia's hungry mouth, sighing and moaning every now and again. After a minute, Sylvia lifted her head again, wiping a drip of cum from her chin with a finger and feeding it to Carmen.\n\n\"Mmmm, that's a tasty load,\" she giggled. \"Carmen, honey, why don't we get cleaned up while we let our friend recover.\"\n\nShe stood up and strode to the bathroom, speaking over her shoulder, \"Untie him then join me in the shower, darling.\"\n\nCarmen smiled up at me, then leaned down to pull my pants and socks off my feet. Then she stood and walked behind me, sliding her hands up my sweaty chest and through my hair. I felt her long, dark locks tumble onto my shoulder as she put her mouth by my ear.\n\n\"Are you enjoying yourself?\" she asked softly.\n\n\"More than you can imagine,\" I replied, shivering at her hot breath against my neck.\n\nShe began to untie my bonds, but kept her lips at my earlobe, nibbling it.\n\n\"Did you like fucking my tits?\" she murmured.\n\n\"I loved it. It felt so fucking good,\" I groaned.\n\nMy hands were finally freed and Carmen kissed my neck just below my ear.\n\n\"And what do you want to do to me now?\" she whispered.\n\n\"I'm going to fuck you, Carmen. I'm going to make you feel as good as you've made me feel so many times before. I'm going to drive you wild with lust until you can't take it anymore, then I'm going to fuck you hard and make you cum. I'm going to show you what you've been missing out on all these months.\"\n\nI felt her hands cross over my chest and her nails dig into my skin. She began breathing harder in my ear, becoming aroused. I could feel her desire for me, the weight of her inhibitions falling away.\n\n\"You two had better not be starting anything without me!\" Sylvia's voice called from the bathroom.\n\nCarmen laughed and bit my earlobe, then rose, taking my hand and pulling me to my feet, leading me to the bathroom. It was huge, with slate grey tiles and a shower with two 'rainfall' shower heads side by side. Sylvia was under one of them, slicking her hair back with her hands. She smiled as we entered.\n\n\"Come on in, the water's fine,\" she said.\n\nCarmen led us into the second stream of warm water and tipped her head back to let it cascade over her face and chest, rinsing my remaining cum from her sexy body. I watched the water flow over her huge breasts with dazed bemusement. Both women looked so attractive, soaked with water, their hair slicked back and sticking to their shoulders, their mascara smudged slightly giving their eyes a smokey look.\n\n\"What are you staring at? Get that sponge and give us a good soapy rub down,\" Sylvia ordered, her hands on her hips.\n\nI picked up the large bath sponge and shower gel from the ornate basket on the marble between the sinks and joined the two women in the shower, standing between them. Creating some lather, I looked left and right, unsure which wet, beautiful, naked woman I would begin to wash first. \n\n\"You'd better start with our hostess,\" Carmen said, nodding toward Sylvia.\n\nSyliva put her hands up into her hair and lifted her chin, waiting for me to begin soaping her. I began rubbing the sponge on her chest, covering her tits in thick lather and watching it slide down her athletic body, over her stomach and thighs. I stood closer and scrubbed up her raised arms, her shoulders, then moving to her back. I got closer and closer, until her nipples brushed my skin. My hands washed her back, moving down to her fabulously toned ass, kneading it greedily. Presently, I felt another set of hands on my shoulders and back, soaping my skin as I washed Sylvia.\n\n\"No reason we can't all help each other out,\" breathed Carmen in my ear as she slid her hands down to my ass.\n\nI felt her press her breasts against my back and she rubbed them around, slipping on the soap. I dipped my head and kissed Sylvia's neck as I squeezed her ass, and she linked her arms around my neck. She pushed her body against mine as Carmen squeezed me from the other side. I felt the warmth of their bodies as the steam surrounded us, our hands exploring each others' curves. I pushed my hips against Sylvia's, and felt her short pubic hair prickle my cock, sending sparks of pleasure through my groin. I felt a familiar stir of excitement as I rubbed my flaccid cock against Sylvia's cunt, but she slipped against my body as she turned around, her buttocks now resting firmly against my groin.\n\n\"Wash my back, darling,\" she said.\n\nI did as I was asked, rubbing the sponge over her shoulders and down to the curve at her lower back. She put a hand on the wall next to us and began rubbing her ass up and down against my dick, stimulating it. I soon felt the blood rushing into my member, causing it to swell. Carmen's hands pawed my chest and abs, sliding down my body to squeeze Sylvia's ass. I reached back behind me to pull Carmen against me. She squeezed her hand down between Sylvia and me and pulled my slippery, semi-erect cock free, placing it pointing up between Sylvia's soapy buttocks. Sylvia renewed her efforts, jiggling her ass against me, stroking my shaft with her ass cheeks. I moaned and tipped my head back as Carmen drew her nails across my chest and abdomen.\n\n\"He's getting hard again, Syl,\" observed Carmen, looking over my shoulder down to my swelling head as it glided in Sylvia's ass crack.\n\n\"Yes, I can certainly feel it. I think I'm clean enough for now. Now you can wash your boss, honey. Clean off all that cum you sprayed on her tits,\" Sylvia said, her voice soft and low.\n\nShe straightened up and turned me around to face Carmen. I immediately began soaping Carmen's breasts with the bath sponge, slipping my hands over her large chest, feeling her hard nipples slide between my fingers and over my palms. I massaged them with relish, feeling their weight in my hands as the soap dripped down her stomach and thighs. She smiled at me as I fondled her tits, then looked down to my cock, which was inching up to point at her pussy, as if it were a divining rod. As Sylvia had done, Carmen turned around and guided my cock between her full buttocks as I pulled on her hips. She bent her knees and stroked my length with her ass as I cupped her boobs and moaned.\n\nSylvia took the sponge from me and put it on the soap dish, then stood in front of us, rinsing her body clean. I pushed the base of my cock down so it slipped between Carmen's thighs, now rubbing up against her pussy lips as she squeezed it between her legs. She moaned and reached back to grip my forearms as I held her hips, sliding my dick back and forth against her cunt.\n\n\"Ooooh yeah... that's nice, honey,\" she said in a breathy voice.\n\nSylvia held Carmen's face and kissed her on the mouth, then moved her hands down to caress Carmen's ample bosom. She pulled us forward to let the water cascade over us, rinsing the soap from our bodies. She turned off the water, then began kissing Carmen again as my hands groped her breasts, then Carmen's, still stroking my cock between Carmen's legs. They made out for a time, savouring the long, passionate kisses, sucking on each others' tongues, moaning as their lips met and parted.\n\nSylvia began kissing down Carmen's body, sucking her tits, then licking her stomach. Suddenly, as I pushed my hips against Carmen's ass, I felt Sylvia's lips on my dick head, warm and soft. Her tongue swirled around the tip. Carmen pushed my gently back away from her, my cock slipping from between her legs. I saw her hand move down to rest on Syliva's head.\n\n\"While you're down there... \" she said, grinning.\n\nI stood next to her and watched Sylvia kiss Carmen's thighs, moving her way up to her slit, lingering and licking as she approached her target. Finally, she extended her tongue and sipped it slowly between Carmen's labia. Carmen put her arm out and reached around my shoulders as she tipped her head back and pushed her hips forward, moaning loudly as Sylvia licked her slit.\n\nAs her tongue fluttered over Carmen's wet cunt, she watched us with her light blue eyes. I reached down to lift Carmen's leg, bending her knee and resting her outer thigh against my stomach so that Sylvia would have better access to Carmen's pussy.\n\n\"Oooouuu, yeah hun... lick it\" breathed Carmen, her nails digging into my shoulder.\n\nSylvia looked as though she needed no instruction in eating pussy, her lips and tongue moving expertly over Carmen's cunt lips, clit, and opening. Carmen began to moan as Sylvia sucked on her clit, her fingers spreading her cunt lips to give her unfettered access to the swollen bean. I kissed Carmen on the cheek and she immediately turned her head toward me, kissing me hard on the lips, moaning into my mouth.\n\n\"Fuck, she's good,\" Carmen sighed, looking me in the eyes after we made out.\n\nPresently I felt Sylvia's hand slide up my inner thigh to caress my balls, rolling them in her palm, before sliding her fingers up my shaft and stroking my cock at the tip. She smiled up at me as she moved from Carmen's pussy to my cock, slipping her lips over my organ as she pushed two fingers inside Carmen, using her thumb to massage her clit.\n\n\"Mmmm, my turn now,\" I groaned, watching Sylvia bob her head on my dick, sucking it hard as she stroked me.\n\nHer fingers worked in and out of Carmen's fuck hole as she gave me head, now moaning herself. After a moment she pulled away, slipping her fingers from Carmen's pussy and sucking them clean.\n\n\"Oooh fuck, am I ever horny,\" she said between clenched teeth as she stood up and stroked her fingers along her slit. \n\n\"Let's get in the hot tub and make him eat some pussy.\"\n\nShe swiftly left the bathroom, grabbing a soft towel on her way out, her hips swaying. Carmen and I followed suit. Sylvia found the control panel and pushed a button, the hot tub bubbling to life by the large window overlooking the city. I slipped into the water gingerly, feeling the warmth radiate into my body. Carmen put two folded towels down on the tiled edge of the spa, near the steps, and sat, helping Sylvia to sit down next to her. As if they had planned it in advance, both women opened their legs wide and spread their pussy lips with their fingers.",
        "I gaped at the two exposed, bright pink slits at my disposal, my mouth watering involuntarily.\n\n\"Decisions, decisions... \" I murmured, looking back and forth between the two women's beautiful pussies.\n\n\"The decision's not yours, darling,\" Sylvia said, \"You're doing me first.\"\n\nI shrugged to Carmen, who smiled playfully, but I caught a hint of impatience in her eyes as the tip of her finger toyed with her clit. I approached Sylvia and leaned in between her legs, first kissing her with long, slow kisses, our tongues playing in each others' mouths. I kissed down her soap-scented skin over her breasts and stomach, kissing the closely-cropped pubic hair, then softly kissing her thighs.\n\nHer hand found the back of my head and pushed me toward her cunt.\n\n\"Don't waste my time. I'm more than warmed up,\" she growled, forcing my mouth against her pussy.\n\nHer lips were hot, and soft, and wet. I could smell her musky juices mixed with the soap as my tongue lapped at her cunt. I put my hands on the insides of her thighs, squeezing them as I pushed my tongue deep inside her. Her hand gripped my hair and I looked up to see her firm breasts rise as she gasped, her ruby red lips parting. I tongued her pussy up to her clit, sucking it between my lips as I looked into her eyes.\n\n\"Oooooohhh... Mmmmmm yeah... \" she moaned, putting her other arm behind her for support.\n\nCarmen watched me eat Sylvia's pussy with keen interest, her own fingers circling her clit gently, teasing herself. She bit her lip as she leaned toward Sylvia to get a better look.\n\n\"That looks incredible, honey. Is he making you feel good?\" she said.\n\n\"Yes... god yes... he's very good,\" Sylvia replied between breaths, clearly aroused by my oral efforts.\n\nCarmen smiled at me, then leaned closer to Sylvia, her hand moving across Sylvia's tits to her neck, then her cheek. She gently turned Syliva's head to face her own, then began kissing her-tenderly at first. I slid my hand up her thigh and inserted a finger into her pussy. She moaned into Carmen's mouth as their lips parted, their tongues tangling playfully.\n\nAfter a few minutes of making out, Carmen looked at Sylvia. \"May I have a turn?\" she asked.\n\nA bit reluctant at first, Sylvia finally conceded, pushing my face away from her wet pussy and nodding to me.\n\n\"You heard the woman. Lick her pussy good,\" she said.\n\nI kissed Sylvia's cunt lips again before moving between Carmen's legs. She rand her fingers through my hair as she drew me toward her, leaning back a little to give me better access to her parted pussy lips. I wasted no time, kissing and licking her puffy labia before tonguing her pussy voraciously. She had a slightly stronger flavour than Sylvia, and her scent intoxicated me. I flicked my tongue on her clit, then sucked it hard between my lips, my hands sliding up her stomach and over her hips.\n\nI felt her legs tense and her body shudder as I slipped two fingers inside her, curling them to tease her g spot as I pushed my tongue hard on her erect clit. I had wanted to taste Carmen for so long, and the experience was not disappointing. I could hear her rapid breathing, her high moans and cries as I stimulated her. Her moans became muffled, and as I looked up I saw that Sylvia had clamped her mouth over Carmen's, her head rolling as they kissed passionately.\n\nWith my free hand I reached up between Syliva's still parted legs and found her dripping pussy, inserting two fingers inside her tight opening and rubbing her clit with my thumb. She moaned loudly against Carmen's mouth.\n\n\"Oh fuck... he's fingering me too,\" she whimpered.\n\nOver the next while I moved back and forth between the two women, giving them head until my lips and tongue were numb with the effort, my fingers sliding into them, feeling their hot juices drip over my palms and wrists. They alternated between kissing each other, and sucking each other's tits as I pleasured them.\n\nIt was Syliva who came first.\n\nShe had a fistful of my hair, and was mashing my face against her cunt, her hips bucking, her breasts heaving, crying out shamelessly as Carmen squeezed her nipple.\n\n\"Aaaahh! Uuuuunnngh! I'm going to fucking cum!\" she screamed, her blue eyes flashing with desire.\n\nAs I felt the walls of her pussy contract around my fingers, she tipped her head back and cried out, her stomach tightening and her hand holding fast to my hair. I lapped eagerly at her nectar as she came, slurping it as I twisted my fingers inside her. Her body shook violently as she let out a loud, guttural moan, letting her orgasm wash over her.\n\n\"Mmmm, that's it honey, cum on his face,\" cooed Carmen, still pinching Sylvia's nipple as she kissed her neck.\n\nSoon, Sylvia's hand relaxed on the back of my head and her body ceased trembling. She looked back down at me and opened her eyes wide, her pupils large.\n\n\"My goodness... \" was all she could say.\n\nI kissed her thighs and slipped my fingers from her pussy, licking them clean. Carmen, clearly aroused by Sylvia's orgasm, quickly guided me back to her cunt. I needed no encouragement as I lashed her clit with my tongue and fingered her hard and fast. Sylvia leaned against her and kissed her cheek, her hand squeezing Carmen's enormous tits. Carmen watched me with her deep auburn eyes, her lips parted. I maintained eye contact, feasting on her pussy.\n\n\"That's it, darling, be a good boy and make her cum,\" Sylvia said softly.\n\nI felt Carmen's hips begin to buck against my fingers and tongue, her legs shook in the air, suspended on either side of me. Her tits heaved as Sylvia fondled them.\n\n\"Yes... yes, baby... oh my god!\" Carmen moaned loudly, on the edge.\n\nI worked my fingers in her pussy, feeling it convulse as she cried out. Unlike Sylvia, Carmen did not look away from my eyes as she came. I saw in them an explosion of pleasure, a firey passion, a release. Her wetness dripped onto my hand as I curled my fingers inside her, tickling her g-spot, eliciting more cries of ecstasy. Carmen reached down to me, her fingers touching my cheek, trembling as she came. \n\nShe watched me lick her pussy lips as I withdrew my fingers, her body twitching as my tongue brushed against her sensitive clit. Her fingers moved to her cunt and she spread her lips with her fingers, exposing herself, showing me her deep pink pussy.\n\n\"Taste me. Taste my cum,\" she sighed, looking at me with half-closed eyes, wet tangles of her hair sticking to her cheeks and forehead.\n\nI licked my fingers, then bent to her musky pussy, slowly and gently trailing my tongue up between her open lips, dipping the tip inside her fuck hole, teasing her clit again as her body jolted, her tits bouncing, small squeaks escaping her full, parted lips. I licked her cum from her thighs, and off my fingers, savouring her womanly flavour. Carmen stroked her fingers through my hair and managed a weak smile-warm and affectionate.\n\n\"Ok you two love birds, time for a break,\" interrupted Sylvia, giving Carmen's breast one last squeeze before lowering herself slowly into the hot tub, sitting in the corner to my left.\n\nI stood up and held my hand out to Carmen, who closed her legs and took it daintily, letting me guide her into the hot, bubbling water. She sat to my right, pulling me down so I was seated next to her. I put my arms on the side of the tub and sighed, feeling Carmen move closer against me, her hand resting on my right thigh. Sylvia ran her hands through her hair and put her feet against the outside of my left thigh, sighing, her breasts lifting out of the water like a pair of soft melons.\n\n\"Well goodness me... I can see why you're so popular in your office,\" Syliva said matter-of-factly, winding her hair and pulling it over her shoulder.\n\n\"I wonder how many female employees have had the pleasure of your talented tongue, hmmm?\" she continued, looking first to me, then to Carmen.\n\nI felt my face flush and Carmen turned her head away.\n\n\"Oh don't be coy. I already know you're fucking... what was her name? The one my husband's been harrassing,\" continued Sylvia.\n\n\"Courtney,\" I said.\n\nCarmen remained silent, gazing out the window. I looked at her for a moment, then back to Sylvia. She chuckled softly.\n\n\"I know Carmen knows about it. Who do you think first brought it to my attention?\" she said.\n\n\"I... wait, you already knew?\" I asked incredulously.\n\n\"Of course I did.\"\n\n\"Then why...?\" I trailed off.\n\n\"Because I wanted to see if you'd go through with it. You intrigue me. Not to mention how attractive you are. If my husband is perving around the office, then why can't I?\" she laughed.\n\n\"That said, I need to keep a close eye on things. We can't have you stirring up controversy by fucking every woman in your department. I've got my eye on you.\"\n\n\"I wouldn't do anything to compromise you or this company, Sylvia,\" I replied.\n\n\"I'm sure you wouldn't, sweetheart. But that's not going to stop me from watching you,\" she said, and winked.\n\n\"So tell me, honey, are Courtney's tits as perfect as they look?\"\n\nI looked at Sylvia, her sly grin, then smiled myself.\n\n\"Better. I've never seen more perfect breasts. Well, present company excluded,\" I added hastily.\n\nCarmen scoffed.\n\n\"Oh please, don't patronise us. I've seen them too, remember? They're gorgeous.\"\n\n\"Has she given you a nice tit fuck with them?\" asked Sylvia.\n\n\"Yes, a few times.\"\n\n\"That naughty slut,\" giggled Sylvia.\n\n\"She's really not slutty though. She's actually quite conservative, normally,\" I interjected.\n\n\"It's true,\" said Carmen. \"She's a modest, well-behaved Catholic girl. He's somehow managed to unlock the sexual animal inside her.\n\n\"I'm sure this has got something to do with it,\" Sylvia said, her foot sliding over my thigh and her toes batting at my still turgid cock under the water.\n\nI shrugged and smirked.\n\n\"Perhaps.\"\n\n\"I must say, you're being rather chivalrous... defending Courtney from my philandering husband,\" continued Sylvia, running her toes along my shaft.\n\n\"And you're going to have the additional satisfaction of fucking that pervert's wife, as well,\" giggled Carmen.\n\nShe put her hand on my chest and trailed her fingers down into the water, over my abs, finally touching my cock and tickling Sylvia's toes. Sylvia giggled and flicked water at us.\n\n\"Oh? Says who?\" she joked.\n\n\"You've already sucked his cock, tasted his cum, and let him eat your pussy. If you're trying to tell me you're not going to let him fuck you silly tonight then I'll just take him all to myself,\" replied Carmen, her fingers tickling my balls.\n\nI laughed, but looked into Carmen's eyes. She looked back at me, steadfast.\n\n\"You promise?\" I asked her. \n\nI felt her fingers wrap around my thick girth as she smiled.\n\n\"Of course I'm going to let him fuck me. I just wanted to see what he had to offer before giving him my pussy,\" said Sylvia, her toes curling over my dick head. \n\n\"Now shut up and kiss him.\"\n\nCarmen laughed and leaned against me, her big tits pressing against my side. I groaned as she stroked her hand slowly up my shaft, her face approaching mine. Her dark eyes seemed to swallow me whole as I watched her, then slipped closed as her lips met mine. We shared a long, slow kiss, Carmen's warm, soft lips pressing firmly against mine before parting, her tongue slipping out and tracing my lips. Her fingers squeezed my throbbing cock and Sylvia's toes caressed my tip as I moaned.\n\nI heard Sylvia move, sliding next to me until she was seated at my side. I felt her hand slide up my leg until she cupped my aching balls, rolling them in her palm as she leaned in to kiss my neck. My tongue slipped against Carmen's as she stroked me slowly and deliberately. After a minute, I felt Sylvia's hand on the back of my head, turning my face to hers. She kissed me aggressively, squeezing my balls as she pushed her firm breasts against my ribs.\n\nI moved my hands over the womens' back and shoulders, then to their heads. After swirling my tongue in Sylvia's mouth, I pushed the women together, forcing them to kiss each other in front of me. Soon I joined in, all three of us making out. Sylvia's hand soon slid up to join Carmen's on my shaft, and they jointly stroked my cock as we kissed one another.\n\nSylvia pulled away, breathing hard, then stood up.\n\n\"Come on, I need to get that dick inside me now,\" she barked, picking up a towel and hastily drying her body.\n\nCarmen and I stood, exiting the tub and drying each other. Sylvia then took my hand and led me to the large windows. She stood facing the lights of the city, one hand on the glass, the other between her legs, vigorously rubbing her clit.\n\n\"I'll get him ready for you,\" offered Carmen, quickly dropping to her knees and sliding my cock into her mouth, sucking it forcefully.\n\nShe bobbed her head quickly and sharply, letting my dick head hit the back of her throat as she salivated on my column and pumped my shaft with her hand, her tits swaying underneath her. I stroked my hands down Sylvia's back to her toned ass, squeezing it firmly.\n\n\"Mmmm... is he ready yet? I want to feel that cock,\" moaned Sylvia, looking back over her shoulder, her fingers now dipping into her wet cunt.\n\nCarmen pulled me from her mouth and spat on my tip, stroking me rapidly and palming my balls.\n\n\"He's ready all right... \" she mused, smiling up at me. \"Fuck her good,\" she added, winking.\n\nI stood behind Sylvia and bent my knees, letting Carmen guide my cock to Sylvia's slit. It was hot against the tip of me, and she moaned aloud the moment it touched her. She used her fingers to spread her pussy lips and pushed her hips back. I was nearly mad with desire at this point, and gripped her waist firmly with my hands as I pushed forward, simultaneously pulling her back onto me.\n\nShe was tight, but I penetrated her in one firm motion, my cock head popping into her pussy and making her squeak. I did not wait to let her adjust, instead easing inch after inch of my cock inside her.\n\n\"Oh fuck!\" she cried, her legs trembling involuntarily.\n\n\"He's big, isn't he?\" cooed Carmen, her hand still guiding my shaft into Sylvia's fuck hole.\n\n\"Fucking huge... \" was all she could reply.\n\nI felt her fingers still rubbing her clit.\n\n\"No, don't stop. Fuck me,\" she moaned.\n\nI held her waist firmly and began to slide my cock in and out of her hot pussy, moans escaping my lips now as she lifted herself on her toes and bent over further, arching her back as she offered herself to me fully. I fucked her with long, deep strokes, easing deeper into her until my thighs smacked against her ass.\n\n\"Aaaah... come up here and kiss me while he fucks me, honey,\" whimpered Sylvia to Carmen.\n\nCarmen stood, her hands roaming over my ass, then Sylvia's as she watched me fuck her. Sylvia slipped her arm around Carmen's shoulders as Carmen leaned down to suck on Sylvia's hard nipple. Finally, she worked her way up Sylvia's neck to her lips, kissing her passionately as I pounded away at her ass.\n\nCarmen then put her hip against Sylvia's and imitated her, bending over against the glass of the window and spreading her ass cheek with one hand, looking back at me. I felt up her full ass, then spanked it several times.\n\n\"Spank my ass too, baby!\" cried Sylvia, jealous of the attention.\n\nI did as she asked, alternately smacking her ass, then Carmen's, grunting as I saw the desire in Carmen's eyes grow.\n\n\"You want to fuck you boss how, hmmm?\" taunted Sylvia. \"You want to put your big, hard cock inside her and fuck her brains out?\"\n\n\"You know I do. I've been wanting it for so long,\" I moaned, looking not at Sylvia, but into Carmen's eyes.\n\nCarmen leaned her tits and face against the glass and reached back with both hands, spreading her plump ass cheeks to show me her tight asshole and dripping pussy.\n\n\"It's yours now, honey. Fuck me. Fuck my pussy,\" she said in a desperate whimper.\n\nSylvia quickly slipped my cock from her depths and dropped to her knees, gobbling my cock like a pro, sucking her juices from my shaft. I stepped behind Carmen as she presented herself to me, still holding her ass cheeks spread, ready to finally take me inside her after all this time.\n\nI put my hand on her lower back as Sylvia guided my cock head to Carmen's plump pussy lips. When it made contact, we both jumped as if shocked by a spark, and shuddered.\n\n\"Yes... please... I need you inside me... \" pleaded Carmen.\n\nI was unused to this more submissive side of her, and I realised, as my fat dick head began to part her soaked labia, that she had been desperately craving this moment as long as I had.\n\nMy cock eased slowly against Carmen's cunt, and I felt the brief pressure of her resistance, before I slid into her, my girth stretching her wide. She was just as tight as Sylvia, but had more control, letting me penetrate her deeply. We stared passionately at each other with fire in our eyes, our mouths open. Finally, when I was balls deep inside my sexy boss, her eyes slipped closed.\n\n\"Fuuuuuuuuck... \" she moaned in a low, husky voice.\n\nHer nails were digging into the soft flesh of her buttocks and I pushed her against the glass. I felt her body begin to tremble.\n\n\"Oh god... oh my fucking god... you're so... so deep... so fucking deep in me... \" she moaned, her brow creasing, her eyes still closed.\n\n\"Carmen... you feel so good on me... so fucking good,\" I moaned.\n\n\"Fuck me now, honey. Fuck me hard. Use my pussy, my body... I'm yours... fuck me... \" she whispered quickly.\n\nI didn't wait. I pulled out, then plunged back inside her, crying out as I felt her pussy squeeze my aching column.\n\nI fucked her.\n\nI don't know how long I pounded her against the window of the hotel room, my hands smacking and grabbing her ass, running my nails up her back, groping her heavy, swaying titties. Sometimes she leaned back against me and I wrapped my arms around her middle, sometimes I stood still and she worked her hips and ass, stroking her pussy along my cock, sometimes I held her hips and pounded her against the glass so hard her feet would leave the floor.\n\nAt one point she reached back and clawed at my neck and hair, my chest against her back as I held her tits in my hands, squeezing them hard, grinding my cock deep inside her.\n\n\"Fuck baby! Fuck! Yes! Make me cum!\" she screamed as I panted against her neck.\n\n\"Oh god Carmen, yes! Cum for me... cum for me now!\" I groaned back, holding her tighter.\n\nHer cry was animal. Unbridled. Her cunt gripped me tightly as her orgasm overcame her. Her body shivered and shook against mine, our sweaty skin slipping on each other. I kissed and sucked her neck as she came, feeling her pussy pulse on my cock. We moaned and panted and I ran my hands all over her body. She finally relaxed and fell forward as I caught her. I slipped out of her sensitive pussy and carried her to the bed where she collapsed, looking up at me with lust-filled, clouded eyes.\n\n\"... oh my god... thank you honey. Now bring Sylvia here and fuck her,\" she said, breathing heavily as she ran her hands down her body.\n\nI had almost forgotten about Sylvia. She was seated in a leather chair, her legs over the arms, her fingers sliding into her cunt as she lifted a tit to her mouth to suck on her nipple. She quickly stood up and approached me, pushing me onto the bed and straddling me, sucking the pussy juice from her fingers. Without hesitating, she reached down to guide my cock into her and began riding me, putting her hands flat on my chest as her ass slapped against my thighs.\n\n\"I've never seen such hot fucking like I just witnessed,\" she said, smiling. \"Make me cum like that!\"\n\nHer tits bounced in my face as I reached up to fondle them. Using her toned legs, she rode me hard, but with controlled precision, making sure I hit all her pleasure spots. We both moaned as we fucked, Carmen occasionally offering her tits for me to suck as she teased her clit with her fingers.",
        "When I sensed Sylvia was getting close, I sat up suddenly, hooking my arms under her knees as her legs flew out from under her. I leaned forward and threw my legs over the side of the bed, lifting her with me as I turned around to face Carmen. Sylvia hooked her hands behind my neck as I began to pound her pussy hard and fast, wet slapping sounds coming from where I entered her.\n\n\"Oh! Oh! Oh!\" she cried, over and over again, her hands around my neck, her breasts bouncing, her eyes wide and her mouth round.\n\nCarmen lay on the bed, her legs spread, fingering her cunt as she watched me fuck Sylvia. It wasn't long before I felt Sylvia's pussy convulse, her scream echoing off the walls as she tossed her head back in ecstasy. Her toes curled and her feet kicked the air as her nails raked my back and shoulders.\n\n\"Aaaaaaaaagh!\" she screamed, jerking and spasming as waves of bliss washed over her.\n\nThis was the last straw for me. My desperate need for release was finally and inexorably triggered by Sylvia's orgasm. I groaned loudly, a sound Carmen seemed to recognise.\n\n\"Yes baby... cum for us!\" she cried.\n\nNot wasting any time, I tossed Sylvia onto the bed next to Carmen. She bounced and laughed, finally regaining her composure.\n\n\"Cum on us, you big cocked fucker!\" she squealed.\n\nThe women leaned against one another and put their faces together, opening their mouths and sticking out their tongues. They cupped their generous breasts and spread their legs, waiting for their cum shower. I stepped to the edge of the bed and jerked my cock, watching them as a warmth spread from my balls.\n\n\"Oooohhh... fuck yeah... here it comes... \" I groaned.\n\nMy first spurt was like a rocket, shooting forcefully up Sylvia's body and hitting her squarely in the face. I jerked my cock again and arced a beautiful trail of thick, white cum over Carmen's body, watching it splash down on her tits and tummy. I aimed back to Sylvia and let her have several spurts on her bulging tits. My last offering I gave to Carmen, stroking myself and ejaculating several thick loads over her deep pink, swollen pussy lips, watching it drip over her wet slit and over her asshole.\n\nMy head swam as I stumbled back to sit in the chair that Sylvia had previously occupied. I watched the women through half-lidded eyes as they kissed, sharing my cum, rubbing it over each others' breasts and stomachs. Sylvia even dipped her head between Carmen's legs and lapped up my jizz from her liberally-coated labia.\n\nCarmen watched me as Sylvia licked her pussy, then gestured to me.\n\n\"Come join us, honey. Let's have a little snooze together,\" she said in a husky voice, her cheeks still flushed.\n\nI lay down beside her on the bed and put my arm around her shoulders as she rolled against me, kissing me deeply. I felt Sylvia's mouth on my cock, cleaning the last of my cum from me before she crawled up to my side opposite Carmen. I held both women in my arms as we kissed and caressed each other with slow, languid movements, the smell of our sex thick in the air, my body alternately numb and tingling.\n\nBefore long I began to feel sleep wash over me as the beautiful women lay their heads on my chest, their fingers trailing over my thighs, and cock, and stomach. Just before I fell asleep, I felt Carmen's hair against my neck, and her hot breath on my ear.\n\n\"Sweet dreams, my dear. But don't sleep long. I'm not done with you yet,\" she whispered softly as I drifted off, the smell of her perfume pleasantly wafting around me."
    ],
    "authorname": "thewhitestripe",
    "tags": [
        "big tits",
        "office",
        "big cock",
        "cumshot",
        "tit fuck",
        "oral",
        "shower",
        "threesome",
        "bondage",
        "bisexual"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-office-team-building-day-ch-13"
}