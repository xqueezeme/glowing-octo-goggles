{
    "title": "Brad's Road Trip Ch. 06",
    "pages": [
        " Note: This is the sixth chapter in what will probably be a fairly long series. If you haven't read Chapters 1-5, this section won't make any sense. I mean, the sex scenes will mostly stand alone, but there's a pretty significant back-story. Anyway, thanks for reading! Feedback is appreciated! Special thanks to AnInsatiableReader for helping me clean it up. \n\nDay 5\n\nMonday, June 15\n\nPensacola, FL\n\n\"You have six new voicemails.\"\n\nThat was my cell phone...\n\n\"Son of a bitch.\"\n\n...and that was me.\n\n\"Apparently, I'm a really fucking popular guy today,\" I said out loud, which was somewhat pointless considering I was the only one in my car at the time.\n\nBy the time I even noticed my phone blinking, I was on Interstate 10 halfway back to Pensacola from Mobile, Alabama, where I'd driven to catch a midday minor league baseball game. I hadn't given Scott enough notice for him to request time off, so he had to work till 5 p.m. That left me time to drive down to Hank Aaron Stadium in southern Alabama and take in a game. \n\nI left my phone in the car to charge during the game, though, and at some point during the 45-minute drive back to Pensacola, I saw it blinking. Before I even opened the phone, the LED screen warned me that I had 13 text messages. When I flipped it open, I saw that I'd missed eight calls and had some voice messages. \n\nThe first message did not bode well.\n\n\"What the fuck did you do?\" I heard Scott's yelling voice ask. \"Lynette is fucking pissed at me. She says I'm cheating on her. Something about a message from some chick named Stacy. The only Stacy I know is my aunt in fucking Chicago, man. I don't know what this is, but you better fucking fix it!\"\n\n\"Shit,\" I said, again to no one in particular. Stacy had apparently returned my call, but whatever she'd said on the message, it made Lynette think she was calling for Scott. Perfectly understandable, considering I had called from his phone and given her his number. She knew my name, but she might not have used it on the voicemail.\n\nThe next one was Scott again, about 20 minutes after the first one, and even more pissed. Not long after that, Lynette had called.\n\n\"So, some fucking whore left a voicemail on Scott's machine,\" she said. Her voice sounded wild and panicked - nothing like the controlled but sultry tones she'd used to flirt with both Scott and I the night before. \"He said it was for you, but I think he's a lying sack of shit. Anyway, my number's on your phone now. Call me.\"\n\nScott was also the fourth one, and he hadn't calmed down at all. Thankfully, the last two were the two main women in my life - my mom, calling just to check on me, and Kelly. The timestamp was from five minutes before I left the stadium.\n\n\"Baby... I wonder what your face is like right now, now that I just called you that. Anyway, I know you told me your phone would be in the car while you went to the game, but I wanted to leave you a message anyway. Eating lunch, from Jack In The Box, and thinking about you. How horny you got me last night. We definitely need to do that again, as soon as possible. Call me. Bye.\"\n\nEven on my voicemail, that woman's voice had my dick ready to go all George Washington on a cherry tree.\n\nThe voice messages out of the way, I quickly rifled through the text messages. There were only two that hadn't been covered in the voicemail. One was from Becky, who'd texted to tell me that she and Paul were going to move in together and to thank me for pushing them together. I smiled and made a mental note to call her later. The other was from a guy I had just met, right before I left the ballpark. \n\nI tried Scott's cell phone, but I got his voicemail. He must have been teaching. Then I dialed Lynette's number, the one she'd called from, but it was turned off and sent me straight to voicemail. I couldn't fix things with either of them right now, and I didn't have Stacy's number with me. So instead, I did what I would have preferred to do anyway.\n\n\"Are you still on your lunch break?\" I asked when Kelly answered.\n\n\"Yes,\" she replied. \"I get 15 more minutes away from the high school kids who work for me and the future heart patients they sell food to.\"\n\n\"Damn,\" I said. \"Not nearly long enough for me to get you off.\"\n\n\"Says who?\" Kelly replied. \"With your voice, I could be done in three.\"\n\n\"I'm sure you could,\" I answered. \"But I don't perform those kind of services. If you want the best, you have to allow enough time for the best. And we don't have that kind of time at the moment.\"\n\n\"Oooh,\" she said. \"So you're the best now, huh?\"\n\n\"I've always been the best,\" I answered. \"I just wanted to stay at least a little modest until I had you hooked.\"\n\n\"You never had to be modest then,\" she said. \"I was hooked from the first phone call.\"\n\n\"Damn,\" I said. \"All this time, I could have been acting like a cocky S.O.B.\"\n\nI never finished the statement, but I didn't need to.\n\n\"Oh well,\" she said. \"I'm sitting in my car right now anyway, and the last thing I need is for one of the kids to come out here and catch the manager playing with herself.\"\n\n\"Oh, yeah,\" I said. \"Like he'd tell on you.\"\n\n\"Probably not,\" she agreed. \"Still, doesn't mean I want to give him a free show.\"\n\n\"Come on, Kelly,\" I said. \"He's a teenager in the mecca of Mormonville. He's probably never even made it halfway to first base. The least you can do is give him something to deposit in the spank bank for later.\"\n\nShe laughed. Life was good.\n\n\"So, your turn,\" she said, reminding me that it was my day to try not to say anything that would repulse her. Luckily, I had something all lined up and ready to go.\n\n\"Can I just tell you a story instead?\" I asked.\n\n\"No. This is supposed to be something about you,\" she replied.\n\n\"It will be,\" I said. \"It will probably tell you a lot about me.\"\n\n\"Oh,\" she said. \"Well, sure then. If you can pack it into.. what.. 14 minutes, now?\" \n\n\"I'll do my best.\"\n\n*******\n\nAs I approached the home clubhouse at Hank Aaron Stadium, I noticed the three rather attractive women loitering near the entrance almost immediately. None of them were wearing all that much, clearly trying to beat the oppressive summer heat. They all looked fairly drunk - their faces were flushed, they were sweating slightly, and I heard some slurred speech as I passed the group. They had stamps on their hands, meaning they were old enough to drink. Or at least, it meant they had some good fake IDs.\n\n\"Waiting for someone?\" I asked. The shorter blonde smiled and lowered her eyes to the ground, the redhead started giggling, and the tall blonde simply nodded at me with a grin.\n\n\"We've talked to Kellen before and after games since the season started,\" she said. \"We want to actually meet him now.\"\n\nI nodded back at her, then looked over at the 10-year-old kid and his father, who'd been walking with me until I reached the clubhouse door.\n\n\"I'll be right back,\" I said. \"And Ted?\" I addressed the father as I pointed at the girls. \"Don't let them go anywhere.\"\n\nI smiled at all of them and opened the door to the Mobile BayBears' locker room. No one noticed me or even looked up. The trick was to act like you were supposed to be there. It won't fool a good security guard or any decently trained cop, but since there was no security at the door, simply blending in was enough to not attract attention.\n\nI scanned the locker room but didn't see who I was looking for. I did spot a staircase leading down to a basement, though, and I figured it was a private tunnel that allowed the players to get from the field to the clubhouse without having to pass through the fans. So I waited.\n\nA few minutes later, I heard footsteps and I saw the player climbing the steps. He looked up to see me standing at the top and simply gave me a nod. I probably looked like a reporter or some sort of team official, and he saw those all the time.\n\n\"Kellen Howard, right?\" I asked. He stopped and turned toward me.\n\n\"Yeah,\" he said. \"What's up?\"\n\n\"I'm Brad Carver,\" I replied, sticking my hand out. He shook it. \"Quite a show you put on out there today.\"\n\n\"Thanks,\" he replied. \"Tanner doesn't think it's ever been done before, and you don't get the chance to do something like that every day.\"\n\n\"I would guess not,\" I said. \"I mean, just hitting four homers in one game, that happens maybe once a year in the entire league, right? But to get lucky enough to have the bases loaded every time?\"\n\nHe grinned. \"Yeah. My teammates were getting it done today, too.\"\n\nAccording to the program in my hand, Kellen stood about 6-foot-4 and tipped the scales at 235 pounds. He was a farm kid from Hays, Kansas, and he looked every bit the part. His eyes started darting around, looking like he wanted to head to his locker. I raised the ball I'd been holding into view.\n\n\"There's no way of knowing if I'm telling the truth or not, but this is the last grand slam you hit, in the bottom of the eighth inning,\" I said, and his eyes went wild.\n\n\"Actually, there is,\" he said. \"I wanted to see about getting the ball, but the guys upstairs in the video room told me a guy wearing a bright orange polo shirt and wearing a black Atlanta Braves cap had caught it. I figured there was no way I'd get it back.\"\n\nI looked down at my clothes, then took my hat off and looked at it.\n\n\"Yeah, I guess that's me,\" I said.\n\n\"Wow,\" he replied. It got awkward for a moment - clearly, he didn't want to ask me for the ball, but he'd just admitted to wanting it.\n\n\"Can you do me a favor?\" I asked. His eyes clouded a little bit, as he probably thought I wanted money. I quickly got to the next part. \"I actually wasn't trying to catch it. A 10-year-old kid named A.J. was sitting in front of me in the bleachers, and you hit it right to him. It bounced off his glove and landed right in my lap.\"\n\n\"Nice,\" Kellen replied. Then: \"Wait. You didn't give him the ball?\"\n\n\"Actually, I did,\" I replied. \"But I talked him into giving it to you, instead.\"\n\nHe was stunned. \"How?\"\n\n\"It doesn't matter.\"\n\nStill stunned.\n\n\"I'm a pretty big baseball fan, though, and I know a lot about the minor leagues and prospects,\" I said. \"I know you're going to be an All-Star with the Arizona Diamondbacks within five years, or someone else if they're dumb enough to trade you. And I know there are six or seven other guys on this team who are sure-fire big leaguers, too. So, if it's not too much to ask, can you trade this kid a baseball signed by the team?\"\n\nI held the ball out to him. He had every opportunity to snatch it from me and then demand I leave. Instead, he dropped his equipment bag as a big smile spread across his face.\n\n\"I have a better idea,\" he said, and immediately went to Melvin Tanner's office. Tanner was the BayBears' manager. Before he went in, I told him I'd be back.\n\nI ducked back outside to tell Ted and A.J. that Kellen had agreed, and that I'd just be one more minute. I winked at the girls and told them to sit tight, too. I'd only been back inside for a couple of minutes when Kellen and Tanner came out of the office. Tanner had three boxes of brand new baseballs in his arms. Kellen told his teammates what he wanted, and I watched in stunned silence as every single player on the team signed a baseball and threw it into an equipment bag with the Arizona Diamondbacks' logo on it. Kellen took off the jersey he was wearing and signed it with a Sharpie, addressing it to A.J. Another player, Pedro Canon, did the same with his jersey. Pedro had been on base for all four grand slams, and he'd also made a highlight-reel catch to stop another fan from catching a home run hit by the other team. He was one of the other sure-fire prospects I'd mentioned. The winning pitcher for the game, Leo Lozano, signed his hat and laid it on the table along with the two jerseys.\n\nKellen nodded at me, and I went outside to get Ted and A.J. I motioned for the girls to stay put just one more minute.\n\nA.J. was in awe when he saw what the team was giving him. There were 28 baseballs in the bag, as the manager and two coaches had thrown one in as well. Kellen and A.J. posed for a picture, and all the players came up to shake A.J.'s hand. Ted was standing near the wall, almost in tears as he saw his son having the time of his life.\n\n\"Why did you decide to give it back to me?\" Kellen asked A.J.\n\n\"Well, if you don't want it,\" A.J. replied, and everyone laughed.\n\n\"No, I definitely do,\" Kellen replied. \"But, I don't think anyone's ever hit four grand slams in a professional game, major league or minor league. This ball would be worth a lot of money. It's pretty awesome that you're letting me have it back.\"\n\nA.J. smiled. I had told him about the money.\n\n\"I was going to keep it,\" A.J. responded. \"But I told Brad I was in little league here, and he asked me how I would feel if I hit four home runs in a game, if I would want the last ball. I said, yeah, if I could find it. He asked me who I thought that ball would mean the most to. I said probably my mom or dad, or me. He said he thought you'd probably feel the same way.\"\n\nTed and I just stood on the back wall as Kellen looked up at us.\n\n\"So, I thought about it and decided to give it you. Besides, I'm going to play in the majors someday, so I won't need the money.\" Kellen, Ted and a couple of nearby players smiled at that, as did I, as A.J. continued. \"You're the one who hit four grand slams in the game. You should get to decide what happens to the ball.\"\n\n\"Wow,\" Kellen said. \"I can't thank you enough.\"\n\n\"Yeah, you can,\" A.J. said, pointing at the baseballs, the two jerseys and two hats. While they were talking, someone else had signed the bill of their BayBears cap and tossed it onto the table. \"This stuff, this is awesome. Brad said he would try to get me an autographed ball, but this is great.\"\n\nMelvin Tanner walked over to shake A.J.'s hand and talk to him for a few moments, and I beckoned Kellen over.\n\n\"Thank you so much,\" Kellen said. \"I know a lot of fans think all pro players are jackasses, but this really means a lot to me.\"\n\n\"Hey, like A.J. said, you're the one that put on the show,\" I said. \"We should all be thanking you for letting us witness history.\"\n\nWe shook hands, but I held the shake as he tried to pull away. I pulled him closer, to where he could hear me talking softly.\n\n\"There are three girls outside waiting for you by the bleachers,\" I said, and his eyes went wide again. \"I don't know what your life has been like, but I doubt you saw anything like them in Kansas.\"\n\n\"You know them?\" Kellen asked.\n\n\"No,\" I shook my head. \"They were standing there when I walked up, but it wasn't hard to tell who they wanted to meet. I told 'em I'd try to introduce them.\"\n\nKellen waited while I shook hands with Ted, A.J. and Melvin Tanner. Ted thanked me profusely, almost as much as Kellen had thanked A.J. Kellen and I left the clubhouse then. The girls were still waiting, now standing right in front of the door. They all smiled when we came out.\n\nKellen may have grown up in the middle of nowhere, but he'd learned how to talk to the ladies somewhere along the way. Within two minutes of introducing them, he'd gone back into the clubhouse to get his phone and was back outside exchanging phone numbers. They made plans to meet at the redhead's house later that night. \n\nThe taller blonde slid up next to me, cupped my crotch very obviously, and told me I was invited as well. Kellen nodded vigorously at her suggestion, and her two friends smiled and giggled.\n\n\"No, thanks,\" I said. \"I've gotta get back to Pensacola. I might have some action set up there myself. Besides, this is about Kellen. He hit four grand slams. Come to think of it, there's only three of you. You need to find a friend and bring her with you tonight, so he can have one for every slam.\"\n\nImmediately, the three girls began discussing that idea. Kellen pulled me aside.\n\n\"Seriously, man,\" he said. \"What's in all of this for you? You give the kid his ball back, talk him into giving it to me, and then these girls.. man, you know I wasn't going to walk out this door. I would have used the door that leads into the parking lot on the other side of the clubhouse, and I never would have seen them. There's gotta be something I can do for you.\"\n\nI thought about my future plans. A year before I'd left the Marines, I started developing a plan to get into business for myself down the road. Though things were certainly not anywhere near this stage yet, I saw a point in the future where being connected with a millionaire All-Star baseball player could definitely come in handy.\n\n\"Like I said, Kellen,\" I said. \"I'm a baseball geek. Let's trade phone numbers and e-mail addresses so I can keep in touch, and that will be more than enough.\"\n\nHe didn't seem convinced, but he nodded anyway. He grabbed his cell and dialed my phone number, letting it ring all the way to voicemail before he hung up. He then sent me a text message with his e-mail address. I'd left my phone in the car to charge the battery, but I told him I'd send him an e-mail soon.\n\n\"You sure you don't wanna get in on this tonight?\" Kellen asked, waving his hand at the trio of women, who were now on their cell phones.\n\n\"I'm sure, man,\" I replied. \"Thanks anyway.\"\n\nWe shook hands, and as I turned the corner, I saw A.J. and his dad leave the clubhouse and start talking to Kellen again.\n\nNot bad for an afternoon's work, I thought.\n\n*******\n\n\"You turned down an orgy?\" Kelly asked.\n\n\"I tell you that whole story, and your first question is about the sex?\" I asked in return.\n\n\"Yes, because you turned down an orgy,\" she replied. \"That's not the Brad we all know and love.\"\n\n\"How do you know? I was turning down an orgy the day we met,\" I said.\n\n\"True,\" she said. \"But that was so you could talk to me, which makes perfect sense. You passed on this one with no guarantees you'll get laid later.\"\n\n\"Oh, I will,\" I said. \"I might have to stop Scott from trying to castrate me beforehand, but if I can manage that...\"\n\nI filled her in on the situation with Scott, Lynette and Stacy's message on the answering machine, and it cracked Kelly up.\n\n\"I'm glad I can inject some humor into your otherwise taco-filled life, dear,\" I said. If I thought that would make her stop laughing so hard, I was sorely mistaken.\n\n\"Good job, Brad,\" she said when she finally had enough air to talk. \"You're not even there a whole day and you're already making his girlfriend dump him.\"\n\n\"Yeah, well, what can I say?\" I replied. \"I work quickly. And speaking of working quickly...\"\n\n\"Yeah, I know,\" she said, and I could almost see her rolling her eyes. Except, I had no idea what color those eyes were, or what the face surrounding them looked like. \"I should get back in there before the kids torch the place. You'll have something to tell me tonight, right?\"\n\n\"I hope so,\" I said. \"Go to work.\"\n\n\"I'm going, I'm going.\"\n\n*******\n\n\"This better work,\" Scott said. We'd been at T.G.I. Friday's for five minutes, and he was already working on his second beer.\n\n\"It will, Scott,\" I replied. \"It better, anyway. I plan to get laid tonight, and you beating the shit out of me would put a slight damper on that.\"\n\n\"Damn right it would,\" he said. \"I'm expecting to get some, too. And if I don't get some, nobody gets some. At least not anyone sleeping at my house.\"\n\nBefore I could reply, the front door to the restaurant opened and Stacy swept in. It would have been easy to miss her, as she stood just barely over 5 feet tall, but she caught the attention of every male in the immediate area. I'm sure some of the women were looking as well. \n\nThe most obvious attraction was her chest. It had been pretty well contained last night and was again tonight, but when you're that well-endowed, no bra in the world can completely hide the goods. Her face was very attractive as well. She must have been wearing contacts the night before, because tonight she was wearing glasses. She was also wearing a lemon-colored blouse and black slacks, quite the departure from the low-cut red top, almost too-short mini-skirt (if there is such a thing) and four-inch heels she'd been wearing the night before. In the light of the restaurant lobby, her freckles stood out a little bit more, but that did nothing to hurt my interest.",
        "Our table was in easy view of the front door, and she spotted us quickly.\n\n\"Hey, Brad,\" she said as she walked over to us. I stood up to meet her.\n\n\"Stacy,\" I replied, hugging her for a moment before stepping back to take a better look. \"You look even better than you did yesterday.\"\n\n\"Oh, bullshit,\" she said, blushing slightly. \"Last night I was dressed to attract attention. Today I'm dressed to attract paper clips and staplers.\"\n\n\"Well, it worked last night,\" I said, \"And while I can't speak for the office supplies, what you're wearing now is working pretty well for me, too.\"\n\nI pulled her chair out for her, but before she could take it, I grabbed her arm and pulled her into a kiss. She wasn't expecting it, but she got into it pretty quickly. We didn't let it linger long enough to make anyone else in the restaurant nauseous, but I made sure it proved the point. The look on Scott's face was part amusement and part shock.\n\n\"You met my friend Scott last night, I think?\" I asked Stacy when I let her breathe. She had yet to even acknowledge Scott's presence, but she turned a warm smile on him as I introduced them.\n\n\"I think I saw him once, yeah,\" she said. \"I never did get his name.\"\n\n\"And this is Scott's girlfriend, Lynette,\" I replied as the taller brunette girl turned the corner and walked up behind Stacy. Stacy was going for a simple handshake, but Lynette had other ideas, pulling the much shorter girl into a hug that put her face in close contact with Lynette's breasts.\n\n\"Very charming,\" Stacy said as she finally sat down. Her cheeks were flushed, but I wasn't sure if it was from our kiss or her introduction to Lynette's chest. \n\n\"So, Scott,\" I said, and all three turned their attention to me. \"Does your girlfriend have a problem admitting when she's wrong?\"\n\nHe grinned, and we both looked at Lynette, who was trying to shrink into her chair. Stacy looked baffled.\n\n\"Or, I guess a better question,\" I said. \"How are you planning to punish her for not trusting you?\"\n\n\"I'm not sure,\" he replied. \"You have any ideas?\"\n\n\"Several, yes,\" I answered, and despite her embarrassment, Lynette smirked at me. \"Stacy? What about you?\"\n\n\"I'm confused, mostly,\" she said, which I expected. I didn't expect her to leer at Lynette the way she did, though. \"But for her? Yeah, I can think of a couple things.\"\n\nScott raised his eyebrows at that, and Lynette licked her lips for Stacy's benefit.\n\n\"You got me in trouble this morning,\" I said to Stacy. \"I gave you Scott's home number, so you left a message on his machine. But didn't use my name, and Lynette just assumed it was for Scott.\"\n\n\"Oh, shit,\" Stacy said.\n\n\"Yeah, so I've been trying to piece that back together all day,\" I continued. \"Lynette was hanging out over at the bar when you walked in, so she could see that you were really here to meet me.\"\n\n\"Trust me, I am,\" Stacy said, placing a hand on my arm. \"He made some promises over drinks last night, and if this really is his last night here, I'm gonna make sure he makes good on them.\"\n\n\"You?\" Scott asked. \"Make promises?\"\n\n\"Yeah, that might have been me,\" I said. \"Actually, Lynette, I was trying to get Scott to play my wing man for Stacy's friend, but he wouldn't budge. Something about you twisting his nuts into origami.\"\n\nI'd said that mainly for Lynette's benefit, and I could tell from reading Scott's face that he appreciated it. He had dutifully flirted a little bit with Stacy's taller, blonde friend, but she wasn't even playing the same sport as Lynette, much less in the same league. There was never any doubt he'd be leaving alone, and when I'd finally met Lynette later that evening, I understood why.\n\nJust then, the waitress showed up to get everyone's drink order. Scott's tastes hadn't changed since high school - the only difference was that he could legally order his Fat Tire now instead of talking an adult into buying it for him. Lynette ordered a Jack & Coke - my kind of woman - and Stacy ordered some kind of frozen margarita. I knew I was hitting the road at 7 a.m. the following morning, so I stayed safe with a Miller Lite.\n\n\"Well, anyway,\" Stacy said when the waitress walked away, \"I'm really sorry.\"\n\n\"It's okay, really,\" Lynette said, briefly brushing the redhead's hand with her own. \"It was a misunderstanding on my part. I should be more trusting.\"\n\n\"And besides,\" I added. \"If not for this, Scott and Lynette wouldn't have had the chance to leave... oh... 14 f-bombs on my voicemail this afternoon. If nothing else, I know I don't have to teach them how to talk dirty to each other.\"\n\nThat got a chuckle out of everyone else, and the conversation flowed from there. Occasionally, it was Scott and I talking about Marine Corps stuff, or just things from back home, while Stacy and Lynette chatted about living in Pensacola and what the other one did for a living. Scott and Lynette made small talk while I flirted with Stacy, and Stacy and Scott chatted idly while Lynette and I broke into side conversations, mostly about Scott.\n\nThe conversation wasn't entirely based in sexual innuendos, but there was definitely some sexual tension there now that no one was accusing anyone of cheating. Stacy's glance drifted back over to Lynette's cleavage every few minutes, and truthfully, I was having a hard time not looking myself. Stacy's right hand had taken up permanent residence on my left thigh shortly after we'd sat down, and Lynette's left hand claimed my right leg just as the food showed up. I could only guess that Lynette was using her right hand to do things to Scott under the table of which the elderly couple at the next table would simply not approve.\n\nFinally, the dessert Stacy and Lynette were sharing arrived. You know -- rich chocolate cake, chocolate fudge sauce, white chocolate icing, mammoth scoop of chocolate-drizzled vanilla ice cream. The kind of thing you take a look at and you can hear your bathroom scale protesting. \n\nAs they indulged - Scott and I stayed out of it for the aforementioned reasons - I surveyed the alcohol levels of the other three. Stacy was close enough to the bottom of her third margarita when the food showed up that the waitress brought her a fourth, and I guessed that one would be dry by the time we left. Lynette had ordered her Jack & Coke in a regular tall glass and had plowed through two of those. Scott had four empty bottles in front of him, and was about to add a fifth to the collection. \n\nFor my part, I'd ordered a Sprite after my first and only beer, and had switched to water after that. The other three needled me pretty incessantly about it, but if the night went where I was pretty sure it was heading, I'd thank myself later.\n\n\"Well, I'm ready to go,\" Scott said when the girls were done trying to self-induce sugar shock.\n\n\"You're always ready to go,\" Lynette fired back.\n\n\"And I've not once heard you complain,\" Scott said, standing up and pulling out Lynette's chair.\n\n\"If what I heard last night is any indication, she's got no reason to,\" I smirked as I helped Stacy out of her chair. She just looked lost again - Scott and Lynette, on the other hand, stared at me wide-eyed like I'd let the family secret slip. After a second though, both shocked looks were replaced by guilty grins.\n\n\"I keep telling her to keep it down,\" Scott said, feigning remorse.\n\n\"That's on you, bro,\" I said. When he shot me a quizzical look, I continued. \"Women only get loud if you give them a reason.\"\n\n\"Are you going to give me a reason?\" Stacy said, hooking onto my arm as we headed outdoors. She may not have known all the dynamics and the specifics we were talking about, but she could still keep up.\n\n\"We're going to find out,\" Lynette responded, to which I just rolled my eyes and laughed. Scott shook his head in an effort not to laugh, and I caught Stacy licking her lips out of the corner of my eye.\n\n\"Where are we going and how are we getting there?\" Scott asked when we hit the parking lot.\n\n\"Lynette looks ready to jump you,\" I said, \"so my guess is, you two are headed to your house.\"\n\n\"What about you?\" Lynette asked, her eyes flicking back and forth between Stacy and I. I was about to say that we were heading to Stacy's place, but Stacy spoke up first.\n\n\"We'll follow you.\" I raised my eyebrows a little bit but said nothing. It was Lynette's turn to lick her lips now. \n\n\"Sounds good,\" Scott said as he and Lynette headed toward his car. I turned to Stacy and found her dangling a set of keys in my face.\n\n\"You drink too much?\" I asked, taking them from her and leading her to the passenger side of her Honda Prelude.\n\n\"No,\" she said. \"Well, probably. But that's not the reason. It's just much easier to go down on you if I'm not driving.\"\n\nI couldn't get in the car fast enough. Stacy waited until we were away from the lights of the parking lot, but not much past that. Her fingers quickly took care of my belt and my zipper, and within seconds, I was getting my second driver's seat blowjob in as many days.\n\nStacy wasn't quite as good as Sonya the day before, but she wasn't going all out like Sonya had been, either. Stacy took her time, licking slowly up and down either side of my cock, occasionally popping it into her mouth but never letting it stay there too long. She knew what she was doing, though - every now and again, her tongue would slide over the skin on the underside of my cock, just below the head, and I'd inhale sharply.\n\nIn short: Was she going to make me cum? No. Was she making it difficult to follow Scott's taillights as he weaved through Pensacola traffic? Incredibly.\n\nI wasn't just sitting there enjoying it, though. One of the benefits of Stacy being so short was with her leaned over like this, my arm was long enough to reach down to her ass with room to spare. As she continued bobbing up and down on my dick, I started gently rubbing her ass with my free hand, which made her moan around my dick. I almost rear-ended Scott's Yukon.\n\nOnce we got going again, I stopped with all the niceties and spanked Stacy's ass. Her head jerked up off of my dick for a brief moment, and even though it was mostly dark outside, I could still see the fire in her eyes when she looked up at me.\n\n\"I am so fucking your brains out tonight,\" she said.\n\n\"Yes, you are,\" I said, moving my hand from her ass up to the back of her head. I pulled her hair a little bit - the fire flared up again - and then pushed her head back down. \"It's getting cold.\"\n\nStacy went back to work, and I started moving my fingers closer and closer to the crack of her ass. My arm wasn't quite long enough to reach her pussy from behind in this position, but I got as close as I could, running my fingers over her asshole and both cheeks, stopping every so often to land another stinging palm on her ass. Each time I connected just a little bit harder, and each time she moaned around my cock just a little bit louder.\n\nAfter about 10 minutes of driving, the neighborhood started getting familiar. Scott and I had gone on a five-mile run that morning, and I started recognizing the street names and some of the houses we'd passed. A few moments later, Scott pulled into his parking lot, with me trailing behind.\n\nStacy packed my now rock-hard rod back into my khakis as I parked next to Scott and pulled my zipper back up. She neglected my belt, though, and as we got out of the car, Lynette noticed it.\n\n\"Brad, you're supposed to wait to get inside before you start stripping,\" she said.\n\n\"Tell Stacy that,\" I quipped. \"She's a better undresser than she is a dresser.\"\n\nStacy blushed and pulled me forward. Scott unlocked his apartment door, and Stacy and I were the first ones through it. We didn't worry about light switches, furniture or anyone who might be watching. We simply found the closest flat surface - in this case, the La-Z-Boy in Scott's living room - and fell onto it together.\n\nWe made out feverishly for a few moments before Stacy realized we had an audience. Of course, I knew that, but didn't much care. For some reason, though, it made Stacy pause. She broke off the kiss and turned to see Scott leaning against the wall near his bedroom door, his arm wrapped around Lynette's chest as she leaned into him.\n\n\"Keep going,\" Lynette said, followed by Scott's addition of \"Yeah, don't mind us.\"\n\nI looked at Stacy, but she didn't do anything. She looked back at me tentatively.\n\n\"I wouldn't have guessed this, but I think she's a little bit concerned about the spectators,\" I said.\n\n\"Spectators watch the game,\" Lynette said, more to Stacy than to me. \"We're going to be playing it right along with you.\"\n\nWith that, Scott turned Lynette to where she was facing him, then spun both of them around and pushed her up against the wall. His mouth went to hers, and his right hand dipped between her legs.\n\n\"God, I wish his apartment was another mile away from here,\" Lynette said, breaking away from their lip lock for a second. The statement was directed at Stacy, but Lynette would have had to wait an awfully long time for a response. So, I went ahead and answered.\n\n\"And why's that?\" \n\n\"Because I was about 10 seconds from cumming on his fingers when we pulled into the parking lot.\"\n\nStacy bit her lip, but she still stared ahead, transfixed. I watched her for a couple more seconds, and then I got an idea. I reached over and grabbed Stacy by the hair - not hard, but hard enough to make my point. Her eyes snapped onto mine.\n\n\"You know, most places, it's considered rude not to finish what you started.\"\n\nAs I talked, I took Stacy's hand and guided it to my lap. My cock was still rock hard, and it was straining against my pants. I pulled her face back toward mine and pushed our lips together, immediately picking up where we left off. It didn't take long for the heat to return. She pushed me backward on the recliner, grinding her hips into my dick as she fought back against my lips. I roughly kneaded her breasts, pinching nipples I could tell were hard even through her shirt.\n\n\"Easier to do this without clothes on,\" I said, rolling her off onto the arm of the recliner. I quickly yanked off her yellow top, admiring the huge breasts I'd be unlocking in just a second, and then briefly paused to let her slide my orange polo shirt off. We took care of our own pants, me shucking my khakis quickly while it took her just a little bit longer to get rid of her black slacks. That left me in just my boxers and Stacy in a bra and panties combination that matched her bright yellow shirt.\n\nShe hopped back onto my lap, immediately rubbing her panty-clad pussy against my dick, which was thankful to be out of the jeans but still annoyed with the flimsy cotton of my boxers. Her bra was one of those front-fasteners, for which I silently thanked the fashion gods. I made short work of that, and couldn't hold back a whistle when her breasts spilled into view.\n\n\"Spend a lot of time working out our back muscles, do we?\" I asked, and she blushed. I'd known she was stacked since I'd met her the previous night, but both the outfits she'd worn had done a great job of concealing her tits. They were at least a D-cup -- maybe even bigger -- and looked completely out of place on a girl that stood just barely five feet tall.\n\n\"You would think a 5-foot girl who weighed 130 pounds was overweight,\" she said, nodding in response to my question. \"I'm just proportioned differently.\"\n\n\"Different, huh?\" I asked as I cupped one heavy breast in each hand. I squeezed them together and brushed my tongue across both nipples at the same time. She shivered and let out a little squeal as she nodded.\n\n\"Different is good,\" I finished, then quickly buried my face in her cleavage, licking and sucking every inch I could get my tongue and lips on. She squealed again as I pinched her nipples between my fingers and tugged. I quickly discovered that Stacy wasn't a moaner - she was a shrieker. Every time I hit a sensitive spot with either my mouth or my fingers, she let out a yelp, followed by a small giggle. As I massaged her breasts, she started bouncing up and down on my lap like we were already past the foreplay. That sounded just fine to my dick - at that point, I'm pretty sure it was ready to declare war on Fruit of the Loom and whatever company had manufactured her panties.\n\nAfter a few minutes, I picked her up and carried her over to the couch, laying her down and removing her panties as her legs slid from my arms. I knelt down on the couch between her legs, and before I got started, I quickly readjusted so my cock could poke through my boxers. Much, much better.\n\n\"Holy shit,\" Lynette said, and for the first time since we started peeling off clothes, Stacy and I realized we had company. Lynette's skirt and panties lay in a heap on the floor, and Scott was using them as kneepads. He'd thrown her left leg over his right shoulder and pressed her against the wall as he went down on her, but when she pointed us out, he turned around to see what she was talking about.\n\n\"Daaaaamn,\" Scott echoed his girlfriend's comments. \"You could beat the shit out of someone with those things.\"\n\n\"Who says I haven't?\" Stacy replied, grinning devilishly at my best friend and his girlfriend across the room. Scott lingered a little bit longer looking at Stacy's chest, then turned his attention back to Lynette. I chose not to say anything. Instead, I turned around and thrust my tongue into Stacy's pussy.\n\n\"FUCK!\" she said, replacing one of those shrieks with actual English just this once. She quickly went back to the shrieking as I feverishly worked on her pussy with my mouth. I tongue-fucked her as deeply as possible, rubbing my nose back and forth across her clit repeatedly. She kept shrieking, but she started thrashing from side to side as well.\n\nIt didn't take long. Just a couple minutes after I'd gone to work, she gripped my hair as tightly as she could, trying her best to hold me in place as her pussy spasmed around my tongue. Thankfully, I thought, the shrieking didn't increase in volume as she came, or we'd have been interrupted by Pensacola's finest within a few minutes. Instead, she just grunted a few times and announced that she was cumming, which I was sure drew Scott and Lynette's attention.\n\nI kept it up throughout her orgasm, and made no move to stop even when she calmed down. I'd only been down there a couple minutes, and even if she had cum, she deserved more than that. She kept up the intermittent yelping each time my tongue flicked against her clit, and she definitely liked it when I slipped a finger into her snatch. \n\n\"What happened to finishing what I started?\" Stacy asked when she had enough oxygen in her lungs to do so. \n\nI grinned into her pussy. Without pulling away, I just said, \"I'm not stopping you.\"\n\n\"Turn over,\" she said. I rolled over onto my back and grabbed her hips, pulling her down to sit on my face. She pulled my boxers down around my calves and lay down on top of me, going back to work on my cock immediately. It had been doing its best flagpole impression since the parking lot at T.G.I. Fridays, and the few minutes in Stacy's car weren't nearly enough.\n\nI could see Scott and Lynette from where I was laying on the couch, and I watched as she spun him around and forced him back against the wall. She undid his jeans and pulled them down along with his boxers, and she giggled as his cock slapped her in the cheek. I couldn't really tell from my spot on the couch, especially with Stacy's snatch blocking most of my view, but he looked to be about the same size as me, somewhere in the 7- or 8-inch range. \n\nYeah, I know. Guys aren't supposed to check out other guys, but come on. What's life if not one giant competition, anyway?\n\nScott tossed his head back as Lynette went to work on him, and I was forced to do the same after a few seconds. Clearly, Stacy had oral skills that she hadn't shown off in the car. She couldn't deep throat me - or at least, she hadn't yet - but I felt all but one or two inches slip past her lips every time she lowered her head. If she'd done this to me in the car, I probably would have been cumming before we hit the parking lot.",
        "Her intensity made me redouble my efforts on her pussy. I pulled her hips down hard on my face time and time again, driving my tongue in as far as I could with each thrust. I used one hand to pinch one of her nipples, which were conveniently sticking out as she squashed her chest against my stomach. I used the index finger of my other hand to gently rub around the pink rosebud of her asshole.\n\nI felt her shriek again, but this time, my cock was stuffed down her throat and all it did was enhance the blowjob. She pulled up long enough to drop a couple of expletives, then fell back onto my cock. Occasionally, she pulled my cock out and slapped it against her cheek before driving me back down her throat.\n\nShe was thrusting her hips into my face, trying to force my tongue deeper. I knew she was close to cumming again, and truthfully, so was I. I didn't want to come from her blowjob, though, so I had to take care of her quickly. I moved my right hand under her leg and slid it over to pussy, rubbing her inner thigh along the way. I also got my index finger nice and lubed up, using a combination of her juices and my own saliva. I pushed that finger into her ass at the same exact moment I pinched her clit with my free hand, and I could only lay there and take it as the fireworks went off.\n\nShe sat straight up, pulling up off my cock and damn near breaking my finger off in her ass. She started babbling and shouting incoherently, and I quickly adjusted my arm angle to pump in and out of her ass while I furiously rubbed her clit. Of course, my tongue deep inside her pussy probably played the biggest role in her showering me with enough juices to really leave a mess. If Lynette had been worried about leaving a stain on the couch before, there was definitely going to be one now.\n\nWhen she was finished, she collapsed on top of me, her back rising and falling frantically as she struggled to get back to breathing evenly. Sometime during our 69 session, Scott and Lynette had turned to the side. She was still blowing him, but both of them were looking at us now.\n\n\"That was pretty damn hot,\" Scott said. Lynette didn't pull Scott's cock out of her mouth, but she smiled as widely as she could around it and gave us some mock applause.\n\nEven while they were commenting, I was still rock hard and was nowhere near through with Stacy. I slowly slid her down my body, the sweat covering both our torsos and legs making that an easy process. When her pussy finally met my pubic hair, I grabbed her arms and pulled backward, causing her to sit up. My khakis had landed just in front of the couch, and I quickly retrieved a condom from my wallet, tossing it on my leg. She knew what I wanted instantly and made short work of the wrapper, tossing it on the floor with our clothes. She rolled it onto my cock in no time, and a few seconds later, she was bouncing up and down on my cock. Even from behind, I could see the outer edges of her tits bouncing wildly as she repeatedly slammed down on my cock. \n\nStacy was giving Scott and Lynette a full frontal view of her chest and pussy now, but whatever hesitation she'd experienced when we'd first arrived at Scott's apartment was long gone. She cupped her breasts, although her hands were nowhere near large enough to get all of them. She moaned loudly and randomly called out my name, the earlier shrieking apparently gone now that we were actually fucking. \n\n\"Pull my hair,\" she said as she looked over her shoulder. It wasn't a request. I did just that, causing her to squeal as I pulled her head backward. Every few seconds she looked back at me and bit her lip or batted her eyes, but the rest of the time, her gaze was locked on Lynette's mouth and Scott's cock. As she watched them, her language grew increasingly dirty, and I started to realize what she was doing.\n\n\"Hey, Scott,\" I said, and he opened his eyes and looked at me. \"Stacy's putting on a show over here. Think it's time you guys gave her one back.\"\n\nHe grinned and pulled out of Lynette's mouth. She looked none too pleased by that - apparently, she hadn't heard anything I'd said. Her dismay quickly vanished when Scott pulled her to her feet and led her over to the couch. He shot me a maniacal grin as he bent her over the arm, putting his girlfriend's face less than a foot away from Stacy's. Hell, when Lynette bent over, she put one arm on the back of the couch and the other hand on my right foot to stabilize herself.\n\n\"Son of a BITCH!\" Lynette cried out as Scott plunged into her with just one stroke. I swear, the force of his hips as he slammed into her would have been enough to move the couch if it wasn't already against a wall. It wasn't just a one-time deal, either - each subsequent stroke was just as strong.\n\n\"You like yours slow and hard, huh?\" Stacy said, clearly talking to Lynette. After her earlier shyness, I was a little shocked at the sudden boldness in her voice.\n\n\"At first,\" Lynette replied. \"What about you?\"\n\n\"I like everything,\" Stacy replied. At the moment, I was using short, quick bursts of my hips to meet her downward thrusts. \"Right now, I'm loving what he's doing.\"\n\n\"And what is he doing?\" Lynette asked. Stacy may have come out of her shell, but it was obvious that Lynette was used to being in control.\n\n\"Oh, God,\" Stacy said as I reached around to lightly rub her clit. My other hand was on her hip, forcing her down hard on my cock. \"He's fucking me fast, thrusting up as I'm going down...\"\n\nShe trailed off, and no one said anything for a minute until Scott said, \"Fuck, Lynette. That's sexy as hell.\"\n\nIt didn't sound like something I should miss, so I bent sideways to get a look at what he was talking about. Lynette's lips were locked onto Stacy's left nipple, and she was whimpering around it, which was clearly working for Stacy. The redhead bouncing on my lap had her right hand curled up in Lynette's hair, holding her to her chest.\n\n\"Oh, God,\" Stacy said. \"That feels so good.\"\n\n\"You like her sucking your titties, baby?\" I asked. Stacy just moaned in response. I reached around her right side to tweak the other nipple while Lynette stayed latched onto the first. I felt a tongue on my fingers a few seconds later, and switched hands so Lynette could play with the other tit.\n\nWe'd been fucking for maybe 15 minutes when Stacy's voice began to climb the ladder. It started soft and low, like she was saying something only she could hear, but a few moments later, she was alternating between my name, 'Oh, God,' and a variety of expletives in a chant that was pushing the rest of us closer to the edge.\n\n\"Oh, God, oh, God, oh God,\" Stacy started, somewhere just below soprano now. \"Fuck, Brad, fuck, that's so good, Oh, God, fuck me harder, shit, oh fu-\"\n\nShe never got the chance to finish the last word, because Lynette released her tit and kissed Stacy right on the mouth. We could still hear Stacy trying to speak, but it was all coming out as a muffled hum now. I couldn't see exactly what they were doing, but I hoped, just for the sake of future fantasizing, that there was tongue involved.\n\nA few short moments later, when Stacy's voice had climbed as high as I thought it could, I gripped onto her hips with both hands and started jackhammering my hips upward, pounding into her hard and furiously. She screamed into Lynette's mouth as the combination of Lynette's tongue and my actions down below pushed her over the edge, and she came for the third time. I felt her juices engulf my cock with heat, and I could feel them trickling down my balls as well.\n\nWe'd been going at it longer than Scott and Lynette, and since I hadn't had an orgasm since the night before, I was dangerously close. I wanted to at least hold out longer than Lynette though, so I continued to fuck my hips upward into Stacy, holding on for dear life.\n\nThankfully, Scott decided it was his turn to put on a show, and Stacy decided to help him. He sped up his pace, not driving in quite as roughly now but blurring his hips. I could see Lynette's face tense up as his pace increased, and her eyes flew open wide when Stacy reached underneath and pinched both her nipples. Lynette wasn't quite as well endowed as Stacy, but she had nothing to be ashamed of in that department, either.\n\nStacy let go of one of Lynette's tits, licked her palm, and used it to swat the taller brunette girl on the ass, and that was all it took.\n\n\"Oh, FUCK! Cumming!\" she announced, telling all three of us something we would have been able to guess by the successive moans that followed it. With that out of the way, I had nothing holding me back. I re-gripped Stacy's hips and pick my pace back up, which got her attention.\n\n\"You gonna cum in me, Brad?\" she asked. She tossed her hair over her shoulder and looked back at me. \"You gonna shoot all that cum into my pussy?\"\n\nI didn't answer. I dug my fingernails into her upper thighs as I unloaded. Stacy kept chanting for me to come for her, and I'm not entirely certain she didn't have another aftershock of her latest orgasm from all the pounding.\n\nWhen I was finished, Stacy slipped off of me and laid back on my chest. My hands cupped her breasts and we kissed, passionately but not intimately, if that makes any sense. It took Scott a few more minutes and about 100 more 'Fuck me's' from Lynette, but he finally unloaded in her pussy as well, stumbling back to sit in the recliner when he was finished.\n\n\"Holy shit,\" Scott said.\n\nLynette collapsed forward onto the couch, her face landing on Stacy's left leg and mine. We all lay there spent for a few minutes, trying to catch our breath. It was especially hard for me, since Stacy' entire weight was on top of me as well as some of Lynette's. \n\nI felt a hand cup my balls, and knew it couldn't be Stacy's. I had her left arm trapped between my body and the back of the couch, and her right hand was tangled in Lynette's hair again. That meant it had to be Lynette. I looked down at her, and she just grinned at me as she licked Stacy's left thigh. She gave my balls one more squeeze before pulling herself up. \n\n\"I'll be in the bedroom,\" Lynette said, licking her lips for Stacy's and my benefit. She turned her back on us and sauntered down the hallway, swishing her hips from side to side as she walked, putting every runway model I'd ever seen to shame. No one moved or said anything till she went into the bedroom.\n\n\"You ever done anything with a girl before?\" Scott asked Stacy.\n\n\"Last year, my last year of college, I messed around with my boyfriend's roommate's sister,\" she said. \"We just made out and felt each other up, though, and she was nowhere near that hot.\"\n\nShe didn't explain what she meant by \"that hot,\" but neither Scott nor I needed her to.\n\n\"You want to go farther with Lynette?\" I asked.\n\n\"You think she wants to with me?\" she replied.\n\n\"Yes.\" That was Scott and I both simultaneously.\n\nStacy slid off me and stood up next to the couch, but she seemed to be waiting for something.\n\n\"Well, then,\" I said, swatting her on the ass lightly. She did her squeal-and-giggle thing again. \"Go get her.\"\n\n\"What about you guys? You don't want to watch?\" she asked.\n\n\"We'll do more than watch,\" I said, and she grinned.\n\n\"We just need to talk for a second,\" Scott added. I wondered how much he saw of Lynette's hand action right after he got off.\n\n\"Talking is for girls,\" Stacy said, and headed toward the hallway. \"But I think I get it. Just don't take too long. I'm going to join your girlfriend, and I promise you... talking isn't on the agenda.\"\n\nAgain, Scott and I watched, transfixed, as Stacy walked down the hall, and we didn't quit until she turned the corner into the bedroom. She didn't have Lynette's figure and she wasn't showing off for us like Lynette had been, but it was still a sight to see.\n\n\"Were you expecting any of this?\" I asked him.\n\n\"I was, and I wasn't,\" Scott said. \"On the way home, I was fingering her in the passenger seat. She was talking about how hot Stacy was, and how hot she thought it would be if we all did something in the same room. We just weren't sure how you and Stacy would feel about it.\"\n\nMy mind flashed back to the previous night, when Kelly and I had listened to Scott and Lynette fucking. They'd probably listened to us get off, too. Apparently, Scott's mind was in the same place.\n\n\"I figured you'd be cool with whatever, especially after what happened last night,\" he said. \"Just wasn't sure about Stacy.\"\n\n\"I thought the way she froze up at the beginning, that was it,\" I agreed.\n\n\"So, the question is, how far do we want to take it?\" he asked.\n\n\"Well, we could go in the other room and see how far they're taking it now,\" I offered.\n\n\"We can, and I'm sure we will,\" Scott replied. \"But that's not what I meant.\"\n\n\"Ah,\" I replied. \"You saw what Lynette was doing to me, right?\"\n\n\"Yeah,\" he answered. \"She was talking about you last night in bed, asking if she could come out and get you and bring you back in to play.\"\n\n\"And?\"\n\n\"And, I told her I was fine with that,\" he answered. \"She was about to do that, but when she opened the door, she heard you talking on the phone.\"\n\nI nodded. \"So, you just decided to let me hear what was going on, instead.\"\n\n\"That was her idea, but yeah, I was cool with it,\" Scott said. \"Then we heard you and... whoever that was... getting off a few minutes later.\"\n\n\"And?\" Apparently I was all for the one-word questions tonight.\n\n\"I thought it was hot,\" he said. \"Lyn and I have had phone sex in the past, when I've been out of town, and it's never been that hot. It got her all revved up to go another round. We were quieter about it that time. We were doing that when you shut the door. Who was that on the phone, by the way?\"\n\n\"Kelly,\" I answered. \"A girl back in Idaho.\"\n\n\"Ah,\" he said. \"Ex-girlfriend you're gonna hook back up with or something?\"\n\n\"Nah,\" I answered. \"I've actually never met her. I've only known her for about five days, but I'm into her.\"\n\nScott said nothing. I'm not sure if he just didn't know what to say, or if he understood where I was coming from.\n\n\"I'll explain tomorrow morning on our run,\" I continued. \"The night ain't over yet.\"\n\n\"True,\" he said. \"So, you wanna go fuck Lynette, then?\"\n\n\"Are you guys cool enough for that?\" I asked. \"I mean, it's cool to talk about it and all, but honestly, I'm not into ruining people's relationships, man. As much I love getting laid, and as hot as your girl is... if I hadn't been on the phone last night, and she'd come out to get me, you and I would have had to talk before I did anything.\"\n\n\"We're good, dude,\" he said, sitting up in the recliner. \"We've been together about 9 months. Three months in, we started talking about bringing someone else into the relationship. We just hadn't found the right person yet.\"\n\n\"Well, maybe you have now,\" I said. \"Two of them, in fact.\"\n\n\"Yeah,\" he said. \"You think Stacy will mind?\"\n\n\"I doubt she will,\" I said. \"She seemed very into both of you. But if she's not, I don't have to fuck Lynette, either.\"\n\n\"We'll see,\" he said, standing up. \"We better get back there before they finish without us.\"\n\nI stood up and grabbed the condoms from my wallet on the table. Scott was already down the hall when I looked up, so I followed him into the bedroom.\n\nStacy was splayed out on the bed, her legs spread wide open. Lynette was flat on her stomach with her head in between them, and though her long, brown hair covered most of Stacy's crotch, you didn't have to be a rocket scientist to figure out what she was doing.\n\nAnd if we still needed a clue, Stacy gave it to us the moment we walked in.\n\n\"Hi, Scott,\" she said. \"Your girlfriend eats great pussy.\"\n\nI couldn't help but laugh.\n\n\"Damn, Lyn,\" Scott said. \"You shoulda waited till we got in here. I want to see every bit of this.\"\n\n\"You were too slow,\" she said, briefly looking up from her dessert. \"We just started, anyway. Enjoy the show.\"\n\n\"Oh, no,\" Stacy said. \"Do more than enjoy the show. Come here.\"\n\nShe was looking at me when she said it, and I wasted little time kneeling on the bed with my cock next to her mouth. She turned to her right and started sucking my half-hard dick, licking it from the tip to the base, and pumping me with her hand while she flicked her tongue over the tip.\n\n\"You just going to stand there?\" That was Lynette, and she was looking at Scott. That was all he needed, and within moments, Stacy was pumping my dick with her right hand while she sucked Scott's cock off to the left. She did her signature shriek every few seconds, though, which had both Scott and I looking down to see what Lynette was doing.\n\nHer hair was still in the way, though, and Scott motioned for me to take care of it. So, I reached down and brushed her hair back over her shoulder, grazing her cheek and her ear in the process.\n\nShe looked up to see who was touching her. Seeing it was me, she smiled widely.\n\n\"Wanna share?\" was all she said. \n\nI said even less. I leaned down, and Lynette backed up so I could reach Stacy's clit with my tongue. Because Stacy was so short, I had no problems finding an angle that let me eat her out while still keeping my cock up near her face.\n\nStacy went back to sucking my dick for a few seconds, getting me close to fully hard again, and then she alternated back and forth between Scott and I. Meanwhile, Lynette stuck her tongue out and licked the edges of Stacy's pussy lips while I bathed her clit. Our tongues met in the middle more than a few times, and we shared a few sloppy French kisses over Stacy's clit.\n\n\"Jesus, that's driving me fucking crazy!\" Stacy exclaimed, but Scott didn't let her talk for long. She let go of my cock as she took as much of his into her mouth as she could. I extended my right arm out, and I could just barely reach Lynette's pussy. I kept fighting with her over Stacy's pussy, but started rubbing Lynette's clit, as well. She groaned and attacked Stacy's lips with her own, sucking them into her mouth as I pulled back to watch.\n\n\"Scott, your turn to share,\" I said after a few minutes. He leaned down and started eating out Stacy, while I slipped my fingers, drenched with Lynette's pussy juices, into Stacy's mouth.\n\n\"Have a taste,\" I said, and she did, drawing both fingers into her mouth as if she was giving them a blowjob. \n\n\"Damn, girl,\" Stacy said. \"You taste good.\"\n\nLynette's response was a muffled, \"So do you.\" Scott grunted in agreement.\n\n\"You can get you some straight from the source in a minute,\" I said. \"I want some more of your mouth first.\"\n\nWith that, Stacy took my dick back into her mouth. I was fully hard by now, and she got closer to deep throating me than she had on the couch, although there was still about an inch she couldn't take. Apparently, Scott and Lynette were doing quite a number on Stacy, though, because her moans were getting more intense, and so was the vibration on my dick.\n\n\"God, I want to fuck,\" Stacy said when she pulled me out of her mouth. \"But first, I want to eat your pussy.\" Her fingers were wrapped up in Lynette's hair, and she started to pull a little bit. Scott got up and helped Lynette move on top of Stacy in the classic 69 position.\n\n\"Fuck,\" Scott groaned when both girls' tongues were buried in each other's pussies. \"That may be the hottest thing I've ever seen.\"\n\nI nodded in agreement. I briefly thought back to my Saturday night threesome in Oklahoma. These two had just met tonight, so they didn't have the passion Zia and Belinda did, but they were drunk and enthusiastic. That had to count for something.\n\nStacy's heavy boobs were hanging off either side of her body, even with Lynette's legs mashed into them, and I motioned to Scott to take the other one as I laid down next to her and sucked one nipple into my mouth. I kneaded the fleshy mound between my fingers and lightly spanked her nipple before sucking it back into my mouth.",
        "Mainly, though, I wanted to get a birds-eye view of what Stacy was doing to Lynette, so I moved in that direction to get a closer look. Stacy had one hand on each ass cheek, holding them open so she could get her tongue deeper into Lynette's snatch. Every few seconds she'd dip her tongue down to flick across Lynette's clit ever so briefly before pulling back up and tongue fucking her.\n\nScott was watching the other end closely, as his girlfriend ate out a woman who, until last night, was a complete stranger. He and I made eye contact ever so briefly, and we could only grin at each other. It wasn't the first foursome for either of us, but I guessed it was the first one for Scott that involved someone he deeply cared about. As much I avoided mixing emotions and sex, it did make a difference.\n\n\"I need your fingers,\" Stacy said to me. I held my hand over her face, and she quickly thrust my first two fingers into Lynette's pussy. I took the hint and started finger-fucking her. The look on Stacy's face told me Scott had done the same on the other end of the bed.\n\nOf course, I was always one to push the envelope, so in addition to that, I got up on my knees and started rimming Lynette's asshole. My cock rested on Stacy's forehead as I leaned forward, using my free hand to play with one of her tits.\n\nWhatever Lynette did at that point, it worked, because Stacy was suddenly cumming. She shrieked several times in a row and clinched onto the wrist I was using to finger Lynette as she tensed up in orgasm, but her mouth never left Lynette's pussy. As soon as she calmed down, I saw her suck Lynette's clit completely into her mouth. I sped up my fingers in her pussy and started tongue-fucking her asshole as Stacy did that, and within seconds, Stacy's lips, chin and jaw were coated in Lynette's juices. I licked some of it off Stacy's face, not to be tender or loving, but just because I was the only one who hadn't gotten a taste yet.\n\n\"Somebody needs to fuck me,\" Lynette said. \"Right now.\"\n\nScott looked at me, but I was already moving into position. I grabbed two condoms off the nightstand, tossed one to Scott and quickly rolled the other on. I put one foot on either side of Stacy's head and bent my knees until my cock was level with Lynette's gorgeous pussy. Stacy was still gently lapping at her clit when I drove into the hilt.\n\n\"Oh, FUCK ME, BRAD!\" Lynette shouted out, and a moment later, Stacy cried out just as loudly as Scott entered her. Scott held both of Stacy's legs up in the air, but I took one of them from him, using it as leverage to get a good angle on Lynette in this awkward position.\n\nI felt Stacy's tongue snake out and lick my balls as I continued pumping into Lynette, who was kissing Scott while he fucked Stacy. The whole scene reminded me of one of those recycling logos, with the green arrows forming a perfect circle.\n\nI know. Lame thoughts at the most awkward times.\n\nAt any rate, I was basically fucking Lynette in mid-crouch, and the position was absolutely killing my thighs. They were burning like someone had set them on fire, but as much as they hated it, my dick was all about it, and had no desire to switch positions at the moment. To compensate for the pain, I started laying palms and backhands on Lynette's milky ass.\n\n\"Harder!\" She shouted after the first one, and I complied. She egged me on again after the next couple of strokes, but by the time I started leaving handprints on both cheeks, she'd stopped giving me instructions. Meanwhile, Scott was using a technique on Stacy that I'd used pretty effectively on Becky a few nights before. He held her right leg up in the air and was gently biting and nibbling on her Achilles' tendon as he sawed into her pussy.\n\nFinally, I'd had enough of the position and had to quit. I pulled Lynette off of Stacy and laid her on her side. I lay down behind her, lifted her right leg up in the air, and slid my cock back into her pussy. Scott took advantage of the space to pull Stacy's legs over his shoulders, lifting her ass up off the bed as plowed into her. \n\nLynette shot her left arm out and started tugging on Stacy's right nipple, but her face was turned toward me. We settled into an easy pace in the spooning position, fast enough to keep both of us into it but relaxed enough that neither of us were going to come right away. We made out heavily, French kissing as our bodies met with every stroke.\n\nI leaned down to give Lynette's breasts some of the attention I'd been giving Stacy's all night. They weren't as big - maybe a C-cup - but they were plenty full, there was absolutely no sag, and her nipples were the biggest I'd seen in a long time. I chewed on each one, alternating back and forth. After a while, Stacy's hand drifted over to work on Lynette's left breast, so I focused on the right one, which was closest to me anyway.\n\n\"Rub your pussy,\" I said, and Lynette's eyes snapped onto mine. Clearly, she wasn't used to being told what to do, even by Scott. I could tell by the way she'd taken control of the room as soon as she walked in last night, that she was a girl who liked being in charge. She'd basically dictated the flow of the conversation at the restaurant, and she'd kind of been steering things since we got back home. \n\n\"What was that?\" she asked. She'd heard me - the look in her eyes told me so. There was a little bit of playfulness there as she waited.\n\n\"You heard me,\" I said. I drew on my experiences with Kelly - she liked it when I told her exactly what to do and how to do it, even if she knew damn well what I wanted. \"Take your right hand, reach down, and rub your clit. Right now.\"\n\nA look passed over Lynette's face then, and her right hand dropped to her crotch. I could feel her fingers brush the top of my dick as I stroked in and out of her.\n\n\"Good girl,\" I said. \"Rub that clit good and hard.\"\n\n\"Oh, God, Brad,\" she said, gasping at me in between breathes, almost inaudibly. If Stacy or Scott had heard her, they weren't acting like it. \"That's so hot. Please... more.\"\n\nI couldn't help but smile. I wasn't really a dominant guy in bed - sure, I could take control of things and had no problems doing that, but I generally just liked to let things flow. \n\nSomething about Lynette, though, made me get in touch with my dominant side. I really, really liked her, but there was just something about getting a girl that confident to do whatever I told her to do that really appealed to my primitive instincts.\n\n\"Ohhh,\" I said, teasing her. \"You like that, do you?\"\n\nHer eyes lit up as she nodded.\n\n\"I do.\"\n\n\"Kiss Stacy.\"\n\nI moved with her, keeping our rhythm as she twisted her body over to kiss Stacy full on the mouth. Scott had pulled her even farther up off the bed - she wasn't quite hanging upside down, but her upper back and head were about the only parts of her body still touching. Stacy wrapped an arm around Lynette's neck as they feverishly made out.\n\n\"Suck Scott's dick,\" I said. Lynette looked back at me for a second, then pulled off my cock and crawled over to Stacy's pussy. She put a hand on Scott's waist to slow him down, then pulled his cock out of Stacy's pussy and popped it right into her mouth. Scott groaned and tossed his head back.\n\n\"That's not fair,\" Stacy said, giggling at me. \"I was enjoying that.\"\n\n\"You can have it back now,\" I replied, pulling Lynette away from Scott's cock by her hair. She looked back at me again - that playful look was still there, but there was some fire in her eyes now, too.\n\n\"Come here,\" I said, and pulled her up into my arms. She wasn't as small as Stacy, but she was still easy enough to lift off the ground. I swung her over to the wall next to the door, leaving Scott the entire bed to work with. I didn't even look back to see what they were doing.\n\n\"You like being in control all the time, huh?\" I asked her. My cock slipped into her even before I pushed her up against the wall. She wrapped her legs around my waist and clung to my neck. \"Miss Independent, super-confident, woman of the 21st century?\"\n\nI forced her up against the wall and pressed my body into hers.\n\n\"Well, you know what you're going to do now?\"\n\nShe didn't answer.\n\n\"Answer me!\" I said, slapping her right tit.\n\n\"No,\" she cried back.\n\n\"Now,\" I said, and started pistoning my hips into her tight pussy. \"Now... you're going to take this fucking cock, like a good girl. You're going to cum on my cock, you're going to scream like you're in a porn movie, and you're going to like it.\"\n\nShe acted demure now, but I could tell in her eyes she was as excited as I was.\n\n\"Do you understand me?\" I asked as I wrapped my hand around her neck. I was applying no pressure whatsoever, but it was enough to give her a thrill. She bit down hard on her lip.\n\n\"Yes, Brad,\" she whispered.\n\n\"No more, fucking, whispering,\" I said, and drove into her harder than I had since we left the bed. She screamed out at first, but it caught in her throat right away. \"We have company, remember? I want to make sure your boyfriend knows how good I'm fucking you.\"\n\nHonestly, I had no intentions of trying to do anything better than Scott. I was just trying to give Lynette something to remember me by. And hey, if I set the bar higher for him in the process, he'd have a damn good time trying to clear it.\n\nShe cried out in response, and this time, the sound rang out loud and clear as I continued slamming my cock into her, and as a byproduct, slamming Lynette's back into the wall. \n\n\"You like this?\" I asked, knowing full well she did.\n\n\"Oh, fuck, yes,\" she said. It was close to a whisper, but she'd answered while she was inhaling.\n\n\"Louder!\" I yelled.\n\n\"OH, FUCK!\" she shouted. \"You're fucking me so deep!\"\n\n\"Better,\" I grinned.\n\nBehind us, Scott and Stacy were doing something that involved him spanking her ass, which she enjoyed just as much as Lynette did, apparently. However, I barely noticed, and I'm pretty sure Lynette had forgotten they were even there.\n\nLynette had closed her eyes and was now just concentrating on the sensations I was giving her. Her muscular legs were locked behind my waist, and her heels dug into my back. I guessed I'd also have some nail marks on my neck and shoulders tomorrow.\n\n\"How flexible are you?\" I asked, forcing her to open her eyes. They locked onto mine immediately, and once she registered the question, she grinned devilishly.\n\n\"Why don't we find out?\" she replied. That was exactly what I wanted to hear. I backed away from her a little bit, forcing her to support more of her own weight against the wall. I slipped an arm around her left leg to hold it in place, and then I took hold of her right calf. She unlocked her legs for me, and I carefully slid her right leg onto my shoulder. She lifted her other leg up to join it, and then locked them behind my neck.\n\n\"Pretty flexible, I guess,\" she answered. I was still fucking her with short, deep strokes, but neither of us was focused on that while we repositioned. \n\n\"We're about to see just how much,\" I said, and then started walking slowly toward her upper body. I was a step or two away from pressing her knees into her breasts and her feet into her shoulders when I noticed her cringe a little bit. I stopped right there - after all, I was plenty close enough for what I had in mind.\n\n\"I'm not trying to tear anything,\" I replied. \"Well... not yet.\"\n\nShe smiled back at me as I picked the pace back up. This was a new position for me, and I'm sure it was for Lynette as well, but it came naturally for both of us. She was basically folded in half at the waist, with her hands either gripping her ankles or locked around my neck. I didn't know which.\n\nAll I knew was her pussy and my cock were lined up perfectly - I didn't even have to bend my knees to find the perfect angle. I drove into her repeatedly, and she cried out after almost every stroke. I wasn't going particularly fast yet - I was aiming more for how deep I could get with each thrust.\n\nPretty soon, though, she was thrusting her hips out as far as she could to meet me, trying to coax me into picking up the pace. She was breathing harder than she had since I'd pulled her off the bed, and she was biting her lower lip hard while staring at me intently. I knew she was close.\n\n\"Yeah, you like this, don't you?\" I asked, not needing or waiting for an answer. \"You always have to be in control, don't you? Always have to call the shots. Well, how do you like this? Forced up against a wall, with your boyfriend's best friend's cock in your cunt. Huh, Ms. Control Freak?\"\n\nShe let out a low, guttural moan as her eyes rolled back in her head. Her voice spiked every time I bottomed out in her pussy, which was happening about once a second now.\n\n\"Holy shit,\" she gasped. \"So fucking good.\"\n\n\"Yeah, I thought so,\" I answered. \"Tell me this: when you were flirting with me last night on the couch, trying to get me to join you in the bedroom... did you think I'd give it to you this good?\"\n\nThat triggered another series of moans, and this time, I thought her eyes might not roll back to the front. \n\n\"No,\" she answered. \"I thought you would be good, but...\" she stopped suddenly, sucking in air as I tweaked her nipple. \"I didn't expect you to be this good.\"\n\nHer moans and low growls got higher and louder. I moved a hand to her throat and pressed down lightly, just enough to get her attention again.\n\n\"You about ready?\" I asked. She nodded. \"Say it.\"\n\n\"I'm ready,\" she said, clearly not focusing on speaking.\n\n\"I don't know what your boyfriend is doing over there, but I want him to hear you say it.\"\n\n\"Oh, fuck, Brad,\" she cried out, I think partially just for Scott's benefit. \"I want to cum all over your cock. I'm so ready now.\"\n\nI was getting close, too, but not so close that I couldn't pick Stacy's orgasm out of the air behind us. She cried out that she was going to cum and followed that with a long scream. It was muffled, so she was probably face-down and buried in a pillow, but it was still loud enough that it caught Lynette's attention.\n\n\"Oh, God,\" she said. \"He's making her...\"\n\n\"He's making her do what I'm about to make you do,\" I replied. \"And I'm about to make you cum, aren't I?\"\n\nShe only nodded. I sped up, and a few strokes later, Lynette's face contorted into a mask of pure pleasure and froze right into place. She screamed, but again, it caught in her throat, leaving her mouth hanging wide open as I pumped her pussy as fast and as hard as my hips would let me. \n\nWe broke eye contact after a few seconds, and that seemed to bulldoze the dam that had been holding everything in.\n\n\"I'M CUMMING!!\" she announced to me, Scott, Stacy, the rest of Scott's apartment building and half of western Florida. Her face joined her legs on my shoulders, and she started panting into my ear. Her juices had nowhere else to go, so they ran down my legs and dripped onto the floor.\n\nMy ears were ringing now, with Lynette's proclamation and my own heart beat making it hard to hear anything else. Somewhere behind me, I think I heard Scott say he was cumming, but I'm not really sure.\n\nAs good as the angle was with her back to the wall, it was terrible when she was leaning against me and I had to support her entire body weight. So when Lynette was done writhing and squirming on my cock - which probably took at least a full minute - I used my forearm to gently force her upper body away from mine, pushing her back up against the wall. \n\n\"I don't know,\" Lynette started, then paused for a breath before continuing, \"how much longer I can take this.\"\n\nI grinned, and I'm sure there was something ferocious in my eyes. I had no intentions of letting her down before I came.\n\n\"Oh, a little bit longer, at least,\" I said. \"You're gonna sit there and take it until I'm done.\"\n\nShe licked her lips and leaned her head forward now to whisper in my ear. Now that her powerful orgasm had subsided, she was doing her best to reclaim control.\n\n\"Fuck, you're really enjoying this, aren't you?\" she asked. \"You like making me do whatever you want.\"\n\nShe leaned back, and I nodded. When she spoke again, she was louder.\n\n\"You like being in control?\" she said, not shouting but not exactly being quiet, either. \"You like fucking your best friend's girl? Forcing me up against a wall? Making me scream and squirt all over your dick with him standing right here in the room?\"\n\nI didn't even nod this time. I just grunted and drove in faster.\n\n\"Yeah, I know you do,\" she said, but she was gasping for breath again. With any luck, I might get her off one last time.\n\n\"Fuck, you're hot,\" was my brilliant reply. Beads of sweat rolled down her neck and cascaded into the valley between her breasts, undeterred by the constant impact her body was taking from mine. Strands of her dark hair were matted to her forehead and cheeks.\n\n\"Jesus, Brad,\" she said. \"I think you're going to make me cum again. But I want you to join me.\"\n\nI squeezed my eyes shut, threw my head back and growled. I think it's a physical impossibility to move faster than my hips were moving at that point.\n\n\"So, why don't you cum now, Brad?\" she said. \"Fill my pussy with that cum! Please, I need to feel it so I can-\"\n\nI knew what she meant. I didn't stop pounding her, even when I felt the cum start to erupt into the condom. Obviously she must have felt my cock twitch, because her arms behind my neck became like vice grips, squeezing me almost uncomfortably hard. She didn't announce it this time, but she didn't have to.\n\nWith the intensity of this orgasm, my knees got weak. I crumbled to the floor while still spurting into her pussy, and Lynette collapsed on top of me. I stroked upward into her a few more times before completely running out of gas. Lynette fell forward to lie on top of me, and we both fell asleep.\n\nIt couldn't have been more than a few minutes later that my eyes snapped open. Lynette's breathing was soft and steady as she slept on top of me, and she didn't stir as I struggled to my feet, picking her up as I went. I carried her over toward the bed. Stacy was facing me, and Scott had an arm draped around her stomach, spooning her as they both slept. I had had as vigorous a workout as the other three had, but my prudence at the restaurant was paying off now. The girls were drunk, and Scott had had five or six beers, so they were sleeping that off, too. I gently deposited Lynette in front of Stacy and headed for the bathroom.\n\nI wasn't struck by the oddity of this until later, but the moment I got into the hallway, my mind wasn't on the bathroom or what had just happened. Instead, I was mentally searching for my cell phone.\n\nI traipsed into the living room, naked and with the condom still hanging onto my now-limp cock. I grabbed my khakis off the floor and took them with me as I backtracked toward the bathroom.\n\nShe'd called. Just once, about a half-hour ago, but she'd called. I had no idea why I got all junior-high giddy about that, but I did. I was thrilled.\n\nShe had left a voicemail, too, but I didn't even check it. I just called her as soon as the door was shut behind me.\n\n\"Hi,\" Kelly said, purring into the phone.\n\n\"Are you always knuckle-deep in your pussy when I call, or do you just make it sound that way for my benefit?\" I replied.\n\n\"What?\" she asked. \"I just said, 'Hi.'\"\n\n\"Yes, but you made it sound more like, 'Hi, please come fuck me, right now.'\"\n\n\"Well, I would certainly love that, very much,\" she said. \"But I'm just laying here in bed, staring up at the ceiling, hoping if I count enough sheep, today will be two weeks from now and you'll be here.\"\n\n\"And your clothes?\"\n\n\"In the laundry basket.\"\n\n\"All of them?\"\n\n\"Mmm hmm.\"\n\n\"Good,\" I said. \"You've only known me five days, and you already know what turns me on.\"\n\n\"Yeah,\" she giggled in reply. \"My voice, my laugh, my sexuality, my nakedness, my orgasms...\"",
        "\"Don't forget your job,\" I deadpanned. \"The thought of you stuffing taco meat into tortillas all day, it just makes me instantly hard.\"\n\nShe laughed, hard. In the mirror, I couldn't help but notice I had a goofy-ass cheesy smile on my face.\n\n\"Sure,\" she replied. \"Whatever you say.\"\n\n\"So, pretty much, everything about you turns me on.\"\n\n\"Oh, I don't know about that,\" she answered. \"I'm sure there are a couple things you wouldn't like.\"\n\n\"Oh, yeah?\" I answered. \"Like what?\"\n\n\"Yeah, right,\" she said. \"I have like seven more days that I have to tell you something about myself, and I've got to work really hard to keep from saying anything that will make you turn around and go back to Texas. You think I'm just going to blurt something out now?\"\n\nI laughed right back.\n\n\"OK, OK,\" I said. I pressed the phone between my shoulder and my ear and pulled the condom off. I dropped it in the toilet.\n\n\"So, you all done now?\" she asked.\n\n\"With what?\"\n\n\"You didn't listen to my voicemail?\"\n\n\"I can do that later,\" I said. \"Sometime when I can't talk to the real you.\"\n\n\"Ah. I just said that since you weren't answering, I guessed that meant that either Scott had killed you or that you'd worked everything out and were having some fun. So I said if you weren't floating lifelessly in the Gulf of Mexico, to call me back when you were finished.\"\n\nI laughed again. Besides what her giggles did for me, she also had a knack for making me laugh, too.\n\n\"Yeah, it was just a misunderstanding. We got it all worked out.\"\n\n\"I'm sure you did.\"\n\n\"Like, literally, all of us,\" I said. \"Except for Scott and I, I think everybody made everybody else get off at least once.\"\n\n\"Aww, not into guys, honey?\" I heard a gasp after the last word, but I just grinned.\n\n\"Yes, I heard that,\" I answered. \"And very much no.\"\n\n\"Well, give me details already.\"\n\n\"You're insatiable.\"\n\n\"With you, yeah, I can live with that.\"\n\nSo I did. I filled her in on the highlights of the evening while I washed off my cock. By the time I left the bathroom, Scott and I had just entered the bedroom in my story.\n\nThe bedroom door was closed when I passed by, and Stacy was lying on the couch, wide awake, when I got back to the living room. \n\n\"Hold on, Kelly,\" I said into the phone. To Stacy, I said, \"What's going on?\"\n\n\"Everybody woke up at once,\" she said. \"I could tell they really wanted to be alone, so I figured I would sleep out here. There should be enough room for both of us if we don't move a lot. I hope you don't mind.\"\n\n\"No, it's cool,\" I said. \"But, uh...\"\n\nI didn't think I'd ever get tired of making Kelly cum, even if it was just over the phone. Sure, I'd gotten off twice and given five or six orgasms in the past hour or so, but I hadn't made Kelly cum since the night before. That was far too long, and I wanted nothing more than to hear her get off right then.\n\n\"Brad?\" Kelly said.\n\n\"Yeah?\"\n\n\"If she doesn't mind listening, I don't mind an audience.\"\n\nWow.\n\n\"You mean...\"\n\n\"Ask her.\"\n\n\"It's fine,\" I said to Stacy. I crawled onto the couch and lay on my side with my back pressed against the back of the couch. She lay down in front of me with her back to me. \"But I'm on the phone, and our conversation is going to get hot. You OK with that?\"\n\n\"After everything we just did?\" Stacy asked, briefly looking over her shoulder at me. \"Of course I am.\"\n\nWe settled into comfortable positions, with my left arm draped across her huge tits. I was up on my right elbow with the phone in that hand.\n\n\"So, anyway,\" I said, and went back to the story. Kelly's moaning jumped up a notch when I described Stacy's and Lynette's 69, and her breath became ragged right about the time I folded Lynette in half against the wall.\n\n\"I can't believe you fucked his girlfriend,\" Kelly said.\n\n\"He was just as interested in laying it to Stacy,\" I replied. \"It worked out for everyone.\"\n\n\"Yes, it did.\" That was Stacy. I chuckled and squeezed her left breast. She moaned slightly.\n\nI kept telling the story, and while Kelly kept getting closer to orgasm, I noticed Stacy squirming in front of me. Her shoulder was flexing as she rubbed her pussy. \n\n\"Ooh, you like this, huh?\" I asked. Both women said, \"Yes.\"\n\n\"What's she doing?\" Kelly asked.\n\n\"Playing with herself,\" I replied. \"Just like you are, Kelly.\"\n\n\"You're not helping?\" \n\n\"No,\" I said. \"This is all about you.\"\n\n\"Well, what if I wanted you to help her?\"\n\n\"Like I said. It's all about you, and what you want.\"\n\n\"Help her, then.\"\n\nI slid my left hand down to Stacy's pussy, my fingers tangling with hers as we rubbed her clit together. Stacy's breath caught in her throat.\n\n\"Keep going,\" Kelly said.\n\nI was almost at the part where Stacy and Lynette came the last time, so I picked up from there. As I talked, Stacy's left hand reached back and stroked my cock. I'd gotten pretty hard just from lying behind one hot woman and talking to another, but the direct attention had me throbbing. \n\nStacy's body started shaking as I talked about building toward my orgasm. \n\n\"You going to cum, Stacy?\"\n\nShe just whimpered a positive response.\n\n\"Brad, I want to hear her,\" Kelly said. I thumbed the speakerphone button. \n\n\"OK,\" I answered. \"She'll hear you, too.\"\n\n\"Good. Keep talking.\"\n\nI described how Lynette started talking dirty to me, and that was enough to bring Stacy over the edge. \n\n\"Oh, fuck, this is so hot,\" Stacy said. \"I'm cumming on your fingers.\"\n\nMy fingers had stayed on her clit as she fingered herself, and soon, she was getting both our hands wet as she spasmed around them. I never quit talking, and when I got to the part where I came, Kelly couldn't hold back anymore, either.\n\n\"Oh, Brad,\" she whimpered. \"I think I'm going to-\"\n\n\"Cum for me.\" I said it, but Stacy had said it, too, at least the first word of it. Kelly started cussing on the other end of the phone, as she audibly thrashed around. \"Fuck, fuck, fuck, fuck...\"\n\n\"That's it, baby,\" I answered. \"Cum all over your fingers for me. Good girl.\"\n\nMeanwhile, Stacy had picked up the pace with her hand on my dick. \n\n\"What about you?\" Kelly's voice was ragged - I don't think she was even done with her orgasm yet.\n\n\"Your kindness is paying off,\" I replied. \"When you asked me to help her, she started helping me, too.\"\n\n\"Oooh,\" Kelly replied. \"Is she stroking you?\"\n\n\"Yes.\"\n\n\"Imagine that's my hand, Brad. My fingers, stroking up and down your cock. Begging you to cum all over them.\"\n\n\"Oh, Jesus,\" I said. I didn't have any clue what she looked like, but just the thought of it was pushing me close. \n\nStacy turned over to face me, and started jerking me off even faster.\n\n\"Look into my eyes, Brad,\" Kelly said. I kept mine tightly shut, but in my head, I was looking into Kelly's eyes. \"I want to feel you cum, Brad. Shoot that hot cum all over my stomach, all over my tits, on my chin and on my face. I want to feel it.\"\n\nStacy's hand moved even faster, and suddenly, I was there.\n\n\"FUUUCK!!\" I yelled into the phone as I came all over Stacy's massive tits. \"Cumming, baby.\"\n\n\"Yeah, that's it, cum all over me,\" Kelly said.\n\nThe mess wasn't that bad - it was my third orgasm of the night and second in 15 or 20 minutes - but it was still enough to coat most of Stacy's right tit, including her nipple. She leaned forward and planted a kiss on my chest, right in between my pecs, then turned around to get something off the floor to wipe herself off with. I pointed at my shirt, and she grabbed it.\n\n\"Thirteen days, right?\" she asked.\n\n\"Thirteen days,\" I answered.\n\nWe talked for a bit longer, as Stacy went to the bathroom. Kelly had to get up early, and so did I, so after a few minutes, I let her go to sleep.\n\nI didn't want to.\n\nStacy came back a few moments later, all smiles and gloriously naked. I didn't know much about her, but she had one of the most awesome bodies ever created. She came back to the couch and laid down in the same position as before, with her back to me.\n\n\"That was fun,\" she said.\n\n\"It was,\" I agreed.\n\n\"This whole night,\" she continued. \"A bunch of firsts for me.\"\n\nI just laid there, thankful I had someone to lay next to, but feeling guilty because Kelly didn't.\n\n\"So, you don't mind that, as much I like you and what we did tonight, I wish you were someone else right now?\"\n\n\"No,\" she giggled. \"Brad, you're fun, but I've known you for a day. Kelly has known you a lot longer. I'm glad she let me borrow you.\"\n\nI chuckled at that. No point in telling Stacy that Kelly and I hadn't even known each other for a week yet, or that I had a better idea of what most porn stars looked like than I did Kelly.\n\nAnd yet, I was into her. More than I'd ever been into any woman before. That was my last thought before I fell asleep."
    ],
    "authorname": "SpotInTheSand",
    "tags": [
        "brad",
        "kelly",
        "scott",
        "lynette",
        "orgy"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/brads-road-trip-ch-06"
}