{
    "title": "Rain Storms Ch. 03",
    "pages": [
        "A few weeks later, I was still smarting over the fact that I'd been forced to get Eric's help to rent an apartment. It was in my name but he'd had to co-sign for it. Which, I guess, was progress. Ryan kept trying to reassure me that it was, anyway. Eric and Ryan had both helped me move. Well, Eric helped me move; Ryan supervised. Eric and I weren't back together but we had managed to have five or six really halfway decent conversations. We'd also had at least twice that many nasty fights. Ryan assured me that was progress too. \n\nMy new apartment wasn't in Plano, but it was in Richardson, which was the next town over and only a few minutes away from Dylan's house. When Eric discovered that fact, by inadvertently finding out that his parents knew Dylan when he mentioned the firm to them, Eric was none too pleased. It was actually the basis for quite a few of those aforementioned fights, even though I hadn't spoken to Dylan since I had changed jobsites. Dylan and I never did have the breakup conversation but we seemed to mutually accept that it was over the morning we had been late to work. The last week that I worked at his office, we only spoke about issues relating to my job and even those conversations were strained. We weren't compatible and we both knew it. He couldn't be the man that I needed him to be, and I couldn't live with the man that he was. It appeared to be the story of my life. I still missed him. I regretted that I had lost him as a friend but I understood. The attraction between us was too strong, the sex was too good, and the emotions were too powerful for us to just be friends.\n\nAnd I was back to being celibate. Well, not exactly. Most people would consider my sex life to be very active. Ryan still had never invited me to his house, but he spent several nights a week in my bed. Ryan was getting what he needed. Unfortunately, I wasn't. I'm positive that he would have been more than willing to help me out via the employment of a variety of choices in my toy box. I never asked. I knew, from experience, that using dildos just made me hunger for the real thing. They would make me come, and come hard, but left me feeling hollow. I needed warm flesh inside me, a real body over me, and the pleasure of my lover to feel satisfied. \n\nIt was the second day of the second job that I had been assigned since leaving GWG and my lackey was late. His name was Todd, and he was a little bit of a slacker, but he was also a genius so I worked around his inherent laziness. At ten after nine, there was a knock on the server room door.\n\n\"It's about time you got...\" I stalled out when I opened the door to Jason. \"You're not Todd.\"\n\n\"Jas. On,\" he pointed to himself and slowly enunciated his name as if he was speaking to an imbecile.\n\n\"Ass. Hole,\" I retorted in the same tone of voice. \"What are you doing here?\"\n\n\"It's good to see you too,\" he replied sarcastically and then shrugged. \"Roman called me an hour ago and told me to report to you here. That's all I know.\"\n\n\"Well, shit,\" I sighed. \"Don't get me wrong, I'm glad that you're here. I just don't know what happened to Todd. Pop a squat. I'm going to call Roman.\"\n\nJason sat in the chair normally occupied by his predecessor while I called our boss's direct number.\n\n\"This is Roman,\" he answered.\n\n\"This is Rain,\" I mocked.\n\nHe didn't rise to the bait. \"What's up Rain?\" He usually had a sense of humor so something was definitely wrong.\n\n\"Jason just showed up on my site.\"\n\n\"Yeah. I sent him.\"\n\n\"What happened to Todd?\"\n\nRoman sighed. \"We let him go.\"\n\n\"You could have told me,\" I replied. \"Why?\"\n\n\"I shouldn't tell you but... He was sleeping with the client.\"\n\nI was shocked. For more than one reason. There was the obvious one, of course, and then there was the fact that there were no women at the current jobsite, and Todd was, most assuredly, not gay. \"What client?\"\n\n\"Rachel Tulen,\" he named the executive secretary on the last job. \"We knew about it weeks ago but we didn't have anyone to replace him with until Jason could be pulled.\"\n\nRoman misinterpreted my silence as reproach and got snippy. \"I'm running a networking business not a brothel. I didn't think you'd care since you seemed to like Jason. If you're unhappy with it you can come in after work tonight and we can talk about it.\"\n\n\"I'm fine, Roman,\" I assured him. \"I'm just surprised. I didn't see or hear anything inappropriate.\"\n\n\"Mr. Selznick sure did,\" Roman replied, his voice still hostile. \"The office was wired. You would think that a computer geek would know to turn off the security camera before bending the secretary over her boss's desk.\"\n\n\"You would think,\" I agreed.\n\n\"I need to get back to work. Are we done here or do I need to stay late and expect you?\"\n\n\"We're done,\" I assured him. \"Jason is great. I'm glad to have him.\"\n\n\"Good. Later.\"\n\nI stared at the phone on the table after we'd hung up, thinking how close I had come to being Todd. Or, possibly, Rachel.\n\nI went straight home after work and stripped down immediately. I had spent the day crawling around in the ceiling and was covered in God knows what. I turned on the shower to let the water warm up when there was a knock on the door. Grabbing a towel, I wrapped it around my waist and answered the door.\n\nMy jaw nearly hit the ground and I forgot to breathe. Eric stood on my doorstep looking like a fantasy made flesh. His hair was pulled back in a single braid down his back. He was wearing an exquisitely tailored, charcoal gray, three-piece suit with a black, brocaded, banded collar, narrow lapels, and matching vest. Under that, he wore a silver shirt and charcoal gray tie, tied in a Windsor knot. The entire ensemble appeared to be silk and I caught myself reaching out to touch it.\n\n\"Ho. Ly. Shit,\" I moaned.\n\n\"My sentiments exactly,\" he smirked and pointedly glanced down at the obscene tent in my towel.\n\n\"Fuck,\" I groaned under my breath and turned around to adjust the towel, trapping my erection against my belly. Once secure, I turned back. \n\n\"I'm sorry for just dropping in,\" he said. \"I was in the neighborhood and thought that you might care to have dinner with me.\"\n\n\"You were in the neighborhood?\" I asked, suspiciously. \"Dressed like that?\"\n\n\"Yes,\" he replied. \"I had court today.\"\n\n\"Court?\" I asked.\n\n\"The paternity hearing,\" he reminded me. \"Can I come in?\"\n\n\"Oh! Shit! Yes.\" I stood aside and let him in. As he walked by me, I looked. I couldn't help it. Unfortunately, the jacket was long enough to obscure his ass. When he turned suddenly, I was caught staring. The jacket, being open, did nothing to hide his prodigious arousal. My eyes slowly traveled up his body to find him smirking at me. \"Umm. Yeah. How'd it go?\"\n\nHe shrugged off the question. \"Dog and pony show. Strictly for posterity. I was eliminated as a potential father the second they typed my blood, weeks ago.\"\n\n\"What? How?\"\n\n\"The kid is Rh-negative. My blood type is B-positive. The doctor told me that only way to get a negative Rh-factor is to have two negative parents,\" he explained. \"We didn't even have to wait for the DNA results but the court made us.\"\n\n\"Why didn't you tell me that?\" I snarled. \n\nHe held up his hands in surrender. \"Please don't get mad. I don't want to fight. I didn't know that I was supposed to tell you that. I told you that the kid wasn't mine. I didn't think you'd want to keep hearing it.\"\n\nI took a deep breath and counted to ten in my head. Was I overreacting? Probably. Was I going on the offensive for no reason? No. This was important. He should have told me. I let out my breath and tried to reply calmly. \"This is exactly the kind of thing that you should be telling me, Eric. This is the kind of thing that partners share. That was relevant news. You should have told me.\"\n\n\"I'm sorry.\" He dropped his hands. \"I'm trying, Rain. This... It didn't seem important to me because I knew that I wasn't the father. I knew that I didn't fuck her. I thought that you didn't want to hear about it anymore. I should have taken into account that you didn't really believe me and you needed the proof.\"\n\n\"I know that you're trying, Eric,\" I sighed. \"I'm sorry that I jumped down your throat.\"\n\n\"Baby, please hear me,\" he pleaded. \"I have never lied to you. I have fucked up in a lot of ways but that isn't one of them. I know that you don't trust me, and I understand, but I need you to know, I have never lied to you.\"\n\nI just barely managed to stop myself from screaming out all the myriad of ways that he'd betrayed me. I counted to twenty and, when that wasn't enough, tried fifty. He'd never lied to me. He'd cheated on me, kept things from me, broken promises right and left, but he was right. I couldn't think of a single time that he'd ever intentionally told me an untruth, as he saw it. His version of the truth may not match up with mine, and he most definitely omitted things, but not selectively. If he spoke of it at all, he told the whole truth, as far as he was concerned.\n\n\"And Baby...\" he added. \"You really need to put some clothes on. You're insanely hot when you're mad and I haven't touched you in eight months. I am losing what little bit of sanity that I have left right now.\"\n\n\"I'm sorry,\" I replied, justifiably shamed. \"I was about to take a shower.\" \n\n\"Oh fuck,\" Eric groaned and closed his eyes. \"Please tell me that I can join you.\"\n\nThe sexy, husky rumble of his voice made me instantly, painfully hard again. \"No Eric,\" I replied, contrary to every screaming atom in my body. \"Sex muddies the water for us. We're doing better. I don't want to mess it up.\"\n\nHe opened his eyes and nodded. His gaze was full of hope and love and need. \n\n\"Besides,\" I grinned. \"You'd have to take off that gorgeous suit.\"\n\n\"Baby, I will shred this suit if you'll let me touch you,\" he growled.\n\n\"Please don't,\" I smiled. \"I love it. And I thought you offered me dinner.\"\n\nHe sighed wistfully, \"Fine. Go get your hot, sexy body wet and slick with soap...\" He slowed down and trailed off. The thoughts in his head had set him off. His body tensed, his jaw locked, his breath shortened, and his eyes filled with raw lust. He looked like he was seconds from pouncing on me.\n\n\"Maybe you should wait outside,\" I suggested. \"Have a cigarette or something.\"\n\nIt took him a few seconds to get a grip on himself. The whole time I was chanting, 'Don't run. Don't run.' in my head. The worst thing you can do when confronted by a predator is to run. It stirs up their natural inclination to chase. The problem was that I couldn't seem to convince myself that being caught by him was a bad thing. I stood as still as possible while my heart pounded and my dick throbbed until he nodded again and walked out the front door. My body sagged but I didn't know if it was in relief or disappointment. \n\nI took a quick but thorough shower, and dried my hair, but then spent more time in my closet than I had in the bathroom. Over the years with Eric, I had become something of a clothes hound but nowhere in the league of Eric. In the past year, I had bought nothing but work clothes and very casual clothes. I had plenty of very nice business professional and business casual suits, but nothing that would match his level of Gothic elegance. I was getting a little frustrated when I spied a suit bag pushed in the far back corner of my walk-in closet and smiled. \n\nI dressed carefully, enjoying the smooth feel of the silk against my skin. I had bought the suit on impulse right after Eric and I had split up. I had it tailored and had never worn it. It had never even come out of the tailor's bag. I added a vest, shirt, and tie, all silk, from other pieces of my collection, to complete the ensemble. I stepped out the door in time to catch Eric grinding out a cigarette under his heel. He looked up at me and froze. I had taken a page from Ryan's playbook. Everything I had on, head to toe, was pure, snow white.\n\nHe swallowed, hard. \"Are you sure that you don't want to change your mind about the Denmark idea?\"\n\nI laughed and shook my head. \"Not today.\"\n\n\"But you'll wear that when we do?\" he asked.\n\nI smiled at him and changed the subject. \"Do you know what you want to eat?\"\n\n\"Fuck yes,\" he husked, leering at me.\n\n\"Food, Eric,\" I chuckled. \"I'm hungry.\"\n\n\"If I promise not to push, muss you up, or take it too far, will you let me kiss you?\" His voice was calm and level but his stormy gray eyes were rife with emotion.\n\n\"Yes,\" I whispered.\n\nHe immediately stepped into my personal space. His body was barely a hair's breadth from mine but we weren't actually touching. He was so much taller than me that I had to crane my neck back to maintain eye contact.\n\n\"Yes?\" he breathed.\n\n\"Yes,\" I repeated.\n\nHe lowered his head and raised his hands. His lips hovered a mere millimeter above mine and his hands stopped just short of touching my head. \"Say my name, Rain,\" he whispered, his warm breath caressing my face.\n\n\"Eric,\" I moaned.\n\nHe dropped his head a fraction of an inch until his lips came in contact with mine. He stayed like that, not moving, only the barest, feather-light touch of skin against skin, for what seemed like an eternity. With a shudder and a moan, he cupped the back of my head and the small of my back, pulling my body into his, as he ravaged my mouth. This was the Eric that I knew and loved. An inferno raged through me. I could hear the conflagration, and feel the heat of the blaze, that threatened to consume my very soul.\n\nI have no idea how long we stood there, trying desperately to merge our bodies into one being, before we were interrupted by my neighbor.\n\n\"Jesus Christ, that's fucking hot.\" The voice hardly registered over the roaring in my ears.\n\nEric, never quite as affected by our kisses as I was, reluctantly broke away. I whimpered at the loss but gained enough of my mental faculties to realize that, at some point, I had wrapped my arms around his neck. I tried to tug him back down to me and he resisted, forcing me to open my eyes. His face was inches above mine, staring deeply into my eyes. His pupils were blown wide, refuting the idea that he wasn't just as enflamed as I was. \"We have company,\" he husked, not letting go of me but relaxing his grip on my body a smidgeon.\n\nEric glanced down at our feet and my gaze followed his. There was a fat, little, light-brown dog, with large, pointed ears, and a white snout and underbelly, looking up at us. Once acknowledged, little dog wagged its stubby tail and, I swear, it smiled. \"Do you think it cares?\" I asked.\n\n\"No,\" Eric smirked. \"But you might.\" He removed his hand from the back of my head and pointed behind me.\n\nI turned to see a young woman near the front door of the apartment that shared a patio with mine. I stepped out of our embrace in surprise.\n\n\"Don't stop on my account,\" she smirked. \"You guys look like the most erotic wedding cake topper, ever.\" She gave a small wave and leaned back against the door frame. \"I'm Sharon and that's Cujo.\" She indicated the dog.\n\n\"Cujo?\" I grinned.\n\n\"I wanted a Saint Bernard but I ended up with a Corgi,\" she grinned.\n\nSharon was around 5'6 with long, dark-blonde hair, pulled up in a high pony tail. She was slightly heavier than popular fashion allowed, with a cute button nose and glasses. She was wearing denim overalls and a lime-green t-shirt. She was also barefoot and spattered with paint.\n\n\"I'm Rain and this is Eric.\"\n\n\"Rain?\" she asked. \"Seriously?\"\n\n\"Yes,\" I smirked. \"I guess I'm your neighbor.\"\n\n\"Weird.\" She scrunched up her face. \"I thought it was that little, tow-headed guy that I see leaving in the mornings.\"\n\nThe noise that came out of Eric was distinctly feral.\n\nSharon's eyes opened wide in shock. \"Oh fuck. Did I just stick my foot in my mouth?\"\n\n\"No,\" I chuckled. \"Don't mind Eric. He gets surly if he doesn't get fed at regular intervals. That's my friend Ryan. He doesn't live here but he's here a lot.\"\n\n\"Baby,\" Eric urged. \"Let's go.\"\n\nI glared at Eric playfully. \"We're going to go before Grumpy here starts wondering what Corgi tastes like,\" I joked. \"It was nice meeting you.\"\n\n\"You too.\" She waved and called her dog back into her apartment.\n\nEric took me to a little hole-in-the-wall Italian place that had the best carbonara I had ever put in my mouth. Eric had veal and a glass of red wine. I had never developed an appreciation for wine, especially red, as it tended to give me headaches, but Eric was very fond of it. We shared an enormous serving of tiramisu. We kept the conversation light and casual. He told lighthearted stories about people that we both knew, that he still spent time with, and I told funny stories about Jason and Todd. It was, by far, the best evening that Eric and I had spent together in two years.\n\nThe second that we got back to my apartment, Eric gently but insistently pinned me to the wall with his body. \"Let me in, Rain,\" he murmured.\n\n\"You're already inside.\"\n\n\"No, Baby.\" He caressed my face and bent his mouth to my ear. \"Let me IN,\" he breathed.\n\n\"Eric,\" I groaned. \"You promised that you wouldn't push.\"\n\n\"That was before.\" He kissed my neck. \"All bets are off now.\"\n\n\"Eric,\" I whined, fighting to keep my resolve from crumbling. \"Please don't do this.\"\n\n\"Fuck!\" he snarled and pushed away from me. There was something about the sound of whining that flipped his psycho switch. He had an extremely adverse reaction to the noise and I had learned that back when he was first paying me for sex. In my emotional state, I had neglected to temper the whine from my voice, causing Eric to begin pacing and shouting. \"Why the fuck not? Make me understand, Rain! Why won't you let me touch you?\"\n\n\"Things were going so well. Please don't make it bad,\" I begged.\n\n\"How is this bad, Baby? How?\" His voice had returned to a normal level but now it was laced with sorrow. He stopped pacing and turned to face me with a dejected expression. \"I just want to love you.\"\n\n\"It complicates things,\" I tried to explain. \n\n\"How?\" he pleaded. \"Tell me how. I'm trying to respect your boundaries but I don't understand them. Sex was never bad for us. It didn't confuse things. You need me to talk to you. You need me to open up and let you in my head. I get that. I do. But I have needs too. I need to be able to show you how I feel. I need to be able to make love to you, Baby.\"\n\n\"I don't want to lose myself in you again.\"\n\n\"What the hell are you talking about?\" he demanded. \"You never lost yourself in me before. You were always the strong and independent one. You never needed me like I need you.\"\n\n\"What do you mean? I relied on you for everything,\" I argued.\n\n\"No you didn't,\" he replied. \"All I ever gave you, all you ever needed from me, was opportunity. You did everything on your own. You have always been a whole person, Rain. I'm the one. Me. I can't function without you. You make me fucking insane with need. I can't think or breathe without you. All I feel is pain. I can't go another eight months, Rain. I just can't.\"\n\n\"I can't go back to what we were,\" I said. \"I won't survive being hurt like that again.\"\n\n\"I'm not asking that,\" he said softly. \"I'm not trying to take you away from your life. I'm not even asking you to give up anything or anyone. I'm not trying to get you to move back in. I want that but I know we aren't there. I know that I have a ways to go before you'll trust me. I never, ever, wanted to hurt you and I'm doing everything I know how to see that it never happens again. I just want to love you, Baby.\" He moved back against me and tilted my face up. \"Please let me love you.\"\n\nWhen he kissed me, every objection I had dissolved. We needed this. We completed each other. He believed that I was a whole person without him but I knew better. I was only a whole person with him. He felt it when my body relaxed in surrender. I felt his entire body vibrate when he moaned at my acceptance. He broke the kiss long enough to stoop and scoop me up, bridal style, to carry me to the bedroom.",
        "We stripped each other slowly, as if we had all the time in the world. In this, we were of an accord. Three-piece suits have so many layers. Each and every article of clothing that fell by the wayside, co-mingling with its brethren on my bedroom floor, ratcheted up my level of arousal. The first to go was the tie securing his tresses in a plait. I unwound the braid so I could revel in the glory that was Eric's four long feet of hair. The soft wave left behind from the tightness of the weave was somehow even sexier than his normally arrow-straight locks. I didn't attempt to ponder the reasoning behind that. I couldn't have if I wanted to. I couldn't think at all. I was overwhelmed by the all-consuming desire to take him into my body and keep him there, in any and every way possible.\n\nI had been fighting and resisting him for so long that it had almost become ingrained in me. I let it all go. I wanted this. I wanted him. I had never stopped wanting him. Eric had always been a vocal lover, which I adore, but I am just as moved by his nonverbal noises. His mouth never left my skin so the sounds coming from him were primal and animalistic. Regardless, I understood him perfectly. I felt exactly the same way.\n\nWe had been lovers for so long that we knew everything there was to know about each other's bodies. He knew exactly how to play me like a finely tuned instrument. I knew which buttons to push to bring him to the brink and back. We used our hands and our mouths to coerce each other into a mad frenzy. And, when we joined, even with as much time as he'd spent preparing me with his fingers and mouth, and gentle as he was when he burrowed his way inside me, I screamed out in pain and ecstasy. Through the red haze of searing pain, my body was wracked with spasms as I painted our torsos with my seed.\n\n\"Yes,\" he moaned. \"Come for me, Baby. So fucking beautiful.\"\n\nHe moved inside me with deliberately slow and shallow thrusts, milking me through my orgasm, before he plunged deep, picking up speed. \"Fuck, Baby,\" he husked. \"You're so... You feel so... Oh fuck. I can't. I'm gonna...\"\n\nThe tempo of his lovemaking increased and he buried his face into my neck and latched on, sucking the skin into his mouth. Muffled by the skin of my neck, his cry was still very loud in my ear as his back violently arched and his body shuttered with his release. When he took my mouth again, I didn't taste the distinct metallic twang of blood. He hadn't broken skin.\n\n\"I'm so sorry, Baby,\" he panted. \"That was so fast. I'll make it better in a minute. I promise. I'm sorry. I couldn't stop it.\"\n\n\"Eric.\" I cupped his face to make him stop apologizing. \"It was wonderful.\" I pointedly looked down at the mess I had made between our still connected bodies. \"Clearly.\"\n\n\"I'll do better,\" he insisted. \"You deserve better. It's just been so long and I love you so much.\"\n\n\"I love you too.\" I grimaced at the pain in my side as feeling started to return to the parts of my body that weren't directly involved in our conjoining. \"Up for a second. There's something stabbing me.\"\n\nHe raised his body slightly so I could fish the plastic bottle of lube out from under me, wondering how it had gotten there. Eric gazed at my body with a hungry look in his eyes. He kissed my neck then moved down my chest. As he did, his cock slid out of my channel, which made me groan. It was followed by a rush of warm, viscous fluid.\n\nEric had begun cleaning the evidence of my passion off my body with his tongue as the proof of his slowly leaked from my wrecked hole. \"Fuck,\" I groaned. \"Condoms, Eric. You didn't use a condom.\"\n\nHis eyes locked with mine and he brought his head up, ceasing licking me. \"I don't want anything between us, Rain. Ever.\"\n\n\"It's not safe,\" I scolded.\n\n\"I'm clean, Baby,\" he swore. \"I've been poked, prodded, examined, and bled. I have a clean bill of health. I promise. And I haven't been with anyone in eight months.\"\n\n\"But I have!\" I exclaimed. \"I'm the risk! I don't want to give you anything!\"\n\nHis expression softened. \"Rain,\" he sighed. \"You're it for me. I'm never going to love anyone else. I'd willingly share anything you might be carrying. I'd die for you, Baby. As horrible as this disease is, I'd gladly accept it if it means that I get to love you.\"\n\n\"But I couldn't live with that!\" I argued. \"I couldn't stand the fact that I had hurt you, made you sick.\" I grabbed his face roughly and kissed him. \"I love you, you idiot. I don't want to risk you. As sweet and romantic as what you said is, it's also stupid.\"\n\n\"What do you propose we do about it?\" he asked. \"Never really touch each other? Never taste each other? No. That's not acceptable. I want you to come in my mouth. I want to swallow your load and rim you and fill you with my cum. I can't stand the idea that we have to keep a layer of plastic between us. Besides, even if we did, it would all be shot to hell the second you beg for me to bite you. I won't deny either of us that pleasure and you know it.\"\n\nI sighed. He was right and I did know it. It had been a very long time since I had felt his teeth in me and the mention of it alone had caused a rush of adrenaline through my system. I would eventually want him to draw blood. Probably sooner rather than later. He rolled off me and padded to the bathroom while I stewed. He came back with a warm, damp cloth and tenderly wiped my body down.\n\n\"I wanted to lick it off you, but, in deference to your unease...\" he said with a teasing smirk. \"I'll wait until you have settled all this in your head before I do that, ok?\"\n\n\"I need to get tested again,\" I told him. \"It won't be one hundred percent accurate but I'll do it anyway. They'll have to lock me in a nut house if I have to wait five months for any sort of reassurance.\"\n\n\"Five?\" His gaze shifted from my body to my face. \n\n\"Ryan is clean, for sure. He hasn't been with anyone else in a year. Dylan is the only unknown and it's been over a month.\"\n\n\"You could ask him to get tested,\" he suggested. \"That might make you feel better.\"\n\n\"I'd have to talk to him for that,\" I replied. \"You don't really want that, do you?\"\n\nHe didn't respond but the expression on his face spoke volumes.\n\nI left work early the next day to go to the doctor for a blood draw. I made it home at about the time I normally would have been getting off work. As I got out of my car, I nearly tripped over a little brown dog.\n\n\"Hey Cujo,\" I smiled and reached down to pet him. It was probably a mistake because, when I stood back up, the dog bounced and circled around my legs, nearly tripping me, the entire walk to my front door. I was his new best friend.\n\n\"Cujo! Leave the poor man alone!\" Sharon scolded. She was dressed pretty much the same as she had been the day before. Her shirt was hot pink this time and, if possible, there was even more paint on her.\n\n\"Twice in two days,\" I grinned at her. \"We have to stop meeting like this. People will talk.\"\n\nShe grinned back. \"Jealous boyfriend?\"\n\nI chuckled. \"Something like that.\" \n\n\"You're home early,\" she said. \"I try to take him out before normal people get home from work. He gets a little excited by people.\"\n\n\"Ah,\" I nodded. \"That explains why I've never seen you before.\"\n\n\"I'm a bit of a homebody,\" she replied. \"Cujo's the social one.\"\n\n\"You seem fairly social to me,\" I replied, unlocking my door.\n\nShe smiled. \"Thanks.\"\n\n\"See you later.\" I smiled and waved.\n\nI went inside and checked my messages. There were a couple from Ryan so I called him back. \n\n\"What happened yesterday?\" he asked. \"I was getting worried.\"\n\n\"Eric came by,\" I told him.\n\n\"Oh? How'd that go?\"\n\n\"Good,\" I replied. \"He took me to dinner and then he spent the night. It was good. Really good.\"\n\n\"I'm happy for you,\" he said but he didn't sound happy. \"So you're back together?\"\n\n\"No,\" I chuckled. \"Sex, even really amazing sex, does not solve our problems. It's what I want, eventually. You already know that. But it's a long road and it would be disastrous to try to rush it. But it does give me hope that it's where we're headed.\"\n\n\"Well, I'm really happy for you,\" he repeated. \"Look, I've got to go. I'm going to be really busy tonight so I'll talk to you tomorrow. Ok?\"\n\n\"Ryan? Are you upset?\" I asked.\n\n\"No,\" he replied. \"I'm just distracted.\"\n\n\"I love you, Ryan,\" I said. \"That's not going to change. I'm not going anywhere. No matter what happens with Eric down the road, I still want you in my life. And, as long as you want to be there, in my bed.\"\n\nHe sighed. \"I love you too, Rain. I'll talk to you tomorrow, ok?\"\n\nAfter we hung up, I went to take a shower and change into some comfortable clothes. I was poking around in the kitchen, trying to decide what to make for dinner, when Eric called.\n\n\"Hey Baby,\" he purred. \"Where do you want to go for dinner?\"\n\n\"I'm going to stay home.\" \n\n\"That sounds good too.\"\n\n\"No, Eric,\" I replied. \"I'm going to stay home alone.\"\n\n\"Why, Baby? Are you upset with me?\"\n\n\"Not at all,\" I assured him. \"I just can't see you tonight.\"\n\n\"Do you have other plans?\" he asked, quietly.\n\n\"No.\" \n\n\"Then I don't understand. You'd rather do nothing than see me?\"\n\n\"No. I want to see you. I want to see you so badly that it hurts. That's why I can't,\" I explained. \"It's too easy to fall back into a bad place, Eric. We need to take this slowly so that doesn't happen.\"\n\n\"I won't make the same mistakes, Rain. I promise. I'm trying so hard.\"\n\n\"I know, my love. But you're not the only one that made mistakes. I have stuff to work on too.\"\n\n\"What do you mean?\" he argued. \"You didn't fuck us up.\"\n\n\"You weren't in this alone, Eric. We both screwed up. Your mistakes were just more dramatic.\" I smirked, \"When you fuck up, you do it loudly.\"\n\n\"Yeah I do,\" he chuckled. \"So I can't see you tonight?\"\n\n\"Not tonight,\" I responded. \"Soon, though. This weekend at the latest.\"\n\n\"This is Wednesday, Rain,\" he pointed out. \"Two nights without you in my arms is too many. One night is too many.\"\n\n\"Slow down, Kemosabe,\" I chuckled. \"I'm going to miss you too. But I would rather miss you now than destroy any future that we have by rushing things, right?\"\n\n\"I'm in this for the long haul, Rain,\" he replied softly. \"As in, forever. As long as you both shall live.\"\n\n\"Then give it some time,\" I insisted. \"It's worth the wait to do this right, don't you think?\"\n\n\"Yes.\"\n\nI was left with the decision of what to do for dinner. It was hard to cook for one person and it wasn't much fun. I knew that the choice to slow things down with Eric was the right one. I needed to continue thinking with my brain and not my heart or my cock... or ass, whatever. Everything just got so messed up when I was around him. I got so emotional and crazed. It was important to step back and tread carefully. That didn't resolve the problem of what to do for dinner. Then I had an idea.\n\n\"Hey Rain. What's up?\" Sharon asked as she opened her door, pushing up her glasses.\n\n\"I was wondering if you'd like to have dinner with me.\"\n\nHer mouth dropped open in surprise. \"Me?\" she squeaked. \n\n\"Oh God,\" I backtracked. \"I'm so bad at this. I meant as friends. Not a date. It's just that I was in the mood to cook and I hate cooking for one person. I thought you might be in the mood to eat.\"\n\nShe just stood there, blinking at me. \n\n\"I'm not a bad cook,\" I assured her. \"I won't poison you or anything.\"\n\n\"What about your boyfriend?\" she asked.\n\n\"Which one? Ryan or Eric?\"\n\n\"You have two boyfriends?\"\n\n\"No. I don't have any boyfriends,\" I replied, confusing her. \"It's a long story but the sum of it is that neither one is coming over tonight. So what do you say? Are you in the mood to eat?\"\n\nShe smiled. \"I'm always in the mood to eat. Let me change into something with less paint on it and I'll come over.\"\n\nI smiled. \"Ok. You can bring Cujo if you like. My place is puppy proof.\"\n\nHaving said that, I darted around my apartment while she changed at hers, just to make sure there was nothing lying around that I didn't want Cujo chewing on. Luckily, I kept a fairly clean apartment so there was nothing on the floor. \n\nShe was quick. She knocked on my door within minutes. She had changed into jeans and a bright blue t-shirt with Eeyore on it and had taken her hair down. She cleaned up nice and I couldn't fail to notice that she wasn't as heavy as her baggy overalls had led me to believe. She was actually quite cute and buxom, and I imagined that she could be a knockout with a little bit more effort.\n\n\"No Cujo?\" I asked when she stepped inside without the little dog.\n\nShe shook her head. \"He had dinner already. This is nice,\" she said, looking around my living room.\n\nI laughed. All of my apartments had only the barest essentials and absolutely no personality whatsoever. \"It's boring as fuck. You don't have to be nice to me.\"\n\nShe grinned. \"It could use some flair.\" She followed me into the kitchen. \"I admit that I expected something different from a gay man who dresses like you do.\"\n\n\"I've never really gotten into the whole decorating thing,\" I told her. \"I'm more function over form. Do you have any food allergies or aversions?\" I asked.\n\nShe shook her head. \"Nothing spicy. I don't like spicy.\"\n\n\"That's ok,\" I grinned. \"I can't handle spicy today anyway.\"\n\n\"Are you feeling ok?\" She seemed concerned. \"Upset stomach?\"\n\n\"Um. No.\" I could feel the heat staining my skin. \"I'm fine.\"\n\n\"Oh.\" She started laughing. \"Nevermind. I get it. Or... you know. You got it.\"\n\n\"Oh geeze.\"\n\nShe kept laughing and I kept blushing. \"I should have realized with all the noise last night.\"\n\n\"Noise?\" I asked.\n\n\"Um. Yeah.\" She snickered and mimicked me, \"Fuck me hard, Eric. Oh yes. Oh fuck...\"\n\n\"Ho. Ly. Shit.\" I gaped at her. \"You could hear that?\"\n\n\"Oh yeah,\" she smirked. \"Our bedrooms do share a wall. Don't worry about it though. He's much louder than you. It's just that his voice is deeper and it's harder to make out words.\"\n\nShe was so casual about it that I was forgetting to be embarrassed. \"Most of his noises aren't actual words,\" I chuckled.\n\n\"So he's not your boyfriend, huh?\" \n\nI pulled out some chicken and started throwing together a stir-fry, without the peppers. \"No. He's my ex-boyfriend. The other guy, Ryan, he's a good friend. My best friend.\"\n\n\"Wow. I've never been that... affectionate with my exes,\" she said. \"Can I help?\"\n\n\"Not really,\" I replied to her offer. \"It's a one person job. You can pour some drinks, if you like.\"\n\nShe moved around my kitchen as if she owned the place. She didn't ask where anything was and she seemed to find everything without having to look twice. She didn't even need instructions on how to make a White Russian, but she did make it quite a bit stronger than I normally drink them.\n\n\"Your kitchen is setup just like mine,\" she explained to the puzzled look on my face. \"It's really the only logical way to setup this kitchen, I guess.\"\n\n\"Makes sense.\" I turned back to the stove. \"What do you do for a living?\"\n\n\"Part time secretary. I only work enough to support my habits.\"\n\n\"Habits?\"\n\n\"Eating, feeding the dog, paying rent, that kind of thing,\" she smirked. \"I'm a starving artist. Someday I hope to be a world famous artist.\"\n\nI nodded. \"That explains the paint. Do you ever sell anything?\"\n\n\"Sometimes,\" she grinned. \"I'm really quite good. I just haven't been discovered.\"\n\nI chuckled. \"Seeing as most artists only become famous posthumously, count your blessings.\"\n\n\"Ah. A cynic, I see,\" she grinned.\n\n\"Oh no. I'm very supportive of the arts, in my own way.\"\n\nShe glanced around my apartment with its various shades of beige. \"I see that.\"\n\nI laughed. \"No, really. Eric is an artist.\"\n\n\"Really?\"\n\nI nodded. \"He rarely paints. Sculptures, mostly. All kinds of mediums. He's very good.\"\n\n\"Does he sell?\" she asked.\n\n\"Yes. Almost everything. Except for the stuff that he trashes part way through because he's unhappy with it.\"\n\n\"That's the benefit to being a painter,\" she smiled. \"I can just paint over it.\" \n\n\"He only paints on commission.\"\n\n\"Can I ask you a personal question?\" \n\n\"Sure,\" I smirked. \"You probably already know more about me than I care to think about.\"\n\n\"So you're sleeping with both of them?\"\n\n\"I guess so, yes. Not at the same time,\" I said. \"Although, that would be pretty hot.\"\n\n\"Yeah it would,\" she smirked. \n\nI let that image float around in my mind for a while then sighed. \"It would never work. They barely tolerate each other.\"\n\n\"So how does that work? I mean... I thought you were a top but the things that I heard last night would indicate otherwise.\"\n\n\"I guess I'd call myself a versatile bottom. Ryan is strictly a bottom and Eric is a top. I like both but I prefer to bottom.\"\n\n\"They're so different from each other. It's hard to believe that anyone would be interested in both of them.\"\n\n\"They're like polar opposites,\" I agreed. \"Not just in appearance. Ryan is logical and methodical. Eric is emotional and temperamental. Ryan is sweet and caring and Eric is domineering and gruff. They bring out totally different sides of me. I'm completely, head-over-heels, in love with Eric, but we have a hard time being together. I could be very happy with Ryan but he doesn't want that. He wants to be friends.\"\n\nShe smirked. \"He sounds more than a little friendly when he spends the night.\"\n\n\"I'm so buying you some earplugs,\" I teased.\n\nShe stuck out her bottom lip in a pout. \"Don't do that. I'm living vicariously through your inherent sluttiness.\"\n\nI laughed. \"I guess I am a slut. I've never been a slut before. So what about you? I don't hear any tell-tale noises from your side of the wall.\"\n\n\"Don't remind me,\" she frowned. \"I've been single far too long. My ex was a total loser. He expected me to support him while he went out and partied and fucked around. I tossed his ass out.\"\n\n\"I'm sorry to hear that.\"\n\n\"No worries.\" She waved her hand in dismissal. \"The sex wasn't great anyway. It was like he only cared about getting himself off.\"\n\n\"That's lame,\" I grimaced. \"The whole point of being the dominant partner is what you're doing for your lover. Otherwise, you might as well just be jacking off.\"\n\nShe laughed, \"I love you.\"\n\nI smirked. \"Don't let Eric hear you say that. He'll flip his shit.\"\n\nHer mouth opened in shock. \"Over a girl?\" \n\n\"Oh yeah,\" I drawled. \"He hates the idea that anyone else ever touches me. But a woman? He goes psycho. I don't know why it's worse but it is. He can't handle even the thought of me being with a woman.\"\n\n\"Weird.\"\n\n\"Yeah it is,\" I agreed wholeheartedly. \"Especially since he thought sleeping with women wasn't cheating on me.\"\n\n\"Holy crap!\" she exclaimed. \"He's bi?\"\n\nI pointed a wooden spoon at her. \"Back off, hussy. He's mine.\"\n\nShe giggled. \"Looks like he's not the only jealous one.\"\n\nI grinned at her. \"I don't know how he identifies. He's attracted to women but he's in love with me. I'm the only guy that he's ever been with.\"\n\n\"Have you been with women too?\" she asked. \"I mean, is he mad jealous for a reason?\"\n\n\"I didn't cheat on him, but yes, I've slept with women. I like women. I just prefer men.\"\n\n\"What about Ryan?\" \n\nI laughed. \"I don't think Ryan would have a clue what to do with a woman. It's a loss for womankind. Ryan would make some woman very happy if he had the slightest interest in being with one. He's a wonderful person; dedicated, loving, nurturing, honorable, honest, generous, reliable. All of that, and he's beautiful too.\"\n\n\"Wow!\" she exclaimed. \"You really love him too.\"\n\nI nodded. \"He also gives an unbelievable blowjob.\"\n\nShe gasped and then got a fit of the giggles. \"Just had to blow the nice guy image out of the water, didn't you?\"\n\nI smirked and shrugged. \"Couldn't have you thinking I was all sentimental and shit.\"\n\nI plated the food and carried it out to the couch. This apartment did have an area that would be considered a dining room but I still didn't have a table. I had setup my computer desk in that area so I still ate all my meals at the coffee table.",
        "\"This is good!\" she effused.\n\nI smirked. \"You sound surprised. I told you that I could cook.\"\n\n\"Everybody thinks they can cook. Just like everybody thinks they can drive.\"\n\n\"Point,\" I grinned. \"Eric taught me to cook.\"\n\nShe laughed. \"All that sex appeal and he can cook too?\"\n\n\"He can. He doesn't like doing it. He'd rather eat out,\" I said. \"That's not true. He likes to cook, he just doesn't like the mess it creates. He's fastidious about being clean. He lives in this big warehouse that is also his workshop. You should see it when he's working wood or stone. Anything that kicks up dust. He covers everything in these big plastic sheets. It's a riot. It's like living in a haunted house.\"\n\n\"How long have you guys been together?\" she asked between bites.\n\n\"We met over eight years ago but we didn't get serious for a year.\"\n\n\"Eight years,\" she repeated. \"It's hard to fathom that you've been involved with an artist for eight years and you don't have a single piece of his work.\"\n\nI nodded while chewing. \"I do. Just not in here. When I moved out, I brought a piece with me. He made it for me so...\"\n\n\"Can I see it?\"\n\n\"Umm. Yes?\"\n\n\"You're not sure?\" She arched her eyebrow.\n\n\"It's just that it's a little...\"\n\n\"Personal?\" she suggested.\n\n\"Erotic,\" I supplied. \"But personal too.\"\n\n\"All art is erotic.\"\n\n\"Yes. But this is erotic in that it's art, but the subject matter is also erotic,\" I explained.\n\n\"Ah,\" she nodded. \"I'm fine with it, but if it bothers you then say no. I won't be offended, just disappointed. But I'll live.\"\n\nI sighed. \"It's fine. You can see it. It's in my bedroom.\" I set my plate down.\n\nShe put her hand on my knee. \"Eat,\" she insisted. \"If you decide that you're comfortable with it when you're finished, then I'd love to see it. If you don't, then I'll understand.\"\n\nI nodded and picked back up my plate. The only person that had seen the box, other than me and Eric, was Ryan. It hadn't seemed like a big deal to me to let Ryan see it, but we were intimate. I wasn't sure how I felt about letting a virtual stranger see something so personal to me. But then, she had basically been a third party to all of my sexcapades for the month that I had been living there, so I couldn't really keep thinking of her as a stranger. Sharon and I had been intimate in a very strange way for quite some time, even if I hadn't known about it.\n\nAfter we finished eating, I cleaned the kitchen while she made another drink for each of us, then I led her to the bedroom. I stopped at the doorway and let her continue on. I silently pointed to the box.\n\n\"It's a hope chest!\" she exclaimed, crossing the room to get a better look.\n\n\"A what?\"\n\n\"A hope chest,\" she repeated while kneeling down in front of it. \"That's what it's called. They were where girls stored all the things that they collected during their lives in hopes of using them when they married.\" Her voice had taken on a distant and distracted quality while she lovingly ran her fingers over the carved top.\n\n\"I didn't know that,\" I admitted. \"I've always called it a toy box.\"\n\n\"Toy boxes have flat lids,\" she explained, still with that faraway sound to her voice. \"This has a fitted lid. It's a chest.\"\n\nShe examined the image on the top and then moved to the front and the sides. I was getting more and more embarrassed the longer it went on. It felt like she was dissecting and placing judgment on the love between me and Eric, and it was unnerving. \n\n\"This is stunning,\" she breathed. \"Eric carved this? This is amazing work. It's so detailed. I had no idea that he was this talented. Is this accurate or artistic license?\"\n\nShe had her fingertips rested on the side that displayed me in full frontal, fully erect in all my glory. My face heated as the blood rushed to it. It hadn't even occurred to me that my body was completely exposed like that until her fingers brushed against the very true to life depiction of my arousal.\n\n\"It's... umm...\" \n\nShe smirked at me. \"I'm teasing you. Don't get so flustered.\" She went back to examining the chest, thankfully, no longer tormenting me. She slid it away from the wall to see the back side and then plopped down on the floor in front of it. \"I'm not this good.\"\n\nEric was an exceptional artist. I knew that. But I hadn't meant to upset her by showing her the piece. I moved in to the bedroom and plopped down on the edge of the firm mattress. She looked up at my sharp intake of breath.\n\n\"Are you ok?\" she asked, concern etched on her face.\n\n\"I'm fine,\" I assured her. \"I just forgot to be careful.\"\n\nShe arched her eyebrow at me in an unspoken question. I hesitated but decided to hell with it. \"You know all that 'Harder! Harder!' stuff? That should have been 'Please me gentle with me'.\"\n\nShe snickered. \"Does Eric do gentle?\"\n\n\"Oh yes,\" I nodded. \"He loves gentle almost as much as he loves rough. He's got so much more control than I have. I'm usually the one that ends up begging for it.\"\n\nShe smirked at me and shifted her attention back to the chest. \"Look at this.\" She reached out and caressed the faces in the wood. \"You can see the love there. It's unreal to me how some people can look at this and think this is sick or wrong. This is love. Did he do this from photographs?\"\n\n\"No. He did sketches. He did maybe a hundred of them before he decided on five.\"\n\nShe shook her head in incredulity. \"He's amazing. I can see his influences too in the expressions on the faces and the lines of the bodies.\"\n\n\"Eric told me that being influenced by another artist is fine but outright mimicry is intolerable.\"\n\n\"Well, this is pretty close to mimicry,\" she said. \n\nI frowned. \"Don't let Eric hear you say that. He'd be devastated.\"\n\n\"I'm not an expert on sculpture or anything, but I took this class over the winter on modern artists, and there was one of the artists featured whose work was just like this. I remember him because the instructor named his periods after emotions. Painters usually get colors, the blue period, the yellow period. This guy got things like sorrow and pain and love. This is straight from the love period. Except for the fact that his subjects were all hetero couples.\"\n\n\"I promise you that was all Eric,\" I replied with a slightly defensive tone. \"I watched him do every bit of that. He wasn't copying anyone.\"\n\n\"Oh, I didn't mean that,\" she rushed to explain. \"I'm sure it's his work. The skill and talent in the carving alone is astounding. I just meant that he's obviously heavily influenced by Unger in the subject matter. It's gorgeous and I wish I had this much talent.\"\n\nIt took me a second to realize what she had said. When it sank in, I started laughing. \n\n\"What?\" she asked, confused.\n\n\"God. You had me so worried,\" I chuckled. \n\n\"About what?\" \n\n\"Eric,\" I chuckled. \"You don't know what he does to work he thinks is too much like someone else's.\"\n\n\"I'm sorry,\" she frowned. \"I wasn't trying to upset anyone. It's just very similar.\"\n\n\"It's identical,\" I replied with a grin.\n\nShe nodded. \"It is.\"\n\n\"It should be.\" \n\n\"What?\" She was very confused. \n\nI decided to let her off the hook. \"It IS Unger. Eric Unger.\"\n\nHer mouth dropped open in shock. \"You're fucking with me.\"\n\n\"I'm pretty sure that we aren't fucking,\" I teased.\n\n\"Your Eric is E. Unger? Seriously?\"\n\n\"Serious as a heart attack,\" I promised. \"That piece is signed on the bottom.\"\n\n\"Holy shit!\" She smacked her forehead with her hand. \"I'm such an idiot. I knew he was local. I mean, the class was on local artists, but I never thought... Wow. I'm a moron.\"\n\n\"What the hell class is this?\" I asked, chuckling. \"I'm sure Eric would love to take it.\"\n\n\"It's a continuing education class at the community college,\" she explained. \"I just took it for fun.\"\n\n\"I'll be sure to mention it to him.\" I smiled.\n\n\"He's really Eric Unger?\" she asked. \"That's so cool. He's a pretty big deal around here. Like I said, I'm not an expert on sculpture or anything, but he's about as famous as an artist can get and still be alive.\"\n\n\"He's always been a big deal to me.\" I grinned. \"But don't go getting all star struck. He's still just a person. He's got his issues just like everyone else.\"\n\n\"Still,\" she replied. \"It's pretty cool.\"\n\n\"You know what?\" I smirked. \"We should tell him.\" I jumped up and the vodka that I had consumed hit my head. I got a little woozy for a second but went in and grabbed the phone. I plopped back down on the bed and winced automatically but it didn't really hurt. Alcohol, the great anesthetic.\n\n\"Are you really calling him?\"\n\n\"Sure.\" I shrugged while dialing. \"Why not?\"\n\n\"Rain?\" Eric answered.\n\n\"Hey Sexy,\" I purred. \"What are you doing?\"\n\n\"Sexy?\" I could hear the humor in his voice. \"Are you drunk, Baby?\"\n\n\"A little bit, yeah,\" I admitted.\n\n\"Nice,\" he drawled. \"Want me to come over?\"\n\n\"Oh yeah,\" I husked. \"But no.\"\n\n\"Well damn,\" he sighed.\n\n\"So I'm sitting here in my bedroom with my neighbor...\" Eric's growl rumbled through the phone line and I giggled. \"Not like that, Goof. You remember my neighbor, Sharon?\"\n\n\"The one with the eagle bait?\"\n\n\"Yes,\" I grinned. \"She's a painter and she makes really potent drinks.\"\n\n\"How much have you and Sharon had to drink, Baby?\"\n\n\"Just a couple,\" I told him. \"Hush. Let me finish my story. You'll like this.\"\n\n\"Ok. Go.\"\n\n\"So I was showing her my toy box. It's called a hope chest, did you know that?\"\n\n\"Yes.\"\n\n\"You let me call it a toy box all these years.\"\n\n\"I thought it was appropriate considering what's in it,\" he argued.\n\n\"Ok. So anyway, turns out she took a class a few months ago about you.\"\n\n\"A what?\" Eric asked.\n\n\"A class.\"\n\n\"You're not telling it right,\" Sharon chided. \"Give me the phone.\"\n\nShe took the receiver from me without waiting for my objection. \"I took a class at the community college on prominent local artists and you were featured in it. Rain thought you'd be amused.\"\n\nI laid the top half of my body across the bed, with my legs dangling over the edge, while they talked. The drinks were stronger than I had thought and my head was spinning a little. I had eaten so I didn't think I should have been that affected by two drinks. \n\n\"He wants to talk to you.\" Sharon stuck the phone in my face and I took it.\n\n\"Baby?\"\n\n\"I'm here.\" My voice was slurring a little, even to my own ears. \"Don't you think that's funny?\"\n\n\"Are you ok, Baby?\" He was worried. His voice got sharper when he was worried.\n\n\"I'm fine,\" I tried to reassure him. \n\n\"I'm coming over,\" he stated. \n\n\"You don't have to,\" I told him. \"I'm fine.\"\n\n\"You're drunk and alone with a stranger in your bedroom. I'm coming over. I'll be there soon.\"\n\n\"No, Eric. I'm fine,\" I insisted to no avail. He had already hung up.\n\n\"What's wrong?\" Sharon asked.\n\n\"He's coming over,\" I said as I let the handset drop onto the mattress beside my head.\n\nShe giggled, \"Awesome.\" Then she noticed my expression. \"What's wrong? You don't want him to come over?\"\n\n\"Not really,\" I replied. \"I mean... I do. I want him all the time. It's just not healthy. We have a hard time being together. We fight a lot.\"\n\nShe nodded. \"Artists are like that. We wear our emotions on our sleeves.\"\n\n\"I get that,\" I told her. \"I understand that he feels things deeper than other people. I just don't understand why he won't or can't share those feelings with me. He can't vocalize what's going on in his head and it causes major problems between us.\"\n\nShe was silent for a few minutes, pensive. \"Hey Rain? I know it's none of my business, and we just met and all, but maybe you're not paying attention.\"\n\n\"What do you mean?\" My head was swimming and I was trying to keep my dinner down. I hated throwing up and I was concentrating really hard on trying to make sure that didn't happen.\n\n\"I mean...\" She pointed to the chest. \"Maybe he is vocalizing in the only way he knows how and you're just not hearing him.\"\n\nI tried to follow her train of thought through the foggy haze in my head but couldn't. I sat up to take a look at the chest and listed over to the side.\n\n\"Damn!\" she giggled. \"You're drunk. I didn't know that you were such a lightweight. I'll go get you some water.\"\n\n\"I'm not a lightweight!\" I called after her while I slowly inched up to the top of the bed. \n\nShe brought me some water and I just stayed flat on the bed, letting her babble. She was excited to meet Eric, even though she had already technically met him. I couldn't blame her. Eric excited me too but for a totally different reason. Or... maybe not. I gathered from the small amount of her incessant chatter that I heard, she was crushing on him hardcore. I was mostly tuning her out. I knew it was rude but I couldn't seem to get a handle on why I was so fucked up. I didn't really notice time passing but it must have because the trip from Eric's place to mine was twenty minutes on a good day but, suddenly, he was there. \n\n\"Rain?\" Eric's sultry voice affected me in ways that I knew were dangerous this soon. He crawled onto the bed with me and snuggled up tight to my side. \n\n\"Who let you in?\" I grinned at him so he knew that I was teasing.\n\n\"I let myself in. I know how to work a doorknob,\" he smirked. \"Contrary to all indications.\"\n\n\"Did you meet Sharon?\" I asked.\n\n\"Yes.\" Eric looked up at Sharon who was suddenly pretty calm in comparison to before. \"Hi Sharon. How much did he drink?\"\n\n\"Two White Russians,\" she replied. \"I didn't know he was a cheap drunk.\"\n\n\"He's not,\" Eric defended my honor. \"Did you eat today, Baby?\"\n\nI nodded. \"I don't know why it hit me so hard but I'm doing better now.\"\n\n\"What happened to your arm?\" Eric asked, noticing the bruise on my right arm.\n\n\"Nothing,\" I explained. \"I went to the doctor today.\"\n\n\"You had a blood draw?\" he asked. \n\n\"Oh shit,\" I cursed as it dawned on me. \"I forgot.\"\n\n\"You can't drink after you have blood taken, Baby.\"\n\n\"I know, Eric,\" I sighed. \"I forgot. It was stupid.\"\n\n\"How much blood did they take?\" he asked, running his finger lightly over the bruise.\n\n\"Enough for a full work-up,\" I told him. \n\n\"I brought him some water but he wouldn't drink it,\" Sharon tattled on me.\n\n\"Come on, Baby.\" Eric lifted me into a sitting position, leaning back against his chest for support. He handed me the glass of water. \"Drink this, Rain.\"\n\nI took a sip. \"Come on guys,\" I sighed. \"I've been far more fucked up than this. What's the big deal?\"\n\n\"It's just scary when someone gets like that on two drinks, Rain,\" Sharon supplied. \"It's not normal.\"\n\nI couldn't argue with the logic. I would have been freaked out if it had been someone else. \"You didn't have to come, Eric. I would have been fine.\"\n\n\"I wanted to take care of you, Baby. I always want to take care of you.\"\n\n\"Besides, now that we know what the problem is, I get to talk to a famous artist about art,\" she smirked. \"How cool is that?\"\n\n\"Famous artist?\" Eric smirked.\n\n\"Don't get a big head,\" she giggled. \"That's all the hero worship you're going to get from me.\"\n\n\"I like it when his head gets big,\" I mumbled under my breath.\n\nAt least, I thought it was under my breath until both of them turned to look at me. Sharon burst out in a fit of giggles and Eric held me tighter and kissed the top of my head. I snuggled into Eric's embrace and sipped my water while we all sat on my bed and they talked. This may have been a new experience for Sharon but this kind of thing was old hat for us. There had been hundreds, if not thousands, of times that Eric would just hold me while he socialized. It had begun the very first day that we had officially been a couple and had never stopped. My state of mild inebriation lowered my defenses enough that, for the first time in years, I felt absolutely no hostility or distress being in his presence. Enveloped in his arms, scent, and sound, I felt cherished, protected, and loved. The comforting feeling of Eric's heat around me, and his deep voice rumbling through me, soon lulled me into a contented slumber."
    ],
    "authorname": "Trahi",
    "tags": [
        "gay romance",
        "true love",
        "second chance",
        "90s"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/rain-storms-ch-03"
}