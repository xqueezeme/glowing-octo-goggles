{
    "title": "The Lazy Lemon Sun Ch. 04",
    "pages": [
        "INTRODUCTION: Here it is, the final part.\n\nI hope you've all enjoyed the ride. There are some questions still unanswered with a few of the characters, of course, but I've got to leave something for future stories, right?\n\nPlease take the time to comment. I'm really curious to see how you all feel about how this turns out.\n\nThanks again! \n\nCHAPTER NINE\n\nThey were both at my apartment this time. We were sitting on the floor eating grilled cheese with bacon, tomato, and spinach and sipping tomato soup from big mugs. Grilled cheese and tomato soup, it was my favorite meal from childhood kicked up a slight notch. But I couldn't muster up a warm cozy feeling as I ate and listened to Whitney and Rebecca think out loud as if I weren't even present.\n\n\"That really does change things,\" Whitney said, her voice soft. \"I mean, I can really kinda see it from her point of view.\"\n\n\"Assuming you believe her,\" Rebecca snapped.\n\n\"But it all makes sense, right? I mean, if she didn't really love him, she could've left, too.\"\n\n\"Or keep on with that boyfriend she latched onto while just toning it down a bit.\"\n\n\"But he said they were happier at the end than at the beginning. And that the look on her face when he brought up having children, how do you explain that?\"\n\n\"Fuck, I don't know,\" Rebecca said. \"Biological clock or something.\"\n\n\"I don't think so. Her answer is the easiest and it makes the most sense. That's when she realized for sure that he wasn't gonna be ditching out. That's when the arrangement finally clicked into a true marriage.\"\n\n\"Yeah, but it was still based on lies. All of it. And she was part of them. Think about it, if she really thought he was in the know, she's gonna just make snide comments now and then. Never once really bring it up and out in the open?\"\n\n\"There is that,\" Whitney agreed. \"It is a bit farfetched. I mean, I can see it coming out real easily in a fight or something. That ever happen, Mark?\"\n\n\"Huh?\" I said, listening but not really hearing them.\n\n\"You two ever have fights? Yell at each other and throw shit in each other's face?\"\n\nI shrugged. \"Sure. Doesn't everyone?\"\n\n\"And she never threw this in your face? The arrangement?\"\n\n\"Yeah,\" I said, then, \"no. I guess so. I mean, they'd be the same snide comments, just yelled instead of joked about. You know. 'I don't know why I ever agreed to marry you,' shit like that.\"\n\n\"See?\" Whitney said. \"I can see it playing out like that, can't you? Especially if she thought he was in the know the whole time.\"\n\n\"Bullshit,\" Rebecca adroitly countered.\n\n\"So what d'ya think?\" Whitney asked me.\n\n\"I don't know. I think I believe her, but I'm not sure it makes a difference.\"\n\n\"So you believe her?\" Rebecca asked, astounded at my apparent naivete.\n\n\"Yeah, I do. You weren't there, Bec. She was a total wreck. I can't see her being that good an actress.\"\n\n\"Fooled you all those years you were together, though.\"\n\n\"She wasn't acting then. She was just being Sandy; making the best out of a bad situation at first, then genuinely just trying to make the best out of . . . well, out of our marriage. Trying to keep it together. So yeah, I believe her. It all fits.\"\n\n\"Yeah, but-- \"\n\n\"You didn't see her face the few times she talked about our folks,\" I cut in. \"It wasn't even anger yet. She was still trying to wrap her head around it, like she couldn't believe they'd never told me.\"\n\nRebecca snorted, I pushed my plate aside, and Whitney put her hand atop mine. \"I think you need to see her again. To talk this through. The divorce is still there if you want it.\"\n\n\"And you should take it,\" Rebecca insisted.\n\n\"But,\" Whitney continued, looking over at Rebecca in annoyance, \"you don't want to look back ten years from now and wonder what if. What if she'd been serious? What if your dream girl really was in love with you and wanted to have your babies and grow old and die with you? What if-- \"\n\n\"What if she fucks around on you again and again and you just sit back and take it,\" Rebecca interjected. \"What if you continue playing along with their games--all of them--and they win. They all get what they want. Daddy Truelson gets the White House and your daddy gets the Majority Leader position. What do you get, Mark?\"\n\nI stood and left them sitting there, almost running to my bedroom and shutting the door behind me. I needed to get away and think this through.\n\nI laid on my bed and pondered. Whitney made solid points. We were all three of us lawyers, and we intuitively knew how we all thought. Law school does that to you; it fucks up otherwise normal thought processes. Still, they'd hammered it into our heads in criminal law: Actions without the requisite intent are mere actions. If you're on a roof and you trip and bump a brick and it falls and kills someone, it's not murder. It's an accident. If you're on the same roof, you see people walking below, and you push off the brick, it's at least voluntary manslaughter, and more likely second degree murder. You see someone you know and intentionally push the brick at them, it's first degree murder. All three scenarios you caused the brick to fall and kill someone, but the outcomes all differ based on what you intended to do.\n\nBut Rebecca was right, too. Wilful blindness is not a defense. If you intentionally push that brick not knowing whether anyone's on the street below, it's still gonna fall into the second category, voluntary manslaughter at least.\n\nSo I guess the issue was whether Whitney wilfully blinded herself. Did she intuitively sense my ignorance? Should she have said something? Would I have played it any differently in her shoes? The last one was particularly difficult because I'd have to put myself in the place of someone as incredibly popular being foisted upon me.\n\nThere was a soft knock at the door. \"Can I come in?\" Rebecca said, opening the door and poking her head through.\n\nI looked at her, and she hesitated before stepping in and closing the door behind her. She walked to the bed and sat down beside me, placing her hand on my thigh.\n\n\"I'm sorry,\" she said. \"I want her to be a bitch because you didn't deserve any of this, y'know?\"\n\n\"You don't need to-- \"\n\n\"Yeah, I do. I told you that first night I don't make it a habit to sleep with married men, and here I've let myself begin falling for one. And that's not fair to you. Especially now.\"\n\nI sat up and leaned against the wall, looking at her.\n\n\"Why haven't you ever been married?\"\n\nShe gave a sad smile. \"I'm not the marrying type, Mark. Believe me when I tell you, if you're thinking of blowing her off just to take up with me, we'll never get married.\"\n\n\"But why?\"\n\nShe got a faraway look, her eyes staring at me but not seeing. \"We all have our histories. Our burdens. Our quirks and all that other crap. Some of us can get past it all, some can't. I don't think I can. I'd like to tell you that maybe you're the one that could help me get past it, but I don't really know, and I'd be leading you along if I said otherwise.\"\n\nI nodded, then covered her hand with mine. I didn't really know what to say.\n\n\"I guess what I'm saying here is you need to not think about this right now. Definitely not about us, but also not about what Sandy said. I think you need to think about what you want first. You, Mark. Not Sandy and not your parents and not anyone else but you. You need to do something for you for a change. And once you know what you want to do, then you need to talk to Sandy again and maybe figure out if she's part of that plan.\"\n\nI thought it over. She was right. It came back to what they'd both said before: Time to be proactive, take control of my own damned life. I thought I'd been in control all along, but I hadn't been. Now I needed to firmly be in control and get what I wanted out of life.\n\n\"We'll still see each other, right?\"\n\nShe smiled and said, \"You know we will.\"\n\nI leaned over and kissed her. It was more than a brotherly peck, but less than full blown romance. It was nice, and it melted her against my chest. Melted her with what I sensed was resignation that it would be our last kiss together for some time, if not forever.\n\nI rested my cheek atop her thick brown hair and stroked her shoulder, enjoying the moment free of the thoughts that had been bombarding me all night.\n\nIt felt nice, and I wondered if I'd ever feel this way again.\n\n* * * * *\n\nJust when I thought I had enough shit to deal with in my topsy turvy world, the door of The Hitching Rail opened at quarter to eleven the next morning and my parents strode in with looks of anger and determination.\n\n\"Hey, Mom and Dad,\" I called out cheerily, then turned to my burly boss beside me. \"Ferlin, meet my folks. Senator and Missus Roberts. Mom, Dad, this is my boss, Ferlin.\"\n\n\"Nice ta meetcha,\" Ferlin grumbled, not the least impressed. He turned and rumbled back toward the kitchen.\n\n\"He's not your goddamned boss,\" Dad hissed. \"Jim Parker's your boss.\"\n\n\"What are you doing, Mark?\" Mom said.\n\n\"Working,\" I said. \"I'm a bartender now.\"\n\n\"What kind of silly goddamned game is this?\" Dad pressed. \"You just quit with no notice, then you up and leave Sandy and just disappear and come to . . . to . . . to this backwater hicksville. What the hell's going through your head?\"\n\n\"Cut the shit, Dad. You know exactly why I'm here. You think it's just a coincidence I'm in the same goddamned town as Clarice Talbott? You think I just picked this little old town out of thin air?\"\n\nDad's jaw dropped and Mom gasped, her eyes like great big saucers.\n\n\"You didn't know she was here?\" I said, smiling. \"Her and your son? The brother you never told me about?\"\n\nThey looked at each other, then at me. Then Dad slumped and Mom leaned against the bar for support.\n\n\"What've you done?\" Dad said.\n\n\"Tried to find the truth,\" I shot back. \"For once in my goddamned life, I tried to find the truth about all of you. And don't tell me you didn't know she was here. Someone met with her and scared her. She's too goddamned afraid to even look at me.\"\n\n\"Pat Truelson's people found you,\" he said, his mind whirling behind his dropping eyes. \"We had people making discreet inquiries, but it was his people that found you. He didn't tell me how.\"\n\n\"Please tell me you didn't confront her,\" Mom said, sitting and looking at me anxiously.\n\n\"Why? Afraid I'd rain all over your parade?\"\n\n\"It's not what you think, Mark,\" Dad said, his voice sadder than I'd ever heard him. He got a haunted look and mumbled, \"Dear God, please not again.\"\n\nI looked from one to the other then back again. Here we go again, I thought. This is way worse than just having a brother I never knew about.\n\nThen my anger returned, and I was giddy at their sudden misery. \"What do you give a fuck what I think? After what you did to me, to my life, you think I really give two shits about what-- \"\n\n\"How dare you talk to us like that,\" Dad said, slamming his palm down on the bar top. \"I don't know what the hell's going on here, but I will not tolerate-- \"\n\n\"You'll tolerate whatever the hell I give you,\" I said. \"Just like I tolerated you two selling me out for your own fucking ends.\"\n\n\"What are you talking about, honey?\" Mom said, her eyes narrowing as she tried to gauge how much I knew.\n\n\"You know damned well what I'm talking about, Mommy dearest. My marriage. How you and Dad and Pat and Debra all arranged it so you could get Pat Truelson a bump right around election time. I don't know what you got out of it exactly, but I'm sure the favor's been repaid in spades.\"\n\n\"What're you talking about?\" Dad said, but my knowledge was too much for him to put on a solid face when he asked it.\n\n\"Cut it. The weekend at the Governor's Mansion I overheard all of you. You and the Truelsons all chatting away downstairs about how you convinced Sandy to marry me and stay married for just a few years, but you kept the wool pulled over my eyes and just encouraged me to follow my dreams. I heard it all, Dad. Even the both of you laughing at how goddamned gullible your own son was in the whole mess.\"\n\nHis face fidgeted, but Mom was indignant. \"What's the difference why we set it up or how we set it up? We set it up, Mark. We gave you your dream come true. You tell us you weren't ecstatic the whole time? Go ahead, you tell us what we did that was-- \"\n\n\"You set me up for a marriage she was free to leave at anytime after a year or two. You told her that, didn't you?\"\n\n\"Who cares what we told her,\" she shot back, not backing down a bit. \"She didn't leave, did she? You're still together, right? Who cares how it got started? What's important is that you're married to the girl of your dreams and you were happy as a pig in a poke.\"\n\n\"It matters, Mom. Especially now that I know. Now it matters more than ever.\"\n\n\"Why? Why should it matter now that you know. She still wants to stay married. Debra told us so, told us she didn't want a divorce. She wants to stay married to you forever.\"\n\n\"I'll tell you why it matters,\" I said, remembering back to my conversation with Whitney under the crisp, starry skies out front. \"It matters because now I question everything about my marriage. My memories are tainted now. You look back to when you two first met and you remember the excitement of that time, right?\" Dad gave a slight nod, but Mom only grimaced. \"Well I don't look back on it like that anymore. I look back to when Sandy and I started dating and I only see myself getting played for a fool. Every second we were together back then that I thought she was happy and in love with me? Now I know she was shaking her head and mocking me behind my back. How's that for love, Mom? Wanna trade some memories?\"\n\nHer face was still a mask of fury and determination, but I saw Dad begin to shrink. \"I'm sorry, Mark. I didn't think. . . .\"\n\n\"Didn't think what, Dad? Didn't think I'd ever find out? Or if I did, you didn't think I'd give a shit that you did this to me? Which part exactly didn't you think?\"\n\nHe looked up and fixed me with a sad stare. \"I didn't think about any of it, least of all about you. I got caught up in it and barely gave it a second thought.\"\n\nI turned from him to Mom, who just harrumphed. \"Grow up, boys. It's a real world out there. You want something, you'd better be prepared to take it, come hell or high water.\"\n\nI just looked at her, not believing what I was hearing. Her voice showed no regret and not even a whiff of apology. Instead, she was triumphant, like she was speaking to a couple of naive little kids, explaining to them the ways of the real world.\n\n\"Where did this come from?\" I asked, amazed. \"Where did my Mom go, and when did this flaming bitch take over her body?\"\n\n\"Don't you dare,\" she snarled, leaning over the bar toward me.\n\n\"Leave,\" Ferlin thundered from behind them.\n\nMom froze, and Dad turned in shock.\n\n\"Right goddamned now,\" he bellowed. \"Get the hell out of my place and don't come back, y'hear me? Now!\"\n\nMom turned on him with an evil grin and said, \"You will not-- \"\n\n\"I said right fucking now, lady!\" he screamed, taking a step toward her.\n\nShe looked at him a moment, then turned to me and said, \"This isn't over, Mark. Not by a long shot.\"\n\nWith a final glare at Ferlin, who glared right on back, she raised her shoulders and stormed out the door.\n\nDad looked from Ferlin to me, then back to Ferlin, \"I'm really sorry about all this.\"\n\nFerlin only glared at him in response.\n\nWith a final forlorn look toward me, Dad slumped further and left.\n\n* * * * *\n\nThe lunch rush and clean up after was all a daze of jumbled thoughts and mistaken orders. Ferlin didn't say anything. At first, Debbie just bounced and chirped and swooped in and switched plates and drinks the way they were supposed to be. After awhile, she didn't bother letting me pick up my own lunch orders for those sitting at the bar; she just took the orders herself and delivered them herself.\n\nI was worse than useless, I was a hindrance.\n\nBut Debbie never said a word. Instead, she just kept right at it cheery as ever, patting me on the back and giggling every now and again.\n\nJust shy of three, the place was empty and Ferlin slumped onto a barstool. \"Explains a lot.\"\n\n\"What?\" I said, absentmindedly shuffling glasses on the shelf.\n\n\"Last night with that woman. Sandy, I presume. Your wife. And pretty much how you've been ever since you've been here.\"\n\nThat piqued my interest a bit. \"What d'ya mean, 'How I've been since I got here?'\"\n\n\"I mean you don't belong here is what I mean. Here. Tending bar. Jesus, Mark, you're smart as a whip, personable. You dress all . . . what did you do for a living?\"\n\n\"Lawyer.\"\n\nHe snorted. \"Explains the attraction with them women, I guess. Still, you don't really seem the type.\"\n\n\"How so?\"\n\n\"Too eager to please. Most lawyers, they're super alphas. Don't give a damn about pleasing anyone but themselves. You're the opposite. You only seem to care about pleasing everyone and getting them to like you. Bend over backwards and do things for folks they don't expect you to do just so they'll like you.\"\n\n\"And that's bad?\"\n\n\"Your mom there was at least partially right about one thing, Mark. You need to look out for you, not for anyone else. You need to be happy without . . . ah, hell, I don't know how to explain it. I guess you just need to quit trying so goddamned hard to please everyone to make 'em like you. They'll either like you or they won't, but it don't mean you need to go kissing their ass up one side and down another, okay?\"\n\n\"But. . . .\" I started, then let it hang there. He was right. And I knew why, too. I was still in Stevie's shadow. Stevie hadn't had to work to make anyone like him, he just assumed they would. Even at that, he'd still had his detractors. Can't please everyone all the time and so on and so forth.\n\n\"Still,\" Ferlin said after a minute, \"I think you have a couple of things you need to do.\"\n\n\"Such as?\"\n\nHe hesitated, then looked at me, unsure whether to say it or not. Finally, with a heave that relaxed his barrel frame, he said, \"I think you need to talk to your dad there. Not your mother. She's beyond salvation. But your dad, I think he's really hurtin' now, and I think you need to talk to him. If for no other reason than to find out about this little brother you think you have that they seem so intent on keeping you away from.\"\n\nI nodded. \"Yeah, I sorta got that at the end, too. His . . . I don't know. Shame, maybe?\"\n\n\"Disappointment,\" Ferlin suggested. \"I think both in himself and in what he may think he's become. It was more than just shame, though. He looked whooped when he left here.\"\n\n\"And the second thing? The second thing you think I need to do?\"\n\nHe pushed himself up from the barstool and placed his palm on the bar top. \"You need to have a long, hard talk with your gal.\"\n\nI sighed, draining so much I thought I'd turn into a molten Mark puddle in the middle of the back bar.\n\n\"I heard snatches last night. Tried to stay away, but still heard snatches. And I heard most of what was said here today, too. And I think you got something wrong, or maybe just haven't really thought about it yet and whether or not it makes a difference.\"\n\nI replayed the conversations in my mind, trying to figure it out but drawing a blank.\n\n\"Help me here,\" I said.\n\n\"You told your folks your memories are all lies, Mark, but they aren't. Not all of them, at least. I heard your wife tell you that she devoted the last three years to making you happy as could be. She tried her best--or so she says--to making you love her so much you'd never want to leave. So maybe the memories of the first few years are skewed, but those ones aren't, right? Not the ones at the end.\"\n\nI hesitated, then nodded.\n\n\"Exactly,\" he went on. \"So now I guess you gotta ask yourself whether those memories--the good ones that are real memories and not a bunch of bullshit--whether those memories are real and whether you want to build on them or whether too much has happened to keep goin' on.\"",
        "I leaned back against the cooler behind me and looked at the floor. After a moment, I mumbled, \"Care to share your thoughts on the matter?\"\n\nHis voice went real low and a bit scratchy. \"I told you it's about you now. And it's your decision and yours alone to make. I'd like to help you with it, but I won't.\"\n\nI looked at him and tried to smile. \"Thanks.\"\n\n\"You're welcome,\" he turned to leave, then stopped and turned back. \"Truth be told, I'd send you out now to try and take care of all of this. God knows you're worse than useless around here today. But you should maybe take some time for some serious thought before go out and talk to any of them more, y'know?\"\n\n\"Yeah,\" I said, going back to my work with newfound purpose. And an overwhelming number of newfound thoughts and dilemmas.\n\nWhen I got done at six, I asked Ferlin for the next day off. He just grunted.\n\nI took it as a yes.\n\n* * * * *\n\nI sat on the tiny patio outside my dining room door and played guitar in the brisk autumn darkness, my mind lost in thought as my left hand fingers form chords and my right hand fingers plucked out random melodies.\n\n\"Do me a favor?\" she said somewhere in the shadows to my right.\n\n\"How'd you find me,\" I asked.\n\n\"Your address was on the divorce papers,\" she said, stepping into the dull glow cast by my porch light. She was hesitant and skittish, afraid to move closer.\n\n\"Oh,\" I said, still plucking the strings as I looked at her. I hadn't noticed it much the night before, but she looked like hell now. Her hair was put together, but just barely, and her jeans--always a solid fit to the snug side--seemed loose and baggy. \"You been eatin', girl?\"\n\n\"Sure,\" she said, but her tone indicated she wasn't really sure either way. She was chewing her lip, trying to find something to do with her hands until she finally thrust them into her pockets, which drew in her shoulders and gave her a hunched, furtive look. \"Sure gets cold up here,\" she tried, then gave her best shot at a smile. \"Still pretty warm down in Memphis right now.\"\n\n\"Uh huh.\"\n\nShe fidgeted, indecision written all over her face. \"Sorry 'bout last night.\"\n\nI shrugged, then started plucking out the arrangement to an old Cat Stevens tune. Moonshadow. There was something almost mystic about it that seemed to fit my mood and this whole surreal situation. Whatever it was, it calmed me.\n\n\"So you mentioned a favor.\"\n\nShe hesitated, then said, \"Can you play me one?\"\n\n\"Which one?\"\n\n\"'Calico Skies,'\" she said, which I knew she would. It had always been our song. Sweet and bittersweet, pretty and sad all at the same time when you know what it was written for.\n\n\"Why don't you sit down,\" I said, nodding to the old beat up lawn chair to my right.\n\n\"Okay.\" She didn't move, then she sort of took a long step and slid into the chair, like she was maybe afraid I'd hit her or something.\n\n\"How'd we get here, Sandy?\" I said, my left hand warming up to the trying chord progression of our song.\n\n\"I used to think it was blind luck,\" she said, turning and looking at the dark clouds blotting out the moon as they swept toward us. \"I mean, we got married to help out the folks, then you tried to make me love you and--poof--just when I thought you'd gotten tired of trying, I realized you hadn't and I decided to try to make you love me even more. And I kinda felt like I'd fallen into a pile of manure and found the Hope Diamond, y'know?\"\n\n\"So initially I was a pile of manure?\" I said softly.\n\nShe looked at me, trying to gauge my mood. I just looked back with open eyes, waiting for her to answer. \"You were never a pile of manure, Mark. It just never started the way it should've. Then again, I keep telling myself that if it hadn't started that way, it probably wouldn't have started at all.\"\n\n\"Because I wasn't really your type, right?\" I said.\n\nShe nodded, chewing on her lip again, her voice low as the breeze when she said, \"But you became my type. The only type I ever want.\"\n\nI nodded. \"How? How'd that happen? Was it guilt, or were you just afraid of going out and finding someone else?\"\n\nShe looked down, her face scrunched up in thought. \"I guess it was contentment at first. Not, like, this crazy, wild passion. Don't get me wrong, we had those moments, but it was never like in the movies. But after awhile, it became like in the movies. For me, at least.\"\n\n\"It was always like in the movies for me,\" I said. \"Or a fairy tale, maybe. I don't know, but it was always real to me.\"\n\nShe seemed not to have heard me. She continued with her eyes again on the clouds and her face somewhere faraway. \"I remember pretty much when it happened. They were mocking you--Peggy and Tracy and them--about how you were always so polite and bending over backwards and . . . I don't know, how you were always just going out of your way to make me happy. And I compared you to their husbands and their lives. Their husbands were like . . . like Stevie. All macho and swaggering and one of the boys. Have my dinner ready when I get home and fuck no I'm not staying home on Sunday, I've got football with the boys. And I wondered how I could possibly envy them.\"\n\nI could see the tears in her eyes glistening against the pitch black sky, and a smile curled her lips. Her thoughts were speech, and she was talking as if to herself as she remembered it all.\n\n\"Then came that damned appeal, and I hated it. I hated it and I hated you and I thought you were going to turn into one of them. One of those husbands like they had, and I didn't like it. Hell, it was three weeks before you even told me about it, and by then I figured it was someone else. That you'd met another woman and were getting set to run. Then, when you told me it was a big case, I thought you were just gonna do that fuck-you-deal-with-it thing and force me to leave you. Like you couldn't even leave me on your own, but you wanted me to be the one to leave you and you were giving me a push to do it. And I hated myself for thinking it all, because I had to admit that I really did love you by then and I really did want it to work. If I hadn't really fallen for you, I wouldn't have cared that you were trying to drive me away, but I'd fallen and I shouldn't have and I hated myself and everyone for it.\"\n\nI wasn't playing the guitar anymore, spellbound by a side of Sandy she'd never revealed.\n\nShe was silent for a moment, then gave a sad laugh. \"Funny thing was, I knew the moment I saw you on that television screen. It should've been your proudest moment, but you looked just plumb beat down and worn away. It was you afraid of me leaving you, not the other way around. And I remember the shame. It was overwhelming. I was in my office and it came up and a whole group of us was just gathered around watching you and they were all slapping me on the back and telling me it must be great for me. But all I saw was the look in your eyes when y'all did that group hug and that tiny little woman like to've squeezed you to death. You looked lost and afraid. I collapsed, it was so overwhelming. Like being hit with a hammer. I've never had that before, not even when Stevie died. Then I remember rushing home to be there for you, but you didn't show up. I sat there and sat there and just prayed to God to bring you home, to give me one more chance.\"\n\n\"And your boyfriend?\"\n\nShe shook her head. \"It was lunch, mostly. Just a few times . . . well, the last month, maybe four or five times we'd go over to his apartment after lunch. But the second I saw you on that screen, the second I knew you weren't trying to leave me . . . I never spoke to him again. He got the point pretty quickly and never pressed it.\"\n\n\"I never cheated on you,\" I mumbled.\n\n\"I know,\" she whispered. After a moment, she turned and faced me, trying to hold her face together. \"I lied last night, Mark.\"\n\n\"How so?\"\n\n\"I suspected it then. I suspected you never knew. I wasn't sure, but I suspected it.\"\n\n\"Why didn't you say something?\"\n\n\"Because I was afraid that if I said something I'd have to come clean about everything. And I was afraid that if I did that, you'd leave me. I didn't want that. Not then, not ever. I wanted to have a chance to make it up to you. To just pretend like it all never happened so we could go back to how it had been just before that appeal.\"\n\n\"So you considered yourself married to me for real then.\"\n\nShe smiled at the memory and nodded. \"Yes. As God is my witness, I tried to be the best I knew how. Not for me, but for you. For us. I swear it.\"\n\nJust hearing it all again made me sad all over again. Sad at what had happened and at how we'd gotten to where I thought we'd already been from day one.\n\n\"Please say you'll give me a chance, Mark. Please. I'll do whatever you want; whatever conditions you set, I'll meet them. Just come back.\"\n\n\"Not gonna happen,\" I said. \"Not now, not ever.\"\n\nHer reaction was immediate as she buried her face in her hands, weeping, her shoulders heaving with the force of her emotions.\n\nI reached over and pulled her hands away and said, \"I'm not saying we're getting back together, but if we do, I'm never going back to Memphis. Not even as a visitor. And I'm never going home again, either. And I'm not helping your daddy and his fucking campaign, and I'm not going anywhere near Tennessee again.\"\n\n\"What're you saying?\" she said, frantically wiping her tears as her eyes begged me to give her hope.\n\n\"I'm still thinking about it, Sandy. But up front, you need to think about what I just said, because I'm serious as a goddamned heart attack, y'hear?\"\n\nShe nodded. \"No more Tennessee.\"\n\n\"And to hell with our parents,\" I repeated. \"All of them. They treated me about as bad as you can treat anyone. Betrayed me and played me and used me up and spit me out. I don't give a shit who they are, they aren't people I care to spend my time with. You need to think about that, Sandy. Long and hard, you need to think about that. If I decide to give us another shot, you'll have to move up here. To this area. And I may just stay a bartender, too. And I'll definitely be playing gigs again.\"\n\nA smile was forming through her tears. \"Groping groupies?\"\n\n\"Groping groupies.\"\n\n\"Not really, though, right?\"\n\nI shook my head. \"Of course not really. But I wanna live my life for me for a change. Or at least do some of the things I wanted to do instead of the things my parents demanded I do or tricked me into doing.\"\n\n\"And you're still hesitating on us because I'm one of those things they tricked you into, right?\" she said, her smile getting hesitant.\n\n\"Wrong. I'm still trying to figure out what to do about us--whether to get back together or not--remembering how happy we both were when you joined in those last three years and made it a real marriage, to hell with how it started.\"\n\n\"But you're not sure those last three years can overcome all the rest,\" she surmised. \"Like the cheating.\"\n\n\"Yeah,\" I said, sagging and just looking at her.\n\nShe just looked right on back, then reached over and took my hand, squeezing. I squeezed back.\n\nAfter a moment or so, she said, \"Can you at least play me that sappy old song?\"\n\nI lingered letting go of her hand, then started picking out the intro.\n\n\"It was written that I would love you/from the moment I opened my eyes. And the morning when I first saw you/gave me life under calico skies. I will hold you/for as long as you like/I'll hold you/for the rest of my life.\"\n\nCHAPTER TEN\n\nIt was easy enough to get Dad's phone number. Just call his Senate office and find out where he was staying. The hard part was talking to Dad, because it was Mom that answered.\n\n\"Yes,\" she snapped.\n\n\"I'd like to speak with Dad.\"\n\n\"After the way you treated both of us yesterday? After the way you let that . . . that . . . that man treat us in public? You think-- \"\n\n\"Put him on or I'm hanging up.\"\n\n\"You'll not make demands or threats. I'm your mother, Mark Roberts, not some little trailer trash toadie.\"\n\nI heard Dad say something in the background, and I heard her snap something back, but it was all muffled.\n\n\"Mark?\" Dad said into the phone, Mom still yelling at him in the background. \"Mark, you there?\"\n\n\"Breakfast in an hour,\" I said. \"Just you. Do not--I repeat, do not--bring her, understand?\"\n\n\"Where?\" he said.\n\nI gave him the name and general location of a little greasy spoon out on the highway leading into town from the south.\n\nWhen we rang off, Mom was still yelling at him in the background.\n\n* * * * *\n\nI was ten minutes late, and Dad was already getting his coffee refilled when I spotted him in a corner booth and made my way there. He looked rode hard and put away wet, every day of his fifty-nine years and then some deepening the wrinkles in his face and dragging his skin down. The bags under his eyes, glassy stare, and overall slump completed the picture.\n\n\"Thanks,\" he said as I slid into the booth across from him. \"For calling me, wanting to meet with me.\"\n\n\"I don't,\" I said matter of factly. \"If I could figure out another way to get the truth about Clarice Talbott, I'd do it, but I can't. So let's hear it.\"\n\nHe winced at the mention of her name, then slumped in resignation as I motioned for and got a cup of coffee from the wizened old waitress with her blue hair up in a bun.\n\n\"The little boy's not your brother,\" Dad said. \"He's your nephew. He's Stevie's boy.\"\n\n\"Yeah, right. Because she was Stevie's secretary, right?\"\n\nIt was Dad's turn to get lost in his thoughts, and the lines etched in his face and around his eyes told me they were painful thoughts.\n\n\"We were in recess and Stevie had just gotten in from school. Clarice Talbott was my personal secretary. Great kid. Bright, lively, would work from dusk til dawn and then some. I had a whole slew of campaign stops to make. Remember? I was up for re-election, and it was busier than hell.\"\n\nI nodded. When he hesitated, I said, \"I remember. Move along with the story.\"\n\nHe turned away before continuing. \"You were still finishing finals, so I wasn't sure you'd really remember that much. But you know what it was like.\"\n\n\"Yeah,\" I snapped, getting impatient.\n\n\"Sorry,\" he mumbled, then took a sip of water before continuing. \"Anyway, we were off in Chattanooga, a whole round of weekend rallies and stuff. I got back to the hotel late, schmoozing and stuff with the local bigwigs, pressing the flesh. It was just past midnight when I got back there, and I didn't really think much of it. Stevie not being there and all. We were sharing a room, and Clarice was rooming with one of the PR people. Another woman, I can't remember her name.\"\n\n\"And this all matters why?\" I said. \"Will you just get to the point?\"\n\nBut I couldn't shake him from it. His eyes took on a faraway look that told me this had something to do with Stevie's death, and I began to get a chill up my spine.\n\n\"I didn't really notice her at first. I just saw the beds, and they were both empty. I figured he was just out at a club somewhere kicking up his boots or something. But then I heard this whimper in the corner, a scurrying kind of. And I flicked on the light and she was there, cowering and trying to hide in the corner on the other side of the bed. Her clothes were in tatters all around her, and she was naked. All except her bra, which was only just hanging there. She was frantic, and all afraid. I knew in an instant. I don't know how. I mean, how do you even think that about your own son? But I just knew immediately.\"\n\n\"Stevie raped her,\" I said, verbalizing what Dad could not.\n\nHis eyes found me and, after a brief hesitation, he said, \"Yeah. I don't know what he was thinking. Still don't. None of us ever will, I guess. But he raped her. And I swear to God, if he'd been in that room when I showed up--if he'd been there, I'd have killed him with my bear hands.\"\n\n\"What happened next?\"\n\nHis lips trembled as he fought to hold himself together. \"I called the PR gal in the room down the hall. I got her down there immediately. For Clarice, right? I mean, what else was I going to do?\"\n\n\"How about call the police?\" I said.\n\nHe smiled, a smile at first bitter, but then tender. \"Of course, Mark. That's what you'd have done. I know it is. And it's what I should've done, too, but I didn't. I listened to that other woman and her mind just started spitting out ideas and instructions and scenarios. I saw it all. My Senate career awash in scandal. My son in prison. All of it.\"\n\n\"Did you see Clarice Talbott.\"\n\n\"Of course I saw her,\" he hissed, trying to keep his voice down. \"You think I'm that big a monster?\"\n\n\"Jury's out,\" I shot back, then took a sip of my coffee. \"What happened next.\"\n\n\"She was getting Clarice into some clothes while I tried to phone someone who'd see the poor girl. Just as I was about to give up hope, there was a knock on the door. It was the police, and they were there to tell me that Stevie had wrapped his car around an old oak tree out in the hills around Lookout Mountain.\"\n\n\"So you buried it all,\" I said. \"You bought her off and hushed it all up.\"\n\nHe jerked his head up and down. \"What good would come from doing otherwise?\"\n\n\"How about some justice for Clarice Talbott?\"\n\n\"Would making all of that public--and you know damned well she'd have been named in public and be the subject of all sorts of sordid gossip--would that have really served her well? You mean that type of justice? Your mother was right, Mark. You really can be such a goddamned boy scout sometimes.\"\n\n\"You say that like it's something to be ashamed of. Like I'm a failure because I want to do what's right, Dad. Is that really such a bad thing?\"\n\nHe lowered his head and mumbled, \"No.\"\n\n\"So when did y'all find out about the pregnancy. And why didn't she get an abortion?\"\n\n\"Three months later. At first she just thought it was nerves from the . . . from that night. Later, though, as her belly grew, she . . . well, at three months or so.\"\n\n\"And how'd you find out? She call you?\"\n\n\"I stopped in on her a couple of times a week. See how she was doing; see if she needed anything. I'd kept her on my payroll, but I was worried about her.\" He motioned for another cup of coffee and, once it was refilled, continued. \"Anyway, I showed up one day and she said she was pregnant. I couldn't believe it. Didn't want to believe it. Either way, she said she wasn't giving the baby up. I think she's a pretty strict Catholic, father in that Opus Dei thing and all. Anyway, this just made a bad situation for her worse, though, because I'm pretty sure her parents all but disowned her over it.\"\n\n\"So you decided to step in and help, right?\"\n\n\"I told her she'd stay on payroll until after the baby was born. After that, we'd figure out a way to get her some support money and set her up in a job.\"\n\n\"And she said?\"\n\n\"Not much, really. I think she just wanted to get away from us. From all of us, but especially from me.\"\n\n\"And the boy?\"\n\n\"I don't even know his name,\" Dad confessed. \"Her only contact is a post card whenever she changes her address, and we send her a check once a month regular as clockwork.\"\n\n\"His name's Schuyler,\" I said, glaring at my father. \"Your grandson's name is Schuyler, and he plays football and he's healthy and he looks just like I did at that age. I guess he took after your side of the family. Stevie took after Mom's side, but your genes must've come through on this one.\"\n\nDad got a weird look at this, like he was trying to picture the little boy. \"Schuyler?\" he said.\n\n\"Schuyler. And Schuyler's living about a mile from here in a shitty little house with a mother who's still not coping all that well from what I could see. And now she's scared shitless because someone showed up at her door and said something to her and showed her my picture. So now I can't even meet her and meet my nephew. If she'll let me, that is. And not that I can blame her if she wouldn't, because she'd be more than justified in comparing me to the other two Roberts men who've gone a long way toward fucking up her whole life, dontcha think?\"",
        "\"But that was Pat's people,\" Dad said. \"I didn't do-- \"\n\n\"I don't want to hear your fucking excuses, Dad,\" I said. \"I wanna hear what you're going to do about it. And I want to hear it right now.\"\n\nHe looked at me, a look of resolution coming over his face. He stood, gulped down the rest of his coffee, and said \"I'm going to go take a leak, and then you're going to take me to her, okay?\"\n\n* * * * *\n\nClarice Talbott wasn't home when we got there. At Dad's insistence, we waited in the car for her to get back. After two hours, I suggested lunch, but he'd hear none of it. By one thirty, I needed to take a leak. He told me to get out and go piss behind a tree; he wasn't going anywhere.\n\nAt ten to two, she pulled into her driveway and got out of her car.\n\nBefore she could get to her front door, Dad was out of the car and calling out, \"Clarice, wait a moment.\"\n\nShe froze, then slowly turned to face him. I raced up behind my Dad as he strode across the street, across her lawn, and up to the base of the front porch, looking up at her.\n\n\"Senator,\" she said, visibly shaken.\n\n\"Clarice, settle down. I don't know what they told you, but you're not in any kind of trouble, okay?\"\n\nHer nod said she didn't believe him.\n\nDad looked the house over, then back up at Clarice and said, \"You mind if we come in for a moment? I think Mark here needs to use the bathroom.\"\n\nShe looked at me, back to Dad, and stuttered, \"S-s-sure. Uh, come in.\"\n\nWe followed her in to a neat, cozy little living room with a small, ten-years-out-of-date television sitting on a stand opposite a worn loveseat and a secondhand rocking chair.\n\n\"Bathroom's down the hall,\" she mumbled, avoiding our eyes. \"First door on the left.\"\n\nI went, took a leak, washed my hands, and got back in as quickly as nature's call would allow. Clarice was on the love seat, her hands folded in her lap and her head down. Dad was in the rocking chair pulled up in front of her, speaking in a soft voice. \n\n\"I can't begin to tell you how sorry I am,\" he said. \"Why didn't you tell me.\"\n\n\"We're doing fine.\"\n\n\"You're not doing fine, Clarice. I told you I'd make this right by you, but you've got to let me.\"\n\n\"I did tell you, though,\" she said, looking up at him with a small blazing in her eyes. \"Last year I sent a letter to you. At your house, so no one at the office would get it and find out. I told you then I was having troubles.\"\n\n\"I never got it, Clarice. I swear.\"\n\nI knew where it went, though. Mom, sure as hell.\n\n\"Well I did,\" she insisted. \"I'm trying, Senator. But you have no idea what it's like. How hard it is.\"\n\n\"What're you paying her?\" I interrupted. \"How much are you getting to help out with Schuyler and everything else?\"\n\n\"Fifteen hundred a month,\" Dad said.\n\n\"Four hundred a month,\" Clarice said at the same time.\n\nDad stared at her. \"It's fifteen hundred.\"\n\n\"No, Dad,\" I said. \"It's four hundred. That's how I found out about her. I saw the financial records showing all the payments. It's always been four hundred.\"\n\nI thought he was going to have a heart attack. \"But . . . what . . . it was supposed to be . . . .\"\n\n\"Who was in charge of setting it all up?\" I asked.\n\n\"I don't know,\" he said. \"I mean, Jim Parker, I suppose. But I didn't really tell him. It was supposed to be . . . I just thought. . . .\"\n\n\"You left Mom in charge of it, didn't you?\"\n\nHe nodded, his face blank with the shock.\n\n\"And you,\" I said, turning to Clarice. \"You've probably sent other letters to the house, too, right?\"\n\nShe looked at Dad and said, \"Yes. For five years. Fifteen, twenty letters.\"\n\n\"And when the man showed up at the door, he wanted to know what I'd learned, right?\"\n\n\"Yes,\" she whispered, tensing at the memories.\n\n\"And he said if you lied, they'd cut you off totally, right?\"\n\n\"Right.\"\n\nI looked from her to Dad. \"I think I hit the nail on the head yesterday, Dad. She's a monster. Mom's a monster, and Stevie got her genes in more ways than one.\"\n\nHe could only stare at me, whatever little bit of good still left in him so utterly shocked and repulsed at Mom's actions and the continuing rape of Clarice Talbott.\"\n\n\"But you're going to make good on this, aren't you, Dad?\"\n\nHe nodded.\n\n\"You're gonna make good on it right now, right?\"\n\nHe nodded again, a little faster.\n\n\"Then get out your checkbook. Now.\"\n\nHe reached into his jacket pocket and pulled it out.\n\n\"Well?\" I said. \"What're you waiting for? Start writing.\"\n\nHe reached for a pen, and I turned to leave.\n\n* * * * *\n\nI was four blocks away when I heard her calling out behind me.\n\nI turned and saw Clarice Talbott running after me, waving for me to stop. I did, then started walking back toward her before she collapsed. Seeing me coming back, she waited with her hands on her knees, gulping for air.\n\n\"I'm sorry,\" I said. \"I didn't know.\"\n\n\"It's why you showed up, isn't it?\"\n\n\"Yes.\"\n\n\"It's why you went to his games and cheered for him, too.\"\n\n\"Right again,\" I said. \"I thought he was my brother at first. I thought you and Dad . . . you get the picture.\"\n\n\"How much do you know?\"\n\n\"I'm pretty sure all of it. Dad told me this morning. He told me that Schuyler was my nephew, and he told me . . . .\"\n\nShe stood up, still getting her breath back. \"He told you that Steven raped me. That that's how it happened.\"\n\nI nodded, then said, \"And he told me they were supporting you and Schuyler, too. But I'd seen your house, and I was pretty sure they could do better. Also, I remember that look on your face when you slammed the door on me. I heard you on the phone with someone.\"\n\n\"So you made him come here and tell me that . . . well, set everything right, is that it?\"\n\n\"I didn't think you should be living in fear or looking over your shoulder for something that I caused.\"\n\n\"How did you cause it?\"\n\n\"I ran away. Up here to find you and my little brother. That's what I thought, and that's why I came here.\"\n\n\"And you didn't tell anyone?\"\n\n\"Long story.\"\n\n\"I'd like to hear it sometime,\" she said, her eyes piercing me with an intense gaze. \"Because whatever they did, it has to be more than just this. I've never seen anyone--and I mean anyone--talk to your father like that. Ever.\"\n\n\"You wouldn't believe it.\"\n\n\"I'm afraid I would. If it involves your mother, I'm thinking now that I'd definitely believe it.\"\n\n\"Yeah, well, maybe sometime I'll tell you all about it.\"\n\nI just looked at her for a minute, then turned to resume walking.\n\n\"Hey Mark?\" she said.\n\nI stopped and turned around. \"Yeah?\"\n\n\"I know he's not your brother and all, but he is still your nephew, y'know?\"\n\n\"I know.\"\n\n\"Well, I was just wondering if maybe you'd like to meet him sometime.\"\n\nI smiled. \"I'd like that a lot. More than you'd ever believe.\" I hesitated, then said, \"But it won't be too hard on you? Knowing I'm the brother of the guy that . . . you know.\"\n\nShe shook her head. \"You're nothing like him. Nothing. And Schuyler needs someone else in his life. So any time you can give . . . well, I think it would help. Anything.\"\n\nI nodded. \"Beware what you wish for. If I have my way, he'll be playing drums in a little band I'm thinking about getting together.\"\n\nShe laughed. \"Thanks. That's just what I need. A mini Dave Grohl pounding away day and night.\"\n\n\"We'll work something out at his game on Sunday, if that's okay.\"\n\n\"That's perfect,\" she said. \"And Mark? Thanks. Really.\"\n\nI waved her off, then turned back and started walking into the brisk wind blowing into my face.\n\nSandy was right. It was cold up here.\n\nI decided to get some warmer clothes, because there was no way I was leaving now.\n\nCHAPTER ELEVEN\n\nIt had been a long afternoon spent walking from Clarice's back out to the diner to get my car. Then I'd phoned Whitney and set up an appointment for both her and Rebecca. After driving around and thinking about everything for almost two hours, I made the appointment and told them everything. My folks showing up, Sandy the night before, my scumbag brother, and my nephew and Clarice. The whole mess.\n\nWhen it was done, they both looked as tired and worn down as I felt. They said no to a meal, so I wandered back to my dumpy little apartment.\n\nIt was dark, and I flipped on a switch in the kitchen. I hadn't eaten all day, and my stomach was growling. I was still chilled to the bone, too, but decided against soup on the side. Thus, seven thirty saw me sitting alone at my table with an Italian Beef with sweet peppers and a salad on the side. I didn't taste the food, though the beer chaser calmed my nerves.\n\nOne last look at the clock, ten to eight, and I scraped my half-eaten meal into the garbage and made for the bedroom.\n\nOpening the door, I heard movement on the bed and flipped on the lights.\n\nSandy was laying atop the comforter, curled up on her side, sound asleep. I smiled, not caring how she'd gotten in.\n\nI got undressed, pulled on a pair of pajama bottoms and a t-shirt, and got onto the bed next to her. She mumbled and squirmed, then settled back down to a steady rhythm of light snores.\n\nI laid there, content with just watching her sleep for the first time in months. Then the thought struck me: I had my answer if she had hers.\n\n* * * * *\n\n\"I thought it was a dream,\" she whispered when the sunlight woke me up.\n\nI turned to her with a smile. \"How'd you get in?\"\n\n\"Patio door was unlocked. You must've forgot to lock it last night when you went in.\"\n\n\"When did you get here?\"\n\n\"Late afternoon. I tried that place you work, but they said you'd taken the day off. I decided to wait, but I must've fallen asleep.\"\n\n\"Pretty early, too. I went to bed just before eight, and you were already snoring away.\"\n\n\"I don't snore.\"\n\n\"I'll record you next time.\"\n\n\"You're serious?\" she said, mulling it over for a moment. \"I snore?\"\n\n\"Yep.\"\n\n\"What kind of snore?\"\n\n\"What d'ya mean?\"\n\n\"You know. Is it a big rumbling snore, or a dainty little snore? Like a cute snore you can just barely hear.\"\n\n\"The big rumbling number.\"\n\n\"Do not,\" she protested, then shrieked a giggle and pushed me away.\n\nI smiled, reminded of the Sandy of old, the one that was always like that great gust of constant wind.\n\n\"I came here to tell you something,\" she said after a moment.\n\n\"What's that.\"\n\n\"That I'll go wherever you want and do whatever you want on whatever terms you want,\" she said, firmly and convincingly. Then her voice dropped and she said, \"Assuming you decide to give us a second chance, that is. Give me a second chance.\"\n\n\"Even if it means staying here?\"\n\n\"Here as in this town, or here as in this dumpy little apartment?\"\n\n\"Does it matter?\"\n\nShe shrugged. \"We can afford a nicer place, you know. But if you want to stay here, then fine. I'll stay here with you.\"\n\nI smiled. \"You sure?\"\n\n\"There's just one condition, though.\"\n\n\"What's that?\" I asked, eyes narrowing.\n\n\"This new you? The one that's gonna start doing what he wants to do and stuff? He's still got to stay the old you, too.\"\n\n\"Meaning?\"\n\n\"I fell in love with the Mark Roberts that loved me back and that wanted to spend time with me. You wanna play in a band and do something else for a living--even tend bar, for that matter--that's fine. But I still want the Mark who sings to me on the patio and holds my hand and usually lets me pick the movies, too. Or is that Mark gone?\"\n\n\"So I've got to keep watching that sappy crap you're always dragging me off to?\"\n\nShe nodded, but didn't smile. She bit her lip and said, \"Sorry. We can see more of yours, but I still wanna see some of mine, too.\"\n\n\"So what you're saying is--assuming we decide to give this another shot, of course--you're saying it still has to be a partnership. I can't turn into some sort of petty tyrant, right?\"\n\n\"Something like that.\"\n\n\"Even if it gets kinky and involves light spankings and blatant exhibitionism.\"\n\n\"Get out,\" she said, pushing me again with that playful giggle. \"Exhibitionism in this goddamned tundra? You kidding me or something?\"\n\n\"So the light spankings are in?\"\n\nShe gave a playful shrug. \"Sure, why not? Your ass is like steel. Shouldn't hurt you too much.\"\n\nI laughed, then replayed what she'd just said and got silent. Rebecca had said that about what I considered my somewhat average bottom.\n\n\"What?\"\n\n\"I may've had a girlfriend up here.\"\n\n\"May have?\"\n\n\"Did.\"\n\nShe slowly got a scared look on her face. \"Do you love her?\"\n\n\"Never got that far.\"\n\n\"But you're still seeing her?\"\n\n\"Only saw her a few times, Sandy. Then we sorta just settled into a friendship.\"\n\n\"But you . . . .\"\n\n\"Yes.\"\n\nShe closed her eyes and laid back on the bed.\n\n\"I really thought we were over,\" I explained. \"That it was all a joke from the git go.\"\n\nShe opened her eyes, still looking at the ceiling, and said, \"Can we talk about this some other time?\"\n\n\"You sure that's a good idea?\"\n\n\"Positive. I just need to get my head around it.\"\n\n\"How so?\"\n\nShe rolled to her side and looked at me. \"You sleeping with her, that was me three years ago. You felt like I did then, like it wasn't really a marriage so what's the big deal, right?\"\n\n\"Pretty much.\"\n\n\"So how can I hate you or yell at you or blame you or anything? Especially where I did the same thing back then.\"\n\n\"I guess so, but still.\"\n\nShe shook her head. \"And you did it after running off after I'd spent three years trying to prove I loved you as much as you loved me, so it's pretty . . . well, it hurts that way, too. But then again, that's pretty much when I did it to you, too. After you spent the first years showing me how much you really loved me.\"\n\n\"I didn't do it to get even,\" I said. \"We only did it-- \"\n\n\"It doesn't matter if you only did it once,\" she said, reaching out to stroke my cheek. \"What matters it that I just have to deal with it, okay? And I will. I promise.\"\n\n\"If you need some more time to think about this,\" I started, but was stopped when she leaned in and kissed me.\n\n\"I don't need more time, Mark. I know what I want, and I know we've both got some things to get over, okay? I just didn't expect to have to get over this one. Caught me a bit by surprise, though I don't know why.\"\n\n\"What're you saying? I'm a skirt chaser?\"\n\n\"No,\" she said, reaching under my shirt to stroke my chest. \"That you're hot, and I'm surprised I didn't show up here to find you with a whole flock of chicks all over you.\"\n\n\"Did I forget to mention them?\"\n\nShe laughed, then pushed me away. \"Go brush your teeth.\"\n\n* * * * *\n\n\"Sure got a bounce to your step today,\" Ferlin observed as I cleaned up after the lunchtime crowd.\n\n\"Things are looking up, my portly pal.\"\n\n\"Portly pal?\"\n\nI smiled. \"Things are definitely looking up.\"\n\nHe looked at me for a moment, then smiled and said, \"Good for you.\"\n\n\"Thanks.\"\n\n\"You're welcome.\"\n\n\"No, I mean for everything. Thanks.\"\n\n\"I know what you meant,\" he grumbled. \"And you're still welcome. This mean you're quitting?\"\n\n\"Not now, but soon.\"\n\n\"Try to give me a week's notice, huh?\"\n\n\"I'll give you three.\"\n\n\"Fair enough.\"\n\n* * * * *\n\nRebecca and Whitney dropped by after work for a drink.\n\n\"You're getting back together, aren't you?\" Whitney said, her face as happy as I'd ever seen it.\n\n\"Looks that way.\"\n\nRebecca seemed put off at first, then just smiled and shrugged. \"Oh well, maybe next time.\"\n\nI leaned over and said to both of them, \"This doesn't change anything so far as I'm concerned. Other than Ferlin and Teddy Cooper and Nick Harlan and the girls around here, you're the only folks I know up here.\"\n\n\"So you're staying here?\" Rebecca said. \"Not going back to that high paying job in Memphis?\"\n\n\"Staying here.\"\n\n\"With her?\"\n\n\"With Sandy. Yes.\"\n\nShe gave a real smile at that. \"Cool.\"\n\n\"Hey, babe,\" a guy said as he approached.\n\nWhitney's face lit up and she said, \"Hey to you, too, babe.\"\n\nHe leaned over and kissed her, then looked at me and said, \"Bottle of Bud?\"\n\n\"Aaron,\" Whitney said to him, \"this is Mark Roberts, the one I've been telling you about.\"\n\nHe gave me a lazy smile, but his eyes narrowed as he eyed me up. \"Hey, Mark,\" he said, extending his arm.\n\n\"You're a cop, right?\" I said as we shook hands.\n\n\"She tell you?\"\n\n\"Nah. Just a lucky guess.\"\n\nWhen they all left a half hour later, Rebecca made eye contact, then looked down to her hand on the bar. I looked down as well and watched as she slid a small piece of folded paper toward the bar rail. When she lifted her hand, I looked back to her face. With a wide smile and flirty bounce of her eyebrows, she left.\n\nI followed that magnificent ass all the way out the door before picking up the note and reading.\n\n\"Loyola Law School has three openings for associate professor starting Fall next year,\" the note read. \"Just thought you might be interested.\"\n\nI thought about it, then slid the note in my pocket.\n\nHell yes I was interested.\n\n* * * * *\n\nSandy met me for a drink after work, and we were sitting off in a corner when her daddy walked in with my dad.\n\n\"Mark,\" he called, giving a fake smile from ear to ear.\n\n\"Pat,\" I replied, not bothering to stand or stick out my hand.\n\nHe hesitated, the smile faltering, then got it all back together in full force and plodded on. \"So we've found you, boy. Mind if I sit?\"\n\n\"Yes, Daddy, we do mind,\" Sandy said, a sickly sweet smile on her face.\n\nHis features clouded, and this time the smile was gone for good. He stood taller then, trying to use his natural advantages to their fullest.\n\n\"I just want to know that you're all right,\" he said.\n\n\"We're out, Daddy,\" Sandy said. \"Got it? Out. We're gonna be living up here now, and we don't want anything to do with any of you. Nothing. Not a goddamned thing. You, Mom, the Senator and Debra, you're all out of the picture now, got it?\"\n\n\"Who do you-- \"\n\n\"Let's go, Mark,\" she said, pushing off the barstool and grabbing my hand.\n\nI let her lead me past them toward the door. Halfway there, though, she stopped and spun around.\n\n\"And let's get this straight, Daddy,\" she said, snarling out the Daddy part. \"You leave us alone and you make sure everyone else leaves us alone, too. If the press shows up at our front door, I'm gonna give it to 'em straight. All of it. Then you can explain to the poor voters of Tennessee how you used your own daughter to play them all for fools.\"\n\nHis face masked into fury, and his massive fists clenched at his side.\n\n\"Say you understand,\" she said through clenched teeth.\n\nHe only stared.\n\n\"Say it,\" she demanded.\n\n\"I understand.\"\n\nWith that, she spun around again and led me out the door in a huff.\n\n* * * * *\n\nShe followed me back to my dumpy little apartment. Before Sandy had arrived--and before I'd decided to give it another shot--I'd been okay with the place. Hell, it suited my needs. Now, though, I was a bit embarrassed. Rebecca had been right: It was more a dorm room than a home.\n\n\"I'm starving,\" Sandy said as she unwrapped her layers of jacket, sweater, hat, and scarf, shaking out her hair as she did so. \"You got anything to eat?\"\n\n\"Sandwich?\" I said.\n\nShe gave me her famous quizzical look, the one that's half what-the-hell and half you-can't-be-serious. \"That's all?\"\n\n\"Yep.\"\n\n\"Is that what you've been living on for the past two months?\"\n\n\"Yep.\"\n\nShe started smiling. \"What kind of sandwich?\"\n\nI went to the freezer and opened it. \"Tonight's Thursday, so it's Tex Mex sloppy joes made with ground bison.\"\n\n\"Bison? As in buffalo meat?\"\n\n\"As in buffalo meat.\"\n\n\"Is it any good?\"\n\n\"Not a clue. I haven't tried it yet.\"\n\nShe closed the gap between us and put her arms around me, burying her face in my chest. \"You've already changed, Mark. And I'm thinking for the better.\"\n\n\"How so?\"\n\n\"I don't know. You just have.\"\n\n\"So you ready for some sloppy joes?\"\n\n\"Sure.\"\n\nShe helped me thaw and then gently reheat the sandwich filling. Twenty minutes later, we were seated opposite each other at the tiny table, unable to take our eyes off each other as we ate, but also unable to really say anything.",
        "When I finished and put my plate aside, I reached across the table and brushed my fingertips across the back of Sandy's hand. That started the waterworks. Brushing a tear off as it slid down her cheeks, I said, \"What's wrong?\"\n\n\"I thought I'd lost you. For two months, I was terrified I'd never see you again. Then, when I finally found you, that look on your face as you sang that song.\"\n\n\"Sorry,\" I said.\n\n\"It's not your fault,\" she said. \"It's mine. And theirs.\"\n\n\"Mostly theirs.\"\n\nShe picked my hand up and stroked my palm against her cheek before kissing it. \"If this happens again--if this doesn't work out and you decide to move on--at least tell me to my face, okay?\"\n\n\"It's going to work out, Sandy,\" I said, realizing I meant every word.\n\n\"But if it doesn't, promise me you won't just disappear.\"\n\n\"Promise.\"\n\nShe smiled and leaned into my hand. \"Thanks.\"\n\nA few minutes later, we were both more relaxed. I was standing at the sink washing the dishes while Sandy dried and put them away. She was getting more playful as we did so, reaching across to flick water on my shirt until I did the same to her and went a touch overboard.\n\n\"I'm soaked,\" she said, looking at the wet fabric dousing most of the front of her blouse.\n\n\"Serves you right.\"\n\n\"Fine,\" she said, that familiar curl lifting the corner of her lips as that twinkle danced in her eyes. \"Might as well be now as anytime.\"\n\nShe started unbuttoning her blouse, but I decided to play dumb.\n\n\"What're you doing?\"\n\n\"You know damned well what I'm doing.\"\n\nI shook my head and leaned back. \"Not a clue. We've got dishes to finish here.\"\n\n\"I've got an itch that needs scratching first.\"\n\n\"But the dishes,\" I protested.\n\n\"The itch comes first.\" She pulled the blouse off and came to me, falling easily into my arms and lifting her face to mine. \"So unless this flock of groupies has got you all worn down, get to scratching.\"\n\nI tilted my head and kissed her, the passion quickly increasing as I ran my hands over her bare back. Her frame, always slim to begin with, was nearly gaunt; I could feel her rib cage against my fingertips and her bra, when I went to unsnap it, was loose.\n\nBut the kiss, and the ways and places she touched me, was still Sandy. The Sandy I'd fallen in love with. The one who quickly got going and was now clawing at my shirt to get it over my head before going straight for the jeans and undoing them before tugging them down.\n\n\"Wait,\" I said, breaking away and stepping back.\n\n\"What's wrong?\" she asked, her face confused and more than a bit hurt.\n\nI gave her a broad grin. \"I want to watch you undress yourself.\"\n\n\"Right here?\" she said, her eyes darting right to the window over the sink then over her shoulder to the sliding glass doors behind us.\n\n\"You started it,\" I said.\n\n\"Is this that exhibitionism thing you were threatening me with?\" she said, the hurt gone and the twinkle back as she started sliding her fingers over her ribs, breasts, and belly.\n\n\"Maybe.\"\n\n\"Is everyone up here as perverted as you are, or have you just been spending your nights all alone surfing internet porn?\"\n\n\"Not tellin'.\"\n\nHer hands slid down the front of her jeans, and I saw her hips start a slow twirl as her right hand got low enough for contact.\n\n\"Is this what you had in mind?\"\n\n\"Pretty much.\"\n\nHer left hand started massaging her breasts, squeezing and pinching her nipples taut as her right hand continued squirming in her pants.\n\n\"You gonna join me?\" she asked, exhaling in relief as she spoke.\n\n\"As in help you?\"\n\n\"As in undress in front of me, too.\"\n\n\"Does it work that way?\" I said, sliding my jeans the rest of the way down.\n\nShe bit her lip, but kept her eyes on me. \"It better work that way.\"\n\n\"Like this?\" I said, reaching into my boxers and grabbing my hard on.\n\n\"Now stroke it,\" she said, her left hand moving down to unbutton her jeans. She shimmied out of them, and I was treated to a full view of her right hand twirling between her legs.\n\nI started a slow stroke, mesmerized by the sight of my pixie wife pleasuring herself.\n\n\"Now the underwear,\" she said.\n\nWith my left hand, I slid them slowly down my hips until they fell to my ankles.\n\nStepping out of them, I moved toward Sandy and leaned in to kiss her. My left hand joined the hand in her panties, while my right reached behind and grabbed her ass, squeezing and kneading before I pulled her panties down.\n\n\"This is nice,\" she said mumbled, panting into our kisses.\n\nHer hand was soft and cool and it found me and pulled me to the kitchen floor. \"I can't wait,\" she said, leaning backward and pulling me atop her.\n\nShe guided me in as her kisses got hungrier. I was overwhelmed by the sensations. She was an impossibly tight, moist inferno, and her hips rose to meet mine as I bottomed out. Her orgasm was almost immediate as she was clutched my ass and tried to pull me in deeper, her hips bucking and grinding against my pelvis to increase the contact with her clitoris.\n\nOnce her hips slowed down, I began stroking in and out, slowly at first, but soon increasing both in speed and force.\n\n\"Yes, yes,\" she panted into my ear. \"Just like that, baby. Yes, just like that. I'm gonna cum again.\"\n\nI had to brace my hands on the cool, slick linoleum to keep us from sliding into the wall, and I felt my own release approaching as she again started bucking and writhing beneath me, her fingernails digging deep into my skin and holding me still. Her slick walls were convulsing and sucking me in deeper, and I reared my head back and just exploded into her.\n\nMoments later, Sandy's body collapsed fully to the floor, limp and satiated. \"Oh my God, that was hot.\"\n\nI smiled, still fully sheathed inside her. \"Which part?\"\n\n\"All of it.\"\n\n\"You liked it, didn't you?\"\n\nShe looked up at me through hooded eyelids and gave a lazy smile. \"You're still a pervert.\"\n\nI chuckled. \"Yeah, but apparently so are you.\"\n\n\"Whatever.\"\n\n\"Whatever.\"\n\n* * * * *\n\nAn hour and a half later, just after completing round two, we lay in bed together.\n\n\"You've really worked up an appetite, haven't you?\" I said.\n\nShe grinned. \"Like I said, it's one hell of an itch here.\"\n\n\"You gonna try and screw me to death?\"\n\n\"Maybe.\"\n\n\"Punishment?\"\n\n\"You complaining?\"\n\n\"No.\"\n\nHer smile went from bright to nostalgic, and I said, \"Penny for your thoughts.\"\n\nShe exhaled, then said, \"It still doesn't seem real, y'know?\"\n\n\"How so?\"\n\n\"I was just so afraid. All those weeks, I didn't think I'd ever see you again. Then, when Mom told me that you'd never known, I was convinced you'd just run away from me.\"\n\n\"And this makes it more real?\"\n\n\"This does,\" she said, snuggling into me. \"I mean the boffing part's great and all--God knows I really need it--but this part, Mark. Just you holding me. It almost seemed real when I woke up in your arms, but I want to fall asleep there, too.\"\n\n\"You asking if you can spend the night?\"\n\n\"Is it too soon?\"\n\n\"No,\" I said, shaking my head. \"I think I need this part, too.\"\n\nShe gave her happy, contented smile, then snuggled her smooth, naked skin in closer to mine. Within a few minutes, she was snoring softly, her breath tickling the few hairs on my chest.\n\n* * * * *\n\nShe woke me up the next morning the way she used to wake me up only on Sundays.\n\nI recommend it to anyone who wants to start the day out right.\n\nCHAPTER TWELVE\n\nFriday night dinner was spent catching Sandy up on all that had transpired.\n\nI told her about Clarice Talbott and my brother raping her and my nephew I'd never known about. She was stunned to say the least, but not completely surprised about Stevie's role in it.\n\n\"I'm sorry, Mark,\" she said. \"I know he's your brother and all, but he always had a bit of a sadistic streak in him. I used to take that to mean he was strong, but he wasn't. Sometimes he was just plain mean.\"\n\n\"But you loved him,\" I pointed out.\n\nShe shook her head. \"I loved the idea of him. Of him and us together. Like the prom king and queen being together and having the beautiful house and making beautiful babies. Later, like I told you, I realized he'd have been just like all the other asshole husbands. I'd have had the house and the babies and lunch at the club, but I'd have never had a soul mate.\"\n\n\"You consider me your soul mate?\" I said, a bit tickled at the notion she'd never express.\n\n\"You know I do,\" she said, surprised I'd ask. \"Don't you consider me your soul mate?\"\n\n\"No,\" I said. \"I consider you the yin to my yang. You complete me in ways I need to be completed.\"\n\n\"And that's different?\"\n\n\"I think so.\"\n\n\"Hmmm,\" she said, pursing her lips to ponder it.\n\nThen I told her about the gigs and how they led to me meeting with Teddy and Nick to flesh out my songs. At first, she could've cared less because she had no clue who they were.\n\n\"They wrote all that music for LeadFoot,\" I said, cluing her in.\n\nA lightbulb went off in her head. \"And now they're in General Beauregard?\"\n\n\"Exactly.\"\n\n\"Wow,\" she said. \"Okay, that is a big deal, I suppose.\"\n\n\"Exactly,\" I said, pleased with myself.\n\n\"And they're gonna record your songs?\"\n\n\"Nope. They're gonna help me peddle them to other acts.\"\n\nShe thought for a moment, then said, \"And this is what you're gonna do now? Be a songwriter?\"\n\n\"Just part time. I'm thinking of trying to get a job as a law professor to do full time.\"\n\n\"Professor?\" she said, then laughed and flashed me an evil grin. \"So it's not enough that you have tons of groupies, now you're gonna have all those little female students fawning over you, too?\"\n\nI laughed. \"Never have enough.\"\n\n\"And if I start dressing like a schoolgirl, Professor?\" She snuggled in closer. \"Short little skirts and too tight white blouse? And maybe misbehave in class?\"\n\n\"You naughty little girl,\" I laughed, then pulled her over my knees and gave her a firm smack on the ass.\n\n\"Ouch!\"\n\n\"Ouch good or ouch bad?\"\n\n\"Ouch I've been a naughty girl,\" she said, turning over her shoulder and daring me.\n\nThat led to a rather spirited romp along avenues we'd never before taken. Rubbing her cheeks afterwards, she insisted I apply lotion. That was almost as much fun as the romp. For both of us.\n\n* * * * *\n\nSunday at noon, Sandy and I sat beside Clarice Talbott, the three of us huddled in tightly under one umbrella as the icy rain drummed upon us. Our banter through chattering teeth and constant shivers centered on weather this far north. I doubt I'd have seen him if someone hadn't gotten up and left just before the end of the first quarter.\n\nHe was huddled all alone, no umbrella, his baseball cap soaked as he hunched his shoulders against the weather. Even from where we were, though, I could tell he was lost in his thoughts as he watched his grandson scamper across the muddy field.\n\nI nudged Sandy, and she looked. Her expression was inscrutable.\n\nClarice turned, looked, and said, almost to herself, \"It was never his fault, you know. None of it was.\"\n\nI held my tongue, but Sandy didn't.\n\n\"If he'd cared enough, he'd have gotten personally involved.\"\n\n\"She's his wife, though,\" Clarice said. \"If you can't trust your wife, who can you trust?\"\n\nSandy shot a look at me, then looked down. I took her freezing hand into mine and squeezed, trying to will some warmth into her skin. \"You're right,\" I said to Clarice. \"I don't suppose it's easy to believe such things are really possible coming from the woman you gave your heart and soul to all those years ago.\"\n\n\"But he could've been there for you,\" Sandy whispered after a moment. \"He could've tried harder. Tried to be a part of Schuyler's life.\"\n\nClarice sighed. \"Yeah, maybe. I'm not really too sure I'd have let him, though.\"\n\n\"Then why now?\"\n\n\"Because a lot of time has passed. And now he's trying to do what's right. It's not just the money, though it sure helps. It's not his responsibility, though. I think it was the shame. All along, I think he blamed himself for Steven and . . . and what he was and what he did.\"\n\nClarice turned to me. \"I don't know what he did to you, but I know it was more than just this. Still, I don't think it was all his fault. You may want to think about that.\"\n\nI didn't move, just looked back at him all alone there with his thoughts.\n\n* * * * *\n\nThe Generals managed a touchdown late in the third quarter. Not Schuyler, but the quarterback. Schuyler threw the key block just before the goal line, though. They held on to win six zip.\n\nHe ran up to us after the game, giving his mom a big hug that covered her rain coat with mud.\n\n\"We did it,\" he said, a bundle of energy even after an afternoon on the torn up gridiron. \"Undefeated, mom. You know what this mean?\"\n\n\"No, honey,\" she said, combing his hair back with her fingers. \"What does it mean?\"\n\n\"I get a trophy!\" he said, giving a smile that accentuated his missing baby teeth.\n\nThen he turned to us. \"Who's parents are you?\"\n\nClarice knelt in front of him. \"This is your Uncle Mark,\" she said. \"And your Aunt Sandy.\"\n\nHe looked perplexed. \"I've got an uncle? And an aunt?\"\n\nI saw my dad off to the side, looking on as he swayed from foot to foot, his face a mask of sorrow. I cleared my throat and, when Clarice looked, nodded toward my dad. She looked, then gave a sad smile.\n\n\"And a grandpa, too.\"\n\n\"A grandpa?\"\n\n\"He's over there, honey.\"\n\nSchuyler turned and looked, not sure what to do. After a moment of staring, he said in a tiny voice, \"Are you my grandpa?\"\n\nDad hesitated, then nodded.\n\nSchuyler closed the fifteen feet between him and Dad, stopped, and looked up. \"Where've you been?\"\n\nDad cleared his throat, and I could tell he was holding back tears. His body tensed, and it seemed all he could do to keep from bending down and taking the little boy into his arms. After a moment, he said, \"I guess I haven't been a very good grandpa, have I?\"\n\n\"No,\" the boy said. \"You haven't.\"\n\nThey stared at each other for a minute or more. Then, as if in slow motion, Schuyler reached his tiny hand out and said, \"Can you buy me a hot cocoa before they run out?\"\n\nTears mixed with the rain on Dad's face, and he croaked, \"Yeah. I'd love to.\"\n\nThe little boy led him to the tiny snack shack near the end zone already crowded with players.\n\n\"He wants to be a part of Schuyler's life,\" Clarice said, watching them. \"We talked about it after you left, and I think it would be good for Schuyler.\"\n\n\"And my mom?\" I said.\n\nShe gave a tight shake of her head. \"He didn't think that wise.\"\n\n\"He's right.\"\n\nWe made our way to the snack shack as a group, standing off to the side.\n\n\"You have any plans for an early dinner?\" Sandy said to Clarice.\n\nShe shrugged. \"Probably just soup and sandwiches. On a cold day like this . . . .\"\n\n\"You won't believe your luck,\" Sandy said, brightening under the gray skies. \"You think Schulyer likes bacon and tomato on his grilled cheese?\"\n\nI looked at Sandy and grinned. \"But Sunday's not grilled cheese night.\"\n\n\"It is now,\" she said, then turned to Clarice. \"You guys in?\"\n\n* * * * *\n\nDad turned down Sandy's invitation to dinner.\n\n\"Thanks,\" he said, unable to meet my eyes. \"Really. I've got a flight back to Washington, though. There's some things coming up before us, and I really need to be there.\"\n\n\"We gonna see you again soon?\" Sandy said.\n\nHe looked up, disbelief on his face. \"You still want to . . . .\"\n\nHe turned to me, but my face was uncompromising. His eyes fell again.\n\nI let him stew for a moment, then said, \"I don't know, Dad. You used me.\"\n\nHe nodded. \"I know. And I'm sorry. More sorry than you'll ever know.\"\n\n\"But you've got a grandson here now,\" I said. \"A grandson who doesn't need to be abandoned a second time.\"\n\nHis eyes darted to Clarice and Schuyler as they walked to her car. \"Is it too late?\"\n\n\"Yeah, it's too late. But better late than never, don't you think?\"\n\n\"But your mother,\" he said, still watching Schuyler with a look of longing I hadn't seen on him in forever.\n\n\"Looks like you've got some choices,\" I said.\n\nHe turned back to me, searching for a glimmer of forgiveness.\n\nI gave him none. After a moment, his lips set and he started a slow nod.\n\nI took Sandy's hand and left him there in the rain.\n\n* * * * *\n\nNine months later, I was waiting at the front door of our little home a couple blocks away from my nephew's home.\n\n\"Hurry up,\" I cried out. \"I'm gonna miss my train.\"\n\n\"Found it,\" Sandy called back. I heard her rushing down the hallway.\n\n\"Slow down. Jesus, you'll fall.\"\n\nShe slid to a stop at the end of the hall, gave a huge smile, and raised the camera, snapping away. \"Look at you. You look awesome.\"\n\n\"You think?\" I said, tugging the lapels on the sport coat to straighten the jacket.\n\n\"My own professor,\" she said, putting the camera down before walking over and tightening the knot on my tie. \"This is just awesome.\"\n\n\"You think?\"\n\n\"I think.\"\n\n\"Well, I think this is awesomer,\" I said, reaching over and stroking the gentle bulge in her belly.\n\n\"Awesomer?\" she said, her hand going atop mine and pressing against our growing little one. \"Is that even a word?\"\n\n\"Should be.\"\n\nShe beamed, then reached over and gave me a long kiss on the lips. \"Knock 'em dead, professor.\"\n\nThe End"
    ],
    "authorname": "Rehnquist",
    "tags": [
        "exhibitionism",
        "spanking",
        "one on one",
        "cheating"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-lazy-lemon-sun-ch-04"
}