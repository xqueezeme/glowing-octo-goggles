{
    "title": "At His Majesty's Pleasure Ch. 09",
    "pages": [
        "Changeable as always, Alexander cooled at once with the question. In some respect, he knew it was a little unfair. After all, he was the one who brought up the subject of his brother in the first place. And yet, though he would have tolerated - and indeed, would have been happy to answer, in his current mood - any other question (what was he like? did they get along? how did he get anywhere if not on horseback?), it was not any other question that had been posed. The truth was that this was the one rumor that Alexander detested above all others, and despite his best efforts (or perhaps because of them, considering the nature of his efforts) had grown to be one of the most widespread whispers in his kingdom and the ones beyond. \n\nMost did not make even insinuations about his ostensible usurpation, much less ask him about it to his face (however obliquely). The subject questioned his legitimacy, and so was inherently dangerous - but more than that, he'd shown himself to be especially...sensitive about it. Which, in retrospect, probably made him look even more guilty, but what was a belligerent King to do.\n\nIn any case, because his answer should have been common knowledge - the official story was publicized - he found any questions about it redundant and distasteful. It was essentially an accusation, even if wrapped up in all the innocence of a casual question.\n\nShe was backpedaling now, seizing upon a distraction.\n\n\"Leave the umbrella - \" he began to say, but it was too late. Right after the umbrella she went, careening clean off the boat and splashing magnificently into the water.\n\nAlexander only had a moment to be flabbergasted, watching her sink down into the embrace of the lake. Then panic set in, and along with it a newfound sense of urgency. She couldn't be lost - he had taken such pains to take possession of her, she was the key to all of his plans. There was another undercurrent to his emotion - some innate sense that he would lose something precious - but he hardly had the time to register it.\n\nThe barge, rocketed by her movements, had already dipped sideways enough to begin rapidly accumulating water, which was just as well - Alexander launched out of its confines and immediately dove in the direction of her ripples, aware that he had precious little time to act. He was clothed lightly, given the warm temperature, and did not have the excess of cloth and lace to encumber him; smoothly, he waded deep down, one arm extending to quickly encircle her waist. \n\nBut there was still too much of that dress, too many layers weighing them both down now - Alexander could see the surface light grow dimmer and dimmer, the sunlight slowly quenched by the depths of the lake. Thinking quickly, he unsheathed the dagger from his belt (how convenient that he was paranoid enough to keep it there always) and, grasping the laces of her gown, sliced through the binding material and struggled to tear it off.\n\nWith the excess cloth shed, her unencumbered body was now light enough in his arms to maneuver. With strong, deliberate kicks, he shepherded them to the surface, as the mussed remains of her gown fell dejectedly behind them.\n\nWhen he finally broke past the water, he gasped at once, greedily sucking in air while holding her aloft. Their boat was long since destined to dissolution, and was nowhere to be found (beyond a series of wider ripples something south of them and two slaves swimming for the shore), but in the distance, he could hear shouting and alarm, and the sound of scrambling men. A boat would be coming, soon - he just had to keep them afloat until then.\n\nBy the time they were rescued, he had just enough strength left to hand her in, before climbing aboard himself. The first seconds were spent on all fours, catching his breath, but that did not hold his attention for long.\n\n\"How is she?\" he demanded, his gaze searching for her prone figure. \"Will she make it?\"\n\nAs for the umbrella - the umbrella had floated benignly back up to the surface, rolling merrily over the spot where she had nearly drowned.\n\n*****\n\nThere was a sharp gasping noise, and suddenly she half-sat half-slumped over the edge of the boat, coughing and choking out the unwelcome contents of her lungs. And there probably needed to be some amount of damage control. Oh gods, she hadn't meant to fall into the water. For once, an honest accident. Was Angry King going to rear its head again? Suddenly, the embrace of a watery grave seemed more welcoming after all. \n\n\"I'm sorry - \" she started unevenly, and broke off into more miserable coughing over the vessel. \"... my fault - \"\n\nHer skull throbbed as though it'd been worked on as one would ceremonial drums. Her head hadn't ached this much since - oh, of course, since the time he'd poisoned her. And there was so much of her body crying for attention (least of which being her dread of his reaction) that she hadn't even begun to realize she was shivering faintly from cold.\n\nShe was surprised to see, however, that the only emotion written in the King's face was relief - it looked almost strange on his features (as surely as the surprise of this morning), as if it wasn't an emotion often registered. The strength of it confused her, until - oh, of course: she recollected her importance in his war plans.\n\nHe merely stared at her for a few seconds, still catching his breath. His shirt was dripping water into the boat, as was her shift. Near the shore, shouts and cries could be heard from various distressed servants. As if seeming to realize the ridiculousness of the situation, he began laughing.\n\nNot Anger. Laughing King. At first her disorientation fed into her confusion - but after a few moments, when he was still laughing, a mollified sigh parted from her lips. She reached outward, and though she lacked the good humor to laugh herself (having just nearly drowned), it seemed fairly reasonable to reach out and give her husband a quick hug of thanks.\n\nIt was a silent gesture. A steady, yet squeezing, embrace, and then it was done.\n\nAnother flicker of surprise went over his countenance, but then he only smiled. \"We seemed to spend a lot of time wet in each other's company,\" he remarked. It was true - when they had gone to the shrine, the waterfall had soaked them through. \"Well,\" he said, his smile growing mischievous, as he recollected a second meaning to his words. \"You more so than I.\"\n\n\"That's terrible,\" was all she could manage, shivering with her arms about her as she was. If she got sick again... And that was when she did almost start to laugh.\n\nThe same thing seemed to be on his mind, for as soon as they docked, he had a thick cloak fetched, which he draped over her; the second of his objectives was to get a fire started, which was conjured at a frankly impressive speed by the nervous servants.\n\n\"Sit, rest,\" he said, guiding her toward the warmth. His smile was wry. \"I won't have you sick again on my watch.\"\n\nShe didn't need more convincing to bask in the heat of the crackling fire, her palms rubbing against the cloak clinging against her arms, as she waited there on her knees. The cloak scented of musk and sandalwood and warmth, almost prompting her to wrap it a bit more tightly about her. It smelled like him.\n\nAfter a moment, he settled down next to her. He wrapped an arm about her shoulders, so that she might lean against him; his shirt had since been changed for a dry one (a reminder of yet another time he'd gotten wet, that time by the act of a thrown goblet).\n\n\"I didn't mean to startle you so, back there,\" he said, looking down on her. Some humor still lingered in the way his lips were set.\n\n\"It's fine,\" she said. For now, he was a comfort, and she could accept that. \"I only wanted to know why he - your brother - stopped communicating with the rest of the world like that. He spoke of you often, you know.\" Practically speaking of a different individual entirely, once upon a time.\n\n\"Did he?\" said the King. His smile became fainter. \"What did he say?\"\n\n\"It was a long time ago. I was very young.\" She turned her gaze to the flames, as if trying to remember. \"It wasn't difficult to be fond of the... idea of you. Does that make sense?\"\n\nA few days ago, Alais could not have reconciled such a thing. Now she at least seemed to be past the point of caring.\n\n\"It does.\" The King was silent for a few moments, before he finally offered an answer to the dormant question. \"He abdicated in my favor and went to the monastery. He was never that interested in ruling - he thought of it as an obligation, instead of a privilege. He liked his books and solitude more.\"\n\n\"That would explain why he stopped responding to letters too,\" she added, nudging him in a half playful note. She seemed satisfied by this answer.\n\n\"He's a bit of a recluse,\" said the King. There seemed to be more to this, judging by his expression, but he didn't expand. \"I wouldn't have taken his life for the crown.\" He gazed sidelong at her. \"Perhaps you think I am capable, and given what you've seen of me, that's fair. But I do have my limits. Family is different.\" \n\nOdd, he almost seemed human in that moment. \"It's an ugly rumor,\" she agreed. \"I understand. Brothers are important like that.\" She did not need to embellish the quiet sincerity when she said it.\n\nThey fell into a silence that was almost peaceable, listening to the crackling of the fire and warming in each other's contact. His arms had encircled her, and what with that and the cloak, she felt snugly enveloped; her chills disappeared after a few minutes, and soon she was nearly dry. \n\n\"Better?\" he asked.\n\n\"Much better,\" she affirmed.\n\n\"Hmm.\" He touched his finger to her cheek, which was still a little cold. \"I think I'd like to warm you up a bit more.\" He turned to glance at the sun, which hung a modest distance from the horizon. \"Yes, we have enough light in the day for it, as long as we don't stay too long.\"\n\n\"Where are we going?\" she asked, as he rose. She made to follow, but this proved unnecessary - he summarily picked her up, carrying her to where Kumquat stood waiting. \"I can walk, you know.\"\n\n\"Oh, but isn't it easier this way?\" It was too easy how he carried her weight, as if she were as light as air - it seemed terribly unfair. He settled her on her sidesaddle, before mounting his own horse. \"I've always thought noblewomen liked having things done for them,\" he teased.\n\n\"Some do,\" was all she said. \"You haven't answered my question, by the way.\"\n\n\"It'll be warm - that's all you need to know.\" \n\n*\n\nA modest trek later, through a thick thicket of trees, they came across what appeared to be an aged, hulking cave, marked by several boulders on either side. As they traversed inside, a steady warmth set in, slow and heavy, and a certain dampness registered about the air. \n\nAhead, water of an entrancing, crystalline blue reflected off the surfaces of the cavern chamber. The pool, wide as it was mesmerising in its subtle ripples and refracting light, drained off in a few smaller tunnels here and there. A constant flow of a thin and chaotic fountain sprayed new spring waters into what would have been a pristinely still body. A fine mist clung above its surface, and breathing it in had just shy of a dizzying effect.\n\nWarmth washed over her in waves, such that she had to loosen the collar of her cloak to fend off suffocation. The hot spring made for a very beautiful sight, if that had been his intent.\n\n\"But,\" she said, feeling strange as she did, \"it's summer.\"\n\n\"Yes,\" the King agreed, \"but since cold waters have proved to be such a hazard before, I thought we'd try a change of pace.\" \n\nHe loosened his cloak as well, and then discarded it entirely, letting it fall at a heap at his feet. \"I suppose we'll just have to unburden ourselves,\" he said, with a playful flicker of a smile.\n\nOh.\n\nHe glanced sidelong at her, his expression drawn into an imitation of coyness, as if to imitate her own. Having shrugged off his tunic and letting it join his cloak, he offered a cheeky smile. \"Would my lady require some assistance?\"\n\nGiven that Alais had exposed herself only a few times to him (to any man) before, she thought she had every reasonable justification to be nervous, adore him though she did. A cave out in the wilds was also a far cry from the traditional, (arguably) safe confines of a bedchamber.\n\nHer glance flitted skittishly behind them, toward the entrance of the misty cavern, as if to wonder where everyone had gone. Maybe - just maybe if someone had only told her sooner, she might have eventually mustered up the willpower to strip at his behest - the warm waters were not without their temptations, after her feverish chills - but no. He always had to toy with her, surprising her like this as if to intentionally catch her off guard.\n\nSurely her apprehensions were not unfounded, even when she loved him. And to her credit, she managed to make her hesitation seem more bewildered and nonplussed than anything like the hostile unwillingness of before.\n\nShe smiled uneasily, making no more motion to disrobe after loosening her cloak, and began to pace the perimeter of the natural pool at a miraculously steady rhythm. \"Oh, that's all right. I'll be fine sitting by the edge.\" The steam felt remedial enough. Her back was turned to him, so that he might undress in privacy - a little more than he'd ever afforded her, so surely that might be construed as nothing less than an act of thoughtful consideration. \n\nThe King chuckled, as if she were being very silly indeed by not promptly stripping down at his behest, but he didn't press the point - for now. \"Suit yourself.\" \n\nThere came the sounds of him undressing, distantly behind her, and then faint stirrings of water as he dipped in. \"You can look now,\" he said, humor in his voice - it was highly likely he would not have cared one bit if she had ogled. \n\nHer eyes turned to him, in all his... gleaming nudity, but for once this was not further cause for apprehension. He was very well built; there was no need to fight against the current anymore. She didn't stare for too long, though. Whether her being a (fairly reasonable) prude was due to tragic inexperience or more innate attributes was still beyond her. Either way, Alais liked to think it was the abruptness of the event which toppled her guard this time. Once the suggestion (actually just a suggestion, wonder of wonders) to strip down had passed, she actually did feel more at ease in her environment. The luminous surface of the water, along with those swirling, dancing vapors, attracted her attention easily, and there her attention comfortably remained.\n\nFortunately, the King seemed to be in the mood where her uncertainty amused him rather than put him off, and it was clear that he enjoyed intentionally flustering her. \"Come here, Alais. Sit by me.\"\n\nAgain to her credit, she responded to his further prompting with nothing less than the grace of a bride who was (more or less, and selectively) happy to comply. She settled down onto the ledge next to him (ostensibly without any sort of reluctance), her knees propped up and her toes resting right against the precipice. The cloak, at least, had worn out its welcome and had slipped off her shoulders by now, resting in a heavy, rippled pool of cloth behind her. \n\n\"Did this need to be a surprise? I might have brought a towel.\" Just then (when he wasn't looking), she adjusted the skirts of her still-drying shift, bunching them up just below her knees (so as not to get them wet again), and dipped her calves slowly into the water. \n\n\"Oh, but I like surprising you,\" said the King, lightly. He reached out, but the gesture turned out to be quite innocent - a little touch on her nose, and that was it. \"You have the funniest reactions.\" \n\n\"That's unfair when I lack as many opportunities to surprise you,\" she said - and reached out in turn, ruffling his hair. \n\nHe raised a brow, at this little trespass. It was a very affectionate and familiar gesture, and she knew she was taking a liberty (which was different from all the liberties he took, since it was he who held the power). But, she reasoned, his head was right there within reach - same as her nose within his. How could that, alongside the tickling, have been anything but fair game? In a way she had her own boundaries to test, though hers were decidedly less sinister in comparison. Her logic was beautifully simplistic. How could she claim to adore him, if she shied away from these simplest of warmhearted gestures? Where was the harm in it, if she loved him as much as she strived to (for as long as it was her only option to not persist in misery and in strife)?\n\nActions, even the littlest of gestures - like the sweet fondness in her gaze, the way she tousled him readily and without fear, how the most free spirited of her whims guided her - would be everything, and it meant far more than proclaiming her love aloud. Indeed, it was so much more, so much deeper than something like flattery - not to mention lies she'd crammed down her own throat to enforce believability, that uncanny air of sincerity even when he surely must have realized how close she stood to detesting him just days ago.\n\nHe smiled, seeming to allow it. \"I think you've been surprising me just fine without any assistance.\" But, of course, he was not going to leave it there, and let her get away with it without some playful vengeance of his own. Her legs were dangling in the water still - she should have anticipated that his hand would find her ankle, but a surprised exhale escaped her all the same, much to his amusement. With warm (very warm, as heated by the waters) fingers, he massaged her from heel to toe, with a slowness that could be described as sensual. \n\n\"Are you sure you won't join me?\" he asked, as he lazily kneaded up her leg. He paused, just below her knee, right where she was no longer submerged. With a mischievous look, he gave a light, teasing tug - nowhere strong enough to actually pull her into the pool, but did (playfully) dislodge her balance a little. \n\n\"Ah-\" Her breath caught, and she all but squeaked as his ploy sent her sliding a few inches toward the ledge - admittedly, she'd been lulled into some sense of comfort by the massage. But another instance of soaked garments was not her definition of funny. Lurching backwards, she regained her balance promptly, only to chastise him immediately after, \"That's not funny!\"\n\nHe only smirked, leaning back against the wall of the pool, stretching back slowly and languidly - and in doing so, exposed more of the toned muscles that marked his body. Judging by the way he watched her - with that characteristic smirk - he probably knew he was showing himself off to his advantage (and admittedly she was trying not to stare). \"No? But it's very comfortable in here.\"\n\n\"I'm comfortable where I am,\" she retorted. Her tone remained as sweetly affectionate as ever, but there was no concealing her flustered response.\n\nShe nudged at his shoulder with a light push of her foot, sending gentle splashes upwards into the air. After a moment, for good measure, she willfully kicked another splash over the back of his head. And another. And another. And finally with the use of her hands, scooping with reproachful (albeit playful) determination.\n\nThe splashes managed to liberally drench him, sending rivulets flowing down his face. He did laugh, now. \"I'm not sure that was entirely wise, for someone so afraid of getting wet herself,\" he said, having noticed the way she lurched back. \"And you already know that I have a tendency to retaliate.\"\n\nDespite this, he did not splash her yet, but rested his elbows on the edge of the stone, leaning casually forward. \"Enough of this. Join me.\" ",
        "It was impossible to gauge just how serious he was (a common hazard around the King, since it was in flux so often), and whether this was another playful suggestion or a command that was dangerous to disobey. It could easily have been either, both, or none of the above. He was smiling, but that never signified the absence of a threat, and his gaze was sharply focused on her. \n\nIt did make her hesitate, for a fraction of a moment. But then she slipped her legs out of the pool and moved herself out of arm's reach, an all but (hesitantly) challenging glint in her eyes. \n\n\"You're already in the water, whereas I still have my clothes on.\" What remained of them, after what happened in the lake. Really, if he wanted her in that pool with him, he ought not to have aimed to surprise her as he did. \"So no, I'll stay where I am, thank you.\"\n\nShe had a feeling that she was only adding fuel to the fire at this point, egging him on with all these playful taunts and teases. She could see as much in his eyes - he was not used to being denied, even when his directives were playful in tone. On one hand, giving him what he wanted was sure to expedite matters; by now she had no doubt he'd seize it either way. On the other, there was something about him - and this teasing of his - and that promise of being encased in him utterly (again) - which sent nervous palpitations flitting through her.\n\nHis hands settled on the stone edge, and with an easy push, he raised himself out of the steamy waters and pulled himself back onto dry land. He shifted to stand, utterly nude, without even the faintest look of embarrassment of the fact, water dripping down his (well-formed) shoulders and chest. And for the split second that she glanced at it, before blushing and looking quickly away - she could also see his cock, jutting and erect.\n\n\"If it's the shift that's the problem, you ought to have spoken up earlier,\" he said blithely, despite knowing this was not the real motivation behind her coyness. He stepped toward her, a smirk playing. \"Generous as I am, I am happy to help you out of it.\"\n\nWhat happened to 'suit yourself,' anyway? The only thing consistent about him was his inconsistency. The logic to his supposed retribution hadn't escaped her comprehension, but that didn't mean she wasn't going to be petty about it. All in that playfully adoring way, of course. Anything to give her a little bit more time, if not just for the sake of it.\n\nAnd yet, she could not help but keep her gaze pinned downwards to her hands, which began again to fidget gently with one another (a bad habit), not when the rest of him was so... like that. Her pulse fluttered with his approach, and while Alais had reached her objective where her instinctual reactions were less abhorrent to her than before, the natural flustering was not something she could contain. How could she contain it when he - looked like that - stood like that - with the water forming that sheen over his -\n\nHer heel shifted a step backwards, a little beyond her own notice. She managed to persist in her mild, if not only marginally faltering, tone, \"Will you be procuring towels as well?\" If he was already determined, it might've been worth testing the true extents of his so-called generosity.\n\nHe appeared to be lulled into some sense of complacency as he observed the effect he had on her. She took advantage of this. Suddenly and without warning, her fingers shot up and tickled him just as in the morning, immediately producing his surprised laughter. The act was conducted as swift as lightning and lasted all of seconds before she turned tail, picked up her skirt, and started a mad dash away from him, her feet dancing along the edge of the pool and her breath light upon her lips.\n\n\"The towels are important!\" her voice rang out as she fled, hardly a beat away from stammering.\n\nShe didn't stop until she was on the other side of the pool, peeking from behind a stone boulder to observe the look of incredulity on his face. His expression might as well have said, \"Really, again?\"\n\nBut as before, his shock was fleeting, and soon he took on a more (playfully) calculating look as he studied her from across the water. \n\n\"You're going to regret that, Alais.\" Funny - if he had said that on any previous day, it would have been threat enough to make her nervous. Now she could take it for the light ribbing that it was.\n\nHe did, however, call for his squire, and only a few moments later saw her request answered. A tall, lanky young man skittered into the cave, took one glance at his naked master, and quickly lowered his gaze. What followed was a rather awkward dance, on the squire's part, of attempting to place the towels as close as possible to the couple, without catching sight of anything inappropriate, before bowing and hastily excusing himself. Alais couldn't but suppress a giggle or two. Was it so unorthodox to observe one's King in the nude? For her, it obviously was, but it seemed that much more amusing when someone else was so afflicted. \n\n\"You have your towels now, Alais,\" said the King, once this was done. \"Are you not pleased?\"\n\nHer nervous giggles disappeared as soon as he stalked toward her, and towels or not, she did not feel quite ready to face him. She resumed her mad dash around the pool, and it was not long before she heard him give chase - his heavy footsteps echoed in the cavern, amplified by the water. \n\nAlais faltered only when all forward paths were obstructed by water and stone. She might have made the nontrivial jump from one rock ledge to the other, slightly more elevated one, but it was too late. He had her in his grip by the time she gathered the sufficient willpower to leap, prompting her to laugh nervously by the (hardly unanticipated) turn of events. He too was laughing from the chase, but his strength was no less diminished; his arm encircled her waist fully, ensnaring her in his grasp. \n\n\"Why do you always have to make things harder than they have to be?\" he said, into her hair. He smiled, kissing her chin. \"It's no use, anyway,\" he continued, his tone teasing, but the sentiment likely sincere. \"I always get my way, in the end.\"\n\nHis free hand drifted to her side, making good on his promise of vengeance, and tickled mercilessly there - far longer than she had him. The warm and intimate contact already had her palpitating madly in spite of herself, and his dreadful, dancing fingers had her writhing from him as much as possible - that was to say, not very far at all.\n\n\"Because if I don't make it hard, no one will,\" she explained between breathless gasps, cheeks burning with hot blush. It seemed reasonable enough. She doubted any of her maids could have mustered the whimsy for... all of her exploits against him, and if he disliked it, it wasn't as though he was sorely lacking in his options. Whereas Alais only had him to entertain herself with - such were the double standards of the day, more widespread than even His Majesty's eccentric court - so she might as well do as she did to make the most of it, no?\n\nNot that it was in her nature to incline toward alternate companionship. She had more than enough trouble as it were with just the one.\n\nOnly when the King was satisfied by her squirming did he subside, only to shift his attention to the hooks on that fine shift, fiddling to unclasp them and deprive her of the garment. Where she might have once frozen her limbs in panic, she only kept squirming against him, like some lizard seeking to slip away, and making it a tedious affair to grasp onto each individual latch. Perhaps she was shaking from the aftermath of that merciless assault. \n\nIn response, his grip only tightened, incrementally, with every one of her jerks and spasms, acting as a deterrent to her writhing. Still, it took him some time to unhook all those clasps from her shift - but it took significantly less, when it was done, to grip the cloth and unabashedly give it a proper tug, so that it tumbled into a disheveled heap around her feet. The rest of the undergarments followed, as unceremoniously as the first. \n\n\"Much better,\" he said, his arms wrapping around her again shortly thereafter, lest she use the momentary freedom to escape.\n\nIt had been some time since he'd held her like this, skin touching skin, feeling the raw warmth of each other's bodies. She had little time to properly feel abashment before his lips pressed against hers, in that way again, the way that so easily dissolved her thoughts and the world around her like they were nothing. The kiss left her reeling and dazed, to the point where her heightened consciousness vested less focus in that distressing effect of her nudity. She still (perhaps naively) thought of her body as a private thing, not meant to be seen by those who were not herself or long trusted maids. Or perhaps her hypothetical husband. Butthis was her husband now, wasn't he? - and one whom she loved - as invasively warm all this touching felt. \n\nWhen he pulled back, a mischievous smirk flickered across his lips. Then, without warning, almost casually, he picked her up - and tossed her into the water. \n\n*****\n\nIn the ensuing splash, Alexander found that he was laughing again, unable to help himself. It was awful, and terribly unchivalrous. But was it not also unladylike to tickle him so maliciously (could tickles be malicious? he was convinced they could be)? There was a little more forethought that it might have seemed to his actions, at least; he'd chosen a particularly deep section of the waters so that there was no risk of even scraping the bottom. \n\nThe splashes turned to ripples, gradually calming as the seconds ticked by.\n\nIt only then occurred to him that she might not be able to swim. That...would be truly unfortunate. There were ledges close by, and she was not too far into the center to not be able to make for them - but it was entirely possible she might panic and flounder. If so, then he'd have to rescue her again from drowning, which was far too often for his tastes. \n\nThere should have been bubbles and ripples, not this eerie, sudden stillness that overtook the waters only moments later. Given his general suspicion of people, it did occur to Alexander that she might have been doing this on purpose - holding her breath somewhere down below, body curled up into a ball to facilitate sinking - simply to mortify him. But she might also have struck her head on something (though on what escaped him), in which case he could not afford to rely completely on the other possibility. He hesitated, logic warring with uncertainty, but was not able to hold himself off for long, not when he could definitively make sure with one easy move.\n\nHe dove in, warmth submerging him once more, and swam toward the direction he'd thrown her. Nothing. He surfaced, newfound (but now almost familiar) panic beginning to settle in.\n\nAnd she chose that exact moment to resurface, her drenched hair and head finally popping up for a sharp, revitalizing intake of air. On the other far side of the spring. \"You're the worst,\" she accused solemnly (not really (not at all)), with what had to have been one of the least threatening insults he might have ever received.\n\nAgain - far more often than he was accustomed to - Alexander experienced a flurry of surprise-annoyance-amusement, though also no small dash of relief.\n\n\"You sly little thing.\" He was grinning, however. He supposed it was fair, since he had thrown her unceremoniously into the pool, and the novelty of her approach still had a way of fascinating - and perhaps charming - him. \n\nAs he drifted toward her, she only floated back and back and back, moving further away; she seemed to be a perfectly competent swimmer. Alexander paused, eyeing her. The more she danced out of reach, and the more she fought and resisted him (even if it was ostensibly playful now), the more his desire seemed to sharpen. He was used to having his wants - carnal or otherwise - satisfied immediately, and all this teasing and taunting only added another layer of impatience to his lust.\n\nAnd he was not above being tempted by the challenge. Instead of keeping to the surface, he dove, plummeting deep enough that his shape and motion would be mostly lost, absent a faint, quickly moving impression. Like an unseen shadow, he converged, and by the time he revealed himself, one arm had already reclaimed her waist, pulling her back into the embrace they they'd only just relinquished a few minutes before.\n\n\"I'm hardly the worst,\" he said, into her ear. They were back at the shallower side of the pool, thanks to her meandering, and he was able to comfortably stand; he imagined she would have a harder time, given her stature, but his grip on her kept her easily above water. \"I merely wanted to make certain that my lady was enjoying herself to the fullest.\"\n\nOstentatiously bashful, she pulled her arms over his shoulders in a gently, congratulatory hug, for having caught her (twice now). Her cheek rested lightly over his collar, her chin dipping a little under the water. \"There. We're both in the pool. Happy now?\"\n\nIt was still odd for him, this act that she had conjured. He preferred it, certainly, but that didn't mean he had gotten used to it quite yet; some part of him expected her to veer off into a different trajectory before long anyway, so there was little reason become accustomed to it. But he liked the way her arms lightly encircled his shoulders, and the softness with which her cheek rested upon his chest. It felt tender and delicate - a different man might have felt wistful, that it was not real. But Alexander was not the sentimental type.\n\n\"Happier,\" he replied. He felt the flare of playful vengeance flicker away, now that he held her in his grasp, and she was where he'd wanted all along - curled up close to him, even. His touch took on a gentleness of its own as he caressed her hair, watching the wet tendrils slip between his fingers.\n\nHe merely held her in this way for a few minutes, feeling the soft comfort of her body, and the fullness of her youthful curves. Alexander's own body was lean and hard, and crossed with many battle scars - some faded and others new, including the fresh nick on his arm from the recent attempt on his life. He was not, despite the way he seemed to carry himself, immune from injury, as testified by a few particularly knotted scars that traced his stomach. His embrace of her therefore necessarily involved contact with rough, calloused skin, but there was a gentleness with which he held her, enveloping her in the double warmth of his body and the waters beyond.\n\n\"Aren't you?\" He pulled back, but just a touch, letting his fingers find her chin. \"I thought you were in love with me now, Alais,\" he said, amused every time he used her terminology. \"Shouldn't you be happy as well?\"\n\n\"I am happy,\" she returned. She reached for his hand, callous and firm as they were, with her own soft fingers. 'Catching' was probably overestimating the rigor of the otherwise light and pleasant gesture. \"But... this is still new to me... it is natural for me to be a little flighty, isn't it?\"\n\nAs if on cue, she ducked her head beneath the waters and darted away from him - lightning fast in contrast to the pacification from his ministrations a split second ago. He reached for her, but she was already gone, and when he felt a tap at his shoulder, he turned to see nothing but misty waters. Only belatedly did he catch sight of her, merrily treading water on the other side of him, like some evasive sea creature who had gotten the better of him. This time, she swam backwards and around, directing a sheepish smile his way. As if to say (for all her grace, she was not a naiad who could speak amidst water): I'm sorry, but what were you expecting?\n\nHe laughed, turning to face her. \"Natural to be nervous, perhaps. Not so to constantly evade me.\"\n\n\"The evasion is part of it, being nervous...\" Now who was being patronized. Still, her tone was still largely defined by that light, if not bashful lilt of playfulness she seemed to have mastered so inexplicably well.\n\nHe watched her as she circled closer, not without some curiosity. She had many faces, this new wife of his - it seemed almost impossible that someone who had been so detached before was now vivacious and playful, without it seeming strained or artificial. How could someone exist at two ends of these extremes, and with such ease? (He conveniently forgot to think of himself, in these considerations, with the typical flavor of hypocrisy he was so accustomed to.)\n\nIn any case, his frustration was growing, and would soon come to a fore - there was only so much baiting and escaping that Alexander could take, even in a good mood - but it was held at bay for now, through some reserves of willpower. Still, if her intention was to fan the flames of his desire, it was certainly working. Should she have immediately succumbed, he would have enjoyed her nonetheless, but this disposition of hers kept him repeatedly surprised and caught off guard. \n\nHe waded forward, slowly, his eyes fixed on her. He wouldn't let her escape again.\n\n*****\n\nIn fairness, Alais thought, there was nothing desperate to her escape attempts as before, with so much more bounce in her movements, and gone was that palpable terror of an animal being backed into a corner. If the heart of her disobedient acts were in the right place - if it was all to engage him further, then what reason had he to hurt her? It was possible again that the present level of his tolerance was due to the novelty of her disposition ... either way, it was the safest disposition at her disposal.\n\nAnd she was nervous, uncomfortable - skittish even. For all the ferocity of their first lovemaking, it was only the once; in the grand scheme of things, she was still inexperienced. It still felt... weird, uncomfortable, and unwholesome to be otherwise exposed. In a cave. Prudence was generally not a thing she thought herself critical with, but there was still a wide rift between her normal degree of open-mindedness and being intimate - in a cave. She'd like to think she would've been prepared and ready for another event in the bedchamber, but no. He had to have it in a cave.\n\n\"What are you so afraid of, anyway?\" the King was saying, as he drew ever closer. \"Not of me, I hope,\" he said, with that smirk he was so fond of sporting. \"Not when you enjoy my attentions so.\"\n\nHe was going slower this time, and in response, she did stop drifting away. For all his sharklike circling, a shark he was not (not right now, she supposed). And the whole fleeing and evasion antics were starting to get overdone by this point; even she could see that.\n\nWhen he was finally before her, he reached out, slowly, as if he thought he might spook her by moving too suddenly. His fingers closed lightly around her wrist.\n\nShe still had her other arm crossed a tad defensively over her breasts. \"You're good at making people afraid,\" she accused. He knew very well that he did - he seemed to find diversion in it, really. \"And for your information, I never said I enjoy your attentions. You can't prove anything,\" she challenged, using the hand he had so commandeered to poke him squarely in the chest.\n\nThe poke in the chest barely made it an impact, but her accompanying words did. \"Can't I?\" \n\nUsing that grip around her wrist, he tugged her forward. The effect of the kiss did not seem lessened for its recurrence - it had the same heady, powerful feel for her, only magnified by all that chasing and delay. His hand had shifted from her hand to her waist, and the other joined it, encircling her, as if subconsciously already preparing for another evasion. ",
        "There wasn't any productive point to distracting him now, and Alais didn't even have to read the writing on the wall to see. Certain habits were difficult (almost impossible) to quash, some more than others, and apparently her hesitation to melt in his arms was one of these. A touch of pride still had something to do with it, and while she could now cheerfully admit that his attentions were not unpleasant, to give herself to him without even a parody of the fight felt ... unseemly and thoroughly beyond her fundamental capabilities.\n\nThe earnestness of that kiss managed to challenge this notion, but only just. It shouldn't have been like this - was a kiss not merely a physical act, that she should have been able to detach herself from if she tried hard enough? So what was it that sent that tingle up her spine? The principle? The spirit behind the act? The fact that his tongue had slipped right inside her mouth as though it belonged there? If she thought upon it deeply enough, she might have concluded that a mixture of contact and symbolism may have been the culprit... but she hadn't really thought about it at all. Her thoughts were utterly emptied. Dissolved.\n\nShe gasped for air as their lips parted, tilting her head a slight angle downwards to revert a bit of the intensity of him. Heat seemed to be blooming all around her, rendering her usual avenues for critical thinking languid and out of order.\n\nHe withdrew only after these long moments had crept past, his own expression affected - but not enough to stamp out his self-satisfaction. \"How's that for proof?\" \n\nStill, she managed, recalcitrant as she was. \"That's wasn't - that isn't objective evidence. Not proof,\" she breathed.\n\n\"Not proof?\" he echoed, as a familiar smirk tugged at his lips. \"Is that not proof?\" he said, touching a finger to her flushed cheeks, and then tracing around her soft lips, still parted for air. \n\n\"And what of this?\" He lowered the palm of his hand to her chest, letting it rest there, so that the rapid beats of her heart could be felt. \"I think that's proof enough, don't you? Or do you need more...evidence?\"\n\nThis was ample warning for another dose; he leaned down again before she could even think of a response. As he kissed her, his hands shifted, smoothing down and finding purchase, so that he might lift her. As her back met the stone wall - a motion only cushioned by the slow-moving waters - he loomed over her, his lips now drifting to her neck, where she had shown herself to be so vulnerable before. \n\nHer heart seemed to have been replaced with the fluttering wings of a hummingbird, and her cheeks felt as though they were glowing with flush. Still, it would've made for poor sport if everything were what they were because he said so. He couldn't control the way a person felt the way he might control their deeds; no one could. Unfortunately, he was not far from the mark when he declared her ... enjoyment. Everything was just too comfortable, her body awash with the warmth of his contact and the thermal springs.\n\nHer legs were wound about his waist, one on either side of him, as those were the only places they could go with him constraining her against the cavern wall. Alais took heady breaths in the sparse breaks where she actually had a moment to fill her lungs back up with life-giving air, and a slight shudder touched her frame when his lips reclaimed the beating pulse upon her neck. She lasted in a silence punctuated with faint gasps where he mouth tickled her, and then she tried to pull away again - it was too fast, too fast.\n\n\"No, wait - hang on... for a moment.\" Her presently liberated hands moved to tug his head away from her neck, which he allowed her to do only reluctantly. Soft palms held the sides of his jaw, the feel of his light bristle scratching at her skin, and she frowned.\n\n\"That evidence is completely circumstantial. It could mean anything, like - I don't know, nerves.\" As though it weren't completely incongruous to her current line of debate, she lay a sneaky, feather-light kiss upon his forehead. It was a distraction, a delaying tactic, but she couldn't help it. \"You know?\"\n\n\"Mm, perhaps,\" he said. He kissed her, almost passingly, on the nose, a light mischievous thing. \"But you're fortunate. I'm something of an expert on this subject, since I find myself surrounded by nervous individuals all the time. It is funny, is it not, how that happens?\" \n\nHe grinned, awful enough to find humor in the effect he produced in others. \"And there's quite a difference between nerves and enjoyment. I think you're exhibiting both.\" He paused, his smile growing more awful. \"But if it is definitive evidence that my lady is after...\"\n\nHe lowered his hand, brushing past her belly with his knuckles, and traversing to extend two fingers between her legs - slowly, but without any inhibition, watching her all the while. The pads of his fingertips slid seamlessly over her nether skin, so smooth it was now that it'd been stripped of all hairs.\n\n\"Much better,\" she heard him praise. She could even hear his smirk. \"Don't you think so?\"\n\n\"...I don't mind it,\" Alais murmured stiffly back. She hadn't meant to trade one attention for another, and had spoken from alarm rather than reason - and had not yet been pushed to the point where the throes of passion would have drowned it all out. Unfortunately, it was getting a bit too close for comfort. He had that annoying effect even as he teased - even when he was being horrible. Those poor nervous individuals, she could not help but lament in her wry way. \n\nHer dainty palms seemed to have found the coarse texture of his stubble sufficiently interesting, so there they remained - even as his two fingers (re)discovered the soft flesh between her legs, causing her to instinctively flinch. This time, it was more as a reflex than for an underlying fear of invasion. That telltale wetness, though made less apparent by the surrounding water, would have still had that distinct, slippery, and very slightly more viscous feel to it.\n\nIrrationally, his decision to explore that region even now had her fretting nervously in his hands. Were it possible, she might have jerked away from him in that (unintentionally tauntingly) skittish way. \"I think Your Majesty is making fun of me,\" she said quietly, as though a whisper, her features very serious (though a little compromised - and in her thoughts, Alais bemoaned just how sensitive she was down there, so bare and silky to the touch).\n\nIn contrast to her seriousness - and giving her accusations credence - the King was smiling, seeming amused by her nervous fidgets and pleased by the proof he'd discovered. \"Make fun of you?\" he echoed lightly. Playfully, he touched his nose to hers, giving the diminutive thing something of a flick in the process. \"Does that sound like me?\"\n\nThe confirmation, of course, did not cause him to withdraw his fingers; they lingered there, tauntingly still, before becoming more intrusive, in his casual way. With the same (annoying) experience that had guided him the first time, he slowly began to toy with her, easing two fingers in and then out, feeling ridged flesh in that tight yet soft enclosure, and finding that sensitive nub above to tease with his thumb. It was all she could do not to let sound a pleasurable moan.\n\n\"I'd never do such a thing,\" he continued, in the same tone, as if nothing had changed to disrupt their conversation. He watched her all the while, a smile teased into his lips. \"I take you very seriously.\"\n\nHer hands shifted downwards, seeking purchase upon his shoulders as his fingers entered her. She tensed reflexively around him, and while she could feel herself tightening against the intrusion of even these digits (large and rough as they were), the feeling was still less... heightened than with the previous alternative. Where it did not lack was its precision, with each rub and press of her inner walls sending warm pulsations throughout her limbs.\n\n\"Stop,\" she gasped, instinctively - and not even she was certain if she really wanted him to.\n\n\"Oh? But I'm collecting such good...\" His finger pressed deeper into her, causing her breath to hitch. \"...Evidence.\"\n\nLost for words, her breaths grew shallow. The fruits of his effort were writ upon her wavering face like a book, and their faces were still very close. His heavy touches dissolved the remainder of her contesting thoughts. Alais pressed her palm, just below the water, against the face of the rock wall for purchase, in some innocuous attempt to ground herself against the slow burning contentment he so skillfully introduced to her nerves. A few times her eyes closed, when she did not think she could stand it. \n\nBut she did see when he withdrew his hand and shifted, and she could also too easily see the intent in his eyes to understand what was next. Suddenly seized with a flutter of panic, she instinctively sought to squirm away, aiming to slip from his reach and back to the sanctity of calmer waters. \n\nBy this juncture, however, the King could hardly be surprised anymore by her escape attempts. His hand tightened immediately around her waist, and the other easily pressed her back against the wall with the palm of his hand. \"And where do you think you're going?\"\n\n\"Just - it's a cave,\" she said, as if that was the only reason her heart was pounding so. \"Couldn't we do this somewhere more civilized?\" Her hands closed around his larger one, placed between her breasts and so casually pinning her to the wall. She tried to dislodge it (playfully, of course), which she knew to be a lost cause even before she started; his physical strength was so much greater than hers that he didn't even appear to expend effort in resisting her. \"I'll just - go on and tell everyone we're ready to leave.\"\n\nThe King only laughed. \"No, I don't think you will.\" \n\nHis hands moved, coming to grasp her thighs and spread them open; she gasped a little, again trying to slip away, but there was no fighting his grip. \n\n\"But - \"\n\n\"I like you right where you are.\" \n\nHis hard length was, in a way, validation, but it was still so intense, stretching where she was most delicate and pulling a faint whimper from her throat - even if it did feel wonderfully, wonderfully full at the same time. The emotional trauma seemed very much diminished from the first instance, but the physicality was unchanged. She was still tense with unease, her head burrowing into the crook of his neck for the most ironic solace in the world. \n\nA pleasurable exhale fell from his mouth. \"How lovely and tight you are for me, Alais.\"\n\nIt made her cheeks redden yet again. \"Don't - you shouldn't talk like that -\"\n\nShe was cut off as he entered again, his hard length pressing deep into her and filling her up entirely. She felt so violated - and yet, how could violation feel so exquisitely pleasurable? Her fingers grappled his shoulder, sinking tightly.\n\n\"No?\" He withdrew, only to impale again, and then again, his thrusts causing her to gasp with the force of his rigidity every time. \"But you are lovely, Alais.\"\n\nHis motions were giving way to an entrancing friction, the pressure from the surrounding springs adding a strange new element - it was so very warm, the waters flushing her with almost as much heat as the one he was building in her core.\n\n\"And you are so very tight.\" There was no escaping his ravishment - he was too strong, his attentions too intoxicating. Writhe as she would, his hands lay claim over her body, imprisoning her for his taking. But she did pulse and gasp in his arms, her hips bucking and her back arched, reacting to all the passions lancing through her body.\n\n\"And you are all mine.\" One of his hands settled over her breast - conveniently exposed for him, what with how her back had arched. She would have protested, but she was now beyond the ability to form coherent words, and it only felt like one more trespass among the many pummeling her. So too did the way his mouth grazed over her neck, savoring the sensitive skin there with tongue and teeth.\n\nWhile there was no stopping the quivering ,the pain was now fast swept aside by the tidal waves of something more...powerful, something more heady - it was this feeling that was so enthralling that it might have been what she truly feared. Indeed, describing this pain as being just the same as those previously felt would have been an injustice. This was a pain coupled with an indolently advancing euphoria, a razor blade edge to the already growing intensity. Altogether, she almost did not think she could bear it and had all but surrendered control of her own ability to breathe. While ostensibly (at least, she was trying) less squeamish with her responsiveness than the one night, she was still quiet for a paramour, her elicited cries subdued and softly sweet in nature.\n\nThe King was not as rough as he could be, but neither did he slow with her whimpers. Soon he was picking up in tempo and fervor, as heady lust overtook him. The water frothed with his movements, the steamy mists intermingled with their hot breaths. He had enough willpower to slow, just shy of the final catharsis, but this cycle lasted only one more time before he gave in. \n\nWith an exultant sigh, he pumped deep into her, and a few moments later, she felt that culminating sensation of warmth washing over her like a tidal wave. Involuntary spasms and trembles burned through her body, and she gripped him tightly until it slowly ebbed away.\n\nShe took the next moments to catch her breath, her palm bracing daintily upon his chest as she eased back against the stone wall. Reality began to settle back, and she was beginning to find that she could think again. Without the mind terrors, those self-imposed, psychological horrors of being despoiled against her will, this... this was not bad (to say the least), if still overwhelmingly intense. It was one thing to think herself mentally prepared; it was something else to actually begin to understand his outlook in this. The compulsory stripping in a cave, unfortunately, would still take some getting used to. \n\nThe waters about them, fraught with so many ripples from their exertions, finally began to still.\n\nThe King's breaths still came heavily, though that was not enough to keep the cocky look from his face. \"So. Was that proof enough?\" \n\nAlais fixed him a mildly petulant look. \"I'm about... sixty... fifty-seven percent convinced,\" came her begrudging reply. All in good sport.\n\n\"But this was still impractical,\" she added. Because well, it was. They were going have to leave, after all, and part of her lacked any desire whatsoever to move an inch from the comfortable waters. To be fair, it wasn't exactly the wall that was annoyingly comfortable.\n\nShe absentmindedly ghosted her ring finger along the scar upon his face. It was thick and knotted under her delicate touch, marking him from temple to jawline, and it was this (though not only this) that contributed to the vaguely dangerous cast of his features. There were other marks upon his person, but this was certainly the most prominent for its size and position. It crinkled a little as he smiled, mischievously. \"That's unfortunate. But I have faith that I'll be able to convince that remaining forty-three percent. Something to work on, for the rest of the time we're here.\" \n\nHe wasn't able to summon even a humorously-inclined look of reluctance, at that. He leaned forward and kissed her on the forehead, a gesture that would have seemed affectionate were it not for it being the King who did it.\n\nThere was a pause, as he looked over her. \"I enjoy your theatrics, Alais,\" he said, letting his knuckles ghost her cheek. He looked amused. \"I just hope you don't think to actually convince me. You will be sorely disappointed.\"\n\nShe answered with a benign smile. \"I'm not trying to convince you.\"\n\nAs much as he might lord his ownership over her, he clearly lacked any substantial knowledge of just who she was. That was fine. They had known one another for less than a month, and it suited her purposes to be, essentially, little more than the stranger whom he impulsively elected to wed. He did not know her; he would never know her well enough to understand the things she did, the logic coursing behind them, even if he knew not to trust her. Obviously, it had never been within her (nor any sane person's) expectations that he could be convinced of her love for him by the end of today. Her purpose was far more intricate than this - and versatile.\n\nTherefore, there could not be a single breach in her veneer. For the purpose of the day, for now, Alais did truly adore her husband, this most handsome and powerful king, regardless of whether he believed it. Belief over the short term did not matter. A lack of belief could either be worn down, or eventually erode into something less comfortable.\n\nHis smile was enigmatic in turn; it was unclear if he took her words at face value. \"I do appreciate your change of heart,\" he said, lightly. \"It'll be for the better.\"\n\nWhen they left, it was to cooler air and that sense of heaviness that comes with the loss of buoyancy. The King insisted, playfully, on toweling her down (\"Are these towels sufficient for your need? They did live up to your grand expectations?\"), before they dressed and set back for the cavern entrance.\n\nIt was just past dusk by the time they returned to the lodge, and the fresh air had already done wonders to her springs-induced lethargy. It was still somewhat grating, having to step out of that cave to the escort of those who would have rationally deduced what exactly occurred between their king and queen, in spite of the way their skillful and well-practiced unassuming veneers appeared to deny it. Her desire for privacy was apparently not something that could be helped, even in all this glorified play-pretend. Thus, the beginning of the trek involved a touch of abashed silence from her part, but that was nothing that more \"the boar, unbearably bored, bore boringly unto the bear\" rhymes could not help.\n\nFrom that point on, she innocently brushed her hand against his whenever it seemed like a suitable opportunity. Slipped small and fleeting passes at him whenever their eyes caught - and occasionally making silly faces when no one else was looking. In stark contrast to all previous nights, Alais seemed a bride in perfect bliss; therefore, the way she continued to brew her own tea (good for digesting, she would explain if so asked, and something she was very particular about) before the dinner like clockwork. She had missed it yesterday due to ostentatious illness, and it was only natural for the odd quirk to persist from this point on.\n\nSeveral of the maids were still detectable in their confusion, though none seemed excessively bothered by it. Was this not better for them?\n\n\"The cook must have worked tirelessly,\" she observed upon laying eyes on the suckling boar, painted with sauce and spice and a vibrant arrangement of peppers laid about it. It did look considerably more palatable now than during its death throes - and in such little time too. \"Will he be having some as well?\" She turned her gaze to her husband almost hopefully.\n\nGracious, virtuous, and kind were three more obvious things she'd decided she must be, and she knew how to play them oh so well.\n\nThe King was capable of being indulgent too. She didn't know how long it would last, but as of now he seemed inclined to spoil her, and to be fair to him, did a fine job of it. \"How thoughtful of you. If my lady wishes it, it shall be done,\" he replied to her request, and instead of merely sending a plate down to the kitchens, went so far as to invite the good cook (who was understandably nervous at first upon arrival) to sit at their table and dine with them together. ",
        "Indeed, they all bore into the bearable boar, which bore tastes delectable and not at all boring.\n\n*****\n\nAuthors: How long can this truce last? What really happened with Cassius? And what kind of intrigue awaits them when they return to the palace? Stay tuned to find out! (And as always, feel free to share your speculations!) "
    ],
    "authorname": "lady_temily",
    "tags": [
        "medieval",
        "historical",
        "royalty",
        "reluctance",
        "dominance",
        "control",
        "slow",
        "reluctant",
        "straight",
        "power dynamics"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/at-his-majestys-pleasure-ch-09"
}