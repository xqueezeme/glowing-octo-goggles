{
    "title": "Delivery in the Rear Ch. 03",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 8 - Takeout\n\nWednesday, December 14th. The sun was beginning to set as we arrived at County Airport in an FBI helicopter. Despite my asking, they did not let me pilot the chopper, darn it.\n\nSergeant Rudistan had driven my Police SUV to the airport, and it was waiting for us. I drove, Cindy rode shotgun, and Jack and Lindy were in the backseat, wearing their full compliment of bulletproof armor. We went to Police Headquarters.\n\nIn the gym, the SWAT Team was in full battle regalia. Their leader, Captain Teresa Croyle was likewise outfitted for battle. While I was sorely tempted to tell Teresa to stay behind (it was the Christmas season, after all), I relented and said she could go with her troops, but to 'lead from behind'.\n\n\"Okay, guys,\" I said, \"here's the deal. Once we secure any people in there, we have to protect them by surrounding them with our armored bodies. Be on a sharp lookout for any grenades being thrown, or any other means to try to kill anyone we capture.\"\n\n* * * * * * * * * * * * * * * *\n\nOn radio silence, the vehicles pulled out. They were all-black SWAT paddywagons. Only my silver SUV was in any other color.\n\nWe drove swiftly to the warehouse whose address had been on the shipping label captured by the FBI in the 'Opelika Software' offices. Teresa and her Team had reconnoitered the place well, and she had her people in place quickly. Damn! she was good, I thought to myself.\n\nLooking in with my night-vision binoculars, I could see at least four people inside. The warehouse was nearly empty, only a couple of boxes were inside. I gave Teresa the 'Go' sign, and she gave the order...\n\n* * * * * * * * * * * * * * * *\n\nNot a shot had to be fired. The SWAT Team went in and the four perps were swiftly captured. They were stripped of their weapons and radios, and handcuffed behind their backs. They were sitting on two of the boxes, surrounded by SWAT Team members, who were shielding them with their armor. They were all white men, slender, in very good and fit condition... ready for the Police Boxing Matches, Cindy would say.\n\nI came in, with Cindy behind me and looking all about. The crowbar was in its pocket inside my trenchcoat. I had my gun and the binoculars in my hands.\n\n\"Great work, Croyle, and everyone else, too.\" I said. \"Keep alert! Okay, who are these guys?\"\n\n\"We work here, we ain't talking.\"\n\n\"Funny.\" I said. \"You're fingerprints were all over that warehouse in the City where the games were unpacked.\"\n\n\"That wasn't us.\" said one man.\n\n\u2028\"Man, we didn't leave fingerprints, we were wearing gloves---\"\n\nI grinned. \"Did you get that on videotape, Sergeant?\" I asked Rudistan.\n\n\"Sure did, sir.\" said Rudistan.\n\n\"You might as well tell me, guys.\" I said. \"Someone is going to prison for a long, long time. Someone is going to get the death penalty for murder. You don't want to be the one. So the first to talk gets my Christmas gifts.\"\n\n\"Nobody say anything.\" said one man. \"This is for the cause!\"\n\n\"Sir, something's wrong!\" Cindy said, looking around.\n\n\"Yeah, I feel it.\" I said. I began looking through the binoculars around the building, especially up on the balcony areas. And then I saw it: a masked figure in all-black was pointing a rifle at us!\n\n\"Gun!\" I yelled. I raised my .40 cal pistol and began firing at the perp. The shadowy figure ran for a door on the balcony. The rifle the perp had been carrying dropped to the concrete floor... and fired! Fortunately, the ricochets didn't hit anyone.\n\nTeresa was on the radio, trying to marshal the Officers outside to locate and chase the perp. As Cindy and I ran outside, we saw a gas cloud on one end of the building. I had some military flashbacks as the CS gas wafted into my nose.\n\n\"Shit! CS gas!\" I said. I grabbed a bandana out of my shirt pocket and quickly put it over my mouth and nose. Cindy saw my action and did the same. Other Officers were coughing as they came out of the cloud.\n\n\"Sorry sir,\" one of them said, \"the guy threw two gas canisters and disappeared in the smoke.\"\n\n\"Damn.\" I said. I saw Cindy moving close to me, trying to protect me.\n\n\"Cindy,\" I said, \"I appreciate you trying to protect me, but my armor works as well as yours does, and I need to do my job.\"\n\n\"Yes sir.\" Cindy said. \"But my job is to protect you, and I'm going to do it.\"\n\n\"Okay, we won't argue.\" I said. \"All right guys, put out APBs, search the perimeter. Make God-damned sure you have your armor on and keep it on!\"\n\nBack inside, Sergeant Rudistan had secured the rifle. \"Looks like pretty standard .308 caliber, sir.\" he said. \"Bullets looks strange, though.\"\n\n\"Those are 7.62x51mm NATO rounds.\" I said. \"Military stuff. Probably armor-piercing bullets. Let's get our prisoners to County Jail as fast as we can.\"\n\nPart 9 - Talk To Me\n\nCounty Jail and now-1st Precinct Headquarters was a beehive of activity. We had put the four perps in isolation cells so they could not talk to each other, and access to them was heavily guarded. The one that had blurted out about wearing gloves was put in Interrogation-1 and handcuffed to the table. I was watching him through the one-way glass in the anteroom.\n\n\"We sent all four sets of fingerprints in, Commander.\" said Cindy. \"Classss-ified. All four sets.\"\n\n\"Withhold my surprise.\" I said. \"All four of those guys are in very good shape, and I've warned the Officers and Deputies that they very likely know martial arts. Special measures at all times for them.\"\n\n\"Roger that, sir.\" said Teresa Croyle, who was standing with us. 'Special measures' meant forcing the perps to bend over when putting their cuffs on. If they were in their cells, they had to put their hands through the small window on the bars of their cells and have their cuffs put on before opening the door. The perps had been advised that non-cooperation would mean their being sedated with tranquilizers... and any attempt to escape would be met with live bullets to their bodies. Word around the Jail was that the Iron Crowbar did not play.\n\nThe Deputy Director of the FBI came up. \"Great work, Commander.\" he said. \"We're working hard to find out who they are. Your wife is helping, too, but I'm not confident we'll get anything.\"\n\n\"Neither am I, sir.\" I said.\n\n\"By the way,\" said the DepDirector, \"I think Blassingame was lying today.\"\n\n\"Like a dog in the shade, sir.\" I replied with emphasis. \"Like a dog in the shade.\"\n\n\"Should we arrest him?\" asked the DepDirector.\n\n\"On what charge?\" I replied. \"We have zero on him. And I strongly suspect we shall never see his assistant again, much less get to talk to her. She'll stay in the Boston area, 'having to take care of family' or some such. And that's because if we did talk to her, we'd find out that she did not send the package, Blassingame himself did.\"\n\n\"Think he's Superior Bloodlines?\" asked the DepDirector.\n\n\"Yes sir.\" I said. \"Part and parcel, pun fully intended.\"\n\n\"What I don't understand is Granger's role in this, and why they killed the two drivers.\" the DepDirector said.\n\n\"Oh that's easy,\" I said, \"Ask Captain Ross about the riddle of the Forest Service Rangers. In the meantime... let's see how lucky I can get... and get this perp to talk.\" I went into the Interrogation Room.\n\n* * * * * * * * * * * * * * * *\n\n\"Before you say you want a lawyer,\" I immediately said to the man as I sat down, \"hear me out first. If you invoke, you're done. And you know that means you're dead; that perp on the balcony was going to kill you and your buddies.\"\n\nI continued: \"You're probably sitting there thinking we've got it wrong, that we think you guys killed those two SPS drivers in the City. But I know different... I know you guys captured T-Square's boy Holden, drugged him, got whatever info you wanted, then staged a car chase and gunfight and you killed him. Now you can be the one to survive all this, maybe get witness protection even... if you talk to me, and talk to me now.\"\n\n\"That old man out there.\" said the perp. \"He's one of the FBI big boys. He ain't gonna let me and my guys slide. We know he's a nigger-lover; he wants to fuck us up. I don't trust him. And I don't trust you, either... Iron Crowbar.\"\n\n\"Too bad you don't trust me.\" I said. \"I'm trying to put murderers in jail... and I mean the murderers of those drivers in the City. One of them was a white guy, just like you and your guys. You can't let that go... can you? But you're right about one thing... that man out there wants to fuck you up, and fuck you up real bad. He even wants to borrow my crowbar and shove it up all your asses. Me, I don't like loaning the crowbar out... as long as you talk to me.\"\n\nThe man looked at me, trying to gauge my seriousness, and my intent. \"All right,\" he finally said, \"I need full immunity, witness protection, the works...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Commander,\" said J.R. Barnes an hour later, \"we found blood on the balcony where the perp was. We think you hit him.\"\n\n\"Or her.\" I said. I took out my gun, cleared it, and handed it to Barnes. This was now an official investigation of my shooting the perp on the balcony. He bagged it, gave me a receipt for it, and said I'd have it back in 24 hours. I knew I'd be permitted to carry another handgun, which I had at home, but when I left the Jail here I'd be on admin duty for a day or two. Meanwhile, the red crowbar would have to do.\n\nCindy said \"I guess we can visit Melina and see if she's wounded.\"\n\n\"Yes.\" I said \"And no kidding... do that. Go to her fucking house, see if she's wounded.\"\n\n\"And if she is?\" Cindy said.\n\n\"Yeah, that's a point. Never mind, we'll find out tomorrow.\" I replied.\n\nI didn't have to wait that long. Sheriff Daniel Allgood appeared at the Jail... accompanied by his wife Melina. Not a scratch on her.\n\nThe Sheriff came in. \"What's going on?\" he asked.\n\n\"I'll tell you soon.\" I said. \"But Daniel, you have to send Melina home. She cannot be here.\"\n\n\"What? Why not?\" Daniel asked, peering at me. I met his look.\n\n\"She's not authorized to be here, Sheriff.\" I said. \"This one is a B.F.D., and she's not invited to the party. Tell her to go back home.\" Daniel reluctantly did so, and Melina's look at me as she left was something between a peering inquiry and a look meant to kill.\n\n* * * * * * * * * * * * * * * *\n\n\"He talked.\" said the U.S. Attorney for our area. \"I gave him witness protection and full immunity if he testifies against the others. He admitted that one of the others killed Holden, told us how without being prompted. Everything matches your earlier case notes, Commander. Congratulations, you get to testify to corroborate his testimony.\"\n\n\"That, I can do.\" I said. \"So Holden's murder is solved, and off the books. Like I said Jack... better lucky than good.\"\n\n\"I'd say you're a huge amount of both.\" Muscone said. \"And congratulations. Outstanding job.\"\n\nThe U.S. Attorney said \"He also gave us names and addresses of the people he thinks killed the SPS drivers. They're in Westphalia, southwest of the City.\"\n\n\"Well, don't dawdle, give the information to Agent Muscone so he can send a welcoming committee for them!\" I said.\n\n\"There is one other thing.\" said the U.S. Attorney. \"The guy said one other thing that you need to know. He said that part of their mission was to recon the Civic Center. Means of entry without being noticed, security for it, stuff like that...\" \n\nI did not have to see Cindy to feel the vibe she suddenly was sending out...\n\n* * * * * * * * * * * * * * * *\n\nAlas, those perps would not see the justice administered in a Courtroom... but they did get 'Justice'. Four men were found dead in an apartment in Westphalia. They were connected to the stolen boxes by the boxes of latex gloves found at the scene: the powder in those gloves matched the powder found on those stolen boxes and gaming systems.\n\n\"All four killed, execution-style.\" reported Eduardo Escobar. \"Looks like a hit team came in. No cellphones found, no computers. Just the bodies, some laundry, and the barest furniture.\"\n\nI nodded as Jack Muscone told me. I said \"I'm predicting that a burner phone near here will be found to have called a burner phone somewhere in the vicinity of Mr. Blassingame. Then another call on a burner will have gone out, and our perps met their grisly end as a result.\"\n\n\"Who killed the killers?\" asked Jack, rhetorically.\n\n\"Forest Service Rangers.\" I replied cryptically.\n\n\"What?\" Jack said. \"Don, it's three o'clock in the morning...\"\n\n\"Oh,\" said Cindy, \"I think I figured it out...\"\n\nPart 10 - Solution\n\nThursday evening, December 15th. We were in the back room of The Steakhouse. The DepDirector was going to pick up the tab. John 'Jack' Colby gave his standard discount; he asked the DepDirector for one dollar, received it, and said \"Paid in full. I appreciate what the FBI as well as the TCPD does to protect us.\" The DepDirector, forewarned by me, didn't argue.\n\nThe dinner was delicious. I looked around the room, seeing Laura, the DepDirector, Jack Muscone and Tanya Perlman, Martin Nash and Sandra Speer, Eduardo Escobar and his wife Rosalyn, Lindy Linares, and Cindy Ross. Unfortunately, because of the nature of the crime and its solutions, not many others could be here. Teresa Croyle had been invited, but had had a previous engagement with Todd for some corporate Christmas party. I realized Todd was keeping Teresa busy... partially to keep Teresa from idly sitting and thinking about Amy...\n\n*ding* *ding* *ding* *ding*\n\nCindy tapped her wine glass to bring us to order, and invited me to explain the solution.\n\n\"Well,\" I said, \"This one was pretty straightforward. I didn't have a lot to do with it.\" No one bought that for a minute, and they said so in no uncertain terms.\n\n\"Seriously.\" I said. \"You FBI guys had all the information, you raided the 'Opelika Software' place, and Captain Croyle led the TCPD in making the arrests. Not much for l'il ol' me to do.\"\n\nThe DepDirector stepped in: \"I just got a text from Chief Griswold. It says 'Modesty is a human trait, Commander'.\" Everyone laughed, then the DepDirector continued \"The Chief is right; your modesty will not hold up in a realistic examination of this case, not to mention solving the Holden murder.\"\n\n\"Okay, okay,\" I said, \"I did observe a few things and saved you guys a little time. So, let's go through it. We had two dead truck drivers, shot by professional killers using .22 WMR firearms. They did not take the truck itself, fearing it would have a GPS or other tracking device, and they were right. That alone spoke volumes to me: these perps either were in-the-know about SPS trucks, suggesting an inside job; or they were extremely well trained to take all the variables into consideration, and that suggested the Government itself.\"\n\nI went on: \"Granger's lack of cooperation was very strange. He could've pretended to cooperate, sent us on wild goose chases, but he chose to be a dick and to arouse our suspicions. Maybe he didn't think I'd have the City Police arrest him so fast, maybe he thought he could bluff his way through all this and come out all free and clear on the other end.\"\n\n\"I then realized we'd have to do this the hard way, and have every package re-examined by scanner. That did save some time over physically going over ever single package. And when that anomalous package popped out, I was met by extraordinary good fortune, and found some useful fingerprints on the box.\"\n\n\"I don't think it's a coincidence that you always have such good fortune, Commander.\" said the DepDirector. \"If luck is where preparation meets opportunity, you are the poster child for it.\"\n\n\"You're too kind, sir.\" I said. \"But yes, we would've found that box and its contents eventually. So that led to the raid on 'Opelika Software'. That was an interesting name: Opelika, Alabama, which is not far from Auburn, Alabama, suggested to me a Southern influence on this case. Some here might remember that Harold Malone met his death in southern Alabama, so I don't think the name was a huge coincidence.\"\n\n\"Anyway, you guys raided the place, and in their haste to get out, the people there left behind a massively important piece of paper.\" I said. \"At this point, let me just tell you what the perps did and intended to do.\"\n\nI went on: \"The sophisticated system was hidden in a standard Peach Computers gaming box and sent to the Opelika Software address. I suspect this is not the first 'gaming system' that went there. The driver of Truck 164, Walton, was exceptionally lucky that his truck was asked to stay behind; had he gone out on the road, we would've been investigating three murders, and the system would've been in the killers' hands.\"\n\nI continued, though I noticed the desire of many of my listeners to ask questions. \"So, he was held back, and it just so happened that the package involved was the one he'd waited for. He was supposed to take it to Opelika Software, where they would've taken it into the back area, affixed a new address label over the old one, and handed it right back to Walton. He then would've delivered it to our Town.\"\n\n\"But...\" said Sandra Speer. I nodded for her to ask her question, and she said \"But why did they have to attack two trucks, kill their drivers, and take the contents? It was their own people delivering the system!\"\u2028\n\n\"You're right.\" I said. \"And that puzzled me, but then I realized what was going on. I asked about the Forest Service Rangers, and the reporting of the fire that the firefighters couldn't find. So, Cindy, what's the answer to that?\"\n\n\"Two fires.\" Cindy said. \"Each Forest Ranger is seeing a different fire, so the lines of intersection are not where either fire is.\"\n\n\"And that is the whole point of this case.\" I said. \"We have two separate cells within the 'Company' working against each other!\" I let that sink in a moment, then said \"The group sending the package, which I'll call 'Team A', is the one Blassingame is working with. He was sending that package here for some reason, and I'll get to that in a minute.\"\n\n\"The other team,\" I said, \"which I'll call 'Team B', was Granger's group, and included his assistant Marilyn. Actually, I have reason to believe that she is the true leader, and Granger is her Energizer Bunny on the distributorship floor. He has a lot to do in his job, while she's seemingly sitting back doing paperwork, and nobody really notices her. So their group tries to get the package, but they're not exactly sure which SPS Truck it's going to be on. Ergo, they take out Trucks 162 and 166, and would have done so with Truck 164, but Providence intervened on our behalf.\"\n\n\"As did the Iron Crowbar.\" said Muscone. \"So how did you connect all that to the Holden murder?\"\n\n\"Ah, that one was also a bit of luck.\" I said. \"Holden's murder is still something we have to keep our wits about us over. At the time of the killing, it wasn't clear to me if T-Square was involved, if it was someone sending T-Square a message or warning, or it was something else entirely. But before I get ahead of myself...\"\n\nI continued: \"One big question I'm sure you're all asking is 'Why were they sending that device, here, to my County?'. I sure was asking it, and I realized that the pieces fit some stuff going on. Martin has been up to Lake Amengi-Nunagen, and his business up there is not to watch the leaves turn colors. And I know what's going on in my home County, especially after Westboro's death.\"",
        "\"That equipment coming in meant that someone intended to use it for some kind of operation.\" I said. \"Maybe to observe or even direct these protests that are going on, with groups like 'Citizens for Police Accountability' and the State Organization for Women, the SOWs. Or maybe for something else, something far uglier. We've got these interracial things going on, we've got an upcoming Vision seminar, as well.\"\n\n\"So,\" I said, \"I put two and two together, and came up with the square... T-Square, that is. The attack on Holden was by someone against T-Square, and someone who intended to instigate some action in this County in the possibly near-future. So when we busted the perps at the scene, I mentioned that Holden was who they were after, and I scared that one perp so bad that he actually talked.\"\n\n\"Amazing.\" said the DepDirector. \"And yes, I don't want to talk about it, and certainly not here, but some things have been brewing. We're watching Blassingame as well as Wallace Bedford and Michael Burke now.\"\n\n\"Add Doug and Roberta Jackson of Fillmore County to you list, sir.\" I said. The DepDirector nodded silently.\n\n\"So why did they go after Holden?\" asked Lindy. \"What information could they have hoped to get from him?\"\n\n\"Our Sheriff is not totally wrong on some things.\" I said. \"T-Square is indeed working with a coalition of Black celebrities in the music and acting worlds, and they or people in their organizations will be the leaders and organizers of actions designed to rip the very fabric of our Nation apart. I am seeing not one side, but two sides... three actually... coming at each other in an inevitable showdown. I think Sheriff Allgood hoped to stop it by having us take out T-Square. But one soldier falling, even a General, doesn't win or lose the war.\"\n\n\"Wow, this is big... isn't it?\" Cindy said, beginning to see the enormity of it all.\n\n\"Beyond our pay grade, even with crowbars in our grubby paws.\" I said. \"Okay, any more questions?\"\n\n\"So the two groups, the Team A and Team B,\" said Eduardo's wife Rosalyn, \"why are they working against each other again? I get the feeling there is more to it than just that equipment.\"\n\n\"I think you're right.\" I said. \"I am wondering if it was a 'smoke and mirrors' operation... to confuse us. We see something happen here, then something there. It looks like the same group... but it's disjointed, the pieces don't fit.\"\n\n\"If he were alive,\" Cindy said, \"I'd say this is a standard Westboro tactic.\" I turned hard to look at Cindy, her words hitting me hard.\n\n\"Ye-es...\" I whispered. \"Damn good point, Green Crowbar...\"\n\n\"I think you got one on him, Ms. Ross.\" said the DepDirector. Cindy smiled.\n\n\"So some bastard thinks he's as good as Westboro.\" I whispered, mostly to myself. \"We shall see... we shall see...\"\n\n\"Whoever it is, I pity the fool.\" said Martin Nash evenly.\n\nPart 11 - Pump Her Rump\n\n\"Mmmm, that is sooooo good.\" Lindy Linares sighed as I slid my throbbing hard cock into her sopping wet vagina until our pelvises met.\n\nWe were in basement room of the Cabin. Laura and Cindy were upstairs, having sex together. I'd invited Lindy to spend the night, as we had not gotten to do much when Sandra had joined us for a threesome.\n\n\"Mmm, you are so fucking wet!\" I grunted as I settled down onto the raven-haired beauty. Lindy's black hair was drilled into tight curls, and she'd trimmed her pubic hair to a 'runway' that led directly to her warm, snug pussy. Lindy wasn't fat, but was voluptuous, and I loved sucking her big, pillowy tits as I fucked her.\n\nAs we began moving together in rhythm, our rutting bodies pushing at each other to get and give more, I said \"I really owe you one for letting me ball Sandra last time. So what do you want?\"\n\n\"Mmm, what do you think?\" Lindy replied. \"I want that little iron crowbar of yours up my ass.\" Lindy absolutely loved anal sex. I'd anticipated her wants, and had prepared the room with some plastic sheeting on the floor as well as plenty of lubricant. \n\n\"But first,\" Lindy said, \"I want you to come in my pussy like you did Sandra's.\"\n\n\"That will be happening pretty soon.\" I said. \"You're too hot and tight.\" I kissed Lindy's mouth, and our tongues twined for several moments as I fucked her harder and harder until my nut began rising.\n\n\"Uhhh, here it comes... UHHH!\" I gasped as I fired my load into Lindy's pussy.\n\n\"OH YES!\" Lindy cried out. I felt her cunt clutching my spewing cock as her legs wrapped around me. \"OH GOD! UHHH!!\"\n\n* * * * * * * * * * * * * * * *\n\nAs Lindy sucked my cock back to throbbing hardness, I was using a dildo to lube up her ass, working in as much jelly as I could. After fucking Laura's ass the other day, I was a bit surprised that Lindy's ass was not nearly as tight as my wife's... of course Lindy used her ass a lot more to pleasure men.\n\n\"I've missed this hot ass of yours.\" I said. \"I should've plowed it when I was with you and Sandra.\"\n\n\"No, that worked out perfectly as it was.\" Lindy said. \"Sandra wanted your cum, and she got it.\"\n\n\"Oh really?\" I asked, trying to sound nonchalant, but realizing where Lindy was trying to take this conversation. \"And now she's pregnant, isn't she?\"\n\n\"How'd you know?\" Lindy asked, still sucking my cock and playing with my balls. \"She only confirmed it a couple of days ago after she skipped her period.\"\n\n\"She had that bloom on her cheeks.\" I said. \"Not hard to miss.\"\n\n\"And yes, she is pregnant.\" Lindy said. \"And I think she's very, very happy.\"\n\n\"Even if it's mine?\" I asked.\n\n\"Especially if it's yours.\" Lindy said. \"Like the coo-coo bird... I think she loved flying outside the nest and being fertilized.\" Lindy resumed sucking my dick, and she sucked it with renewed energy.\n\n\"So... what about you?\" I asked.\n\n\"I'm on the pill,\" Lindy replied, \"so you won't be knocking me up, at least not tonight. So you might as well shoot your next load into my bowels.\"\n\n\"Sounds like a plan.\" I said, eager to pump Lindy's rump.\n\n* * * * * * * * * * * * * * * *\n\nCindy fit the head of the dildo on her strap-on device to Laura's sphincter and pushed in. In spite of the lubrication, it was a tight, tough fit. She pulled back, applied more lube, then sank the dildo back in. The part of the device in her own vagina began sending sparks of pleasure to Cindy's tight, aching pussy.\n\n\"Shove it on in!\" Laura gasped. Her head was on the pillows and her ass high in the air. Cindy was standing on the side of the bed. She grabbed Laura's hips and shoved her own hips forward.\n\n\"UUUH!\" Laura cried out. \"That's it.. deeper... harder.\"\n\n\"I don't want to hurt you.\" Cindy said.\n\n\"Dammit, stop worrying about that!\" Laura said. \"Now fuck me in the ass with that thing! You'll never win the Police Boxing Matches again if you don't fuck me better than that!\"\n\nLaura was clearly trying to impel Cindy to fuck her ass more brutally. The dildo wasn't smooth, either; it was textured and somewhat rough. It was meant for a woman's cunt, not anyone's back passage. Still, as Laura pushed back, Cindy drove forward harder.\n\n\"Oh, that's more like it.\" Laura moaned. Cindy began driving in and out of Laura's butt, her own pussy tingling with pleasure now...\n\n* * * * * * * * * * * * * * * *\n\nSlipping into Lindy's ass had been easier than nailing a hot college slut at a fraternity party. And her ass felt great. I was wearing a condom, of course, and Lindy's ass was well-lubricated and slicked up. Her sphincter grabbed at me like a vise, but once I was past that ring, her rectum opened up and while still very tight, was much more pleasant to fuck.\n\n*CHOCK!* *CHOCK!* *CHOCK!* *CHOCK!* \n\nAdding to it was the tremendous pleasure of my taut groin slamming into Lindy's asscheeks. Her bubble butt was ample, but very firm from plenty of exercise. I found myself grabbing her hips and shoving my meat down into her ass harder and harder, making her moan as she reached between her legs and massaged her clit and pussylips.\n\nAfter a few moments, Lindy said \"I want you to buttfuck me in the missionary position.\" I eased my cock out of her rectum and she turned onto her back. I mounted her and lifted her ass as she pulled her legs way back and draped them over my shoulders. We got my cockhead back into her anal opening, then I settled onto her as I sank my shaft deep into her rear.\n\nI made sure to kiss Lindy's ankles and feet as I buttfucked her. I wasn't as enamored of this position for anal sex, but Lindy seemed to really like it. I felt the vibration of her pussy spasming as she came, her fingers working her clit and pussylips in a harsh circle.\n\nI'd applied more lube when we changed positions, so I was slicing in and out of Lindy's rectum pretty good, maintaining a nice, slick rhythm, pretty much keeping most of my dick buried in her ass and only working a couple of inches back and forth. That was good enough for Lindy, who moaned into my mouth in another orgasm as I bent down and kissed her mouth hard.\n\nFortunately, I felt my nut rise, and I did not try to prolong it. Lindy said she could feel my cock getting even harder, if that was possible, and I said I was close. We fucked at each other for another minute, and then that violent, wonderful pain started up, followed by my firing another load of cum into the soiled condom...\n\nPart 12 - Epilogue\n\nFriday, December 16th. I was petting a very content Bowser as he lay with his head on my lap, while Carole read a book to Laura. I was amazed at my daughter's reading skills at her age.\n\nThen Laura read Carole a book, and by the time that was over, Carole was asleep. We took her upstairs and tucked her into bed, and Bowser got into his basket and maintained guard duty.\n\nLeaving Carole's room, I said \"I'll make us a couple of drinks. What do you want?\"\n\n\"Wine is fine.\" Laura said. I poured her some wine and made myself a 'Godmother' - Grey Goose vodka and DiSaronno Amaretto, and returned to the den, sitting next to my wife on the sofa against the far wall.\n\n\"I meant to ask you,\" Laura said, \"the other night, when Cindy said that about Westboro's pattern, it really struck you. Why?\"\n\nI said \"Westboro was very good about disguising things by pitting groups against each other, while he sat in the background unnoticed and did other bad things. We'd see things on the surface, be it a drug operation, or petty thefts, or a murder, and most people wouldn't see the connections. When I began to see them and understand them, it went a long way to help take the bastard down. I might add that Adolph Hitler was really astute at that; he loved to pit politicians in his Nazi Party against each other, and pit generals against each other... sometimes to get the best result that came out, and sometimes to see who was the fittest that would survive.\"\n\n\"So you think that's going on in these recent cases?\" Laura said.\n\n\"Something like that.\" I said. \"We've got Superior Bloodlines, composed of elitist Whites, mostly from the Northeast United States, the New England States, and the Deputy Director wants me to take them down really bad. We've got Black Militants, being organized in not-so-secret by T-Square, Jasmine Nix, Big Ice, and other celebrities; Sheriff Allgood wants me to take them down, particularly T-Square. And then... there's this third group... I'm not sure where they fit in...\"\n\nAfter a pause, I said \"When Cindy said that about Westboro, and she was right, I just got this sudden vibe in my head. Not from her, but this idea and memory just flashed in my head from the ethers of the Universe. I saw this glimmer... just a glimmer... that these two white groups are run by a Queen Bee of sorts... a Bee that controls two hives, not just one, and is using both in a way to make sure we remained fooled.\n\n\"And who is this Queen Bee?\" Laura said.\n\n\"More like King Bee... it's a man.\" I said. \"And the memory that flashed into my head so strongly that I couldn't get over it... is that it is the man who I saw standing over me while Casey B. Walker was torturing me... wearing a full, three-piece suit, older man...\"\n\nLaura just sipped her wine as I contemplated, almost feeling the man's presence in my head even as the ice cubes in my 'Godmother' drink began to melt...\n\n* * * * * * * * * * * * * * * *\n\nThe Cop Bar was busy this same Friday night. Between Christmas traffic, fights at the malls over toys, and the Special Ops teams making their raids, there was a need to release some tensions and socialize in the spirit of the Holiday season.\n\nTeresa Croyle and Cindy Ross chose to sit outside on the patio in the chill air, sitting before the fire in the fire pit. Teresa had agreed to be the designated driver and was drinking club soda. Cindy was pounding down a pitcher of what she called 'Swamp Frogs'; lime-aid and lemon-aid concentrate, mixed with a fifth of Everclear, moonshine, or whatever 190 proof beverage was available. It was becoming popular enough that Pops, the proprietor of the Cop Bar, would make it in an ice chest and sell several pitchers.\n\n\"Ah, that fire feels good.\" Teresa said as she warmed herself by it. \"We've been lucky with the weather, but it's going to be cold and messy this Winter, I hear. And it's going to be really bad in Europe, from what Todd was telling me. Russia might even have a winter they're not used to, and Eastern Europe is going to get slammed.\"\n\n\"Yeah, I think you're right.\" Cindy said. \"And that reminds me: my mom is selling what she still owns of the family farm, and when she comes down for Christmas, she may not go back up until Spring... if ever.\"\n\n\"Cool.\" Teresa said. \"Will she stay with you, or Molly?\"\n\n\"Dunno.\" Cindy said. \"She's welcome to stay with me, and Don told me she can stay at the Cabin for as long as she likes. Molly stays there most weekends, so she could stay there and at Molly's, or help keep kids...\"\n\n\"Yeah.\" Teresa said. \"You guys have a huge support system with the kids.\"\n\n\"So do you.\" Cindy said. \"And by that, I mean Todd's kids... which might as well be yours.\"\n\nTeresa said \"We're not a couple. Friends with benefits.\"\n\nNormally this would start some banter, but on this evening Cindy was quiet and contemplative... and drinking her 'Swamp Frog' drink in rather large gulps.\n\n\"Okay, sister,\" Teresa said. \"Spill it. I do not have to be the Iron Crowbar to see you've got something on your mind.\"\n\n\"Yeah... I do.\" Cindy said. \"You can't tell anyone, not a soul.\"\n\n\"Pinky swear.\" Teresa said. Cindy chuckled and they did a pinky handshake. Then Cindy dropped the bomb.\n\n\"Something big has come up.\" Cindy said. \"Really big. Maybe the biggest decision of my life.\"\n\n\"What's that?\" Teresa asked. \"Something to do with your father, his business?\"\n\n\"No.\" Cindy said. She looked over at her friend and her words made Teresa's eyes widen with total shock:\n\n\"Teresa, I've been offered a full-time job with the FBI...\"\n\nFinis... for now."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "crime drama",
        "police drama",
        "iron crowbar",
        "anal sex",
        "lesbian",
        "ass"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/delivery-in-the-rear-ch-03"
}