{
    "title": "The Sultanah Ch. 08",
    "pages": [
        "Dear Reader, thank you so much for reading this story. It has taken nearly a year of my writing life to get the whole thing finished. This is Chapter 8 of 14 chapters and the total is over 250,000 words. It is my Dirk Diggler/Jack Horner act of hubris: my attempt to write an erotic adventure story that pulls you in with a story you want to read, even when there isn't any sex going on (though there is a lot of sex. Crazy, weird, fun sex). It is the most ambitious piece of erotic fiction I have ever attempted. So I hope you enjoy it.\n\nWith that said, this book is not for everyone. It will be too long for many people (no shame in that, it is a big time investment). Some of the sex scenes are intense and include themes like hermaphroditism, non-consensual activity, incest, etc. For some people, that will likely be the appeal. In fact, while this story is definitely not for everyone, I think for a select group of people this story will essentially have everything you could ever ask for. So if that is you, congratulations, you found that thing you have been searching for. You can skip ahead to the sex and I won't be offended, but I think this story is more than the sum of its parts. If you read this whole story, you will not be disappointed. \n\nIn Chapter 1, our main character, Princess Varis, finds that her father has died and that, by virtue of the fact that she is a hermaphrodite and can father a child, she is now the Sultanah. In Chapter 2, Varis unearthed a conspiracy to destroy her Empire led by Rahip, the Cardinal of the \"New Religion\" and later she received her coronation. In Chapter 3, Varis humiliated the New Religion and raised the morale of her besieged people. In Chapter 4, Varis lifted the siege through a daring midnight raid. In Chapter 5, Varis survived an assassination attempt and visited her harem. In Chapter 6, Varis faced a challenge to her authority and seduced a noblewoman to maintain it. In Chapter 7, Varis defeats the raiders and comforts a peasant girl.\n\nSome recurring characters you might want by name are Varis (the Sultanah and narrator), Cin (the head priestess of Gunes), Arkadas (Varis' friend and servant), Kardes (Varis' older sister), Nislani (Varis' younger sister), Rahip (a Cardinal of the 'new religion'), Duke Hain (an important lord opposing Varis), Lord Sadik (a minor lord who has spoken in support of Varis); King Sican (the leader of Dusman, a rival kingdom), Prince Lider (Sican's son); King K\u00f6yl\u00fc (the leader of Temsilci, a rival kingdom); Agiz and Got (Subordinate Sun Priestesses); Saygili (Varis' guard); Soyguncu (a pickpocket and spy for Varis); Tutuklu (the head concubine of the harem); Kukla (a noblewoman). Further, Gunes is the name of the Sun God, Tanri is the name of the 'new god.' The city where the story is set is \u015eehir in the country of \u00dclke and the Empire of B\u00fct\u00fcn D\u00fcnya. If you need more...reread the earlier chapters.\n\nPlease, please, please, please, please tell me what you think after you read this. I put an embarrassing amount of work into this and I want to know what you think. Especially if it is good things.\n\n*****\n\nChapter 8: Betrothal\n\n\"I announce Varis, Sultan of \u00dclke and fourth of his name since the founding of the Hanedan dynasty, Emperor of B\u00fct\u00fcn D\u00fcnya, Lord-Mayor of \u015eehir...\" the herald began.\n\n\"That is unnecessary,\" I interrupted quickly. The herald looked at me, quite shocked, but shrugged his shoulders and stepped aside. With the herald out of the way, I stepped through the large, arched doorway into the main hall of the Castle Inhanet. The room was essentially a long hallway made of dark stone. One either side of the hall were small, squat windows that let in a negligible amount of light. Regardless, it was very dark in the room and even at midday, there were torches burning throughout the area. The room was cold and humid, causing the stones to sweat. A somewhat tattered rug started at my feet and led to the far side of the hall. It was much smaller and far less grand than my throne room in \u015eehir, but it served the same purpose: the ruler in this castle would receive visitors here.\n\nThe ruler of this particular castle was standing next to a small throne on the far opposite end of the room. As I stepped into the room, I took a moment to evaluate her. I was surprised that she, a widow, appeared so strikingly young and beautiful. Of course, \"young\" is a relative term. She was young for a widow, though still more than a decade older than me. She was, I had learned, 35 years old. She was quite tall, around 5'9 with very long black hair. She had piercing, nearly black eyes that dominated her severely beautiful face. She had a small, pointed nose and thick red lips. Her skin was somewhat pale, but in a way that gave her an aristocratic air. She had large breasts that sat high on her body, seemingly without the aid of a corset. She had slender, delicate arms and long fingers. Her body tapered down from her large breasts to a small waist. Her hips flared slightly and she had a small, compact bottom. Her thighs were thin and she had long, delicate legs. She was smiling in an honest but somehow cold way but looked totally at ease. In short, I was pleasantly surprised. My fianc\u00e9 was a beautiful woman.\n\nI suppose some explanation is necessary. Just one week before I had been in a meeting with my Inner Council, discussing plans for future expansion of the legions. Most of the lords objected to the re-growth of the legions, as a threat to their power. But the Executive Assembly had approved my plan, 3-2. Manpower was not an issue. The Empire had shriveled, but \u015eehir remained the largest and city in the known world. The walled city itself and the surrounding countryside still a multitude of people. Many fighting-aged men were without work and ready to be placed at the Empire's service. Therefore, the only issue was figuring out a way to pay for the troops. \n\nOur finances were already strained and an army, even an army receives little in wages, is expensive. Cin and Kardes were arguing over increased duties on merchants now that the Dusman raids had stopped. Cin argued that increasing duties a slight amount could give us the money to raise a 10,000 man army, 6,000 more than the current establishment. Kardes argued that increasing duties now, when trade was still recovering from the wartime deprivations, would simply deter commerce and cause more trouble than good. I, on the other hand, was trying to figure out a way to make the Peers pay for the army without allowing them to realize it. Regardless, while all of this was going on, Soyguncu suddenly burst into the throne room, excitedly holding a parchment over her head.\n\n\"Sultanah Varis! A message has come, something I think you will want to read,\" she called out loudly, over all of the other voices in the hall. Everyone else gradually stopped talking and turned to look at my scout and spy.\n\n\"Yes,\" I said sitting up straighter in my throne, \"What is it?\" Soyguncu bounded down the carpet in the throne room, all eyes following her. There was a sort of electric feeling; we could all tell that she possessed something momentous.\n\n\"Where is the messenger from?\" My older sister Kardes asked.\n\n\"How did you come by the message?\" Cin asked at nearly the same instant. Soyguncu, still striding confidently across the throne room, laughed good-naturedly.\n\n\"Let the Sultanah read it and all will be revealed,\" she said. As she moved closer, I quickly descended the stairs of my throne and reached the meeting table. Soyguncu arrived on the opposite side and she dramatically tossed a parchment onto the table in front of me. Cin, Kardes, Agiz, Got, and even the normally aloof Arkadas, quickly crowded around the table. Saygili leaned in from his post by the rear door, trying to catch a glimpse. I quickly scooped up the paper and started to read.\n\n\"To the illustrious Sultanah Varis first of...\" I skipped past my long title, \"It is with a heavy heart I write to inform you of the death of my husband, Lord Sahte, the Castellan and Governor of Inhanet, has tragically succumbed to the plague,\" I read, \"Who in Gunes balls is Lord Sahte of Inhanet?\" I asked while looking up from the parchment. I had never heard those names before. Instantly, Cin and Kardes began speaking at once. Cin stepped aside and let Kardes continue.\n\n\"Inhanet,\" my sister explained, \"Is little more than a small castle and the fields surrounding it. Maybe two or three square miles of land at most. I stayed there for several weeks when I was first traveling to meet my husband many years ago. Lord Sahte's father was the Castellan and Governor at that time.\"\n\n\"Where is it?\"\n\n\"It is a few days ride to the East of here, near the frontier between Temsilci and Surgun, right on the edge of our own territory. I saw no more than 500 people living in the castle and the surrounding village. The castle straddles the Hara\u00e7 River, a tributary of the G\u00fcney,\" she explained. I gazed at the map spread across the table, finding the rough area she described. The borders of \u00dclke, Temsilci and Surgun came together a single point, about 45 miles from \u015eehir. A small dot I had never noticed before read \"Castle Inhanet.\"\n\n\"For whom did Lord Sahte hold his territory then?\" I asked. I knew that he was not my Castellan or governor.\n\n\"No one,\" My sister replied. \n\n\"An independent duchy of only two square miles? Between two of my most powerful enemies?\" I asked incredulously. Kardes shrugged her shoulders. Now Cin stepped in, to fill in the gaps.\n\n\"Castle Inhanet had been controlled directly by the Sultan of \u00dclke for centuries,\" She explained, \"Temsilci and Surgun grew more and more independent as the empire decayed, to the point that Castle Inhanet was essentially isolated from imperial control. Both Temsilci and Surgun desired the castle but, at that time, they were afraid that by taking it they would provoke a war with the Empire, when it was still potent. Further, because they both wanted it, they were afraid of provoking a war with one another over an essentially worthless plot of land. So the last Castellan and Governor appointed by Sultan Ba\u011f\u0131ms\u0131z I simply declared the castle independent. It saved everyone a lot of trouble, so it was allowed to continue. They employ a small retinue of guards paid for with tolls charged on the Hara\u00e7 River.\" I was, as usual, shocked by Cin's encyclopedic knowledge of imperial history. She seemed to have cleared up the issue, so I read on.\n\n\"Lord Sahte, Gunes rest his soul,\" I noted the choice of god approvingly, \"and I produced no living male heirs. As such, Lord Sahte's exiled brother, Kay\u0131nbirader, holds the strongest claim to the Governor's Throne.\"\n\n\"Why do we care about this?\" Arkadas asked, annoyed. Cin shushed her and I read on.\n\n\"I have never met Kay\u0131nbirader, but it has come to my attention that he currently resides in the court of King K\u00f6yl\u00fc of Temsilci. My sources indicate that, in exchange for his support during the exile, my brother-in-law has consented to grant King K\u00f6yl\u00fc sovereignty over Castle Inhanet upon his return.\n\n\"We at Castle Inhanet are weak, but proud people. We have maintained our independence for centuries. It was my late husband's fervent desire that Castle Inhanet remain free from foreign domination. While the legal succession is clear, in this case following the law would result in the eradication of all laws at Castle Inhanet. Therefore, I will not abide by the installation of my brother-in-law on my husband's throne. Unfortunately, I am but a young widow with only a small force at my disposal. I will not be able to resist my brother-in-law and his Temsilci forces for long. \n\n\"For many centuries, Castle Inhanet was controlled by B\u00fct\u00fcn D\u00fcnya. To this day our nations have never experienced rancor or animosity. I believe that, perhaps, it is time that the affection between the Empire and Castle Inhanet are once again renewed. I ask only for independence for my people. I offer the only thing which I possess, my hand in marriage. If you are, as I believe you to be, the hand of Gunes in this world and if you choose to accept this offer, please hurry to Castle Inhanet with all haste. There is no time to lose. I send you my undying love. Sincerely, Governess Cad\u0131 of Castle Inhanet,\" And with that, the letter ended.\n\n\"She is not subtle,\" Cin said immediately, \"I am shocked that she would include so much information that could be intercepted by her enemies.\" Cin almost sounded disgusted by the lack of circumspection. \n\n\"She is a small town rube, what do you expect?\" Soyguncu said.\n\n\"Let's not quibble about her sophistication,\" I said quickly, \"We should not get bogged down in details. This is an offer of marriage.\" I said. No thoughts of romance or love flittered into my head as this idea took shape. I had no thought that I would love this Governess Cad\u0131. But I had been fruitlessly searching for someone to provide me with heirs almost form the instant I was made Sultanah. This was the first actual offer I had received thus far.\n\n\"It is hardly a worthy offer,\" Arkadas said immediately, \"We have been asking Dukes and Kings for their daughters. This is a dried up widow who controls a spec of dirt that the world has forgotten. Governess? I mean really...\" I looked over at my friend and lover, but she refused to make eye contact. I wondered if jealousy, more than concern about the appropriateness of the match was her true concern. I did not have time to reassure her of my love at that time, I would have to approach her later.\n\n\"We haven't had much luck with that strategy,\" I said dryly in response.\n\n\"Even if you go and marry her, we cannot possibly protect such a small fortress in the midst of our enemies,\" Got said, pointing again to the map. She was right, our forces were spread perilously thin already. I could not garrison even a small castle.\n\n\"Don't be foolish,\" Kardes said, \"Do you think this woman actually gives a damn about Castle Inhanet or its independence? Her brother-in-law is coming back to take over. She has no role there when he arrives. She will be out in the village with the peasants before she can bury her husband. She is looking for an out. She marries Varis and then, even if the castle falls, Varis can say she married a Princess (of sorts) and this Governess Cad\u0131 gets out.\" As usual, my sister had cut through the obfuscation and found the true source of the issue.\n\n\"Perhaps she was more subtle than I gave her credit for,\" Cin responded.\n\n\"Then we are both in great need of one another,\" I said finally.\n\n\"Grave mistakes are made in such circumstances,\" Arkadas offered.\n\n\"Alliances of necessity are made in such circumstances,\" Cin responded. \n\nGiven the precarious nature of my dynasty and my paucity of options, it was quickly decided that I must go to Castle Inhanet at once. My Inner Council seemed to accept the decision as inevitable, even if they were not enthusiastic about the rather weak match. Only Arkadas offered any real objection. But everyone knew the source of her displeasure and she was easily outvoted.\n\nThere was not much time to lose and I did not bother to inform the Peers of my plans. I had not yet formally decided that I would marry Governess Cad\u0131, I had some questions to ask of her first. Therefore, their agreement was not necessary. Yet. I promised to send Cin a message as soon as my final decision was made. She could then present the marriage to the Executive Assembly as a fait accompli. I had no doubt a 3-2 vote in favor could be obtained.\n\nTherefore, I quickly prepared for departure. I did not want to remove any of my existing troops from the city, as they were all needed for defense. I decided, with Saygili's assurance, to take the small, but growing, nucleus of my new legions. Two hundred new troops, well-equipped and trained daily by Saygili and his most competent fellow-soldiers. I decided to leave Cin in charge while I was gone and encouraged her to deflect questions regarding my whereabouts until I returned. Saygili and my scout Soyguncu would travel with me to Castle Inhanet.\n\nThe trip had been arduous, but uneventful, as we climbed through the hilly terrain leading to Castle Inhanet. And, just a short week after first receiving the letter, I was standing in front of Governess Cad\u0131 in her drafty castle, ready to hammer out the details on a marriage contract. Soyguncu and Saygili waited with my troops outside in the castle courtyard. My fianc\u00e9 and I were alone.\n\n\"My exulted Sultanah, my love,\" she said, her voice sounding cool and silky, \"I was certain that when I wrote to you that you would not fail me.\" As she spoke, she stepped down from the dais where the throne was located and bowed her head reverentially. \n\n\"Had your letter more clearly indicated your beauty, I would have arrived much earlier,\" I said, displaying my courtly charm, such as it was. Governess Cad\u0131 gamely played along, blushing and waving her hand as if to brush the compliment aside.\n\n\"You are too kind, my Sultanah,\" she responded. We then stood awkwardly in silence for a moment. It was not exactly clear how we were to move forward at this time. I took a few more steps towards her, getting a better look at her attractive form.\n\n\"I...\" I began.\n\n\"May I interrupt?\" Governess Cad\u0131 said as soon as I began to speak. I got the impression that she had been waiting for me to talk, just so that she could speak over me. Nonetheless, I nodded for her to continue, \"I apologize for my rudeness. And I apologize still further for the bluntness I will now display. I do not believe we have time for the normal, courtly games of marriage. If you permit, Sultanah, I prefer that we simply speak frankly and quickly, to determine the terms of our agreement.\" Her voice sounded icier than before, but in a strangely enticing sort of way. This was not the sort of woman I was expecting. And I believe I liked it.\n\n\"I agree whole-heartedly, Governess,\" I said, wondering exactly what she had in mind\n\n\"Cad\u0131,\" she said quickly, flashing a smile, \"If we are to be informal.\"\n\n\"I cannot grant you the same indulgence Cad\u0131,\" I said. This woman was clearly sharper than what I had been expecting and I did not want her to forget that, whatever our current needs, my position was well above hers. In fact, I vowed to display not only my legal superiority, but my mental superiority as well. I vowed I would knock this woman off kilter at some point, to let her know that even in a marriage of necessity I would be the dominant partner.\n\n\"Of course not, Sultanah. I have not earned that yet.\" she said deferentially and bound again. Satisfied, I walked towards her. She raised her head, watching me move. Rather than stopping when I was closer, I simply brushed passed her. I walked over to her late husband's throne, turned and sat in it. I looked up at her, affecting a most comfortable appearance. She turned and faced me, it was unclear if she took offense to my presumptuousness or accepted it as the normal, haughty behavior of a powerful leader.\n\n\"Well,\" I said after a moment, \"You brought me here and demanded a blunt exchange. Perhaps it is best if you lay out your offer.\" Cad\u0131 nodded quickly.\n\n\"Yes,\" she said without inflection, \"Excellent. I offer you my hand in marriage, officiated in any way you choose. I have heard of your full-throated embrace in Gunes and I have followed your path. If you would like a marriage under the Sun God's rites, I will be happy to oblige. In exchange, I ask that Castle Inhanet remain an autonomous region within the Empire. During my life, I will remain governess here, with any rights and responsibilities that entails. You will receive no rents from Castle Inhanet, but you will provide defense when necessary. Our eldest son will inherit Castle Inhanet upon my death, even if you, unfortunately, predecease me.\" She summed it up quite quickly. This was nothing more or less than I expected based on the content of her letter. I knew most of the requests regarding Castle Inhanet were simply her attempts to ensure she had some independent source of wealth. I was prepared for my response.",
        "\"Before I add my conditions,\" I said slowly, \"I must ask a few important questions.\"\n\n\"Of course,\" Cad\u0131 said, opening her palms as if to say she had nothing to hide. I slouched comfortably on the throne and looked up at her.\n\n\"How long were you married to Lord Sahte?\"\n\n\"17 years,\" she responded quickly. There was no sense of sadness or despair at this disclosure. She had been married nearly half her life to the man, but did not seem distressed at his passing. I did not put much thought into that fact, not all marriages are happy. Kardes, for instance, never seemed particularly misty eyed when she spoke of her late husband. I didn't really care about the state of her married like, the next question was the one that mattered.\n\n\"Did you fuck him?\" I asked. Cad\u0131's eyes grew wide and her cheeks flushed slightly red. I smiled slowly. It seemed I had achieved my goal. She was a little off-balance now.\n\n\"I...\" she started, but did not speak further. For a moment, she looked around as though someone else might answer the question for her.\n\n\"I believe it was your suggestion that we be blunt,\" I reminded her.\n\n\"So it was,\" she said, clearing her throat. She paused a moment longer before answer diplomatically, \"Lord Sahte and I shared a conventionally active marriage bed.\" I shrugged my shoulders and looked away from her.\n\n\"How often is 'conventionally active?'\" I asked. The Governess let out a sigh and I looked back to her. She looked embarrassed by the question.\n\n\"If you fear a marriage such as I am suggesting would be without passion, I assure you I know my duty. You are a beautiful woman and it pleases me to look upon you. I cannot claim a general attraction to women, but I will not be derelict in my attentions to you. Further, while I will maintain the utmost fidelity to you, I will overlook any quiet indiscretion on your part,\" Cad\u0131 replied. Well that was certainly blunt. She did not find me attractive (though not unattractive either) but she would sleep with me. Further, I was welcome to cheat. My girlhood dreams of romance not exactly fulfilled. I snorted and rolled my eyes. She was on the wrong track anyway.\n\n\"I will tell you what I fear and what I do not fear if and when I decide to tell you,\" I explained, \"Answer my previous questions. How often did you take your husband into your bed?\"\n\n\"It varied,\" she answered quickly, clearly embarrassed by the dressing down, \"Never less often than once in a month but usually much more. Throughout most of our marriage, I would say once a week.\" Her answer came out easily and sounded honest.\n\n\"And never any children for all of that?\" I asked. The real crux of my issue with this prospective bride. I did not need love from her, I needed something more important. Heirs.\n\n\"I had no children whatsoever,\" Cad\u0131 responded, \"No miscarriages or young deaths. Though I assure you that I am fertile.\" She now understood me correctly.\n\n\"How can you assure me that?\" I said, sitting up in my chair.\n\n\"My certainty comes from two sources. As for me, I come from a family that produces many sons. I have eight brothers. Further, my father's mother gave birth to six sons. My monthly closeting has come since I reach the appropriate age, like clockwork. The second source is more certain. My late husband had a...wandering eye. And a small harem at that. Despite these interests, he failed to sire natural children as certainly as he failed to sire heirs. Any fault for the failure of this house to perpetuate lies at his feet,\" Cad\u0131 said forcefully. Her words confirmed some of the rumors that Soyguncu had uncovered after infiltrated Castle Inhanet a few nights earlier. I nodded my head.\n\n\"If that is the case,\" I said sagely, \"Then the only matter is for you to hear my terms and accept them.\"\n\n\"I am sure you will ask nothing that I cannot give,\" Cad\u0131 responded, her voice growing higher and more excited. But her icy eyes stayed on me.\n\n\"You will come with me immediately to \u015eehir and the marriage will be consecrated under Gunes as soon as possible. While you may maintain your requested privileges here in Castle Inhanet, you will live in \u015eehir with me. You may appoint a regent of your choosing to maintain your interests. You will take on all of the traditional roles of Consort and that will be your only title. Chief among your duties, we will work nightly to produce an heir until that goal is reached. In fact, we will work to produce several heirs to ensure the stability of my line. When your fertility ebbs, you will be permitted to stay in \u015eehir with full honors, if you wish. Or you may return here, to Castle Inhanet, to live out your days. If that is acceptable, then we have an accord,\" I said swiftly. \n\nI had discussed the terms of my conditions on the marriage at length with my Inner Council. Some, especially Arkadas, had called for harder terms. They were hard pressed to define what \"harder terms\" might be, but they were afraid that I was endangering myself with a rapid wedding. I wondered if Arkadas would be happy with my permission to engage in 'quiet indiscretions' or if she wanted something more from me than I could give. Regardless, I hadn't heeded their claims. I was desperate for heirs and I was willing to engage in a quick, seedy marriage to a woman of little note who I did not know in order to make it done. Apparently, Cad\u0131 was equally amenable, as a broad smile spread across her face. She bowed slightly.\n\n\"My love, you have made me so happy,\" she said, her voice for the first time sounding warm and excited. I gave a wry smile to indicate that her jovial attitude seemed misplaced next to the rapid closing of our tawdry negotiations, but she seemed not to notice. She took a few steps closer towards me, beaming. Then she clapped her hands.\n\n\"We need a celebration!\" And then all hell broke loose.\n\n* * * * *\n\nIt was some hours later and I was in the late Lord Sahte's bed chamber, preparing for sleep. Governess Cad\u0131 had insisted that I take the castle's largest and most luxurious room. It was a squat chamber, about a tenth the size of my chambers at home. It did not feel in any way inviting, with its narrow dark windows and bare stone walls. The various torches scattered haphazardly about the walls barely seemed to penetrate the dimness all around me. Regardless, there was a large feather bed in the center of the room and it looked sufficiently comfortable, given my fatigue.\n\nI was not certain of the time, but as I peeled off my form-fitting dress and tossed it on the floor, I reflected on my \"celebration.\" It seemed that Cad\u0131 had been expecting the acceptance of her proposal and had organized a \"spontaneous\" party in thanksgiving. As soon as she clapped her hands the room began to fill with servants and townspeople. I sat, dumfounded, as chairs and tables already laden with food were brought into the hall. Musicians seemed to appear from nowhere. I knew none of the people who came streaming into the hall wearing their finest clothing, but they moved with a certainty of those who knew they had been invited. \n\n\"I hope that you do not mind?\" my fianc\u00e9 had said, noticing my confusion and discomfort, \"We had been under a great strain here since my late husband's death and I believed a party, where they could meet and thank their savior, would do them good.\" \n\nAnd thank me they did! Even as people began to sit and eat the prepared food, a long line of well-wishers began form in front of me. Each person would inform me of his or her name and occupation (\"F\u0131r\u0131nc\u0131 the Baker\" and \"Demirci the Smith,\" and so on). They would thank me profusely for aiding in the independence of Castle Inhanet and congratulate me on my coming nuptials. I thanked them weakly for their kind words and begged them not to speak of my coming marriage to anyone outside of the room. I did not want news reaching \u015eehir before I did.\n\nThe party itself was raucous to the point of being manic. I was not sure exactly what the customs were in Castle Inhanet, but I found the experience off-putting to say the least. Everyone ate quickly, the food already being present. They tore into everything as though they were starving. They drank copious amounts and very quickly. In just a short period of time, many of the visitors were drunk. They danced madly as the musicians played, despite the fact that they could not play well. The whole while, Cad\u0131 circulated through the room to speak with others, virtually ignoring me and leaving me to the mercies of my well-wishers. The only times she spoke to me was a gentle encouragement to drink up so that I might enjoy myself with the rest of them. I had decided, in the strange environment presented, to stay sober. When the party began to break up, I had retreated, apparently unnoticed, to my chambers.\n\nWhen I was shut inside, I finally let out a long breath and relaxed slightly. Everything had occurred so quickly and seemed so strange...it was hard to understand what had happened that day. I had, finally, been betrothed. It was nothing like what I expected. I felt oddly hollow, like nothing had happened. Or the opposite of what I wanted had happened. Or something else entirely, I couldn't tell. My fianc\u00e9's attitude toward me was also troublesome. So business-like and cold until the deal had been sealed at first, and then almost terrifyingly exuberant, like she was trying to prove something once we were betrothed. Now, as I climbed naked into my bed, too tired by the day's events to think any further, I gave up trying to figure everything out. But I resolved that I would consider everything in the morning. Despite my desperation, I held most of the cards and could set things the way I liked. The bed was just as comfortable as it looked and I smiled for the first time as I pulled the cool covers over my narrow body. \n\nAnd then...a knock at the door. For a moment, I wondered if I was hearing the echoes of the party thrumming in my memory. I pulled the cover up over my head and closed my eyes. And then the knocking came again, more forcefully. The noise echoed through the room and it was readily apparent that it was coming from my door. I pulled the covers down off of my head. I sat up and let the sheets slipped down, exposing my breasts. The knocking came again, more loudly still. Whoever was present was not patient. I looked down at my dress on the floor and groaned. I would have to get dressed to take care of this.\n\n\"Hold on a moment, I will come directly,\" I said, not bothering to hide my annoyance. But, at the sound of my voice, I heard the latch on the door sliding and, as I looked, I saw the door opening. My skin felt prickly and I felt a panicky feeling in my stomach. Someone was breaking in.\n\n\"This is the Sultanah's room, I am not prepared for visitors!\" I shrieked and I pulled the sheets up so that they were, once again, covering my breasts. But the door did not heed my command and, in a moment, it burst open entirely. Cad\u0131 was standing behind it. She was wearing the same dress she had been wearing all day, but the straps had slipped off bother of her shoulders, the material hanging low and exposing much of her large breasts, almost to the nipples. Her long, black hair was greatly disheveled. She was smirking, her eyes as icy as ever. She clasped in one hand a large bottle of wine and between the fingers on her other hand were two champagne shallow champagne coupes. \n\n\"I apologize my love,\" she slurred, sounding quite intoxicated, \"But I could not go to sleep without wishing my Lady good night.\" She explained. With that, she kicked the door closed behind her and started to walk into the room towards the bed. She stumbled only slightly, but it was clear she was not entirely herself. \n\n\"I thank you for the sentiment, good night to you as well,\" I said, pointing to the door. Cad\u0131 laughed slightly and then stumbled closer towards the bed.\n\n\"That is not how a wife bids her husband goodnight,\" he explained haltingly.\n\n\"We are not yet wed,\" I pointed out and she snorted.\n\n\"Just a matter of time,\" she said, slinking ever closer to my bed. Finally, she reached the edge and sat down next to me. Her small ass just barely making contact with my thigh. She held up the bottle and her glasses and gave me a lascivious smile, \"Perhaps we could have a little toast before going to sleep? A little celebration of our first night as a couple?\"\n\n\"No, thank you, I have had too much already\" I said, trying to get her out of my room. I couldn't say why, but I did not feel comfortable with her there. Perhaps it was my fatigue or her intoxication, but something about it did not feel proper. Or advisable.\n\n\"No you didn't,\" Cad\u0131 responded, pouting more like a young girl than the mature woman that she was, \"I saw you, you didn't have a drop!\"\n\n\"Were you watching me all night?\" I asked dryly. Cad\u0131 smiled coyly, bit the tip of her pinky finger and nodded her head. She leaned forward towards me slightly, pushing her breasts out and allowing the thin straps to slip down to her elbows.\n\n\"I never want to take my eyes off of you,\" she said in a breathy whisper. I was, once again, put off by her sudden affectation of desire for me. I recalled our negotiations and was aware that she was simply acting out what she believed I desired. I don't know if I was more worried by the fact that I knew she was acting or if it was that she was doing such an excellent job of it.\n\n\"I am not thirsty now,\" I said, \"Perhaps another time.\" Cad\u0131 rolled her eyes slightly and sighed.\n\n\"If that is what you wish Sultanah,\" she said dutifully. She then started to lean over, across my body. For a moment, I wondered what she was attempting to achieve and felt a slight concern. She was leaning towards my face, was she trying to kiss me? But she kept leaning past me and I realized that she was reaching for the nightstand next to the bed, looking for a place to set her wine and her glasses in the room. \n\nRegardless, her maneuver had placed her large, round breasts into my face. Her left breast was a mere inch from my nose and I could smell the sweet scent of her skin. The material of her dress slide even farther and the pale curve of her breast was largely exposed. I believed that her nipple had nearly slipped free. All the while, she was trying to adjust the table so she could set down her items. This caused her breasts to jiggle, the left one gently brushing my face. Despite my misgivings about the situation, my body could not help but react. Cad\u0131 was a beautiful woman and she would, soon enough, belong to me. From a purely animal standpoint, I desired her. She seemed to notice.\n\n\"Oh!\" she said, finally placing her items on my nightstand. She then leaned back so that she was, once again, sitting upright on the bed next to me. She was smiling coyly and she looked down at her nearly exposed breasts, \"Do you like these?\" she asked. I felt my cheeks get read and I stammered for a moment.\n\n\"I...\" I began, but before I could speak, Cad\u0131 reached her hand out and placed it between my legs on the bed. I let in a quick breath of air and felt my body tighten. The fabric of the sheet was incredibly sheer and it was as if Cad\u0131's delicate hand was wrapping completely around my rapidly hardening cock.\n\n\"I see that you do,\" Cad\u0131 said triumphantly, \"That is good. They will belong to you, after all.\" And with that Cad\u0131's hand slipped off of my cock. I let out a breath but I kept my eyes on her. Cad\u0131 reached up to the cupped fabric barely clinging to her enormous breasts. She flipped the fabric down and looked up toward me, winking. My breath caught in my throat. Cad\u0131's breasts were gorgeous. They were large, larger than I had anticipated from the look of her clothing. They were a lovely teardrop shape with a perfect concave top and convex bottom. They sagged very little and looked enticing on her thin frame. Her skin was a perfect, milky color that offset the bright pink hue of her nipples. Those nipples were perfectly proportioned for the size and shape of her breasts and they stood out firmly now on her chest.\n\n\"You are beautiful,\" I said, no longer exactly sure that I wanted my fianc\u00e9 to leave.\n\n\"Think of how much larger they will grow when I produce you an heir!\" she teased. With that, she lifted her left breast up with her left hand. It appeared to have a good deal of weight and sat heavy in her palm. She craned her neck down and opened her mouth. Even as her face pointed down, I watched as her eyes flickered up briefly to look at me, sparkling in their iciness. Her thin red tongue then slipped from her mouth and grazed her small, pink nipple. Her eyes closed as if in ecstasy as she shivered. She then released her breast, allowing it to fall jiggling down to her body, and looked up at me. I was holding my breath now and I could see the outline of my hard cock as it stood up through the fabric of my sheet. Despite my growing desire, a small portion of my wariness remained.\n\n\"We must stop,\" I said, my voice sounding plaintive, almost whiney, \"We are not yet wed.\" Cad\u0131 laughed lightly and ran her fingers through her hair.\n\n\"Neither of us are virgins,\" she asserted. While she spoke she reached down between my legs with both hands. Now at my cock, below that, at my knees. As she spoke she began to crawl her fingers on the bed. But she wasn't moving forward. Instead, she was carefully pulling the fabric of my sheet down. \"We will go to our wedding bed as adult women. Why should we wait any further?\" she asked. As each word slipped from her mouth, inch by inch my covering began to disappear. I felt the silky fabric as it slid down my neck, over the tops of my breast, and tickled my nipples. My breasts were now exposed to the cool night air, my nipples hardened. I could see my chest rising in falling in big, gulping breaths and I could feel Cad\u0131's eyes upon me. My body began to tingle all over\n\n\"We...\" I began, but my voice came out as a sigh.\n\n\"Should make each other feel good. A different kind of toast,\" My fianc\u00e9 said as the sheet continued to slip down across my belly, exposing my bellybutton. My cock was completely erect now and bulbous tip caught on the fabric of the sheet, pulling it up, perpendicular to my body. Cad\u0131 continued to pull on the sheet and the fabric slipped deliciously across the tip of my cock.\n\n\"Oh Gunes!\" I moaned. Without thinking, my right hand shot up to my chest and my palm clasped over left breast. My forearm lay heavy across my right breast and my left nipple felt hard in my hand. I squeezed my breast and moaned again.\n\n\"It's a bigger cock that I expected!\" Cad\u0131 replied, sounding pleasantly surprised. I looked at her now as saw her eyes glued to my cock. As she spoke the last of the sheet slipped over the tip of my cock. No longer held back, my cock flopped back hard, falling against my lower belly and issuing a loud slapping sound. Cad\u0131 giggled. I looked down at my body and saw my breasts spread across my chest, my flat stomach, narrow waist, and wide hips. I saw my cock laying against my body, actually sitting up a few inches. It felt right that she would be impressed. I no longer felt even slightly nervous about my appearance. I was the Sultanah and people wanted me for my power regardless of what I looked like. And besides, my body looked pretty damn good.\n\nWithout further word, Cad\u0131 threw her legs up onto the side of the bed and pulled herself entirely onto the mattress. In one deft motion, she threw her legs over my body, straddling me at the knees. Her dress draped over my legs, but did not touch my cock. I could feel the insides of her thighs as they pressed against the outside of mine. Her large breasts bounced beautifully as she moved into position. I didn't know what she was trying to do, but I no longer cared. This was a beautiful woman and she was throwing herself at me. In fact she belonged to me (or would) and there was something empowering about that feeling. Like being in the harem. My cock was doing my reasoning now and I no longer worried about expelling Cad\u0131 from my chambers.",
        "Cadi grinned at me and tossed her long, thick hair over her shoulder. She began to lean forward now. As she did so, her hands fell on either side of my body. She placed her palms flat on the mattress, straddling the narrowest part of my body at my waist. As a result, her elbows were close together and as she continued to lean forward, it pushed her large breasts forward and pushed them up towards her face. I felt my heart hammering in my chest and my mouth went dry. The smell of her skin and hair was overwhelming and I believed I could sense a musky aroma of arousal undercutting it. \n\nAfter a few moments, I felt the hard nubs of her nipples as they skittered across the smooth flesh of my breasts. I moaned and felt my body quiver with excitement. I could feel the reverberations that the touch of her nipples sent flowing throughout my body. I felt my cock jump between my legs. Cad\u0131 groaned as the tip of my cock brushed the inside of her leg.\n\nNow, with her nipples pressed against my breasts and her cool eyes staring directly into mine, she stopped. Her long hair now cascaded over her shoulders and tickled the skin on my shoulders and breasts. She paused, staring at me closely. I could feel my body trembling underneath of her and I wanted desperately to feel more of her touch, she was so close. I somehow tore myself away from her mesmerizing eyes and my gaze landed on her alluring lips. I licked my own lips and then closed my eyes, leaning towards my fianc\u00e9.\n\n\"If...\" Cad\u0131 suddenly said. I stopped leaning towards her my eyes fluttered open. She had not moved, but her eyes were open, her lips un-pursed, \"I might be bold. I am glad to be here with your grace and I do not want to stop now. But I ask...\" she paused now. She looked indecisive. My cock was aching between her spread legs and her nipples were digging deliciously into the flesh of my breasts. The smell of Cad\u0131's cunny was now so thick in the room I could feel it on my tongue when I breathed. I could not stand the pause.\n\n\"Ask for want you want and see it granted...quickly,\" I hissed. Cad\u0131 smiled devilishly now and her eyes glittered, like she had been waiting for just that response.\n\n\"I wish that our first kiss would be on our wedding day,\" she said. I was taken aback by this request, it hardly seemed worth raising. \"I will make it worth your while,\" my fianc\u00e9 promised. Despite the fact that I would have granted her request without further negotiation, I decided to accept her sweetened offer.\n\n\"How will you do that,\" I said, leaning back slightly, my lips receding from her own. Cad\u0131 bowed deferentially and closed her eyes. Then she slowly began to lean back. I even felt her thighs sliding down my leg. I was surprised, wondering where she was going. \n\nAfter a moment, I felt her hands slip away from my sides. I watched as they rose up towards her chest. In a moment, she was cupping both of her breasts in her hands, pushing them up still higher on her chest. Her nipples poked between her fingers and I saw her squeezing them slightly. She looked up at me briefly, a coy look on her face. She then tilted her head down. Now she pursed her lips. I watched a large, white ball of spit slipped from her lips. I knitted my brow, trying to determine what she was doing. The ball of saliva dripped from her mouth and landed in the middle of her cleavage. Cad\u0131 pulled her breasts apart for a split second and the ball of saliva slipped between them. She pushed her breasts back together quickly and trapped the spit between them. \n\nI had no idea what Cad\u0131 had hoped to achieve by her actions. But she didn't pause now. In a few moments, I had figured it out. Now that the canyon between her large breasts was wet with spit, she began to lean lower towards my body. At the same time, she kept slipping backwards while keeping her eyes fixed on mine. My nipples ached as they grew harder and harder and I raised my hands up to my breasts, seeking relief. My fingertips found my nipples, squeezing them tightly, tugging on them. The sharp pain gave some relief to the growing tension and my hands sunk into the flesh of my breasts.\n\nBut Cad\u0131 had not stopped moving. She was still slipping down my body. Now she was closer than ever and I felt the bottoms of her breasts rub against my stomach as they skidded down my body. I felt Cad\u0131's stomach now fall onto my cock. I could feel the warmth of her body through the fabric of her dress and the pressure against my cock made me twitch and moan. Still, Cadi's body continued to slide down me.\n\nAfter a moment, I felt a strange sensation. I could no longer feel the bottoms of Cad\u0131's breasts on my stomach. Instead, I felt a soft warmth against the aching tip of my cock. I realized that my cock was pressing against the underside of Cad\u0131's breasts! She did not pause for a moment. I felt a slight pressure as my cock pressed into her skin. But then, I felt my cock easily slip into the channel between Cad\u0131's breasts. I felt the cool wetness of Cad\u0131's saliva as my cock pushed into her cleavage.\n\nCad\u0131 kept her hands on her breasts, pushing them together tightly. Her skin was so incredibly soft and her flesh was hot and inviting. Her breasts wrapped around my hard cock, hugging it tightly and squeezing it. But the spit she had dribbled down between her breasts lubricated her nicely. Despite the squeeze, there was no tension. My cock continued to slip easily, deeper and deeper between Cad\u0131's breasts. The space grew tighter and tight, but not constricting. Instead, it felt like I was being caressed or massaged. I moaned loudly, squeezing my own nipples more tightly.\n\nAfter a few moments, I felt my balls press up against the bottom of Cad\u0131's breasts. I tore my eyes away from Cad\u0131's and looked down between her breasts. Poking between the large orbs of her breasts was the glistening tip of my cock. I could feel Cad\u0131's hard sternum against the vein on the base of my cock. I could feel Cadi's soft breasts wrapped around the rest, placing an intense, but an even and comfortable, pressure all around my cock. My fingers were digging so deeply into my breasts that my knuckles were turning white. I felt lightheaded and my cock was seizing against Cad\u0131's body.\n\n\"How does this feel, my lovely?\" Cad\u0131 asked, her voice sounding pouty and sensual.\n\n\"Amazing,\" I gasped, wondering how I kept from coming.\n\n\"How about this?\" Cad\u0131 asked. And with that, she thrust her breasts forward with her hands. I saw the tip of my cock slip down inside of Cad\u0131's cleavage once again. I felt my cock sliding down between Cad\u0131's breasts as they continued to squeeze me tightly. Before I could even comprehend the pleasure of what I had just felt, Cad\u0131 pulled her breasts down again and the sensation reversed. Once again the tip of my cock popped up between Cad\u0131's cleavage and my balls pressed into the underside of her breasts. I was groaning loudly and writhing on the bed as best I could below my fianc\u00e9. The feeling was unbelievable. The grip Cad\u0131's breasts had on my cock was as firm as a hand but as soft as the inside of a mouth. I would never have thought of such a thing and I could scarcely believe how amazing it felt.\n\n\"Cad\u0131, oh Gunes!\" I moaned. She nodded.\n\n\"That's what I thought. You might find it is nice to have an experienced wife. I may show you a thing or two,\" she replied. But she did not give me time to breath. Instead, she began moving in earnest. She glided in a rapid rocking motion, moving up and down my body. She kept her hands on her breasts and kept them squeezed together. I groaned and writhed on the bed as my hard cock slipped rapidly between the soft pillows of her breasts. My cock warmed as she moved faster and faster, but her saliva kept the path lubricated and I felt nothing but pleasure from her touch. I kept my eyes on Cad\u0131's breasts, enjoying the pretty swell of her body and watching my cock slip in and out of view.\n\n\"Does that feel good, lover?\" Cad\u0131, smiling. Her voice came out in staccato bursts, she was moving so quickly. I flipped my nipples between my fingers and bit my lower lip.\n\n\"Oh yes!\" I hissed after a moment. Cad\u0131 winked and somehow started to bounce her large breasts faster. My eyes rolled back in my head and I bounced my head on my pillow. It was too much. My body began to shake and I pulled in a deep breath, holding it in place. I could hear a groaning noise in the back of my throat and I knew that I was getting close, Cad\u0131's touch was overwhelming.\n\nI felt the tension growing inside of me. My lungs felt tight, my skin felt wet, my muscles felt cramped, and my joints felt locked. I couldn't think or even remember where I was, all I knew what that I had an insatiable need for this to be released. My fingers gripped my breasts and my body shook on the bed, I just needed it to stop. \n\nI felt myself going light-headed and let out a long, slow breath. And as my breath slipped out in a thin, wispy stream, it felt like something had broken loose. My eyes opened and I looked down between my legs. Cad\u0131 was looking up at me, determination playing on her face as her hair fell over her eyes. Her breasts were bouncing quickly and my cock was pushing hard between her breasts. And that was where I felt it, the release. I groaned as the tension inside of me suddenly exploding, moving past the point where it had been before. By in building, I crashed through my discomfort into a plane of pure pleasure. It emanated out from my cock, sweeping over my body. Any army of pleasure routing its enemy and leaving me a quivering puddle of pure joy. \n\n\"Oh my!\" Cad\u0131 said as the vein on the underside of my cock quivered against her chest. She stopped moving as my orgasm started to rise, \"I know!\" she said, but did not complete the thought. Instead, her hands moved from her breasts and the pressure instantly lessened on my cock. I groaned slightly, reach my hands ineffectually down towards her. But Cad\u0131 was moving quickly. She reached across my body, as she had done earlier. Now, her breasts pressed down on my cock and I felt a shiver roll through me. \n\nCad\u0131 quickly leaned back so that she was straddling me straight again. The pressure, once again, was removed from my cock and I whimpered in protest. I looked up at Cad\u0131 and I saw in her hand one of the champagne coupes that she had brought with her. She quickly reached down and her fingers wrapped around my cock. It was still seizing and thick, while globs of cum were spurting out. Cad\u0131 quickly moved her coupe into place next to my cock and she titled my shaft so that globs of cum poured from my body and landed thickly at the bottom. I groaned as Cad\u0131 squeezed on my cock, pressing her thumb against the vein running along the bottom and milking in the last of my seed. It dropped heavily into the coupe as the last of my orgasm subsides.\n\nBut Cad\u0131 wasn't finished. As I collapsed back on the bed, panting, Cad\u0131 was looking desperately at her breasts and my stomach. She found big globs of cum sitting on the tops of her breasts and she quickly scooped it off with her finger and deposited it neatly into the coupe. She did the same with a small smear of cum that she found on her belly. Next she turned to me. There was a small puddle of seed collecting in my bellybutton and quickly leaned forward on the bed. I felt her chin gently bump the tip of my cock as her lips pressed into my bellybutton. I felt the warmth of her lips and cool sucking sensation as Cad\u0131 pulled the white liquid up onto her mouth. She moved her tongue around on my belly for good measure, sucking up a bit more of my seed in the process. She then sat up quickly, her hair tossing in a wide arc. She then turned her lips down towards the coupe and spit a large ball of white seed into the bottom. I was still catching my breath as Cad\u0131 moved and I watched her movements, mesmerized.\n\n\"Maybe this would be better for a toast,\" Cad\u0131 stated thickly. The couple likely held 8 ounces of liquid and was around a third full of seed (and a small amount of saliva). Cad\u0131 rotated the cup in her hand and the seed swirled around the glass. She gave me a knowing look and paused entirely for a moment. Even now, as I caught my breath, I didn't know what to say or to think. My eyes were still glued to Cad\u0131 and the seed-covered coupe that she held between her large, glistening breasts. Then, Cad\u0131 winked at me, put the coupe to her mouth, and threw her head back. I could see her lips open through the wavy glass and I watched as the large ball of seed disappeared into her mouth.\n\nCad\u0131 lowered the glass and turned to face me. Her cheeks were bulging were seed and I saw that she was swirling it around in her mouth. She was smiling as best she could with the liquid in her mouth. She closed her eyes, tilted her head back, and sighed through her nose as though what she tasted was absolutely heavenly. She opened her mouth for a moment and I heard her gargling the liquid in her throat. Then her lips closed and she turned and faced me again. \n\n\"Naw enar...\" she said suddenly. As she spoke, thick globs of seed slipped out from between her lips and dribbled down her chin. She giggled and quickly raised the back of her hand to her chin, pushing the seed back into her mouth. Then she quickly moved the coupe back to her lips and spit the whole glob of liquid back into it. She licked her lips slowly and then carefully re-iterated what she said before, \"Not enough.\" I looked at the coupe and saw that the seed was thicker and frothier than before.\n\n\"What?\" I asked, somewhat dazed.\n\n\"I like my glass filled to the top when I toast,\" Cad\u0131 explained, \"here, give me some more!\" she said. She did not wait for me to say or do anything. Instead, she quickly moved so that she was no longer straddling my legs. Then, by prodding and pushing and shoving on me, she quickly rolled me over on the bed and then pulled me up so that I was on my hands and knees. I was facing towards the headboard now and Cad\u0131 was crouched on the bed behind me. I felt Cad\u0131's hands sink into the flesh of my ass and I turned and looked over my shoulder at her. Cad\u0131 was leaning in towards me, her nipples looking even harder than before. But she had a look of slight disappointment on her face.\n\n\"You're no longer hard,\" she said. I dropped my head and looked down belong my body. Between the hanging orbs of my breasts, I saw my cock, only half erect, hanging between my legs. I saw Cadi's hand reach forward and wrap slowly around my softening flesh. Her soft skin felt lovely against my cock but I also felt extremely sensitive. It nearly hurt. And my cock stayed half-erect. I raised my head again and looked back at Cad\u0131.\n\n\"I just came...\"I said helplessly, I did not intend to disappoint her. Cad\u0131 smiled broadly.\n\n\"The fault is mine, my Sultanah. I will have to bring it back,\" she said. Without bothering to explain what that meant, Cad\u0131 began to move. She set the champagne coupe on the bed just below my cock. She covered its wide base tightly with the sheets. She kept one hand on my cock, playing with it gently with her fingertips. I felt her other hand press into my ass, pulling it apart. I could feel the cool air on my asshole, where it had been wetted from my cunny.\n\nI felt, rather than watched, as Cad\u0131 head dropped down towards my ass. I felt her hair land loosely on my ass and drape down my legs. After a moment, I felt her hot breath against my skin. Next I felt her smooth cheeks press against the insides of my ass cheeks. She let out a slow, sizzling breath and the gentle air cooled my anus and made it pucker. I could actually feel Cad\u0131's lips smile. But only for a moment. The next thing I felt was a wet warmth as she pressed against my anus. I groaned and arched my back as the warmth of Cad\u0131's tongue seemed to emanate out over my body. The nerves around my anus tingled as Cad\u0131's rough tongue slipped over it.\n\nIt seemed to be a strong aspect of Cad\u0131's personality that she jumped into everything very quickly. Before I even had time to full register than my fianc\u00e9's tongue was pressing against my anus, she had abandoned herself entirely into the act. I felt her tongue swirling rapidly around the crinkled red surface of my ass, leaving a dripping trail of saliva wherever she touched. \n\nCad\u0131 played with my asshole for a long while. I felt her tongue bathing my asshole carefully. Sometimes, she made her lips a tight seal around my anus and simply sucked on it, pulling her spit back into her mouth and putting a delicious pressure on my ass. Still other times, she probed the folds of my anus and I even felt her tongue go rigid and plunge into my tight, pink insides. All the while her fingers continued to play on my cock. In fact, while her face was buried in my ass, it freed up her other hand. This quickly made its way between my legs, caressing my aching balls.\n\nThe results of Cad\u0131's actions were immediate. Whatever fatigue I had felt rapidly dissipated as I soaked in the attention of Cad\u0131's warm wet tongue. My arms felt weak and my heart beat fluttered like a moth. Each movement of Cad\u0131's tongue was accompanied by a gasping breath from my throat. I arched my back often, pushing my ass farther back into Cad\u0131's face and driving her tongue deeper inside of me. This would invariably cause me to close my eyes, bite my lip, and moan loudly. Perhaps more importantly for Cad\u0131, her ministrations quickly reignited my passion. In just a short time, my cock had grown hard in her hands. For a brief moment, she pulled her head from between my ass cheeks.\n\n\"I knew you would like that. I know just how your body works, you will see when we are wed,\" she said. Then she quickly pushed her head back into my ass. If she had achieved her goal of getting me hard, she apparently saw no need to stop. In a split second, her tongue was back in my ass, gently massaging my tingling anus.\n\nBut now that my cock was hard again, Cad\u0131's focus turned there. She kept moving her tongue around deliciously, but her fingertips no longer slowly played with my cock. Instead, I felt her fingers wrap tightly around my shaft. It felt a little strange and I quickly realized that, because of my position, she was grasping me in an overhand fashion, with her thumb up towards my balls and her pinky finger pointing down towards my top. \n\nCad\u0131 started to stroke my cock downward. The tip of my cock was pointing directly down towards the champagne coupe on the bed. I arched my back again, driving my ass into Cad\u0131's face and dropping my cock down closer to the coupe. She moved her hand in almost a milking fashion, squeezing me very tightly. Her other hand remained on my balls, caressing them and seeming to will the seed out of them. \n\nCad\u0131 now worked like a woman possessed. Her hand moved rapidly, milking my cock as hard and vigorously as she dared. Her thumb moved around wildly, sending shivers down my spine. Her other hand deftly handled my balls, squeezing them tightly but in a way that simply maximized pleasure, offering no pain. All the while her tongue was plunging deeper and deeper into my asshole, finding new nerves to titillate. I moaned on the bed and tried to keep from collapsing forward.\n\nDespite the fact that I had just cum, Cad\u0131's overwhelming attentions meant that I could not last for long. In fact, the feeling almost snuck up on me. I was simply enjoying the feeling of Cadi's hands on my cock and her tongue in my ass when, I suddenly felt a cool tingling all over my body. For a moment, I couldn't tell what I was experiencing and I held my breath as my body grew rigid. Unbidden, a loud groan escaped from my throat. The tingling feeling started to grow more and more intense with each passing second. In fact it seemed to grow exponentially until suddenly, the tingling sensation blossomed into a powerful orgasm that fired all of the nerves in my body and sent pleasurable impulses bouncing through my brain. \n\nI gasped and squeezed my hands into the fabric of the bed. Even as I did so, I could feel my cock seizing under my body. I could feel the vein on the underside of my cock throbbing and I felt hot jets of cum begin to pour from the tip of my cock. Cad\u0131 seemed to be ready, like she had been expecting it even if I had not. She kept her tongue in my ass and continued to lovingly milk my cock, by her other hand moved from my balls. It found its way to the champagne coupe and Cad\u0131 quickly positioned it perfectly under her milking hand. As the big gobs of cum splurged from my cock, Cad\u0131's cup easily caught it. She plunged her tongue deeper into my asshole and her hand squeezed me tighter, willing every last drop of seed from my body.",
        "Finally, I could take no more. My orgasm began to subside and whatever little strength I retained fled with it. My legs buckled slightly and I felt my arms spread out, trying to keep from falling. As a result, my body dipped lower and I felt a warmth on the tip of my cock. After a moment, I realized that it had dipped into the pool of seed contained in Cad\u0131's champagne coupe. Not wanting to upset it, I groaned loudly and rolled over to one side on the bed, lifting one of my legs so that it did not strike Cad\u0131 as I turned. Cad\u0131's fingers slipped from my cock and her tongue popped out of my asshole.\n\nI collapsed onto my back on the bed, my chest rising and falling rapidly as I caught my breath. Cad\u0131 was now sitting to the side of me on her knees. Her cheeks and lips glistened with saliva from licking my ass. She was holding the coupe, now half full, in her hands and protecting the precious liquid. But, as usual, she did not pause. Instead, she quickly bent over towards me. My cock was still hard and it was pointing up towards my breasts. The tip was coated in white seed. Cad\u0131 wrapped her hand quickly around my cock, pulling it towards her face. In an instant, I felt it pop into her mouth. \n\nMy eyes open and I stared at her. Her own icy eyes were looking at me mischievously. Her face looked so beautiful with the tip of my cock planted inside of it. I felt her tongue, freed from my ass, swirling around the tip of my cock. It was so sensitive, I moaned and writhed wildly on the bed. I nearly pushed her away, but after a second, she let my cock fall from her mouth. The tip now glistened with spit, but was cleaned of seed. She quickly raised the coupe once again to her lips and I watched as she spit the seed into the glass, adding to the already massive collection. \n\nShe was leaning over me now, the cup of seed hovering above my breasts. Her eyes were focused closely on my seed and she swirled it around in the glass. She licked her lips slowly and she seemed to shiver. Then her eyes turned towards me and bit her lip.\n\n\"I don't think there is enough,\" she said, \"But I think you should check.\" She leaned forward now, her arms pressing her breasts together. She paused with her breasts just a few inches from my face. She was holding the coupe closely to me now, hovering just below my nose. I had manage to catch my breath now and I could smell the musky, salty scent of my seed. It was a pearly white color, with darker swirls and bubbles from Cad\u0131's saliva. It looked oddly beautiful in the coupe and I felt my mouth watering.\n\n\"It looks a lot,\" I said honestly. I could not believe how much, in fact. Cad\u0131 shook her head and smile deviously.\n\n\"That isn't how we check,\" she said slowly. Then without further word, she lifted the coupe slightly and tipped it towards my lips. Before I could tell what was happened, I felt thick, warm liquid press against my lips. My eyes opened wide and I felt that the seed was about to pour over the sides of the coupe and drip down my chin.\n\n\"Oh my!\" I said in surprise. Of course, this opened the flood gates. But, warm blobs of sticky seed poured over my teeth and into my mouth.\n\n\"Don't swallow it!\" Cad\u0131 said sharply as she titled the glass still further. Instinctively, I followed her instructions, damming up the back of my throat. But more and more of my seed was dripping into my mouth. It flooded over my tongue and overwhelmed me with its tangy, salty flavor. The clean, naughty scent of seed filled my nose. I groaned, savoring these sensations and enjoying the feeling of being filled with my seed. Cad\u0131 tilted the glass up until the rim seemed to be pressing up against my eyebrows. I felt my cheeks growing strained and heavy as they filled to the breaking point with seed.\n\nAfter just a few seconds, Cad\u0131 pulled the coupe away from my lips. A good deal of it still remained in the bottom of the coupe. I could feel a bead of cum glistening on my lips, I was about to burst. My teeth were flooded in the thick, viscous seed and it coated every inch of my mouth. My cheeks ached from the strain of trying to keep it inside of me. Nonetheless, the flavor was so divine that I did not mind the difficulty. In fact, I started to swish it around in my mouth, letting my seed slip through my teeth and coat every inch of my mouth. I wanted desperately to swallow it down, to feel it sit hot in my stomach. Maybe more, I wanted to gargle the hot, thick liquid as Cad\u0131 had done, but I was afraid it would overflow my mouth and drip down onto my breasts.\n\n\"There is not enough,\" Cad\u0131 said, reminding me that she was present. My eyes opened and I saw that the coupe was once again pressed against my lips. Directly behind the coupe were Cad\u0131's hypnotizing breasts. I saw that she was smirking and I looked up to her icy eyes, \"spit it back in here.\" For a moment, I considered disobeying her. I wanted to keep enjoying the taste and I didn't want her to think she could boss me around. \n\nBut instead, I wanted to see what she would do next. I opened my mouth and my seed began to pour down my chin. It fell in a large glop on the bottom of the coupe. It started to spread out, filling the coupe. It felt slippery and warm as it passed between my lips. I roamed my tongue around on the inside of my mouth, finding remaining seed and spitting it out into the coupe. Finally, I had cleared it all out and I saw that the coupe was filled even more before with the addition of my saliva and looked bubbly and frothy. I looked up as I felt Cad\u0131's thumb press against my chin. She slipped her thumb across, collecting the last few drops of seed and then flicking them into the coupe.\n\n\"We still need more to make a proper toast,\" Cad\u0131 said. And with that she slipped off the bed. She quickly turned so that she was facing the bed and then leaned over, pressing her breasts into the mattress and pushing her ass out. She reached behind herself quickly and grabbed her dress. She quickly flipped it up over her hips, exposing her ass. \"Put some in here,\" she said, shaking her hips.\n\nUnlike the previous instance, the excitement of tasting my seed had prevented my delight from slackening. My cock was still as hard as before and I desperately felt the need to keep going. Without speaking in response to Cad\u0131's order, I simply slid off the bed next to her. She kept her eyes on me as I moved. I placed my hand on her breast and then let my fingers run along her body as I slowly walked around behind her.\n\nWhen I reached the area behind Cad\u0131's ass, I placed my hands on my fianc\u00e9's hips and looked down. She was not wearing any undergarments and her body was exposed. I saw the small, tight mounds of her ass with her tiny, pink rosebud of her anus. Below it, I saw the thick, pink lips of her cunny. I could tell from this angle that, unlike the fashionable ladies of \u015eehir, my fianc\u00e9 had a full, dark bush. The smell of Cad\u0131's body was intense, an almost floral, salty scent that seemed to have been trapped below her dress and now freed. The scent went straight to my head, making me feel light. My mouth began to water and my cock twitched between my legs despite my fatigue.\n\n\"Don't wait, my Sultanah,\" Cad\u0131 said, turning back and looking over her shoulder, \"Give it to me now.\" She said. Never one to disappoint my fianc\u00e9, I quickly complied with her request. She was a tall woman and I pushed her hips down slightly. Cad\u0131 giggled and shook her ass. I reached down and wrapped my hand around the base of my cock, pulling it down towards Cad\u0131's glistening slit. She pushed her hips back, begging me forward. I placed the tip of my cock against Cad\u0131's hot cunny. It seemed to pull me in, opening easily to accept the tip of my cock. It felt very warm, essentially hot and tight against my tip. But it kept pulling me in farther. Without any great effort, I felt my cock slipping completely inside of Cad\u0131's body. Her cunny wrapped warmly and wetly around me and her muscles tugged on me. I groaned and felt my breasts bounce deliciously on my chest from the effort.\n\nI knew what Cad\u0131 wanted, she wanted swift action. And I didn't want to let her down. I quickly returned my hands to her hips, sinking my fingers into her flesh. I pulled my cock quickly out of her body so that only the tip remained inside. Cad\u0131 gasped and her knees grew wobbly. Without waiting for her reaction to settle, I quickly slammed my cock back inside of her, feeling tighter than ever before. Cad\u0131 screeched in pleasure and pushed her hips into me. \n\nIt seemed like this was a signal, no holding back now. I began to fuck Cad\u0131 with absolute abandon. My cock flew in and out of her body with ever increasing fury. My fingers grasping more desperately on her ass with each thrust of my cock. My breathing rapidly became ragged and I felt my muscles tightening. Cadi, writhed on the bed and I saw her hands slip under her chest, grasping at her breasts. She was moaning loudly and her scent had become even more intense, seeming to fill all of the space in the room and filling my lungs. \n\nThe experience was so concentrated and my body so fatigued, I felt myself rapidly approached another climax. For a moment I wondered what Cad\u0131 would think, if she would believe I was a selfish lover. However, at that moment, it seemed like she read my mind.\n\n\"Don't stop Sultanah,\" she said, \"Give me your seed so that I can give you and heir. Don't stop!\" And then her words devolved into a moan. She flipped her head around, her hair flying wildly. I cannot tell if was her words or the fact that her muscles chose that exact moment to tighten fiercely around my cock, but I could not hold on any longer. This orgasm felt different than the last two. Rather than the overwhelming mass of pleasure I had felt before, instead I simply felt a pleasurable shiver tremble up and then down my body. More importantly, I felt absolute relaxation. All of the tension leaving my body being replaced by satisfaction and a feeling of well-earned exhaustion. \n\nI leaned forward on Cad\u0131's back, panting and trembling, while I felt my cock contracting inside of her body. Finally, I knew the last of my seed (and perhaps the last of the liquid in my body!), pumped into my fianc\u00e9's body. Then, I dropped down backwards onto the floor, my cock rapidly slipping out of Cad\u0131's body (with a gratifying sensation). I sat on the floor, breathing deeply and looking up at Cad\u0131.\n\nIf she was tired from our actions, she gave no indication. Instead, she quickly rolled over. She did not even look at me but instead bent over and set the champagne coupe on the floor between her feet. She then slipped off the edge of the bed and squatted on the flood, hovering above the champagne coupe. She kept her dressed hiked up around hips and I could see her cunny clearly as she placed it over the center of the coupe. \n\nStill without word, I saw as Cad\u0131's muscle contracted inside of her body. She made a slight squealing noise and I saw a large glob of white seed pour from between her cunny lips and splash into the coupe below her. She pressed again and another sticky blob poured out of her body, this once leaving a thin stream of seed pouring into the coupe. The coupe itself was now around three quarters full. Now Cad\u0131 dropped down onto the floor, hearing legs spread so that she was sitting with the coupe between her knees. Her breasts bounced beautifully as she fell into place with a look of satisfaction was on her face. Finally, she looked up at me smiling.\n\n\"Did I please you Sultanah?\" she asked now, wiping her hair from in front of her eyes. \n\n\"It was lovely,\" I answered honestly. I felt like it would be nice now, to relax for a moment and enjoy the haze of our pleasure. But, as usual, Cad\u0131 moved purposefully and without pause.\n\n\"And there is now sufficient wine present for a toast,\" she said, reaching forward and grasping the coupe in her hands. She lifted it up to her face. Then she looked at me again, her eyes looking concerned, \"But only enough for one. Aren't you thirsty?\" she asked. I suddenly became aware of just how dry my mouth felt. I smacked my lips together.\n\n\"I do not think that would slake my thirst,\" I said, pointing to the cup full of seed. Cad\u0131 laughed as though I had told a particularly uproarious joke and then swatted her hand at my playfully.\n\n\"This is my coupe,\" she said, \"I will get yours.\" With that she stood quickly and walked around to the other side of the bed. I sat up on the floor, shifting the rushes of fresh straw under my ass. After a moment, Cad\u0131 walked around the bed once again. In her left hand was a glass of champagne, filled nearly to the brim and in her right was her coupe of my seed. She walked over and sat down next to me. She handed me my champagne coupe.\n\n\"Finally, we can properly toast on our first night together,\" she said softly. She wrapped her now free arm around my shoulder and held her coupe out in front of her. The pearly liquid sloshed lazily in her coupe.\n\n\"I feel now that it is appropriate,\" I said, feeling the bliss that followed the end of my orgasms. I lifted my glass next to Cad\u0131's. She turned and looked at me now and I found myself staring directly into her icy eyes. I found myself lost in them, wondering briefly how I had found myself here. And so quickly. But, just as I felt completely lost in my fianc\u00e9's gaze, I heard a slight tinkling sound. I looked down and saw that she had tapped her glass against mine.\n\n\"To the Night. And to the rest of our lives,\" she said slowly. I pushed my glass into her again.\n\n\"To the Night. And to the rest of our lives,\" I repeated. As soon as I spoke the words, Cad\u0131 tilted her glass up to her lips. I was desperate to watch and I held my glass, staring at Cad\u0131's lips. She pressed the coupe against her mouth and opened wide. As with everything, Cad\u0131 showed no hesitation. Her mouth, and apparently her throat, opened quickly. The seed poured into Cad\u0131's mouth in a large, warm ball. I saw it slipping through her lips. I could sense, rather than see, the thick liquid over her teeth and flooding her tongue. Instead of collecting in her mouth, I could see her throat expanding as the viscous liquid slid down into her warm belly. I cannot describe the emotions I felt as I watched her drink my seed, but I was surprised by how much I enjoyed it. As soon as she was done, she pulled the glass from her lips and looked back at me. Seed was glistening on her smiling lips.\n\n\"Sultanah,\" she said, \"You must finish your glass as well!\" I looked down at my hands and was somewhat surprised to see the glass still there. My mouth felt sandpapery and dry, \"Drink it all up, to honor the toast,\" she said. I needed no prompting. I quickly lifted the glass to my mouth and drank down a large mouthful of the bubbly white liquid. The initial flavor was heavenly and I took another big mouthful. However, as the champagne went down my throat I began aware of an acrid, unpleasant aftertaste. It was absolute revolting and I realized that the wine had somehow turned. I instinctively spit the second mouthful of wine into the coupe. \n\nI felt a brief moment of panic, realizing that this was certainly a bad omen and that Cad\u0131 might have been offended. After all, she had just drank my seed, how could I not drink her wine? But as I looked at her, I saw she was turned to the side, setting her coupe down on the ground. She hadn't noticed. I quickly moved the coupe down towards the ground and poured the remains out into the rushes on the floor. Cad\u0131 turned towards me smiling.\n\n\"Did you finish your wine?\" she asked. My mouth still tasted terribly but part of me wished I had kept drinking anyway. I was so thirsty. In fact, I felt a bit light-headed now, a bit woozy.\n\n\"Yes,\" I lied. I was surprised because my tongue felt thick as I spoke and my voice sounded tinny and far away.\n\n\"Very good my Sultanah,\" Cad\u0131 said, but there was something unnerving about the way she had spoken. I opened my mouth to respond but I suddenly felt so tired, like I could not spare the effort to speak. The room was growing dark. I felt myself start to pitch over, but I did not notice when I landed on the floor.\n\n* * * * *\n\nI could not tell how much later that the world began to return to me. It was particularly strange because, in many ways, I was not aware that the world had left me. I was not really aware that time had passed, except that I suppose I was. And it was not as though everything came back at once. I left the nothingness of the haze and felt an empty floating sensation. I knew I was feeling it, but I did not know what I felt. After a while, I began to sense muffled noise. Slowly, the muffled noise began to take a more definite shape. I started to recognize that I heard mumbling voices, though I could not tell what they were saying. But as each second passed, it grew more and more definite. As the voices became clearer, I became more aware of who I was, though I still had no conception of what I was doing or my location. My thoughts came sluggishly and confused. But nonetheless, after some time, I could understand the words, even if their meaning was not always clear.\n\n\"Well I guess I should look at her,\" an unfamiliar man's voice said.\n\n\"She is in the rushes over there. She got sick afterwards, but I moved her out of it,\" A woman's voice responded. There was something familiar about the sound of it, but I could not be certain. I heard a crunching sound and knew it was someone walking on straw.\n\n\"Well I will be damned,\" the man's voice said, \"It was true.\"\n\n\"Did you think I would lie about her?\" the woman's voice offered back icily.\n\n\"Not that she is here you twit,\" the man shot back, \"her cock. She is what they said she was.\"\n\n\"I could have told you that as well,\" the woman's voice said. Cad\u0131. Suddenly, in my mind I registered recognition of the voice. It was Cad\u0131. But I could not understand the significance of that fact.\n\n\"Is she dead?\" the man's voice asked.\n\n\"I looked at her when she first fell. She hasn't moved. Her chest hasn't been rising and I put my hand under her nose, I didn't feel anything,\" Cad\u0131 responded.\n\n\"Did you give her enough?\" he asked.\n\n\"I put everything we had left in the glass. She drank it all,\" Cad\u0131 replied.\n\n\"Was it enough?\" the man asked.\n\n\"I purchased enough of that stuff to dispose of ten men,\" Cad\u0131 said, \"It is not my fault that you used enough on Lord Sahte to kill nine! I hope there was enough left to finish her,\" Killed, Lord Sahte? Her? My addled mind could not comprehend what I was hearing.\n\n\"My brother is no longer Lord Sahte, do not refer to him as such,\" the man's voice shot back quickly and with real fierceness. Cad\u0131's voice returned, more soothing now.\n\n\"Easy Kay\u0131nbirader,\" She said, \"Your brother was never half the man you are.\"\n\n\"You should have let me dispose of him ten years ago!\" Kay\u0131nbirader roared.\n\n\"We had to wait for the time to be right,\" she said, \"For King K\u00f6yl\u00fc to give you the resources we need. Forget about Sahte and Castle Inhanet. You will be made a Duke for this. A duke in a real Kingdom, not a muddy shit hole. And I will be your Duchess.\" Suddenly, her tone changed as though she remembered something, \"And do not speak to me of waiting! I waited all night for this...Sultanah to down her glass. I had to do terrible...things to this animal to get her to drink her wine.\"\n\n\"Oh like you minded those things,\" the man suddenly said, sounding suddenly playful. I felt a rough male hand on my thigh, not understanding what that meant, \"She is beautiful after all, regardless of her...deformity.\" Deformity? Were they talking about me, the words were so unclear, my mind so foggy. I heard Cad\u0131 snort.\n\n\"It was not as bad as I supposed it would be beforehand. But she is not the lover that you are, Kay\u0131nbirader,\" she responded. There was a brief pause.\n\n\"Does that mean that you are not yet satisfied?\" the man asked, hopefully. I felt his voice moving farther away from me and it was then that I realized that I was located near these voices. I was in a room with at least two other people. They were talking about...something.",
        "\"Not yet,\" Cad\u0131. And after that, there were no more words. Just the sounds of action. Kisses, caresses, and the rustling of clothing. In a short period of time, I heard the sound of lovemaking in the room. Moans, kisses, and cries of passion. But I was not focusing on those noises. Instead, the conversation I had overheard was piecing itself together in my mind. The bits of words and phrases moving in various orders through my mind. I could tell that they were important, but I could not tell why.  \n\nSuddenly, my eyes burst open. They almost immediately shut again as bright lights from the torches in the room nearly blinded me. I nearly groaned, but I checked myself. The entire import of what I had just heard had flooded into me. Cad\u0131...and her brother in law...her husband...the wine... I tried to stir, but I could barely more. Even then, I suddenly grew wary. There were rushes all over the floor, movement would make noise and I would be discovered. Cad\u0131 had poisoned me. She had poisoned her husband as well. She was now fucking her brother-in-law and they had some mutual delusion that they would be granted a fief by King K\u00f6yl\u00fc in recognition of my murder. \n\nI could feel sensation returning to my body. This was most apparent in an absolutely dreadful headache that suddenly surged into my brain. It felt like every hangover I had ever experienced piled up on top of one another. But, despite the agony, I was grateful. Apparently I was lucky to be feeling anything. Gunes be praised for that. But now that I was awakening in body and mind, what was I supposed to do? I was too groggy and pained to feel the panic I should have felt, but I knew that my situation was dire. Each second, my fear grew more solid in my stomach.\n\nDesperately searching for something, I turned my head very slowly towards the bed. I could see Cad\u0131's feet hanging over the side of the bed. In between her feet, I saw the wide, tanned expanse of a man's hairy ass. He was leaning forward and his hips were thrusting back and forth. His boots were just a few short feet from my hips. If I made much noise, the two lovers were likely to hear me, despite their racket. \n\nWhile I was staring at Kay\u0131nbirader's boots, I noticed something. In preparing to have his way with Cad\u0131, the assassin had not removed his clothing. Instead, he had simply loosened his trousers and let them fall in a pile on top of his boots. His pants had, apparently, been held in place with a thick, leather belt. Connect to that belt and glittering in the low light was a scabbard with the hilt of a sword protruding from it.\n\nFor a second or two I began to consider what I was going to do, or even if I was able to do anything in my condition. However, the more I thought about it, the longer the odds seemed to be on success. I was woozy, possibly sick, and naked. Before my mind was allowed to more fully consider the difficulties ahead, my body suddenly acted intuitively. I was surprised by my actions, but my rational mind was essentially on the sidelines, watching my fight or flight instincts take charge.\n\nIn the hay rushes on the floor, I suddenly rolled over twice, towards Kay\u0131nbirader's boots. I moved jerkily and uncertainly, but not entirely slowly. I heard the rustling of the rushes, but ignored them. I was only a foot from the lovers now and I quickly reached my hand out towards the hilt of the sword. I quickly pulled back on it, feeling it slip easily from the scabbard and shake the man's pants. It was longer and much heavier than I expected and the orange light of the torches danced on it.\n\nI did not have time to admire the sword. Instead, I quickly began to rise up onto my knees. All of this action had happened in just a couple of seconds and now, as I rose shakily, I became aware that Kay\u0131nbirader and Cad\u0131 had heard something. I saw Kay\u0131nbirader's body grow tense and he began to turn to look over his shoulder. On my knees, I felt woozy and sick. I was certain I was about to vomit and my head hurt so badly that my eyes felt like they would pop from my skull. I suppressed a small groan and pushed myself up more, trying to maintain my balance. \n\nI scrambled up to my feet, slipping and aching as I did so. As I reached my feet, I stumbled backwards. For one terrible second I was certain that I was going to fall backwards on the floor, the sword skittering from my grasp. Instead, I took three steps backwards and regained my balance.\n\nBy this time, Kay\u0131nbirader had turned his head completely over his shoulder. I saw his beady, black eyes and tight, ugly face contract in horror as he saw me. He pulled his cock from Cad\u0131's body and quickly began to turn to face me.\n\n\"What the fuck is it?\" Cad\u0131 asked, panting on the bed. \n\n\"You fucking whore...\" Kay\u0131nbirader said to me as he turned around entirely. He tripped a little as the pants tangled around his ankles bunched up strangely. I decided I could not wait.\n\n\"For Gunes and B\u00fct\u00fcn D\u00fcnya!\" I screamed. And with that, I lifted the sword and pointed it directly forward. I started to sprint forward, but my legs felt like jelly. After a few messy steps, my toes caught on the rough floor beneath me. I began to pitch forward. For a moment I nearly lost total control over myself. I was relatively certain I was going to pitch forward onto my stomach uselessly. But I caught myself slightly with just the tips of my toes and pushed myself forward and, at the same time, I locked my elbows out in front of me, pushing the sword out straight towards the bed.\n\n\"Ugh!\" was all I heard. I could feel a strange, tearing sensation as the sword pierced Kay\u0131nbirader's chest, right below his sternum. I fell with such force that it kept pushing through his body, tearing through his organs and pushing out of his back on the other side. Blood pouring in torrents from his chest and his eyes were wide. He was no longer making noise, simply looking down at the weapon finally stopped with the hilt pressed against his chest. But I pushed so hard and Kay\u0131nbirader was so thrown off by my sudden, surprising attack, that I kept pushing him back. Kay\u0131nbirader's balance was gone and he pitched backwards onto his bed.\n\n\"Oh god!\" I heard from behind him. Apparently Cad\u0131 saw the sword emerge from his back. But everything happened in one quick, fluid motion. Before there was any time for Cad\u0131 to react. Kay\u0131nbirader was falling back first onto the bed, between her spread legs. Not really planning anything, but still shocked (and woozy) by what was going on, I kept my hand on the hilt of the sword, falling forward toward Kay\u0131nbirader and Cad\u0131. I heard Cad\u0131 suddenly issue a piercing scream as I felt Kay\u0131nbirader's body fall heavily onto the bed. I bounced off of his leg, lost hold of the sword, and fell onto the floor.\n\nI landed on my ass in the rushes, just at the foot of the bed. My eyes were swimming and I barely managed to avoid falling over entirely. But I looked back quickly to the bed, wary and ready for Kay\u0131nbirader to attack. But as I looked, I saw he was still laying on his back on the bed, on top of Cad\u0131. He was not moving or making noise. Cad\u0131, on the other hand, was flailing wildly underneath of him and screaming loudly.\n\nI was wary, but I slowly rose back to my feet and stood next to the bed. It was only then that I understood what had happened. Kay\u0131nbirader's chest had been pierced, perhaps even his heart, as the sword traveled up and through his body. He was already dead, as his lifeless eyes facing the ceiling showed. When he fell, the sword had been poking out of his back. His weight, and the fact that my hand stayed pressed to the hilt, had driven the sword through Cad\u0131's stomach. \n\nHe was now laying on top of her and the sword was actually pressed through the mattress of the bed. She was pinned underneath of Kay\u0131nbirader, the sword all the way through her belly, and he was bleeding all over her. She was also loosing blood quickly, her skin growing even paler than before. Her eyes were still glittering and icy, but they looked panicked as she flailed under the weight of her lover.\n\n\"You!\" she screamed, suddenly noticing me standing woozily next to the bed, \"Oh god...that fucking moron...not enough,\" she wailed. I placed my hand on the bed to steady myself. I was still understanding what had happened.\n\n\"You...betrayed me...\" was all I could manage to say.\n\n\"I...\" Cad\u0131 began and then moaned again. But as she did, she seemed to think better of what she was going to say, \"This man...is my lover... oh God...I admit. I wanted you to sleep, so I could see him once last time before I left. We are not yet wed...I was no maiden anyway... I am sorry.\" All of her lies were punctuated by moans and I could see foamy red blood gathering in the corners of lips. She did not know how much I knew, and was playing for sympathy. Just a good bye fuck for an old lover.\n\n\"Your brother-in-law is your lover?\" I asked. Cad\u0131 moaned, it was now clear that I knew everything. There was no use in lying.\n\n\"I did what I had to do. With Lord Sahte. With you. You are a woman. You know what it takes to survive. To get ahead. There is no room for sympathy. Please, mercy. My doctor\" she groaned. Her eyes glittered feverishly as she spoke and she cough blood spittle when she was finished. I nodded.\n\n\"You took a large risk,\" I said, and I pinched my temples, trying to sooth my aching head, \"And I respect that, even if I hate you. But when you take a big risk, you must live with the consequences,\" I said. And I meant it. I did not, at that time, imagine I could feel respect and hate together in such a way. I also did not understand how I could go from sleeping with a woman to hating her so quickly, but I did not question my emotion, Instead, I once again put my hand on the hilt of the sword, twisting it slightly. Cad\u0131 shrieked and writhed on the bed, though with less life than before. Her lips looked nearly white now.\n\n\"If you cannot save me...\"she begged, \"slit my throat. End this I cannot stand it!\" she screeched again tried in vainly to push her lover away. I stood looking at her for some time. Somewhere, with my clothes, was a knife. One that I had taken with me when I lifted the siege of \u015eehir. It would be an easy thing to put the bitch out of her misery. Her icy eyes looked at me pleadingly. But I saw not understanding in them, only an animal desire to satisfy her own needs.\n\n\"You said it yourself, women cannot afford sympathy,\" I said. She began wailing violently, but I still felt so sick, I could barely understand the invective she threw at me. Instead, I went over to a distance corner of the room and pulled the rushes in a pile. I laid down on them and was lulled to sleep by my enemy's cries. \n\nI awoke the next morning and found her quiet, though not quite dead. Her eyes were open and staring at the ceiling emptily. But her lips were moving and she was breathing shallowly. Her body was so white, the bed so red. I went downstairs and at breakfast at her table with my companions. In fact, I ordered all of my soldiers into the castle. I warned Cad\u0131's servants that she was ill and that she would not be disturbed until I deemed it appropriate. She would die when the sword allowed and not a second earlier.\n\n* * * * *\n\n\"She didn't even tell us about it until well after noon the next day. Then we all went up to her room, along with several of the leading persons at the ice-bitch's court. It was quite a scene when they saw what happened. They refused to believe it, or said they did. I think most of them knew. But our army was already there, in the walls. It was over before it began and it really didn't matter. Sultanah Varis placed both of their heads on the battlements, where her people could see them. She ordered that the bodies be sent King K\u00f6yl\u00fc with a message that in light of the fact that they had successfully poisoned her but failed to kill her, the Sultanah suggested that he grant them a mere County instead of a Dukedom. We left only a small garrison, it will be hard to hold it and no one would want to take it. We packed up everything of value, including a store of jewels we found in the darkest places under the castle,\" And so Soyguncu finished the tale of my adventure at Castle Inhanet to the assembled Inner Council in the throne room at Saray Palace in \u015eehir. I sat on my throne, hardly feeling as triumphant Soyguncu had sounded in the telling. I took some solace in the fact that the treasure I had taken would be sufficient to begin work on my legions. But other than that, I felt troubled.\n\n\"Gunes save us!\" Arkadas said, looking at me with shock, fear, and perhaps a little relief that I had not married the woman. The other members of the Inner Council, save one, expressed similar sentiments.\n\n\"You wish to formally annex Inhanet into the crownlands?\" Cin said, hardly seeming surprised by the story. Perhaps, once again, she had foreseen it.\n\n\"I already requested that the chancery produce a proper deed,\" I responded, but I could not even muster up feigned enthusiasm. \n\n\"You know the significance of this?\" Cin asked, smiling now.\n\n\"I am still not wed, and have no prospects of it,\" I said sullenly. The relief I had felt in defeated another enemy and taking her castle had quickly dissipated. I was left only with a headache and a vivid illustration of just how precarious my situation truly was. The dynasty, the empire stood on a razor's edge and I could see no way out. And underneath of this concern, I felt a lurking guilt that I could hardly grasp. I had killed an assassin before, in the heat of the moment. I rarely thought of him. He had threatened Arkadas, he was faceless. Empty.\n\nBut ever since I left Castle Inhanet I saw Cad\u0131's face, the tortured look in her icy eyes. When the immediacy of the attack faded I was faced with the fact that I had killed not just an assassin, but a lover (however briefly a lover). I had been justified in that. It was necessary for the preservation of my empire. But it was more than that. I had found a coldness I didn't know I possessed. A vindictiveness that I told myself I had used as a warning to my enemies but had felt natural and right at the time. It felt like the actions of a Sultanah.\n\nStrangely, I felt no guilt for these initial emotions. I welcomed them, they made me feel safe. I felt guilty that I did not wished to feel differently. That I did not cry for my betrayer or feel her blood on my hands. I closed my eye and I could see the foamy blood on her mouth just like the foamy seed that had been there just hours earlier. I felt nothing human towards her, not even the shadow of it. And I was relieved. And I felt wrong about that relief, because I knew it was right. I wondered what kind of person I was becoming in order to stay on the throne. Gunes sake, even going and agreeing to such a marriage had been an act from which I once would have recoiled. \n\nI did not openly acknowledge these feelings. I could sense a duality in me still. I was afraid of letting Varis get too close to the Sultanah's actions; the private part of me might finally revolt. I guess I knew that deep inside, part of me wept not for Cad\u0131, but for the innocence I lost in killing her. Luckily, Cin drew me back out.\n\n\"Not that\" Cin said, \"B\u00fct\u00fcn D\u00fcnya has been bleeding territories and fiefs for hundreds of years. This is the first time since Fatih II that the territory of the empire has expanded.\" I snorted.\n\n\"A rock sitting on top of another rock in the middle of nowhere, quite a legacy. Sultanah Varis the Conqueror,\" I said bitterly. All eyes in the throne room snapped to me. Their faces varied but they all spoke of confusion at my harsh words. They had come to expect more out of me and I dropped my head, shaking it. I found it hard to do my duty that day, an experience I would feel again many times. It never got any easier.\n\n\"Do not underestimate what you've done,\" Cin said, speaking as though she were trying to cheer me up as much as enlighten me, \"The size of the growth is immaterial. The most important point is that centuries of decline and atrophy had been arrested. You have reversed the course. Now we must keep that momentum going.\" I saw the other heads around the table nodding at what Cin said. I smiled wanly at her. It was not so much that she was right, but that people wanted to believe she was right. That was the source of the power. \n\n\"You're right. We should publicize this information to the people,\" I said lamely, but wishing I sounded more authentic.\n\n\"Remember sister,\" Kardes said, \"An Empire is not rebuilt in a single instant. You must take a first step before you can run.\" I looked at Kardes and appreciated her support. But she was 38 and childless and it reminded me of something more troubling.\n\n\"That might be true, but then, how is a dynasty rebuilt?\" I asked finally. At that moment, the door to the throne room fling open wildly. They battered against the walls before flopping back inside.\n\n\"You were supposed to tell me when she got back!\" a voice cried from the doorway. I, along with the rest of the Inner Council, turned and looked in the direction of the noise. I rolled my eyes as I saw my younger sister Nislani standing in the doorway with her hands on her hips.\n\n\"I told you I would...\" Kardes said.\n\n\"No, no more excuses. I have been trying to talk to our beloved...brilliant Sultanah Varis the Cocked for weeks!\" Nislani said impertinently. She was marching quickly down the middle of the throne room, looking self-assured and self-righteous. I felt a rage rising up inside of me, the same childhood anger I had towards my spoiled sister compounded by her disrespect for my office.\n\n\"I told you...\" Kardes tried again. I felt a brief moment of sympathy and appreciation for my older sister. She had, apparently, been running interference for me. But that did not diminish my anger at my younger sister. If anything, it intensified it.\n\n\"I told you that I was tired of being ignored,\" Nislani interrupted again. Now she was standing just before the table where my Inner Council was meeting. \n\n\"The guards should not have let her in,\" Got offered, looking at Saygili.\n\n\"We have been told that we cannot restrain her, but she has been getting violent with the guards. Abusive. In the interest of morale and in an effort to avoid allowing anything to get out of hand, I have told the guards to simply let her have her way,\" Saygili responded while raising his hands helplessly. \n\n\"Do not speak about me as if I am not here,\" Nislani spat.\n\n\"Sister, what are you doing here? This is a government meeting,\" I said finally, giving her an annoyed look. Everyone turned to look at me. I could see anger and also embarrassment on the faces of my confidants. They were clearly unsure of how to proceed. In honesty, I was as well. Even Cin seemed taken aback by Nislani's sudden\n\n\"So your family is less important than Government? Your sister doesn't matter?\"\n\n\"Kardes is sitting right there,\" I said, pointing to my older sister. I was remember Kardes words from early in my reign. Despite my rage at Nislani, I would control myself. It was beneath me to climb down to Nislani's level. Besides, an air of annoyed disinterest would really enrage her. \n\n\"I am your sister also! I am more important!\"\n\n\"How so?\" Kardes said, sounding a bit wounded. I ignored this exchange.\n\n\"You would have been invited if you showed any interest in government. As a member of the royal family, you are entitled to the level of involvement you desire. We just assumed you were happier playing like a child,\" I explained. Everything I said was the truth, but I let the words drip off my fangs. It actually felt nice, to indulge a little in my childhood games, even if I approached it as a Sultanah would. In a strange way, it felt like recapturing some of my innocence. How hardened could I be if I still teased my little sister?\n\n\"I don't care about government...\"",
        "\"Clearly,\" Cin said. The Priestess then looked at me, as if willing me to end this farce before it got out of control.\n\n\"Nislani,\" I said calmly and then I sighed, \"I will come find you as soon as the meeting is done. I do not have time for this now. But I promise,\" I said. Nislani shook her head and crossed her arms over her breasts.\n\n\"No, I want to do this now,\" she said. Before I could object, she simply started complaining, \"I went to the kitchen today and they say we have no grapes. Just none. I said that we always have grapes and they said that we can't afford them because of rationing. And that is another thing. The rationing. Nothing is like it was when Father was alive. We never had to worry about how much we spent and we didn't have to give food to the people. There was enough food for them to eat themselves. And there weren't so many. The city is so crammed up with people that you can smell their body odor from the walls of the palace. Which, by the way, is in a total state of disrepair. You send all of the male maintenance workers out to join your stupid legion and now the women have to do maintenance. But there is no one left to do the house cleaning. The palace is dirty. My room is disgusting. But I don't even care about that. None of this would matter if you had just done what you were supposed to do and get me another match. I am getting old. I need to be married...\"\n\nNislani's complaints continued but I was no longer really listening. I supposed that I could tell her that rationing was a necessity because of the war and that father had lived beyond his means and that the people did not smell simply to inconvenience her, but I did not. Instead, my head was slowly turning over some other ideas that she had raised. They were no definite thoughts, just a swirl of random ideas and concerns that had been swimming in my mind for weeks. \n\nI look at Nislani, saw her mouth moving but heard nothing. I felt disgusted by her childish bitching and I looked away from her. But I did not want her to know I was ignoring her, so I looked over her shoulder, where my eyes would still seem to be following her monologue. My eyes happened to rest on a tapestry showing Sultan Tarih II and his wife, Sultanah Cinsel. I had rarely noticed that particular tapestry but I was familiar with the subject. They had been amongst the most successful royal couples in the history of the Empire. I thought briefly of the history of that illustrious pair. \n\nSuddenly, all of my swirling thoughts crystalized and my stomach tightened. There was only one path out of the uncertainty and weakness that had surrounded my throne since I first sat upon it. It was the only solution to the problems I had been trying in vain to stop in any other way. There was a cure, but it felt to my heart that it was worse than the disease. Perhaps before that moment, I had not been hardened enough, threatened enough to understand that option. Now I was left with nothing else.\n\n\"Gunes no!\" I said to myself, but it came out more loudly that I intended. Eyes turned away from Nislani and returned to me. Nislani looked enraged by my sudden words.\n\n\"'Gunes no' what? You think I am making this up?\" Nislani asked haughtily.\n\n\"Quiet yourself, I am about to solve one of your problems,\" I said angrily. I felt my mouth moving mechanically now. When I had suddenly come to a realization about the course of action that I needed to take, it was like my emotions became completely overwhelmed and then shut down. My rational mind, the mind of the Sultanah, would not allow any internal objections. This was not a choice. This was what had to be done. In a way, it was like Gunes' voice was exiting through my mouth.\n\n\"What?\" Nislani asked with a snotty tone. I ignored her.\n\n\"Cin,\" I said, turning to my priestess, \"Correct me if I am wrong but Sultan K\u00e2fir I, was the first Sultan to convert to the Tanril heresy, was he not?\" Cin furrowed her brow but then nodded slowly.\n\n\"Yes...\" she said slowly.\n\n\"What does this have to do with me?\" Nislani said and again I ignored her.\n\n\"Now, Sultan K\u00e2fir I, his older brother had been Sultan before him. Sultan Tarih II, correct,\" I said, indicating toward the tapestry. I had always been an excellent history student and I damned myself for remembering these facts.\n\n\"Yes. Sultan Tarih II's sons both died in their early twenties without children and so Sultan K\u00e2fir I inherited from his older brother,\" Cin replied, still looking unsure about the purpose of my questioning. Nislani's fists were white and her lips were pursed tightly.\n\n\"And when Sultan K\u00e2fir I aligned himself with the Tanril Heresy, he was devout. He followed all of the precepts of the Tanril faith assiduously. Correct?\" I asked Cin.\n\n\"Yes, by all accounts his conversion was genuine, if misguided,\" Cin replied. \n\n\"And so he took a wife from Dusman, who was well-versed in the heretical religion and turned his back on Gunes preferred method of royal marriage,\" I replied. Suddenly, Cin's eyes grew wide. She turned and looked at the tapestry and then at Nislani.\n\n\"That is correct,\" she said, her voice sounding wary.\n\n\"Gunes was afraid that her blood would thin over time, was she not?\" I asked. Now Cin did not speak, simply nodded, \"And so the ancient Sultans protected Gunes legacy and Gunes rewarded them by providing able, capable sons and protecting against any otherwise expected...irregularities.\"\n\n\"Yes, but...\" Cin stated, but I kept going, I felt my throat tightening and I was barely holding back tears now. I was going to have to say what I had been thinking and, in so doing, put my thoughts in an actual, rational order for the first time. I had wondered what kind of woman I was becoming to protect my throne. I was about to remove all mystery. One who would do anything, who would show no mercy, and who would have no sympathy. Not even for myself.\n\n\"When the Sultans embraced Tanri they forgot about Gunes' blood. And so Sultan Tarih II was the last Sultan to marry his sister, Sultanah Cinsel. And Gunes turned her back on the Empire. We have known only ruin since. But I have returned to the truth path. I have, once again, embraced Gunes. Therefore, I must protect what remains of her blood in my veins,\" I turned and looked at Nislani now, through glassy eyes, \"Nislani, before the end of the month, we will be wed.\n\nEnd Chapter 8\n\n*****\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. Especially on a massive project like this, it took a year to write and could take longer to edit. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks.\n\nYKN"
    ],
    "authorname": "YKN4949",
    "tags": [
        "epic",
        "medieval",
        "serial",
        "cum play",
        "tranny on female",
        "shemale on female",
        "oral",
        "titty fucking",
        "cum fetish",
        "hermaphrodite"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-sultanah-ch-08"
}