{
    "title": "My Only Talent Ch. 28",
    "pages": [
        "Note: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. The delay in posting this chapter and perhaps the next few may be ascribed to some unexpected turbulence and travel in the author's schedule.\n\n\n\n\nAs I made my way downstairs from my dorm room for my hastily improvised evening Suzie snooping expedition, I passed the floor lounge and encountered our resident lounge lizard and TV troll, Joisey Al. He was so named because during the first few days of the fall semester, he greeted everyone with the same phrase, \"I'm Al from Joisey. You from Joisey? What exit?\" To be specific, he was from Bergen County, and his full name was Alphonse Luigi Ludovico Capozzi. \n\nHis father was one of the larger plumbing contractors in Bergen County, and his goal for young Al had been for him to graduate from Rutgers and become a registered professional engineer, so that when he joined the family plumbing business he could 'wet stamp' drawings before submission for permits, giving the senior Capozzi a leg up on his competitors. His father had also arranged a future marriage to the surprisingly attractive (judging from her picture, and despite her nickname of \"Moosie\") daughter of the chief building inspector of Bergen County, hopefully creating a family relationship greased pipeline for quick approvals and issuance of building permits and subsequent rapid fire inspections and approvals on job sites.\n\nAlphonse perhaps felt a little trapped by all these detailed plans, and with the supporting rationalization that out of state tuition at ESU was still less than the in state resident tuition in New Jersey, he applied to go to school at ESU. He must have had some pretty good grades and SAT scores to be admitted from out of state, and he seemed pretty bright, but it turned out he actually wanted no part of engineering school. Thanks to his two highly verbal grandmothers, he was native speaker fluent in Italian and German in addition to his strange native dialect of New Jersey English, and had taken advanced placement tests that yielded him credit for dozens of semester hours before he ever attended a single class at ESU.\n\nWhich was fortuitous, because so far he never had. Attended a class, that is. He racked up zero total grade points while attempting 12 credit hours in his first semester at school, but owing to the formula by which grade point averages were calculated, he was still in good academic standing. In fact he could probably skip class for three semesters and still be okay. He was willing to go back to New Jersey and take 'vocational ed' plumbing classes at junior college before he eventually joined the family plumbing business, but he was getting an approximately eighteen month 'paid vacation' at ESU before he flunked out, arithmetically and officially . Apparently his idea of a great vacation was watching TV in the dorm lounge, and as far as I could tell, he did nothing but that, save trips to the food lines downstairs, and journeys to his room for bathroom breaks and phone sex with his betrothed (Thank God that didn't happen in the lounge).\n\nI had never passed by the lounge without seeing him - he even seemed to sleep there. He could recite the dialog to every episode of Law and Order (and all its variants) ever aired, and did very well at Jeopardy, Wheel of Fortune, and all of the other TV game shows. He drew the line, though, just above soap operas, Oprah, and Dr. Phil; perhaps that was what drove his choice of early afternoon sleep periods. He was the first to wear that soon to be very familiar bewildered expression upon realizing that Suzanne was actually dating a lug like me, compounded when he later also saw Lara and Millie. He was still a little suspicious of me, perhaps because his residual Catholic education made him suspect that I had made a pact with the devil in order to get women like that. \n\nWhat he was wearing now made me highly suspicious, though. His family must have made peace with his choice of attending ESU, because one of his Christmas presents was a giant XXXL sized ESU logo 'hoodie footie', in authentic burnt orange with white trim and highlights. This huge fuzzy fleece pajama suit came complete with a special pocket for his smart phone, and several others for snacks, including a fully insulated pocket for a 12 ounce beverage can. Sitting in the corner of the broken down couch, he looked for all the world like a hibernating polar bear that had been accidentally spray painted burnt orange. \n\n\"Hey, Al!\"\n\n\"Hi Robbie. Pick up any supermodels over Christmas break?\"\n\n\"No, but I did meet a couple of spectacular ones, up close and personal, on a big yacht, even!\"\n\n\"Right, sure you did.\"\n\nI made my way down the stairs and surveyed the crowd in the lobby. The storm that had delayed Suzanne, Lara, and Gunter's return trips to Austin had also delayed many other returning students, and thus the concentration of 'new talent' that had arrived for this semester was enriched, greatly to my benefit, I hoped. I tuned up my Suzie receiver and went into search mode.\n\nThere were lots of attractive new coeds, and a small but non-zero set of them begin sending as soon as they laid eyes on me. The greater portion did not, of course, as was my usual experience. There were even a few that tickled my fancy, but unfortunately none of those were sending for me! The slings and arrows of outrageous fortune, I supposed. But my Suzie sensitivity certainly seemed to be improving with experience, and I was very interested to find that there were two new and distinct Suzie 'notes' that I was only able to identify after some study and consideration.\n\nThe first such note issued from a striking dark haired and blue eyed young woman named Jean Nancy Percer, who somehow managed to affect a bit of a French accent through her San Antonio drawl, introducing herself fairly loudly as \"John Nan See Per Se\" to the fellow standing next to me. She had clearly looked him over before making the first move, and when he didn't, she did. He looked like a Phi Iota Gamma pledge, but I knew he wasn't, since I had recently met them all. But he had all the trappings: an outfit right out of the Neiman Marcus Christmas catalog, a very expensive looking haircut, and a wristwatch that probably cost more than my tricked out new car, cool as I thought it was. He was complaining to her about being forced to play golf with his father and grandfather almost every day of Christmas break, with the compensating virtue that lunches at the country club were very good, plus it left his nights free for clubbing. It made me think of the movie \"Caddy Shack\", but it made young miss \"John Nan See\" send a restrained sort of lilting and conditional Suzie signal for him. \n\nWhile he was noticing her towering frame and massive breasts (just as big as Peggy's and on an even taller chassis) she was skillfully conducting an interview that quickly yielded a demographic sketch of the young man and his family. As the resulting profile moved from upper middle class to rich and trended toward truly wealthy, the intensity of her Suzie sending multiplied several fold. I had just encountered my first 'Pecuniary Suzie'. It would not be the last, and recognizing them as such would later save me and some of my buddies from certain doom and or intense unhappiness more than once. I made a note to spend a little more time learning about Jean Nancy, and studying her unusual Suzie.\n\nAs I was observing the two of them, I noticed two girls observing me! They leaned their heads together and spoke in whispers and giggles, cutting sidelong glances at me, and one of them who at first sent nothing suddenly launched a pretty loud and raspy Suzie for me, which grew louder as they talked more and more. I thought I recognized the other girl from last semester as having been seated at dinner with Orinda and Lizzy Faye a few times, but the one sending was definitely new this semester, so I inferred she was just learning of my reputation as 'The Master', and that her curiosity about sexual submission had captured her imagination, and sparked her signals. I had just encountered what I would learn to call a 'Curiosity Suzie\"- the first of many.\n\nThe rest of my research downstairs was unremarkable, and I returned to the room about 10 PM to find that my roommate Kevin had just arrived, twelve weather delayed hours later than originally planned. This semester found him embarking on making his first complete student project film in a genre randomly assigned by his professor. Kevin was to serve as writer, director, and producer with other students filling the other filmmaking roles on a rotating basis, such that each student would eventually do every functional task. This would be my first clue that Kevin had an unfortunate long term predilection for his randomly assigned genre: awful science fiction parodies. He had decided that his first film would be a very heavy handed send up of an early Star Trek film, tentatively entitled \"Star Trek Douche: The Bath of Khan.\" \n\n\"I'm going to make the script totally awful, but the film itself will be so visually compelling that people will want to see it again and again!\" he cried.\n\n\"With that title, you are half way there already, Buddy!\" I laughed, and rolled over to get some sleep. \n\n\n\n*******\n\n\n\nMonday morning my alarm went off at 5:30 AM and I had to think twice about what came next. New semester, new classes, new schedule, new routine. Monday, Wednesday, and Friday I had Conditioning with Saskia at 7:00 AM, followed by Multivariable Calculus, Engineering Physics, and Embedded Systems. Whew! Tuesday and Thursdays served up the lab for Engineering Physics and the only approved elective class I could fit into my schedule: \"Introduction to the Study of Language\". Maybe I could listen to my still unopened Rosetta Stone course that had been a gift from Adnan and learn Arabic during that period. Should be a blow off course, right? I also had my running plan for Tuesday, Thursday and Saturday \u2013 five miles of increasingly intensive sprinting \u2013 theoretically culminating in me having a lot more fast twitch muscle fibers than I began the semester with. \n\nI hit the line for early breakfast and compared to last semester there was almost a completely new cast of characters in the dining hall. I looked about in vain for Nora and Orinda in order of my prurient interest, but did not see either of them. Saskia had advised breakfasting on plenty of protein and water but not going too heavy on the carbs, and strongly recommended zero fat yogurt rather than bacon as my primary protein source. The yogurt wasn't half bad. It totaled up to my RDA for protein, but it didn't make me feel full. I wanted to listen carefully to Saskia's Suzie signal for confirmation of my theory on her budding sexual fetish, so I ate two sugary pastries and two sugar envelopes just to be sure. \n\nThe conditioning class was in Greg Gym right across from the dorm. Saskia greeted me with an evil smile, which she also bestowed on the other students. She did not send any Suzie for them, though! After a two minute review of our food diaries and a quick test to confirm our FitBits were recording properly, she proceeded to lead us in 15 minutes of a hyper fast combination of Jazzercise, Taibo, Kickboxing and simulated epileptic seizures. I thought I was in pretty good shape, but I was straining 5 minutes in, and a couple of the other folks had to stop before the end. I made it, but just barely. Saskia wasn't even breathing hard!\n\nShe went to each of us that were still standing first, referring to her notes and giving us specific exercises to do until she circled back to evaluate us.  Each exercise was perfectly designed to make us feel off balance, weak, strained and uncomfortable \u2013 to laser focus in on our weakest areas and break them down so our bodies could hopefully then build them back stronger. No pain, no gain - made incredibly personal and specific. She then turned her attention to the now recovering dropped out two, who had ceased their labored breathing and were therefore ready to be tortured some more. I lost all track of time as the ordeal continued. Just as I began to get the hang of a particular exercise and feel some balance and strength, Saskia would suddenly appear next to me and instruct me to move my hand out further from my body, or put my weight on just one foot, or hold my leg out farther, or whatever inventive wrinkle she could devise to make me feel even worse. I gritted my teeth and just tried to get through it, doing my best to suffer in silence. But most of the other folks were alternatively grunting and gulping air, making sounds like they were auditioning for a part as a medieval torture victim in a bad movie. I wasn't going to give her that satisfaction. \n\nMercifully, Saskia then announced that the final five minute cool down period of our class had just begun. She led us in another Jazzercise style routine, at only 2/3 the pace of the initial warm up, smiling all the while. \n\n\"I took it easy on you guys this first day, but Wednesday we will pick things up to the normal pace and keep it there!\" Stunned silence from all of us, punctuated only by labored breathing.\n\n\"I want each of you to find several free hour periods during the week that you could commit to a one on one meeting with me to go over your specific weaknesses and review our plans to address them. Email me at least three such one hour periods and I will review them all and tell you which ones will work for me. These will not be exercise periods but discussions, so you can eat your lunch during that time if absolutely necessary.\"\n\nMore shocked silence followed. My heart rate was starting to wind down a little, and as she dismissed us I glanced at the clock on the gym wall \u2013 0807 AM. I realized I had not even tried to listen in to her Suzie, plus I was drenched in fetid sweat, and my next class was at 0900! I almost broke my promise to myself to always use the stairs to reach my 8th floor dorm room, but I dutifully trudged up with my last bit of energy and took a quick shower before making my way north from JES to RLM for my first helping of the so-called multivariable calculus. Luckily, Oiler and already prepped me a bit, but I soon realized I would be calling on him a lot more this semester. Each new concept was not that tough individually, but they came at me at such a pace that it soon took a toll on my already glucose deprived brain. \n\nDuring my short break before my 1100 hours date with Engineering Physics, I did the reading for Math and started on the first assigned problem set. Conceptually okay, but it took time to work through the problems and check the answers. I made a few notes on things to ask the TA at my first opportunity for his office hours. Engineering Physics was a little better, owing mostly to the fact that I had a crackerjack Physics instructor in high school (which is not the norm, I assure you) and already understood the concepts pretty well. Still, just working through everything and confirming your results would take a lot of time. As I walked back south in a daze to go to late lunch at the dorm, I realized this semester was going to be much more of a challenge than my first, and I would have to be even more devoted to my 'school all week' pledge to make decent grades. \n\nMy stomach had been growling loudly since the midpoint of physics class, and by the time I reached the lunch line, I was desperate for some calories. I developed a case of tunnel vision, focusing on my plate and my stereotyped cutting, shoveling and chewing skills, and did not even notice the dark and lovely Lizzy Faye Reagan sit herself down to my immediate right until she spoke.\n\n\"Robbie! What exactly did you do to my roommate during Spring Rush?\"\n\nI'll never tell, I thought. \"She is a lovely young lady and I am proud to call her my friend!\" I replied, and turned to look at her. \n\nShe leaned forward and riveted me with her gaze. \"Orinda won't tell me a damn thing! She just smiles this damn smug smile and gets this funny look in her eyes.\"\n\nI tried to give her my version of that same look. \"Well. You did kind of throw her at me, Lizzy Faye. We just went around to some Spring Rush parties together. Wasn't that what you intended?\"\n\n\"I just wanted you to take her mind off breaking up with her dipshit ex-boyfriend. But I didn't want her hypnotized!\"\n\n\"What did she tell you?\"\n\n\"Only that you taught her a new way to eat candy.\"\n\nThat's Candy, I thought. \"You are going to have to ask her, Lizzy Faye.\"\n\nShe snorted and headed off towards the elevators. I looked around for Nora again and then my thick brain finally registered the fact that Nora was now staying at one of the co-ops west of the Drag. Suddenly my dorm was the setting of a very sad movie called \"Nora Doesn't Live Here Anymore\". Sniff. Sob. My eyes wandered around enough to notice the menu board detailing dinner, and I hatched an evil plan for Suzanne.\n\nI gathered myself and my stuff and took the stairs back up back to my room. I worked through a few more math and physics problems, making a few more notes to take to the TA's office hours later. I had found it was very useful to introduce myself to the TA's for each class early in the semester, and ask questions that indicated I was actually trying to master the material. It was perhaps akin to the process by which hostages are told to make personal connections with their kidnappers in order to reduce the severity of their torture. If they know your name perhaps they will treat you better. \n\nI then made sure I had the URL for the e-book for Embedded Systems and made ready to head out for my last MWF class today. I soon discovered it was more properly called \"how to make measurements with micro-controllers\" and relaxed a little. Oiler and Bigun had already explained to me that my new car's systems were chock full of Arduinos, which I at first thought was an exotic Italian carburetor, but which turned out to be a cute little single board computer. They told me about all the unreliable mechanical parts and linkages that the Arduinos replaced, and how it made hot rodding the car a software task, and showed me how to interface everything via the Bluetooth on my laptop or even my phone. They had explained the basics to me, and I sort of understood ADCs and DACs and numerical control, and began to look upon this class as applied electronic hot rodding, and vowed to make my new car a class project. I also vaguely remember that the little 'sniffer boxes' that Eddie Estigoy and The Cisco Kid had used to so skillfully hack the AG network to kill the videos of Lara were also little single board computers running Linux. Maybe I should know a little more about that, too.\n\nWhile I was walking to the little temporary metal building where the class was to be held before another giant edifice named for a big ESU donor could be erected, I got a text from Suzanne. She was back in town and going directly to TA her big section of Economics 301, and then would have office hours until 5. I love it when a plan comes together, and especially when the plan allows Suzanne and me to come, together! \n\nI texted her. \"Meet me at JES for dinner at 5? Kevin is out for the evening.\"\n\nShe replied. \"Very tired.\"\n\n\"Pizza night, slut.\"\n\n\"CU @ 5!!!!\"\n\n\"P.S. I love you\"\n\n\"me2\"\n\nEmbedded Systems was actually kind of fun, and the instructors were graduate students not much older than me. One of them reminded me of the 'Koothrappali' guy on Big Bang Theory, but taller, and he also seemed to be a bit of a gear head, so I figured I could get him interested in working on my car, and thus helping me with my class projects. May be if I could also get him laid this semester, I could even get an A in the course. There were two girls in the class, but neither of them sent Suzie for anyone there. I would have to find an environment where there were a lot more women around so I could listen for those that sent for him. I walked back south toward the dorm in a much better mood. ",
        "Although I should have hit the books, I spent next 45 minutes or so daydreaming about Suzanne's visit. I got a text from Lara inviting Suzanne and me over to her apartment for 'snacks' at 10 PM, and saw Suzanne's acceptance text before I could respond. Well, well. I knew I was going to have to hustle academically this semester, and try to limit my dating to weekends, but perhaps I could make an exception just this once. Speaking of that \u2013 I needed to make contact with Nora and perhaps set something up for this weekend. \n\nI then got two email invitations. The first was a reminder from the Dean of Engineering about the reception for Engineering Honor Roll students at the University Club under the eastern deck of the stadium. This was where I had already met G\u00fcnter twice, so I knew how to work the buffet line, although this occasion might just involve appetizers. I guess this counted as school work, right? The second was from Professor Lillehammer, to an evening reception at his house for a few students in the co-operative engineering track, and some potential employers. I knew I had to pick a summer gig soon, a message that was sure to be reiterated again and again until I committed to one. Perhaps I should take Lara and ask her to wear her highest of high heels? Click clack, professor. \n\nI made my way down to the dorm entrance closest to the building where Suzanne's class was letting out, and sure enough there she was, just coming through the door. I was stunned to find I could detect her Suzie before she even saw me, then when she did, her signal hit me like an explosion. I had heard people talk about their whole life passing before their eyes, but in my case my every interaction with Suzanne suddenly passed into my memory \u2013 that first sight of her running on the track, the ZZZ party, that first time in her apartment, the first walk over to Lara's place with her \u2013 it all zipped through my mind's eye like the best movie ever made. Every scene was right out of my girlfriend hall of fame gallery. When she made eye contact with me, it got even worse. I didn't know if I was standing or sitting, I forget to breathe, I forgot my name. But I knew then and there I would never, ever forget Suzanne.\n\nAs usual, heads turned as she walked toward me, and expressions strained as she fell into step with me and I put my hand on the small of her back and snuggled her into me. Guys and girls alike wore faces that said they just couldn't picture the two of us together. Too bad, suckers. We walked into the dining hall and got in line, the yeasty smell of cheap, high volume institutional pizza filling the air. I heard her Suzie buzzing and felt her hips pushing into mine. Life was good.\n\nWe took our trays to a table in a corner. I just stared at her, but she took up the conversational burden.\n\n\"I missed you Robbie, a lot.\"\n\nI knew I didn't need to say anything. Did she know how fantastic she was?\n\n\"I took your suggestion and (she made air quotes with her fingers) 'dated' some guys as a Dominatrix.\" \n\nI raised my eyebrows, but said nothing.\n\n\"It got them really hot, and may have done them some good, but it did little for me. No real excitement, no fulfillment. Well there was one thing that kind of fascinated me, but I will talk to you about that later.\"\n\nHer Suzie multiplied and wavered. It reached out and touched me, feeling more like an electric buzzer touching my skin than a normal signal that I sensed with my Suzie receiver.\n\n\"I need you to satisfy me, Robbie. I don't need to dominate you. I don't want to dominate you. I just want to have you. I want you to take me. Hard.\"\n\nI smiled. This was the best pizza in the world. \n\n\n\n*******\n\n\n\nDwight had been in Silicon Valley for six weeks now, ever since he left Carmencita standing at the airport closest to the rehab hospital in Texas. The agency had set up a legend for him and arranged for an interview at a growing navigation and tracking systems startup that was being targeted by several foreign intelligence agencies. The recent recipient of some key patents and some big government contracts, the company was in desperate need of more office space, and had just moved into some converted warehouses near Redwood City. The place still smelled like wet paint during his interview. It went well. But he had a new agency supervisor for this assignment, Roger Sherman, and the guy was a micro-manager and worry wart of the first order. That part was not going well. \n\nRoger fretted and worried incessantly about how the interviews went, what kind of impression he made, whether or not Dwight would get the job, and if he did get inside the firm, how they could detect and deflect the attempted penetrations of the company. He obsessed about everything, and insisted on meeting with Robbie face to face every evening so he could prattle on about it. His tradecraft sucked, too, as he always insisted on meeting in the same place: Buck's in Woodside for dinner. It wasn't that bad a drive, and Dwight could go under the 280 rather than having to enter and exit it, and the food was pretty good. The prices were high but Roger Sherman was paying. The parking lot was full of Tesla's and Ducati's, and the tables were full of VC's, lawyers and techno weenies.\n\nDwight knew he would get the job. His legend was as a new ESU computer science graduate, specializing in Ruby and Ruby on Rails. He wasn't even worried when the company announced a 'code-off' for the top 10 candidates to pick the final three who were hired. He just wanted to come in second or third so nobody would get suspicious of how good he was, and remind himself not to use any of the techniques that only the agency should know. He could do this job in his sleep. His main focus was sketching out the informal org chart of the company, and doing a little social climbing up and all over it.\n\nThe company's product was informally called 'map and plan zipper ware' because it could stitch together information from lots of different and disparate navigational and architectural databases (including many that were hacked into rather than formally interfaced) and normalize, compare and contrast them: highlighting changes, marking and ageing them and making pretty good estimates of how accurate the information was. Since much of the data had to do with both urban warfare or surveillance, or potential combat with air, sea and space borne assets, speed and accuracy were of the essence. Not to mention protecting the information and the technology from misuse by other governments. Dwight was not allowed to do anything about misuse by his own government.\n\nBack in DC, his lovely new fianc\u00e9 Carmencita was taking the agency medical and rehab division by storm. Besides them noticing how well his recent rehab had gone, she also got killer recs from the head of the new ESU med school, and some as yet unknown other Washington insiders who must have had a lot of pull. Dwight was unconscious when his case was referred to Carmencita, but he was sure glad it happened. Her background investigation was soon accelerated, and it was made even easier when it was discovered that both her father and older brother had dossiers already, due to their previous clearances as weapons techs in the Air Force. Some of her relatives and old roommates still got visits from the FBI field guys, but soon she was pronounced fit for duty. She already had several rehab clients under her able care, and took over Dwight's apartment while he was on assignment.\n\nThey kept in touch by phone, never discussing either of their day jobs or his location. He missed her terribly. Now that the agency HR weenies had pronounced her 'marriage material' he couldn't wait to get back to DC to marry her. Given his clearance level, they both had to endure months of weekly sessions with psychiatrists before that could happen. He might even be willing to give up his field work for her. Maybe that's what the shrinks wanted to know.\n\n\n\n*******\n\n\n\nLara had a strange schedule this semester. She had decided at the last minute to change her major to pre-law, which required adding some required pre-requisites into the mix, and rendered some of her past classes moot. Her late arrival in Austin had further upset her plans, and she had spent the afternoon and early evening running around to various professor's offices to get permission to be added (well after the normal deadlines) to the classes she needed. She would not get to see Robbie and Suzanne until later tonight, and by that time she would be a mess. All that polite time with her father and his new honey had been fine, but the dates with all those dumb ski bums and uptight MBA students had been tedious at best. She needed to get her ashes hauled big time, and Robbie and Suzanne were her only hope for satisfaction. They were also why she was changing her major, and squeezing in a course in human genetics.\n\n\n\n*******\n\n\n\nI don't know how many pieces of pizza I had, but it was fantastic. Suzane gave me the quick travelogue version of her time in DC with her parents, and glossed over her adventures as a Dominatrix, saying she would 'confess all' when we met up with Lara. Soon we were on the way up in the elevator \u2013 about the only time I used it was when I was heading up to the room for some frolic. The dorm did not disappoint \u2013 the yeasty smells of pizza and beer were readily identifiable, and her Suzie told me they were producing in her exactly the mood I was hoping for.\n\nJoisey Al was on duty in the lounge, and Suzanne did a double take at him in his giant orange and white hoodie footie pajama outfit.\n\n\"Christmas present, huh, Al?\" she said.\n\nHe smiled, a little embarrassed, but not completely cowed. \"Yeah, but I'd rather have you.\"\n\n\"Sorry, Al. I am afraid I belong to Robbie. He is the only one for me!\"\n\nI felt proud and wonderful, for about three seconds, until she whispered in my ear \"Except maybe for the next few Sunday nights!\" and pinched my butt. I could have done without that. I felt like an idiot having told G\u00fcnter to give her his very best efforts after all, and now wished we could just call the whole thing off, despite my curiosity about me having G\u00fcnter's wife Strelsa with him watching. I was not so curious about G\u00fcnter having Suzanne with me watching and/or joining in. But I had told Suzanne and G\u00fcnter I would go forward with their little plan to spice things us for the previously virginal and now married with an itch Strelsa and G\u00fcnter. Al did not feel any of my reservations, giving me a look that was at the same time incredulous and overtly jealous as Suzanne and I disappeared into my room.\n\nSuzanne apparently didn't feel any reservations either, as she glued herself to me even before the door closed and groped me like a wild woman. My first instinct was to let her Suzie be my guide, but then I remembered that she seemed to get off the best when I just took what I wanted and concentrated on myself. But her Suzie would not be ignored \u2013 it burned into my brain like a rotating lighthouse light on a dark night. It made it abundantly clear she was already well beyond tenderness and sweet nothings \u2013 she was ready for spanking and fucking \u2013 as hard as I could manage. I went back to my original plan \u2013 tease her slowly and make her crazy before I gave her what she needed. That meant my final hard fucking of her should be accomplished with my second and less sensitive erection \u2013 which also meant I had to make her get me off on that first one while teasing her. Duty calls!\n\nI sat back on the bed, against the little wall mounted cushion. \"Strip for me, Suzanne.\"\n\nShe stopped, flustered and angry, and then she got a really funny look on her face. \"You mean like Nora and Alley did?\"\n\nBefore I could respond, she continued. \"I may have to retell some of this story for Lara's benefit, but since you are so interested, I stripped for three men and a woman while I was in DC!\"\n\nMy face must have given away my shock, and she sent some 'female animal on top' Suzie along with displaying a mischievous grin. She began to bump and grind slowly, sans music, but with an attitude and grace that made it unnecessary. Her business like grey skirt with dark blue blouse and grey and white top set the mood \u2013 she looked like a very formal and proper lawyer that had just decided to strip in the courtroom. Very hot. \n\n\"I found a bar I actually liked in DC, and I taught the bartender there how to make the 'instant stripper' punch like ZZZ and PIG make at their parties. He was very good \u2013 much better than the frat boys. He was also very straight, very handsome and very much into me, and I knew I should reward him for making me such a good drink. I took my coat off, and after I finished the first one, I took off my gloves for him, slowly and seductively. He made it very clear that he was very glad to see me. So, I took of my little vest too. I had on a very sheer top, if you get my drift...\"\n\nI had to bite my lip to stop from saying anything. Her sneaky Suzie waxed further, and she continued to slither and dance, by now having removed her little vest top and unbuttoned the top two buttons on her blouse. She was cat nip, I was cat.\n\n\"He hurried to make me another drink, but I knew if I drank it I would probably get inappropriate. Besides, I had to leave for my date!\"\n\nShe turned her back to me and slipped the blouse off her shoulders, her back muscles rippling under her amazing olive skin as she did so. I knew those perfect breasts were just out of sight. \n\n\"On my 'date' I then helped a poor man that had placed himself in a bad position. I made him get naked and restrained for me, and then punished him with my whip, and made him see the error of his ways, and how he could make things better. I let him see even more of me than the bartender, Robbie my love, and he got very hard. I took that as a compliment, and then I untied one of his arms and let him jack off for me.\" \n\nI could not help the groan that escaped my lips, nor ignore the little cackle that escaped hers.\n\n\"He had a really nice cock, Robbie. I thought I was standing far enough away, but he really shot hard, and he almost got some on me. That did make me a little flustered.\"\n\nI was pretty damn worked up now, too, but I needed to break her rhythm. \n\nJust as she turned back toward me, I put my hands on either side of her neck and forced her to kneel. Her eyes flashed defiance, but her Suzie signal spiked hot and ready. Her blouse was now undone and spread open, and it was plain her nipples were hard as rocks. I gathered up her hair into one big knot in my right hand and as used it as a handle, making it clear I was in control of her head. Her Suzie liked it. \n\n\"Enough talk for a while, slut. Stick out your tongue and close your eyes.\"\n\nShe made eye contact with me for a second and I thought she was going to refuse, and then she smiled and complied.\n\n\"Just the tip of your tongue, my beautiful slut. Cover every square millimeter of my dick and get it wet.\"\n\nShe opened her eyes and gave me a smoking look, and her Suzie sizzled. My plan was working. She wanted hard penetration, now, but she knew it would be a while before she got it, and she had to do what I wanted first. She worked patiently on my cock, being achingly thorough.\n\n\"Now the balls, then repeat using your whole tongue.\"\n\nShe was too damn good at this, and she knew it. \n\n\"I am going to fuck your mouth now slut. Swallow every drop.\"\n\nHer Suzie blasted again. That was exactly what she wanted. She sucked and slurped, working and flowing around my thrusting motions better than ever before. Her tongue danced around the underside of my cock, perfectly choreographed. It didn't take me long to let loose, and she sucked me ruthlessly, draining it all, Suzie crowing in triumph. She must know how wonderful she was.\n\nShe did her little low excursion back and forth lip trick, and I stayed hard. Help me now, John Henry! Give me the strength to tease her just a little longer.\n\nI swept her onto the bed, putting the top of my arms on the bottom of her thighs and spreading them wide. I suddenly realized my entire upper body was screaming from what Saskia had done to us in her conditioning class early this morning. Every movement made me painfully aware of every muscle fiber that had been attacked. I did my best to ignore the uncomfortable signals, and locked my knees inside her thighs and pulled up and out, drawing Suzanne's perfect pussy up towards my mouth. She was dripping wet and smelled wonderful. I began kissing her just above her right knee, and her Suzie blasted impatience. Her breathing became hoarse and ragged, and her strong thigh muscles tensed and released, beautifully. Her Suzie buzzed through my head, and her pheromones pushed aside my awareness of being sore and strained. I lost myself in her, and not for the first time.\n\nI tuned for maximum Suzie, and fought her attempts to move her pussy under my mouth sooner than my plan. She never stopped fighting me \u2013 making me even more painfully aware of my sore arms and shoulders. Soon we reached a muscular compromise and she groaned as my tongue finally found her outer lips and lightly brushed them. She made an all new noise, to me anyway, and then growled even greater impatience. I was very systematic, darting in and dashing back out \u2013 teasingly and tantalizing her. I realized she was pushing her hips forward so far that she was only touching the wall mounted bed with her shoulders \u2013 her only other point of support being her feet planted on the floor. I finally reached her clit, just barely touching it with little butterfly flicks. She made noises you usually only heard in the dentist's chair.\n\nI burrowed in and used her Suzie signal to guide me. I circled and tweaked, heading for a crescendo I knew we would both enjoy. Her Suzie burned into my head, and I sucked on her clit, hard. She came in an ecstatic explosion, launching a sweet little dollop of extra juice, which I devoured with devotion. Her hips almost pushed me back off the bed. I fought back in and made her come again. Duty, you see.\n\nAs much as enjoyed her tongue generated climax, I realized I wanted to fuck her, and right fucking now. Tease me by talking about another guy jerking off for you, will you slut? I turned her over and jammed her up against the wall mounted cushion, and pushed her knees closer to the wall, raising her ass up. Maybe it was the suppressed anger of realizing the power she now had over me, the tension of missing her, the potential guilt from doing Candy and Orinda while she was gone, or maybe it was just the channeled energy of the legendary John Henry, the pile driving man, or perhaps all of the above, but I was now ready, willing and able. I put my knees just outside of hers, braced my right hand on the little painted bookshelf that some previous dorm resident had long ago mounted to the concrete block walls with unauthorized anchor bolts, and started in.\n\nShe spoke for the first time, through clenched teeth. \"Fuck me, FUCK me, FUCK ME!\" Her Suzie droned like a big overloaded truck, revving its highest in its lowest gear to make it up a mountain pass. Beautiful music matched beautiful sensations. Slow and steady into the hot and heady. She was hot, like soup that was almost too hot to touch. Almost. My cock seemed to grow as it touched her, expanding to fill her available volume, just as she squeezed down to maximize my sensations. I pushed steadily in, until my thighs were glued to her butt and she was as fully impaled as I could manage. I pulled back out and started back down, very conscious of my sore upper body but even more conscious of the luscious heat that surrounded me. \n\nI had a plan, but it didn't survive contact with Suzanne. I felt her responses and mine at the same time \u2013 we began to melt together. She pushed back against me, and I looked down like a spectator at her spectacular muscles moving under that spectacular skin. I slammed into her - she slammed back into me. I was an animal, and so was she. Suddenly she was coming \u2013 her pussy muscles were twitching and buzzing \u2013 and her Suzie signal drowned out all else. She grunted and groaned, and her breath whistled. ",
        "I was not ready to come. I was having a testosterone storm, a twister spun off by Hurricane Suzanne, and I wanted more heat, more penetration, and more nasty. Somehow the circulating hormones were making my sore muscles feel better. I almost liked the way they felt. The strange spiral of feelings grew and spun: I loved her but I was scared of her; I wanted to be tender to her, but I also wanted to penetrate her like a bull covers a heifer. And then perhaps my true evil nature was revealed \u2013 I pulled out of her pussy, spanked her butt cheeks hard about ten times, and then plunged into her steaming ass with no fanfare.\n\nShe keened and shook. She spoke, sounding like one of those heavily processed voices on heavy metal records. \"Damn you Robbie! Fuck it, then, fuck it hard!\" I had my duty to look to. I worked even harder for her than I had this morning for Saskia, and it felt a hell of a lot better, too. All the soreness was washed away and I felt only those places where my flesh touched hers - heat, and wet, and muscles pushing flesh aside. Step aside John Henry, Robbie Ass Fucking Roberts is in control up in here! \n\nSomehow she burrowed her shoulders down and reach back with her surprisingly long and strong arms and grabbed the back of my legs just above my knees. In perfect synchrony with my thrusts, she pulled as I pushed, urging me even deeper into her ass. It was awesome, but also a little scary. As nasty as I felt, and as hard as I wanted to fuck her, she wanted it harder and nastier than I did. Maybe harder and nastier than I could bring?\n\nThen her Suzie reached out to me, enveloped me, and mesmerized me. My ego felt a little better as she began to say \"Robbie! Yes, Robbie!\" with each exhalation. I felt her orgasm bubbling up and mine followed suit. Just as she drew in a big breath and then groaned and shook, I let loose in her hot little ass. It felt like all the tension in my sore muscles had found its way into the steaming hot pressure of my ejaculation, and I wanted to blow her head off with it. I read somewhere that estrogen and testosterone are the most dangerous drugs of all. I pumped into her a few more times slowly, feeling the aftershocks of all that sexual steam. I twisted around and slipped in between her and the wall, turned onto my back, and pulled her to me, my hands scrambling to find the covers and pull them over us. I realized the sheets were a wet and crumpled ball soaked with her secretions, and reached onto the floor for the still dry ESU logo blanket that Mom had insisted on providing for me. Suzanne tucked her head into my neck and began to rub my chest (now sore again) gently. Life didn't get any better than this. I must have made quite an impression on her, because she wasn't talking!\n\n\n\n*******\n\n\n\nSuzanne snuggled into Robbie and tried to gather herself. She had never felt anything like this before, even with Robbie. Not only was all the built up tension from all the time without him over Christmas break gone, but she felt suffused with grace and fully at peace, lying next to him, toying with this chest and nipples the way she knew he liked it. She didn't talk, she was afraid she might scare him with what she had on her mind. She knew she was a very smart girl with a bright academic future, and as well read and sophisticated as any militant feminist. But Robbie scared her. She knew she loved him, like she knew she had loved Mike until he was hurt, but this was entirely new territory for her. Suddenly one of those feminists' lectures she had attended came back to her, and she recognized her plight. Her brain was now fully bathed in oxytocin, AKA the love drug, the bonding hormone, maternal cement, the pussy plaster. And she couldn't be sure if this feeling was cause or effect!\n\nIt was an almost perfect altered state. If she could feel like this every night with Robbie, nothing else really mattered, did it? Her mother had told her she was amazed to discover when she had kids that her feelings for her own children completely trumped anything else she had ever experienced. Suzanne couldn't imagine anything trumping this! Robbie had told her he loved her, too, and she had discovered that her drive to dominate did not apply to Robbie. Right now she was one happy slut, and her very own highly adapted version of feminism revolved around being completely comfortable with her own slut hood. \n\nShe knew she could be happy with Robbie. Then she felt a little nasty shiver. There was one thing that could make this even better. Sweet Lara. Lara kissing Suzanne while Robbie took her hard, and then sweet Lara licking and lathing her with love and cleaning up after Robbie had filled her up. That made her feel both nasty and satisfied at the same time; accepted, loved, and excited all at once. She wasn't sure if it was better to have Lara do it to her, and have her do it for Lara. But then, she didn't have to choose one or the other, did she? She could have both!\n\n\n\n*******\n\n\n\nSuzanne gave my nipples an extra little tweak, and kissed my neck. \"I love you Robbie Roberts! Let's take a shower and go see Lara!\" I was so very, very glad to be back at school. I only felt a twinge about not studying tonight, but I'd make up for it tomorrow. It took us a while to get all cleaned up and dressed and ready to go. It was cool out, but not really cold \u2013 sweater weather. My upper body soreness had returned, but walking seemed to help some. I had only heard from Lara a couple of times during the break \u2013 mostly about boredom and missing me. I missed her, and it sounded like Suzanne did too.\n\n\"Robbie, Lara is going to be wicked horny.\" I assume she had communicated more with Lara than I had. \"She had a lot of frustrating dates in Colorado, but she is totally faithful to you and me now that Millie is out of the picture, so we just have to do our best to take good care of her tonight.\" \n\nI suddenly felt an unaccustomed surge of honesty. \"You know I love her too, Suzanne?\"\n\n\"We have talked about this, Robbie. I would think less of you if you hadn't admitted it to yourself some time ago. I love you both, as unlikely as that used to seem to me. I have never felt such love and trust with anyone.\"\n\nIt didn't take long to reach Lara's building. She greeted us at the door and she looked spectacular. She had on an apparently new red and white striped knit outfit that made her look like the most luscious wool wrapped and blond headed six foot peppermint twist candy I have ever seen. Oops! Candy. I guess I have to talk about that to both girls. I hoped they still felt \"love and trust' after that. We wrapped each other up in a group hug and she and Suzanne traded \"I missed you\" declarations of accelerating sincerity and tone. Soon kisses and hugs became very active caresses, and Suzanne took charge.\n\n\"Lara, I have missed you, and you have been away from us much too long. I think you need a spanking. Go get your little bag of tricks and meet us at the trapeze.\"\n\nLara drew in a huge breath and smiled widely. \"Yes Mistress!\" and exaggeratedly shook her ass at us as she made her way into the bedroom to get her bag of toys: flails, restraints, nipple clips, etc.\n\nSuzanne drew in a big breath too, and sashayed out to the 'erotic trapeze' hanging in Lara's living room and began adjusting the ropes to lower it slightly and make it ready for Lara's restraint. When Lara returned, Suzanne took control of her, stripping off the peppermint pajamas and tying Lara's hands securely above her head and her legs secured out away from her body with her knees about even with her waist. Wide open and vulnerable was an understatement. She took the cat o' nine tails, now apparently her favorite implement, and began smartly lashing Lara's breasts and thighs, making them instantly red. Might have seemed cruel to the uninitiated, but Lara's nipples got hard instantly, and her pungent pussy smell drifted over to my sensitive nose. She began to groan softly. \n\nSuzanne snapped the cat hard one last time, then said. \"Look at you little slut! You know you need to be punished, but still your little pussy drips and begs to be fucked. Master, I think you should spank her.\" \n\nI walked around, teasing Lara with long looks and sideway glances. \"She is a pretty thing, but she has been so bad. She is going to have to do a lot to make up for her absence. Listen up, slut! We are going to use you for our own pleasure, so make damn sure you don't come until I give you permission.\" I gave her ten hard spanks on each buttock, then caressed her tenderly, then spanked her again. \n\nSuzanne skinned out of her clothes and made her way up the trapeze like a circus acrobat, holding onto the chains well above Lara' face and putting her legs in a 'vee' with the apex right at the point of Lara's chin. \"Eat my pussy, nasty slut!\" Lara grinned openly and dove into her assignment with glee. \n\nI began to touch her legs, feeling the heat that still remained on the red areas from the Cat, and on her buttocks from my spanking. \n\nLara apparently knew just what to do to Suzanne, who began to coo and luxuriate over Lara's face, hardly a punishment. I knew she needed a little pain to get ready to let loose. I reached into the little bag of tricks and got some heavy nipple clamps, showed them to Lara, and then put one on each or her breasts. I moved them with my hands, watching them tug and stretch Lara's nipples. She screamed, muffled a bit by Suzanne's pussy.\n\nSuzanne looked down at the clamps, and smiled, then hitched herself up a little harder with a better grip on the chains and began to very frankly fuck Lara's lovely face. The grinding of her pelvis on Lara's jaw gave Suzanne a new sensation, and the additional motion of both their bodies swinging on the trapeze sent the nipple clips into a whole new orbit. They both got goose bumps all over. Simply beautiful.\n\nI reached into the bag again and came out with one of the set of assorted sized burnt orange butt plugs that Lara had gotten Suzanne as a joke. It was no joke now. I marveled at Lara's incredible ass for just a moment, then put my hands up (ouch) to steady my aim and plunged my tongue into her butt. Several quick motions to spread my saliva a bit, and then I pushed to putt plug all the way in, and secured it with one of the little strap on belts that came with the set. She shrieked, again muffled by Suzanne's pussy, which was now totally dominating her mouth. \n\nI moved to the other side and began tenderly kissing Suzanne's tight little olive skinned butt. She turned and looked over her shoulder, smiling at me, then turned back towards Lara and continued her face fucking routine. As I got closer and closer to her perfect little rosebud, she cooed to me. \"Yes, Robbie!\"\n\nWhen my tongue finally found its target, she made an even more sensuous noise, and said softly \"Oh, yeah, baby! I like that in my butt!\" I immediately took another burnt orange plug from the set \u2013 the next size up \u2013 that I had been holding in my hand to warm it up, and plunged it all the way into Suzanne's tight little ass. The soft \"Oh, yeah\" suddenly changed into very loud \"Oh! Oh\" and then a medium \"Oh, Fuck\" as their joint motions now impinged on two butt plugs, not just one. It hurt me, but I just had to raise my arms up and put my hands on Suzanne's ass \u2013 using my four fingers to gently caress the flanks of her sweet buttocks, and using my thumbs to press on the butt plug through its little belt, driving it slightly further into her. \n\nSuzzane dropped down a little, gripping her legs together around the chains and behind Lara's head, and began fucking her face almost brutally. I moved around just under both of them and alternated spanking their buttocks and tweaking the back end of the butt plugs. \n\nI said \"Lara, you may not come yet!\" and then \"Suzanne, come on her face\". She did, blowing out her breath like a snorting animal and rocking on the trapeze. Lara was a real trooper, as she redoubled her efforts, plunging her tongue into Suzanne even harder, the clips tugging on her nipples painfully as a result. Suzanne came a second time, then swung down in a gymnast's dismount and reached into the bag of tricks. She got out the biggest of the orange butt plugs, supposedly cast as a duplicate from a mold of some porn star, and then showed it to Lara.\n\n\"Time for an upgrade, you slut!\" She moved the strap aside and pulled out the smaller plug with a resounding 'plop', plunging her tongue hungrily into Lara's ass, and then slowly and relentlessly inserting the new plug. Lara made a very interesting assortment of new sounds during the process, with the terminal one being a long and keening wail. \n\nI took it as my cue. I stood up on the little step stool that made it easier to get up on the trapeze and lined up my cock for entry into Lara's pussy. My upper body screamed in protest, but I had to use my arms to support some of my weight to get the ideal angle for my plan. I slowly began to enter Lara. She was hot and wet and already shuddering. Suzane mercifully adjusted the chains, dropping Lara several inches lower and allowing me to reach my maximum penetration. Lara screamed. \n\nSuzanne bent her head under us and commented. \"I'm not sure you deserve that cock, slut, but you are sure getting it.\"\n\nShe began to tap the back end of the butt plug in Lara, sending shock waves I could feel on my cock. Lara made a funny little noise with each tap. Lara's Suzie signal sounded like an air raid siren, and I knew she couldn't hold out much longer. For that matter, neither could I. \n\nFinally I was ready to shoot. \"You can come now Lara!\" I said, and she drew in a huge breath and held it, then a felt a buzz saw Suzie ripping through my head as she came, and I did too. She groaned and pushed towards me, I groaned and pushed towards her, and it felt like a shot a pint into her. Every muscle in her body tensed up and then relaxed, and my upper body begged for release. I let go of the two chains and lowered myself off of the step stool, collapsing on the couch that was deliberately arranged with a perfect view of the trapeze. \n\nLara began to chant \"Oh my God!\" over and over, and I looked up to discover that Suzanne was on the step stool with her tongue tenderly lapping at Lara's pussy. Suzanne made guzzling and sucking sounds, while Lara just kept chanting. Finally Lara had another big orgasm and Suzanne smacked her lips, then began detaching Lara from the slings and arm restraints. They both lay down on the couch next to me, and Lara began balling like a baby. We all three did.\n\nLara began to talk softly. \"I love you both. I missed you both so much. I dreamed about touching you both.\"\n\nWe snuggled up on the couch, maximizing skin area of contact and kissing everything we could reach. I remembered a phrase from a church service I went to with Alley's family once. 'A peace that passeth all understanding.' That's the way I felt.\n\nSuzane spoke up. \"I love you both. I missed you so much.\" She paused for only a few moments, and then began to tell Lara the tales of her times in DC, beginning with all the details about who went to what party and who was wearing what. I almost drifted off to sleep until she started talking about running a personal ad and going on \"Dom dates\" with the guys that answered the ad. Lara peppered her with questions. \n\nShe told us about the Blue Spot and how she felt at home there, and the bartender and Kimmee Blue the hot waitress with the blue hair. She told us about the woman in the dance store, then she told about the guy who jacked off for her again, prompting Lara to say \"That's so nasty\" and then she told the story of the egotistic professor and what she did to him. It scared me. \n\nLara then went through her Colorado story of boredom and frustration, with Suzanne prompting her for details about the ski instructors. I almost missed the tease she threw my way, when she asked Lara if any of them were tall blond Austrians. Someone else needs a spanking.\n\nFinally there was a period of silence. I left out all the stuff in England and the Middle East (for security reasons, of course) and I began my tale of Spring Rush adventure, featuring the theme of 'wild college days'. I stuck to the chronological story pretty much, until Suzane interrupted. \"Do you mean water skiing Candy Matson, from the PIG party?\"\n\nI nodded and continued my story, leaving out some of the details, but including the visits to all the other houses, pledging UDP, and the gist of the threesomes with Orinda and Candy. At one point I thought Lara was whispering in Suzanne's ear. I ended with Orinda's announcement that after our wild Spring Rush days we were just 'friends without benefits', and closed with a reminder about how I was telling them all about it.\n\nThere followed a long period of silence that made me very nervous. Suzanne broke it. \"Are you talking about Orinda MacDaniel? Smart, exotically beautiful and so black she is almost blue?\"\n\nI nodded again. Suzanne snorted. \"You little fucker! I just met her. She is in my Eco 301 section this semester, and I have to admit she is hot.\" That sounded positive, didn't it?\n\nLara asked. \"Is that the same Candy we saw in the photos from the party? The one with the amazing tan?\"\n\nI nodded again. \n\n\"Is Candy a friend with or without benefits?\" Lara asked. I was amazed at her reaction.\n\n\"She didn't say it explicitly like Orinda did, so I'm not sure.\"\n\nSuzanne looked at Lara in a strange way, then changed the subject!\n\nSuzanne began. \"Robbie, let's talk about Nora.\"\n\nThat got my full and undivided attention. She continued.\n\n\"Lara knows I want to bring Nora to bed with us, but we don't want to overwhelm her and scare her away by going too fast, of course.\"\n\n\"Of course\". Are you fucking kidding me? You two are both on board with me fucking Nora? Luckily I only thought that last part, not said it. \n\n\"And as it happens, Nora has a very definite plan for the rest of the semester. She is a girl who know what she wants. She is going to keep us all at arm's length until Spring Break.\"\n\nThat's March. Hell's bells, the semester will be half over by then. The brain between my legs was on the verge of panic.\n\n\"She apparently has some major projects and papers that have to be turned in by Spring Break. But after that she wants to let her hair down a little. That girl is really coming out of her shell, so to speak!\"\n\nOn me please, Nora, on me.\n\n\"She wants to spend the first three days of Spring Break having Robbie all to herself. She plans a trip to see the Alamo \u2013 has it all mapped out.\" Suzanne's tone was totally neutral. I couldn't tell if she hated the idea or loved it or what. \n\n\"Then she is going to let Robbie cool his heels for a while as she spends the next three nights with just us girls, so to speak!\"\n\nLara and Suzanne exchanged knowing glances. I was awestruck. Couldn't I at least watch?\n\n\"Then for the rest of the semester, before she goes off to grad school, she wants to take us on in any combination that is available!\"\n\nHoo-Haa!\n\n\"Actually, she said Robbie convinced her she should do it.\"\n\nLara laughed. \"Do tell\".\n\n\"He said with her academic record and career plans, she was going to be in a position of promise and power wherever she goes. Since she is so hot, sexual offers, power plays, and sexually charged situations and negotiations will be inevitable. The real question is how well she handles it.\" \n\nLara nodded, thoughtfully, and Suzanne continued. \"So she needs more sexual experience and confidence. She needs to know beyond a doubt that she can take on and totally satisfy any man or woman, and that she is highly desirable and therefore always should be able to deal from a position of strength. Spending time with us will make her feel both confident and desired, plus she will learn all of Robbie's favorite tricks, giving her sexual power over any man if she wants to use it. That's some pretty smooth bullshit, Robbie. I have to give you credit.\"",
        "\"It's all true, beautiful, that's why it's so smooth!\" I said.\n\nLara looked thoughtful. \"So she is going to approach her time with us with the same vigor, rigor, and thirst for knowledge that she applies to all her school pursuits?\" She paused, we nodded. \"Nora's going to jump up and fuck our brains out, people!\"\n\nSuzanne looked smug. \"She's a great cook, too!\"\n\nI was so happy I almost forget that the Candy issue was unresolved. Lara had not, but she changed the subject again.\n\n\"So, Robbie. What's the latest with Millie and Jay?\"\n\n\"Seems to be going well. The families are bonded, and they are planning to get married his summer.\"\n\nBoth of them looked incredulous. Lara was surprisingly challenging. \"We better get Jay some cruel shoes. He may be too nice a guy to be hard enough on Millie to get her off.\"\n\nI felt pretty good about that. \"I think he can do that.\" I decided to not use the breaking a horse analogy with this audience, nor the staked out mare. \"But I'm not so sure about the politician thing. He is on his own on that one.\"\n\nSuzanne snorted. \"That might be a problem. Can you imagine if Millie got an internship in the White House? She would get wet walking in the gate, and do anybody from the advisory boards on up if they just stood still for few minutes. She would make Monica Lewinsky look like a girl scout!\"\n\n\"I was totally forthcoming with Jay about that. He says he has a plan.\"\n\nSuzanne shook her head. \"I sure hope it works!\"\n\nLara twisted her hair like a little girl until she was sure we were both paying attention to her. I was reminded of Peggy doing her Betty Boop thing. I got hard again. \n\nLara said, softly. \"So I miss Millie, I really do. And I think y'all do too. I want to be at my best for Nora, don't you?\"\n\nWe waited her out. She looked hot. \"I think we need.....................another trainee! Sort of a 'practice squad' for Nora, don't you see?\" \n\nSuzanne folded her arms together in front of her and looked like she had caught Lara with her hand in the cookie jar. \"Who did you have in mind, Lara?\"\n\nShe paused and looked back and forth at us. We both knew, but we wanted her to say it.\n\n\"Candy!\" She finally said. \"Does she have the right personality to be a trainee?\"\n\nI gave them the one additional detail about what Candy had said to Orinda. Lara's face got red. \"Sounds like we will have to come down on her hard to get her in line at first, but I think she has real potential.\"\n\nSuzanne got her Dom look on her face. \"Robbie, will you give her our proposition? Total obedience and devotion to us for three weekends? Anything we want, any way we want it? Hummm?\"\n\n\"I will speak to her. But I want it to be clear. I am the Master. Of you all!\"\n\nThey both smiled in faux fear. \"Yes, Master! Suzanne smiled down at my growing erection. \"Are you going to be hard on us Master?\"\n\nI sure hope so.\n\n\n\n*******\n\n\n\nMy Tuesday - Thursday schedule was a little less hectic than MWF, but force of habit had me awake early, and hungry. I felt pretty good when first I awoke \u2013 until I tried to get out of bed. Every muscle north of my belly button shrieked in protest when I tried to move. Saskia's Monday muscle madness, plus all my exertions for Lara and Suzanne's benefit last night, had come home to roost. Saskia had certainly been successful in targeting the weak spots of my upper body, which apparently was every muscle I had there. My legs were simply sore, but by comparison to my arms and shoulders that was nothing. \n\nI got out of bed slowly, planning every movement. Would a hot shower help, or a cold one? I tried it both ways and neither seemed to help much. Raising my hands above my head to shampoo my hair was torture. My normal routine of vigorous drying with a towel was out of the question. I rejected my normal tee shirt and opted for a button up one that I would not have to put on over my head. I sure hope this got better before Wednesday's 'full speed' workout. Ouch!\n\nI stuck to the stairs instead of the elevator, but it was a real test of will. The cast of characters in the dining hall for breakfast was different from Monday too, and it included both Lizzy Faye and Orinda, seated together. I loaded up my tray (carefully) and sat down with them (tenderly).\n\nLizzy Faye was back in interrogation mode. \"Well it's the man of mystery! Tell me, Robbie, are you dating my roommate now?\"\n\nOrinda looked a little uncomfortable. I just smiled. \"She is a lovely young lady and I am proud to call her my friend.\"\n\nLizzy Faye was undeterred. \"Friends with benefits?\"\n\nOrinda spoke up. \"No, Lizzy. Just friends. Maybe you are projecting a bit, like the lecture in Psych yesterday mentioned?\"\n\nLizzy Faye's face froze. Orinda had clearly struck a nerve. Interesting. I would pluck the same string. \"Lizzy Faye, I do find you very attractive. But my social calendar is pretty full right now. Let's just keep it hold for now, shall we? Let the tension build and see what happens?\"\n\nHer jaw literally dropped, but she said nothing. \n\nOrinda piped up again, wide grin on her face. \"Maybe y'all could do laundry together again?\" \n\nLizzy Faye kicked her under the table, and I made my slow and painful exit to brush my teeth and get my backpack. I had time between classes to work through some things and catch up, but you did have to be very prepped and ready to get your physics results complete during the allotted lab period. I felt pretty caught up early in the afternoon, and made my way (gingerly) over to the UDP house to see what was going on.\n\nA bunch of guys were hanging out in the great room, shooting the shit: who had drop out of school for flunking classes, who broke up with who over Christmas break, changes of majors, one guy whose dad died of a heart attack, and two ESU SAE's that got killed in a single car accident on Christmas eve. Rumors of a new football coach in the offing, a sex scandal in the basketball program office, and a bunch of other apocryphal party stories of doubtful veracity. There was to be 'sock hop' style dance Saturday night at the UDP house, with attendance mandatory for pledges. The theme was rock and roll, ala the song \"Saturday Night's All Right for Fighting\" with open invitations to hot independent and unattached coeds very strongly encouraged. \n\nOiler came out and joined the group, and I got him to help me with the first chapter problems from math, and solicited his commitment for a little more help in that course this semester. My 'pledge trainer' joined in and said he would send me an email with some links to UDP frat history and famous alums that I had to study for a test just before spring break, and told me the chapter's expectations for the prank that we 'spring pledges' would have to devise to prove our worthiness. Professor Lillehammer was rotating out as our faculty sponsor, and our assignment was to prank the 'new guy', Professor Red \"Rock\" Tappert. He was a computer science guy with a PhD from MIT who had been teaching at Virginia Tech, and ESU offered him a full professorship and a research foundation of his own in order to entice him to Austin. I was supposed to do a little research to figure out how to really give him a worthy UDP prank style welcome.\n\nAt this point my favorite cook came out and announced the supper line was open: fried chicken, mashed potatoes, lima beans, collard greens, and banana cr\u00e8me pie. I knew it was a good idea to pledge UDP. It already felt like home here. As I walked back to the dorm I even noticed that my soreness had faded quite a bit. I suppose I was ready for another conditioning session, even at Saskia's 'full speed' pace. Wednesday evening I had the \"Honor Roll\" reception at six, and Thursday night was the 'co-op engineering' reception at Lillehammer's place, and then the dance on Saturday night. Dates to make, but first to sleep.\n\n\n\n*******\n\n\n\nDwight got the job, to his new supervisor's great relief. Buck's had a full bar, and Roger Sherman took full advantage of it, suddenly in a celebratory mood. He didn't order any food, so it only took two drinks for Dwight to consider Roger 'over-served' and the steely eyed bartender was looking askance at them already. He began to talk a little too loudly about their mission objectives, and Dwight had to remind him of the standard opsec protocol. Bucks was not a good place to get loud, and Roger was not a fun drunk. Dwight had ordered a burger and put it on Roger's tab. Dwight was glad he had abstained from the booze, and also relieved that he got Roger into an Uber to take him home. Roger could make his way back to get his rent car later \u2013 he seemed to come here every night anyway.\n\nDwight drove back to the little house he had just moved into, shared with three other guys, none of whom were home right now. He had lucked into the place on the physical billboard at his new employer when he went in for his first interview. It was expensive because it was so close to the Stanford campus (you could see the SLAC site from one of the balconies), but nothing else about it justified its cost. At least he had an off street parking space. He got out his laptop and began further research on all the people mentioned in his offer letter and all the other stuff that came along with it. He posted his acceptance and began to build a plan for who to schmooze. He had kept his language skills off his resume, figuring it might be useful to eavesdrop surreptitiously in Mandarin and Shanghainese around the break room. He doubted he would encounter many conversations in Italian or Serbo-Croatian, but his Russian might come in handy. \n\nIt hadn't taken him long to move in \u2013 he was traveling pretty light on this trip, but he actually needed to acquire some more stuff to fit his own well-crafted legend. He had profiled a few of his target 'schmoozees' from their social media to learn their interests, and now he would look into their credit card records to see where they shopped, and when, so he could arrange to 'just run into them' at the right times and places. He sincerely hoped none of them played golf \u2013 he hated golf, but around here perhaps Frisbee golf was just as likely. Sometimes the credit card data turned up some interesting stuff \u2013 like weekly one night hotel stays pointing to an affair, or credit card balances climbing out of control pointing to a drug or gambling problem. One team of elves back at the agency was putting together a summary report covering all employees that summarized such potentially useful data, and another was looking into the company's vendors and investors. \n\nHe was only thinking about Carmencita these days, but he read somewhere that when you are not looking for women is when they find you the most interesting. One next door neighbor at the house that he met while moving in was a receptionist at a VC firm on Sand Hill Road, and she was quite obviously trying to hook Dwight up with her little sister, and the cute young waitress at the bagel shop nearest the house had put her phone number (along with a big flowery hand lettered 'Have a great day! Lisa' on Dwight's ticket yesterday morning. Where was she a year ago?\n\n\n\n*******\n\n\n\nI managed to survive my trial by Saskia Wednesday morning, at full speed, but was much too busy breathing and hurting to snoop her Suzie. I did have enough oxygen during the workout to notice that two of the other class members were incredibly fit looking women, who were struggling like I was to get through the routine. While I was toweling off after the workout, I thought one of them said to the other \"that's him\" but couldn't hear anything else. Friday we were going over into the bowels of Belmont Hall to do some more testing and 'strength work' rather than such intensive cardio. Any change of pace was welcome. \n\nI made my way back the room and showered and headed out for Math. My diligence in doing and reviewing the first day's homework was reinforced - there was a pop quiz and I did fine, mostly because it was all stuff I had reviewed with Oiler last night. Physics and Embedded Systems were actually pretty cool. I came back to the dorm, recopied and improved my notes, and did the prep for Thursday lab in Physics. I texted Lara to make sure she could do the reception at the Lillehammer's, and told her I would call her tonight about what to wear. Since I knew both Lara and Suzanne had other plans for Saturday night, I decided to waste no time in going after Candy, and texted her about the sock hop dance at UDP, and that I needed to talk to her about something else. \n\nShe replied right away. \"More training?\"\n\n\"Perhaps a very advanced and stimulating course. You have the proper pre-requisites, but you must make a firm and irreversible commitment to advanced learning for several weekends. I won't be the only instructor.\"\n\nThere was a pause. \"Will you promise to be firm for me?\"\n\n\"Very firm, both in the physical and the metaphysical sense.\"\n\nAnother, longer pause. \"Let's talk at the dance. I'll meet you Saturday at UDP at 8.\"\n\nMy mental check list moved down to Sunday. I guess I had a date for Sunday, all right. With Suzanne and a married woman, with her husband there to watch. I wanted wild college days, right?\n\nI went to the early dinner line, making sure to have a full feed before the honor roll reception, just in case the appetizers were sparse or bad. Dinner was good, and I met a few interesting new dorm residents in the dining hall, without even listening for any Suzie signals.\n\nI put on my slacks and blazer best and walked down the hill to the stadium, having to detour around the north end to get around to the club entrance on the eastern side. The University club d\u00e9cor was Longhorn everything \u2013 wall paper, carpet, and memorabilia on the walls and in display cases, burnt orange and white serving trays, the whole nine yards. The Dean was there, and he even knew who I was (shock) but very few other faculty members showed up, and few students that I knew. The appetizers were just barely. I made small talk with a few people who looked vaguely familiar and was ready to chalk it up as boring and leave early when the Dean cornered me and introduced me to a tall woman in her 40's that somehow reminded me of Elizabeth Ashcroft Knowles. Her face was just as plain, and she was taller, more muscular, and with very different coloring, but her eyes sparkled like diamonds and her look was confident and riveting. \n\n\"Veronica Tappert, Mr. Roberts. Pleased to meet you!\" Suddenly a strong and raspy Suzie sounded, for me, and for the Dean, and the waiter with the appetizer tray, and the other three guys standing nearby. Whoa!\n\nI was temporarily speechless. The brain between my legs took over and since the other one couldn't speak, and it ordered my arms to take her hand and kiss the back of it. The sudden connection made her Suzie signal seem so strong I felt like I had been Tasered by it. \n\n\"Oh, Dean Gregory. I think I am going to like Texas a lot!\" \n\nThe Dean puttered off to make some more introductions. Talk was that he was about to be 'booted upstairs' into and overall university system administrative post and there was much speculation about who the new dean of engineering would be. Veronica took my arm and placed hers atop it like I was escorting her to a debutant ball, and steered me over near the window. It wasn't for the view of the soccer stadium or the snarled evening traffic on IH35, I was sure.\n\n\"I am so pleased to meet you, Mr. Roberts. I have heard a bit about you from my old friend Dorothy Lillehammer. As you may know, my husband is joining the faculty here this semester. He is very excited to be a full professor, especially at his age.\" \n\nI got that Suzanne vibe, and knew I did not even need to draw a breath, as she was going to be speaking for a while.\n\n\"I have been accused of robbing the cradle, so I might as well tell you myself, my husband is only 23 years old.\" She looked at me expectantly.\n\nI couldn't resist. \"What's the big deal? You can't be more than thirty!\"\n\nShe shivered with delight, and gripped my forearm as if she was going to climb me like a tree. \"Oh I do like you! Shameless flatterers are often delightfully shameless in other areas.\" She gave me a very shameless look, then she continued. \"Dorothy told me a little about your 'special project' for her husband's class.\"\n\nI wasn't going to walk into that one. I just smiled.\n\n\"Your girlfriend made quite an impression on Professor Lillehammer. It looks like we might share an interest. I provide my husband with a certain amount of discipline, balanced with excitement and certain incentives. I like to think that's one of the reasons he has achieved so much. But I am always looking for ways to make things better for us.\"\n\nI had a sneaking suspicion that discipline excited her husband, perhaps among other things. I had an idea about how to find out more.\n\n\"I am sure you could provide a lot of excitement, Veronica.\" I said with arched eyebrows. She bit her upper lip and drew in a big breath. I then did my best to tune her Suzie channels for historical black box data and fantasy images.\n\nNo effort was required. The images hit me like a ton of bricks. Her husband liked to watch. Veronica liked to put on a show for him. They were very well matched. But she needed some Texas based co-stars now. Wow!\n\nShe leaned in even closer. \"I know I am extremely plain looking, Robbie. But there is nothing else plain about me!\"\n\nOnce again I put my mouth in gear before fully engaging my brain. \"Veronica, I have a good friend that is even plainer of face than you are, and she is one of the hottest, most sensual women on the planet. From the second time that I looked at her face, and every time after, I see her as a beautiful total gestalt of a woman, not just her outer packaging.\"\n\nShe leaned against me as if stunned, then kissed me gently on the cheek. \"You are an interesting man! Let's talk more soon. I have to go work the room now.\" \n\nShe knew exactly where the windows and curtains were and the lines of sight to everyone else in the room. She slipped by me like a pickpocket and squeezed my butt for just an instant, pinching lightly with her fingernails. An electric current shot through me and my cock was instantly hard. What was I getting myself into here? What kind of pranks would her husband really enjoy?\n\n\n\n*******\n\nAfter a phone consultation, Lara wore a new outfit I had not seen before instead of the 'sex suit' that had made such an impression in Professor Lillehammer's office. I walked over to her building and we took my car, which was parked in her extra space, over to the reception. I stopped in the garage and just looked at her. The outfit was red, with a very modest high neckline that did less than nothing to hide her spectacular bra-less breasts underneath the thin fabric. From the waist down it was anything but modest, and combined two features I had never seen together before. It had slits running up the sides all the way from ankle to waist, flashing her legs whenever she moved, and making it impossible to know whether she had panties on or not. Then the dress narrowed dramatically to a little circle of fabric around her ankles. \n\nThis had the effect of calling complete attention to her ample ass, and the way she walked in short steps inside that little circle of cloth made her ass move all the more tantalizingly. Her blonde hair was up, up, up, bee hive style, and she had on red five inch heels that probably should have had a 'fuck me' logo stitched into the sides. Red lipstick in exactly the same shade as her dress, and pair of long diamond pendant earrings that somehow drew the eyes right to her breasts completed the picture. \n\nShe was almost seven feet of raw sex wrapped in a very pretty package, and if I let her walk down Congress Avenue she would have caused multiple traffic accidents. Watching her slowly lower herself into MY CAR was one of the greatest moments of my life. ",
        "A few minutes later, watching her uncoil from the car when parked across the street from the Lillehammer's house was even more fun. It was a very nice house in a fairly bourgeoisie neighborhood, and the guy across the street was trimming his topiaries in the fading daylight as we arrived. He ruined two of them before he just put the shears down and stared at her. He was lucky he didn't lose a finger. \n\nI knew this reception was not going to be boring, but at that point, I had no idea how unusual it was going to be...."
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "anal",
        "oral",
        "creampie",
        "voyuer",
        "threesome",
        "college",
        "exhibitionism",
        "spanking"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-28"
}