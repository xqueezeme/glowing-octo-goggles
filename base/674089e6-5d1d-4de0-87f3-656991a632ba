{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 24",
    "pages": [
        "My apologies for the delay between chapters. I write when I travel; flight delays and nights in the hotel are a particularly good time. However my travel over the past couple of months was down a bit, but now I'm back; for those who sent notes hoping I'd continue, please rest assured that when I get tired of writing this story I will write one more chapter to let everyone know.\n\nStandard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\nSunday dinners at Norm and Irene Curran's house had always been a time for Gwen's parents to pronounce judgement on the firm, the family and the world, and today was no different. The Lady did her best to appear like she was following her mother's current line of reasoning as she and the others sat at the big dining room table, but it was difficult; Gwen was distracted by the Slut's constant attempts to get her mind to wander to the perverse and very dangerous secrets she was hiding from some, but not all, of the people in attendance. \n\nOther people had them too, Gwen reasoned, glancing at Alison and Jason seated to her left, ones she would probably still be ignorant of if her daughter hadn't left her computer on for her snooping mother to find. On the other hand, Adam and Natalie, seated across from her, were not quite so good at hiding them...no, that's wrong, she corrected herself. They're just more trusting with whom they share their secrets. Gwen felt an irrational flush of pride at being included in that inner circle. \n\nShe looked at Irene Curran, seated at one end of the table, with feigned interest as to her opinion on the sad state of the recent law school graduates coming to the firm, and therefore young people in general. Even you probably have secrets, Gwen thought, and Dad too, although the idea they might be of a sexual nature was absurd\u2014 she just could not imagine them having the capacity for that. Theirs would likely be unreported income, offshore accounts, that kind of thing. Gwen smiled at the possibility that maybe her mother had never had sex at all\u2014perhaps she had secretly paid someone to bear her children for her. She did have the capacity for that...\n\n\"You don't agree?\" Irene Curran asked, seeing her daughter's smile and returning it with a stare. \n\nThe Lady was not so pleased with the answer bordering on outright rebuttal. \"I think you're generalizing, Mother. Not all young people are like that. I know quite a few I think are doing just fine.\" She again glanced at her daughter, as if to emphasize the point. Alison smiled and looked down at her plate, blushing in silent thanks.\n\n\"Hmpph. Well, some might turn out alright, I suppose.\" Irene pointedly focused on her granddaughter with a look of skeptical evaluation. \"But she has the advantage of being a Curran.\" Obviously the Nelson half of her had not contributed to the outcome. \"How she was raised was the key, that's no secret, something I took great pains to keep you on the straight and narrow with. I suppose I was mostly successful.\" With that, she began to lament the efforts of \"parents these days,\" intent on educating Alison in the proper methods of childrearing. \n\nNo longer the focus of her mother's scrutiny, Gwen shifted in her chair, wiggling her bottom against the hard seat. Speaking of secrets, she had one right now, something even Tim didn't know about, at least not yet. The spreader she had inserted before leaving home tickled her rosebud with every movement, sending shivers through her. She shifted again, producing another delightful tickle, and wondered if Natalie had hers in as well. \n\n\"I swear Gwen,\" Irene Curran declared drily, interrupting her lesson, \"it must be all that time you spend riding that has made you fidgety as all get out. You were always able to sit so still and ladylike when you were younger, before you developed that unhealthy obsession with horses. With all the riding you do I've always worried about your health, that perhaps you would even disfigure yourself and develop bow legs like some sort of...cowboy.\" Her pronunciation of the word made clear her opinion of the profession. \"I could never understand why you don't at least ride sidesaddle? Proper women did for centuries.\" \n\n\"Women have not ridden like that for quite some time, mother, but if I did and were to grow faint and swoon I might slip right off and fall to the ground, which would be most unladylike,\" Gwen playfully replied in a Southern Belle drawl long heard but little used. \"With a horse between my legs I have much more control.\" Who's in control when it's Tim\u2014or Natalie, or Cricket\u2014between them would be an interesting topic for the dinner table, she thought mischievously. \n\nAli again looked down at her plate, this time to hide her smile. Get her, Mom! Aunt Natalie could use some help knocking Grandma down a peg or two!\n\nIrene Curran thought the mention of anything between a woman's legs was not a proper subject for mixed company much less the dinner table, and she weighed the words, taking them apart and examining each one to decide which to take offense to. Her daughter's response was most certainly sassy, but she sensed a more private rebuke would be of greater value. She reluctantly let it pass with a raised eyebrow and a \"hmph.\" \n\n***\n\nThere was still plenty of daylight left when they returned home, and Gwen only had to bend at the waist once as she stripped for a swim for Tim notice the adornment between her cheeks. He chuckled. \"I figured you might be wearing that.\"\n\nGwen straightened, suddenly a little concerned. \"Why? Could you tell?\"\n\n\"No, but you had it the past couple of times we've been at your parents...you act like you're getting away with something behind their back, like sneaking a cigarette in their garage.\"\n\n\"You know I don't smoke,\" Gwen replied with a smile.\n\n\"Yeah, well...you gonna wear it swimming?\" \n\n\"I don't think so...I wouldn't want to lose it...\" She doubted her rosebud would give it up so easily for it to fall out on its own, but turned her back and again bent over, lewdly thrusting her rear out at her husband. \"Could you take it out for me?\" \n\n\"Be glad to...\" Tim grasped the flared head between two fingers and slowly pulled, intently watching the wrinkled muscle grasp at the teardrop-shaped invader as it was withdrawn, snapping closed once the rounded tip was free. He dared a touch, his finger gently tracing a line down between her cheeks, her asshole winking back at him in response. \"You really like wearing it?\"\n\n\"If I'm in the right mood, yes,\" Gwen replied, patiently remaining bent over to let him touch, amused by his apparent fascination with yet another part of her body she herself had spent years pointedly ignoring. \"It tickles.\" \n\n\"I never really knew how sexy your butt...all your butt...is.\" Tim's finger began to gently circle her tightly closed muscle as if to make clear what he was admiring at the moment.\n\nGwen shivered and her ring again contracted in response. She willed herself to relax, ready to welcome the finger if it tried to enter her. \"I guess...I never thought of that part as sexy...\"\n\nRather than test the muscle's strength the finger withdrew and Tim headed for the door, his cock bouncing at half-mast and showing its admiration as well. \"Swim?\" he asked over his shoulder. Gwen smiled, nodded and followed. \n\nThe muggy heat made the water seem almost icy as they dove in. Tim's balls pulled tight to his body with the shock, but his length only gave back a little of what had grown in the bedroom and soon regained its stoutness and more after he moved up behind Gwen at the pool's edge. Strong arms enveloped her as she reached for her drink sitting nearby on the concrete while his body gently but firmly pressed in from behind, and the masculinity wedging itself underneath her rear end and between her legs did not ask for permission to make itself at home. It wasn't rock-hard yet, but it would be very soon, and she could feel the warmth of his staff between her lips, contrasting nicely with the chill of the water. Gwen wiggled back against him, creating some space between herself and the wall to allow room enough to bend forward a bit more in obvious invitation. \n\nGwen was aroused, but not to the point where she had to have him in her right now; her orgasm was a hill she was just now beginning to climb. She had always liked starting their lovemaking in the water, but the thrill had always been more mental than physical; the idea of being outdoors where they might be seen was an aphrodisiac she was just now becoming comfortable with. She preferred dry land for what came after, though, for when their play turned serious. The water somehow muted the physical intensity of having him inside her, as if creating too much slickness and lessening that delicious friction. She missed the warmth two bodies generated too, preferring to feel the heat radiating from the man she was impaled on rather than having him cool to the touch. And of course, buoyancy made a good pounding much more difficult, requiring effort to avoid being pushed away as his efforts grew more pronounced...but the bold confidence he was displaying in pinning her against the wall now was incredibly exciting in itself, and she was aroused by the idea she would not have a say in when and where she would be taken. Gwen slipped one hand between her legs to gently pet the now fully-erect beast insistently prodding between her lips, giving the bottom of the mushroom head a few strokes with her fingertips before pushing it up and in. The head momentarily hung up on the ring of her opening before breaking through with a pop, and Tim thrust forward to slide the rest of his shaft home. \n\nFirm hands roughly flattened her breasts as Tim tried for more leverage while he pushed himself deeply into her pussy, his cock relishing the warmth surrounding it after its exposure to the cool water. The little waves his thrusting created slapped noisily against the poolside while Gwen resolutely absorbed each firm stroke, arms locked at the elbows and hands gripping the pool's edge. Splashes crept up her back as the fucking being delivered became more urgent, Tim's body squeezing the water between his midsection and her ass out of the way. \n\nTim seemed to have no problem whatsoever with the physical limitations of sex in the pool and did not announce his impending orgasm, his urgency giving it away, powerful exhalations through gritted teeth with each slam into Gwen's sex that finally ended with a strangled grunt. She imagined the pulses filling her as he twitched in time to each one, finally ending with a contented groan. Gentle waves still lapped about their bodies when he withdrew, a milky ribbon of white following his cock out to float suspended below the surface. Guess the filter will have to get that, he thought with a chuckle.\n\nGwen took his laugh to mean a job well done and turned to kiss him. \"That felt like a good one.\"\n\n\"Yeah...\"\n\n\"I'm going down to the house. Coming?\"\n\nI already did, the teenager in him replied, but Tim just grinned and followed along. The setting sun and humidity did little to dry her body as they made their way back down the hill, and he stood by patiently, unsure what to do next as Gwen carefully dried herself in the kitchen. Task completed, she flipped the towel over a nearby chair and without a word started down the hallway with her husband close behind. They climbed on the bed together, Tim tentatively reaching for her, awaiting instructions, unsure what was expected of him. It would be a little while before the mouse sleeping between his legs would again become the beast...\"can I do anything for you?\" He finally asked, his face close to hers. \n\n\"You could touch me, maybe kiss me up here\u2014\" her lips briefly found his\u2014\"and down there. I'd like that. A lot.\" \n\nHe smiled. \"Sounds like fun. Did you want to use some of your things in the drawer, too?\"\n\n\"No, just you for now.\" Gwen appreciated the patience in his efforts, not rushing to her sex, teasing her with kisses on her neck and shoulders for some time before moving lower, as if sensing the pace she was hoping for. Her breasts were teased just the right amount before he captured a nipple with his tongue, and his callused fingers were delightfully slow in moving anywhere beyond the silky thatch covering her mons. \n\nA finger finally did stray further down, lightly dragging across her engorged clit and drawing an involuntary gasp. It seemed content where it was, tormenting the hard little nub even as Tim's lips and tongue began to make their way down her stomach. It was not until she felt her fur grazing against his cheek did the finger dip lower, noisily squishing in and out of her opening. \n\nGwen wondered how much of his orgasm remained in her. \"I can go clean up first, if you want,\" she belatedly volunteered, soft kisses already landing on the space just above her clit.\n\n\"I'm good,\" he replied, and was true to his word, moving between her legs and working his tongue down her slit in slow motion. He paused and a finger drew some of the wetness from her, pushing down between her cheeks to paint her rosebud, drawing another gasp. \n\n\"Is that okay?\" came the voice from between her legs\n\nGwen's hips twitched in response. \"Uh-huh.\" The tongue returned and the finger continued to stroke, the tip now occasionally pushing against the muscle for a brief moment before resuming its stroking. Another push, this time enough to slide most of his fingernail past the ring. She hissed while arching her back and grabbing her tits in response.\n\nThe finger stopped where it was. \"Too much?\"\n\n\"No, alright, nice\" she muttered, settling, her jaw clamped shut like Tim's had been earlier. \"Not too far though.\" The thumb that slid into her pussy while his tongue worked her clit was a pleasant surprise, and she reveled in the pure sluttiness of having both openings filled through her climax. \n\n\"Good one,\" Tim offered as he looked up, wet stubble glistening, his hand still between her closed legs in what Charlie sometimes called \"the ole' six-pack carry.\" At least the vice-like grip her thighs had it in when she came had loosened...\n\nGwen smiled, eyes still closed in post-orgasmic bliss. \"Yeah.\" \n\n***\n\nShe made sure to have dinner ready when Tim got home Tuesday night, knowing he would also need time for a shower before going back into town for the Planning Board meeting. He was seemingly in and out of the house in a flash, and after seeing him off Gwen settled in front of the TV. \n\nThe shows she normally watched were not holding her interest tonight; there was always office paperwork or barn chores to do, but she hesitated, looking for a little more excitement. The video had been exciting, the Slut slyly offered, and it did not take much cajoling for Gwen to go find where Tim had hidden them on the top shelf of his closet. The cover art of \"Sapphic Sensuality #7\" caught her eye as she retrieved the discs, two impossibly beautiful nude women embracing on a bed in a way that hid their naughtiest parts. Now that's what I always thought porn stars looked like, she thought with a smile while the Lady dismissed the picture as heavily touched up. She carried it back to the living room to find out if they looked that good in the video.\n\nHer clothes stayed on but she locked the kitchen door anyways for fear of interruption and the embarrassment of having to explain why there were two Lesbians having sex on her television. The credits rolled, introducing Amber and Brigitte, and the screen brightened to focus on a massage table. A leggy brunette lay face down on it, only a skimpy towel that barely concealed her ample buttocks for cover, while a statuesque blonde stood above her gently rubbing oil into the brunette's shoulder blades. The blonde was nude, breasts impossibly firm for their size, and bare puffy lips peeked over the edge of the table. \n\nNot the women on the box, Gwen realized, but still very beautiful. The cinematography\u2014the Lady sneered at the word\u2014looked professional when compared to what she had watched with Tim. But the women didn't seem \"real\"; not like the couple in the video and certainly not like Charlie and Corinne, or Ali and Jason. The women were beautiful, incredibly so, Gwen thought, and she was light years away from being in their league. Still, Gwen wanted to believe the way Tim looked at her\u2014and others, she reluctantly admitted-meant that she was at least passable from the male point of view. \n\nShe watched for ten minutes before stopping the DVD, right after the camera zoomed in to focus on the blonde's finger- Brigitte, Gwen had decided, she looked like a Brigitte\u2014sliding between Amber open legs and into her bare sex. The women were beautiful, the picture clear and the scene well-shot, but it lacked something. Their excitement was scripted, their passion acted out, not real, not something Gwen could relate to. Over-acted was perhaps a better description; she saw none of the caring and quiet passion she felt with Natalie or Cricket, the need to make the other happy while appreciating what was being done for her. Instead the two women moaned, gasped and writhed in a way that she guessed people assumed two women would behave in this kind of situation. If that's what people pay to see, then any video with Cricket and me would be in would be absolutely boring. She took it back to the bedroom, to switch it with the video she and Tim had been watching. That one was more her speed, and while she was sure the people on it had been paid for their performance, she was still struck by their self-confidence; despite their physical flaws they seemed happy to perform for the world to see. Amber and Brigitte were professionals, but Bart and Desiree\u2014probably not even her real name\u2014were more like hobbyists, looking for a thrill...\n\nSapphic Sensuality #7 was returned to its spot in Tim's closet, next to the box containing Nearly Neal. Gwen had put it there rather than with the others in her nightstand, telling herself that it could be useful to have a replacement if one of the ones in the drawer broke or wore out. The idea of one \"wearing out\" had amused the Slut to no end. \n\nSpeaking of self-confidence, she thought with a smile, remembering that night at Mrs. Danning's house and how Neal had allowed himself to be revealed and restrained on that device\u2014that Queen's Cross\u2014to a crowd of strange women while they tormented the real-life model of what sat on the shelf as part of a sick, twisted party game. That cocky smile had never left his face while he fought to deny the various players victory, briefly disappearing when he could hold out no longer before returning as soon as he was spent. He seemed to know the power he held over an aroused woman.\n\nThat game was sick, twisted, and sexy as all hell, the Slut added, and Gwen was forced to agree. She remembered handing out the plastic tubes filled with faithful recreations of a woman's sex, watching intently as the women lined up to be the one to make him come, and how disappointed she had been when Gita had not let the winner pull the sleeve off the massive cock buried inside to let his seed fly. Gwen was curious if the output of a man deprived for a week increased significantly, and if the size of the cock and balls producing it had an effect as well, but instead he emptied himself into a recreation of sixty-something year-old Dorothy's vagina. Age doesn't matter for that, Gwen told herself, to a man a pussy is a pussy, something of immense value. It doesn't lose effectiveness or wear out, and the adult male is always ready to put one to the test no matter the age of the owner. She had little doubt Neal would have been equally happy in the real thing, and so of course one a little younger, say, like hers for instance, would not have been refused either.",
        "The video was forgotten as she looked up at the long carton, lost in thought, before carefully taking it down and sat on the edge of the bed. The lid was delicately removed and the flyer read again, Gwen noticing this time that it was \"dishwasher safe,\" and \"for added pleasure, put it in the microwave on half power for about fifteen to thirty seconds.\" Never thought of that, she had to admit. A warm one would be nice...she lifted the massive length out of the packaging, remembering how heavy it had felt that night she had delivered another copy of the same magnificent tool to the winner of the party game. It was no lighter now and she held it with both hands, examining it, noting the level of detail right down to the bulging veins tinged blue that ran its length, just like the real thing. \n\nGwen gently laid it aside as if afraid of hurting it and undressed for bed. She took the instruction's advice and carried it to the kitchen, waiting there naked while the microwave worked. It was warm to the touch when she removed it, warm like Tim's was when his was engorged, and the dishtowel she had retrieved was wrapped around the length to keep the heat in while she made her way back to the bedroom. \n\nGwen luxuriated in the feel of bare skin sliding under a crisp cotton sheet\u2014God, why had it taken so long to find out how good that felt?\u2014then took a deep breath and willed her mind to some order. Watching Amber and Brigitte had lit a low flame under her libido; the Slut already had her imagination working to bring the heat up. \n\nGrowing up, Gwen's version of fantasy had centered around the horses she would own and ride someday. Her employment with Miss Ritter had added a few modest scenarios of a more carnal nature, but the Lady had always firmly tamped those out when they arose, and marriage, business ownership and motherhood had effectively made imagination a wasteful exercise\u2014the here and now had been her focus all those years. \n\nBut then the dreams started, and unspeakable acts soon followed, acts which soon became not only accepted but the building blocks for a more perverted fantasy world. It had taken Gwen a while to feel comfortable that the even the most sick and twisted scenes and images she could conjure in her imagination could safely stay there, locked away from a reality where they would certainly have dire consequences. And tonight the Slut had already begun to further elaborate on one that had first started soon after that night at Mrs. Danning's. \n\nThe scene had become more explicitly enhanced each time it had been imagined since that night, and now she was there again, naked save for a pair of black high heels, their straps winding up her calves. You don't even like heels, the Lady sniffed, but Gwen thought they made a naked woman look slutty\u2014in a good way, though, and the straps coiling around her legs only added to her wickedness. Neal, his confident smile and his mighty erection were there as well, restrained for the guests to play with. \n\nBut tonight another plastic tube was available for the guests to use on him, one meticulously modeled after Gwen's sex. She had no idea how that was even done in real life, but it wasn't important right now\u2014what was important was that it was her pussy that he seemed to enjoy most, groaning whenever it slid down his massive length. In the end the contestants all insisted on using hers, and it was with great pride she watched him fill it with an impossibly large load of sperm. \n\nThe vibrator produced a very satisfactory orgasm shortly thereafter as the Slut began to suggest ways Neal might find his way inside her after she had used her mouth to help him recover, even as his reproduction found her open and waiting.\n\nAfterwards, Gwen found herself more troubled by her lack of remorse over the imaginary infidelity than the act itself. Just fantasy, the Slut assured her. You never owned those horses you dreamed of when you were a kid, this doesn't mean you'll end up riding Neal in real-life. It's just fun to think about. The Lady, Gwen knew, felt the point was being missed.\n\n***\n\nThe plain cardboard box was mixed in with all the others delivered on Thursday, it's only distinguishing feature that it was addressed to Gwen rather than the business. She knew what it was before opening it but opened it right there in the office, thankful the trucks were all out. As expected, the box inside was the same kind that had housed Nearly Neal up until his relocation to her drawer the other night. The flyer inside was the same as well, a forest of faux cocks gracing the front along with the logo and instructions, and underneath that was Tim. \n\nGwen was momentarily afraid to pick it up; she knew how lifelike Neal's was, but this was a penis she had seen up close, had touched, sucked and fucked. It really looked like it had been taken from her husband in the midst of an erection...she scolded herself for being silly and removed the length from the box. Not as thick, long or heavy as Neal's, but still better because the real-life version was hers. \n\nThe Lady brusquely reminded her of the paperwork that would not wait, and Gwen set the very realistic reproduction of her husband on a stack of invoices like a paperweight. It fascinated her though, and she found herself glancing at it as much as the monitor. So real, so hard, just begging to be used...she would not leave real Tim in that condition and an image of his very hard cock came to mind, sticking out of his workpants as he stood by her desk. It was hard in her imagination because she was naked, leaning back in her chair with heels up on the desk, legs spread wide for her husband to openly ogle. It did not take much convincing to match the pose in real-life, clothes discarded, the imaginary employees downstairs real enough in her mind to make her touch herself. The position she was in now would make it tough for Tim to fuck her, but if she were bent over the desk grasping at the invoices, paperwork be damned, while he hammered into her...would he be quiet enough to avoid alerting the workers downstairs as to what was going on? Would she want him to be? She took her time summoning her orgasm with the fantasy, the dildo and her fingers, an ear open to unwanted visitors. A very satisfactory climax eventually reduced her to gasps and twitches as the chair squeaked beneath her. \n\nNeal was nice, Tim's was her favorite, she decided after redressing. After all, wasn't that who she should be fantasizing about? At least on this the Lady could not disagree. All that was missing was the body it was attached to, pressing her into the mattress, the sparse hairs on his chest tickling her nipples while a stubbled cheek nuzzled her neck. Gwen partially followed the Lady's advice to make it her one-and-only. Neal and the other behemoths in her drawer were boxed up rather than thrown away altogether, stored on her closet floor should Natalie or Cricket ever need or want them.\n\n***\n\n\"I've never seen your mother pull off her prey like that.\" Natalie swung the uncinched saddle off of Tigger, her bare breasts bouncing with the effort, and carried it to the tack room. \n\n\"When? What do you mean?\" Gwen was close behind, her smaller breasts still wobbling as she removed Dart's saddle, the sweaty horse shaking its head in appreciation. \n\n\"At dinner on Sunday. You cut her down pretty good with the whole sidesaddle thing. I was sure she was gonna carve you up for that, but it almost seemed like she didn't want to mess with you.\" \n\n\"Oh, that. I didn't think I was that bad. I mean, how silly is the idea of riding sidesaddle in this day and age?\"\n\n\"It's very silly,\" Natalie agreed. \"What girl wouldn't want something big between their legs? And no, to the rest of the world what you said wasn't bad at all, but to Irene Curran, no rebuke or correction is too slight an offense to be met in force. But I think she's starting to understand that you just might be a match for her. Tell the truth, the lasting memory of the look on her face was the second best thing I saw on Sunday.\"\n\n\"And what was the best?\"\n\n\"Well, Tim sent me the video I asked him for.\" \n\nGwen instantly knew which one. \"He didn't!\"\n\n\"Hey,\" Natalie replied with a smile, holding her hands up, \"you said if I asked him...\"\n\n\"I know, but...so you watched it?\"\n\n\"Uh-huh. Thought it was cool as hell. You looked so cute, running around like you stole something! Adam thought it was great, too.\"\n\n\"Oh my God! Adam saw it?!\"\n\n\"No sex or anything, so I thought it would be safe for mature audiences.\"\n\n\"So you showed my brother a video of his naked sister?\"\n\n\"It's not like he got all hot and bothered, Gwen. He was just amazed that his formerly stuck-up big sister has progressed to the point where she was running around a hotel hallway like a sorority pledge being hazed. He wants to give Tim a big 'atta boy' for getting you to do that, by the way. \n\nGwen shrugged. \"He told me I should, so...but still, you let Adam see me naked!\"\n\n\"Family members see each other naked all the time,\" Natalie answered dismissively. \"Especially families that don't have a bathroom for every family member.\" Gwen doubted that, but held her tongue. \"Doesn't mean they gonna start boinking or anything...\" She giggled and gestured to her sister-in-law's bare torso. \"After I'm done grooming Tigger, I'll do you too.\"\n\nGwen looked down at the fine layer of Dart's chestnut-brown hair sticking to her sweat-soaked skin and smiled back. \"I think you have the same problem.\"\n\n\"Wanna finish up with these guys and go groom each other?\" \n\nThe cool spray of the shower quickly washed away the traces of the nude women's mounts, and each took their turn washing down the other. \"Tim like the fuller look, or does he prefer something neater?\" Natalie asked as she reached from behind Gwen to gently tug on the resurgent growth between her legs. \n\n\"He says he likes it however I like it,\" Gwen answered truthfully, pressing back into the soft body behind her. \n\n\"Promise me if they don't shave you bare at this photo shoot you'll let me do it,\" Natalie murmured into her ear. \"I think you'd look hot with that look. But in the meantime, let me shampoo and dry it.\" Gwen leaned back against the body behind her as her thickening tuft was slowly soaped, rubbed, and stroked to create a lather. Fingers casually and carelessly ran across and into the lips below, and the hand shower that rinsed her was expertly aimed at her clit. \n\n\"Let's go dry and style it,\" Natalie whispered just loud enough to be heard over the running water, and the women toweled each other off before Gwen followed the blonde in the bedroom, allowing herself to be laid back with her head on the pillow and her legs open to the woman even now crawling between them. She looked down her body at her sister-in-law crouching over the vee of her legs, gently blowing on the mostly dry thatch, occasionally combing through it with her fingers. \"Still a little ways to go before it gets as full as that first time I trimmed it,\" Natalie mused, examining it closely. \"Even then, it wasn't that long. It's kinda silky, not wiry like mine gets.\" She dipped, her tongue gently pushing deep into her lips, dangerously close to her opening, and then slowly dragged up. \"Mmm, you taste like leather,\" the blonde coo'd. \n\n\"Stop that! I do not!\" \n\n\"You do! Maybe it's because you don't ride sidesaddle. Here, taste this.\" Natalie hurriedly inserted her middle finger as far as it would go, curling it collect some wetness as she pulled back, shuffling forward to put the digit to Gwen's lips while their mounds pressed together. \n\nShe had tasted herself on Tim's cock in much the same position, but this seemed more...deviant. Gwen tentatively accepted the finger being pushed between her lips, playfully sucking it as she licked the tip. \n\n\"See? What does that taste like?\" \n\n\"I don't know...me, I guess? But not leather.\"\n\nNatalie rose enough to get her hand between their two bodies, inserting the other middle finger into herself, again settling on the mons below and beginning to grind as she again offered her finger. \n\n\"What's this taste like?\"\n\n\"You...\n\nThe blonde grinned. \"Uh-huh.\" She lifted just long enough to again coat the finger with her juices, then settled and resumed grinding as she again gently offered the digit to Gwen's lips. \"Mmm, you give good finger...\" She began to gently push it in and out, stroking the tongue in an effort to get it to stroke back. Gwen took the hint and sucked her as she would Tim. \n\n\"Sorry it's not the real thing, and that there's no creamy surprise inside but it really does make me understand why a guy likes this so much.\" The wet finger was slowly withdrawn and dragged down Gwen's neck to her nipple even as their hips continued to lewdly hump.\n\n\"You feel wonderful, but I could use a real one inside me right now. I can make do with the next best thing,\" Natalie said huskily as she rolled off towards the nightstand she knew held what she was looking for. \"We need to get you a strap-on...\" The drawer was pulled open, vibrators still there, but only one dildo. \n\nNatalie held it up, looking questioningly at Gwen. \"Neal?\" \n\nGwen rolled to her side and smiled. She suspected her sister-in-law was just being nice; as much as she loved Tim's penis, there was no mistaking one for the other. \"No, that's the one we had made of Tim.\" \n\n\"Well, he's got a beautiful cock, then. Love the shape\u2014looks like it gets in all the right places. What did you, umm, do with your other ones?\" \n\n\"Oh, I put them in my closet,\" Gwen hurriedly announced, sliding off to the bed to retrieve them. \"I figured since I've got that one, I won't need the others.\" \n\n\"Oh...did Tim not like the competition?\"\n\n\"Oh no, it's not that, it's just...\" Gwen couldn't put her finger on it, exactly. She shouldn't have need of another man's penis if she had her husband's -whether real or reproduced\u2014right? \"Now that I have that one the others feel a little like...cheating.\" \n\nNatalie laughed. \"I don't think dildos count as cheating, especially if Tim already knows about them. Just think of them as, oh, I don't know, just another tool in the toolbox. He didn't mind you using the other ones, right? He still gets to supply the real thing. And since it's not cheating,\" she continued, plugging the Magic Wand and turning back to flash a mischievous smile, \"Mind if I give Tim here a workout?\"\n\nGwen looked at her sister-in-law, then the penis in her hand while the Slut goaded her on. \"Uhh, sure, of course,\" she said quickly, putting down the box of alternates she still held. \n\nNatalie was already on her back, the vibrator between her legs. \"What would be even kinkier,\" she said, holding out the dildo, \"is if you did the honors.\" \n\nGwen accepted the length and kneeled between her widespread thighs, focused on the vaginal lips before her, delicately touching them with the bulbous head. She slid it forward, watching the lips cling to the pink dome before opening to accept it, just enough for the crown to disappear inside, imagining the real one must look the same entering her. \n\n\"Oh, does Tim like to tease you like that, too? Adam loves making me beg him to put it in...\" \n\n\"Sometimes...I like it, never knowing when he's going to go deeper.\"\n\n\"Me too...\"\n\nGwen did not make her sister-in-law wait, pushing slowly, watching intently as the cock\u2014Tim's cock\u2014disappeared inside, finally bottoming out with his balls gently pressed against her rhythmically twitching ass. \n\n\"Oh, nice,\" Natalie breathed, \"so nice. A really good fit. You're a lucky girl.\" \n\nGwen smiled and answered by slowly withdrawing the length, pussy lips again grasping at it as if trying to keep it from leaving. She stopped just short of the head popping out before slowly pushing back in. \n\n\"Tim like to start out slow?\" \n\n\"Sometimes, if he's not already really worked up.\"\n\n\"Adam too. I guess most guys are like that once they get used to the idea of a steady supply of pussy. When they're younger I think they're worried it's the last one they're ever gonna get and so they wanna use it before they lose it. Ohhhh, that's good.\" The vibrator continued to grumble and groan as it worked above the methodically thrusting dildo.\n\n\"A little harder,\" Natalie coached after a few moments of slow, steady fucking. \"I can take it. Oh god yeah, like that, fuck me Oh God yeah,\" Natalie panted, \"like that. As deep as you can\u2014I love it when I man tries to crawl up inside you when he's coming...\" \n\nWho, Gwen wondered. Tim, like she had imagined Neal doing the day before? It would make sense...rather than being offended, Gwen took pride in the possibility. Her husband, an object of sexual desire who could have chosen any woman as his wife but chose her. It was the ultimate expression of trust to share him like this, even if it was just fantasy. It wasn't fantasy when you let Cricket touch him, the Lady reminded her darkly. Gwen moved closer to the writhing blonde, leaving just enough room between their two bodies to allow the faux penis space to forcefully thrust and withdraw. \n\n\"Ohhhh fuckkkk, coming...\" The hand that had been mauling the blonde's breast reached down to apply extra pressure to the vibrator mashed against her clit. Gwen took that as her signal to drive Tim's cock deeply into her one last time, like he always did when he was emptying himself. Natalie's contorted features matched the muscles of her body, taut and straining, staccato twitches signaling each orgasmic wave crashing through her .Gwen could imagine her sex pulsing as well, milking the cock it enveloped...\n\nWith an explosive exhale, Natalie went limp. An eye opened and looked up at the woman between her legs with a weak smile. \"That was great, but we really do need to get you a strap on. You've got some skill with that thing, but I'd love to feel the whole body version.\"\n\nGwen smiled back, unsure if she should remove the dildo now, or let the user do it. \"I learn by observation and practice.\" Her smile faded. \"Natalie,\" she blurted, \"when you said to put him...deep inside you, did you mean Tim?\" \n\nThe blonde flashed an embarrassed smile and sat up. \"Sorry, but yeah, that time it was Tim. I figured since I was using his dildo, I would just, you know, use the rest of him. But don't worry, it's just make-believe! I'd never do that behind your back. The number of people I've jilled off to over the years is way, way smaller than the number of actual bodies.\"\n\n\"It's alright...but do you really think he's, uhh, fantasy material?\"\n\n\"Oh my God yeah, don't you? He's such a stud! But like I said, just for make-believe,\" she added hurriedly. \n\n\"I do think he's a stud,\" Gwen admitted, \"but I have to. I AM married to him...\"\n\n\"You married well, then. You must think about other guys, right? Tell me you've never thought about being a bad girl with somebody besides Tim.\" Natalie did not wait for answer, unceremoniously swinging a leg over the woman sitting between them, her open sex flying by just inches from Gwen's face. The blonde rolled into a stand on the floor and bent for the box that had been retrieved from the closet. \"Somebody like the model for this fine specimen here?\" Her hand reappeared in a chokehold around Neal's significant girth. \"I saw how you were looking at him that night of the party. Sure you weren't thinking of how much fun he would be to ride? I know I have. Never even thought about that magnificent ass pile-driving this beautiful thing into you?\" \n\n\"I never said that,\" Gwen replied defensively, nervously glancing at the cudgel her sister-in-law was now sitting on the bed with. \"Neal was attractive, yes, but I would never cheat on Tim!\"\n\n\"If you say you wouldn't, then you wouldn't and I believe you,\" Natalie said with a dismissive shrug, \"but it ain't cheatin' if you husband says it's okay. Adam always does in my fantasies. So let's pretend Tim said it was alright. Lie back and let 'ole Neal do ya right.\" The last sentence was said in a passable Australian accent, and Gwen smiled despite herself while reaching for the Magic Wand.",
        "\"Aww, c'mon honey and open up them pins. Lemme see yer cunny. Oi, she's a beaut, alright! Look at all that fur! You ain't gonna go cold in the Outback at night!\" \n\n\"I'm going to trim it after,\" Gwen said with mock seriousness, the bulbous head of the vibrator poised above her clit. \n\n\"Naww, I like it,\" Natalie growled in a voice that was dropping in pitch with each sentence. \"Let's me know I'm dealing with a grown woman. Besides, I know where the naughty parts are underneath.\" She shuffled forward up between the pair of widespread thighs and touched the massive head to the inner lips peeking out from Gwen's slit. \"Ya look kinda dainty down there, I'll try not to hurt ya.\" \n\nHer sister-in-law's accent and corny banter reminded Gwen of when her daughters were small and they would play with their horse and rider figures on the living room, conjuring a detail make-believe world around them. \"I'll be alright, just go slowly, okay?\"\n\n\"Slow, right.\" The Magic Wand was already doing its job, buzzing madly as she first applied it lightly to her nub while Neal forced his way in. Natalie didn't stop him once the head was engulfed, the length slowly entering her, filling her until at last a pair of testicles gently bumped her bottom. \"Aww, yeah,\" Natalie/Neal groaned, the shaft withdrawing just a bit before again pushing forward as if to better settle itself. \"Christ, yer tight. No kids?\"\n\n\"Two.\"\n\n\"Yer shittin' me. Yer husband's a lucky man. Speakin' a which, I heard rumor he's got quite the willy swingin' between his legs.\" \n\nGwen giggled. \"He does.\" \n\nNatalie fell into a solid rhythm, strong and forceful but not violent as Gwen fucked back against the thing inside her. She did miss having a real body on top of her, pushing her into the mattress and up against the pillows, and tried to imagine just how heavy and powerful a man as big as Neal would feel like. He'd probably squeeze the breath out of her, unless he was careful...he'd be enough of a gentleman to not put his whole weight on her, she decided. But she might just give that ass a little slap to spur him on and encourage all the force those hips could generate.\n\n\"Looks like yer getting' close there, luv?\" The fucking she was getting seemed to have a purpose behind it, not at all hesitant, as if being delivered by a man very confident in his sexual abilities, and in her imagination Neal grinned down at her even as his hips maintained their metronome-like movement. \n\n\"Uh huh, close,\" she muttered, her hips fucking back at Neal's thrusts, the vibrator doing its job very well. It wouldn't have a chance to do that with his body on top of her, she reasoned, but she might be willing to forego the maddening buzz on her clit for the grinding of his pubic bone. \n\n\"Hope yer not gonna make me pull out,\" Natalie/Neal grumbled, \"You feel too good not to come in.\" \n\n\"No, stay in me,\" Gwen panted, the first flashes of sensory overload starting to pulse from her midsection. \"Stay all the way in me.\" \n\nShe convulsed much as her sister-in-law had, muscles almost painfully clenched, sure she could feel her pussy trying to squeeze the life out of the invader. And then she too lay limp, the length slowly withdrawing. \n\n\"Whoo! Put a regular geyser in ya, I did! Yer gonna drip for a week!\" \n\nGwen smiled and shook her head. \"You are crazy.\"\n\nNatalie smiled back and bent forward to gently kiss her mound. \"I've got an imagination. And now I've got to go. My hands smell like leather,\" she added mischievously as she dressed.\n\n\"Will you stop that,\" Gwen said with a laugh. \"I do not smell like leather down there.\"\n\n\"Okay, maybe not leather,\" the blonde allowed, \"but definitely like sex. And I love that scent on you.\""
    ],
    "authorname": "BusyBadger",
    "tags": [
        "husband",
        "wife",
        "sister-in-law",
        "lesbian",
        "toys",
        "ass play"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-24"
}