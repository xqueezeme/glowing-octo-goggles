{
    "title": "One for the Team Ch. 03",
    "pages": [
        "Chapter Three - Maid Service\n\nOctober 1984\n\nCharles reported to Robert's dormitory room as directed the next morning straight after breakfast. During breakfast service William Larkin was upbeat and caromed around Charles like an excited puppy under his feet.\n\n\"So we're hanging around with the upper housemen now that we're a top rugby player?\" he teased.\n\n\"If you think what I'm doing is hanging around William, you have it totally wrong. I'm... what am I? I'm like their vassal, sort of like their servant if you will,\" Charles replied sipping hot tea.\n\nThey sat at a table away from the other lower housemen.\n\n\"Sort of like a maid?\" William mused over his mug, eyeing Charles carefully.\n\n\"Why would you say that?\" Charles snapped.\n\n\"Why wouldn't you say butler or servant? Why maid?\"\n\n\"I don't know. I guess it just sounds more demeaning. Gentlemen tend to treat their manservants better than their maids and from what I've witnessed Robert Fellows treats you like shite,\" William replied.\n\n\"Speaking of Robert Fellows, I need to run, I have to fag for him this morning before class,\" Charles kicked back his chair and dropped his napkin on the table.\n\n\"You've hardly eaten a thing Mister Ward. How are you going to take on them Warwickshire forwards on Sunday if you don't bulk up? You're built like my daughter Daisy,\" Mrs Elaine Figgis chided as she cleared away the breakfast plates.\n\nWilliam gave Charles a knowing look and went back to his toast and marmalade.\n\nAfter knocking on the door, Charles was invited inside Robert Fellows' dorm. Robert sat in a lounge chair eating a bacon sandwich and sipping a mug of tea whilst watching the morning news. The lounge room looked like a bomb had gone off in it and the bedroom looked worse.\n\n\"You can start in there. Did you bring your timetable like Charlotte told you to?' he said around a mouthful of bread, bacon and HP sauce.\n\nCharles reached into his blazer, bought out the document and handed it over. Robert took it gingerly between the ring and little fingers of his left hand, the other fingers being covered in sauce and bacon grease. He nodded at a napkin on a breakfast tray on the hassock in front of him and Charles took it, shook it, and handed it to Robert.\n\n\"Start in there,\" Robert nodded at his bedroom.\n\nCharles took off his blazer and began to strip the bed.\n\nThe situation was bizarre. Not twelve hours earlier, Charles, dressed as Charlotte had been fellating the man who was now sitting next door heartily eating a bacon butty. Robert had obviously disassociated Charlotte from Charles; to him they were two separate people. Charles had to say that the idea appealed to him; Charlotte was a totally different entity and the disaffection of Charlotte from Charles was the only way he could deal with the house council and not go batty. \n\nRobert took Charles' timetable over to his desk and sat down and studied it. He began to scribble on it while Charles made the bed and cleaned up the dorm. Robert never spoke to him while he completed his chores. Charles asked to be excused when he had finished and began to put on his coat.\n\n\"That was quite a good effort against Harrow on Sunday by the way. Not sure we'll be using that play again though... took rather a toll on your body I'm afraid and we can't have that now can we?\" Robert surprised Charles with the compliment.\n\n\"Good chap. Now take that tray down to the kitchen and thank Mrs Figgis for me. I've reviewed and revised your timetable, I'll make sure that your form master approves the changes and make sure you show it to Charlotte so that she knows her new duties,\" he tucked the folded document into the pocket of Charles' blazer dismissively.\n\nCharles went back to his own dorm and opened the timetable. His lesson plans had not changed, just his extra curricula activities. He still had the Army Cadet parades on Monday evening and Saturday mornings but now additionally after parades there was a new entry: common room duties for the house council, these duties had also been added to his timetable on Wednesday after rugby training. \n\nEssentially this meant that Charlotte was going to have to service Robert Fellows, Wayne Jenkins and Steven Belfour-Brown two evenings a week and all of Saturday afternoon. She assumed that Brian Nichol was still a dissenter. Charlotte considered the ramifications. These were essentially the days that Charlotte made her appearances anyway so at least it meant that Charles wouldn't be kept busy conducting menial tasks during these times which was what often happened. However, it was with dread that Charlotte realised that she would be employed by the council as their personal fellatrix. She had effectively been sentenced to spending hours on her knees sucking cock. But if she found it so degrading why was there a lump in the front of Charles' trousers? \n\nBut what choice did she have? Tell the college faculty? They would likely punish the Bridge House council and most likely remove them, but she would be expelled for sure.\n\nTell her father? She'd end up penniless and disowned by her family for bringing such disgrace. She recalled the picture that Robert Fellows had taken of her in her spunk-stained clothing holding up yesterday's newspaper. He had definitive evidence that Charles was still crossdressing which he could use at any time. It was like the sword of Damocles hanging over her head. There was no time to ponder the situation now; Charles had lessons. Charlotte vacated Charles' psyche and let him proceed to his lectures.\n\nCharles was surprised to find Robert waiting for him in his dorm room when he finished his day's studies. He had Charlotte's suitcase open on the bed.\n\n\"You can't keep lugging this through the common room, the chaps will get suspicious. I quite like the way Charlotte was dressed the last time she visited. Just bring those clothes and the other things she'll need,\" he absentmindedly fondled a pair of French knickers. \n\nCharles went cold.\n\n\"Be there sharp, as soon as you've finished playing soldier. I'll leave the door to the sanctum open but make sure you lock it when you come through... or don't, if you're happy with someone accidently finding Charlotte committing carnal acts on the house council,\" Robert sniggered.\n\n\"Go straight to the privy and what do you call it? Transform. We don't want to see Charles; sort of spoils the illusion old boy,\" Robert left the room without looking at him.\n\nStraight after parade Charles bustled into his dorm and shucked out of his uniform. He used the toilet, cleaned himself and then took a shower and shaved a few wisps of hair from his chest. He slipped into a tracksuit for convenience and took down the small backpack from the wardrobe. Housemen often carried backpacks full of textbooks and other sundries around the campus so it would not draw attention.\n\nHe checked his watch: eight thirty. He needed to hurry.\n\nCharles skipped down the stairs and jogged to the common room and took a second to catch his breath. He opened the door and stepped inside. The place was pretty busy, some boys were watching a movie on the telly, others were playing board games, some were in little study groups but none of them paid him much attention. He worked his way to the back of the room and into the passage behind the bookcase.\n\nIn the inner sanctum bathroom he transformed into Charlotte dressing just like she had before: pencil skirt, satin blouse, bob-cut jet-black wig with the fringe, heavy makeup, blood-red lipstick and high heels. This time however she had decided to wear pantyhose for convenience. She checked herself out in the mirror and was satisfied with what she saw. \n\nShe had noticed stains on her blouse and skirt when she had returned to her dorm after the last time she had been here. She knew from experience that semen stains were notoriously difficult to remove. She'd brushed the dried semen out of her wig, shampooed it and hung it to dry in the wardrobe and had been able to rinse her blouse clean but the skirt was a problem. She couldn't wash it and she could hardly put it in with her weekly dry-cleaning could she?\n\nTwo pairs of school uniform trousers, one pair of army khaki parade trousers, one army khaki blouse, one school blazer and one satin-lined navy-blue pencil skirt with kick pleat... she could just imagine handing over the dry-cleaning docket to Mrs Figgis.\n\nShe had brushed as much of the dried semen as she could off the skirt and dabbed at the stains with a damp cloth because she couldn't wash it; it would be ruined. She decided that it would be her 'blow-job skirt'; she would just wear it when she went to the inner sanctum and when she was finally released from these debasing and perverted duties, likely when the upper housemen graduated, she would throw it away.\n\nShe set her resolve and entered the inner sanctum to find Robert Fellows, Wayne Jenkins and Steven Belfour-Brown lounging on their couches watching a porn video and drinking pints of beer and tumblers of scotch. College rules did not allow the consumption of hard spirits during the week but who was going to stop them? Brian Nichol was conspicuous by his absence. All eyes turned towards Charlotte as she walked over to them.\n\n\"My giddy aunt, she still looks ravishing,\" Wayne Jenkins commented.\n\n\"She does and I'm going first,\" Robert Fellows declared.\n\nCharlotte set her resolve. She said nothing and simply walked over and stood in front of Robert Fellows who had stood up and divested himself of his tracksuit pants and t-shirt and was now naked and sporting a throbbing erection. The other lads turned in their direction to watch the show.\n\nCharlotte stopped short of Robert and although she was tempted to bow her head she looked up at him defiantly. She was close enough to notice that he was wearing aftershave and deodorant, he was freshly showered and his hair was combed. At least he was considerate in that regard; he was confident in his good looks and he smiled at her.\n\n\"Hello Charlotte, good to see you again,\" he reached out and stroked her face.\n\nDespite her intense dislike for this man she couldn't help admiring his toned body and rugged handsomeness. In another time at another place she might have been flattered but for now, all she felt was despair.\n\nRobert pulled her into his embrace and for a fleeting second she thought he was going to kiss her, she even parted her lips slightly in anticipation but he simply held her close and pressed himself against her. His head rested on her shoulder and his hands found her buttocks, squeezing them, caressing them, sliding the fabric of her skirt against the slinky Harlow knickers. When he hiked up her skirt she heard the others gasp. Robert's hands explored the satiny material of her knickers and roamed over her taut thighs.\n\n\"Wearing tights today dear? I suppose that's practical,\" he whispered in her ear.\n\nRobert snaked his hand between their bodies and pushed his erection down between her thighs and encouraged her to close her legs. He began to thrust back and forth, rubbing his engorged penis between her thighs, delighting in the feel of the slippery nylon on his sensitive member.\n\n\"Put a bit of effort in old girl,\" Robert chuckled and held Charlotte by her hips and encouraged her to rock and forth on her heels to meet his thrusts.\n\nCharlotte had to put her arms around Robert to keep her balance and the firm flesh of his body pressed against her through her clothing, she could feel his muscles and the heat from his phallus as it grazed her legs. Charlotte's soft body pressed against his and the scent of her perfume was very stimulating, Robert leaned back a little so he could look at her pretty face while he abused her. Her emerald green eyes glared at him, challenging him. He was tempted to lean in and kiss her; he so wanted to. But not with the other two present. They had agreed that so long as they didn't kiss her or sodomise her, what they were doing wasn't gay. It was a stupid assumption; a hypothesis that theorised that as long as they didn't cross certain boundaries they remained completely heterosexual.\n\nCharlotte continued to undulate her thighs, which she kept clamped closed against Robert's hard cock. She could feel the girth of it, the heat, the pulsing of the veiny shaft against her nylon-clad flesh; she held onto him, pressing herself against his body, staring vacantly into his eyes.\n\nHe saw the look of shock replace her empty stare as he ejaculated, her lips parted and she gasped. Robert pulled her closer and buried his head in her shoulder, nuzzling her neck as his cock juddered and convulsed, spewing his issue between her legs. He sensed Charlotte clamp her legs tighter around his organ, gyrating her thighs to elicit his issue; she was breathing heavily, her sweet breath a zephyr on his cheek, her perfume exotic and arousing.\n\nWayne Jenkins had stripped naked during the performance and stood behind Charlotte enraptured. When Robert's spunk erupted from between Charlotte's thighs and dribbled down her legs and turned the sheer flesh-toned nylon dark as it soaked into the gossamer fabric he couldn't help but take his own member in hand and begin to stroke it.\n\nCharlotte clung to Robert, her heart beating as hard as his was, letting him finish and slowly descend from the pinnacle of his orgasm. Robert could have held Charlotte against him for hours, luxuriating in the feel of her body against his but it was his place to show the others that she was just their plaything.\n\nWayne Jenkins was pawing at Charlotte, anxious to take his turn. Robert sensed that she was reluctant to let go of him but he could just as well have been imagining it. He extracted himself from her embrace and fell onto the sofa quite satisfied and a little exhausted.\n\n\"My turn,\" Wayne Jenkins cried enthusiastically.\n\nHe didn't turn Charlotte around as she expected, instead he pushed her down to the floor. She thought he would turn her around so she could fellate him but instead he coaxed her onto her hands and knees and raised her buttocks. She felt him behind her and then the heat of his cock as he slipped it into the crease of her buttocks and began to thrust against her panty-clad behind. It took him only a couple of thrusts and then she heard him moan and his scalding semen saturated her panties. He pressed harder against her and she fell to the floor on her belly as Wayne lay on top of her, rutting against her knickers. He licked her neck and pawed at her legs as he ground his penis into her pillowy bottom until he was satisfied and then he leapt to his feet like an athlete who had won a wrestling match.\n\nCharlotte was suddenly shocked as she felt a spattering of warm spunk splash across her calves and ankles. Steven had ejaculated prematurely but had just enough time to rip off her high heels and cup her feet together and thrust his cock into the silken channel as the last of issue dribbled from his cock.\n\n\"I've always been a foot man,\" he chuckled as he dropped her feet to the floor and pushed himself up to the standing positon.\n\nThe young men surveyed their handiwork. Charlotte lay prone on the floor, her skirt hiked up and her buttocks, legs and feet covered in rivulets of creamy semen that soaked into her knickers and nylons as it cooled.\n\nSteven prodded her with his foot.\n\n\"Get up old girl; the evening has only just begun. Go and clean yourself and powder your nose or whatever, then come back and you can have a drink before we start again,\" he chuckled.\n\nCharlotte felt utterly degraded as she tried to get to her feet. She struggled, her palms slipping on the cold stonework. Robert bent down and helped her to her feet and steadied her while she put on her high heels.\n\n\"Thank you,\" she whispered, and walked away with as much dignity as she could muster holding her skirt away from her come-spattered legs and buttocks.\n\nCharlotte entered the privy and locked the door. She had decided to wear pantyhose for practicalities but also for another important reason. She unzipped the side of her skirt and carefully lowered it to the floor. She surveyed her semen soaked thighs, the musky fluid darkening her nylons. The other reason she had decided to wear tights was quickly revealed. She put her fingers into the crotch of her pantyhose and extracted her throbbing erection. She stroked it twice before she ejaculated; the orgasm so intense that she fell to her knees. When she recovered she stripped off her knickers and pantyhose, balled them up and put them in her backpack. She took out a fresh pair of pantyhose and a clean pair of satin knickers and put them on. She fixed her makeup and looked at herself in the mirror.\n\n\"You slut!\" she whispered and began to cry.\n\nWhen the sobbing jag was over she dabbed at her eyes with a tissue and left the privy, returning to the three men who were waiting anxiously for her. On the screen a mature woman dressed in sexy lingerie and high heels was fellating two young men, sucking on their cocks alternately. She guessed what was coming next and prepared herself.\n\n*****\n\nNovember 1984\n\nThis was to be Charlotte's life now; she was trapped. But strangely enough the bizarre became the norm. She slotted her visits to the council's inner sanctum around her other after-school activities. A summary of Charlie's timetable might read something like: Mon - Cadet Parade, Charlotte sucks cock. Tue - Rugby training. Wed - Rugby training, Charlotte sucks cock. Thu - Study Group. Fri - Rugby training.  Sat - Cadet Parade, Charlotte sucks cock. Sun - Rugby match.\n\nCharlotte did not like being the Bridge House council's sex toy but she was pragmatic about it. At least she got to dress up and become a woman, a woman the young men found very attractive. What they did to her however she found demeaning, rubbing up against her, using her mouth as a depository for their sperm, spurting their issue over her buttocks and legs without any display of affection, sentiment or tenderness made her feel used, dejected and common.\n\nShe was also pragmatic about her physical reaction to her treatment. Charlotte knew that becoming sexually aroused during these sessions was just a physical response to a stimuli and her need for release afterwards was just a primal urge that needed tending to. She did not actually like what the young men were doing to her; her body just betrayed her. She was sure of it.\n\nThere was an advantage or benefit if you will for Charles, because of Charlotte's interaction with the council. Charles was no longer the subject of bullying and the constant issue if rips reduced to a trickle. If Robert Fellows, Wayne Jenkins and Steven Belfour-Brown wanted Charlotte to pleasure them three times a week, then Charles needed to be cut some slack. If he got issued a White Badge, his extra curricula activities would be curtailed and his free time would be taken up with compulsory study and extra work.\n\nCharles was like a life support system for Charlotte. The council needed to take care of Charles to ensure that Charlotte was at hand and in a reasonable frame of mind when they wanted her Charles and Charlotte lived a simpatico existence, one could not exist without the other but they could not exist simultaneously. \n\nAfter the arrangement had been in place for a few weeks, Charlotte noticed subtle changes in Robert Fellows' attitude toward her. He had always been controlling but he seemed possessive and protective of her, sometimes admonishing Steven and Wayne if in his opinion they went too far. At times he seemed almost affectionate, stroking her hair, caressing her fondly and talking to her pleasantly, sometimes even offering endearments.\n\nThings changed dramatically one day when Charles returned to his dorm to find it vacated. Robert Fellows was in Charles' dorm lying on the bare mattress with his hands folded behind his head.",
        "\"What's going on sir?\" Charles asked, alarmed and anxious.\n\n\"I've used my position to have you installed in better quarters young man. As my fag, I think it only reasonable that you abide next door to me so you can better tend to your duties. Follow me,\" Robert leapt from the bed and beckoned Charles to follow.\n\nCharles followed a familiar route to Robert Fellows' dorm room. The door to the room next to Robert's was open and Robert led the way in. It was larger than Charles' previous dorm and much better appointed. He was surprised to find that all of his personal possessions had been relocated and everything had been put in place as it had been before.\n\nCharles immediately checked on his suitcases and was relieved to find them as they should be.\n\n\"I suppose I should thank you sir for upgrading my quarters,\" Charles looked around his new dorm and was pleased with what he saw.\n\n\"Oh, it's self-interest on my behalf that spurned me on. I'm expecting better service from you now that you live next door. With privilege comes responsibility.\"\n\n\"Also, when you see Charlotte again let her know that I have left a little present for her in the wardrobe and I hope she likes it. Also tell her that she may use the door that adjoins our rooms any time she pleases,\" Robert smiled expectantly.\n\nCharles immediately saw through the ruse.\n\n\"I'll let her know but I'm sure she is too busy with her current workload sir,\" Charles responded.\n\n\"Well let her know that this would be in addition to her current workload but would remove a considerable burden on you. She could undertake all of your personal responsibilities to me in my dorm. She can use the interconnecting door to come and go as she pleases,\" Charles said a little gruffly, working hard to make his point.\n\n\"I'll let her know sir,\" Charles reiterated.\n\n\"You may not use the conjoining door Mister Ward; you will come to the corridor entrance, knock and seek my permission before you enter. Nothing has changed there,\" Robert harrumphed and left the room, closing the door behind him.\n\nCharles noted that the latch and bolt had been relocated form his old dorm to this new one. His privacy was guaranteed except that Robert Fellows had unfettered access to his room through the interconnecting door.\n\nCharles opened the wardrobe and couldn't help but burst out laughing when he saw the 'present' that Robert had left for Charlotte.\n\nIt was a French maid's uniform consisting of a black satin dress with white lace trim with a full skirt that would rest just above the knee. There was also a white half-apron embellished with ruffles and lace and a matching headpiece.\n\nDid Robert really expect Charlotte wear the little outfit and tend to him while she was carrying out Charles fagging duties?\n\nThat was definitely not going to happen!\n\nFor the next two weeks things progressed as normal, if you could ever think of Charles' life as normal. Charlotte appeared three times a week in the sanctum to service the three senior members of Bridge House. Robert was frustrated that Charlotte refused to undertake Charles' fagging duties and let her know of his displeasure by treating her rather cruelly and dispassionately.\n\nSunday was a return match against their nemesis Harrow and the Chelmsford College rugby team was fired up. There would be no replay of the 'suicide run' that Charles had been made to play the last time they met but the intent of Chelmsford was to get the ball out wide whenever possible. Chelmsford had a comfortable lead in the dying minutes of the match and Charles had scored two tries and been instrumental in setting up two others. Harrow decided that if they couldn't win the match that would reap revenge on the player who had been most responsible for their loss.\n\nCharles received a pass out on the wing and began to run full pelt at the Harrow defensive line with the intention to zig infield and unload a pass to one of the centres and then continue cross-field behind his own forward line who would provide him with protection from the blitz defence. He was so concentrated on locating a suitable recipient for the pass that he did not see the huge Harrow forward that had him lined up ready to crash tackle him.\n\nJust as Charles unloaded the pass he saw the gigantic Harrow loose-head prop looming in his peripheral vision and realised that he was about to be pulverised. Charles prepared himself to be driven into the ground and crushed when Robert Fellows came out of nowhere and put himself between Charles and the hulking front-rower. The sound of their collision was sickening as both players crashed into each other and hit the turf. They were both taken off the ground on stretchers whilst the two teams traded insults and several scuffles broke out before the referee blew full time.\n\nCharles realised that Robert had sacrificed himself to save Charles and was likely badly hurt. He wanted to find Robert and thank him but the team insisted on putting him on their shoulders and parading him around the ground. When Charles was finally able to sneak away from the after-game celebrations Robert Fellows was nowhere to be seen.\n\nCharles went to the College infirmary where he was advised that Robert had been given medical treatment and released to his dorm with instructions to bed-rest for two days and then return to the infirmary for a check-up before he would be cleared to return to his studies.\n\nRobert lay on his queen-size bed propped up by pillows. He was watching a movie on TV whilst sipping a can of lager, which was totally against the medical advice he had been given. His left arm was in a sling but at least the pain had subsided to a dull throb. He had other cuts, bruises and contusions on his body but nothing major; the doctor's main concern was the concussion he had received and a badly sprained wrist.\n\nHe heard the doorknob rattle on the door that joined his dorm with Charles' and then the door opened. \n\nCharlotte stepped through the door dressed in the French maid's uniform. She was also wearing black fully-fashioned stockings and high heels. The lace headpiece perched atop her black bob looked cheeky; her makeup was perfect and seductive, she had a pout on those inviting red lips.\n\nRobert was lost for words as he watched her close the door and then walk to the main entrance and throw the bolt. Charlotte turned out the ceiling lights and switched on the standard lamps to give the room a cosy glow. Robert was mesmerised watching the pretty maid silently perform these tasks, her perfume enveloped him and he drew in her scent deeply. He was becoming tumescent already.\n\nCharlotte came over to the bed and motioned for Robert to scoot over. Robert tried to say something but Charlotte put her finger to her lips instructing him to remain silent.\n\n\"Don't spoil this by saying something stupid,\" she whispered.\n\nCharlotte climbed on the bed and lay down beside him. She snuggled up to him and he rested his head in the nook of her shoulder so he could nuzzle her neck and breathe her perfume. She felt soft and yielding lying beside him.\n\n\"Thank you,\" she whispered.\n\n\"For what?\" Robert replied; his response muffled.\n\n\"You know for what,\" Charlotte lifted Robert's face from her shoulder and looked at him reproachfully.\n\nRobert softly stroked Charlotte's cheek. He had done this many times in the past but when he leaned into her she pulled back. Robert winced as he changed position so that her head was resting on the pillows and his was hovering over her. This time when he lowered his face to hers she didn't resist.\n\nHis lips closed on hers and he sighed. Robert had wanted to do this for so long. He pressed his lips to Charlotte's for what seemed like an eternity, tasting her lipstick, inhaling her sweet breath, enraptured by the feel of her soft lips on his and her satin swathed body pressing against his tender flesh. Charlotte froze, she lay still and silent and once Robert overcame the rapture of their first kiss he realised that she was not responding.\n\nRobert removed his lips from hers. He studied her face but it was emotionless.\n\n\"I'm sorry. I shouldn't have...\" Robert stammered.\n\nCharlotte cut off his sentence.\n\nShe reached up and pulled his face to hers and opened her lips slightly as their lips met. At first they kissed chastely, their lips barely touching. Charlotte had never felt so womanly as she did at this very moment. A handsome young man was kissing her, showing her affection and she revelled in her first kiss. She tentatively extended her tongue and Robert reciprocated. He tasted like beer and cigarettes but not in bad way but in a distinctly male way which she found quite appropriate.\n\nThe kiss gradually increased in intensity until they were exploring each other's mouths with their tongues. Robert caressed Charlotte's cheek with his uninjured hand as he kissed her and she held his face between her hands, softly stroking his face with her thumbs.\n\nRobert was fully tumescent and Charlotte could feel him pressing his erection against her body. He was naked except for his underpants. Charlotte was also inflamed; her penis lay along her perineum, held in place by surgical tape that was going to give at any moment as she became painfully engorged. Her bloated member broke free of its bonds and sprang forward into her black nylon French knickers. She felt both relief and despair. She would hardly be able to hide her excited state from Robert who might be repulsed. But she was too enamoured with her first real kiss to worry too much about it.\n\n\"Let me do this for you,\" she crept her hand between their bodies and found him hard and throbbing.\n\n\"You don't have to Charlotte,\" he whispered.\n\nShe smiled up at him wanly then squeezed him though his underpants and he gasped.\n\n\"Just let me. Kiss me,\" she sighed.\n\nRobert kissed her and this time there was no pretence of chastity. They crushed their lips together and opened their mouths and extended their tongues. Charlotte freed Robert's erection from his underpants and began to softly caress him, taking the little globules of pre-ejaculate that oozed from the eye on her fingertip and smearing it over his glans and fraenulum. \n\nRobert kissed her harder and began to grind against her hand as she gripped him tighter, allowing him to fuck her hand as he thrust back and forth. Before long she felt his body tense and he moaned into her mouth as he released. She felt the warm slippery discharge on her fingers and the musty smell of semen filled the room. Robert held her close with his good arm and mewled into her mouth as he orgasmed. She kissed him and squeezed him, draining all of his issue.\n\nThey held each other this way for a very long time, enjoying the closeness and intimacy. Both of them realised that this was their first display of affection for each other and basked in the afterglow.\n\n\"Thank you Charlotte,\" Robert said softly.\n\n\"No thank you,\" Charlotte smiled at him and mussed his hair.\n\n\"Can you reach into my bedside table and grab a handkerchief; we need to clean up,\" Robert smiled back at her.\n\n\"I could do that... or I could do this,\" Robert hissed with pain as Charlotte pushed him onto his back.\n\nBut not for long.\n\nCharlotte got onto her knees and kissed him again and then her lips and her tongue took a long circuitous route along his neck, his chest and his belly until her face was at his groin. She lapped up the warm salty fluids from his belly and his around his pubis. Robert had become engorged again and when Charlotte finally put her mouth on him he moaned. He resisted the temptation to put his hand on her head; he let her do unto him as she wished.\n\nAnd Charlotte wished to take her time, teasing him, bringing him to extremis and then retreated. She edged him closer and closer to climax and then backed off. She was actually giggling as he bucked under her, arching his back, begging for release.\n\n\"Please Charlotte, please,\" he begged her.\n\n\"When I'm ready.\" she said around a mouth full of cock.\n\nShe hadn't touched herself but she was close to climax herself and when she finally relented and worked her lips and tongue on Robert's shaft to elicit his orgasm she came with him, filling her knickers. Robert saw the bulge in her panties and then the wet stain spreading through the satiny fabric. Rather than being repulsed he found the sight profoundly arousing and it increased the intensity of his own orgasm.\n\nCharlotte willingly swallowed what he gave her; this time it was no chore, she genuinely wanted to please him. She licked him clean and patted his flaccid penis and tucked it back into his underpants. She lay down beside him smiled.\n\n\"Better?\" she asked.\n\nRobert nodded vigorously.\n\nHe tried to pull her face to his and kiss her but she resisted.\n\n\"I don't think so Robert. I have your issue in my mouth,\" she lamented.\n\n\"Oh bollocks to that! Come here,\" he growled and pulled her to him.\n\nHe yelped when he bumped his injured arm but he was relentless and Charlotte laughed at him but he won out and pulled her to him. She eased him onto his back and straddled him, kissing him passionately. They kissed and canoodled for an hour or so as the shadows lengthened and the afternoon turned to evening.\n\n\"I'd better go. It's nearly dinner time and I'll be missed. How are you going to eat?\" she asked.\n\n\"Elaine Figgis has been tasked to bring up my meals until they let me out of jail,\" he joked.\n\nCharlotte paled.\n\n\"Christ Robert! What if she turns up while I'm here?\" Charlotte barked.\n\n\"The door's locked. She can't come in,\" Robert laughed.\n\n\"She could be listening through the door!\" Charlotte disentangled herself from him.\n\n\"The old bat would likely have a heart attack if she did; she has to be fifty if she's a day,\" Robert chuckled.\n\n\"Oh Jesus Robert!\" Charlotte picked a pillow and threw it at him, but she was smiling.\n\nShe tidied up a little and then walked to the interconnecting door.\n\n\"Do you like me now?\" Robert was propped up on his pillows looking like the cat that ate the canary.\n\nCharlotte stopped at the door and turned to him.\n\n\"I don't know if I like you; but you're not the arsehole I thought you were,\" she ducked under the pillow that Robert threw at her.\n\n\"Come back after dinner!\" he called after her.\n\nCharlotte closed the door and leaned back on it and considered what had just happened. It required some serious contemplation.\n\nShe looked at the time and realised that she needed to get a move on. Charlotte disrobed, rinsed her semen-soaked panties and hung them up to dry on the shower rail. One of the improvements of her new abode was the addition of a shower over the bathtub. \n\nCharles showered quickly removing the vestiges of Charlotte as fast as he could and changed into evening dress and hurried down to dinner. He was embarrassed as he entered the dining hall and the diners rose as one and applauded his efforts on the rugby field. He took his preferred seat next to William and zoned out as the headmaster droned on about Chelmsford's annihilation of their arch rival Harrow and Charles magnificent performance and Robert Fellows sacrifice to bring about the win.\n\n\"You know that even though the house council is granting you privileges that none of us humble lower housemen would ever dream of, no one is jealous of you, you are still the hero of the lower house,\" William niggled Charles as the soup course was served. \n\n\"Fuck off William I nearly got creamed today on the rugby field,\" Charles replied, flicking his napkin and laying it in his lap.\n\n\"Don't tell me to fuck off Charlie; there's something going on between you and the Bridge House council, I can feel it in my water,\" William looked at Charles knowingly.\n\n\"Don't be stupid, what could that possibly be?\" Charles retorted.\n\n\"There's something that's not quite right about you Charlie. My gaydar isn't pinging so it's not that; but there's none as queer as folk as my sainted aunt used to say,\" William mused.\n\n\"You're gay?\" Charles tried to sound surprised.\n\n\"Oh come off it! By the way honey, you need to get right into those cuticles with your nailpolish remover and you're still wearing eyeliner,\" William smiled and took a sip of his soup.\n\nCharles excused himself and raced to the toilet and looked carefully in the mirror at his eyes and sure enough there where skerricks of eyeliner on his eyelids. He curled his fingers and examined them; there were tinges of red nailpolish in his nailbeds. He used a handful of tissues on his eyes and gouged them into his cuticles to remove the offending evidence.\n\nIn his rush to get to dinner Charles had failed to remove all evidence of Charlotte's existence. He was getting slack. He re-entered the dining room and took his seat.\n\n\"Left over from theatre group William; there is no conspiracy,\" Charles said smugly.\n\n\"If you say so, but I don't remember your character in the play wearing nailpolish,\" William replied just as smugly. \n\nInstead of going back to his room and transforming into Charlotte as Robert had requested, Charles went to the Bridge House common room where he could not pay for a drink. He was everyone's hero and the free pints kept flowing. Charles had taken William's barbs to heart, if he wasn't careful his secret would get out.\n\nCharles and William patched up their tiff and drank and chatted together.\n\n\"Honestly William, I wasn't really certain that you were gay. I always thought the lisp and your mannerisms were just a trope,\" Charles explained when they were well into their cups.\n\n\"I've always known but never really advertised it. British boarding schools have a long history of suppressed homosexuality. A good looking but impoverished scholarship student like myself can, shall we say, quite make do if he's not opposed to offering the occasional 'Oxford rub' to a generous upper houseman,\" William gave Charles a sly wink.\n\nThis gave Charles more to think about but his head was fuzzy from too much beer to spend time pondering the matter. He went to bed late and Charlotte never returned to Robert's dorm.\n\nThe next morning Charles was more than a little hungover when he knocked on the door of Robert Fellows' dorm and requested permission to enter. He found Mrs Figgis fussing around Robert. She had bought him up a full English breakfast and a mug of tea and was busy fluffing his pillows and tucking in his duvet.\n\n\"As you can see Mister Ward I do not require your services today. Mrs Figgis has kindly decided to bring up my breakfast and tend to my needs,\" Robert said coldly.\n\n\"Tell our mutual friend that the meeting planned for this evening in the council's inner sanctum has a change of venue. We will convene here in my dorm due to my incapacitation,\" he glared at Charles.\n\n\"Will the rest of the council be in attendance sir?\" Charles was a little alarmed.\n\nRobert just waved Charles away dismissively and resumed his conversation with Elaine Figgis.\n\nOnce again Charles found himself spending the day worrying about what would transpire in the evening. After the cadet parade was completed he transformed into Charlotte but this time in the comfort of his own room.\n\nCharlotte decided that a change was as good as a holiday. The outfit she had been wearing down in the inner sanctum was just about ruined. The satin blouse had been washed so many times that the fabric was barely holding together and the navy-blue pencil skirt was a crusty rag of dried semen despite her efforts to clean it after each session.\n\nShe was now effectively down to three remaining ensembles not including the French maid's uniform which she discounted. She laid the blue micro-mini cocktail dress out on the bed and admired it. It would be a shame to ruin it but the end of term was approaching and she could replenish her meagre supplies.\n\nCharlotte did her makeup and this time selected a blonde shoulder-length wig that she hadn't worn before. She brushed it out and sprayed herself liberally with perfume. She eyed the packages of stockings lovingly but the dress was just too short for stockings; she selected a pair of Wolford eight denier, sheer-to-the-waist, nude, pantyhose. She delighted in the feel of them as she slipped them on. The gusset was very tight and she was able to tuck without taping.",
        "She had bought a pair of tight blue nylon full-cut panties to wear with the dress and she slipped them on too and smoothed them out. She didn't have a blue bra but she had a white satin bra with padded cups that would go perfectly under the dress giving her a bit of shape where she needed it. She slipped on the dress and zipped it closed with a little difficulty and then she pulled down the hem and smoothed out the seams. The dress was very short indeed. She slipped on her white high heels, accessorised, and was ready to go.\n\nCharlotte had to admit that she quite liked being able to transform in the privacy of her own bedroom with the convenience of just walking through the adjoining door to make her assignation. What she didn't look forward to was the hours that she would spend on her knees sucking cock and if those boys wanted to ejaculate over her bottom and legs as they often did she would damn well be taking off this dress!\n\nShe set her resolve and opened the adjoining door to Robert's room and walked confidently through the door. She stopped dead in her tracks when she realised that they were alone. \n\n\"Where are the others?\" she peered around the lounge and then through the open bedroom door looking for Steven and Wayne.\n\n\"They're not invited,\" Robert said straightforwardly.\n\n\"Really? Does that mean they are waiting at the inner sanctum? Did you just not tell them?\" Charlotte asked.\n\n\"What do you care Charlotte? Wouldn't you just rather it was just you and I?\" he had turned his back to her to pour them both a drink.\n\nCharlotte walked over to him and placed her hand on his shoulder.\n\n\"Is this wise?\" she stroked his shoulder affectionately.\n\nRobert turned around and took Charlotte in his arms and gazed into blazing green eyes and surveyed her luscious red lips. She lifted her face to his so that he could kiss her as he moved into her. The kiss was wonderful; just like she remembered from the last time. It was lusty and passionate but there was also genuine tenderness. Robert no longer wore his sling and he put his arms around her and held her close, inhaling her scent as his tongue searched her mouth. There was no roughness, no wanton urge to defile her like when they were in the sanctum. He stroked her hair and then her cheek as they kissed and caressed.\n\nThere was no need for Robert to rush. No need for him to seek instant gratification before he passed her on, they were alone and had all the time in the world. He was crazy horny for her and as much as Robert would have loved to have dragged Charlotte to the bed and used her mouth on his manhood, there was a feeling of tenderness. He realised that she was being genuinely affectionate rather just submitting to his will and that was better... so much better.\n\n\"I like that dress,\" Robert smiled at Charlotte and offered her a drink.\n\n\"Thank you. I really can't wear the pencil skirt and blouse anymore; they're... well they're ruined,\" Charlotte blushed.\n\n\"Spunk stains don't wash out once they've dried,\" Robert grinned at her mischievously.\n\n\"Don't be flippant Robert; you were so nice up until now,\" Charlotte batted her eyelashes at him playfully.\n\n\"But you're not here to be nice; you're here to be naughty,\" Robert pulled her back into his arms and kissed her again.\n\nCharlotte out down her drink and put her arms around him.\n\n\"Do you like it when I'm naughty?\" she said around crushed lips.\n\n\"I like both naughty and nice but yes, I like naughty best,\" Robert grinned.\n\n\"I can feel it,\" she squeezed the erection poking her in the belly.\n\n\"Oh my!\" Charlotte squealed when Robert picked her up and carried her to the bed.\n\n\"What about our drinks?\" Charlotte teased.\n\n\"They're not going anywhere,\" he said and laid her on the bed, her blonde hair fanned out on the pillow.\n\nHe gazed at her. Her pretty face framed by the long blonde locks, the tight-fitting blue dress which had crept up her thighs revealing her long legs clad in shimmering hose. She was trim, curvy and girlish; he knew that the small breasts that gave her shape were fake but they helped make her look feminine. He was smitten with her.\n\nShe lay there smiling up at him as he stripped naked and then lay down beside her.\n\n\"You are so lovely,\" he closed his mouth over hers.\n\nThey pressed their bodies together and Charlotte folded her leg over his and held him tight. They spent some time just kissing but Charlotte wanted to feel him. There was something not only erotic but powerful about taking him in her hand. It was she who had caused his tumescence and she who would provide release... when she was ready.\n\nRobert rolled on top of Charlotte, her dress had ridden right up around her waist and he put his cock between her thighs. Charlotte closed her legs and he began to hump her loins while he kissed her. He felt her smile.\n\n\"What are you grinning about?\" he asked.\n\nCharlotte had remembered what William had said to her about getting-by by offering the occasional 'Oxford rub' to a generous upper houseman.\n\n\"Nothing. Kiss me,\" she pulled his face to hers.\n\nRobert kissed her passionately and ground against her. She could feel her pantyhose becoming damp where he humped her, he was leaking and she liked it. In fact she was leaking too, she was getting uncomfortably hard; her cock becoming engorged trapped between her thighs. It soon sprang free and filled the front of her pantyhose. It was hidden under her blue satin panties but the bulge was noticeable. She hoped Robert wouldn't be repulsed.\n\nBut on the contrary, Charlotte gasped when she felt him remove his cock from between her thighs and press it against hers, he moaned as he rubbed his cock against her through her panties and pantyhose.\n\n\"That feels so good,\" he mumbled into her mouth.\n\n\"Mmm,\" was all Charlotte could respond.\n\nThe feel of the gossamer pantyhose and slick satin panties pressing on her penis as Robert slid his cock up and down her shaft was incredible. She knew that the French word for it was frottage but words couldn't express how wonderfully decadent it felt. She arched her back to meet Robert's thrusts and ground herself against him. She could feel her orgasm approaching.\n\nRobert suddenly slipped his cock back between her legs and she was a little disappointed. Maybe he found what they were doing unnerving. Maybe it was against their stupid inner sanctum rules. Maybe it was too 'gay'.\n\nBut Robert didn't leave his cock between her thighs; he burrowed it under her panties and rubbed it on her buttocks. That was cheeky she thought and very, very decadent.\n\nRobert lifted Charlotte's legs and opened them so he could press his erection into the crease of her buttocks, enjoying the sensation of his cock rubbing on her pantyhose-clad derri\u00e8re. His belly was pushing on her cock and it felt rather nice, as did the feel of his cock rubbing on her buttocks. This was very adventurous and very naughty. Charlotte sighed with pleasure and looked up into Robert's face.\n\nHis eyes were half-closed and he was concentrating, his face lit up with bliss. She figured he was close to orgasm as he rutted at her faster and faster.\n\nWithout warning he slipped a hand inside her knickers and tore out the gusset of her pantyhose and began stabbing at her sphincter with his engorged weapon.\n\n\"No Robert don't\" she screamed and beat her fists on his back.\n\nBut Robert had her pinned to the bed, her legs high and wide, and even though she squirmed and struggled beneath him she was no match for his size and strength. She felt his cock digging into her perineum as he tried to find her entrance but he couldn't find it because she was struggling so much. Charlotte just hoped he would come soon; he had to be close.\n\nAnd then it happened.\n\nRobert's glans pressed against her tight puckered sphincter. It was smothered in his pre-ejaculate otherwise he would never have pierced her tight bud. Charlotte was to some extent responsible for her own undoing because she bucked at that exact moment causing Robert's cock to slide inside her.\n\n\"Oh my god!\" she cried.\n\nThe pain was almost unbearable.\n\nRobert suddenly realised what he had done and he lay still. Charlotte was crying and had given up the fight. But even though he regretted what he done he couldn't help but enjoy the feel of her tight velvety flesh clasping his cock and her tight sphincter clenching the base of his shaft.\n\n\"I'm sorry. I got carried away,\" he said genuinely contrite.\n\nHe tried to withdraw but Charlotte locked her legs around him. The pain was receding and what replaced it were the most wonderful sensations she had ever felt. Robert's glans was pressing on her prostate and the girth of his cock triggered the delicate nerves in her sphincter releasing little ringlets of pleasure.\n\nCharlotte relaxed. Her makeup had run and she could feel her tears drying on her face.\n\nRobert looked down at her and she looked so sexy and vulnerable that he couldn't help but begin to fuck her. Charlotte held onto Robert gasping with the pleasure and the pain as he drove his cock in and out of her tight anus.\n\nRobert plunged himself all the way inside her and pulled her hard against him and ejaculated deep in her anus and Charlotte climaxed with him. Her cock convulsed and filled her knickers as she felt Robert's cock quivering inside her as he spent his load deep in her back passage. They both lay still, their bodies quaking as they clutched at each other. Robert tried to press his mouth to hers but she tried to move away and he followed her with his lips until she capitulated and opened her mouth and drove her tongue into him. She clung to him and shuddered; whimpering until her orgasm began to subside.\n\nCharlotte lay underneath Robert, she could feel his heart pounding and he was gasping for breath. She could feel him becoming flaccid and his penis slipped from her anus. She eased herself from underneath him and sat on the edge of the bed, pulling her knickers back into place. Robert's spend was leaking from her, soaking into the gusset of her panties.\n\nShe silently arose from the bed and went through the door that adjoined their dorms and when she returned she had changed out of her cocktail dress and was wearing a negligee. Robert was lying on his back with his hands under his head smiling contentedly. Charlotte walked up to the edge of the bed looked down at him indignantly.\n\n\"I'm not going to be able to stop you doing what you just did to me so I'll do you a favour and make it easier for us both. From now on I'll make sure I'm prepared and I'll wear stockings so you don't have to tear my tights but you have to do something for me in return.\"\n\n\"Use this... and use plenty of it,\" she dropped the tube of KY jelly on his hard belly.\n\n\"Now shove over and make room for me,\" she said.\n\nCharlotte climbed onto the bed and Robert folded her into his arms and kissed her as she snuggled up to him.\n\n\"Sorry Charlotte,\" he whispered.\n\n\"No you're not,\" she squeezed his flaccid member and felt it begin stiffen.\n\nTo be continued"
    ],
    "authorname": "MicheleNylons",
    "tags": [
        "anal",
        "crossdresser",
        "forced",
        "maids",
        "nylons",
        "panties",
        "pantyhose",
        "transvetsite",
        "stockings"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/one-for-the-team-ch-03"
}