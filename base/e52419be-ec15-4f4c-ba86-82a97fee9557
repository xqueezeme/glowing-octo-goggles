{
    "title": "The Summer of 1969 Pt. 02",
    "pages": [
        "My apologies for taking a bit longer than usual with the second chapter. I left my laptop at home while I traveled to be a part of grand children's graduations. I didn't proof read this chapter quite as much as I normally do, hopefully there aren't too many glaring mistakes. \n\n*****\n\nHe said nothing as he scooped me up effortlessly, my legs dangling at the knee over his muscled arm, arms wrapped around him with my face snuggled into the crook of his neck. When he stood me, he gently put my arms at my side and then tut-tutted me when I raised them to unbutton my dress. He informed me he'd be unwrapping his present without help. Sitting on the bed he finished opening the dress, the last button being just below crotch level. I was shaking as he slowly moved it off my shoulders and let it drop to a puddle around my feet, I wasn't shaking from fear, it was from excitement. \n\nOrin sensed my trepidation and held me tight to his body, his face turned sideways between my breasts. He held me at arm's length staring at me, I wanted to be embarrassed but suddenly felt desired and of interest to this hunk of a man slowly dis-robing me. He kissed my breasts through the sheer bra, commenting on a perfect choice of color, telling me it contrasted with my skin in a delicious way. His lips enveloped one nipple then the other through the bra, pushing my bra up before unclasping and discarding the constraining item of clothing he lightly nipped each as he uncovered them. \n\nStanding before him clad only in the sheer yellow panties, hose and a garter belt he leaned forward and kissed my mound. Having never experienced such a thing before it sent tremors through my body, I could hear little whimpers and subdued squeals, finally realizing those sounds were coming from me. He cupped my sex over the panties, pushing my legs open enough to usher a finger between my legs, tracing along my vulva which were swollen and engorged with blood. I was having difficulty breathing when his next action caused my breath to cease entirely. \n\nMoving his hands to my hips he slipped his fingers into the elastic of my panties, knowing he was going to slide them down I automatically opened my legs a bit more to accommodate that. He lowered my panties ever so slowly, stopping to kiss along the panty line, above my bush and then in my bush, kissing on top of my clit hood before lowering them to my ankles, balancing myself on his shoulder as I stepped out of them. He picked them up, smelled them and grinned, he looked like a bull does when a cow is in heat and knows he's going to breed it. \n\nStanding nearly naked in front of him he stood, telling me to leave the belt and stockings on, but to remove the heels, they'd be in the way. Kissing and fondling he stood as he spun me, pushing down on my shoulders until my butt hit the mattress. I instinctivley began undressing him, first his shirt, standing to slide it off while stopping to run my fingers through his chest hair, kissing both bullet scars as I removed his shirt. My God he was strong, not grossly huge and bulky, but solid in every way, each muscle defining its proper place. \n\nSitting on the bed I reached for his belt, unbuckling it as I reservedly unsnapped his jeans. I wanted to, at the same time I was unsure what was waiting for me, no way to know except to do it. I unzipped them, hooked my fingers in the belt loop on each side and slid them down, patting his butt to open his legs enough to remove them. He stepped out and stood in just his briefs, pushed tight and revealing a long fat piece of meat. Long and fat to me, I'd never seen one up close and personal before. As I lay sobbing in bed last night, I had contemplated whether he would be too big for me, then quickly disregarded that thought. There are hundreds of millions of women worldwide being screwed every day, and they aren't any different than I am. \n\nMy mouth was dry, I nearly couldn't breathe as I took hold of the waistband and began to slide them down, as they lowered, I could see the first part of his cock pointing upward. The top looked like a combination between deep red and purple and seemed to throb as I drew his underwear down to see a live male erection for the first time in my life. It looked thick and hard, arched toward his stomach, I was curious to touch it but afraid at the same time. As his underwear hit the floor he stepped out of them, his dick swaying back and forth with his movements. \n\nI looked in his eyes, \"Orin, how big you are?\"\n\n\"I'm average, which is six inches or so, but I'm a little thicker than a lot of guys.\"\n\n\"Why does the top look so purple and swollen?\"\n\n\"You excite me so much that the blood flow to my dick has increased, making the head look so dark.\"\n\n\"I saw a guy peeing in school once but his didn't look like yours.\" \n\n\"He probably wasn't circumcised so you wouldn't have seen the head. Are you still okay Addie? You look frightened.\"\n\nI nodded and lay back on the bed, he turned me so I was laying lengthwise as he laid next to me. He was kissing and fondling me, my nipples were hard they ached as he lightly rolled and softly tugged on them, I tensed slightly when his hand lowered to my abdomen. He kissed me very tenderly as his fingers lightly danced through the pubic hair on their way to my wet playground. His finger slid across my vulva, barely touching me, almost in a tickling fashion, as his finger pressed softly into the folds his tongue entered my mouth. I raised my hips and sucked in my breath as I let his tongue explore my mouth. Withdrawing his finger and hand from my very wet pussy he softly brushed my cheek with the back of his fingers. \n\n\"Addie, I'm going to make love to your body, not only your vagina, I want you to relax and let me make you feel good. I won't hurt you, if you're unsure or uncomfortable you tell me, and I'll stop. I'm going to use my lips, my fingers, my tongue and my dick. Put your head back and close your eyes.\"\n\nHe kissed my lips, my neck, nuzzled my ears, kissed across my chest stopping to suck on each nipple, lightly nipping them with his teeth which made me jump but not in a bad way. That long moustache exciting my skin as he trailed his kisses along my body. With my nipples hard and the flesh sufficiently mauled by his lips he began kissing down my body, where I wasn't sure I wanted his mouth. As he kissed through my bush, he kissed the top of my pussy and then began moving between my legs. I tried to take hold of his head, at which time he delicately moved my hands alongside my body as I felt the warmth of his breath on my vulva. \n\nI could smell my arousal and was sure it would be off putting to him, to my utter surprise he smelled deeply, then declaring I had a wonderfully sweet smelling pussy. When his tongue touched the labia I squealed and jerked my hips upward, it was as if my body was ruling against my mind every step of the way. Moving forward a little he settled in, his mouth enveloped me as his tongue swiped straight up my slit. My hands were wrapped tightly around his wrists which were now under my butt and alongside my hips, I felt that if I let go, I might fall off the mountain I was perched on. \n\nHe continued parting the labia with his tongue as I writhed and whimpered while he ministered to my grateful pussy, pushing my hips to meet his mouth, moaning from deep within. As his tongue flicked across my clit, I felt my thighs close on his head and my tummy tightened. He continued to lick and suck softly on my love button, causing me to have the first orgasm which immediately induced another. I was pushed up into his face, my body shook, I couldn't seem to catch my breath, I was making soft sounds I didn't know existed within. I felt like there was a buzzing tingling sensation all the way to my fingers and curled toes. My areolas were scrunched up and the nipples were so hard they hurt.\n\nAs I came down from my mountain top perch, I looked down to see Orin's head laying on the top of my stocking, looking at my formerly unseen labia as it pulsed in and out. I reached down to pull him up, kissing him the instant he was close enough, realizing I was kissing my love juices, surprised that I didn't mind tasting and smelling my arousal. His hands were softly working my tit flesh and tweaking my nipples, keeping them hard.\n\n\"Orin. I don't know how to do the same for you.\"\n\n\"Don't be concerned with that Addie, I want to make love to you, I want you to know how much I desire you. Open your legs, I'll go slow until your hymen breaks, I'll be as gentle as I can.\"\n\n\"I don't have one, doc says I broke it years ago. But I've never had anything inside me before, I want you inside me but I'm scared Orin.\"\n\nHe kissed me softly than explained how he would press forward into me, that I'd feel the sensation of pressure as the lips resisted at first and when he was inside, he'd give me time to adjust. I felt the tip touch my labia, he moved it up and down a few times to coat it with my dripping juices, then placed it at the entrance to my vagina and pushed. I didn't think it was going to fit when suddenly I felt my vagina open slightly. As he pushed forward, I pushed against him, as the head popped through, I yelled *ORIN*.\n\nHe stayed in place kissing my cheeks and lips, shushing me and telling me to relax, the hardest part was over. He pushed in an inch or so then withdrew, doing the same again and again going deeper with each stroke. I had no pain to speak of, what I felt was discomfort from being stretched and filled in a way I'd never been before. I could feel the wide head moving along my vaginal walls, stretching, tantalizing, waking up nerve endings I never knew I had. My vagina hugging the rest of his shaft as the head moved forward, it was beginning to feel good.\n\nWhen I felt his balls touch beneath my pussy I smiled at him, I had taken everything Orin had, he leaned down, kissed the tip of my nose and began a gentle seesaw motion in and out of my bubbling fountain of lust. I couldn't get over how wet I was, I could feel liquid running down the perineum toward my anus, his rigid cock stretching my hole, my labia tight around his pole securing him to my body. He was raised up on his hands when I happened to look to the left, stopping my gaze instantly. In the mirror I watched as our bodies merged, his light skin joined with my darker skin, it was then I knew the meaning of Adam knew Eve, which I had learned in Sunday School but never understood. We were one, joined together, the two becoming one flesh.\n\nWhen he looked at me, he followed my eyes to the mirror, smiling as we watched ourselves making love. It was about this time I began moving my hips into his downward stroke, I didn't know that I was to do such a thing, but my body did. I could feel tingling sensations that had begun inside me begin to radiate throughout my body, rapidly heading for the center of my body. I raised into Orin without dropping, my breathing had stopped, I was moaning and had my hands clenched in his chest hair. My hips were bucking wildly, completely out of my control.\n\nOrin asked where I wanted his cum. \"In me, in my pussy Orin, cum in my pussy.\"\n\nMy subconscious was screaming, *who the hell is this woman saying pussy and cum, much less cum in my pussy*. I could feel him begin to swell, every vein on his dick seemed to get larger and more pronounced as he arched his back pushing into me with all his force. I had admired how muscular his ass was when I undressed him, I was now imagining those taut muscles driving his hard rod into the quivering mass of satisfied flesh called my vagina. \n\nI could feel his cock twitch and then the first shot of semen hit my cervix, followed by three more heavy ones before he was only twitching and jerking. With each spurt he would withdraw and thrust into me, as though he were trying to drive it deeper than our bodies would allow. His face was contorted, looking almost painful, but with pleasure showing as well. He didn't make a lot of noise, mostly grunting and hissing through his teeth as he fought for the next breath. He slowly lowered himself onto me, resting on his elbows, kissing my neck, my lips, anywhere he could reach.\n\n\"Are you alright baby? I didn't hurt you did I? It was so good I kinda got carried away. Addie, you're a fast learner, you did wonderfully for a first time.\"\n\n\"I'm fine. Did you just call me baby? No one has ever called me baby will you call me that when we make love? I want to be your special baby. Boy you sure had a lot of sperm I didn't think it was going to stop.\"\n\n\"If you think I had a lot, look in the mirror. See that white ring coating the base of my cock? That's your cum coated around my dick, I could feel your juice on my balls, I think we both had a bunch of it stored waiting for each other.\"\n\nI loved the feeling of his body on mine, but he was getting heavy as I pushed on his chest. He got on his knees, picked me up, sat me on the potty and told me to try and get some of the cum out of me or I'd be dripping all day. He left and came back with fresh panties as he handed me a warm washcloth. When I had cleaned, I removed my stockings and belt, sliding panties on. He washed himself, walking into the bedroom where I was lying he pulled the covers up over me and told me to rest, he'd go clean the barn and feed cattle, if I wasn't up when he returned, he'd wake me. \n\nI felt strong fingers going through my hair along with someone whispering Addie, wake up baby. I opened my eyes to the most wonderful sight, Orin and his big toothy smile. He offered to help me dress, I knew that I would end up undressed and under him if I agreed, taking a rain check for after supper. He laughed and swatted my ass as he walked away, I told him I'd start lunch in a few. He informed me it was on the table so I should get a move on. \n\nIn the afternoon we ran fence line for the north pasture, replacing a few rotted posts and re-stretching wire where it had sagged. I was tender between my legs, Orin had me sit on the tractor or the wagon as I watched. At one point I had grabbed the post hole digger, he quickly took it away from me and lifted my little ass onto the wagon. \n\n\"You sit right there baby. If you wear yourself out now, I won't get any pussy tonight, and that aint happ'nin, you woke a giant this morning.\"\n\nHe also did the lion's share of the milking, I washed a few and dipped a few, but not much else, this guy was serious about his poontang, and I was all too willing to supply him with as much as I could endure. Following supper and play time dishes, I say playtime because neither of us could keep our hands at home, we got naked and showered together. He had brought extra clothes and his toiletries to the house, we planned to move his stuff over the next few days. \n\nHe spent extra time washing my breasts and between my legs, being very careful that he was gentle. After drying each other he carried me to the bed and once again brought me to a thunderous orgasm with his tongue. I wanted to know how to give him a blowjob, he let me put the head in my mouth, I quickly realized how fast it filled that space and how stretched my jaw muscles seemed to be. I tried sucking and bobbing my head a few times, Orin lifted my head off his tool telling me we'd practice a little each time we made love and that it wouldn't take long for me to learn. \n\nTonight though, tonight he wanted me on top, my nether region was still sore and slightly swollen. He told me I could control the depth and speed by being on top. As I straddled him, I reached between us placing him at my entrance, then allowing gravity to lower myself onto his dick, I was extremely wet and hit bottom within three strokes. He groaned when my ass hit his pelvis, I smiled, proud of myself for taking it all right away. As my rhythm steadied, I was grinding back and forth as much as I was raising up and down. Those sensations of climax began pouring through my body as I tensed, my tummy quivering, my vaginal muscles grasping his dick tightly and a loud deep moan emitting from my lips.\n\nAs I slunk forward, he pushed me straight, reminding me there were more orgasms to come, don't stop now. I was bouncing and thrashing about as the second climax hit, then a third, I was worn out. He lifted me off laying me on my tummy, as I was protesting, he was going behind me, when he lifted my hips, I wasn't sure what was next, that is until I felt the head against my slit. I pushed back the same time he pushed in and we were pelvis to ass in two strokes. He rubbed my ass and asked if I was okay, was it too much. \n\nI whispered, \"Oh God no, it feels wonderful Orin, I'm going to like this position.\"\n\n\"Baby, I'm going to go faster and harder, if it gets too much pat my thigh and I'll stop.\"\n\nHe began to piston in and out of me at a steady pace, as I groaned and moaned he quickened the pace and the strength of each thrust. In no time I was pushing back into him, my ass slapping against his skin, again and again, causing little squeaks and muted squeals between gasping breaths. I could feel it happening again. \n\n\"Orin. Orin, I'm gonna cum. Can you cum with me? Fill my pussy Orin, please.\"\n\nHe didn't disappoint, somehow, we managed to cum within seconds of the other. Our bodies shaking, this time he was much louder, bellowing like a cow stuck in the mud before he collapsed onto my back, then straightening and fell sideways next to me. My chest was on the bed, tits mashed into the mattress, my ass still high in the air, hips rolling back and forth slightly, it felt like my pussy lips were opening and closing, seeking that delicious cock once more. I felt a dollop of sperm run out and drop on the bed. Before I could get up Orin had me in his arms carrying me to the toilet. \n\nOnce cleaned we snuggled tight under the covers, falling asleep right away. The first few mornings milking didn't get started on time, one of those mornings I woke to him slowly fucking me in my sleep, it was slow and gentle, neither of us hurrying, taking our time trying to cum together again. The next day I was determined to suck his cock and almost did before my jaws hurt so much I was ready to cry. Orin pulled me off, licked my pussy enough to make me wet and then buried his cock deep within my vagina, we came within minutes. \n\nCows are creatures of habit, they were used to us milking by 5:30 at the very latest, production dropped off because of our morning trysts, forcing us to begin our morning romps earlier or saving them for after breakfast. Of course, we still maintained our nightly nooky as well, unless we were worn out from the day's work activities. Once the fall harvest was complete and we were past turkey day the daily grind of farm life leveled off and slowed down. \n\nClarence and Mary had planned to winter in Texas, unfortunately his health wouldn't allow it. She and I spent a lot of time after my deflowering talking about technique and new positions, she talked me into ordering some crotchless panties and a peek a boo bra with the nipples exposed. I thought Orin's cock was going to break off sitting on the couch across from my chair as I raised the dress exposing my bare slit through the crotchless panties. He literally crawled across the floor and pushed his head under my dress, opening my legs and licking me to a quivering mass of flesh.\n\nI let him carry me to the bedroom where I sucked a little, promising the full job in the morning after breakfast, we'd practiced enough that I could now complete the job, to include swallowing his cum. He didn't want me to remove the panties or bra, he plowed into my folds through the panties as he sucked my nipples through the peek a boo bra. I'd never heard him be so loud when he came, nor had I ever felt him cum so hard and long before. It was literally running out of me.\n\nI asked with a smile on my face, \"Is it safe to say that choice of lingerie excited you? ",
        "\"Oh baby, it drove me over the fuckin wall.\"\n\nHe seldom used that word, I knew without a doubt I would wear that combination often if he came that hard and filled me with as much as he had that night.\n\nHis parents were no longer alive and he hadn't talked with either sister since being discharged. When they picked him up at the airport his older sister called him a hero, the younger one called him a baby killer. He spent one day with his older sister and left, having not talked with or seen either in nearly two years. He'd sent the older sister a birthday card and now a Christmas card, including our phone number. When I picked up the phone, I had no idea who it was, a woman asking for Orin.\n\n\"Oh, hi sis. That's Addie, my lover. No, we aren't married. Leave it alone or I hang up. No, I haven't seen Deb, why? No, I don't want to talk with her, last I heard she was at Berkley protesting something. You are, congrats, when are you due? I have no plans of returning anytime soon. Yup, love you too, give my best to Jerry.\"\n\nWe snuggled on the couch, I was in the corner and he was laying against me, snoring softly as the day caught up with us. I shook him, we went to bed and played before sleep overtook us. Winter was rapidly approaching, there were things to do before the cold set in, we spent the week of New Years doing those tasks. Greasing and putting away machinery, putting the bucket on the 806 in case we got any formidable snow, making sure the stock tank heaters were all functioning, piling straw bales along the bottom of the milk house to act as insulation, along with 20 or more other little things.\n\nWe were keeping the cows in the barn overnight, using their body heat to keep the water pipes and cups from freezing. In the house we didn't need much more heat than what we were generating with our active sex life. I was enjoying every new thing I learned, deciding that lying on my tummy with pillows under my abdomen was one of my new favorite positions. Orin doted over me constantly, if we went out, he made sure I was always protected and taken care of, a gentleman through and through. One of our favorite after supper games was for him to try and guess what lingerie I had changed into after my shower. \n\nIf he was right, he got to choose what sexual activities we would engage in, if he didn't it was my choice. I had won and wanted to try something Mary had told me about, but it seemed dirty, so I held off, until that night. It was right before I would begin ovulating and I was horny as hell. He had guessed the green panties with my white garter belt. He was wrong on both counts, I'd worn my red garter belt, and no panties. I lifted my dress as I walked toward him, his cock was stiffening in anticipation of what I might tell him to do. \n\nI lifted the dress over my head revealing that I hadn't worn a bra either, there I stood in my garter belt and opaque colored stockings. I ordered him to lay on the floor with a pillow under his head. I stood astride his chest still battling whether I could do it or not, finally lowering myself until my butt was on his chest. He knew what I wanted, put his arms under my legs, drew me forward so my knees were alongside his shoulders and spread my knees slightly, putting my pussy directly on his mouth. When Mary told me about it I wasn't sure it was something I wanted to do, but looking at the gleam and anticipation in his eyes that thought disappeared instantly. \n\nNo one told me I was to move back and forth across his mouth, but my body knew to do that. His hands grabbed my hips making them stationary as his tongue licked between the labia, spearing through both the outer and inner with his tongue, stopping as it came in contact with my clitoris. I jumped and yelled *Oh fuck*, something I had never done before, it was somehow liberating as I expressed my deepest sexual desires. \n\nOrin continued to lick and take me to new heights as I ground back and forth across his tongue, he at one point simply kept his tongue hard and in one spot while I moved my clit over and around it. My body shivered and quaked as my second orgasm hit, by then I was out of breath, I lifted myself off him and laid down. He was sucking my nipples and playing with my breasts as he kissed my tummy and slipped a finger into my vagina, slowly working it back and forth. My hips were rising and the moans coming from deep within signaled for Orin to mount me. \n\n\"Orin, I need your cock baby, I need you to take me over the edge again, make me scream.\" \n\nHe got busy making love to me, in and out taking full strokes, my vaginal walls squeezing the shaft tight as the fat bulbous head opened the way. I've heard it said there are over 2000 nerve receptors within the vagina, I'm positive he was stimulating every one of them that night. It felt so good, so right, me being impaled on my lover, juices flowing from me onto his dick. I was about to have another climax and wanted Orin to cum with me. \n\n\"I'm so close baby. Cum with me Orin, fill me up, make me your woman.\"\n\nHe slammed forward spewing hard streams of semen against my insides, splashing against the walls, that was all it took to send me into orbit as I raised my hips off the bed trying to grind my vulva into him. All the while screaming like a banshee, my hands not knowing what to do. One minute they were grasping the sheets, the next they were squeezing my tits and pulling the nipples, then into his chest hair, they finally ended up grasping his arms so tight I left red marks on his skin. \n\n\"Oh my God Orin. I never imagined a climax as excrutiatingly wonderful as that. My tummy is still quivering, and my hips keep bumping forward, it's like they're trying to find more of your baby cream.\"\n\nLife seemed to flow well, that is until March when Uncle Clarence had died in his sleep. Mary told me he went quietly, she had woken about 4:30 sensing something wasn't right. When she touched him, the skin was already chilled, knowing he had gone on she lay with him another hour before calling the boys and the sheriff. Instead of a funeral Mary had a memorial service planning to bury him come spring. April brought warmer weather and with it an urgency to start getting ready for spring planting, it also brought something into our lives I hadn't thought about. Mary's boys wanted to buy my farm and combine the two, giving them a total of more than 500 acres, which they would need to carry out their dream. \n\nThey wanted to extend their barn from 60 to 100 cows, combine my herd with theirs and buy another ten cows. It was way out of the box thinking, but very do-able, especially for three strong bucks all under 30 with strong wives to help. Caleb was the oldest and had a daughter, neither of the other two had families as yet but were planning to do so soon. I pondered what to do, Orin and I spent many an hour going over the pros and cons. In the end it was a phone call from his older sister that determined my decision. Her husband Jerry had died in a farming accident, one easily prevented, which made it all the more grievous. Orin was being asked to return home and farm with his sister, who was left with a farm, three kids under the age of thirteen and another due in two months. \n\n\"Hi Marie, so very sorry for your loss. I've thought about your proposal, there are a few things I need to know before I decide. First, I'll be bringing Addie with me, I don't want guff from any of you, we will live our lives the way we choose, and we don't need anyone else telling us otherwise. If you're in mom and dad's old place who's in yours? Just the hired hand temporarily, okay, if we make the move I want that house, we'll figure out where to house Jeremiah. Finally, how soon do I need to be there, and can we bring our team of horses?\"\n\nMarie explained neighbors and the hired hand were taking care of chores for another three weeks, she said she would be willing to hire a truck to haul any equipment we wanted to keep as well as the horses and our household stuff. She lived in eastern Nebraska, we'd be about four hours away and could make multiple trips if need be. Lying in bed that night I was feeling needy as I cuddled into his arms. \n\n\"Orin, have you ever thought you might want to find a young girl and have a family? I can sell my place and I'm sure I can live here until I find somewhere else. Maybe Mary and I will move in together.\"\n\n\"Don't you wanna have kids Addie? I know you're forty, but my ma had the rebellious sister when she was 42. You're strong and healthy, if we're careful during your pregnancy I think you'd be fine.\"\n\nI was in shock, never in my wildest dreams did I think Orin wanted to have babies with me. Deep within I had to admit my desire to be a mother was overwhelming, especially as I was rapidly approaching the age where I wouldn't be able to. I flipped on the lamp and leaned onto his chest, staring into his sleepy eyes. \n\n\"Do you really want to have a baby with me? You're not just saying that are you? I'm sixteen years older than you, what if I can't get pregnant?\"\n\n\"To answer the first question, I absolutely want to have children with you. When I think about your tummy sticking out full of our baby it makes me hard. (I reached beneath the covers, he was hard) Does it make any difference to you if you're older, it doesn't to me, and finally. You'll get pregnant, I have some well trained soldiers who will storm your cervix, work their way through and find your fertile egg. There are no worries in my mind about you being pregnant.\"\n\n\"You said children, Orin are you saying we'll have more than one?\"\n\n\"I'm saying if we do move, I want to marry you right away, then get you pregnant as soon as humanly possible. You'll have our first by the time you're 41, nurse for a year then get pregnant with our second. A girl first, then a boy. You'll be done having babies before you're 44 and then we enjoy life raising them.\"\n\n\"I love you Orin, it all sounds so simplistic, but that's part of what made me fall in love with you, you don't sweat the small stuff and aren't afraid of the rest. I want to talk with Dr. Adkins before I get pregnant though. Can you wait a few days for an answer?\"\n\nDr. Adkins told me that as healthy and fit as I was there was no reason whatsoever that I couldn't bear two children. We sat down with Mary and the boys reaching an agreement we could all live with, set up a moving date a week later, got hitched the day we left and were on the road to Marie's on the first of May. Marie's farm is north of North Platte about 15 miles, I was excited to be near a larger city for the first time in my life. We had purchased a late model used Ford F-150 prior to leaving the farm but kept the old '53 Chev. It would come with the rest of the machinery we'd kept.\n\nWe were pulling a trailer with our clothes and some of our household things. Driving up the long driveway in the late afternoon we could see Marie and the kids on the porch waving. Orin opened my door, helped me out and silence took over. Everyone tried to not act surprised. I elbowed Orin. \n\n\"You didn't tell them I was black did you, or that I'm older, you asshole.\"\n\nWith a grin he said, \"I thought I'd let them figure it out on their own, Mrs. asshole.\"\n\nMarie was first off the porch hugging me, telling Orin what a beautiful wife he had, saying it will be so nice to have a woman her age around to talk with. The kids followed their mother's example, hugging me, the littlest wanted to be held, I obliged. Lying in bed we decided we'd take the next day to get acquainted with the farm and rest before taking over. Orin asked if I was too tired to make love.\n\n\"It's my wedding night you moron, of course I want to make love. I've been off the pill since we talked about having babies, I'm not due to ovulate for another week, but it never hurts to plant seed in fertile ground, now get busy and give me a baby.\"\n\nMarie and Jerry's operation was much bigger than mine had been, it was actually the homestead Orin had grown up on, Marie and Jerry purchasing it right before his folks died. They had purchased mortgage insurance so at least the farm was paid for when Jerry died. They were milking 90 head with room enough for another ten, there'd been talk of putting up a parlor and doubling the herd, but with us coming in we put the brakes on that for the time being. Neither the milking equipment guy nor the building contractor were happy with us, but as Orin said, we weren't in business to make them happy. \n\nWe kept on Jeremiah, the older single hired hand, buying and setting a 14 x 60 mobile home on the property to house him. He was happy and content, he had plenty of room, we in turn didn't lose an asset who'd been with the family over ten years. He knew as much or more about the farm than anyone else, Orin and I let him know we appreciated him and thanked him for staying on. \n\nField work and planting were in full swing when we arrived. There were days I didn't see Orin other than for breakfast and after evening milking. The corn was all planted, but 60 acres that had been corn for three years was being transitioned to soy beans, corn naturally depletes nitrogen levels in soil, beans naturally replenish that nitrogen, thus crop rotation is a must when possible. We finished field work and planting the last week of May, with first crop hay due to start in a week Orin wanted to take me out on a much needed date. \n\nAfter Friday night fish fry at Malladays Supper Club we stuck around until the live four piece group started. We hadn't danced in months and were eager to get our sea legs back under us. The terminology in that day was *grooving*. Not many danced at first, what picked me out of my seat was when they played *Stand By Me* by Ben E. King from the early 60's. It was too fast for a slow dance and too slow for a fast dance, we improvised with a slower version of the jitterbug. The next song was a slow one, as Orin pulled me in tight, his right hand was on my butt, he suddenly slid it down to the crease of my ass then back up.\n\n\"No panties?\"\n\n\"Not a stitch under this dress other than a belt and stockings. I'm dressed to fuck you big boy. Think you're up to planting more seed when we get home?\"\n\n\"But Addie, you hate going without underwear.\"\n\n\"I love you more than I hate not wearing undies Orin.\"\n\nWe did a few more twirls around the dance floor, Orin asked if I was ready to go home and make a baby, to which I happily agreed. As we drove his hand was under my dress the entire way, to say I was ready to jump his bones when we got home would be an understatement. Walking across the porch to the front door Marie stepped onto hers and yelled my name. I simply held up my hand and shouted, \"tomorrow.\" With a huge smile she stepped back inside and shut the door. Orin was a frantic lover that night, I say that because he did something he'd never done before and has never done since. With my dress off he lifted me above his shoulders and sat me onto his shoulders with my pussy in his face.\n\nLeaning my back against the dining room wall he proceeded to eat me to a climax that seemed to come in waves, one after the other. Lowering me he asked if I'd cum more than once, when I held up four fingers, he smiled that smile of triumph only a man can get when he has pleasured his wife. I started removing his pants determined to blow him on the spot, I no more than had it sloppily wet and hard as a steel pole when he lifted me, carried me to our bed and told me hands and knees. \n\n\"This load isn't going into your mouth lover this is going deep inside where one of these little soldiers can find a seed to fertilize. I want to see my Addie with a big tummy.\"\n\nWith both of us so worked up it didn't take long to feel him explode inside as I quivered and shook. I like doggy, it goes deep and Orin can hammer away at my hungry cunt with absolute abandon. We'd been screwing at some time or another every day on our way to me being pregnant, when I missed my period, I made an appointment which determined I was indeed going to have a baby. Marie had gone with me and on the way back she expressed how pleased she was about our pregnancy, stating she hoped Orin would stay off me at least one night so she could sleep with the windows open again. I was mortified and my face showed it. \n\n\"Oh Addie, it's okay. Jerry and I fucked like rabbits when we wanted our first. At the time we were living with my folks, those poor people didn't get a full night sleep for months. My mom told me she was excited when I said we were moving. She told me she and dad were active sexually, but they didn't try to kill each other in bed. I'm not sure what that meant. This last one should be born any time now, I feel it inside, nothing's happening, but I just know it.\" \n\nIn bed that night I was more quiet than usual, Orin pulled me tight and asked what was going on in my pretty little head. When I told him there was a baby growing inside me I thought he was going to flip. That was quickly interrupted with a call from Marie, her water had broken and she needed to get to the hospital. I stayed with her the night, her baby girl being born just after six in the morning. The moment was bitter sweet at best, the baby was born, but her daddy was not there to see her. For the next week I spent every day with Marie at the house making sure she had time to rest and nothing else. Watching her nurse I was jealous, but realized I would soon be doing the same. \n\nFor days after I told Orin about our baby he was so excited, always rubbing my tummy, kissing the non-existent baby bump while talking to what he was sure was our daughter. He would lay with his head on my lap talking to the baby, I would run my fingers through his long luxurious hair as I contemplated how wonderful my life had become ever since Orin entered. We would muse about which traits we thought the baby would have, my greatest hope is they would have his thick straight hair, his was that they'd be strong and have my features, along with light chocolate skin. \n\nAt six months I stopped doing chores, concentrating on our home and paperwork. My tummy was poking out about six inches, when I'd go to the barn to visit while they milked Orin would hold my tummy gently, bend and kiss my belly, then my lips as he squeezed my butt. Marie was a godsend, helping me know what to do and what to expect, making sure I was well taken care of. Aunt Mary came for a two week visit in my seventh month, Orin and I both commenting as we lay in bed that she didn't look good. Three weeks after her visit she went to join Clarence at the big pasture in the sky as they called it. I felt like she simply gave up once Clarence was gone, her coming to see us was like her last goodbye. Once she knew we were okay it was time to go, she wouldn't be the first to die of a lonely heart. \n\nWe acquired a guest we weren't looking for shortly after her visit. An old black gentleman in his mid- 70's, a friend of Jeremiah's that needed somewhere to live. The daughter he'd been living with was moving out of state and had no room for him where they were going. Jeremiah said he had room for Ezekiel and wouldn't mind some company. They both enjoyed a beer before bed and gin-rummy, how could a fella go wrong with a friendship like that? Ezekiel insisted on doing something to earn his keep, he had his SS for the little bit of cash he needed, but Orin found smaller lighter jobs for him to do. We paid him a salary which caused him to beam with pride. \n\nMarie's oldest was ready to begin learning to run the bigger machinery and start learning to milk. Within a month Orin had him driving the 806 pulling hay wagons and unloading, only to do it over until all the hay was in the mow. It took him a little longer to get over his fear of the horses, but within six weeks he was harnessing and driving the team, proud as a peacock, smiling ear to ear as he'd pull a hay rack around the yard with his siblings sitting, squealing, having the time of their lives. Sweetcorn was beginning to ripen and like so many farm kids they all wanted to sell to the locals and tourists.",
        "Orin suggested the oldest boy Edward (13) and girl Maliah (11) pick corn in the early morning after chores, load several dozen on a hay rack, pull it into town with the horses and ask old man Neilsen if they could sell from the edge of the parking lot at his auto repair business. Orin also suggested giving him a dozen ears each time they parked there. The kids didn't know it, but Orin had already talked with Lenny and knew he'd let them, but he felt it was a good lesson for them to ask and not assume. They loaded fifteen dozen the first day and were sold out by two o'clock, the next day they took twenty five dozen and had sold out by four, which worked out just right for chores.\n\nThat went on until the corn was done, they sold tomatoes and cantaloupe as well when they were in season, by the time the season had ended the kids had made over four hundred dollars. Marie made them bank half and then let them use the other half for school clothes and some small things they wanted. Ezekiel loved the horses, he'd grown up working with horses and mules on his dad's farm, we let him harness them and drive into town just about any time he wanted. He was a proud man, driving that team made him feel like a king. \n\nWhen Marie and Orin grew up it was all chores all the time. The two agreed they weren't going to raise their kids the same way, they'd let them be kids for a while and not junior farm hands. As I waddled around in my ninth month Orin kept talking about our baby girl, damned if he wasn't right, our daughter was born at 5:20 am on a Thursday morning. We named her Alice after my deceased mother. Our prayers and hopes had been answered, she had my soft features, light chocolate skin and a head full of straight hair.\n\nOrin doted over me and that baby almost to the point of distraction. I would have to scold him to get his butt out of the house and get busy with chores. Our little Alice was a tit girl personified, when she was hungry and could smell mama she fussed and carried on until she had a nipple in her mouth. I had dreamed of one day nursing a baby of my own, but until a few years ago I never would have thought it was possible. Aunt Mary told me I could do this and would have been so proud of me.\n\nI loved watching my baby girl, her little lips sucking, drawing my nipples out and into her mouth, extending them well beyond their original shape. She was a noisy eater, always making little noises and slobbering while trying to look around. Nosiest baby I'd ever seen. Orin would watch me feed her in awesome wonder, grinning, talking to her about farming things, as though she understood. The day I'd had my six week checkup Orin asked what was for dessert after supper. I smiled and told him his dessert would be served in bed after Alice went down for the night. \n\nThat man, he undressed me with his eyes the entire night until I took Alice into the nursery. When I walked into our bedroom he was naked, his back was leaned against the headboard, his dick sticking straight up like a flag pole. A look of lust in his eyes that I hadn't seen in weeks. He asked for and received a few tastes of breast milk, awfully hard not to taste when his lips were sucking the life out of my breasts while he pounded into my pussy with abandon. We went twice that night, me begging off for another two nights while the swelling and soreness in my cunt subsided. \n\nMarie's boy Edward had been helping Orin and Jeremiah with milking close to five months when Orin and Marie decided he was old enough to start taking a regular spot in the milking. It's not as though you walk into a barn and simply start pulling tits, each cow is an individual with traits all their own, if you aren't milking them on a regular basis you have no idea what you're dealing with. Edward now knew all 90 of the milking cows in the barn and the twenty or so that were dry waiting to freshen. He knew them by name as well as ear tag number, Jerry would have been extremely proud of the young farmer his son had become. \n\nI weaned Alice at a year, within two months I had our second growing inside me. Orin was sure it was a boy, I was sure it wasn't. Three months into the pregnancy we found out there was one of each, a boy and girl. It was only then he informed me there was a history of twins in his family. I privately called him a jackass, but behind my fake anger I was jumping for joy. He saw right through my silly display and ravaged my body twice before going to sleep, once with his tongue and once with his dick. My tummy was big as ever with those two sprouts growing inside me, by the seventh month walking was out of the question, I waddled everywhere I went. \n\nMarie and I would grocery shop together so I didn't have to drive, I was to the point where I nearly couldn't reach the steering wheel and foot pedals at the same time. Local folks had gotten to know and accept our mixed race family, little old ladies of all shapes, sizes and colors would have to stop and coo over Alice, often wanting to hold her. Sometimes she'd go to them other times not, like all of us it depended on her mood. Everyone in town knew Marie, being with her so much probably helped folks adjust to the once football and baseball star, the valedictorian and war hero marrying an older black lady, then having the audacity to have children with her. No one ever said or implied that logic, but Orin and I wondered just the same.\n\nIt was on one of our trips grocery shopping that Marie suddenly stood still in the middle of the aisle with a look I'd never seen before. A younger woman walked toward us, not kempt, in those days we called them hippies, now we simply call them vagrants. As she reached the cart she greeted Marie by name. Marie responded.\n\n\"Hello Deb. How long have you been back in town?\"\n\n\"About a week, leavin again tomorrow.\" No hug, no handshake, no emotion on her face. \n\n\"Aren't you going to stop and see the kids or Orin? This is his wife Addie, Addie our sister Debbie.\"\n\n\"Yeah, I know who she is, at least he did one thing right marrying her before he knocked her up. I saw you last week when you shopped, I see she's about to drop another kid into this already over crowded world. What the fuck is wrong with you people? No, I'm not stopping by the farm, I drove by a few nights ago, I saw him walk to the house after milking. He's still a baby killer in my eyes, never want to talk to him again.\"\n\nAnd she didn't, leaving town without speaking to Orin or her nieces and nephews. After that incident Marie lost all contact with her for over fourteen years when she received a copy of Deb's obituary in the mail with an Oregon postmark. She had died of ovarian cancer, no husband, no children, no family listed. Marie wondered how anyone knew to send the obituary to her.\n\nOrin Jr and Mary were born on a Monday at 3 and 3:02 in the afternoon. I had two little mouths to feed from my breasts, somehow God made us so we have enough, I was surprised at how much milk my breasts produced. Speaking of milk, shortly after the twins were born Orin, Marie and I made the decision to go ahead with a double 10 herringbone parlor. It was a huge and expensive step, but if we were going to compete with the larger dairies it needed to be done. \n\nOver the next year we purchased another hundred cows and had our eye on a herd of 80 that was going to be auctioned. If we could buy them before the auction, we could get them for less. Marie's two oldest were helping milk on a regular basis and being paid to do so, we had hired two recent graduates to be in the parlor as well. Our goal was to be milking 300 head within the next three years. We needed to work out the logistics of a move forward like that, deciding it should be left on the back burner for now. \n\nThe twins were almost four months old when the invitation for a family reunion at my old homestead arrived in the mail. Cousins from as far away as California were going to be in attendance, this was likely to be a once in a lifetime occurrence and I really wanted to go. It was in August, Marie's kids were out of school to help and it would be right before third crop hay, Orin was as excited as I was about the whole thing. I was going to book a motel, but Mary's boys and their wives wouldn't have it, the youngest boy and his fiance were living in our old house. His fiance's folks had room for them at their house for a few nights allowing us to avoid the costs of rooms and making sure we'd be a part of everything going on. \n\nWhen our little caravan of wild noisy gypsies pulled into the yard every head in the place turned, some smiling, some not. I met cousins I didn't know existed, some accepting of Orin and I being married, some not. Orin seemed to take it all in stride, even the cousin from Chicago who was all about black power and racial purity had to finally acknowledge my husband was a good man in spite of his skin color. I thought *screw you*, no wonder you don't have a wife and kids, you're full of hatred and confusion. \n\nWe got the little's put down for the evening and sat on the porch on the swing as we'd done so many times before. I had worn a light sun dress and without Orin knowing I had taken off my panties before we came out to the porch. I was snuggled in close like we used to on chilly nights when I began feeling frisky. \n\n\"Wanna neck awhile white boy? Think you can handle this wild black poontang?\"\n\nI moved his hand to my mound on top of the dress and pushed into it.\n\n\"Where are your panties naughty girl? By the way, I've not only handled that black hungry pussy before, I've filled it with cum and knocked you up twice already. I aint afraid of your pussy little woman, but it sounds like she needs a lesson in humility tonight. I think I need to beat the insides with my rod. Now, where are your panties naughty girl?\"\n\n\"Feel me properly and I'll tell you.\" His hand was up my dress in a flash, my legs opened and his finger went straight inside my vagina with no hesitation. \"My panties are laying on the floor next to the bed, and I'm not putting them back on until you screw me with my favorite toy.\"\n\nHe was softly frigging me with his finger under the dress as we kissed. We pulled our mouths apart as we heard a noise to our left. He was going to pull his hand out, I put mine on top of his and held it in place. A niece in her early thirties was standing looking at us with a grin a mile wide. \n\n\"Um, um, Aunt Addie, mom told me to see if you guys needed anything, but I see you have everything well in hand. Oh shit, that didn't come out right. Oh damn, neither did that.\" \n\nBy now Orin and I were laughing so hard we could barely control ourselves. \n\n\"Aunt Addie, Orin, you guys have a wonderful night. You might want to close the house and put the air on, some of us have kids sleeping in tents. Goodnight, oh, and by the way, I hope I'm as frisky with my husband when we're your ages.\"\n\nOur ages? How old did she think we were? We took our little grope and feel show inside where Orin picked up my panties, smelled them and told me to get on my hands and knees, face on the mattress, ass in the air. Some may think that's inconsiderate, but I loved it when he told me what he wanted and how he wanted it, on top of the fact that I love being drilled from behind, it's almost as good as on my tummy with my back arched, pussy in the air. \n\nI was wet as a waterfall and he had pre-cum dripping off his dick, we didn't need any foreplay tonight, we needed to get down to it, the sooner the better. He whipped off his jeans and underwear telling me hands and knees. After I'd climaxed twice in doggy Orin flipped me on my back giving me another orgasm missionary, we finished with me riding him, slapping my bottom against his groin as I continuously impaled myself of his cock until we shook and jerked together. There are times I think that man's balls work overtime because one time he can climax and there's a nice flow of cum dripping from me, other times it can be gushing out around his cock and when he softens there will be a stream flowing out of me. \n\nTonight was one of those working overtime climaxes, we had cum all over us, my pussy fur was matted along with his pubic hair, it was on the inside of our thighs, sperm was running out of me puddling on his lower stomach. My dress had cum all over it, looked like I'd slept in it a week and reeked of sex. \n\n\"Damn Orin, where did all of that come from? You haven't cum that hard in months.\"\n\n\"I think it's being in this bedroom fucking you again that set me off. My mind went back to that morning you let me make love to you, that was all it took babe. You do strange and wonderful things to me.\"\n\nAs we made our way to the food tent for breakfast we received lots of giggles and finger pointing along with out and out laughter. I asked my niece from last night what was going on. \n\n\"You guys were going on, I told you to shut the house and put the air on. A number of us enjoyed the sounds, in fact my husband climbed on and decided to imitate you two. It was absolutely great, we haven't screwed like that in a year. Thank you. Who says old people can't have fun?\"\n\nI looked at Orin who was slightly red faced except for his long fu Manchu which I had braided, with his long ponytail he looked the part of some biker gang, I knew him to be full of fluff to me and our babies. The others didn't know that and wisely minded their manners around me. Following the barbecue in the afternoon we loaded up the babies and began the four hour trek home, looking forward to sleeping in our own bed. Which didn't seem to matter to him, I was on my back, legs raised and him taking me to the promised land before we went to sleep. I make him sound like a sex hound, truth is I'm as likely to start something as he is, I never shy away from my urges to ravage his body. \n\nThe twins were just over a year and I was in the process of weaning them, I wasn't having regular periods, some spotting once in a while, but nothing regular. Orin had taken me out on a Friday for a much needed date night. When we got home he undressed me, lay me on the bed and lavished my body with attention, sucking my labia and clit, kissing and wooing me, making my body writhe, begging him to please take me. Which he did in fine fashion, another night of multiple orgasms for me and a bellowing climax for him, one that left me with an awful lot of cum running out afterward. Those balls were working overtime again. \n\nWhen Orin came in for breakfast after milking, I sat on his lap wiggling my butt, looking at him intently. \n\n\"What babe, are you alright? Are the kids okay? Or are you just horny again, my gosh I can't seem to satisfy that pussy of yours.\"\n\nWith a grin I wagged my finger at him. \"Nope, none of those things, something much more exciting. I think you knocked me up last night you fertile devil. I can't prove it yet, but I feel it inside, a knowing without proof. I haven't been having a regular cycle, but two weeks ago I had some spotting, I think I was ovulating last night and didn't know it. You might be a daddy again.\"\n\nHe tried to act all concerned but I knew he was doing a happy dance inside. Turns out I was right, pregnant again. Alice would be starting kindergarten this fall, that's all I needed, another pregnancy. Oh well, there's a bright side to all this, I could still be back in Missouri milking 30 cows lonesome as hell. I'll gladly take the kids running through the house any day of the week, with Orin by my side and in my bed life is complete. \n\nAnother girl for us, her skin was darker like mine, but her daddy's genes came through with long wavy hair. When this one was born, I had my tubes tied, that man had too much sperm and they didn't take no for an answer if an egg was to be found. My age wasn't helping either, we both felt it was the right thing to do. We named her Adeline, after my great grandmother, an emancipated slave, whom my name was shortened from. We would make sure she wasn't another Addie, not that I didn't like the name, but she needed to have one of her own. It's different with boys, you just call them junior. \n\nWith no grandparents Jeremiah and Ezekiel were more than honored to fill that role. Jeremiah was still putting in a full day but, but with Zeke's age we had him doing nothing more than watching the cows for heat, running the silo unloaders to fill the feed bunker and small less strenuous tasks that need to be done, but this way they weren't taking time from the other guys. He normally ate breakfast with us and afterward If the weather was decent, he'd often harness the team to an old flat hay rack we'd converted to haul the kids around. Jeremiah had installed a two foot wall all the way around, making it easier to not lose a little one along the way. \n\nHe'd pull up in front of the house, the kids would exit screaming, laughing, squealing in delight knowing they were going for a ride with Grampa Zeke. He'd take them through the south pasture along the creek, then go through the gate onto Miller Valley Rd, follow it to County Rd D, turn onto Copper Creek Rd. and head for home. It was only a few miles, but it got the kids out of my hair three or four times a week for an hour or more and gave the horses regular exercise. Marie's two oldest, Edward and Maliah were in high school by now, they were asked often if one or the other would use the horses to pull a class float in the Homecoming parade, Fourth of July, Memorial, any special event, and the kids were happy to do so. \n\nIt was Maliah who surprised us with the horses, at 14 Orin didn't think she would be strong enough to not only harness and hitch the team, but to drive them by herself. She was tall for her age but not at all bulky, that theory went flying out the window as we sat on the porch on a Sunday afternoon sipping iced tea and watching the kids play. We could hear the clomp, clomp, clomp of work horse hooves on the drive to the left of the machine shed, turning our heads to see what was going on, as the team emerged from behind the building there stood Maliah on the double tree, leaning her trim body back while holding the reigns. \n\nShe was leaning back enough to hold herself upright without pulling too tightly, Pepsi and Cola, as they had named the team, pranced right along, heads high, huge hooves billowing dust with every step. My eyes flooded as I remembered Uncle Clarence and me. With little to no weight they were moving along at a good clip, Orin looked at me with raised eyebrows. \n\n\"I guess my theory of her not being big enough to harness or control the team doesn't hold water. Which means I'll hafta let her pull next summer after all.\" \n\nShe had been bugging Orin about being able to pull next July 4th in the junior horse pull, Orin made the statement that when she was big enough to harness and drive the team, he'd consider it. We watched as she turned right out of the driveway onto the gravel shoulder, dust billowing out behind her as the double tree coarsed along the gravel. She had seen me drive the team the same way years before, Jeremiah had put a metal bottom on the double tree so it wouldn't be torn apart, she had on an old scraggy looking straw hat, faded bibs over a tank top, barn boots and a smile a mile wide. Every other day she would pull the stone boat with a medium weight load we kept on it for training. It was enough weight to exercise and tone the muscles without straining them. \n\nAs word got out around school of her training schedule, we had cars lining the valley road every weekend to watch the waif of a girl drive over four thousand pounds of horse flesh two miles up the valley and back again. Being in eighth grade and beginning to develop, all those admiring folks were a huge boost to a young girl's image. She would come talk to me about things she wouldn't talk to Marie about, which I would tell Marie the next day when we had coffee. Maliah was being pointed in the direction her mom wanted her to go ... via her Aunt Addie. ",
        "Marie's two youngest were her biggest worry, both were young when Jerry died and didn't remember him well, both thought they were somehow bad children because they didn't remember their daddy. Marie was able to get them grief counseling directed toward situations like theirs, all of them kids, which helped them balance things in their little minds. With eight kids running around the farm it was never quiet, and if it was, trouble was being perpetrated somewhere. \n\nTime slips away when you're busy, before we realized it all of Marie's kids were married or in college. It was then Marie entertained the thought of Tom Delanski being her beau, he'd been trying to court her for years, with Marie telling him when the kids were raised, she'd go on a date with him. Well, there were no more excuses, she went to dinner with Tom and four months later they were married, he quit work at the implement dealers and went to work with us. Having always been a bachelor there was a huge learning curve for Tom, but he persevered and in the end was a happily married man. \n\nOur four kids loved farm life and took to it with ease. Two years out of high school Alice married her childhood sweetheart, they'd met in fifth grade and never looked at another, they have a farm about two miles away, we get to see the grands every week at least once. Orin Jr. and his twin Mary attended college and dental school together, they now share a practice in North Platte. Both are engaged and planning to marry the same day in the very near future. Adeline, our baby, is in her second year of college with an emphasis on pre-med.\n\nI'm in my mid-sixties now, still trying to remain sexy and desirable for my Orin. He is looking seriously at 50 and screws like he's 40, he's cut his hair to a shorter length mainly for safety but still has his fu Manchu which I keep trimmed around three inches. Even at that it still tickles the hell out of my tummy as he sucks my nipples, or my inner thighs if he's *mumbling in the grass* as he calls it. \n\nWhen I look back and consider all that could have or would have transpired had I never met Orin and followed him to Nebraska, it makes me shudder. A black girl born into a life of chores and milking cows with no real prospect of ever breaking that cycle, an alcoholic father who died early and a life of hard work ahead of me. That is until a Vietnam vet came along, he had been wounded both physically and emotionally. In the end we were what the other needed, he needed peace of mind and unconditional love, I needed to be loved and needed, cared for, found to be beautiful. \n\nWe somehow fulfilled those needs and desires in each other's lives, our kids are happy and successful, our health is good and our sex life has never been better. It was as if there was a switch in Orin that was flipped to the on position as the last child left the nest. He had me so worn out and swollen that first week I had to tell him no for the first time in our marriage. He smiled, pulled me close and whispered in my ear.\n\n\"There's always next week.\"\n\nThose *next weeks* have turned into months and years, neither of us complaining a bit. \n\nThere never was another family reunion the size of the one we attended, I was so happy we had gone, I have lots of photos and memories, as well as about fifteen more people on our Christmas Card list. Time has been good to us ... to me. I want for nothing.  \n\nMarie's two oldest chose to leave the farm life, Edward becoming a tax accountant, and Maliah marrying a career military man. Her two youngest have however chosen to stay on the farm, both are married and their spouses work the farm as well. Marie spends her days doting over grandbabies and being with Tom, she appears more happy now than I've ever seen her. \n\nAnd Orin, what do I say about Orin. He's like the energizer bunny, there seems to be no stopping him. I know he hoped one of our kids would have followed in his footsteps and stayed on the home farm, but he's happy none the less. He's still my lover boy, still my prince charming, still my constant protector. Lord help the fool who insults me or brings up my skin color, Orin is nearly blind with rage if that occurs.\n\nWe still hold hands whenever we're together in public, or something as simple as walking from the milk house to our kitchen door. Two unlikely people, two unlikely souls firmly knit together for a lifetime."
    ],
    "authorname": "R410a",
    "tags": [
        "interracial"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-summer-of-1969-pt-02"
}