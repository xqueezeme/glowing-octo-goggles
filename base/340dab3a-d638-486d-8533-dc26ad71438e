{
    "title": "Roommates Ch. 10",
    "pages": [
        "Craig slept in the next day for the first time in months. He was always an early-riser. Either heading out to the library or the computer lab first thing in the morning was normal routine. He liked to get his work done quietly and efficiently. \n\nToday was different. He slept late just like everyone else. He felt like a new man. The unexpected events of Brittany's dorm room gave him unrivaled confidence and swagger he thought he'd never experience. Craig slid out of bed naked since he now had his own room. He walked to the window swinging his flaccid cock around like a lasso. He looked down at the courtyard adjacent to the building. A group of freshman girls were walking across. \n\nI could fuck any one of them he thought to himself. He wondered if they could see up into his window and maybe even see his dick.\n\nWho wants an orgasm? he playfully said to himself as he squeezed his cock. The girls had since passed and he was essentially now speaking to no one. Craig laughed to himself as he threw on some shorts, a t-shirt, and sneakers. Today was a beautiful day. He was going to go for a run. Something he hadn't done in many years. \n\n---------------\n\nPicking up running proved not as easy as he would have liked. He immediately felt body aches, cramps, and struggled to maintain a good pace. But it didn't matter. He was on cloud nine. He pictured Leah's face as she came over and over again. He remembered the pure and genuine excitement all the girls had as they drooled over his big cock. He yearned to do it all over again. He felt as if he had the magic weapon that every woman wants. \n\nAs he rounded the corner on the last leg back to the dorm, he noticed several students both male and female, were giving him long looks. He knew his bulge was visible so they were probably just trying to catch a glimpse of it. This was nothing new for Craig lately. \n\nBut towards his building he noticed some students were stopping and clapping as he ran by. Craig took out his earbuds to find out they were clapping at him and calling his name. It was like the end of a marathon or something. He awkwardly waved and smiled back. The crowd laughed and waved back. \n\nWhat the heck is going on? he thought. \n\nBack in the dorm room, he ran into his friend Ron in the hallway. \n\n\"Dude! Holy shit man. Is it true?\" he asked, stopping Craig from passing.\n\n\"Is what true?\"\n\n\"Did you have an orgy with Brittany Stanton and her dancer friends?\" Ron asked, laughing as he spoke the words.\n\n\"Ummm...\" Craig didn't know how to respond.\n\n\"You did. Holy fuck man. That's... incredible. Must be nice to have a huge dick, huh?\"\n\nCraig forced a smile and nodded as he walked by. He then stopped and turned \"Hey umm... how'd you know that?\"\n\n\"Oh you didn't hear? There's a video again. It's making the rounds. We're gonna start calling you Mandingo, bro.\"\n\nCraig fake laughed and hurried back to his room. He sat at his desk and unlocked his phone. No messages. He prayed she hadn't seen it or heard it yet. He sent a text immediately. \n\n\"Hey!\"\n\nBouncing dots appeared right away. She was typing. \n\n\"Hi\"\n\n\"How are you?\"\n\n\"Fine.\"\n\n\"I'm free later. Want to hang out at my place?\" Craig typed back.\n\nThere was a long pause for several minutes. Finally, the dots reappeared indicating she was typing back. \n\n\"I don't think so\"\n\nThe words sunk into Craig like a sack of potatoes. Madison didn't want to see him. He was pretty sure she had either seen whatever video was going around or at least heard about it. \n\n\"How come?\" He decided to play dumb for now.\n\n\"I think you know why.\"\n\nCraig's heart raced. Despite feeling like a million bucks all morning, he was once again plagued with crippling anxiety and insecurity. \n\n\"I'm sorry. I can explain\"\n\nShe typed back right away. \"You can explain having sex with other girls when you told me you liked me? No thanks. I g2g.\"\n\nCraig's world was collapsing in on him. He was no longer floating in the clouds. He was sinking in the depths of the Earth. Word spread about what happened and it didn't take long to get to Madison. Craig darted out his room down the hall to Ron's. He pounded on the door.\n\nHe opened it. \"Hey man!\"\n\n\"Show me.\"\n\n\"Huh?\"\n\n\"Show me the video. Do you have it?\"\n\n\"Ohh that video. Ha. I haven't seen it. But let me see if I can get it.\" Ron fumbled with his phone as he texted. As they waited, it seemed like an eternity. Craig was shaking. \n\n\"Here.\" Ron handed the phone to Craig as he hit play and was immediately met with a shot of Brittany bouncing on him while Leah fondled his balls. The camera turned to see Myra, Hailey, and Melissa clapping and cheering. \n\nIt must have been Jordan. \n\nCraig handed the phone back just as he was about to orgasm and ran off towards his room. \n\n\"You're missing the best part! Watch out, it's snowing!\" Ron joked as Craig ran off. \n\nCraig barely ever used Facebook. He opened it up to find only one pending friend request: Brittany. He accepted it and immediately clicked through her Friends. There were seven named Jordan. He clicked on the only one without a picture. The profile was public. He clicked Jordan's friends and typed \"M-a-d-\"\n\nMadison West. \n\nJordan was a spy \n\nCraig sat back in his chair staring at Madison's name. She must have told Jordan about him. And in turn, Jordan saw an opportunity to look out for her friend. Craig felt defeated. Things were over with Madison before they even started. He felt like he could cry. \n\n----------------\n\n\"Ok, so what? Were you guys dating?\" Gary tossed a beer to Craig as he opened one for himself and took a healthy swig. \n\nCraig sipped his beer before answering. \"We kind of were headed that way. But then this stupid video goes around.\"\n\nGary laughed out loud before changing to a serious face. \"I'm sorry man. I'm sorry. I didn't mean to laugh. But, so, let me get this straight. You're the dude right now. You are THE dude. And you pick this little computer chick out of everyone?\"\n\n\"We have a history, man. She's not just some computer chick.\"\n\nGary shrugged. \"Whatever floats your boat, bud. I'm sure it'll work out. She'll get over it. Such is life when you're involved with the campus porn star.\"\n\nCraig glared at Gary. \n\n\"What?\" he protested. \"Your dick is on everyone's phone. Twice!\"\n\nCraig couldn't deny what his friend was saying. Just about everyone on campus knew about him. They've all seen him in his most private and vulnerable states. He hadn't yet come to grips with it. \"Yeah...\" he muttered. \"I know.\"\n\n\"Lemme ask you something,\" Gary said as he took a big sip. Craig did the same. \"And don't take this the wrong way or anything.\"\n\n\"Oh boy,\" Craig smiled. \"Here we go.\"\n\nGary chuckled. \"I'm not gay or anything. But... I watched the video too. And Jesus dude. You're fucking packing. How the hell did you stuff that thing in there?\"\n\nCraig shook his head. He was tired of talking about his penis. Everyone seemed to be obsessed with it. \"I dunno man,\" he said quietly. \"Just like everyone I guess.\"\n\n\"You're not just like everyone. You do realize this, yes?\"\n\nCraig stared at his beer can. \"I'm realizing that more and more each day.\"\n\nGary stood up and walked over. He placed his hands on Craig's shoulders. \"Hey, dude. Look at me. It'll be fine. It's all gonna work out. So she's mad at you. So text Brittany and let's go have a fucking blast tonight.\"\n\nCraig smirked. \"You just wanna meet her friends.\"\n\n\"You bet your ass I do. And if that means using your fucking hogstick, then so be it.\"\n\n-----------------\n\nThe frat party was packed. Students were everywhere funneling beers, dancing, playing games, and smoking weed. Gary, being more of a social type, was usually the lead anytime they would go out together. But tonight was different. Everywhere Craig went, he got high-fives from random guys and smiles from cute girls. Everyone there knew about the videos that were circling. Craig was more or less a campus celebrity at this point. \n\nThey met up with Brittany, Leah, and the others from the room that day. They all exchanged niceties and wound up sitting around an outdoor table together chatting it up. Brittany got distracted when she saw someone she knew and ended up in a conversation across the yard. \n\n\"You're kind of a big deal, huh?\" Melissa asked Craig. \"Everyone's talking about our little party the other day.\"\n\n\"You could say that again,\" Craig said as he looked around the yard packed with partygoers. \"Everywhere I go I feel like people have seen my junk.\"\n\n\"Hey! We were in the video too ya know,\" said Leah. \"I think my butthole even made an appearance.\"\n\nEveryone laughed. Gary caught eyes with Craig as if to say Can you believe this?\n\n\"So, I have to ask,\" he interjected. \"What prompted that the other day? All you guys just randomly having sex.\"\n\n\"Craig's penis is famous on our dorm room floor. Leah made a dildo out of it and we've all used it. So, that was our way of seeing the real thing,\" Myra stated. The girls cracked up giggling. \n\n\"Seriously?\" Gary was dumbfounded. The girls went on to explain how the silicone mold has made its rounds amongst the women and consistently delivered a good time. As they told the story, Craig kept his eyes on Brittany. She was flirting pretty heavily with some guys from the baseball team. He felt slightly dejected that she wasn't spending time with him. \n\n\"Is that true, Craig?\"\n\nHe snapped out of it. \"Huh? Is what true?\"\n\n\"You stuck your dick in a mold?\" Gary repeated. Everyone laughed.\n\nCraig buried his head in his hands. \"Not my proudest moment, but yes. Leah, you tricked me!\"\n\n\"You have a beautiful penis, Craig. Stunning really. I wanted to make one for myself,\" Leah rubbed his shoulder. \"You should be proud.\"\n\n\"You should be proud, Craig!\" Melissa chimed in. \"It's the best dick I've ever seen. And I've seen a lot.\"\n\nGary shook his head. \"Man, I wish my dick was that big.\"\n\n\"No, man. It's not all it's cracked up to be. I can never get it all the way in.\"\n\nGary was skeptical. \"Leah. I need to ask you. Did Craig give you a... ya know...\"\n\nA big smile spread across Leah's face. \"Four of them. Maybe five.\"\n\nGary nodded. \"I rest my case. I want a big dick.\" Everyone laughed. Just then, two girls approached the circle. \"Hey! Aren't you that big dick guy?\" She was clearly intoxicated. \"Yes! Yes you are! It's him!\"\n\nA small crowd started to form as everyone noticed Craig. Unsure how to respond, he smiled and half waved like a shy celebrity meeting his fans. Some rather boisterous boys joined the group and started chanting \"Whip it out! Whip it out! Whip it out!\"\n\nBefore long the whole party had gathered, cheering Craig on. Brittany joined the circle from the outside and watched proudly as Craig basked in the glow of fame. They caught eyes. She smiled and nodded. She wanted him to show off what he had. \n\n\"Why does this always happen?\" Craig asked, turning to Leah who could only smile and laugh. \"Because you're exceptional and you should be proud to show off!\" she said as she pushed for him to stand up. \n\nAs the crowd roared, Craig stood up, looked around and waved again. Next, he unbuckled his pants and lowered them. The crowd got louder with anticipation. He could feel his cock hardening with excitement and nervousness. There had to have been fifty pairs of eyes glued to his crotch. \n\n\"Woooooo Craigy!\" Brittany cheered from the outer circle. \n\nHe yanked down his boxer briefs revealing his sturdy throbbing nine inch cock. A dull roar erupted from the crowd as everyone clapped and cheered. Craig smiled ear to ear as he shook his hips, causing his penis to flop back and forth. He grabbed it by the base and wiggled it up and down. Everyone cheered again. He was putting on quite a show. \n\nLeah reached out and stroked him a couple times. Another round of applause. Then the chant started. \"Make him cum! Make him cum! Make him cum!\"\n\nCraig burst out laughing, closing his eyes while holding his shirt up. \"No, no, no, you guys! I can't!\"\n\nLeah continued stroking him. While reluctant at first, he soon let her take control. All eyes were on them as Leah gave him a fervent handjob for all to witness. Craig watched her hand race up and down his shaft, wondering if he was really prepared to have an orgasm in front of all these people. \n\nHe looked up and scanned the crowd. Nearly everyone was staring at his cock, clapping and cheering. It was surreal. All the attention he'd received over the last few weeks, the notoriety, the ups and downs, everything culminated in this very moment as he was about to publicly shoot his load like never before. Nothing else mattered. \n\nThen he saw her. Standing in the back of the circle with a solemn look in her eyes was Madison. She was not angry or resentful. She looked disappointed. She seemed to be the only one not looking at his penis. She looked him right in the eyes before quietly walking away out the back gate of the yard. \n\nCraig immediately pushed Leah's hand away. He was seconds from orgasm. The crowd erupted in boos. But Craig did his best to quell their excitement. \"I'm sorry, I'm sorry. I can't. I just can't,\" he said.\n\nMost of the people moved on. The party resumed. Craig stood uncomfortably trying to cram his erect cock into his pants. Leah covered her mouth, trying not to laugh. \"Here, honey. Let me.\" She helped him get his penis into his pants and zip up. Craig sat down quickly and took a big sip of his drink. \n\n\"Are you ok?\" Myra asked, concerned. \"You were on a roll there, huh?\"\n\nCraig nodded, but stared at the ground. \"I'm fine.\"\n\n----------------\n\n\"Hey!\" Brittany called out as she ran down the sidewalk. \"Madison! Wait!\"\n\nMadison walked briskly away as she held her arms tightly together. She didn't turn when Brittany called out her name. Eventually Brittany caught up and stood in front of her.\n\n\"Please. Stop. Can we talk?\"\n\n\"About what?\" Madison asked as she side-stepped Brittany and kept walking. Brittany walked next to her pleading for her to stop.\n\n\"Madison, listen. This is my fault. I egg him on. I encourage him to do these things. Me and Leah. We're not trying to hurt you.\"\n\n\"Oh you're not? Is that why you have orgies with him?\" Madison's voice trembled as her eyes nearly watered. \n\n\"Can you please stop?\" Brittany asked, this time pulling Madison by the arm. \n\nShe finally stopped and faced her. \"He's yours, Brittany. I don't really care. We weren't dating or anything. I don't know why you care to be honest.\"\n\n\"He's a really nice guy. He's sweet. And yeah, we've had our fun. Believe me,\" she responded.\n\nMadison rolled her eyes. \n\n\"But we're not a thing. He doesn't like me. I don't think I like him... like that. He likes you Madison. He likes you a lot. It's obvious.\"\n\nMadison scoffed. \"Oh, yeah sure. Hmm, let's see. Hot blonde cheerleader? Weird comp-sci girl who doesn't wear makeup. Just do whatever you guys want. Go suck his dick in front of your friends or something. I'm through.\"\n\nMadison continued walking away, but Brittany raced after her. Again, she grabbed her arm, but Madison jerked it away. \"What?\" she shouted out.\n\n\"Listen. I know we don't know each other. But, shit... we've been seeing the same guy. And I'm telling you Madison. He likes you. You two are right for each other. And I lose sleep thinking about what I've done. I'm trying to turn him into someone he's not. You and him though... you two belong together. I really mean that.\"\n\nMadison stopped and faced Brittany. \"Do you?\" she asked.\n\nBrittany nodded. \"Can you please stop so we can chat?\"\n\n----------------\n\n\"You alright bud?\" Gary asked as he and Craig filled their beer cups at the keg.\n\n\"Everyone at this party just saw me naked. So... no. I think I'd rather not be here.\"\n\nGary laughed. \"Dude. It was hilarious. And if anything you're an even bigger celebrity now. I say run with it. Enjoy yourself. Go find a nice young coed who wants to take a ride on that hoss.\"\n\nCraig was unamused. He just wanted to get out and find Madison. He scanned the partygoers hoping she had re-emerged, but found no such sign. \n\n\"Where's Brittany?\" Melissa asked. Everyone looked around, but she had disappeared too. Craig wondered if he had not only lost one, but two of his recent love interests. He feared he was now right back to where he started. \n\nAs the girls began to disperse, uninterested in where Brittany turned up, Craig felt his phone vibrate. He unlocked it to see Brittany's name pop up. It was a text message.\n\n\"Come over to my dorm.\" \n\nCraig noticed Gary was happily tagging along with the other girls and didn't feel bad about leaving. He dashed out of the party as quickly as possible in hopes of salvaging at least one of his recent flings. \n\n-------------------------\n\n\"Drink?\" Brittany asked with the mini-fridge popped open. \n\n\"Umm... I don't really drink that much. What do you have?\" Madison asked as she sat down on the couch. \n\n\"Here try this,\" said Brittany as she tossed Madison a hard seltzer drink. \"Doesn't even taste like alcohol. You'll love it.\"\n\nBrittany sat opposite Madison as they each raised their cans up toward one another. \"To our new friendship,\" said Brittany. Madison smiled and nodded as she took a tiny sip of her beverage. She placed it on the coffee table in front of her. \"To be honest, I'm not sure how we ended up here. Me. You. Him. This whole thing.\"\n\nBrittany laughed. \"Funny how things work out, isn't it? \n\n\"He's coming, right?\" Madison asked.\n\n\"He says so. I think he'll be happy we worked this out.\"\n\n\"Did we though? I don't even know, Brittany. I'm so confused.\"\n\nBrittany frowned. \"Don't be. I told you we're not right for each other. You two are. You belong together. Isn't that what you want?\"\n\nMadison crossed her arms and stared at nothing as she thought. She finally turned to Brittany with deep concern on her face. \"I'm not sure I can handle it.\"\n\nBrittany knew exactly what Madison was talking about. It was the elephant in the room. Craig was what the two girls had in common, but even more specifically, his huge cock. They hadn't discussed it yet. They hadn't shared their own wicked fantasies surrounding it, but it was something they both mutually wanted. \n\n\"Ahh,\" said Brittany, smiling and nodding in agreement. \"His tremendous penis.\"\n\nBoth girls cracked up laughing. Madison reached forward and took another sip of her drink. \"Like... ok. I don't even know how you...\" \n\n\"Took him?\" Brittany finished her question.\n\n\"Yes! The idea of that thing inside... it's just too much. Doesn't it hurt?\" Madison pepped up, desperately curious to hear from Brittany what it was like to have sex with Craig.\n\nBrittany shook her head. \"Madison, even I don't know how it was possible sometimes. He's so big. And thick too. I think it's the thickness that really gets me going.\"\n\n\"Gosh. He is thick. I couldn't even get past the head with my mouth,\" Madison said as she recollected the night in the hospital. Her face turned flush as they talked about Craig's penis. \"He's enormous.\"\n\n\"You have to go slow. Or he has to go slow I should say. He's surprisingly good at that. He recognizes his own size,\" Brittany said as she went to her desk drawer. She opened the top drawer and pulled out the replica of Craig's cock holding it up.\n\n\"That's real?!?\" shouted Madison. \"I thought that was just a silly rumor!\"\n\n\"Nope!\" Brittany smiled as she sat down next to Madison. \"This is him. Leah made it with her sculpting stuff.\" She handed the mold to Madison who stared down at it like she just found the Holy Grail. \n\n\"Look at this. How on Earth...\" Madison trailed off as she inspected the large mold with her fingers. \n\nBrittany giggled. \"I can't take it all. But I don't need to. He makes me cum so easily.\"\n\nMadison's facial expression grew solemn as she placed the mold on the couch between them. ",
        "\"Oh my gosh, Madison. I'm sorry. I didn't mean to say that. You know what I mean.\"\n\n\"No, no, it's fine. Really, it's fine. I know what you mean. I'm just trying to get used to everything, that's all.\"\n\nThey sat sipping their drinks as soft music played in the background. \"You know,\" Brittany started as she folded one leg up on the couch underneath her. She smiled at Madison. \"I could help you.\"\n\n\"Help me?\"\n\n\"Yeah. Tonight. He's coming over. I can be your sex guide. I can help you take him!\"\n\nMadison was confused. \"What do you mean? Like... help me have sex with him?\"\n\n\"Yes! I'll be like a sex coach or something! But you can be the one to have all the orgasms!\" \n\nBoth girls cracked up at the silliness of the proposal. Madison didn't actually believe Brittany was being serious. \"That would be something, huh?\" \n\n\"I'm serious! He's gonna be here any minute. Let's propose it to him. He's such a little freak lately you really think he's gonna be against it?\"\n\nMadison shrugged. She had never done anything like this before in her life. It was both exhilarating and nerve-racking at the same time. She fidgeted with the dildo in her lap as she contemplated the offer. As she mindlessly manipulated it in her hands, she suddenly realized what she was doing and placed it aside. Brittany giggled. \"Let's get you that dick.\"\n\n-------------------\n\n\"Come in!\" called out Brittany. \n\nCraig opened the door and let himself in. The lights were dimmed throughout the room. Brittany and Leah had Christmas lights strung around that illuminated his way as he approached the back room where the couches were. Soft music played in the background creating a calming atmosphere. \n\nThe first thing Craig noticed was Brittany sitting on the couch, cross-legged, smiling up at him. \"Hi Craigy!\" she said quietly. But Craig was blown away by what he saw. Brittany had no clothes on from her waist up. Her gorgeous, natural, huge breasts hung neatly supported by her crossed forearms. She smiled as she tucked her blonde hair behind her ear. \n\nCraig's cock twitched. Looks like he was going to get some. \n\n\"Hi Craig.\" A voice called out from the other side of the room. Craig broke his gaze and turned to see Madison sitting in a chair in the corner. She too was naked from the waist up. She was drinking a Truly beverage. Her nipples, larger in diameter than Brittany's, appeared erect. \n\n\"Madison? What... what are you... you're naked.\"\n\nBoth girls cracked up laughing as the stunned Craig stood between them, completely flabbergasted and disheveled. The girls laughed harder as they looked at each other. \"Sit down, Craig!\" Brittany said as Madison stood up and joined them on the couch. \n\nWith both girls on either side of him, Craig suddenly grew anxious. \"What's going on here? Am I in trouble?\" \n\nMadison laughed harder. \"Relax, Craig. Brittany and I talked. Brittany?\"\n\nThey each turned to her. She scratched her left boob as she prepared her words. \"Craig,\" she said as she placed her hand on his thigh, inches from his hardening cock. \"I've had so much fun with you over the past few weeks. You're really such a great guy. And you have a really nice dick.\" Everyone laughed. \n\n\"But...\" Brittany continued. \"We're not right for each other. I don't want to hurt you. I want to just be friends.\"\n\nCraig was even more confused. \"What are you saying?\" \n\nMadison interjected by grabbing Craig's face and pulling it to hers. They locked lips and kissed. Brittany watched proudly. Madison pulled her head away. \"I still want to be with you, Craig.\" \n\nCraig's heart raced. The stunningly attractive Madison smiled as she awaited his response. All he could do was nod in agreement. \"You know I would love that,\" he said. \n\n\"Yay!\" Brittany clapped. She was genuinely happy for them both.\n\n\"But... why are you both naked again?\" Craig asked, laughing. \"What's going on here?\"\n\n\"So Brittany and I chatted. And...\" Madison paused. She reached next to the couch and produced the mold of Craig's cock. \"This is too big. I'm scared, Craig.\"\n\nBefore Craig could say anything, Brittany spoke. \"Madison asked me to help. I think I can help her... umm... take you.\"\n\nCraig couldn't believe what was happening. How strange. Here he was in this oddly romantic scenario about to embark on a relationship with Madison, but with the help of his recent fling. It was all too good to be true. \"Ok, but how?\" he asked. \n\n\"Let's get naked,\" Brittany said as she excitedly stood up and began lowering her jeans. Madison giggled and followed her lead. They each undressed in front of Craig, smiling while watching his reaction. He was already hard as a rock. \n\n\"You too, Craig!\" Madison said as she helped him to his feet. She unbuckled his jeans while Brittany raised his t-shirt off his body. \n\nOnce Craig was naked, each of them stared at his throbbing cock in admiration. \"Jesus Christ, Craig,\" said Madison. \"What the hell do you eat?\"\n\nEveryone laughed. Craig looked down at his meat stick, stroking it for the girls. \"It's huge, isn't it?\"\n\n\"Sit down, big boy,\" said Brittany. \n\nCraig sat on the couch and spread his legs. Both Madison and Brittany knelt before him. Brittany took hold of his cock in her hands and stroked him. She stopped and angled it towards Madison. \"I think we could use some spit.\"\n\nMadison hesitantly leaned forward. She held her hair back as she tried to produce some saliva. As it dripped down onto Craig's penis, Brittany dispersed it throughout the shaft. Slimy, slippery sounds emanated throughout the quiet room. \n\n\"That feels so good,\" said Craig sinking further into the couch. \n\n\"Don't cum, ok?\" Madison said as she joined Brittany in stroking. \"I wanna fuck,\" she giggled. \n\nCraig nodded, unsure of how on Earth he would not orgasm. \n\n\"You're like the size of two guys in one,\" said Brittany as they each caressed him. \"It's so big in our hands.\" \n\n\"I'm nervous,\" said Madison. \"How is this gonna fit?\"\n\n\"Look,\" said Brittany as Madison removed her hands. \"See here?\" she pointed to halfway down the shaft. \"This is as far as you're gonna go probably. But you're gonna cum. I promise it's gonna be an unbelievable orgasm.\" \n\n\"Aren't I lucky?\" Madison asked as she looked up at Craig. They smiled at each other while Brittany jerked him off. \"Your turn,\" she said, handing Craig's cock to Madison.\n\nMadison first stroked him, but quickly brought it to her face and kissed the tip. Brittany watched while rubbing Craig's thigh. Madison engulfed the swollen head in her mouth and inched her way down the thick shaft. After no more than a couple inches she gagged and retreated, opting to stroke him while she caught her breath. \"Fuck, it's big,\" she said. \n\nShe returned her mouth to it and blew him longer, eagerly slurping up as much of his cock as she could. Craig groaned in pleasure as he stretched his legs out. He placed one hand on her head as she bobbed up and down on his cock.\n\n\"Look at that,\" said Brittany. \"That's so hot.\" \n\nMadison continued to blow him as if in a trance, completely focused on bringing him immense pleasure. Brittany looked on in amazement. \n\nCraig was on another planet. After several minutes of intense pleasure, he noticed Madison was nearly taking in half of his cock at once. The visual was powerful enough that he felt he was about to cum. \n\n\"Fuck, fuck, fuck!\" he said as he tapped her head. She withdrew and wiped her mouth, holding tightly on his cock by the base. \n\nEveryone stared at Craig's cock, anticipating an orgasm. \"Are you gonna cum?\" Madison asked. \n\nCraig winced as he tried to hold back. After what seemed like an eternity, suddenly a small stream of white fluid leaked out his tip and rolled down the shaft to Madison's clasped fingers. \n\n\"Ooo!\" exclaimed Brittany as they all watched the first of Craig's load escape. \n\nNo one moved. After some time, Craig finally reached out to remove Madison's hand from his cock. \"No?\" she asked. \n\n\"That was close,\" said Craig. He successfully held off enough that he didn't cum. \n\n\"False alarm!\" Brittany called out as everyone laughed. \"You need to cool down, Craigy.\"\n\nCraig nodded as he stood up to get some water from the fridge. The girls watched him chug a bottle of water. His massive cock bobbed and weaved as he moved. \"That thing is so hot,\" said Madison. \n\n\"Craigy you sit down over there. Let your guy get a rest,\" said Brittany. She then took Madison by the hand and guided her to where Craig was sitting on the couch. Madison didn't need any specific instruction. She sat down and immediately spread her legs revealing her dark bush and dripping wet pussy. She rubbed the outside of it with her middle finger while making eye contact with Craig. He didn't dare touch his penis as it throbbed and pulsed against his belly. \n\nBrittany shifted so that she was on her knees between Madison's legs. She rubbed the inside of her legs as Madison played with herself. \"You're really wet, huh?\" Brittany asked. Madison nodded, staring down at her soaked snatch. \"Can I taste you?\" Brittany asked.\n\nMadison had never so much as been naked in front of another girl before that night. There was something about Brittany's powerful and persuasive sexuality that made her come completely out of her shell to a point where she was openly masturbating in front of everyone, begging for stimulation. As she stared at Brittany's gorgeous blue eyes, she subtly nodded, indicating she indeed wanted this. \n\nBrittany dove in, plunging her tongue deep inside Madison while thumbing her clitoris at the same time. Madison's head shot back and her eyes rolled in the back of her head. She moaned while running her fingers through Brittany's hair. \n\nCraig watched in awe. He placed his hands under his thighs, unwilling to touch his cock for fear of ejaculating. It pulsed and dripped pre-cum while he watched Madison rapidly approach orgasm. Brittany's ass was aimed towards Craig. He spied her puffy pussy lips protruding from the gap between her legs. It was so hot. \n\n\"Oh my gosh that feels good,\" said Madison. Her eyes were still closed as her breathing increased. \"How are you so good at this!?\" she shouted. \n\nBrittany clutched Madison's thigh with one hand and fingered her clit with the other. She even started to moan herself as she coaxed more and more pleasure out of the young woman. \n\nMadison moaned loudly. \"Oh my God! Fuck, fuck, fuck, yes. Yes, right there! Oh God, it's happening. It's happening right now!\"\n\nCraig couldn't believe his eyes. She looked beautiful as she came with her eyes closed and mouth open just a little bit. It was glorious. \n\nJust as Madison started to relax, Brittany sat up, wiped her mouth and turned around. She made a gesture to Craig to come over which he did so immediately. Brittany reached around and grabbed Craig's cock. The stimulation was powerful as no one had touched him in at least twenty minutes. \n\nBrittany moved aside and pulled Craig closer using his cock. \"Do you see this thing?\" she asked.\n\nMadison stared at his angry penis, dripping with arousal. She bit her lower lip and nodded.\n\n\"He's gonna fuck you with his huge cock,\" said Brittany. \"Right, Craig?\"\n\nCraig nodded as he stroked his weapon. He was raring to go. \n\n\"Go ahead, start with the tip of it. Go slow. You know what to do,\" Brittany instructed. Craig bent his knees and leaned in so that his nine inch cock was resting on Madison's opening. Brittany grabbed it from the middle part of his shaft and guided it in.\n\n\"The first part is the hardest,\" she warned. Craig watched as her tiny manicured fingers maneuvered his cock head toward Madison's welcoming vagina. \n\n\"Ohhhhh,\" Madison squealed. \"Fuck that's big.\"\n\n\"You're really tight, Mad,\" said Craig. \"Like, really tight.\" \n\nCraig took hold of his cock so that both he and Brittany's hands were on it and they each gently pushed it further into Madison. She reacted by screaming out loudly and pressing her hand against Craig's stomach.\n\n\"Ok, ok, ok, wow. Oh my goodness!\" she screamed. Craig withdrew. Brittany released his cock and Madison took over stroking him as she caught her breath. \"I don't know if I can do this,\" she said as she stared down at it in her hand.\n\n\"You're doing great, honey,\" said Brittany, reassuring her. \"You just have to take your time. Believe me it'll be worth it.\"\n\n\"I don't know guys,\" Madison said with great hesitation in her voice. \"I'm nervous.\" \n\n\"Just try it one more time and if it doesn't go, we can stop,\" said Craig. \"I don't want you to be hurt,\" he added.\n\n\"Ok,\" Madison said, again looking down at his cock. \"Just go slow.\"\n\nCraig pushed in again. The head went in with ease as Madison moaned. It felt good even just the head. \"Oh my God, Craig. You're so fucking big. You are so, so, fucking big.\"\n\n\"Right?\" Brittany asked. She reached out and cupped his big balls, forgetting how nice they were. \n\nThis time, Craig was able to slide more of his cock in Madison. With each inch, she moaned louder and more aggressively. Her head was back and eyes closed, much like when Brittany brought her to orgasm with her mouth earlier. \"He's so big, he's so big, oh my God, Brittany.\" \n\n\"You're taking a lot of it!\" Brittany said as she peered in and examined closely.\n\nMadison's eyes remained shut. \"I'm scared to look down!\"\n\n\"Do it! You have to see!\" Brittany urged her.\n\nMadison opened her eyes and leaned forward to see half of Craig's cock stuffed inside her. \"Holy shit,\" said Madison. \"All I can see is his big freakin' vein!\"\n\nBrittany giggled. \"It's a monster cock.\" \n\nMadison gritted her teeth and began to sweat as Craig pounded her deeper and deeper. She was moaning as she approached what was sure to be another powerful orgasm. Her eyes were now glued to Craig's penis as it thrusted in and out of her. Her large breasts bounced up and down with the rhythm of their bodies. \n\nBrittany couldn't contain herself. She moved up so that she was next to Madison as they both watched Craig fuck her. Madison immediately stuck her fingers inside Brittany's wet and aching vagina to try and bring her to an orgasm. \n\nCraig had the best view. As his dick pounded Madison, he watched her finger Brittany and both girls reach orgasm at virtually the same time. They moaned and moaned together as Craig nearly exploded watching. \n\nThen he saw it. From the side of the couch, Brittany produced the mold of his penis yet again. She immediately inserted it in her and fucked herself with his cock while Madison spread her labia apart. \n\nAnd so they went, the three of them. Craig fucking Madison with nearly three fourths of his cock while Brittany pleasured herself using the exact replica. Craig was essentially fucking them both at the same time. It was too much to handle. Craig had finally reached the point of no return. There was no holding it back this time. He made Madison cum with his cock and Brittany with a replica and now it was time for him to cum.\n\nCraig stepped back and pumped his cock. It was sure to be a big blast. Madison and Brittany crouched together as they stared at Craig. His penis looked to be the biggest it's ever been as it was nearly bursting at the seam with arousal. \n\n\"Look at his balls!\" Madison commented. \"They're so tight. This is gonna be such a gusher!\" \n\n\"I'm scared!\" Brittany joked as she huddled up next to her new friend awaiting the shower that was sure to come next. \n\n\"Ahhh, fuck. Oh God!\" Craig said. \"I'm gonna cum. You ready for my cum?\"\n\nMadison nodded, staring directly at his cock. \"Shoot it!\" she said. \n\nNeeding no more encouragement, Craig stopped pumping, aimed his cock, and fired out a thick blast big enough to knock over an empty tin can. \n\n\"Arghhh!\" he belted out angrily as he coated the girls in thick spunk. \"Fuck!\" \n\nThe girls giggled loudly as he sprayed them. It was one blast after another with seemingly no relief in between. There was nowhere to go. The girls were getting covered by Craig who was standing, knees buckled, at least five feet away. \n\nHis cock throbbed and spasmed as semen launched towards the naked girls hitting them on the face, boobs, stomach, legs and feet. Craig moaned as he pumped his nine inch cock with both hands. His balls slapped back and forth with rigor. \n\nHe stepped closer as he continued to stroke out his cum. First aiming at Brittany, then Madison, then back to Brittany. They laughed and laughed at the insane load being doused upon them. There was nothing like it. No time before had Craig came so much. \n\nAs quickly as it unleashed, it started to taper off. Craig panted and whined as he slowly stroked his cock, remnants of a massive load dripped out his cock landing on the carpet. He finally sighed a breath of relief as he collapsed between the cum-soaked girls and cracked up laughing. \n\n\"Oh. My. God.\" Brittany was the first one to speak as she wiped cum off her face and onto Craig's stomach. \"What the hell was that?\" she asked.\n\nMadison also wiped off her face, but she tasted some of it instead. \"It tastes so good!\" she said. \n\nBrittany copied her, scooping some off her tits and trying it. \"Mmmm! Craigy!\" \n\n\"So what'd you think?\" Craig turned to Madison and asked her as he casually played with his softening cock. \n\nShe smiled and nodded, staring at his dick. \"That's the most amazing sex I've ever had. I came so hard.\"\n\n\"Really?\" Craig asked. \"So you're no longer scared?\"\n\nMadison shook her head confidently and picked up Craig's dick from him. There was still a lot of cum on it. \"I can't wait to have it again, if I'm being honest.\" She turned to Brittany whose eyes were also glued to his penis. \"Brittany. Thank you. Thank you so much.\"\n\n\"I'm happy for you. I'm happy for both of you.\" She placed her hand on Craig's penis as well. \"And I'm happy for this too.\"\n\nMadison smiled. \"But, Brittany. What will you do without it now?\"\n\nBrittany reached over and picked up the dildo mold. \"Who said I'd be without it?\"\n\nThe End."
    ],
    "authorname": "BrazenHorse",
    "tags": [
        "cfnm",
        "handjob",
        "cumshot",
        "big cock",
        "big dick",
        "fellatio",
        "orgasm",
        "orgy",
        "college",
        "bit tits"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/roommates-ch-10"
}