{
    "title": "Kelsey's World Ch. 05",
    "pages": [
        "Kelsey woke early. It was happening more and more since she moved home, but she liked it. It made for long, luxurious summer days, the kind you dream about when winter rolls around.\n\nThe house was quiet when she took her morning shower. She piled her long hair up into a knot on top of her head so she didn't have to deal with drying it. It was definitely time to cut it, she thought, as she looked at herself in the mirror. Short would be cute, and shock a few people. She liked that part of the equation.\n\nHer parents were still sleeping when she tied on a white bikini and pulled on a zippered fleece jacket. She grabbed a cold bagel to gnaw on and climbed into her Jeep for an early morning drive.\n\nAfter she left she wondered if she should have left a note. She didn't want her mom and dad to think she was freaked out by what had happened the night before. Maybe they'd think she didn't want to face them and that's why she left so early. By that time she knew Bobby would be up getting ready for work, so she pulled the Jeep over next to a huge oak tree and texted him...\n\n\u2014 Beautiful morning for a drive in the coolest truck ever. Love you Daddy. Have fun at work.\n\nShe waited a few minutes for a reply, serenaded by a squawking blue jay and a lyrical cardinal, but didn't hear from Bobby until she was driving again...\n\n\u2014 Love you too sweetheart. Drive careful. :-)\n\nA stop at a coffee shop in a small, nearby village filled her cupholder. The place wasn't busy \u2014 she was the only customer when she walked in \u2014 so she flirted a little with the boy behind the counter. He looked to be sixteen or seventeen maybe, Kelsey wasn't sure. She already looked plenty sexy in the short jacket with her bikini and flip-flops, but when she unzipped the fleece the poor boy almost fumbled the hot coffee and made a mess. Kelsey loved it. She didn't do that kind of thing to tease, the way a stuck-up girl would. She just enjoyed making the world sexier.\n\nShe was high up in the hills before long, pulled over at a hilltop overlook, her Jeep parked so she could gaze at the long view while she had a snack. The bagel filled her up, but she wished she had taken an extra minute at home to smear some peanut butter between the two halves, to make it more interesting.\n\nAs she sipped her coffee she thought about the night before. After all she'd seen and all she'd been through, finally being a hands-on participant in her parent's loving sexuality felt wonderful. Magical. Like it was destined to be. The way the evening ended, with gentle hugs and soft kisses all around, made it clear all of them felt the same way. Theirs was a family built on sexual love, and sexual love would carry them through. Of course Kelsey knew what was happening was taboo in the outside world. But in her world \u2014 a green, lush world of naked bodies, long country views, dream-like Jeep rides and poolside orgies \u2014 tickling her mother's asshole and having her father's loving cock in her mouth was nothing short of magical.\n\nHer phone chimed with a text when she was finishing her coffee. It was from Koop...\n\n\u2014Pictures are finished. Give me a call.\n\nShort and to the point. She wondered how he felt about the quick but super-sexy fucking in his office the other day. She'd meant to text him the day after but had forgotten. She hoped he didn't feel awkward about what had happened between them. \n\nHalf-an-hour later she was at his shop, parking her Jeep among its still orphaned siblings in the front lot. Koop watched from his office as she slipped off her jacket, dismounted her ride and sashayed her bikini-clad body toward the open overhead doors.\n\n\"Hi, Happy!\" she yelled brightly through the shop, waving at the suddenly smiling man.\n\n\"Mornin' Kelsey,\" Happy said. \"You sure know how to brighten up a place.\"\n\nShe walked into the office, watching Koop carefully for any signs of awkwardness. There were plenty.\n\n\"Richie finished up the pictures,\" he said, handing Kelsey a folder. \"He made prints too. I guess he thought I could hang 'em up here at the shop.\"\n\n\"Oh, cool!\" Kelsey said. \"I'll be like a real pin-up girl! Want a naked one of me for the bathroom?\"\n\nKoop coughed a little, like he'd swallowed a mint and didn't mean to. Kelsey smiled at how cute he was, all nervous and boyish. She flipped through the prints, marveling at how good they were.\n\n\"Richie really knows what he's doin', huh?\" she said.\n\n\"Yeah, they're gonna be great I think,\" Koop said. \"I can't use all of them, a few are too...sexy I guess, for the website, but yeah, I think he did great. His mother's a little pissed at me.\n\n\"Really?\" Kelsey said, smiling brightly. \n\n\"I don't think she realized you were gonna be quite so...\" Koop's voice trailed off as his eyes glanced at Kelsey's body.\n\n\"Think his friends are jealous? That'd be cool,\" Kelsey said. \"He's so cute.\"\n\nKelsey wanted to tell Koop she was going to feed Richie to her horny girlfriends on his birthday, but she decided it might not be the right moment to tell him that.\n\n\"So...\" she said, a little tentatively, \"...it doesn't bother you? What I told you?\"\n\n\"You mean about your...job? At school?\"\n\n\"Yeah,\" Kelsey said. \"I mean I don't want your website to, like, give you a bad reputation or something. You know what I mean?\"\n\n\"Oh. No, Kelsey, that's cool,\" Koop said. \"If anything it'll probably help, knowing the kind of guys who are into Jeeps. I'm not worried about it. Did you think I would be?\"\n\n\"I didn't know. It's weird sometimes. I'm glad you're cool,\" she smiled. \"My friend asked me if you were gonna watch my scenes. I told her you probably didn't know where to find me. Want me to write it down for you? You can use my password so you don't have to pay.\"\n\n\"I, uh...don't know...\" Koop stammered. \n\nKelsey's smile beamed. \"It's all right. Really,\" she said, scribbling a web address and password on a piece of paper on Koop's desk. \"I'm proud of it. And don't worry, I've been tested, like, real recently, so you don't have to worry about...anything.\" She winked at the stunned looking Koop. \"We can't play today, though. I've got a big lunch date with my mom. I'll text you. We'll get together, okay?\"\n\n\"Yeah. Okay.\" Koop was almost speechless. He'd convinced himself the quickie in his office the other day was a fluke. An aberration that just doesn't happen to guys like him. \n\nKelsey walked out into the shop again. Koop followed, far enough back to keep an eye on the wiggliest, sexiest ass he'd ever seen.\n\n\"Bye, Happy!\" Kelsey yelled with a wave. \"Keep smilin', Honey!\"\n\n\"The pictures should be up later tonight,\" Koop said to her. \"My web guy said he'd get right on it.\"\n\n\"Cool!\" Kelsey said as she climbed up into her Jeep. She fired up the engine and pulled away. \"Talk to you later, Honey!\"\n\n\u2014\n\n\"Where do you go in the morning?\" Kay asked when Kelsey came through the kitchen door. \"Just out driving?\"\n\n\"Yup. It's sooo nice Mom. Have you ever had a convertible?\"\n\n\"I had a Volkswagen Rabbit convertible when I met your father. It was kind of worn out, but I loved it. I drove it topless all through the campus one night.\"\n\n\"You mean you or the car?\"\n\n\"Me, silly.\"\n\n\"Oh my God, that's so great!\" Kelsey said.\n\n\"It was one of our first dates,\" Kay said. \"That's when your father started to figure me out.\"\n\n\"I'll bet he did,\" Kelsey smirked, looking at her mom's bare tits. \"How cute was he back then?\"\n\n\"Oh my God,\" Kay said, looking dreamy-eyed. \"Well, you've seen pictures, Honey.\"\n\n\"Yeah,\" Kelsey said. She looked a bit dreamy-eyed too. \"So...you guys like my stories?\"\n\nKay smiled. \"You write beautifully. It's like I'm dreaming when I listen to you read them, and then the dream just...turns into something so real.\"\n\n\"Yeah, that's kind of how it feels reading them to you,\" Kelsey said. \"Dreamy.\"\n\n\"Are you okay with everything?\" Kay asked. \"Between you and your father I mean?\"\n\n\"Yeah,\" Kelsey said, with a subtle, pretty smile. \"You'll tell me if it's ever...weird for you guys, right?\"\n\n\"You know we never keep anything from you, Honey,\" Kay said. \"Just don't ever feel like anything's an obligation. Your father doesn't want that. Neither of us do.\"\n\n\"An obligation? Oh, God no,\" Kelsey said. \"It's like the opposite of that.\"\n\n\"Good,\" Kay said. \"Let's just let life sweep us along. What do the Australians say? No worries? I like that saying. No worries.\"\n\nKelsey smiled at her mom. No one else had a cooler one.\n\n\u2014\n\nSharron was nervous when she drove up the gravel driveway to Kelsey's house. She didn't really know what to expect, but an old, storybook Victorian house in the middle of an overgrown apple orchard wasn't something she'd thought of. Once she saw it she realized it fit perfectly \u2014 a sprightly guardian angel like Kelsey should live in a fanciful house.\n\n\"Sharron! You found us!\" Kelsey yelled. She flung open the screen door and bounded down the steps off the big front porch.\n\nSharron smiled and relaxed a little, but she was still nervous about meeting Kelsey's mother. She needed a friend, and really hoped they'd hit it off. It would be odd though, with the sex with Kelsey thing, and the swinger thing. Sharron's nerves hit their peak again when Kay walked out the door.\n\nKay and Kelsey had agreed they should wear clothes for Sharron's visit, so they were both in summer shorts and little tops, Kay's a halter style that gave a little support to her braless tits, Kelsey's a shrunken Lake Placid t-shirt. Both of them were barefoot. Sharron had on faded blue jeans and a cheerful looking yellow button-up sleeveless shirt. Strappy sandals decorated her feet.\n\n\"Sharron, this is Kay, my mom,\" Kelsey said.\n\n\"Welcome, Sharron,\" Kay said. \"I always love meeting Kelsey's friends. She has very good taste in them, so I'm happy to have you here.\"\n\n\"Thank you, Kay,\" Sharron said. \"It feels a little odd, me being so much older than Kelsey.\"\n\n\"Nonsense,\" Kay said. \"We don't pay any attention to age around here. Unless it's something that can get us arrested.\"\n\n\"Mom made us one of her quiches,\" Kelsey said to Sharron. \"They're super good.\"\n\n\"Sounds delicious,\" Sharron said. \n\n\"Let's go inside, out of this hot sun,\" Kay said. \"We can sit out on the patio in the shade.\"\n\nKelsey took Sharon's arm and walked her in. \"This is so cool,\" Kelsey said. \"I'm so glad we found you again.\" Sharron put her hand on Kelsey's as they walked, looking like she might cry.\n\n\"Are you a drinker, Sharron?\" Kay asked in the kitchen. \"We've got some nice cold white wine.\"\n\n\"That sounds perfect,\" Sharron said, fighting back her misty eyes.\n\nThe women sat on the patio while the quiche baked. Three nice salads were already made.\n\n\"Have you thought about what I told you?\" Kelsey asked. \"That you shouldn't be married anymore?\"\n\n\"Kelsey, did you tell her that?\" Kay asked. \"I'm sorry Sharron, she tends to say just what's on her mind.\"\n\n\"That's what I love about your daughter,\" Sharron said. \"Yes, Kelsey, I have thought about it. You're right, but...it's never that easy, is it?\"\n\n\"I hope you don't mind,\" Kay said, \"but Kelsey told me your husband has been physical in ways he shouldn't, and...not in the ways that he should. Has he hurt you?\"\n\nSharron nodded. Her eyes welled up again, and that time she couldn't stop it.\n\n\"Oh, Sharron! You didn't tell me that!\" Kelsey said.\n\n\"Do you have friends that look out for you?\" Kay asked.\n\n\"Andy drove them all away,\" Sharron said, wiping away the flowing tears. \"They're afraid to call anymore I think. Oh God, this is embarrassing,\" she said, scolding herself for letting her emotions get out of control. \"We're supposed to have a nice lunch.\" \n\n\"We're supposed to become friends,\" Kay said. \"She pulled her chair close and put her arm around Sharron. \"This is what friends do.\"\n\n\"You can't go back there, Sharron,\" Kelsey said.\n\n\"She's right,\" Kay said. \"You'll stay here with us for now. Will that anger your husband? How do you think he'll take it?\"\n\n\"Honestly, I don't think he'll care. I feel like he's been waiting for it. If it doesn't cost him any money, he probably won't say a word. I don't want a penny. I just want out.\"\n\n\"Do you have a job, Sharron?\" Kay asked.\n\n\"Yes. I work full time at a clothing shop. We buy used and re-sell. All high end pieces, really nice.\"\n\n\"Oh, I've seen that place!\" Kay said. \"Over in the plaza by the mall?\"\n\n\"Yeah, that's it. It's a steady job. I make pretty good money.\"\n\n\"Well, you'll be all set then,\" Kay said. \"You'll stay with us until you can save a little. We'll get you on your feet.\"\n\n\"You'll need to ask your husband,\" Sharron said, wiping the last tear and her runny nose. \"This seems way too generous of you. You hardly know me.\"\n\n\"I told you, Kelsey is a wonderful judge of character,\" Kay said. \"She hasn't let me down yet.\"\n\nThe women ate big slices of warm quiche and drank some more wine. Sharron relaxed into the peaceful surroundings, but her blood pressure was about to go up again.\n\n\"I should warn you Sharron,\" Kay said. \"We're naturists. Are you familiar with what that is?\"\n\nSharron's eyes widened. \"Does that mean you don't wear clothes?\"\n\n\"That's right,\" Kay said. \"But we certainly don't expect you to participate. We'll be comfortable if you're fully dressed, as long as you don't mind that we're not.\"\n\n\"All...of you? Your...husband?\"\n\n\"The whole family,\" Kay said. \"We've been naturist since Kelsey was a baby. But really, it's so normal for us, it doesn't bother us a bit to have someone around who's dressed. Not one little bit. As long as it doesn't bother you of course.\"\n\n\"Well, I...I don't know,\" Sharron said. \"I mean it's not something I've ever thought about.\"\n\n\"It's totally cool, Sharron,\" Kelsey said. \"We don't mind if you're chicken.\"\n\n\"Kelsey!\" Kay scolded.\n\n\"Oh, Mom! She knows I'm goofin' around. But really Sharron, I bet you'd like it. You've been naked with me and my friends so much, it's really no different.\"\n\n\"Kelsey, you shouldn't be talking about those things without Sharron's permission,\" Kay said.\n\n\"It's all right, Kay,\" Sharron said. \"I get the feeling there's very few secrets between you two. You probably know how Kelsey and I met, right?\"\n\n\"Well, yes, but I wouldn't talk about it unless I knew you were okay with it.\"\n\n\"I'm okay with it,\" Sharron said.\n\n\"Kelsey told me that she told you about our open marriage,\" Kay said. \"I don't know how you feel about it, but we certainly won't embarrass you with any of that while you're here.\"\n\nSharron had to think quick, so many thoughts were bouncing around in her head. \"Swinging, right? It sounds exciting,\" she said, deciding to be honest. \"How does someone...get involved in that?\"\n\n\"Usually it's just meeting other people who are involved,\" Kay said. \"That's how Bobby and I started. Were you thinking...you might be interested?\"\n\n\"It's for couples, isn't it?\"\n\n\"Traditionally, yes,\" Kay said. \"But not always. We can talk about that some more another time. You've got so much on your mind right now.\"\n\n\"It's all good though, right Sharron?\" Kelsey said. \"We're gonna have so much fun. Your new life's just starting.\"\n\nSharron puffed out her cheeks and blew out some breath. She looked overwhelmed but happy. Her mind flashed back to the first time she saw Kelsey, sitting stark naked on a driftwood log at the edge of a sunrise-colored lake. Sharron had thought she was an aberration, but learning that she's a naturist and the daughter of swingers pretty much explained everything. Moving into her house, though, that was a whole 'nother kettle of fish. Naked fish, it turns out.\n\n\"Fun, huh?\" Sharron said with a nice little smile. \"I could use some, that's for sure.\"\n\n\u2014\n\nKay and Kelsey rode with Sharron when she went home to get some of her things. Her husband Andy was still at the camp, but they didn't want to take any chances with him getting violent when he found out she was leaving. Sharron called him from the house and told him. It was a difficult, tearful call, but it looked like Sharron was right \u2014 he'd give her a quick divorce if she didn't ask for anything. She was happy with that.\n\nThey arrived back at the Victorian to the aroma of a nice dinner on the stove. Bobby was cooking. Sharron's nerves were on edge when they walked in the house \u2014 she wondered if he'd be naked when she met him \u2014 but she needn't have worried. Kay had texted him the details of what was happening and he was fully dressed in the kitchen.\n\n\"You must be Sharron!\" he said brightly. \"I'm Bobby.\"\n\nHe wiped his hand on a towel before reaching to shake hers. She was astonished at his handsomeness, until she looked at Kay and Kelsey. Of course he'd be handsome, she thought. He'd look out of place otherwise.\n\n\"We're so pleased you're going to be staying with us,\" he said, pouring on the charm. \"I really hope everything works out for you. Kelsey's very fond of you, you know.\"\n\n\"Thank you,\" Sharron said. \"It's really nice to meet you, Bobby.\" Sharron suddenly had a vision of him fucking other women, friends of Kay's and others from their swinger group. Would she be one of them, she wondered? A warm tingle flushed through her, tinting her face with a little pink. \"I hope I'm no trouble,\" she said.\n\n\"Nonsense,\" Bobby said. \"We love company.\"\n\nI'll bet you do, you gorgeous hunk of man, Sharron thought. She scolded herself for thinking it, but reality was starting to sink in \u2014 by some wild twist of fate she'd lucked into something rather extraordinary.\n\n\"Do you like olives?\" Bobby asked. \"We've got some really good Kalamatas that I was gonna use in the chicken.\"\n\nAn hour later, at the table on the pool patio, all four dinner plates were picked clean.\n\n\"Oh my God that was good!\" Sharron said. She leaned back in her chair and put both hands on her stomach.\n\n\"Daddy's a good cook, huh?\" Kelsey said. \"Mom's pretty awesome too.\"\n\n\"Well I'm no chef, but I'd like to help out,\" Sharron said. \"Maybe I can cook a meal now and then?\"\n\n\"Sure,\" Kay said. \"We want you to feel like the house is yours. And if you're ever hungry at night or whatever, feel free. We're all about the midnight snacks around here.\"\n\n\"How do you all keep your figures?\" Sharron asked.\n\n\"We don't eat junk,\" Kay said. \"Fresh ingredients, low fat. There's no magic to it. Good wholesome exercise. The pool's great. Sometimes I think it burns calories just being out in the sunshine.\"\n\n\"Mom's a sun worshiper,\" Kelsey said. \"She'll be all over you if you've got tan-lines, though. If it's not an all-over tan she'll scold you.\"\n\n\"I will not!\" Kay said. \"Sharron's free to tan any way she wants to. Or not at all.\"\n\n\"I must admit,\" Sharron said, \"being on the beach those two times with Kelsey, it felt so good to be...bare.\" \n\nShe looked at Bobby but regretted it, hoping nobody had seen her furtive glance, but Bobby did. He liked Sharron. He thought it was cute how certain things made her nervous.\n\n\"It's such a beautiful evening,\" Kay said. \"We should burn off some of these calories in the pool.\"\n\nAnd just how is she planning on doing that, Sharron wondered? What goes on in a swinger's pool? Sharron tried to stop the thoughts, but three big glasses of dinner wine had loosened them quite thoroughly.\n\n\"Did you bring a suit, Sharron?\" Kelsey asked. Sharron was relieved to hear a bathing suit mentioned, but she didn't have one with her. \"You could just wear a t-shirt and panties if you want.\"\n\nGood Lord, here we go, Sharron thought. A freakin' wet t-shirt contest in front of a naked man. Funny thing was, it sounded kind of fun. Another glass of wine maybe, or maybe two.\n\nBobby filled her glass, seemingly reading her mind. Kay only got half a glass before the bottle was empty.\n\n\"Should you get a restraining order?\" Kay asked her, killing the mood for a moment. \"We can find out about one tomorrow if you want.\"",
        "\"No, I don't think so,\" Sharron said. \"He's not that bold. I don't think he'll show his face anywhere.\"\n\n\"Be careful, okay?\" Bobby said. \"We'll set you up with my cellphone number. My office is only two or three miles from your store.\"\n\n\"What did I do to deserve you people?\" Sharron said, relaxing into a nice wine buzz.\n\nAfter the dishwasher was loaded and the kitchen was cleaned up, the first naked person appeared. It was Kay, walking nonchalantly through the house. Sharron was amazed how well her body had held up \u2014 forty-one-year-olds aren't supposed to look like they're twenty-eight. She was amazed at how at much she looked like Kelsey's older twin, too. It was uncanny.\n\n\"Bobby's wondering what to do,\" Kay said. \"Would you like him to wear a bathing suit?\"\n\n\"I don't want to disrupt your routine in any way,\" Sharron said. It was a polite way of saying \"I'd love to see your husband naked.\"\n\nKay smiled. She knew exactly what Sharron was thinking, and thought it was wonderful. Progress already, she thought. Will our first night together be extra fun, or should we take it slow?\n\nSharron went to her room before Bobby came down. She was nervous about looking at him too much when he walked through the house, so she took that awkwardness out of the equation and disappeared for a few minutes. Alone in her room she faced another dilemma. Would she have the nerve to walk out to the pool naked? The answer was no. The best she could manage was what Kelsey had suggested \u2014 a shirt of some sort, and panties.\n\nShe was decently trimmed down below. Not fancy sexy or anything, but enough to wear her bikini at the lake without embarrassment. Panties were a different story. Most of hers were decidedly conservative, leaning toward the grannie-panty side of things. She had three pair that were better looking, but all were thin and cut lower across the belly than her bikini, well below her bellybutton, and showed a bit of well-trimmed hair. She didn't know if it was the wine or what, but she decided it looked kind of sexy.\n\nThe only shirt she had with her that would work was a white tank top. She'd only worn it as an undershirt, when she wanted a little more coverage under something that was a little see-through. Pulling it on alone with no bra and the sexy panties gave her a \"No way!\" feeling that she knew she'd have to shake. Everyone else would be stark naked for goodness sake, so she should be able to deal with what she had. Thank God for good wine, she said to herself as she left her room.\n\nWalking through a strange house with so little on was an odd kind of thrill, but nothing like what she felt when the pool came into view through the open french doors. The girls were both in the water, but Bobby was sitting on the pool's edge, dripping wet. His hair was slick and shiny, and it was Sharron's first look at the rest of him \u2014beautifully tanned and hairier than she'd imagined, but somehow just right. He was a lovely specimen, with firm looking shoulders and a flat tummy. His thighs looked powerful sitting on the concrete, and his dark pubes made Sharron's pulse jump. She could only see the very top of his cock, but it was enough.\n\n\"Is there any more wine?\" she yelled from inside the door.\n\nInstead of an answer, she was horrified to see Bobby stand up. He grabbed a towel for a quick dry off. She thought for sure he'd tie it around himself, but he tossed it on a chair.\n\n\"Let me show you where we keep it,\" he said when he walked in, his nice cock swaying softly between his perfect, hairy legs.\n\nSharron let him walk past her. She had no choice \u2014 her feet felt like they were glued to the floor.\n\n\"It's in this pantry here,\" he said. Not much other than the sight of his beautiful, still-wet ass was making it into Sharron's brain. \"The corkscrew's in the drawer here.\" He opened another big bottle of the tasty, inexpensive wine, and reached into the cupboard. \"We use plastic cups when we're by the pool. Is that all right?\"\n\n\"Oh. Yeah. Sure,\" Sharron said, finally getting her brain in gear.\n\n\"Might as well bring the bottle out,\" he said, gathering four plastic cups in his fingers.\n\nYes, might as well, Sharron thought. She fought the instinct to look at his cock, instead looking rather ridiculous staring into Bobby's eyes.\n\n\"The water feels awesome tonight,\" he said, hoping Sharron would jump in and make her clothes all clingy and see-through. He loved seeing a woman like that. The thought plumped his cock a little. Sharon saw it in her peripheral vision, but decided it was her imagination. She followed him through the french doors to the quickly darkening evening, trying to keep her mind, and her eyes, off his ass.\n\n\"Do you swim often at Sandgrass Pond?\" Kay asked when Sharron reached the poolside.\n\n\"I do. I was thinking earlier, that place is the only thing I'll miss about my marriage.\"\n\n\"You know,\" Bobby said, \"there may be something in New York law that says property has to be split up. Is the camp worth less than your house?\"\n\n\"Maybe,\" Sharron said. \"It's just a run-down little place.\"\n\n\"You'll need to get a lawyer right away, like tomorrow,\" Bobby said. \"You could ask him about it.\"\n\n\"I guess. I don't want any trouble. I just want out.\"\n\nBobby sat in a chair close to the pool. Sharron couldn't help but glance that way from time to time. The sight of him was just too compelling, sitting so relaxed, not blatantly spread to the world, just comfortable looking, and on view for anyone who wanted to look.\n\nSharron poured herself some wine. \"I hope you don't think I'm a lush,\" she said. \"It just tastes so good tonight, with all the stress.\"\n\n\"Pour me one too, Honey,\" Kay said.\n\n\"Me three,\" Kelsey smiled.\n\n\"Bobby?\" Sharron asked. It gave her another chance to sneak a glance at...all of him.\n\n\"No thanks,\" he said.\n\n\"Bobby's more of a cocktail guy,\" Kay said. \"He made us some manhattans last night that were to die for.\"\n\n\"Really?\" Sharron said. \"I'd love to try one, but, I should stick with wine tonight or I'll get a headache.\"\n\n\"Manhattans tomorrow then,\" Bobby said. Sharron smiled. She felt like she'd found a new family.\n\nShe handed out the drinks and sat on the edge of the pool, with her long legs dangling in the water. Feeling the cool of the concrete through her thin panties reminded her of what she had on. It felt wonderfully risqu\u00e9 to sit around in the evening like that, amongst three naked people no less. Cooler air was settling into the old apple orchard they were in the middle of, and Sharron's skin responded with goosebumps and hard nipples. She glanced down at the thinner body she'd worked so hard on and suddenly felt sexy as hell. Time to get wet, she thought. Damn the torpedoes, I'm doin' this!\n\nShe pushed off with her arms and slipped into the warm water. It was the deep end and she went under, coming up with her hands flinging her hair back, smoothing it. The water felt like pure luxury. \n\nShe wiped the water from her eyes and noticed Kelsey walking up the steps at the shallow end of the pool, long hair plastered to her back, water dripping from her fingertips. The droplets on her perfect little ass sparkled like diamonds. She walked behind her father's chair and gave his shoulders a massage. It was a whole new world to Sharron.\n\nKay swam to the ladder and climbed out, looking as lovely and magical as her daughter. She dried her face and chest with a towel and picked up her cup for a swig of wine. She looked up at the emerging stars in the darkening sky.\n\n\"Night Swimming. Remember that R.E.M. song?\" Kay asked no one in particular, still gazing at the sky. \"That was my favorite song the year Bobby and I met at college.\n\n\"Oh, I loved R.E.M.,\" Sharron said. \"They were big when I was in school too.\"\n\nThinking about the old days and wanting a cup of wine in her hand made Sharron loose track of things. She climbed up the ladder and smoothed her hair, squeezing some water out of it.\n\n\"Damn, girl! You look good!\" Kay said as she looked over Sharron's dripping body. The panties and little white tanktop had gone translucent and were clinging to her like a second skin, giving a sexy, filtered view of her nicely trimmed pubes and her hard nipples. She tried to lessen the effect by drying herself with a towel, but it didn't help much.\n\n\"Well it looks like Bobby approves,\" Kay said, noticing her husband's growing erection. \"I'm sorry Sharron, that's not something a guest should have to see.\"\n\n\"I don't mind,\" Sharron said, trying to act casual while her heart pounded in her chest. Bobby was a grower, and she was astonished how big it was getting. \"I mean, it's good for a girl's self confidence, don't you think?\"\n\n\"You're right about that,\" Kay said. \"Makes me feel ten years younger when a man gets hard for me.\" She looked at her husband. \"Bobby...down boy.\"\n\n\"You're a bad daddy,\" Kelsey said, smiling mischievously as she finished up the shoulder massage.\n\nBobby dove in the water, not so much to cool down, more to get what he knew would be an ongoing problem out of Sharron's view. He didn't want to traumatize her on her first night with them.\n\nSharron rubbed as much moisture out of her shirt and panties as she could, but it was a losing battle. She ended up thinking the way she looked was a perfect compromise \u2014not naked, but not really hiding much either. She relaxed into it all nicely as she sipped her wine.\n\n\"I think it's warmer in the water,\" Kay said. \"Let's bring our wine.\"\n\nShe walked down the steps into the shallow end. Kelsey and Sharron followed. In water just above their waists they gathered, Kelsey and Sharron leaning against the wall. A sudden bit of honest curiosity burst from Sharron's lips...\n\n\"So tell me about swinging.\"\n\n\"What would you like to know, Honey?\" Kay asked. \n\n\"Oh, I don't know. Is it like...parties?\"\n\n\"It can be,\" Kay said. \"Or it can be more intimate. Two couples out to dinner, and back to one of the houses for a little fun. I like both, but the parties are a blast.\"\n\n\"My sweet wife is an orgy lover,\" Bobby said, coming to a stop right next to the girls after a slow swim. He leaned against the wall next to Kelsey, slicking back his dripping hair with his hand. Sharron liked that he had a full head of hair. So many men in their forties didn't.\n\n\"How many people do you know?\"\n\n\"Swinger friends?\" Kay asked. \"Oh, gosh, hundreds over the years I guess. Right here in town, maybe...let's see...seven or eight couples? Does that sound right, Honey?\"\n\n\"Yeah, I think so,\" Bobby said. \"It's a smallish town, so that's doing pretty good around here.\"\n\n\"And there's Tucker and Marsha,\" Kay said. \"They're close enough they can drive over. He's Kelsey's old boss, from the studio.\"\n\n\"Oh, really? What kind of studio?\" Sharron asked Kelsey.\n\n\"Oh,\" Kay said. \"Have I put my foot in it, Honey?\"\n\n\"No, that's okay Mom,\" Kelsey said. \"It just hasn't come up yet I guess. I was a porn performer to work my way through college,\" she told Sharron. \"Videos on a website. Tucker's Studio. Have you heard of it?\"\n\n\"No, I haven't. I don't...watch a lot,\" Sharron said. \"My goodness, you just get more and more interesting, don't you.\"\n\n\"Kelsey won awards for her work,\" Kay said proudly. \"She was onstage at a big awards banquet in Las Vegas. Three times.\"\n\n\"Why doesn't that surprise me?\" Sharon said, smiling.\n\n\"Her very first scene won Most Promising Newcummer,\" Kay said.\n\n\"C, U, M, M, E, R,\" Bobby said with a smile. Sharron giggled.\n\n\"You cum nice too, Sharron,\" Kelsey said. \"All the boys think so.\"\n\nSharron blushed deep red, and her nipples sprung back to life.\n\n\"Kelsey, think before you talk, Honey,\" Kay said to her daughter. \"Maybe you've had enough wine.\"\n\n\"What!\" Kelsey said, surprised by her mother's reaction. \"I thought we were talkin' about stuff!\"\n\n\"We are. It's fine, Kelsey,\" Sharron said. \"I started it after all. I'm glad you think I...do that. I can use the confidence boost from knowing things like that.\"\n\n\"If I can speak freely,\" Bobby said, \"maybe I can boost your confidence a little more. Your tits look just spectacular in that shirt.\"\n\n\"My goodness,\" Kay said. \"It seems my family is out of control.\"\n\nSharron giggled again. Kelsey's world was magic indeed.\n\n\u2014\n\nThe smell of coffee and toasting bagels greeted Sharron as she walked down the big staircase the next morning. She'd turned in early the night before, exhausted from all that had happened that day. The long sleep did her good \u2014 she felt like a new woman.\n\n\"Am I over-dressed?\" she asked. An amazed smile crinkled her face when the scene sunk in. It was like a nudist Norman Rockwell illustration \u2014 three stunningly attractive naked people eating breakfast at a table in a lovely country kitchen. Sunlight streamed in through mullioned windows. \n\n\"Would you like some eggs, Honey, or just a bagel?\" Kay asked.\n\n\"I'm trying to stick with just fruit for breakfast,\" Sharron said. \"Gotta work on this belly if I'm gonna be...showing it.\"\n\n\"Your belly's lovely, Honey,\" Kay said. \"We've got some nice melon, and peaches and bananas. None of it's local yet. Oh, we've got some blueberries, too. Those are from down the street.\"\n\n\"Perfect,\" Sharron said. \"I'll be kicking in for the groceries. Don't worry about that.\"\n\n\"We're not worried, Honey.\"\n\nSharron felt a bit out of place in her bathrobe, but she was naked underneath. She wouldn't do that staying with other people. Baby steps, she thought to herself. Maybe I'll get there.\n\nAs she was pouring her coffee, facing away from everybody, she loosened her robe. A little glimpse might be fun, she thought.\n\n\"What time do you have to be at work,\" Kelsey asked. \n\n\"Nine most days. I'm the manager, did I tell you that? The owner's really nice. We hit it off good right from the beginning.\"\n\n\"Oh, that's wonderful,\" Kay said. \"A good work environment's so important. Especially now, with all you're going through.\"\n\n\"Yes,\" Sharron said. She was trying to maintain the conversation, but a sudden urge to fuck Bobby was trying to derail things.\n\nShe shifted in her chair, moving her shoulders to loosen her robe some more. When she lifted her coffee mug and moved her hand to her fork the deed was done \u2014 the top of her robe gaped open, giving Bobby a view inside.\n\n\"I really love the work,\" she said. \"It's all women's clothes. We're very selective with what we take. Mostly designer label items.\"\n\n\"I'm sure you're very good at it,\" Bobby said, with the hint of a smile. \"You seem to be the kind of women who would...enjoy it.\"\n\n\"Good Lord,\" Kay said to Sharron. \"My husband's off the rails again. I knew this would happen as soon as I saw you. He's insatiable for attractive older women. Not that you're much older. You better brace yourself, he won't be back to normal until he's had you.\"\n\nSharron didn't know what to think. It was a conversation unlike any she'd had with a woman. It seemed like she was barreling headlong into sex with Kay's husband, but she wasn't sure. She knew nothing of swinger protocol, and she didn't even know if the signals she was getting were right, although they seemed unmistakable.\n\n\"Those manhattans tonight should be fun,\" Kay said. \"You ready, Honey?\"\n\nSharron's lungs lost all their air. She was reading the signals right. Cocktail hour was going to be...interesting.\n\n\u2014\n\n\"You guys, I forgot to look at Koop's website yesterday,\" Kelsey said. \"Wanna see?\"\n\n\"Who's Koop?\" Sharron asked. She was in her work clothes in the kitchen. Bobby had just come home from work too.\n\n\"He's a friend of mine. Mom and Daddy bought my Jeep from him. I did some modeling for him last week, for his advertising.\"\n\n\"Horny boys buy Jeeps,\" Bobby chuckled.\n\n\"Daddy!\" Kelsey protested, but she knew it was true.\n\nShe walked around showing everyone the images on the iPad, flipping through web pages of the various Jeeps for sale. Kelsey was in the first picture of every listing, looking spectacular in her little bikinis and lingerie. \n\n\"Would it be weird if I said you're the best looking girl I've ever seen?\" Sharron asked.\n\nKelsey giggled. \"I'm not!\"\n\n\"Believe it, sweetheart,\" Bobby said. \"It's true. Your Mom's right there with you, though.\"\n\n\"I couldn't agree more,\" Sharron said. Her eyes twinkled as they looked at Kay. It surprised her, but she suddenly wondered if Kay's pussy was as sweet tasting as Kelsey's.\n\n\"My, my,\" Kay said. \"Don't you just love sexual tension? Why don't you two get more comfortable, and we'll have some dinner.\"\n\nBobby and Sharron went upstairs to their rooms, both feeling like they'd like to find the nearest bed and let 'er rip. \n\nBobby stripped, as usual. Sharron put on lingerie she'd bought on her lunch hour \u2014 a super sexy see-through lace bra, and matching panties and garter belt. She wondered if everyone would think she was trying too hard when she pulled on the sheer stockings, but then she remembered Kelsey, the do-what-you-want-as-long-as-it's-sexy girl.\n\n\"I hope you don't mind that I dressed for dinner,\" she said when she nervously entered the kitchen.\n\n\"Oh! My! God!\" Kay said. \"I want to fuck you right now! Did you bring that? Where did you get that?\"\n\nBobby's cock firmed up, but he was able to control it, just barely, leaving it at a long, thick, forty-five-degree angle. Sharon was thrilled.\n\n\"You've got sweet nipples,\" Kelsey said when she saw them harden. \"Mom says girls like us should let 'em show under our clothes. You shouldn't hide those.\"\n\nSharron smiled, and then a giggle broke free. \"I could use a drink,\" she said.\n\n\"Bobby's gonna get you loopy with manhattans,\" Kay said. \"I'm just warnin' 'ya.\"\n\n\"You don't mind?\" Sharron said.\n\n\"Mind?\" Kay said. \"I'm joinin' in, Honey!\"\n\nKelsey smiled from the other side of the room. She could tell the melting pot was at full temperature. Sharron's wild side was ready to bust out and meet Bobby and Kay's.\n\nSharron was a one type of alcohol a night kind of gal. Deviating from that always gave her a headache. So Bobby mixed a pitcher of manhattans as an aperitif. There would be another, bigger one for the digestif right after dinner. The main course was one of Kay's specialties \u2014 Chicken Piccata. \n\nSharron started giggling halfway though the meal. Eating a deliciously prepared meal in the sexiest lingerie she'd ever worn while gazing at four of the worlds best tits was too much for her. Kay wasn't kidding when she said Bobby's drinks would make her loopy. Manhattans weren't no wine.\n\nJust before desert Sharron unhooked her bra, slipping it off when there were no eyes on her. Bobby and Kelsey were aware she was doing it, but Kay was taken by surprise.\n\n\"You sneaky girl!\" Kay said when she noticed. \"Are you happy Bobby? See what you've done?\"\n\n\"I blame my sweet daughter,\" Bobby said.\n\n\"Nice,\" Kelsey said. \"I'll take the blame for something like this any day.\"\n\nSharron giggled. She'd been more giggly the last few days than she had in years. It felt good to be so lighthearted, especially about something like nudity. She wasn't exactly comfortable yet \u2014 her heart was racing and she was blushing like a schoolgirl, but she'd done it. Her breasts were bare at the dinner table at a friend's house. It was a milestone that was definitely worth a giggle. \n\nShe would have giggled even more if she'd seen Bobby's cock, hard and throbbing below the tabletop. She imagined it, as if she had x-ray eyes, but even she would have been surprised to see just how big and hard it really was.\n\nAll during dessert \u2014 a chilled pudding cake Kay had made from scratch \u2014 Sharron was focused on her posture. She wasn't used to sitting up straight, tits out, the way younger women did so naturally. Forty-seven years, and a long, sad marriage had slumped her a little. So she took her cue from Kelsey and Kay and tried to sit up proud.",
        "It wasn't easy. She kept wondering if she was overdoing it, sticking her old tits out more than looked natural. She longed for a mirror, or a quiet moment alone with one of the girls to ask them about it. She could tell, though, as soon as she slumped a bit, that it was wrong. So out they went again. She hoped her new friends weren't secretly laughing at her inside their heads.\n\nThen, as the dessert plates were emptied of the sweet, delicious confection, she started to think, and worry, about what was next.\n\nStanding up from the table. Gathering the dirty dishes. Loading the dishwasher. All of it topless! In ridiculously sexy panties! And a fucking garter belt and stockings! God, I'm so glad I didn't wear those high heels I bought today!\n\n\"That was so good, Mom,\" Kelsey said, wiping her lips with her napkin.\n\n\"Spectacular, Sweetheart,\" Bobby said. \"You've outdone yourself again.\"\n\nIt was happening. The family pushed away from the table and got up. Sharron glanced at Bobby's cock. Still swollen to the half-hard state, it looked huge to her, but right at home between his manly thighs. Sharron pulled some dirty dishes toward her, hoping to delay standing up until the others were heading off to the kitchen. She felt like a child, and knew she was worrying too much \u2014 her tits were already on view for God's sake, and everyone else was naked. She suddenly wished she was naked too, and not done up in a ridiculous whore costume.\n\nEveryone was moving slower than Sharron had hoped. She had to stand up, or her fears would be known. She did, gathering more of the tableware and used napkins. Kelsey trotted off to the kitchen. Kay looked at Bobby, smiling sweetly when she saw the state of his arousal. She followed Kelsey with more dishes. Bobby turned toward the kitchen door and followed them. Sharron was relieved. She took a deep breath and let her heart slow a bit, hoping it would all get easier.\n\nThe family was busy in the kitchen when she walked in as casually as she could. She realized she was slumping again so she stood up straight. She felt like a giant standing next to Kay and Kelsey, her long legs accentuated by the sheer stockings and the vertical straps holding them up. Her nipples were hard and most of her was covered in goosebumps.\n\nBobby was already growing as he looked at her, but when she bent to load some plates into the dishwasher it was too much, with her tits hanging beautifully and her pussy visible through the gossamer-thin lace of her panties. He was fully erect in no time. \n\n\"Honey! Control yourself!\" Kay scolded. \"God, you'd think you'd never seen a beautiful woman before!\"\n\n\"Sorry Sharron,\" Bobby said. \"You're just...Did Kay tell you I've got a thing for garter belts and stockings?\"\n\nSharron was scolding herself. Earlier in the day she'd thought she was just taking a nice gentle step toward nudity, but instead she'd inadvertently sexed things up to the max. She felt like a fool.\n\n\"I'm so sorry,\" she said to Kay. \"I didn't mean to...\" She glanced at Bobby again, and his big hard-on. \"I'll go change right now.\"\n\n\"Whoa! Hold on!\" Kay said, stopping Sharron as she was fleeing the kitchen. \"You look beautiful, Honey! I think it's so nice that you dressed for dinner. It's like the old days when people would put on their formals. Don't worry about Bobby, he's just an old horn-dog. Of course you can dress, or undress any way you'd like, but I like you like this. You look like a new woman, ready to take on the world.\"\n\n\"I feel like a child half the time,\" Sharron said.\n\n\"We all do, Honey,\" Kay said. \"We all do.\"\n\n\"You look so nice, Sharron,\" Kelsey said sweetly. \"You don't really want to cover up, do you?\"\n\nSharron straightened her posture, slowly so no one would notice her doing it. Bobby's cock was hanging lower, but it was still hard for her. It was an enormous confidence builder, seeing a stunning looking man get hard like that. She wished she could switch off her nipples, but other than that she felt a new sense of comfort. Being naked \u2014 or nearly so \u2014 with like-minded people was starting to make sense. A little anyway.\n\n\"We've got some dishes to do,\" she said, heading back toward the sink.\n\n\"Mom always makes a mess when she cooks,\" Kelsey said.\n\n\"My mom does too,\" Sharron said.\n\nThe kitchen was soon abuzz again with the sounds of clean-up. Sharon squirted detergent into a baking dish and started scrubbing. It made her tits jiggle. She couldn't help but smile.\n\n\u2014\n\nWhen the kitchen was clean Bobby gave Sharron a lesson in making manhattans. He changed things up a little, using Wild Turkey instead of the milder Evan Williams Bourbon he'd used before dinner. Sharron felt wonderfully wicked standing so close to Bobby while he explained the formula. He made a tall pitcher-full, and poured out four drinks in small highball glasses.\n\n\"Oh yeah, that's stronger,\" Sharron said after taking a sip. \n\n\"You tryin' to get all your girls drunk, Daddy?\" Kelsey asked. She took a sip and smiled.\n\n\"Would that be so bad?\" he asked.\n\n\"I can think of worse things to do on a Monday night,\" Kay said. Her sip was a little bigger. \"Yikes! Them things is powerful!\"\n\nAfter some more drinking and some giggling, Kelsey whispered something in Kay's ear. \n\n\"You guys carry on,\" Kay told Bobby and Sharron. \"We'll be right back.\"\n\nA five minutes later mother and daughter descended the stairs looking like lingerie models. They'd adorned their naked bodies with garter belts and stockings.\n\n\"Good God almighty,\" Bobby muttered when they stood giggling next to Sharron.\n\n\"You never told me you like this kind of thing, Daddy,\" Kelsey said.\n\n\"Uh huh,\" Bobby said. He was speechless, but his rising cock told the girls what he wanted to say.\n\n\"Jeez, Daddy,\" she said. \"You got a problem tonight? Somebody needs to give you a blowjob to get you under control. Should we draw straws?\" she asked Sharron and her mom.\n\nSharron giggled again, but it was a deeply nervous one. Kelsey couldn't be serious, could she?\n\nKay knew it would be best for everybody if she got things started. \"He's my hubby, so I get dibs,\" Kay said. \"Sit, big boy.\"\n\nBobby obeyed. Kay threw a little extra wiggle in her walk toward him. Bobby smiled.\n\n\"You like strappy garter belts, don't you, dirty boy.\" She dropped to her knees and licked his throbbing cock like a popsicle. \"Did Sharron get you all worked up? We're gonna have to take care of that.\"\n\nKay inhaled the thick shaft, filling her mouth with it. Her moans were soft and lovely as she got going with her well-practiced technique. Sharron stood with her drink in her hand, taking in the wild scene. The only sex she'd ever watched was when she was with Kelsey and her friends, but they seemed like kids compared to Kay and Bobby, two experienced swingers showing their guest how it's really done. After a few minutes Kay came up for air.\n\n\"Sharron? You want a taste?\" Kay asked. \"You're the one who got this thing all big and hard.\" She held the wet, throbbing shaft at its base, angled toward Sharron. It looked good enough to eat. Every bit of Bobby did. Sharron was so horny she felt like she was about to explode.\n\n\"Go for it, Honey,\" Kelsey said, sensing all Sharron needed was a tiny little nudge.\n\nSharron moved slowly, kneeling next to Kay on the rug. She set her glass on the low cocktail table.\n\n\"See what you think,\" Kay said, sounding like she would if she was asking a guest an opinion on an hors d'oeurvre. \"I love the way he tastes.\"\n\nBobby groaned when Sharron sucked him into her mouth. There was nothing tentative about her first volley, and his appreciation was loud and clear. She closed her eyes and moaned deeply when the heat of his hardness radiated into her, nearly melting her head-in-the-clouds mind. Her taste buds signaled \"Good!\" and her mouth flooded with luscious wetness, just right for the sloppy, go-for-it technique she'd enjoyed using on Kelsey's boys. \n\nSharron sucked Bobby's cock like a woman possessed. Sloppy and wet, Bobby loved every minute of it. It wasn't easy to hold on, but he was as good at controlling his orgasms as any man.\n\n\"She's super sexy isn't she, Mom?\" Kelsey said.\n\n\"She is, Honey. So beautiful,\" Kay said. She well knew the sight of a woman who had some catching up to do.\n\nSharron was surprised to hear the commentary. She'd been thoroughly lost up to that point \u2014 just her wildly happy mind and her sexy man, getting down to business. Kelsey and Kay's voices brought her back to earth. Kay sensed the change and wanted to reassure her that everything was okay.\n\n\"Bobby'd love to taste you too,\" she said. \"We all would, if you'd like that.\"\n\nSharron moaned onto her mouthful, and Bobby moaned too. She'd wondered what the blowjob meant. Was it the beginning of the wild night she'd been dreaming of? Or was it just...a blowjob? She was beginning to get her answer.\n\n\"Why don't you lay on your back, Honey, and let Bobby tea-bag you while we get these panties off of you,\" Kay said.\n\nSharon had been to tea at friend's houses before, but this was something else entirely! She complied with Kay's request, as if in a trance, looking lovely flat on her back on the soft rug. She gazed up at Bobby with longing eyes. He slid off the couch and lowered himself, straddling her head with his knees. Sharron took his hard cock in her hand, lifted her head a little and sucked his balls gently into her mouth. Bobby groaned at the new sensations.\n\nKelsey and Kay went to work like little red-haired elves. They unfastened the garter belt straps from Sharron's stockings, pulled off her panties, and made the straps fast again to the sheer nylon.\n\n\"Your panties are all wet, Sharron,\" Kelsey said, holding them up to her face to inhale their scent. \"You smell just like I remember.\"\n\n\"Such a pretty pussy,\" Kay said, dragging her forefinger through the wetness.\n\nTheir voices sounded like a dream to Sharron. She pulled Bobby's cock to her mouth and sucked him deep.\n\n\"Oh, God yeah!\" he groaned.\n\nKay and Kelsey took turns eating Sharron's pussy, so warm and wet and succulent. Sharron was lost in that heavenly place, that waking dream that she'd so longed for. It was all too good to be true, and yet it was. It was true. It was true.\n\nSharron's first orgasm was a slow burn expanding to a wildfire. It was an extraordinary, out-of-control feeling, driven by Kay's amazing mouth, fueled by the hard, sexy, man-muscle in her hungry, squealing mouth. Kelsey's gentle, toothy nibbles on her nipples helped fuel the inferno.\n\n\"See, you guys?\" Kelsey said to her parents while Sharron was still writhing in ecstasy. \"She cums so nice, doesn't she?\"\n\nUp on the couch a short while later, with his cock deep inside Sharron's pussy, Bobby showed her what an expert man can do. He took her higher than any of Kelsey's boys had. It was experience, pure and simple. Knowing when to slow, and how to slow, and then knowing when to go, and how to go. He fucked her shallow for a while, and then plunged deep again, smiling at Sharron's expression of awe, and then at the beautiful look on her face when she came for the second time. She was so caught up in the awesomeness she hardly even noticed Kay and Kelsey sixty-nining on the floor.\n\nBobby shifted to the bottom, positioning Sharron on top of him in a leaned-back reverse cowgirl. Her pussy hovered over his thrusting cock, her stocking-covered feet supporting her just above his knees. Kay couldn't resist Sharron's open position. She and Kelsey both joined in. Kay's fingers slid through Sharon's slit, picking up the heat from her husband's glorious friction, playing with the red-hot clit of the increasingly wild older woman. It was an incredible ride and orgasm number three came quickly, hitting Sharron like a soft hammer. She shuddered and quaked, the feeling so deep it nearly frightened her. Bobby rolled her again.\n\nShe was on her back on the couch. He had one leg on the ground and one knee on the cushion, fucking her with swift, smooth thrusts. Kay climbed onto the couch and let her pussy hover over Sharron's face, absorbing her warm, wet lips and fast moving tongue. The three were moaning like a lovely chorus, filling the room with sexy sound. Kelsey watched from the sidelines, fingering her pussy as she took in the sights and sounds. After a while, watching wasn't enough.\n\n\"I wanna ride,\" Kelsey said to her mother, eager to join in.\n\nShe took over Kay's place. Sharron giggled at the difference in taste.\n\n\"You two should both be on the menu,\" she laughed into Kelsey's pussy.\n\nKelsey giggled too, looking into her father's eyes as the threeway reached critical mass. He was ready to blow but didn't want to yet, so he pulled out. Kelsey did the only thing a girl in that position could do \u2014 she lowered her head and took his steaming hot cock into her mouth.\n\nSharron's pussy still writhed under it all, and she ate Kelsey like a starving woman. She was aware of what was happening between the girl and her father. It shocked her, and excited her, and made her want the whole wild scene to explode. Never had anything been hotter than what she was in the middle of.\n\nKelsey put Bobby's cock back in Sharron, and he went deep again.\n\n\"Ohhh...Jesussss!\" Sharron groaned.\n\nBobby rolled Sharron yet again. She was flat on her belly on the couch cushion, with one leg hanging off to the floor. Bobby got his cock back in her and his relentless thrusting resumed. Kay wiggled her body in at Sharron's head, moaning the moment the wild woman's mouth devoured the wet heat of her pussy again.\n\n\"Fuck!\" Kelsey said, watching from the close sidelines. \"You guy's are killer!\"\n\nBobby was taking Sharron high again. She loved doggie-style, and was learning she like the jockey version even better. Everything that had happened the last few days was ricocheting wildly in her brain, but the intense feeling of Bobby's well-practiced cock fucking her superseded it all.\n\n\"Make her cum, Baby,\" Kay said breathlessly to Bobby. \"Make her cum.\"\n\n\"Ohhhh...Goddddd!\" Sharron groaned. Her voice was low and gravelly, sounding like the devil had overtaken her. Her eyes were wide as the massive short-circuit blew her mind. Bobby held his eruption off as long as he could, until she was nearly spent. He pulled out and pumped his red-hot cock with his fist, bellowing like a wild man as he gushed onto Sharron's back. Kelsey swooped in and inhaled the hot, slippery shaft again, moaning as she sucked it dry.\n\nThe pitcher of manhattans sat at the ready on the table. It was time for a much needed drink."
    ],
    "authorname": "riverboy",
    "tags": [
        "naturist",
        "incest",
        "father daughter",
        "swinging",
        "pool",
        "lingerie",
        "garter belt",
        "stockings",
        "bikini",
        "swingers"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/kelseys-world-ch-05"
}