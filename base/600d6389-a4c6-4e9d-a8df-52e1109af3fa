{
    "title": "A Girl's Guide to Bush Confidence",
    "pages": [
        "Watching the L Word the other night was an enlightening experience: evidently, I know nothing about being a lesbian, which isn't a shock considering that I'm bisexual, just coming out of a ten-year monogamous marriage, and whose first and only experience with a woman was at age 17. One of the phrases that really struck me during the show was \"bush confidence\" (and no, I'm not talking about confidence in the President). I've thought a lot about it since, and what I'm wondering is-- can straight women have bush confidence? \n\nThink about it: as a straight woman, you're unlikely to be familiar with the sight, feel or taste of pussy. Maybe you've seen your own in a mirror, maybe you've been adventurous enough to have even tasted yourself, via a partner or your own fingers. Most likely, the whole \"down there\" region is going to be a foreign concept, a forbidden land that is only entered by occasional partners (and hopefully a toy or two). How can we be confident about something so foreign, something we're taught is \"dirty\" from our very earliest years? And if we're not confident in our pussy, confident in our own unique appeal as women, can we really and truly celebrate and enjoy our sexuality?\n\nOh, I know a big part of the phrase \"bush confidence,\" as used on the L word, was about hair and lack of. I know they weren't making a huge statement about women's sexuality, but, honestly, even the concept of shaving pubic hair is foreign, even bizarre, to many women. I had to have my best friend (coincidentally, a lesbian) walk me through the process. It is such a scary thing, with such pornographic stigma attached, that it's no wonder most women opt to just leave their pubes as nature intended. \n\nBut, back to my point. I completely lack bush confidence. It's been over a decade since I was up close and personal with a pussy (not counting my own), and I've forgotten the appeal almost completely. Sure, I'm somewhat familiar with the taste of my own, but after a decade of marriage to a man who hates oral sex, I've become almost ashamed of the entire \"down there\" area. And this sense of shame has carried over to my sexuality, making me one who aims to please but seldom allows my partner the pleasure of pleasing me. If I am ashamed of my body, of the very parts of me that make me unique as a woman, how can I give the gift of myself to another?\n\nThe answer is- I can't. And perhaps the reason for so many dissatisfying sex lives is that many others can't either. As women, we should stop being ashamed of ourselves, of our desires, our fantasies, and our bodies! We should not hide our smells and tastes. We should be thankful for them because they are part of us, part of the blessing and beauty of being a woman. \n\nSo how do we become \"bush confident\" you might be asking. It's a good question, one with many answers. The biggest obstacle to overcome on the path to \"bush confidence\" is your own mind. Those teenage boys who made fish jokes? Forget them. They were full of shit about everything, if you recall, so there's no reason to believe them about this. The guy with the weird hang-ups who always wanted to shower after having his mouth on your pussy? Forget him, too. He wasn't normal, and it was no reflection on you. I've been there, for ten years, and I know how easy it is to believe that your pussy tastes or smells bad. Trust me girls, it doesn't. The taste and smell of a pussy is sexy and sweet, with just the right tangy kick. Don't believe me? Ask a lesbian. They know a lot more about pussies than you do. For that matter, if you have a partner who seems to like giving oral sex, as I've discovered many men do, actually listen to him when he tells you he loves the way you taste, the way you smell you when you're aroused, the way you grab his head when he's doing something that feels good, the way your legs tighten around his ears as your body begins to tremble in climax. Listen to him when he tells you he loves to get his mouth on you, not because he wants a return favor (though, of course, he does) but because he enjoys it. Sure, there are men who hate cunnilingus, just like there are women who hate giving blowjobs. But they're a minority, and it's their own preferences that make them that way. It is not about you. There is nothing wrong or gross or bad about nestling between a woman's legs and feasting on her. Trust me on this.\n\nIt also partly depends on you, on who you are and what your particular hang-ups are. Are you like Charlotte from Sex and the City who had never \"seen\" her pussy? If that's you, the first thing you need to do is find yourself a hand-mirror and a private space and get yourself familiar with your nether regions. Why does it matter what \"it\" looks like? Because if you don't know what your partner is seeing when he/she is between your legs, you're more likely to be ashamed and/or embarrassed. Things to notice when you're checking yourself out: the flare of your labia (otherwise known as your pussy lips), the varying hues of your folds of skin (who knew it was such a colorful region!?), and exactly where your very important openings are. While you're down there, why not play a little so you can witness the changes your body makes when it's aroused. \n\nA slightly more advanced (and more fun for the adventurous) version of this would be masturbating in front of a larger mirror. Ever watched yourself come or admired the way a toy looks sliding in and out of your pussy? It's a beautiful sight, even for the most self-conscious (I know because I avoid mirrors, but still managed to take and enjoy some great pictures of the slide of a toy into my pussy). What you see in that mirror is similar to what your man sees when he's fucking you. Ever notice him look down while he's on top, watching his cock plunge into you? He's not checking himself out girls; it's what he's doing to you that he's admiring.\n\nAnother important step to being \"bush confident\" is taking care of any hair issues you have. Does it bother you to have a full bush? Do you hate to see your partner pulling pubic hair from his teeth? Trim it. It's not a hard job, just requires some scissors; it's easiest while sitting on the toilet (instant disposal of the hair and easier straddling position). Just be careful not to get too close to the skin. Being trimmed isn't short enough? Go for the bare look by going to the salon and getting waxed or by shaving it yourself. Don't be afraid to go for it. Bare isn't just for porn stars, and I can tell you from first hand experience that being bare increases sensations, particularly during oral sex. For me, being shaved means instant and continual arousal. I want to be seen, tasted, and thoroughly devoured. And when I am being seen, tasted and devoured, I fully enjoy every second knowing that there isn't anything getting between me and his (or her) mouth.\n\nDoes it really make a difference whether you're confident in your pussy? Absolutely. If you're not completely confident in your body, in your womanhood, confident not just in your breasts or in the sway of your hips, but in every aspect of your body, it is impossible to revel in the innate sensuality and sexuality of being a girl. Not to mention that lacking pussy confidence makes it nearly impossible to really enjoy oral sex. And while fucking is great, there's nothing quite like a partner sucking, licking, nibbling, and thoroughly tongue fucking you to multiple orgasm exhaustion. Speaking of which, I think I need a volunteer.... "
    ],
    "authorname": "sophia jane",
    "tags": [
        "women's sexuality",
        "confidence",
        "sexuality",
        "sex advice"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/a-girls-guide-to-bush-confidence"
}