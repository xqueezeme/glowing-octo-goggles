{
    "title": "Just Being Neighbourly Pt. 02",
    "pages": [
        "For those who asked me to continue this story, I say thank you for your patience. It took me a while to figure out where it was going, but once it did, it just took off. \n\nPlease send me your comments and suggestions, and Feedback is very appreciated. Votes help, too. \n\nI hope you enjoy it. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"Karen?\" I called. \n\nI had taken 'our' shortcut through the bushes, and was closing the back gate behind me. \n\n\"Ah, there you are,\" I smiled. My sexy neighbour / friend / lover was smiling back at me, peeking over her sunglasses. She blew me a kiss, and went back to the conversation, on her phone. That's why she hadn't responded. \n\nThe first time I saw her naked, getting out of my shower, I had noticed her tan lines, and wondered what the suit that caused them had looked like. I think I was seeing it now, as a very brief string bikini, black in colour, cradled her large breasts, and barely covered her delicious pussy. It was, as I thought, a very naughty suit. It would have been revealing on a teenager, but on a woman with her mature curves and ample endowment, it was devastating. \n\nIt had been three weeks since the plumbing incident, and we had spent most of those evenings together. That first time had been a whirlwind of unrequited need, as we had both been on our own too long. That time, we just both had to have each other...and right that second. It had been a departure for both of us. Since then, we were a little more restrained, and relaxed, but the urgency was still boiling just below the surface. \n\nFor the most part, I let her set the pace of our physical relationship, because I didn't want her to think I was just using her for sex. As far as her using me? Well, I was absolutely fine with that. Please, help yourself. \n\nI took a seat beside her, giving her body the once over again, and trying not to listen to her conversation too obviously. \n\n\"Really, Cindy, I'm fine...yes, I know...I know I said I was feeling better, but...\" she said. \"No. That's not what I said. I said I might be ready...well, I didn't tell you to tell him that, did I?...No... Cindy, don't give me that... Cindy! I'm not kidding! If you?... Oh, fuck, alright! Fine, but I'm holding you responsible. If he does anything I don't like, it's your ass...fine. Friday night. Seven o'clock...I have to go. Bye.\"\n\nI didn't want to pry. I really had no right to pry. Karen was my neighbour. She was my friend. She was my fuck buddy. She was not my girlfriend. \n\nBut, just the same, I was more than a little curious. \n\n\"Who was that?\" I asked quietly, \"if you don't mind me asking.\" \n\nShe seemed a little miffed, not at me, thankfully. \n\n\"That...\" she exhaled, \"...was my sister-in-law. Or should that be 'former'? Does that relationship terminate when a spouse passes?\" she asked, a quizzical look on her face. \"I suppose it doesn't matter. Cindy, my husband's sister, has been trying to set me up for months...telling me to get back in the game, and stop moping around the house. Of course, she doesn't know about you, but that's none of her business anyway.\" She took a deep breath.\n\n\"A couple of weeks ago, I told her I was feeling a little better,\" Karen said quietly, \"and she took that as meaning I wanted her to get me a date! Fuck! I don't want to go out with some guy on a blind date, just because she guilted me into it! Damn it!\"  \n\nI was immediately struck by two thoughts. First, I was happy that us being 'together' had broken her out of her grief. She was far too beautiful and loving to be alone and miserable. \n\nThe second thought surprised me a bit. I was jealous! I couldn't tell her that, could I? No. We were supposed to be free of emotional strings. I wouldn't pressure her like that. \n\n\"That's great!\" I smiled, trying a bit too hard to be nonchalant. I may have swung the pendulum too far the other way. \n\n\"It is?\" she asked. \n\n\"Sure. I'm sure there are plenty of men out there that would love to spend time with you,\" I replied. It didn't come out the way I meant it to, but I didn't know quite how to fix it, without sounding desperate. I certainly didn't mean it to sound like I didn't enjoy being around her. \n\nUnfortunately, that's what she heard, although I didn't realize it at the time. \n\nShit. \n\n***\n\nThere were three days before Friday night arrived, and everything remained pretty normal between us. We spent two of those three nights together, and it didn't seem like there was any fallout from my inadvertent faux pas. \n\nWe were supposed to be 'friends with benefits', whatever that means. Maybe there's a rule book somewhere, with a list of things I could or couldn't say or do. I'd pay real money for that list right now. \n\nDamn! Why did she have to be so beautiful, and sexy? Actually, that wasn't really the problem. Beautiful and sexy would be just fine, if she was only a very pleasant roll in the hay, but she passed that stage a couple of weeks ago. In addition to being built, and gorgeous, and a demon in the bedroom... and taking it up the ass like a champ...she had turned out to be a wonderful person. \n\nSomeone I could easily fall for. In truth, I may already have. That was the problem. \n\nAfter ten years married to a 'wonderful' woman, I had discovered that she wasn't quite as wonderful as it first appeared. Belinda had proven that looks could be deceiving, even to those who are close enough to see everything. Maybe I was too close, or maybe I didn't want to see it, but the sight of those three men using her like a cheap hooker, while she begged for more, had clearly illuminated the truth. \n\nPart of me didn't trust my own judgement, and didn't want to make that mistake again. Or maybe I really was in love, which would be great...if only I knew she was ready to move on, beyond a little bedroom fun. Okay, that was an understatement. She was so much more than just a little bedroom fun. \n\nFriday arrived. I was still feeling jealous, and it was about to get worse. \n\nI was at home, working on my upstairs bathroom, and trying not to think about the evening without her. I had accomplished a lot recently, and nearly had a fully functioning ensuite bath. The work was therapeutic. My phone rang. \n\n\"Hello?\" I asked as I answered it. The voice that responded made my heart warm. \n\n\"Hi, sweetie,\" Karen replied. \"I could use your help over here in about an hour, if you're available? Can you come over?\" \n\n\"Of course, baby,\" I answered. \"See you soon.\" \n\nI wondered what she needed my help with. Something she couldn't reach? Maybe a quickie? I suppose I would find out soon enough. \n\nWhen Karen let me in the back door an hour later, she was wet from the shower, wrapped in a towel. It barely covered her crotch, and her big breasts were nearly spilling out the top. She thanked me with a peck on the cheek, and led off, up the stairs, to her bedroom. Following her up, I could clearly see her firm ass under the towel. Maybe I was right about the quickie. \n\nAs we reached the top of the stairs, she let the towel come loose, and I found myself looking openly at her delicious backside. She patted residual moisture from her body with the towel, completely unconcerned with her nudity in my presence. I suppose we had both seen each other naked often enough in the last month that it was no longer a big deal, but I would never tire of her smooth, soft, luscious curves. \n\n\"So,\" I asked, taking a seat on the corner of the bed, \"you need my help? Feeling frisky?\" I added hopefully. \n\n\"Oh, I'm quite sure you'd be willing to help me with that, wouldn't you?\" she giggled, smiling at me. \"No, honey...that's not really the problem, although it does sound like fun. I need you to help me dress for my date. It's been almost twenty-five years since I went on a date, and I'm scared shitless. I don't know what to wear. You'll help me, won't you?\" \n\nI suddenly realized she was right. We had never actually been 'out' together. Other than our shopping trip to Home Depot to get her plumbing supplies, and the neighbourhood party where we met, we had never been anywhere but the bedroom. Okay, also the kitchen, living room, bathroom, pool... nearly every room of her house, and a few of mine, had been the site of some sort of sexual activity. We had been trying to keep a low profile for gossip reasons. Now it was biting me in the ass. \n\nI was her friend, and while I was benefitting greatly from my proximity to her smouldering sensuality, we were not really a couple. At least, not as far as she knew. I would have given a different answer if I was being honest, but I didn't feel like I could tell her how attached I was becoming to her yet. Certainly not tonight. I had to play it cool. \n\n\"Oh! Right! Tonight's the big date!\" I laughed, hopefully not too transparently. \"Well, I suppose what you wear depends on what your goal for the night is,\" I smiled. \"Hoping to get laid?\" I was trying to use humour to ease the tension I was feeling. \n\n\"Dan!\" she gasped, her hands on her hips. She was giving me the indignant look, but since she was otherwise naked, it didn't have the desired effect. My eyes wandered across her big breasts, as they jiggled with her comment. \"No! I don't even know this guy! I'm just hoping to get it over with, and get Cindy off my back,\" she smiled. \"Besides...that's what I have you for.\" \n\nI watched her lick her lips, and straddle my lap, pressing her soft, sexy body against mine. Her lips found mine, while my hands landed on her ass. We embraced for a few minutes, our tongues dancing a sensuous tango in each other's mouths. I can't really speak for her, but it was getting to me. I was quite hard. I'm sure it was obvious to her, as she was rubbing her pussy over the bulge my cock was raising in my pants. \n\n\"We don't have...much time...but I could really...use some of... that hard cock,\" she panted between kisses. \"Come on stud, fuck me. Quick.\" \n\nKaren wasted no time in taking a position on her back, legs spread wide. Her pussy had left a wet spot on my pants, indicating her arousal. I ripped my clothes off, and she sat up for a few seconds, gobbling my erection into her mouth for a quick lubrication. Satisfied, she laid back, and smiled, tapping her imaginary wristwatch. \n\nHearing her say she was only doing this to placate her former sister-in-law made me feel a bit better. Her placement of me in the role of lover was even more uplifting, and the fact that she wanted a little action before she went out could only be seen as good news. I took a position between her legs. \n\n\"Target of choice?\" I asked. \n\n\"Pussy, please,\" she smiled. \"You can have my ass later, after I get home from this charade.\"\n\nEven more good news. If she was already planning our evening together after she gets home, I would happily play my part. \n\nI eased the head of my erection into her vestibule, parting the thick, slippery lips smoothly. Karen exhaled, a soft moan of delight, as my shaft slid deeper inside her dripping wetness. \n\n\"Mmmmm, yes,\" she hissed, \"put that big thing all the way in there. It fills me up so perfectly. I just love that sensation.\"\n\nYeah, I know. This situation was strange, to say the least. I was playing the 'designated hitter' position, as it were. Even though she didn't want to go on this date, and was only doing it to shut her sister-in-law up for a while, it seemed like my job was to just fuck her. Emotional depth would be provided by another man eventually. It was only a matter of time. \n\nSo, I did my job. It was a fun job, but I was really hoping for more. \n\nI hooked my arms under her legs, and leaned in, looking deep into her eyes. Those eyes opened wider as I pushed the full length of my cock into her pussy, as did her mouth, agape with need. She groaned, and tilted her head back. \n\n\"Oh, shit...that's it, baby. Now do it! Fuck my brains out! Gimme that dick!\"\n\nThe first time Karen had used language like that in bed with me, it had triggered some very unpleasant memories for me...memories of Belinda demanding more, moaning like a cheap whore while she cheated on me with those three electricians. Karen had apologized, unaware of that little detail of the story. It had taken a few weeks to get past the sting of those words, but now that they were directed at me, I found the dirty talk was having the effect she was hoping for. It made me even more aroused. \n\nI did as she asked, plunging long, hard strokes into her vagina, causing little squeaky noises to come from her, and groans of protest from the bed springs. Her blue eyes bored into mine, hands braced against my shoulders while her body absorbed those furious thrusts. It took about a minute for her welcoming cleft to take on its usual level of moistness, and start to ooze around my probe. One thing was certain...Karen really enjoyed sex. \n\nIt was hardly an onerous task for me, either, especially because I was able to watch her enjoying it. That was one of the things I missed the most about not being married. Maybe I'm strange, but to me, sex is better if my partner is having as least as much fun as I am. If all I wanted was a cum receptacle, I could get a perfectly acceptable one from any online sex shop. I craved the emotional connection. \n\nKaren was a joy to watch. Her facial expressions while I pounded her were exquisite, with her pretty blue eyes and plump lips eloquently conveying her feelings, even without words. I liked to observe the way her labia dragged along my shaft as I pulled back each time, becoming more distended and erotic as her arousal level grew, until they pouted open like the petals of a rare orchid. Of course, with breasts like hers, I also had their shimmying dance to provide an audience for. They may have been the stars of the whole show, moving like liquid sensuality across her chest in time with my thrusts. \n\nI wonder why I was becoming attached to her? She was only my perfect woman. What could I possibly see in that? So what if she was fifteen years older than me? She sure didn't look it, and definitely didn't act like it. \n\nRight now, she was acting like a horny teenager, urging me on with moans and lusty words of encouragement. The overall gist of the message was 'fuck me harder', so I did. \n\nI was slamming down into her cunt, and had found that perfect rhythm that had her body rebounding into me off the mattress just as I crushed into her with each stroke. Her beautiful red hair was flying about her face, obscuring that pretty face, contorted by her rapidly approaching orgasm. Those big tits were following suit, bouncing wildly all over, attracting my eyes unavoidably. All the while, she was shrieking like the proverbial banshee. \n\n\"Yes! Yes! Yes! Fuck me! Fuck my cunt! Make me cum! Jam that fucking cock in my pussy! Gonna cum! Gonna squirt!\" It was a greatest hits album of dirty talk, performed live by the artist, for my ears only. It was a catchy tune. \n\nKaren's screams turned to squeals, and her skin began to flush pink, so I knew what was coming next. Okay...I guess a pun is justified here. I knew what was...cumming...next, and it was spectacular. \n\nHer face turned purple as she came, pushing me away. As my cock slipped out of her, she erupted, gushing a stream of hot juice over my chest. A guttural groan followed, and she fell back, body twitching in response to the spasms of her orgasm. \n\nI swiped my fingers through the slick she had squirted on me, and licked them clean. \n\n\"Mmmmm. Yummy,\" I smiled. Her eyes cracked open, and she smiled back. \"I don't think that will ever get old. It's just so fucking hot, watching you cum that hard, and knowing I made it happen.\" \n\n\"Thank you,\" she hissed. \"I'm so happy you enjoy it. Now...give me that cock. I want my pacifier to suck.\" \n\nI scuttled up the bed, stopping with my still hard dick next to her head. She turned, giving it a long lick from my balls to the tip, like a stick of candy. She made no attempt to hide the fact that she found her own juices quite delicious as well, moaning softly. Her mouth closed over the head of my cock, and she slid her lips further down, swallowing as much as she could. \n\nWith me laying on my side, she did the same, bobbing her head slowly, until she patted my butt with her hand. It was her code to fuck her mouth, as she wanted me to cum for her. My hips started to pump, and I put my hand on top of her head. \n\nA soft 'gwock, gwock, gwock' sound wafted through the room. Karen was nasty in the bedroom, and liked it when I jabbed my shaft down her throat, causing her to gag a bit. She said it made her feel 'slutty', and it made her hot. \n\nHer hand caressed my balls while I stroked into her mouth. The combination of sensations had me on the brink in no time, and she could sense that I was close. Her moans of encouragement reverberated through me, and set me off. \n\n\"Oh fuck...here it cums, baby!\" I grunted. She jammed her head forward, and I exploded, gushing down her throat as she swallowed happily. She sucked hard, drawing out every drop I could produce, until I was spent. Only then did she release me, and I rolled back, breathing hard. Karen crawled up beside me. \n\n\"I love the way your eyes sparkle at me when we're having sex,\" she breathed softly, nearly recovered from the impact of her own climax. It would be a few minutes before I could say the same. \"You really like my tits, don't you?\" she giggled, rolling up onto her side, and pressing those fabulous globes into my ribs. \n\nI smiled. There was no need to confirm or deny the obvious. I couldn't form sentences yet, anyway. \n\n\"My husband was a real breast man, too,\" she laughed. \"Fortunately, I'm well qualified for that type of relationship. One might say 'amply qualified'.\" She wriggled in my embrace, rubbing her full, firm melons against me, as if more proof was needed. \n\nI pulled her over atop my chest, relishing the firm pressure of her tits crushed between us, and kissing her softly. She accepted my lips for a few gentle moments, then patted my chest. \n\n\"You're going to make me late...or is that the plan?\" she giggled, rolling away. \"Time to play 'wardrobe advisor', and remember...I'm not trying to encourage this guy, whoever he is.\"\n\nI laid back in Karen's bed, while she did a quick wardrobe display for my approval. One dress after another was held up in front of her delectably nude form, and we played process of elimination, finally settling on a simple, yet elegant blue one. I intentionally avoided recommending anything that showed too much of her long legs, or her spectacular cleavage, but truthfully, she was delicious in anything. \n\nWith the decision made, I watched her choose the appropriate underwear to match. She wriggled into her bra, and turned her back to me. \n\n\"Do me up, please?\" she asked. \n\n\"I'm not sure I know how. I barely know how to undo it,\" I laughed, as she held her long locks aside. I fumbled with the catch, reading the tag as I hooked it closed. It read 36DD.\"There you go.\"\n\nI watched her dress. It was almost as exciting as watching her strip. She was a truly beautiful woman. \n\nToo bad I wasn't the one she was going out with. \n\n***\n\nI was watching TV at home when my phone buzzed. It was barely after 11, pretty early for two adults to end a date. I found myself feeling better that her evening hadn't gone well, then a bit guilty for that thought. \n\n\"Hi Sexy,\" I smiled, answering quickly. \n\n\"Hello, stud muffin,\" she replied, the sultry purr evident in her voice. \"Whatcha doin'?\" \n\n\"Watching a movie on TV. Whyyyyyyy? You have something in mind?\" \n\n\"Well...if you're not too sleepy, I thought you might come over and take care of me,\" she breathed. \"I'm horny.\" \n\n\"Really? What a surprise,\" I laughed. \"How was your date?\"\n\n\"Come over here, and I'll tell you all about it. I'll leave the back door open,\" she finished, \"and I mean that in every sense of the term 'back door'.\" ",
        "Ooooo, yes. Karen really was an anal addict. Belinda had never let me do her in the butt, another reason why her behaviour with the three electricians had been so devastating. I'd had a few previous girlfriends that had been willing to experiment with my cock in their asses, but over a decade had passed since then. Karen's fondness for a royal butt fucking had been a very pleasant surprise. There was no way I was turning her down. \n\nI slipped my shoes on, and bolted out the door, following the very familiar path through the darkness and bushes to her house. If we were going to continue this clandestine relationship, maybe I should start working on the tunnel. \n\nUp the steps onto her back deck, I found the door unlocked, and walked in, closing and locking it behind me. The house was silent, and dark, so I knew exactly where she was. Upstairs. Bedroom. \n\nI ditched my shoes and quietly made my way up to the second level, where soft, dim light was coming from her boudoir. I stopped in the doorway. \n\nKaren was laying prone, arms folded under her head, facing the right side of the bed. Her dress was apparently back in the closet, but she still had her bra and panties on. Soft light makes nearly any woman look more curvaceous, with shadows and light painting across their bodies. That's why glamour photographers shoot in this light, but Karen really didn't need the help. She had the curves in abundance, even though the best ones were totally hidden under her body. \n\nHer firm ass, clad, so to speak, in black brazilian cut panties, was magnetically attracting my gaze. The smooth, rounded contours of her glutes were highlighted against the shadows, accentuating the sensual lines. I couldn't help but stare. The shadows were hiding her eyes, watching me. \n\n\"It's not that I don't enjoy your eyes caressing me,\" she whispered. \"Just that I enjoy your hands doing it more.\" She rolled onto her side and smiled. \"Come to me, darling. Touch me. I crave it.\" \n\nI joined her on the bed, snuggling beside her as she rolled onto her back. \n\n\"So...tell me about your date,\" I smiled. \n\n\"Not much to tell, really,\" she said quietly. \"Nice enough guy...just no spark. Dinner was nice. We talked. He even took me dancing.\"\n\nSome people describe dancing as vertical foreplay. Two bodies pressed against each other, hands wandering and exploring as far as they were allowed to. That jealous feeling was bubbling again, but she was here with me now, asking me to take care of her urges. How those urges came about didn't really matter, did it? \n\n\"Dancing?\" I laughed. \"So, did he take liberties? Feel you up a bit?\" \n\n\"Mmmmm hmmm,\" she smiled, turning toward me. \"It's a good thing I didn't get a vibe from him, and I'm not a slut, or I'd be getting fucked right now. Then again,\" she giggled, \"that's what I was hoping you'd do for me tonight. That's the point of 'friends with benefits', isn't it?\"\n\nGood point. That was the basis of our relationship...so far at least. \n\nDamn, she was beautiful. I had done all the math...you know, like how she was probably wearing a C-cup before I was born, and had been married for over a decade before I got my driver's license. None of that mattered. Sure, she could almost be my mother. I didn't care. As long as she wanted to give me access to her luscious body, I would happily accept it. \n\n\"Where did he touch you?\" I asked. She was cuddled into my chest, much as she would be on the dance floor, except that we were preparing for the horizontal mambo. \n\n\"Well...first his hands were on my back, of course,\" she purred. I wrapped an arm around her, and caressed her there, awaiting the orders to move on. \"As we danced, he moved lower, to the small of my back. Still quite proper and gentlemanly,\" she continued, \"but so close to the line it was teasingly obvious.\"\n\nI slid my hand lower, stopping just above her hip, in the crook of her waist. She exhaled softly, a quiver of excitement in the breath. \n\n\"Like this?\" I asked, whispering in her ear. She merely nodded, and nuzzled closer, putting her arm up around my shoulder. We 'danced' like this for a few moments, until my hand quite naturally moved lower, onto the side of her hip, and around slightly, to softly trace the rounded upper curve of her butt. \n\n\"Mmmmm,\" she moaned, burying her face into my neck. A gentle peck of her lips told me to continue, so I moved lower, cupping the soft bare skin of her lower gluteus. It filled the palm of my hand with warm, firm flesh, which she flexed playfully. \n\n\"So, you're on the dance floor, and he's got his hand on your ass, like this,\" I recapped, giving her a squeeze. \"Anything else?\" \n\n\"Mmmmm hmmm. Since I didn't stop his wandering hands, he grew a bit bolder,\" she giggled. \"Soon, he had one hand on my side, just under my breast.\" I did as she suggested, stopping just tantalizing fractions of an inch from the full globe that was filling her bra to capacity. She shuddered. \"Oh god, don't stop. Just do it, baby. Maul my tits. I need your hands desperately.\" \n\nHer lips sought mine with urgency, and she dragged my hand up onto her breast, encouraging me to fondle and squeeze her soft, round orb. She tugged the shoulder strap down, and pulled the cup off, giving me access to her bare skin. \n\n\"Oh honey, you know what I need,\" she growled. \"Come on...get that big, hard cock out and give it to me! I'm soooooo horny!\" \n\nShe was certainly right about the 'hard' part. All this touching and teasing her had done a number on me, too. My pants were filled with more tumescent meat than they could comfortably contain. Her hand was trying to help, tugging at the fly, attempting to free my dick. I rolled away to stand up. \n\nWhile I stripped, she did the same, skinning her panties off and unhooking her bra. By the time I was ready, she was reclined again, legs spread wide. I could smell her arousal. \n\n\"Pussy first,\" she smiled, circling her clit with two fingers. \"Then you can cum in my ass.\" \n\nWhatever...as long as my cock gets to probe your body again, I thought, and slipped the head between her thick, juicy lips. She was her usual, dripping wet self, and her pussy easily accepted my shaft, sliding deeper until my balls were resting against her perineum. Her long legs wrapped around my waist, holding me tight. \n\n\"That's it...that's what I needed,\" she whispered. \"Your nice, big pole, stuffed inside me. It makes me feel so good!\" She kissed me passionately, grinding her pussy over my cock to rub her clit between us. \"Mmmmm, yeah...fuck my cunt, stud! Make me cum!\" \n\nMaking her cum sounded like a very good idea. I just loved the way she screamed when her orgasm hit her, and being deep inside her when it happened was one of my favourite things in the world. \n\nI believe it was Confucius who said 'a journey of a thousand miles begins with a single step', or words to that effect. The same is true of fucking a beautiful woman. One single stroke, to get things started. I pulled out, and slid back in, to her appreciative moan. \n\nI had found that sex with Karen was a timeless exercise. On the few occasions where I was aware of the passage of time in her arms, it seemed as though time flew by. It also seemed to stand still. Maybe Einstein could explain it, but I didn't care why. I just enjoyed it. \n\nIn and out, in and out...my hips thrust deep into her warm, sodden pussy, while her internal muscles gripped my shaft in its exquisite embrace. Her strong thighs rippled around my waist, squeezing me against her. Then there was the firm sensation of her big boobs, squashed tightly against my chest, and her lips on mine, while our tongues wrestled urgently. The bedroom was filled with the sounds of sex. \n\n\"Mmmmm hmmm...oh yeah...oh yeah, fuck...oh, fuck me...uh huh...oh fuck, yes...oh, yes...fuck my pussy...harder, baby...ooooo yessss... faster...more...more...more!\" She was very loquacious this evening. \"Ooooo yes...oh yes...yes!...uhnnn!...fuck!...Fuck!... FUCK!... FUUUUUUUUUUUUUUCK!\" she shrieked, as her pussy gushed juices around my shaft, and dripped off my balls. \n\nI slowed my rhythm, then stopped, as she panted and moaned through the aftereffects of her orgasm. Her eyes were shut tight, but as her face relaxed, they fluttered open, and slowly focused on my face, sparkling like two sapphires. She blinked, and smiled. \n\n\"Um...wow, that...wow,\" she giggled, rubbing her face with one hand. \"Do you want to tap my ass, now?\" I smiled. \"I suppose that's a 'yes'.\"\n\nI pulled out, and dragged her closer to the edge of the bed, hooking her legs higher over my shoulders. She smiled, and fingered her puckered anus quickly. \n\n\"All set. Fuck my ass,\" she grinned. \n\nIt had been nearly a week since I had last reamed her rear entrance. I was looking forward to it. \n\nMy cock was well coated in her natural lubricant, and enough had oozed out of her and over her rosebud to ease insertion, so her tight sphincter put up a minimum of resistance before yielding to admit my head, then the rest of my shaft. \n\n\"Ohhhhhhhhhhhhhhh, fuuuuuuuuuuuuuuck,\" she groaned. \"That's one big schlong you've got there, honey. It feels wonderful up my ass. You're going to get me hooked on it.\" She flexed her glutes around the base of my cock. \"I feel so full.\" \n\nHer ass sheathed my sword to the hilt in a snug grip. When I rocked out, then back in, Karen moaned softly, her mouth wide. I groaned in harmony, enjoying the warmth and smoothness. One stroke led to more, until we were both singing our bliss in time to the rhythmic thrusts of my hips. \n\n\"Ooooo, yes...fuck my fucking ass...all the way in, honey...so deep...so good,\" she grunted, her fingers working over her vacant, gaping pussy. \n\nWhile I was definitely enjoying the sensation of her ass gripping my dick, I must admit that the sight was driving me insane. Guys tend to be visually oriented ; ask any porn director. I certainly was, and the image of my thick shaft stretching her anus wide open, and disappearing into her body, while her pussy dangled open above, twitching in response to my strokes...well, it had me nearly ready to flood her rectum with cum. She was clawing at her pussy, hooking fingers deep inside, and abusing her clit furiously. The motion of her arms made her big, beautiful tits jiggle and shake, adding to the visual buffet of cum inducing factors. Her words had become screams. \n\n\"MMMNNAHHHHN! FUUUUCK MY ASSSSS!...YESSSS! I'M CUMMMMING!\"\n\nI squinted. Well, if you remember correctly...Karen squirts. Karen sprays. Karen is incredible. I didn't want to miss the show, but I left my safety goggles in my bathroom, where I had been doing plumbing in the traditional sense, earlier today. Hence the squint. \n\nAs it happens, I was safe. Her fingers diffused the flow, causing a more gentle and wider spread shower of her sweet juices to sprinkle across my chest and stomach, as she shrieked her joy. \n\nThe fountains at the Bellagio inspire 'oooos and ahhhhs'. Karen's fountain, the finale in her show, inspired me to 'Ooooo and ahhh' for slightly more personal reasons, as I spewed hot cum deep inside her bowel. \n\nI collapsed on top of her. Both of us were sticky with sweat and pussy juice, gasping for breath after mutual earthshattering orgasms, yet desperate to taste each other's lips. \n\n\"Thank you so much,\" she whispered, holding me close. \n\n\"My pleasure,\" I smiled, \"and thank you as well.\" \n\n***\n\nTen days of 'normal' followed. Normal for us, anyway. I spent every night in Karen's bed, even though we didn't have sex every night. It was very comfortable, and I let it stay that way, not wanting to introduce tension by bringing up my feelings. \n\nThat was a mistake, made even worse when Karen dropped in on me on Wednesday afternoon. I was upstairs, installing tile in my master bathroom. \n\n\"Yoo hoo?\" I heard. \n\n\"Up here,\" I called, and momentarily Karen appeared in the doorway. \n\n\"Looking good in here,\" she smiled, casting her gaze around. \"I can't wait to have a shower in the new bath. Are you busy Saturday night?\" \n\nWe still....yes still...hadn't been out together in public. I naturally assumed she was correcting that oversight. \n\n\"No,\" I replied happily. \"Are we going out?\" \n\n\"Yes... \" she answered. \n\nMy heart did a little jump of joy. Prematurely. \n\n\"... I got us a double date,\" she finished. \"I get the brother, and you get the sister. I hope you don't mind that I offered your services? I've met Charlie, and I think you'll have fun with her.\" \n\n\"Charlie?\" I asked. The name had distracted me, even though it was the least of my worries. I wanted to go out with Karen, but not as a partner for her partner's partner. Shit. \n\n\"Charlotte really, but she prefers Charlie,\" she clarified. \"She's cute, a bit shorter than me, blonde, great personality...\"\n\n\"Oh no,\" I groaned. \"The kiss of death. No one ever says that without a reason. Does she have a horn in the middle of her forehead?\" \n\n\"Would I do that to you?\" she scoffed, \"and you didn't let me finish. She's lost a lot of weight...\" I groaned, but Karen held up her hand, silencing me, \"...and now, she's right up your alley. Come on...it'll be fun.\"\n\n\"I thought you didn't like dating?\" I offered. \"You didn't like the last one.\"\n\n\"Well no, I didn't, but it was him I didn't like,\" she giggled. \"I did like everything else...even his hands on me. Besides, what are you complaining about? If you recall...you're the one who closed the deal. Twice.\" \n\nOh yes. I recall just fine. \"Okay, I'm in.\" I nodded. \n\n***\n\nSaturday arrived. \n\nI rolled over in bed, and spooned behind Karen. She moaned, and wiggled her butt against me. \n\n\"Good morning, lover,\" she giggled. \"Thank you for last night.\" \n\n\"Any time,\" I smiled, wrapping her in my arms. \"And I do mean ANY time.\" \n\n\"Ready for tonight?\" she asked, pointing out the elephant in the room. \n\n\"I can't believe I let you talk me into it,\" I replied, \"but I suppose I'm as ready as I'll ever be.\"\n\nAt first, my main objection to this date had been that another man was taking my place beside Karen. Then I realized that this was my first date after the divorce. I would be in the company of another woman, and because it was a double date, I had to stick it out, no matter how it was going. That made me nervous. I didn't want to ruin Karen's night out. Or did I? \n\nThe day went quickly. I continued to work on my bathroom until late afternoon, before going back over to Karen's house to have a shower. Funny how things had reversed. \n\nI walked in to find her wrapped in a towel, doing her hair and makeup. After dropping my clothes on the floor, I reached in and started the shower, stepping in when the water was warm enough. I let the warmth cascade over me, easing the aches of the day, while I thought about the evening to come. \n\nShe filled me in on the background of our dates as she worked. Old friends from her youth. Her date, Tim, had recently divorced, and she had always found him interesting. If things had happened differently, she might have married him back then, but now she just wanted to catch up. Charlie, his youngest sister...ten years younger...was back in town for a visit, and Tim wouldn't go without her. Karen remembered her as a chubby little girl, but assured me that she had grown up quite nicely. \n\n\"You're pretty quiet,\" Karen observed. \"Nervous about tonight?\" \n\n\"A bit,\" I laughed. \"I'll be okay.\" My eyes were closed, so I didn't see her reach in through the curtain, until I felt her hand grasp my soft penis, and looked down. \n\n\"Want me to relax you?\" she giggled. My rapidly hardening erection answered for me. \"It would appear that at least part of you is ready to go. I suppose I owe you for getting you into this.\"\n\nShe stroked it a few times, turning me sideways so she could remain outside he shower and still perform her duty. She knelt, and plunged her mouth over the head of my cock, inching her lips down as far as she could, which was nearly all the way. \n\nGod, I loved a good blowjob. I guess that's probably a redundant statement, as I'm sure there's very, very, very few men who don't. I looked down into her perfect blue eyes, nicely enhanced by eye shadow and mascara, and she winked. The freshly applied bright red of her lipstick was smeared across my shaft as she bobbed her head eagerly. Her tongue worked its magic, teasing the underside of my hard meat, and bringing me ever closer to exploding in her mouth. \n\nMy legs began to quiver, and Karen knew the big finish was near, so she moaned and increased her pace, sucking harder. Her reward was mere seconds away. \n\nHer reward. Yeah, right. It was my reward, and it felt incredible, as she jammed her mouth forward and swallowed my load of jizz. I would normally have grabbed her head and held on, but I didn't want to mess up her hair. The damage to her makeup was enough trouble to put her through. \n\nI spurted over and over, while she gulped it down, sucking feverishly. When I was empty, she released me, and I slumped against the wall, bracing my hands on my knees. \n\n\"Oh shit,\" I panted. \"Thank...you...baby.\" \n\n\"Mmmmm mmmmm, you're welcome,\" she smiled, licking her lips. \"Now hustle. They're going to be here in half an hour.\" \n\nRight. No dawdling. I turned the water temperature down, hoping the cool water would clear my head and urge me out faster. It worked, and I was soon pulling my pants back on for the trip back to my house, to get dressed. \n\nWhen I finished dressing, I locked up and headed back over to Karen's, clearing the bushes just as a big black car rolled into her driveway. She was just closing her door as well, and we made eye contact. She smiled. \n\n\"You look good,\" she giggled. \n\n\"You look better,\" I smiled, and it was true. She hadn't asked my opinion about her dress tonight, choosing a black one that really showed her off. \n\nThe car stopped, and the front doors opened. A dark haired guy stepped out of the driver's side. \n\n\"Tim...Nice to see you,\" Karen bubbled, stepping over to hug him. He gave her body a quick once over, and smiled. \"This is Dan,\" she continued. \n\n\"Tim,\" I nodded, taking his handshake. He seemed about my age, maybe a little older. He nodded back. \n\n\"Dan, meet my sister, Charlotte,\" he said, gesturing to the blonde moving around to the near side of the car. \n\nShe looked a little nervous, but otherwise, Karen had done a good job describing her. Charlie was cute, with pixie features and big blue eyes that went well with her long blonde hair. Her body was...holy shit! She was built, with an abundance of curves, and breasts at least the equal of Karen's major melons. She was wearing a light dress, blue in colour. \n\n\"Please, call me Charlie,\" she smiled, pecking me on the cheek. \"Nice to meet you.\"\n\n\"We should get going, Karen,\" Tim suggested. He opened the door for her. Charlie did the same for me, but the back door of the sedan opened...backwards? \n\nInside, the car was roughly the size of my living room. Huge. I was stunned. Charlie filled me in. \n\n\"This was my grandfather's car. He bought it brand new in 1969. He was a fan of President Lincoln, so I suppose buying a Lincoln was his way of showing it. The suicide doors are pretty cool, aren't they?\" she smiled, sliding in next to me. She pulled the door shut as Tim took his place behind the wheel. He started the engine, and we backed out of the driveway. \n\nCharlie told me all about the history of the car, and how they had recently done some work on it, restoring the interior. How her parents had gone out together in it. \n\n\"I think Dad got Mom pregnant with Tim on this very seat,\" she giggled, patting the leather beside her. \n\n\"There's no proof of that!\" Tim exclaimed from the front, laughing. \"And I'll thank you to stop spreading such vicious gossip!\" \n\n\"Right, and they named you Lincoln by accident,\" Charlie retorted, rolling her eyes. \"He's such a dweeb.\"",
        "Apparently, bashing her brother relaxed her, because she opened up, and we talked quite freely for the rest of the drive to the theatre. Her blue eyes were quite intoxicating, as they sparkled with her smile. It appeared that I might be in store for an evening of enjoyable company, even if she wasn't the woman that would have been my first choice. When we arrived, I had another surprise. \n\nI had heard of these theatres, but never been to one. There was a lounge area for the sole use of these two theatres, despite the eight others in the building. We had dinner in the lounge...a pleasant meal, with pleasant conversation. Charlie was growing on me. \n\nShow time approached, so we moved into the theatre, where I was surprised...again...by the seats, and the fact we could get bar service in them. The seats were paired, like a loveseat, with lap tables at each end, and a removable armrest between the two seats. It was very luxurious, like a first class flight that never left the ground. Everyone ordered drinks, and popcorn, and chocolate. As the waitress left to get our order, Charlie lifted the armrest out of the way, and moved closer. \n\n\"Is it okay if I snuggle?\" she asked quietly. I saw that Karen had already taken a similar position in the seat she shared with Tim. If she was going to, I was going to. \n\n\"Of course,\" I answered, wrapping my arm around her shoulders. Charlie smiled, and pressed tight against me, as the waitress returned. I swung the table over my lap, and Charlie helped unload the tray. She playfully fed me popcorn, while Karen watched out of the corner of her eye. \n\nOnce the movie started, I temporarily forgot about my sexy neighbour sitting a few feet away, with her body against another man. Charlie fed me, and we watched the show on the screen. The movie was intriguing, but Charlie was having a distracting effect.  \n\nBetween feeding me popcorn, she rested her hand on my leg. That parking spot started down by my knee, but began to creep upward as the show continued, until it was right next to my crotch, fractions of an inch away. I could only guess where it was going to stop next. Scratch that. I knew where it was going. When she lifted it to retrieve another few kernels for each of us, I held my breath, awaiting her next move. \n\nShe didn't disappoint. Sure enough, she placed her hand back on my thigh, fingers extended enough to reach my cock. She caressed teasingly, and inched further, finally palming my bulge. She tilted her head back and made eye contact, then mouthed a silent 'Ooooo'. \n\n\"Charlie...\" I whispered, \"... Really?\" \n\nShe tilted again, and smiled at me, reaching around to rearrange my arm, pulling my hand to the side of her huge breast. Still looking into my eyes, she returned to her soft touch on my bulge, which had begun to swell a bit more. Another smile, and she looked back to the screen. \n\nI glanced over, catching Karen as her attention was focused on Charlie's naughty hand. She looked away, but kept peeking over. \n\nI decided that if Charlie was going to offer herself for a grope in the dark, I wouldn't turn her down, and fondled her right breast gently. She responded by giving me a squeeze back, and I gave her another, firmer grab. \n\nThere wasn't much movie left, which is good, because she had me fully erect within minutes. My hand was alternating between grabbing her ass, and groping as much firm breast as possible. My focus was divided, and I don't remember much about how the movie ended. The credits began to roll, and the lights came up. \n\nI looked over at Karen, who seemed a little flushed. She was still gazing at Charlie's hand, which was under cover of the table, on my crotch. The crowd thinned out, until we were able to fall in with them. Tim and Karen went down the right aisle, while Charlie led down the left side. She stepped aside before the last stair and let me past, then grabbed my hand, pulling me back to her for a kiss. It was little more than a playful peck, but I could feel Karen's eyes burning into the back of my head as they passed. \n\nI used Charlie as a screen on the way out, covering my obvious erection. She used it to her advantage, stopping suddenly several times, so that my hard bulge pressed into her. She giggled as we reached the car, leading me in and dragging me behind her. \n\nShe had a naughty, yet coy expression on her face, and licked her lips in anticipation of what might come next. Tim and Karen settled into the front seat, and Tim turned to look at his sister. \n\n\"Well, that was fun,\" he said. \"What's next?\" \n\nCharlie never even turned her gaze away from me. No one else was offering suggestions, so she spoke up. \n\n\"I don't know about everyone else,\" she giggled, \"I'd like a nice quiet spot to park in. I know it's very 'teenage', but I feel like making out.\" \n\nKaren laughed, and shrugged her acceptance, so Tim turned the key. \n\nCharlie was on me before we made it out of the parking lot, kissing me with escalating passion and excitement. I resumed my exploration of her body with both hands, and she moaned encouragement softly. Tim found us a spot relatively quickly, but my attention was on Charlie, so I hardly noticed. \n\nShe was a hot little kisser, with lips that expressed her arousal in their soft touch. Between moments of lusty embrace, she explained herself. \n\n\"Dan,\" she whispered, \"as you know, I'm not living nearby anymore. I don't expect this evening will lead to anything long term and concrete. I'm only here to have some fun, so I hope you don't mind my being a bit forward.\" I shook my head. \"Good,\" she smiled, \"So don't worry about offending me. I want you to touch me, anywhere and everywhere. And I want to fuck you.\" \n\nI'm not sure I understand...could you please repeat that, and be a little more specific? Your statement was a little vague. NOT! \n\nHer next move left little open to interpretation, as well. A mischievous grin painted her features, as her hand resumed the caressing actions she had begun in the theatre, teasing my cock through my pants. \n\n\"This feels promising,\" she giggled. \"And big. I only hope my little pussy can handle it.\" \n\nI had a feeling her 'little pussy', as she had put it, was well experienced with a variety of erections, of all shapes and sizes. She may have had pixie-ish features, but she was obviously no angel. \n\nA glance toward the front seat confirmed that Karen and Tim were similarly involved. She was sitting astride Tim's lap, and they were exchanging sloppy kisses, complete with softly passionate moans and groans. \n\nThat pretty much settled things for me. As I said before, if she was going to, I was going to. My feelings were a confused mix of jealousy and excitement, but not confused enough to turn Charlie's charms down. \n\nSpeaking of Charlie, the little minx was now on my lap as well, and picked up where she left off before she felt the need to talk. My tongue was lured out to play, and she had captured it, leading to us singing harmony with the front seat. The car was filled with the sound of wet kisses and tangling tongues. It was really quite arousing, as if Charlie's nubile, buxom body wasn't doing an adequate job of that already. She reached behind her neck and unzipped her dress, then wriggled her shoulders clear of the garment. She held it against her chest, covering her breasts, and asked one of the dumbest questions I had ever heard. \n\n\"Do you want to see my tits?\" she whispered. See...I told you it was a stupid question. Did I really need to answer it? \n\n\"Yes please,\" I replied politely, with a smile. \n\nMaybe this is what Karen meant when she said Charlie was 'right up my alley'. She knew of my fondness for the full curves of her own beautiful globes. She knew I was a card carrying, confirmed, unrepentant breast man. I suppose I was the one being stupid now. \n\nCharlie let the fabric drop around her waist, and I let my chin drop to the floor. Wow! What a rack! I wouldn't say her boobs were bigger than Karen's DD's, or better than my neighbours delicious orbs...but she was twelve years younger, and hers were maybe a bit more perky, with a devastating cleft of cleavage between the rounded shapes. A lacy black bra cradled them, offering them up for me to inspect, barely covering the stubby nipples. \n\nI was suddenly very glad she had already made it abundantly clear that she wanted to fuck, as I succumbed to my baser instincts. My hands moved quickly from her hips, up to her chest, to hold those big boobs, one in each eager palm. Full and heavy, I hefted them, then dragged the straps of her bra off her shoulders, baring them for my lips to conduct their own investigation. \n\n\"Mmmmm, yes,\" she gasped. \"I love having my nipples sucked.\" She reached behind again, and unhooked the bra, dropping it on the floor of the car. She used her hands now, holding her breasts up and out, moving first one then the other to my attentive lips. That attention was coaxing her cherry nips to full height, while she moaned softly. I kept switching from one breast to the other, for a few minutes, and she kept grinding her pussy over the hard bulge in my pants. \n\n\"My turn,\" she chirped, pulling her dress off over her head as she moved off my lap. Before I could wonder what it was 'her turn' to do, she had taken a spot kneeling on the broad floor of the car, between my legs, and was unbuckling my belt. I helped, raising my hips to let her tug my pants down and off. My underwear was doing a poor job containing my rampant cock, but she just yanked them down, letting my erection spring free. Without further comment, she dropped her wet mouth over the head, and slid her lips further down. \n\n\"Oh shit, Charlie...suck my cock,\" I breathed. I had been watching her, but now let my head rest back on the seat. When my eyes opened again, I was looking right at Karen, who was smiling at me. \n\nOh yeah...I almost forgot she was up front. Tim was gnawing dutifully on her hard nipples, and she was cooing her approval, but she was watching Charlie's head bob rhythmically in my lap. Her breasts were quite bare, as well, and Tim's face was buried in her cleavage. \n\nWith all the heavy breathing going on, the car was getting a little warm, and moist. I pulled my shirt off, joining Charlie in the 'nearly naked' category. I was just starting to wonder if this was going to be a blowjob to completion, when her hands began to fumble at her purse, coming out with a string of condoms. \n\n\"Always prepared,\" she giggled, saluting with three fingers, in a way I'm sure the girl scouts never intended. She tore one off the bandolier of prophylactics, and ripped it open with her teeth, rolling it lovingly over my shaft. \"There. Ready for action. I know I am,\" she smiled, moving up to straddle me again. I scooted lower on the bench seat, aiming my probe at the receptacle she had bared by pulling the crotch of her panties aside. I watched her puffy lips spread, swallowing the head of my cock as I felt the warmth of her cunt envelop my shaft. \n\n\"Got one of those for me, Sis?\" Tim begged from the front seat. Karen had disappeared from view, so I assumed she was preparing him for battle, as well. \n\nCharlie moaned as my cock reached bottom, and threw the rubbers over her shoulder blindly. \n\n\"Here!\" she hissed at her brother. She was making faces at me that I could only interpret as ecstatic. \"Now don't bother me! I'm busy!\" \n\nBusy. Yes, that's one way to describe it. She was busy. Busy bouncing her snug pussy up and down on my cock. Busy jiggling her big tits for my viewing pleasure. Busy driving me nuts, and busy fucking me like a wild woman. \n\nThe ornament hanging from the rear view mirror had begun to swing with Charlie's rambunctious motions, so I knew the car was moving. Oh well, at least the springs weren't squeaking. \n\n\"Oh fuck, that's a nice cock,\" Charlie groaned. \"I do hope you can go more than once, because I'm really horny tonight.\"\n\n\"I'll do my best,\" I laughed, smacking her ass loudly. \n\n\"Ooooo!\" she gasped. \"Do it again! I like it!\" \n\n\"Fuck me with that wet cunt,\" I growled, swatting her rump again. She moaned, and increased her pace. \"That's it...harder! Pound that pussy on me. Cum for me!\" Another swat echoed through the car. \n\n\"Uhhhhhnnnmmmmyessssss!\" she groaned deeply, and began to shudder in my embrace. Her pussy clamped down tight, as she shook and gasped for air. She froze in place, grinding her clit against the base of my cock. \n\nThe car was still rocking gently, and I looked forward, where Karen was riding Tim in a similar fashion. Her eyes were closed, and her head tilted back. I watched her breasts swing and sway gently. That's about when Charlie started moving again. \n\nNOW the springs in the car were squeaking. Apparently two women skewering themselves in the same car was too much motion, and a rhythmic metallic squeal, just loud enough to be heard, penetrated the heavy breathing. \n\nI couldn't help myself. I started to snicker. \n\nWell, it was funny...and I had this image of a crowd gathering around us, watching the car bounce happily, and knowing what was going on behind the steamed up windows. And, as you know...laughter is infectious. \n\nCharlie joined in, giggling quietly at first, then louder as she realized she could make the squeaks more pronounced by bouncing harder. Tim was next, chortling softly from his position under Karen. \n\n\"Please, don't make me laugh,\" Karen begged. \"I'm trying to cum!\" It was the exact wrong thing to say, as we all erupted in laughter. Karen's face was contorted in a mask of combined concentration and pleasure. She kept her focus, and her pace of strokes, for just long enough to reach her peak. I watched the expression on her face change to relief, then her brow furrowed as her orgasm hit her. \n\n\"Oh shit... I'm cumming!\" she gasped. I was expecting the full operatic version I had witnessed so often, but we were not in the privacy of her bedroom, so she did her best to mute the audible portion of the program, snorting and moaning while grinding herself through the pleasure. It was fun to watch, but much more fun to cause. Still, I wasn't immune to her show. \n\nCharlie had kept going full bore, throughout, and she quickly joined Karen, adding her own moans and groans of bliss to the no longer quiet car. Apparently, orgasms are as infectious as laughter, because I was only a moment behind, squirting inside the condom that separated me from truly enjoying her pussy. I groaned. \n\n\"That's it, honey...cum for me,\" Charlie cooed. \"I would have preferred it in my mouth, but you can do that with the next load.\" \n\n\"Oh fuck!\" Tim grunted, and I knew he was exploding inside Karen's delicious pussy. \n\nCharlie had managed to take the lead with that quick second score, but everyone was on the board, as we took our halftime break. The car grew quiet again, save for our collective heavy breathing. \n\n\"Where's that waitress when you need her?\" Charlie quipped. \"I could use a drink and some chocolate about now.\" \n\nWe all laughed. Four naked, sweaty adults in a vintage Lincoln, acting like horny teenagers. Perhaps the car was also a time machine. \n\nSo why was I still jealous? \n\n***\n\nTim and Charlie dropped us off with goodnight kisses, in Karen's driveway. Round two in the car had been done doggy style, before I gave Charlie the snack she asked for, spurting down her throat. All I had seen of Karen during their second coupling was her legs spread wide...one draped over the seat back, and the other braced against the windshield. Tim's butt rose and fell rhythmically between them. \n\nWe waved goodbye as they drove away, then turned back to each other. \n\n\"Coming in for a few minutes?\" she asked me. \"I'm too wound up to sleep.\" \n\n\"Sure,\" I replied, wondering when she decided I wasn't staying for the night. \n\nWe walked in together, and ended up in the kitchen, drinking coffee and chatting about the evening. \n\n\"So...you seemed to have a good time with Charlie,\" she smiled, peeking over the rim of her cup. \n\n\"Yes, well, I suppose so. She was pretty fun,\" I offered. \"A bit of a...\" \n\n\"Slut?\" Karen suggested. I couldn't see if she was smiling or not behind her coffee cup. \n\n\"I was thinking 'free spirit', but 'slut' may apply equally well,\" I laughed. \"She moves pretty quick.\" Karen snorted. \n\n\"Yeah, I think groping your cock in public an hour after meeting you qualifies as 'quick'. I won't even go into the rest of it,\" she smiled. \n\nOh no, please... Go into the rest of it, I thought. How did it feel watching her fuck me right in front of you? Did you feel the way I felt watching Tim fuck you, a few feet away? \n\n\"Yes, I thought you saw that,\" I replied, deciding to leave it alone for now. \"She put my hand on her breast, too. I couldn't really see what you two were up to, but I assume you weren't praying.\"\n\nKaren blushed, and the corners of her mouth twitched. \n\n\"No...no praying, unless 'oh my god' counts,\" she giggled. \"He was pretty quick, too. I should have stopped him.\"\n\n\"Why didn't you?\" I asked. \"What did he do?\"\n\n\"Oh, he grabbed my boobs, and felt me up good. Managed to get his hand under my skirt,\" she said, in a 'manner of fact' fashion. \"As for why I didn't stop him...I guess watching Charlie and you was getting me hot.\"\n\nAh, that accounts for the flushed look when the lights came up, I thought. \n\n\"So, when she jumped on me in the back seat...\" I began. \n\n\"I was this close to coming over the seat to join you!\" she gasped, holding her fingers up an inch apart. \"Then Tim parked us, and, well...\" \n\n\"Yes, I remember what happened next,\" I laughed. You fucked him... or he fucked you... right in front of me. Not a pleasant memory, despite the fact that Charlie was bouncing quite enjoyably on my cock during the whole thing. \n\n\"You know,\" she giggled, \"That's the first time I've ever seen two people have sex in person. Lots of times on tape, of course...I've got my porn stash, just like anybody else. Live action is much more arousing. The sounds, the smells ; it really got to me.\"\n\n\"So I gather,\" I answered. \"I got to watch you, too. The top half, anyway.\"\n\n\"Was it your first live show, too?\" she asked. \n\n\"Unfortunately not,\" I winced. \n\nA few seconds passed before she remembered, then a look of anguish crossed her face. \n\n\"Oh, right. I'm sorry. I forgot,\" she said softly.\n\n\"Not your fault,\" I breathed. \"Besides, watching you was pretty hot.\" I just like watching it better from under you. \n\nThere was a lull in conversation for a moment. There were so many things I could say. So many I should say. Many I desperately wanted to say. If only I knew what she was feeling. She seemed to be having the same thoughtful pause, but then spoke up. \n\n\"Okay, I think I'm ready to sleep now,\" she said softly. \"I hope you understand if I need some space tonight.\"\n\n\"Of course,\" I replied. Not really, I thought. She walked me to the door. \n\n\"I had fun tonight,\" she smiled. \"Hopefully we can do it again.\" She kissed me on the cheek, and I stepped out into the darkness. \n\nShit. \n\n***\n\nI laid awake for over an hour, staring at my ceiling. \n\n\"Hopefully we can do it again?\" I whispered. I don't know if I can survive doing that again, and I'm not talking about Charlie fucking my brains out. Every time Karen goes out with another man, she gets farther away. I want us to be together, but we're moving the wrong direction. 'Friends with benefits' is a fallacy. It can't work. There are only two logical outcomes. I wanted the one where we lived happily ever after, as a couple, but it appeared we were heading toward the other end of the spectrum. The end where I became a friend without benefits, if I remained a friend at all. \n\nI couldn't let that happen. Ready or not, I needed to tell her the truth. I needed to tell her how I felt. ",
        "I needed to tell her...I loved her. \n\nI picked up my phone. \n\nKaren? Are you awake? I typed. There was no response. I was just about to give up when... \n\nYes. Can't sleep. \n\nMe neither I replied. Feeling guilty. \n\nGuilty? Why? Because you had sex with Charlie? she responded immediately. \n\nA bit. That's not the real reason though. I sent. \n\nThen why guilty? she asked. \n\nLied to you, I answered. \n\nLied? About what? \n\nAbout tonight. Didn't really have fun, I admitted. \n\nIt looked like you were having fun ;-) she sent back. \n\nOh boy. Point of no return time. My fingers shook as I typed my answer. \n\nSeeing you with another man is torture. I don't like it. I didn't like you going out last week, and tonight was worse. I know we're supposed to just be friends, but I don't know if I can do that anymore. I don't think I can only be your friend, even with benefits. I want more. \n\nThere was a long pause. The cat was freed from the bag, and could never be bagged again. When it did come, her response was succinct. \n\nGet your ass over here. We need to talk. Now. Back door. \n\nI was either being called to the principal's office, or my dreams were about to come true. Either way, things were changing. \n\nI don't even remember how I got to her door. No slippers, just bare feet in the dewy grass. She was waiting. \n\nOh boy, was she waiting. \n\nShe hit me like a hurricane of passion, crushing her body into mine. Her lips were wet and soft, but demanding, as she kissed me fiercely. The embrace we shared was urgent, and so very right. No words were spoken, just moans of emotional release, until she pulled away. \n\n\"Dan, why didn't you tell me?\" she panted. \"I thought you weren't ready, or weren't feeling anything for me. If I had known, I never would have...\" \n\nI cut her off with another kiss, pushing her back against the wall of the hallway. My hands grabbed at her, pulling at the thin fabric that covered her body. I suddenly realized it was the same pink outfit from the night of her plumbing emergency. Images of her... soaking wet, clothing glued to her spectacular curves... filled my head. I picked her up and dragged her into the kitchen, stopping in front of the sink. I turned her away from me, and bent her over the counter. \n\nI'm not really sure what came over me. I'm not usually the type to be rough. I prefer to be gentle, but the flood of emotions put me over the edge. \n\nHer pyjama bottoms were shorts, with a slit partway up each side. I could have just pulled them down around her ankles, but that wasn't fast enough. My cock was like steel, and I needed her pussy right now. \n\nI grabbed the edge of her thin pink shorts at the side slit, and wrenched upwards and across. The fabric rended with a surprisingly loud shriek in the darkness as I tore them off, letting the destroyed remains fall around her left foot. I freed my cock, and stabbed it inside her warm, wet depths. \n\n\"Oh goddddddddddddd! Yes, Dan! Take me!\" she groaned, as I began to shaft her with long, deep strokes. \n\nMy hands reached around, grabbing her breasts roughly. She grunted and pressed back, meeting every thrust with her firm rump. She was hanging on to the faucet for dear life. \n\nI needed her breasts bare, and the t-shirt was in the way, so I used the same method remove it as I had her shorts, ripping it open down the back. She moaned her agreement as I tore it away, and mauled her boobs as they dangled and swung with my strokes.  \n\n\"Fuck me, Dan! Just fuck me! I love it! Show me how you feel!\" she screamed. \"I'm yours!\" \n\nMoonlight was streaming in through the kitchen window, illuminating the smooth skin of her back, and rippling flesh of her butt as I fucked her hard. Her red hair was flying wildly. This was our spot, the scene of our first time, if you don't count the oral escapades that preceded it by an hour. I leaned over her back and whispered in her ear. \n\n\"Remember how this started?\" I hissed, still pounding her feverishly. \n\n\"Mmmmm, yes,\" she moaned. \"I'll never think of plumbing the same way again.\"\n\nWithin a minute or two, she was cumming, screeching as a river of juice flowed down her thighs. The sudden warmth and increase in moisture did the same to me, and I grunted through several spurts into her juicy cunt. Exhausted, I rested my head on her back, breathing hard. She was doing the same. \n\n\"I love you, Karen,\" I whispered. \"I should have told you long ago...\"\n\nShe stood up, dislodging my softening dick from her pussy and unleashing a flood that splattered on the floor. Turning, she pressed her finger to my lips. \n\n\"Shhhhh...no regrets, darling,\" she smiled. \"You said it. That's all that matters. I feel the same way. I love you, too.\"\n\nShe slipped away, leaving her shredded clothes and a puddle on the kitchen floor, before pausing at the doorway. \n\n\"Come to bed. We have plenty to celebrate, and all night to show each other how we feel,\" she giggled. I watched her supple buttocks glide away in the darkness. \"I'll be waiting.\" \n\nI guess the tunnel won't be necessary, after all. It appeared we were ready to go public. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSo...Dan and Karen will soon be the subject of neighbourhood gossip, but that will have to wait for the next chapter. \n\nPlease cast your votes, and send me some feedback, ideas, and comments. I love hearing from readers."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "redhead",
        "big tits",
        "widow",
        "older woman",
        "younger man",
        "sex in public",
        "group sex"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/just-being-neighbourly-pt-02"
}