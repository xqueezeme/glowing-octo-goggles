{
    "title": "The Idiot, the Farmer and Me Ch. 01",
    "pages": [
        "Another long story - this time in several parts - based on a story I heard from an old friend but I've changed the circumstances, the locations and even the language. To give the reader the feel of that kind of accent, the speech of our villain should be read phonetically, that or find some 'EastEnders' on iPlayer or some 'Sweeney' re-runs from the seventies.\n\nThe Farmer in the title doesn't appear in this bit...\n\n-------------------------------------------\n\nA daughter's wedding is supposed to be a joyous thing. When my Darling Isabel married the most wonderful boy little did I know that despite my ex-husband it would lead to a new relationship and a new life for me after a not terribly great start.\n\nThere was an old family saying from my Mum's side that 'Higgins girls never marry well.' My Mum was a Higgins, and there was a whole maternal family history of arseholes the women had married. \n\nI had divorced my particular arsehole of an ex-husband fifteen years previously when I found out that he'd slept around quite extensively, even with two of his Mum's relatives -- he'd slept with quite a few women but it was the cousin and second cousin that really did it for me. Our family and friends were first shocked and stunned, then it became a bit of a joke with me as the naive if not actually slightly stupid, big-titted bird in the middle not knowing what the rest of the neighbourhood did -- the sadly comic but still sexy dopey bitch married to the man of the humorous hour. The day after the discovery my Mum shook her head,\n\n\"Bloody hell Sammy, what is it about all of us -- can't JUST ONE OF US get a good one?\"\n\nAnd it was the whole family; my dad was a bastard to my Mum, Mum's sister Aunty Vi had married a serial wife-beating alcoholic who (fortunately) collapsed while dead drunk and drowned in his own vomit, while I'd married the Idiot Ex. \n\nEven my sister Denise had married another pearl who had just gotten up for work one morning and never came back, she is in the process of having her marriage annulled because she hasn't seen hide nor hair of the man in over ten years. When he walked out on her and their four-year-old son Rory they had just spent the last of her redundancy pay from her lost factory job on the nearly new car that he drove off in.\n\nHer Ex Dewi always joked about his relationship with Denise in an 'almost' unfunny way. He was a quite attractive boy from the Welsh valleys that had moved to the city for the bright lights and prospects and made it most plain that he had been attracted by Denise's amazing Higgins figure and wild dark almost black hair, but at the same time also suggesting that he might have if not actually 'settled' for marrying Denise, that he seriously did believe that he had married below himself and could have done better. He was two years younger than Den and for that reason considered a bit of a looker. He had done a Job Centre training course and had a diploma and thought that made him one step away from Einstein rather than a plumber. My brother Mike had taken him to task over one of those comments about the gorgeous Den which had him swiftly denying it and chuckling that it was just his and Den's 'little joke'. Our huge and tattooed big brother still looked after both of us.\n\nHe left no note explaining but had already made very veiled suggestion that he wasn't very happy with their financial situation, he was a plumber so quite well paid. Denise had asked why a new car was needed if they were so hard up but he just shook his head and laughed it off in that unfunny way of his. He left a week later taking most of his clothes and a fortnight's wages. He had always insisted that they had separate bank accounts so fortunately he wasn't able to take all her money too -- just her car it seemed.\n\nAt first she reported Dewi to the police as 'missing', then at the advice of the police she cancelled that report instead reporting her CAR as 'missing', but it was in his name on the log book so that was complicated.\n\nThe house was mortgaged but after he disappeared taking his weekly 'cash in hand' wages from his building site work with him she went into a part ownership deal with the local housing association so that pressure was off. She managed to get a job at the local playgroup she took her son Rory to, and within a few months was making changes she thought obvious and sensible having been a team leader in her last job in retail. When the owner told her ladies that she was selling the business, Den stepped in and with a ridiculously small loan bought it herself. Within months of her purchase and working with the council and the education department she had doubled the number of children she could take in and pretty soon was running her own very successful business having paid off the loan.\n\nAt first it barely made a profit after repayments on the loan, running costs, her wages and those of a few staff members, but with good judgement, some luck and any amount of advertisement in the kind of places she (a young mum at the time) went to it took off in leaps and bounds and now includes four playgroups across the area and makes a tidy but not excessive profit. She never shouted her success from the rooftops because the last thing she wanted was that no-good ex of hers to come back and want what he would consider his share or make a claim on young Rory.\n\nMum, the ultimate and original Higgins girl, had the cream of the whole bunch though.\n\nMy Dad was a hired thug and an out and out villain, and I don't think I ever really knew him. He was often 'inside' and was on remand or in prison for 10 of the 17 years of my life. Aside from that minor inconvenience he seemed to live an opposite, almost nocturnal lifestyle to the rest of his family. \n\nWhatever he did, bouncer, debt collector, beater-upper, thief, thieves driver, disposer of things, he did it working nights then spending the day in bed. All day, every weekday -- no exception, no holidays, no birthday parties, only Christmas Day and Boxing Day did he join the daylight people, but then only grudgingly and heading for the pub to see his mates for much of those celebrations. \n\nHe liked the pub and spent most evenings and Saturdays there and at the football, normally Spurs, for home games then back to the pub again. Sunday in bed except for when he came down for dinner in his striped pyjamas, then back to it Sunday night into Monday Morning. \n\nMum hated it but there was nothing she could do; she knew that if she complained she would get a smack for her trouble. If she had left him he would track her down and take his revenge, and he took great delight in telling her just what his best mate had done to his Missus when he eventually caught up with her four months after her departure. No space in the local refuge, no social worker support, just the busted door of her mother's house and a broken arm and cheek bone for her, and a cracked skull for her mother that had tried to intervene. 'Both bitches were asking for it', Dad had said with a chuckle and a smile.\n\nWhen Dad went to prison Mum, almost ten years his junior, took up her extra jobs and we had free school dinners and got housing benefit to cover the rent. He'd done time for burglary, aggravated burglary, taking cars without consent (TWOC'ing), assault, robbery and armed robbery and the way he spoke and the way that many of his mates spoke there was quite a few he wasn't caught for. \n\nAs I grew up we didn't have much in the way of luxuries but I never remember going without to any massive extent. The thing that still pisses me off to this very day was the way Dad always justified his villainy and spouted the old East End 'Gotta put food on the table for my kids' mantra while most of it was actually provided by my wonderful Mum, my Higgins grandparents or by the state, despite Dad's sanctimonious claims.\n\nI knew all the local policemen of course because quite often I'd get lifted out of bed by them as our house was searched at five in the morning after an armed robbery anywhere in London or the Home Counties that had a modus operandi even remotely close to his. Our front door was smashed in so many times the repairman from the council asked my Mum if she wanted him to put up a curtain instead. I found out that come the end the council and the police came to 'an understanding' that when we had the last new door fitted, the fitter had two extra keys cut and kept them in the cupboard. It was then just a case of the 'Flying Squad' picking one up and letting themselves in. My Dad hated the police with a passion, especially 'The Sweeney' -- big lads and lasses who were just as nasty, just as aggressive and much better armed than he was. \n\nAs kids we could never watch the TV programmes or films our school mates talked about in the playground because the police were the 'enemy'. I didn't see a whole episode of 'The Sweeney' or later 'The Bill' until after my Dad had died. Dad looked upon the police simply as a bunch of overzealous bigots that stopped him from carrying out his very simple business - The business of taking other people's property with a view to not giving it back and if it wasn't cash, selling it for as much as he possibly could. I was to discover over the years that the amount of return that Dad and his cohorts made was pitiful and just a tiny single figures percentage compared to the actual value of the pieces, and the damage and heartbreak that their actions had caused.\n\nAs the eighties moved into the nineties he started to age of course and added to that the kind of crime that Dad specialised in got tougher. The old, heavy smoking, heavy drinking, overweight Bobbies of those days were being replaced by young, fit, well-trained, paramilitary style police officers carrying machine guns and sniper rifles and having things like helicopters and faster cars than their prey with highly professional drivers in them. Then with the birth of the microchip the targets had better security equipment cheaply and effectively installed and this meant that he spent more and more time inside, most of the time for failed jobs.\n\nI think he finally got the message when he and his mates tried to turn over a building society in Surbiton. They'd watched it for days sat in an adjacent caf\u00e9 dressed in tar stained yellow safety jackets after having a tip-off that the place had been bought out by a rival bank and was being completely refurbished. Apparently once they had finished the safe would be stocked up for re-opening with lots of new staff that wouldn't know the area or the procedures.\n\nThe gang waited until the end of the first day of trading and put on their latex masks and charged into the now empty banking hall screaming their heads off and brandishing sawn-off shotguns and some very old revolvers. \n\nThe ladies behind the counter, all well trained and seasoned banking veterans of course, leaned back and a button was pressed, and steel barriers shot up in a fraction of a second. \n\nIt turned out the most complicated bit of the refurb was the installation of the flying screens, but their hours of observations seemed to have missed that bit. The howling siren and flashing lights had their very young, very green and very scared getaway driver away in his stolen wheels leaving the rest stood in the empty shop front scratching their heads and not ready for the long walk home.\n\nThe evening their sentences were announced the CCTV clip was on a 'London Tonight' TV News and it smacked of one of those 'and finally...' stories as the Newsreader had a bit of a grin when he talked about the four 'bungling bank robbers' specicifally the one couldn't run away and was caught within thirty yards of the premises out of breath and gasping for air.\n\nDad and one of his mates were arrested by a security guard walking to work who had only to snatch the sawn off shotgun from him and the old revolver from the other as they stared at the chain-link fence they had taken a run-up to and had simply crashed into; all recorded for posterity by the many CCTV systems in the area and shown to the delight of the law abiding masses. The Newsreader had a wry grin on his face and said that the two hapless criminals should take the opportunity of working out while they spent the next six years in prison.\n\nMy Dad was released after fifteen months for medical reasons and it wasn't his fitness that had let him down on that day in Surbiton. \n\nDad had emphysema, a disease he'd acquired as a result of the 70 or 80 cigarettes he'd chain-smoked each day since he was 12. Add to that the fried breakfast he'd eaten every morning, and the fast food he often dined out on and I was surprised he lasted as long as he did. He was only in his late forties.\n\nI didn't grieve for my Dad. I hope that doesn't make me sound like a terrible person, but I really didn't know him. He would be the scary sleeping giant in the bedroom I had to tiptoe past getting up for school. If we made too much noise he'd snarl and throw something at the offender. He once hit my big brother Mike behind the ear with a steel toe capped boot and put him in hospital just because he'd hit the squeaky floorboard my Dad had worked loose so no one could sneak up on him. \n\nDad and my Brother Mike didn't get on. I think Dad felt that Mike should have taken up villainy like he did but Mike had long memories of standing out in the street or sitting in the police car while the entire neighbourhood watched the police tear our house apart, or Dad being dragged out in handcuffs and heaved kicking and shouting into the back of a police van, the subsequent court hearings and the stares from the other kids because he was having free school meals again as his Dad was back in prison. \n\nMike never shared his Father's opinion of 'the trade' figuring that there was nothing cheeky-charming, roguish, noble or Robin Hood-like in what my Dad and his hoodlum mates did. They were just thieves -- big, threatening, gun-toting, mask wearing bullies that thought it was better to take what some other poor bastard had worked hard for than work hard themselves, kidding themselves that they were taking from the big boys, the insurance companies, the 'City' or the 'state', from 'the establishment', from the rich and the powerful. Mike with his better education knew that the rich and the powerful rarely get poorer, and raised insurance premiums and excess charges, increasing bank charges, and interest rates effect everyone, the poorest more than any.\n\nHating 'the trade' Mike showed more interest in his schoolwork and getting a real job, a 'career' - something honest like everyone else in the world seemed to have, except for our family, friends and acquaintances. During one of our rare family meetings when we were going to bed and he was getting up, Dad snarled at him about doing his science revision and the books for his exams strewn across his bed, and picked one up staring at Newton's laws as if they were written in a different language -- Dad could only just write his name - then throwing the thing out of the open window paused then said coldly, \n\n\"D'ya think yer better than me boy?\"\n\nMike said nothing. He knew from past experience that there was nothing he could say that wouldn't result in him getting a dig from the old man, unless it was 'lend me a sawn-off, I'm away down the off-licence'. Dad swung a punch and it threw Mike across the room, Mum screamed.\n\nMike stood up, his face swelling and the imprint of Dad's Gold Sovereign ring in his cheek. Mike looked at Dad and showed no emotion, none whatsoever; it was the scariest thing I'd ever seen, and Denise was trembling. Mike just smiled, kissed Mum and turned to Dad.\n\n\"Goodnight,\" he said, \"Sleep well... you too Dad.\"\n\nDad squared up to his son, who was now taller than him.\n\n\"You don't frighten me BOY!\"\n\n\"No Dad,\" said Mike, \"I don't frighten you... yet...\"\n\nDad hissed between his teeth, \n\n\"Scared of a stuck-up little fuck like you?\"\n\nDad pulled his hand back to slap his sons face, but his son was ready this time and caught it and held it fast. Dad was short and squat, while Mike had inherited Dad's power and Mum's height and had used his PE lessons and the school gym to very good effect, he was training himself up because he wanted to join the army. \n\nThere was a silent struggle where Dad realised that his little boy wasn't so little anymore, and sheer force and strength of his personality wasn't going to make Mike back down as it would have done in the years gone by. We could all see that Dad was starting to lose the battle of wills, at least the physical side of things and he was starting to fight for breath.\n\n\"You sleep well Dad; remember though,\" 16 years of repressed anger and resentment was starting to surface, \"what goes around... comes around.\"\n\nDad pulled his arm free and they stared at each other. Both had to sleep at different times of the day, they both knew that. Mike had just told his much older father that if he tried anything on him, he'd get it back.\n\nThere was a very uncomfortable truce in the house with locked bedroom doors and much silent eye contact, right up until Mike left home with his clutch of qualifications for his 'junior leaders' selection board. He had intended to join the Paras, this was late eighties and the Falklands war was still fresh enough to be remembered, and they were still the nation's favourite. I think he also wanted to be a 'tough guy' but an honest tough guy; an attempt not to earn the final respect of Dad, but that red beret that would be a publicly recognisable and acceptable demonstration that he was among the hardest and toughest in a way that would not wreck his life, his family's life or his health in the same way Dad's had.\n\nBut when he went for his selection to be a Junior Leader he was interviewed by an officer from the Royal Engineers and told that he could of course join the infantry and learn to fight, or with all of his hard-earned qualifications he could get a trade and learn to fight. So, he went to the Army Apprentice College at Arborfield and did both. \n\nOnce out of his training there he joined the Engineers and learned about military construction and also destruction; about building things up or blowing them down, roads to build and rivers to cross, about necessary infrastructure, about electrics and drainage, and at the same time to drive all manner of trucks and plant and later into his career to manage building sites and bigger construction projects. He is now a very respectable and well-paid engineering contractor across the South East of England.\n\nDad never got to see his many successes -- it didn't matter though because it would never have been good enough. He wouldn't go to Mike's passing out parade because he didn't think it was the kind of work for a son of his and told him so, calling him a coward for running away from his family and his roots. Even Mum snapped at that. Within a year Operation 'Desert Shield' was in place after Saddam Hussein's invasion of Kuwait and everyone knew that the allies would retake it and Mike's unit in Germany was packing up to make the trip.\n\nSo Mike went off to Saudi Arabia and took part in 'Desert Storm', did his duty, stayed safe and got 'mentioned in dispatches' for his 'bravery under fire, hard work, always being first to volunteer and his constant good humour'. \n\nHe rang to invite Mum, Denise and I to the Victory Parade that was a tube ride from our house, Dad picked up the phone. It was mid-evening and he spoke to my slightly tipsy father, who had been working his way through the last of one of his expensive bottles of Scotch.\n\n\"Raise a glass to honour your son the war veteran Dad,\" said Mike.\n\n\"You bomb the fuck out of a bunch of ignorant fucking rag-heads and think you're some kind of 'ero? It's a waste of good Scotch,\" chuckled Dad down the line to him, \"fuck you!\" Mike could finally have his revenge.",
        "\"You drinking the whiskey from the lock-up?\"\n\n\"Yeah, best Scotch in the world,\" said Dad smacking his lips then burping loudly and contemptuously.\n\n\"No it isn't you fat stupid bastard,\" Mike giggled, \"look at the colour, it's half scotch, half my piss that you and your stupid mates have been drinking for the last two and a half years and crooning about. Did you not wonder why you didn't get so drunk on it?\"\n\nMike had started his revenge years before and had been waiting for the perfect moment to spring his surprise; Dad liked Scotch whiskey and had several crates of a very old one in his lock up. While Dad slept during the day, Mike had spent his last school holidays and the relaxed days after his exams steaming off labels, pulling corks from the bottles that were as old as Dad and he emptied nearly half of each bottle down the drain and pouring his collected and stored urine, sometimes straight from the tap, into the bottles then resealing them and took great delight in watching Dad and his scummy friends sipping from it and waxing about the quality you could taste in good whiskey.\n\n\"I'll fuckin' shoot you!\" Dad roared, so loudly that a neighbour reported him to the local police hotline, \"fuckin' war 'ero or not, I'll...\"\n\n\"No you won't, you fat stupid twat,\" shouted my lovely brother Mike with a laugh in his voice as Dad fought for breath, \"You're a BLOODY JOKE! You can't walk more than 10 yards without a rest; you're out of breath just arguing with me! And don't forget that if you're so much as seen with more than nail scissors The Old Bill will have you back inside for the rest of your sentence, if you don't fuckin' die first.\"\n\n\"The fuckin' police can...\" argued Dad, out of breath just talking.\n\n\"The police showed you up for the useless fat fucking prick you really are... you were an embarrassment as a father, and you made Mum's, Sam's, Den's and my life a fucking misery. Fuck you Dad,\" he said, \"And if I never see you again it'll be two weeks too fucking early, I hope you die quickly and in pain you stupid, useless cunt...\"\n\nMike never would see him again, Dad would die six months later. \n\nDespite dire warnings from Dad we all agreed that we would go to the parade and watch Mike and his brave mates march or drive past in their desert uniforms, even as Dad grumbled from the chair he virtually lived in these days and daring us to go, aware that he could only make breathless threats in the vain hope that they'd have the effect they always used to, but these days Mum just growled back at him staying out of his reach, something she could never have done before without risk of injury. \n\nWe went and watched Mike stood in the turret of the special Royal Engineers tank he was in charge of, saluting smartly as he passed the Royals, Generals and politicians. We met Mike afterwards for a beer and I'd never seen Mum happier. It was like the few short summer holidays we'd had when Dad had been inside, relaxed with no fear of any sort of reprisal if we dared to seem happy.\n\nAs Dad's condition worsened the more Mum came out of herself.\n\nHer revenge was non-violent, sweet and a long time coming; quite simply she ignored him, giving him exactly what the nurses suggested, breakfast cereal first thing in the morning (no more fry-ups), then two meals a day, and a cup of tea with no sugar in the morning, one at lunch, another with dinner and one before bed.\n\nPreviously she would have jumped to his hot beverage demands instantly, sometimes fifteen or twenty times a day when they were younger. The weight fell from him and as he got worse and his chair was swapped for a bed with nurses coming in to do for him four times a day, with Mum sitting next to him, drinking cup after cup of tea and once the nurses had left, even lighting up the very occasional cigarette well away from his oxygen mask, even though she'd never really smoked -- but Dad always had and that was the point.\n\nMy pregnancy was discovered, and a wedding planned, with the hope that Dad could give me away from his wheelchair, but despite our efforts he gasped his last the weekend before.\n\nMike was away on a big NATO exercise when I rang his barracks in Osnabruck and I got the orderly officer who took the message. The orderly officer didn't know exactly what Lance Corporal Haymer's relationship with his late father had been like and a message was rushed by Military Police patrol car to the banks of the Rhine where Mike was building a huge floating bridge, with orders to bring him back. \n\nThe MP's spoke to his Commanding Officer and Mike was taken into a small tent on the back of an armoured car where the CO gave him the bad news. \n\nBefore Mike had a chance to say, \"So what? I hated him...\" the Lieutenant Colonel cut straight in and said that everything was in place to get him 'back to UK ASAP' and the two MP's were to take him and his kit at speed back to Roberts Barracks where one of his colleagues would assist him packing his bag to get him back home to be with his grieving family.\n\nIn less than 6 hours Mike was in his British Forces Germany tax free car and bombing along the excellent European motorway system until he reached Calais and took that short sail home.\n\nHis CO had told him that this fortnight's leave had been deemed 'compassionate', and sat in our living room with a mug of tea after his marathon trip Mike laughed, happy that he didn't have to use his limited holiday allowance for my wedding that he had been planning to come to anyway but not for this long. \n\nThe funeral was paid for by a social security grant, and Mike got to stand by his fathers coffin, immaculate in his khaki uniform with his medals wearing his brand new paratroopers' red beret he'd eventually earned as a Royal Engineer and awaiting his posting to an airborne unit back in England, his new wings bright on his shoulder above his stripe and content in the knowledge that his Father would have been turning in his grave had we not been cremating him.\n\nHis fortnight's compassionate leave meant he was also there to give me away. It was to have been my paternal Grandpa who had been let out of prison on day release specially to come to my wedding seeing as my Dad had died and he was going to walk me down the aisle. Grandpa had been away for the supply of counterfeit money, something he had done for years, even while he was on bail for the supply of counterfeit money. \n\nTo my Mum's disgust he headed straight from the underground station to the lounge bar of his local 'just for a minute' and was discussing further ill-advised schemes. I was sat in the car outside of the registry office waiting for him when Mike came out to see what the delay was as the registrar still had two more weddings to do and was complaining loudly. Frowning in disgust but looking a million dollars in his uniform Mike was there for me, as he always has been.\n\nI was so proud of him that I asked him there and then if he'd give me away, and I detected some faint disappointment in his face as he had seen who I was marrying, knowing the Idiot Ex from his school days; he kept quiet though and said that I looked gorgeous and it would be an honour to walk me down the aisle. \n\nMy Grandpa was a bit miffed at this but not that much; after all my Nan had dragged him from the pub by his ear with his fourth pint going flat on the bar and they got to the registry office five minutes before the end of the service. He loudly complained that the Registrar was 'just another bloody clerk who should know his place, whose job it was to serve hard working people like him'. Mum laughed, Grandpa had never worked a real job in his life. \n\nWhile my Grandpa wasn't up there with my Dad and was 'a bit dodgy', criminality was just everywhere in my growing up and how I met the Idiot Ex. My Dad and the Idiot Ex's Dad were mates and very much 'cut from the same cloth', often on the same jobs and often met at the same christenings, weddings, funerals and associated parties, not to mention prisons. \n\nThe Idiot Ex was my first and only boyfriend, charming in a roguish kind of way and, to be honest, so were most of the blokes I met. He asked me out at a party once and I said I'd think about it. My Dad said that the boy was from 'good stock' and 'would go a long way' and that I should seriously consider him. I was by then a quite attractive, dark wavy lustrous brunette and although a late bloomer I was blessed with the curves and the looks all Higgins women have that have often been blamed for the shits we ended up married to.\n\nSo I agreed to go out with him, and to start with he was quite funny and charming then we became a couple and I became pregnant with Izzy's older brother Ray and like so many other women in my neighbourhood and in my extended family, I walked down the aisle quite young and quite pregnant. \n\nWe had lots of sex, that is to say the Idiot Ex had lots of sex and I lay there while he did it. We had two positions, the missionary and doggie, and that was ones he'd seen in a porn movie.\n\nI still blame the pregnancy on the Idiot Ex's insistence that we had sex after every date and the fact that my Dad had been taken ill and the emphysema progressed faster than the doctors could treat it, and even with dated packets of contraceptive pills I was somewhat distracted, the booze we drank on our dates probably didn't help. The sex we had was OK I suppose, it felt OK most of the time, but I'd never had an orgasm -- how do I know? Because I've had lots since.\n\nJust before Ray was born, me and the Idiot Ex got our first council flat then moved up to a house after Izzy was born. All was well I suppose; I had soon realised (like a lot of women I guess) that what I took for charm was quite superficial and I had already plumbed the shallows of his personality and that was pretty much it, and once we were married he stopped trying - this included the sex. He had made a bit of an effort but after a few years it kind of stopped almost completely and I was to find out why.\n\nBut I'd married him for better and for worse, I had only to look around at my occasionally black-eyed female relatives to see that. \n\nMy huge paratrooper big brother let the Idiot Ex know that there was to be none of the 'traditional' domestic violence in our marriage at a family party in the club not long after the big day. The Idiot Ex lost his rag when it had looked like I was dancing with another man and he grabbed me and swung me around, with a raise hand.\n\nMike was there in a flash.\n\n\"Les?\" he said.\n\n\"Wot?\" said the Idiot Ex still filled with righteous indignation and looking at me with a vengeful zeal all 60's and 70's East End.\n\n\"You so much as mess up Samantha's hair, I WILL get to hear about it and I'll pay it back to you ten fold.\" Mike took the Idiot Ex's arm and lowered it, \"You give her a slap, I give you a punch, you black her eye, I break you nose and your jaw; anything worse and we're talking limbs Leslie, I mean that...\"\n\nThe club went very quiet at the scene unfolding. Most of us had grown up watching our Mum's get a bit a dig and lots of threats from our fathers, but Mike had watched and hated it. It wasn't going to happen to either of his sisters that was for sure.\n\n\"Yeah but..,\" said the Idiot Ex.\n\n\"Yeah but nothing,\" said Mike, \"I watched my Mum and my Nan and a couple of Aunts living with bastards and I swore that my sisters never would. Now do you remember what I said?\"\n\n\"Ye... yes Michael, I was'int gonna do nuffink woz I, swear on my Muvver's life mate...\" said my big talking but ultimately spineless husband. Mike was the still infamous Tommy Haymer's son and that was enough of a reputation to be going on with.\n\n\"Make sure you keep it that way.\"\n\nMike was based in Aldershot with the Airborne Brigade and only ever a phone call and a short car drive away. I knew I was safe.\n\nThe Idiot Ex was a wrong'un no question, but never a thug. He was involved in some borderline villainy but nothing violent like our fathers, more sticky fingers and dodging the police, the customs and the tax man than shotguns at four in the morning, and his criminal record was all non-custodial, but that was just because he'd just never been caught and convicted.\n\nOur marriage went reasonably well I suppose, until a while after Izzy started junior school and I found out the reason he'd pretty much stopped screwing me. He'd always been 'a bit of a lad' and our marriage and children had only temporarily stopped him from that element of his life. He'd started to charm the women just like he had me, and the inevitable happened and had been happening for eighteen months before I found out. This was enough for me to dump him but the fact he was fucking his cousin and then, the icing on the cake, her daughter completely put the kibosh on marriage guidance counselling. His second cousin had a baby but it was never worked out whether he was responsible; she had split up from her second husband and was shagging anything with a penis at that stage and I suppose there are some things that a family doesn't want confirmed or denied.\n\nI found out in, of all places, the club.\n\n'The Club', a rather crusty and crumbling 'members only' social hall with two bars built after the war to service our entire community and our regular Friday and Saturday night destination where, like 'Cheers', you knew that people would know your name.\n\nIt was almost guaranteed that family or friends would be there most evenings and it's where my Dad's wake had been, then my wedding reception, then Ray and Izzy's christening parties and countless other family parties and piss-ups. I had even worked the bar and been a cleaner there, so I just knew from the strange atmosphere that something was amiss, and that the world was staring at me and talking behind their hands and laughing behind my back for weeks.\n\nEventually on that final Friday one of the fishwives got so drunkenly brave as to want to come over, get all reality TV on me and discuss it asking what I was doing to still be with that two, three, four or five, ten, fifteen-timing piece of shit I was sat next to.\n\nI asked what was up and she told me in great detail, even pointing around the venue at several women that suddenly stopped looking nervously at the unfolding drama at our table to investigate the contents of their handbags or have a desire to take themselves or their now howling children to the toilets, or out the door.\n\n\"Fuck off Brenda,\" said the semi-pissed Idiot soon-to-be Ex, \"don't tell stories wot don't concern yah.\"\n\n\"No, go on Brenda,\" I said, \"when was this?\"\n\n\"Well, he was shaggin' Liz over there...\" she pointed to where the first of the escapee's had been sat, seeing that space now vacant; children, coats and bags collected and drinks drunk all in the amount of time it had taken Brenda to start to explain, \"Well he was fuckin' her in the committee room last week, that Wednesday when we was all at the school play.\" \n\nThe Idiot was very keen not to go and see Izzy singing in the choir and I could remember that - \n\n\"I know that's true 'cos Jaynie...\" (his cousin,) \"walked in on them in the committee room and was really pissed off 'cos he was s'posed to be givin' her one that night 'pparently...\"\n\nI thanked Brenda for her forthrightness and slowly stood facing him before I threw all the drinks I could find at the Idiot Ex then left with an angry Ray and confused Izzy's hands in mine.\n\nAs we walked home I had the benefit of another club member who just had to get something off of her chest and proceeded to tell me and my two young children some other instances of when my husband, their father, was shagging other women naming and numbering them and adding where and when. She even ran in her short skirt and cheap heels, clacketing along to keep up with me such was her eagerness. I think it was just such a delight for her that she was able to lord it over someone whose life was worse than hers -- even if only temporarily.\n\nI thanked her for her time and very graphic, numeric and geographical description and asked hadn't she better get back to the club seeing as it was a quarter to eleven and her four-year-old girl, three year old boy and baby girl were still there and she was now three quarters of a mile away from them.\n\n\"Oh yeah,\" she said, stopped and walked back much slower, her steel heel tips clickety-clacking away into the night.\n\nThe Idiot Ex came home two hours later after trying desperately to create cover stories with some of the other women I was to find out. Apparently it took him so long because there was something like thirty of them in the previous two years, at least those were the ones he could remember.\n\nHe stood at the front door with a stupid market trader's salesman grin on his face with extended 'trust me' arms and gave it a load of shit starting with, 'OK, there was that ONE but it was just sex Babe, it din't mean nuffin I swear on our kids lives', working up to 'we can't jus' frow everyfin' aside Babe, we're so good tog'ever,' ending with 'what about the kids, they don't want no broken 'ome shit in their lives.' \n\nI let him stand there long enough to reach out and slap his stupid face and screamed slamming the door on his hand, as my brain finally started to add two and two together and come up with four, lots and lots of fours in fact. \n\nEvery single suspicion I'd ever had plus a few I hadn't now all made sense so with his damaged hand now removed I re-slammed, locked and bolted the door.\n\nI found out later that he'd telephoned almost every female relative we had (bar two of them of course) asking for advice on how to 'sort it out wiv' Sammy', but was met with lots of shaken heads and disappointed looks. \n\nMy sister Denise told him straight,\n\n\"Not fuckin' everything that moves, especially your first and second cousin, would have been a bloody good start you fat twat,\" adding, \"and not getting one of them pregnant and making your entire family a laughing stock in most of South London would have gone a long way too.\"\n\n\"Yeah but Den...\"\n\n\"Don't you fucking 'Den' me you bastard!\" she howled at him, \"just think yourself lucky that my Dad's dead and my nasty paratrooper brother is building roads and runways in Iraq.\" She took a breath and snarled, \"it's only because I'm running a nursery business and can't be dealing with the police that I don't drive north and fucking castrate you myself you dumb Fuck...\"\n\nIt soon became evident that he HAD been shagging everything that moved and his getting away with it had made him bold. Being the Idiot he was he had then started quietly boasting and bragging about his man-whoring to his close friends, swearing them to secrecy. \n\nThey promised not to tell anyone and didn't... except for their wives of course which didn't count. They had no qualms about discussing it among themselves either and after their initial and still secret glee, lots of them started to get guiltily cross as he carried on doing it and worse, still boasting about it - they all liked me and knew that I never 'played away from home' like him. \n\nOn advice from Mum I got myself tested and found out that he'd given me chlamydia; the day I found out that little gem I changed the locks and applied for a housing transfer with the council, south to near where my sister lived. He tried to argue that I could have caught that from anyone, suggesting that I'd been sleeping around. \n\nHe then decided to try to spread that story but I was really pleased to find that almost the entire community was on my side and he was universally ridiculed and derided for even making the suggestion. His witch of a mother sided with him of course. It must have been my fault that 'he wasn't gettin' enough at 'ome and had to go looking for it'.\n\nEvil bitch.\n\nI moved as far as possible as quickly as possible and started working for Denise at the nursery that she ran to take my mind off him and the divorce - and found that I was good at it. With Ray in senior school and Izzy not to far from it I applied for and got free training and qualifications in childcare from the local college. ",
        "Education had been about school when I was young and once you left that was it. The college was great however and before I knew it they had worked their charm on me and I had a couple of diplomas.\n\nAs my confidence grew I applied for another course in accountancy from the small business people at the council so I could manage the books, and soon I was applying for grants and loans and WE were employing twenty women at OUR two sites and doing quite nicely. That has now increased to four.\n\nThe quality of life of my little family improved and we all three started to lose the lazy London twang to our voices, and it all just got nicer. After two years and my decree absolute, I moved even further away from London, heading south and a few streets away from Denise and away from him and his (and some of my) family and the shit they were up to or in to.\n\nThe Idiot Ex was fuming and complained that Ray would miss out on his education and his future, and then complained about his access rights. My response was that as soon as he actually started paying the maintenance he owed me, we'd start to talk about 'rights'. He shut up at that point; what he really meant of course was that Ray wouldn't learn the family trade of 'wheeling and dealing' ala' 'Only Fools and Horses' in the way that all his other male relatives had, and the Idiot Ex would have no one to hand on his wisdom and the keys to his lock-up's. It was my Dad and Brother Mike all over again but without the violence.\n\nI said that no way were my children to have the same life that we did. Ray and Izzy were in an excellent local school and they both did brilliantly, getting even more qualifications than their Uncle Mike had. Ray won an apprenticeship as an electrician with the Local Hospitals Trust and after finishing that was watching me and his Auntie Den learning AND managing our business, he found my old management and accountancy training books and notes, applied to sit them himself and has moved off of his tools and is now a maintenance manager across a massive area. \n\nHe lives far enough away from his extended family now for them to have stopped bothering him with offers for building supplies (bound to have been stolen) and offers to work 'off the books' for him.\n\nFortunately one part of his upbringing Ray could remember was how to tell his Dad, his Uncles and Cousins, and their associates to fuck off and leave him alone. Thanks to the computer and the world-wide web, along with centralised accounting the days of 'cash-in-hand and not a word to the taxman -- I'll help you out if you help me' have long since gone, at least in his part of government work.\n\nSo The Idiot Ex decided that his best chance of ensuring his legacy was with his daughter. Isabel; Izzy or as he had always had it 'his Bella', even though she's 'Isabel' not 'Isabella.'\n\nAs far as he was concerned she didn't have my curves and looked a bit plain compared to me. I didn't care of course, to me she always has and always will be my perfect, gorgeous girl, but I knew deep down that both me and Auntie Den had been plain Jane's right up until we hit late puberty and the boobs and the bums happened, then the confidence. I just knew that was what was going to happen with my Izzy.\n\nBut not the Idiot Ex it seemed. After handing her the shittiest present he could find, I remonstrated with him that he could have made more of an effort considering it was her sweet sixteen, we even had a party.\n\n\"Sixteen?\" he said, \"Cor, bloody 'ell Sammy, were does the years go ah?\" He looked like he had come to a and major decision, \"Right,\" he said, \"Right!\" He rubbed his hands together.\n\n\"Right what? You're going to buy her a present that she won't want to donate to the Charity shop the minute you've gone?\" I cast an eye over the toy make-up set and tiny hairbrush and mirror he'd bought for his sixteen year old, blossoming daughter.\n\n\"Better than that Sammy!\" he said rubbing his hands together with even more vehemence, \"Set her up for LIFE Babes!\"\n\nOh shit, what now?\n\nIt took a couple of days...\n\nWhen Izzy was right in the middle of swotting up for her GCSE exams, we had the first knock at the door. \n\nHis idea of 'setting his Bella up for life' was this. He kept sending the sons of his Idiot mates around to ask her out on dates, and the more scruffy, unattractive and occasionally smelly they were, the keener they were to meet her.\n\nFor days there was an almost never-ending stream of them, and I actually thought of moving house. I banned Izzy from going to the door as some of these fucking Idiots were very hard to convince.\n\nI even had to drive her to and from school as after a week and a half of me saying once or twice a day, \"no she doesn't live here, she's staying with her Aunt while her exams are on,\" her Idiot Dad had picked her up from school one afternoon and took her to some out-of-the-way burger bar, ostensibly to buy 'his Bella' tea, but actually to meet and then leave her with Carl, the Idiot son of his Idiot best mate Brian. At that stage Izzy was a vegetarian and not eating meat.\n\n\"Don't worry\" said Idiot Carl trying hard to be cool about it, \"I'll buy ya a chicken burger instead sweet'eart...\"\n\nShe smiled, made out she was going to the bathroom and hid there, sending me a text message to please come and get her. I did so, arriving to her rescue ten minutes, some broken speed limits and at least one orange to red light later, and on arrival asking Carl what the Idiot Ex had actually promised.\n\n\"He said Bella was reasonably fit and woz lookin' for the right man ta' settle dahn wiv, an' seeing as how we'd known each 'uver for years like, I was virtually a dead cert to get some.\"\n\n\"Get some?!\" I snarled.\n\n\"Well...\" said the borderline troglodyte, \"I 'fink he only meant she'd fall in love wiv' me like.\"\n\n\"You got your car Carl?\" I said.\n\n\"Yeah...\"\n\n\"Les said you lost your licence?\"\n\n\"Naah,\" he said, \"Ain't got one to lose 'ave I,\" he said matter-of-factly, \"Got banned from drivin' though.\" He looked almost proud of that.\n\n\"And you were going to drive my Isabel home?\"\n\n\"Why not?\" he said confusedly, and I really think he meant it.\n\n\"Thanks Carl,\" said Izzy, \"but I'll go home with Mum.\"\n\nHe stood looking a bit disappointed,\n\n\"So we got it going on or what?\"\n\n\"I'm sorry?\" said Izzy.\n\n\"You an' me, we an item?\"\n\n\"No, sorry Carl, whatever Dad has told you I'm concentrating on my exams at the moment.\"\n\n\"So when we going out ag'in?\"\n\n\"We aren't Carl, you're a really nice bloke and all but... you're not my type, sorry.\"\n\n\"But your Dad said we was gonna go out.\"\n\n\"You can go out with Les if you want Carl but Izzy is her own person and doesn't do what her Dad says as far as boyfriends go.\" I said putting myself between Carl and Izzy, just in case. Carl was much like his Idiot Dad but had that look in his eye that said he didn't have all the self-control mechanisms that the homo-sapiens did.\n\n\"But your Dad said...\"\n\n\"Yeah,\" said Izzy laying a hand on his beefy shoulder, \"I know; sorry...\" she paused and closed her eyes for a second, \"But my Dad right, he ain't all right in the 'ead see? 'ee finks that I'm... like... a bit of a slag what wants it off everyone, but I ain't like... actually?\"\n\n\"Ooh!\" said Carl as my Darling Izzy turned the light on in his little world, \"Well, see ya then Bella.\"\n\n\"See ya Carl.\"\n\nHe left and walked across to the car parked on double yellow lines that while it wasn't actually stolen, didn't actually belong to him, or anyone else for that matter. As Izzy and I bought a couple of Lattes for our drive back we saw him messing around under the steering wheel and the car burst into life, there was a faint hint of a screwdriver going back into the glove compartment.\n\n\"Fucking hell Izzy, I didn't know you spoke Idiot.\"\n\nShe wrinkled her nose and shrugged her shoulders,\n\n\"I learned it at skool, din I?\" she crossed her hands in a 'word to your mutha' movement.\n\nI laughed and we went home.\n\nThat wasn't the end of it though. I had already called the Idiot Ex and told him to stop sending Idiot chavs to my house as they were starting to get a bit nasty.\n\n\"It's fuck all to do wiv' you Sammy,\" he said grandly, \"this is between me and my Bella.\"\n\nFinally, and after a third week of almost nightly door knocking, the Idiot Ex must have been running out of young gallants and we met the nastiest of the Idiots he sent and we ended up calling the police and I finally threatened the Idiot Ex with legal action if he didn't stop giving my address away to random East End teenage boys. \n\nThe police were called when the last thug decided he was going to lose his temper and kick the crap out of my front door when my son Ray told him that Isabel wasn't in and not to listen to what her Dad says.\n\n\"Fuckin' cost me a tenner to get all the way down here,\" spat the prospective Romeo, \"I ain't going back across town for fucking Jack PAL,\" he sneered at Ray, \"Ee'ver she comes out wiv' me or I want a fucking tenner.\"\n\n\"Well you'll really need to speak to the bloke that told you to come here mate, it's nothing to do with my sister.\"\n\n\"Your fucking sister? Well that makes it your fucking business mate,\" said the Romeo, \"She fucking owes me, know what I mean?\" he raised his eyebrows before resting a hand on the door post and leaned forward threateningly, still concerned about his investment.\n\nRay was and always had been amazingly protective of his little sister but wasn't going to get involved in a scrap over something so pointless as his Idiot father telling Idiot chavs to come courting and slammed the door shut. In doing so, he trapped Romeo's hand. Romeo howled, all the while Ray just leaned harder against it, until eventually he managed to pull his hand out.\n\n\"Now fuck off,\" said Ray slamming the door.\n\nRomeo wasn't having that and said so; he proceeded to kick and batter at our front door and Ray just called the police standing as close as he could get so the call taker could hear the bangs and crashes and the shouted four letter words and what he wasn't going to do to Ray and eventually his fuckin' slag, prick-teasing sista' when he got to them. The patrol car was on its way in seconds, and the coppers captured the whole scene on their body-worn video cameras.\n\nRomeo told the police that he was on a promise and 'that twat in there' wouldn't let him in to see the girl what 'woz apparently 'begging for it'.\n\nThe police officers said that they really doubted that as they had spoken with both the young man defending his home and the young lady in question and she knew nothing about it. They were then led to understand that the girl's father was telling every male he knew under 18 to take his daughter out, he even showed them the betting shop form that the concerned parent had written his daughter's address on. Sadly he still hadn't discussed it with her.\n\nWhile the police did kind of see Romeo's point of view he was convinced of the error of his ways and was released with a police caution for the criminal damage, threatening behaviour and without the bags of marijuana he had in his jacket pocket, then told not to go within two miles of my house.\n\nI was fuming once I found out of course but the Idiot Ex was bright enough to turn his phone off after the psycho had tried to contact him demanding his 'romantic refund'. \n\nAfter calming down and arranging repair to my front door I reflected that almost every young girl from that community had always tended to find their true love through parents or a friend of a friend, I certainly did after all, and I suppose that Les thought that it was his job to find the right man for his daughter 'from the right stock' as our Dads would have put it. \n\nHe could then rest easy knowing that he had done his fatherly duty to marry her off a bit sharpish to start a family and breed more of the same; he could meet his son-in-law in the pub on Friday while the whole family would head out on Saturday night to 'The Club' where their kids would meet and mingle and continue this strange courtship ritual. I knew of the Irish Traveller concept of 'Grabbing' and I'm pleased to say that never was there a suggest of that tradition.\n\nTwo days later Les was on the phone to me complaining that I'd set the police on him.\n\n\"Yeah because you keep sending fucking Idiot chavs to meet Isabel and she isn't fucking interested you twat!\" I screamed down the phone at him, \"one of them mad bastards tried to kick my door in and said he was going to 'have Izzy'.\"\n\n\"Yeah... well...\" the Idiot Ex bluffed, \"it's about time she started courtin' innit'!\" he snapped back at me.\n\n\"She's just sixteen you fucking perv!\"\n\n\"Yeah...\" he said with a giggle in his voice, as if his daughter starting to have sex the second the smoke had cleared from her birthday cake candles was just the greatest laugh.\n\n\"She isn't getting pregnant to get her first council house and throwing her life away, she wants to go to university.\"\n\n\"An' what fuckin' good is that gonna do 'er? A load of fuckin' debt and a pointless qualification so she can show off arahnd' tahn' that she's much cleverer than all us wrong'uns?\"\n\n\"Not at all Les,\" I said, \"she's already cleverer than you and all your mates put together.\"\n\n\"Fuckin'... fuckin'...\" he snapped.\n\n\"She is Les, between you and Brian, you have NO qualifications, Izzy has 11, so I make it that she's 11 times cleverer than you and Brian. Somehow I don't think Carl is going to be knocking on the door at Oxford or Cambridge too soon is he; unless they need their windows cleaning of course...\" She didn't have 11 qualifications at that point, but within 5 weeks she had 12, but the Idiot Ex wouldn't know that.\n\n\"Stuck up, that's what you fuckin' are,\" snarled the Idiot Ex, \"you was never like that when you woz married to me!\"\n\n\"No, that's right,\" I said, \"but that's because I WAS married to you.\" I paused and took a deep breath, \"Les, you have the ability to drag all of the class and finer things in life out of a situation the second you open your big mouth.\" This was a circumstance I had discovered over the ten years we'd been apart. It didn't always have to be sooooo nasty or so bloody cheap, and I don't mean that purely financially.\n\n\"Well... well...\" he struggled to find a comeback, \"I... I wanna hear it from my Bella,\" he said, \"Put Bella on the phone and SHE can tell me, that way I know it ain't just you and yer stuck-up ways.\"\n\n\"Izzy!\" I shouted up the stairs, \"Can you come down and tell you Dad whether you actually want him to keep sending all the juvenile delinquents round for your hand in marriage or your virginity?\"\n\n\"What?\" she came thundering down the stairs. I put the phone onto speaker so I could hear the whole conversation. \"Dad!\" she snapped down the phone, \"you have got to stop sending all these boys around, I am perfectly capable of finding my own boyfriends thank you very much!\"\n\n\"Oh!\" In that one syllable I could hear the creak of the saddle as her Idiot father climbed onto his high horse, \"Oh yeah, don't want yer old Dad to 'elp you 'aht and point you in the direction of some nice local boys do ya, oh no.\"\n\n\"No I don't; not now, not any, not ever. That enough?\"\n\n\"Carl is...\"\n\n\"Oh shit, not Carl, he's a bloody thug, don't you dare try and set me up with him!\" she snapped at her Dad, in the same way that I did I was quite proud to notice.\n\n\"EE'S A GOOD LAD!\" shouted the Idiot Ex.\n\n\"He's got previous for assault AND robbery, he was driving without a licence - how is that good?!\" sighed Izzy.\n\n\"Everyone does that!\" he laughed as if it was a mark of good character, \"He's a steady lad Isabel!\" cautioned the Idiot Ex Sage, \"you could do a lot worse...\"\n\n\"Yeah, the drug dealers and armed robbers you know I expect,\" said Izzy.\n\n\"We doan' 'ave none o' that drug shit Bella,\" said the Idiot Ex, \"never have...\"\n\n\"That last thug you sent round had four three-ounce bags of weed on him when he was nicked at my front door trying to kick it in,\" I said.\n\n\"Oh... well...\" he stopped and I hoped desperately that was an end to it, but no, \"Well he looked very smart when I was talking to him in the pub, very well turned 'aht I 'fought!\"\n\n\"Drug dealers often do dress quite well Les,\" I threw in.\n\n\"Yeeeeeah, well you see... weed ain't actually drugs... 'as such'...\" said the amateur criminal pharmacologist knowingly, \"prob'ly jus' for 'is personal use I 'spect...\"\n\nIzzy sighed and shook her head, mouthing 'oh for fuck's sake' to me. She cut in\n\n\"Anyway Dad, they aren't local and they aren't nice, end of story.\"\n\n\"They are local,\" he wasn't giving up on 'his Bella' and her chances of happiness without a fight that was for sure. \n\n\"Not to us,\" both Izzy and I said at the same time.\n\n\"Yeah, well that's because you forgot you roots.\" Les sniffed, \"you gotta 'fink aba'ht this Bella\" he said, \"After 'awl...\" Fuck, I thought, he wasn't going to say it surely... \"you ain't no oil paintin' luv are yah?\"\n\nJesus! Surely not, to his own daughter, could there BE anything worse to say to a teenage girl?\n\nHer mouth hung open in shock,\n\n\"Dad?\"\n\n\"Yes Baby?\" he all but cheered.\n\n\"FUCK YOU! And fuck all of them scummy fucking hooligans you keep trying to set me up with. I NEVER WANT TO SPEAK TO YOU AGAIN!\" She screamed, \"you send any more of those bloody people round and I'm telling Uncle Mike!\" and disconnected the phone.\n\nI pulled her into a hug; \n\n\"Don't you listen to him,\" I said rubbing her back as she cried into my shoulder, \"he was just trying to get back at you, at us actually.\"\n\nThe Idiot Ex phoned me back that night, slightly pissed, demanding to speak to Izzy, probably concerned that his former brother-in-law might be on the way round.\n\n\"Fuck off Les,\" I said, \"you were so rude and nasty to your own daughter, might I suggest that you stay out of our way for a while - say a couple of years? Because, so fucking help me, you come within ten feet of me and I'll swing for you, get me?\"\n\n\"Wot?\" he said, innocently, \"what did I say ah? Ah? Wot? WOT?!\"\n\n\"You told your gorgeous daughter that she is unattractive, you tactless cunt!\"\n\n\"No I din't!\" he snapped self-righteously.\n\n\"You told her, and I quote, that she 'ain't no oil painting' you dickhead!\" I snapped back.\n\n\"Oh,\" he said remembering \"Yeeeeeah well, she knows I din't mean it!\" he chuckled.\n\n\"That's the problem Les, you did mean it and she knows you did. If you ring me again, I'll change the number. Stay away from me and the kids, AND I want the balance of my money or I'll ask the court to send the bailiffs round.\"\n\n\"Oh that ain't fair, I can't find that sorta money, you know it!\"\n\n\"I have to 'find the money' Les.\" I said, \"because if you remember you haven't paid maintenance to me in well over two years.\"\n\n\"Yeah well... business ain't 'bin that good.\"\n\n\"No it never is when it's for us is it, yet somehow you still find enough money to go on YOUR holidays or on the piss every Friday and Saturday night.\"\n\n\"Yeah, well that's all the socialising I get to do these days.\"\n\n\"And I can't afford to go out at all, not with two kids to feed and clothe, with no help from their father.\"\n\n\"Yeah... well...\"\n\n\"Yeah, well... you owe me four and a half grand and if I don't see at least three of it in the next week, I'll send in the bailiffs. Bye Les.\"\n\n\"I in't got that kinda cash and you know it!\"\n\n\"I'll send them to your lock up then, bound to be a few grands worth of stuff in there, that'll be a start won't it,\" I said brightly and helpfully.\n\n\"I...\" he stuttered, then babbled his response, \"well... see, I ain't actually got a lock-up no more... and... well... I definitely ain't got no stock.\" He calmed down the tiniest bit, \"if I 'ad o' course I'd be sellin' it 'wouldn't I.\"\n\n\"Of course you would!\" I crooned to the Idiot Ex, \"course you would, how silly of me to think that you'd be knocking out shit round the pubs and clubs and down the market rather than doing legit stuff and telling the tax man and the Child Support Agency!\" ",
        "\"Yeah, well...\"\n\n\"THREE thousand pounds Les,\" I said, \"Or I tell them about your other two lock-ups as well...\"\n\n\"Oh come on Sammy, you'll see me in the fuckin' poor 'ouse!\"\n\n\"Without even stopping for breath Les, by next Friday...\"\n\nI put the phone down on him.\n\nI'd said three because I knew he would scratch up a couple of grand in a few days and he'd think by giving me that, he'd won. I didn't give a shit actually; Ray was at work and was paying for his upkeep, the playgroups I ran with my sister were paying quite nicely and I just wanted some spending money for the holiday we were going to have once the school term had finished and to celebrate Izzy finishing her exams. \n\nWe did and all had our first proper foreign holiday ever, spending the three grand the Idiot Ex was somehow able to find.\n\nOn that holiday I picked up a novel from the hotel bookcase and started to read it laying on my sun lounger. It was a romance, one of those 'lonely brunette heads out to the Australian outback and meets the handsome rancher' things, and the cover caught my eye because the heroine looked a lot like me.\n\nFor some reason that really turned me on!\n\nAfter many years of almost no sexual appetite I was walking around a Mediterranean swimming pool in a very clingy swimsuit and getting lots of looks from lots of men and I suddenly remembered I had a libido.\n\nI took my book to bed that night and as the brunette woman was getting ravaged in the Ranchers outback outbuilding I remember the feeling in my loins and me having to slide a hand down under my nightdress and into my panties, feeling around for all the bits and pieces the Idiot Ex, and me I suppose, had ignored for so long.\n\nThe book explained what the rancher did to the brunette so I did the same, touching what he was touching in the same manner. I had nothing at all phallic that I could recreate the most intense moments with but I had my very first solo orgasm that wonderful hot night on the Costa del Sol.\n\nThe first because I'd shared a bedroom with sister Denise until I married the Idiot Ex and moved out, and my pleasure was never really an issue with him.\n\nBut fucking hell, I played my finger across my clit, slipping and sliding in my own wetness and I came, gasping in the most wonderful shock, my hips straining up to the ceiling as I reached for the moment again, not convinced that I could recreate it.\n\nI recreated it four times that night flicking through the book for the next sexy bits, and from that night I became a regular masturbator, cursing myself that I hadn't discovered this pastime before. It was free, harmless, relaxing and stress relieving, relatively easy to do, bothered no one and I was to discover could only get better - a discovery I made when when one of our Playgroup ladies invited Den and I to an Ann Summers party at her place. I took the catalogue home and bought a whole selection of stuff that still lives in my bedside table drawer along with my outback sex manual (sorry hotel management, I had to have it and it still occasionally sees the light of day when I'm in the mood). \n\nMy all-time favourite toy is still a long pink penis shaped dildo with the most convenient sucker that enabled me to stick it on any one of five flat surfaces in my bedroom and bathroom and screw myself stupid with it. The tiny vibrator on my clit at the same time was... well... you know.\n\nI did think about another man to share it all with but my experiences of men had not been that promising and I was focussed on Ray, Izzy and their education and careers and on my new business.\n\nIzzy went to college and then to Southampton University and is now an in-debt but qualified physiotherapist at the hospital ten minutes away from her Fianc\u00e9 Ed's parents place, hence her move there before their wedding.\n\nShe had originally met Edward at the army cadets they were both members of when they were at their secondary schools, and when they saw each other again at an anniversary event held for ex-cadets she told me that she knew he was the one as soon as their eyes met across a crowded army base.\n\nThey had both joined as School Year Seven's, eleven-year-olds in the same intake, and had gone on the same evenings, weekends and to the same summer camps, and I vaguely remembered his parents. The nature of the cadets meant that along with all of their friends, Ed and Izzy worked and played together but there was never much in the way of romance for them, the geekier ones, because of the 'army' aspect of the thing; at least that was the excuse they all seemed to give. Ed and Izzy were really good friends though and left just before their seventeenth birthdays and their first college exams, both as quite senior sergeants.\n\nTo add to their geeky lack of self-confidence in everything but the cadets, she had convinced herself she was unattractive, and spotty and a bit flat chested with a big bum in proportion to the rest of her, while Ed actually had been a bespectacled, lanky, spotty, pigeon chested mouse who wouldn't have said boo to a goose let alone a pretty girl, even one that didn't think she was that pretty. \n\nThey had been really good mates but fell out of touch as so many people do moving from real life to university, even though they both did social media. In this case he did Facebook while she was a dedicated Tweeter, so through those differences in App's they didn't keep up with the changes in the lives of the other through university.\n\nBut in the four years that had passed Izzy had matured as expected and her chest expanded just like all of the Higgins girls did so that she no longer a big arsed, slender geek with a flat chest, she was a perfect Higgins hourglass with dark lustrous hair and big, brown doe eyes and her skin had cleared up, overnight almost. \n\nBy the time she came home after her first year and showing her cleavage she looked amazing! OK, perhaps I had been overfeeding her at home, perhaps I tended towards the less sexy when I bought her clothes but free to arrange her own kitchen and with enough money to the buy clothes SHE wanted to fit her sexy figure even her loving but cheeky big brother noticed, especially once I took her clothes shopping with my credit card, got her hair professional dressed and she came home all curves, long wavy hair and long shapely legs and he became even more protective than he was before! \n\nWith added confidence she blossomed emotionally as well as physically and I couldn't have been prouder at how my beautiful girl had become a beautiful woman that summer.\n\nHer friend Ed had undergone a similar three year collegiate metamorphosis -- his skin had cleared up as well and free from school bullies and piss takers, he had taken up rugby just because he loved the game. \n\nThanks to the training and confidence building (and his contact lenses) he now looked like he played for England, the 1st fifteen at least. His maturity had him growing out of the many food eccentricities he'd developed as a teenager, and as he worked out for his rugby playing he'd started to turn every girl's head within sight of him but still didn't feel brave enough to return their looks.\n\nNot until he saw the friendly and recognisable face of my Izzy smiling back at him of course. \n\nIt was at the 100th anniversary of the cadet unit they'd committed so much time to. It had been formed in response to the threat of World War One and as 2014 came close the unit decided to capitalise on the connexion and all former cadets were invited back for a celebration and commemoration evening via the local papers, social media (of course) and even a spot on the local TV news.\n\nNow a grown up and gorgeous newly qualified physiotherapist, she was keen to go and see just what had happened to her friends in the four years since they'd last met, and as an homage to those days walked there. She arrived quite early and was handed a programme by one of the latest cadets and she turned to see who else was there. She looked straight at Ed and smiled. He smiled back and was really nervous until her jaw dropped in a pleased recognition as she mouthed \"Ed?\" to him.\n\nHe looked straight at her, looking twice and not believing that the gorgeous red-lipped brunette fashion model lookalike wearing the stretchy, figuring-hugging, above-the-knee olive green dress bought especially was who he thought she was and looking just as amazed as she had done, mouthed \"Izzy?\" back at her. \n\nThey both walked across the room to the other and not knowing what else to do shook hands, and she confessed to being as tongue tied as him, the tall, broad-shouldered, and muscular looking hottie in his tailored suit. They chuckled, blushed, both starting to talk again in their excited embarrassment noticing but not noticing their other friends that started to assemble, some in the uniforms of the army units they had joined displaying the medals they had earned and talking about their jobs as much as their deployments, but Izzy and Ed only had eyes for each other, talking about halls of residence, graduation ceremonies and student loans as the event was called to order. \n\nThey sat next to each other of course. After the presentations were done and the very senior army officer, an ex-cadet himself, along with the local Bishop re-dedicated the memorial to their own fallen since 1914, up to and including one of their alumni that had been added, killed in Afghanistan a few years before, and even Izzy was wiping away tears. \n\nEd handed her a tissue and so sweetly put a comforting hand on hers and she didn't mind. Once the evening started to draw to a close Ed asked if she might like to grab something to eat on their way home - as they would have done those few years before. Not from the sweaty burger van that had parked by the bus stop for most of their teenage years but the posh craft restaurant across from the barracks.\n\nAfter their impromptu meal and much bringing up to date he drove her back to our house and after getting her number and asking to see her the very next night, they kissed goodnight. They were so impressed with that idea that they kept kissing each other goodnight until gone one thirty in the morning. Soooo sweet\n\nTwo years on and between them they had scrimped, saved, booked, made and arranged. I had always been desperate that my lovely Izzy would break the Higgins mould and get a good one - and she had. Ed was a hard-working IT manager, he was honest, loved Izzy every bit as much as she loved him and his family was a joy.\n\nThey both worked hard, and Izzy insisted that no way would she take advantage of some of the benefits of her Idiot father's 'contacts'.\n\nYes, after him calling her names and the big falling out we had started to talk again, mostly so I could get the last of the maintenance money he still owed me, and despite taking very little interest in his children for the last six years suddenly he was all parental and desperate to 'give his Bella away in church'. Sadly it came with all of his usual dodgy 'old school' bollocks.\n\nFor instance, he offered to get her cut price booze for the reception; but couldn't confirm exactly what is was likely to be... \n\n(Chances are because it hadn't been stolen yet.)\n\nThe reception was next - he knew a mate that could get them a really nice hall over a factory unit seeing as he was banned from the club... temporarily o' course...\n\n(Yeah, like either of my children ever wanted to go back to that place again). \n\nOooohkay, yeah the unit smelled a bit funny sometimes but if she 'ad the ceremony on a Sunday afternoon the smell was 'ardly noticeable and there was plenty of parking on the industrial estate 'cos it was so far out o' town. He'd even show people the best places to park so their motors din't get thieved...\n\n(Thanks but no thanks.)\n\nCars; he could get her all the cars she wanted see, real nice ones an' all 'wiv drivers in suits and every'fing. They was all pukka London taxis, proper posh... weeeeeell they had all BEEN London taxis like, but now they was gettin' on a bit an' on the Minicab circuit - still good though and nuffink a quick spray of that Fabreeze wouldn't sort out, p'raps a rug in the one the bride was ridin' in, what wiv' the dress bein' white an' all...\n\n(They politely declined).\n\nHe appeared at my flat one afternoon with some cheaply printed invitation cards and grandly presented them to her and Ed like it was the answer to all their prayers stepping back ready to accept their praise. Having been turned down for some of the big stuff he just went ahead and got these done, despite having been shown the ones they'd chosen already.\n\nEd didn't look too chuffed about them and the Idiot Ex took offence.\n\n\"Wassup wiv' 'em!\" he snapped, \"nah, doan' tell me, not posh enough I 'spect, no gold leaf or fancy writin'!\"\n\n\"No,\" said, Ed. \"My Mum's name is Gwyneth, not Gwendoline and it's Taylor with a Y, not an i,\" said Ed to Izzy trying desperately not to upset his soon to be Father-in-law. Izzy was not so gentle.\n\n\"I can't use these Dad,\" she said, \"as well as getting the names wrong, there's two spelling mistakes!\"\n\n\"That don't matta'!\" said the Idiot Ex with a big confidence trickster wink and a smile whispering, \"no one'll notice.\"\n\n\"Dad!\" she almost screamed, \"Everyone will notice, there has always been two R's in 'marriage'! Anyway, I told you we'd picked the ones we wanted!\" She looked flabbergasted, if only at the waste, \"Didn't you check them?\"\n\nHe probably had but like men of his generation and ilk the last thing they could ever do was admit their own foibles or short comings especially to their own kids, God forbid a daughter.\n\n\"Well...\" he said, looking at the floor, \"a mate let me print them and... like... in his lunch hour when no one else was about see and...\"\n\n\"I'm not having anything hooky at my wedding Dad, I told you!\"\n\n\"Beggars can't be choosers Isabel!\" he said with a pointed and admonishing finger as he tried to get firm with his daughter, but she was a grown up, very well educated and wasn't having any of it.\n\n\"We are not beggars Dad, if we can't afford it, we're not having it,\" she snapped back.\n\n\"Well, I thought I would be helping you out like.\"\n\n\"Thanks Dad, I do appreciate it but you should have asked me. And why on earth have you printed so many, there was must be hundreds here.\"\n\n\"Five 'undred!\" He said proudly.\n\n\"Five hundred?!\" she screeched in disbelief.\n\n\"Yeah well, everyone wants to come Bella!\" he grinned. \n\nTHERE it was...\n\nI guessed this was the reason he'd taken such an interest in the goings-on.\n\n\"Yeah well everyone isn't coming Dad,\" she said, \"It's just family and our friends.\"\n\n\"Well what about all my family?\" he said with a whine of indignation.\n\n\"You haven't got any,\" I said. \n\nThat was true, his few remaining relatives had fallen out with him over the years, before he'd shagged his cousin and got his second cousin pregnant even, and only contacted him when they wanted to trade, buy, sell or hide something, occasionally themselves.\n\n\"Well what about my mates from the club,\" he said indignantly, \"most of them have watched you grow up.\" \n\n\"I haven't been there in fifteen years!\" she snapped at him and his mouth flapped a bit.\n\n\"Yeah... well..\" he gave up on that and just shook his head and pursed his lips, \"well, they all knows when it's happ'nin and will all expect an invite Bella?\" He cocked his head and folded his arms with a 'how you gonna sort THAT one out' look.\n\n\"How?\" she growled and stepped closer to him.\n\nHe took a step back from the bride on a mission. \n\n\"How... what?\"\n\n\"How does a bunch of people I don't know seem to know my wedding day?\" \n\nWith hands on her hips and fire in her belly she stepped closer to him, her top lip curling at him in the same way that mine did. He saw it and took another step back.\n\n\"Err... weeeeeell,\" he quickly cottoned on that his gambit wasn't going to happen and his daughter was REALLY pissed with him, \"...when I say everyone, it's really just yer Nan an' Auntie Jane an' Auntie Fay an' all o' them.\"\n\n\"They're all invited!\" she snapped back, her head full of visions of having to cancel everything because of a herd of gate-crashers arriving for the reception and the trouble they would cause when they were refused entry.\n\nI picked up the invites and carried them to my recycling bin and dumped them all.\n\nThe Idiot Ex looked at me, he was cross about that.\n\n\"So none of those good people can come then,\" said the market trader trying to play his audience, \"they 'bin my mates for bloody years...\" he said with a protruding bottom lip\n\n\"But they aren't my mates or Ed's mates Dad,\" she said, \"we're limited to 150 people for the evening, and with our family and friends that's going to be really close.\"\n\n\"Well,\" he said contemplating his fingernails, \"how about I just invite 50 from the club then, they'll all bring presents, and you know they won't be cheap!\" \n\nThat wasn't a lie so much as a difference in outlook. They wouldn't be cheap in the realms of the places that he dealt but given the usual quality of the shit he bought and sold any gift from him or his mates would be unlikely to last the journey from the suitcase to the carpark. \n\nAdded to that she just wouldn't want a 12\" by 18\" 'genuine' Italian Capo de Monte (style) figurines of 'tramp on bench feeding birds', or 'a pair of matching dancing ragged urchins', nor the 'Crystal effect' regency style chandelier (no bulbs larger than 10 watts -- may overheat - made in the ROC) that would be too big for the third runway at Heathrow; or, God forbid, the plastic handled 'ranch style' cutlery set that was out of fashion twenty years before and had been the Idiot Ex's stock-in trade for so many years.\n\n\"Dad!\" cried Izzy, \"That's 150 people all together! Not just our family.\"\n\n\"Yeah well,\" said the Idiot Ex in exasperation, \"this is what happens when you book some poncey hotel in the arse end of nowhere!\" He folded his arms and raised his voice as if he was the font of wisdom, \"if you'd listened to ME,\" he whined and counted on his fingers, \"you could have 500 people, loads of pressies, free wedding cars, free booze all night, a proper band and a proper knees up!\" He snapped, getting cross now.\n\n\"DAD!\" snapped Izzy louder and crosser, \"if you want to have a proper knees up, then you get married and you have one. This is my and Ed's day, not yours and I'm not inviting half of the Tottenham underworld low-life's and mafia just so you can get pissed with your mates like you do every Saturday!\"\n\nHe took another 'self-preservation' step-back.\n\n\"Oh well,\" he said, hanging his head like a scolded school boy, \"I see; that's that then innit, Naaaah,\" he breathed out shaking his head, \"don't want poor old Dad involved and lowering the tone do yah, I get it.\" He stuck his nose in the air, \"I s'pose you won't want me to give ya away then,\" he strolled towards my front door, \"I'll find some'fing else to do that day.\" He sniffed in hurt parenthesis.\n\nIzzy knew what a drama queen her Dad could be and let him get on with it. He slowed down waiting for the call back. It didn't come. \n\nWorse, Izzy hit back with a big fat slice of drama of her own. \n\n\"Mum, lend me your phone; seeing as Dad doesn't want to give me away, I'll ask Uncle Mike!\"\n\nHe stopped dead, bluff called. He turned around.\n\n\"Over my dead body.\"\n\nOh if only...\n\nMy extended family and the Idiot Ex's all were all East Enders and from one area, a big post war council estate, while Ed's weren't. They were originally from Greater London, but as his Dad's IT business took off he moved south to Surrey and I was quite happy when Izzy moved in with him and his parents before they bought their own place. I missed her and still do, but we talk on the phone all the time, and now I have Wi-Fi and a tablet computer we skype. \n\nMy wayward but generally well-meaning, dodgy extended family all seemed to revel in their flaws and mishaps, while Ed's family were just normal. Nicely, boringly, averagely normal; no one was in prison, no cousin was being chased by Birmingham Yardies for unpaid drugs bills, no one had outstanding arrest warrants, none of them supplied 'car spares' that when ordered were still attached to the car that the owner wouldn't even know was missing until the next morning, with the engine still warm from the speedy drive across the city to an undisclosed lock-up for removal. ",
        "Nor to my knowledge did they have a lock-up full of unmarked cardboard boxes from China, the Philippines or South Korea. \n\nThey just lived, worked and just got on with life without drama. I was thrilled for Izzy.\n\nOn the morning of their wedding I first knew something was amiss when I saw Ed's Mum Gwyn looking rather distracted and badgering her husband Paul about something. Paul looked none the wiser for some reason then with an appeasing calm look that looked just like Ed's got on his phone.\n\nWhat I now know, the conversation went something like this;\n\n\"Where the hell is David,\" said Gwyn; David was Paul's brother and Ed's much loved, apparently batty uncle that lived down on the coast on a rather scratchy farm and was an architect that now taught at his local college.\n\n\"I don't know,\" said Paul, \"calm down, I'll ring him.\"\n\nPaul was soon on the phone to him.\n\n\"Hey Paul!\" he said cheerily to his brother.\n\n\"Dave, what time are you going to be here?\"\n\n\"Where?\"\n\n\"Ed's wedding, the bride is five minutes away.\"\n\n\"Ed's what?\" It was obviously a bad line or there was noise in the background.\n\n\"His wedding!\"\n\n\"What?!\"\n\nGwyn snatched the phone from her husband's hand.\n\n\"Dave, for heaven's sake, this is serious,\" she snarled, \"None of your bullshit stories about lateness, I'm...\" She paused.\n\n\"Gwynnie, lateness for what?\" he said.\n\n\"Ed's bloody wedding,\" she hissed.\n\n\"WHAT?!\" shouted Dave, \"Ed and Izzy are getting married?\"\n\nPaul stepped over and whispered to me.\n\n\"My brother Dave, he's always late, but Gwyn's fuming this time.\" Paul looked at his watch.\n\nGwyn's face was fluorescent and as a large black Rolls Royce appeared in the church lane the two groomsmen rushed us into the church. The service went splendidly and I will confess to a couple of tears as Izzy and Ed looked into each-other's eyes and swore true and eternal love to each other. I even thought that the Idiot Ex hadn't made too bad a job of the walk down the aisle, even though he was wearing a just-too-small bright blue suit and not the morning suits everyone else in the wedding party had, his son included.\n\nThe photographs took forever, but the photographer in question was one of the best in the South East and that was exactly what they happy couple were paying for. Much of the wedding party had tired of the endless messing around and were leaving and heading for the country house hotel and the reception.\n\nEventually we were all back in the hired vintage bus and back to the hotel, and were picked up and whisked in to the venue to glasses of champagne and a round of applause from the assembled family and friends already there.\n\nI could see Gwyn looking at Paul and then her watch with a snarl. I thought back to their discussion about the missing uncle. I looked around at the empty space the Uncle should have taken up and there wasn't one. I guessed that perhaps the immaculately dressed and ever efficient hotel staff had tidied the chair and the place setting away as soon as the meal started.\n\nThe food was wonderful, Ed's speech was really funny as was his best man Rick's; the Idiot Ex was borderline drunk and gave a cringingly embarrassing speech that had Ed's family looking at best confused and at worse shocked by this semi-pissed Idiot trying very hard to be funny and failing miserably. \n\nEven some of his relatives looked down at their serviettes and table decorations and hoped not to be associated with him. \n\nI counted the number of heads and it was exactly 61, the number we had planned for and had rolling around in our minds for the last two months. There were no spare place settings because no one was missing!\n\nIt was at this point that I put down my glass of champagne for the toasts, feeling some concern. In my handbag there was a second copy of the guest list and table plan the hotel had drawn up for us.\n\nAs soon as the last toast was given, I opened my handbag and sneaked a look at the table layout and guest list that Izzy and I had worked so hard on; I felt a chill run through my body. There was the top table with Izzy and Ed, me and the Idiot Ex, Paul and Gwyn, best man and Izzy's best mate Jayne as chief bridesmaid. Then there were the two ushers including Ray, two bridesmaids and their respective partners. \n\nRay was minus the girlfriend he'd just broken up with but with my Mum looking well, as she had done since Dad died. Then there was Ed's Uncle Dan, with his wife Ellie and twin boys Mark and Will, they were sharing a table with my brother Mike and his partner Mel and daughter Charlotte. Denise was across at the next table with her now teenage son Rory and Gwyn's sister and family. The Idiot Ex's Mum had refused to come because I was there, and I understand issued a fatwa that no one else from her family could go, which was why only his sister Fay was there with her new husband Dave and her three children James, Ann and Kris.\n\nThe next table had some of the happy couple's great aunts and uncles, the next table was some more slightly distant relations but no sign of an 'Uncle David' and any partner or children he might have had. \n\nIt came to me suddenly...\n\nNot David, but Dave. There were two Uncle Dave's. The Idiot Ex's sister Fay's London Underground, Tube-train-driving husband Dave and... Oh shiiiiiit, the other Uncle Dave. \n\nEd had told us that he had two uncles; Shit. Ed had asked two or three times if we wanted him to check the spellings and the names and everything. We both insisted that this was our thing and we had it covered and so long as he'd given us all the names we had it covered. He'd checked his list, twice, kissed his beloved Izzy and left us to write and invite and Izzy had typed into her iPad. \n\nUsing the same list, Izzy had created Facebook events, one for the church and reception and another for the evening and had copied in everyone to that also.\n\nPaul had mentioned West Sussex; I had handwritten all of the envelopes while Izzy had hand-written the cards in her perfect script, passing them to me while slipping in a pre-paid RSVP.\n\nI had no memory of any of the forty or so cards going to West Sussex.\n\nEd and Izzy looked so happy, and there was no way I was going to discuss this with either of them just in case... just in case we'd left out some of Ed's family. I was heading for my room and a check of the file that Izzy had brought and left there seeing as the party was moving out of the hall while the tables were cleared and I took a breath. I'd taken the Idiot Ex to one side and asked him to tone down the 'cheery cheeky cockney' bit just for Izzy and he cackled and said that his 'Bella' wouldn't 'ave 'im any uvver way'. I fucking bet she wouldn't, so I walked away from him and headed to the foyer and the stairs to my room while the furniture was moved around.\n\n\"Gentlemen, unless you all stop this right now, I will be calling the police...\" said a slightly raised well-spoken voice.\n\n\"Call the police,\" said an angry voice. It was too posh to be one of mine and I hoped to Christ it wasn't one of the Idiot Ex's mates that had turned up and would be making a fool of themselves before the party had even started, \"Call them and tell them that one of your security men have just pushed my son down the stairs!\"\n\nI stopped and turned at that.\n\n\"Look,\" said the sort of accent I recognised, and I knew who it probably was, \"You ain't on the list so you ain't fuckin' comin' in -- geddit?\"\n\nOh fuck; the angry man has said 'security men'. This hotel didn't have them and that cold feeling started to creep up my spine again; this was genteel Surrey and they wouldn't employ a couple of 'diamond geezers' that sounded like they'd just stepped 'off the barrow' at the local market. \n\nI snuck to one of the large bay windows and peaked around the curtain and saw a tall red-faced guy snarling at the bottom of the stairs, while another tall young man was sat on the bottom step rubbing his backside with one hand and wiping his wet face with the other, with white dust all along the back of his ill-fitting blue jacket. I thought I could see faint traces of blood in his fair hair at the back. \n\nI emptied my glass of wine and thought on how I could check on who this man was that was creating such a scene on my lovely Izzy's big day.\n\n\"Please,\" said the angry man, \"find the Father of the Groom, his name is Paul Taylor, tell him I'm here. I've been messing around for over four hours now and I've had enough!\"\n\nNot one of 'mine' then, thank fuck...\n\nThe hotel receptionist apologised but said that until the evening reception began, his absence from the list precluded him from letting him in, the Father of the bride was most specific.\n\nOh shit, the Idiot Ex was involved, what now?\n\n\"Yeah,\" said one of the barrow boys, \"Now why don't you do what the man says an' fuck off.\"\n\n\"Do you know what?\" said he angry man, \"I've had enough of this crap, I'm taking my son and I'm going home and calling the police; when one of you knobbers finally sees the father of the groom tell him that Dave his brother was here...\" I nearly dropped my glass, \"and tried for almost half an hour just to get into his nephew's wedding that he was never told about, that my sister-in-law insisted I drive across country to get here for, but then couldn't get past the two fucking in-bred Chavs that he chose to put on the door!\"\n\nOne of the in-bred chavs stepped down from the raised steps and took a pace towards the angry man. Oh fuck, it was Carl, the driving licence free, robbing, assaulting, one-time prospective suitor of Izzy and Idiot son of the Idiot Ex's best mate Brian, which meant that the other in-bred chav must have been him. The Idiot Ex had spent most of Izzy's mid-teenage years trying to set her up with this fat, charmless oaf with the sensibilities of a water buffalo and a similar intelligence level, makes sense that he'd invite him to her wedding after all...\n\n\"Oh please, just push your luck fuckhead,\" said the angry man raising a fist, \"you've hurt my son, just give me a fucking excuse...\" Carl stepped down and saw that angry man was head and shoulders taller than him and took a pace back and his Dad Brian came into view next and before I knew it I was out of the door and calling to Brian and Carl to get back inside.\n\n\"Les said we woz to stay on the door Sammy,\" he said.\n\n\"What?\" I snarled.\n\n\"Les said he won't 'avin no fucker messin' up Izzy's wedding so he give me and the boy a pony each to work the door for 'im tonight.\"\n\nLes the Idiot Ex; this just screamed Les. Trust him to treat one of the nicest country house hotels in the Home Counties like it was some sleazy club that needed to stop drunks and gate crashers getting in. I'd needed Google Maps just to find my way here. \n\nAlways the Idiot Ex, always Les, always had to drag things down to his level, down to the nasty, boorish, Idiotic, uneducated fuck-up that he'd never been able to step up from. Les didn't just love his working class... no criminal class roots -- he revelled in them.\n\nShitty damn. All of Izzy's new family, not one of them had ever seen the inside of a police station other than to report a crime, suddenly having to deal with the family and friends of someone that thought he was stepping in the shoes of Ronnie, Reggie and Mad Frankie and all the other traditional London villains he so aspired to.\n\nA marked, four-wheeled drive police car pulled onto the grey gravelled drive and I thought I'd die. \n\nFortunately the wedding party was going on to the rear of the hotel and the extensive and beautifully kept grounds. The guests for the evening celebration would start to arrive in an hour, so I had that long to sort this shit out and try and calm down angry Uncle Dave and not upset Izzy and Ed, or Paul and Gwyn.\n\n\"Brian, Carl, inside,\" I said using my angry parent voice.\n\n\"Oh no,\" said Angry Uncle Dave, \"Those savages aren't going anywhere until the police have taken some names and addresses.\" \n\nTrue to form, Brian and Carl had taken a step back into the hotel reception as soon as the police car arrived.\n\nThe hotel assistant manager stepped out onto the drive to talk to the police officer, it was obvious that they were acquainted. He pointed up into the foyer and I heard him whisper 'Dumb and Dumber over there' then across to angry uncle Dave and his red-eyed son now rubbing the back of his head that closer up was definitely wounded.\n\nBrian and Carl folded their arms over top of their fat bellies, adopted a jutting bottom lip and looked more like the bull terriers they both owned.\n\nAngry Dave calmed slightly and pointed at the Idiot Ex's mates and indicated the dust on his son's clothes and the damage to the back of his head and snarled at Carl -- who grinned.\n\nThe police officer called on his radio and sent the assistant manager on his way and began some furious note taking in his pocket book. He stuffed the book in a pocket on his body armour and stepped up.\n\n\"You,\" he pointed at Carl, \"don't be a smart arse, you are in enough trouble as it is.\"\n\n\"I ain't done nuffink,\" said Carl with folded arms and a look of jolly, self-contented, self-righteous 'you can't get me' ambivalence he'd probably used with the police a hundred times before.\n\n\"Yeah!\" said best mate Brian taking some confidence from his bull terrier of a son, \"It's 'is word 'ginst ours, there's two of us!\" He raised his shaved eyebrows and wagged a warning finger at the policeman as if he had the Independent Police Complaints Commissioner on speed dial.\n\n\"We'll see what the CCTV shows,\" said the police officer, really not bothered about the IPCC quite yet and not even looking up from his notes.\n\n\"What... CCTV... no one said there was CCTV?\" said Carl, and he looked around for it.\n\n\"Up there dickhead,\" said Angry Dave.\n\n\"Now then Mr Taylor, that isn't going to help.\"\n\nCarl and Brian both lost the bull terrier look and actually started to look slightly concerned.\n\n\"We ain't hanging around to be set up by this fucker...\" said Brian picking up the grubby green bomber jacket he habitually wore, hanging from and completely ruining the look of the white painted railings around the porch and foyer area.\n\n\"Stay where you are Mr Lind,\" said the police officer with a sigh just as a second police car and a paramedic car arrived.\n\nOh fuck, what now. The time was passing slowly and I had visions of any number of Izzy's mates from her nice job and her nice new family seeing her 'old family' being carted off by the law.\n\n\"So Mr Lind, I assume that you are both registered with the Security Industry Agency, only I don't see your badges.\" The policeman put a hand on the still sat young man's shoulder and smiled at him.\n\n\"Oh... well,\" said Brian, \"Well we ain't SIA registered see; we don't do much door work, well not enough to warrant all that buggering around wiv' cards an' that,\" he had one of those embarrassed and forced 'machine gun' laughs - 'Heh-heh-heh-heh-heh-heh!'\n\n\"The assistant manager there said the Father of the bride brought you in because you are qualified door stewards.\"\n\n\"Well yeah, we both does some door work like, but we don't do it for a livin'. We just does a bit of security like, for mates and that, and they gives us money for it.\"\n\n\"Yes, like a door steward does, you do door work and someone pays you for it. That's what I call 'being a door steward',\" said the policeman like he was talking to an Idiot; which in this case he was.\n\nThe assistant manager returned with a disc and handed it to the first police officer,\n\n\"It's all on there Mac,\" he said, \"sound isn't brilliant but you can make out all of the words.\"\n\n\"But...\" said Brian and Carl as one.\n\n\"In the car please,\" said the officer, \"you too Mr Taylor, that car over there. We'll need your son to come along as well.\"\n\n\"He needs to be checked out by the medic first officer,\" said Angry Dave, \"and he's only just twelve.\"\n\n\"Really?!\" said the policeman in shock at the giant boy with tearstained cheeks. I suddenly remembered the names on Ed's original handwritten list, Dave, Amy and Christopher; Wife Paula had died some years before after a long battle with Leukaemia. \n\n\"What's your name mate?\" said the policeman gently. The very scared boy's bottom lip just wobbled.\n\n\"Christopher Andrew,\" said Angry Dave, not being angry for a moment.\n\nThe Policeman dropped his head,\n\n\"Hello Christopher,\" he said with a smile.\n\nThe boy managed to smile back,\n\n\"'Hello,\" he said trying hard to smile.\n\n\"My name is Mac,\" said the policeman.\n\n\"Hi Mac,\" said the boy with the same grin but it wobbled a bit with his bottom lip again.\n\n\"Can you tell me what happened?\"\n\n\"He hit me,\" said the boy, working so hard not to cry, still with a hand on the back of his head and just stopping his bottom lip from trembling, and now looking a little nervous and up to his Dad for reassurance.\n\n\"It's alright mate,\" he said, \"Auntie Gwyn will look after you.\" He turned to me, \"Look, do you know Paul and Gwyn, they're the Ed's M...\"\n\n\"Yes,\" I said butting in from my place on the steps, \"I'm Izzy's mum... I'm Ed's new mother in law in fact.\"\n\n\"You're...\" he stopped himself from getting angry, \"you mean you've been watching me all this f.. all this bloody time and...\"\n\n\"Mr Taylor!?\" said the policeman with a warning inflection.\n\n\"Oh fuck!\" I almost said, this was not going to end well."
    ],
    "authorname": "Androgynousother",
    "tags": [
        "london slang",
        "masturbation",
        "humour"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-idiot-the-farmer-and-me-ch-01"
}