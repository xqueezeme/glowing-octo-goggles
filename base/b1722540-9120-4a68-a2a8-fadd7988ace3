{
    "title": "How Girls Night Changed My Life Ch. 05",
    "pages": [
        "I woke the next morning to find myself alone in bed. I looked at the clock to find it past ten in the morning. I never sleep in. The previous night really took it out of me. I yelled to see if anyone was home. No response. The girls must have left me. \n\nI pulled out my phone to see a text from Lexi. She sent it when they left the house. It said, \"Holly and I are going shopping. Be back in a few hours. Sleep good honey. Love you.\" I was excited to see what they were shopping for. They mentioned the previous night about shopping for anal prep supplies.\n\nI meandered out of bed to the shower and then the kitchen. Once finished I was ready for the girls to get home but I figured I still had a couple hours. I went to the backyard to make sure everything was clean from the party. Other than empting the trash and a few pieces of clothing, the yard looked great. I decided to get some sun and relax till the girls got home. \n\nMy full body tan was coming along nicely. The parts that used to be covered by a swimsuit were getting close to matching the rest of my body, benefits of being a nudist. \n\nI was watching TV and was in my own world when I heard a gasp and a women's voice say, \"I'm sorry, oh my gosh, I'm sorry.\"\n\nI turned to see my neighbor Carrie already walking towards the gate with her head down.\n\n\"Carrie wait.\" I stood up. \"There is no need to apologize. Its really not a big deal.\" I said.\n\n\"I keep seeing you naked and I walked in your private backyard. I'm sorry, all I needed was my cover-up I left here yesterday.\" Carrie said.\n\n\"Quit apologizing. I told you yesterday that you could come over whenever you wanted. I also warned you of our possible nudity.\" I said.\n\n\"I know, its just a little shocking. I thought you were joking about all the naked stuff.\" Carrie said.\n\n\"No jokes Carrie. Lexi and I are naked quite often. Some of our friends join in as well. Were kind of nudist now. I can put a towel on if you are uncomfortable.\" I said.\n\n\"No!\" Carrie said a little too emphatically and then paused thinking, \"I am kind of intrigued by nudism and you're not to bad to look at.\"\n\nCarrie's body seemed to relax as the initial shock wore off. Her eyes kept moving all over my body.\n\n\"Thank you.\" I said.\n\n\"Your friends join in as well?\" Carrie asked.\n\n\"Yeah a few of them.\" Last night being the first time, \"It has been fun being so free.\" I said.\n\n\"So Lexi and you are okay with other people seeing you naked?\" Carrie asked.\n\n\"Yeah. I don't think you're ready for the whole story but lets just say Lexi and I made major life changes about a month ago. We have become much more open and free when it comes to our lifestyle. I mean a month ago Lexi would have never worn a bikini to a party. We had an awakening to how fun life could be.\" I said. Any person would read into my comments.\n\n\"I can see that. I must say I admire the two of you. I have spent the last fifteen years of my life in quiet desperation. Seeing and talking to Lexi and you yesterday really opened my eyes for the better.\" Carrie said referencing her terrible marriage.\n\n\"Good! If there is ever anything we can help you with please call. If you are bored at home just come over. Honestly you seem like an amazing person and you deserve some fun.\" I said reflecting on her life story she told me.\n\n\"Thanks and I will definitely take you up on the offer. I spend a lot of time at home by myself.\" Carrie said.\n\n\"Great, Lexi is out shopping with a friend right now. I could use some company if you want to lay out with me? You don't have to go naked and I can put on a suit. Whatever makes you the most comfortable?\" I said.\n\n\"Sounds fun Steve. You can stay like you are. I think I will wear a suit though. I know I joked about it yesterday but no one except on the rare occasion my husband has seen me naked in the last twenty years.\" Carrie said.\n\n\"I'm sure you look amazing naked. Maybe one day I will get you to be a nudist.\" I said.\n\n\"Maybe we should start at one of your top or bottom parties.\" Carrie joked.\n\n\"Deal! I will set one up later today.\" I said.\n\nCarrie laughed and then said, \"Are you sure your wife is okay with just the two of us hanging out? Especially with you in your current state.\" Carrie said worrying about hanging out with a naked married man.\n\n\"I know she's fine with it, but lets call her to be sure.\" I said as I grabbed my phone.\n\n\"You're seriously calling her?\" Carrie asked nervously.\n\n\"Yeah, we have no secrets and I want you to feel comfortable.\" I said.\n\nLexi answered the phone quickly and I put it on speakerphone. I explained the situation and how Carrie walked in the backyard. Lexi was laughing and thought the situation was great. Carrie on the other hand was turning red in embarrassment.\n\nThen I said to Lexi, \"Would it be okay with you if Carrie and I laid out by the pool together.\" I knew her response but the question was for Carrie\n\n\"Can Carrie hear me?\" Lexi said\n\n\"Yes it has been on speaker the whole time so I have heard everything.\" Carrie said.\n\n\"Great then you need to know that I am perfectly fine with you and Steve hanging out. Have fun. I trust Steve and so should you. If he says I would be okay then its okay. Steve doesn't lie.\" Lexi said.\n\n\"Just so I get this right. You are fine with me laying out with your naked husband?\" Carrie said.\n\n\"Yep, I am completely fine with it. He's not bad to look at either in that department.\" Lexi said.\n\n\"You're right about that.\" Carrie said blushing, as she looked me up and down.\n\n\"Great! You guys have fun and we should be home in a couple hours.\" \n\nWe said goodbye.\n\n\"Do you realizes how cool your wife is?\" Carrie said.\n\n\"Yes! She's pretty great.\" I said.\n\n\"Let me run home and change and then I will be right back.\" Carrie said.\n\n\"You don't have to do that. We just bought Lexi a bunch of brand new swimsuits. You can pick one you like and keep it. My treat.\" I said.\n\n\"Thank you. I need a new swimsuits.\" Carrie said.\n\n\"Follow me.\" I said\n\nI took her to our master closet. Lexi had hung all of the new swimsuits up. Almost all of them still had the tags on. Between the ones Lexi bought and the ones I bought, there must have been more than twenty.\n\n\"Pick anything you want. Lexi has a variety to choose from and you can probably guess my favorites.\" I said as I held up a very skimpy thong.\n\nCarries eyes went big and then said, \"Let me look through them.\"\n\n\"I will meet you back at the pool.\" I said and left.\n\nCarrie came out five minutes later. She had not picked the suit I had chosen but one with a little more cloth. It was a colorful bikini that looked great against her light olive skin. Different neon colors covered the top and bottom. The top was a triangle and strings covering her modest size breasts. The bottoms were low cut in the front, with inch thick straps going to the back. I recognized the bottoms from the suits I bought. If I remembered right, the back was pretty small. \n\nI caught a glimpse of her ass when she was getting into a lounge chair. The bikini bottoms were very cheeky. They were not thong but showed a good amount of her toned ass. She was taller and skinner than Lexi so her ass was not as big. Her model type ass still looked full and round. She was not flat assed like you see on skinny runway models. She had curves and a nice crease at the bottom.\n\nMy dick took notice and started to grow slightly. We sunned our fronts. It was a great sight watching her put lotion on. We talked consistently for about an hour. We got along great and Carrie really enjoyed herself. Then she flipped to sun her back.\n\n\"Do you need any lotion on your back?\" I asked.\n\n\"Oh yes, that would be wonderful.\" Carrie said.\n\nI sat on the edge of her chair. It was a little weird at first to be naked this close to her but that quickly went away. I spread a good amount of lotion on her back. I covered every inch from her neck to her lower back. I made it into more of a massage then simply applying lotion. Carrie approved.\n\nOnce her back was done I moved down to her legs. I started at her calves and worked my way up. I was not going to push the line without consent because I did not want to ruin what we had. \n\nI stopped about mid thigh and said, \"I guess I will stop there.\" \n\n\"Oh, I guess that's good.\" Carrie said disappointed.\n\n\"Unless you want me to keep going?\"\n\nCarrie smiled and said, \"Sure, I mean if Lexi would be okay with it.\"\n\nI didn't answer but put more lotion on my hands and continued on from where I left off. I took my time and little by little I made it to the bottom of her ass. There was not an ounce of fat on her ass. It was the firmest ass I had ever felt. My hands kneaded the lotion into her ass. I stopped myself from trying anything further.\n\nI settled back on my chair, copying Carrie by tanning my back now. \n\n\"Thanks Steve. That was very relaxing.\" Carrie said.\n\n\"It was my pleasure.\" I said.\n\n\"So would you like lotion on your back now?\" Carrie said.\n\n\"I would love some.\" I said.\n\nCarrie was bolder. She straddled my waist and squeezed a healthy amount of lotion on my back. I jump from the cold in surprise. Carrie then worked the lotion into my skin with her delicate hands. She was soft and tender. My cock grew instantly. \n\nCarrie continued down my back. She moved to kneel between my legs. My hard cock was only inches from her knees and clearly visible. Then she grabbed the lotion and squeezed more lotion right on my ass. She rubbed my ass. It was strange to feel her squeezing my cheeks and somewhat parting my ass. I know that's what I would do to a girl, but to have a girl do it to me was weird. She continued on, even getting close to my asshole. It felt amazing but odd.\n\nCarrie spent most of the time on my ass and then finally moved down my legs. I was so turned on that I wanted to rip off her bikini bottoms and fuck her but I controlled myself. Hell, by her actions I figured she wanted me to. She moved back to her chair and I was left with a hard dick and nothing else.\n\nBack in her chair she sunned her back and looked at me. My dick was throbbing and I could not handle the pressure of lying on my stomach. I forced to turn over and Carrie got a full view to my erect penis. Her eyes were glued on him and her mouth slightly open in shock.\n\nMy flaccid cock is still pretty good size but I really grow for an erection. \n\n\"Carrie?\" I said after she stared for a good twenty seconds.\n\n\"Sorry Steve. You are quite large down there.\" Carrie said.\n\n\"I am?\" I played dumb.\n\n\"You damn well know you are. I was across the street when I first saw you and today you have not been... you know... hard... very impressive Steve. Can I ask how big it thing is?\"\n\n\"Thank you and yes. He is about a ten incher.\" I said.\n\n\"Wow. That is definitely the biggest penis I have ever seen.\" Carrie said.\n\n\"Do you want a picture so you don't have to stare so hard?\" I joked.\n\n\"Sorry I am just a little shocked.\" Carrie said turning a little red.\n\n\"I'm just kidding, please look as long as you want. You want a closer look.\" I said pulling her lounge chair right next to mine. \"Or even touch it.\" The last part came out without me realizing what I was saying. However I waited her response.\n\n\"Umm...\" Carrie said while she leaned forward to look closer. \"Sure...\" was all she said. \n\nCarrie was in a trance as her hand reached out and touched my cock. At first only her finger traced from the tip to the base. Then slowly she became more comfortable. Her fingers slowly closed around my shaft. Her petite hands could not circle the shaft.  \n\n\"Oh my gosh what am I doing?\" Carrie shrieked as her trance broke and she saw my cock in her hand. \"Your married.\"\n\n\"Carrie if you don't want to touch me that is fine but you are doing nothing wrong. Lexi is fine with this; we could even call her again. Don't feel guilty for me. We are only having fun nothing more.\" I said.\n\nCarrie took a few deep breaths and then spoke saying, \"Sorry I freaked out. Touching my married neighbor scared me. Especially when your wife has been so sweet to me.\" Carrie said.\n\n\"As I said earlier Lexi and I have an open lifestyle so nothing you have done today is wrong. I know you are married and I don't want to do anything you're not comfortable with.\" I said.\n\n\"Oh screw my husband. He's an asshole and cheats on me constantly. You promise Lexi is okay with this?\" Carrie said.\n\n\"Absolutely.\" I said.\n\nCarrie reached back out and took hold of my cock. She admired my member as she simply held me for a few minutes.\n\n\"This is seriously the best penis. It feels like it weighs a few pounds.\" Carrie said.\n\nI stood with my dick only one foot from her face and said, \"That's why my erection doesn't stick straight out. Always points towards the ground.\"\n\n\"I don't know what to say. Rarely am I left speechless. I have never seen anything like that.\" Carrie said.\n\nMy hopes of her opening her mouth and sucking we faded. She made no attempt and I was not going to push. \n\nI sat back down and said, \"Feel free to touch and hold him as much as you want.\"\n\nCarrie must have liked my statement because her hand was back in my lap, holding my cock.\n\n\"Now, my only question is, when are you going to lose the bikini and join me?\" I said.\n\nCarrie thought for a minute then said, \"I'll take off my top but that's all.\"\n\n\"Awesome. I was willing to beg.\" I joked.\n\nCarrie pulled the ties of the bikini. The triangle fabric fell from her breast and her entire chest was exposed. Carrie had mentioned she did not like her breast but she was wrong for thinking so. They were modest sized boobs, probably a B or a small C. They were perfectly round with only the tiniest sag. Her nipples were a medium shade of pink and small, about the size of a nickel. \n\n\"You are beautiful Carrie. Your breast look amazing.\" I said as I stared\n\n\"No there not. They are too small. I have always wanted bigger. I've always wanted a boob-job.\" Carrie said.\n\n\"No they perfect and they look amazing. They look great with your body. Honestly they are gorgeous.\" I said.\n\n\"Thanks but I still don't believe you.\" Carrie said.\n\nWe continued to argue in good fun until the back door opened and out walked Lexi and Holly. Carrie quickly let go of my cock and jumped in surprise, trying to cover herself. The natural reaction any woman would have if caught lying out topless with another woman's husband and touching his cock. Carrie kept glancing at my cock, hoping she did not get caught touching me.\n\nLexi was the first to speak, \"It's wonderful to see you again Carrie and I am so glad you kept Steve company.\"\n\n\"No problem.\" Carrie said shyly. She was still covering herself with her hands\n\n\"No need to be covering yourself Carrie. We are all friends. I think I will join you two. Holly do you want to lay out too?\" Lexi said.\n\nHolly was in a loose cotton t-shirt and jean shorts. Quickly her shirt was over her head. No bra was underneath, only bare tits. Lexi followed with pushing the straps of her sundress off her shoulders. The dress fell to the ground. Lexi only had on a small thong.\n\n\"Much better!\" Lexi said, \"As you can tell we like to be naked and I am so happy you have joined us. You can keep touching Steve. I hope he didn't pressure you too much.\"\n\nCarrie first turned red, realizing she got caught. Then she understood that Lexi was serious, she relaxed. Carrie moved her hands and her body became less tense.\n\n\"Sorry for touching him.\" Carrie said to Lexi.\n\n\"Sorry? Steve has a gift and I love sharing it. Honestly I want you to keep touching him.\" Lexi said.\n\nCarrie looked at her skeptically but Lexi only smiled and nodded. Carrie reached back out and took hold of my throbbing member.\n\n\"I am surprised how fun this all is.\" Carrie said, \"I think I am going to like being friends with you guys.\" Carrie said.\n\n\"It only gets better. Pretty soon you will be walking around naked all the time.\" Lexi said.\n\n\"You're probably right.\" Carrie said.\n\n\"Did you guys get back early?\" I said.\n\n\"No. It's past one.\"\n\n\"Wait, really? I have to go.\" Carrie said.\n\n\"Why?\" Holly asked.\n\n\"My daughter is coming to visit for a couple weeks and she'll be here in less than an hour.\" Carrie said.\n\n\"If you don't have plans every night we could all go out to dinner? No nudity.\" I said.\n\n\"Yes I will call or come over tomorrow.\" Carrie said.\n\nThe girls all hugged goodbye, topless. Which was very hot. I hugged Carrie and my erection rested nicely against her bikini bottoms.\n\nOnce Carrie left Lexi stood and said, \"Holly and I need about twenty minutes. Go shower in the guestroom.\"\n\nNow I was really intrigued. What were they planning? I showered quickly and then walked down the master. The door to the room was open but the bathroom door was closed. The shower was running. My preparation took only five minutes so I was left to wait. I decided to go downstairs to get a snack and watch TV. \n\nIt was a good half hour later when I heard the girls coming down the stairs. They were worth the wait.\n\nBoth girls were wearing matching lingerie and high heels. They had on light blue lace teddies. Not much was left to the imagination. The lingerie was cup-less so breasts were exposed. Through the lace I could see their tan skin. \n\nAt the bottom of the steps, both girls spun. Their backsides were more impressive. The lingerie had tiny strings crisscrossing their backs. I was expecting a thong but it was not. The material split between their legs to either side. The material framed the outside of each cheek, leaving the crack totally exposed and open. Not only were they giving me easy access to their puckered holes but also they had started without me. Holly and Lexi had matching anal plugs with a light blue jewel on the end.\n\n\"Could you turn on the music Steve? It should be on the right song.\" Lexi said. They had planned out every detail of this event. The music was slow but had a great rhythm.\n\nThey walked slowly to the couch where I was sitting, swaying to the music. I was on the edge of my seat, ready to pounce. However the two women stopped just out of reach. They held each other and started a seductive dance. Their hands roamed each other, as their bodies were pressed hard together. The dance became more naughty as they went from kissing, to sucking on tits, to rubbing pussies. \n\nThen Holly dropped to her knees, spreading Lexi's legs. The lingerie ended just above Lexi's slit, leaving her pussy exposed. \n\nI could not be a bystander any longer. I went to my knee's, opposite Holly. I played with Lexi's ass. Her ass was divine, smooth and soft in all the right places. I kissed every inch of her. I ran my tongue down her crack and played with the plug. \n\n\"Lick me... fuck... I am cumming... oh fuck yeah.\" Lexi yelled.\n\nI could feel Holly pushing harder against Lexi. She must have picked up the intensity. I grabbed the butt plug and started pulling and twisting. \n\nLexi enjoyed our actions. Towards the end she lost strength in her legs and collapsed. She fell between Holly and I.\n\n\"Wow!\" Was all Lexi could mutter. \n\nHolly and I looked at her then each other. We made out over the top of Lexi. The taste of Lexi was strong on her lips.\n\n\"I love your surprise.\" I said to the both of them.\n\n\"We haven't gotten to the surprise yet. What we just did is normal daily life now. What is to come is a treat.\" Lexi said seductively.\n\n\"What is it?\" I asked giddily.\n\n\"Should we tell him?\" Holly asked Lexi.\n\n\"Sure, he has waited long enough and we don't want to run out of time.\" Lexi said.\n\n\"Okay Steve this afternoon delight is dedicated to you and your love for ass. We have a couple hours and the only hole your dick is allowed in is our butts. No pussy or mouth, just ass.\" \n\nI was ecstatic. \"Seriously?\" I asked. I knew they were serious but the idea of fucking buttholes for hours was too much to believe.",
        "\"Yes honey. You have our ass's all afternoon to do as you please with.\" Lexi said.\n\n\"Awesome! How should we start?\" I said.\n\n\"You tell us. You're in charge. We will do whatever you want.\" Lexi drew out the whatever.\n\nI thought for a minute.\n\n\"Both of you kneel on the edge of the couch, side by side.\" I said\n\nThe girls plugged asses were up in the air and pointed right at me. I had hours so I was going to take my time to give their buttholes the attention they deserved.\n\nI kissed and caressed every inch of their ass's. Then I took hold of the plugs. With one in each hand I played. I would pull and twisted them. I fucked each girl with the plugs. Holly was noticeably looser than Lexi. Lexi's ass held the plug tightly, while Holly's ass was accepting and open. Plainly it was from her anal training.\n\nHolly's ass was ready for a dick. Lexi needed more encouragement.\n\n\"Blow me Lexi and make it wet. Holly's ass is ready for my dick.\" I said.\n\n\"No.\" Lexi said.\n\n\"Why?\" I asked back confused.\n\n\"Only hole for you is our assholes. No exceptions.\" Lexi said.\n\n\"Okay then we do it another way. Lick Holly's asshole and make it really wet.\" I said.\n\n\"Good solution honey.\" Lexi said with a smile.\n\nKneeling on the couch, Lexi licked Holly's spread ass. Lexi took her time and left plenty of moisture behind. Lexi then grabbed me by the base of my penis and directed my cock into Holly. I slid past her sphincter easily. The thin skin of her ass stretched around my shaft and accepted every inch of me. \n\nOnce in, I fucked her. Her ass was just as good as I remembered. The soft and tight walls were incredible. Her tender and full ass felt amazing as I would bottom out and push against her. \n\nLexi joined me in admiring the amazing view, \"This is the hottest thing I have ever seen.\" Lexi said.\n\n\"You like watching anal, don't you?\" I said to Lexi.\n\n\"Umm huh.\" Lexi mumbled.\n\n\"Just wait till you see her ride me. It's even better.\" I said.\n\nLexi only smiled in response as she cuddled up next to me closer. Lexi had one hand on Holly and the other on me.\n\n\"Are you sure about no other holes?\" I whispered to Lexi.\n\nLexi nodded her head and then asked, \"Why?\"\n\nI had visions of putting Lexi's face right next to Holly's ass, then pulling out of the anal canal and ramming my cock down Lexi's throat. Repeating the process over and over. \n\nI only smiled and shrugged my shoulder. Lexi stared at me with ideas running through her mind.\n\nI was ready to get Lexi more involved. She stood on the couch with Holly between her legs. Her ass was at eye level with me and she bent forward, grabbing the back of the couch.\n\nMy favorite ass was inches from my face. Lets just say I got distracted and stopped fucking Holly. Holly moaned in confusion, until she looked up to see Lexi above her. Holly took control and did all the moving herself. She fucked me, pounding back on my cock. \n\nNot thirty seconds later did she fuck herself to orgasm. Her pace quickened and her screams were loud. Holly never stopped after her orgasm. She continued to fuck me with a determination to get me to cum in her ass.\n\nLuckily for me I was distracted so I lasted through her pounding. My distraction was my wife's amazing ass. I attacked her crack with a tongue-lashing. Lexi smelled of some tropical fruit and tasted sweet. Whatever the girls did in the bathroom worked. \n\nI ate Lexi's puckered hole. The more I worked her ass the more welcoming it became. Her ass opened as I tongue fucked her. After I did everything I could with my mouth, I switched to my fingers. I skipped one finger and pushed in two. Lexi took them easy. Then I pushed a third.\n\nLexi's ass was becoming much more accepting. Don't get me wrong, she was still super tight, just not nearly as tight as before. Lexi could no way take a cock cold turkey like Holly but with a little warm up her ass was ready. \n\nLexi's ass was all consuming in my mind until I felt a stir in my genitals. I looked down to see Holly's ass twerking on my cock. When I say twerking I mean what you see in rap videos where the girls ass's are bouncing incredibly fast. Holly could have been in a rap video with how she was moving. Her ass might have needed to be bigger though. For me, I could not believe the sensation and visual stimulus. \n\nLexi had turned to see the action. We were both amazed. Holly was working hard as sweat beading on her skin. I had only a few more seconds left before I exploded. \n\n\"Here it comes.\" I proclaimed\n\n\"Fuck him Holly. Keep bouncing that ass and fuck him.\" Lexi encouraged. \n\nI erupted and Holly kept twerking as my seed was dumped down her canal. Her asshole squeezed every drop of cum out of me. Holly was exhausted and she collapsed forward. Lexi was about to blow me when my dick popped out of Holly's ass. However she caught herself inches from my dick. \n\nI was a little disappointed till I realized I still had a hard dick and another ass to fuck.\n\nI lay on the ground and directed Lexi to my lap. She straddled my waist and then bent forward to kiss me. I told Holly to take make sure Lexi was ready. Holly got behind Lexi and ate her ass. Then I felt a liberal amount of saliva dripping onto my cock. Holly told Lexi to sit up. Holly then grabbed my dick directed it towards Lexi's perfect ass. \n\nHolly did all the work. With a firm grasp on my cock and easy access to Lexi's ass, she positioned us perfectly. With my glans in perfect alignment with the ass, I pushed in. Lexi was so tight but with little struggle I pierced her sphincter and slid in.\n\nWith one hand Holly rubbed Lexi's pussy, and with the other hand she caressed my balls. \n\n\"You guys look so fucking hot.\" Holly said\n\n\"Fuck my ass! Fuck me harder Steve.\" Lexi said, \"Oh fuck yeah... I'm cumming... clit... harder...\" Lexi yelled.\n\nAfter Lexi's orgasm, my mind started racing to think of new positions to try. I had a couple hours and I was going to have my dick in an asshole in every conceivable way.\n\nI pulled Holly into a spooning position. Lexi guided me into Holly. Then Lexi lay next to Holly in kind of a laying sideways sixty-nine. Holly ate Lexi as Lexi ate Holly. \n\nLexi's mouth was so close to my cock and balls that I was begging for a little oral. Lexi thwarted all my efforts. I would slip out of Holly and run my cock up to Lexi's mouth but to no avail. Lexi would gently place my cock back in the asshole.\n\nI switched positions and partners again into a pile driver. Lexi loved the pleasure but was uncomfortable from my enthusiasm and the awkward way her body was bending.\n\nThen I put both girls kneeling on the couch. One girl was on top of the other, in a double decker position. Every few pumps I would switch assholes.\n\nWe moved locations. We went to the kitchen to use a barstool. Holly sat in the stool with her ass hanging off the back. I came in from behind and fucked her. \n\nWhoever was not being fucked would pleasure the other girl. Whenever there was an orgasm the other girl would clean the cum.\n\nBy the end I could not count how many orgasms we shared. We were exhausted, sweaty and starving. I felt like I ran a marathon but the best possible marathon you could imagine full of the best asses in the world.\n\nI could not thank my two favorite girls enough. They were making dreams come true. \n\nI felt bad for Holly. She still had to go to work. We all cleaned up and sent her on her way. Lexi promised we would come to the mall and bring her dinner for her break.\n\nIt was hard to stay awake after that but we made it to dinner. Once we got home Lexi and I were asleep before nine. I only stirred when Holly came back from work and her naked body spooned next to me.\n\nThe next day I got a text from Carrie. \"If you guys are free, would you like to come to dinner tonight? Bring Holly too.\"\n\nI immediately texted 'yes' back to Carrie. Unfortunately Holly had to work. Holly's schedule had me thinking. Between school and work she was too busy. I was going to find her a more flexible job that would give her more free time and make her better prepared for the future. I made plans to discuss Holly's future with Lexi and her. My company could have some openings.\n\nThat night Lexi and I walked over to Carrie's home. After a knock on the door, the most beautiful and striking young girl greeted us. Carrie's nineteen-year-old daughter Annie stood in the doorway. She was super friendly and inviting. Annie looked a lot like her mom. I would imagine Carrie looking the same at nineteen. Annie was dressed in a mini cocktail dress that showed off her perfect body. Annie was tall and slender. She had dark brown hair halfway down her back. Annie's face looked perfect, no flaws or imperfections. \n\nAnnie looked like world-class beauty that belonged on runways and magazines. The girls in the top fashion magazines or sports illustrated swim issue had nothing on her. \n\nFrom talking with Carrie I knew Annie dabbled in modeling but it was not her real interest. She lived in New York City so modeling was prevalent but her real interest was her education. \n\nWalking into the house, the smells were intoxication. Carrie went all out for our little dinner. She hired a professional chef to cook and a waitress to serve. \n\nCarrie was dressed in a more conservative yet sexy evening dress. Luckily Carrie told us to dress nice. I donned a sports jacket, collared shirt, slacks and shoes. Lexi wore a classy, form fitting mini dress. It showed off her athletic curves and cleavage.\n\nThe evening was great. The food was incredible. The conversations were smooth and easy. Nothing crazy happened but I learned I wanted to fuck both mother and daughter. I knew I had a good chance with Carrie but Annie was going to be difficult.\n\nLexi and I kept our lifestyle and nudity quiet but Carrie kept saying innuendo referring to sex and nudity. Annie's only reaction was a smile to her mom. It was as if Carrie already shared our lifestyle with her.\n\nLexi and I kept it clean and never gave in to the innuendos. Only dirtiness came from Carrie. In addition to the innuendos, Carrie was seated across from me. Within a few minutes of sitting down, her foot was in my lap, rubbing up and down the pant leg my cock was in. Lexi gave Carrie a smile and nod of approval when she noticed. \n\nEven though Annie was hanging out with people much older than herself, she enjoyed the evening. Mom and daughter were best friends. It was adorable. \n\n\"We should all hang out tomorrow.\" Annie said.\n\n\"Steve and I could probably take a half day at work. Why don't you and your mom come over for a swim in the afternoon and then dinner? We will have our friend who is almost your same age there too. Her name is Holly.\" Lexi said.\n\n\"Awesome. That sounds like fun.\" Annie said.\n\n\"The swim sounds great but your father will be home tomorrow night for dinner. It's the only night he is home while you are here honey.\" Carrie said.\n\n\"I live in the same city he is in ninety percent of the time and I never see him there. He never calls or asked about me but when I come home to see you Mom, he wants to act like a family for one night?\" Annie said.\n\n\"I know but we need to.\" Carrie said begrudgingly. \n\nThis was obviously a conversation they have often. Annie's non-existent father and Carrie's so called spouse was not a popular person. \n\n\"After tomorrow we have more than two weeks of just us.\" Carrie said to brighten the subject. \n\nWe skirted around the awkward part of the evening and got back to happier conversations.\n\nWe stayed much too late. Annie was passed out on the couch. The wine her mom let her drink must have gotten to her. \n\nCarrie walked us to the door. She gave Lexi a big hug and thanked her for the amazing and fun night. \n\nNext I got a hug. I already had a semi in my pants from the drinks and the beautiful ladies. There was no hiding my member when I hugged Carrie. She lingered longer than a friendly hug. When we parted Carrie was slightly biting her lip and staring at my bulge.\n\nLexi noticed immediately and said, \"Carrie look what you do to my husband!\"\n\n\"I'm sorry! I didn't mean to do anything.\" Carrie said like she was in trouble. It was a reaction any person would give in that situation but we were past that.\n\n\"Quit apologizing. You already have my approval.\" Lexi said.\n\n\"I know its just weird to talk about it.\" Carrie said as she kept sneaking glances towards my member.\n\n\"You want to touch him again don't you?\" Lexi asked.\n\n\"Yes!\" Carrie said simply.\n\n\"Tell me why and don't hold back.\" Lexi said.\n\nCarrie tried to look confident in a situation that clearly made her nervous. This was so far outside of what she would do in the past.\n\nCarrie cleared her throat and then said, \"Because I have been thinking about it constantly since I touched him yesterday. It has done something to me. I have had more fun this past week than the past ten years. I have felt like a new person. Plus Steve is fucking huge.\" Carrie stopped, shocked by her own words.\n\nThat was the first time I heard her swear but all three of us started laughing.\n\n\"Carrie I know we have told you this but I don't think it has really set in for you. You can touch or do whatever you want with Steve. You are welcome in our home. You are a true friend and we want to only become closer with you. Also I can't wait to fully convert you to nudity.\" Lexi said.\n\n\"Thank you Lexi. You guys have been amazing. I only wish we didn't waste all these years as neighbors. I will take you up on your deal. The alcohol might be speaking and I probably shouldn't say this but from only touching Steve I am more turned on then I can remember ever being.\" Carrie said, her comfort level increasing.\n\n\"Pull him out Steve and give her a tease to keep her interested. Be quick so Annie doesn't wake up and see.\" Lexi said.\n\nI pulled my cock out as Carrie was looking back towards the couch to make sure her daughter was sleeping. When she turned back around my dick greeted her. Carrie's hand went to my shaft and stroked me.\n\n\"I am going to be masturbating all night after this. Sorry shouldn't have said that either.\" Carrie said.\n\nLust and passion was filling her but quickly stopped when Annie made a groan from the couch. She was still sleeping but my cock was back in my pants in seconds, just in case.\n\n\"That's enough for tonight but you know where to find him. See you tomorrow.\" Lexi said.\n\nLexi and I were rearing to go after that little stroke session. I had Lexi's dress up to her waist while we were only a few feet away from the closed door. With no panties her bare ass and pussy could have been seen from any neighbor. It was dark and quiet so I don't think anybody got a free peek. \n\nBy the time we were in the street, Lexi had my cock out of my zipper and openly stroking me. I opened the garage but we couldn't wait any longer. \n\nI sat Lexi on the back of her car, spread her legs and went down on her right there in our open garage. The little light on the garage door opener made it easy for any onlookers to see in. It was late so most people in the neighborhood were probably asleep but the excitement of being an exhibitionist was incredible. \n\nI licked Lexi's delicious smooth pussy. Lexi liked the idea of being outside where we might be seen too, because her first orgasm started within thirty seconds.\n\n\"Lick my pussy baby. Make me cum on my car. Oh fuck!\" Lexi said not so quiet. \n\nLexi dropped to her knees after her orgasm. She had her back to the street and I was facing out right towards Carries house. \n\nI shed the rest of my clothes and stood completely naked. I pushed Lexi's dress off her shoulders, exposing her beautiful tits and leaving her dress bunched around her waist.\n\nI watched Lexi blowing me for a few minutes, my cock disappearing down her throat. I was so distracted from the blowjob that I forgot we were outside. I popped out of my trance and scanned the street.\n\nThe street was dark and quiet. I could see no onlookers from the street. Then my eyes went to the second floor of Carrie's house. In the window was the silhouette of a woman. There was just enough light in the room to show her features. It was Carrie, naked and staring right at us. \n\nI smiled and waved at her. Carrie's hand moved from her crotch to wave back at me.\n\n\"We have an onlooker honey. Do you want to give her a show?\" I said and motioned towards Carrie's window.\n\nLexi took a break from my cock to look up. \"Oh yeah lets show her what we've got.\" Lexi waved giddily at Carrie.\n\nLexi increased her intensity on my cock. I kept switching my gazes from Lexi to Carrie. I really couldn't see any detail with Carrie, only her hand moving between her legs.\n\n\"Keep going baby! I'm really close.\" I said.\n\nLexi put two hands on my shaft and started moving them in a corkscrew motion. Her lips were wrapped tight around the bottom of my mushroom head. She sucked and licked with great pressure. \n\nLexi was hitting all my sensitive areas and it was too much. \"I'm cumming baby!\" I said as I played up the fact of my orgasm for Carrie. \n\nI threw my head back and tensed my body. Lexi took my cum into her mouth. Once I finished spewing, Lexi turned towards Carrie with her mouth open showing cum. The distance was too far to see any cum but the act was clear. Lexi then swallowed and showed her clean mouth. \n\nEven with the distance I was pretty positive Carrie orgasmed at that moment. Her body movements were jerky and not fluid as they were before.\n\nLexi sucked me a few more times, getting any remaining cum and then said, \"Lets show her a good ass fuck Steve.\" \n\nI liked where Lexi's mind was. That was the wildest thing she could think of and she wanted to show Carrie.\n\nI bent Lexi over the trunk of the car. I took one last look Carrie and then buried my face between Lexi's cheeks. I licked her puckered star. With our regular ass play now, her ass loosed quickly.\n\nI left plenty of moisture on her ass. I then stood behind her and placed my cock at her opening. I let one last glob of spit fall down her ass crack, and then I started to push in. With little trouble, my cock pushed into her canal. I plunged all the way in, till my balls were touching her pussy.\n\n\"Make sure Carrie can see good.\" Lexi said. She was always thinking of others. \n\nI realized our position was perpendicular to Carrie, making the angle for Carrie not the best. Really it probably looked like I was in Lexi's pussy and not her ass. \n\nI repositioned Lexi, pointing her ass more at Carrie. Then I stood more to the side. My angle was not the best for fucking but for someone viewing it was the best we could do.\n\nWe fucked like that for a few minutes. Carrie continued masturbating the whole time. Lexi and I were ready for a new position though.\n\nI sat on the trunk of the car and leaned back on the window. Lexi placed her knees on either side of me in a cowgirl position. Lexi directed my cock back into her ass. I spread her cheeks as wide as I could. \n\nIf our anal fucking was not evident before, it was clear now.\n\nLexi did all the work and it felt amazing. \n\nI tried to look around Lexi to see Carrie. Carrie changed positions. She had a foot up on the windowsill and her arm was moving furiously.\n\nThat only fueled my desire. I tried to find leverage to match Lexi's pace. \n\nI was close to cumming until Lexi decided to change positions. She turned around into a reverse positioned. Lexi was then looking right at Carrie. Both women were rubbing their pussies. \n\n\"I'm cumming Steve! Fuck my ass harder babe... fuck me harder!\" Lexi said loudly. If any windows were open or people outside, they would hear Lexi.\n\nLexi came down from her orgasm and I was getting super close. Lexi must have sensed my impending orgasm.\n\n\"How do you want to finish Steve?\" Lexi asked.\n\n\"I don't...know. Whatever...oh fuck...you want.\" I mumbled, trying not to blow my load.",
        "\"I want it on my face. Shoot your cum all over my face.\" Lexi said as she was dismounting me.\n\nI stood in front of my kneeling wife and stroked my cock for our onlooker. I could feel the orgasm coming and I knew it was going to be big. Lexi sat still with her mouth open and her beautiful eyes looking up at me.\n\nThe first jet shot out with so much force it hit her on the top of her head. I angled the next few shots more down. Lexi was covered from forehead to chin. The extra was dripping down her face. Lexi moved in to take my cock in her mouth for the last couple shots. She sucked me dry.\n\nOnce finished Lexi turned towards Carrie. She took a couple fingers and wiped cum off her chin and then very deliberately licked her fingers clean. Lexi was putting on a show. She then blew Carrie a kiss and we turned to go inside.\n\n\"That was amazing Steve. Being outside and Carrie watching was such a turn on.\" Lexi said.\n\n\"I know and I think Carrie liked it a lot.\"\n\n\"Forget about Carrie, I loved it. I was imagining she was a stranger the whole time, which made it even more fun. I think we need to try to do it for some real strangers.\" Lexi said.\n\n\"I am down with that. Strangers could be fun but I don't want some creep looking at you.\" I said\n\n\"We will have to find the right situation.\" Lexi said.\n\nA few minutes later I got a text from Carrie saying, \"Amazing!! Thanks for the show.\"\n\nThe next day Lexi and I left really early for work. If we wanted to get home after lunch for the pool day, we had to start early.\n\nLuckily the day went smooth and I called Lexi on my way home. She was leaving the office in a few minutes so we would have plenty of time to get ready for our guests.\n\nOnce home I walked into the closet to get dressed and there was Holly, naked, going through Lexi's bikinis. Holly chose a simple bikini that was almost a thong. We had some time so as she was changing into the bikini I had some other ideas. We fooled around and then were joined by Lexi. We had a quick threesome.\n\nWe got our backyard ready with snacks and drinks and waited for our guests. Lexi chose a similar bikini to Holly and I wore simple swim shorts.\n\nWe were lying in the chairs when we heard our guest come through the gate. Both mom and daughter looked stunning. They both had on swim cover-ups.\n\nAnnie had a confused look on her face as she looked at us in the chairs. She then whispered something to her mom and the only word I could make out was 'naked'.\n\nCarrie spoke up, \"Thanks for having us over to swim but we were expecting less clothing.\"\n\n\"What do you mean? We figured this was a normal swim.\" I said.\n\n\"Well I kind of told Annie everything. I told her how you guys are nudist. I told her how I went topless. I had a fun time doing it and Annie thought it would be fun. So I figured the same rules applied.\" Carrie said as she untied her cover-up and let it fall to the ground. \n\nThis was the most I had seen of Carrie. She was topless and then had a tiny thong on bottom.\n\n\"You look amazing Carrie and if you guys are okay with it, then we are more than happy to go nude. We only thought because of your daughter.\" I said.\n\n\"I've never done anything like this but it sounded like so much fun. I've also heard big... I mean good things about you Steve.\" Annie said. Everyone laughed and Carrie blushed. Obviously Carrie had told Annie about my penis.\n\n\"Lets do this then.\" I said as I stood up and pulled down my shorts. Both Carrie and Annie were staring right at my dangling cock. I was not hard at the time but freeing him from the shorts already made him stir.\n\nAnnie dropped her cover. All eyes moved to her. Her body was perfection. She was toned, tall and slim. Her olive skin was flawless. She wore a skimpy thong and nothing up top. Her breasts were slightly bigger than Carrie and were some of the perkiest tits I had ever seen. She had light brown nipples that were maybe quarter size. The edges almost faded into her tan skin.\n\nSuddenly someone hit me and Lexi said, \"Stop staring.\"\n\n\"Sorry but you're beautiful Annie.\"\n\n\"Thanks Steve. Not to bad yourself.\" Annie said, flirting with me and looking at my dick.\n\nEveryone else shed her clothes. We swam, and laid out. After about an hour of playing around we were all in the lounge chairs. Both Carrie and Annie were acting very comfortable. Being topless was not a big deal anymore.\n\nThen Annie spoke up and said, \"I think I am going to join you ladies in being completely naked. I don't know why I was nervous to show my goods down there.\" \n\nThe ladies and I cheered and encouraged. Annie shimmied out of her thong. She was completely shaved. Her tight and small pussy looked great. Her outer lips covered her inner lips and clit. Her pussy lips were a simple straight line making her look clean and untouched.\n\n\"Alright Carrie you are the last one to still have clothing on. I think its time to loose the thong.\" I said and everyone else vocalized their agreement.\n\n\"I don't know. I am too nervous. My husband is the only person in the last twenty years to see me completely naked.\" Carrie said.\n\n\"What about last night?\" I blurted out, not really thinking.\n\nCarrie looked shocked. Annie just stared at her Mom and said, \"What happened last night?\"\n\nCarrie didn't share what she saw through the window with her daughter and that she was naked, masturbating in the window. I really couldn't see her nakedness but I knew she was.\n\n\"It was nothing, her bathroom blinds were open for a second and I saw her.\" I lied. Carrie looked relieved.\n\n\"Okay good Mom. Steve has seen you naked then so it's not a big deal. I promise it feels so good and free.\" Annie said. It was weird to hear a daughter trying to convince her mom to get naked.\n\n\"Common Carrie, it feels great!\" Lexi said.\n\n\"I promise you won't regret it!\" Holly added.\n\nEveryone was encouraging but then I said jokingly, \"I only want to see your pussy.\" Lexi slapped me in the arm. \"I was only kind of kidding. Don't feel scared or self-conscious because it really does feel great.\"\n\n\"Okay fine I'll do it.\" Carrie said and everyone cheered. \"I might need to go shave because all of you are hairless.\"\n\nCarrie said that more out of trying to delay and embarrassment. Everybody quickly dispelled that notion.\n\nCarrie stood and hooked a finger on the sides of her thong. \"Okay here I go!\" Carrie said trying to encourage herself.\n\nEveryone started chanting \"Carrie... Carrie...\" \n\nHer face was turning bright red but she finally gave in. With one swift motion she pushed her thong to the floor. She stood upright, and her face bright red. Carrie didn't try to cover her naked body but her hands shot up to her face, trying to hide her embarrassment.\n\nCarrie had nothing to be embarrassed for. She was striking, just like her daughter. Carrie's pubic hair was minimal. It was dark brown and trimmed into a perfect runway strip that ended just above her hood. Her pussy looked very similar to her daughter but slightly more open where her inner lips showed just barely. \n\n\"Carrie that looks hot! I might need to grow out my hair a little! Steve would you like a runway strip?\" Holly said.\n\nAnnie gave a questioning look to Holly. Why would a friend ask Lexi's husband if he would like a runway strip? We all ignored the Holly's reasoning.\n\n\"It looks amazing Carrie. Lower your hands and stop being embarrassed.\" I said.\n\n\"Yeah Mom you have a hot bod.\" Annie said.\n\nHolly and Lexi chimed in too and Carrie slowly relaxed. She sat back down and we all talked. There were multiple conversations going on but Annie focused in on Holly. Holly tried to make generic answers like we were close friends and we hung out a lot.\n\nTheir conversation was light at the beginning but Annie still had in her mind about the runway strip. I was watching Annie and she was intent on finding answers.\n\nFinally and more bluntly than I think she wanted to say, Annie asked, \"Have you had sex with Steve?\"\n\nEverybody stopped talking. Carrie was looking at her daughter in shock.\n\nLexi spoke first. \"We might as well tell the truth.\"\n\nThen I spoke. I gave a very abbreviated story of Lexi and I. Then I related how Holly fit in. I ended saying, \"We are nudist and have an open relationship. Holly, Lexi and I couldn't be happier. We are open and honest with each other. No secrets are between us. We share and everyone benefits from it. We only invite people in to our lives that are of the same mindset. We want no upset feelings or jealousy. In short those are the principles we live by.\"\n\nAnnie and Carrie were speechless, although Carrie knew the just of our lifestyle. \n\n\"That's really awesome.\" Annie finally said. Carrie nodded her agreement.\n\nFrom that point most of the conversation was about sexual things, nothing to serious or dirty but curiosities from Annie. Carrie was quiet through most of it though. I knew she was fighting an inner battle. She hated her husband and had a terrible sex life, however she was married. Also she watched Lexi and I have sex the night before and it had an effect on her.\n\nThe afternoon was winding down. We all had a great time.\n\n\"We should head home soon Annie. Your father will be home for dinner.\" Carrie said\n\n\"Fine but hanging out with you guys is way more fun. Can we hang out tomorrow? I could get used to being a nudist.\"\n\n\"That sounds like a plan.\" Lexi said\n\nCarrie and Annie were getting dress and making small talk.\n\n\"What are you guys up to the rest of the night?\" Annie asked. \n\nNormally that is an innocent question but I answered honestly, \"Probably dinner than a threesome.\"\n\n\"Wait... are you serious?\" Annie asked.\n\n\"Yeah I don't kid about threesomes.\" I said.\n\n\"You guys are so wild. I want to hear more tomorrow.\" Annie said.\n\nLater that night I had my two favorites naked in bed. Lexi and Holly were in sixty-nine. I was behind Holly, fucking her ass as Lexi licked pussy and my balls. \n\nMy phone made the sound that I received a text. We barely heard the phone and we kept going. \n\nWe switched and I fucked Lexi. I heard my phone buzz again. Whatever it was could wait. \n\nThen Lexi pulled out a new item she bought. It was a strap-on with an eight-inch long and pretty thick dildo.\n\nLexi got all the buckles and harnesses on. She held the dildo at the base and looked down at herself. It was a more really looking dildo. Lexi admired the look of her having a cock. She stroked it like a guy would. \n\nThen she looked up at us and said, \"I think it would be fun to be a guy. Now I want to fuck an ass.\" Lexi looked at me, \"Steve?\"\n\n\"Hell no!\" I said\n\n\"I know, I am only kidding. Don't get all gay on me. Holly, you get on Steve and then I will fuck you from behind.\" Lexi said\n\nWe were getting into position and I heard my phone again. \n\nI entered Holly. Then Lexi was trying for the ass. She got the cock in but her movements were not fluid. This was her first time fucking with a dildo.\n\nPhone buzzed again.\n\n\"Holy fuck this is awesome! I know why you like this so much Steve!\" Lexi said as she enjoyed first hand the view of a cock piercing an asshole.\n\nGradually Lexi was getting the hang of it. She started to match my rhythm and we got into a pretty good pace. Holly was enjoying it. She orgasmed hard but we kept going\n\nPhone again.\n\nWe picked up our speed on Holly. Her second orgasm was even stronger but halfway through we heard our doorbell.\n\n\"What was that?\" Lexi asked.\n\n\"Someone is at our door.\" I said.\n\n\"Maybe that's why your phone kept going off.\" Holly said.\n\nI grabbed my phone immediately. All of the texts were from Carrie. They said things like, 'are you home? Can I come over? I need to talk with you.' Then the last couple said, 'I know you're home. I am coming over.'\n\nI ran down stairs. It was quite uncomfortable with my hard cock but I didn't want to make Carrie wait any longer. I threw the door open. Carrie looked meek and tired. She must have been crying earlier too because her eyes were red. Carrie looked to be just out of the shower, with wet hair and no make up. She still looked gorgeous in her little tank top and athletic shorts.\n\n\"Carrie what's going on? Is everything okay? Are you okay?\" I asked rapidly. I was nervous with all the text and the need to come over that she might be hurt in some way.\n\n\"I'm okay, I needed to see you but it looks like I interrupted you guys.\" Carrie said as she looked at my moist hard cock.\n\n\"Don't worry about that. Lexi and Holly can keep each other busy. Come in... come in. Tell me what happened.\" I said. I could tell she was not right. Something was wrong and she needed some friendship right then.\n\n\"I don't really want to talk about it right now. However I could use some company.\" Carrie said with a smile through her distraught face.\n\n\"I make great company Carrie. I can tell something is really bothering you and I will do anything I can to help.\" I said\n\nCarrie thought for a minute as we stood in the entry and then said, \"Will you kiss me?\"\n\nI didn't give a verbal answer but I pulled her into my naked body. I went slow, looking into her eyes. I moved slowly down to meet her lips. Carrie moved to her tiptoes to meet me halfway. \n\nCarries lips were soft and smooth. When our lips met and the tension in her body evaporated. Carrie's form molded into mine. Slowly our kiss became more passionate, with our tongues dancing in each other's mouths. Carrie's hands roamed my naked back. \n\nWithout saying a word Carrie broke our kiss and dropped to her knees. She held my cock in hand, staring at it. I watched her.\n\nCarrie finally spoke saying, \"I have been fantasizing about your dick since the first time I saw you in your garage. Can I suck you?\"\n\nThe bolder Carrie surprised me. I could see the lust in her eyes. In the past had to be coaxed into doing anything. Now she had passion. She took control.\n\n\"I would love you to blow me.\" I said. It came out cheesier than I wanted but Carrie didn't seem to notice.\n\nCarrie looked back at my cock. She was stroking me slightly and She gave me a little lick on the tip. She pulled her head back for a few seconds like she was thinking.\n\nShe moved forward again and took the tip into her mouth. Her tongue swirled around a few times and then with a pop I came out of her mouth.\n\n\"Is this Lexi I am tasting?\" Carrie asked.\n\nI totally forgot that I was just inside Holly and Lexi. I was so wrapped up in Carrie that fucking Lexi and Holly just minutes before had left my mind.\n\nHonesty is the best policy so I said, \"Umm its probably a mix of Lexi and Holly. When you knocked on the door I was in Holly.\"\n\n\"They taste pretty good. Are they going to be mad that I stole you away?\" Carrie said.\n\n\"No... no... They will be fine especially when they find out that you like their taste.\" I said jokingly.\n\nCarrie took it serious and said, \"Good.\" \n\nThen she was back to my dick. She had a determination in her eye that no matter what happened she was not letting go of my cock.\n\nCarrie's blowjob was much like her personality. She was tender and caring. She was soft and thoughtful. She was incredible. She took her time, making sure every inch of my cock was pleasured. Even though she was tender, she still had great skill. She took me deep into her throat, with no sign of gaging. Once I was down her throat, she took the time to lick the base of my cock and balls.\n\nAfter a good ten minutes of cock sucking, I was ready for sex.\n\n\"Should we go find a more comfortable spot so I can return the favor?\" I said.\n\nCarrie only nodded, her lust had taken over and she was ready for more.\n\n\"Its your choice Carrie. We can go to the master with Lexi and Holly or to a guest room. Either way it will be just you and me. The girls will not get involved unless you say so.\" I said.\n\nWhen I mentioned the other two women Carrie's nerves returned. I could tell she didn't want to disappoint me in her answer and she struggled to say what she wanted.\n\n\"We will go to a guest room.\" I spoke and from her smile it was what she wanted. \n\nWe made our way up stairs. I undressed Carrie on the way.\n\n\"Lets just say hi to Lexi and Holly so they know what's going on.\" I said.\n\nHolding Carrie by the hand we walked into the master bedroom. Holly was now wearing the strap-on. Holly was behind Lexi, fucking her doggy style in the pussy and a thumb in her ass.\n\n\"Holy shit!\" Carrie said. One hand went between her legs and the girls turned to see Carrie and I watching.\n\n\"Oh... hi Carrie... I am so glad you are here... Are you guys... going to join us?\" Lexi said while Holly fucked her.\n\n\"We are not going to start Carrie with a foursome. We just wanted to say hi. We will be in the guest room.\" I said\n\nBoth girls looked a little sad because they wanted to try out Carrie for themselves.\n\n\"Have fun... you two... Holly and I... will be... here if you... need us...\" Lexi said.\n\n\"Sounds good! I love you two.\" I said.\n\n\"Love you too.\" Lexi and Holly said in unison. \n\n\"Thank you so much for letting me be with Steve.\" Carrie said to Lexi. Carrie was very sincere and thankful. It was cute.\n\n\"Anytime you want Carrie.\" Lexi said. Carrie and Lexi shared a moment staring at each other with big smiles.\n\nI was ready for Carrie so I broke there moment saying, \"Shall we go?\" Carrie turned to leave with me. \"One more tidbit of information for you guys. Carrie said you tasted wonderful on me.\" \n\nWe walked out of the room. Carrie turned bright red as she looked back at Lexi and Holly. I didn't turn to see their reaction but I knew what it would be.\n\nI wanted to take my time with Carrie. I could not believe how everything was falling into place. I was about to fuck my model neighbor, the woman who intimidated me for so many years. Now she was a friend and soon to be a lover.\n\nI was going to give her the best sexual experience of her life. I was going to fuck her till she couldn't handle anymore.\n\nI led her to the bedroom right down the hall to the master. I left the door open to let all the sounds flow down the hall to my ladies. Also if they wanted to come sneak a peak it would be easy.\n\nI laid Carrie on the bed. I started at her lips and kissed her passionately. Then I moved to her ear and neck. Slowly down I went to her chest. I took my time kissing around each breast, being careful to not touch her nipples. I wanted her nice and warm before I made my move on the good areas. I went down her stomach, past her pussy and down her legs. \n\nCarrie squirmed in pleasure. Her breathing and body were responding very strongly to my attention and I had not gotten to the pleasure zones. \n\nI moved back up, passing her pussy again but stopped at her breast. I took one breast in a hand and the other in my mouth. I sucked her nipple into my mouth. It was firm and delicious. My hand tweaked the other nipple and that was too much for Carrie\n\n\"Oh my gosh... oh my gosh... Oh Steve!\" Carrie said as her first orgasm started.\n\nOnce finished she spoke, \"I have never... oh man that felt good... I have never orgasmed like that before... I mean...without touching my vagina.\"\n\n\"Did you like it?\" I asked coyly. \n\n\"Did I like it? Are you kidding me? It was amazing. My husband hasn't taken me to orgasm in ten years and you do it in ten minutes without touching my pussy.\" Carrie said.\n\n\"I'm glad you liked it but this next orgasm is going to come from me licking your pussy.\" I said.\n\n\"Really? Me again? Shouldn't I pleasure you now? I mean... I got mine.\" Carrie said.\n\nThe years of being in a one-sided marriage had an effect on her. She was used to being the object of her husbands pleasure and never the other way around. She figured I pleasured her and now it was her duty to please me. My policy is always the more you pleasure the woman the more pleasure she will eventually give you.\n\n\"Don't worry about me yet.\" I said, \"Tonight is all about you.\"",
        "\"Okay!\" Carrie said with a big smile.\n\nI placed a pillow under her hips and pushed back her legs. Carrie immediately helped by grabbing behind her knees and held her legs back and open. \n\nHer pussy looked perfect. I licked up every inch of her pussy. She tasted smooth and sweet, almost creamy. \n\nHer body jumped when I touched her clit. It was a small clit but very sensitive. I focused my attention on her clit and she was really getting into it. \n\n\"That feels so good Steve! I am going to cum again.\" Carrie said.\n\nI increased my pressure on her clit and slipped two fingers into her soaked pussy. Instantly another orgasm started.\n\n\"I'm cumming... I'm cumming... Oh Steve.\" Carrie said\n\nI kept the intensity going throughout and after her orgasm. Carrie was struggling to keep up with the pleasure and her body was on the brink of another orgasm maybe only twenty seconds after the last one ended. \n\nI stopped licking her clit but kept my two fingers insider her. I kneeled at her side, next to her hip. I pushed her legs back more, leaving her even more exposed. I curled my fingers inside her pussy. I found the spot I was looking for. The spot is more evident when a woman is aroused. \n\nI pumped my fingers into her pussy and focused on her g-spot.\n\n\"Oh my gosh... what are you doing?\" Carrie said. This was obviously something new for her. \n\nI ignored her concern and kept going. I could feel it coming and so could Carrie. I knew she would love it but she didn't know what her body was doing.\n\n\"Whoa... Whoa... Stop Steve... I am going to... I don't know what's happening.\" Carrie said\n\n\"Relax and let yourself go. I promise you will love it.\" I said\n\nCarrie looked at me. She trusted me, more than she seemed to trust any man.\n\nHer body relaxed back into the bed. I took her hand and placed it on my cock. She liked touching me before so I figured it would add more relaxation. \n\nI fingered her fast and hard. I pressed hard into her g-spot each time. I had her to the point of no return and this time she let it happen.\n\nThe orgasm hit her harder than anything she had experienced.\n\n\"Oh FUCK!\" Carrie yelled. \n\nThat was only the second time I heard her swear but it was worth it. Carrie's cum exploded out of her. She squirted a few feet, soaking the end of the bed and the floor beyond.\n\n\"FUCK... FUCK... FUCK!\" Carrie yelled.\n\nFinally she stopped squirting. She was so wrapped up in pleasure that it took her a few minutes to compose herself. I looked at the door and saw Lexi and Holly watching silently. Lexi stroked the dildo on Holly like it was a real cock. It was hot.\n\nBoth girls gave me thumbs up and then silently walked back to their room.\n\n\"This is the second time I am saying this tonight but I have never done anything like that.\" Carrie said with a grin. \n\n\"Once again, I am glad you liked it.\" I said.\n\n\"Now it is your turn and no telling me different. I owe you after what you did to me. You could name almost anything right now and I would do it for you.\" Carrie stopped to think. \"We could go in with Lexi and Holly or...\" Carrie was trying to think of things I would like, \"Or go to the garage or outside. You seemed to like that. Or we could try anal like you did with Lexi. I haven't done it in fifteen years and never with a cock even close to your size but we could try.\"\n\n\"No, no. I want only you right now and right here. I want your body, your mouth and your pussy. We'll see about your ass but for now I just want you.\" I said and that was the right answer.\n\nCarrie pulled me down into a passionate kiss. She pushed me away, and reached for my cock. She looked determined to please. She had a passion and wildness in her eyes that portrayed that she was not going to be stopped. \n\nStill lying on her side she slid down and took me into her mouth. She was still tender and passionate but moved with more speed and determination. Carrie caressed my balls and ass. She lightly ran her fingernails down my back and ass. It sent chills through my body, almost making me cum.\n\n\"Keep going Carrie. I am going to cum soon.\" I said. \n\nI didn't know how she liked to handle cum so I gave warning. She kept up her same speed and intensity, my cock hitting the back of her throat each time.\n\n\"Here it comes.\" I said.\n\nCarrie didn't miss a beat. She stayed at her steady pace. Cum went straight down her throat. She was a pro and nothing leaked out.\n\n\"That was amazing Carrie. You are good at that.\" I said\n\n\"Thanks! Its been quite a few years since I have given a blowjob and this was a lot better than I remember.\" Carrie said as she sucked the tip back into her mouth.\n\n\"How did you get so good?\" I asked playfully.\n\nI did not get the reaction I thought I would. Carrie looked sad and said, \"I don't really want to talk about it but I'll just say my husband demanded I blow him almost every day when we were first married.\"\n\n\"I'm sorry.\" I said.\n\n\"Don't be. Blowing you was awesome. This is the first time I liked doing it. Honestly it really turned me on and with a cock like yours how could it not. I'm used to dealing with a small penis so I surprised myself that I could take all of you and you're cum tasted good. I didn't know cum could ever taste good.\"\n\n\"All in what you eat.\"\n\n\"Good to know. So can I do it again for you since you're still hard?\" Carrie asked.\n\n\"I won't go soft till I fall asleep tonight.\" I said.\n\n\"Really?\" She asked and I nodded.\n\n\"Right now I want to fuck you if that is okay.\" I said.\n\n\"Definitely!\"\n\n\"Great now you choose the position you want our first time to be.\" I said.\n\n\"Oh I don't know. Doggy is probably my favorite but for our first time I want to be able to look at you and hold you. How about just me on top.\" Carrie said.\n\n\"Perfect.\" I said.\n\nIt was perfect because I could watch her and she could control how fast she takes my cock. She was tight when I had two fingers in her. That was nothing compared to my dick.\n\nCarrie straddled my waist and with one hand she directed my waiting cock to her warm slit.\n\n\"I can't believe I am about to fuck another man.\" Carrie smiled.\n\nMy glans touched her opening. She was tight and slowly she lowered herself.\n\n\"You're huge Steve... oh my gosh... you're big.\" Carrie said as more of me disappeared. \n\nIt took a couple minutes but finally I was completely inside and she was sitting on my lap. Then she leaned forward, pressing her chest into mine. \n\nHer hips raised and she said, \"Go slow at first Steve.\"\n\nI obliged. Her pussy was warm and slick. It hugged every part of my cock. In fact she showed no signs of being older. Everything on her was tight. It was amazing.\n\nGradually my pace increased until I got in a steady rhythm. We kissed and held each other like two lovers.\n\nI held her firm ass, as she was getting close to orgasm. I increased my pace. I slid one hand down her ass crack and touched her hole. Her body shook and her orgasm started. I kept my finger on her hole and slowly increased the pressure. It was lubed from all the fluids coming out of her that suddenly the tip of my finger popped in. Her orgasm only intensified. I pushed further and fucked harder.\n\n\"Fuck me... fuck me harder... touch my asshole... oh fuck me... push your finger in more... I need all of you.\" Carrie said like a sex addict. \n\nI was ecstatic. Carrie liked ass play. I knew right then that some day in the future my dick would be sliding in and out of her tight ass.\n\nCarrie got even louder, \"Fuck me... fuck me with that big dick... Harder...\" Her words were enhanced by her loud moans and screams.\n\nOnce my finger was in her asshole I began fucking her with it. That spurred her on more. Carrie's orgasm went on forever.\n\nFinally she collapsed on my chest, exhausted. \n\nJust then as if trying to compete with us, we heard Lexi screaming in orgasm. Both Carrie and I smiled as we embraced. We enjoyed listening to her joy.\n\n\"I have never cum so many times.\" Carrie said\n\n\"Do you have a couple more left in you? I still need to cum.\" I said.\n\n\"I thought you did cum during that. That was so crazy that I figured no guy could make it through.\" Carrie said.\n\n\"I'm not most guys and I didn't know if I could cum in your pussy.\" I said.\n\nIts common courtesy to ask before a cream pie, although if she let me go bareback in the first place she had to be on some sort of birth control.\n\n\"Thanks for being considerate but I want to feel you shoot it inside me.\" Carrie said.\n\n\"That's what I like to hear.\" I said jokingly, \"I have to ask though, birth control?\"\n\n\"Oh baby don't worry about that. I had my tubes tied long ago. Were safe for you to cum as much as you want inside me.\" Carrie said. It was so hot her talking about my cum inside of her. She wanted my cum.\n\nSo I flipped her over into doggy. I wanted a good view of the asshole I would be playing with. \n\nI slammed my cock back into her pussy. Carrie moaned in pleasure and a little pain. I was still a little big for her.\n\nCarrie was on her elbows with her back arched. I reached forward and took both of her arms, making her chest and head fall to the bed. I then pulled her arms back towards me and placed her hands on each cheek.\n\n\"Spread your ass for me Carrie. Spread it as far as you can.\" I said.\n\nCarrie did and her firm ass spread apart, showing me her cute little asshole. It was only slightly darker than her olive skin and looked tight.\n\nI licked my thumb and then let some spit fall to her ass. I spread it around with my thumb, right on her ass. Her body twitched again at the touching of her ass. \n\n\"You like me playing with you ass?\" I said\n\n\"Yeah Steve. I love it. It feels so good and dirty.\" Carrie said.\n\n\"What do you want me to do with my finger?\" I said.\n\n\"Put it in my ass.\" Carrie said quietly. Saying it out loud was more real to her and brought her out of her comfort zone.\n\n\"What was that? Can you say it louder?\" I said egging her on.\n\n\"Put your finger in my ass Steve... Oh fuck yeah that feels good.\" Carrie said as I messaged her hole. \n\n\"Shove it in my ass.\" Carrie said more emphatically. \n\nI pushed my finger past her tight sphinter. Her ass hugged my finger. Once all the way in she pulsed in orgasm again\n\n\"Oh my... fuck me... I'm cumming AGAIN.\" The amount of orgasms was shock her.\n\nI finger fucked her ass and slammed her pussy. I was getting close to cumming but her orgasm end and she collapsed onto the bed.\n\n\"Have you still not cum?\" Carrie asked.\n\n\"I was close but not yet.\"\n\n\"How is that possible? Are you superman or something? Your stamina is amazing.\"\n\n\"Do you have anymore left in you to get me to cum?\" I asked.\n\n\"Oh I'll get you to cum but after that I think I'm done. I am already sore.\" Carrie said.\n\nCarrie had me lay on my back. She got into a reverse cowgirl position. She did all the work fucking me. She moved fast and hard. Sweat was running down her body. Then she placed one hand between my legs and took hold of my balls. She rubbed and massaged them. She ran her fingers across the sensitive skin below my balls. \n\nWith the visual of a stunning woman bouncing on my cock, the amazing feeling of her pussy and her magic hands, I lost it.\n\n\"Here it comes.\" I said. \"Fuck me harder.\"\n\nWith the long build up, my orgasm was hard and lasted forever. I spewed my seed into her pussy. Carrie continued to fuck me. Cum was coming out of her pussy and coated every inch of my cock.\n\n\"Oh fuck that was good.\" I said when I finished\n\nCarrie fell off of me and looked at my hard cum covered cock. I could see her utter exhaustion but that did not stop her from licking me clean.\n\nOnce I was clean Carrie came and snuggled up next to me.\n\n\"So can I ask you what happened tonight?\" I said.\n\n\"Yeah you gave me the best sex of my life.\" Carrie said. \n\nI smiled at Carrie but gave her a concerned look. \n\n\"Okay fine. As you know my marriage has been terrible and for the most part I stayed married for my daughter. Last night was the tipping point. My husband was a jerk to my daughter and me. Annie and I both cried. He left and went back to the city.\"\n\n\"I have had my lawyer draft up divorce papers probably a year ago but I have been holding on to them. I guess I was scared to be on my own. I got pregnant and married at such a young age that I was afraid to be alone.\"\n\n\"Honestly I have changed since becoming friends with you and Lexi. I became happy and saw that I could be happier if I got divorced. Once I saw how ridiculous he was tonight I was done.\"\n\n\"In the past I have had private investigators follow him. I have so much dirt on him. I found infidelity and shady business deals but I kept it all a secret till divorce was the onlyoption. I am going to take him for everything I can.\"\n\n\"Once he left to go back to the city I told Annie everything. I told her my plan and she was excited. She told me it was about time I divorced him. She told me I deserved to have fun and be happy and that was not going to happen being married to him.\"\n\n\"Annie left to go out with some friends but her words of me having fun stuck in my mind. I deserved to be happy and the first thing that came to my mind was you. The most fun I could think of was having sex with my handsome, big dicked neighbor.\"\n\n\"You know what? I was right. This night has been perfect and I couldn't be happier. Physically and sexually I am happy but I feel free, like a huge weight has been taken off my shoulders.\"\n\n\"I really want to thank you and Lexi. You guys have been amazing and the friends I needed.\" Carrie finished\n\n\"I should be thanking you. It has been wonderful to get to know you. You are an amazing person and so is your daughter. I am so happy for you now and whenever you need me to cheer you up, I will be naked and waiting. More seriously though, Lexi and I are so happy you decided to be our friend and now join in our more intimate side. I think we have many years ahead of us as great neighbors.\" I said.\n\n\"I think so too because I am not giving up the house in the divorce.\" Carrie laughed.\n\nWe cuddled for a few more minutes when we heard moans coming from the other room.\n\n\"Are they still going at it?\" Carrie asked.\n\n\"They are just as insatiable as me.\" I said.\n\n\"That's impressive because I am exhausted.\" Carrie said.\n\n\"We will work on your endurance and in a few weeks you will be just as ravenous as they are.\"\n\n\"So we are going to keep fooling around?\" Carrie asked with a smile.\n\n\"Of course! Everyday might be a little much but I figured at least a few times a week.\" I said\n\nThe moans from the other room were getting louder.\n\n\"Perfect!\" Carrie said hugging me tighter.\n\n\"There is one thing you have to be okay with. This is your first night but in the future you have to be okay with having sex with Lexi, and probably Holly too, in the same room. I am not saying you have to fool around with them, although they would love that, but we like to do things together. We hide nothing from each other.\" I said\n\n\"Every time?\" Carrie asked.\n\n\"No just every once in a while. There will be plenty of times by ourselves but truly Lexi is a pervert and wants to watch.\" I joked.\n\n\"I am totally okay with all of it. I haven't touched a girl since my best friend in high school but everything else has been so amazing that I will trust you guys.\" Carrie said\n\n\"Awesome! How do you feel about going to watch them right now?\" I said.\n\n\"I think I would really like that.\" Carrie said.\n\nCarrie looked so tired so I carried her into the master bedroom and laid her on the side of the bed. \n\nLexi and Holly were on the other side of the bed. They had lost the strap-on for more traditional lesbian acts. They were in a sixty-nine, eating each other out. Both girls had butt plugs in. \n\nThey looked incredible but my attention was more on Carrie. I wanted to see her reaction. Her eyes were locked on the girls and I could see the lust building in her face. \n\nI stood at the side of the bed right next to Carrie. I started soft but I caressed her body from her asshole to her tits.\n\nCarrie looked at me and whispered, \"They are beautiful. Thanks for sharing.\"\n\nWe watched for a few more minutes and Carrie was getting more turned on by the second. I was hoping she would catch her second wind.\n\nMy hand went between her legs and I touched her pussy. Carrie jumped, causing Lexi and Holly to look over, but her jump was not out of pleasure.\n\n\"All I can do is watch. I am too sensitive and sore down there. I'm sorry.\" Carrie said.\n\n\"Don't apologize Carrie, it sounds like you and Steve had a good night. Plus I would love for you to watch.\" Lexi said.\n\nCarrie relaxed back in and I stayed away from her snatch. She was openly stroking me though, which had me throbbing. Carrie and I cuddled and watched the show.\n\nAfter quite a while Lexi said, \"Carrie would you mind if I stole my husband for a little bit. He needs to finish what he started earlier.\"\n\n\"Oh yeah of course.\" Carrie said, \"I think I would really like to see you guys have sex again.\"\n\nI woke before my alarm went off to the soft touch of a hand on my cock. It was Carrie stroking me to life.\n\n\"We need to be quiet because I don't want to wake Lexi or Holly but would you mind if I got you off.\" Carrie whispered.\n\n\"I'll never turn you down.\" I whispered back.\n\nSilently she moved between my legs. It was still early so we had plenty of time before the alarm was going to go off, so Carrie took her time. She blew me with the same skill she showed the night before and before long she swallowed my load. She cuddled back up to me and a few minutes later the alarm went off the girls were none the wiser.\n\nLexi and I got dressed for work while the two people who didn't have to go to work stayed naked. Holly and Carrie went to the kitchen and made breakfast. I think every guy needs two beautiful women to serve him breakfast in the nude. Life is not fair though.\n\n\"So what are you up to today?\" I asked Carrie.\n\n\"Well my daughter is probably wondering where I am so I should get home soon. I thought we could hangout and swim again this afternoon. This morning I am going shopping with my daughter. I am single now so I think I need to upgrade my wardrobe. Any recommendations?\" Carrie asked me.\n\n\"Yes I have just a few simple recommendations. Slutty and sexy!\" I said proudly. \"Slutty lingerie and some super sexy clothes. That's all you need.\"\n\n\"I might be able to get some of that.\" Carrie flirted back.\n\nThen she asked Lexi a question, \"Lexi after seeing your top drawer I think I need to upgrade my toys. What store did you get those from?\"\n\n\"I love when you girls chat about vibrators.\" I said giving them a hard time. \n\nIn the last month Lexi had been to every sex shop in fifty miles.\n\n\"They come from a few stores but there is one store in particular that has the best stuff. It's an upscale sex shop but their toys are the best. I'll text you the address.\"\n\nWe said our goodbyes. I finally got Carrie and it was amazing. I knew I would be useless at work because I would be thinking of her the entire day. I called my vice president and told him everything that needed to happen that day. I needed a 'me' day to relax and recover.\n\nI ended up going to the country club. With my constant sexual activity, my mind was constantly thinking of sex. I don't know if it was turning into an addiction but it was a problem. Playing golf I was trying to figure out which girl I could bring golfing with me so I combine my two passions. Sex during golf would be the ultimate joy.\n\nUnfortunately finding willing women at the club was long odds. Most the women were old and retired. That was not the group I was looking for. I worked out to relieve my tension. Lifting weights always helped. \n\nI was surprised to see a new trainer in the gym though. She looked just out of college and very pretty. Nothing happened with her, but at least I had a little eye candy to look at.",
        "That afternoon I got home. I was the first one back but I soon heard from Lexi that everyone should be over to swim within the hour. I got naked and went to the pool. \n\nLexi extended the invite to Amy and Kim as well. Amy was first to arrive. She lifted her sundress over her head and revealed her nude form underneath. Lexi had obviously filled her in on the nudity.\n\n\"Do we have any time for a little fun?\" Amy asked eagerly. The last time we fooled around was at the pool party.\n\nI looked at the clock and saw we had at least thirty minute, \"I will always have time for you. Lets go upstairs. I don't want Carrie's daughter walking in.\" \n\nI knew Annie was good with the nudity but having her walk in with me having sex with different women might be a little much.\n\n\"I wish we had more time but I think I can treat you pretty good in the small amount we have.\" I said. I wanted to be done by the time everyone else arrived. \n\nWe wasted no time. I had Amy on the bed and in a sixty-nine in no time. I ate up her delicious nectar as she blew my tool. \n\nI could have spent an hour in that position but we didn't have time. We needed to fuck and orgasm.\n\nWe changed positions to doggy. Amy's curvy, firm ass looked amazing as I slid my cock into her smooth pussy. I held her ass cheeks apart and was greeted with the amazing view of a perfectly tan asshole. Her untouched virgin asshole was calling my name. Her pussy was doing an amazing job though. Amy's pussy spread so nicely around my shaft. Her opening caressed every detail of my cock.\n\nAmy was an anal virgin but my goal was to change that soon. I didn't have the time to take her virginity then but in the near future my dick was going in her ass.\n\nAmy was a great fuck. Her body was tight, her tits were huge and her enthusiasm was off the charts.\n\nWe switched positions a couple times. Amy orgasmed a couple of times and I was getting close. We were in a spoon type position but where she could turn and look at me. I held her body as I plunged into her depths, all the while never breaking eye contact. \n\n\"Amy I'm close. I am so fucking close.\" I said.\n\n\"Cum inside me Steve! Let me feel your cum deep inside my pussy.\" Amy said.\n\nCumming inside a woman with no condom was the ultimate in pleasure and trust. I believe there are not many things that represent the closeness of two people, more that cumming inside on both individual sides. I trusted and cared for Amy. Amy felt the same.\n\nI let loose and my seed coated her insides. The orgasm was incredible and hot. Amy kissed me passionately.\n\nI was creating real relationships and feelings for the women in my life. I felt so much closer to Amy after that experience, much more than the friends we had been previous. Especially this time because it was just the two of us and not with the group.\n\nNone of my girls would ever compete with Lexi. Holly was a closest to Lexi but still nothing matched my bond with my wife.\n\nAmy and I were cleaned up and naked at the pool before anyone had arrived. Holly and Lexi were next. Kim couldn't make it because of work so the only other people we waited on were Carrie and Annie.\n\nCarrie came through the gate in a semi-transparent white cover up. The closer she got the easier it was to see that Carrie did not worry about the swimsuit part. The material was only covering her naked body. Lack of bottoms and nipples were clearly visible.\n\n\"I have something I need to talk to you and Lexi about.\" Carrie said.\n\n\"Sure what is it?\" I said\n\n\"It's about Annie. I was wondering if...\" Carrie trailed off when she saw Amy. Carrie clamed up and seemed nervous to say what she was going to say.\n\n\"Don't worry about Amy. You can say anything in front of her.\" Lexi said.\n\n\"Are you sure? Its kind of about last night.\"\n\n\"Positive. Amy is part of our fun as well. Matter of fact, Amy and I just finished fooling around ten minutes ago. Plus I know Lexi has already told her of our evening.\" I said.\n\nCarrie relaxed and said, \"I'm sorry Amy I don't know you very well. I didn't mean to be rude. This whole openness is new to me.\" Amy agreed and both women relaxed.\n\n\"So what's up?\" I asked.\n\nCarrie said, \"This may come out sounding really strange but it's about Annie. I told her everything and I mean everything. She is my best friend so I share everything with her. A new lover was completely different for me though. She could tell how happy I was. I shared a little bit at first but she asked more questions and before I knew it, she knew the whole story.\" \n\n\"After I described the best sex of my life, Annie opened up. She went on to tell me about her terrible experiences with sex. First she had a selfish and somewhat abusive boyfriend. Annie then had a run of guys who would cum and be done, never spending time on her. Every story was the same. Annie has never had a guy give her an orgasm.\"\n\n\"Annie's frustrated because she see's herself as a sexual person. You could probably tell from her excitement to be nude and hearing about your lifestyle. She has been living in quiet desperation.\"\n\n\"I completely understood her frustration. Even though I was married I felt the same way. My marriage was terrible but you showed me the light. I finally understand how good sex can be. How good sex can make me feel. I felt bad for Annie. I was sharing my new found joy and she was sharing all of her pain.\" \n\n\"I realized I want her to feel the joys and pleasure that good lovemaking can bring. I want her to know how sex should really be...\" Carrie paused. \"Now the awkward and strange question. Steve would you be willing to make love with my daughter?\"\n\n\"What? I don't know what to say... You are asking me to... you know... with your daughter... This is a better question for Lexi.\" I said. I didn't know how to respond to a mother asking me to have sex with her daughter. A mother I fucked the night before. So I deflected to Lexi.\n\n\"He'll do it!\" Lexi said immediately.\n\nThe look of the group was priceless. Every mouth seemed to be open in shock, including mine.\n\nI should have known Lexi would have been excited. Annie was stunning and Lexi loved the thought of me fucking a beautiful girl. The sheer insanity of the proposition was off the charts. Once I got with Carrie the night before I figured any chance with Annie was gone.\n\nMy intuition was right because Lexi whispered in my ear, \"I want to hear every detail. I want to know how a perfect nineteen year old feels.\"\n\n\"Alright I guess I am in. How do we do it?\" I said.\n\n\"Well, Annie and I were hoping you would say yes so... Annie is home waiting for you.\" Carrie said.\n\n\"What if we said no.\" I said.\n\n\"Then I was going to text her to come over. She still loves hanging out over here and being nude. I mean we both would have understood you saying no. It makes sense since you did sleep with me last night. I am her mom and you have so many other women.\"\n\n\"Okay that answers my question. So where is she?\" I said. Excitement was rising inside me as I thought about Annie's tight teenage body.\n\n\"The front door is open. Go up stairs to the master and she will be waiting on my bed.\" Carrie said.\n\nI threw on a pair of shorts and ran across the street. Walking into the huge home always amazed me. Carrie's mansion was amazing. Finding the master was not that easy. At the top of the stairs there were long hallways going both directions and many doors down each. \n\nI guess the master was on the side closer to my home because that was where Carrie watched Lexi and I fuck in the garage. I was right. At the end of the hall I was met by a large set of double doors. The door was slightly cracked. I pushed the door open.  \n\nThe room was massive and was decorated perfectly. From the vaulted ceiling with real wood beams to the plushest carpet I had ever felt. Everything looked expensive and perfect. \n\nAnnie was the crowning jewel to the room. Her slender teenage form sat perfectly posed on the center of the bed. She was dressed in white lingerie.\n\nAnnie looked nervous and excited. Her youth showed through her sexy exterior. The lingerie was a semi transparent lace teddy. It was high waist, showing her hips, deep V-neck, showing ample cleavage. The lingerie looked like something a girl would wear on her wedding night or in Annie's case the night she finally experiences real pleasure.\n\nI was nervous. The last time I felt nerves like that was on my wedding night or my first time with Kim. I felt like she was a white canvas that I was going to make a masterpiece, a sexual masterpiece.\n\nI soon realized that I had been standing in the doorway for about a minute. I had not said a word and Annie's sexy look was changing. She looked more scared like I was going to change my mind and leave. That was the furthest thing from my mind.\n\nFor some reason I didn't know what to say and I froze. I quickly gave myself an inner pep talk. Something about her being nineteen and willing.\n\n\"You're beautiful.\" I said finally.\n\nAll stress melted away from her body as she sat up towards me.\n\n\"Thank you Steve. I am... umm... thank you for coming over.\" Annie said.\n\n\"Oh Annie, I should be thanking you. I am honored that you want an old guy like me.\" Humbly I tried to downplay myself. I am only in my thirties.\n\n\"You're handsome and sexy Steve. One hundred times better than guys my age. Your wisdom and experience excites me.\" Annie said.\n\n\"Why don't you come over here and kiss me. Show me your excitement.\" I said.\n\nThe real reason I wanted her to come to me was so I could see what she looked like in her lingerie. She was even more gorgeous standing up. Her tall body worked perfect in the teddy. The back was a strappy with a tiny string disappearing between her ass. Annie truly deserved to be in Victoria Secrets. \n\nI kissed Annie passionately for a few minutes. Our tongues danced and our bodies molded into each other's. I was about to get greedy and push her to her knees but I quickly remembered today was about Annie.\n\nI lifted Annie and carried her to the bed. I laid her back and continued to kiss her. Slowly I worked my way down her lingerie-clad body. I skipped the good parts on purpose and focused on the rest of her body till I got to her toes. Annie was squirming in pleasure and I hadn't even touched a nipple, pussy or ass. The build up I was giving her was going to result in a huge orgasm\n\nI worked my way back up her legs. I spent more time on her inner thighs till I lightly grazed her lace-clad pussy. Annie jumped at the pressure on her clit. I moved up her body though till we were kissing again. Annie tried hard to grind her pussy on any part of my body but I resisted her. \n\nAnnie was ready though to receive some actual pleasure so I worked my way back down. I found her breast. I left the lingerie in place but I caressed her tits. I licked through the lace, each nipple becoming more visible through the moist white fabric. \n\nAnnie was on the brink of orgasm when she started saying, \"Oh Steve... oh my gosh... oh Steve.\"\n\nI brought Annie to the brink but then stopped pleasing her breasts. Her breathing and moans were heavy. She looked up at me with a questioning look of 'why did you stop.' Annie said nothing though. She trusted me and quickly lowered her head back to the bed as I started to move down to her honey pot. \n\nI reached her pubic mound and I gently traced her covered pussy with my tongue. Annie's body rocked. I breathed heavy through the lace. My hot breath coated her pussy. I applied more pressure as I licked the fabric and her clit beyond.\n\n\"Oh my gosh Mr. Black.\" Annie used my last name, which was hot, and a testament to her youth. \"I'm cumming... oh my gosh... I'm cumming.\"\n\nI had not touched Annie's skin yet but she came. I was excited to see her reaction when I got to the good stuff.\n\n\"How was that?\" I asked.\n\n\"Amazing Mr. Black. That's the first time a man has given me an orgasm and you did while I was still dressed. Awesome.\" Annie said. \n\nI didn't know why she was all the sudden using my last name. Except for the first time meeting her she called me Steve.\n\n\"No more Mr. Black, please. I like Steve much better.\" I said and Annie smiled. She treated me like she would any teacher. \"I am glad you liked it but I am only getting started on you. How about we get that lingerie off and try it again.\"\n\nI pulled Annie to stand with me by the side of the bed. We embraced and started removing clothing. Annie was not smooth like an experienced woman would be. She clumsily tried to push down and reach inside my shorts. Her experience was limited but made up for her faults in her shear beauty. \n\nSlowly I pushed her lingerie off her shoulders. Her breasts were exposed. I played a little before I pushed the lingerie to the floor.\n\nMy shorts were around my thighs as Annie eagerly tried to jack my cock. Multiple times she looked down at the meat in her hand. Every time she smiled and a little signs of shock crossed her face at my size in her hands. I would have to teach her how to properly jack a cock but her slim delicate hands still felt great.\n\nOnce we were both nude, I picked Annie up into my arms. The bed was always great but I always like to mix up locations. It made sex seem more adventurous and fun. I looked around the room. There was a plush lounge chair. It made a curve shape where your head is raised, then down to where you sit and back up for your knees and down to your feet. The chair looked perfect for pussy eating.\n\nI set Annie on the higher part where the knees would generally go. She then leaned back and I spread her legs. Annie was so open and exposed. With how the chair was, her pussy and ass sat higher than the rest of her body. Then with her legs spread and pushed back, her ass and pussy were completely open to me. \n\nI laid my torso on the end of the chair and the rest of my body on the floor. My face was lined up perfect with her snatch and I got to work. Since I didn't have the lingerie to deal with I got my first good look at what I was working with. I was not disappointed. All spread, her pussy was open. The aroma was intoxicating. Then her ass was awesome. Her firm ass cheeks guarded the most pristine asshole I had ever seen. It was perfect. The tight star matched her skin perfectly. No hint of anal play was evident because she was tight. I had to hope that I would take her anal virginity at some point.\n\nAnnie had a huge smile on her face as I lowered myself. I was guessing it was going to be her first time receiving oral.\n\nI licked Annie's smooth pussy. I took in every detail and fold. I made sure I pleasured every part of her sex and Annie appreciated my work.\n\n\"Oh my gosh Steve... I'm cumming again... oh Steve...\" Annie said. \"That was amazing.\"\n\nAnnie was done cumming but I wasn't done eating. I pushed her legs back more and her ass rose. I pushed a thumb into her moist pussy and then ran my tongue up her crack. \n\nI touched her asshole and Annie jerked. Then she screamed, \"FUCK!\"\n\nI was ecstatic. I got the reaction I wanted from licking her ass. She was going to love getting her asshole played with.\n\nI fucked her pussy with my thumb and my tongue assaulted her ass. Another orgasm came and went but I kept at her. Annie thrashed in pleasure and I was going to make this the best fucking day of her life.\n\n\"I'm cumming again... I'm cumming again. Fuck I can't believe... fuck... I'm cumming again.\" Annie said with her fourth orgasm of the day.\n\nOnce she was recovered I looked up at her face. Annie was in a state of pure bliss. She shyly gave me a smile when she saw that I was looking at her.\n\n\"Having fun yet?\" I asked.\n\n\"You have no idea.\" Annie said.\n\n\"Good and I must say you are amazing to play with.\" I said and started to move back to her pussy.\n\n\"Thanks Steve but before you get going again I was wondering if I could play with you.\" Annie said timidly. \n\n\"Of course but I wanted to make sure I made this day all about you.\" I said.\n\n\"This has already been one of the best days of my life and playing with you will only make it better. I love what you have done to me so far but I have been so excited thinking about your... umm penis.\" Annie said like the novice she was.\n\n\"Great and feel free to do whatever you want. You can experiment or try stuff out. I pretty much like everything so just have fun.\" I said. I wanted to see what she would do with the freedom. \n\nWe moved locations again. The room had a formal looking couch. I sat in the middle and laid back. Annie moved between my legs and took hold of my cock. Her mouth fell open in amazement as she admired my member.\n\nAnnie slowly moved towards my dick. It was weird because she reminded me so much of her mom. Annie and Carrie shared many traits. My crown touched her lips. I knew immediately that she was going to be pretty good at oral for her age. She showed skill with her tongue and knew the right spots to touch. Slowly she took more cock into her mouth, much more than I was expecting. I guess having selfish boyfriends helped because she was proficient in cock sucking\n\nSoon Annie had half of my shaft into her mouth and was working me at a steady pace. I sat back and enjoyed the beauty of her sucking my cock. I was nowhere close to cumming and Annie would have plenty of time to play. I didn't give any instruction but offered up my encouragement and pleasure. \n\nAfter a few minutes Annie changed her attack. She pumped my cock with both hands as she focused on the tip. It felt amazing. Then she changed again. Annie softly massaged my mushroom tip with a hand as she licked up and down my shaft. Each time down she went closer to my balls. Finally she focused strictly on my balls. One hand still holding the tip and the other wrapped around the top of my testicles, holding them tight, making them easier to suck. Annie took my hairless balls into her mouth and sucked. \n\nAnnie was clearly feeling comfortable. She was taking more liberties. I could see the wheels turning in her head. She had a giddy look of a kid with a new toy and trying to figure out what to do with it.\n\nAnnie continued pleasuring my balls as she started to full on jack me off. Then I felt her lift my testicles and lick the sensitive skin between balls and ass.\n\n'Oh man this girl is a freak!' I thought to myself. \n\nI spread my legs more and lifted them up, giving Annie better access. I wondered how far she would go. \n\nI immediately found out how far she would go. Her tongue licked my asshole. Then she used the hand not jacking me to spread my ass. She attacked my asshole.\n\nIt was becoming too much to handle. I could tell my orgasm was coming fast. I voiced my pleasure and Annie increased her focus.\n\n\"Oh fuck Annie! Keep going baby... I'm... fucking... cumming.\" I said.\n\nCum shot out of me as she continued her assault. Normally I prefer to not get cum on myself but at this point I didn't care. The first few shots of cum landed on my stomach. The next, less powerful shots trickled down the side of my cock.\n\n\"That was amazing Annie. I was not expecting all of that.\" I said referring to the ass play. \n\n\"Me either to be honest. One of my last boyfriends made me lick him down there and I hated it.\" Annie said.\n\n\"Then why did you do it to me. I don't want you to do anything you don't like.\" I said.\n\n\"This was different, much different for me. The closer I got to your ass the more I wanted to lick you. After what you did to me and how amazing it felt, I wanted to give you the same pleasure. Honestly it was so much fun. Its amazing how much more fun it is when I am not forced to do it.\" Annie said. It was sad to think of the pain she went through in the past.\n\n\"Well good because that was so much fun.\" I said as I looked at the mess on myself.\n\n\"Oh I was wondering where all your cum was. Let me get that for you.\" Annie said.\n\nAnnie started with her own hand first. She licked all the cum off. Then she moved to my cock and then up my torso. After a few minutes I was clean and ready to go.",
        "\"Ready for some more fun?\" I asked.\n\n\"My mom told me you could just keep going after cumming. I didn't really believe her. My experience has been the guy cums and that's it. Sorry I keep reference my old boyfriends but that is all I know.\" Annie said.\n\n\"Don't worry about it and I am not like most guys. We are going to fuck till you can't walk and that's a promise.\" I said half joking but half serious.\n\nI pulled Annie up to the couch and straddle me. Annie took the initiative to grab my cock and place it at the entrance of her love box. Annie was eager, and right when I was in line she lowered herself. Annie's pussy was drenched and tight but I slid in.  \n\nI thought I would have more trouble getting into her but in one movement Annie was sitting on my lap and my whole cock was inside. Then the fucking began. Annie was too eager as she tried to move fast, her movements were awkward and rough. In the past most of her time was spent sucking dick and getting fucked. I don't think she ever did the fucking, because her inexperience showed.\n\nI grabbed her by the hips and slowed her motion. I controlled her movements into a steady and smooth pace. After a minute of being in control I let go and placed my hands in some other good spots. Annie carried on much smoother. \n\nI started to rock my hips to match her pace. With us both moving the fucking was faster and more intense. I could tell she was on the verge of orgasm as her movements became jerkier. I grabbed her hips again. I increased the pace and Annie's orgasm hit. As far as I knew it was her first sex induced orgasm and she loved it.\n\n\"Fuck me... fuck me Steve... oh fuck yeah...\" Annie yelled.\n\nHer orgasm finished and she sat down on my lap, still buried on my cock.\n\nI grabbed her ass and stood up. I kept her on my cock as I walked across the room to the pristine looking bed. Once at the bed I lifted her off my cock and director Annie to her knees.\n\n\"Oh I have never done it like this.\" Annie said.\n\n\"Seriously? You have never done doggy?\" I asked.\n\n\"First time.\" Annie said.\n\n\"I hope you like it. Its one of my favorite positions.\" I said.\n\n\"What is so good about it?\" Annie said. Her questions were more out of curiosity because she lacked knowledge.\n\n\"I love it for many reasons. It feels great. I love holding a woman by her hips and fucking. For me one of my favorite reasons is I love ass. I love pressing into a nice ass. I like looking and playing with the asshole as you are about to find out.\" I said\n\n\"Are you going to do anal with me?\" Annie asked like I was the one making the decision.\n\n\"Only if you want to but from the look of your ass you have little experience back there.\" I said.\n\n\"You licking me was my first.\" Annie said.\n\n\"That's what I thought. Anal takes practice. It's not possible to take me without prep. Don't get me wrong if you like me playing with your ass I will be doing it as I fuck you right now but my dick is not going in your ass today, maybe sometime in the future. Holly is the expert so we will talk to her tonight to get you on a program.\" I said.\n\n\"It sounds like a lot of work.\" Annie said.\n\n\"It can be but its fun work. Lexi and Holly can testify to the pleasure. Lets talk later. I can't sit here any longer without putting my dick back in your amazing pussy.\" I said.\n\nAnnie smiled and poked her ass out towards me. It really was perfection. I like a nice round ass like Kim or a firm athletic like Lexi or a tight ass like Annie. All are beautiful and different.\n\nI pulled her hips back more and pressed down on her back, making her arch. The pose increased the view of her spread ass and pussy. I then pressed into her pussy. \n\nAnnie's tight asshole was looked right at me and I had to play. I let a glob of spit fall right on her ass and I began massaging her ring. Annie liked the play right away and after a few seconds her ass and pussy induced orgasm started.\n\nI kept fucking and playing with her ass. Annie was not loosening up as much as I would have liked. After about ten minutes I began to work my pinky into her. I could not believe how tight she was but eventually I got in. I fucked her with my pinky and Annie approved.\n\nAfter another orgasm, Annie collapsed onto the bed and said, \"I know you can tell I am a sex novice but I want to learn. Could you teach me all the sexual positions you know?\"\n\n\"That could take a while.\" I said\n\n\"Why? How many do you know?\"\n\n\"A lot. I mean if you went through books there are hundreds of positions. Off the top of my head I could probably come up with seventy five.\" I said\n\n\"Oh wow. I was think there would only be about five. I didn't know there were that many. Well could you show me some of your favorite?\" Annie asked.\n\nI went through at least fifteen positions with Annie. I stuck with normal positions from girl on top, to spooning, to standing, to sitting. It became more fun when I learn how flexible Annie was. Towards the end I had Annie doing the splits across my lap. \n\nWe were well past an hour of fooling around. We both looked and felt exhausted. I was ready to cum and then relax.\n\nWe got back in doggystyle for one last hurrah. I wanted to give Annie everything I had and play with her ass one last time.\n\n\"Annie where do you want me to cum?\" I asked as I fucked her hard.\n\n\"Cum inside me Steve. Oh shit I am about to cum again. Lets cum together Steve. I want to feel you cum inside me.\" Annie said.\n\nI pumped harder and in the few seconds Annie started to cum. I let myself go to all the visual and physical pleasure. My orgasm felt huge and cum started leaking out of her before I was done cumming. When I was finally done cumming a large amount of my seed leaked down her leg. My balls must have been completely empty because the amount of jizz was impressive.\n\nWe made our way to the bathroom. We showered in the huge marble shower that shot water out at every direction. We caressed and cared for each other. We were clean and ready to go to the pool. I threw on my shorts and Annie found a robe in her mom's closet. It was just big enough to cover her naked form beneath. \n\nOnce Annie and I were around the corner of the house, out of the view of the street and not yet in the backyard we stripped naked. This was Annie's big reveal. Everyone obviously knew what we had been doing for the past two hours but this was Annie's coming out.\n\nWe talked about a few entrance ideas. My idea was to actually be fucking when we walked in. Annie would have her legs wrapped around my waist as I walked us in. Annie thought that might be a little much. Annie decided to lead me in by my cock and announce when we got through the gate saying, 'I came, I saw and conquered.' Then waiting a few seconds saying loudly, 'and fucked!'\n\nThe plan worked out perfectly and was the right decision. Everyone cheered. Carrie had the biggest grin on her face. It was a look of pure happiness for her daughter. Even though it was sex she was applauding, it was more that her daughter was happy and found joy. \n\nWe walked to the group and were greeted with a barrage of questions. We answered everything truthfully. Annie carried on about how wonderful everything was and felt. She was so thankful to her mom and Lexi for letting it happen.\n\nI was standing right next Lexi and I could tell the story was turning her on. Lexi shocked Carrie and Annie when she took my cock into her mouth.\n\nLexi then sat back and looked directly at Annie saying, \"I love his dick so much and I am so happy I shared him with you. He does know how to treat a woman right.\"\n\nEveryone laughed at Lexi but agreed with her statement. The rest of the afternoon and evening was relaxed but the following weeks Annie was in town would be fun."
    ],
    "authorname": "teninchhammer10",
    "tags": [
        "ass",
        "blowjob",
        "friends",
        "neighbor",
        "anal sex",
        "sharing",
        "wife"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/how-girls-night-changed-my-life-ch-05"
}