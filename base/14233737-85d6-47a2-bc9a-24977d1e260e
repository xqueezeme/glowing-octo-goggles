{
    "title": "I Love Women in Panties Ch. 05",
    "pages": [
        "\"Thank you,\" Diane whispered, kissing me long and hard.\n\nMy head was in a spin, here I was holding my sister's half-naked friend in my arms, someone I had done an awful lot of growing up with knowing we had certainly crossed a line in our relationship as friends. Now I was not paying a lot of attention to anything other than the woman in my arms, but slowly Diane seemed to pull away from our kiss, was looking up, and as such kind of nudged me to stop and look up.\n\nSally was standing over Diane and Julie over me, and as I looked up got a beautiful view up Julie's skirt to her pretty blue panties, looking over at Sally I could also see her pink panties. Both girls had their blouses unbuttoned half way and were standing with their hands on their hips. I could also see quite clearly that both Sally and Julie had a visible damp patch on their panties\n\n\"So would you like to tell us what's being going on over here?\" Asked Sally. \"Hmm? What was all that noise about Diane? We thought you were being attacked!\" She burst out laughing as she said this.\n\n\"Oh but I was\" Mewed Diane. \"My pussy was being attacked by Mike's tongue! And I'm not sure I've finished with him yet!\" She said pulling me in tight to her.\n\nThe pleasure of making Diane come and having the joy of eating her pussy had been so intense that my cock was hard once again. (Oh the joys of youthful recovery!)\n\n\"Well it hardly seems fair that you should have all the fun,\" Said Julie as she crouched down and took my cock in her hand for the second time that evening.\n\n\"I created that boner so you can get your hands off until I've finished with it.\" Diane purred. \"I have plans for it, so you'll just have to wait your turn young lady! Anyway I thought you two were quite happy playing with each other on the sofa?\" \n\n\"We were very happy as it happens, but could hardly ignore what was going on over here could we? There you were with my brother's head between your legs screaming like a banshee!\" Sally laughed. \"So we thought we'd come and join you and see what all the fuss was about?\"\n\nIt was at this point that I think we all individually realised the evening had reached a bit of a tipping point, a point at which I'm not sure anyone of us knew where events were going to end up. I am not sure I have ever known if the evening had been planned to go in the direction it had, but we were where we were and it was what it was! \n\nFrom my perspective I felt that Diane and I had some unfinished business and I guess so did she, we were certainly much further down whatever road we were all on! Certainly further than Sally and Julie were, which also raised the question about the intentions of these two? Were they happy with each other? Had they ever had a girl on girl experience? Did they want one? I certainly did not know what the answers to those questions were, even if I was happy to speculate!\n\nSo, Diane was topless lying with me half on half off the large floor cushions, she still had her skirt and panties on, I was not far from naked but still had an element of modesty as I still had my underpants on! Sally and Julie however, whilst definitely looking distinctly wanton with their blouses unbuttoned down to their navels and out pulled out of the waistband of their skirts, were to all intents fully dressed. \n\nI was also feeling another dilemma, which had to do with the fact that my sister and I were together in the same room, involved in a highly charged sexual atmosphere. I knew that I didn't feel completely uncomfortable with this, but was also very unsure that if confronted, I didn't know what either of us would do nor had any real idea what we wanted to do!\n\nIt was Julie who broke the spell; she had always been the slightly more brazen of the group and had the ability to shock on occasion.\n\n\"Whatever these two are on I want a glass of it! You've never screamed like that for me Di,\" She said with a definite pout.\n\nOk that answered one question for me; Julie and Diane at least, had enjoyed each other in the past!\n\n\"No, nor me\" said Sally \"What's my brother got that we haven't?\" She said with a chuckle.\n\nThat was a full house then! All these years and I had never had the slightest idea that the three of them were very close friends! I knew and had met several of their boyfriends in the past however, it would appear they were very happy looking after each other as well.\n\n\"He has a 12 inch tongue and he can breathe through his ears,\" Diane laughed.\n\nDiane's comments made us all laugh, and whilst I had started to feel a little self-conscious about the situation as a whole, this was a moment where I felt as if I had been accepted as one of the gang. Of course, these girls had always accepted me but this had the feeling of being allowed into an inner sanctum. \n\n\"So that would mean that you three have.... ah sort of... well I guess you've uh....\" I was burbling a little here! \"What I mean is....\"\n\n\"Yes Mike, we know exactly what you mean,\" Sally said. \"We're not lesbians, but do like to enjoy some fun time together, we have been looking after each other since we were about 16 I guess. Does that bother you?\" She asked.\n\n\"Bother me!? You are kidding aren't you? For heaven's sake! Why would that bother me? It's the most exciting thing I've heard in years!\" I exclaimed with an uncontrollable grin on my face.\n\nSally had been standing over Diane but now knelt down next to her friend, leaned forward and gently kissed her on her breast, then looking up whispered \"Now where had you got to eh Mikey?\"\n\nI leaned up on my elbow and watched as Sally and Diane started to kiss, my hand instinctively went to my cock as I watched this incredible scene unfold in front of me.\n\n\"Here let me,\" said Julie as she put hand over mine and gently replaced it with hers.\n\nI leaned over taking Diane's damp mound in my hand and rubbed her clit slowly through what was now the very soggy material of her panties. Diane started to moan and whimper as Sally was caressing her tits, licking and sucking her nipples. Julie had lain down behind me and was kissing and nuzzling my neck while slowly moving her hand up and down my cock. It seemed in no time at all Diane started to lose some control with her hips thrusting upwards rhythmically, her breathing was shallow when she then looked over at me with a pleading look on her face.\n\n\"Now Mike, please now, I want you inside me,\" She said with a catch in her voice.\n\nI looked up and saw Sally smiling at me and with a gentle nod of her head that seemed to be giving me permission. My underpants were disappearing over my feet thanks to Julie. I positioned myself between Diane's legs and was about to pull her soaking panties off when she smiled and pulled them to one side exposing her glistening pussy.\n\nI lowered myself very slowly to the point where just the tip of my cock was touching the entrance of her pussy. I was desperate to slide into her fully, however, before entering her dripping wet passage, I allowed the swollen head of my cock to play at the entrance of her pussy, starting to enter her but then pulling back a touch each time. Diane was looking at me with pleading eyes and gasping each time as I was on the verge of entering her.\n\nI was not able to maintain this for long, particularly as I desperately wanted to feel my cock surrounded by the warmth of Diane's Pussy. I slowly slid into her moist warmth and in no time at all she thrust her pelvis up at me and held me tight. So tight that I was deep inside her but not able to move until eventually I slowly withdrew and started to build to a slow powerful motion moving in and out of her pussy. Her eyes were wide and glazed she moaned and whinnied under me as her orgasm built. I was now oblivious to all around me as I thrust myself harder and faster into Diane's gloriously wet and warm pussy, I could last no longer and with a grunt exploded as I was overcome by another shattering climax.\n\n\"Oh dear god in fucking heaven! Diane cried out \"Oh my god! Oh god! Oh fuck!\" \n\nHer eyes were tight shut, both her hands clasped firmly on my ass pulling me hard into her while I shuddered and trembled with my own seemingly never ending orgasm.\n\nFinally, after what seemed an age, both our orgasms subsided and we lay panting heavily and feeling utterly drained. While lying there in the afterglow of a beautiful experience, I realised that whilst technically I was not a virgin before tonight, my feeling was that it was tonight that I had truly lost my virginity. The reason for this came from the lesson I knew I had learned, a lesson which had shown me that my pleasure and enjoyment was secondary and would only be complete if the woman I was with had been properly fulfilled. The complete joy of experiencing Diane's reaction and the intensity of her orgasm was a powerful emotion and one that had enhanced my own experience more than one hundred fold!\n\n\"Oh my oh my,\" Croaked Diane turning to Sally. \"Your brother is definitely showing some promise as a lover, have you been giving him tips?\" \n\nUnnoticed by all of us Julie had her hand down the front of her panties and was furiously bringing herself to her own climax and let out long low moan as she came. \n\n\"Oh my word! Oh, yes! Oh boy, I needed that\" She puffed \"God, just watching you two at it got me so hot and so horny, I had to do something about it or I think I might have gone off pop!!\" She giggled which certainly lightened the moment; we all chuckled along with her.\n\nI was shattered and pumped up both at the same time, and not really sure of what I should do next, one thing I was sure of though, as birthdays go this was turning out to be a real winner!\n\n\"So have you worn him out then? Or am I going to get my turn?\" Julie asked. \"I'm not going to be happy with a self-service frig, that just wouldn't be fair!\"\n\n\"Hey as scores go, I count two orgasms for Diane, two for Mike, one for you and zero for me!! Sally said. \"So let's not talk fair just yet, there's a lot of levelling up to be done!\" \n\n\"Well while we're at it and talking about levelling scores I reckon I'm at a distinct disadvantage on the clothes front here!\" I grizzled \"I'm naked as a jaybird unlike the rest of you, so as it's my birthday, I think I should have a say in what's done about it?\" I said hopefully.\n\n\"So what are you suggesting Mikey? Because it is not strictly your birthday any more is it? Julie asked. \"Being that it's now long past midnight!\" \n\n\"Hmm, well I could do with a drink and a bit of recovery time!\" I said with a grin. \"What do you think Diane? I think it's show time, given you two were getting along so well earlier until you decided to perv on us. You can return the favour for us and help each other to strip down to your panties,\" I suggested hopefully.\n\n\"Seems like a plan to me,\" Diane smiled.\n\n\"Why only to our panties?\" Julie asked\n\nI wasn't sure how to answer this question, or at least not truthfully! I knew by now that I was a panty man and would always enjoy some panty time before making love to a woman. Moreover, I knew that I wanted to see all three girls stripped to their panties and nothing else.\n\n\"Because Diane's still got hers on,\" I blustered realising this was a pretty lame reason!\n\n\"But she's still got her skirt on!\" whinged Julie.\n\n\"Don't you worry about that, I'll soon remedy that little problem\" I replied \n\n\"Oh will you?\" Diane chuckled.\n\n\"Hmmm, Yes I will!\" I said. \n\nI shifted myself up on to my knees and asked Diane to stand up, which she did. I managed to find the necessary clasps and zip and undoing them allowed her skirt to slide over her hips and down on to the floor. Diane now stood in front of me with her obviously soaked panties just inches from my face, I straightened them front and back running my finger under edges ensuring they sat perfectly on her. I smoothed my hand over her glorious ass and giving it a gentle pat I leaned forward and kissed her pussy.\n\n\"There, that's better\" I said.\n\n\"Why thank you kind sir,\" Diane said with an impression of a deep Southern American accent, and sashayed over to the sofa. \n\nI was mesmerised by the sight of Diane's Panty covered ass as it swayed in front of me, the round cheeks of her ass moving seductively whilst encased in the white cotton of her panties.\n\n\"So Sally, what do you reckon to your brother's suggestion that we put on a show for him?\" asked Julie. \"I mean how many more birthday presents does he expect from us for God's sake!\" \n\n\"I'm game and I guess one more present won't do any harm, let me put on some more music and I'll be right back,\" replied Sally.\n\nAs Sally went over to change the music I stood up and moved over towards the sofa to join Diane and get my drink, as I passed Julie she stopped me by grabbing my arm. Now I have to say that at this point, I did feel slightly daft given my complete nakedness and Julie being fully clothed. However, a quick glance at Diane settling herself on the sofa naked apart from her panties and white socks soon dispelled that feeling along with the anticipation of Julie soon joining our state of undress, I was kind of ignoring the fact that my sister was also going to be shedding her clothes as well. \n\nJulie had taken my now limp cock in her hand and pulling me close to her, whispered in my ear \n\n\"I'm expecting big things from this fella later so don't you let me down Mikey my boy!\" she said looking me in the eye and winking.\n\nSally had changed the music and came over to us and with a friendly pat on Julie's hand that was still holding my cock said with a chuckle. \n\n\"Put him down Julie there'll be plenty of time for that but only after I've finished with you.\"\n\nI sat down next to Diane putting my arm round her drawing her in close to me with my hand resting on her breast. By now, Sally and Julie had started to dance and smooch together and very soon were kissing each other with real intent. Sally wasted no time in undoing the last couple buttons on Julie's blouse and pushing it off her shoulders on to the floor. It seemed that Sally was going to take control of proceedings, her hands were all over Julie one kneading her breast and the other already on her ass under her skirt. \n\nI was completely transfixed by what was going on in front of my eyes, Julie and my big sister were giving me a lesbian show wow this was hot! By now Julie had taken Sally's lead and had her blouse undone and on the floor joining her own. Both girls were wearing pretty bras that pushed their tits up creating a very pronounced cleavage. I could clearly see Julie's nipples pushing hard against the thin material of her bra.\n\nSally had leaned forward kissing the tops of Julie's tits while her hands moved round her back releasing the clasp of her bra. The straps slipped off her shoulders and down her arms releasing two perfectly formed, firm large tits, her nipples were unbelievable, large, erect and I was sure easily the size of the tip of my little finger. Sally guided Julie down on to her knees and joining her soon had both tits cupped in her hands teasing the nipples with her tongue. Julie, not wanting to be left out had managed to undo Sally's bra and was trying to take it off meaning Sally had to take her hands away from Julie's tits.\n\nSally had lovely boobs, not as large as Julies or Diane's but they were perfectly formed with small pink nipples. Both topless now, the girls started to kiss as they knelt facing each other, their tits lightly touching, and their short skirts flaring over their round asses. If ever a dictionary definition of erotic was needed, then here it was, demonstrated to absolute perfection in front of me, this was the most stunningly sexy vision I had ever seen and it simply made no difference or seemed to matter to me that one of the girls was my sister! \n\nJulie had both hands under Sally's skirt holding her ass and feasting on her tits, Sally's hand was under the front of Julie's skirt rubbing her pussy through her panties. \n\n\"Oh my god this is so hot,\" I muttered under my breath.\n\n\"Mmm, yeah it is,\" Diane sighed, her hand gently massaging the front of her panties \"So so hot.\"\n\nMy cock was on the rise again as I sat watching Sally and Julie getting it on in front of me, I found it impossible not to play with it as the scene unfolded before me. Julie was now unfastening Sally's skirt which dropped off her ass leaving her naked apart from her pink silk panties and white socks, it was strange how despite the very adult goings on, the socks added an air of innocence to the events. Julie didn't wait for Sally undoing her own skirt removing it and throwing it over at us. She then manoeuvred Sally on to her back and on all fours lowered her tits on to Sally's moving them in a circle with a light touch so that both sets of nipples were teasing the other. The sight of Julie's tits hanging, moving over Sally's was incredible, and I was struggling to remain a passive bystander! I would have loved to have to have gone over to join them, and taken those beautiful globes in my hands and if she were to stay in that position, I could take her from behind, burying my cock deep into her pussy. However, this was their time and I tried to remain patient until I hoped I got my opportunity.\n\nJulie lowered herself fully on to Sally, the mound of her panty-clad ass prominent as it moved in both a thrusting and circular motion her pussy grinding into Sally's. They were kissing each other with a hunger that indicated their need for a release of the urges they obviously both felt.\n\nJulie moved up Sally's body sitting on her chest and placing her knees either side of her head offered up her pussy for Sally to enjoy. I saw that Sally immediately pulled the leg of Julie's panties to one side and started to flick her tongue over her clit and pussy lips. Without a word Diane took my arm away from her quietly getting up from the sofa she went over to the girls and kneeling down lowered her head down on to Sally's pussy, sucking and massaging it through her panties.\n\nI watched this for a few minutes stroking my now rock hard cock until my patience ran out and getting up went over to join the three of them. I came up behind Diane, whose delightful ass was raised invitingly in the air, I ran my hand down the crack of her ass and between her legs until I had a handful of pussy. Julie was moaning and grinding her pussy into Sally's face while kneading her own tits. I could see Sally was responding to Diane's attentions as her pelvis moved subtly upwards. \n\nI had wanted to take Julie's tits in my hands earlier as they hung over Sally so I now decided to take advantage of Diane's pendulous tits as they hung there. Taking my hand away from her pussy, I moved up so that I could reach under Diane cupping her tits meaning my cock was now hard up against her ass it's tip rubbing against the cotton of her panties.\n\nJulie was panting and moaning loudly now as she obviously neared her orgasm, I think Sally was also groaning but this was difficult to tell as she had a mouthful of Julie's pussy.\n\n\"Mmmm Oh god yes don't stop Sal please don't stop, I'm close, so close Sal, oh plea..... Oh my god!\" Julie groaned as she climaxed with a shudder one hand down the front of her panties as Sally continued to eat her. Julie fell forward on to one hand, still with one in her panties.\n\nSally was pushing her pelvis up into Diane's face and was now openly moaning until with a grunt and a little whine she started to climax her hips bucking under Diane's attentions. Meanwhile I was enjoying the feel of Diane's heavy tits in my hands and her ass pushing back on my cock\n\nHowever, I had started to think that as much I loved the look and feel of Diane's cotton panties I needed them out of the way, my intentions anything but honourable! Before I could make my move and remove her panties Julie had moved off Sally and had come round behind me and pulled me gently but firmly away from Diane. Positioning me on my back, my cock was pointing skywards as she lowered her mouth onto it and slowly sucked and licked my swollen head.",
        "This was a night of new experiences for me, each seeming more mind blowing that the next! After a few minutes of oral attention from Julie, she released my cock from her mouth...\n\n\"Now Mike, I want to see what all the fuss was about earlier,\" She purred. \"Time for you to eat my pussy!\"\n\nAt this, she stood and positioned herself over me, what a view this was! As I looked up her legs to her soaked panties over her flat tummy on up to her tits, Heaven! She eased herself down and knelt either side of me, I buried my face in her panties wet from her own juices and Sally's earlier ministrations, my hands firmly planted on her ass. I could not help moaning at the sheer pleasure of having my face buried in Julie's wet panties. I chewed, sucked and nibbled Julie's pussy until she put her hand down and pulled the panty to one side giving me access to her sopping wet entrance. Julie slowly moved her hips back and forth, as I devoured her, I could hear her moaning above me and then to top it all another mouth (I assumed Diane's) had encased my cock.\n\nI sensed Julie was close to coming and so increased the intensity of the attention to her pussy, however, she stopped me... \n\n\"Your cock Mike, I want your cock inside me, and I want it now!\"\n\nLifting away from my face she positioned herself over my cock that Diane sensing what was about happen was holding in readiness for Julie to lower herself onto. (Talk about service!) She had pulled her panties fully to one side being so wet that as she lowered onto me I slid in up to the hilt of my shaft with ease. Leaning forward over me, her tits hanging and swaying over my face, I felt her pussy grip my cock as she ground her hips then slowly started to move up and down, my cock sliding with ease in and out of her sopping wet passage. \n\n\"Oooh yeah! Oh fucking yeah, this good Mikey this is soo... good,\" She sighed, her movements now becoming a little more rapid as she rode my cock.\n\nI was in a seventh heaven, a beautiful and horny young woman was impaled on my cock rising and falling as my hardness moved in and out of her, my hands were all over her ass, her tits, I was spoiled for choice! Julie began to slow down her movements her breathing becoming shallow catching in her throat as she whimpered and thrust down on my cock with a real purpose now. Slow but firm strokes until with a cry she shuddered and trembled as her orgasm washed over her. I had been close to coming myself and with a thrust upward let go for the third time that evening my balls being sucked dry as Julie bucked and writhed above me.\n\nWith a final convulsion, Julie, letting out a final long moan, collapsed on top of me, smiling she found my lips and kissed me hard. I could feel her pussy taking a vice like grip on my softening cock, which was an unbelievable feeling.\n\n\"You can have your cock back when I'm ready,\" She whispered. \"Until then it's going nowhere!\"\n\nI had not had anything like enough experience to know whether this level of pussy control was something all women could do. Whatever? Julie surely, had a black belt in the event!\n\nThere may have been some truth in the fact that my balls had been drained as I was suffering a dull ache in them and I was sure I needed some proper recovery time. Eventually Julie eased off me, releasing her grip on my cock and rolling off me lay down at my side.\n\n\"Oh wow I needed that,\" She said letting out a long sigh. \"Oh yeah I needed that!\" \n\nI felt exhausted and lay with my eyes closed feeling very content and I am sure with a very smug grin on my face!\n\nTo be continued..."
    ],
    "authorname": "lovethosepanties",
    "tags": [
        "white cotton",
        "panties",
        "lesbian",
        "skirt",
        "white socks"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/i-love-women-in-panties-ch-05"
}