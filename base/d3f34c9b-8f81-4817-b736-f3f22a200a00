{
    "title": "Unconquered Pt. 16",
    "pages": [
        "Author's Note: This is my 200<sup>th </sup>story posted to Literotica. Two hundred stories of smut, adventure and exciting heroics. I hope you have all enjoyed it as much as I've been writing it. Thank you all for your support, whether it's been a kind word in the comments, an e-mail sent to me, or through the other means I've brought up.\n\nI cannot fully express my gratitude more than that. ^_^\n\nNow!\n\nLets see if the Unconquered can save the world.\n\n***\n\nThe beach that stretched along the boundary between the central lands that bordered Mt. Mahameru and the Great Western Ocean was strewn with shipwrecks -- vessels tossed up thanks to centuries of work by the Storm Sisters and similarly vengeful and furious water spirits. Considering the continental size of the Great Western Ocean and the sheer population of spirits, gods, and stranger creatures, it was easy for a hapless ship to blunder from one sea lane into another and to find themselves suddenly beholden to a completely different set of criteria as to what was 'appropriate.' If you were sailing with blue sails and salt on the deck but entered into the court of Storm Sisters, then none of that would matter if you had a woman on the deck.\n\nThe end result was a truly staggering number of wrecks cast onto the shore, many of them still lingering under the curses that had put them there. Those curses had the opposite effect they would have in the ocean. They preserved the wrecks. No one, not even the desperately poor who had to live this close to the Great Western Ocean without a harbor god to protect them, would be willing to make a house out of cursed wood.\n\nThis is what made it such a perfect meeting spot for such an unlikely group of allies.\n\nThe ship wreck that the Piss Boot Legion sheltered under had been a two hulled catamaran of immense size, whose sturdy central hull managed to keep the second half of the ship hanging overhead despite the ship's age and the barnacles that grew along the side, dangling down like stalactites. Sea rain dripped from them while sleet gray clouds swept across the wreck strewn shore, but the hull itself kept most of the rain off the low, portable table that Ejana had set out for the meeting. Somewhere in the refugee train they had found some tea, a portable kettle, and set to boiling the water, which Tayar poured into a cup for the envoy they had come to meet.\n\n\"Sorry about the tea,\" Ember said, smiling slightly as he knelt across from the envoy. The envoy picked up the tea between two broad fingers, lifted it to her slit nose, and sniffed it.\n\nOne Eyed Razor, the Pirate-Legionary, grinned at Ember past the steam that rose from the cup.\n\n\"I expected someone more impressive, you know,\" she said, pounding back the drink.\n\n\"I expected someone with only one eye,\" Ember said. Ceaith snorted behind him and Ember held out his hand for a low five. His Lunars were disposed around the meeting area as fit their wants. Tayar had taken over the duties of serving tea and being distracting in a low cut kimono, while Chirp and Xora were kneeling at a distance -- Chirp to keep a watch on everything going on at the table, Xora to keep watch on everything beyond the wreck. Ember wasn't sure where Jaqueline had gotten herself to -- but he had spotted a bit of orange fur heading up into the rafters. So, he was pretty sure that his Agate had found somewhere to leap down dramatically at the appropriate moment.\n\nOne Eyed Razor did, in fact, have two eyes. She had gray skin and long, eel-like hair that draped along her back like slippery coils. Her eyes were pure midnight black, without pupils or whites that Ember could see. Her nose was slitted, like a shark, and her teeth were razor sharp, glittering with every grin that she sent his way. He noticed a very faint hint of gills along her neck, similar to Xora's. But where Xora was broad and muscular, One Eyed Razor was made of angular lines and narrow, predatory grace. She slammed the cup down on the table, like she had just pounded down a shot of sak\u00e9.\n\n\"So!\" One Eyed Razor said. \"Let me run down this, bullet point by bullet point, to make sure I've got the picture.\"\n\nShe clicked her claws, then flicked her finger at Ember. \"You died.\"\n\n\"Yes,\" Ember said.\n\n\"And crawled out of Hell,\" One Eyed Razor said.\n\n\"Yes,\" Ember said.\n\n\"And now you've got no powers, no mandate of Heaven, no soulgem, and nothing between you and your Lunar Circle than just their own feelings. No celestial marriages. No empathic links. No mana transfusions.\" One Eyed Razor stood. \"For a military, all you got is the decimated remains of the Piss Boot Legion, a few civilian stragglers, and a single skyship from the fucking Locust People and one of their wind up toys.\"\n\n\"Hey!\" Elegant Nova of Progression said, turning away from the wooden hulls he had been prodding at. \"I'm not just a toy. I'm a Champion of Lyca.\"\n\n\"Yeah. Sure.\" One Eyed Razor started to pace, her hands on her hips. \"So, you want me to sign up my entire Legion and all my auxilaries onto your side to take on the First, the Second, the Fourth and the Eight Legions all at the same time. Oh, who are also led by the Good King Bahul, a hundred year of Unconquered who has spent that entire time training to be stronger, faster, and more powerful than any mortal has ever been. All to...\" She spread her hands. \"What?\"\n\n\"Save the world,\" Ember said, nodding seriously.\n\nOne Eyed Razor sucked on her lower lip.\n\nShe looked at Ceaith, then back at Ember, then back to Ceaith.\n\n\"You know,\" she said. \"When you first pitched this meeting to me, you didn't mention any of that shit, Ceaith.\"\n\nCeaith shrugged. \"I'm cute, so who cares?\"\n\n\"The fuck of it is that actually works.\" One Eyed Razor shook her head. \"No. That almost works. Sorry, I'd rather take my risk in the Sunder.\"\n\nEmber sighed. \"That may be okay for you and your family. But...Chirp, how many people live in the Land of Ten Billion Gods?\"\n\n\"Um...\" Chirp coughed. \"At the last census that I've read, uh, it's close to twenty billion people.\"\n\n\"If we leave,\" Ember said. \"Every single person on the Land is going to die. But if we take a stand, we have a chance.\" He clasped his hands together. \"For Cycles, the Unconquered has been used as a way to keep us from actually advancing. Every time a good Unconquered builds a culture that can last, an evil Unconquered is chosen to knock it to pieces. We can change that -- we can stop Bahul, we can stop this whole bloody cycle, and we can create a future that might be better than the past ten thousand years of murderous violence. But to do that, we need to stop Bahul. To do that, we need you.\"\n\nOne Eyed Razor snorted. \"No. You're going to need way more than just my Legion. We're good. We're the best sky-fighters you've ever seen. But we'll be outnumbered five to one out there.\" She shook her head. \"I feel bad for those people. I really do. But...unless you pull another three Legions out of your incredibly cute ass...\" She spread her hands.\n\nEmber pursed his lips. He glanced to Nova. Nova gave him a subtle nod.\n\nEmber stood, slowly, grunting with the effort. \"Come on,\" he said. \"I want to show you something, Razor.\"\n\nHe put his hand on her shoulder and turned her around -- to face the shore. Past the wrecks and the rocks, there was the sleet gray sea, roiling and crashing. Razor looked at the horizon, brushing some of her hair back and away from her eyes. There, where the horizon met the sea, a rippling began to spread across the clouds, pulling back and sweeping aside, like some vast curtain. Behind that curtain was the roiling red of the Sunder. But dotted among the clouds and between the crackling thunderbolts was a massive array of black dots -- dots that swelled in size with shocking speed as lean, knife hulled skyships cut through the air, leaving behind disturbed wakes on the water as they soared close enough to kick up sea spray.\n\nElegant Nova of Progression leaped forward and landed before One Eyed Razor and Ember, spreading her arms. \"Behold!\" she said, her voice booming as she leaked magic into it -- her eyes gleaming as her words took on the echoing reverberation of a propaganda announcer. \"The military might of the Lycan Sky-Navy!\"\n\nOne Eyed Razor whistled slowly. \"I had no idea Locust People had so many fucking guns.\"\n\nNova beamed. \"Well, I- hey! We're not Locust People! You can't just lump an entire diverse group of people into one mass, you stupid Shardies!\"\n\n\"Nova!\" Ember pointed his finger at us. \"Remember what we talked about?\"\n\nNova pouted. \"Fine. But there's a way bigger difference between a Lycan and a Suryan than there is between...\" She gestured to the gray skinned, black eyed, eel haired One Eyed Razor and the red skinned, gold eyed, black haired Ember. \"You know. Whatever ethnic groups you two are.\"\n\nEmber shook his head.\n\nNo matter what happened next...it was going to be interesting.\n\n***\n\nThe planning and the tactical preparations for the last ditched, desperate bid to save the whole of the Land from the mad plans of King Bahul ran into a snag near their end. Everything had been going quite well: The Ninth Legion and the Piss Boot Legion would merge their troops, with the Piss Boot Legionaries serving as the marines aboard Ninth Legion skyships. The Lycan sky-navy would serve as the central core of their attack formation -- having the most heavily armored ships, they would be able to soak up the incoming weaponry from their enemies. They would converge towards Bahul's statue, and seek to destroy it before it could launch. The flagship of the Ninth Legion, Razor's sleek fast attack frigate (which she had named the Stiletto), would carry the five Lunars into their destined battle against Bahul himself.\n\n\"Five Lunars,\" June said as she explained this part of the plan to One Eyed Razor, Ejana, and the Lycan admiral. \"Normally, any one Lunar would be helpless against an Unconquered. Doubly so since they're nominally married to him. But since Chirp, Ceaith, Xora, Jaqueline and Tayar were married to Ember, not to Bahul, that restriction won't have any sway with them. And where one Unconquered can defeat one Lunar in battle, five would be able to hold him down and beat the fuck out of him.\"\n\nThe Lycan admiral -- a tall, broad shouldered man whose face looked like it had been plated in solid jade and riveted into place -- nodded. \"Understood. We shall deploy our Champion, Nova, to assist in that battle.\" He frowned. \"This better work...\" He lifted his head, glaring right at Tayar. \"And you promise that the treaty is binding, even if some, or all, of you should fall in battle?\"\n\n\"The treaty is binding,\" Tayar said. The treaty had been what brought the Lycans in in such a dramatic force: It stipulated that, for ten thousand years, so long as the rulers of the Land persisted, they would owe the Lycans the first pick in purchasing and mining magical materials. They also promised several immigration treaties, to allow people from the Land to move to Lyca and vice versa. This would be a dramatic shift in the relation between the Land and the city states of the Sunder. For ten thousand years, the strongest nation-states had come into the Land and scooped up massive chunks of it every time they wanted to. Without a way to defend itself, the Land had simply grown used to this predation.\n\nThat was about to change. Thanks to Ember. Ember was feeling pretty good about that when the snag happened.\n\n\"Besides,\" Tayar said. \"Ember will be remaining behind -- he shall be able to uphold the treaty.\"\n\n\"I excuse me what?\" Ember snapped his head up from the map to the gathered generals and Lunars.\n\nCeaith had the good graces to look abashed. So did Chirp. Xora and Jaqueline exchanged a glance. Tayar, lovely Tayar, tried to be diplomatic. \"Ember...\" she said. \"You're not the Unconquered right now.\"\n\nEmber flinched, then looked down at the map. \"I should be there.\" He whispered.\n\n\"Ember...\" Ceaith moved around the table. She put her hand on his. \"It's going to be a battle between five demigods and a two hundred year old God-Emperor with all the power of the incarnae sun in his hands. Like.\" She shook her head, brushing her fingers through her wild mane of brown hair. \"Anyone who gets within a mile of ground zero is going to be ripped to pieces.\"\n\nChirp gulped and looked as if they, at that moment, would rather like to bow out of the upcoming battle.\n\nEmber clenched his hands and then let them rest on the map. He hung his head forward. \"I should be there...\" His voice was almost silent. Shame burned through him -- a fierce needle sharp shame that made tears prick at the corners of his eyes. At the moment the world needed him most, he was useless. So fucking useless. He drew in a shuddering breath -- and he lied. \"All right. I'll stay behind.\"\n\n\"Yeah...\" Ceaith said, quietly. \"Ember. I love you. I want you to know that. Like. A lot. Look up.\"\n\nHe lifted his head.\n\nCeaith punched him in the jaw -- and Ember went out like a light.\n\n***\n\nJune Devilblood stood on the prow of the Ninth Legion attack frigate, the Broadsword, and squinted into the wind. The sails of the skyship crackled with aetheric lightning as her crew hauled them out to as far a span as they could manage. The whole craft felt as if it was shuddering beneath her feet, trembling as it caught the wind and rocketed forward. Ahead of her, the Land swept out like a carpet of greens and golds. Fields. Forests. And beyond them, the still smoldering ruin of Samsara.\n\nEven the apocalyptic bombardment that had struck the city had not fully erased it from creation. Yes, a good chunk of it was now so much smoldering ice, and huge swaths have been reduced to frozen craters. But buildings still stood -- all with a chunk or two ripped from them, like some ferocious, hungry titans had been about the city, clawing and digging. Clustered around the city like a murder of crows were the remaining ships of the loyalist Legions. Most of them were the heavy battleships and cruisers that had been too slow to hound the refugees as they had tried to flee in desperation.\n\nJune's fingers dropped to the bottles on her belt. She had brewed as fiercely as she could while the preparations had been taking place. While the Lycans and the Ninth Legion had both had plenty of supplies, there was a limit to what most thamaturges could do in a crunch.\n\nJune grinned.\n\nShe wasn't most thamaturges.\n\nShe spared a glance to the left and took that moment to admire the splendid view that was war. The whole sweep of the combined Locust and Lander fleets was majestic: Hundreds of ships with spread aetheric sails, the polished snouts of their mana-cannons aimed towards the enemy. Crew in bright, crisp uniforms scrambled about, while Piss Boot Legionaries readied their heavy armor. Infused Knights, clad in shimmering elemental animas, moved into high positions on the rigging, to prepare themselves for leaping onto enemy ships in close in actions.\n\nJune had been in a great many wars in her hundred years of life.\n\nAnd she knew that there was something other than just horribleness to the business. There was a majesty. A thriving energy. A driving beauty. But June never told another soul about it. Young men and women didn't need any more encouragement to do incredibly foolish things. And with that, she whipped the bottled cloud from her belt and dashed it against the side of the Broadsword. The magic exploded from the bottle and the air ahead of them rippled and then bloomed with clouds, clouds that swept outwards in every direction. Within a moment, the sky before Samsara had become seeded with darkness.\n\nJune crouched down as cries came from the rest of the frigate. The crew were getting ready.\n\nAnd so was she.\n\nOnce they were in the melee, she was going to find Goat who Wrestles.\n\nAnd she was going to kill him so fucking hard.\n\nMeanwhile, on the flagship of the Ninth Legion, the Lunars were all hugging one last time. Drawing apart, Ceaith tried to look as if she wasn't concerned. \"This is going to be easy as fuck,\" she said.\n\n\"Did you have to punch Ember?\" Xora asked, her voice soft.\n\nCeaith snorted. \"You all saw him lie his stupid butt off, though?\" She turned, shaking her head. \"He was going to try and come with and he was going to get himself killed.\" She shook her head again. \"No. Not going to happen. Not on my watch.\"\n\nChirp bit their lip. \"What if he was trying to get Chosen again?\"\n\nThey all looked at the Sari.\n\nChirp blushed. \"An Unconquered is Chosen when they refuse to take the easy route three times,\" they said, nodding. \"Sitting out a battle is the easy route, right?\" The shrugged. \"It's worth a shot, right. M-Maybe Ember would get Chosen again.\"\n\nChirp shook her head. \"No...no, Ember said that the Land was built by the Locust People as a resource trough.\"\n\n\"For the last time!\" Nova snapped from where she was fiddling with the hilt of her beamsword. She had sat down in the captain's chair before One Eyed Razor had glared her off of it. Now she was in the corner, looking sulky, even as she twiddled with screws and adjusted focusing apertures with her other hand. \"It wasn't built by the Locust People. It was built by a joint alliance between the Ianers and the Neo-Suryan Front.\" She shook her head. \"Dead Gods, people. You might as well call me a Korvosan.\"\n\n\"I don't know what any of those people are!\" Ceaith snapped.\n\n\"Well-\" Nova started.\n\n\"Ladies!\" One Eyed Razor barked. \"Combat stations!\"\n\nThe skyship began to pick up pace even more. The crew at their bridge stations exchanged a few terse comments -- lost in the howl of the wind. The Lunars, moving as one, stepped up to stand nearest to the view port as they could manage without getting in the way. Through that viewport, they could see the sweep of the enemy fleet before them. Ceaith's teeth skinned back into a grin as she saw that the heavy, wallowing battleships and the sleeker cruisers were all only barely into formation. They didn't have total surprise. But they had something close to it.\n\n\"Lets do this,\" Ceaith whispered.\n\n***\n\nEmber awoke with a low groan. His head felt as if someone had started drumming on him with the legs of a god, and his mouth tasted like salt. He shook his head and smacked his lips and tried to get his vision to see straight. Instead, all he saw was the red haze of a silken blanket. He writhed, squirmed, and finally managed to get himself out of the blankets. He was laying in a makeshift bed, with as much finery and comforts as could be contrived around him: There was a large sheet of silk, a few curtains, a golden brazier, and a small shrine to the local gods. Two men stood at the doorway.\n\n\"Hey!\" Ember shouted.\n\nWell.\n\nHe tried to shout. It came out as a groaning creak that barely sounded like language, let alone like himself. The two guards glanced back at him, then hurried forward. One knelt beside him. \"Unconquered,\" he said, his voice full of concern. Ember bristled at the honorific as his hand went to his aching jaw.\n\n\"My wife just knocked me unconscious,\" he said, slowly, working his jaw as he did so. \"Ow. Fuck.\" He started to try and stand. The two men gently pushed him back onto the bed.\n\n\"Unconquered, we were given express orders,\" the guardsman on the left said. \"Ceaith was very clear about it, as was the rest of your wives. You are not to leave this tent.\"\n\nEmber scowled. \"What, just because I'm an unpowered mortal?\" he asked, his voice biting.\n\n\"Well, yes,\" the guard on the right said. The guard on the left kicked him in the shin.\n\nEmber scowled harder. \"Listen,\" he said. \"If you expect me to stay behind while the whole world's fate is on the line, you need to think again. Get. Out. Of. My. Way.\" He tried to channel mana into his words. There had been a time, just a few days before, where doing that would have been effortless. Easy. But instead of mana, there was just the force of his own personality. It was simply not enough. The guards shook their heads.",
        "\"We're loyal to you, sir,\" the guard on the left said, quietly. \"That means we're loyal to your wives -- and their orders were clear. And...\" He threw up his hand. \"Hells, sire, they make sense.\"\n\nEmber sighed. \"I suppose they do,\" he said, then slumped back into the bed. At the back of his mind, he heard a tiny voice, a snide voice, a voice he hadn't heard in a very long time. It was the voice that had whispered to him when he had been a normal villager back in Rataka. It had said: Lie down. Go to sleep. Relax. There's nothing you can do. Right? Ember hooked his feet under the bed and felt his heel bump against the cool metal of a chamber pot. He paused, biting his lip. The two guards smiled at one another, then at him.\n\n\"Besides,\" the guard on the right said. \"Your wives are amazing! They'll have this in the bag without your help.\"\n\n\"Right.\" Ember hooked his foot on the chamber pot, feeling that it was dry and unused. He kicked it up into the air with a single fluid movement. While he might not have had the strength or accuracy of the Unconquered, he didn't need it to plant the pot directly into the guard on the left's belly. The breastplate he wore took most of the impact, but there was still enough force to stagger him -- and then Ember was on his feet and sprinting from the tent. He emerged onto the scattered shipwrecks of the coast, and spotted all that his Legions had left behind: Civilian attaches, refugees who couldn't fight, the injured. He saw a Ninth Legion courier, lounging against the smallest skyship that Ember had ever seen. It was barely the size of a human man, being nothing more than a pole and a pair of folded up aetheric sails.\n\nThe courier was chatting with a woman who had lost both of her legs and was still bandaged heavily. \"Then I said,\" the courier said. \"You can't pull that in the Sunder.\"\n\nThe woman burst out laughing and the courier looked quite pleased with his joke and his non-zero chance to get the wounded woman in bed. That was why he didn't seem to hear Ember until Ember was slamming into him shoulder first. The courier pitched onto his face, mashing up against the sand of the beach, and Ember sprang onto his small skycraft, tugging on ropes and spars in a mad dash to try and get the sails out and unfurled.\n\nHis two guards ran up, panting. They hadn't drawn their swords -- but they didn't seem to think they needed to. \"Sire!\" the left guard said. \"Sire, if you go to that battle, you will die.\"\n\n\"Yeah, well, then, I'll see you in hell!\" Ember said, then yanked a line taut. The sail at the top of the skycraft belled outwards, filling with arcanic winds, and the entire slender vehicle sprang into the air and whisked away, the lower sail unfolding as well and kicking the entire vehicle to a speed that was so roaring fast that Ember's cheeks filled out like sails themselves. He ducked his head against the mast, holding on tight, and squinted into the wind, holding onto the steering reigns as best as he could. His flight was less elegant than the ride he had taken on the village horse so long ago.\n\nAnd that was saying something.\n\n***\n\nThe sky above Samsara was a frozen conflagration. A coherent pulse of mana fired from a mana-cannon was an endothermic reaction. It sucked heat from the surrounding space, collapsing it into a starburst of sudden chill that could shatter metal and freeze a soul solid. But if that had been all that a mana-cannon did, that would have been devastating enough. Add to the endothermic blasts a concussive wave of magical energies and the unpredictable backlash that soldiers called 'mana burn' and you have an ingredient for a hell nearly as bad as the one with brassy cauldrons and hissing devils.\n\nBattleships from both sides flew into the thick of enemy formations, trading rippling broadsides of crackling energy, while brass and jade armor buckled under the snap-cold impacts. Frost swept along handrails and rigging and men and women slipped from them to crash onto the decks, if they were lucky. Less lucky, they plunged into the ruined city below them. But among the heavy guns flew nimble craft, far smaller and far lighter, armed with everything from pintle mounted automatic crossbows to hull-hugging vortex arrow launchers. Those were the dangerous craft.\n\nA trio of destroyers with a brace of vortex arrows could hammer them along the entire length of a battleship and crack the hull like an egg -- ripping it apart in a swirl of raw chaos and destructive energies. The souls of people caught in those blasts were ripped from their bodies with enough pain and horror that they would have traumatic nightmares in their next life after a long turn on the wheel of reincarnation. To stop the destroyers, both sides used their frigates and their lighter craft in the same way that a fencer might use a dagger.\n\nParry. Thrust. Deadly little duels among the bigger duel, no more earnest for the fact that they were on such a smaller scale, using far lighter weapons.\n\nThe Broadsword was one such frigate, caught in one of those deadly little battles. June Devilblooded ducked low as a Loyalist frigate skimmed by, so close that the aetheric winds of its passage rattled the rigging. From the side of the enemy came a chattering sound -- three automatic crossbows, hammering away as they fired their thick quarrels down onto the crew, who dove for cover. The captain, standing proudly on the poop deck, twirled the wheel and bellowed orders to her officers, while men -- sweating even in the arctic chill of the battle -- heaved the heavy barrels of the deck mounted mana cannons to bear.\n\nJune had planned to save her magics for her enemy. But she wasn't about to let the ship she was on get taken out -- especially not with her on it. As the frigate dove behind the Broadsword and swept itself around for another pass, she fished out a bottle of crackling blue lightning. She crushed it between her fingers, bringing her left hand up behind her. Wind swept around her body and her hair turned from her normal raven hues to pure white. She thrust out her finger and spoke a word in the that had been common in the tongues of the sky-spirits, before the Third Unconquered's conquests stamped it out of existence.\n\nWith that word, the energies sprang from her fingertip.\n\nThe lightning crashed into the frigate as it came around for the other pass. Wood splintered, brass melted, and the rigging burst into flame as the lightning bolt scythed out the other side of the enemy. The frigate tumbled in half, crashing down towards the city.\n\nThe crew gaped at June, who blew the last few sparks off her finger.\n\n\"Look out!\" A man shouted. June had enough time to see the starbolt flying from the heavens before it struck the deck of the Broadsword. June slammed her palm down and sent herself flying upwards, summoning her stormwind rider with a reflexive twist of magic. She barely had enough time to clear the Broadsword before the entire hull exploded into a lethal haze of splinters. The fragments and the crew tumbled away as June crouched on the swirling yellow cloud upon which she stood. Standing on a floating chunk of sail and rigging, which was buoyed in the air by tiny ambient twitches of magical energies, was Goat who Wrestles.\n\nGoat was holding a pipe in one hand. He puffed on it.\n\n\"You bastard,\" June snarled.\n\n\"Granted.\" He grinned at her. \"Shall we?\"\n\n***\n\n\"Chirp, get down!\" Xora shouted, then tackled Chirp before a mana-blast slammed into the Ruby Lunar. Chirp, their belly mashed up against the deck of the battleship they were on. Xora pushed herself to her arms and knees, panting. \"Are you okay?\" she asked.\n\n\"Yes!\" Chirp nodded -- then kicked hard. One of the many enemy crewmen that still were onboard the enemy battleship went stumbling backwards, clutching at his belly. Chirp scrambled to their feet when Xora had stood as well. \"Uh, thanks.\" They blushed -- feeling painfully useless. The entire circle of Lunars had leaped from the Stiletto to the enemy battleship. There was no chance that Chirp would have stayed behind -- but they remembered the promise Ember had made.\n\nChirp is never harming another person in their entire life! Not on my watch! Not again!\n\nChirp shook their head. That had been when they had hoped, had thought that maybe things would be all right. Instead, everything had gone out of control. They looked back and saw that more mana-blasts were crashing into the prow of the ship, fired by their allies towards the ship, possibly because they hadn't gotten the memo that the Lunars were onboard. Xora shattered an enemy marine's sword, then headbutted him down with casual ease, then dragged Chirp forward. \"Come on,\" She said, giving them a little smile.\n\nThe back of the battleship shuddered. Parts went flying as hull-wood cracked and flew apart into a haze of splinters -- and into that destruction leaped the massive, house-sized body of Ceaith in her war form. As she landed on the rigging, her weight and her claws worked together to tear apart the fragile components that helped to keep the battleship in the sky. Once her paws hit the deck, she was washed in a blue glow, shrinking down to her humanoid form. Her laugh -- high and giggly and snorting -- carried to Chirp.\n\n\"Oh man,\" Ceaith said, her yellow/blue eyes glittering as she walked over. \"We should get into wars more often!\" The whole battleship shuddered under their feet.\n\n\"We need to get closer to the statue,\" Chirp said, trying to sound determined and not terrified. They pointed down at the center of Samsara, where the massive statue of King Bahul -- in his guise as the Regent -- remained standing, clad in the complex array of magitechnological devices that Ember seemed convinced would carry the statue up to the sun, to enact Bahul's mad plan to destroy the sun itself. Chirp shaded their eyes, frowning. \"There are anti-magic generators. How are we going to get close to that?\"\n\nCeaith was gone.\n\n\"Ceaith?\" Chirp asked, looking for her, then looking at Xora -- while Tayar and Jaqueline jogged over.\n\n\"We should get off this ship!\" Tayar said.\n\n\"Woooooooooohooooooo!\"\n\nEach of them saw where Ceaith had gotten too now.\n\nCeaith was on the bridge, standing next to the corpse of the captain, who was sprawled over the deck console. The bridge crew had fled, rushing for the escape boats, which were even now, floating away from the battleship as it started to slew, to skid, to come down, nose down, towards the anti-magic field generators that surround the golden statue. Chirp squeaked and grabbed onto Xora, who grabbed onto Jaqueline, before leaping into the air. Tayar transformed into her crow form with a flash of pearlish light, while Ceaith, still cackling, slammed down on a series of controls.\n\nAt the back of the battleship, several massive engines came to life -- blazing mana engines that kicked out flurries of snow as they added to the force of gravity and the angled, tattered sail. The nose of the ship trembled as it shot towards the collection of makeshift walls and anti-air defenses and anti-magical shields that surrounded the statue. Vortexes began to explode across the prow, taking out chunks of armored plating and stripping away swaths of the hull. But the massive bulk of the ship continued to go straight forward, unstoppable.\n\nCeaith launched herself smoothly into the air at the same moment the hijacked battleship impacted with the ground. The anti-magic field generators were ripped apart in a howling scream of metal and wood, and the men who had manned the anti-aircraft weaponry positioned nearby went scrambling away, trying to escape from the storm of brass and splinters, their heavy armor clattering like rain on a tin roof. Ceaith landed, lightly, on the small patch of clear ground ahead of the rubble pile. She stood, brushing her hands along her sleeves, then looked up at the statue.\n\nBahul stood upon the head of his creation, like an absurdly tiny jewel in an invisible crown.\n\nWithout the mask that Bahul had used to masquerade as a Regent, Ceaith could see the way that his mustache bristled and his lips turned down in a fierce frown.\n\n\"Hey, dickhead!\" Ceaith shouted. \"I broke your wall.\"\n\nBahul frowned. As he regarded Ceaith, Tayar swept down to land beside Ceaith, transforming to her humanoid form. Jaquelin, Xora, and Chirp came down next, Xora landing with a grunt as her legs shattered the stone under her feet. She stood in the rubble, looking abashed at the devastation she had caused.\n\n\"S-Sorry about that!\" She called up to Bahul, as if he would be concerned about a hole poked in the pavement of a city that had been bombed into rubble and frozen into a permanent ice-flow.\n\nBahul's eyes settled on Chirp. \"A Ruby that doesn't kill...\" He said, his eyes taking in the lack of blood on Chirp, the absence of any weapons.\n\n\"Hey!\" Jaqueline snapped, stepping forward to stand between Chirp and him. \"Chirp doesn't-\"\n\nBahul narrowed his eyes. \"An Agate without patience or restraint.\"\n\n\"We're not defined by the gods!\" Ceaith shouted up at him.\n\n\"A Lapis without faith, a Pearl without passion,\" Bahul continued speaking, his eyes narrowing with disgust as he looked at Tayar, who glared at him. \"And an Amethyst that doesn't want to fight at all!\" He shook his head slowly. \"All married to a false Unconquered who isn't even here. Pathetic.\"\n\nCeaith growled, then sprang up -- landing on the golden knee of the statue. But before she could leap again, a shadow emerged from nowhere, as if space itself had unfolded and revealed a lithe, dark form. A knife flashed at her, but Ceaith kicked wildly away, twisting and squirming. The knife parted several strands of her brown hair -- but she landed on the ground beside Xora, panting heavily, as the dark figure dropped and landed, knife glittering in their hand.\n\nKergalian Rexatox Mishur Vilemarsh Kyife, the high assassin of the Regency, stood. She wore her mask, still, and her eyes gleamed hatefully behind the eye-holes. She tossed her knife from hand to hand, causally. \"You're not my enemy,\" she said, her voice cold -- her eyes tracking to Chirp. \"There we go.\"\n\nKyife reached up, tugging off her mask. Underneath, her face was prim. Proper. Beautiful, even.\n\nAnd blazing upon her forehead was the shimmering red tear-drop of a Ruby soul gem. Chirp froze, their eyes widening, as Bahul spoke. \"When I discovered the truth of this world, I knew that I had to destroy it. I had to end the Cycle -- to bring this miserable excuse of a worldshard to an end.\" He shook his head. \"Three of my Lunars objected. But two? Two saw the light, just as I had hoped -- my Ruby...\"\n\nPurple lightning exploded from the ground, wrapping around Ceaith's ankles and her wrists. She cried out as she was dragged to her knees, her hair standing on end as black veins began to grow along her skin from the places where the chains touched her flesh -- as if corruption spread through her. Stepping from the shadow of the statues legs came the buxom, red headed, fox eared girl that she knew as the One Tailed Kitsune. But her forehead showed that she had a small pearl on it.\n\n\"And my Pearl,\" Bahul said as Ceaith saw that Xora, Tayar, and Jaqueline were all dragged down to their knees as well. The One Tailed Kitsune held her hand out, and nearly invisible lines stretched from it to the lightning bolts. Her eyes gleamed as she smirked.\n\n\"We're finally going to have a little order here,\" Kitsune said, quietly.\n\n\"You little-\" Ceaith tried to surge to her feet, but the chains dragged her back.\n\n\"I left the false Ruby for you, honey,\" Kitsune crooned.\n\nKyife tossed her blade from hand to hand. She cocked her head, then shook her head slowly. \"Oh please.\" And with that, she turned her back on Chirp, advancing towards Ceaith. Ceaith strained, struggling to try and pull her hands off the ground. But the purple lightning chains had dragged her down even harder, forcing her down, down, close to the floor. Kyife grinned as she held up her dagger. Green venom dripped from it.\n\n\"This is devil venom,\" she whispered. \"The same venom my proxy used on your husband.\"\n\nCeaith trembled, gritting her teeth as she tried to change.\n\nKyife hefted up the knife, humming softly. \"A little cut. Or should I stab you right in your heart?\"\n\n\"Hey!\"\n\nKyife and Kitsune both glanced up.\n\nChirp, their hands clenched, stood there, their eyes glittering.\n\n\"You forgot about me,\" they said.\n\n\"No, uh, we were ignoring you,\" Kyife said, smirking. \"You're pathetic. You won't kill. You barely fight. You hate being a Ruby, and you can't even decide what gender you are.\" She shook her head. \"What under the sun makes you think that you're worth more than a tiny fraction of a second of time.\"\n\nChirp drew a slow breath. They closed their eyes.\n\nAnd then blood red light swept from their head to their feet. Their body unfolded, growing lager...and lager. And larger. And larger. As the blood red hue faded, sinking back into Chirp's body, they stood almost thirty feet tall, their body rippling with midnight black fur and muscle. Their wrists and their legs were joined by a vast patagium, which caught the sunlight and turned it brilliant red. Their eyes glowed brilliant red and they breathed slowly in and out, sounding like the vast bellows of a forge.\n\n\"Just because I won't kill you...\" Chirp growled. \"Doesn't mean I won't hurt you.\"\n\n \n\nThe One Tailed Kitsune lifted up her hand, beginning to speak the first word of the Broken Winged Crane. Chirp's clawed paw snatched her up and flung her halfway across the city. Chirp was quite deliberate -- the One Tailed Kitsune smashed into a pile of rubble and ended up pinned through the left knee by a chunk of jagged rebar. She tried to articulate a word around the horrible pain and found that it was quite impossible.\n\nKyife lifted her blade.\n\nChirp snatched her up and threw her down into the ground even harder. Again, Chirp was quite deliberate -- the impact cratered the ground and left Kyife bleeding from several broken limbs, her eyes unfocused. Her knife was missing.\n\nChirp panted as the crackling purple lightning vanished and Ceaith sprang to her feet.\n\n\"Chirp, I love-\" She started.\n\nBut the rest of the sentence was lost in the roar of the engines coming to life.\n\n***\n\nEmber clung to the courier craft, his body wracked with cold shudders. On the one hand, getting to the battle seemed like the best thing to do. On the other hand, he had forgotten how fragile he had been before the power of the Unconquered had filled his body. Back then, he could have flown from the beach to Samsara without a shirt or pants beyond a small wrap without freezing to the bone. As it was, his teeth chattered and his fingers felt numb, even as he came closer and closer to the battlefield ahead of him.\n\nFrom what he could see, the Lycan and his forces were both beginning to dominate. Several loyalist battleships were already crashed onto the ground, sprawled out, their guts opened up onto the ruins of the city while their engines burned with blue flames.\n\nBut then Ember saw a pin-prick of searing blue-white light. He winced against it...and then he blinked away the pain as a roar, subliminal and low, reached his ears. Then the pinprick started to rise into the air, and below it he saw a billowing, spreading expanse of white roiling smoke. His eyes widened as he saw that the golden statue of the Regent was beginning to rise in the air, lifted upon a massive collection of blazing magitech thrusters.\n\nEmber gritted his teeth, then tugged back on the reigns. He had had enough practice by now to figure out how to go up. And so, he angled upwards. The air got colder and colder as the wind roared past him -- the battle flashing by underneath him. But then the slowly rising statue was growing before him -- swelling from human sized to giant sized to the whole horizon. He saw that there was scaffolding around the chest, like some vast breastplate. He tried to bleed air from the sails -- and slowed. Fractionally.",
        "The crash still smashed him into the scaffolding and flung him hard against the golden chest of the immense statue. He felt something crunch in his wrist and then crack in his back as he collapsed onto his back, his arm flung out wide. The ship he had flown all the way here tumbled away, crumpled and crushed like it had been caught up in the fist of a furious god. Then the air rushing by them shifted -- changing from wispy and thin and blue to a roiling blaze of red and black and lightning. They were in the Sunder.\n\nEmber slowly sat up, groaning as he did so.\n\nThe Sunder didn't rush in to blast him with chaos. It was being kept at bay by the magical generators of the statue's cladding. And in that moment, Ember was able to see the Land spread out underneath him. He could see the vast height of Mount Mahameru -- coming to its flat top, where he saw that complex machines were built. All part of the vast collection of devices that the builders of the Land had made, to keep the Land functioning. He started to stand up, looking up past the scaffolding he stood on.\n\nPast the head of the statue, he could see the brilliant glow of the Sun. It grew closer by the second.\n\nEmber gritted his teeth and began to start up the statue.\n\n***\n\nA block of the ruined city of Samsara was now, currently, more on fire than it was frozen. If this was the only unique thing about it, it would have been a reason to come and check it out. But the fact it had two masters of their arts dueling meant that survivors from both sides, who had landed with parachutes and life boats, started to gather in the rubble, to watch as the two finest warriors on the battlefield struck at one another.\n\nFive origami replicas of June flipped and twirled on their axis, lashing out with their arms. Slashing paper-cuts, sharp enough to slice through bronze, swept through the air towards Goat who Wrestles. He blocked each with a pinkie, hardened to steel by the focus of his martial skill. Each impact filled the air with sparks and a clang. Once he had blocked each, Goat popped his pipe from his mouth and breathed out a gout of flame that transformed into a massive, flaming deer, which rushed towards June. June clapped her hands together, then flashed them out -- red ink had written sacred symbols on her palms, and as the flames struck the symbols, the deer flew apart into a haze of flames.\n\n\"You're getting slow in your old age, Goat!\" June shouted.\n\n\"Hell seems to have softened your killing instinct, though,\" Goat said, then clapped his pipe in his teeth. He paced to the side, then started to sprint forward. June sprang backwards -- and when she left the ground, the ground that she had stood upon melted down. Flames roared up out of the pits, and Goat wove between the gouting flames, blocking them with casual sweeps of his arms, before he reached out for June. He caught her wrist.\n\nJune exploded into a haze of butterflies.\n\nGoat clapped his palm, crushing two butterflies, and when the butterflies swept back around, reforming into June on a boulder of wreckage about ten yards away, blood dripped from a pair of gouges taken from her shoulder. She gritted her teeth.\n\n\"Why?\" She hissed.\n\n\"Why?\" Goat chuckled. \"Ten thousand years of bloodshed, pain, and death. And why? Because of a fake world. A fake life. Fake people.\" He shook his head. \"Bahul is going to make something better. Bahul is going to make something that is worth being built. And he's going to make it while I'm fucking Champion whores in Surya!\" He laughed. \"I've got a ticket off this pathetic shard.\"\n\nHe sprinted forward, then jerked out his pipe with a shove -- sending glittering ashes into the air, which flew straight towards June's eyes. She thrust out with two fingers and a billowing explosion of white air shot into the air, blowing the ashes away. But then Goat kicked her in the gut with an arrow fast blow, knocking her back off the boulder. She collapsed to her side, hissing as she clapped her hands together. \"Thin ice thin ice-\"\n\nShe began to turn one dimensional, so that she could slip away, but Goat sprang atop her, grabbing onto her throat. He jerked her up, with the iron had strength of a true master, holding her up and off the ground. He tossed her up, and then brought his palm down onto the ground. \"Air juggle style!\" he shouted, and June was frozen in the air, caught still, her arms locked in her flailing posture, her legs half cocked. She tried to move -- but she couldn't move anything...save...\n\nHer tail twitched.\n\nGoat planted two fingers against her temple. \"Hundred blows as one strike...\" he whispered, looking as if he was beginning to draw up the energy for the blow. June had seen it before, on many battlefields, where they had fought together as friends and allies. She had seen the twisted, exploded ruins of bodies left behind. Energies began to crackle along his body, buzzing along his spine. June started reaching for bottles and tinctures -- but her belt was empty of everything.\n\n\"Bye June,\" Goat said, grinning.\n\nJune's tail closed around a brass bottle.\n\nShe whipped her tail around and flicked it once -- and the bottle flew straight into Goat's mouth. He choked, staggering backwards, sucking in air in his shock. With the sudden loss of focus, June landed, then punched the back of the bottle. She heard something inside of it shifting and a muted pop as a cork came free. Goat's eyes widened and he clutched at his throat as it bulged, wriggling. Green flames exploded along his body, gouting from his nose, his ears, around his eyes. He fell to his knees, the bottle falling from his lips so he could scream and scream.\n\n\"Don't worry,\" June said, her voice acid. \"After the first few weeks, Hell isn't so bad.\"\n\nThe green flames swept out. Skin flaked away. And when it had faded, Goat who Wrestles was a blackened skeleton -- which crumbled apart, into a pile of ash.\n\nJune panted, then sat down on her ass. She lifted her eyes to the tower of smoke, and to the distant statue.\n\n\"Good luck, Ember,\" she muttered.\n\n***\n\nEmber staggered to the last ramp of the statue -- and found that the scaffolding led to an ear. But it was here that he had to admit that something was happening to the statue. As it drew closer and closer to the sun, the golden hue of the statue had shifted, becoming harder and sturdier and gaining a glossy glow to it. He put his palm against it -- and realized that it was familiar. It was the same glowing golden metal that the ancient spear of his home village had been made of.\n\n\"Orichalicum,\" the deep, bass voice of Bahul jerked Ember's head around.\n\nThe ear lead into a straight corridor which itself lead into a circular chamber that looked a great deal like the bridge of the Starshrike, save that it had only one chair. That chair was dominated by the immense bulk of Bahul himself. He was looking through the eyes of his own statue, which displayed the view of the Sun -- which was drawing closer and closer and closer.\n\n\"It's Orichalicum,\" Bahul said, slowly standing as Ember staggered inside. \"Also known as sunsteel -- it is forged by exposing gold to the purified rays of the sun itself. Only possible under prismatic effects and certain storms on the Land. But here?\" He spread his hands. \"Here, we are surround by that light. And in an instant, I have crafted the largest warstrider that has ever been.\"\n\n\"And with it...\" Ember said, panting. \"You're going to kill the sun.\"\n\n\"Correct.\" Bahul said, crossing his arms over his chest. \"I am going to crush the sun, shatter it into pieces, and find the control prayers for the gods that it created. With those controls, I will be able to remake the Land -- each god would be mine to command. Not to bribe with prayers, not to intimidate with violence, but to control as directly as I control my own fingers. I will tear apart the weak souls of humanity, their very biology. I will rebuild better men. Better women. There will no longer be divisions and disunity. I will remake the land itself -- there will no longer be a valley that has plenty and a valley that has nothing.\"\n\n\"And all it takes is the deaths of twenty billion people?\" Ember asked, gritting his teeth against the pain throbbing through him. He was beginning to think that maybe crashing into a golden -- now orichalicum statue -- was an exceedingly bad idea. He shook his head. \"That's vile.\"\n\n\"Better to tear off the bandage now! To make a perfect world and end this destructive cycle!\" Bahul swept his hand out. \"I am the last Unconquered -- you are nothing more than an aberration, created by the Sun in a desperate bid to prevent me from creating my perfect world.\"\n\nEmber shook his head. \"I won't let you do it, Bahul.\"\n\nBahul chuckled. \"I'm afraid you can't stop me.\"\n\nHe walked forward.\n\nEmber didn't even bother getting into void stance. He punched Bahul as hard as he could. The blow seemed to strike Bahul -- and yet, he smiled, his mustache not even disturbed. \"Valiant,\" he said as Ember punched him again and again. \"But futile.\"\n\nHe brought his fist crashing into Ember's belly. Ember coughed up a thick spurt of blood, gasping around the sudden pain that flared through his guts. He staggered, his eyes unfocused as Bahul snatched his hair up, dragging him to his feet, then twisting him around and flinging him against the far wall of the orichalicum chamber. The golden glow of the place suffused Ember as he collapsed onto his side. He coughed again, and wheezed. \"I...am Ember...of Rataka...\"\n\n\"Precisely,\" Bahul said, his voice not exactly unkind . He walked forward. \"You are Ember and no more.\"\n\nHe grabbed Ember by the throat and lifted him up. Ember clutched at the massive wrist of the burly Unconquered, while Bahul cocked his head, regarding him. \"Honestly, you got further than I ever expected, considering the chains around your waist. You, at least, have the proper spirit of the Unconquered. I had thought you weak, when you first fell to my hand. But no weak man could crawl from Hell.\" His mustache twitched in what might have been a smile. \"In fact, I must commend you for succeeding with the most paltry, mismatched set of Lunars any Unconquered has ever been saddled with.\" He sneered. \"I believe our celestial masters were getting desperate.\"\n\nEmber trembled. Not with fear. Nor pain.\n\nRage.\n\n\"Take...it...back!\" He choked out.\n\n\"Or what?\" Bahul asked. \"I haven't even flared my anima, foolish child. Your soul is willing, but...\"\n\nHe turned and started to walk for the door. \"Your flesh...\"\n\nSoul.\n\nThat word echoed in Ember's head. You're a depowered mortal whose primary value to me is the shinimatic modeling in your soul. That was what the Shadow Dragon had said.\n\nBahul stepped to the edge of the ear, with the infinite roiling chaos of the Suner beyond. He held Ember out beyond the edge, smirking at him. \"...is weak.\"\n\nEmber wheezed. \"Sh...hull...ghmm!\"\n\nBahul drew him closer, frowning. \"Last words?\" His free hand reached around, hefting Ember up by the belt of his wrappings, so he could take some pressure off Ember's throat. Ember, leaning close, hissed.\n\n\"That soulgem...is mine.\"\n\nAnd he swung his arm up and planted his palm on Bahul's forehead. His fingers clenched and the nails dug underneath the soulgem that was flush with Bahul's skin. Bahul bellowed in rage and shock, his palms opening, but Ember remained suspended as a golden flame began to spread from the gemstone to his fingers, creeping along inch by inch. Ember tugged on the gemstone -- and saw the fires sliding further along his fingers to his knuckles. Bahul clapped his hands to Ember's wrist. Ember felt his voice in his head, bellowing at him.\n\nNo! No! I am the Unconquered! You can't take it from me!<br >\n\nEmber clenched his jaw, pulling harder. You don't get it, Bahul! He thought back -- the flames reaching where Bahul's hands gripped his wrist. Ember focused -- and rather than using his own desire to be the Unconquered, he reached past. To what mattered. The memory of Chirp giggling and blushing and squirming as he worshiped her body. The fierce glare inside of Ceaith's eyes. The delightful laugh of the Rose as their rapier's clattered and clashed together. The gentle warmth of Xora. The knowing wisdom of Tayar. All of them. He didn't want this for himself.\n\nHe wanted this...for them.\n\n\"We are the Unconquered!\" Ember shouted, aloud.\n\nThe roaring flames swept along his body. Bahul's hands went went and the two of them tumbled backwards, Bahul crackling and burning with a flickering anima, as if his body could no longer quite hold the same power that it had. But as he flickered, Ember flared. Bahul snarled and punched at him as they tumbled through the Suner. Ember blocked the blow with his left forearm and then smashed his forehead into Bahul. Bahul skidded away from him in the chaos -- then focused. With his will, he transformed some Sunerstuff into a shimmering ball and chain of pure quicksilver. He swung it around his head and Ember punched it -- where his fist met the sphere, a rattling klunnng sounded and the sphere shattered apart into a thousand pieces.\n\n\"This is impossible!\" Bahul bellowed.\n\nEmber kicked off a bit of Sunerstuff as they burst through the raw chaos and into the cold blue air above the Land. He grabbed onto Bahul's wrist. He dragged him close. Hissed.\n\n\"You want the Cycle to end, Bahul?\"\n\nEmber grabbed onto the soulgem on Bahul's forehead.\n\n\"You first.\"\n\nHe ripped with all the might of the Unconquered. His body flared like a golden sun.\n\nThe gemstone came away, and Bahul's body came apart, exploding in a sizzle of hissing starlight. The concussive wave slammed Ember backwards, flipping him end over end over end. He tumbled through the air -- and felt his hand burning. The power in his hand -- the power in his head. He felt his soul surging with the energy. He realized that he was empowered -- but he held in his hand, the power and the energy of Bahul as well. He could be something greater than even an Unconquered. He could surpass the Sun itself.\n\nHe could stride the Land -- nay, the Sunder itself -- as a conquering omnipotent deity.\n\nHe could...\n\nHe could...\n\nHe could fix it all.\n\nEmber clenched his hand. He placed his fingers on his forehead -- his fingernails digging underneath his own skin. Blood flowed and pain roared through him as he screamed his soul out. The gemstone snapped free -- and he felt pain soaring through his body. But it was not a fatal pain. Ember didn't cling to the power, as Bahul had. He let it go -- and so, the power simply left him, leaving him dazed and ragged, and holding the two blazing motes of godhood.\n\n\"The Cycle...is...broken!\" He bellowed and clenched his fist.\n\nThe two motes fused.\n\nShattered.\n\nAnd Ember opened his palm in the sudden stillness of the moment. Golden motes of light filled the air around him -- a thousand fireflies. A million. A billion. A constellation of beauty that glinted and glimmered around him. Tears blurred his eyes as the cold was kept at bay. Then, one by one, the fireflies began to wink out. They zipped away, shooting off. He saw them arcing down -- landing among villages, among forests, among towns, among cities. He could see people, looking up in awe, then gasping as the motes found them.\n\nEmber smiled -- wanly.\n\nHe felt so very tired. His body was still battered -- even an Unconquered could only heal so much in a spate of a few seconds.\n\nHe let himself fall.\n\nThen, below him, silver filled his view. A roaring sound. Sleek wings. And welcoming, golden arms.\n\nAnd then nothing at all.\n\n***\n\nEmber awoke, slowly. In pieces. His left arm refused, stubbornly, because it was currently being lounged upon by Ceaith. His belly was occupied by Chirp. Xora and Jaqueline both had their hands on his right arm, while Tayar was cuddled up against his head, using her body as a pillow. But what Ember noticed after all that was a brilliant glow that faintly impressed upon him a feminine figure, frowning down at him.\n\n\"Fine!\" The figure said. \"I'll work for you. Gods.\" She shook her head.\n\nEmber's brow furrowed. He slowly sat up and Ceaith grumbled atop his arm.\n\n\"...you're the animating intelligence of the Starhshrike?\" he asked.\n\nThe figure spread her hands slowly. \"Tada!\"\n\n\"You came back!\" Ember said, excitedly.\n\nThe A.I shrugged and sat down on the bed near his feet. \"When the Starshrike came into the Sunder and it was crewed by a bunch of panicky idiots who had no idea what they were doing, I had to step in. And...I saw everything I missed on the observation orbs. Everything.\" She pursed her lips, slightly, then shook her head. \"Y-You...turned out to be a pretty good Unconquered.\"\n\nEmber slowly sagged back. \"Where are we?\"\n\n\"Samsara,\" the A.I said, smiling. \"How do you think your wives got on here?\"\n\nEmber smiled, then relaxed back into the warm embrace of his wives. Ceaith grumbled as she started to wake up. \"Hey, Ember...\" She mumbled. \"Me being here doesn't mean I, like, like you.\" She grumbled, then closed her eyes again.\n\nEmber smiled.\n\nHe wasn't quite sure what he had done.\n\nBut for now? He was just damn happy he was alive and here, with his lovers. Xora nuzzled against his belly and murmured, softly. Her teeth found the hem of his pants. Ember was very happy -- and then blinked as his cock sprang into the air. It was easily sixteen inches long, just as long and as thick as it had been when he was the Unconquered.\n\n\"What the hell?\" Ember whispered.\n\nChirp blinked.\n\n\"Well,\" they said, smiling. \"A-At least that's back.\"\n\nEmber slowly sagged back.\n\nThe future could wait.\n\n***\n\n\"And so it was, the Final Unconquered returned to the Land with his five Lunar Wives, to find that the Cycle had been broken indeed. The power of the Unconquered had been passed on -- not to one man, or one woman, but to every man, every woman, every child. The incredible power of the Unconquered, distilled into a billion people -- and while no one was ever as strong as the Unconquered, each had a glory of their own now.\"\n\n\"Some found their finest talent honed to new heights. Farmers, able to feed whole villages with a day's labor. Painters, able to make paintings that live. Craftsmen, who could make things as fine as the finest magister in a single evening. Even the Final Unconquered had a spark as well -- and it is said that his skill in the bedroom, the only talent he truly cherished from his days as the Unconquered, was all that he had left.\"\n\n\"What of the Lunars? They did not lose their powers, no. Ceaith slept her way through half a hundred women, while Chirp and Xora both retired quietly, unwilling to fight and use their powers without cause. Jaqueline, the Rose of Versalis, it is said still strikes from the shadows with his rapier and her wit. And, finally, Tayar became the finest diplomat the Realm has ever seen, and helps to keep the peace between us and the Sunderites as they come to mine our land for the resources they need.\"\n\n\"But without an Unconquered to be Chosen, no new Lunars will ever be chosen again. The Cycle truly is over -- and the Land will find a new future. Not one chosen fo...for...Aliysa? Aliysa, are you asleep?\"\n\nAliysa Vinn yelped and sat up -- her eyes widening as her storyteller glared at her. \"W-What? Me? No! No. Not. No. Not even!\" She said, shaking her head, her cheeks burning. \"No, I-\"\n\nThe storyteller's body flared with a golden-white light, mana flowing into her eyes as she looked down her nose at Aliysa. Aliysa blushed.\n\n\"Okay, only a little,\" she said.\n\n\"Out!\"\n\nAliysa walked out of the storyteller's hut, grumbling under her breath. Boys flew by -- skidding through the air on clouds. Their talent was in the occult. Aliysa sighed, her arms crossing her chest as she walked forward. She hated her talent. The spark of the Unconquered, which had passed into her when the Cycle had broken, was not exactly the most exciting enhancement of the human condition. She was very very very very tough. Knives shattered on her, she could go weeks without food, she didn't really need to sleep. She just happened to like it. It was a good way to get out of a boring lesson, for one thing.",
        "But she didn't want to be tough. She wanted to be strong. Or beautiful. Or magical.\n\nShe avoided her parents home -- not wanting to admit she had failed another apprenticeship. Instead, she went into the woods -- finding the quiet place where she had set up a chunk of rock on a stump. She had spent weeks, months, punching at the rock, trying to get strong enough to snap it in half. So far, all she had done was mildly discolor it. She hadn't even bruised her knuckles.\n\nAliysa frowned. She looked at her palm, then held it out in a flat blade.\n\nShe lifted her hand. \"Unnn-conquered!\"\n\nShe brought the blade of her hand down.\n\nThe rock didn't budge.\n\n\"Unnnnconquered!\" She shouted, bringing her palm down. It rebound off the rock and she hissed -- not in pain. Just frustration. She gritted her teeth and glared at the rock. \"Ember the Final Unconquered was able to learn how to read in a day. That's how the stories say it went. So, if he can learn that, I can learn how to be strong.\" She bellowed. \"I am the Unconquered!\"\n\nShe punched the rock -- and her body blazed with golden light.\n\nThe rock shattered.\n\nAliysa stood there, her eyes wide, her mouth open, as she looked down at the pebbles that was left after her blow. Her fingers opened. She lifted her hand, looking at it. The golden flame continued to flicker along her hand.\n\n\"I did it,\" she whispered.\n\nAliysa grinned.\n\nWhat all the sages said was impossible wasn't. They said that the singular spark of the Unconquered was just that -- a small mote that could never grow. Never change. That everyone had their empowerment, but no further. The Land was a Land of Twenty Billion Heroes, but those Heroes would remain as they were.\n\nThey were wrong.\n\nAliysa beamed.\n\nAnd the new Cycle had begun.\n\nTHE END"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "action",
        "adventure",
        "gigantic mecha",
        "group sex",
        "happy ending",
        "huge sky battle",
        "kung fu",
        "lycanthropy",
        "romance",
        "shapeshifting"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/unconquered-pt-16"
}