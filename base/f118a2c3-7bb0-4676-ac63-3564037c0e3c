{
    "title": "Master! Master! Pt. 12",
    "pages": [
        "Lorraine, Dr. Lawrence, and I were walking down the halls of the CDC hospital. CDC employees were moving in and out of patient rooms with armed guards stationed throughout the building. In every patient room was a hybrid, either lying in bed or staring out the window. They were all dressed in bleach-white clothes. They appeared well-fed and well taken care of, but seeing them, there was still a knot in my stomach. They were miserable.\n\n\"They don't belong here,\" I said.\n\n\"This is the only place where we can safely monitor them and keep them isolated from the public,\" said Dr. Lawrence.\n\n\"But they can't live like this. They need access to the outside, they need stimulation, they need care and love. They look like adults but they still have their animal personalities. You met my girls, they're like kids. They don't have the fortitude to live in such sterile conditions. At least when these people were zoo animals, they had some kind of natural home. You talked about putting my girls and I in a facility where we can be observed, but I'm not going to put them in a place like this.\"\n\n\"Considering that all this here is your doing, I wish you could be a little more appreciative as to the work we've put in. We're trying to figure out and understand the cluster-fuck you left us!\"\n\n\"Look, they at least need some toys or something,\" said Lorraine. \"They aren't lab rats to be kept in a cage or prisoners to be locked up.\"\n\n\"Wait, stop!\"\n\nA man's voice drew our attention and we all turned back to see a doctor at the end of the hall and a young woman running towards us. I recognized her, dirty-blonde hair with the largest ears I have ever seen, and short, but with wide eyes. She stopped in front of me, the fennec fox I had transformed, Lola. We both stared at each other, unsure of what to say. She slowly raised her hand, as if to wave to me, and I mirrored the act, pressing my palm against hers. The last time I saw her, we had been just like this, but with a pane of glass between us.\n\n\"You're the man from before,\" she murmured. \"I wanted to see you again.\"\n\n\"And I wanted to see you too, every minute of every day.\"\n\nShe then leaned in and hugged me, her face buried in my chest. \"Master!\" she whimpered.\n\nI embraced her, as if trying to shield her from the world and keep her safe in the sanctity of my arms. \"I'm sorry, I'm so sorry I wasn't there when you needed me. I'm sorry I forced this life on you. I never stopped thinking about you.\"\n\nI glanced at Dr. Lawrence, and the look on his face told me he now understood what I had been talking about. Next to him, Lorraine was wiping away tears as if watching a sad movie. \"That is just so sweet!\" she squeaked.\n\n\"I don't like it here,\" Lola said.\n\n\"I know you don't, but there is a big house being made ready for all of us so that we can live together. It'll have lots of space both inside and outside, and while it's being prepared, I'm going to do what I can to make this place more comfortable for you.\"\n\nWith Lola's hand held in mine, I moved through the hospital, meeting each and every hybrid I had created, while Dr. Lawrence took Lorraine to do the same. This was my second time seeing them, but for many of them, this was their first time meeting me, yet they all seemed to recognize me as soon as I entered the room. They could tell I was their Master as if with some sixth sense. Those who had seen me at the zoo once they transformed were happier than the others, as they had evidently been waiting for me to come back. Those who were seeing me for the first time had more of an \"ah ha\" moment, as if meeting me had finally answered some question they had been mulling over or scratched an itch in the back of their mind.\n\nArmed guards were stationed throughout the hospital, but most often around hybrids who were aggressive or dangerous, like the alligators. Apparently, they were known to lash out at anyone who tried to perform any tests.\n\nThe most guards I found stationed in front of the lioness's room, Neija. I flashed the guards the card that Dr. Lawrence had given me and they let me in. The shades of the hallway windows were all drawn and for obvious reason. Standing by the window was Neija, stark naked. All the other hybrids wore the clothes given to her, but she had torn them to shreds. She was just as gorgeous as I remember, with skin like bronze and a figure radiating both strength and sexuality. She had the legs of a sprinter, the ass of a volleyball player, the stomach of a swimmer, and the chest of a porn star. \n\n\"Neija,\" I said. \n\nShe turned to me with a look of bored annoyance, but when our eyes met, she stiffened. I could see it, her brain making the connection by the power of an instinct she didn't understand. She knew who I was, she knew of our bond. We stepped towards each other, her eyes wide as dinner plates. Stinging pain, it came in an instant, the result of her slapping me across the face and slashing me with her nails. I have a garbled hiss of pain and staggered back, covering my bleeding cheek. \n\n\"Get out, bastard,\" she cursed.\n\n\"Wait, Neija, I'm the one\u2014\"\n\n\"You're the one that made me this way, I know. Did you expect me to kiss you? To be so happy that I would throw myself at you? Where have you been? You turned me into this and then you abandoned me, you abandoned all of us. Now you think you can just walk right in and expect us to nuzzle your hand like obedient pets?\"\n\nThe harshness of her voice and the guilt they invoked hurt more than the cuts on my cheek. Like Betty, she was much more mature and intelligent than the others. She had only seen me once before, yet she knew who I was and hated me for it. \"I'm sorry, for everything. I didn't have a choice. I needed the world to see what was happening so I could get help. I had to do something public, something big, so that it couldn't just be covered up.\"\n\n\"So what am I, just the means to an end? You created me so I could make your life more convenient?\"\n\n\"I created you to make sure that your kind would be kept safe.\"\n\n\"My kind?! This is not what I'm supposed to be! You decided to turn me into this!\"\n\n\"You're right, I turned you into a person, but that means you can now live as a person. The world can't simply ignore this, ignore us. I'm sorry I dragged you into this, but I am going to take responsibility. I'll do whatever I can to protect you and make you happy.\"\n\n\"Live as a person? All that's changed is that I have a new cage.\"\n\n\"There is a home being made for us where we can live together.\"\n\n\"What makes you think I'd want to live with you?\"\n\n\"Because I love you!\" The words came out before I could stop them. I don't know why I said them, maybe just a pathetic attempt to alleviate my guilt, but it made her freeze. \"Not one minute went by that I didn't think about you, worry about you. I loved you from the moment I saw you, I knew that I would do anything to keep you safe and happy. I made each of you what you are and I will love you until the day I die.\"\n\nShe turned around and returned to the window. \"Get out,\" she said, keeping her back to me.\n\n\"Neija...\"\n\nShe turned around, eyes filled with fury. \"Get out! And don't ever say my name. You don't get to act like you know me.\"\n\nI had done all I could, nothing I could say would extinguish her anger. I left the room, leaving her to simmer.\n\n--\n\nLorraine and I spent the next two days talking with CDC officials in the hospital, doing everything we could to make the hybrids more comfortable. I made sure they got toys and games, exposure to the outside, and the human interaction that would make them happy. I spent the rest of my time with the girls, playing games with them, having fun with them, making sure they smiled and laughed. I got to know each of them, and over the course of the next month, I would spend every weekend with them to make sure that they were well taken care of. Being in the hospital made it hard for me to get into the mood for sex, so I decided I would wait until later to introduce them all to playing. But outside, things were getting chaotic.\n\nIt was happening all over the world, appearances of humans with animal traits. They were showing up in streets, in people's homes, some of the transformations even being caught on camera. And it wasn't just happening in the US, but all over the globe. New York was once again struck with weirdness when a mounted police officer in Time's Square found himself on the back of a big-titty centaur. A lot of people managed to catch it with their cell phones. It was blowing up across the internet, with no one sure what was happening. Most people just assumed it was some kind of street performance or prank, like the 2016 clown sightings. \n\nThen, of course, the true nature of the internet reared its ugly head. Furries claimed that this was just the beginning, leading up to the arrival of their animal-eared messiah. Recorded videos of the confused hybrids, wandering around naked, ended up on YouTube and even porn sites, and not just regular, wholesome porn sites, but dark, twisted sites, where you can also watch an execution or a bloody riot.\n\nThe CDC and the WHO naturally sprang into action, taking the hybrids into protective custody whenever possible. When dealing with other nations, it was an ocean of red tape. Almost every country in which these incidents occurred would insist on watching over the hybrids in their own facilities. Other than that, and simply not answering reporters' questions, both organizations put no real effort into a cover-up. Since it was beyond their ability to conceal, they simply remained quiet rather than try to explain it away. Inevitably they would have to have to acknowledge what was happening, but until then, they left it to the pundits and conspiracy theorists.\n\n--\n\nIt was June, a month since Dr. Lawrence had told us about the CDC's plan, and I was currently checking out the facility before we all moved in. It was a beautiful old mansion that had been bought from the bank. It was three stories, old, white brick, with lots of surrounding fields and even a forest and manmade pond. It seemed like a location for a Stephen King book, that classic Maine insane asylum. I was wandering down the halls, admiring the remodeling work. Not only had they added fresh paint and given the heating and electrical system an overhaul, they were building extra rooms for all the tenants we would be getting. For the first month, it would just be our two weird families, and then they would introduce everyone from the zoo.\n\n\"So, what do you think?\" Dr. Lawrence asked.\n\nWe were in one of the many parlors and I was checking out the new furniture. There was also a big screen TV against the wall. The house was stocked with other amenities for the hybrids' entertainment and education, such as computers, arcade games, pool tables, exercise equipment, art supplies, and even classrooms.\n\n\"It looks expensive. I can't help but think I'm somehow going to end up paying for all this in some way. This looks way too good for us, I feel guilty.\"\n\n\"I'd rather our tax dollars be spent on those girls than building bombs.\"\n\nI looked up to one of the corners to ceiling and saw a small device. \"That's one of the cameras, isn't it?\"\n\n\"Yep, everything will be recorded.\"\n\n\"Even when I'm in the bathroom?\"\n\n\"We'll tell you how to turn those cameras off when you need to.\"\n\n\"Good, because the girls and I don't plan on being celibate while we're here.\"\n\n\"Oh, don't turn them off then! That's one of the things we need to study most!\"\n\n\"You've got to be kidding me.\"\n\n\"If this phenomenon continues, how long do you think it will be before humans and hybrids start petitioning for the right to marry? We've already had some cases of house pets transforming, so unless all those cases occurred with people who happen to have the same ability, it's going to keep happening, and a lot of men are probably going to take the same route you've taken. Interspecies coupling is what we really want to study.\"\n\n\"Oh, Lorraine is going to have a field day with this.\"\n\n--\n\nI came home to find Momo and Sonja watching the news on the couch. With this warm weather, they were naked, though not Leah, who was sitting on the floor. On TV, it was another story of an animal transforming. This time it was a bird man appearing in the gardens of Buckingham Palace.\n\n\"Hey, girls, what's up?\" I sat between Momo and Sonja on the couch and they leaned against me. \n\n\"What's the new house like?\" Sonja asked.\n\n\"You'll like it, it's really big. There is a lot of open land around it, including a forest. And I checked out the bedroom. Leah, there's a nice big tank for you to sleep in, right next to the bed.\n\n\"Mmmm!\" she hummed, slapping the floor with her tail.\n\n\"By the way, where's Chloe?\"\n\n\"Momo thinks she's taking a nap. She's been hiding under the bed since you left.\"\n\n\"I'll go check on her.\" I went upstairs, and when I entered the bedroom, I heard sniffles. I looked under the bed and saw Chloe, lying in her sleeping bag with wet cheeks. \"Chloe, what's wrong?\" She didn't answer, so I crawled under the bed and dried her eyes. \"What is it?\"\n\n\"I don't want to go to the new house!\"\n\n\"Why not?\"\n\n\"I don't want to leave. This is the only home I have!\"\n\n\"Oh, Chloe.\" I wrapped my arm around her and pulled her close. \"It's not going to be permanent, just a few months. And while we're gone, this house is going to get fixed up to give us more room.\"\n\n\"But I like our house the way it is! I don't want it to change!\"\n\n\"Well it's not just for us. You know our family is going to keep growing. We'll get a bigger bedroom and a bigger bed so we can all sleep together. Remember how we all snuggled up together during that big storm? It'll be like that every night. And you know, next month, we're going to get all the girls and guys from the zoo. The first animal I transformed was a tiny fox, and when I saw her, she reminded me so much of you. Her name is Lola and I can't wait for you to meet.\"\n\n\"Really?\"\n\n\"Yeah, and you know, we can come back here whenever we want. After all, we need to start harvesting our vegetable garden. Maybe you and I could slip out sometime. We'll pick up something to eat and spend a night here all to ourselves. Plus, I don't have to go into work anymore, so we'll be together every day. Hell, you may even get sick of me always being around and will want some time to yourself.\"\n\n\"I could never get sick of Master!\" she squealed.\n\n\"I know, I'm just teasing. I promise you, we're going to have a great time, so will you give the new place a chance?\"\n\n\"Ok.\"\n\n\"Good, then let's head downstairs and I'll cook dinner.\"\n\n--\n\nThe next day, we loaded our stuff into the car. All of Sonja's frisbees and tennis balls took up a surprising amount of room, but I was able to convince her that she didn't need to bring her sled. Chloe chose to ride with all of her beanie babies in her lap, and next to her, Momo was wrapped in her precious electric blanket, even though it wasn't plugged in and spring was ending. The three of them were in the back seat, but a lot of our luggage was in the passenger seat. This was so that Leah had room in the very back. Because of her thick salamander tail, it was hard for her to sit in chairs.\n\n\"Don't worry, girls, we'll come back at the end of the summer.\"\n\n\"I can't wait to see this new place! I love going for rides!\" said Sonja.\n\n\"Cars remind Momo of the vet...\" the feline muttered.\n\nWe pulled out of the driveway and headed off towards the mansion. It was an hour-long drive, so we'd have plenty of time together in the car. I played music for them through the AUX cord, letting them see what they liked. With the sun shining overhead and the windows open, it was a beautiful day and a great trip.\n\n\"Master, everyone is going to be there, right? Elise, Lorraine, Betty, and the pillar men?\" Momo asked.\n\n\"Yeah, that's right.\"\n\n\"We won't have to take care of any cows, will we?\"\n\n\"No, there won't be any cows, don't worry.\"\n\nWe reached the mansion in the early afternoon, the massive house leaving the girls with wide eyes. We got there just as Lorraine and Elise arrived. Lorraine had driven with the pillar men in her own car, but Elise and Betty were driven by someone from the CDC in a rental van. It was the only vehicle that could comfortably accommodate her snake tail. Dr. Lawrence was already waiting out front, along with some other doctors from the CDC. As we got out of the car, there was hushed mutterings as they saw the girls and the pillar men.\n\n\"Master, they're staring at us,\" Chloe whimpered as she hid behind me.\n\nI turned around and put my hands on her shoulders. \"That's because they're amazed by you. You're a living miracle to them.\"\n\n\"Though I think most of their stares are directed at me,\" said Elise, slithering over.\n\n\"So, you finally left the house,\" I said.\n\n\"Yeah, it feels so good to have the sun on my skin.\"\n\n\"How does your tail feel?\"\n\nThe mansion driveway was gravel, but a very high-quality gravel, pure stone of all the same mineral with no sand or dirt visible. An old-school Irish nun would look at it and fantasize of all the children she'd force to kneel as punishment for some minor offense.\n\n\"It actually feels kind of nice. It seems my underside is tougher than I thought it was. It's like walking barefoot across a lawn.\"\n\n\"Did you meet the people who will be watching your farm?\"\n\n\"Yeah, there are five of them, and they were all really nice. They've all had plenty of experience working on farms and around animals, especially cows. They'll be staying in my house while I'm gone.\"\n\nDr. Lawrence and the other doctors came over to greet us. \"Ah, right on time,\" he said.\n\n\"Damn, so this where we're going to be staying? This is sweet! Living in a mansion and getting rammed by three guys every night, I finally know what it's like to be a Kardashian!\" Lorraine exclaimed. \n\n\"Ugh, it's like she has Tourette Syndrome,\" Elise groaned.\n\nLawrence cleared his throat. \"Moving along... These are the doctors that will be observing your day to day activities and also performing medical examinations. They fought tooth and nail for the chance to be your observers. You and your pets have opened up a whole branch of psychology, sociology, and biology.\"\n\nThey varied in age and ethnicity; an old black guy, a middle-aged white guy, an early thirties Asian woman, and white girl who looked like she had just left medical school the day before. To get their names on this case study would redefine their careers. \n\n\"This house has its own clinic stocked with everything needed for every test imaginable. We've also built dorms for the medical staff where we can view the footage from the cameras in the house. I'll be around, but you won't see them outside of scheduled medical examinations.\"\n\n\"I think it would be best if we did the tests tomorrow. The girls should have some time to get used to this place before you start poking and prodding them.\"\n\n\"Ah, of course, I just wanted to introduce everyone.\" \n\n\"Master, can Momo take her clothes off now?\"\n\nGreat timing, Momo. All the doctors were glaring at me, thinking me to be some kind of pervert. I mean, sure, I am a pervert, but not for the reason they're thinking.\n\n\"Momo, we talked about this. You have to keep your clothes on. Remember the compromise we talked about?\"\n\nMomo looked down at her clothes. She was wearing a pair of skimpy shorts and a tube top that showed her stomach. Her tail poked through a hole cut into the denims and she wasn't wearing a bra. She and Sonja looked like the typical slutty girls to get killed first in a slasher movie. They definitely made the bimbo look work. I knew that these doctors would be watching me have sex with the girls, but that didn't mean I wanted them to get a free show 24/7. I wanted the girls to cover up a bit while still letting them have the skin exposure that they wanted. The only time I allowed them to be naked was in the bathroom and bedroom.",
        "\"Ok,\" she muttered.\n\n\"You girls go check out the house. We're going to talk to the doctors.\"\n\n\"Yahoo!\" Sonja hollered, racing past me and into the house. \n\nMomo, Chloe, and Leah followed her, along with the pillar men. \n\n\"Betty, can you keep an eye on them, make sure they don't break anything?\" \n\n\"Anything for you, Master,\" said Betty, as if I had asked her to start playing with herself.\n\nOnce again, the doctors shot me a dirty look.\n\n--\n\n\"Momo! Look at our room! It's so big!\"\n\nMomo followed Sonja's voice to the master bedroom and found her jumping on the mattress. The mattress itself was large as the bedroom from the old house, as per special order. There were bureaus and closets filled with clothes and a large TV on the wall. Huge windows let in the sunlight, illuminating a large fiberglass cradle for Leah. It was lined with thick foam rubber and could be filled and emptied by a hose leading into the wall\n\n\"Aw, I can't bounce very high,\" Sonja whined. The mattress was foam, rather than springs, which might hinder playing a bit.\n\n\"Come see the bathroom,\" Momo said.\n\nThe previous owner of the mansion had good tastes. The bathroom was extravagant with alabaster tiles and black marble walls, and along with a multi-directional shower, there was a large hot tub by the window. Momo stepped into the empty tub and walked around in circles several times.\n\n\"Now everyone can take a bath together.\"\n\n\"Let's go find Chloe and Leah!\"\n\n--\n\nChloe was wandering the expansive corridors, keeping next to the walls as per her instincts. This mansion was like the grocery store, so large that she couldn't imagine its construction being possible. It made her particularly nervous, like she was once again just a tiny rodent hiding in the woodshed.\n\n\"There you are, little one.\"\n\nShe turned around to see Betty. For someone with hooves for feet, she was remarkably stealthy. Like the girls, she was skimpily dressed, just a tube top and a skirt. Rather than an affinity for nudism, it was simply that no store sold anything that would fit her, but once she got to her room, she'd find a bureau full of custom clothes.\n\n\"This house is too big. It scares me.\"\n\n\"Don't worry, once you get used to it, it will feel downright cozy. By the way, where's Leah?\"\n\n--\n\n\"This house is so big! I didn't know houses could be made so big! I wonder how many trees it took. Look at all these floorboards, they must have taken so many trees! And the windows, all this glass!\"\n\nSteve droned on and on as he walked along with Tobi through the mansion. Behind them was Alex with Leah riding on his shoulders. The three of them were following around Lorraine. \n\n\"Damn, this place is awesome!\" she said.\n\n\"Mistress, should we have just wandered off like that?\" the fox asked.\n\n\"Meh, I'll just leave all the doctor stuff to those two. I want to find the bedroom. I wonder if Dr. Lawrence installed a sex swing like I asked? Or the liquor cabinet.\"\n\n\"I wonder how old this house it. It must be really old. Probably older than me! Probably older than mistress! It must have had a lot of people living in it. I wonder if there were any animals like me. Mistress, what do you think?\" \n\n\"That's nice, dear,\" said Lorraine, not even listening.\n\n--\n\nAfter we had all checked the house, we were gathered in the living room. It was larger than my entire house and had the biggest TV I had ever seen on the wall.\n\n\"So, is everything up to your needs?\" Dr. Lawrence asked.\n\n\"This is too good for us. I'm still feeling really guilty,\" I said.\n\n\"You shut your dirty mouth. I'm finally getting the pampering I've always wanted!\" Lorraine hissed.\n\n\"It's wonderful, Doctor, thank you,\" said Elise.\n\n\"So what happens now?\" Betty asked.\n\n\"Now we'd like to monitor how you interact with each other. We'd like to understand your familial bonds during various activities. We'd also like to expose you to the public in controlled situations, allow people to become informed on what's going on and study your social skills.\"\n\n\"So we'll be going out in public again?\" Chloe asked.\n\n\"Yes, but don't worry, you'll be perfectly safe, and we aren't simply going to parade you down the streets. Today, just relax, get used to the house, and tomorrow, the fun begins.\"\n\n--\n\nWe spent the rest of the day exploring the house and the property. The mansion had been extensively redone, adding multiple bedrooms and bathrooms for the future tenants we would be receiving. We eventually settled in the back patio, overlooking freshly manicured lawns with a forest about a quarter mile away. The doctors had disappeared to wherever it was they watched their surveillance monitors, so we now had the house to ourselves.\n\n\"I could get used to this,\" said Elise, lounging in a lawn chair. \n\nShe had her tail stretched out, letting her black scales drink in the heat of the sun. In a second chair was Momo, lying on her stomach and tanning the backs of her thighs, and in a third was Lorraine with a bottle of white wine she had smuggled into the house, and at the end of the line was Betty. In the shade of the house, Chloe and Leah were watching lines and ants moving in and out of their hill. Alex and Steve were exploring the surrounding fields.\n\n\"Ok, you two, this is going to be a long one.\" Nearly tearing my rotator cuff in the process, I hurled Sonja's frisbee as hard as I could. \n\nShe and Tobi raced after it, fluffy tails flapping. Down the field, Tobi made a leap for it, but missed. Sonja then jumped, catching the frisbee with a big grin on her face. Rather than simply use her hands, she ran back to me with the toy in her mouth. \n\n\"Again! Again!\" she panted after dropping it at my feet. \n\nI continued throwing the frisbee, giving the two of them the exercise they so hungrily wanted. Between each throw, I'd check my phone. Panting like racehorses, Sonja and Tobi returned. This time, he was the one carrying the frisbee, while she simply collapsed and rolled onto her back.\n\n\"You want to go in? It's time for the news,\" I said.\n\nSonja simply raised a shaky hand in confirmation, while Momo, Chloe, and Leah perked up. \n\n\"Huh, you're going in?\" Elise asked.\n\n\"We always watch the evening news together. It's our family ritual.\"\n\n--\n\n\"This is boring,\" Lorraine whined, \"I don't care about California wildfires.\"\n\nThere were three couches in the living room, situated around a coffee table and forming an incomplete square. The TV on the wall made up the fourth side. The girls and I were facing the TV, while Lorraine and her boy toys took up one of the side couches and Elise took up the other. Betty had taken one end of my couch, evening it out with Leah sitting on the floor in the way Chloe normally would. On my side was Sonja, leaning her head on my shoulder and taking a quick nap after all that running.\n\n\"Well then feel free to do something else,\" I said.\n\n\"If you had any coke, I'd do that.\"\n\nElise and I decided not to give her the attention she was craving. A few minutes passed, the scenes of burning forests giving way to commercials for boner pills and diseases that are impossible to spell. A very wet sound drew my attention from my laptop, a very familiar sound. I then heard and male groan and looked over to see Lorraine blowing Steve.\n\n\"Elise, please hit your sister for me.\"\n\nSeeing what was going on, Elise gave a look at disgust and swung her tail at Lorraine, sending it flying over the coffee table and smacking the dick out of her mouth. Momo, who was about to try and mimic Lorraine, understood that now was not the time.\n\n\"Hey, check it out,\" said Betty, directing our attention back to the TV.\n\nThe news anchors were once again talking about the hybrids appearing, having just received footage of a bear transforming after wandering into a Russian intersection. Then it was back to the predictable discussion topics, such as speculation as to what was happening, what these people were, what the governments were trying to cover up, and the people's reactions. Things were getting crazy.\n\n--\n\nWe had all gathered in the expansive dining room, sitting at long wooden table that looked like it was worth more than my house. Elise an I had prepared dinner; cooked chicken with rice and string beans. Actually, I was really craving a cheeseburger or some spaghetti and meat sauce, but I just couldn't, in good conscience, eat it with Betty in the house. The kitchen was the largest I had ever seen, with enough dishes and flatware for an entire army and huge walk-in freezers and food pantries. The girls were in a bad mood, having to sit at the table and eat with silverware. I told them they could return to using food bowls on the floor in a few days, I just wanted the doctors to see that I was treating them like people as well as like animals.\n\n\"So, I've become aware of a case of gross injustice,\" Lorraine announced. Elise and I braced ourselves. \"My bedroom doesn't have a hot tub. Yours does. Why do you get the bedroom with a hot tub?\"\n\n\"Hey, this happened to me first, so I get first dibs on the bedroom of the CDC experiment building.\"\n\n\"Ok, but let me and my boys use it.\"\n\n\"Absolutely not.\"\n\n\"Oh come on, we're going to be doing the same exact thing you'll be doing with the girls!\"\n\n\"And that's why I won't let you use it. The four of you will leave it tainted.\"\n\n\"I'll wash it afterwards.\"\n\n\"You can wash away cum, but you can't wash away sin. You can't clean that spot, Lady Macbeth. What the girls and I do is a miracle, a sign of love and trust in this new stage of human existence. What you do is an abomination.\"\n\n\"Elise, help me out here!\"\n\n\"Hey, I got a normal bedroom, but you don't hear me complaining.\"\n\n\"Really? Completely normal?\"\n\n\"Well, due to my tail, the floor is covered in mattresses and the room is stocked with electric blankets. That's really all I need.\"\n\n\"What do you think the doctors will do tomorrow?\" Tobi asked.\n\n\"They're just going to run tests, try and figure out what's going on. Hopefully now Lorraine and I will get some answers.\"\n\n\"We'll go into an MRI and they'll find big magical brain tumors! With every animal we transform, they grow a little bit bigger!\"\n\nChloe left her chair and climbed onto my lap. \"The tests won't hurt, will they?\"\n\n\"I doubt it. They'll probably want to check your blood pressure again.\" I held her slender arm and gave some soft squeezes, each one making her squeak. \n\n\"Ok, so are we going to party tonight or what?\" Lorraine asked. \"I brought plenty of booze, and those doctors can't stop me from getting hammered.\"\n\n\"The last time we had a party, I woke up with a lot worse than a hangover,\" said Elise.\n\n\"Yeah, and I think the girls and I are just going to go to bed early. This has been a long day.\"\n\n\"Fucking lightweights.\"\n\n--\n\nNo one was in the mood for playing when the girls and I crawled into bed. Sonja was too tired to participate and we were all still trying to get comfortable in this new house. The doctors had certainly been looking forward to studying our intimate behaviors, but they'd just have to settle for watching Lorraine become airtight. \n\n\"Man, this bed is pretty comfy,\" I said, taking my place in the center of the massive foam mattress. \n\nDespite all of the open space we had, Chloe insisted on sleeping on my chest. I certainly wouldn't complain. Momo and Sonja took my sides. Momo purred as the kneaded the foam, digging in her nails like she was trying to sharpen them. Sonja got on all fours and spun around in circles before lying down and pulling the blankets over herself.\n\n\"Leah, how are you doing?\"\n\nNext to our bed, the sleepy salamander gave me a thumb's up. The water in the tank was only a few inches deep, keeping her pillow and blanket damp. Above my head was a wall lamp, positioned for me to use since I would be in the center of the bed. I turned it off and the room became pitch black, except for the pools of light by the windows from the moon and stars.\n\n\"Goodnight, girls.\"\n\n\"Goodnight, Master,\" they all replied.\n\nMomo and Sonja clung to my arms and the smell of Chloe's white hair put me to sleep.\n\n--\n\nIt was just after four in the morning when I woke up, my bladder full and my stomach empty. The girls were all sound asleep, Chloe having rolled off me. Thanks to the foam mattress, I was able to slip out from under the sheets and crawl across the bed without disturbing anyone. I didn't turn on the lights and there was no way anyone would be watching the security monitors, so I didn't bother getting dressed. I took care of business and headed downstairs for a snack.\n\nA light was on in the kitchen, I peered inside and saw Elise. She was leaning against the island table, eating a bowl of cereal and wearing only a nightshirt. She looked up when I came into the kitchen but didn't appear surprised, even by the fact that I wasn't wearing anything. After all, she had seen it all before.\n\n\"I felt you coming with my tail. What are you doing up?\"\n\n\"I wanted a late... I wanted an early-morning snack.\" I grabbed an apple from the fridge. \"What about you?\"\n\n\"This is when I usually get up. It's very rare for the sun to rise before I do. I don't know how to sleep in.\" I sat down on the other side of the table and took a bite of the apple. Meh, not as good as I had been hoping. \"I actually just called the farm to make sure my house sitters were taking care of the cows. They were already on their way out the door to start milking them.\"\n\n\"Are you going to just start your day now?\"\n\n\"I'm not sure how. Even after I transformed, I kept myself busy with paperwork for the farm or cleaning the house. What am I supposed to do with myself? I doubt there is anything good on TV.\"\n\n\"Maybe this is a good thing. You've dedicated yourself to your work, now you can finally relax and find a hobby, get to know yourself.\"\n\n\"Is there something about this conversation that you find arousing?\"\n\nShe was talking about my erection.\n\n\"Meh, it's just morning wood, don't mind it.\"\n\n\"How the hell do you men live with those things? I always imagine it to be like having a wild animal growing out of your lap.\"\n\n\"It's more like having a tail in the front, one that wags and slithers without me having any say in the matter. But other than that, it is the most user-friendly tool in the world. Just point and shoot. I don't understand how you women handle that anatomic Rubik's Cube you've got down there.\"\n\n\"It is a beast, I'll give you that. But that's one good thing about this new body of mine. I haven't had my period. I guess I'm sterile like the girls.\"\n\n\"Jesus, I'm sorry.\"\n\n\"Don't worry about it. Once I got the tail, I already resigned myself to not having kids, so this is actually a relief. Can you please point that thing in another direction? It feels like there's a loaded gun aimed at me.\"\n\n\"I can't help it, he won't listen to me. And this 4 am discussion about genitals isn't helping him settle.\"\n\n\"Well then go have sex with your pets or something, Jesus.\"\n\n\"Nah, they're all sound asleep, same with Betty. It's just you and me here.\"\n\nElise pushed her empty cereal bowl to the side. \"Not happening.\"\n\n\"Fine, no skin off my nose. I'm going back to bed.\" I turned around to leave.\n\n\"Wait, you really wouldn't?\"\n\nI looked back at her. \"Well if you were offering right now, I would, but I'm too tired to beg for it.\"\n\n\"So the tail doesn't turn you off?\"\n\n\"I think the tail looks sexy as hell, those beautiful black scales.\"\n\nElise flashed me a coy grin. \"I think I'm bored enough to make another mistake.\"\n\n--\n\nElise fell back on her bed and I was immediately upon her, resuming the kiss that had been going off and on from the kitchen to her bedroom. I had fully woken up and was ready to release the pent-up energy saved from yesterday. I sat up, and rather than help her pull it off, I grabbed her nightshirt and ripped it open, exposing her bodacious ebony tits to the predawn light. She looked at me with wide eyes, shocked by my aggression but also turned on. My lips enveloped one of her nipples, my palm obscuring the other.\n\nElise moaned as I fondled her breasts, bullying her tender flesh with my fingers and tongue. Her long tail twisted and writhed and she covered her face with her arms. It seems that without alcohol, she isn't quite as bold. I left her tits gleaming and moved downwards, stopping at her flat belly. With the looks and figure that she had been born with, it was almost a travesty that she hadn't gone into porn, but then I wouldn't have had her all to myself. Again and again, I dragged my tongue across the smooth horizon, and at the same time, I ran my hands back and forth along her hips and sides. Every touch I made sent a shiver through her body, the perplexing combination of sensual touching to ticklish skin. \n\nShe was trapped in a euphoric limbo, desperately wanting to stop my fingers, sliding across her sides, and my tongue, running circles around her navel, but she was terrified of losing the pleasure they invoked. My caressing sent electricity through her nerves and her body became restless. Her tail had already formed a revolving corkscrew, while her hands moved like they had minds of their own. Her fingers skated across her collarbone or slipped past her lips to play with her tongue. She scrubbed her breasts with her palms, as if trying to warm them with the friction.\n\n\"Oh God, I'm gonna cum! I'm gonna cum! I'M CUMMINGGGGISSSSS!\"\n\nI don't know how she did it, but she gave a loud hiss like a true snake. It sounded so genuine that I almost jumped off the bed as if I had heard it from a cobra. \n\nHer orgasm came after only a minute, a mind-erasing wave of ecstasy brought forth from simple foreplay. She would have to pace herself if she expected to last. I continued my descent, at last reaching her labia. Because she no longer had legs that she could spread, the angle of exposure had changed for easy access. I hadn't even touched her slit yet, but her orgasm had left it glistening with nectar. She was still trying to catch her breath, but I didn't wait to slip my tongue inside her. Her gasps and moans continued, now instigated by my gluttonous probing. I drank in her arousal, using my tongue to tickle the sensitive nerve endings and coax out more of her essence. \n\nI got my fill and then sat up, rubbing my cock against the entrance, simply grinding the shaft. She gave me a sultry look, daring me to dive in. I leaned over and kissed her, my tongue slipping inside her at the same time my manhood did. She gasped as it slid in, not just from the feeling, but the ease. She was so wet that the friction was nonexistent, but she was still tight enough to make me feel good. \n\nI was just about to start moving, but her tail suddenly curled up and wrapped around us, sealing us in a scaly cocoon with our bodies pressed together. It was a pleasantness I have never experienced before, having her wrapped around me like a giant scarf. Elise had a tender look on her face, her fingers running through my hair. \"Let's take this slow,\" she whispered, \"there's no rush.\"\n\nWe made love for the next few hours in that position, using only small, gentle movements. I remained sheathed within her, barely moving, and after I'd ejaculate, I'd go placid for a bit, then slowly regain my rigidity to begin the process all over again. The whole time, we never stopped kissing. As time passed, the sun rose and the pool of golden light moved across the bedroom and shone on us. Her tail stirred and her scales shimmered as they took in the warmth.\n\nI don't know what time it was, but once the sun rose above the window, we could hear movement throughout the house. Everyone was waking up and wanting breakfast. The girls were probably looking for me.\n\n\"I guess we should probably join them,\" Elise said, disheartened by the interrupted bliss.\n\n\"Probably, but I owe you a finish.\"",
        "I then lowered my head, but instead of kissing her, my lips went somewhere else. A bolt of electricity ran through her body as I rolled the tip of her tail around my mouth. When she wrapped her tail around us, the tip ended up just behind her ear. I saw it earlier and had waited for a chance to use it. Elise began to pant, her face becoming flushed as I nibbled on the scaly point.\n\n\"You... don't play fair,\" she gasped.\n\nHer tail began to loosen around us, and with that space, I took my natural pace, thrusting into her like a piston. Elise couldn't control her voice, my manhood drilling her sleeve and my tongue tickling the tip of her tail were too much for her to handle. She came almost as soon as I started, her tail snapping around me in a crushing grip as she came again and again. \n\nAt last she became calm and released us both. \"Damn, you are good at what you do,\" she murmured.\n\n\"Well it takes two to tango.\" I got to my feet and held out my hand to her. \"Come on, I'll make you some pancakes.\"\n\nShe smiled and let me lift her up. \"No, I'd say you've earned the pancakes.\"\n\n--\n\n\"Stick out your tongue and say \"aaah\",\" said Dr. Wortz, holding out a tongue depressor towards Momo. He was the middle-aged white doctor from earlier.\n\nMomo did as told, but became tense when he pressed down on her tongue with the stick. My throat had already been checked, and my gag reflex almost triggered from it. Luckily, Momo... didn't have such problems.\n\n\"Your throat is clear, your tonsils look good, and your teeth are perfect. Well done,\" he said.\n\n\"Master makes sure Momo brushes every day,\" she replied.\n\n\"My kids could learn a thing or two from you. Ok, now I'm just going to check out your ears...\"\n\nWe were in the mansion's clinic, all of us getting a thorough examination. The room was the size of a school gymnasium and filled with equipment. Several more doctors had been called in to help give everyone a checkup. I was currently having blood taken for a cholesterol check. Nearby, Sonja was getting her reflexes tested, but that was simply due to her personal request. Leah was having different allergens pressed to her arm to see if there would be any reaction. Chloe was getting an eye exam, reading off a list of letters from a distance. \n\n\"And the next line, please?\" Henderson, the old black doctor asked.\n\nIn the corner, the whirring of a machine could be heard, along with deep panting. Elise was slithering as fast as she could on a treadmill, more than thirty feet long and almost ten feet wide. She had sensors attached all over her body, measuring her heart rate and blood pressure. Watching her tail move from side to side was hypnotic. I think she was probably glad to finally have a chance to give her tail a test \"run\". Next to her, Lorraine was lying on a table with twenty electrodes glued to her scalp for an EEG. With a brain like hers, there was no telling what the results would be.\n\nBetty was in a CT scanner, getting her body x-rayed. She was finally wearing properly-sized clothes, and on her hooves were rubber cleats to prevent her from scratching the floors or tearing her bedding. Tobi was having an acoustic reflex test, Alex was having an angiogram to study the blood vessels in his tail, and Steve was having his lung capacity checked. The eleven of us cycling through the full list of exams took up the morning hours. We all gave sighs of relief when we thought we were done, but Dr. Lawrence had different ideas for me and Lorraine. \n\nHe approached us with a cardboard box in his arms. \"We have one more test for the two of you. See those two MRIs in the corner?\"\n\nIn the back of the room, two giant tubes made of metal and plastic sat side by side. They each had an extending bench that would slide patients in and out of their confines. Maybe it's because of my current lifestyle, but I couldn't help but compare them to sex toys.\n\n\"You mean those two metal fleshlights?\" asked Lorraine. Crap, we really are spending too much time together.\n\nLawrence put the box down on the floor and pulled out a brown rabbit, a New England Cottontail. \"The lands around this house were a haven for wild rabbits, and we managed to catch two, a boy and a girl. We'd like use those MRIs to get an up close and personal look at your transformation ability. You'll each take a turn in one and a rabbit will be put in the other. Hopefully we'll see something during the moment of transformation.\"\n\nWhile the idea of the responsibility of another animal girl was daunting, I couldn't pass this up. This would be the best chance to understand the transformation process.\n\n\"I'm game,\" I said.\n\n\"Me too,\" added Lorraine.\n\nI took the first turn, being loaded into one MRI while the female of the two rabbits went into the other. She was sedated so that she wouldn't freak out and move around inside the chamber. I felt like I was being loaded into a cramped tanning bed, and I had been given earplugs due to the noise that the machine would make. It was unnerving, I half expected it to close in on me like a trash compactor. I looked past my feet and could see all the girls watching me with nervous expressions. \n\n\"First we're just going to get a baseline scan. Are you ready?\" Lawrence asked from outside. With the earplugs in, his question was muffled, but I got the gist of it. I gave him a thumbs-up, and nearby, two of the doctors were operating a pair of monitors hooked up to the machines.\n\nThe MRI began to work, and immediately, loud thumps and whirring could be heard all around me. I was once again starting to feel claustrophobic. Lucky rabbit, I wish I had been sedated. For several minutes, magnetic sensors scanned me from head to toe, looking for anything unusual. The same was happening to the rabbit.\n\nThe machine paused and Dr. Lawrence came back. \"Now, when I give the signal, I'd like you to try and transform the rabbit. Can you do that?\" \n\nI again gave a thumbs-up. The scan restarted and I saw Lawrence return the gesture. I focused my mind on the rabbit next to me, willing it to transform. I couldn't hear it, but outside my MRI, everyone was gasping in shock, especially the doctors watching the monitors. The machines were turned off and the bench I was on slid out. I looked over to the other MRI to see what I had created.\n\nLying unconscious on the bench was a girl, late teens-early twenties in appearance. She had short brown hair and two large rabbit ears growing out of the top of her head. Her legs were more animal-like than they would typically be, keeping the same basic bone structure. Rather than having human feet with her knees placed at the halfway point of her legs, her legs were actually segmented into thirds her long feet alone taking up the final third. Her feet were still like a rabbit's, though much larger and wider to let her stand up, with pads under her toes. She was a little bit shorter than Momo and had slightly smaller breasts, but with how short her legs were, she might even be shorter than Chloe when standing.\n\n\"Is she ok?\" I asked.\n\nDr. Lawrence checked her pulse. \"She's fine. She's still under the effects of the sedative. I... can't believe that actually just happened. I mean, it's one thing to see all of you in the flesh, but to actually witness the transformation itself... it's some kind of miracle! There is still so much more research and studying to be done, but I'll propose to the higher ups that we finally address the public on what's going on. This has changed everything in our world!\"\n\nAll the doctors were reacting similarly, discussing the implications of this transformation and what it meant for the world. I ignored them and moved over to the girl. Dr. Lawrence turned to me as I picked her up.\n\n\"What are you doing?\" he asked.\n\n\"When she wakes up, it should be somewhere quiet and comfortable. You'll have plenty of time to do all your tests later. Girls, are any of you in the mood for a nap?\" They all perked up, always happy to crawl in bed with me and snooze. \"Betty? Do you want to join us?\"\n\nA wide smile on her face, Betty followed me and the girls out of the clinic. I carried the rabbit girl up to my room and laid her down in the middle of the bed. With the curtains blocking out the daylight, we stripped down and slipped under the covers. Leah, of course, returned to her own bed. Lying next to the rabbit girl, I put my arm around her and held her close. On her other side was Sonja, snuggling in close, and Chloe on the end. Behind me, Momo was pressed to my back with Betty acting as the largest spoon, her arm around both me and the cat. I was comfortable beyond measure, snuggling up with all of my girls. After my early morning tryst with Elise, I was completely exhausted, and as soon as I closed my eyes, I was asleep.\n\n--\n\n\"Master,\" a soft voice said. I woke up, still with the rabbit girl in my arms. She was looking up at me with sweet, innocent eyes. \"Are you my Master?\" she murmured. \n\nI smiled and kissed her forehead. \"That's right, I am. Welcome to the new world. What do I call you?\" She didn't respond, meaning she was waiting for me to decide that. \"Ok, I'll call you... Jenny. Will that work?\" She happily nodded. \"Good, how are you feeling?\"\n\n\"Sleepy, but ok. Where are we?\"\n\n\"We're home, at least it will be our home for the next few months. Don't worry, you're safe.\"\n\nHearing us talk, everyone else was starting to wake up. Sonja rolled over to us with a big grin on her face! \"Hello! Hello! Hello!\"\n\nJenny scooched in closer against me and gave Sonja a nervous smile. \"Hi.\"\n\n\"Jenny, this is Sonja, a dog. Behind her is Chloe, a mouse.\" \n\nHer name called, Chloe poked her head up from behind Sonja. \"Hi!\" she chirped.\n\nMomo then leaned over me and sniffed the top of Jenny's head. \"Momo is Momo.\"\n\nBetty sat up at the end and introduced herself.\n\n\"And over in the tank is Leah. You'll meet her in a bit. Everyone, this is Jenny, the newest member of our family.\"\n\nSonja began running her nose up and down Jenny's body, thoroughly analyzing her scent. \"She smells good!\"\n\n\"Sonja, don't be rude. Jenny, what would you like to do? Are you in the mood for lunch?\"\n\n\"Can we stay in bed a little bit longer?\"\n\n\"Of course.\"\n\nWe all huddled in around Jenny, the rabbit humming blissfully in my arms. This was the first time I had met Jenny, yet it felt like we'd already had a thousand conversations. The love was instantaneous. It was pure serenity, the warmth, softness, the darkness, and the quiet. I didn't look at the clock, not wanting to know what time it was. I wish it could have stayed like that forever, but my male instincts were starting to rumble.\n\n\"Huh? Master, something it poking my stomach,\" said Jenny.\n\n\"If Master's cock is hard, it means he wants to play,\" Momo replied.\n\nJenny blushed. \"Master wants to play with me?\"\n\n\"Do you know what that means?\" I asked. \n\nShe nodded and her fingers slipped around my manhood. \"It means me and Master making each other feel good.\"\n\nSo, like Leah, she not only knows about sex, but she understands our nickname for it. They really do inherit their knowledge of speaking rather than learn it. \n\n\"It's ok if you'd like to wait. We just met after all,\" I said.\n\nShe kissed me in reply. \"I don't know what's going on. My body feels so strange and my head is full of weird thoughts that I never had before. Something is tickling me between my legs, and my instincts are telling me your thing will make it feel better.\"\n\n\"Don't worry, I'll make you feel better.\"\n\nI then scooped her up in my arms and laid her out in the opposite way on top of the blankets. Rather than immediately climbing on top of her, I decided I would brush up on the fundamentals. I grabbed one of her fluffy rabbit feet and held it in my lap. I was rather curious about it and wanted to get a better look. Frankly, it was adorable, and her fur was so soft that I couldn't help but pet it. I had never held a rabbit before, I certainly didn't mind this being my first time.\n\n\"Master?\"\n\nA tremor moved through Jenny as I began to massage it, working my fingers between the pads of her toes and sending bliss rushing through the muscles underneath. So soon after transforming, her body probably had yet to acclimate to its new size and loosen up. I could feel the muscles in her feet, stiff from the sudden expansion and growth into her new form. That worked to my advantage, as Jenny reacted with growing intensity to the tension I was rubbing out of her. The pressure applied sent bolts of lightning up her spine, making her inadvertently cry out.\n\nBeside me, the girls watched with wide eyes, having never seen me do something like this. Even Leah had woken up and was watching us from her tank. They didn't know what I was doing, all they knew was that they wanted to feel it as well. I continued my massage, turning the muscle threads in her feet into jelly. Like Elise that morning, Jenny was caught, unsure whether or not she wanted to stop me. On one hand, the sensations were so intense, the flexing of her muscles was almost painful, but on the other hand, it felt euphoric beyond words. Writhing from my touch, she rolled over onto her stomach. There, right above her perfect ass, was a gray puffball, her rabbit tail.\n\nOk, that is too damn cute. \n\nNow with her back to me, I advanced my massage, working farther up her feet. Her muscles were definitely stiff down here. Had all the girls been like this when they first transformed? From now on, if I transformed an animal, my first action would be to give them a massage, both for their enjoyment and mine. The shape of Jenny's legs really was fascinating, it actually reminded me of Sonja's, back when she was a dog. \n\nAfter moving past her ankles, I reached the middle segment of her leg and ran my hands now across bare skin. As I worked out any tension, I licked the pads of her foot, making her shiver in bliss. Around me, the girls were really getting jealous. They were holding back because they wanted Jenny's first time to be uninterrupted, but if they didn't all get massages by the end of the day, they would be pissed. \n\nRather than moving up to the thigh, I started back at the beginning with her other foot. The process began all over again, Jenny moaning with her bunny ears hanging limply over her face. \n\n\"Chloe, in the bathroom, there should be a small container of coconut oil that I brought from home. Can you grab it for me?\"\n\nChloe nodded and scampered off, leaving me to continue stroking Jenny's legs. It took her a minute, but she came back with a tuna can-sized jar of the ointment. It was thick and dense at room temperature, almost like cold Vaseline, but that wouldn't be a problem. I dug some out onto my palm and then rubbed my hands together, using both friction and body heat to melt it into liquid. I pressed down on the backs of her thighs, but before she could even make a noise, I swept my hands up, grabbing her ass like I wanted to leave an imprint.\n\n\"Master,\" she panted as I repeated the motion. \n\nOver and over again, I ran my hands across thighs and rear end, not simply easing the stress in her muscles, but working the nerves in her skin into a frenzy. She whimpered in bliss from a heat building up in the flesh of her rear, as if the fat beneath her skin was coming to a boil. I was loving it just as much, the chance to familiarize myself with such a sacred area, so soft. Now with lubricant, I was able to move my hands with greater effect, not being hindered by friction. Coconut oil: it's good for your hair and for sensual massages. \n\nI melted more oil on my palms and then slid my hands up her back, making her stretch her body like a rubber band. She reached her arms out in front of her with her fingers grasping at an invisible prize, while her rabbit toes wiggled. Her moan was deeper this time, her lashes fluttering as she felt her muscles coming undone. I worked every inch of her flesh, hunting down any hints of tension and erasing them. Jenny sank into the blankets like she was melting, her body relaxing as I worked her over. Her back, glistening with oil, became a canvas for me to illustrate the techniques I had learned over the past year. This was my first time giving a massage, but living with my girls had given me plenty of opportunities to learn their weak points. \n\nI leaned further over her, my hands having finished easing her shoulders and now slipping around her slender neck. As an animal girl, she lacked human ears, instead having a crease going up the sides of her head from where they would be to her animal ears. With my thumbs, I stroked those lines of cartilage, while using my fingers to tickle her under the chin.\n\n\"M-Master...\" she moaned as I sweetened it even further, nibbling on the edges of her ears like corn on the cob.\n\nI could feel movement behind me, soft, frantic breaths and the rustling of blankets. At least two of the girls were playing with themselves, Momo and Betty most likely, though I wouldn't put it past Sonja. If she was really desperate, Chloe might even give in, and there was no telling what Leah was doing. In all honesty, I wasn't just doing this for Jenny's benefit. I also wanted to show off a bit, not just to the girls, but to the doctors surely watching on their surveillance cameras.\n\nNow it was time to take it to the next step. I flipped Jenny onto her back, then grasped her wrists and kept her arms pinned above her head. She gazed at me, cheeks flushed, eyes swimming, her breaths shallow and quick. She was so beautiful, so sweet. All she had to do was say one word or make any kind of move and I of course would release her arms, but until then, I relished her helpless appearance. \n\nI planted a kiss, tender and passionate. She had been the one to claim the first kiss, but I had plenty to teach her. My tongue slipped past her lips, rolling around every corner of her mouth. She imitated the technique, filling my own mouth with her sweet taste. As our tongues danced, my hand slid down her flat belly and arrived at her secret garden. I penetrated her, my fingertips tasting her interior and gauging her arousal. We remained in that position for another minute, her womanhood becoming more and more inviting, its slick softness demanding something better than just my fingers. I pulled my lips from hers and immediately wrapped them around one of her nipples, inducing a moan that echoed through the room.\n\n\"Master! Master!\" she cried out as I pulled on the pink summit. \n\nBlinded by lust, I attacked her breasts with my mouth, dominating her supple flesh to the sound of her whimpers. I used my tongue as a rolling pin, running over her tits while I savored the taste of her body. I vehemently pulled on her skin with my lips, as if trying to leave a hickey upon her porcelain form. \n\n\"Master! Something is happening to me! I'm! I'm! Eeeeeeeeek!\"\n\nHer legs slammed shut as she came, experiencing her first orgasm in her new human form. Funny, she made the same sound that Chloe usually made. Looking back at the girls, I saw them all staring at Chloe for that same reason.\n\n\"Master, what just happened? It felt so good, but I couldn't control myself,\" Jenny said while gasping for air.\n\n\"It's called having an orgasm, or \"cumming\". When you play just right, it happens.\"\n\n\"Will Master please make me cum some more?\"\n\nI gave her a soft kiss. \"Anything you want.\" I released her wrists and held myself over her, staring into her beautiful eyes. \n\nShe reached up and placed her delicate hands on my cheeks. \"Master, take me,\" she whispered.\n\n\"It will hurt at first, but then it will feel really good. Just hold onto me and the pain will be gone before you know it.\"\n\nShe embraced me, her arms and legs wrapped tight. I deflowered her in a single stroke, once again causing her voice to echo through the bedroom. I ran kisses up her neck as I built up my rhythm, diving deep inside her and hitting all the walls. So close together, I could feel her frantic breaths and her flexing muscles, her nipples kissing my chest. As she became accustomed to the penetration, her body relaxed. Her arms slackened, allowing me to open up some room for movement. I increased my speed while looking down on Jenny's naked body. Her pert breasts rippled with every thrust I made, while her face, so sweet and innocent, now perfectly surmised her ascension to womanhood. Eyes swimming, cheeks red, mouth open in a perpetual cry of carnal eruption, it was a look I could never get tired of seeing.",
        "\"Master! I'm cumming again!\"\n\nThe same shrill cry from before was released, a declaration of ecstasy. I could feel it running through her body, her pussy sucking on my cock like she was trying to milk me dry. She became limp, chest heaving. I sat back against the headboard, no longer having the strength to hold myself over her.\n\n\"That was amazing. Did Master cum too?\" I shook my head, gasping for air like her. Her breathing calmed and she gained a lascivious smile. \"Then playtime isn't over yet.\" She crawled onto my lap with her rabbit ears standing erect. She grasped my member, stroking it to work out any hints of flaccidity, then stood it up and settled upon it. She was crouched over me, a look of drunken lust on her face. \"Now it's time for me to please Master.\"\n\nShe then started bobbing on my cock, but immediately, I realized something was different. My pets had gone cowgirl a thousand times before, but never had they used a style like this. Jenny, her movements were far faster than they should have been, and without any friction or wasted effort. Her posture was perfectly vertical, something that should have been impossible. In the cowgirl position, the girl can either lean back in a crab walk and gyrate her pelvic region, or she can lean forward on her knees and use just her thighs to lift herself up and down. She can also remain on her knees and lean back, but then she can't lift herself up as high.\n\nWait a second! Knees!\n\nI looked at her legs, the way she was crouching. With normal humans, the legs worked on a hinge system, but the way Jenny stood on just the balls of her long rabbit feet, it made her ankles act like a second set of knees that bent in opposite directions, working more like springs. She was able to perfectly compress her legs and then rise up with the added benefit of an extra pivot! It was genius!\n\nShe rode me better than I had ever been ridden before, moving her body like a piston at speeds no other girl could reach. My train and her tunnel were perfectly aligned, letting me shoot straight into her and reach new levels of depth. This wasn't good, I couldn't handle this level of sex! Until now, it was Betty who always gave me the best sex of my life, but now, Jenny had outclassed the cow in the cowgirl department! \n\nI was helpless to stop myself. I threw my head back and grunted, shooting load after load of semen deep into Jenny. She smiled blissfully, feeling my hot seed inside of her.\n\n\"Master,\" she murmured. She dismounted me and lied on my chest, humming in joy as she nuzzled my neck. \"I love you, Master.\"\n\n\"I love you too, Jenny.\"\n\nIt was then that I became of the other girls all around us, staring at me angrily.\n\n\"Girls, is something wrong?\"\n\n\"We want to be rubbed like that too!\" they all shouted.\n\n--\n\nI managed to avoid the girls' wrath, promising them all massages once I had regained my stamina. We all got dressed, and in the process, introduced Jenny to clothes. Of course, she would have preferred to stay nude, but she did as I told her. Just like when she was crouched over me, she stood and walked on only the balls of her feet, making up for the otherwise shortness of her legs and putting her at Momo's height. Actually, she was second only to Betty if her ears were counted.\n\nWe made our way downstairs, with Jenny gawking in amazement at the mansion. Down in the living room, we found Elise, Lorraine, and her muscular demigods. She had taken the couch facing the TV, sitting in the middle of what had become four pillar men. Next to her was a man with the same hair color as Jenny and big rabbit ears, as well as the same kind of legs. And of course, he was wearing just a banana hammock. It was legitimately terrifying.\n\nNext to me, Jenny stared at them, as well as Elise, in absolute wonder. Most of her focus was on the rabbit man, having a member of her kind to compare herself to.\n\n\"Wassuuuup?\" Lorraine asked proudly, flanked by men that put me to shame in every physical category.\n\nElise looked up from her magazine. \"You've sure been gone a long time. I thought you would never come out of your bedroom.\"\n\n\"Meh, I was hungry. Ladies and gentleman, I would like to introduce you to Jenny. Jenny, that's Elise, Lorraine, Steve, Tobi, Alex, and...\"\n\n\"Peter,\" said Lorraine.\n\n\"Of course he is.\"\n\n\"So, I'm guessing you two have already had sex?\" Lorraine asked.\n\nBlushing with her ears twitching, Jenny leaned against me and clutched my arm. \n\n\"You just had to ask, didn't you?\" I replied.\n\n\"Of course I did! Peter and I have already gotten to know each other! Go on, smell his fists!\"\n\n\"Oh dear God,\" Elise groaned.\n\n\"Yes, all glory to Deer God!\"\n\nMy eyes fell on Peter's muscular hands and I threw up in my mouth a little. There isn't enough Purell in the world. He and the other men didn't seem fazed at all about Lorraine's announcement.\n\n\"Well, we still have plenty of time before the news. Do you girls want to head outside?\"\n\nSonja started jumping up and down. \"Yes, I wanna run around and play! I wanna run with Jenny!\"\n\nJenny too started jumping. \"I wanna run with Sonja!\"\n\n--\n\nSonja, Jenny, Tobi, and Peter were all crouching with their backs to me. We were out on the patio and I had a frisbee in my hand. Every movement I made, no matter how small, made them twitch. I took a sudden step forward, and even without moving my arm, the four hybrids lunged forward, tripping over their own feet when they realized I hadn't thrown it.\n\n\"Sorry. Ok, this is for real. Go for it!\"\n\nI hurled the frisbee off into the distance and the four of them rocketed after it. Sonja and Tobi put up a good fight, but Jenny and Peter were ahead of them after only a couple seconds. With the design of their legs, they were able to turn every step into a leap, using the spring-like motion that Jenny had used in the bedroom. The two of them were neck-and-neck, my cute bunny girl and Lorraine's rabbit-eared hulk. Then Jenny made the leap and caught the frisbee just before Peter could.\n\n\"Ha! My rabbit's faster!\" I bragged.\n\nFrom her lawn chair, Lorraine looked over her glasses at me. \"If your girl can walk, let alone run like that so soon after sex, then you're not doing your job as a man.\"\n\nWhy must she hurt me this way? I was only kidding and she went for blood.\n\nI continued running the four goofballs around, using them to distract me from my hemorrhaging ego. Damn it, I do great in the bedroom, just ask anyone! No matter how fast they ran, Tobi and Sonja could not keep up with the rabbits, but I think Sonja liked it that way. In time, the frisbee was actually abandoned, and it was just Sonja chasing after Jenny, the two of them running laps around the property. At last, it was time to call it a day. Tobi and Peter had already headed inside, and now I was just waiting for Sonja and Jenny to come back.\n\nJenny bounced up the hill, arriving at the patio barely out of breath. Sonja came minutes later, wheezing like a chain smoker. She collapsed on the ground, her mouth too small to pull in the air she needed. \"Water,\" she gasped with her tongue hanging out. \n\nLorraine came outside with a Bloody Mary in her hands. \"Hey!\" she yelled when I stole it from her. Payback!\n\nI sat Sonja up and I gave her the glass. \"Easy, take it slow,\" I said as she drank like a race horse. It was gone in a single gulp, and while she was still thirsty, at least the edge was off. I rubbed her belly and nuzzled her ears. \"Good girl. You are going to sleep like a rock tonight.\"\n\n--\n\nWe had gathered in the living room to watch the news, but one of us wasn't paying attention. Sonja was all tuckered out from running and was sound asleep, her head on my lap. I was stroking her hair and her ears, listening to her deep breathing. On my other side was Jenny, staring at the TV in amazement.\n\n\"Master, what is that woman doing in the wall?\" she asked, speaking about the news anchor.\n\n\"She's not in the wall. Her image and voice are being recorded by a machine called a camera and that information is sent to the TV. Think of it as like a special mirror that she talks into, but we see her reflection instead of her seeing it.\"\n\n\"Can she see us?\"\n\n\"Nope, it's one-way. Right now, she's talking about the things going on in the world. We watch the news each day so I can teach you girls a bit about what's going on outside this house.\"\n\nIt was yet another story about an animal transforming. This time it was one of the retired orcas at Sea World. It was the first aquatic hybrid thus far, a merman with a black and white tail. He had already been taken in by the CDC for study.\n\n\"Did Master do that?\" Jenny asked.\n\n\"Nope, that's the crazy thing. What happened to you has started happening naturally, without someone like me present. That's why we're all here, so that doctors can study us and find out what's going on.\"\n\n\"That's easier said than done, I'm afraid.\"\n\nWe all looked past the TV to see Dr. Lawrence step out of the hall. He sat down in an easy chair with a heavy sigh.\n\n\"Dr. Lawrence, what was the result of the MRI testing?\" \n\n\"We've gone over the information again and again and we've got nothing. When you transformed Miss...\"\n\n\"Jenny.\"\n\n\"Jenny, here, the scanners didn't pick up anything. In her body, we got a close-up look at the actual transformation process, but there no sign of cause or a catalyst. Nothing in your own body revealed itself either. We didn't see even the slightest blip in your neural activity or your organ functioning, nothing out of the ordinary in the slightest. It was the same result for Lorraine and Peter. Whatever the two of you are doing, our instruments simply can't measure or even detect it.\"\n\n\"Well you said you got a close look at the transformation process,\" said Elise, \"didn't you learn anything from that?\"\n\n\"Yes and no. We saw the transformation occur, got to watch it in layers from the bones to the brain, and could see the neural activity, but it happened in an instant and didn't give us any clues.\"\n\n\"So what now?\" I asked.\n\n\"Well, I'm going to suggest to my superiors that we finally tell the public what is going on.\"\n\n\"But you don't know what's going on,\" said Momo.\n\n\"True, but we might as well lay all of our cards on the table. At this point, trying to cover it up is doing more harm than good. We'll present our findings to the people and then go on from there. While the results are disappointing, it will at least let us move on to the next step, and we aren't going to give up on researching this, not by a longshot.\"\n\n\"So, what should we do?\" I asked.\n\n\"Well, after we explain to the press everything we know and tell them about the hybrids... we'll figure it out.\" \n\nPlease comment!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "animal girl",
        "bunny girl",
        "snake girl",
        "interracial",
        "comedy",
        "cute",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/master-master-pt-12"
}