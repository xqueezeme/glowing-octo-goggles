{
    "title": "All That Glitters Ch. 42",
    "pages": [
        "All That Glitters -- Ch 42\n\nA new Alliance, new threats, new friends, new disasters.\n\nThe Landstradt reforms the Alliance. New threats appear. New friendships are formed with consequences for the future.\n\n\u00a9 bigtddybr January 2022. This story 'All That Glitters - Ch 42' or the series 'All That Glitters' cannot be transferred to any other site besides Literotica.com in whole or in part without the prior authorizations in writing from the author and bigtddybr must be credited for this work.\n\nDue to the number of abbreviations, ship listings, and list of characters, in this story, I include a glossary that is now in a stand-alone chapter called 'All That Glitters: Notes'. Any and all information that you want or need to know about the series is included in Notes. It will be updated frequently simply by re-issuing the chapter to Literotica.\n\nThere is little attempt to explain the back story, so it is necessary to read previous chapters to fully understand where we are.\n\nAs before, I claim sole responsibility for the story line. This story is a fantasy, with no basis in reality. Any similarity that you may perceive to current events, people, or situations real or imaginary is completely unintended. Look no further than the story line for its intent and purpose.\n\nA big shout out to SaddleRider and my other editors, who wish to remain anonymous, for all their help.. With their guidance, I'm making fewer and fewer errors. If you find any errors still left in this chapter, they are mine, as I have ignored sage advise to make a silly point.\n\nPlease rate and comment. But keep your comments respectful. If you rant and rave or are disrespectful in your commentary, it will be deleted.\n\n'Nuff said...enjoy.\n\nMain Adenomere Estate, Planet Adenomere, The Adenomere System, 182 Light Years from Terra\n\nRaymond had been subjected to a number of surprises during the day, from Junelliya and Fayad showing up with Ambassador Flynet, to having Seito Ayesha and Kim tagging along. As The Trine landed in front of the Adenomere estate, having followed Aurelia's aircar, Raymond was given other surprises as familiar faces came out of the ship.\n\n\"Riley!\" Raymond called out, seeing the cook running toward him.\n\n\"Oh, Raymond, I am so happy to see you!\" Riley shouted, hugging him tightly. \"Especially like this,\" she grinned, taking in his nudity.\n\n\"I hope we can fix that soon,\" Raymond said flatly.\n\n\"Well, not too soon,\" Riley quipped, giving him a big, goofy grin as she looked him over.\n\n\"Don't worry, we have clothes for you on the ship,\" Junelliya assured him. \"As I have stated before, while I like seeing you like this, I am a happily married woman.\"\n\n\"Methinks you protest too much,\" Riley quipped, grinning. \"But then, I have seen your husband and your protests are a moot point.\"\n\nThat brought laughter from those who were coming out of The Trine. Again Raymond was surprised as Hanalei Anar, with her daughter, Ikekia, Takebayashi Urano, carrying Zarrenia, Violletiya, Hanalei's bodyguard, and Sylvie Kinlo, Hanalei's PA, came up to greet their friends from The Wanderer, the ladies taking in all the male nudity with appreciative eyes.\n\nKorman arranged for everyone to have a place and assigned personnel to assist them. The aides quickly picked up the bags of their charges and moved them into the estate from the ship.\n\nBefore long, the six prisoners had completed a more rigorous check-up from Dr. Seito, and had been tended to as required, nano-bots being used to service the more serious wounds.\n\nSeito consulted with the Toolend and injected Sgt. Wilder with nano-bots, instructing them to eat away at the lesion in her brain. Wilder was still having fitful efforts at controlling her body and Seito hoped the bots would help her heal faster, even with the attention the Toolend were giving her.\n\nThe Yunki twins had a surprise of their own, their new clothing having been delivered earlier in the day. The twins were soon doing a fashion show for each other and Aurelia's guests, much to their amusement. The men were very appreciative of the show, now that they were themselves wearing jumpsuits.\n\nRiley had, of course, moved to the kitchen, where she was surprised to find out the cooks were working out a menu for a feast for the slaves. She immediately put a stop to that and went to see Aurelia.\n\n\"Lady Aurelia, your slaves need to have more food, but it needs to be food they can actually stomach. We found that the slaves we liberated could not tolerate heavy foods.\n\n\"Here is the copy of the menu that we served them for the first three days. It is mostly light but nutritious stews and breads. Your people will be better served by doing this than by giving them the feast you initially intended. This stew and the breads are rather tasty, so they will still believe they are getting a feast,\" Riley suggested. \"While they are light stews, one serving will more than fill up your people.\"\n\n\"What about something for a desert?\" Aurelia asked.\n\n\"Best to give them light fruits like peaches and grapes as a dessert, nothing like cake or cookies for now. You can bring those in over time as you build up the menu,\" Riley stated.\n\n\"Please share your knowledge of these recipes with my cooks. Tonight, I had intended to share in the feast with my people,\" Aurelia told Riley.\n\n\"You will not be disappointed, the stew for tonight's menu is actually quite tasty,\" Riley assured her, quickly moving back to the kitchen. Fortunately, it would not take long to prep the feast.\n\nTwo hours later, everyone sat down at the rather large table in the main dining hall, with some of the estate slaves also seated at the table. Everyone shared in the same meal, which was indeed quite tasty. Even Wilder, now in an anti-grav chair, was seated at the table, those around her helping her enjoy the feast.\n\nThough they were initially disturbed to be seated at the same table as Lady Aurelia, the Adenomere slaves were quite appreciative of the efforts that she was conducting on their behalf. More than one slave was brought to tears during the meal, Junelliya, Hanalei, Fayad, Raymond, Sylvie, Ayesha, and even Aurelia herself, giving them a hug and/or a shoulder to cry on when necessary.\n\nThe slaves came away from the evening meal feeling much better about Lady Adenomere. They would be fiercely loyal to her for the remainder of her life even after they were emancipated.\n\nEveryone got along and had a good evening. Guinevere was in her glory as she sat between the two Toolend, her mother opposite her at the table. The child would grab a tentacle of one or the other Toolend and send an image from her mind to them, scenes from her childhood. They included images from storybooks, her dolls, playing with other children, and some of the family pets.\n\nThe Toolend found the images fascinating and questioned her intently about them, especially about riding horses, a creature they had only seen in vids from the Union.\n\nEventually, Junelliya had to get them to stop as Guinevere was starting to get migraines again. Chagrined, the two Toolend apologizing at having hurt the girl, while Junelliya laughed at their antics, as Guinevere just as much to blame for her migraines as the Toolend.\n\nAurelia looked around the table, surprised at the amicability she saw there. She noted the way that Raymond, Junelliya, Kim, Hanalei, and others behaved with the people around them. Especially Raymond, who Aurelia saw as the kind of man she would like to have married instead of Marius.\n\nNever in her life had she ever enjoyed a meal more. This is the way things should be around the supper table. She thought to herself. I need to make things like this the norm, not the exception. Only, she had no idea about how to do that and that saddened her...\n\nKoh-Tan Se-Lam Roe ot Shem, Approximately Three Light Years from the Piscium System\n\nA ship appeared to the rear of the Koh-Tan.\n\n\"Koh-Tan, this is SSP Kelowna, Capt. Reese Dalman commanding, requesting permission to dock. We have supplies and technicians from Liramor-23 to aid in the preparation of your ship, over.\"\n\n\"Kelowna, we have not been advised of supplies and technicians boarding our vessel, over.\"\n\n\"Koh-Tan, you are a day behind in contact with the Greater Community. Your instructions will probably arrive with the Daily Coms Probe. We are sending a copy for you now, over.\"\n\nThe Koh-Tan received the note from the Kelowna with information and instructions coming from senior officials on Pod-Saar. The note was in Pod-Drran and Ma-Ret Rai, commanding the Koh-Tan, was able to see immediately that it had been written by a native Pod-Drran, it was not a fake. She advised the Jurte-Pair, Sha-Ret Sai-Rai and Kal-Het Sai-Ro of this fact. Sha-Ret ordered her to allow the ship into the dock.\n\nBecause the ship did not have landing struts, it had to use docking bay four, which did not have gravity. The Kelowna was so advised and followed the blinking lights into the dock. She tied off to the Koh-Tan and connected a pressurized gangplank between the ships.\n\nThe Kelowna was an older supply ship that had been purchased by Pallanders Shipyards. They intended to upgrade the ship and make it into a dedicated fleet tender for the Koh-Tan but would support the entire Fleet Shem for now.\n\nCapt. Reese bowed to the Jurte-Pair and electronically handed them his instructions and the intent of Pallanders Shipyard to dedicate the vessel to the fleet. Sha-Ret was pleased. Even if the ship was an older model, it could make Pod-Saar in a single jump from Liramore-23, meaning they had contact with the home world.\n\n\"This ship is dedicated as a supply ship for this fleet, Jurte Sha-Ret,\" Reese explained. \"We will be moving back and forth between Liramor-Prime, Liramor-23, and Pod-Saar with supplies and personnel on a daily basis.\n\n\"In about six months time, Kelowna will be going into refit to change her profile. She will become a dedicated fleet tender vice the supply ship she currently is.\n\n\"The ship will be given landing struts to allow us to make use of all of the docking spaces on the fleet's Man-Jays. We will receive the new jump-grid technology, which will give us longer legs, allowing us to move from Liramor-Prime to Pod-Saar in a single jump. We will also receive new Marilon/Aruna generators to power the vessel.\n\n\"We will receive larger holds and a more efficient layout than we currently possess, a larger medical bay with doctors who will be trained and dedicated to serve the members of the Greater Community, and we will be receiving new methods of passing our stores from ship to ship. Over-all, this ship will be retooled completely and be a better vessel for its intended future purpose.\n\n\"She will be in refit for just under four months. While she is in refit, another supply vessel will serve the needs of the fleet.\n\n\"Today, we are bringing Harradi technicians, who will look over your hydroponics sections to see what modifications have to be made in order for members of the Greater Community to make use of this ship. We also have technicians who will be replacing your older deck plates with newer, modified gravity plates, which will be more efficient to use. They will also train your technicians in the installation and maintenance of those plates. Over the next few weeks, we will be delivering new equipment for the fleet to use.\n\n\"However, one of the first items we are bringing aboard is an ICS antenna for the Koh-Tan. Your ship will have instant communications with Pod-Saar and any other point in the Greater Community.\n\n\"We have just left Pod-Saar, leaving an ICS antenna behind. It is currently being installed. The Pod-Drran will be connected to the Community as soon as the antenna is calibrated.\n\n\"We have new computers for your ship to help with the new communications systems and we also have Comp bracelets for sale on the Kelowna. Which means your personnel will now be able to use their comps for instant comms to friends and family on Pod-Saar once the ICS is set up,\" Reese informed the Jurte-Pair.\n\nSha-Ret was ecstatic. She would have instant comms with the home world!\n\nSha-Ret heard a sharp intake of breath from around the Command Deck and looked up to see what appeared to be a strange looking human coming onto the working bridge.\n\nThe person bowed low to the Jurte-Pair.\n\n\"Good day to you Jurte Sha-Ret Sai-Rai and Jurte Kur-Han Sai-Ro, I am Mast Klarne of the Harradi, a Fe-Hern, a person who commands 1,000,\" he spoke through the translator on his comp. \"It is my task and those of my team, to inspect your hydroponics and food growing sections to determine what changes may need to be made to adapt your systems for use by other members of the Greater Community who will be on this ship in the future,\" Klarne informed the pair.\n\n\"You have brought a thousand Harradi?\" Kur-Han asked, a little disturbed by the thought.\n\n\"No, Jurte Kur-Han,\" Klarne replied. \"Fe-Hern is not only a term for the numbers I would employ, it is also an indicator of the level of my training and expertise.\n\n\"I only have ten technicians with me, though all of them are senior Hern, those who would direct one hundred Harradi. Between us, we should be able to provide an accurate description of what is necessary to upgrade this ship for use by all members of the Greater Community.\n\n\"With your permission, I would like to start this as soon as possible. I would like to have your senior technician for your hydroponics section to provide information on how you use your systems so that we can understand what you do to keep up with the needs of this vessel,\" Klarne finished with a low bow.\n\n\"When do we anticipate changes to be made to your suggested upgrades?\" Sha-Ret demanded.\n\n\"I cannot say when the modifications to the Koh-Tan will begin, Jurte Sha-Ret, though likely when the ship goes into refit in the Piscium system. There is still much to be determined about the final configuration of the Man-Jays as Expedition Vessels. The Greater Community needs to take into account the needs of twelve species and to determine the final composition of the teams before they can finalize the ships new configuration.\n\n\"In the meantime, I can suggest changes for improvements in efficiency for your systems if I should find anything that needs to be upgraded for your own use,\" Klarne ended.\n\n\"Thank-you, that is reassuring,\" Kal-Han returned. \"Please be careful how you inform us of your standings. We are a warrior race and will lean toward thoughts of attack and defence when given numbers like the 1,000 you had suggested.\"\n\n\"My apologies, Jurte Kur-Han,\" Klarne said with another low bow. \"I will endeavour to do just that in future. This is my first time meeting with the Pod-Drran, as we have come directly from our home world to conduct this task.\"\n\n\"How long will you be working on this ship, Fe-Hern Klarne?\" Sha-Ret demanded.\n\n\"I cannot say for certain, Jurte Sha-Ret, however, I have been given an initial ten days to inspect the systems and file a report on what might be needed to modify those systems,\" Klarne replied.\n\nA Tae arrived on the Command Deck. \"This is Jonin-Mat Tae, the technician responsible for the food supply on the Koh-Tan,\" Kal-Han introduced the female to Klarne. \"She is the leading expert on the hydroponics of the Koh-Tan. I will leave her to collaborate with you.\"\n\n\"Thank-you, Jurte Sha-Ret, Jurte Kur-Han. I shall begin immediately,\" Klarne bowed and turned to introduce himself to Jonin-Mat. The pair swiftly made their way off the Command Deck. Jonin did not like being there and preferred to speak in her own office.\n\nIt would be an interesting ten days for the pair...\n\nPallanders One Orbital Shipyard, Liramor Prime, The Liramor System, Thirty Light Years from Terra\n\nXVP Stormchaser slid gently into its landing bay on Pallanders One. The hatch cycled and Ambassador Mottu of the Byandi left the ship with Fran\u00e7ois Pallanders.\n\n\"It is larger than the Princess Class,\" the ambassador noted.\n\n\"It is designed around the Trine Class, which was deliberately made slightly larger to accommodate the taller members of the Greater Community,\" Fran\u00e7ois explained. \"This class also has a dedicated space on the third deck for a meaningful cargo hold, which is lacking on the Princess Class.\"\n\n\"These ships are intended to be used for cargo?\" Mottu asked, confused.\n\n\"No, however, a lot of famous families will be purchasing this model. Many of those are into business. The inclusion of a hold will be a major selling point to those buyers,\" Fran\u00e7ois stated.\n\n\"If it is not needed, can the hold be converted for extra crew space?\" Mottu inquired.\n\n\"We can configure the ship into almost any floor plan one could desire within the limitations of the dimensions of the vessel.\" Fran\u00e7ois called up different floor plans on his comp and with a beep and a rumble, passed that to the ambassador's comp.\n\n\"The UDCS Laureli is designed as a comfortable fast ship for diplomatic use. It is based on the Princess Class and is pretty close to the original design of that class. Like the original Princess, The Trine was designed as a private yacht, the major difference being her dimensions. While your species will not be bothered by the need for extra headroom, other passengers from the Interspecies Community would be. (The Byandi were on average around 180cm.)\n\n\"We are pushing the Trine Class for use by the UDC for all of its future fast ships, simply because of the extra headroom for guests,\" Fran\u00e7ois told Mottu.\n\n\"That makes sense,\" Mottu acknowledged. \"I know the Djina\u00ebte, the Toolend, the Paacon, and the Feeyan would appreciate the extra height.\n\n\"What would be the closing price on such a vessel?\" Mottu asked.\n\n\"That would depend on the number of vessels your government would purchase,\" Fran\u00e7ois replied. \"A single vessel in a bare configuration would cost around sixty million credits, while a vessel outfitted like The Trine would be somewhere around one hundred million credits. The more vessels you make of a particular configuration, the lower the price overall. If you purchased enough vessels, you could conceivably drop the price of the base model of The Trine Class, to just under fifty million credits.\n\n\"Under the licensing fee, you could make as many of the vessels as you could afford, for a fixed licensing fee per vessel based on each of the basic classes. The licensing fee means that you have access to our experts 24/7 in the event that issues crop up,\" Fran\u00e7ois finished.\n\n\"And you will teach us how to build these vessels?\" Mottu demanded.\n\n\"Yes, we are currently constructing another orbital shipyard, Pallanders Six on the other side of the planet from this shipyard. It is being constructed with jump-grid technology, so we are building it here in orbit with plans to move it to the Piscium system after its construction. The vessel will become the planned shipbuilding classroom for the Greater Community.\n\n\"Pallanders Six will be much larger than any of our previous shipyards and will be designed for use by all members of the Greater Community. As well, we are inviting technicians from the Greater Community to come and assist in building Pallanders Six so that you can get a feel for the construction methods that will be used for the larger vessels that we make.\n\n\"Once you get into construction of larger vessels, whether they are civilian or Navy vessels or orbital stations, they are all built with the same methods of construction. If you learn on one, you can modify what you learn to build something else, scale being the major issue,\" Fran\u00e7ois explained.\n\nThey came to one of the small conference rooms dotted around the hull of the shipyard and Fran\u00e7ois pointed out the various cages where the larger vessels were under construction or refit.",
        "\"Smaller vessels, up to the size of the Whippet Class, can be built inside the shipyard. Larger vessels are built in the exterior cages. Pallanders Six is designed to allow for a Fairling Class Frigate to be built on board for teaching purposes. However, she will have her share of exterior cages. She will have six cages dedicated to each of the species of the Greater Community,\" Fran\u00e7ois ended.\n\n\"The Byandi have known of the Djina\u00ebte and the Asocan for over two hundred of your years, Mr. Pallanders,\" Mottu told him. \"In all that time, we have been reliant on the Djina\u00ebte to get around the Greater Community, they having the only ships with FTL Jump Drives. It will be a relief to finally have our own ships to conduct our own explorations and business other than waiting on the Djina\u00ebte.\n\n\"How soon could we be included in the construction of Pallanders Six?\" Mottu asked.\n\n\"We can set up a schedule to rotate your people through Pallanders Six. Once they have learned the techniques, we could employ them on this shipyard, or on Pallanders Six. We currently have a shortage of trained technicians and could use the extra labour. Your people would get hands-on experience at building all the models that we currently build on this platform, which is mostly civilian vessels. We only do refits on military vessels at this shipyard.\n\n\"You will have to ask the Navy for permission to work on new construction of Navy vessels, though I think we can arrange for you to work on the refit vessels here, if that would be useful to you?\" Fran\u00e7ois asked.\n\n\"You have given me much to think about, Mr. Pallanders. My government has been eager to pursue the construction of our own vessels since the offer was made last year. We are definitely eager to pursue construction work for our technicians on Pallanders Six and here on Pallanders One. My government will be eager to arrange a final licensing fee for the different vessels you construct. However, that will be a negotiating team from the Home World,\" Mottu answered.\n\nFran\u00e7ois had arranged for a selection of wines and cheeses, assessed for safety for the Byandi, for the ambassador to taste. They toasted the future of their people together.\n\nAdenomere Estate, Adenomere City, Planet Adenomere, The Adenomere System\n\nAfter the evening meal, Junelliya connected the monitor in the dining room with the 24 hour news net of Inter-Planetary News Services, direct from Terra. They watched the news to determine what impression they could get about the Alliance from the Union. It was not good.\n\nThe news was fixating on the actions of the Alliance against the prisoners captured during the raid. The images of six naked people, who had been treated in a 'reprehensible' manner, were spread around all of the news services. Included was the 'assault' on Capt. Clark as he was punished for his comment in the Landstradt.\n\n\"I'm not surprised,\" said one citizen being interviewed by an IPNS reporter. \"Did you see the images of how they treated the slaves that had been recovered? If they could do such things to their slaves, then doing what they have to the prisoners is no great shock. My question is, will the Alliance be held accountable? Will those who hurt Union prisoners be brought to trial for their ill-treatment?\"\n\n\"And that is the question now before the Senate, what to do about the Alliance and its continued indifference to societal norms?\" Kinder Price, a reporter for IPNS asked the question.\n\n\"After the Unification War, those who had conducted such atrocities on civilians and on military prisoners were charged with abuse of detainees. Some were executed for the things they did to prisoners. Others are still serving time even sixteen years after the war.\n\n\"This is Kinder Price, reporting for Inter-Planetary News Services,\" the pretty female reporter had an obviously forced smile on her face, leaving the impression that she was not impressed by all that was happening.\n\n\"Well, that was interesting,\" Fayad commented as Junelliya closed the link. \"The Landstradt won't get that until sometime tomorrow. I wonder if they will appreciate what it means in the Union?\"\n\n\"I rather doubt it,\" Aurelia conceded. \"They are fixated on the needs of the Alliance and hold the Union in contempt. They must be shown that it is our own practices that are causing this response from the Union.\"\n\nJust then, Korman came in and whispered something in Aurelia's ear. Aurelia immediately jerked upright in her chair.\n\n\"How many Mr. Korman?\" she asked. The man leaned in to whisper again but she cut him short. \"Aloud please, this is something that I want our guests to know about. Start from the beginning to catch them up, please.\"\n\n\"Gentlemen, and Ladies, the former Patriarch made a practice of addicting some of his field workers to Wort Weed. This is a class one drug that creates an amazing sense of euphoria in the user. The high one gets from this drug will cause people to do almost anything to experience it again.\n\n\"Once the field workers are addicted, they will perform at heightened levels for several weeks. Eventually, the effects of the drug and their overworking, will break their bodies.\n\n\"At this point, they would be placed into what they euphemistically called 'The Barn', to wait out their lives until the effects of the drug on their bodies kills them. The former Patriarch and his son, would then burn the barn down, cremating those inside, sometimes while they were still alive,\" Korman whispered the last.\n\n\"A new barn would then be built, ready for the next batch of broken field workers. They have now placed 152 broken slaves in that new barn. Today, or tomorrow, they would have torched the building,\" Korman finished.\n\n\"How many are still alive?\" Fayad asked.\n\n\"I have know idea, sir,\" Korman admitted. \"Know one is allowed to tend them, just to put new people in the barn as required.\n\n\"Ayesha, is there a cure for addiction to Wort Weed?\" Junelliya asked.\n\n\"There is no cure, but there is a treatment regime,\" Ayesha responded. \"Basic medical practices can bring people back from the worst of addictions. However, that can cost a bit of money.\"\n\n\"Rest assured, I intend to pay the costs,\" Aurelia stated with conviction. \"Ayesha, I intend to go to that barn tonight, to see for myself and to record what is happening there. Will you come with me to give your expert witness and to help those who can be helped?\"\n\n\"Yes,\" Ayasha answered immediately. \"We will need some people who are trained in basic care to set up a triage to help those in the barn. I do have some drugs that can help fight off the effects of addiction, but only for approximately ten people. If there are more than that still alive in the barn, we will need to fill up my pharmaceuticals.\"\n\n\"I can call in some people from the capital, they can be here within half-an-hour. How many will you need?\" Aurelia asked.\n\n\"We won't know until we see how many are still alive and what condition they are in,\" Ayesha answered candidly. \"We must get to the barn and check it out. How far is it from the estate?\"\n\n\"It is thirty minutes by ground car, less than five in the aircar,\" Korman answered.\n\n\"Right, have Allen bring the limo around and lets take a look at what we have,\" Aurelia ordered.\n\n\"Eight minutes later, Aurelia, Ayesha, Fayad, Raymond, Korman, and Allen approached the entrance to the barn. Several slaves came out of the dorms nearby, wondering what was going on. Aurelia drafted them immediately.\n\nThe group, minus Allen, entered the barn to inspect what was inside. All of their comps were recording. Ayesha swiftly checked the people and found about a third of those inside were dead. She immediately ordered the remainder to be taken from the barn out into the night air away from the fetid air inside the barn.\n\nThe state of the slaves was deplorable. Most were on the verge of death. Aurelia put in a call for emergency medical assistance and called the Office of the Attorney General of Adenomere, informing them of what she had found in the barn and requesting an investigation team.\n\nThirty minutes later, both teams arrived on the ground.\n\nThe investigation team took imagery of the survivors and moved inside to make a detailed investigation of the barn.\n\nThe medical team, under the direction of Dr. Seito, immediately began to wash and care for the survivors. Food, mostly soups of broth, were brought for those who could swallow it. IVs were put into every arm. It was obvious to the medical team that the survivors were suffering from severe withdrawal symptoms.\n\nAurelia ordered Korman to move the people around in the dorms so that they had all of the victims in one location. No one grumbled about the order after seeing those needing care, who were swiftly moved into the new dorms.\n\nThe lead investigator called Aurelia over, she brought the other witnesses.\n\n\"Lady Adenomere, while I have heard of such instances, I have never personally witnessed it. I need a statement from you and your witnesses if you please.\"\n\n\"Sir, this is an affront to the system of slavery that the Alliance professes,\" Aurelia began. \"These slaves were deliberately addicted to a class-one drug in order to get better service from them. They were then allowed to work until the effects of the drugs and their own exertions broke their bodies.\n\n\"Mr. Korman informs me that he is aware of fourteen barns, filled with slaves like this, that were torched by the former Patriarch, Jaar Adenomere, and his son, Marius. This barn would have been the fifteenth.\n\n\"Mr. Korman can probably figure out the exact numbers of victims for you, but I want the former Patriarch and his son to be charged over this,\" Aurelia snapped.\n\nAyesha informed the investigator that there was a treatment protocol for addiction to Wort Weed. Most people that entered the program had an excellent prognosis for recovery.\n\nShe gave her professional opinion of the conditions of the victims she had found in the barn, backed up by vids from her comp with a running commentary.\n\nRaymond and Fayad indicated that they had been requested as independent witnesses to this event and provided their own vids and commentary.\n\nThe lead investigator took note of all and bagged evidence at the scene. They also interviewed other slaves in the local area and were informed of the treatments they had all suffered under the hand of the former Patriarch.\n\nAyesha made sure that the medics were aware of what needed to be done and informed them she was on call for emergencies during the night. They would provide another doctor from the city in the morning.\n\nAurelia almost had a breakdown when they returned to the estate. Junelliya hugged her and boosted her strength with her empathic abilities, sending calm and love to her. The house slaves came for Lady Aurelia and lovingly brought her up to her apartments. She would have a restless night reliving the memory of the sights she had seen in the barn.\n\nLandstradt HQ, Adenomere City, Planet Adenomere, The Adenomere System\n\nAurelia stormed into the Landstradt the next morning, catching all off guard. News of what she had found in the barn on her property had filtered around the Landstradt. Few would dare look into her eyes. As soon as the Chair opened the morning's session, she rose.\n\n\"Chair, on my estate last night, I was confronted with the revelation of what our slave system has finally become,\" Aurelia stated in a hard voice. She called up the imagery from the night before to display it before all. Not a sound could be heard in the Landstradt as the vid played.\n\n\"This is not what is supposed to be happening to the people we hold as slaves,\" Aurelia snapped. \"We originally held our slaves as 'Indentured Servants', with the intent that they would eventually serve their time and become citizens. We have not lived up to our end of this process, nor have we lived up to any standard of humanity when dealing with our slaves.\n\n\"The ire of the Union and of the Greater Community, now sits squarely on our shoulders, placed there by our own indifference and our contempt of those who serve us. What you have just witnessed via a vid, I had to witness in person. The recordings you just saw were personally recorded by me.\n\n\"Senior medics, people with serious time in the trauma wards of local hospitals, vomited at the sights they witnessed last night. I cried myself to sleep after seeing all this in person.\n\n\"That barn contained 152 slaves, fully one third, died in that barn. Of the remaining survivors, half are in such a state that we do not know if they will continue to live or not. My House will pay the price to return these people to full health, if that is possible. But we are going to lose a few of those people, if not a lot of them. Half of the remaining 102 people are at serious risk of passing in the next seventy-two hours.\n\n\"Dr. Seito tells me that there is a medical process that can break the cycle of dependence on Wort Weed. It is not a cure. However, according to her, 98% of those that enter the program succeed in breaking the cycle of addiction. We have already begun to use her knowledge to treat the victims.\n\n\"I have been told all my life that there is No Cure for Wort Weed addiction. That means those who use Wort Weed on their slaves mean to kill them. Jaar Adenomere planned to burn down that barn, with the slaves inside. Dead or alive, they would have been cremated. He has, apparently, done this fourteen times in the past. We are currently attempting to determine the numbers of slaves he has killed in this manner.\n\n\"These are not slaves who have committed a serious offence. These are not slaves who have attempted to run away from an estate. These are slaves that Jaar Adenomere had condemned on his own responsibility and then subsequently killed.\n\n\"This is mass murder on a large scale, Ladies and Gentlemen. We are potentially looking at over a thousands slaves addicted, and then worked to death or near death. Then simply placed in the barn awaiting cremation. Alive or dead, they were cremated.\n\n\"My question is, is House Adenomere the only House that has used this practice? If not, then how many other slaves have been so horribly served by their masters?\n\n\"You ask why the Greater Community abhors slavery, now you know. It is inevitable that the masters of such a system will abuse it, often with deadly results.\n\n\"I have been subjected to the mindset of being a master all my life. Today, I revolt at the idea that someone has so much power, the power of life and death over another person, with only their personal whims to control what they do. We regularly harm, maim, disfigure, rape, and even kill our charges, on nothing more than our personal whims, not to mention the psychological impact we have over those same people.\n\n\"The Yunki twins said it best: 'We went from being among the privileged to becoming something less than human.' The fact that Jaar Adenomere could interest nine other Houses to help him take down House Yunki speaks volumes about our system of justice and our attitude toward slavery.\n\n\"The Attorney General of Adenomere is currently investigating this incident with the intent of charging Jaar Adenomere and his son, Marius, with mass murder. The actions of these two men are indefensible. Worse, are the non-actions of those of you who may have known about this situation and did not speak up about it to Jaar Adenomere or report it to the authorities.\n\n\"The Landstradt has failed its people. We must now stand as one and repair what we have wroth.\"\n\nAurelia turned and left the building, leaving a confused and shamed Landstradt behind. It would be several hours later, after a riotous morning session, that the Chair called her personally and asked her to return to the Landstradt. Her wisdom was needed...\n\n************\n\nAurelia, with Korman, Junelliya, Hanalei, Sylvie, Violletiya, and Kim in tow, returned to the Landstradt that afternoon, ready to meet her critics. She was never given the chance. She was accosted at the door to the Landstradt Hall by irate people cursing her.\n\nShe never let her anger show, instead, she met every critic with a plain face, listened to what they had to say, and moved on to the next. They kept her from her seat for almost half an hour. She was halfway into the building when a bomb went off under her seat.\n\nPanic hit the Landstradt as people tried to flee. Kim pulled the women out of the main aisle just as the rush of panicked people hit them. The rush swept by them and crushed into the main door.\n\nNobody was injured in the bombing, the bomb designed to take out the Adenomere seating and little else. However, many people were injured in the ensuing stampede. Thirty-five people were trampled, five of them being killed.\n\nMedical staff and the police arrived immediately, however, Kim and Violletiya had taken control of the scene and refused to allow anyone but the investigators from the Office of the Attorney General into the immediate area around the seats of the House of Adenomere.\n\nViolletiya had placed Aurelia, Hanalei, Junelliya, and Sylvie in the safest place possible, the seat of the Chair of the Landstradt. Landstradt security had been upset by this, however, the Chair was not.\n\nAfter several hours, the Landstradt was re-opened and the Landstradt Master-at-Arms, David Multille, chief of Landstradt security, was brought before the Chair.\n\n\"Explain the lax security,\" the Chair boomed.\n\n\"I am sorry, Chair, but I cannot,\" Multille stated. \"The security cameras were shut off for forty minutes during the night. That indicates that the culprit was a member of my security team or at least aided by a member of my team. We know who was on duty last night, one of them is missing. We are looking for that person now. We have a planet-wide alert on him.\"\n\nThe Chair was not pleased, he turned to Master Jorge Devine of the Attorney General's Office. \"Your report, sir?\"\n\n\"Chair, the device was a low-yield bomb designed to take out the Masters Seat of the House of Adenomere'\" Jason explained. \"It might have killed or injured those immediately around that seat but would not likely have cause injury to anyone else nearby.\n\n\"We found the trigger mechanism. It was a timing device that was started by a remote signal. The device was set to run for twenty minutes before detonating. The timing sequence indicates that someone had set the timer not long after Lady Adenomere entered the Landstradt. Fortunately, Lady Adenomere was stopped from reaching her seat by those who were opposed to her professed new mandates.\"\n\nJorge let that hang in the air for several moments before continuing.\n\n\"This was a deliberate assassination attempt on Lady Adenomere, from someone within the Landstradt. That it did not succeed on killing Lady Adenomere was just pure luck. However, the perpetrator did not take into account the panic the bomb would have caused. This panic resulted in more injuries than would have been caused by the bomb.\n\n\"Thirty-five people were injured in the panic, five of whom have died. This is no longer a case of assassination; this is a multiple murder investigation. When we discover who is responsible for this, and we will, that person and any people who assisted them, will be brought to trial for five cases of first degree murder, thirty cases of injury caused during the conduct of a crime, and two cases of attempted murder of Lady Adenomere and her Aide, Mr. Korman.\"\n\nThat brought murmurs from the audience.\n\n\"Yes, while Mr. Korman is a slave, and we normally do not prosecute the killing of a slave, in this situation, Mr. Korman is a key witness to another offence being investigated by the Office of The Attorney General. His death and that of Lady Aurelia, would have caused major problems for the prosecution of that offence. We believe this was the motive of the assassin, though we won't be able to confirm that before we interrogate that person,\" Jorge ended.",
        "When nobody else spoke, Kim stood.\n\n\"I believe you are a professional bodyguard, is that not correct...er, Kim?\" the Chair asked.\n\n\"Oshiiru Kimiko, known as Kim, Chair,\" Kim replied, bowing \"Yes, I am a professional bodyguard, but I have also assisted in many instances of assassination attempts during my career. Sir, there are too many inconsistencies with this attempt to make it a single person acting on their own. This has all the hallmarks of a paid assassin.\n\n\"First, someone blanked out forty minutes of time overnight. That likely means someone was either blackmailed, or was paid, to assist the assassin, or was a sympathizer with those committing the act.\n\n\"Second, the assassin did not start the countdown on the bomb when Lady Adenomere was seated. That means the person was likely at or near the door to the Landstradt when Lady Adenomere arrived yet they did not wait to see her seated. Why not? The likely answer is that all non-members of the Landstradt would have been removed from the floor after the Chair arrived, directing everyone else to the bleachers.\n\n\"By tradition, anyone can come into the Landstradt but only members of the Landstradt, their families, or special guests, can remain in the building once the session starts. This means the person who started the timer was likely not permitted in the Landstradt once the doors were closed. In addition, it was only luck that pressure from malcontents forced Lady Adenomere not to reach her seat until after the timer detonated the bomb.\n\n\"Had the assassin been able to stay in the Landstradt, they would not have started the timer until after Lady Adenomere was seated.\n\n\"Third, the bomb was not detonated this morning, even though it was installed last night. Why not? That was because Lady Adenomere had called an emergency session of the Landstradt to inform the members of the incident she found on her estate last night. No one but Landstradt members were allowed in this morning's session, not even guests in the bleachers.\n\n\"All together, this indicates that the assassination was likely planned over the last two days but not overnight. That should narrow your list of culprits down somewhat,\" Kim stated.\n\n\"It does indeed,\" Jorge admitted. Jorge took the Master at Arms aside and they looked at security imagery from within the Landstradt earlier that afternoon. They immediately spotted the likely trigger man, the same missing guard they were looking for. Jorge now upgraded the requirements on that person's file, changing them from wanted for questioning to wanted as a likely suspect in a murder/attempted murder case.\n\nThat provided surprising results as those who were hiding said person suddenly changed their minds when they were confronted by the probabilities they would be charged for harboring a known fugitive. The man was given up by his 'friends' and quickly arrested.\n\nThe trigger man identified those who had paid him, and those who had actually planted the bomb. The names came as no surprise to the Attorney General.\n\nIn the meantime, the Chair suspended the remainder of the afternoon session and asked everyone to return the next morning.\n\nAdenomere Estate, Planet Adenomere, The Adenomere System\n\n\"Can we actually go there?\" Guinevere asked her mother.\n\n\"We have no choice if you want to learn more about your abilities,\" her mother confirmed.\n\n\"But we will be leaving Tougrate and Malnad behind,\" Guinevere said.\n\n\"They have an important job to do here,\" her mother reminded her. \"They will return to Liramor-23 when that task is complete, which they say will be less than a week.\"\n\n\"A week is a long time not to be able to learn more about my abilities, Mother,\" Guinevere told her. She heard Toolend laughing as they came into the room.\n\n\"Never fear, little one,\" Tougrate told her. \"We are sending you to one of our elders, Augraf. He is very skilled in telepathy. He taught Junelliya. He can teach you. You will see us again soon enough.\"\n\n\"Tougrate, despite being a telepath, you are sometimes so insensitive,\" Malnad chided.\n\n\"What do you mean?\" a perplexed Tougrate demanded.\n\n\"She is still a young one about to depart on her first great adventure,\" she explained. \"She is nervous and leaving people she knows and even admires. Junelliya, Fayad, Kim, us...she has reason to fear this adventure.\"\n\nTougrate turned his eyes to Guinevere and spread his tentacles out, bringing him down to a level where his eyes could look directly into the little girls.\n\n\"Don't step on my tentacles,\" he false whispered to her, bringing a bright smile to her face, being reminded of her own words.\n\n\"I have only known you for a couple of days,\" Tougrate began. \"You seem so much more mature to me so I sometimes forget that you are still a young one of your species. Augraf will be impressed by you, just as much as Malnad and I initially were.\n\n\"Life is one adventure after another. When we are young, all of our adventures are great adventures. But with maturity, we learn that great adventures change our lives significantly. Great adventures can change how you look at life, at people, even at the universe,\" Tougrate told her.\n\n\"Meeting us was your first great adventure. Meeting Augraf will be you next. Combining that with this trip you are about to take to a new home will make for an extra special adventure,\" Tougrate assured her.\n\n\"Learn to enjoy adventures. Because of who and what you are, your life will be filled with them,\" Malnad added.\n\n\"Time to board,\" a crew member from The Trine said from the door.\n\nElizabeth watched as Guinevere reached out and took a tentacle from each of the Toolend in her hand. Whatever was said between them was a private moment that her mother never could get her to reveal, but it changed Guinevere's outlook forever.\n\nWith a hug from Junelliya and Aurelia, they boarded the ship for the trip to Liramor-23.\n\nLiramor-23 Mining Platform, 109 Piscium System, 106 Light Years from Terra\n\nThree hours later, The Trine landed in the VIP dock of Liramor-23. Hanalei led the pair up to the VIP reception area where a couple of important people were waiting for them.\n\n\"Elizabeth and Guinevere Soulange, this is Dr. Fiona Marsh, Director of Operations for Liramor-23, and her aid-de-camp, Cdr. Jane Fillertan,\" Hanalei began. \"Beside her is Ambassador Mayute of the Toolend. Behind them is Augraf. They are all here to meet you Guinevere.\"\n\nGuinevere gave a nervous curtsy and a shy hello.\n\n\"You needn't be afraid, Clotticod (literally 'little one' a term of affection for Toolend usually employed with family members),\" Mayute said. \"We are all thrilled to meet you. It is rare to meet a telepath from another species. Until now, the only true human telepath we have met is Junelliya, and there is some issue as to whether she is a natural telepath or developed her powers during an incident.\n\n\"You are unique. You are a true natural telepath. We Toolend will be happy to be your instructors. Augraf here was my instructor many years ago. He is looking forward to starting with you.\n\n\"However, you must understand that our instruction techniques are not like human techniques. We do not have a formal school for telepathy. That means training rather than instruction. Practice rather than formal schooling in techniques. It will be difficult for you but, hopefully, fulfilling in time,\" Mayute explained.\n\n\"Since the Toolend are sponsoring you, you are welcome on the platform,\" Fiona stated formally. \"You will have to go to school to learn survival techniques for platform life, and other things about living in space. As you are not here on company business, you will have to pay for your living accommodations, though Hanalei tells me this will not be an issue for you.\n\n\"Hanalei also tells me that you have skills that can be used by the various embassies?\" Fiona asked of Elizabeth.\n\n\"Yes, I have personnel management, money management, and various organizational skills that could be of use for various offices on Liramor-23. While I have money, Junelliya suggested that I might want to work so as not to be bored,\" Elizabeth replied.\n\n\"That is so true on so many different levels,\" Fiona answered. \"Working in space is both exciting and incredibly boring. Also, we have no formal school for people of Guinevere's age. It should be exciting to see what Urano can do for her when she returns from her current assignment.\n\n\"In the meantime, we will set you up with a place to stay and arrange for you to get started on your required training for living on a space station. It was good to meet you. If you have any questions, Hanalei can help you. For anything dealing with paperwork, please ask of my HR department.\"\n\nFiona indicated a woman who had just entered the reception area. She nodded to the trio and left, the Toolend in tow.\n\n\"Hello, I am Dianne Ancien, Director of HR here on Liramor-23. I will personally take you around to get things arranged for you and will assign a person from my office to be your contact for your needs while you are on the platform.\n\n\"I am told you have money to deposit in our bank? Would you like to do that first?\" Dianne asked.\n\nGetting Elizabeth's consent, they moved off to the concourse to the local bank. Elizabeth gave her bank note to the clerk who did not even bat an eye at the amount, which surprised Elizabeth.\n\n\"You will find that the bank here is used to dealing with large amounts of currency as it works as an interchange between Union worlds and the planets of the Greater Community,\" Dianne explained. \"They also deal with the personal funds of several millionaires and even a couple of billionaires associated with the platform.\"\n\n\"This is your account information, Ms. Soulange,\" the clerk stated. \"You will have to change your wrist comp, as the security on that model will only allow us to move a maximum of thirty thousand credits through it. If you are planning on dealing with larger amounts than that, you will have to get an upgraded model or deal directly with your bank. There is a place on the concourse that sells comps.\"\n\nElizabeth thanked her and Dianne took them to directly to HR.\n\n\"This is Maria Fontenette, she will be your advisor from HR. If you have any questions please contact her directly or come here to HR to see her. Maria, these two ladies have not been through space training nor platform orientation, they will need to complete that within the next week,\" Dianne ordered.\n\n\"I will leave you in Maria's capable hands,\" she told the pair as she gave them a nod and moved off to her office.\n\nMaria completed the registration for the pair, assigning them to a place on Lima deck. She gave them the orientation tour of the platform, taking them around to see the sights, such as they were and finally took them down to their new quarters.\n\nAs they were moving along Lima deck, they found Hanalei.\n\n\"Hello, how are things going?\" she asked.\n\n\"We are just being shown to our new apartment,\" Elizabeth told Hanalei, who followed them. It wasn't far from the Piscium apartment, which meant that they could visit when they wanted.\n\n\"I am making supper soon,\" Hanalei said as they came to her door. \"If you would like to come over once you are comfortable?\"\n\n\"We would like that,\" Elizabeth confirmed.\n\nThe ladies arrived at their door and took in the place that would be their home for some time in the future. It wasn't much. It was a basic two bedroom, one bathroom apartment with a kitchenette and a living room. They had a large plasteel window that gave them an excellent view of the gas giant and some of the working cages. At least the monitor in the living room was the newest model.\n\n\"There are sheets and pillows in the closet of each bedroom. They are rather generic so you might want to visit the concourse to look for alternatives,\" Maria explained.\n\nAs they were looking around, a porter arrived with their luggage, such as it was. It didn't take them long to stow it away. Maria left them to get organized.\n\n\"It isn't much,\" Elizabeth told her daughter. \"But this is for you. I hope that you will gain much from our time here.\"\n\n\"Me too,\" Guinevere replied sincerely, hugging her mother.\n\nThey went to the Piscium apartment and pushed the buzzer, the door opened immediately on a green skinned alien, surprising the duo.\n\n\"Hello, I am Mind-Ur, you must be Elizabeth and Guinevere,\" Mind said, before stepping back to let the pair enter.\n\n\"Don't mind Mind-Ur,\" Hanalei laughed from the kitchen. \"The Ur Clan live next door but as soon as they smell my cooking, they are all over here.\"\n\n\"Is true, Hanalei and Junelliya are excellent cooks!\" said Mind. \"We are of the Pod-Drran, but now we are of the Union.\"\n\n\"Of the Union?\" Guinevere asked, curious.\n\n\"We got kicked out of the Pod-Drran,\" one of the (males?) replied. Yes, it had to be male as the females had (FOUR!!) breasts.\n\nCaye-Ur smirked when she saw the two newcomers looking. \"Yes, the Goddess has blessed us with four breasts, unlike humans.\"\n\n\"Yes, but she let the humans have much bigger breasts,\" Lent-Ur laughed.\n\n\"Lent, she is still young, don't fill her mind with that crap,\" Caye scolded him, causing Guinevere to giggle.\n\nThe door sounded and two Toolend came in as Caye opened it.\n\n\"You are Mayute and Augraf,\" Guinevere stated.\n\n\"How do you know that?\" Caye asked.\n\n\"He is wearing the ambassador's armband,\" Guinevere replied, rolling her eyes.\n\nThat set the Toolend off laughing, it seemed to be a running gag that was used often by people in this apartment.\n\nAnd then Hanaya landed on Guinevere's shoulder, rubbed her head against her face and rumbled her purr. Guinevere, at first nervous at the sight of those sharp teeth so close to her, sighed in contentment as the little animal broadcast her delight in being with the girl.\n\nElizabeth took in the company she found herself in. Toolend, Pod-Drran, humans, all sitting around talking normally as if nothing was strange at all. She suddenly realized these people had accepted her and her daughter as a matter of course.\n\nGuinevere gave her mother a look of understanding and a shy smile. Elizabeth suddenly felt the impact of the last forty-eight hours hit her. She had broken her marriage, met new and strange people, discovered the truth about her daughter, uprooted herself and her daughter to the other side of human space from their home world, all in such a short period of time. She felt herself sagging and was caught by one of the Pod-Drran who brought her to the couch.\n\n\"I am Hend-Ur, a nurse. This is my mate, Dr. Kaye-Ur. Are you all right?\" he asked.\n\nHanalei was suddenly there, sitting beside her and giving her a hug. \"She has been through a lot over the last couple of days, Hend. She will need the support of new friends.\"\n\n\"If you call her friend, Hanalei, then we will consider this pair our friends too,\" Mind-Ur stated formally. \"If there is ever anything you need, Elizabeth and of course you too, Guinevere, just come to our door and ask.\"\n\nElizabeth looked around at the group of strange beings who had just given her and her daughter their unconditional support. She was ashamed to admit that she would not have done so herself, her upbringing was just far too different from this situation.\n\nBut she was going to have to learn new things now. Not just for herself but for her daughter.\n\nThey all noted when a look of determination came into Elizabeth's eyes. Pleased smiles broke out all-round.\n\n\"I think we have just made new friends, mother,\" Guinevere said, giving her mother a hug.\n\n\"I think so too, honey. Though I am not sure how I am going to explain this to grandma,\" Elizabeth told her daughter. That brought a giggle from the little girl whose adventure the two were sharing.\n\nHanaya had been keening a sad sound but it abruptly changed to chittering as she jumped between Elizabeth's and Guinevere's shoulders. As she began to make the happy sounds, she started moving between the shoulders of all the guests and to the proffered tentacles of the two Toolend, who laughed their peculiar laugh at her antics.\n\n\"She likes you, little one,\" Augraf told Guinevere, explaining Hanaya's activity.\n\n\"I know,\" Guinevere replied.\n\nYes, indeed she does. Augraf thought to erhtself. If Augraf could have smiled, he would have. Instead, he let his happiness leak out...\n\nNS Dewfall, In Orbit of Planet Varus, Cl\u00e9ment System, Forty-Eight Light Years from Terra\n\nCmdre Dostier accepted the call from Junelliya. It was time for their strategy session. She was pleased to see Raymond, four of the five Marines, as well as Fayad, Kim, Ambassador Flynet, and Seito.\n\n\"Hi Junelliya, is everybody ready?\" she asked.\n\n\"We are, though we have a guest in this session, Liana,\" Junelliya let the image expand to show...\n\n\"Lady Adenomere?\" Liana exclaimed, surprised. \"It is good to meet you like this if not in person. Let me say, wholeheartedly, that I am pleased you escaped injury today.\"\n\n\"Thank-you Commodore Dostier,\" Aurelia replied. \"And please call me Aurelia, Lady Adenomere is too formal. However, today was not the first attempted assassination by those two idiots. Their planned attempt on me when I arrived on Adenomere was so easy to see through and prepare for it was almost an embarrassment to say that I foiled that attempt. They then launched a pair of shoulder fired SAMs at my aircar a couple of days ago. Fortunately, I had countermeasures installed on the vehicle.\"\n\n\"Please call me Liana, then, Aurelia,\" Dostier returned with a smile. \"Aren't countermeasures illegal on civilian vehicles?\"\n\n\"So are shoulder fired SAMs in the possession of civilians,\" Aurelia replied.\n\n\"Touch\u00e9. You do realize that this is a strategy session with what to you is the opposition?\" Liana asked.\n\n\"Well, we may be on opposite sides, Liana, we do, however, have the same objectives,\" Aurelia returned.\n\n\"Agreed. We will accept whatever input you may offer, though it will only be used to plot potential responses,\" Liana informed her.\n\n\"Understood,\" Aurelia acknowledged.\n\n\"We asked Aurelia what she thought might happen over the next couple of days,\" Junelliya explained. \"We thought you might like to hear her response.\"\n\n\"The Landstradt, or at least a good portion of its members, is still dead set against freeing any more slaves.\" Aurelia began. \"There is very little support for the Union position of demanding the release of its citizens within the Landstradt.\n\n\"However, while that is the face of the Landstradt, people are beginning to see for themselves the image that we, the Alliance, has out there, outside Alliance space. We are not pleased that we are viewed as pariahs.\n\n\"That is what we have to push with. We need to let the membership know that they have to own up to their past in order to advance to the future. We need to force them to acknowledge that the Alliance has no future if it maintains the status quo.\n\n\"The Union has already stated that it will not deal with the Alliance on anything but basic needs. That severely limits trade. We need to offer an olive branch that allows the Alliance to see past our current limits to a future that we could attain through positive actions,\" Aurelia told them.\n\n\"We had noted that the Alliance was hardening its stance over the last few days, however, I don't know how to bring the Alliance into the fold over this,\" Liana admitted.\n\n\"I do,\" Junelliya put out. \"We made the offer of support from the Harradi, why don't we let that happen?\"\n\n\"How do we do that?\" Liana asked. \"The Landstradt is suspicious of anything we could offer to them now.\"\n\n\"Aurelia has a few people she can talk to,\" Fayad said. \"Maybe we can ask one of them to pop the question of how to make use of what the Union is offering. We could then let the Harradi speak for the Harradi.\n\n\"We can let the Harradi know that the Alliance will likely call them. We can ask who they want us to call to answer Alliance questions,\" Fayad ended.",
        "\"Are the Harradi that good with agriculture?\" Aurelia asked.\n\n\"They are,\" Junelliya assured her. \"You should have seen what they did at Denders Resort. They turned desert sand into arable land in the space of a week. It was amazing. We have been back since they started. They have already made one harvest and are starting on two more. Those plots of land will be feeding all the local resorts, saving money in the long run.\"\n\n\"Saving money will be the key to breaking the slave model of the Landstradt,\" Aurelia admitted. \"If we can do that, we could persuade the members to think differently.\"\n\n\"OK, we have an approach as to how to start the Landstradt talking to us, however, we not only need someone to ask the question, we need someone to allow the Harradi to investigate their holdings and make suggestions,\" Liana noted.\n\n\"OK, you have your Guinea Pig,\" Aurelia said with a smile.\n\nThe group went through what to do over many different scenarios for the next few days in the Landstradt. The scenarios were varied and ran through the gamut of mild incidents to the Landstradt outright refusing to cooperate on any level...\n\nLandstradt HQ, Planet Adenomere, The Adenomere System\n\nThe Landstradt reconvened the next day at 0900 hours. The Chair brought the Landstradt to order then rose to formally apologize to Lady Adenomere.\n\n\"Lady Adenomere, it was through the actions of people employed by the Landstradt that you were potentially imperilled yesterday. It was through sheer force of good fortune that you were not injured or killed.\n\n\"The Landstradt formally apologizes for this and ensures all members that in future, no chances will be taken with the security of this building. New protocols have been emplaced to prevent any such future incidents,\" the Chair bowed low to Aurelia and the floor.\n\nAurelia rose. \"Chair, this was an assassination attempt that was enacted from within House Adenomere with the assistance of House Burling and House Climb. In this case, Aedan and Adolphus Adenomere wished to remove me as Matriarch of House Adenomere, with the explicit hope that one of them would take over as Patriarch of the House. In order to complete this attempt, they sought out the aide of the members of House Burling and House Climb. These two senior Houses joined with Aedan and Adolphus because they hoped to sow dissension amongst the members of the Landstradt. They were hoping to have the senior members of their Houses released from the charges they were imprisoned for.\n\n\"Beside the charges of rape and attempted murder of a prisoner, Aedan and Adolphus now have additional charges of five capital counts of Second Degree Murder, in that they killed five people during their attempted assassination. They also have thirty-three counts of Injury Causing Bodily Harm conducted during the course of a Criminal Act. These two will be going to jail for a long time, if not visiting the executioner. The exact punishment will be a matter for the courts to decide.\n\n\"The members of House Burling and House Climb who assisted those two, are also included in the charges of five capital counts of Second Degree Murder and thirty-three counts of Injury Causing Bodily Harm conducted during the course of a Criminal Act. I do not yet know the full number of people, nor the names of those from House Burling and House Climb, however, I am told that most of the male members of both of these houses are now in jail. Like House Adenomere, House Burling and House Climb are now being guided solely by women.\n\n\"House Adenomere wishes to apologize for the actions of two of its sons which resulted in injury and death here yesterday. Those two no longer have access to any devices that can relay their orders for a repeat of such acts. Their funds have also been cut off, returning to their respective branches of House Adenomere.\n\n\"I have taken action to ensure there is no one left in House Adenomere who will act against me, or against other members of the House, or allow such actions to spill over to harm others. I hope the women of House Burling and House Climb will follow my actions.\" Aurelia sat down.\n\nA murmur swept through the floor as Aurelia finished. The Landstradt had witnessed many power struggles over the years but none had ever been finished so quickly nor so effectively. Aurelia had made a statement that all would remember. She had effectively dealt with three former Great Houses who had been hostile to House Adenomere, House Gordon, House Palay, and House Pendar, turning them into potential, if not open allies.\n\nShe had sidestepped several attempts to discredit her, turning those into opportunities to build her mystique within the Landstradt. And now, she had ruthlessly quashed an internal House struggle to unseat her as Matriarch. She had dealt with an internal House power struggle without resorting to extreme violence.\n\nNot only that, she had become the host to the Union representatives, leaving her as the person that all the members wanted to have an invitation to dinner at the Adenomere estate, just to speak with the Union reps.\n\nIn the space of days, Aurelia had made her mark on the Landstradt as a formidable member of a formidable House.\n\nMany who had made plans to sue House Adenomere for the attempted assassination suddenly changed their mindset. They realized that going against such a formidable foe would be a mistake.\n\n\"Shall we begin today's session?\" the Chair asked rhetorically. \"Bring out the Union representatives.\"\n\nThe side door opened and Junelliya, Fayad, Kim, Dr. Seito, Ambassador Flynet, and the six prisoners came in, Sgt. Wilder in an anti-grav float chair she was controlling. The prisoners now all wore formal Navy and Marine uniforms, including all of their bling, which caused an instant uproar in the Landstradt. The Chair gavelled this down.\n\n\"That will suffice!\" he thundered. \"I will have no more of this in this Landstradt.\"\n\n\"Chair, why are the prisoners wearing clothing?\" an incensed Master Lindelle of Planet Vuelta questioned.\n\nJunelliya turned to look at the man who asked the question. She could easily sense his anger and frustration. She could see that he had been one of those who had been seriously hurt by the loss of slaves from other holdings. He was dependent on the products of other holdings to allow his to function properly. While he did not have any Union Slaves, he was required to work with holdings that did.\n\n\"They are clothed, sir, because I am a married woman who loves her husband,\" Junelliya began. \"While I like the look of the bodies of these men, I prefer not to be tempted when I can avoid doing so.\n\n\"Temptation, sir, is a two-edged sword; you must be tempted, and you must give in to that temptation. I chose to remove the temptation that their bodies potentially force on me.\n\n\"These people have been given parole. That means they are to be treated as human beings. That was understood when I asked for and paid for their parole. To me, treating them as a person means giving them respect, giving them back their dignity, and clothing them.\n\n\"If you cannot understand, or refuse to understand that, then you and I will find ourselves on the opposite sides of a battle line, sir,\" Junelliya snapped. She allowed her anger to seep into her emotions and pushed them at the Landstradt with her empathic abilities.\n\nWhile many people bristled, most wilted before her. Junelliya deliberately turned her back on the person who had asked the question, letting all in the Landstradt understand, through her abilities, that she was snubbing this person.\n\nAnger at being snubbed flared in Master Lindelle, but then Raymond Clark began to laugh. He tried to keep it quiet, but it just kept getting bigger and bigger.\n\n\"Do you find something funny, Capt. Clark?\" the Chair demanded, anger entering his words.\n\n\"Yes, Chair, I do,\" Raymond stated, standing. \"I was reminded of a quote from Shakespeare: 'The apparel oft proclaims the man'. The quote was bastardized by Mark Twain into the phrase we know today: 'Clothes don't make the man; the man makes the clothes'.\n\n\"We five proved this the other day when we entered the Landstradt naked, covered in the wounds we suffered in Hollern Prison. You expected to see broken men and women, yet we rose with dignity and marched into the lion's den with heads held high, surprising the members of the Landstradt, who did not expect defiance from your prisoners.\n\n\"In 1642, Richard Lovelace proclaimed in his poem: 'To Althea, from Prison - Stone walls do not a prison make, Nor iron bars a cage.' That attitude was expressed by us as we entered, naked, into the Landstradt.\n\n\"Now, you are upset that we wear our uniforms. In this case, Shakespeare's original quote proves true: 'The apparel oft proclaims the man'. We take no shame in who we are, Master Lindelle. Quite the contrary. We are proud members of the Union Navy and Marines.\n\n\"Each of us has faced foes before, as proclaimed by the medals we wear. Some of these medals proclaiming a point in our lives where we faced peril and survived. Others proclaim where we have been, and what we have accomplished.\n\n\"Our lives, our deeds, our sweat, and our tears are proclaimed in these baubles we wear.\n\n\"I will continue to quote Lovelace: 'If I have freedom in my love, And in my soul am free, Angels alone that soar above, Enjoy such liberty.'\n\n\"We all make our choices in how we live life. No matter by who, or how, we are restricted, mankind continues to soar above the mundane, above oppression. You can make us prisoners, slaves, you can beat us, or break us, yet still we fight against you.\n\n\"These uniforms do not proclaim the man, because we who wear it, must earn the right to wear it.\" Raymond stated, then sat.\n\n\"Pretty words, Navy,\" Lindelle sneered, however, his words were met with stony silence from those around him. That just angered him more. \"I don't want pretty words, Navy, I want vengeance!\"\n\n\"You want to talk about vengeance?\" Raymond roared at Lindelle. \"I come from New Anglia!\" he shouted. The Landstradt went absolutely silent.\n\n\"My entire extended family, 400+ lived in the capital, the first of six cities bombarded by C-charged rocks launched at a neutral planet by Confederation Naval Vessels. Only three of my family survived, three who were not in the capital that day.\n\n\"I volunteered to go to Emporium to settle a score, to enact my own vengeance. I and thirty-five other members of the Black Lightning Brigade entered Emporium and brought it to its knees. We indiscriminately destroyed planetary communications systems, rail lines, shipping ports, shuttle ports, food processing systems, and anything else we could to demoralize the citizens of Emporium. We succeeded, but at a heavy cost. Thirty-six of us went in, eight came out.\n\n\"I got my vengeance, but at a stiff price. The things I did to demoralize a population left scars on my soul. I spent ten years in self-isolation in the Piscium system, working as a Rockhound driver. I did it to give myself time to reflect, to gain back my soul. I eventually came to terms with what I did. Some of my fellow Black Lightning members did not. There are only three others from Emporium left now.\n\n\"The Union estimates that there were 500,000 Union citizens taken as slaves by the Alliance over the last twenty-four years. We got out 163 thousand plus in the recent raid. That leaves roughly 336,000 people still illegally being held by the Alliance. That's 336,000 times the number of families still affected by the loss of someone dear to them, taken from them by pirates. Pirates working for the Alliance. How many stories of potential vengeance against the Alliance are in those numbers?\n\n\"When you call for vengeance, you had best be aware of the price that vengeance extracts,\" Raymond kicked his chair aside and stomped out of the main chamber into the side room. No one opposed him.\n\nIn the ensuing silence, Ambassador Flynet stood.\n\n\"Chair, we have much to discuss about many things over the next few days, we cannot have successful negotiations if all we do is point incriminating fingers at one another,\" Flynet began. \"We need to move beyond this and move to worrying about how to fix things for the Alliance and not by increasing the animosity between the Alliance and the Union.\"\n\n\"What makes you think the Alliance is broken?\" someone from the floor sneered. His words were also met with silence.\n\n\"Chair?\" Flynet left the question hanging.\n\nSomeone on the floor rose.\n\n\"The Chair recognizes Master Petracian of Gaetan's Planet.\"\n\n\"Thank-you, Chair. I would like to pick up on a comment that was made by the Union representatives a couple of days ago, that we could engage the services of the agricultural specialists of the Greater Community?\" Marcin asked.\n\n\"You are speaking of the Harradi,\" Flynet replied. \"We can contact them if the Landstradt wished to speak with them directly.\"\n\nThe Chair rose. \"That would be ideal, however, we need to determine who would be the host of these Harradi as they look at our agricultural systems.\n\n\"Who among the Landstradt would provide space for the Harradi should they decide to assist us?\" the Chair asked.\n\nNo one spoke.\n\nJunelliya could feel the tension spike around the Landstradt. They knew they needed help to get by the next three to twenty-four months, however, they were loath to be the person who hosted the aliens. She understood that they were trying to save face but with the potential collapse of the Alliance staring at them, saving face was not the way to go.\n\n\"Lady Adenomere, you are already hosting guests from the Union and from the Greater Community, will you once again assist the Landstradt and give the Harradi a place of comfort while they are here on Adenomere?\" the Chair asked.\n\n\"Chair, are you asking me to be their chaperone?\" Aurelia demanded.\n\n\"We are asking you to provide a roof for those who might help the Alliance,\" the Chair conceded.\n\n\"Very well, Chair. As no one else will provide shelter for these people, I will once again assist the Landstradt,\" Aurelia stated.\n\nWhile outwardly being passive and calm, inwardly Aurelia was ecstatic to be the host of another new species. Her doors would be opening to afternoon tea for the members of the Landstradt. It would only help her prestige.\n\nJunelliya opened her comp and sent a request to the Harradi Ambassador on Liramor-23. A minute later, she had a connection and flicked it to the large 3D monitor behind the Chair.\n\n\"Hello, Junelliya, it is good to see you,\" Ambassador Clend smiled at Junelliya. \"Are you in the Alliance Landstradt, Junelliya?\" Clend asked, noting the people behind her.\n\n\"I am Ambassador Clend,\" Junelliya admitted. \"The Alliance is about to lose a good portion of its agricultural labour force. They would need to make up the difference with new farming practices, new crops, and other sundries. They would like to ask you about engaging a few of your more experienced Harradi to look at what they are doing and make suggestions as to how to improve things on their six planets, starting with Planet Adenomere.\"\n\n\"I see. Who is the spokes-person?\" Clend asked.\n\n\"I am Martin Grovern, Chair of the Landstradt, the governing body of the Alliance,\" the Chair formally introduced himself.\n\n\"It is a pleasure to meet you, sir, I am Hollard Clend, Ambassador at Large for the Harradi, out of our embassy on Liramor-23. How may we be of service?\"\n\n\"Ambassador, as Junelliya has stated, we may soon be losing much of our labour force. We need to adopt our practices to take into account this loss. However, this loss does not fall evenly across the Alliance. Some of us will suffer more than others, due simply to the fact we have lost more of our labour force.\n\n\"We need new practices that may have to be tailored to specific estates, regions, and planets,\" the Chair explained.\n\n\"A tall task, though not outside of our ability,\" Clend indicated. \"but what kind of timeline do you have for your requirements?\"\n\n\"Sir, there are some of us that are currently in dire straights due to the near total loss of their labour force. They would not survive much beyond three months without immediate changes,\" the Chair explained.\n\n\"Then they should be given priority in the assessment,\" Clend indicated. \"We would need to have data on who is hard-pressed, what kind of crops they are planting, what long term labour force they are left with, and more importantly, what you are willing to give up for this service, both in terms of currency, crops, labour, and other items.\n\n\"What you are asking of us is a complete retooling of your agriculture on a planetary scale, that will not be an easy task. We can do this; however, I am not sure that it can be done within a three month timeframe, sir,\" Clend advised.\n\n\"Could you inspect the estates that are expected to fail in the short term and provide immediate support for them?\" the Chair asked.\n\n\"That is potentially doable,\" the ambassador replied. \"It all depends on the number of our people you wish to engage. Because we are working on a planetary scale, I would suggest that we bring in six Harla, a director of 100,000 workers. The position also denotes the level of learning this person has attained. We will need one for each of the Alliance Planets.\n\n\"We could then bring in ten Harge for each Harla, who would be sent to different regions of the planets and potentially to those who are in dire need.\n\n\"With that size of a work force we would be able to assess your planetary needs and determine what is needed to provide and teach new practices appropriate to the planets and the planetary regions, and even down to the individual estates, giving priority to those who are hard pressed in the near-term.\n\n\"You are looking at sixty-six Harradi, eleven to each Alliance planet, to work with you for the next three months, though we will start with one Harla. Is that acceptable to the Landstradt?\" Clend asked.\n\n\"Sir, if you can provide us with new practices that will help us move forward, then that will be acceptable,\" the Chair replied, not daring to ask for comments from the floor.\n\n\"You stated that we could pay in currency, crops, and other trade goods. We understand that we are not allowed to trade in anything other than basic needs with the Union and the Greater Community,\" the Chair indicated.\n\n\"Food items are basic needs, Chair. We can arrange a temporary injunction for large-scale food trade if it will lead to better relations between the Alliance and the Greater Community.\n\n\"The Harradi home world is much colder than many of the worlds in the Union. Our planet is just coming out of an ice age. There is only a narrow strip of arable land near the equator that we can effectively farm.\n\n\"The Harradi have had to learn how to farm in the most remote of locations and in the worst possible conditions that includes deserts, tundra, rocks, swampland, flooding, extreme weather, and other issues.\n\n\"The Harradi have not always had enough food for the population of our home world. In times of old, we enacted what was euphemistically referred to as The Lottery of Life. No one was exempt from the lottery, not even royalty. If your name was chosen, you were expected to walk out onto the ice in order to allow for others to have enough food to live. The names of those chosen have been engraved in history, their names spoken every year in the towns and cities from whence they originated.\n\n\"When we left our planet, we took our agricultural expertise with us, helping others to build and grow their abilities in new and challenging environments. In return, we took in food for our home world.\n\n\"The Harradi Lottery of Life has not been enacted since we have become members of the Greater Community, some four hundred years ago. We never want to see it enacted again. What currency you provide us, will be used to purchase food stocks, if not from the Alliance, then from other worlds with a surplus. We are more than ready to accept food stocks in place of currency, in fact, we will make it a part of our negotiations,\" Clend stated.",
        "\"How many planets have the Harradi been working on?\" the Chair asked.\n\n\"Including the Union planets that we have recently begun assisting, we have now worked on more than 1,200 planets, and several thousand space stations. Our expertise and knowledge of planetary conditions and the crops that can be supported in them is second to none.\n\n\"We can show you how to improve the crops you are using. Provide you with new crops that would be better suited to the conditions you are dealing with. Provide you with new farming and animal husbandry methods that can improve your output fairly quickly.\n\n\"If this is something that you desire, then we can make arrangements to support you. We can have a Harla on Adenomere in two of your days, if that is what you desire,\" Clend finished.\n\n\"We have a potential host for your people, ambassador. Will you be coming to Adenomere as well?\" the Chair asked.\n\n\"If that is permitted. I will require that Ambassador Flynet is present for all our negotiations, as the Greater Community considers your situation to be an internal human dispute.\n\n\"Also, the ending of slavery and piracy will be part of the price for our assistance. If those items are not part of the negotiations, then we cannot and will not help you. The Greater Community abhors both of those practices,\" Clend explained.\n\n\"You say we need to negotiate this?\" the Chair demanded.\n\n\"Chair, no system can be turned off immediately. We are aware that it takes time to change practices that have been going on for near to a century. That is what the negotiations will be about. The timeframe. These negotiations will aid the Alliance in the near and long term as once these practices have been ended, the Alliance can be included in the advancement of new technologies.\n\n\"It will be a win-win for the Alliance, the Union, and the Greater Community,\" Clend told the listeners in a no-nonsense manner.\n\n\"Thank-you for your candor, Ambassador Clend. We will sign-off now, as our membership has much to discuss,\" the Chair gave a bow to the ambassador and Junelliya closed the link.\n\n\"I suggest that we take a break until after lunch,\" the Chair said. \"This afternoon's session will be an internal Landstradt debate open only to members of the Landstradt, however, I would like the representatives of the Union to be available if that is possible?\" the Chair asked.\n\n\"We can remain on our ship outside the Landstradt, sir, which would place us close enough to respond quickly,\" Junelliya stated.\n\n\"That is acceptable. The prisoners will not be needed this afternoon, they can be returned to the Adenomere estate,\" the Chair suggested.\n\n\"I think that would be advisable,\" Flynet agreed, with a tight smile, thinking of Raymond.\n\nRestaurant of the Whorl, Adenomere City, Planet Adenomere, The Adenomere System\n\nAurelia and friends were back again in the same restaurant she had used earlier in the week, though the number of people was a little larger as it now included not only the Yunki twins, the Gordons, The Palays, The Pendars, Lady Handren, Lady Marshall, but also the Union representatives, the six prisoners, and the two Toolend.\n\nSharron Whorl, the owner of 'Restaurant of the Whorl', was shocked when the Toolend first came through the door. She had seen them on the news channels but seeing them in person for the first time left an impression on her, especially their sheer size, as the tall aliens barely fit in the door.\n\nMore and more members of the Landstradt had asked to speak with the Union reps forcing Aurelia to request one of the larger conference rooms in the restaurant to make room for all. The owner of The Whorl was happy to see the extra business as this time of year was normally pretty lean for her. She gave Aurelia the entire upper floor, a banquet hall, which had room for over 250+ guests. Not that they were getting close to these numbers, but that allowed the guests that did arrive to spread out and converse in relative privacy with their respective meeting partners, both Union and Alliance, a win-win for Aurelia, her clique, the Union reps, and the additional guests who were showing up unannounced. Lunch, from this point on, would prove to be a lively affair for all at the Whorl.\n\nThe Toolend revelled in their notoriety as telepaths and did little party tricks for Aurelia's guests, taking advantage of being allowed into the minds of the guests to find out little things that Ambassador Flynet and company would need to know. After all, even though it was a game, they had been given permission to look into the guest's minds...\n\nMany deals were potentially made between the members and the Union, predicated on the fact that they would eventually be allowed to trade with the Union. The members that made the deals could all afford to wait, unlike many of those who were in dire straights. That group was anxiously awaiting the arrival of the Harradi representative.\n\nLandstradt HQ, Adenomere City, Planet Adenomere, The Adenomere System\n\nAurelia sent Raymond and his group back to her estate with her limo as she entered the Landstradt after dinner, while the remainder of the group disappeared into The Trine. The afternoon session was about to start...\n\nLindelle stood as soon as the Chair opened the session.\n\n\"Chair, do we actually want to have aliens dictating to us how to run our affairs?\" Lindelle asked in a rather scathing manner.\n\n\"Master Lindelle, I will remind you that while you are much better off than some of your compatriots, not everyone in the Landstradt is on a good footing at the moment. I think more than one third of the Landstradt has been affected by the current loss of our labour force and that will only grow as more and more are lost over the next few months. Your actions appear to be rather selfish,\" the Chair finished coldly.\n\n\"I simply do not wish to be dictated to about how we do things. I am quite content with the status quo!\" Lindelle snarled.\n\n\"But I am not,\" Olemn Pendar rose to speak to Lindelle's comment. \"We have known for years now that our current practices of slavery has been living on borrowed time. Some of us, who can better judge the future, have made arrangements for the changes that are now being thrust upon us, others have not.\n\n\"The only reason you do not care about the immediate future is because you, Kevin Lindelle, having seen the writing on the wall some time ago, had divested yourself of all Union originated slaves. That allows you to be somewhat cynical under the current circumstances.\n\n\"What is more important to me is our future development. I have had the opportunity to speak to the Union reps over dinner today. I must admit surprise as to the number of innovations that the Union now enjoys, that cannot be traded with the Alliance. The Union is poised to advance more than one hundred years in certain technologies, more in others. They have already moved forward in ship construction, with Jump-grid technology and advanced Marilon/Aruna generators that are far superior to our existing technology.\n\n\"Imagine a Marilon generator that can fully recharge in one hour, that does not require a resting period after five continuous uses, which does not fully deplete itself if you short jump. These are some of the advancements that the Union now enjoys with the new Marilon/Aruna generators.\n\n\"Not only that but these Marilon/Aruna generators can provide larger instant power levels than the previous models, meaning that items that require surge power can get more of that surge power. Try putting that thought behind Naval weapons. That means that their weapons are instantly more powerful given a specific model without major changes to the weapon itself.\n\n\"Our Orbital Defence Forces noted that some Union Naval vessels boasted unusual weapon's power levels during the recent Great Raid. Now we know why.\n\n\"Imaging a force field over the opening to a shuttle bay that does not allow gas to escape into space and allows for ships to pass through the field. That means you don't have to open and close bay doors, to cycle and recycle air each time a ship exits or enters the bay. That is time saved on a massive scale.\n\n\"Those are only a few of the advancements that were discussed by the Union representatives at lunch.\n\n\"We have known for years that finding new slaves was becoming more and more difficult. Now that the Union Navy enjoys such an advantage in technology, it is changing its procedures for dealing with pirate vessels. The new ICS technology means that Union Naval Commands can now coordinate against pirate vessels as they show themselves.\n\n\"The Union President was correct when he said that 'Piracy was literally, a dead-end trade'. I have heard, recently, that one of our pirate fleets has not reported in and is now more than a week past its due date. We have had delays before in fleet due dates, but not by as much as a week.\n\n\"And, Master Lindelle, while you have divested yourself of Union slaves, those with whom you deal with, specifically those who sell you products you need for your own productions, have not. They have been seriously affected by their own labour shortages. I am sure that has translated to issues for you as well.\n\n\"We were already feeling the pressures of our slave-based economy even before the Great Raid. We were unable to bring in significant new technology, unless we stole it from the Union. Now that we are banned from Union space, how will we continue to do that?\n\n\"Ambassador Flynet is correct, ladies and gentlemen, we can, if we wish, remain as we are, a stagnant backwater of humanity, or we can look forward to becoming part of a greater whole. Those are our choices, stark as they are,\" Olemn Pendal ended and sat down to pandemonium.\n\nThe afternoon session of the Landstradt was acrimonious, with fingers pointing in all directions. Near the end of the session, Aurelia rose. The Landstradt went silent.\n\n\"Chair, it is obvious to me what is happening here. Many of our members are refusing to read the writing on the wall. They want to remain as they are, safe and happy in their nice warm blankets. Unfortunately, the blizzard raging around us is sapping the warmth of that blanket from us, bringing cold to our hearts and bodies.\n\n\"The Alliance is facing a crossroads. The issue today is not that there are forces arranged against us, trying to change our current way of life but rather that we have a choice to make that we do not wish to make.\n\n\"Knowing the reputation of the Adenomere's, I did not want to become betrothed to Marius Adenomere. However, I needed to think of my families greater needs.\n\n\"Once in that situation, however, I did not become the meek little wife all of them were expecting...\" here the members of the Landstradt broke out in a laugh. \"I did what was necessary to ensure that I would not only survive but to thrive.\n\n\"That is the decision that the Landstradt now faces. Yes, it is a big move, a major step away from how we currently do business. But that is the issue, doing business. We may survive, doing business only within the Alliance, but we will not thrive.\n\n\"So we must decide what we shall do going forward, survive, or thrive?\" Aurelia sat to utter silence in the Landstradt.\n\nThe Chair's wrist comp rumbled. He noted a message from Ambassador Flynet. He blanched when he read it, then rose to speak.\n\n\"I have just received a message from Ambassador Flynet. The Sagittarius Pirate Fleet has been captured intact, with a minimal loss of life, all twelve warships and eighteen cargo ships. There is a list of the dead, and of those captured. I shall pass the list of the dead onto their respective Houses.\n\n\"We now know for certain that President Holloway was correct in his assertion that the Union would be pressing our pirate fleets. They mean to eradicate piracy in Union space and they have the technology to allow them to do just that.\n\n\"I think that we will end this session here. We will reconvene tomorrow at the regular time...\"\n\nEnd of chapter forty-two.\n\nPlease rate and comment but remember to keep your comments respectful.\n\nCheers! See you all on Liramor-23!\n\nBe well, Be kind to one another, Be safe.\n\nbigtddybr"
    ],
    "authorname": "bigtddybr",
    "tags": [
        "sci-fi"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/all-that-glitters-ch-42"
}