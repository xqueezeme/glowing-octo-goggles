{
    "title": "Anal Discovery",
    "pages": [
        "Looking back I guess I was very sexually reserved as a young person. But by 18 I was beginning to feel more relaxed about have sexual desires and fantasies. \n\nI didn't start masturbating until I was 19 but it soon became a very regular thing. I would often think about touching myself during the day and I thought I was terribly sexually liberated because I knew I was going to act on it that night. \n\nI thought people would be astonished to know that I touched myself sexually. I now know that I was doing nothing out of the ordinary, but at the time I thought I was a real wild one.\n\nI was still living at home and I would masturbate most nights, usually in bed before going to sleep. At the time I thought what I was doing was about as outrageous as sexual behaviour got.\n\nThen, as now, I prefer to have my knees up and legs spread wide when masturbating, partly because of the easy access to my clitoris and vagina but also because of the heightened sense of brazen sexuality of being naked and having your legs wide open.\n\nBut although alone in my room I was never quite 100% sure that I wouldn't be interrupted by a family member so I'd usually masturbate on my back with my legs slightly apart and my pajamas still on. \n\nUsually by the time I would climax I'd have one hand working my clitoris fairly quickly while using the other to work one or two fingers in and out of my vagina.\n\nOn one occasion which I remember very vividly it was fairly late and everyone else was long in bed. On a whim I deliberately took my pajama pants completely off in a mood of heightened freedom before even getting under the sheets.\n\nAt this point the light was still on and it felt great to stand there with my bottom and pubic hair exposed. I took the time to enjoy my nakedness and carefully fold the pajama pants and placed them in the dresser drawer. \n\nInstead of just flicking back the sheets and getting in I leant across the bed with my legs slightly apart and pushed out my bottom before drawing back the covers. I had this sense of exposing my labia, my nakedness to the world even though the only thing behind me was the wall.\n\nI found it so arousing that I looked around the room for things to pick up. I bent over keeping my legs straight and apart to pick up this and that. Each time I bent over I felt a sexual focus between my legs rising. \n\nI imagined I was being watched and stood in front of the mirror. I had planned to leave my pajama top on because if someone came in while I was under the sheets they wouldn't see my naked bottom half but would be able to see my naked torso. \n\nBut I was caught in the moment and watched myself in the mirror as I unbuttoned the top and let it fall to the ground, exposing my breasts. Seeing myself naked like this, fondling my breasts, nipples erect was surprisingly sexual. It was like I had leap into a new realm of sexual deviancy.\n\nIt was not like being naked after getting out of the shower or something. There I was standing fully exposed looking at my breasts and pubic mound and seeing my naked self in a purely sexual way. \n\nI was thinking of men looking at me like this, seeing and being aroused by my naked body. \"Come on and fuck me,\" I whispered quietly to men in general. \n\nSaying the words 'fuck me' was liberating. There I was, supposed to be wholesome and innocent but touching breasts and wanting to be fucked. The idea immediately shifted my focus to my vulva. I wanted to touch myself more intimately; I wanted my fingers inside me!\n\nI turned off the light and got into bed. I had a much greater feeling of raw sexuality compared to my usual masturbation sessions when my hands were down my pajamas. \n\nWhile often intense, masturbating with my pajamas on gave a sense of discretion, privacy and reservation.\n\nThere was something immensely erotic about being naked for the sole purpose of wanton sexual gratification. Once I got into bed I was surprised how physically sexy it felt to have my naked bottom and hard nipples against the cool sheets. I spread my legs wider than usual but still flat on the bed.\n\nI started by fondling of breasts and nipples then down to my labia and clitoris. My sexual arousal came on much more quickly and insistently than ever before \u2013 I was already so wet! I soon found myself at the usual end game of right hand quickly rubbing my clitoris with two fingers of my left hand in my vagina. \n\nI could feel the sexual energy rising, magnified by my nakedness and lusted after the orgasm I knew would come. I couldn't help but lift my left knee up to get my fingers further inside me as lust overtook my usual sense of refrain. \n\nIt felt great as another layer of restraint fell away and I was more deeply penetrated by my fingers. But I also felt exposed with that never quite complete sense of privacy that you have in the family home. Wondering if someone is going to barge in and see one leg up in the air. \n\nBut I couldn't let the sexual pleasure to subside so I rolled onto my right side so my knee could be hard up against my ribs without being up in the air. But while my right hand still had great access to my clitoris it was hard for my left to get at my vagina.\n\nI didn't consciously think about it but I just arched my back and switched to fingering myself from behind which felt different and was further liberating as another layer of inhibition peeled away. \n\nHowever, the shift in position had slightly slowed the rush toward orgasm and while I was still totally consumed by this sexual act I also felt like I could take my time to enjoy it.\n\nI took the time to smear my whole genital are with the copious amount of fluid I had produced before reinserting my fingers. The sopping wetness was in itself highly erotic. \n\nSoon both my hands were wet, my labia, my clitoris and really my whole genital area were slippery and wet and my vagina kept producing more. I took it as a confirmation from my body of the intensity of the pleasure I was feeling. I thought to myself, \"Yes this is as good as I thought it was. Look how wet I am getting.\" \n\nMy breathing was shallow and quick and I started to quiver and my hips began to relexitively grind against my hands. I was completely unconscious of anything in the world except my body and the orgasm looming. \n\nThe wetness egged me on and as I continued to masturbate I would take my fingers out and rub it over myself. I hadn't masturbated from behind with anything like this intensity before, nor in such a state of lust. So the first time I touched my anus it wasn't intentional. \n\nIt sent a jolt of pleasure that took me completely by surprise. Academically I knew that some people engaged in anal sex but it never occurred to me that pleasure from this source would apply to me.\n\nI quickly slid my fingers back into my vagina and went on fingering myself but the next time I took them out I was immediately drawn to my ass.\n\nI thought I would just brush my fingers against my sphincter as I had done before \u2013 just give myself a little tickle to see if it actually felt good. But it felt great and I found my fingers lingering and probing. \n\nAs my finger probed at my sphincter I was suddenly struck by the thought that putting a finger in my ass would be the ultimate act of letting go and of complete and utter nakedness and exposure. \n\nThe earlier moment that I had taken off my pajamas came back to me. Just that spur of the moment decision to take my pants off gave me a sense of erotic taboo then which came back with redoubled intensity.\n\nI wanted my finger in my ass and I decided to do it. The fingers working my clitoris stopped. My breathing stopped. I gently eased my finger in and every millimeter of penetration was pure pleasure. \n\nOnce my finger was in to the first knuckle I could feel the clamping tightness. \n\nThe physical feelings were intense but were magnified by my sense of outrageous, brazen willingness to do whatever felt good. I felt I had totally let go and utterly surrendered all inhibitions to my sexual desire. \n\nI had never felt anything like it, I couldn't believe the level of sexual gratification it gave me. It was a near orgasmic level of pleasure and I wanted more, more, more.\n\nThen I realised I was feeling this level of intensity when I wasn't even moving. With an uncontrolled jolt I arched my back pushed the finger further into my ass. I began to rub my clitoris in a frenzy and my whole body began to shudder. \n\nI pumped the finger inside me with fast but tiny in and out motions. All I had was half a finger in my ass and although I was moving it quickly the distance it was going in and out was minimal. But I had never felt so much like I was being fucked in my life.\n\nIn seconds I felt an orgasm rise and then overwhelm me in long, slow, intense wave after wave of unashamed pure pleasure.\n\nAfter a minute or two to get my bearings I slipped my finger out and had this abstract sense that I should feel guilty or dirty. Instead I had an unexpected and slightly nervous but also liberating giggle to myself. \n\nI had just discovered a whole new world of pleasure in sex and my mind boggled at the future joys I would experience. \n\nI had often thought with lustful excitement what it would be like to have a penis inside my vagina. I couldn't begin to fathom the ecstasy that being fucked in the ass would bring.\n\nDiscovery 2\n\nOnce I had discovered the pleasure of fingering my ass it became a common part of my masturbation.\n\nI wouldn't necessarily put my finger in my ass every time I masturbated, and sometimes I didn't touch my ass at all, but more often than not I would at least be rubbing my ass crack by the time I came. \n\nI always got a thrill of sexual anticipation when I realised I'd be home alone for the night. If by some fluke my siblings all planned to be out on the same night as my parents I'd be a little short of breath every time I thought about it \u2013 even if it was a week in the future.\n\nAs soon as the last one walked out the door I'd be at the window to watch them get in the car and drive off. No sooner than they were around the corner my hand would be down my pants to get at my usually already wet pussy.\n\nI would still go to my room, usually at a half run with my hand never leaving my crotch. I always wanted to be completely naked and my legs wide open to feel maximum sexual freedom. And I just couldn't bring myself to do that in any room except my own with the door firmly closed.\n\nThen one day events conspired to give me an opportunity to go to the next step in exploring my anal sexuality.\n\nA couple who were friends of my parents were paying a visit and talking about their much anticipated dream holiday to explore Europe for a month. I was sort of half joining in the conversation but not really tuned in until they mentioned that their daughter wouldn't be able to house sit for them because she was now living interstate. \n\nThey were having trouble figuring out what to do about watering the plants and looking after the cat in their absence. We lived about an hours drive away so it wasn't really an option for one of us to go up there every day.\n\nI had plenty of leave owing from work, some old friends living reasonably near to their house and I was behind on the study I was doing part time. Three pretty good excuses for me to volunteer. \n\nThe implications of having all that time alone to explore my ass in freedom meant I had to clamp my legs closed to keep control of myself. Despite feeling short of breath and my heart racing I managed to sound fairly casual when I said, \"I could look after your place for you if you like.\" I rattled off all my excuses and to my utter delight all concerned thought it was a great idea.\n\nI came very quickly in bed that night \u2013 having been wet for most of the day. Then I masturbated every morning and night for about a week in a state of ecstatic anticipation. \n\nEventually (about three very long weeks later) I was in their garage bidding them farewell. I watched them turn the corner, waited for the roller door to close then dashed through a door they had from the garage to the kitchen. \n\nI shut the door behind me and leaned against it. I was in a fairly cosy corner of the kitchen behind a bench and in no time I had my jeans and panties around my ankles. With my bare ass against the cool door I used my right hand to rub my clit and my left to reach up under my top and fondle my breasts. I raced to orgasm in about 60 seconds flat. \n\nOnce I'd come I felt very exposed standing there in someone else's house with my pants around my ankles and my pussy and fingers wet. It felt like such a brazen thing to do and I felt like a deviant but that made me feel cheeky and sexy rather than uncomfortable. But I did quickly composed myself and pull up my pants to get a sense of normality back.\n\nIt was late afternoon when they left so by the time I'd unpacked, fed the cat, rang my parents to say I'd arrived safely and went out to get something for dinner I decided to take a shower and settle in for a private night alone in front of the TV. \n\nWhen I got out of the shower I automatically started getting dressed but as I looked at myself in the mirror standing there with just my panties and a bra on I thought, \"I don't have to wear clothes here.\"\n\nIt was such a liberating idea. \"I can do anything I want in any room of the house,\" I thought. That was a sexy idea but it was thrilling to know that I actually would be doing anything I wanted.\n\nI looked at myself and rubbed my breasts through my bra then put one hand down the front of my panties and fondled my labia and clit. \n\nI decided I wasn't gong to put anything else on for the rest of the night. I was going to stroll about the place in my underwear. It was such a powerfully liberating feeling that my nipples hardened and I felt my stomach muscles tighten as my pussy began to gently pulse.\n\nI had a momentary concern, \"What the fuck am I gong to do if someone knocks on the door?\" But I thought, \"Well it's hardly a crime to walk around in your underwear.\" Still, I grabbed my dressing gown and decided to put in near the front door so it would be handy just in case.\n\nAs I walked out of the bathroom I was so excited that I went straight downstairs and threw the dressing gown on the ground near the front door. Once that was done I felt safe to do whatever I liked. \n\nI took my time as a strolled around feeling freer than I ever had before. I grabbed a magazine and put it in the middle of the kitchen table. Then with my legs straight and slightly apart and my ass pointing out I bent over the table to flip through it.\n\n\nIf felt great with my ass in the air like that. I thought of the view that someone watching me from behind would have and as I kept my left elbow on the table I used my right hand to reach behind and grab my panties and pull them up my butt crack. They were just a plain cotton pair and I didn't give a damn if they got stretched out of shape. The pressure against my asshole felt fantastic and I decided to leave them that way.\n\nI walked to the lounge and with every step the panties jammed in my crack rubbed at my ass and pussy. I felt so wantonly, outrageously sexual and I had an amused thought at the shock the owners would be feeling if they knew what I was doing in their house.\n\nI sat on the couch and took off my bra. My nipples were hard and my tits felt so, so naked and so, so good in the big empty lounge. I felt as naked and exposed as if I were starkers in a supermarket.\n\nI lifted my right leg over the arm rest. I leaned back and shifted my ass close to the edge of the couch. I put my left foot on the coffee table and let my knee drop so my legs were now wide open, this time thinking of what someone in front of me would be seeing.\n\nThat really threw me over the edge. It was one thing to be in just my underwear in this big house all by myself. It was another thing to have my panties jammed up tight in my ass crack, strutting around and feeling sexy. And it was yet another thing to have my tits exposed and nipples hard. But once my legs were spread wide like that I had shifted from sensuality to raw sexuality. Psychologically it was like shifting from playing with myself to fucking myself.\n\nI could feel my vagina and clit tingling even though I wasn't touching them. It felt so good I didn't want to break the spell and I just sat there rubbing my tits and playing with my nipples. \n\nI kept at this for about 10 or 15 minutes \u2013 just enjoying my breasts and nipples \u2013 and eventually I was just quickly flicking the tip of my ring finger of each hand across each nipple. Eventually I rose to a near orgasmic ecstasy \u2013 just from rubbing at my nipples!\n\nThe whole time I didn't touch my vagina or clit but just left my legs spread wide with my panties up my ass crack and tight against my pussy. Despite not touching myself between my legs I felt that having my legs wide open like that gave an enormous focus on my vagina and clit. My hips began to hump minutely, more as a reflex than a conscious decision. \n\nI had always enjoyed touching my breasts and nipples in particular but I had never got so close to orgasm from them alone. I could feel my juices oozing out and wondered at how wet my panties would be when I finally took them off.\n\nI found it so intensely erotic to have my legs open in such a provocatively sexual pose and not hidden away under the sheets in my own room but outrageously exposed in these neither private nor intimate surroundings. It was erotically like masturbating in public but without the practical downside of actually being in public.\n\nEventually the joy from my nipples peaked out and it was time to move on. I knew if I touched my clit I'd come in a flash but I just wanted this to go on and on. I decided I'd just work on my ass as I had with my nipples and leave my vagina and clit alone. \n\nI put both feet on the ground and leant forward thinking to just lift my ass up enough to take of my panties. As I did so I looked at my crotch to see if any wetness from my vagina was showing through. I had a double take when I saw that they were not only wet they were actually glistening where my juices had completely soaked through. I left them on and put my hand between my legs. It came away wet and I suddenly realised the amount of juice that had come out of me. \n\nI decided to go upstairs to take off my panties and finger my ass sitting on a towel to soak up my flowing juices. \n\nOn the way I walked past a mirror in the hall and looked at myself and I thought about fingering my ass in front of a mirror. I'd never done that before, with my ass or vagina, and the idea of watching my finger go in and out of my ass really turned me on. \n\nThere wasn't a mirror in my room (I was using a spare room upstairs next to the master bedroom) but I knew there was a full size one in the main bedroom. I thought it would be another level of cheekiness to actually masturbate my asshole while in their room. And, caught in the moment I decided to do it.\n\nI got a couple of towels from my room and took off my soaking panties while I was there. Now it was time to get serious and I wanted to be totally naked. I was desperate to get down to business and start fingering my ass. I was also fascinated to see what it would look like to watch my finger going in and out of my asshole.\n\nBut when I walked into their room I thought about what people would think if they knew I was about to masturbate not just in the house of our family friends, not just in their own bedroom but that I would be putting my finger into my asshole. \n\nA part of me knew I was doing something wrong and I also knew I wouldn't have done it if I wasn't so worked up and horny. But another, stronger part of me reveled in the outrageous deviance of the act. This strong sense of sexual perversion fed on itself and I wanted to be as wanton and reckless as possible. ",
        "I laid out a towel on the end of the bed closest to the mirror and put the other within easy reach. As I sat down the feel of my naked ass on the towel gave me another rush. I looked at myself in the mirror; my exposed tits; the hair between my legs.\n\nI changed positions a few times and I soon found that by lying on my left side with my body pointing diagonally away from the mirror and my right leg hard up against my ribs and propping myself up on my left elbow I could clearly see my vagina and my puckered asshole. I also had easy access with my right hand to reach around and touch my clit and pussy and ass from behind.\n\nI wanted to focus on my ass as I had on my nipples downstairs but I needed lubricant so I started fingering my pussy to get my fingers wet. I probed at my pussy with my pointer and middle fingers. It was incredible to watch in the mirror as my fingers disappeared into my vagina. \n\nIt seemed so hard core to watch the penetration and I was soon mesmerized and watching in fascination as I began to pump my pussy faster and faster. I knew I'd come soon if I wasn't careful so I took them out and started to probe my asshole with the tip of my now wet and slippery middle finger. \n\nThe combination of all the anticipation and seeing my finger begin to disappear into my ass was too much. I was so in the moment that nothing existed in the world except my finger and my ass. The sensations were intense as I began to finger fuck my ass faster. \n\nNormally finger fucking my ass too fast didn't work because of a lack of lubrication. But this time my middle finger was well lubed and I was pumping it in and out quite quickly. \n\nI was in heaven. Here I was acting out this fantasy that had been building for weeks. Naked, alone and not going to be interrupted, my finger in my ass, lights on and looking at it all happen in the mirror. \n\nI pulled my finger all the way out and quite quickly plunged it all the way back up my ass. Then all the way out again and back in over and over. It just got better and better and my hips involuntarily started to buck toward my finger beckoning it back into my ass.\n\nIt went in and out so easily I squeezed my middle and pointer fingers together and with the next pump I tried to get them both in. That had rarely worked before because my asshole was just too tight to let two in at once in comfort.\n\nBut this time my hole had been softened up enough and while still a very tight fit they both went in easily \u2013 and ecstatically. I didn't take them out this time and pumped away at my asshole.\n\nEventually I was completely overcome by an intense and all powerful lust and let out a simpering moan. At first I was shocked to hear myself but I simultaneously realised that I could make all the noise I wanted here. Unlike at home where I was paranoid even of the noise of my fingers working at my ass and pussy being overheard.\n\nI let myself go and moaned, \"ah ...ah...ah...\" punctuating each new thrust into my ass. Hearing myself like this was fantastic. I wanted to keep pumping at my ass alone but I lost control and my left hand dived at my pussy. I was pumping into my pussy with the middle two fingers of my left hand from the front using the palm of my hand to rub at my clit. \n\nI kept at my ass with the pointer and middle finger of my right hand. My moans became a rapid, \"yes yes yes fuck fuck fuck yes yes yes.\" I looked at my tits jiggling in the mirror and then watched my hands working away between my legs. Then I looked myself in the eye and saw the lust in my face. It was incredible to see and hear that I was verbally egging myself on.\n\nI soon felt the orgasm on the way but it wasn't rising quickly and sharply it was coming at me from deep inside and driving powerfully through my body. It built and built and built and I thought it would never peak out. \n\nBy the time it did I was unable to say \"fuck\" or \"yes\" or anything else coherent. I just moaned a loud shuddering, \"aaaaahaaaaahaaaaahaaaaahaaaaah.\" \n\nOnce the last waves of the orgasm had crashed over and through me I lay there with four fingers still inside me \u2013 two in my ass and two in my pussy. It felt so wonderful and I couldn't image anything better than doing that every day for the next month.\n\nI eventually sat up and wiped my hands on the towel. I needed a bit of time to take stock and I thought I'd turn on their bedroom TV and relax for a while. As I did so I noticed that they had a DVD player and a pile of DVD's neatly stacked in the cabinet underneath. \n\nI suppose I considered the possibility that they might have a porn DVD but it was more just curiosity of what they might have in their collection that made me take a closer look.\n\nAt first it looked like just a load of predictable movies but then I realised that there was another row of DVD's behind the first. The first one I grabbed had a picture of a two women's faces close to a huge cock spurting cum and was obviously hard core porn.\n\nI started to grab a few more from the back and sure enough they were all porn \u2013 over 50 of them. I couldn't believe my luck! I thought, \"You fucking perverted bastards!\" of my parents friends but I meant it in a celebratory, \"You little beauty!\" sort of way.\n\nI had too much choice and was just about to shove in the first one I'd found when I noticed one of a young innocent looking woman with bare breast and sexy blue panties on with a title something like Be Gentle with My Virgin Ass or something like that. \n\nAnal porn! I couldn't believe they'd have something like this and I had it on and playing in moments. I was mesmerized and paralyzed watching the actors fucking and sucking when all of sudden he was fingering her asshole and before I knew it she was moaning away as he fucked her ass \u2013 it was incredibly sexy to watch.\n\nI snapped out of my paralysis and lay on my side on the bed (where I'd been sitting to watch) again with my right hand having access to my ass and my left on my pussy and clit.\n\nIt was magic but this time I wasn't as wet as I had been and I just couldn't finger fuck my ass as fast as I desperately wanted to. I thought that maybe if they had porn they'd have lube so I got up, wiped my hands clean on the towel and started looking in their drawers. I know it was a pretty awful thing to do \u2013 rummaging through their stuff like that \u2013 but at that moment I just wanted to finger fuck my ass and I was desperate for lubricant.\n\nI had no luck for a while and was ready to give up when I pushed a bottom drawer back in that had seemed to be just full of clothes I heard a dull clunk \u2013 something else was in there. This time I pulled it all the way out and at the back I found not just two big bottles of lube but a whole array of about a dozen dildos, vibrators and even (what I have since learned was called) a butt plug.\n\nI was like a kid in a lolly shop. I didn't know what I was going to put in where first but I knew I was going to be fucking myself like crazy very soon.\n\nMost of the dildos were too big for my ass \u2013 in fact about half were going to be a stretch in my vagina! \u2013 but there was this one narrow soft, blue, rubber gel one with a set of balls and it looked like I'd be able to get in my ass. \n\nIt was only a little more than a couple of my fingers wide and I grabbed it with a frenzy of lust. I wanted to have it in my ass but I knew I'd need to be well lubed up to get it in there.\n\nI was almost uncontrollably excited so I calmed myself down and took the thin blue dildo and put it on the towel on the bed. Then I took a medium sized dildo for my vagina (when I say medium it was in the middle range of the dildos in the drawer but fairly big as far as real cocks go), it was very nice and soft and a realistic flesh colour. I put that on the towel next to the blue dildo.\n\nI know it's greedy but with my ass and pussy about to be fucked I didn't want my clit left out. So I grabbed the butt plug. I didn't know it was for an ass at that point \u2013 and it would never have fit anyway \u2013 but it had a cord attached to a dial that I assumed was to make it vibrate. It vibrated alright! I held it in my hand and cranked it up. Even in my hand feeling the strength of the vibration that thing punched made me swoon.\n\nFinally I got a bottle of the lube which had a pump action dispenser on it. With two hands and three toys I had to get organized so I got to lubing up my ass first. \n\nI got into my familiar side on position: on my left side; right leg in the air and knee hard against my ribs; ass and vagina well exposed and easy to get at. \n\nI pumped a big dollop of lube into my hand and smeared it all over my pussy and ass hole. Then I got another load of lube and started working my fingers into my ass. I wanted the inside of my ass lubed but of course every time I lubed up my finger and slid it in most of the lube didn't go inside my ass. \n\nI then had an idea that I could put the end of the pump action top of the lube bottle into my ass and pump the lube in. The end of the squirter was a bit hard edged and I had to pump the big bottle up and down trying to keep the outlet still in my ass. No mean feat with slippery hands when you're horny as hell!\n\nIt was well worth it though. As soon as the first load of lube squirted into my ass I felt the coldness ooze inside me and it felt great. I liked it so much I pumped some more in and then pumped it again. It felt so great that I forgot that I was doing this to get lube into my ass and I was just enjoying the sensation of feeling the cool stuff squirt into me. I don't know exactly how much I put in my ass but it was a fucking lot \u2013 probably at least 20-25 pumps of the bottle. \n\nI eventually got back to the main game and stopped filling up my ass with lube. I knew putting the blue thin gel dildo in my ass would be the crowning glory so I grabbed the other, bigger dildo first (the dildos and butt plug were lying on the bed in front of my belly where I could get at them easily). \n\nI rubbed it on my clit because it was nice and soft and smooth and I wanted to know how it would feel. Fucking great was the answer! When I put the head at the opening of my pussy and gently pushed I discovered that my eyes were a bigger than my vagina \u2013 it didn't look too big but that was just compared to the others. It took a bit of gentle working at it but I eventually got it in and it felt beautiful. \n\nI was so full with that cock inside me I really wouldn't have needed anything more to have a great time. Once I'd pumped away for a bit it started to feel like a perfect fit. I adjusted my position a bit so I could see in the mirror and seeing that thing inside me like that made it look really big. My vagina seemed wide stretched open around it. \n\nI should say that it really wasn't that big but at that early stage of my adulthood it was the biggest thing I'd ever had inside me. Looking at it in the mirror at my face and whole naked body I felt like my vagina was very small and the dildo was its maximum capacity and that made me feel very sexually mature. It was like I had reached a new level of sexual intimacy with myself where I could confidently fuck my vagina to the fullest with this big thing. \n\nIt made me feel very relaxed about my self and my sexuality (at the same time as feeling very fucking horny!) It felt like good, wholesome, natural fun. This made me feel very calm and relaxed about putting the other smaller dildo in my ass. It was going to be an honest expression of my sexual feelings. \n\nI lost the sense of naughtiness I'd had since walking in the door and frigging myself to orgasm in the kitchen earlier that day. Instead I felt like a confident woman with a serious, uninhibited mission to fuck myself like crazy.\n\nI had my left hand holding the dildo in my pussy and took the blue one in my right. I probed around for a bit then gently pushed it against my little ass opening. It didn't want to open and I had to grab the shaft close to the end and push harder bit by bit. Then all of a sudden the pressure was too much and it popped in about an inch. \n\nIt was the biggest thing I'd ever put in my ass (the previous record being two fingers) and at first it was a little uncomfortable. Not just the very full feeing I had had with the dildo in my vagina at first \u2013 this was too big and it didn't feel quite right. But I didn't want to give up so I kept feeding more of it into my ass. It didn't feel any worse as it went further in because all of the tightness was in my ass opening and it was the same width along its length. \n\nOnce it was an inch or two in I held it still and started to pump away at my pussy again. After a about five minutes of smooth, long slow fucking at my vagina my ass had relaxed and the sensation of discomfort had passed completely. I was very pleasantly surprised when I started to ever so slowly push the dildo in my ass further up inside because it was now feeling perfect. In fact as every millimeter went in it seemed to add extra intensity to the pleasure. \n\nIt wasn't so much the feeling up inside my ass but the sensation of something going inwards through my sphincter that was magic. Especially as the length of the thing allowed this to go on and on and on (at least compared to my fingers). My ass at this point was feeling incredibly sensitive and by the time I had it all in (about 6-7 inches) up to the balls I was whimpering in ecstasy. \n\nI started to slowly ease it out but the sensation wasn't the same on the way out. To be honest it was more like taking a shit. It wasn't unpleasant \u2013 just not as heroically sexually exciting as it had been going it. I took it most of the way out quite quickly and slowly started to push it in again. It is impossible to describe in words how good it felt as I began to speed up my ass pumping and combine it with pumping away at my vagina. \n\nI got into a rhythm where I'd go in my vagina and out my ass in sync then back out of my vagina and into my ass faster and faster. I would never, ever have believed it would be possible to pump away at my asshole with that speed and enjoy it. But all that lube in my ass was doing the trick and it was honestly much more sexual pleasure than I had ever known would be possible to feel. \n\nAs the bigger dildo landed all the way home with every pump into my pussy my hand would bang against my clit and this made me start to feel the onset of orgasm. I looked at myself and saw the big dildo going into my pussy and the thinner blue one racing in and out of my ass. At that point I felt incredibly sexually free and wanted to come intensely. \n\nThen I realised I hadn't even put the butt plug on my clit. I clamped my legs together to keep the dildo in my pussy and kept using my right hand to pump away at my ass. I managed to get a grip with my slippery fingers on the dial and crank the butt plug up to full. I wanted to jam it against my clit but to get enough access I needed to open my legs and I was worried that the dildo would fall out of my pussy. So I used my right hand to get hold of both dildos and got up on my knees. \n\nI used my left hand to hold the intensely vibrating butt plug on my clit and pumped like mad with the dildos in my ass and pussy. I was humping up and down and I could see my breasts bouncing in the mirror. \n\nOut loud and looking my self in the eye I said, \"Oh, yes I love those fucking cocks in my cunt and fucking ass!\" It was the pinnacle of the whole day's sense of brazen, wanton sexuality to have these things inside me and the intense vibration on my clit. But saying those words, referring to my vagina as my \"cunt\" and talking about \"cocks\" and words like my \"fucking ass\" brought home the extreme nature of what I was doing. \n\nI threw myself onto my back and with my legs as straight and high and wide open as I could get them I pumped the dildos and held the vibrating butt plug to my clit for an incredibly long and intense orgasm that had me involuntarily shuddering and writhing for what seemed an age.\n\nAs the orgasm eventually eased away I looked over to the TV to see a woman being ass fucked in a frenzy. I rolled to my side to get a look at the two dildos still inside me. I had taken the vibrating butt plug away from my clit when I came and I lifted it to me lips and kissed it and with a big smile looked at my self in the mirror and said, \"This is going to be a very big month of non stop of masturbation, porn, dildos, vibrators and ass fucking mania.\"\n\nAnd it was. If you'd like to hear what else I got up to then and since I'd really love to hear from you. I'd really love to know what you thought of my story and especially if I made you horny or even come. I've had to write this over many attempts as I keep getting too excited and have to stop to get something in my ass and masturbate to orgasm."
    ],
    "authorname": "AnalAnnie19",
    "tags": [
        "anal",
        "dildo",
        "masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/anal-discovery"
}