{
    "title": "Anderson Family Journals #15 to 18",
    "pages": [
        "I do not give permission to re-post or archive my stories. If you want to download my story for personal use, be my guest, but that's as far as my permissions go.\n\nOtherwise, have fun and enjoy.\n\n<p align=\"center\">#15 Timmy</p>\n\n<p align=\"center\">A Kiss with Mom</p>\n\nTimmy's Thoughts\n\nIt's the New Year, but I'm still writing about my life in December. I'm going to keep all but the juicy parts short and sweet. I'm no writer, just a journal keeper, but not for much longer. Maybe, I don't know; it seems like all I do is write about fucking, but Diana likes reading what I write, so maybe she won't let me stop.\n\nNow, on to my life.\n\nSunday\n\nI'm worried about Abbey. I don't think anything is wrong with her, but what does she know about Diana and me? Abbey and I still wrestled, but not like before. She's not so much into getting her frustrations out and learning anymore. It's more like she's trying to... fool... around with me. She'll jump on me when I'm on the couch trying to watch TV. Sometimes I'm just walking through the house, and she gives me a shove--she's got silent feet. Sometimes, she jumps on me when I'm in my room doing my homework. I don't get home from wrestling practice until after seven, so I don't have the time to go through real wrestling drills with her anymore, not until after the State Tournament ends in March. After that, if she wants to roll, we'll roll, but I don't know if she still cares about learning the fundamentals of controlling your opponent.\n\nThe problem isn't that Abbey likes to play wrestle with me; it's the why that concerns me. Outside of straight-up kissing me in front of Abbey, Diana does act like I'm her boyfriend in front of your younger sister, and since Mom already knows about Diana and me, I'm left to wonder what everyone else in the world knows. I don't know who is talking about what anymore. The wrestling moms know about my affair with my sister, that's for sure. For all I know, Diana has told Abbey about us even if Diana hasn't said that she has, and where Diana plans for that information to lead is anyone's guess.\n\nDiana taunts me with how much prettier and sexier, and more beautiful our little sister Abbey is than her. I don't know how you can compare a pair of rainbows to each other, but Diana has made it clear that she thinks Abbey will ripen into one of the few really beautiful women of the world--no makeup needed.\n\nI don't think Diana was a nympho, but I do think my sister loves to experiment, and that makes me nervous. I don't think Diana realizes that we could get into a lot of trouble for this, and fucking with Abbey's sexuality is not something that I think we should be doing. I know, we're triplets, but she's still my little sister.\n\nFuck--life is tough.\n\nI'm not going to bring up any of this incest stuff to Abbey. Maybe that's what Diana wants me to do, and then what? Then I'm the one who has to explain to Abbey why her older brother is fucking her older sister and our mother?\n\nSpeaking of Mom, she's the reason for this entry, so let me go a few more days into the past and let you--my journal--in on a brand new part of my life.\n\nMom's Kiss\n\nWe--my mother and I--didn't speak much following the Sunday pool party, where I'm pretty sure I promised about half of my team's mothers I'd help them get their sons into bed. Mom couldn't drive home from that party, so I did, and Diana helped me put Mom to bed, and then we had our fun, where Diana permitted me to sleep with as many of the mothers as I had too, for a price: She gets to sleep with Lana and later, she gets to have my ass.\n\nFuck--I don't know if I can go through with that.\n\nMonday came, and Mom went to work, stayed out late, and came home. She curled up on the couch with Abbey and watched TV, not ignoring me but not paying me any special attention either.\n\nTuesday came around; I was in Diana's room, inside my older sister's pussy from behind. She lay on her tummy in the prone position while I pressed my hips into her ass, grinding my cock between her slick folds as her warmth dampened my crotch. (God, she gets so fucking hot when I'm between her legs.) We had already had sex a few times. Now we were just having fun before going to bed together. I can't remember the last time I slept alone for the night.\n\nAt eleven--I knew it was eleven because Diana asked me what time it was--my sister told me to go downstairs and get her some water. I dressed in my workout shorts and a shirt and went downstairs. As I walked into the kitchen, I saw my mom sitting at the breakfast table, drinking a cup of tea. She was wearing a pearl satin robe that exposed her cleavage, and her two thick nipples formed a pair of small headlights against the robe's fabric. She stood when I entered the kitchen, her belt cinched at her waist, but the loose half knot she had tied her robe in didn't do much to keep the lower portion of her robe together.\n\n\"Not tired?\" Mom asked, but she didn't sound surprised to see me in the kitchen so late in the night.\n\n\"Just getting water,\" I said.\n\n\"For your sister?\"\n\nI nodded.\n\nMom walked to the fridge, her long leg slipping out of her robe and exposing her thighs as she turned away from me. The robe's thin satin clung to her weight-trained backside, her twin cheeks outlined beneath her robe like a polished apple.\n\n\"Here,\" Mom said. She brought Diana's water to me. I tried to take it from her hand, but she didn't let go of the bottle after my fingers closed over the plastic above her fingers. \"Did you have fun on Sunday?\"\n\n\"Yeah,\" I said. \"But not as much fun as you and the other moms had, I think.\"\n\nMom rolled her head to the right, smiling as she did. \"We did get a little carried away in front of our boys, didn't we?\"\n\n\"More than a little,\" I said. \"But, it was fun.\"\n\n\"And before the other moms showed up, did you have fun then?\" Mom spoke in an almost whisper, but her voice seemed to fill the kitchen. She moved her forefinger up the bottle, brushing my thumb.\n\n\"Yeah,\" I said. \"Lots.\" Goosebumps crawled up my back.\n\n\"And you're okay with it?\" Mom took a shaky breath. Her cheeks flushed. When she spoke again, her voice trembled. \"You're okay with helping Prisha get what she wants from her son?\"\n\nI swallowed. My heart tripped, recovered, and skipped into a double-quick beat to make up for the beat I had lost.\n\n\"Yes,\" I said.\n\n\"What about the others?\" Mom asked. \"You're willing to help all of the other mothers as well... with their sons?\"\n\n\"Yes,\" I whispered, my chest tightening.\n\n\"And me?\" my mother said so softly I had to read her lips to make out her words. She brushed my thumb again. \"You're willing to help me get what I want as well?\" As she spoke, a pink blush toasted her light cheeks. A new sparkle ignited within her green eyes, matching the coy smile forming on her lips.\n\n\"Yes, Mom,\" I said. \"I am.\"\n\nMom let go of the bottle in our hands. \"You better go back upstairs. Your sister is waiting for you.\"\n\nI nodded and started to turn around.\n\n\"Timmy,\" Mom said before I had barely begun moving. \"Aren't you going to give Mommy a goodnight kiss?\"\n\nHoly fuck.\n\nI turned back to my mother, moving closer to her as I raised my hands to her waist. The water bottle wouldn't let me grip her left hip, but my left hand fell onto the yielding firmness of the hard body beneath her robe. Mom trembled as my lips moved toward her. I wasn't thinking, just acting on instinct. Mom tilted her head upward, even lifting herself onto her toes, bringing herself closer to me. Our lips met. Her lips were warm and soft and full, the taste of her flavored by the mint tea she had been drinking.\n\n\"Mmm,\" Mom sighed in an almost thankful way. The energy flowing through her veins surged into me. She wrapped her arms around my neck and dug her fingers into my hair, caressing the back of my head with an eagerness that surprised me.\n\n\"Mmm, hmm, mmm,\" Mom continued to hum.\n\nI parted my lips further, sliding my tongue forward. Mom pulled herself to me, her big breasts pushing into my chest, her nipples digging through her satin robe and my thin shirt. I wrapped my arms around her back, settling my fingers above the downward slope of her ass. Our lips moved together wetly, creating a piece of soft, liquid music my cock thickened beneath. (Mom was the first woman I had ever jerked off to, and now this... it was a teen's dream come true.) Our kiss ended when I circled the tip of my hard prick against my mother's stomach.\n\n\"We need to stop,\" Mom whispered in a rushed voice. \"Abbey's home.\" She lowered her mouth, resting her forehead against my chest. \"But we can talk about this tomorrow when we have some privacy.\"\n\n\"Tomorrow?\" I asked.\n\n\"Your sister is waiting for you.\"\n\nFuck.\n\n\"Tomorrow then.\" I slid my hands back to Mom's sides, and I squeezed her right hip with my left hand. \"As soon as I get home from practice?\"\n\n\"Whatever you want,\" Mom said.\n\nI broke away from my mother and went upstairs. Diana thanked me for the water and kissed me on the lips, pausing to say, \"Mmm, minty.\" She eyed my hard-on, laughed to herself, then scrambled naked into bed with an unexpected giddiness.\n\nI undressed before joining my sister in bed. She didn't bother opening her water. She did what she usually does when we sleep together: She turned on left her side and draped her right arm and leg over my body. I curled my right arm under her neck and around her back, and she went to sleep. I stayed awake, my hard-on tenting the sheets.\n\nI lay there, trying to will the aching beast that was my cock to softness. At some point during the night, as Diana's soft puffs of breath fell over my chest, my cock began to deflate, wilting, swaying, and crumping to the side in an all-to-slow collapse that gave me time to think about my mother's lips once again. No good. My cock stiffened, becoming a giant ache beneath my shorts.\n\nI brought my left hand across my body and palmed the outside swell of my sister's tit. Diana's warm flesh filled my palm, firm and perky in the ways only an eighteen-year-old girl's could be. I squeezed her breast and turned to my right, gently rolling her over.\n\n\"Hmm,\" was the quiet noise that sounded in my sister's throat.\n\nI rested my sister on her back. Diana's warmth brought a red flush to my skin. How did she get so fucking warm? I ran my left hand down her body and over her stomach, tracing her belly button. She uttered a soft sound but didn't wake. I went lower, over the smoothness of her mound, my pinky and thumb brushing her firm thighs. I hooked a foot over her left shin and pulled her leg toward me, spreading my sister open.\n\n\"Hmm,\" my sister sleep-muttered again.\n\nI slid my hand down her mound and palmed her hairless pussy meat.\n\nDiana took a deep breath. Faint moonlight slid through the cracks in her blinds, but I could only make out the bluish-black shadows making up the contours of her face.\n\nI slid my middle finger between her outer folds and laid my digit across the seam of her inner lips. My sister huffed in her sleep, her breathing turning thick and heavy. The rough sound of her nostrils puffing out air as I curled my finger through her slit spurred my heartbeat to a harder pace.\n\nI played with my sister's pussy gently. Diana uttered soft whimpers as she wiggled her body enough to spread her legs further apart for my fingers. The shallow opening of her twat-hole became as slick as pink butter and just as smooth. Sighing, I slid the tip of my middle finger into her pink hole.\n\n\"Uh-umm,\" Diana moaned. She tossed her head in her sleep. Was she fighting to wake up? Was she dreaming about some man's hands on her body, in her body, not taking no for an answer? Pre-cum slid from the tip of my cock onto her hip. She moaned again.\n\nI caressed her pussyhole, gathering her juices, then I removed my finger to a sigh of protest. I grasped my dick, wiping her wetness over my shaft. When my pole was slick, I cupped her pussy again, sliding my three biggest fingers through her crease one at a time before jerking my shaft again and lubing my prick with more of her warm honey.\n\nI slid over my sister, careful not to wake her from her sleep. I positioned myself on my elbows with my forearms under her shoulders and my hips between her open legs. My cock dangled hard between us, rubbing the insides of her thighs and giving her pussy lips butterfly kisses as I searched for her juicy hole. She had to be aware of what I was doing on some level, right? I didn't know. My sister has never told me if she was, but she has never told me not to fuck her in her sleep again, either.\n\nDiana uttered a soft, confused moan when I pressed the spongy tip of my prick to the smooth curve of her muff and pushed inward. My slippery knob sank into her, pushing through Diana's tightness and spreading her walls open.\n\n\"Uhhhhh,\" Diana moaned.\n\nMy shaft continued spreading her dewy walls as her lips stretched over my thick shaft.\n\n\"Mmm,\" Diana whined.\n\nI pumped my hips forward, pushing her pussy lips inward as I loosened her cunny with my shaft.\n\n\"Huh, mmm, huh,\" Diana uttered in several breathless sighs. I think she was trying to wake up now. I think she knew her dreams were no longer dreams.\n\nI pulled out and pushed back in... harder this time.\n\n\"Uh,\" Diana groaned. \"What? Timmy, no.\" Her last two words came out as a whisper, but she didn't say her chosen safe word--RED--which would have made me stop without question.\n\nI pushed deeper into my sister's pussy. She moaned again and brought her knees up around my sides. Her breathing deepened. Her breasts rose and fell against my chest, and her body--her entire fucking body--bloomed with heat beneath our blankets, turning my skin crimson.\n\n\"Timmy, fuck,\" Diana moaned.\n\nSlick wetness coated my shaft as I pushed in and out of my sister's slippery snatch. She grunted when my balls touched her ass, and she wrapped her arms around my shoulders and locked her ankles around the backs of my thighs. I pumped my sister's pussy faster, drawing out her cream in a series of slish-slosh sounds as her pussy turned into soft butter around my cock.\n\n\"Uh, uh, uh, uh,\" Diana moaned. She turned her head, finding my lips, and she kissed me, her tongue snaking into my mouth, licking me up and down.\n\n\"Mmm, hmm, uh, uh, mmm,\" we both moaned and groaned together. I sped up, rocking my sister's bed, as she whimpered into my mouth. I slid my right hand down her body and hooked it behind her knee, lifting her leg up and back and over my shoulder, tightening her little pussy on my cock.\n\n\"Fuck,\" Diana grunted as I slid deeper into her than before. \"You're extra fucking hard--ooh--tonight, little brother.\"\n\nI spread my knees for balance and pumped my sister's pussy with firm strokes, sliding into her as her inner pink kissed and licked the tip of my cock with every inward thrust. I pushed all the way into her wet muff, ground my hips against her crotch, turning the base of my cock around her pussy lips as I bumped her insides with my rigid pole.\n\n\"Timmy,\" Diana whimpered. \"Fuck, Timmy, fuck me, baby. Fuck me, little brother.\"\n\nMinutes passed before the tingling in my balls began. Cream dripped from Diana's pussy, her juices running thick and messy down the crack of her ass. I hooked her right leg over my left arm and bent her double, fucking my cock into her with deep strokes, hitting bottom every time. My sister purred like a kitten. I rose onto my knees, moving my ass up and dropping my dick into her from a vertical angle, feeding my sister's cunny every inch of my fuck-stick on every inward stroke.\n\nDiana started to pant. Then she began to whimper. Then her pussy walls hugged my cock, and she came, crying out as she swung her head from side to side. I found her mouth in the darkness, pressed my lips to hers, and swallowed the sounds of her orgasm as her body shook beneath me. As her pussy muscles spasmed around my cock, I thumped her wet hole as hard as I could three fucking times, making her whimper each time. On the final thrust, I came hard, jizzing up her snatch with one long surge of come.\n\nDiana panted beneath me as I filled her pussy with a big load of sticky cum.\n\nAfter the last of my seed slithered out of my cock, I collapsed to the side. I slid my hand under my sister's head, clenched her hair, and forced her down my body. She didn't fight me, doing my bidding as though I were the person in charge of us. I didn't let her back up until after she had cleaned my cock and then some. We fell asleep soon after.\n\nThursday's Plans\n\nAbbey made her own way to school on Thursday. Diana and I parked in the back of the parking lot, where I gave my sister her morning kiss before class. But before getting out of the car, she had something to tell me.\n\n\"I can't pick you up from practice tonight,\" she said.\n\n\"I don't mind jogging home,\" I said.\n\nDiana laughed. \"Only a wrestler wouldn't mind running three miles after his practice.\"\n\n\"Jogging,\" I said, then asked, \"Where are you going to be?\"\n\n\"At Lana's, with Abbey.\" My sister smiled at me. \"Mom's going to pick you up, so don't run away, understand?\"\n\nI nodded, thinking of what this could mean.\n\n\"Do you understand?\"\n\n\"I do,\" I said after a moment.\n\n\"Remember: You belong to me.\" My sister reached over and grabbed my hand. \"Only I get to tell you what to do.\" She squeezed my hand. \"No one else. Not even Mom.\"\n\n\"I know.\"\n\n\"You better.\"\n\nLater, at the end of lunch, my sister and I were in the drama theater, in our private fuck-room, as Lana calls it. Diana had dressed as a sexy schoolgirl, complete with a too-short pleated skirt, thigh stockings, and a gray sweater over a buttoned-up dress shirt. I had her bent over the makeup counter with her skirt on her ass, and her sexy panties pulled over the left side of her firm ass, exposing her pretty, pink slit to me. Lana kept watch for us, but she was doing it from inside the room, cracking the door open and peeking out into the hallway... some of the time.\n\nI pumped my sister's pretty pussy for the last ten minutes of lunch, turning her silky folds into a runny mess of cream and cum. I didn't fuck her hard or fast, just firm and deep, giving her an intimate cunny massage that closed her eyes and pushed moans through her body. She didn't bother cleaning up our cum after I pulled out and cleaned myself up. Instead, she sat on the makeup counter with her panties to the side, and her pink muff glazed as we talked.\n\n\"Have fun tonight with Mom,\" Diana said. \"I'll pick you up in the morning.\"\n\n\"I will,\" I said, and then I had to ask, \"What are you going to do with Abbey at Lana's?\"\n\nLana laughed.\n\n\"Lana's cousin kind of knows Abbey.\" Diana smiled at me. It was a warm smile. \"They run in the same circles, I guess. Don't worry. We're not going to do anything crazy tonight. I love you, now get lost.\"\n\nAs I walked away, Lana walked toward my sister....\n\nTimmy out.\n\n<p align=\"center\">#16 Timmy</p>\n\n<p align=\"center\">Fucking My Mother</p>\n\nWhere I Left Off\n\nDiana had just told me that she was going to spend the night at Lana's and that she was taking Abbey with her, leaving me alone with Mom, who was picking me up after my wrestling practice. Why? To make sure I wouldn't run in the opposite direction? That made me laugh. I knew that wasn't the reason. Not after our kitchen kiss. So why? Was my mother eager to get me home after a hot and sweaty wrestling practice? Maybe. But I think she had decided to pick me up after practice to show the other moms that the game was on.\n\nBefore practice started, Diana sent me a text: Take charge of Mom tonight. The first time I read that, I thought it said care....",
        "Thursday Night, After Practice\n\nWrestling practice didn't fly by for me. We have a big wrestling room, but there is no place to sit. Nobody sits in our wrestling room. No one watches either, not without permission from our head coach. We close the doors, turn up the heat, and we get to work. There's no clock either. Only our coaches know the time; the rest of us just put in the work until our coaches told us to stop.\n\nThe worst part about practice is cleaning the mats afterward. I knew many of the moms and a few of the dads were waiting for us after practice. I've wondered if the fathers had ever suspected what kind of wives they had--and knowing that our moms were outside the room, talking about who knows what--made every sweep, mop, spray, and dry mop feel like it took twice as long as it actually did.\n\nWe left the wrestling room with our coaches reminding us to clean our shoes and file our nails. Anyone who didn't pass the before-practice inspection had to do two minutes' worth of high-intensity up-downs for memory reinforcement. The coaches said our reinforcement drills would only last two minutes--that was a mind-fuck--because our reinforcement drills lasted until the coaches decided we'd no longer forget their instructions again. \"One more minute\" was code for \"We're not even close to done.\"\n\nAnyway, when practice ended, our mothers were waiting for us--the eighteen-year-olds--under the night sky. There were about ten of them this time, others waited in the parking lot, but there were always mothers that you could count on to wait right outside the door. Their eyes bore into us. Some of the mothers held their hands up near their mouths, a finger to their lips, while others smiled at their sons as their eyes passed over everyone, taking in all the hard bodies they could.\n\nThe chill their hungry eyes gave me was a good one.\n\nI walked to Mom, who was wearing a winter dress--a light brown sweater dress that dropped to her upper thighs and hung loosely about her body, but not so loose it didn't outline her breasts or thighs when she moved just right. It was a long-sleeved sweater dress paired with white tennis shoes, and her toned, tanned legs were uncovered for all to see. A dress like that, so easily lifted to find the naked body beneath--if Diana had been wearing it--never failed to warm my blood or swell my shaft.\n\nPrisha and several of the other moms stood near my mother. Others stood off to the sides, forming a half-crescent around their sons as we walked toward them. Every one of them smiled at me in a sober version of theyou know what I expect from you smile they had given me during our last team-building pool party.\n\n\"Timmy,\" Mom said. \"Prisha's husband will be away for the weekend. I volunteered you to help Justin move some furniture after your meet on Saturday.\"\n\n\"You don't mind helping me, do you, Timmy?\" Prisha asked.\n\nHer son, Justin, looked at his mom, then at me, then shrugged.\n\nBefore I could answer, ten sets of eyes focused on me. I felt like a baby turtle freshly hatched, and every fucking hawk in the sky had just turned their hungry eyes in my direction. I almost took a step backward.\n\nMrs. Nguyen, who was standing to Mom's right, said, \"I could use some help with something on Sunday, Timmy.\"\n\nThe other moms narrowed their eyes, casting evil glares at Mrs. Nguyen.\n\n\"With what?\" Kevin, Mrs. Nguyen's son, asked.\n\n\"I'll tell you later,\" Mrs. Nguyen said to him.\n\n\"Yeah, no problem.\" I forced a smile to my lips, trying to act like the stud I had become. \"I don't mind helping anyone who needs help. It will be my pleasure.\"\n\nSome of my teammates laughed, but I think they knew, in their way, that our jokes about our mothers were about to become real.\n\nMom and I said our goodbyes; then we went home.\n\nDrive Home\n\nWe drove in near silence. It was only a three-mile drive, and I powered the window down to help with my wrestling scent, as Diana had called my musk one day after picking me up from practice. Mom asked me if I was hungry, speaking in a quiet voice. I thought I heard a soft tremor in her words.\n\nTake charge of Mom. Only I wasn't remembering the text Diana had sent me; I was hearing my sister's voice between my ears.\n\n\"I'm going to take a shower when we get home,\" I said. I looked at Mom. Her dress lay crumpled in her lap so high it looked as though she had forgotten to wear pants tonight. Take charge of her. \"In your room. You can join me if you want to.\"\n\nMom sucked in a breath, her upper body rolling as if the coolest breeze in the world had slid up her skirt and around her muff. She swallowed, her throat moving, and her eyes widened a bit, though she said nothing in response to my offer.\n\n\"I'll leave the door open for you,\" I said as my heartbeat thumped beneath my chest, growing harder when I reached across the center console and placed my left hand on the middle of Mom's thigh. My long fingers curled down the inside of her leg, near the hottest part of her body.\n\n\"I think I'll have some wine when we get home,\" she said with a breathless, suddenly anxious rush of words.\n\nMom's legs parted. Her heat filled my palm. Her chest rose and fell with sharper, quicker breaths as the world outside my window whipped across my vision in a blur of colors. I moved my hand toward her knee, then back up, pulling her thigh closer to me, angling her knee far to her right--it didn't hinder her driving.\n\n\"Bring the wine up to your room,\" I said. I stopped my hand when my pinky finger touched the softer meat of her inner thigh, a few inches away from the source of the heat radiating outward from between her legs. \"Wait for me.\" My cock hardened, the shaft swelling with a thick, rubbery inflation.\n\nMom took a deep, shaky breath, then said, \"Okay.\"\n\nI squeezed her leg again. My pinky finger strayed further up her thigh for the last mile home, a little at a time. Her skin grew softer and damper the further up I went. Less than half a mile from home, the scent of Mom's floral lust filled the car, hitting my nostrils with an intoxicating perfume. I moved my pinky finger higher, dipping into the hollow where her inner thigh curved into her fat outer labia. Mom sucked in her breath. Her skin was so fucking hot as I rubbed the soft edge of her tiny panties.\n\nMom hit the gas, and I jerked forward, my hand leaving her leg. We pulled into our driveway a minute later, maybe less. I exited the car before Mom killed the ignition.\n\nFucking My Mother\n\nHot water ran down my skin. I closed my eyes as streams of liquid outlined my body, rinsing the dried sweat from my body. My cock hung against my sack like an elephant's trunk, waiting for the slightest sign to go hard.\n\nI tried not to think while the jets of water sprayed me down. Goosebumps beaded my flesh despite the heat clouding the air around me. Would my mother be waiting for me... naked? Would she offer me wine? Would I drink it? How did she want me to fuck her? Fuck her or make love to her? I was in love with Diana, but I loved my mother--what would happen afterward? Was it possible to be in love with two women or even three?\n\nI'm in over my head. The thought ran through my head several times before I turned the water off and stepped out of the glass-walled shower. I dried myself off in my mother's white and black marble bathroom with its long his-and-her sink and wall-length mirror.\n\nAfter drying myself, I used the mirror to check myself out. I had a great body, firm, tight, muscular, broad shoulders, light brown hair, and blue eyes, eyes like Diana's... like Abbey's. The same blue eyes as the father we barely knew. I looked like him too. Did Mom see him in me?\n\nI looked at the restroom door, which I had left cracked open. Not very inviting of me. I had tied the towel around my waist, but I undid the tucked-in corner of the towel and let it drop to the floor, leaving me standing completely naked with half a hard-on.\n\n\"I'm about to fuck my mother,\" I said, shaking my head. My mother, the woman I had compared all others to in my life. Mom --a giant among women. No, a titan--no, a goddess. Still, knowing that I was about to slip my cock into the pussy that birthed me felt so... normal.\n\nThanks, Diana.\n\nMy dick responded, the body thickening and rising, lifting its head like a snake sensing prey. Take charge of Mom tonight. I could do that. I took charge of Diana once in a while, but if she were telling me to take charge of our mother, then I would. I turned the door, opened it, and walked into my mother's bedroom with a full erection that swung from side to side in front of me.\n\nMom stood at the side of her bed, facing me. On the nightstand next to her sat a bottle of wine. She held a big glass with a deep bowl and a big stem in her raised right hand. She still wore her sweater dress and tennis shoes, but a pair of little satin panties lay on the nightstand next to her wine bottle. Mom's eyes widened when she saw my cock in all of its hard, erect glory.\n\nThat's right, Mom, I thought.\n\n\"It's all for you,\" I said, not having any idea what the fuck I was talking about or why I had said those words instead of thinking them, but at least Mom didn't laugh. No, she licked her lips before downing half of the wine in her glass. \"You wanted it, right?\"\n\nMom nodded her head, breathing heavy, her breasts rising and falling beneath her sweater dress. My heart pounded within my chest; the beat loud in my ears.\n\n\"Turn around,\" I said.\n\nMom put her wine glass down and turned around. As I walked toward her, her body seemed to grow smaller, and she no longer appeared larger than life to me when I finally stood behind her, my size dwarfing her... my cock so big as it hung above her round ass.\n\nI put my hands on my mother's shoulders and rolled my fingers and thumbs over her muscles. Mom shuddered, releasing a shaky breath, and I kissed the back of her head through her blonde hair. She made a soft sound as I lowered my hands down her arms to her elbows, then pulled my hands back so I could put my hands on her sides. The soft wool of her dress let me press my fingers into her body. I felt her ribs, the smallness of her in my hands, and I pushed forward, resting my palms underneath her big tits.\n\n\"This is what you want, Mom,\" I said. \"This is what you want your son to do.\"\n\n\"Yes,\" Mom said, answering me even though I had framed my words as statements.\n\nI raised my hands and cupped her large, heavy breasts. Mom moaned as I squeezed her big tits, filling my palms with the soft-firmness of her large mounds, my fingers grasping soft tit meat. Her nipples pushed against her sweater, digging into my palms and giving me chills. I pressed my body to hers, the tip of my cock hitting her lower back and angling down between her cheeks, nestling in the softness of her wool-covered butt crack.\n\n\"I love your tits, Mom,\" I whispered as I massaged them.\n\n\"You used to suck them when you were little,\" Mom said, panting.\n\nThose words caused a pulse to shoot through my shaft, thickening my erection with its energy from root to tip. I ground my cock into my mother's butt, saying, \"Tonight, I'm going to suck them again.\"\n\n\"Oh god,\" Mom whispered.\n\nI lowered my hands down her front, over her firm stomach, and around her hips, stopping at her sides. I pushed my hands lower. My fingers pointed down as I bent my knees and reached under the hem of my mother's dress. My palms touched her bare thighs, and I lifted my hands upward. The hem caught on my wrist, bunching up as I slid the wool up her body, baring the hard curves she worked so hard to maintain. She was naked beneath her dress, all the way to her bouncy tits, which filled my palms all over again, this time with flesh to flesh contact.\n\n\"Timmy,\" Mom said, panting as I pushed my cock between the two naked swells of her firm, tender backside.\n\nI squeezed her tits, running my fingers over her thick, rosy nipples, tugging and pulling them and making my mother whimper. I lowered my head to her right shoulder and kissed her neck. She shivered. I turned my head to the right, catching our reflection in the full-length mirror hanging on the back of the bedroom's closed door.\n\nMy body stood straight up and down, but Mom's had the sexy S curve, with a dip in her lower back, her round ass jutting against my cock, and her breasts sitting in my hands, their bottoms round and full. I laid my head against her shoulder and watched us for a moment.\n\nI whispered, \"I love you,\" without thinking.\n\nMom whispered, \"Thank you, Timmy... I love you too.\"\n\nI let go of her tits, lowering my body and kneeling behind her. I planted soft kisses along her spine as her dress rode my head down her body. I held my mother by her hips, holding tight but not hard, letting her measure the strength of my grip, making her understand that she couldn't get away from me even if she suddenly changed her mind about taking me between her legs.\n\nBut I wasn't worried about my mother changing her mind. The scent drifting upward from her muff was the scent of a MILF in need of a young, teenage cock that could fuck her cunt all night long and then some. Thanks to her eldest daughter, my mother was in luck because Diana had trained me to give a woman everything she could want and more.\n\nWhen my lips reached the crack of my mother's ass, I wrapped my arms around her waist, with my right hand covering her hairless mound. I moaned against the divide between my mother's cheeks. A piece of me wanted to feel her pubic hairs against my palm. I made a note to myself to tell my mother to grow her curly hairs out and trim them for me into a beautiful, motherly triangle of downy fur that I could rest my cheek against.\n\n\"Mmm,\" Mom sigh-whimpered as I licked my tongue through her crack. I paused to kiss each of her cheeks. I took her ass meat between my teeth, giving the hefty hams several love bites that left her shaking. Mom had a thicker ass than Diana, firm and taut, but matured instead of hard, where the meat clings to the muscle beneath as gravity tries to create a delicate sag in her weight.\n\n\"So fucking hot.\" The words left my mouth as I rested my nose, lips, and chin in my mother's butt crack. I stuck my tongue out, finding her asshole on the first try.\n\n\"God!\" Mom gasped. Her body swayed above me, so I hugged her tighter, turning my face in a circle against her butt crack, all the while stroking her rear door with my tongue and leaving slobbery trails of spit against her puckered rear hole.\n\n\"Has Dad ever fucked you here?\" I asked before pressing the tip of my tongue against her tiny crinkle.\n\n\"No,\" Mom said, her voice high pitched. \"God, no.\"\n\n\"I'm going to,\" I said. \"Tonight.\"\n\n\"Jesus,\" Mom said, panting. \"Has Diana let you--mmm!\"\n\nThe thick wetness of my saliva coating her anal rim helped me push my tongue into her little, naughty chute. I licked her hard, tasting the strong flavor of sex between her cheeks. My mother was as clean as a porn star on set--had Diana warned her? I wiggled my tongue inside of her for nearly a minute as she purred from the ass eating I gave her.\n\n\"Never,\" I said after I pulled out my tongue. \"Diana hasn't let me in her butt... yet.\" I licked the length of my mother's crack one more time. \"She's going to, though, someday soon, I think.\"\n\nI pushed on Mom's back with gentle pressure. She bent over the bed, balancing herself on her hands. The thick folds of her pink muff stared up at me; meaty, crescent-shaped, fat and juicy, and everything a mother's cunny should be to her son. Her outer lips protected her inner lips, the soft crescents small and delicate, just like her daughter's. I thought of Abbey then. Shaking my head, I grabbed my mother's wine glass from the bedside table and took a small drink, swishing the liquor around my mouth before swallowing it. Then, I ate my mother's pussy.\n\n\"Oh, umm, uh,\" Mom moaned. \"Nuh-uh, uh.\"\n\nI licked the length of her inverted slit as she bent over, from the thick nub of her clit to her perineum. I licked up through her soft folds like a dog, lapping at her cunny juices. Mom's pussy spread open for me, and the honey dripping from her cunny filled my mouth.\n\n\"Mmm,\" I moaned, breathing heavily through my mouth. I lifted my fingers, the middle and fore pressed together, and I pushed the tips against Mom's twat right where her slippery hole lay waiting for me.\n\n\"Uh,\" Mom moaned as I eased my fingers into her muff. \"Fuck, Timmy!\"\n\nI entered her tight hole slowly; the softness of her inner pinkness surrounded my digits in a blanket of warmth and tenderness. As my digits slid into my mother's snatch, I watched in awe as her juices dripped around my side-by-side fingers. I remember thinking, God, she smells so good between her thighs. When I reached the last knuckles, Mom uttered a low growl. I curled and straightened my fingers several times, petting the underside of my mom's mound from within.\n\n\"Ooh,\" Mom moaned, trembling. \"Oh, yeah--yeah!\"\n\nI pressed my thumb to her clit, saying, \"Let go, Mom. Say what you need to say while finger-fuck you.\"\n\n\"Fuck, Timmy,\" Mom gasped. \"You're sister... has been--uh--teaching you well. Mmm, fuck, oh, my baby boy.\"\n\nMy cock pulsed. A widening ring of pleasure shot through my shaft, from my base to my tip. A thick wad of pre-cum left my crown, falling onto my mother's hardwood floor. I moaned, then I stood, looking down on my mother's bent-over body. She was still wearing her sweater dress and white tennis shoes, her thick laces tied in big loops that almost reached the floor.\n\n\"Do you want my dick, Mom?\" I asked, emphasizing her title. I grabbed my cock below the glans and rubbed my knob through her lips, her wet heat soaking my spongy tip. I slapped her pussy from underneath several times, raising my cock hard against her bare cunny, making her gasp. \"Do you, Mom? Do you want this dick?\"\n\n\"Yes,\" Mom whimpered. \"I want your dick.\"\n\n\"Whose dick?\"\n\nMom took a deep breath before she whimpered out, \"My son's dick.\" She moaned. \"I've wanted my son's dick for so long.\"\n\nI fit my knob to her glistening seam, her narrow slit looking too small for my thick head, and I pushed my crown into her little slot hard.\n\n\"Ungh,\" Mom grunted as her hole stretched around my tip.\n\nI paused, holding my mother's hips with a firm grip. I didn't push in or pull out as I circled my hips. My knob stayed inside of her, rubbing the walls of her opening and absorbing her cunny's heat.\n\n\"So fucking tight, Mom,\" I whispered.\n\n\"Yeah?\" Mom moaned, excited.\n\n\"Like a teenager,\" I said. \"Like a teen's little pussy.\"\n\n\"Ooh,\" Mom whispered. \"Naughty boy.\"\n\nI looked down at my dick, opened my lips, and let a wad of spit fall from my lips. Bullseye! I hit the middle of my shaft. I rubbed the spit over my pole, using my right hand as I squeezed my mother's hip with my left. When I had lubed up my cock enough, I grabbed onto my mother's hips again, steadied her, and began slow in-and-out fuck motions, feeding Mom's hungry muff my cock a little at a time.\n\n\"Ooh, ah, ooh, oh,\" Mom moaned as her pink lips stretched thin around my shaft. When the warmth of her pussy hugged half of my rod, Mom let out a little grunt and lifted her right knee onto the bed, crawling away from my dick like a scared little kitten.\n\n\"No, no, no,\" I moaned. \"Where are you taking this pussy?\"\n\n\"Nowhere, baby,\" Mom said, sighing and hanging her head. \"It's your pussy, Timmy.\" Mom whimpered. \"It's my son's pussy.\"\n\nShe tried to crawl forward again as another inch entered her. So damn fucking tight. I followed my mother, keeping our bodies connected with my dick. Her left knee went onto the bed, and she crawled to the center, facing her headboard, waiting on her hands and knees for me to continue fucking her like a dog.",
        "\"Ready for the rest of my dick?\" I asked. God, it was so hard to keep myself from pumping my mother's pussy full of cock without mercy.\n\nMom shook her head, panting out a laugh. \"It's been a long time for me, baby.\" She moaned. \"And never with a cock like yours.\"\n\n\"What about Dad's?\" I asked without thinking.\n\n\"Big,\" Mom whispered, \"but still a head shorter than yours.\"\n\nI moaned as I said, \"Well, you're gonna get it, Mom. You're gonna get it soon.\"\n\nTreating my mother like this, as my sex toy, was building up my orgasm faster than I could fuck. I rolled my hips backward then humped them forward, giving Mom three-quarters of my dick. Her moans filled the room, soft at first, then loud, then fast. As I pumped her little pussy, she clawed at the comforter beneath her fingers.\n\nI moaned as her tiny twat sucked on my cock like a mouth. Her insides licked my knob like a tongue, and after a few minutes of poking my mother's pretty pussy with smooth strokes, I hammered the last quarter of my prick into her cunny hard.\n\n\"Fuck!\" Mom gasped, lurching forward. A small ripple rode her upturned ass cheeks. I only pulled out halfway before I hammered my slippery pole back into her hot pussy again. \"Shit!\" I did it again. \"Fuck, baby, fuck!\"\n\nMom had read my mind. I fucked my mother, fast at first, using just my movements, then I held still and pulled her back onto my meat-stick until she moved her body on her own. Her moans and curses filled the room; then, I thrust forward as she drove her ass back toward me, and she uttered a low-throated grunt of surprise, unable to form words as my glans pushed into her warm guts. I ground my dick into her, rubbing my knob around her insides, reaching way up into her tummy--so I told myself--touching places where no other dick had been before.\n\n\"Am I bigger than dad?\" I asked.\n\nMom grunted.\n\nI spanked her ass, making her gasp.\n\n\"Tell me,\" I said, spanking her again, harder than before.\n\n\"Fuck, yes,\" Mom whimpered. \"You feel so much bigger, you little bastard.\"\n\nThe sound of her trembling voice as she talked dirty to me, along with the heat her muff baked my cock in, was too much to take. My balls tightened. My cum was getting ready to shoot as it tossed within my sack like an angry sea. I sat on my calves and pulled Mom back with me, standing her on her knees with her shins outside of mine as she sat on my dick.\n\n\"Oh, fuck,\" Mom moaned.\n\nI bounced her pussy up and down on my vertical stick, sometimes pulling her down hard and grinding her twat on me hard enough to push and pull on my nut sack with our up-and-down movements. Mom whimpered and fell back against me. I let go of her hips, thrusting my left hand up her sweater dress to caress her tits as I ran my right hand forward along the line of her hip and cupped her mound in my hand. My middle finger found her fat clit, my side fingers squeezed her wet nub, and Mom went wild as I played with her pleasure pearl.\n\n\"Oh fuck, oh shit, fuck, fuck-fuck-fuck,\" Mom whimpered. \"Timmy, you little fucker!\"\n\nMom worked her pussy on my dick, humping me wild, stripper movements meant to make men nut in the backrooms. As her butt pressed into my hips and thighs, I swirled her thick clitty in circles, the juicy nub throbbing and about to explode. A series of spasms rocked Mom's body, and her pussy trembled around my mom-fucking-meat, her juices flowing until a creamy froth lathered my balls. My cock swelled, my asshole tightened, and my balls tingled. I was getting ready to fill my mother's pussy with cream.\n\n\"Baby, oh, baby, I'm gonna come,\" Mom rasped as she worked her ass in tight, hard circles around my cock. Sweat now dampened her body below her dress. \"Oh fuck! Oh shit! Oh, Timmy, I'm coming on my son's dick!\"\n\nMom's body shook, and she tried to fall forward. I held her hard against me, forcing her sensitive cunny to come on my cock. I pumped my prick into her new, cum-drenched slipperiness, lifting my ass upward and her knees off the bed as I jackhammered her across the length of my dick. Loud slapping sounds filled my mother's bedroom. My balls shivered and buzzed, and I released a torrent of jizz. My cum swelled my shaft before unleashing its heat into my mother's snatch in one long stream of mind-numbing, body-buzzing bliss.\n\n\"Fuck, Mom, Mom, Mom,\" I gasped. \"Oh, Mom--FUCK YEAHHHHHH!\"\n\nWe rode each other through our orgasms, shaking and panting, moaning, and cursing, sometimes at each other. I pressed my mouth to my mother's back and bit down, not hard, just a gentle nibble that pulled at her skin beneath her sweater. Her breath left her lungs in harsh gasps, and she slapped my thigh several times, still trying to get away from my dick. After a moment, I lowered us to our left side, our heads on the pillows, my cock softening but not going completely soft within her maternal canal. When I finally slipped out of her warm, wet hole, a thick glob of our cum followed, running over her left thigh in a gooey mess of sexy cream.\n\nMom turned her head and looked at me, her blonde hair a mess, her mascara running. She smiled at me--it was the sexiest, naughtiest, horniest smile I had ever seen on her lips-- then she laughed, then she licked her lips when she saw the look on my face.\n\n\"The nights far from over,\" I said as I laid her on her back and straddled her stomach, my cock flopping between her big tits. \"Open up, Mom. There's a lot of night left for us to get to know each other.\"\n\n\"Oh boy,\" Mom whispered, then she opened her mouth....\n\nTimmy Out.\n\n<p align=\"center\">#17 Timmy</p>\n\n<p align=\"center\">Getting Kinky with Mom</p>\n\nSixty-Nine with Mom\n\n\"Oh boy,\" Mom had whispered, then she had opened her mouth....\n\nMom lay beneath me, still in her sweater dress minus a bra and panties, her ankle-high tennis shoes on her feet, their looped laces touching the bed. My mother, being fully dressed while I straddled her stomach, completely naked, made my cock flex from root to tip in a banana-like curve, shooting a wad of pre-cum from the tip of my dick onto her chin.\n\n\"Baby,\" Mom moaned. \"You're a fuck-machine.\"\n\nI smiled, proud and arrogant, as my mother's words made my heart swell. \"Thanks to you,\" I said, putting my thumb on my mother's chin and pushing the pre-cum over her bottom lip. As I rubbed my fluid on her face, I slid my long, hard cock between her tits, our cummy mixture coating my dick and wetting the inside swells of my mother's large breasts. I lowered her sweater, covering my cock and her breasts, then I pushed my thumb into my mother's mouth for her to suck.\n\nMom puckered her full lips, her eyes widening, and she sucked on my thumb in the same way my sister likes to play with the head of my prick. Heat, warmth, and the flicking of my mother's tongue bathed my thumb in a preview of the blowjob Mom would be giving me later. I moaned and pumped my prick through her cleavage, loving the yielding firmness of my mother's titty mounds.\n\n\"Hold your tits together,\" I said in a trembling voice. \"Let me fuck these beautiful things for a little bit.\"\n\nMom reached under her sweater, doing as I commanded without hesitation. A buzzing of pleasure danced about my shoulders and arms when she listened to me without question. I sped up my thrusting as she squeezed my shaft with her breasts, their wet softness creating a perfect pocket for me to fuck.\n\n\"Fuck, Mom,\" I moaned, fucking her hard enough to jiggle her tits beneath her sweater.\n\nMom bit the end of my thumb, making me moan, the pleasure-pain clenching my asshole in blissful ways. I pulled my dick from beneath her sweater and crawled over her tits, throwing my left leg forward, leaving my right back, and putting my body in a low lunge. My knob dangled in front of Mom's face. She grabbed the neck of my cock with her right hand, bringing it to her lips in the next instant.\n\n\"Suck your son's cock,\" I whispered.\n\nMom opened her smiling mouth and took my incest stick between her lips.\n\nHer tongue landed on the underside of my glans, sending a sizzling thrill straight to my toes, curling them. My thighs tensed, my ass flexed, and I slowly fed my mother--my motherfucking mother--the shaft of my cock.\n\n\"Umm, umm, umm,\" Mom moaned as she gobbled up my pole.\n\nUntil you've had it, there is nothing like having your own mother's mouth warming your cock with her saliva, tongue, inner cheeks, and hot breath. This was the woman who had birthed me, taken care of me, hugged me, begged me for kisses and cuddles--that I used to run away from--and she had chased me around with her arms outstretched, pretending to be the tickle monster while I laughed and tried to hide from her. Later in life, she was always there when I needed someone to talk to, a comforting word, or some tender understanding. This was the one person who I knew would love me forever, no matter what I did. True unconditional love--allowing me to fuck my sister had proved my faith in my mother's love. Somewhere during the time my mother had raised me, her loving affection had transformed into desire... desire that transcended the normal boundaries of a mother/son relationship--a desire I shared.\n\n\"Fuck, Mom, I love you,\" I moaned.\n\n\"Mmm, mmm, mmm,\" Mom mumbled around my dick, her spit rolling down her cheeks and her nostrils flaring hard. She looked beautiful, radiant, her eyes glowed, her cheeks blossomed red, and I'll never forget the look in her eyes as I pushed my cock into her mouth, popped into her throat, and rested my balls on her wet chin.\n\nMom gagged, sputtering like an angel.\n\n\"Yeah,\" I grunted. \"Fuck yeah, Mom. Eat it. Eat my fucking dick. Mmm, yeah!\"\n\nI turned my body around her head, never taking my cock from my mother's mouth. It was a gentle affair. Soon I had my knees sat on either side of her head, the soles of my feet pressed against the headboard, and I was still feeding her my meat. The back of her neck rested on a pillow, the reverse angle of my prick sliding through her mouth felt rougher, with more friction. Mom gagged several times. I soothed her with the same shushing noises she once used on me whenever I had hurt myself.\n\nI leaned forward, dropping onto my left hand and spreading my mother's thighs with my right hand. She opened them for me. (I thought about how I treated Diana when my sister gave me control.) I spanked the inside of my mother's thighs, right on the fleshy swells below her pussy.\n\n\"Mmm,\" Mom moan-gasped. \"Umm. Mmm. Umm. Uh!\"\n\nI spanked her other thigh, and she spread her legs further apart for me, offering up her hairless muff for me to munch on. I lowered my head, lifting my ass and pulling some of my cock-meat from her mouth. Mom's breathing relaxed, then she whimpered as I pressed my tongue hard against her throbbing clitty bud.\n\nThe sweetness of Mom's pussy watered my mouth. I drooled a line of spit down her forbidden crease. It dripped down her slit, over her perineum, and between the bottom bulges of her tight ass cheeks to her asshole before falling onto the bed. I raised my head and spanked my mother's pussy hard.\n\n\"Oh!\" Mom gasped, her words garbled around my cock.\n\nI straightened my forefinger and sawed it between her inner pussy lips, fucking her slit up and down, then pushing her small, pink petals to the sides. Mom moaned, squirming beneath me, her head moving up and down my shaft as her throat squeezed my knob.\n\n\"Fuck, you have a beautiful pussy, Mom,\" I moaned against her twat. Her cunny warmth radiated throughout my face. \"So fucking hot for me. So fucking wet for your son.\"\n\nMom raised her hands and grabbed my ass. She dug her fingers into my cheeks and pulled down as she fucked her mouth upward. I moaned, wrapped my hands around the outside of her thighs, gripped her cheeks, and pulled, spreading both of her lower holes wide open.\n\n\"Oh-umm,\" Mom sputtered.\n\nI slid several of my right hand's fingers into her pussy, pushing past her lips and caressing her juicy insides. I sucked her clit, polishing her little pearl with my tongue, and I slid the tip of my middle, left finger between her ass cheeks... against her asshole.\n\nMom squirmed. \"Umm-umm, umm-umm,\" she moaned, wiggling her butt against the bed.\n\nMy saliva, her pussy juices, and our cum had turned her butt crack into a wet mess. I pushed the tip of my middle finger against the tight, rough crinkle of her puckered starfish. Mom moaned. She planted her heels on the bed and pushed upward as if she could keep me away from her backdoor. I pumped my hips downward, pinning her head to the bed as I fucked the entire length of my prick into her mouth over and over again.\n\n\"Mwuh, mwuh, mwuh,\" Mom gurgled.\n\n\"Yeah, Mom,\" I moaned. \"Take it, Mom. Take it.\"\n\nMom groaned as I eased my finger against her rear passage. I never removed my mouth from her clit, alternating between sucking, swishing, and pressing on her pink jewel with a steady rhythm. My fingers in her cunny poked in and out, then curled against the underside of her mound, petting her G-spot. My middle finger--the finger that my mother was trying to wiggle away from--continued its journey through the rubbery tightness of her anal ring.\n\nI eased my mother's butthole open, fighting its tightness and taking my time with her virgin anus. She felt virgin back there, as virgin as Diana, and my sister had never let anyone but me lick, finger, or tongue-fuck her bumhole... no one else, ever. Mom quivered as soon as I started to stretch her rear passage open.\n\n\"There you go,\" I mumbled as her spokes spasmed and stretched, seeming to pulsate around my fingertip.\n\nMom's body tensed as my finger slowly opened her rear, so very slowly, her hole expanding in small, nearly nonexistent increments, then I was in.\n\nI was fucking in.\n\n\"Oomph!\" Mom grunted.\n\nI took my mother's clit in my mouth and sucked on the curve of her pussy mound. She stiffened. My balls tingled, and wavy lines of pleasure shivered through my shaft. Sweat formed on Mom's body as I continued pushing my middle finger up her ass.\n\nMom whimpered several times as her pussy trembled around my fingers.\n\nI was up her butt to the first knuckle, then the second, her pussy gushing honey down the crack of her ass and wetting my fingers. I started to tremble as my balls buzzed and swelled. Mom whimpered around my cock, breathing hard--nearly hyperventilating--her stomach rolling and her breasts swaying.\n\nI sucked on her clit as hard as I could, then pushed the last of my finger through the hot, muscular ring of her anus. Mom's backdoor muscles throbbed around my finger, seeming to try to drag in inward each time her pucker clenched. With a sigh, I wiggled my fingers inside of her butthole, loving the warmth of her ass.\n\nMom whimpered something, talking into my dick, and I came. The vibrations of her muffled words tickled my glans, and my balls exploded in blissful agony. I pushed down on Mom's clit, pulled my finger from her butt to the top, then pushed back in, doing this several times, the friction giving me goosebumps. Mom howled beneath me, stiffened, then melted as her orgasm struck her body with the energy of a lightning bolt.\n\n1.21 gigawatts!\n\nA flood of pussy juice and creamy cum squirted from my mother's cunny. It was like a porno, only real, sexy, and her cum was staining my fingers and her bed. As Mom came, I rolled her clitty around with my tongue as my cum rushed through my shaft and into my mother's mouth until I thought there was nothing left to feed her.\n\nAfter a minute, Mom pushed on my hips, and I slid to the side, my cock sliding against her lips. When I was free, she gasped for breath. Knowing that I was working her harder than she had ever been worked was enough to force one last spurt of cum from my cock.\n\n\"Catch your breath, Mom,\" I said, collapsing to the side. \"Your asshole's next.\"\n\n\"Oh my god,\" Mom painted. \"Oh my fucking god, Timmy, you're an animal.\"\n\nI laughed, breathless, and I reached over to take my mother's hand. We interlocked fingers, gripping each other tightly.\n\n\"I know, Mom,\" I said. \"And tonight, you're locked in my cage.\"\n\nMom laughed. \"There's my goofy son....\"\n\nI laughed, but I also got up and pushed Mom onto her stomach, then I lowered my tongue to the crack of her ass.\n\nTimmy out.\n\n<p align=\"center\">#18 Timmy</p>\n\n<p align=\"center\">The Kink Continues</p>\n\nAnal with Mom\n\n..., then I lowered my tongue to the crack of her ass.\n\nThe tip of my tongue connected with the top of my mother's crack. Her golden skin tasted of sweat and vanilla cream, the flavor primal enough to swell my cock further. My shaft strained, and my balls ached from coming twice so soon, but I was about to take my mother's ass--only death could stop me now.\n\nMy head faced Mom's tennis shoe-covered feet. I extended my tongue, flattening it against her crack and sweeping it down between her thick cheeks. She was firm, like Diana, but with softer meat, a yielding bubble butt meant for shaking, jiggling and hypnotizing men's eyes until they were stupid with lust--which I was.\n\nThe taste of pussy and cum ran through the valley of my mother's behind. I licked it up, breathing deep and inhaling the lusty fragrance radiating outward from between her cum-soaked thighs. Mom shivered as I approached her asshole, her body tensing. I placed my hands on her cheeks and filled my palms with her firm roundness, digging my fingers into her taut hams. I growled and pulled her cheeks apart, exposing her peachy-pink asshole to my eyes.\n\n\"Mmm,\" Mom moaned.\n\nI only looked for a moment, memorizing her crinkled opening, then I pushed my tongue against her anus and flicked the tip around her tiny divot.\n\n\"Ohhhhh,\" Mom gasped, her voice quivering.\n\n\"A virgin ass, Mom?\" I licked her butthole again. \"Tell me?\"\n\n\"Yuh-yes,\" Mom whispered. \"Toys, vibrators, small things.\" Her voice rose as she spoke, her words shaky with barely-there tremors. \"Never a cock--oh--or anything as big as yours. Fuck, Timmy!\"\n\nI had pressed my tongue against her sphincter, testing the rubbery flesh of her ass. Her pucker spasmed, trying to push me out of her backdoor as my saliva ran down my tongue, coating her rear entry. I spread my mother's cheeks wider. She opened her legs, her pussy lips glazed and shiny, glistening pink and spreading open as I pulled her twin hills to the sides.\n\n\"Fuck, Timmy,\" Mom moaned. \"God damn, son, the things--you--do to your mother.\"\n\n\"And your daughter.\"\n\nA smile curved my lips as Mom answered me with a hungry, yet disbelieving, groan, as if she wanted to hear what I had to say about Diana but didn't want to believe, yet it turned her on anyway.\n\nI slid my right hand between Mom's legs, fluttering her pussy lips with my fingers before slipping the tips through her folds. Mom shivered as I splayed her pinkness open. I heard the ruffling of cloth as she bent her right knee, sliding it up the bed and opening her twat even more for me.\n\n\"That's it, Mom, let me have this pussy.\"\n\nI pushed two fingers between her thighs, into her creaminess.\n\n\"Ooh,\" Mom moaned.\n\nI pulled my fingers from her and moved over her body, tugging off her sweater dress by first sliding my hands beneath her body and cupping her tits. After some nipples play, I pulled the dress from her and tossed it to the side, then I straddled her lower back, still facing her feet as I rested my balls on her crack. I kept her right cheek spread open with my left hand and slowly finger-fucked the dewy softness between her legs with my right fingers. I gathered her juices with my digits, her asshole needed lube, and her thick, cum-honey was more than slippery enough to grease down her virgin pucker.\n\n\"Mom, I'm going to fuck your ass,\" I whispered, panting. \"How did we get here, Mom?\" I licked my lips. What would Diana say? \"How does a mother decide she wants to fuck her son?\"",
        "\"Jesus, Timmy,\" Mom gasped. \"You make me feel so nasty.\"\n\nI growled and shoved my fingers up my mother's snatch as I smacked her ass with my left hand. Mom yelped. Her ass cheeks jiggled in a wave of tight, round flesh. My cock grew, stretching forward, my meat warming as it filled with excitement. My knob slid against my mother's crack then rose, hardening into a thick pole over her hills--my spongy tip looked far too big for her little butthole.\n\n\"It's going to be a tight fit up your butt for my cock,\" I said.\n\nMom moaned.\n\n\"Do you think the other moms will let their sons fuck them up their sexy, MILF asses?\"\n\nMom trembled.\n\n\"Were you hoping I'd be a virgin our first time?\"\n\n\"I couldn't do this with you if Diana hadn't gotten your dick first,\" Mom whispered in a raspy rush of words.\n\nI opened my mouth, dropping a wad of spit from my lips. My saliva landed in Mom's butt crack. I slid my fingers from her snatch, across her perineum, and through the bottom opening between her warm cheeks. Mom trembled. I spread her right cheek open and drew a circle around her asshole with my wet, middle finger.\n\n\"So fucking sexy,\" I whispered. \"Why do you want to fuck me, Mom?\"\n\n\"God, Timmy,\" Mom said, sighing, her voice straining, \"do you really want to talk about this... now?\"\n\nI pushed my finger against her backdoor, testing the give of her puckered anus. \"I want to hear you say something dirty to me.\" I rubbed the very center of her rosebud.\n\n\"Ooh,\" Mom moaned. \"Because\"--she made a clicking noise with her tongue--\"because my son has the biggest dick on his wrestling team.\"\n\nI groaned.\n\n\"Did you like that, baby?\"\n\n\"Yes,\" I said, stressing the word into a hiss.\n\nBetween the pussy juice, cum, and spit, my finger slid slowly into Mom's ass. Her hot anal ring clung to me, collapsing inward against the pressure of my digit until her small hole sucked me right into her butt, where she was so fucking warm.\n\n\"Ungh,\" Mom grunted, low and loud... strained.\n\nI let go of Mom's cheek and grabbed my cock with my left hand, stroking myself several times as I pushed my finger up my mother's ass. Mom groaned beneath me, her body wiggling as her asshole fought my naughty, butt-probing finger. I moved slowly through her butthole, her insides warm and soft, the heat within her sending an ache through my balls as my sack tightened with desire.\n\n\"Feel good, Mom?\"\n\n\"Feels strange,\" Mom said. \"But--mmm--good. A scary kind of pleasure.\"\n\nI worked my finger up to the last knuckle, then swirled it around her insides. Mom moaned. I pulled out, pushed in, pulled out, then circled my fingertip around her anal ring, trying to loosen her up.\n\n\"Time for another finger,\" I whispered.\n\nMom let out a long, trembling breath. \"Diana taught you--ooh--a lot.\"\n\nI said nothing, thinking Diana's fingered my ass more than once. Instead, I answered my mother's words by probing her backdoor with my forefinger, pushing it alongside my middle finger, the tip fighting for room within the smoothness of my mother's rubbery opening. Mom groaned as I eased the tip into her butt by nudging her anal ring aside. Once in, I extended my finger, sliding it right up her asshole to the last knuckle.\n\n\"Oh, fuck!\" Mom grunted.\n\nI let go of my cock and slid my left hand under Mom's naked hips. She arched her butt off the bed as much as she could with me straddling her, but it was enough room for me to get my fingers onto her pussy, with my two biggest touching her clitoral hood and the meaty pearl swelling out from within it.\n\n\"Ooh, shit, baby,\" Mom moaned. \"Fuck. Oh, fuck.\"\n\nI wiggled my fingers against her clit. Mom bucked, and I rode her body like a cowboy taming a wild mare. I gently turned her love nub in circles, using slow strokes that matched the rhythm of my fingers sliding in and out of her ass. Soon, I sped up my fucking motions, working her clit and probing her ass in tandem, rubbing the sides of her anal cavity and anywhere else I could reach. Mom was nothing but soft, warm, and elastic beyond her butthole.\n\n\"Shit, baby, shit,\" Mom moaned. \"Ooh, god, that's good--mmm, yeah--fuck!\"\n\nI worked her pussy pearl faster.\n\n\"Fuck, baby.\"\n\nI finger-fucked her butt deeper.\n\n\"Jesus, fuck-fuck!\" Mom whimpered. \"Baby, oh, baby. Baby!\"\n\nI pushed my fingers into her ass as far as they'd go as swished her clit side to side, pressed down on it, then swished it again.\n\n\"Baby, oh, baby--god--you're making Mommy come.\"\n\nI lost it. My fingers went wild, fucking my mother's butt on their own. Mom tensed and trembled, her muscles swelling beneath her skin, the smooth taper of her thighs highlighted by the strong lines running through her limbs. Her bubble butt shook. Her asshole clenched, pinching my fingers so fucking tight I was sure they were going to break.\n\n\"Oh, fuck!\" Mom moaned, muffling her voice with a mouthful of the bedspread as she came.\n\nI held my mother's mound in my hand, hugging her pussy tightly as I pistoned my fingers in and out of her fat ass, twisting them like a screw as I sodomized her backdoor through her orgasm. Mom's whimpers filled the room, and the release of her cum flooded my nostrils with a thick, musky scent that had my cock dripping with pre-cum.\n\n\"I need to fuck you,\" I growled.\n\nMom mumbled something to me, her gibberish words filled with pleasure. I pulled my fingers out of her ass and turned around, straddling the backs of her thighs with my cock resting within her butt crack. I pushed her cheeks together and hot-dogged her hills for a minute, just fucking my cock through her meaty hams while pulling my knob back a little further with each stroke until my tip touched the spokes of her rear fuckhole.\n\n\"Oh fuck,\" Mom gasped. Her hands clenched the bedspread, pulling the fabric upward.\n\n\"Pull your asshole open for me,\" I said, smacking her butt with my right hand. \"Come on, Mom, give your son what he wants.\"\n\n\"You little shit,\" Mom said, her voice trembling.\n\nShe reached back with both hands and grabbed onto her cheeks. Her fingers slid into the crack of her, and she pulled herself open for me. I looked down the length of her crack, stopping my gaze at the pale, peach-pink hole I was about to fuck. I grabbed the neck of my shaft with my right hand, placed my left hand on her lower back, then pushed my glans against her slippery, little asshole.\n\n\"Umm, fuck,\" Mom grunted as my crown put pressure on the ring of her anus. \"Oh, fuck, Timmy!\"\n\n\"God, Mom,\" I moaned. \"So fucking hot. So fucking tight.\"\n\nAn unreal constriction hugged my glans, sending tingles of pleasure throughout the rim of my helmet. Mom's backdoor squeezed me tight, compressing the head of my cock in a sparkling grip of pleasure that tensed my lower body.\n\n\"Oh, oh, oh--god!\" Mom moaned, then yelped as my knob popped into her rear passage.\n\nI held my breath, closed my eyes, and panted. Fuck. I was fucking my mother in the ass! My heart was ready to explode from my chest. How wrong was this? How fucking great was it? How naughty and nasty was this?\n\n\"Tell me to fuck you,\" I said through clenched teeth.\n\n\"Baby,\" Mom whimpered, \"fuck your mother's butt.\"\n\nI pushed in, my cock wet with spit and pussy juice from jerking off.\n\n\"Yeah, baby, yeah,\" Mom groaned. \"Fuck Mommy's butt--oh--fuck it good, Timmy.\"\n\nI was ready to blow a thick wad of cum up my mother's backside, but I bit the inside of my cheek and flexed my cock hard, which made Mom grunt loudly. I held my breath, my heart beating fast, and I slowly pushed the length of my shaft into my mother's hot bum. Slowly in, slowly out, using small movements that had my mother hissing and panting and gasping--the friction so tight, so good, so close to making me come hard.\n\nWith half of my cock buried up my mother's butt, I grabbed her wrists and pinned them against her lower back. Mom lifted her blonde head in surprise, and I pushed the rest of my cock into her without stopping. Her snugness crushed the sides of my shaft, swelling the meat that was already inside her to near bursting. As I moaned, looking down, I saw that my mother's butthole had stretched to an obscene size as it expanded around my pole. When my balls pressed against her pussy from behind, we both released a loud grunt, filling the room with our strained pleasure.\n\n\"God, Timmy,\" Mom groaned. \"Your dick fills me up so much.\"\n\n\"Incest dick,\" I gasped.\n\n\"Yeah, your incest dick--oh--fills Mommy's butt to the brim.\"\n\n\"Mom,\" I gasped, \"your ass is so fucking hot on the inside.\"\n\nI lowered myself to my hands, pressing my chest to my mother's back, and I slowly humped my prick through her butthole. Mom's body rocked against the bed. Her moans spurred me on. My ass rose and fell, swimming my dick through Mom's anal ring. My muscles bulged, straining as Mom's asshole struggled to stay tight around my pole. I gasped and groaned, and I forced my hands between the bed and Mom's big tits, filling my palms with her soft breasts.\n\n\"Uh, Uh, Uh,\" Mom panted beneath me. Sweat beaded her body. Her voice strained. \"Uh, uh, uh.\" It was the greatest sound in the world.\n\nI don't know how long we fucked for, with me panting and Mom groaning and grunting beneath me, her breath thick and course, her moans throaty and wild. I eventually turned Mom onto her side and pushed her legs up the bed until she was lying in the fetal position on her side. I held onto her hip with my left hand while slipping my dick into her ass and ran my right fingers along the folds of her bulging pussy lips. Her honey flowed out of her, soaking my fingers, her thighs, and the bedsheets with her scent.\n\nWould Diana get this wet from taking my cock up her teen ass?\n\nThe thought drove me forward. I turned Mom onto her back, lifting her legs into the air so that I didn't have to pull my dick out of her as I turned her over. I hooked my arms behind her knees and pushed her legs back, her feet sticking straight up, the laces of her tennis shoes rocking with each firm cock-stroke through her butthole.\n\nI didn't want the night to end, but I didn't last nearly as long as I wanted to either. Mom reached between her legs and played with her pussy as she stuck her other hand's fingers into my mouth. I sucked them, fucking her faster and faster. Mom whimpered, giving me a how-dare-you-fuck-your-mother-like-this glare that made the tip of my dick tingle.\n\nI came first, crying out and gasping as I hit something soft and stretching at the back of her anal chute. Cum shot through my cock, swelling it where it surged through my shaft, and I filled my mother's butt with a constant stream of jizz. I folded my mother in two and pressed my mouth to hers, my hips going into a frenzy as I dropped the last of my load up her ass. Just as I finished, Mom came, kissing me hard enough to bruise my lips as her asshole spasmed around my dick.\n\nAfter a minute of breathing hard, I eased my mother's legs back down to the bed. Then, I collapsed atop her, using my elbows and knees to hold most of my weight, though I pressed my chest into her damp tits. Mom panted beneath me as my cock softened in her ass. When I pulled my prick out of her, my shaft stretched between us--her asshole not wanting to let me go.\n\n\"Holy fuck,\" I whispered. \"Fuck, Mom, that was hot.\" I smiled. \"I just fucked my mother, Mom.\"\n\n\"When you're ready to fuck me again, just wake me up,\" Mom whispered. \"Now that we've gotten the fucking out of the way, you can practice making love to me.\"\n\nI closed my eyes and took my mother's hand in mine. \"I promise,\" I said. \"I promise.\"\n\nI rose from the bed and went to my mother's bathroom, where I turned the sink to hot and warmed a hand towel. I wiped my mother's body down. She lay there, exhausted, her nipples hard and her pussy wet. After taking care of Mom, I showered, turned off the lights, and got into bed with her. I woke late in the night, and my mother's warm body convinced me that another round of fucking was called for. I did as I had promised, slowly waking my mom with subtle foreplay that would have made Diana proud.\n\nI made love to Mom in the dark, letting her touch me, kiss me, taste me, and use me. After I filled my mother's pussy with cum, we fell asleep in each other's arms. When I woke in the morning, I heard Diana and Abbey downstairs. I grabbed my clothes and ran to my room in the buff. Mom decided to stay home from work. It had been a long time since someone had fucked her silly, and she was too sore to leave her bed that day.\n\nDownstairs, in the kitchen, Diana greeted me with a kiss, melting into me as if we had not seen each other for a week. Abbey didn't seem surprised by Diana's affection for me. (I was more anxious on the inside than I showed on the outside.) My little sister watched us with a tilted head and curious eyes--big, curious eyes--as if studying our motions and memorizing our movements.\n\nAbbey's curiosity worried me. Triplet or not, she was still my little sister and even though she was only minutes younger than me, those five years without her made her seem much younger than me (in spirit).\n\nOn our way to school, Abbey sat in the backseat. As she exited the car, her eyes met mine with something I'd call understanding. though I had no idea what she understood. That look made me wonder--even more--about what my sisters had gotten up to during their night together.\n\nIt had been nothing good, I'm sure, but I was sure that it would come back to haunt me in some way. To make matters worse, Diana told me to mind my business when I asked her about it.\n\nI guess it didn't matter. I'm going to find out eventually.\n\nTimmy out.\n\n<p align=\"center\">* * * * *</p>\n\nNext time on the Anderson Family Journals: Abbey's Night Out.\n\nIf you've read this far, click a 5 star.\n\nThanks for reading."
    ],
    "authorname": "MrHereWriting",
    "tags": [
        "mother",
        "son",
        "anal",
        "incest mom",
        "taboo mom",
        "brother",
        "sister",
        "sub mom",
        "mrherewriting",
        "mom son sex"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/anderson-family-journals-15-to-18"
}