{
    "title": "Aurora - Goddess of the Dawn Pt. 06",
    "pages": [
        "This is a work of fiction. All characters depicted are 18 years or over.\n\n*****\n\nTERRA NOVA- The good times continue.\n\nA combination of Champagne, weed and unfettered sex, wind, water and hot tropical sun, had supercharged Watson's senses, bringing the world into breathtaking focus. He could feel the throbbing pulse in his penis, feel the mass of his balls, the sound of his brain, the sweat on his skin. He could sense the ebb and flow of air as he breathed, feel the weight of the sky. The fizz of individual particles, popping in and out of existence. The life force.\n\n\"Know what I'd like?\" a faraway voice said. It sounded like Tanya's. \n\n\"No.\" someone replied. Could have been Bragg.\n\n\"A nanna nap.\"\n\n\"Ah.\" Watson nodded, smacking his lips. \"A little post-sex siesta. Sterling idea.\"\n\n\"What do you reckon, Beck?\" Bragg said, patting his leg. \"Wanna come to bed with me?\"\n\nWatson caught the merest flicker in Beck's eyes, body language he could read like a book. No. She didn't. \"Err... Beck.\" he said, \"Why don't you just nip down to your own cabin, Chook? Give poor old Roger a breather?\"\n\nBragg opened his mouth to dismiss the old man's concerns but Tanya got there first. \"Probably not a bad idea. If we're gonna pick this up later.\"\n\n\"Are we?\" Bragg asked eagerly.\n\n\"If you're still up for it.\" Watson shrugged. \"That was the idea.\"\n\nBeck stepped in front of Tanya and held out her hand. \"Would you like to come and sleep with me, Tan?\"\n\nTanya looked left and right, searching for the lucky contestant. She pointed at herself. \"Me?\"\n\n\"Uh huh.\"\n\n\"Why I'd love to.\"\n\n\"Oh, poor old Tan.\" Watson groused, \"why don't you leave the poor-\"\n\n\"No! No.\" Tanya hastened, \"I'd love to, I mean it. A little bit of girl-time. That's fair enough, wouldn't you say boys?\" She looked at Watson. \"If that's okay with you?\"\n\n\"Sure.\" Watson hefted a shoulder, \"But don't let her get started on her crusade. Once she gets started you can't shut her up.\" \n\nBeck blew a raspberry and gave her old man the two fingers.\n\n\"If she opens her mouth I'll stick my tongue in it.\" Tanya said, taking Beck's hand. \"Come on. Let's all go have a little R and R.\" She winked. \"That means Rest and Rebekah.\"\n\nWatson stood and stretched till his joints popped. \"I wonder what the poor people are doing?\" he mused. \"Come on, gang. I'll set the alarm for a couple of hours.\"\n\nWhile Tanya followed Beck below-decks, Bragg passed Watson the bottle of Champagne. Downing half the contents, Watson wiped his mouth and handed it back. \n\n\"Damon,\" Bragg said, \"I just want to tell you how grateful I am.\" This, from a man, who considered any form of gratitude beneath his dignity.\n\n\"It's been a blast, hasn't it?\" Watson smiled as Bragg raised the bottle in a toast. He briefly considered returning the thanks, for access all areas to the millionaire's trophy wife, but no. It would do Bragg no end of good, for once, to feel beholden.\n\nPolishing off the bottle, Bragg turfed it overboard then heaved a deep, gassy belch. \"Sex, drugs and French Champagne. What more could you ask for?\"\n\nWatson watched the bottle bob up and down once or twice then disappear. \"Hate to tell you this, Rodge,\" he said warmly, \"but when Beck finds that bottle, she won't let you look at her, let alone fuck her.\"\n\nBragg blinked at him, taken aback. \"Pardon?\"\n\n\"Littering. You see, according to the Gospel of Beck, littering should be punishable by death.\"\n\nBragg gestured vaguely in the direction of the dearly departed bottle. \"That's littering?\"\n\n\"Well it sure ain't tiddly-winks.\"\n\n\"Even if no one can see it?\"\n\n\"Oh she'll see it, I can promise.\"\n\n\"Oh. Gee.\" Bragg looked around anxiously, \"I'm sorry, I had no idea.\"\n\n\"Tell you what.\" Watson patted Bragg on the back. \"There's fins and a mask in the locker near the swim platform. It's not very deep. You nip down and get that bottle and I won't say a word.\"\n\n* * *\n\nTanya and Beck went to bed, but they didn't quite go straight to sleep. While Beck found Tanya's husband to be pushy and a little bit rude, Tanya herself was kind and gentle, and clever and funny and fun. Beck threw aside the lightweight doona to expose the semen-stained blue cotton sheets. Sitting at first, she lay back, then pulled Tanya down on top of her, legs spread, arms welcoming.\n\nFor a long time they kissed, Beck grinding her mound against Tanya's, before lavishing each breast with a long, nipple-tingling suck. When she was done, Tanya commenced working her way from Beck's mouth to her nipples, to her belly button and on down to her groin. Beck was soon squirming and writhing, Tanya's short dark hair gripped in her fists, her head tossing and hips off the bed. Forestalling another orgasm lest she wear the girl out, Tanya broke off, right on the brink, then rolled onto her side and stroked Beck's hair. Beck took her hand. \"Finger me?\"\n\n\"Not too tired?\"\n\nBeck shook her head. \"Nuh.\"\n\n\"Goodness me. Whatever you're on they should be feeding it to our athletes.\"\n\nBeck spread her legs as Tanya trickled a finger up and down her slit before burying it up to the knuckle in her hole. \"Tan?\" she asked. \"Can I finger you?\"\n\n\"Hold on a sec, let me move up.\"\n\nTanya repositioned so Beck could slip a couple of fingers into her semen-slick vagina. \"Mmm..\" Tanya cooed, \"that feels nice.\"\n\nBeck tried another finger, and Tanya relaxed her to let her slide in. \"Do you like that?\" Beck asked.\n\n\"No.\" Tanya said flatly, \"I flippin' love it!\"\n\nThe woman's insides felt like liquid fire, simultaneously yielding and resilient. \"Would you like me to stick another one in?\" Beck asked.\n\nTanya hesitated. \"...Beck. Do you know what fisting is?\"\n\n\"Where one girl puts her hand in another girl's... umm...\"\n\n\"Pussy. Right. So you know what it is?\"\n\n\"Uh huh.\" Beck nodded. \"I saw it on a porno.\"\n\n\"Did you now? What did you think?\"\n\n\"I didn't believe it was possible at first.\" Beck said excitedly. \"They were only young, like in their twenties or something, and their pussies just looked too dainty. But they did it. The first girl put two fingers in her girlfriend, then three, then four, then she squeezed in her thumb. In the end her whole hand went inside.\" Beck circled her wrist with finger and thumb, just above the wrist bump. \"She went in this deep, I'm not kidding. It was awesome.\"\n\n\"Well Beck...\" Tanya took a deep breath and tried to calm her racing heart, \"How'd you like to fist me?\"\n\nBeck pulled her fingers out then propped herself up on an elbow. \"Fist you?\"\n\n\"If you want.\"\n\n\"Will I fit?\"\n\nTanya nodded. \"Oh, you'll fit, believe me. Want to give it a go?\"\n\nBeck looked around, weighing the challenge. \"It won't hurt?\"\n\n\"Who? Me?\" Tanya shook her head. \"Just the opposite.\"\n\n\"You sure?\"\n\n\"Trust me.\"\n\n\"Fisting...\" Beck mused, then suddenly made up her mind. \"That would be awesome!\"\n\nTanya pivoted on her back on the bed until Beck was between her open legs. \"Okay, then.\" she said, raising her knees, letting them fall outwards for maximum spread. \"Here now, Becky, give me your hand.\"\n\nBeck did as she was asked, almost quivering with excitement. Another secret fantasy about to come true.\n\n\"Just start with a couple of fingers, okay?\" Tanya said, then pressed Beck's fingertips to her thumb. \"When the four of them are in, bring your little thumb up like this, and once you're all the way in fold your fingers over it.\" She demonstrated. \"Like this. Okay?\"\n\nBeck tried to imagine some hard-knuckled fist rummaging around in her own delicate insides. \"You sure it won't hurt?\"\n\nTanya stroked Beck's cheek. \"Of course it won't, Sweetheart.\"\n\nBeck looked at Tanya's smooth pussy, then at her hand. \"Not too much of a stretch?\" she asked, unconvinced.\n\n\"Honey, trust me.\" Tanya said, patting her mound, \"After all the times I've been fisted I can still slice carrots with this thing. It'll be okay, I promise.\"\n\nBeck knelt eagerly between Tanya's spread legs. She'd watched Watson's pornos over and over, fantasising she was the pretty young woman with the dark hair and freckles, ramming her fist deep into her girlfriend's shaved pussy. Tanya dragged a couple of pillows over and propped them under her shoulders the better to watch. Beck pressed her fingertips together as she'd been shown, as Tanya pulled her pussy lips apart, revealing her hole. She was very, very pink and very, very wet, and the musk of her arousal smelt like candy. \n\nBeck's fingertips sank into the warm, wet constriction and she hesitated. \n\n\"Go ahead, Honey,\" Tanya said huskily, \"you're doing just fine.\"\n\nBeck licked her lips and nodded. The second joints disappeared into the glistening pink flesh and then she was up to her knuckles. Tanya tensed, giving Beck an encouraging squeeze. \"How does that feel?\"\n\nBeck uttered a breathless giggle. \"Amazing. I can feel your pussy squeezing me.\"\n\n\"Hang on, Baby. Okay, I'm all relaxed now. Come on, push a little more.\"\n\nBeck did as she asked and after an instant's resistance, her knuckles slid under Tanya's pubic bone and she was in. Head back, Tanya raised her hips off the bed and gripped Beck's wrist. \"Oh god, Beck, that's it. You're fisting me.\"\n\n\"My whole hand's inside you.\" Beck whispered.\n\n\"That's it, Baby, ball up your fist.\"\n\n\"Like this?\"\n\nTanya nodded. \"Uh huh.\" Wrapping a hand around Beck's skinny wrist, she commenced easing the girl's hand in and out of her slurping vagina. Beck stared at the sight, mesmerised, Tanya's bulging pussy, the pink inner lips clinging to her skin. Tanya's insides felt all wet and goopy, the muscle walls like warm, slippery rubber, and there was a knobby thing that must have been her uterus. Tanya continued driving Beck's fist deeper and deeper, past the bony lump on her wrist. Huffing and grunting, thrusting her hips, her head thrashing from side to side, she was jackhammering herself into a state of sexual oblivion. \"Oh Beck!\" she gasped after a few minutes' furious hammering, \"Oh Beck!\"\n\nJust when she seemed so close to orgasm, Tanya suddenly stopped. Throwing a leg over the girl, with her fist still buried deep in her guts, she rolled over and got up on all fours. Ass in the air, she gave Beck's wrist three or four encouraging thrusts, then lowered her head onto her forearms and let Beck have at it. \n\nUp on her knees, hand on Tanya's butt for purchase, Beck pumped her hand in and out, stirring it a little for added excitement. Tanya bit down on her arm to stifle a scream. \"Oh fuck!\" her muffled voice panted, \"that's... just... fuck... king... incredible. Just like that, Baby, just like that!\"\n\nTanya was rocking back and forth in time with Beck's thrusts. Beck wriggled her arm again and Tanya gyrated her hips, trying to drive herself all the way down to Beck's elbow. Beck watched her arm, glistening with Tanya's juices and the residue of her old man's sperm, sliding effortlessly in and out of the tight, sucking hole. \"Holy fuck!\" Tanya squealed, as an orgasm heaped itself up somewhere over the horizon, gathering momentum like a runaway train. \"Oh Beck, you're so deep. So deep! Fuck me, Baby. Fuck me!\"\n\nTanya, Beck suddenly realised, was out of her mind with pleasure and about to go off. In a flash of inspiration, she used her free hand to feather the woman's engorged clitoris, sending her gnashing and squirting and snarling straight over the edge. Had Watson not been in the shower, and Tanya's husband overboard on a submarine scavenger hunt, they would have both come running. As it was, the climax ran its course undetected and Tanya fell on her side, Beck's fist still lodged firmly up under her diaphragm.\n\nLittle by little, Tanya's clamping muscles relaxed until she was able, bit by bit, to expel Beck's arm. \"Oh, look,\" Beck piped. \"You're giving birth to an arm.\"\n\nTanya looked at her. \"I never thought I'd hear myself saying this, but I almost wish I'd given birth to all of you.\"\n\nBeck's knuckles fetched up against Tanya's pubic bone and she flattened her hand, making it as slender as possible for the final withdrawal. It popped free and Tanya's gaping hole oozed fluid, then gradually closed, reforming like something out of a Terminator movie until it had resumed its normal, eye-pleasing dimensions. Beck spread her fingers, examining the aftermath. Pretty much what she got when she fingered herself, clear, slippery slime, but lots more of it. Checking the high-tide mark, a couple of inches above her wrist, she gave it a sniff. Delicious.\n\nTanya struggled upright and pulled Beck into a tight embrace. Arms around her, she fell on her back, and they lay, one on top of the other, heaving with exertion. \"Was that okay?\" Beck asked, brushing the hair from Tanya's eyes.\n\nMomentarily unable to speak, Tanya shook her head. \"No,\" she said at length, \"it wasn't okay. It was mind-blowing. It was awesome. It was un-frikken' believable.\"\n\n\"For reals?\"\n\nTanya raised her head and gave Beck the eye. \"You sure you've never done that before?\"\n\nBeck's cheeks bunched with a smile. \"First time. Honest.\"\n\n\"Then you are a gifted natural. God dammit, I wish I could take you to Polo Club.\"\n\n\"To what?\"\n\n\"Never mind. That was spectacular, Becky. Thank you.\"\n\nBeck shot Tanya a cheeky grin. \"Can we do it again?\"\n\n\"When I can see straight.\"\n\nBeck wiped her hand on the stain-mottled sheet. Tanya's dribbling body fluids would make an attractive addition to her wet-spot collection, until washday, next time they reached land. She looked at Tanya. Lathered with sweat, she was covered in goosebumps, in spite of the tropical heat. A salt-starched green towel hung on a hook beside the door, and in a fit of maternal devotion, Beck flicked it free then proceeded to pat Tanya dry. Tanya looked up at the diligent little blonde, eyes turning misty with adoration. \"Thank you, Rebekah. That's the sweetest thing anyone's ever done for me.\"\n\n\"We don't want you catching a cold now, do we?\" Beck smiled, channeling her old man. Duty complete, she tossed the towel aside and lay down with her back to Tanya.\n\n\"Here.\" Tanya said, wrapping her arms around Beck's hot little body. \"Why don't we have a nice little nap? God knows we've earned one.\"\n\nBeck yawned a huge yawn. \"Don't go without waking me.\"\n\n\"Wouldn't dream of it.\" Tanya yawned in reply. Sex, dope, French Champagne, topped off with more sex and a deep, thorough fisting. Suddenly she was having trouble keeping her eyes open. \n\n\"Sweet dreams, Tan.\" Beck whispered.\n\nTanya kissed the top of her head. \"Sweet dreams, Little Mermaid. See you in an hour or two.\"\n\n* * *\n\nAlmost two hours to the minute, Tanya stirred, slowly realising where she was and with whom. Beck was snuggling into her, fast asleep, one leg flopped over Tanya's belly, her hard little pubis mashed against Tanya's hip. Busting for a pee, Tanya gently lifted Beck's leg and rolled away onto her back. The girl's eyes fluttered open and she woke, smacking her lips. \n\n\"Tan?\"\n\n\"Morning Gorgeous.\" Tanya smiled as Beck propped herself up on her elbows.\n\n\"Morning?\" Beck frowned. \"Did we sleep all night?\"\n\n\"Joking, Darling. Up a daisy, I've gotta go to the loo for a pee.\"\n\n\"Just go off the swim platform.\" Beck suggested, rolling off the bed and getting to her feet. Luxuriating in a stretch, she stood scratching her ribs as Tanya came up beside her. \n\n\"Let's tidy up this bed.\" \n\nTogether, they straightened the cum-stained sheets, smoothed the coverlet and fluffed-up the pillows. \"There you go.\" Tanya said, ticking Beck under the chin, \"Orderly space, orderly mind.\"\n\n\"You sound like Damon.\" Beck grumbled.\n\n\"Why thank you, Darling. I'll take that as a compliment.\"\n\nBeck led the way, tiptoeing into the saloon and up the companionway, emerging into Aurora's cockpit under the dark blue awning. Stepping through the open gate, they dropped two steps down to the wood-panelled swim-platform, a few inches above the languid water. Squatting down, side by side, tails hanging over the edge, they unleashed a double stream of aromatic pee into the ocean. Beck farted, then commenced giggling uncontrollably as Tanya looked around in mock surprise. \n\n\"I just heard a frog.\"\n\n\"Tootus marinas\" Beck replied through her laughter, \"The horny sea toad. They're very rare.\"\n\nTanya briefly tried to conjur a Tootus marinas of her own but to no avail. Squeezing out the last few drops, she looked around for toilet paper. Finishing at more or less the same time, Beck scooped up a handful of brine and washed herself off. \"Should have known,\" Tanya sighed, \"what use is dunny paper to a mermaid?\" After splashing herself she stood, flicking water from her fingertips. \"Guess I'd better go next door and wake up the birthday boy.\"\n\nBeck gathered her hair over one shoulder and commenced weaving it into a thick, platinum plait. \"So what's the plan, Tan?\"\n\n\"Well, I don't know about you, Becky-boo, but I'm starting to feel a tad peckish. What do you say? Let's rouse the boys and make them get us some lunch.\"\n\nWhile Beck headed down below, Tanya hopped nimbly from Beck's boat onto hers. Sneaking forward, Beck crept into Watson's cabin, all the way up forward, and eased the door open. He was dead to the world, lying naked on his side on the sheet-strewn V-berth. Easing onto the bed, Beck crawled up beside him until her face was level with his flaccid penis. Extending her tongue, she teased his pee-hole, then gently sucked his knob into her mouth.\n\n\"Roger? Rodge?\"\n\nTanya's voice was shrill with alarm and brought Watson precipitously awake. Beck shot up to her knees as Watson sat, blinking.\n\n\"ROGER?\"\n\nFootsteps thumped across Aurora's deck and Tanya stuck her head through the hatch. \"Roger? Are you down there?\"\n\nWatson was already making his way aft with Beck in hot pursuit. When he reached the saloon, Tanya was head and shoulders through the open hatchway, peering into the relative gloom. \"Damo? Is Roger with you?\"\n\nWatson shook his head. \"No. What's up?\"\n\n\"He's gone!\" Tanya huffed, then disappeared back the way she had come.\n\n\"Gone?\" Watson echoed. \"What do you mean gone?\"\n\n\"He's not on the boat!\" Tanya snapped, jumping ship. Leaning through the hatchway of her own vessel, she peered inside. \"Roger! Are you hiding down there? I don't think this is very funny you know.\"\n\nWatson followed anxiously. He'd ordered a stoned, drunken, hydrophobic lawyer into the water and now he was missing. His eye settled on a Champagne bottle, in a stainless steel bucket near the starboard helm, its label waterlogged from apparent immersion. Beck bounded from boat to boat and mounted the sixty-footer's superstructure. Standing by the mast she turned slowly around. \"There he is!\" she yelled, jumping up and down, pointing.\n\nWatson scrambled up beside her with Tanya close behind. \"Don't take your eyes off him, Chook!\"\n\n\"I won't.\" Beck's voice was calm but her belly was heaving with fright and excitement. She stood, arm extended, finger pointing towards the nearby island. One hundred meters away, Bragg's lily-white butt cheeks were rolling from side to side as he finned lazily over the coral. \n\n\"What the fuck is he up to?\" Tanya seethed quietly.\n\n\"He's snorkelling. \" Watson said dryly. \"What's it look like?\"\n\n\"Roger... and snorkelling... do not go together in the same sentence. Are you sure it's him?\"\n\nWatson cupped a hand to his mouth. \"RO...GERRRRRR!\"\n\nNo response. Tanya curled her hands into a loudspeaker and they both tried, to no avail. She dropped her hands. \"Have you got a gun, Damo?\"\n\n\"A gun? That's bit harsh.\"\n\n\"Just a warning shot. In the ass.\"\n\n\"I'll get him.\" Beck announced, already making her way aft. Tanya opened her mouth to intervene but Watson put a hand on her arm and shook his head. Hopping from one boat to the other, Beck collected a set of fins, mask and snorkel, then dropped onto the swim platform where she hastily geared up. Naked but for her submarine-accessories, she stood, took a bearing on the target, then stepped into the water and disappeared. When she next surfaced she was already fifty meters away, slightly off course. Turning on the spot to get her bearings, she duck-dived again and set off.",
        "The recovery mission took the best part of an hour. Instead of a direct return, Bragg and Beck gambolled in the great big blue, Beck leading Bragg into deeper and deeper water until he could barely follow her halfway down. By the time they reached the boats, Bragg trailing Beck, enjoying the view, Watson and Tanya had polished off a mug of tea each and were busy brewing a refill. Beck hauled out then turned to help Bragg up onto the swim platform. \"Amazing!\" he panted, \"That was just... bloody... amazing!\"\n\n\"Told you so.\" Beck lilted, and Watson told her to shoosh.\n\n\"Tan, Honey? Have you seen what's down there?\"\n\n\"No,\" Tanya replied frostily, \"I've been swimming around with my eyes shut. What the hell do you think you were playing at, Roger Bragg?\"\n\n\"That Champagne bottle fell overboard.\" Bragg explained a little breathlessly, busy pulling off his fins, barely heeding the abrasions where the rubber had worn through the skin. Beck stood patiently while Tanya towelled her hair before draping the fluffy white towel over the blonde's glistening shoulders. Tanya wrapped her arms around Beck, pressing her hot body against the girl's water-cooled skin. \"There was nothing else for it.\" Bragg sighed. \"I absolutely despise littering so I had no choice but to go in.\"\n\n\"Littering?\" Beck asked cagily, \"Really?\"\n\n\"Hate it!\" Bragg affirmed, \"With a vengeance! Ought to be punishable by death if you ask me. First offence only, after that get really tough. Anyway, you guys had all gone to bed, so I borrowed some of your gear and went in after it. And oh my god! Why didn't you tell me? That reef. Equal to Becky, it's probably the second-most stunning sight I've ever laid eyes on.\"\n\nTanya narrowed her eyes. \"The first being?\"\n\n\"You, of course, Darling.\" Bragg winked.\n\n\"Correct answer.\"\n\n\"I have never seen so much colour,\" Bragg waxed, \"so much life!\" And none of it even faintly impressed by his money or status. The myriad creatures he had seen offered not the slightest semblance of deference, no stooped shoulders or downcast eyes, nervous smiles or gushing platitudes, in fact none of the grovelling subservience he had always been used to. For the first time in his life he'd been treated with total indifference, and the feeling it gave him was breathtaking. \n\n\"You could have told me, Roger.\" Tanya admonished, as if dealing with an irresponsible child, \"I was about to call your executor.\"\n\n\"You're my executor.\"\n\n\"And don't you frikken' forget it. And what about those nice concrete boots I bought for your birthday? Why aren't you wearing those?\"\n\n\"Don't like the colour.\" Bragg smiled.\n\n\"Seriously, Roger. You scared the shit out of me.\"\n\n\"Oh,\" Bragg waved dismissively, \"don't be such a stick in the mud! You have to get out there, experience these things.\"\n\n\"We saw a couple of reefies.\" Beck piped up. \n\n\"You mean those little silver sharks?\" Bragg rolled his eyes. \"So streamlined, so graceful, and so bloody quick! I have never seen anything so beautiful.\" He gave Beck a nudge, \"Apart from you.\"\n\n\"They were girls, too, weren't they?\" Beck said, and Bragg nodded. \"Why, Rodge?\"\n\n\"Because they didn't have any... err... they didn't have...\" he snapped his fingers, \" they didn't have graspers!\"\n\n\"Claspers.\" Beck giggled, \"But close enough. You see what I mean, though? Girl sharks are sex-ayyy.\"\n\n\"See any sea snakes?\" Watson asked.\n\nBragg blinked. \"Sea ss... ss... snakes? You're kidding, right?\"\n\n\"Heaps.\" Beck nodded. \"At least two or three.\"\n\n\"We did?\"\n\n\"Those black and white banded ones? Remember?\"\n\n\"Oh?\" Bragg frowned. \"Oh, you the mean eels?\"\n\n\"They weren't eels.\" Beck shook her head, \"They were sea snakes. True snakes. Air-breathing reptiles, same as the ones on land.\"\n\nBragg's skin suddenly turned to gooseflesh. \"There's such a thing?\"\n\nBeck looked around quickly, unsure whether he was having her on. \"Of course. Those were sea kraits.\"\n\n\"Is that what they were?\" Bragg frowned. \"And here I was thinking they were eels.\"\n\nTanya thrust a towel into her husband's arms. \"Okay there, Rodge? You've gone a bit pale.\"\n\n\"Sea snakes.\" Bragg shook his head, \"I'll be damned. They're harmless, right?\"\n\nBeck opened her mouth to describe, in lurid detail, the potency of sea snake venom. Not wanting to see Bragg's newborn enthusiasm throttled at birth, Watson cut her off at the pass. \"Totally harmless, Rodge. Can't open their mouths underwater to bite. Though they do like to come right up and stare you straight in the eye.\"\n\n\"Well,\" Bragg replied a little uneasily, towelling his cock and balls dry, \"I guess you gotta respect that. A creature that's not afraid to look you right in the eye.\" Draping the towel around his neck, he swept his grumpy wife into a bear hug. \"Were you worried about me? Tanny?\"\n\n\"Just the contents of your will. Hell's bells, Rodge, you're freezing.\"\n\n\"I feel fantastic.\" he rubbed his hands together, \"What's for lunch?\"\n\n\"I was about to ask the same question.\" Tanya said flatly. \"Have you organised anything? Hmm? You haven't, have you? And what about our guests? I bet they're famished.\"\n\n\"Hey! It's my birthday, wench. I mean, you've got the whole naked slave thing happening but where's the food?\"\n\n\"Hey,\" Watson cut in, \"I've got an idea. Anyone up for barbequed cray?\"\n\n\"Really?\" Bragg asked, \"Have you got some?\"\n\nBeck already knew what was coming and squeezed through the crowd heading for the swim platform. Tanya caught on and fell in behind her. \"How many?\"\n\n\"Couple should do it.\"\n\n\"Tan, Honey?\" Bragg asked, \"What are you doing?\"\n\n\"Make way. Mermaid's apprentice coming through.\"\n\n\"But... what about sea snakes?\"\n\n\"If you prefer. Personally I'd rather have lobster.\"\n\nThe fishergirls slipped into the water and headed for the reef. Turning on Watson, Bragg offered him a big, white, orthodontically-perfect smile. \"Thanks for not outing me, mate. And you're right, it wasn't a good look. But you know what? Tossing that bottle overboard might have been the best thing I've ever done in my life. Seriously. I think I've just had an epiphany.\"\n\nMore like a big fat joint Watson inwardly smirked, not to mention hot sex with a little blonde goddess. \"You shouldn't take those, you know.\" he said, \"They're bad for your heart.\"\n\nThe joke sailed harmlessly over Bragg's head. \"Look,\" he said, running a hand through his salt-water tousled hair, \"I don't want to go sounding corny and all, but... you know... I've just turned forty today, and feels like I've started a whole new life. Beck, the boat, the sex, the dope, and now the water. I mean, what a gift! I've even seen my wife in a brand new light. This discovery...\" he made air commas, \"has been a long time coming, and it didn't happen a minute too soon. And you know what? It's all thanks to you.\"\n\nBragg held out a well-manicured, prune skinned hand. Watson looked for an escape route without actually moving his eyes but reciprocation was almost a reflex and they shook, two nude men standing in the cockpit of a million dollar yacht, on a reef in the Pacific, while their naked female partners foraged for seafood. Might come in handy as a storyline one day. \n\n\"Breaking down out here was no accident, Damon.\" Bragg said dramatically.\n\n\"No.\" Watson shook his head, \"There's no such thing.\"\n\n\"It was meant to be.\"\n\n\"Uh huh. The only thing that can happen is what does happen. There's a reason for everything.\"\n\nBragg shook his head, eyes misting over. \"Verily, you are a sage.\"\n\n\"What do you say?\" Watson asked, looking around, feeling distinctly uncomfortable. \"How about a quick pre-barbie beer?\"\n\n\"I think it's the law, isn't it?\"\n\n\"Out here, Rodge, we make our own law.\"\n\n\"Err... I don't suppose you've got any of that dope handy?\"\n\nWatson pursed his lips. \"Probably not. One a day, max. That's Beck's Law.\"\n\nBragg didn't bat an eyelid. \"Can't argue with that. Come on, Damo. Beers are on you.\"\n\n* * *\n\nIt took the huntresses forty-five minutes to scout up some prey, one decent sized animal and a whopper. While the preferred method was to anesthetize them in the freezer before execution, time was of the essence and Watson made Beck look away as he pithed them with a diving knife. They went onto the barbeque whole, and while Beck helped Tanya rustle up a salad, the males took care of the men-only task of tending the barbeque.\n\nA meal fit for kings and princesses. The crays' legs first, succulent tidbits to keep the appetite piqued while the bodies were cooking through. Once they were cool enough to be handled, the crayfish were tailed and divided and cut up into bite-sized pieces. It was still Bragg's birthday, so Beck sat with him, totally bare, mashed up hard against his flank as they ate fresh crayfish and sipped chilled French Champagne. As Bragg began to fill, competing appetites began swapping priority and it wasn't long before he was harbouring the makings of a first-class erection. \n\nThe afternoon mellowed into early evening. While Tanya and Watson cleaned up, Beck carried the remains of the two eviscerated crays solemnly to the stern where she prepared to commit them to a watery grave. Bragg looked at her, frowning. \"Beck, Honey. Isn't that littering?\"\n\nBeck looked first at the crayfish remains then at Bragg. Was he pulling her leg again? She shook her head. \"No.\"\n\n\"But if someone threw a bottle overboard?\"\n\n\"Well duhh, that would be littering.\"\n\n\"What's the difference?\"\n\n\"Well...\" Beck blinked in confusion, \"what sort of animal eats bottles?\"\n\nThe concept gradually resolved in Bragg's head- the difference between rubbish and recycling. \"Good point.\" he nodded. \"Will something eat these lobster shells?\"\n\n\"Of course.\" Beck frowned, \"Fish. Crabs. Echinoderms.\"\n\n\"Ek... Ekkie... What's?\"\n\n\"Echinoderms. You know, starfish, sea urchins.\"\n\n\"Oh, right, right.\"\n\n\"And algae and worms and shellfish.\"\n\n\"So young and yet so wise.\" Bragg sighed. \"How do you do it?\"\n\n\"Simple.\" Beck hefted a shoulder. \"I just ask Damon.\"\n\n\"What a guy.\" Bragg said with a reverent shake of the head, \"Here. Mind if I help?\"\n\nSide by side they crouched on the stern, tossing crayfish rubble into the oily swell. As if to prove Beck's point, a huge fish raced up to the surface, seized a big chunk of thorax and disappeared with a splash, trailing debris like an airplane going down. Bragg sat staring at the water, open-mouthed, while Beck looked at him with a big, self-satisfied smile. He looked at her. \"Did you see that?\"\n\nBeck nodded. \"Caranx Ignobilis. Giant trevalley. \"\n\nBragg rocked back on his haunches, his pendulous balls almost touching the deck. \"Now you're just showing off. Say it again?\"\n\n\"Caranx Ignobilis,\" Beck replied patiently, \"one of my faves. Though we do sort of eat them once in a while. Of course I make sure I always say thanks.\"\n\n\"To whom?\" Bragg snorted, \"The fish?\"\n\n\"Of course.\" Beck replied matter-of-factly. \"And the sea.\"\n\nTanya finished a quick wash-up while Watson ducked next door, returning a few moments later with a hastily rolled racehorse. Beck washed her hands in the sea off the back of the boat and stood, flicking drops from her fingertips. Clapping eyes on the thin cigarette she pointed, and full of righteous indignation declared, \"Another joint? You're only allowed one a day, Damon Watson, and you've already had two.\"\n\n\"Who are you? The dope police?\"\n\n\"No, I'm from the Cancer Council. Smoke too much you'll get cancer and die.\"\n\n\"Then you get an early inheritance.\" Watson shrugged. \"Come on, Chook, it's Roger's birthday.\"\n\nBragg raised his hands. \"Hey, I don't want to get you into to trouble, Damo.\" Only yesterday, Watson's welfare would have been none of his concern. \n\nTanya emerged out of the companionway. \"Champers, anyone?\"\n\n\"A little sundowner?\" Watson rubbed his hands. \"Don't mind if I do.\"\n\n\"What a life.\" Bragg chuckled with a shake of the head.\n\n\"Meh,\" Watson shrugged, \"someone's gotta do it.\"\n\nTanya passed some tumblers around and they sat back, watching the white-hot celestial fusion reactor transmute into shimmering gold. Watson raised his drink. \"Thanks for another day, Sun.\"\n\nThe others raised their plastic cups in turn as the sun settled on the horizon like a huge, golden balloon. \"To a day that will live forever,\" Bragg intoned, \"but definitely not in infamy.\"\n\n\"What's the opposite of infamy?\" Tanya mused out loud.\n\n\"Famy?\" Bragg suggested. \"I don't know. Ask the wordsmith.\"\n\nBeck cuddled up beside Watson and he gave her a nudge. Taking the hint, she finished her Champagne, then set the flute carefully down and stood. Deliberately sweeping her hair back, she padded across the cockpit to where Bragg was sitting back, nursing his drink. Bragg looked at Beck. Tanya looked at Watson and he gave her a wink. \"Err... what's up, Beck?\" Bragg asked hopefully, as his wife got to her feet and joined Watson in the spectator gallery.\n\n\"Umm... It's your birthday till midnight.\" Beck explained, wrapping a small hand around Bragg's instant erection. \"We can still fuck, if you want to.\"\n\n\"If I want to?\" Bragg cried. \"Of course I want to. You sure you're not too... you know... worn out?\"\n\n\"A little.\" Beck admitted. \"But if you just take it easy I'll be okay.\"\n\n\"Damo?\"\n\nWatson shrugged. \"Like I said, it's all up to her.\"\n\nBragg reached between Beck's legs and ploughed her slit with a fingertip to plough her slit. She was wet. Then again she always was. She shivered as his finger penetrated her molten interior. \"Mmm...\" she cooed, slowly jacking his meat, \"that feels nice.\" \n\nBragg pulled her face to his and they swapped a long, wet kiss, while Tanya leant into Watson and squeezed his hand. \"Guys. I don't know about you, but I reckon we should all adjourn to the boudoir. The light's better inside and there's less of a breeze.\" \n\nShe was right. Now the sun had taken its leave, the breeze that had kept them so comfortable all day had turned suddenly cool.\n\n\"Ding ding!\" Watson hailed, \"Ah-ladieeees and ah-gentlemrrrr, a round threeee.\"\n\n\"And a bit.\" Tanya beamed.\n\n\"Oh really?\" Watson arched his eyebrows, \"What did we miss?\"\n\nShe and Beck exchanged a knowing glance. \"Chick stuff.\" Tanya smiled sweetly, \"Isn't that right, Beck?\"\n\nBeck nodded with a twinkle in her eye.\n\n\"Maybe we can show them later?\" Tanya winked.\n\n\"We can show them now if you like.\"\n\n\"Naww, look at poor old Roger. If you don't get to work on that hard-on soon his poor little brain will starve of oxygen. Come on gang, last one in bed is a rotten egg.\"\n\nWatson cranked up the sixty-footer's engine to top up the house batteries, while the other three made a beeline for the huge aft cabin. By the time he joined them, Beck was on her back between the neighbours, legs spread, having her tits sucked. Bragg's finger was back in her pussy, knuckle deep, his thumb gently massaging her clit. Tanya looked up as he walked in and patted the mattress. \"There you are. Everything ship-shape, Captain my Captain?\"\n\nWatson knelt on the side of the bed then shuffled over to her, his stiff cock waving a greeting. \"Sure does look like it.\"\n\nTanya's hungry mouth engulfed him, all the way to the depths of her throat, and he closed his eyes. Bragg, meanwhile was deep-kissing Beck, his finger and thumb rapidly working her up to another hip-thrusting orgasm. Grabbing his wrist, she ground herself against him, riding his finger. Her free hand found his dick and she began furiously jacking him, as the orgasm worked its way up inside her body. Moments later, in the aftermath, she lay blinking at the ceiling, her chest bellowing, belly heaving. \n\n\"How many is that, Beck?\" Watson asked.\n\nBeck held up eight fingers.\n\n\"What's the record, just out of interest?\" Bragg asked.\n\n\"Twelve, isn't it, Chook?\"\n\n\"Thirteen, including the one I gave myself.\"\n\n\"Well, there you go.\" Bragg announced, \"We have ourselves a challenge.\"\n\n\"Can I make you cum?\" Beck asked Bragg.\n\n\"Without even trying.\"\n\n\"I mean now. Would you like to do me?\"\n\n\"Yes.\" Bragg nodded slowly and emphatically. \"Yes I would.\"\n\n\"Okay. How?\"\n\n\"Well... I was thinking, we haven't done it doggy-style yet.\"\n\nBeck rolled onto all fours without further ado, and stuck her taut, tanned tail in the air. \"Come on Roger, gimme.\"\n\n\"Tan?\" Watson asked.\n\n\"How do you want me? Fried, poached or scrambled?\"\n\n\"Why don't I do you doggy as well? You and Beck can go face to face and keep each other company.\"\n\n\"Brilliant idea.\"\n\nThere was a quick reshuffle and Tanya got on her hands and knees within kissing distance of Beck. Sensing Bragg taking up position behind her, the diminutive blonde looked over her shoulder. \"I'm pretty wet already, but if you spread my pussy lips and put a little spit on me.\"\n\n\"Jesus Christ!\" Bragg rolled his eyes. \"Are you for real?\"\n\n\"What do you mean?\" Beck frowned.\n\n\"I think he's in love.\" Tanya tittered.\n\n\"Last of the great romantics, eh Beck?\" Watson grunted.\n\n\"Fucking sex goddess, more like it.\" Bragg rasped, unable to believe his incredible luck. Bending, he parted Beck's plump outer pussy lips with his thumbs, stretching her open to reveal the tiny, inviting tunnel to paradise. Conjuring up some saliva, he carefully drizzled a long, silvery rope of frothy spit into Beck's waiting entrance. \n\n\"Oooo...\" she wiggled her bottom, giggling. \"That tickles.\"\n\nBragg stuck his tongue in her for good measure, his nose brushing the spicy pink pucker of her butthole. She closed her eyes, savouring the feeling of the long, prehensile appendage exploring her insides. Bragg pulled out. \"God you taste good.\"\n\n\"God you feel good.\"\n\nWatson ran the head of his penis up and down Tanya's pouting slit once or twice before easing into her, driving all the way to the hilt. He paused for a moment, revelling in the sensation of being engulfed by her hot, slippery insides, her flesh almost liquid, tight and clinging. No matter how many times he had felt it before, and no matter how many times- Universe willing- he would feel it again, the feeling of entering a female's body on that first stroke would never cease to be a little miracle. Looking up, he saw his partner's husband, a short distance away, about to experience a little miracle of his own.\n\nBeck tossed her head, flicking her hair to one side, then lay her cheek on crossed hands. Pushing her abdomen down, she rotated her hips, elevating the plump pink target for Bragg's convenience. Hands resting on the resilient globes of her small, perfect butt, he licked his lips, watching the tip of his raging cock, bouncing with each pounding heartbeat, collide with Beck's waiting furrow. Contact. Her pussy lips mushed open as Bragg's cock head rode up the slippery vestibule then disappeared slowly, bit by bit, into her body. Beck wiggled her hips, pushing back as she did, until Bragg popped through the outer constriction. She gasped, waiting for the first rush of the thrill to run its course, before easing onto him, slowly and deliberately impaling herself.\n\nWatson's eyes were glued to the scene in front of him. Tanya's perfect pear-shaped butt, her slender, muscular back and flexible spine, her dark-haired head resting on the bed next to Beck's. And Beck, eyes closed, gently moaning, her spine curving upwards between ridges of muscle, ribs heaving, the small of her Venus-dimpled back broadening into the swell of her ass. Kneeling behind her, a well-built male was staring wide-eyed at the sight of his impressive meat, disappearing into the body of the beautiful young girl. \"Has anyone got a camera?\" Watson grunted, taking up a slow, sensual rhythm for maximum depth and sensation.\n\n\"Can't talk.\" Bragg gasped. \"Fucking.\" He'd gone as deep into Beck's lower abdomen as he dared, about two-thirds of his length. Any more, he figured, and he'd choke her. \n\nBeck reached back between her legs and gripped Bragg's cock. Fingers and thumb not quite circling his girth, she jammed him all the way in until he nudged hard up against her muscle walls. \"Oh my... god!\" she panted, \"Roger, you're so huge.\"",
        "\"So... tight!\" Bragg gasped, head back, eyes closed, trying to absorb every last atom of the sensation.\n\n\"Tan?\" Watson asked.\n\n\"Fucking beautiful!\" she told the sheets.\n\n\"You can go faster, Roger.\" Beck urged. Bragg picked up the pace a little, not too much, fearing a premature end to the fun.\n\nBeck got the first inkling of that feeling, the one that started up near her solar plexus, then charged down into her groin like massed cavalry. She suddenly felt like she'd just peed herself as her hips took off on their own, twisting and thrusting. They'd only been at it for four or five minutes but she was already flirting with an orgasm. Just as she was about to call a quick cease-fire, Bragg beat her to it. \n\n\"Stop, Becky, stop.\" He squeezed her ass cheeks and changed his rhythm, going with her to avoid stimulation. Willing her lower abdomen into temporary quiescence, Beck raised her head to watch Tanya.\n\nPushing up, Tanya leant forward and gave Beck a deep, hungry kiss while Watson, head back, teeth clenched, pounded into her, each impact sending ripples through her butt. Beck reached under Tanya's chest and fondled her jiggling breasts, squeezing and pinching and tweaking her nipples. The effect was instantaneous. Fingers savaging her clit, Tanya threw her head back and uttered a long, guttural growl, showering the bed with ejaculate. Her insides contracted, trying to milk semen from the cock buried inside her, squeezing and sucking, all in vain. Watson was nowhere near the edge himself, but was happy to push Tanya over the cliff.\n\n\"Stop!\" Tanya cried, \"Stop.\" Her head flopped onto the bed at long last. \"Another orgasm, I can't believe it. God dammit, Damo, that was fantastic! You gonna cum, Handsome?\"\n\n\"Not just yet.\" Watson huffed, dripping sweat.\n\n\"Anything I can do?\"\n\n\"I suspect so, but let's just watch the show for a while.\"\n\nTanya looked up through a veil of dark hair. \"Right, you two,\" she panted, still caressing her clit, \"last one... who cums... is a rotten... egg.\"\n\nBragg's wide eyes tracked away from his depleted wife, back to the body in which he was so tightly lodged. From Beck's hair, strewn like golden seaweed over a burgundy beach, to her ribbed, heaving torso, from her amber, sweat-sheened skin to the indescribable sight of her distended pink pussy, the image before him was just overpowering. He ran his big hands from her butt cheeks up her back, his fingertips bumping over her ribs. Delving beneath her, he massaged her breasts, rolling her nipples between fingers and thumbs. \n\nHead down, softly groaning, Beck drove herself onto him, slowly at first, feeling every last millimeter of Bragg's penetration. It was a sensation so irresistible, so compelling, that within the space of a few short minutes she was out of control. Whimpering and bucking, thrusting her hips, she was utterly full but still hungry for more. Watson pulled out of Tanya and shuffled towards Beck on his knees, as she lifted her face and opened her mouth. \n\nBetween the feel of Beck's body engulfing two thirds of his prick, and the sight of her sucking his wife's juices off her old man's cock, it was all too much for Bragg. He ejaculated, pulling out to the base of his knob, then slamming into her again with his prick jetting semen. His eyes glazed over as he growled through clenched teeth, shuddering with every powerful, spurting thrust. \"Holy...\" Bragg gasped, as Beck playfully wiggled her hips.\n\n\"...Fuck!\"\n\nBeck spat out Watson's cock and looked over her shoulder at Bragg. He was gripping her butt-cheeks, blinking at the sight of his penis, glistening with cum, still twitching and spasming in the grips of her unbelievably tight hole. \"Was that okay?\" she asked sweetly.\n\n\"It was...\" Bragg shook his head, trying in vain to pin down the appropriate term, \"fucking... indescribable.\"\n\nBeck used some of her new found skills, the ones she had recently picked up from Tanya, to massage Bragg's cock while she slowly inched herself off, until the base of his knob hit the exit. There it remained for a moment, trapped behind a tight ring of muscle, still throbbing and oozing. Locking eyes with Bragg, she gave the dazed male a cheeky smile. Rocking forward and squeezing at the same time, she forced him out with a little wet 'pop'. Semen spurted out of her as her insides contracted, a runnel of cum slithering down her leg.\n\nStill tingling in the aftermath, Beck rolled over onto her bottom. \"Did you cum, Damon?\"\n\nWatson shook his head. \"Not quite. What about you?\"\n\nBeck worked her shoulders. \"Not quite. Would you like to?\"\n\n\"Would you?\"\n\nBeck flopped onto her back in reply. Her legs fell open, exposing a rosy, overstuffed slit that was busy bubbling cum into her ass-crack. It hadn't quite closed up completely, the tiny inner lips still open like the petals of a little pink flower. Slapping her chest, she flung her arms out, waiting patiently while Watson shuffled between her spread legs. Arms outstretched, taking his weight, Watson looked down, lowering his hips, guiding his iron-bar erection towards the hand-span gap between Beck's legs. She lay back, waiting, letting him do the work, letting him find the target. It took no effort on either part. His slick, leaking knob disappeared into her body, finding its way by practice and instinct into the exquisite embrace of Beck's wet sex.\n\nBeck arched her back as Watson pushed into her, his cock displacing Bragg's semen with a quiet squelch. He lowered himself onto his elbows, until his abdomen was resting on Beck, his hips slowly thrusting. And they both knew instantly this was where he belonged, deep in the grip of that familiar velvet vice. Beck brought her knees up, clenching his flanks, then raised her arms and draped them around his neck. \"Oh Dommy,\" she whispered, \"I love you.\"\n\n\"Becky. I adore you.\"\n\n\"Put your weight on me?\"\n\nWatson transferred more of his weight onto Beck's fragile frame. The girl grabbed two handfuls of his butt-cheeks, her heels digging in to the back of his thighs. \"Oh fuck me, Dommy. Fuck me.\"\n\nTheir hosts were up on their knees, either side of them, watching the action. Bragg was slowly jacking himself while Tanya was strumming her clit, one or two orgasms short of total exhaustion. Beck was all but invisible under Watson's bulk, just her hands, kneading his ass, her legs, locked around his waist, and her hair, spread over the deep purple sheets in silken blonde skeins. \n\nBeck elevated her hips, trying to get as much of her old man into her as she could. Sometimes, after some particularly vigorous workout, she could take his entire length without any lingering discomfort. And so it was tonight. His blunt, fleshy battering ram squeezed into the tiny tight crevice, while his swinging balls slapped her cum-frothed butt. Beck was whimpering, her head tossing side to side, her hips twisting with each belly-busting thrust. Rising slightly, head down, Watson peered down the length of her body, till his eyes reached the base of her abdomen. Eyes wide, he stared at his shaft plunging into her, each stroke bringing her closer to orgasm.\n\nThey had done this so many times that their timing was perfect. While Tanya brought herself to another squirting climax, Watson led Beck, thrust-by-thrust, stroke-by-stroke, to the threshold of ecstasy, high on the peaks of total abandon. Cumming with Bragg had been fun, but nothing could hold a candle to this, to the blinding, time-stopping, toe-curling bliss of total committment. Raising her hips, driving herself onto him, Beck uttered a cry that that deepened into a growl. \"Ffff... fuck... meeeeee... ahhhhh...\" \n\nWell he was doing his best. Watson's own climax was gripping his guts, the load of sperm-laden fluid charging out of his balls, racing towards the girls waiting insides. The first spurt filled her uterus, the second filled her pussy to overflowing. Craning her neck, Beck bit Watson hard on the chest, her pelvis gyrating as he drove himself into her.\n\nAnd as suddenly as it started it was over. Beck's arms fell to the sides and her legs flopped onto the bed. Still deep inside her, Watson rolled his hips, grinding his erection into her flesh, revelling in the feel of her twitching contractions, her membranes swimming in a hot flood of body fluid. Tanya fell onto the mattress beside them then rolled on her back, hand clamped over her pussy, apparently unconscious. But Bragg, god bless him, was still furiously jacking, and when he jerked his head at Watson, he rolled aside.\n\n\"Just... had to...\" a token squirt of watery semen shot out of his cock and splotched onto Beck's tangled hair, \"do... this. Hope you... don't... mind?\"\n\nBeck closed her eyes and turned away, giggling as a second jet hit her square in the eye. \"I love cum in my hair. What do you think keeps it so shiny?\"\n\n\"Jeez, Rodge,\" Watson said, \"you're a trooper. Where's it all coming from?\"\n\nGood question. Bragg had unleashed enough sperm during the day to repopulate the planet several times over, with further bustling outposts on Mars and the Moon. Way down in the engine-rooms of his balls, a vast army of ribosomes was labouring away, reading off strips of RNA, stitching amino acids into vast protein tapestries, while genes reshuffled and cells divided. The sperm they created, along with vital support fluid, was soon to be pumped deep into the body cavity of a gorgeous young girl, or his orgasm-screaming wife, or swallowed or sprayed over hair, face and breasts. It was a never-ending and largely thankless molecular task, given that none of the swarming billions would spark a new life.\n\nSlipping an arm under Beck's shoulders, Watson rolled over, taking her with him, his meat still buried as deep as it would go, convulsing every now and again the wake of his mind-bending orgasm. Her head on his chest, Beck heaved a huge, trembling sigh. Eyes closed she settled, smacking her lips, with her belly full of throbbing cock and the slippery swill of two men's semen. She and Watson would often lie like this, drifting in and out of consciousness, while Beck's tight body gradually disgorged the old man's softening penis. It was a comfort thing, a bonding.\n\nBragg hit the mattress beside Tanya, who was lying on her side, gently stroking Beck's leg. \"Jeez.\" the woman croaked, \"I never thought I'd hear myself say this, but I think I'm all orgasmed out.\"\n\n\"What time is it?\" Bragg asked the ceiling. No one relied.\n\nTanya yawned. \"Did anyone put the cat out?\"\n\n\"Beck?\" Watson asked, \"Are you going to sleep?\"\n\nThe girl shook her head.\n\n\"Well don't. Lest just have a little breather then it's time to go home.\"\n\nONE FOR THE ROAD\n\nWatson woke but for a moment didn't open his eyes. Instead, he patted the mattress beside him, searching for the girl, knowing as he did she was already gone. Exactly on cue, someone jumped into the cockpit and footsteps hurried forward to the companionway. A few second's silence, then 'thud!', Beck making her standard arrival, dropping from the cockpit into the saloon. Watson heaved a breath. Eyes still closed, he yelled, \"Becky!\"\n\nThe girl stampeded into the forward cabin, breathing hard. Struggling upright, Watson ran a hand across his close-cropped pate and opened his eyes. Too much Champagne and too many joints, way too much fun the night before, and now he was paying the price with a dull headache and the slightly queasy feeling of a mistreated liver.\n\n\"You awake?\"\n\nWatson looked himself over. \"Hard to tell.\" He checked the girl for signs of recent activity, but her skin was streaked and beaded with water and her hair was plastered flat to her scalp. \"Been out bonking the neighbours again?\"\n\n\"Nuh.\" Beck shook her head, \"They said we couldn't do it until you said it was okay.\"\n\n\"What have you been up to?\"\n\nBeck was swinging off the door, one leg hitched up, revealing her treasures. \"Snorkelling,\" she replied, sounding offhand, \"What else?\"\n\nWhat else indeed? \"You and Tan?\"\n\n\"All of us.\"\n\n\"Roger as well?\" Watson asked, taken aback.\n\n\"He was first in.\" Beck nodded, her blue eyes big and disarming.\n\n\"That poor guy. He's never going to be the same again.\"\n\n\"That's exactly what he said.\" Beck replied with a dimpled smile. \"What's he mean?\"\n\nSlinging his legs off the bed, Watson patted his knee. Flicking her hair back, Beck padded over and parked her naked body between his thighs. Her skin was cold but she felt vibrant, alive. \"His frame of reference has just been given a great big jolt.\"\n\n\"How come?\"\n\n\"Well,\" the old man replied patiently, \"that's what happens when a dream turns into reality. One like that especially.\"\n\n\"Is that a good thing or bad? I mean for Rodge?\"\n\nWatson shrugged. \"That's up to him.\"\n\n\"Well,\" Beck said, looking over her shoulder at the cabin door, \"would it be okay?\"\n\n\"Would what be okay?\"\n\n\"If I bonked the neighbours?\"\n\n\"What? It was supposed to be a birthday present, Becky. His birthday was yesterday.\"\n\n\"We..ell..\" Beck hedged, \"you know how we always use UTC? Well according to the GPS it's still yesterday.\"\n\nTechnically, she was right.\n\nShe stuck her bottom lip out. \"Please, Dommy? Just one more fuck before they go? Roger said he'd love one.\"\n\n\"They go? Where?\"\n\n\"Oh, I didn't tell you? There's a helicopter on the way. With a hire crew. Tanya and Rodge are going back in the chopper and the crew's sailing the boat back home.\"\n\n\"A helicopter? Are you serious?\"\n\n\"Uh huh. It'll be here in a couple of hours.\"\n\n\"What's the time now?\"\n\nBeck raised her eyes to the porthole over Watson's bed. \"About nine.\"\n\n\"How long you been in the water?\"\n\n\"Hour or so.\" Beck shrugged. She started giggling.\"Should have seen it. I took them over the drop-off. Silly man tried to stick his dick in Tan underwater, but they ran out of breath and just about drowned. Then Rodge swam along on his back while I jacked him off.\"\n\n\"I thought you said you weren't bonking?\"\n\n\"That's not bonking, it was just a little tug.\" She dissolved into giggles again. \"His poor old cock was sticking straight up like a mast. In the end he had to tell me to stop. He said he didn't want to waste it in case we were allowed to... you know...\"\n\n\"Fuck?\"\n\n\"Uh huh. So can we?\"\n\nThere hardly seemed any percentage in putting a stop to it now. \"Is Tanya cool with it?\"\n\n\"Tanya's cool with everything. In fact Tanya's probably the coolest lady on the face of the Earth.\"\n\n\"Did Roger enjoy the snorkel, or was he just out there because you were?\"\n\n\"Rodge was first in. He really loves it now.\"\n\nWatson rubbed his chin. \"Well... I guess... if he's really seen the light.\"\n\nBeck had no idea what particular light that might be, but understood her old man well enough to know when he was weakening. \"Does that mean yes?\"\n\nWatson hefted a shoulder. \"I suppose. A quick one, though, just to say farewell. You're not feeling sore?\"\n\n\"Nope.\"\n\n\"I guess one more won't hurt.\"\n\nBeck cupped his face in her hands. \"Awesome, Dommy. Thanks. I just have to have a quick shower. Are you coming?\"\n\n\"Not as we speak.\"\n\n\"Next door, silly.\"\n\nWatson shook his head. \"I'd better get everything ship-shape down here. You be alright on your own?\"\n\n\"Naww... don't want to watch?\"\n\n\"No,\" Watson lied, \"I don't want to get stuck into it again and miss the tide.\"\n\nBeck draped her arms around the old man's neck. \"You don't mind? Just one more little play before they disappear? I'll be quick. Promise.\"\n\n\"Hope you won't have trouble letting go.\"\n\n\"Of Roger?\" Beck demanded and Watson nodded. \"No way. I like Rodge, don't get me wrong, but if I'm gonna miss anyone it's Tan.\"\n\n\"Fair enough.\" Watson ruffled Beck's wet hair. \"Go and have yourself a hot shower, Sweetheart. You're freezing.\"\n\n\"On my way. What do I tell them if they ask were you are?\"\n\n\"Tell 'em I'm doing secret sailing business.\"\n\nBeck pulled the old man's face to hers. Their mouths fused in a long, tongue-twisting kiss that left Watson harbouring the best part of an erection. \"Thanks, Dommy.\" she said breathlessly when they broke off. \"You're the best!\"\n\n\"Still?\" Watson asked ruefully.\n\n\"For ever!\" Beck affirmed. \"I've had so much fun over the last couple of days.\"\n\n\"Don't get too carried away. It'll be back to boring old me pretty soon.\"\n\n\"You're not old,\" Beck scolded, \"you're not boring, and there's no 'back' because I haven't been anywhere anyway. Okay? I'll be back in a minute,\" she assured him in a masterstroke of contradiction, \"then you're all mine.\"\n\nWatson was flashing up the gas stove when Beck emerged from a hasty hot shower, towelling her hair into a tousled blonde mane. She was naked, of course, her skin aglow from a brisk scrubbing and she was smiling from ear to ear. Like a kid let loose with the family car for the first time, she was itching to go but doing her best to look like she wasn't rushing it. \"Cuppa, Beck?\" Watson teased, nodding at the dented steel kettle.\n\n\"Umm... would it be okay if I went next door? The helicopter'll be here soon and they'll have to go.\"\n\n\"Don't go worrying about the helicopter, Missy. The tide's on the turn as well and we are going to be on it. A farewell fuck, and that's that!\"\n\n\"I know, I know.\" Beck raised her arms and did a pirouette. \"How do I look?\"\n\n\"Fuckable. Now shoo.\"\n\n\"Sure you don't want to come over?\"\n\nWatson shook his head. Part of him did, truth be known, but on the other hand he didn't want to be there if Bragg got too mushy. He liked the guy, to the extent he'd let him have sex with his beloved girl, but only if it also meant access to his wife. As far as what Bragg represented, however... divorce court had left the old man with a deep and abiding hatred of lawyers and Bragg's ostentatious wealth was especially galling. It had taken Watson years of scrimping and saving to afford his sturdy yet humble forty-five footer, and here was Bragg in a million dollar yacht he'd bought on a whim. No, the last thing he wanted was to see Bragg crying over the unobtainable, or worse, gushing with hollow gratitude.\n\nBesides, with a bit of luck his randy wife would take the hint and come on over. The group thing was fun as far as it went, but if there was an opportunity to hammer that gorgeous creature senseless without an audience.\n\n\"Not right now.\" Watson shook his head. \"Have to check the engine, and it's gonna take a while to get this mess all squared away. Why don't you buzz off and have some fun?\"\n\nBeck threw her arms around Watson's neck and treated him to a quick pash. Spitting him out, she scaled the companionway, her round, resilient butt-cheeks quivering. In a few minutes from now she would impaling herself on her new toy and the thought of having her belly filled was giving her butterflies. Almost breathless with anticipation, she jumped into the cockpit and, timing the relative heave of the two tethered yachts, skipped nimbly from Aurora onto the sixty-footer's deck. Stepping down into the cockpit, she leant through the open hatchway. \"Anybody home?\"\n\n\"Come on down, Darling.\" Tanya called.\n\nBeck climbed down, facing outwards. Standing at the foot of the companionway, Tanya and her husband watched the honey-skinned angel slowly descend. Her feet appeared first, with their orange-painted toenails, then her bony shins and lean calves. Her knobbly knees and above them her thighs, her quad muscles flexing under her taut, goose-bumped skin. And then the sweetest, smoothest, plumpest, pink-slitted mound this side of Armageddon. Flat belly, laddered ribs, tiny breasts with stiff pink nipples. Arms up, exposing her milky white armpits, Beck swung off the overhead then dropped the last couple of feet, landing with the featherweight grace of a cat. She stood, brushing back her still damp hair smiling at the neighbours each in turn. \n\nTanya was the first to shake herself out of her reverie. \"Where's the old boy?\"\n\n\"Umm..\" Beck hedged, \"he's getting the ship shaped and stuff.\"",
        "\"Is he coming over?\"\n\nBeck shook her head. \"Probably not.\"\n\nBragg couldn't help himself. \"Did he say we could...?\"\n\nTanya elbowed him but Beck stepped up and wrapped her arms around his waist by way of reply. He was naked, naturally, and his massive erection, sandwiched between them, reached halfway up her chest. Bragg's breathing had quickened to a borderline pant and he was sweating.\n\n\"You sure it's okay?\" Tanya asked, hands on Beck's shoulders, pressing her pubic mound into Beck's lower back.\n\n\"Uh huh.\" Beck smiled, \"If we're quick. You see, according to UTC it's still Roger's birthday.\"\n\n\"Who is this UTC and how much do I owe him?\" Bragg said.\n\n\"Silly Rodge.\" Beck laughed. \"Universal time coordinated. They used to call it GMT, based on London. It's still yesterday there.\" \n\n\"Who's a lucky boy then?\" Tanya winked.\n\nBragg slid his hands down Beck's body and Tanya stepped back, watching his big hands kneading Beck's ass, spreading her cheeks. \"The luckiest boy in the whole goddam universe.\" he rumbled, while a little voice inside his head said, 'but not as lucky as that lucky bastard next door.'\n\n\"What time's that chopper due?\" Tanya asked by way of a hint. Time and tide wait for no man, nor did helicopters.\n\nBragg slid his hands under Beck's armpits and hoisted her aloft. Wrapping her legs around him, she snuggled her head into his shoulder as Tanya's finger traced the irresistible wet furrow of her undercarriage. Goosebumps sprang up out of nowhere on the girl's skin and she shivered. \"That's nice.\" she sighed dreamily, as Tanya cupped her pussy in the palm of one hand. \n\n\"I might pop next door for a minute or two.\" Tanya said, extracting her finger. \"Think you can handle Rodge all on your own?\"\n\n\"You don't want to play?\" Beck asked. \"I thought we might try what we did yesterday.\n\n\"Sorry Darling, I don't think there's time. If you and Rodge want to... you know.\"\n\nHead on Bragg's shoulder, Beck gave Tanya a nod. \"Okay.\"\n\nTanya patted her husband on the arm. \"Make the most of it, Mister. Birthdays come but once a year.\"\n\n\"I will.\" Bragg replied, then leant into Tanya and gave her a kiss. \"This is an incredible gift, darling girl. I'll never forget it.\"\n\nTurning, her husband carried the girl aft to the big bed in the sixty-footer's plush stateroom. The boat was gently rocking in the gathering seas, and Bragg swayed on his feet, absorbing the motion with his knees like a pro. Standing at the end of the bed, he looked down on the naked girl as she slowly brought her knees up then flopped them to the sides. The tip of a finger between her teeth, Beck stroked her chest, then ran her free hand over her belly and fingered her slit. \n\nAlready breathing hard, Bragg parked one knee on the bed. \"How would you like it?\"\n\n\"Any way you like.\" Beck replied, reaching out. \n\n\"Really?\" Bragg said, kneeling between her legs, taking in every last detail of the stunning sight. \"Well you know what I really want?\"\n\nBeck shook her head.\n\n\"To go on top.\" \n\nBragg knew that this was this was her and Watson's favourite position, and she knew he knew. \"You sure?\" she said, arching an eyebrow. \"Wouldn't rather me on top? Or doggy? Or sideways? Or with me sitting in your lap? Or-\"\n\n\"No,\" Bragg raised a hand, \"I mean yes, I'd love to do all of those. But the chopper will be here soon and there just isn't time. There's no way of knowing if this will ever happen again. I want to be as close to you, as deep inside your body as I can physically get. If there's one thing you've taught me over the past couple of days, it's to make the most of every moment.\"\n\nBragg's iron-bar penis was quivering in anticipation, straining at the leash, a thin string of crystal clear pre-cum dangling from the tip. Kneeling between Beck's spread legs, he lowered his hips, inch by inch, until his belly touched hers. Knees up, feet flat on the mattress, Beck tensed her abdominals, rotating her pelvis and raising her butt. Aiming by feel, Bragg manoeuvred the dripping tip of his massive erection until it kissed Beck's pussy, right on target.\n\n* * *\n\nThe engine was chugging quietly away, topping up the batteries and cooling the freezer, and the last of their gear had been neatly stowed. The smell of Beck's wet, perfumed body still lingered and the old man considered rubbing one out, but very idea seemed so anticlimactic he just let it go. Besides, if Tanya had the slightest whiff of ESP, there was always the chance of an unannounced visit.\n\nAnd right on cue, the quiet thud of footsteps on the overhead made him jump. Boarding party, he thought, lounging back on the settee, keeping an eye on a slice of for the first glimpse of the visitor. \n\n\"Knock, knock.\"\n\nWatson shoved himself upright and got to his feet. \"Come on down, Tan.\"\n\nThe woman turned and descended the companionway, facing the ladder. She was naked- Watson tried to recall the last time he had seen her otherwise- and her splendid backside bounced tightly as she climbed down. Hitting the bottom, she turned, smiling from ear to ear. \"Watcha' doin', party pooper?\"\n\nWatson's face split with a lascivious grin. \"Waiting for you.\"\n\n\"Oh, you old smoothie. Really. We were sort of hoping you might come over.\"\n\n\"Nahh...\" Watson shook his head, \"There's plenty of work to do before we cast off. Engine needs to be checked, sea cocks turned off...\"\n\n\"Sea whats?\"\n\n\"Valves.\" Watson said. \"Valves. Sorry, cock's probably not the best choice of words. What about the birthday boy?\" He tilted his head in the direction of the yacht next door. \"Is he having fun?\"\n\n\"Having a ball, you might say.\" Tanya replied dryly, then glanced wistfully over her shoulder. \"So much fun I thought I might just leave them to it.\"\n\n\"And now you know why I didn't go over.\"\n\nTanya put a hand on his jaw. \"Really, Damo? Naww... you're such a sweet man. I kind of figured that might be the case.\" Looking down, she pointed. \"Oh my giddy aunt! You're wearing pants!\"\n\nWatson followed her gaze. The tatty board shorts actually looked more like a tent, pitched on the vertical. Tanya's cool hand slipped under the waistband and her fingers curled around his thumping erection. \"What's this?\" she cooed, \"What are you hiding from your old Aunty Tan?\"\n\n\"Honest, Tan, I can explain everything.\"\n\n\"I bet you can.\" Dropping to a squat, Tanya dismasted his shorts. \"Now let's see. What's all this then?\"\n\nWatson kicked his boardies aside. \"Nothing you can't handle, Tan.\"\n\n\"You better believe it.\"\n\n\"No, seriously. I mean go ahead, handle it.\"\n\n\"Don't mind if I do. You know what they say. Make hay while the sun shines.\"\n\n\"And how long will that be?\"\n\nTanya looked up. \"Not long. Didn't Beck tell you? There's a chopper on the way.\"\n\n\"Yes, she did. You guys must be in a hurry to get back home.\"\n\nTanya rolled her shoulders. \"Quite the opposite. Roger really wanted to give this sailing caper a shot, so we turned on the computer to download a manual. And there they were, around three hundred frantic emails, begging Rodge to come back. They're desperate, apparently. They need him in New York, like, yesterday.\"\n\n\"New York?\" Watson gave a grunt of dour laughter to mask the hurt. For a little while he'd hoped they'd brought this pair of high-flyers back down to Earth. \"Long way by chopper.\"\n\n\"Silly boy. It's dropping us off at the Stream.\"\n\n\"At the what?\"\n\n\"The Gulfstream. The company jet. Then the Stream is dropping me off in Sydney and Rodge is heading on to Hong Kong. After that it's over to the Big A. One of his major clients is in trouble. Again.\"\n\n\"Back to reality? Bet he can't wait.\"\n\nTanya looked at him askance. \"You know, for once in his life he doesn't want to go. Honestly. We were hoping to tag along for a couple of days. Do some sailing.\"\n\n\"That boat of yours would leave us for dead.\"\n\n\"If we had the slightest clue what we were doing. We figured you could sail with Rodge on ours, while I went with Becky in her boat.\"\n\n\"Her boat?\"\n\n\"That's what she calls it. It's a moot point anyway because now the broker's sending a crew, with a jumper to take our boat back.\"\n\n\"A what?\"\n\n\"Jumper. You know, a boat captain.\"\n\n\"You mean skipper?\"\n\n\"Jumper, skipper, I knew it had something to do with hopping.\"\n\nWatson compressed his lips. \"Bad luck!\" He would have loved having a shot at the sleek sixty-footer.\n\n\"Yeah,\" Tanya nodded sadly, \"Just imagine. Me and Beck racing you and Roger. It would have been awesome.\"\n\n\"No,\" Watson shook his head, \"I mean the crew. I was gonna stake a claim on your yacht.\"\n\nTanya punched him on the bicep. \"You keep your cotton-picken' mitts off my SV Rebekah.\"\n\n\"Rebekah?\"\n\n\"Uh huh. We decided last night. First we were gonna name her after you, but 'Eccentric Old Bastard' just doesn't have the same ring. You don't mind, do you? If we name her after your girl?\"\n\n\"She'll be insufferable, you know.\" Watson palmed his forehead. \"You told her yet?\"\n\nTanya stroked his jaw. \"Not yet. Well send her a pic when the signwriting's done.\"\n\n\"So you're gonna hang onto her?\" Watson asked. \"I mean your million dollar hole in the ocean? Even if she hasn't got any headlights?\"\n\nTanya elbowed him. \"Stop teasing. I know we're numpties but at least we're willing to learn. You know we had it all worked out. When we reached the resort we were gonna put you up for a couple of nights. No ulterior motives.\"\n\n\"Bummer.\" Watson sighed, \"That would have been fun. Oh well, better luck next time.\"\n\n\"That's just it.\" Tanya frowned. \"Roger's worried there might not be a next time.\"\n\n\"That's up to him, surely?\"\n\n\"Well that's the scariest part. Up to now it's all been laid out. His whole life. Everything. Private school, uni, a job in the family firm. Briefs come in, bills go out, a river of cash flows into our bank account. It's been a complete no-brainer, up until now.\"\n\n\"So what's changed?\"\n\n\"Everything!\" Tanya declared. \"Roger's just discovered there's a whole lot more to life.\"\n\n\"Than what? Being fantastically rich with a red-hot wife? Must be terrible.\"\n\n\"Be nice, Damon.\"\n\nWatson ticked her under the chin. \"Sorry, Tan. I'm just jealous.\"\n\n\"The grass is always greener.\" Tanya sighed.\n\n\"That's because the paddock's full of thistles. Go on, tell me more about your husband's conundrum.\"\n\n\"Like I say, he's suddenly realised there's more to life than money. I've been trying to tell him for years of course, but up to now I've had no evidence.\"\n\n\"Hmmm... that would be the Beck Effect. The same thing happened to me, you see. I was tied to a writing job before I met her, a slave to deadlines, not especially rewarding but relatively secure. Then our paths crossed and suddenly everything changed. These days I just submit what I want and they pay me what they figure it's worth. No such thing as job security, but at least I'm free. Poor old Rodge. I should have warned him.\"\n\n\"Well now you know what he's going through, right? Know what? Last night, after you left, we rowed our little dinghy across to the island.\"\n\n\"You've got a dinghy?\"\n\n\"Uh huh.\" Tanya nodded. \"In a little garage above the swim platform. And over we went, no fixer, no chauffeur, no driver, no pilot. We did it ourselves. Took a bottle of Veuve and a picnic blanket. Then we fucked each other senseless on the beach for the rest of the night. I made so much noise I'm surprised the neighbours didn't complain.\"\n\n\"And you rowed?\"\n\nTanya looked a little sheepish. \"We couldn't figure out how to use the outboard motor.\"\n\n\"You crazy kids!\" Watson chuckled and ruffled her hair. \"You must be exhausted.\"\n\n\"On the contrary, I have never felt so alive. It's that girl. There's something in her cum, I'm convinced. The elixir of youth.\"\n\n\"Well, I just hope Roger is making the most of it.\"\n\n\"Oh, he is,\" Tanya nodded, \"don't worry.\"\n\n\"Another satisfied customer?\"\n\n\"He's not the only one.\" Tanya muttered, then looked around furtively as if harbouring some dark, guilty secret. \"You know... I was given half a chance...\"\n\n\"What if you were?\"\n\nTanya grabbed his arms, her eyes feverish. \"Damon. I'm serious. I want to come with you.\"\n\nWatson's eyes went wide and his hair stood on end. \"Whaaat?\"\n\n\"Please. Just let me come.\"\n\nWatson looked at her, blinking. When he spoke his voice was calm but his heart was pounding. \"You must be out of your mind.\"\n\n\"Nuh uh. Clear as a bell.\"\n\n\"But... poor bloody Rodge.\"\n\n\"Poor Rodge nothing. He could have any woman he wanted with the crook of a finger. Anyway, first and foremost he's married to his career. He wouldn't miss me.\"\n\n\"Bullshit he wouldn't! Anyway, you said yourself he's a changed man.\"\n\nTanya heaved a sigh. \"Maybe he is. Or maybe some stunning young pussy has gone to his head. This time next week he'll be doing what he loves to do most, slugging it out in court in a fight to the death. And if he feels the old victory itch he can whistle up a ten-k renter, or two if he loses. But me...\" she looked around, \"I've finally discovered where I truly belong.\"\n\n\"Where?\"\n\n\"On Aurora, of course. With you and Beck.\"\n\nWatson was slowly but deliberately shaking his head. This is where things could get complicated, and he just hated complications. \"It's not how it looks, Sweetheart.\"\n\n\"Its exactly how it looks!\" Tanya said, fingers digging into his arms. \"We have so much! Property all over the world, jets, apartments, luxury cars. Jesus Christ, we've even got a yacht.\" She looked around the cosy confines of Watson's forty-five footer. \"And you guys... you have so little. No Cayman Island bank accounts, no property, no stock portfolio. But you're free! And that's it. That's what you've got that we don't. You know the saying? Money can't buy you happiness?\"\n\n\"Maybe not,\" Watson cupped her face in his hands, \"but it can buy shitloads of stuff to does.\"\n\nTanya gave her head a tiny shake. \"You're wrong, Damon. Some things just can't be bought.\" Pulling away, she took a deep breath. \"I never thought I'd hear myself say this. Damo... I've never wanted kids of my own, not up to now, not until I met Beck. Please. Let me come with you. Let me make her mine. I'd be a great mother, I promise.\" She looked at the floor, squirming guiltily. \"A mother with benefits, I guess you might say. Just think of it... the three of us in Aurora, sailing the seven seas...\"\n\n\"Tan...\" Watson cut in, snapping his fingers, \"Tan... time to wake up. Listen, Sweetheart, you'd be climbing the walls in a week. I'm a good-for-nothing writer, not even a proper one, just part of a panel. I'd have you sitting on piece of cardboard, dressed in rags, rattling a cup in the mall in the space of a month. Trust me, borderline poverty just wouldn't become you.\"\n\nTanya licked her lips, looking around. \"I could get used to it.\"\n\nWatson gathered her into a bear hug and guided her hand back to his dwindling erection. \"There's bad weather forecast in the next few days.\" he announced. \"Remember what you said? If it ever got rough enough to spill your Champagne?\"\n\n\"I'll buy a pair of sea legs.\"\n\n\"Tan, listen to me. Have you ever been seasick?\"\n\nTanya shook her head.\n\n\"Well, for the first few days you're terrified you'll die. Then for the next few days you're terrified you won't. I'm flattered, Gorgeous, really I am, but this is not the sort of thing you can do on a whim.\"\n\n\"Dammit!\" Tanya's shoulders slumped. \"I knew you'd go all sensible on my ass.\"\n\n\"You're far too good a woman to mislead. And Roger. He frikken' adores you! I've seen the way he looks at you. He'd be heartbroken.\"\n\nTanya looked down, deflated, and when she looked up again there were tears coursing over her cheeks. \"You bugger,\" she sniffled, giving his bare chest a thump, \"you and your damned integrity! I'll tell you one thing for free, you and Beck will be a hard act to follow.\"\n\n\"D'oh,\" Watson smiled, \"you won't pay us a second thought when you're shooshing down the ski runs in Switzerland.\"\n\nTanya looked at him, her eyes mischievous behind the misting of tears. \"We've got a chalet in the Alps as a matter of fact. We've got a live-in housekeeper who takes care of the joint for us. She's from Korea. She's twenty-five. Her name is Sook. Sook means 'purity' in Korean, so she should be charged with false advertising. Dirty little bitch. Loves the strap-on, giving and taking, and really loves to be spanked.\"\n\n\"There you go,\" Watson said, \"I rest my case.\"\n\n\"Lawyers never say that, you know.\" Tanya replied. Her eyes widened and she snapped her fingers and Watson could sense another wild idea brewing. \"I know, why don't you guys come over and stay? With us? In the Alps? We could hire you as a consultant and fly you over for free.\" Her eyes were darting hither and yon as the fantasy took shape. \"Ohh, you'd love Sook, Damo, and the first time she clapped eyes on Beck she'd have a fit. We could watch the two of them-\"\n\nWatson raised a hand, expression dark, shaking his head.\n\n\"What?\" Tanya said quietly and put a hand to her mouth. \"Oh, Damo, I'm so sorry. I didn't mean it like that. I wasn't suggesting we hand her around like some kind of plaything...\"\n\n\"What?\" Watson frowned. In the space of two or three seconds, he had crafted a scenario where Beck was on the receiving end of a strap-on dildo, wielded by a tight-titted, almond-eyed, oriental goddess, who was fucking Beck doggy style and slapping her butt while Beck was busy eating-out the little Asian's employer. \"No, no, that's not what I mean. It's just that... Becky doesn't have a passport, Tan. And I can't get her one, either, because she hasn't got a birth certificate. So we're stuck here, sailing around this god-forsaken paradise, eating fresh lobster, drinking beer, smoking weed and having rampant sex for the rest of our days.\"\n\nTanya gripped his arms again. \"But if you could get one, you'd come?\"\n\n\"A passport?\"\n\n\"Uh huh.\"\n\n\"In a heartbeat!\" Watson nodded. \"And we'd visit you in Europe to boot.\"\n\n\"And Sook's got these tiiiny little hands.\" Tanya said breathlessly. \"And she can touch the tip of her nose with her tongue.\"\n\n\"Bloody hell, I'm in love with her already.\"\n\n\"And our pilots.\"\n\n\"Male or female?\"\n\nTanya had managed to massage Watson's erection back to life. \"One of each.\"\n\n\"Hedging your bets?\"\n\n\"Naturally.\"\n\n\"Well done that woman. Does that mean you're in the mile-high club?\"\n\n\"Baby, I've been a member of the six mile-high club for the past ten years. Middle of the Pacific, over both poles, over China, over Russia, over Iceland, you name it.\"\n\nA feeling came over him and Watson looked down. Tanya had a handful of his throbbing cock and was brushing her denuded mound across his upper thigh. Her nipples were hard and her skin was aglow with a dusting of sweat. \"So,\" she said, leaning into him, \"now you've shattered all my dreams. How about it?\"\n\n\"One for the road?\"\n\n\"Only seems fair.\"\n\n\"How would you like it?\"\n\n\"I want to go on top.\" Tanya replied, herding Watson gently towards his cabin beyond the saloon.\n\n\"Wouldn't prefer doggy? Or me on top?\"\n\n\"Nuh.\" she shook her head, \"I want to look at you.\"\n\n\"What for?\"\n\nTanya pushed him onto the rumpled bed. \"Because you're a handsome, wonderful man.\"\n\n\"Right!\" Watson scoffed, \"Not only does it not buy happiness, money doesn't even buy you a decent optometrist.\"\n\nTanya arranged Watson on the bed, then shuffled to his side and threw her leg over him. \"Shoosh, you.\" she chided gently. Watson drew a short, sharp breath as her mushy, liquid heat enveloped his knob, and closed his eyes as a tight ring of muscle shimmied down his shaft. Hands on his chest, Tanya began flexing her back, driving her pelvis back and forth on top of him. \"How's that, Darling?\"\n\n\"It's fucking...\" Watson palmed her breasts, squeezing and teasing and pinching her nipples. \"... awesome!\"\n\n\"Mmm...\" Tanya intoned, \"that's what I like to hear. Now I want this one to be special. You just lie back and enjoy the ride.\" ",
        "* * *\n\nBragg shuddered to a panting halt, his forehead dripping sweat. He was playing a game of cat and mouse with an orgasm, and paused for a while to think about the next few days. The chopper would drop them in some Bumfuck town where the company Gulfstream was already waiting. The brief was on board, and Tanya would get off in Sydney. He had two fresh suits in the closet on the boat, and enough clean underwear to get him to Hong Kong. Their fixer there would have an entire wardrobe ready, the best local tailors had his measurements committed to memory, and the hotel would do the rest of his laundry. \n\nThen on to New York. For a meeting with the client. One of the richest and most powerful on his books. A multi, multi billionaire. He'd made his wealth creating armies of homeless, redeveloping the decrepit tenements out of which they'd been thrown, for sale to the modestly affluent. As the populations of U.S. cities continued to boom, once-undesirable neighbourhoods were becoming more and more fashionable, as the poor were kicked out and money moved in to fill the vacuum. \n\nThe process came complete with its own self-affirming label, Gentrification, and what was happening now on the scale of the city would soon be taking place on the scale of the state. And lawyers, like Bragg, who were behind the controls of this unstoppable machine, would themselves be drafted into that holiest of holies. \n\nThe Platinum Plutarchy.\n\nIf he stayed the course, Bragg would be a billionaire! \n\nA billionaire!\n\nStiff-arming himself off the little blonde's body he looked down. Beck was staring up at him with big, sky-blue eyes, a question mark on her angelic face. Her hair was spread like a spun-gold veil over the cum-stained burgundy sheet. Arms outstretched, she had her hands around Bragg's neck, fingers knitted. Her belly was heaving and the bars of her ribcage were rising and falling. He looked past the blades of her hips, over her pubic bone, to the broad, beautiful harbour between her thighs, at the thick shaft of his mucous-slick prick lodged deep in her body. \n\n\"Are you okay?\" Beck asked in a little voice.\n\nBragg grit his teeth. No, he wasn't okay. He was suffering an existential crisis, while buried halfway to the hilt in the body of a gorgeous young female. Her insides were gripping him, her heat radiating into his body, her energy coursing his veins in a mind-bending blur. Knees up, she was digging her heels into his butt, spurring him on. \n\nThis morning, while they were snorkelling- he, his wife and Beck, alone in an immaculate sea- a black and white banded sea snake had swum right up to him. Beck came up beside him, a reassuring hand on his arm, as the snake stopped within an inch of his mask to make introductions. All around the coral glittered, lit up by the low morning sun, in a riot of iridescence almost too vivid to bear. The water was full of clicks and scrapes, and pops and chirps of a million living things, an entire world of alien creatures going quietly about their lives. Beck's hair fanned out in the water in a stunning golden mantle, her blue eyes huge behind the lens of her facemask. She hung in the water, her long legs slightly parted, the gap between her thighs as wide as his fist. \n\nAll last night, between bouts of furious fucking on a moonlit beach, Bragg had lain awake, racking his brains. There had to be a way to make this little blonde goddess his own. Had to be, because all his life he always got what he wanted. Maybe she might even come willingly, lured by the promise of untold wealth- apartments in New York and Paris, world travel in a private jet, gold, diamonds, maids and servants, anything she desired if she'd only say yes. Or he could just have her kidnapped- he had the contacts and more than the means- or trump up some charges against her old man. Have him locked up for tax fraud, then acquire the girl as payment for engineering his freedom. Or he could just disappear, spirit Beck away into the corporate jungle, never to be seen or heard of again. Even if it meant divorce. Even if it meant giving Tanya every last dime. Because no sacrifice would be too great, for a year, for a month, for one more day. \n\nBut even as he was scheming, Bragg knew this was no fairytale. Beck was only who she was- the girl of his wildest dreams- because of what she was, a baby vagabond, sailing the tropics in her beloved yacht with an eccentric old man- her spiritual guide and protector- and he, Bragg, could no more take her away than rob the Earth of the Moon. For the first time in his life, he had come across something he'd die for, something he'd kill for, yet something at the same time that could never be his.\n\n\"Rodge?\" Beck gently patted his shoulder. \"Are you okay?\"\n\nBragg clenched his teeth, looking away so Beck wouldn't see his eyes brimming. \"Perfect.\" he said, lifting his ass and settling again. But the real answer was, 'No'. Because he was on track to be a billionaire by the time he reached fifty, while Watson was a worn out, busted-ass old writer. Yet for all his power and wealth, Bragg now realised, it was not he who was truly rich but Damon Watson. \n\nAnd, suddenly Bragg found himself questioning just exactly who he was. What he was. What he'd achieved. What he'd made versus what he'd created. Because nothing in his life could hold a candle to the past few days, and he was suddenly forced to consider the possibility that the best years of his life had actually been squandered. And as he lay there, on top of the blonde, his penis buried deep in her tight little vagina, it hit him like a bolt from the blue. He might have a billion dollars one day, but that's not what he'd be worth.\n\nBeck pulled him down, digging her heels into him, knowing full-well what was happening. Bragg was thinking of other stuff to stop from cumming too soon. Stuff that had taken the steel out of his erection, steel she would now have to put back in. Wriggling her hips, she raised her head, and winkled a hand between their tightly pressed bodies. \"These feel full.\" she giggled, fondling Bragg's balls. \"Would you like somewhere to empty them, Rodge?\"\n\nCommunications came back on line with mission control and Bragg's troubled reverie sloughed away. There would be time for lots of deep and meaningful later, but right now there was some deep and meaningful of another type he had to attend to. Lifting his hips, he took up where he'd left off, cramming as much cock as he humanly could into the belly of this skinny young angel.\n\n\"Oh, Roger,\" Beck gasped, \"you feel so huge!\"\n\n\"Do you like that, Honey?\"\n\n\"Oh yes. Harder, Rodge, please. Fuck me harder!\"\n\nIt was working. Bragg's erection was about to punch a hole through her diaphragm and come to rest somewhere up near the back of her throat. The tickle in her tummy had died down during the brief respite, but was back again now and building. Beck took Bragg's hand and slid it between their torsos down to her groin. \"Can you feel my pussy, Rodge?\" she whispered feverishly, \"Can you feel how wet it is?\" \n\nBragg dropped his head with a groan. \"Ohhhhhh, Baby!\"\n\nBeck was picking up the rhythm, lunging her hips. \"Oh yeahhh.\" she breathed, \"That's it Rodge, fuck me!\" She felt a sensation like she had just peed herself and the friction of her membranes dropped to zero. Her pussy went 'squelch' as her body fluids were squeezed out by the ribbed, veined battering ram now filling her hole. The juices set off like a frothy lava flow, down her butt crack, bound for the bed.\n\nSensing the change in Beck's texture, Bragg throttled up from a deliberately-paced cadence to free-for-all pounding. \"Oh, Beck!\" he gasped into the top of her head, \"Oh fuck me, Beck... oh Becky... oh fuck me!\"\n\nBeck slung her arms around his neck, pulling him down. \"Lay your weight on me, Rodge. More! More!\"\n\nBeck's ribcage flexed as Bragg eased more and more of his bulk onto the girl's squirming frame. Beck pulled her knees up, digging them into his flanks, meeting him thrust for thrust as he hammered into her, raking his shaft with a taut ring of muscle. Bragg groped desperately for a hanging dilemma- a merger, an injunction, having a fortune but not being worth one- anything to stave off the climax, but it was just too little, too late. Beck was keening and gasping, her fingers clawing at his back, the impact of his body on hers was shaking the bed. The whole yacht would have been bobbing on a quieter sea- and a long, pipe-rupturing orgasm set out from his balls. \"That's it, Beck\" he huffed, \"I can't stop.\"\n\n\"Don't stop,\" Beck panted. \n\n\"Don't...\n\n\"...stop!\"\n\nBragg clenched his teeth. He could feel Beck's muscular portal riding up and down his shaft, and realised he was fully three quarters inside her. There was a sudden, sucking sensation at the tip of his prick as it popped through the opening of her cervix. Teeth clenched, Beck hooked her elbows under her knees, pulling them back, rotating her pelvis to meet the furious onslaught. \n\nBragg was done for. Teeth bared, he ground his hips into her, cock jetting ropes of sperm deep into the girl's tight womb. And Beck was right there with him, twitching and trembling as they tumbled over the edge of the world into oblivion.\n\nERGO SUM\n\nThe helicopter overshot then rolled into a steep turn, the pilot slowing the rotors, preparing to land. Beck was jumping up and down on the deck of the boat next-door, stark naked, frantically waving, runnels of cum streaking the inside of her thighs. Down on the swim platform, Roger and Tanya were loading a last few essentials into their rigid inflatable; passports, wallets, a few items of jewellery, a couple of suits in their heavy-duty garment bags. A briefcase, laptop, and a bottle of Veuve for the trip. Watson whistled at Beck and jerked his head. \"Time to get dressed, Chook. Before that poor old chopper pilot winds up with an extra joystick.\"\n\nBeck jumped ship then flew downstairs to ram herself into some clothes, as Tanya, clad modestly in dress-shorts and a striped, collared shirt, scaled the steps from the swim platform into the sixty-footer's cockpit. \"Well,\" she sighed, \"here's our ride.\"\n\n\"Most people just take a taxi.\" Watson smiled lamely.\n\nBragg appeared at Tanya's side. \"Well...\" he said, extending his hand.\n\nWatson leaned over the side and they shook. Jostled by the quickening sea, the vessels were bumping and grinding, barely held apart by squeaking fenders. Watson dipped his head. \"Safe travels, Rodge.\"\n\n\"Thanks mate.\" Bragg heaved a sigh. \"For the first time in my life I'm not looking forward to it.\"\n\n\"Bah!\" Watson said with a dismissive wave, \"Soon as you get your teeth into it you'll be fine. That's the trouble with messing around in boats. Always takes a while to get your land-legs.\"\n\nBragg rolled his shoulders. \"Oh well, we'll soon see.\"\n\nA few hundred meters away, the shiny blue helicopter settled onto the island in the midst of self-induced sand storm.\n\n\"Well...\" Tanya quavered, as Beck barged back up into Aurora's cockpit, \"I guess we'd better make tracks.\"\n\n\"Wow!\" Beck cried, \"Look at that helicopter. Isn't that awesome? Do you think they'd take us up for a joyride?\"\n\nWatson slung an arm over her shoulders. \"It's not that kind of helicopter, Chook.\"\n\n\"What kind is it?\"\n\n\"The kind that picks up really rich people and flies them away to their jet. Do you want to hop over to say goodbye?\"\n\nBeck jumped from the deck of Aurora onto the boat next-door, oblivious to the pitch and heave. Head back, she waited while Bragg gave her a deep, heavy-breathing kiss, then smeared his cheekbones with the balls of her thumbs beneath the frames of his expensive sunglasses.\n\n\"Becky?\" Tanya spoke up, \"Can you come downstairs real quick?\"\n\nThe two females disappeared and Bragg looked around. Over on the sand cay, the chopper was disgorging bodies as the rotors whirled to a stop. \"The relief crew.\" Bragg said glumly. \"Dammit. I was really hoping to sail home myself.\"\n\n\"You'll get your chance, Rodge. If you decide to hold onto her. What do you reckon? Think it's for you?\"\n\nBragg thought about it. He didn't have a nautical bone in his body and had bought the boat by way of tactical toadying. The firm's senior partner was nearing retirement and would soon be handing over. The doddering old boy was a mad keen yachtie, and who better to take the helm than a kindred maritime spirit? \"Sailing?\" Bragg grunted with laughter, \"You know, before you rocked up, while we were sitting here dead as a doornail, with the batteries going flat and the Champagne getting warm, I swore black and blue I was getting rid of the thing the minute I took senior partner. Had my mind made up, I'd trade her in for a motor cruiser.\"\n\nWatson winced. \"A stinkboat?\"\n\n\"Verily.\" Bragg nodded. \"But you know what? Over the last couple of days, I've really fallen in love with her.\"\n\n\"Wait till you're a hundred miles out to sea, in the middle of the night, and it's blowing forty knots with a ten meter swell.\"\n\nBragg's teeth shone white. \"Stop it Damo, you're turning me on.\"\n\n\"You sure it's not just by association with... you know... all the...\"\n\n\"Memories? I'd be lying if I said that didn't have something to do with it.\" He cracked a wicked smile. \"Guess what? We've stripped the sheets and we're taking them with us. The minute I get home they're going on our bed.\"\n\nThere was a clink of bottles and a carton of French Champagne magically appeared in the hatch. Tanya climbed up after it, followed by Beck. \"Here, Damo.\" she hailed, \"you'd better have these. Can't have that relief crew drinking and driving.\"\n\nThe transfer was made by way of deft timing and a deal of fancy footwork. With a last kiss for Tanya, Beck bounded from one boat to the other and sidled up under Watson's protective wing. Tanya put her hand on her husband's arm. \"Ready, Captain?\"\n\nBragg nodded, deeply and emphatically. \"No.\"\n\nTanya was smiling but her eyes were wet. \"Come on then, we better split. Later you guys.\"\n\n\"Promise you'll come visit us?\" Beck called, as Bragg turned and stepped down onto the swim platform.\n\n\"Only if you come and visit us.\" Tanya retorted.\n\nBeck looked at her old man. \"Can we?\"\n\nWatson shrugged. \"We'll see.\"\n\n\"That always means 'yes'.\" Tanya grinned. \"And if your old man won't be in it, you'll just have to come on your own.\"\n\n\"Sounds like an ultimatum.\" Watson said, as Bragg stepped into the over-stuffed RIB and almost overbalanced. \n\n\"I've got your email.\" Tanya threatened. \n\nBeck scurried to the rear of the cockpit and leant over. \"Don't forget to prime it, Rodge.\" she piped, watching Bragg fuss with the little outboard motor. \"And you should be wearing life vests. And don't forget the curly-chord.\"\n\n\"See what I have to put up with?\" Watson grumbled.\n\nThe outboard sputtered into life and Bragg looked as pleased as if he had just dished up a three-course injunction. \"You could teach a bloke a thing or two Rebekah.\" he said. \"In fact you already have.\"\n\nTanya shrugged on a floatation vest then handed one to her husband. \"That's okay, Sweetheart,\" Bragg fending her off, \"I can swim.\"\n\n\"Put it on.\" Tanya said flatly.\n\n\"It's only a few hundred meters, Tan, I'll be-\"\n\n\"Put... it... on!\"\n\n\"But why?\"\n\n\"It's the law.\"\n\n\"Whose law?\"\n\nTanya pointed at the smiling girl hanging over the rail of her yacht. \"Hers.\"\n\nThere was no arguing with that. Pulling on the vest and zipping it up, Bragg looked to Beck for a sign of approval. Giving him a thumbs-up, she stood back looking smug. \n\n\"Jesus...\" Watson shook his head. \"I'll be lucky if they don't take me to court.\"\n\n\"For keeping an angel without a permit.\" Tanya beamed. \"You better believe it.\"\n\n\"Which reminds me-\" Bragg cut in.\n\nTanya put a finger to her lips and shook her head. \"Well...\" she sighed, untying the tender and pushing off, \"time to splice the yardarm and all that. Tally ho, me jolly old Roger. Toodle-pip!\"\n\nBeck giggled into her hand and Watson caught a glimpse of an expensive sparkle. \"Pirates say 'arrghh', Tan. Not toodle-pip.\"\n\n\"Aarghh, then.\" Tanya dutifully replied, as Bragg clunked the tender into gear. The RIB surged forward, slumped to a halt, surged, idled, then set off at a more or less controlled clip. \n\nBeck was jumping up and down, waving. \"Bye, guys! Byeee!\"\n\n\"Arrghh!\" Tanya yelled at the wind, \"Where's me Buccaneers?\" and in a different voice replied, \"Under yer buccan hat!\" She turned and waved but Bragg, barely coping with his brand-new skills, was too engrossed in the complexities of the puttering motor to look up. Either that or he just couldn't bear to. \n\nWatson caught Beck's hand and turned it over. \"What's this?\"\n\nBeck pulled her hand away and studied the ring, a gold band inlaid with alternating sapphires and diamonds, crowned with a glittering, Champagne-coloured stone. \"Tanya gave it to me.\"\n\n\"Fucking hell.\" Watson breathed, turning Beck's hand this way and that to catch the light.\n\n\"And no,\" Beck said, launching into a pre-emptive disclaimer, \"I didn't ask for it! Tan said she wanted me to have it.\"\n\n\"I didn't say you did.\" the old man retorted, then looked at her. \"You know this is probably worth more than our boat? A lot more.\"\n\n\"Well I could hardly say no.\" As if she'd even wanted to.\n\n\"Well you'd better bloodywell look after it. Keep it in the calamity pack just in case. Special occasions only, okay?\"\n\n\"It's my ring old man. I'll do what I want. In fact I might just keep it in the calamity pack, if that's okay with you.\"\n\nWatson snapped his fingers. \"Brilliant idea.\"\n\n\"And I might only wear it on special occasions.\" The RIB dwindled in the distance as Beck stood admiring her new acquisition. \"Guess what?\"\n\nWatson shrugged. \"You're mad and I'm not?\"\n\n\"She put it on my wedding finger. She said I'm her soul-wife.\"\n\n\"So you're hitched, huh? To a chick? I wonder what her hubby's got to say about that?\"\n\n\"Want to know what else? After we fucked, when Roger was lying on top of me. He started to cry.\"\n\nWatson shot Beck a sideways glance. Her tone wasn't mocking or scornful, she was simply stating a fact. \"Hmph,\" he grunted, \"probably realised he just bought a boat.\"\n\n\"He's sailing out to meet us the minute he gets home.\" Beck carried on.\n\nWatson blew a raspberry. \"Is that what his cock said? I bet he never sets foot on the damned thing again.\"\n\n\"Oh yeah?\" Beck pushed her chest out, her pointy little nipples menacing him through the flimsy fabric, \"How much?\"\n\n\"A nice long fuck.\"\n\nBeck stuck her hand out and they shook. \"Deal.\" \n\nThey watched until the RIB ran up on the distant, white beach and the welcoming party came down to greet them. \"Well, Chook, time to go.\"\n\n\"Can we to say hello the relief crew?\" Beck asked. That way she could show off her beautiful new ring.\n\nWatson shook his head. \"Nope. Go put your present downstairs then come straight back up. It's time to cast off and be on our way.\" The girl nodded, still twirling the ring on her finger. Watson nudged her. \"Go on, Beck.\"\n\n\"Be right back.\" she mumbled, then on second thoughts turned and wrapped her arms around the old man's neck. \"Thanks,\" she smiled, raising her eyes, \"that was amazing. But I'm glad we're back to just you and me.\"\n\nWatson ruffled her hair. \"Really and truly?\"\n\nBeck nodded. \"One thousand percent.\"\n\nWatson gestured with his chin at the waiting helicopter. \"Wouldn't rather go with them? Just think, swanning around the world in jets and helicopters. Great big houses with maids and servants.\"\n\nBeck eyed him shrewdly. \"Would I have my own room?\"\n\n\"Room? You'd have your own mansion.\"\n\n\"So where would we park the boat?\" \n\nWatson opened his mouth to reply but she had him. \n\n\"Hah!\" she poked him in the chest, \"Didn't think of that did you?\"\n\nShe was right. The thought had never even crossed his mind. \"Alright, clever-clogs,\" he sighed, \"put your ring away. Then let's haul canvas and get on our way.\"",
        "They made it so, hoisting the sails, heeling into a broad reach with the sand cay at their backs, until the tiny island and all it implied disappeared over the restless horizon."
    ],
    "authorname": "RaptorDreaming",
    "tags": [
        "fisting",
        "group sex",
        "incest taboo",
        "lesbian",
        "mmff",
        "older man younger woman",
        "older woman younger woman",
        "orgy",
        "teen"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/aurora-goddess-of-the-dawn-pt-06"
}