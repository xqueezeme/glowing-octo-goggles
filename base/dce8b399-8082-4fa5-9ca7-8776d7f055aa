{
    "title": "Let Him Cry Pt. 04",
    "pages": [
        "The fourth and final part of the story. This particular part was completely self-edited due to life stuff; I hope it doesn't show too much.\n\n--C\n\n<p align=\"center\">CHAPTER VI</p>\n\nLife was frustrating for both of us.\n\nOn the other hand, there were, occasionally, days like the next one where I got a text at seven thirty in the morning:\n\n\u226a Either don't go to Abode today or leave and be home by 12:30. Please! Need to talk.\n\nMy return text asking why went unanswered; Grano must be a zoo. At twelve forty, I opened my door to find Bela standing there.\n\n\"Is anyone else here?\" she asked.\n\n\"No.\"\n\nThe next thing I knew, I had an armful of woman. When I started to say something, she shushed me. \"I promised I'd be back from my bank meeting by two. It's a ten-minute drive to Grano, plus I'll need a really quick shower. That gives us an hour.\" What she intended we'd do in that hour was obvious as she was already pulling me toward the bedroom.\n\nShe backed me up against the bed and, with a light push against my chest, toppled me. A kick backward closed the door. A finger pointed. \"Stay there.\" Stepping back, she treated me to an unhurried striptease, drawing each garment off with more hand-to-skin contact than necessary, her eyes never leaving mine, any movement on my part met with, \"Huh-uh. I asked you to stay there.\"\n\nNaked, eyes heavy-lidded, she skimmed one hand across her chest, molding to the curves in passing, over her belly, to brush dark curls suggestively. She pointed with the other. \"Let me see.\"\n\nI reached for my belt.\n\n\"Slowly,\" she added. \"Make me wait a little.\" Her fingers toyed as I complied.\n\n\"Perfect.\" She closed the distance, batted aside my reaching hands, pinned my wrists to the bed with a lascivious smile, and knelt astride me. I barely lasted long enough after that tease... barely.\n\nAs she collapsed laughing onto me at the end, I asked, \"What brought that on?\"\n\n\"You didn't like?\"\n\n\"I loved, but...\"\n\n\"Keeping it interesting.\" The beloved giggle. \"You've met my mother, and you probably think she's the most proper, stick-up-her-butt woman you've ever met.\" I wasn't going touch that one, not with a ten-foot pole. She knew it and, eyes dancing, she continued. \"But she had a completely practical, down-to-earth approach to raising daughters. Dad was all about my brother, but girls were her job.\"\n\n\"And...?\"\n\n\"And one of the pieces of advice she gave Ana and me when we were in our late teens was a Jerry Hall quote. She--\"\n\n\"Who?\"\n\nShe looked at me in disbelief. \"Jerry Hall. You know, Mick Jagger's wife? I thought you liked classic rock.\"\n\n\"Not the Stones.\"\n\nThe look turned to one of utter horror. \"What is wrong with you? I don't think I can see you anymore!\" She spoiled it by giggling as I grabbed at her. \"No!\" she declared, holding up a hand to stop me. \"Beatles?\"\n\n\"They're fine to listen to, but I don't choose them when I'm playing something.\"\n\n\"Ohmygod. What have I done? Who then?\"\n\n\"No. I'm sorry, not The Who either.\n\n\"Just shoot me.\"\n\n\"Creedence,\" I said laughing. \"Janis, she's probably my favorite. The Doors... The Guess Who,\" I tacked on, emphasizing the middle word in contrast. \"Buffalo Springfield, The Band, Allman Brothers--\"\n\nA finger across my lips for silence. \"Don't you like any British groups?\"\n\nI snapped my teeth at her finger, causing her to jerk it away. \"I like Bad Company at lot, some others. The Animals.\"\n\nShe exhaled loudly. Taking my face between her palms, she looked at me solemnly.\n\n\"Gracias a Dios... thank God I didn't rush out of here right away and stayed to hear you say that. I can go out with you after all.\" Again, the giggle spoiled her act. This time she didn't pull away as I wrapped her up in my arms. \"But I get control of the music when we're in the car,\" she said.\n\n\"Driver gets control.\"\n\n\"Nope. All me, buster. Give in now; you know I can convince you.\"\n\nA few minutes later, my hands full of boob and my mouth nuzzling kisses up and down her neck, I asked, \"So, what was the quote?\"\n\n\"Huh?\"\n\n\"Your mom's quote from Jerry Hall.\"\n\n\"That to hang onto a husband we should 'be a maid in the living room, a cook in the kitchen, and a whore in the bedroom.' Mom went on to add that Ana and I could hire the first two if we wanted.\"\n\n\"I could probably afford all three salaries,\" I said with a straight face. Well, that cost me my nice handholds as she grabbed a pillow and the battle was on. I won by cheating. Abandoning the tussle for the pillow, I scooped her thighs out from under her, tipping her backward. While she flailed with her weapon, I buried my face into her and heard the sudden catch of breath. I lifted long enough to say, \"If you don't stop... I will stop.\" She stopped. I didn't.\n\nFresh from the lightning-fast shower, she kissed me goodbye. \"If I disappear, my mother did it, not the butler.\" The look that accompanied that was half-serious.\n\n\"No way I can see you after?\"\n\nShe shook her head. \"And before you ask about tomorrow, Ana's going out.\" Her face crumpled. \"I know, hon. I know. I just...\" She looked away. \"If you've got any magic recipes for running a business, and starting another, and having a kid who I'm probably going to find out has learning problems and who's too young to be alone, and any way to deal with regular life stuff and still be able to see your boyfriend...\" She threw up her hands and met my eyes again, forcing a smile. \"And, by see your boyfriend, I mean sometimes jump his bones.\"\n\nI chuckled dutifully. \"I'll think about it. And that's the first time you've called me 'hon' rather than some ridiculous Spanish nickname.\"\n\nHer smile grew more real. \"Don't ever think that I'm taking this casually, osito.\"\n\nShe was five minutes down the road, and I was four minutes into my shower when I started thinking about it. An hour and fifteen minutes later, I was standing outside the elementary school when Bela pulled up.\n\n\"Matt?\" Her tone was completely puzzled.\n\n\"I had a couple of ideas--\"\n\n\"Maybe we could talk about them later? I'm due inside in a minute or two.\"\n\n\"One of them was to show up for the meeting with the teacher so that I can help with whatever problems he's having...\" My voice trailed off as she stiffened. \"I thought since I was already helping...\" I trailed off again.\n\n\"And what other great ideas did you have?\"\n\n\"I spoke to a couple of mothers in the building whose daughters babysit to see if they'd be interested in a steady gig after school so that you could do the things you need to do.\"\n\nI may not be super observant, but there was no missing the twin spots of color that appeared on her cheeks.\n\n\"Matt.\" Her voice was carefully controlled. \"I care about you. A lot. But we are nowhere near a point where Rafi is anything other than my son. If he has problems, I will decide what to do. That may involve taking you up on and being grateful for -- extraordinarily grateful for -- any help you can provide, but it's my choice. By the same token, if I'm going to leave him in the care of someone else, it will be someone that I've chosen. Is that clear enough?\"\n\nI didn't react particularly well inside. I was only trying to help. I could see her point in retrospect; maybe I was a bit ham-handed about it. Okay, no maybe about it. But intent's gotta count for something, and a simple, \"No thanks. Let's talk later,\" rather than the Riot Act would have sufficed. I felt myself getting pissed off, but I did my best to keep it off my face.\n\nI faked a smile; I'd had a year of practice at that. \"Fair enough. I'm sorry. It was just an idea. Talk to you later.\" I turned back toward my car.\n\n\"Matt.\" I could still see the anger on her face, mixed with a little frustration now. \"I do care about you. Really.\"\n\n\"It's okay. It was just an idea.\" I hoped the nod reassured her.\n\n\"Matt!\"\n\nI turned yet again from the door handle. \"What, Bela?\" This time, a little of my exasperation leaked through. Why don't you just let me leave now and I'll get over it?\n\nShe didn't say anything.\n\nI raised my eyebrows. Well?\n\nShe sighed. \"You're here. You might as well come in.\"\n\nI shook my head. \"No. You're angry at me. I'm irritated at you.\" She recoiled at that. \"That's distracting and you need to focus in there. And I'm not,\" I added as she started to respond, \"doing the walking-away thing again. You just got done telling me you need to be in there now. So go. We can talk later.\"\n\nHours later, I got a text:\n\n\u226a I'm still at my parents' or I'd call. Explain to me why you're pissed at me.\n\n\u226b I'm guessing your mother didn't murder you.\n\n\u226a I might as well put on a big scarlet letter A plus an S for stupid according to her. Please answer my question.\n\n\u226b Because you ripped me a new one instead of saying: thanks for the offer of help but I got this.\n\nThere was a long pause without even the dots indicating she was typing. Finally,\n\n\u226a I'm sorry I reacted that way.\n\n\u226b I'm sorry I overstepped.\n\nMine sounded stilted, even to me but, honestly, her apology struck me the same way: kind of pro forma. And I'd had time enough to brood about it but not time enough to get over it. I thought about leaving it there, but knowing she was totally upset didn't augur well for me relaxing that evening. So, I texted what I hoped was a peace offering.\n\n\u226b I would never intentionally interfere in your relationship. He's your son.\n\nI heard Taty come in and wandered out to find her setting some groceries on the counter, the kids helping. She smiled when she saw me and pointed out the kitchen window.\n\n\"What?\"\n\n\"We got a new car!\" Nia screamed.\n\n\"It's a used Kia,\" Taty amended. As I made sounds of congratulation, she continued. \"What you've done\" -- she waved vaguely around the place -- \"made it possible.\"\n\nThat made me self-conscious. \"It helped me too. Helped me get out of my shell some.\"\n\nHer head tilted in the mannerism I hadn't seen in a long time, then she nodded.\n\n\"I also wanted to talk to you about a job.\"\n\nHer expression turned serious. \"Are you arranging jobs for me again?\"\n\n\"What? No. You told me not to.\" She relaxed a little and I explained. \"I'm just going to float an idea and then let you figure out what you want to do. My new company bought two buildings. One's commercial on the first floor, two apartments above. We're going to renovate, set up our office on the first floor, rent the upper two. The second is an old factory that we're going to turn into condos. With those projects plus the existing stuff, we're going to need an office manager. Are you interested?\"\n\n\"I have a job.\"\n\n\"I know. But I suspect ours will provide better benefits. The pay will be comparable or higher. The hours will be easy at first because the workload isn't there, yet. But I'd rather get the right person even if it's overkill for now.\"\n\nShe looked apprehensive. \"Why me?\"\n\n\"You said you'd worked the front at a spa. That means you can deal with people. I know you're sharp enough to do anything the job might need: billing, accounts, that kind of thing.\"\n\nShe nodded. \"At community, I was a business major. When do you need an answer?\"\n\n\"Let's say three to four weeks.\"\n\n\"Okay. And if I say no?\"\n\n\"Then I'll hire someone else.\"\n\n\"You're not going to be pissed that I didn't take the opportunity you found for me?\"\n\nI stopped my automatic response of \"What?\" and thought about her wording. \"Taty, I didn't find an opportunity for you. You're an opportunity for me. I have to hire someone, and hiring a known quantity is always better than potluck. If you say no, it's no big deal.\"\n\nA grin broke out. \"You've turned out to be more okay than I expected.\"\n\nUncertain if I should be offended, I asked, \"What did you expect?\"\n\n\"A guy who I probably didn't have to kick in the nuts for coming into my room at night.\"\n\n\"Well, there was a lock on the door after all.\"\n\nThat got a laugh. \"Matt, I should be the one to talk to Bela.\"\n\n\"Sounds peachy to me.\" My tone of voice reflected my mood and brought that head tilt again. \"I was going to suggest you talk to her before you made a decision anyway.\"\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nI was a little anxious going for coffee the next morning. Bela hadn't responded to that final text. I figured I was in for either Part Two of the ass-reaming or, at best, a minor thaw. At worst... I didn't want to think about worst.\n\nThrough the plate glass, I could see her watching me as I walked up to Grano. There were no customers at the counter and, as I approached, she said something quietly to Ken. His back was to me, but I caught the tail end of his reply, \"... thought you wanted me to restock?\"\n\nHer answer was cheerful. \"Ken, I own this place. Therefore, if I want to take a few minutes to say something to my boyfriend in the back, your response should be, 'As you wish, Your Majesty.'\"\n\nHe turned and caught sight of me. \"Dude!\" he said in greeting. Turning back. \"As you wish, Your Majesty.\"\n\nShe picked up a drink and handed it to me. \"I made it when I saw your car turn in.\" She led me into the back room. \"I don't have very long; that lull out there won't last. I'm sorry I was so intense. I'm just hypersensitive about Rafi and me.\" I nodded. \"If you would like to come over tonight, I will tell you what the teacher said.\"\n\nI felt that same jar you get when you try to step on a stair that isn't there. The voice and expression implied it was all forgotten. Okaaaaay, I guess we're glossing over this whole thing. I didn't say that out loud. My occasional \"speak first, think second\" approach was tempered by wariness right at the moment.\n\nBut I wasn't sure how I felt about it. Maybe it was just a decade of habit. Liv didn't let things go; you argued them out until one side or the other saw the light, or until you agreed to disagree. Think about this, I advised myself. Smiling, make-me-coffee Bela versus stone-faced Bela? Maybe wait and see, Matt.\n\nI temporized, \"I already made plans. You said yesterday that tonight wasn't happening.\"\n\nShe sighed in frustration. \"Can you cancel?\"\n\n\"No. Friends I haven't seen in forever and I'm trying to reconnect...\" I shrugged. \"I shouldn't.\" I waited to see if that would provoke a blast of \"I'm not more important?\" but it didn't.\n\n\"I should have said something last night. Oh well.\"\n\nYeah, you should've, I agreed. I didn't say that out loud either.\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nAnd, of course, Saturday, \"Matt, I borrowed a dress from Ana, but I still don't have my gift for tonight.\"\n\n\"Do you want some company while you shop? I could swing by.\"\n\n\"Umm, I don't think so.\"\n\nNow what? Nothing, it turned out. \"Umm. It's...\" She stopped. Finally, in a rush, \"We're bringing gag gifts, and I'd be too embarrassed to have you with me when I buy it.\"\n\n\"You're buying something dirty?\" I asked, laughing. \"You pervert.\"\n\n\"Don't be a jerk, payaso.\" At my question, \"Clown, but you're not the slightest bit funny, so don't quit your day job.\" Her voice got prim. \"The theme of tonight's soir\u00e9e is rather phallic. I drew the card for--\" She finally broke out in laughter. \"Well, never mind what I'm bringing. I'm not walking into an adult store for the first time in my life with you. I shoulda used the internet, but I left it too late.\"\n\n\"I so want to go with you.\"\n\n\"I swear to God. If I see your face, I will truly murder you.\"\n\n\"Okay. Okay. I promise. Have fun. Don't do anything I wouldn't do tonight.\"\n\n\"As if!\"\n\nAt three-something in the morning, my phone rang.\n\n\"I'm in an Uber in your parking lot. Can I come up?\" The voice was slightly fuzzy.\n\n\"Shh,\" she said as I opened the door, even though I hadn't said anything. \"Don't wake Taty.\" Without waiting for a reply, she headed toward the back. Once inside my room, she carefully closed the door behind me.\n\n\"I swear, officer,\" her hand went up like she was taking an oath in court, \"I looked but I didn't touch even once.\"\n\n\"Hot guys in the bar?\"\n\nShe waggled her finger at me. \"No. We sent all the drinks back. Girls night only. But there was a stripper in the...\" -- she waved vaguely -- \"you know, in the...\" She seemed unable to finish that sentence.\n\n\"Ah, and that's when you looked but didn't touch,\" I said.\n\n\"That's correct.\" She unbuttoned her coat. I saw the sash dotted with a few pink images, phallic indeed, and the words: Still Deciding Which.\n\nShe saw me notice and pulled it up to look at it. \"The single girls had to wear these. The married girls' said: Same Penis Forever.\" She snickered. \"The 'i' was a willy. But the bride's was covered with a million of them and said: And Give Up All This?\" She giggled again and then stared at me up and down, bare chest, pajama bottoms. When her eyes returned to mine, they were full of heat. \"Did you worry?\"\n\n\"About?\"\n\n\"What I did.\"\n\n\"No.\"\n\n\"Good. 'Cause while--\" She put her hand on the dresser to catch herself as she lost her balance kicking off a heel. \"Whoops! I'm a little drunk.\" She kicked off the other one.\n\n\"Because what?\"\n\n\"Huh? Oh, because while he was eye candy\" -- my eyebrows went up; she waved her finger at me and shook her head no and pointed at her sash -- \"I already decided about a penis.\" Another giggle. \"Hook me up, osito.\" She stalked forward and put her arms around me, her hands plunging under my waistband to cup my ass.\n\nI did my best to oblige her.\n\nMorning came early. She was still out like a light, but I could hear movement from outside.\n\nPoking my head into the living room, I said to Taty, \"Bela,\" with a significant glance at the kids.\n\nShe nodded, failing to suppress her smile, \"As long as she's put together when she comes out.\"\n\n\"What's that mean, Mom?\" Terrell demanded.\n\n\"That she got enough sleep, sweetie.\"\n\nI grabbed two glasses and a carton of juice and headed back in. It took a long time, a handful of aspirin, and a fair bit of hydration. There was quite a bit of quickly hushed complaining during the process. But eventually, there was movement, and what emerged from the shower an hour later was reasonably presentable.\n\nShe eyed me ruefully. \"Did I really show up for a booty call, drunk off my ass?\"\n\n\"Yup.\"\n\nShe shook her head gingerly. \"Sorry.\"\n\n\"I'm not. I mean, I got a woman who already had her motor running from a stripper.\"\n\nShe looked aghast. \"I did not! Please say that isn't true.\"\n\n\"Well, you were definitely in the mood.\" She looked so upset that I relented. \"You assured me you didn't touch, and you did a great job of convincing me I was the one you wanted to hook you up.\" I grinned at her. \"Your words and I found them kinda sexy.\"\n\n\"Oh, Matt.\" She put her head down on my shoulder. \"Please don't think bad about me.\"\n\nI stroked her hair and assured her that I wouldn't hold a bachelorette blowout against her \"as long as the line gets drawn at lap dance.\"\n\n\"Ohmygod. I didn't do that, did I?\"\n\n\"I have no idea. And, truthfully, if you find out, I don't want to know.\"\n\nShe smiled weakly. \"Remind me of this moment if you ever go to a bachelor party.\"\n\nTwo hours later, I got a call. \"My mom slept at my place with Rafi last night. I thought she'd take him to the house, but he insisted.\"\n\n\"And?\"\n\n\"And that means she knows I didn't come home last night. And now my father does. I'm commanded to produce you for inspection at next Thursday's dinner.\"\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nIt was my last day with Abode. I was ready to start my new venture. John had given two weeks' notice and would start soon.\n\n\"Caitlyn, can we talk for a moment?\" The lunch wagon had rolled up and I spoke before she headed off.\n\nShe looked at me with a mixture of resentment and apprehension, then nodded stiffly.\n\n\"When I heard about you talking to Bela to warn her off me--\" I saw the sharp reaction and quickly added, \"I'm not upset about it.\" She settled back, surprised. \"I found out that you think I was only dating you for sex. Why?\"",
        "\"Because you were.\"\n\n\"No, but I'd like to know how I gave that impression.\"\n\n\"Matt!\" The apprehension was gone, the resentment in full force. \"You were perfectly happy to share my bed. When I asked you to commit to more than that, you basically walked away.\" It was her turn to stop my reaction. \"I know I was the one who said the words, but you were thinking it.\"\n\n\"Yes, not consciously, but you're right. I was.\"\n\n\"So?\"\n\n\"Caitlyn, it wasn't that you wanted more commitment. It was that you insisted I forget about Liv.\"\n\n\"You can't commit to someone unless they're the only one.\"\n\n\"I would agree that you can only be with one person at a time, but I think you can love more than one person in your life.\"\n\n\"You're deliberately misunderstanding me!\" Her voice was raised.\n\n\"No. I just have different world-view.\" My voice was quiet and sad. \"I wish you would understand me.\" She stiffened even more if that was possible. I sighed. \"You're right, at the very end it was the sex holding us together, but then I realized it and knew it was time--\"\n\nHer finger stabbed toward me in vindication. \"See! Use her and lose her.\" She wasn't bothering to keep it quiet. \"Do you have any idea how that makes a woman feel? There's--\"\n\n\"Caitlyn!\" Ruth's voice was razor-sharp. \"Every single person on this site can hear you and, even if you don't care, some of us don't want to hear it.\" Caitlyn's face showed her shock at the normally easy-going Ruth's fire.\n\nRuth looked at me and said more quietly, \"Both of you need to take this somewhere private.\"\n\n\"Okay, what don't I understand?\" Caitlyn's voice was sarcastic when we settled on the upper floor of the house.\n\n\"You accused me of just going out with you for sex. Yet, when I told you that I realized sex was most of what was still holding us together and knew it was time to end it, you flew off the handle. You can't have it both ways.\"\n\nShe stared at me balefully.\n\nI tried a different way. \"You're still about the most beautiful woman I've ever known, and I'll take all the blame for being a little blinded by that during the last week or two. But we weren't right for each other.\"\n\n\"Why?\" Combative.\n\n\"Because you believe in your heart of hearts that the only way to love someone is to let go of all past loves and devote everything you have to the new, while I believe that--\" I held up my hand to stop her response. It was beginning to feel like a parlor game, but I wanted to get the next part out. \"I believe that the only way I can love a woman is to love her forever, even if she's no longer the person my life revolves around.\"\n\nThe fire banked a little but not all the way. \"Are you saying you still love every woman you've ever said, 'I love you' to? I call bullshit on that!\"\n\n\"No, I'm not a saint, and I was young once. Sometimes you realize that you misjudged a relationship. Or sometimes they change and fade away.\n\n\"But my relationship with Liv didn't fade away. It was cut short. And, for me, that means it will go on forever. I'm not saying everyone's like that. I'm not judging you with Gregg. It's just the way I am.\"\n\nShe looked down at her feet.\n\n\"Can you honestly tell me that you were in love with me?\"\n\nAfter a moment, she shook her head. \"Of course not. It takes time and it hadn't gotten that far.\"\n\n\"I think you'd have eventually decided 'Pass' once you rehabbed me.\"\n\nWhoops. That brought the fire back. I meant it to be self-deprecating, something to lighten the mood. She didn't take it that way. Trust me to say something stupid.\n\n\"Don't try to make me into the shallow one here!\" she spat. \"I liked you. I found you attractive. I was willing to see where it would go with time. You weren't.\"\n\n\"I'm sorry.\" I didn't feel like saying that. The constant attacking was getting to me. I bit down on an angry retort of my own and let the apology stand.\n\nHer chin was up. \"I asked you once before, I'll ask again: what do you want from me?\"\n\n\"Friendship or, failing that, civility.\"\n\n\"Whatever. Maybe Bela will be luckier than I was. Or maybe she'll find out she's just a piece of ass too.\"\n\nOh, fuck this. I pushed myself off the sawhorse. \"Take care, Caitlyn.\"\n\n\"You're not over Olivia,\" she accused, \"no matter what you think.\"\n\n\"That's what you don't understand. I don't want to be over her. I want every woman I love to be a love forever. I told you once that there's a lot of ground between remembering and not letting go. I've let Liv go.\"\n\nI was done. She didn't say anything immediately, so I gave her a nod and headed back to work. I wasn't going to wait around for the next diatribe. She was a nice woman, but as Ruth had once said to me, she wasn't the right woman. And I didn't feel like being abused for learning that.\n\nLeaving, Ruth caught my eye. \"Did she listen?\"\n\n\"No.\"\n\nShe shook her head. \"She'll find the perfect guy for herself someday and, when she does, she'll make him feel like the absolute King of the World. But there are going to be a few tears along the way until she gets there.\" She looked up and caught me off guard. \"Were you just fucking her, Matt?\"\n\n\"No. I thought it was going to be a real thing going in. It was real for a while.\"\n\nShe studied my face for a long moment, then nodded. \"That's what I thought.\" I was feeling kind of down and didn't even try to dodge the fist.\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\n\"I'm not a widow.\"\n\nI looked down at the head nestled against my shoulder in surprise. I'd helped Rafi with his exercises and now Bela and I were sitting and enjoying a glass of wine.\n\n\"I don't say I am, but I never correct people when they think it.\"\n\nI didn't say anything immediately. Tread carefully here, boy, a little voice said. But, apparently, just listening wasn't what she was looking for. She picked her head up and looked me in the face. \"Did you hear?\"\n\n\"Yes. I wasn't sure what the right response was.\" She waited. \"When did you divorce?\"\n\nShe shook her head. \"No, we were never married, and Rafael died in Afghanistan.\"\n\n\"That's Rafi's father?\" She nodded. \"But you took his last name?\"\n\nShe looked puzzled for a second, then her face cleared. \"Oh, my mother introduced herself as Abenda\u00f1o. No, in Spain women don't take their husband's last name. My father is Tom\u00e1s Navarro. In some snooty circles, or if you're talking to my grandmother, Mom might be Isabel Abenda\u00f1o de Navarro.\"\n\n\"Learn something new every day,\" I said lightly. But humor wasn't what she was looking for either based upon the slight frown that brought. \"Bela, I don't care.\"\n\n\"We were engaged,\" she said. There was a touch of defiance in that statement.\n\n\"That's fine. It doesn't matter to me.\"\n\n\"It did to my parents and grandparents. Some of them still--\"\n\nI put a finger over her mouth. \"Bela!\" I said sharply. She stopped in surprise. \"I. Do. Not. Care.\" She said nothing, staring at me with big brown eyes. \"You've got a wonderful son. You love him, and I think you are a great mother. End of story as far as I'm concerned.\"\n\nHer head dropped back down on my shoulder so I couldn't see her face. After a moment, I heard a quiet, \"Sometimes you do things that piss me off. But sometimes you do or say things that make me crazy about you.\"\n\n\"Name one.\" I really wanted to lighten the mood.\n\n\"What you've done for Taty,\" she replied without hesitation.\n\n\"Name another.\"\n\nHer head came back up. I saw the mocking expression. \"That would give you a swelled head, osito.\" She went back to being quiet.\n\n\"Why are you telling me?\" I ventured.\n\n\"Partly to be honest. I want us to be honest with each other, and I know you thought I was a widow.\"\n\nAfter a pause, I asked, \"And...?\"\n\nThe pause dragged on. I waited.\n\n\"There's more to the story.\"\n\nJust listen to whatever she wants to tell you, I thought, and waited some more, gently stroking her shoulder while I did.\n\nFinally, \"We were technically still engaged when he was killed, but it was a sham. He left me. When he found out I was pregnant, he asked me to get an abortion. I wouldn't. He stormed out, and I never saw him again even though he didn't go back overseas for months.\"\n\nA blaze of anger shot through me, but I tamped that down. Whatever my issues were, right now wasn't about me. Uncertain of my ground, I asked, \"Do you want to talk about it, or would you prefer I just listen?\"\n\n\"Talk about it... as long as you don't say something idiotic like, 'Oh, that must have been hard.'\" The glance up showed she was half-kidding but half-not. The message was clear: this was a big deal in her life, don't be an asshole.\n\nI thought about it. \"Rafi is named after Rafael?\"\n\n\"Yes. I had this stupid idea that knowing he had a namesake might change things. I regretted it a month later, but I was twenty-four and scared and had done several stupid things, starting with letting that fucker stick his dick in me. The only stupid thing I didn't do was agree to what he asked.\" After a second, she said quietly, \"I wish I had named him Tommy.\"\n\n\"Hmm?\"\n\n\"After my dad: Tom\u00e1s... Thomas. My dad was the only one who really supported me during it. My mother and the abuelas... grandmothers--\" She broke off and looked up at me with a smile that, while not big, was genuine. \"Oh, I forgot. High school Spanish. You're on top of that.\"\n\nI wrinkled my nose at her. I appreciated that she was trying to keep this from being a total bummer.\n\n\"Anyway, Mom and the abuelas were too busy telling me I'd brought shame to the family, ruined my life, disappointed Baby Jesus, and generally fucked things up. Dad just said, 'I don't love what you did, querida, but I love you and I'll love my grandson,' and pitched in where he could.\"\n\nSuddenly, her comment days ago about the marriage hassle starting made more sense. I wondered what it was like to be a single mom in a house where support came with judgment. \"Did the Army help out?\"\n\n\"No. I wasn't willing to go through the circus of getting DNA to prove paternity, and they're kind of strict about that when you're not married.\"\n\n\"I don't want to say the thing you said was idiotic.\"\n\nRuefully, \"Things were tight for a while until I got my feet under me. Dad helped.\"\n\n\"Were you really in love with him? Before he abandoned you, I mean.\" For an instant, I felt a flash of empathy with Caitlyn over past loves, but then it was gone. I would never expect someone to forget. If Bela said yes, I could deal. Especially, my insecurities said, because she just called him a fucker, right?\n\n\"A little bit in love, but mostly infatuated. Sheltered girl who went to all-girl Catholic school meets gorgeous Hispanic guy who's just enough older to seem worldly and wise, but not so old that parents complain. He had some money and loved going out and having a good time, while I was working as a clerk in my aunt's clothing store. I'd been with only two guys before him, and both of them were just boys.\" I heard the faint snort of not-laughter. \"He drove a Corvette, for heaven's sake! I didn't stand a chance. He was deployed a lot during those first years we were dating, and I didn't see things too clearly.\"\n\n\"Gorgeous, huh?\"\n\n\"Sorry, osito. He was a hunk.\" I wasn't looking down, but I could tell she was trying to see how I took that.\n\nA momentary shiver of my insecurity but no major convulsions. At my \"whatever\" expression, she patted my chest. \"I wouldn't trade back.\" She reached up and tipped my head down to face her. \"And you do look a little like James Dean to me.\"\n\n\"Now it's only a little?\"\n\nShe giggled. \"I'm happy with what I've got, thank you very much.\" She snuggled back in. After a pause, \"Now would be a good time to mention that you're happy with your trade from Miss Big Boobs.\"\n\n\"Wellllllllllll... OOF!\" The elbow to the stomach wasn't totally playful. I pinned her arm. \"I was just kidding! I'm happy! I promise!\" Ignoring the \"you better be\" look, I leaned down and kissed her. \"In fact,\" I continued, \"my only regret is that it took me so long to realize how happy with that trade I would be.\"\n\n\"Good recovery,\" she relented and pulled me in for another kiss and a whispered, \"Nookie is back on the table for you. At least\" -- a quick turn to look over at the far side of the room where her son was snoring softly in the daybed where he slept -- \"when we're someplace with doors.\"\n\n\"The bathroom has a door.\"\n\n\"Tempting. But I'd be too nervous he'd wake and want to come in.\" At my mock sigh of despair, she added, \"Someday I'll rock your world in a locked bathroom, but not when the person outside is my kid.\"\n\nThe playlist on the stereo started to repeat and I realized the time. Regretfully, I stirred. \"I should be going.\"\n\nShe didn't move immediately, snuggling back. She took a big swallow from her wine, then said, \"There was one more reason I told you about Rafael.\"\n\n\"What is that?\"\n\n\"So that you know you can talk about anything you want with me. Including Olivia.\" She paused, but I didn't react. \"I'm not prying. If you never do, I'll be okay with that. I swear. But you can if you want.\"\n\nWithout effort, I said something that would have been unthinkable for an entire year, granting permission. \"Her name is Liv.\"\n\nWhen I didn't continue, she tightened her arm over mine. \"Liv,\" she repeated. \"It's a nice name.\"\n\nWe sat until the wine was gone. Then she pulled herself to her feet. \"Good night, hon. Be brave tomorrow night.\"\n\nI chuckled. Dinner with her folks. We both cast a glance to make sure Rafi was still asleep, and then she melted into my arms for a goodbye.\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\n\"Welcome to our home, Matthew.\"\n\n\"Ms. Abenda\u00f1o, thank you for inviting me.\" I had checked with Bela about what to call her mother.\n\nShe nodded regally, a queen accepting her due from a commoner. She led me into the living room, Bela trailing behind. \"Tom\u00e1s, this is Matthew Brennan. Matthew, my husband, Mr. Navarro.\"\n\nIntroductions over, he asked me, \"Would you like a whiskey?\"\n\nBela had prepped me; I knew what was about to happen. \"It's inevitable. Just suck it up and get through it,\" she'd said. Now, she shot me a glance and mouthed, \"Chin up, osito,\" as she followed her mother toward the kitchen.\n\n\"Matthew... may I call you Matthew?\"\n\n\"Yes, although I prefer Matt.\"\n\nHe nodded. \"Matt, I should like to talk to you for a moment before we join the women at the table. As one man to another.\"\n\nHere we go.\n\nHe handed me a glass and we settled into chairs facing each other. His voice was quiet.\n\n\"I am an old-fashioned sort of man, but I am not a stupid man.\" I waited to see where this would go. \"For example, I am under no illusions that either of my daughters was a virgin by the time she left college. I do not know details or how much before, but that much I know.\"\n\nClearly, that didn't call for a response.\n\n\"Further, I know that that is not unusual... in fact, quite the opposite... and that this is America, not Spain of the 1950s. I also know that the world is not the way it was when I was your age.\" He smiled thinly. \"And even back then, men often gave into desire. They just did not do it with women they were serious about.\"\n\nUh oh. I had a sneaking feeling that I was going to be persona extremely non grata here in about ten seconds. It wouldn't be for sleeping with his daughter. It would be for telling him where he could shove opinions about his daughter being cheap.\n\nBut he surprised me. \"It was a horrible double standard. The modern way is much more honest even though every fiber of my upbringing rebels against it. I cannot change the way I was raised or the reactions I have as a father, but I can control how I respond to them. So, I will simply tell you one thing and ask another of you.\n\n\"I love Bela and Ana very much. If someone were to do anything to hurt them, anything beyond the normal ups and downs of relationships, I would do what I could to hurt that person in return. Had Rafael--\" He broke off. \"Do you know of Rafael Cifuentes?\"\n\nI nodded.\n\n\"Bela said she told you. Do you know all of it?\"\n\n\"I think so.\"\n\n\"Had Rafael lived, I would have done everything I could to see him held accountable. And then everything I could to see him destroyed: his career in the military, his reputation at home, his pocketbook.\" His expression was rather fierce, and I believed him. He looked to see how I took his statement.\n\n\"I understand and find that reasonable, sir, and... well... I guess I will feel much the same about any children I might have someday.\"\n\nIt seemed enough. He nodded and relaxed back. \"Good, that's settled. Now I would ask something of you, simply as a favor for your girlfriend's father. Please let Isabel -- my wife, I mean -- conclude that I expressed my stern disapproval. It was, perhaps, a futile effort on my part, but I tried. If you do this, it will make my marriage easier.\"\n\nI shared his smile.\n\n\"In a similar vein, I hope you will tell Bela that I have learned to respect her right to choose how she lives her life. However, if you avoid mentioning that I said anything positive about you being lovers, that would be good. At least, not until... well... for a while.\"\n\nAt my puzzled look, he explained. \"She made a bad mistake with Rafael. I wish her to be more thoughtful and never make it again. I have the conceit that fear of fatherly disapproval causes her to consider at least a second, and perhaps a third, time before she does things.\"\n\nI considered. \"Mr. Navarro--\"\n\n\"Tom\u00e1s, please.\"\n\n\"Tom\u00e1s, I will gladly do the first. The second... I won't lie to Bela. I'm willing not to bring it up, but if she asks me, I will tell the truth.\"\n\nHe smiled. \"A good answer, in all regards. Let's finish our drinks then, slowly enough to seem that we have talked very seriously, and then rejoin the women.\"\n\nIt was a dinner of polite friendliness from him, polite nosiness from Bela's mother, and unabashed good humor from the two Navarro girls, who seemed alternately amused at my predicament and willing to intercede for me whenever they sensed it was necessary.\n\n\"I'm sorry that Sebas could not join us this evening--\"\n\n\"My brother, Sebasti\u00e1n,\" Bela supplied quickly.\n\n\"--He would have enjoyed meeting you, but they had an obligation with his wife's family. Do you have brothers or sisters, Matthew?\" Bela's mother asked.\n\n\"No, I'm an only child.\"\n\n\"Oh. I have always suspected that might be lonely. Did you find it so?\"\n\n\"Not really. I had cousins who were nearby.\"\n\n\"That's fortunate.\" She changed tack slightly. \"You mentioned that your parents had moved to Florida, but will you tell me about other family?\"\n\nI felt the familiar flicker of reluctance and avoidance, mostly gone these days but brought back to life by this unnerving meal. I saw Bela react. Ana too; I guess they shared about the boys in their lives. Before I could respond, Bela spoke.\n\n\"Matt is a widower. Let's move on to some other topic.\" There was a hint of steel in her tone, a junior echo of her mother's voice.\n\n\"Matt, please excuse us,\" her father said. \"My daughter is correct; let us talk of other things. I am fascinated by this idea Bela has told us about, your plan to improve housing in town.\" There was no doubt about that tone: paterfamilias had spoken -- move on.\n\nAnd so it went, an exhaustive recounting of my plans, my prospects, a light dip into my education, a glowing report of my role at Abode by my girlfriend, did I care for soccer?, and a couple of questions I think subtly designed to elicit my financial status.\n\nLeaving, I got two firm handshakes from the senior Navarros, a kiss on the cheek and a murmured \"you killed it\" from Ana. Bela, Rafi, and I walked back to her place. He was sent up the stairs to get ready for bed, while we lingered below.\n\n\"You survived. In fact,\" she added, \"you seemed to get along with Dad well. What did he say to you?\"\n\n\"Do not hurt you, and he respected your right to make choices.\"",
        "\"That's all?\"\n\n\"That's the gist.\" But, as I mentioned before, I'm not a natural liar.\n\n\"What else?\" I shook my head. She pressed, \"Come on, Matt. It's important to me to know.\"\n\nI considered, then told her as verbatim as I could remember. Afterward, she was silent for a while, then she nodded. \"He's a good father. And I'm not surprised. I do think twice about men now. I have with you.\" The look that passed between us was serious. \"Did you mind that I jumped in when she asked about family?\"\n\n\"No, it was fine. Is Liv a black mark against me?\"\n\nShe looked at me like I was stark raving mad. \"Finding out a man is the marrying type will never be a black mark in my parents' book. And\" I saw the flush spread. \"I'm sorry that the word marriage keeps coming up. I'm not hinting.\"\n\n\"Were the three of you laughing at me while your dad had me in the living room?\"\n\n\"Oooooh nooooo.\" The headshake and eye-roll completed her reaction. \"Let's see. I got a repeat of the lecture she gave before that I was a damn fool and Baby Jesus was not happy. Then she mentioned that any man who--\" She broke off. \"Remember I said my mom was pretty down-to-earth with her girls?\" I nodded. \"Then, quite literally, she told me that any man who I had to screw to catch wasn't worth catching.\" She paused to see how I took that since it hit nearer the bone.\n\n\"You worried about that.\"\n\n\"I did,\" she agreed, \"but you reassured me. Finally, she told Ana and me that, in her day, women knew how to keep their legs closed. However, since she had obviously failed in raising us, she hoped I had learned my lesson about preventing gifts from God, and she hoped Ana took a lesson from me. Oh, and that if we were relying on the man to bring condoms, we were idiots and hopefully we had gotten over any shame -- well-deserved she implied -- at buying them. Yep, good fun all around.\"\n\nAt my expression, she said, \"Mom doesn't let the gap between how she believes girls should behave and how they do behave stop her from being brutally practical.\"\n\nShe pushed up against me and put her arms around my neck. \"Good night, Matt. You did good. Thank you.\" The kiss lingered until we heard Rafi come out of the bathroom. \"G'night. You know you'll be expected to show your face at these at least every couple of weeks?\"\n\nI groaned, which brought soft laughter. \"They'll get better.\"\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nOver coffee and Danish on Tuesday, Bela and Ana plopped in front of me.\n\n\"Come to dinner again Thursday?\" Bela asked.\n\n\"Umm.\"\n\n\"Please?\" begged Ana.\n\nPuzzled at her tone and Bela's extremely amused expression, \"What am I in for?\"\n\n\"Not you.\" Bela was openly laughing now. \"Ana wants to broach the subject of bringing a guy the next week or so. It's a guy who's already been once and didn't wow Mom. Ana figures with you there, A) Mom will be on her best behavior -- fat chance I say to that -- and B) they'll still see you as a bit of fresh meat for distraction. That second is more likely.\"\n\n\"I will babysit all Friday night if you do,\" Ana wheedled.\n\nAt Bela's \"did you hear that?\" expression, I said, \"Okay.\"\n\nDinner sucked less than the week before, but only because it didn't start with a talk with dad. My political opinions were on display. I don't know how my staunch middle-of-the-road views went over, but the only tense moment came when Bela's mother asked, \"And how do you feel about unexpected children, Matthew?\" I wasn't stupid; I knew what she meant.\n\n\"I believe it is the woman's decision because it's her body.\" I could see that was only marginally acceptable, but I wasn't going to lie and finished with the truth. \"But I would be heartbroken if any child of mine didn't have a chance.\" The thinned lips relaxed. Mr. Navarro smiled. Bela hadn't prepped me for that one, and a glance showed an expression of utter relief on her face.\n\nAna escaped with nothing more than an incredulous, \"Are you serious, mija?\" and then a relenting, \"Perhaps this time he will dress as if he's a guest at someone's house?\"\n\nAna murmured in my ear again when saying goodbye. \"Thanks for taking the fire. I so owe you. Have fun tomorrow night.\" The wicked look at she pulled back made it clear whose sister she was.\n\nI got up early the next morning, knowing I was drafted. Earlier that week, \"Please take off Friday? My furniture's arrived, and I need to move the stuff from my apartment. You've got a pickup truck and big, strong guy muscles.\" Wildly batted eyes, coyly pursed lips, one finger drawn teasingly over my biceps, and a dimple. Even though she couldn't hold it and broke up in laughter, who was I to say no?\n\nWhen it was over, Bela and I were collapsed on the couch in her living room. Rafi and Ana were playing some game involving a lot of shrieking. \"Ana's taking him back to the apartment to make a giant fort out of all the boxes. It's his playroom until my folks rent it. He's tired and she'll drag it out until he falls asleep there. How about takeout?\"\n\nPieces of maki fed a bite at a time into each other's mouths with our fingers, while soaking the grime from the day away in the tub... \"Have you ever had sex in a bathtub? Neither have I. Want to try?... I can't pour wine with you constantly-- Oh! Ooh. Yeah, okay.\"\n\nA new king-sized bed. We were sprawled naked across it.\n\n\"I'm in a wet spot,\" she announced. I felt her shift around. \"There's more than one.\"\n\nReluctantly, I pulled myself upright. \"Where'd we put the sheets?\"\n\nAs we stretched a fresh set of bedding, she asked, \"Do you know of anyone who is leasing commercial space downtown?\" At my startled look, she explained. \"My landlord is raising the rent on Grano next year. By over a third. I'm not sure I can handle it. He's said he'll let me out of my lease if I want.\"\n\n\"Holy shit! Why?\"\n\n\"I don't know. This is killing me. As soon as one thing gets solved, something else comes up.\"\n\n\"I'll see if anyone knows of something available. Umm, are you really thinking about work right now?\"\n\nShe had the decency to look sheepish. \"Not before. Just now while we're making the bed. I'm stressed and when my mind isn't busy, it all comes flooding back.\" She smoothed the edge, surveying the expanse of white. \"Wanna dirty another set and help take my mind off things?\" she asked hopefully.\n\n\"Woman, you've worn me out.\"\n\n\"Then snuggle?\"\n\nWhen I awoke to her getting out of bed, I could see it was still pitch-black outside. \"Work,\" she said softly. \"You can stay if you want.\" She pushed my hands away, giggling. \"I don't have time.\"\n\nThe next week I tracked down the building owner. The long and short of it was, \"Redevelopment. I think the land might be worth more than the building in that location. There's still most of a year left on her current lease, and another long-term lease after that might put me out of the window of opportunity. If she accepts the new price, okay. If not, I have options.\"\n\n\"The building's not making money?\"\n\nHe shrugged. \"The coffee shop's okay, but the parking for it in the back chews up a lot of space I could use. And the two apartments are pretty old and not bringing in top dollar. I tear down, use some of the parking lot to rebuild with four brand-new apartment units, find a commercial tenant that doesn't require so much parking... it just makes sense to me.\"\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\n\"Hey, Taty. Macchiato?\" I asked.\n\nShe glanced over at Bela.\n\n\"Could I talk to you? In the back.\" When I joined Bela, she shut the door carefully, then turned squarely to face me. \"I understand that I have a new landlord.\"\n\n\"Who told you?\" I had intended it as a surprise. I'd be helping her, plus refurbishing the two apartments would give me another project as a company.\n\n\"My old landlord.\"\n\n\"Oh... well... yeah, I bought it. With the bank's help of cour--\"\n\n\"This building?\" She cut me off. \"Out of all the buildings you could have bought in this town, you bought this one?\" Those sounded like questions. They weren't. They were accusations.\n\n\"You said you were upset at the rent increase and I thought...\" I trailed off. Talk about being off-balance from the get-go.\n\n\"And it never occurred to you that that might be a conflict of interest? That maybe dating me and being my landlord wasn't exactly a great idea? You didn't even talk to me about it!\" Her tone was aggressive.\n\nThat irritated me. I had tried to do something nice for someone and now they were landing on me with both feet without even bothering to consider my motive or hear me out.\n\nAgain.\n\nIf there were concerns, a reasonable \"Can we talk?\" would have been appropriate. Then I could have explained why I was pretty sure there wouldn't be a conflict given the way I was arranging things. As that flashed through my mind, Bela ran out of patience waiting for a response -- after all, it had been a whole two seconds -- and went on, her voice decidedly heated.\n\n\"And what if we stopped seeing each other? Hmm? What if I decide that I don't want to date you anymore? Now maybe I have to worry about my business? Does it make you feel more secure to have something to hold over me?\"\n\nWhoa! That last did it. The tone, the implication that a breakup was on her mind, and the snide question pushed me over the line between irritation and anger. Pushed hard. \"You're thinking about breaking up?\"\n\n\"You pick my employees. You try to parent my kid. Now you do this. So, am I thinking about it?\" She shrugged. \"What do you think?\"\n\nWell, the cards are certainly on the table, aren't they? \"You forgot build your house.\" I turned to go, ignoring the sarcastic \"So I did,\" from behind me.\n\nAt the door, I turned. \"I guess I'm just an asshole, someone who'd fuck up another person's life if we didn't work out. Thanks for sharing your opinion.\" I pulled the door open. \"I'll go now but, hey, I promise I'll restrain myself from keying your car on my way past.\"\n\nAs I passed Taty, who was staring somberly, I told her, \"I changed my mind about the coffee.\" I dropped a ten on the counter. \"Keep the change.\"\n\nI thought about that glossed-over conversation after the incident with the teacher conference. Listen to your gut, Matt. I drove home feeling like I wanted to explode.\n\n<p align=\"center\">CHAPTER VII</p>\n\nI was determined that my life would never go into a tailspin over a woman again. It helped that things were busy. We'd taken on a lot of construction work. I held the hands of old clients while they got used to Craig being the front man. I had accountant visits because I was carrying a lot of debt now. Well, the company was.\n\nI also had lawyer visits to finalize some stuff I'd started because I wasn't just an asshole who fucked up people's lives.\n\nIt ripped me up every time Bela crossed my mind. I'd had a hole in my life pretty similar to this one once before. The good news was I knew I'd eventually get past it, even if it took a while. The bad news was I knew how bad it could get. But, as I said, no tailspin, so I stayed pretty much off the sauce and threw myself at the world.\n\nWork. A little more work. The occasional dinner upstairs or with a few other friends willing to reconnect. More work. My evening drink with Taty, both of us careful to avoid landmines.\n\nI knew she wasn't really staying out of it. No matter what she'd said -- lied, I corrected, but sort of white lies, so I forgave her -- I knew she and Bela were best friends now, and I'm sure she heard a few rants.\n\n\"No Bela talk,\" I'd said preemptively the first evening. \"Let me get over it in my own way.\"\n\nShe recognized the tone. It was the same one she used with her children that said, \"This isn't open for discussion.\" She'd nodded and stayed true to her word.\n\n\"Have you given any more thought to my job offer? I'm just curious.\"\n\n\"I'm not quite ready to answer. Soon.\" After a while, \"Matt, tell me about your new apartments. How much will the rent be?\"\n\nI told her. \"Are you moving out?\"\n\n\"I would think you'd want me to get out of your hair.\"\n\nThat's not a denial, as someone once said to me. \"I see.\"\n\nThe head tilt, a long one. \"No. You don't. It has nothing to do with Bela.\" She put up her hands defensively. \"I know you said no talk about her. Fine. I'm just saying that I'm not taking her side, and this idea has nothing to do with wanting to get away from you.\" She grimaced as if to say, \"There. I'm done.\"\n\nI wasn't convinced. My face showed it.\n\n\"Matt!\" Her voice held exasperation. \"Look, you're a moody bastard at times.\" My eyebrows went up. She nodded. \"It's true. And you say and do stupid things sometimes.\"\n\n\"Why don't you just say what you really think?\" I murmured. I wasn't smiling.\n\nShe ignored me. \"But you will never be anything but my friend. Maybe not my 'let's do lunch' girl-talk friend. There's...\" She hesitated, searching for a way to say something. \"There's a little too much gratitude on my end to be that casual.\"\n\nA flicker of the Taty smirk. \"Plus, you're not a girl.\" Then it faded away again. \"But a good friend. And I don't take sides against good friends.\" She stopped talking, watching me to see if it sank in. \"Now you can say something stupid.\"\n\n\"Another glass of wine?\"\n\n\"That's actually not stupid.\" She held out her empty. When I came back with the full ones, she said, \"I want to stand on my own feet. I'm not right now.\"\n\nI knew that. \"There are four: two in the building where our office will be, two where Grano is.\" I suppressed the flicker of pain that had become a constant companion. \"We can waive the security deposit because I know you pretty well.\"\n\nShe sat thinking for a while. \"I don't have quite enough saved for first and last quite yet. When will they be available?\"\n\n\"Two in a couple of weeks. Two a month or so after that.\"\n\nShe nodded and went back to thinking.\n\nI did too. Now's the time, I thought. \"Be right back,\" I said. I returned with a folder and set it down in front of her. Flipping it open, I explained. \"The first page has all the rental numbers I just gave you.\n\n\"The second page shows a drawing from the factory we're converting to condos. It's one of the two-bedroom units, but I had my guy alter the drawing to cut a little from some rooms and shrink the walk-in closets a bit, making enough to have a third bedroom. Everything will be smaller, but completely livable.\n\n\"The third page is a financial workup that shows the purchase cost, the maintenance fees for the homeowner association, and taxes. At the bottom of that page is a mortgage calculation: total cost, current APR on a thirty-year, monthly payments, et cetera. It also shows the taxes and closing costs, which the bank has agreed to keep to a minimum because our entity is registered as a nonprofit. Here is the down payment number. Utilities are a wash.\n\n\"The big thing to notice is how close to the rental the purchase monthly is. Yes, it's a little more, but it's also building equity. I don't know what you'll make at Grano, but I know what I'd pay you and it's doable.\" A misgiving struck me. \"That's not pressure to take my offer. I'm still okay if you say no.\"\n\nShe studied it in shock for a moment, then her eyes lifted to mine. \"When were you going to bring this up?\"\n\n\"Never.\"\n\nHer face creased. \"Umm.\" She gestured at the papers.\n\n\"I was never going to start this conversation. If you asked, fine. If you didn't...\" I shrugged. \"Look, you're a brusque witch at times.\" I grinned at her sharp look. It felt good to return the favor. \"It's true,\" My falsetto mimicked her.\n\nShe shook her head, but I could see the smile lurking.\n\n\"But seriously, you told me quite clearly how important your independence is. I respect that. If you wanted to move out into one of the places we were doing, I knew you'd ask me about them. I was ready in case I needed answers for you. Otherwise, this would sit in a desk drawer.\"\n\n\"If you could realize that,\" she burst out, \"then why--\" She cut herself off, shook her head. \"Never mind.\" She went back to studying the paper. \"I don't have the down payment.\"\n\n\"You can save it soon enough living here.\"\n\nIt was the second time I'd ever seen Taty cry. This time she didn't duck away into her room. She wiped her eyes with the back of her hand, stood, and came over and kissed me. Not a peck on the cheek, a smack on the lips and a long hug that wrapped me up tightly. There wasn't even a single ounce of sex in it. It was \"thank you\" and \"I can't believe this\" all rolled in one.\n\nMy reaction amused me: I guess she finally trusts that I'm not looking for a bed warmer.\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nI walked into Grano. Bela and Taty exchanged a glance of trepidation.\n\n\"What's this?\" Bela asked when I handed her the paperwork from the attorney.\n\n\"The lease agreement.\" I could tell that scared her, but that wasn't my goal. I was shooting for \"I'm doing fine\" with a soup\u00e7on of \"Fuck you.\"\n\n\"You can have your attorney review it, but I'll tell you the highlights. One, it's a ten-year lease on this space with the initial rent at the current rate. Two, rent increases are limited to the annual year-over-year rate of inflation published by the Bureau of Labor Statistics. Three, you can cancel with notice, but the lessor can't. The rest of the terms are pretty boilerplate for commercial rental and all contact is handled by a management agent we're going to use. It's not transferrable by you, but I promise the company will be reasonable if you sell your business. Sign and return it by the end of the month.\"\n\nThe fear disappeared as what I said sank in, but the distant, closed-off expression didn't.\n\nI continued, \"There's one thing I'd particularly like you to note. The date on my signature, notarized by the way, is before that wonderful moment\" -- yeah, I wasn't above sarcasm -- \"of telling you the news. So, this isn't some lame attempt to patch things.\n\n\"All I was trying to do was ease the struggle you were constantly complaining about.\" Her eyebrows shot up at that statement. \"It was supposed to be a surprise that took one piece of stress away.\"\n\n\"Matt! You still didn't talk to me.\"\n\n\"Whatever.\"\n\nShe started to say something else, but she was talking to my back as I pushed out Grano's door.\n\nA week later, I was seriously reconsidering my commitment to Taty. She was a friend. She also wouldn't let me get away from Bela. But I didn't need a reminder from Liv to know which of those two things was more important.\n\n\"Matt, I think I'd like to do this condo thing,\" Taty said one evening. \"What's involved?\"\n\nI walked her through the details, ending with, \"The same type of agreement as the Abode people have. You put in sweat equity. For the apartment, you have to put in two hundred hours.\"\n\nAs soon as I said it, I had a premonition where that would go. Sure enough. I sighed inside that Monday when Taty and Bela arrived. \"Ruth, why don't you help me upstairs on some wiring? John, you've got everyone else.\"\n\nThat evening, as she was helping me load the dishwasher, Taty said, \"I know you're uncomfortable, but she's my best friend and she wanted to help. You don't have to talk to her about anything but building stuff.\"\n\n\"I'm assuming she doesn't want to talk about anything either.\"\n\n\"No, not really.\" Taty's face was unreadable.\n\nWe made it work. It was frosty at first, transitioning to cool after the initial awkwardness passed. I made it a policy to have her work with others. The only problem times were bad weather when we were all inside. Even then, the building was large enough that I could usually keep us separate.\n\nBut it made Taty feel good to have her friend help, so I bit my tongue and stayed civil. It wasn't much different from when I'd had to work with Caitlyn on the Abode project. Except for the feelings of loss -- those were new and needed careful managing.\n\nIt was pouring outside, and John called to say that Madison wasn't feeling well. So, I was holding down the entire fort while he managed his two little ones. Paint and trim day.",
        "\"I'll hold this end so that you can get a good mark,\" I said, reaching for sagging end of the long length of casement trim that would top the picture window and sliding door to the balcony.\n\n\"I've got it,\" Bela said.\n\n\"I don't want something this long mis-cut.\" It was my money paying for the trim.\n\n\"I've got it.\" The words said, \"I'm fine\"; the tone was, \"Get lost.\"\n\nI threw up my hands in surrender. \"Okay. Ruth, why don't you help? Show her how to tack one end first.\"\n\n\"I know how to--\"\n\n\"Oh my God, I've had it with you two!\" Taty's explosion came out of nowhere. Everyone froze. Five foot five of angry woman stepped down off the ladder where she was working on painting the edge of the ceiling.\n\n\"You!\" Taty's finger stabbed in my direction. \"A surprise is a trip to the Bahamas, not becoming someone's landlord without even a word to them. Didn't you learn anything from the time with the teacher's meeting? What does it take to get through to you? A baseball bat?\" Her tone was biting.\n\nI could feel the pulse as adrenal glands kicked in from anger. My reactions weren't cooled by the faint look of \"Yeah!\" on Bela's face. Before I could say anything, I felt nails on my forearm. I looked down at Ruth's hand. Anyone else would have gotten it shaken off, but this was Ruth. She shook her head calmly, and I stifled what I was going to say.\n\n\"As for you!\" Taty's finger swiveled. If I weren't so angry, I would have been amused at how fast the smirk wiped off of Bela's face. \"Do you really think he's trying to control you? Really? How is someone so smart so fucking stupid?\" She tipped her head back and heaved a sigh. \"And now you've made me swear, a habit I've been trying to quit.\"\n\nShe looked at the other faces that were staring at us. \"Everyone out. Now.\" Just like Terrell and Nia when they heard that tone, feet turned obediently toward the door.\n\n\"You.\" Taty was back to me, but her tone had eased into something soft. \"You think I don't know why? But it's not me that needs to understand, and it's not my place to tell her.\" She glanced back at Bela who was standing there in shock, her face a mixture of anger and confusion. \"I've talked myself blue in the face with that one but not about that.\"\n\nShe saw my reaction. \"Yeah, I lied that I was staying out of it. Sue me. But she's too stubborn to hear, and you wouldn't let me talk to you because you're a stubborn mule too.\" The firm tone came back, and her voice regained its normal Taty tone. \"The two of you want each other. So, talk to each other before I use that fucking nail gun on your feet.\" She turned toward the door. \"And there you've made me swear again.\"\n\nIn retrospect, Taty's adjective choice was apt: we stood there mulishly, staring at each other, neither willing to be the first to flinch.\n\n\"Go ahead,\" Bela said.\n\n\"I think you were the one who refused to talk to me and just broke up, so ladies first.\"\n\n\"Because you never talked to me.\"\n\n\"And you did? You were the one who said, 'Hey, Matt, I've got an issue with this. Let's talk'? Yeah, you were all over that,\" I said facetiously.\n\nHer jaw tightened even more. Finally, she sighed and backed herself up against the wall, sliding down to sit on the floor. She waited until I did the same, then spent some more time gathering her thoughts.\n\n\"For my entire life, people have been telling me what to do or taking over from me, mostly because I'm a woman.\" I started to say something. \"Matt, you wanted me to talk, so just shut up and listen, okay?\" I gritted my teeth and subsided.\n\n\"My dad taught Sebasti\u00e1n how to take care of a car. He taught Ana and me that the men would take care of the cars and that Mom would teach us things. It wasn't that I wanted to learn how to change the oil or that I didn't want to learn to cook. I have the garage take care of my car, and I like cooking. It was the principle of the thing.\n\n\"When I got old enough to babysit, my mother... my own mother... told me that I should give my money to my dad who would manage an account for me.\n\n\"And when we got to high school, Ana and I had curfews, and you know the gauntlet boyfriends have to run. Sebasti\u00e1n could do what he wanted, and the only parental direction was about condoms.\" The snarky tone made it clear that she thought Sebasti\u00e1n could have used a little more guidance than that.\n\n\"It was assumed he would go to a good school and become a success. I was subjected to conversations along the lines of, 'We support you, but are you sure college is for you, mija?' You know the result: I went to a two-year school and started working in my aunt's clothing store because, hey, I'm just going to get married and have babies, right?\n\n\"And that brings me to Rafael.\" The expression was distant, remembering, and unhappy. \"I'm not going to tell you all the things that went down in our relationship, some that I only realized long after. I'll just sum it up with one story: when I got pregnant, he informed me that I would get an abortion because we weren't ready.\" Her gaze came back to me. \"And when I talked to my parents, I was told, after the yelling of course, that my father would handle the situation with Rafael.\n\n\"That's when I grew a spine. I finished my bachelor's. I quit the damn clothing store and started my own place. I made a decent life for my son. And then you came along, and I let you in. And then you tried to take over just like every other guy.\"\n\n\"Bullshit!\" She started to retort but I talked over her, feeling the anger flare up. \"I didn't build your house for you; I built it with you. I didn't try to fix Rafi's problems with school; I offered to help with the things you already decided to do about them. I didn't try to fix your car -- you didn't even mention that one the other day -- I offered you a loan of one I didn't need so you could get yours fixed.\n\n\"As for Grano, if you've bothered to read the paperwork, the only thing I did on my own was to stop your rent from increasing. I don't have even an iota of control over your business. And picking your employees? Give me a break. So, bullshit!\"\n\nShe wasn't backing down. \"I didn't mention the car because you talked to me about that. I'm not unfair.\"\n\nI didn't bother to respond. I guess we'll have to agree to disagree on that one, Ms. Navarro.\n\n\"But the others, you didn't talk to me first to get my opinion. I get that you're not the most socially intuitive person, but I made it pretty clear after that teacher conference thing.\"\n\n\"No.\" I shook my head in denial. \"You were crystal clear that I wasn't supposed to try to parent Rafi, which I wasn't trying to do in the first place.\"\n\n\"You couldn't generalize?\" She stared at me in utter bafflement. Finally, she shook her head as if some awful awareness had dawned. \"Oh my God. It's like you're...\" She threw up her hands. \"I guess I should have realized that from how slow you were to pick up hints.\"\n\nWhat was she going to say? Probably nothing that would make me feel better. Her chin rose. \"Matt! Why do you feel the need to take over all the time? I'm able to manage my life.\"\n\n\"I don't.\"\n\n\"You do.\"\n\n\"That's your opinion. I've got mine.\"\n\nI was nearing my limit. That same sense I had felt a year ago when I looked at a gravestone and knew I couldn't bear to visit anymore was back. I'd get over it eventually, I knew that, but not today. I was too invested in something that failed. I pushed myself to my feet.\n\nI guess she saw it in my eyes. She made a frustrated sound. \"What did Taty mean by she knows why?\"\n\nI didn't say anything.\n\n\"God damn it! You wanted me to talk with you, and now I am. So fucking talk!\"\n\nA piece inside broke. Just like that first day way back when, the time Caitlyn pushed with her questions and the whole chain of events started. Anything to stop this! That thought didn't even make it fully into my conscious mind; I just answered.\n\n\"All I was doing was helping. But when it really matters, people refuse help. They're too proud. So, if you don't just do it... then you never, ever get the chance to.\"\n\n\"What the hell does that mean? I've accepted your help several times. And the times I didn't, it was because I didn't need to. I had it under contr--\" She broke off, staring at my face.\n\nThere was a long silence while she studied me.\n\n\"We're not talking about me, are we? We're talking about Liv.\"\n\nI shrugged.\n\nHer voice wasn't exactly friendly, but the open hostility abated. \"Explain it to me so that I understood too.\"\n\n\"When Liv got really sick, she wouldn't let me help. I had to watch from the sidelines. Or not even watch,\" I amended.\n\n\"What?\"\n\nNot \"What?\" like she didn't understand the words. \"What?\" like \"What kind of craziness are you talking?\"\n\nSo, for the second time ever, I pulled out my phone, thumbed up the video app, and let someone else watch. As \"... Don't make me have to find the strength to say no. Just remember me this way...\" faded, Bela looked up at me. Her eyes were shiny. \"Did you--\"\n\n\"Play the next one.\"\n\nFor the first time ever, someone else heard the last words from my wife to me.\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\n\"Can you sign here, please?\"\n\nThe return address was Florida. I guess I knew roughly where she was now. I opened the package. There was a note and a thumb drive.\n\nThe note wasn't in her handwriting. Truthfully, I knew then. After a long, long moment of utter stillness... I couldn't cry; I couldn't rage; I just felt numb... I looked at it:\n\n<blockquote>Dear Matt,</blockquote>\n\n<blockquote>I feel like I can call you that because Olivia has talked about you non-stop since I first met her. I was her hospice nurse.</blockquote>\n\n<blockquote>I'm sorry to tell you that she passed away last night. I hope it comforts you to know that, due to medication, she wasn't in pain at the end. Her last words were of you: she wanted me to make sure you knew she was thinking of you and loved you. She worried about you. She also reminded me to send you the enclosed. She knew she wouldn't physically be able to talk much at the end and prepared this a few days ago.</blockquote>\n\n<blockquote>I want you to know that her time here was not totally unpleasant. She made friends with a couple of other women in similar circumstances and the three of them spent their days in what she liked to call \"an altered state of mind\" and talked mostly about their menfolk -- usually positively, I promise you. Even when they did kvetch a little, it was always in a fond way. She loved you. Never doubt that.</blockquote>\n\n<blockquote>She was absolutely adamant that you should not see what she looks like, and so she has asked to be cremated here. I'm sorry if that isn't what you would prefer, but we must respect her wishes. There will be a small memorial service this weekend. If you would like to come down, then you can reach me at the number below to get details. If that is more than you can bear, then I will have the ashes and her effects sent up to you immediately.</blockquote>\n\n<blockquote>I'm so sorry for your loss. She was a wonderful person.</blockquote>\n\n<blockquote>With all my condolences,</blockquote>\n\n<blockquote>Roberta Goldman</blockquote>\n\nI sat in shock for a while. Even knowing it was coming hadn't prepared me for the reality. Finally, I turned to the thumb drive. I was startled when the video first came up as the camera was zoomed tightly so that only her eyes were showing. Her voice was hoarse, and she talked more slowly than she normally did. It lasted one minute and eighteen seconds.\n\n\"Hello, love. I asked them to hold off on my pain meds for a while so that I'm less foggy. However, I can't talk long as I really do need them. So, I'll make this short and sweet.\n\n\"I hope you can forgive me for taking myself away from you for the last weeks of my life, but how you remember me is the most important thing there is to me right now. I want to always be that young girl who caught your eye when you think back on us. It's the only way I get to go on in the world.\n\n\"Please don't think I'm being cold by sending you this instead of talking to you directly. I'm just not strong enough anymore to say no in person when you insist on coming to see me.\n\n\"Grieve a little. Or,\" I saw her eyes crinkle and I knew she was smiling, \"grieve a lot but not for too long! Then go on with your life. You're too young to waste it on someone who's not around to love you back.\n\n\"One more time: I loved you then. I love you now. I'll love you until the minute I die. And, if there is an afterlife, I'll love you forever.\n\n\"Goodbye.\"\n\nHer finger came up and touched the lens like she was trying to touch my face, and with that, my world ended.\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nBela and I sat there in silence for a long time. The static charge of anger was gone, and I saw that her eyes were wet. Finally, she pushed herself up to her feet and handed my phone back to me.\n\n\"I'm calling it quits for today,\" she said. She took off her toolbelt and dropped it in the corner but didn't leave immediately. She met my eyes.\n\n\"You can surprise me with birthday parties and presents. You can surprise me with\" -- she gave a little half-shrug, half-laugh -- \"a trip to the Bahamas or a little sexy-time when I don't expect it. Or even something like a puppy, I guess. But you can't ever surprise me with a decision about my life, my child, or my work. It's the way I am. That's not going to change... at least, not anytime soon.\"\n\nHer expression was no longer a latent fuck you. \"But I understand a little now... as much as an outsider can, I guess. Taty was right about me being stupid. And I'd be lying to you if I said your help hasn't made me feel warm some nights. I've been lying to myself about a few things. The truth is, I can accept help, even when I don't need it.\"\n\nShe stepped out of the doorway, turning back for one more comment. \"If you still want to offer it, that is. See you later, osito.\"\n\nWhen I came back into the condo, Taty was on the phone. This time there were no deer-in-headlights eyes. This time she locked her gaze with mine and continued her conversation. \"And how has that worked out so far? I can't make you do anything, but I'm your friend and I'm telling you: you should do this. It's not just me who thinks that.\"\n\nShe listened, then said, \"Ruth, for one.\"\n\nWhat?\n\n\"Don't be an idiot! You know the answer to that without asking.\" She listened a little more. \"Okay. I'm glad.\" She hung up.\n\n\"You and Ruth are talking about me?\" I asked.\n\n\"Yes.\" She paused. \"Or rather, you and Bela.\"\n\nBeing flabbergasted interfered with figuring out how annoyed I should be at that. \"Why?\"\n\nShe ignored the question. \"Bela will be here in a bit, and I'd like to say something first.\"\n\n\"Why is Bela coming over?\"\n\nShe ignored that question too. \"I told you I was staying out of it, but now you know I wasn't. I didn't tell you because I knew you'd be certain I was on Bela's side no matter what I said.\"\n\nShe was right.\n\n\"You'd have been wrong. I wasn't going to pick a side between you two because you're both special friends, you both have crap in your past that gets in the way of your present, and you both have problems communicating when you're upset.\n\n\"When you let me see that video, I knew that you were trusting me just to... to... to know what had happened to you, not to use it or try to fix it or do anything else with what you shared. So, the only point of leverage I had was Bela, and that's why I've been talking to her about things. Please forgive me.\"\n\nIt wasn't hard. She was my friend. She hadn't done stuff to hurt me. \"Okay.\"\n\nThe smile was genuine. It said thank you. \"To answer your questions, I talked with Ruth because she came to me. She watched Bela and me for maybe an hour and then said, 'I think you're Bela's good friend.' It went on from there. I knew from some things that you've said that she helped you, so it made sense to talk to her.\" That made me uncomfortable.\n\n\"As for Bela, she's coming over because I want to talk about jobs.\" The Taty smirk came out. \"And because I understand you two started talking today, and maybe that should continue. So, go shower and get work off you.\"\n\nThe three kids were in the back room. The three adults were sitting in the living room. Taty spoke directly to Bela. \"You need to listen to everything I say and not fly off the handle at the first sentence.\"\n\nBela's eyebrows went up.\n\n\"A while ago, Matt told me about a job opportunity with his new company.\" I saw Bela stiffen. Her gaze shifted to me, and I was sure she was trying to decide how betrayed she should feel.\n\n\"If you feel betrayed by that\" -- Jesus, is Taty psychic? -- \"then I have to ask what that's all about. I mean, it should be about what's best for my family, right?\" Jesus, she's playing hardball.\n\nWhat could Bela say but, \"Of course!\"\n\nTaty smiled. \"I'm really happy to hear that because I'll also tell you that Matt wanted me to talk to you before I made a decision. He also said that if I don't take his offer, it wouldn't upset him at all. He just wanted me to know that there was an opportunity. He's been really good at listening when I made it clear that I wanted to be independent.\"\n\nI heard the faintest emphasis on the word \"clear\" and the unspoken message there; I'm fairly sure Bela did too. Taty waited as Bela processed. Bela's gaze thawed a little.\n\n\"Matt,\" Taty said to me, \"you yourself said you don't need a fulltime office manager right now other than someone to take calls.\" She turned to Bela. \"I know that you're going to stretch to pay me what you offered, at least until Caf\u00e9 Ol\u00e9 is a going thing. I also know you can't afford all the benefits that Matt's company can.\"\n\nOver the next five minutes, Taty laid out her proposal. Basically, she wanted both jobs. Bela would have her opening manager and general adult-around-the-place, and at several thousand less a year less since she wouldn't be covering insurance premiums for Taty's family. I would have my back-office person for a fraction of what I was originally planning on paying plus benefits. The remainder of what I was going to spend would hire a part-timer to handle the phone. Taty said she could vouch for a few people who could handle that.\n\nAnd all of this would be done out of an office located upstairs from Grano. \"Commercial real estate is valuable, Matt, especially on a street as busy as your new building's. Why not lease that out and use the less-expensive space for your office?\" she argued. \"And I'm right there to help out even when I'm not working,\" she said to Bela.\n\n\"Of course, think of the tax savings if Matt and you were a single company. You could call it Coffee & Carpentry, Inc,\" Taty teased her with a smirk, \"or Roasts & Renovations.\" Bela rolled her eyes.\n\n\"Taty, no matter what happens between Bela and me, that's not gonna happen.\" I saw Bela's eyes widen at the implication that I wouldn't want to work with her. \"The coffee shops are hers and always will be.\"\n\nThe thaw that had started five minutes earlier got more profound.\n\n\"But that's a lot of hours for you,\" I continued.\n\n\"I'm about to do something I never thought I'd be able to do in my life: buy a home. You think I'm not willing to work hard for that?\" The tone was fierce.\n\nI put up my hands to show I meant no offense. \"I'm okay with it. I'll let you two talk it out.\"\n\nTen minutes later, there was a tap at my bedroom door, and I rejoined them in the living room.\n\n\"We're good,\" Taty said. Bela nodded.\n\n\"I'm glad.\" I was. \"So, what shall we do about food? I'm hungry.\"\n\nI saw Taty meet Bela's eyes with a question. Or maybe it was more of a prompt than a question. There was a pause, then Bela turned to me.\n\n\"Taty said she'd watch Rafi tonight. Will you come home with me?\"",
        "She stopped for takeout on the way and a bottle of wine. We ate sitting at the head of her bed watching Notting Hill, a movie she loved and I tolerated. At the scene where Hugh Grant is trying to explain to Julia Roberts why she's making too big a deal about things, Bela paused it.\n\n\"Were there any other things you were doing that you should talk to me about? I mean, like the rent-situation thing.\" I could tell she wasn't accusing. She was trying to clear the air.\n\n\"I made a list of some locations I heard about that might be good for Caf\u00e9 Ol\u00e9 if the one you found didn't work out. I also put together a list of contractors I think are reliable.\"\n\n\"You don't want to do the work? I mean your company.\"\n\nI shook my head. \"Relationships between clients and contractors are always strained at some point. Do we need that?\" She shook her head. \"But I'll be glad to provide some oversight if you would like.\"\n\nI'd bet even-money there was an internal flinch, but after the briefest of pauses, she said, \"That would take a huge load off my mind.\"\n\nShe un-paused the movie, then stopped it again. She did that woman-thing of taking off her bra without removing her t-shirt, then shucked her jeans down. She looked up at me. \"You're staying, right?\" I nodded, and she smiled and slid her legs under the covers.\n\nI tried to read the room. My best guess was: I'm not in the mood for anything more than having you here, but I would like that.\n\nI slid off the bed, shed my own jeans and socks, then pulled my shirt over my head before settling back beside her in my underwear. I got another smile, and she turned to lean back against my shoulder, flipping Julia and Hugh back to life.\n\nShe fell asleep before I did. I lay there, my eyes getting heavier, not want to disturb her rest. Eventually, I needed to move since my arm was falling asleep. I shifted her down onto her pillow, punched mine into shape. She muttered something unintelligible and I felt her burrow closer, a panty-clad butt pressing into my hip, one ankle reaching back to hook my leg. I drifted off.\n\nIn the morning, I awoke to a hand gently toying with the hair on my chest. When she felt me move, she snuggled in more closely. \"Matt?\"\n\n\"Yeah?\"\n\n\"You drive me crazy sometimes. And I don't always understand you. But--\" The finger twirling the hair wound it into a knot.\n\n\"Ow!\"\n\nShe pulled her hand away quickly. She patted the spot, smoothing the hairs back down. She looked up and met my eyes with an apologetic face.\n\n\"It's okay.\" I waited. \"But...?\"\n\nIt took a few seconds. The fingers came back and absently started toying again. She hesitated longer. \"I love you.\"\n\nI didn't. \"I have loved you for a long time.\"\n\nThe hand stopped. She slid back from me, pushing the covers aside and swinging her legs to the floor.\n\n\"What? You're leaving?\" I said in shock.\n\nShe looked back, face all solemn. \"I'm going to brush my teeth. I'm not making love with morning breath.\" Halfway to the bathroom door, she turned. \"You're not either. Up!\"\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nMy building's holiday party was in full swing. I'd brought Bela, but we'd been swept apart almost immediately as I got buttonholed by a couple of guys who wanted some advice on renovations. The place was full, but our eyes still met occasionally across the room.\n\nMost of the women were in dresses appropriate for an early-evening cocktail party. Some of the younger, single women had gone a little d\u00e9collet\u00e9 and were busy making sure the younger, single men noticed. One even flirted lightly with me, until Bela ran her off. To be fair, smilingly ran her off.\n\n\"We should go if we're going to make an appearance,\" Bela whispered. The Abode holiday party was the same evening.\n\nI nodded and we slid out the door with only, \"Another party. Back in a while,\" to Matt and Angela.\n\nThe second shindig was in a far more advanced state of merriment. John was there with Madison. \"I was hoping you'd get here before we had to leave.\" Madison was ensconced on a chair, looking a little tired. \"Mom's got the baby, but we gotta get back.\" He leaned in and said quietly, \"She's here and she's with someone.\"\n\nBela heard and I saw her eyes track around the room and lock on the flaming red hair by the bar. Sure enough, Caitlyn was on the arm of a rather distinguished guy.\n\n\"Doesn't matter a bit,\" I said back.\n\n\"Good answer,\" I heard muttered behind me, and I reached back and pulled Bela into the curve of my arm.\n\nIt turned out that Caitlyn wasn't the threat to my peace. Other than a frosty greeting from her and a cordial one from me when the swirl of party-currents pulled us near, we ignored each other.\n\nBela was off saying hello to some of the people who had helped on her house when I heard, \"Hello, Matt.\" Two arms encircled me from the side, and an unmistakable sensation of softness hit my arm.\n\n\"Hi, Lindsay.\" I diverted the kiss aimed for my lips to my cheek.\n\nThe hug got firmer for a second, then the hands slid off my shoulders to take my arm and pull it in close. I looked across the room and saw that Bela had, inevitably, chosen that moment to glance my way. Her eyes met mine, dropped down to look at biceps sandwiched in cleavage, and then rose back up to my face. Her head tipped in an expression that, for all the hint of amiability, didn't need a lot of translation.\n\nI pulled enough that my arm came slightly free, but Lindsay didn't let go. She followed me across to Bela. \"Lindsay, you remember Bela.\"\n\n\"Of course.\" The giggle betrayed how much Lindsay was feeling no pain.\n\n\"Bela came with me tonight.\"\n\nI could see Lindsay's hammered brain trying to figure out whether that meant as a date or just transportation. Bela helped her. She leaned in to whisper in Lindsay's ear. Maybe it was the background noise of the party making her speak louder, or maybe she wanted me to hear. Either way, \"That means I'm the one who'll be fucking him tonight.\"\n\nEyes opened wide; hands let go; cushiony softness withdrew. \"Sorry,\" and Lindsay sailed off in search of other prey. I couldn't stop myself: I broke into laughter.\n\nBela gave me a Little Miss Innocent look and took my arm herself. \"Have you said hi to everyone?\" At my nod, \"Then let's go. It seems you can't be trusted at a party.\"\n\n\"Hey, no fair!\"\n\nShe stuck her nose in the air, a sure sign that she wasn't really upset. \"Evidence backs me up. Let's go get dinner. I'm hungry and don't feel like sparring with the next girl who wants to cut you out of the herd.\"\n\nWe were sitting on the couch in my living room. The restaurant we wanted to go to was BYOB and we'd gone to grab a bottle of wine. That had turned into a glass for her before we headed out since they couldn't seat us right away.\n\nShe took a sip. \"I'm sorry to take you away from your friends. I admit I got a little jealous. I'm not insecure. It was more... I don't know... a possessive feeling, that they were trespassing on my turf. I'm sorry.\"\n\n\"I am your turf.\"\n\n\"For sure?\"\n\n\"Of course!\"\n\nShe glanced down at her glass. \"I saw your look when that guy got a little friendly about the mistletoe.\" I shrugged. It hadn't been a big deal.\n\nWhen she turned so that we were face-to-face, I got a little concerned. \"Bela, what?\"\n\n\"There's something I think is understood, at least I hope it is. But we've had communication issues, and so I want to say it. I think that should be our policy.\" She looked at me for agreement. I nodded. \"I'm afraid you'll react badly, that you'll read something into it that isn't there.\"\n\n\"Bela, just spit it out.\"\n\n\"I will never cheat on you.\" Before I could respond she continued, \"If you cheat on me, I will leave you in a heartbeat, no warnings, no second chances.\"\n\nTo someone as monogamous as I, that should have sounded perfect. And it did sound perfect. But, at the same time, something ugly flashed through me. Some little glimpse into that maelstrom that used to sit beneath the veneer, the one I thought had gone away.\n\nBela saw me react. Her face fell. \"Matt?\" She didn't understand. \"Matt, have you...\" She couldn't finish the question.\n\nI rallied myself. \"No. Absolutely not. I've never cheated on anyone and never will. We agree one hundred percent.\"\n\n\"Then what was that? You looked furious for a second.\" Her face, which had gone from firm as she made her statement, to horrified as she thought I might have strayed, now morphed to distraught. \"Do you think I've cheated on you? I swear, even while we were broken--\"\n\nI used my hand to shush her. \"No. I don't think that for a second.\" I pulled her into my arms. \"Not a second.\"\n\nShe pushed back free. \"Then what?\" When I didn't respond right away, she chucked me under the chin. \"Hey. We're supposed to be talking now. Do I need to get Taty in here?\" She was making a joke, but I could see she was serious. She wanted to know what was lurking. The trouble was, I didn't know myself.\n\n\"I'm not sure,\" I said slowly. She waited patiently while I tried to figure it out. \"For a while after the accident, I found myself getting angry and upset a lot, over little things.\"\n\n\"I know.\" I looked at her in surprise. \"Girls talk, Matt. Taty, Caitlyn, even Angela have mentioned that you were having issues. Caitlyn said it was normal after a concussion.\"\n\n\"It's gotten a lot better. I think it was getting out of the house. And especially since I've been seeing you.\"\n\nShe smiled at that but shook her head. \"A few weeks--\" she broke off.\n\n\"What?\"\n\nShe hesitated a moment longer. \"A few weeks ago, Ruth said something to me.\" I waited. \"She said you started getting better when you finally let yourself cry for Olivia.\" She watched my face to see how I took that. I didn't know what to say. \"It's okay, Matt. I'm not upset. She was your wife. I think it's healthy that you finally allowed yourself to grieve. I'm not going to leave you over that.\"\n\nThat brought the spike of anger again, harder this time.\n\nI barely heard what she was saying as she stroked along the side of my arm. \"What is that, right there? Tell me what you're feeling. I want to know. Please, don't shut me out. Talk to me.\"\n\nHer words flowed over me, not penetrating.\n\n\"What am I doing to make you mad?\"\n\n\"It's not you. It's Liv.\"\n\n\"What about her?\"\n\n\"I don't know.\" And then what should have been obvious all along actually became obvious to my thick head. I could feel myself getting angry all out of proportion. I thought I'd handled that shit months and months ago, back in the Caitlyn days. Now I realized I'd done what I always did: stuffed it down inside, left it alive to spring up later. \"It was when you said you'd leave me. She left.\"\n\nHer face cleared. I realized she'd been afraid that, despite what I said, I was angry at her for poking. \"She didn't do it to hurt you.\"\n\n\"But,\" I realized I had started to raise my voice and tried to lower it, \"she was my wife. Do you know what it's like to sit at home not knowing if the person you love is alive or dead?\" I'm afraid I wasn't that successful at controlling myself: my voice was back to loud by the end of that sentence.\n\n\"She felt she needed to go, Matt.\"\n\n\"Out the door with no discussion. Only her pride mattered. I guess she just needed someone else for comfort.\"\n\n\"No! It wasn't that. And yes, she was selfish,\" Bela agreed. \"But demanding she stay would have been selfish of you. There were no easy paths at that point.\"\n\nI didn't know what to say to that.\n\n\"She wanted to spare you.\"\n\nI did know what to say to that. I'd said it over and over to myself for a year. \"I didn't want to be spared,\" I spat. \"I wanted to be there for her.\"\n\nShe didn't flinch. \"Then the question is, can you forgive what she did knowing that she was absolutely terrified you wouldn't love her anymore if you saw her that way?\"\n\nAfter a moment of stunned silence, I reared back in protest. \"What the fuck! How could she think--\"\n\n\"Matt!\" Her hand tightened hard on my forearm, her tone bringing me up short. \"She was dying horribly and painfully at age thirty. She was scared out of her mind. Think about it: she had only two things she wanted to say to you at the end. Everything was how much she loved you... and how important it was that you always saw her as the pretty girl you fell in love with.\"\n\nShe reached up and cupped her hand along my jaw as she went on. \"It wasn't pride. That's just the excuse she gave because she couldn't bear to put her fears into words. Your love was all she had left, and she clung to it like a drowning person. She wasn't going to allow anything to threaten that. Not your feelings, not hers, nothing! Sad, angry, even furious: all of that was fine... as long as you still loved her.\" She shook her head.\n\n\"Yes, you and I know you still would've loved her no matter what. Of course, Matt. Of course! But you can't expect rational thought from someone in that place. She was terrified of losing the one thing that mattered most to her.\"\n\nI had never thought of it that way. I had never understood the reason for her departure. All of a sudden it was more than I could take. I started crying. Not a few tears. Deep, wracking sobs came out of nowhere.\n\nBela held me through it, half-curled into a ball against her chest as the emotions poured through me: shame that I'd ever doubted Liv's motives; sorrow that she hadn't realized that absolutely nothing could ever have made me stop loving her.\n\nThat brought me up short. Here I was, crying over one woman in the arms of another. \"Oh, Bela, I'm sorry! I love y--\"\n\nShe cut me off as I started to babble some protest, some reassurance that I loved her.\n\n\"If you stopped loving her just because you started loving me, I would have misjudged you. I'm not jealous of her, Matt.\" She pushed me upright so she could see my face.\n\n\"The way you feel about her reassures me that you'll love me forever too.\"\n\nShe used her fingers to comb my hair back off my forehead. \"As long as you live in the present, I don't mind if you remember the past once in a while.\"\n\nHer hand slid down and grabbed me under the chin. \"But any other woman is a different story, buster. If those tarts manage to show up at the next party, don't you forget whose guy you are!\" She was smiling as she said it. She knew she had nothing to fear from them.\n\nI smiled weakly. It was the best I could manage given the emotions. \"I'll keep that in mind.\"\n\n\"Good. Remember, the Spanish perfected the Inquisition!\" She stood and walked back toward the bedroom, quietly reciting, \"Fear and surprise. Fear, surprise, and ruthless efficiency. Fear, surprise, ruthless efficiency, and an almost fanatical devotion to the Pope.\" She glanced back, gave me a wink and a broad smile. \"Wash your face and let's go eat.\"\n\nI didn't move as she disappeared. I sat there thinking about where my life had been, where it was now, and where I saw it in the future. I thought about regrets: mine and others. I thought about how much I loved Liv and how much I loved Bela. It was different and, yet, it was the same--\n\nNo. That was wrong. It was the same even though they were different.\n\nShe came back into the room after about five minutes. Her look was equal parts exasperated and quizzical. \"Hon, you need to clean up a bit. Change your shirt. I'm starving!\"\n\n\"Bela?\"\n\n\"What?\"\n\nI had trouble speaking for a second. As I struggled, I saw her expression change, the deliberate light-heartedness giving way to concern. \"Oh, I'm sorry! I was trying to cheer you up. We don't have to go out to--\"\n\nThis time I was the one cutting her off. \"Isabel Navarro, will you marry me?\"\n\nHer expression changed a second time, from concern to surprise. Then a third time, from surprise to something warmer. She sank onto the couch beside me and took my hands in hers. She stared into my eyes for a long moment, then said, \"I have baggage.\"\n\n\"Pfft,\" I said, dismissing that. \"Who doesn't?\"\n\n\"Yes, but mine's six years old and will be around the house another decade or two.\"\n\n\"Doesn't matter. I wouldn't change anything about you.\"\n\nShe started crying. \"Then, yes, I'll marry you.\"\n\nIt was a surprisingly chaste kiss given what we'd just decided to do but, somehow, it seemed appropriate after the last half hour. I sat there with my arm around her until something occurred to me. \"I don't have a ring.\"\n\n\"Pretty poor planning, Brennan.\"\n\n\"It wasn't a plan.\"\n\n\"I was just teasing.\" She sat up. \"Go clean up and change your shirt. I'm hungry and need to be fed. We'll go ring shopping afterward. Scoot! Oh, and osito?\" she said. \"You've just made me the happiest woman on the planet.\" She leaned in for another kiss, and this one was longer by a country mile, soft and romantic, body molded up against mine. \"I love you.\"\n\nMy whispered, \"Me, too,\" brought another kiss.\n\nThe condo party was still in full swing, albeit noticeably more inebriated, when we got back two hours later.\n\n\"Hey, Matt,\" Angela called as we walked into the rec room, \"I so glad you guys-- Oh my God!\" Somehow, with a radar that women seem to have, she'd spotted Bela's left ring finger from fifteen feet away. She practically teleported across the distance to snatch up the hand and gush, \"It's beautiful! Oh, I'm so happy.\" Angela threw her arms around Bela in a big hug as Matt caught up to his wife.\n\n\"Congratulations,\" he said, shaking my hand.\n\nAngela's arms wrapped around me next. \"Good for you.\" She pulled back to look me squarely in the face. \"Everyone who has loved you is happy for you right now.\" I knew what she was saying. She was right.\n\nI leaned in and gave her a big kiss on the cheek. \"Thanks for being my friend even when I made it hard.\" I gave her another kiss.\n\nShe blushed and swatted me, \"Oh, stop it. You'll make Matt jealous.\"\n\nHe laughed and caught her around the waist, pulling her into his shoulder. \"Now that he's safely taken by this gorgeous woman, I'm not worried.\" He glanced over her head at me with a smile and a wink at our private joke.\n\nBela caught it and gave me a look, but I just shook my head and mouthed, \"Tell you later.\"\n\nWe became the center of the party. Bela spent the next five minutes, when she wasn't being hugged by men and women alike, good-naturedly telling me to wipe the lipstick off my cheek.\n\nTaty came up and wrapped her arms around me in a big hug. \"I told Bela I'll open tomorrow morning,\" she whispered in my ear. \"Go be with your fianc\u00e9e.\"\n\nOur night was interrupted at one in the morning when Bela's phone rang.\n\n\"At this hour?\" Bela said with a slight frown of concern. \"Hello, mam\u00e1.\" I could hear her mother talking but it was unintelligible until Bela hit the button for speakerphone. \"She wants to know where I am and what I'm doing.\"\n\nShe flashed me a dirty grin. \"I'm trying to decide whether to tell her what I'm doing. In the meantime, say hello, Matt.\"\n\n\"Hello,\" I said dutifully.\n\nYou could hear a pin drop. \"Mam\u00e1, Ana has Rafi and everything's fine. I'll talk to you tomorrow.\"\n\nThe speaker erupted. \"\u00bfC\u00f3mo pudiste avergonzarme as\u00ed? Ven a...\" It went on for a bit. Bela waited until it died down, then translated. \"Now she wants to know how I could embarrass her by putting her on speakerphone in front of you. She wants me to get dressed and come home right now.\"\n\nAs the torrent of Spanish protest started up again even more furiously, Bela loudly and firmly talked over it. \"Mom! I'm a big girl. If I choose to spend a night with a man, it's none of your business. Goodbye.\" Without waiting for a response, she hung up.\n\nThe Navarros, senior and junior, didn't do upset-at-you in half-measures, did they?\n\n\"My ass is grass tomorrow, and your ass will get oh-so-politely mown next Thursday.\" She snuggled back against me. \"Worth it though. Now, where were we? Oh, I know.\" She leaned into my neck and whispered, \"You did such nice things to me a while ago, I had my hand here\" -- I felt warmth cup me -- \"and was telling you all the things I was going to do to your body in the dirtiest way I could.\"",
        "<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nMonday, we were sitting in the enclosed sun porch of the worksite with our feet up on the rail, watching the light flakes come down. \"So, you're going to be Bela Brennan?\" Ruth asked. \"Or still Bela Navarro? Or, God help us, some hyphenated monstrosity no one will use?\"\n\n\"Well, sort of both, I guess.\"\n\nRuth looked puzzled.\n\n\"Well, my mom's mom who, I must warn you, is a total snob\" -- Bela giggled -- \"would say that my name will be Isabel Mar\u00eda del Pilar Navarro e Abenda\u00f1o de Brennan, but I'm planning on signing my name Bela Brennan.\"\n\nRuth snorted. \"Good thinking! I swear to God I wasn't even eligible for a senior citizen discount when you started reciting that. Now, look at me.\"\n\n\"Isabel is such a pretty name,\" one of the women chipped in. \"Especially the way you say it. So soft. Prettier than the Isabella you hear about in Ferdinand and Isabella.\"\n\n\"Isabella is anglicized,\" Bela said gently. \"She's Isabel in Spain.\" I smiled. The name was beautifully soft the way she said it.\n\nShe continued, \"I always had sort of a love/hate thing with the name. I mean, I actually like it, but I hated the constant, 'One day you'll be a big girl named Isabel just like your mam\u00e1 and your abuela.' I wanted my own name. It's why I still go by Bela, to be separate. My grandmother is Isabel. My mom is too with her friends, and Chavelita to my dad, and Isa to close family.\"\n\n\"Except prospective sons-in-law,\" I added sotto voce. \"To them, she's Se\u00f1ora Abenda\u00f1o and don't you forget it!\"\n\nI winced from the dig in the ribs as my fianc\u00e9e corrected me, \"I said close family, not some Yankee who defiled her daughter.\"\n\nThings hadn't gotten off to the greatest start in that regard. We'd sworn Ana to secrecy when she spotted the ring and told her we'd be at the Thursday dinner to tell her folks. \"Act surprised, sis.\"\n\nWe showed up a little before six. Bela had removed her ring and dropped it in a pocket to avoid giving it away as we waited for Ana to get home from work. I dealt with the daunting task of making small talk with her mother. It was made twice as bad by that a.m. phone call. That woman turned polite disapproval into an art form.\n\nIt was during dessert. Bela's hands went under the table and when they came out, she was wearing the ring. \"Matt has asked me to marry him and I said yes,\" she said.\n\nAna immediately gushed, \"It's beautiful!\"\n\nHer father looked startled and then beamed.\n\n\"\u00bfEst\u00e1s embarazada?\"\n\nAna's shocked \"Mother!\" came at the same time as my disbelieving \"Is she pregnant?\" Calm be damned. My tone was no longer prospective-son-in-law polite. It was cold. \"I'm sure that was supposed to zip right over my head, but did you seriously just ask that?\"\n\nThe grim expression turned from Bela to me.\n\nBela threw me a look that said, plain as day, \"Back away. This is my fight.\" She held my eyes for the brief second it took until I tipped my head in acceptance. That earned me a flicker of approval. Turning to her mother, her voice was firm. \"No, I'm not pregnant. And while we're at it: you need to get over what happened with Rafael. Enough is enough. If you can't accept that, we're done here and will not be joining the family dinners in the future.\"\n\nWhen her mother opened her mouth to respond, there was an immediate ripple of Spanish from her father: far faster than I was used to, and the soft \"th\" pronunciation of Spain was disconcerting to ears that learned from a South American-born teacher.\n\nWhatever the words were, the tone was absolute iron. It matched the look on Bela's face that clearly signaled there would be no discussion on the matter. Her mother closed her mouth without a word, contenting herself with a frown. Her father switched to English. \"And now, there will be only English at this table because we have a guest.\" He turned to me. \"Unless you speak Spanish, Matt?\"\n\n\"Not really. A few years of it in high school. That's it.\" He nodded.\n\nAs I was leaving, he said quietly to me, \"The instant... I mean the very instant... the priest says, 'man and wife,' she will change her tune and deny she ever felt anything but affection for you. She thinks you're a good person and has said so to me, and she sees how much Bela loves you and vice-versa.\n\n\"She's just petrified about another esc\u00e1ndalo\" -- he pronounced the word with an over-the-top roll of his eyes, a shiver, and a tone of mock horror -- \"and doesn't realize that it isn't a scandal these days.\"\n\nAs we walked over to the garage, Bela added her own two cents. \"That's why I wanted to name my son after dad. Even with Rafael he was in my corner, and he didn't like him nearly as much as he likes you. But mom will come around.\"\n\nHer face was the picture of innocence as she opened the door up to her apartment. After a quick check to make sure Rafi was still asleep, \"Hey, wanna fool around and think about how nervous it would make her if she knew?\"\n\nI gestured toward the boy on my shoulder.\n\nShe gave a playful shrug. \"He's out, and I've changed my mind about locked bathroom doors.\"\n\n\"You're bad,\" I laughed.\n\n\"Really? I thought I was pretty good at it. I guess we need to practice.\"\n\nHer father nailed it. As Bela's mother took my hand in our dance at the wedding reception, she confided in me. \"I am so happy to have you in the family, Matt. I knew you would be a wonderful man for Bela. I hope you will call me Isa or even mam\u00e1.\" I smiled to myself.\n\nI told Bela when we sat back down. She started giggling. Her grandmother, who was sitting by her side, beaming at the entire room, looked a question at her. After hearing the answer, her grandmother rattled off a short sentence. Bela clapped her hands to her ears and said, \"Oh my God, abuela! Don't tell me that!\" Grandma tapped her nose and nodded, then went back to watching her extended family enjoy themselves with every appearance of utter contentment.\n\nBela grabbed my hand and pulled me to my feet. \"Let's dance!\"\n\n\"What did she say?\" I asked when we were in each other's arms.\n\n\"She said she's pretty sure that one... meaning my mother... didn't exactly go to her wedding night a virgin. God, I'll be in therapy for years picturing it,\" she laughed and caught the train of her dress up over her arm.\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nJust when you get comfortable, life throws a curveball.\n\nFour months later, she was sitting at the kitchen table, a stunned expression on her face. I felt my heart stop: her expression was a mirror of the shock that had been on Liv's face when she got the initial test results.\n\n\"What is it?\"\n\nHer countenance took on an added element, almost as if she were afraid to talk to me. She didn't respond immediately.\n\n\"Bela! What is it?\"\n\n\"I'm pregnant.\"\n\n\"Oh my God!\"\n\nHer face creased in worry. \"I know we haven't talked about it. I'm sorry. I don't know how it happened. I didn't plan this, I swear! Maybe those antibiotic--\"\n\n\"Bela!\" I cut her off, belatedly aware that my response had been completely ambiguous. I pulled her up out of the chair into my arms. \"That wasn't, 'Oh my God, how could this happen?' That was, 'Oh my God, that's wonderful!'\"\n\nShe peered up at me to see if I was serious. Some of the tension drained out of her as she saw the smile on my face, but she still looked nervous. \"Matt, that's not all of it. A child's only half of it.\"\n\n\"What?\"\n\n\"It's twins.\"\n\nI'm sure my expression was just as stunned as hers had been. \"Wow! That's... well... that's a gamechanger.\" She was still anxious as she watched me process it. \"Umm,\" I said seriously after a long moment, \"I guess there's something we... well, you... might want to consider. I'm discussing, not telling,\" I said defensively.\n\nHer expression turned guarded and she pulled back.\n\n\"Once they arrive, we're going to be run ragged,\" I continued. \"I think we need to get as much sex in over the next few months as we possibly can.\"\n\nFor a second, she couldn't decide if she was astounded at my flippancy at a time like this or exasperated that my mind was in the gutter. In the end, though, neither of those emotions won: a grin tugged at the corners of her mouth, matching mine. \"Well, I won't get any more pregnant.\"\n\n<p align=\"center\">\u2022 \u2022 \u2022</p>\n\nShe looked down at the two tiny bundles -- they'd arrived suddenly, weeks early but perfectly healthy -- nestled on her lap in the hospital bed. \"We haven't settled on names,\" she said.\n\n\"I'll go with whatever you choose, but I have a proposal.\"\n\n\"Oh?\"\n\n\"I was thinking this one,\" I reached over to touch a small hand, \"should be Thomas Navarro Brennan after your dad.\"\n\nShe beamed at me.\n\nI was nervous as I went on. I loved this woman and had no desire to wound her. \"And this one,\" I touched the other, \"I would like to name her Isabel after you and your mom... Isabel Olivia Brennan.\"\n\nThe smile never faltered, not even for an instant, but she shook her head. \"No. That's a nice name but no, Matt, no. When my mother and grandmother came over... four of us!\" She laughed and shook her head. \"\u00a1Ni pensarlo!\" Don't even think it!\n\nShe looked up at me with those warm, brown eyes. \"I think Olivia Isabel Brennan will suit her better.\" She glanced down again at the twins and then looked to the small boy lying quietly next to her on the bed. \"Rafi, meet Tommy and Liv, your new brother and sister.\"\n\n<p align=\"center\">\u2500\u2500\u2500\u2500 The End \u2500\u2500\u2500\u2500</p>\n\nThis came about because I read a spate of stories (\"spate\" being three in just a couple of days) that opened with the protagonist somewhere between broken and actually suicidal over a deceased wife. He then meets someone new. No problem with that. I kind of like that formula.\n\nThe first one I read I enjoyed tremendously, as have many other readers on this site.\n\nThe other two gave me pause. Within an amazingly short span -- and I mean that both in terms of sentences on the page and elapsed story time -- the first wife becomes nothing more than an occasional memory and disappears instantly from the story except for a tag line in the last paragraph.\n\nNow, I certainly don't have a problem with someone finding a second love in their life. Nonetheless, I couldn't stop thinking: all it took was, literally, four brief sentences of conversation to drive her out of his mind?\n\nI decided I wanted to write something where the grieving over old love was just as important an element of the story as the finding of new love.\n\nThanks to V. for making me think about the characters over and over. And over. *smile*\n\nI hope you thought it worth your time. Thank you."
    ],
    "authorname": "chasten",
    "tags": [
        "coffee shop",
        "construction",
        "romance",
        "single mother",
        "spanish",
        "widower",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/let-him-cry-pt-04"
}