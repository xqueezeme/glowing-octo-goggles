{
    "title": "Duplicity Ch. 16",
    "pages": [
        "Hey guys-Ask and you shall receive! So after posting a comment in the last chapter, I got some help with editing (Fist pump Yeah!). Lol I want to thank TJ for all the help in editing this chapter. The next chapter is shaping up nicely and I hope to finish and post within the next 2 weeks (hopefully sooner). Don't forget to comment! Thanks for your continued support. --p2p- \n\n*\n\nHis mind was blank.\n\nHe was on autopilot. The subconscious part of his brain told his body what to do. Willed his body to go through the motions and... Drive.\n\nThere were no thoughts running wild through his head. No words screaming inside of him. \n\nNothing. \n\nHe just drove.\n\nAccording to his phone he was less than a mile away. The tracking device he planted on her when they were on the beach that day was still active. It was proof she was still there. There was still hope. \n\nThe red blinking light on the screen was like a beacon for his salvation. It was the only thing keeping him together. The tender fabric of his reality was stretched too thin. He'd been through too much. If he lost her, he... he... he didn't want to think about that. \n\nBeing around Rollins tempted the darkness he kept deeply tucked away to its limit. It begged to come out and now, with his mind blank, he had no control over it. \n\nHe prayed he got to her in time. Before it was too late for her. Before it was too late for him.\n\nWhen he approached the designated area, it was quiet and desolate. There were no cars or trucks, nothing indicating there was life for miles. It was an abandoned construction site. There were blocks of cement scattered everywhere. It looked like it was originally intended to be a large bank. However the overgrown weeds grew over the concrete, as if stretching their limbs tightly over the manmade material. \n\nThe bright sun peeked through the trees branches. It was hot, almost uncomfortably so. What started out as the most memorable day was now one full of anxiety.\n\nSean got out of the car and started walking towards the ruins. He assessed the area as he walked. His gait was heavy, full of apprehension. His feet felt as if they were made of concrete. \n\nHe willed himself to keep a steady head, but his chest rose erratically. He knew what Rollins was capable of. Those horrible memories from so long ago haunted him. The ones he tried so hard to forget were suddenly coming back to him. \n\nHe knew this was a trap, but he didn't care. Layla was the only thing that mattered. There was no other option. \n\nAs Sean approached the open area his stomach clenched. He was quiet as he tried to listen for any signs of distress, but heard nothing. And yet the red light on his screen still blinked. He followed it throughout the fallen building.\n\nHe found himself at the center of what looked to be the bank's original lobby. The construction was in a semicircle. There was no roof. Roots of large trees had already started to force their way down the crumbly walls like an octopus stretching its tentacles for anything in its reach.\n\nSean did a sweep of the perimeter, but found nothing. He glanced at his phone again. Suddenly the red blinking light that had been his lifeline vanished.\n\nPanic rose from within him. He shook his phone as if it would somehow bring the blinking light back. Bring her back.\n\nRushed sounds of agitated flying birds flooded the area. In the opening up above the squawking birds huddled together as if spectators to see the upcoming battle. \n\n\"Looking for this?\" A deep voice asked. \n\nSean quickly turned towards it and found a stocky man holding the adhesive tracking device Sean planted on Layla. He roughly squeezed it between his fingers and flicked it away. \n\nThe man's blue eyes gleamed as he spoke. It was as if he enjoyed the predicament they were in. He was a beast of a man like a rugby player. He was fair skinned with a light blond buzz cut. His nose was severely twisted as if it had been broken one too many times. He wore cargo pants and a white shirt. His body rippled with muscles and yet his stance screamed stealth. He could move very quickly if need be. There was something familiar about him.\n\n\"Where is she?\"\n\n\"Don't you wanna know who I am first?\" \n\n\"My guess is you're the guy walking around disguised as Layla's friend Henry. The one who befriended her in the airport. I wasn't sure until now but you're also Rollins' go-to man to clean up loose ends.\"\n\nThe man chuckled. \"That's right mate, Henry Forrester at your service. I was hired as the backup plan. An insurance policy if you will. If you didn't give Rollins the device, I'd get rid of her. If you gave him the device, Rollins would still get rid of you and her. Very limited options, really.\"\n\nSean looked at him impassively. \"Where is she?\"\n\n\"She's safe for now... I'll tell you what, I'll make a deal with you. You take me down and I'll instruct my men to let her go. I'll take you instead.\"\n\nSean was already removing his black tux jacket and threw it to the side. His once crisp white shirt was now wrinkled and had specks of Rollin's blood and dirt on it. He might as well get this over with. \n\n\"And I'm supposed to just trust that you'll let her go?\"\n\nHenry smiled displaying a full row of somewhat crooked teeth. \"Of course.\"\n\n\"You're full of shit.\"\n\nHenry let out a chuckle. \"No weapons, just your fists. I'll let her go in your place.\"\n\n\"No weapons? And you'll let her go unharmed.\"\n\n\"That's right. See?\" Henry withdrew the semi-automatic pistol from his jacket, raised it up and slowly lowered it to the ground. He kicked it to the side, far away from both of them. \n\nSean withdrew his gun, lowered it and kicked to the side as well. \n\nThey squared off, fists in position. Impulsively Sean threw the first two punches, one right after the other. Henry's head involuntarily snapped to the side. He let out smile. \"Not bad.\" \n\nThen in succinct order, Henry threw blow after blow of hard rapid punches. He socked Sean in the ribs, face, ribs and face again. \n\nSean let out a grunt but skipped back away from him. He spit to the side and a little bit blood streamed out. With his hands up he was ready for the next round. Sean could tell this man was an expert bare knuckle boxer. His fists felt like bricks of solid mass. He was fast too. He didn't even realize he'd been hit until he was done with the fourth blow. \n\nHenry cracked his neck and cleared his throat. He was going to enjoy this.\n\nSean wanted to wipe that smirk off of his face. Badly. Then the motherfucker spoke...\n\n\"You know that girl of yours sure is pretty. Mm-hmm. Skin like Nutella, I just want to lick her up and down.\" \n\nSean saw red. \n\nSean charged him like a bull. But Henry easily dodged him. Instead Henry landed another punch to Sean's already tender ribs, catching him off guard. Henry took advantage and yanked him into his knee and continued kneeing him in the stomach over and over again. As Sean hovered, Henry slammed his elbow on Sean's back. Right above his lung. Sean doubled over in agony and wheezed. He was short of breath. It felt like he was choking.\n\nHenry crouched down and whispered. \"Now, I didn't get a chance to touch her yet, but...\" he deeply inhaled \"she smells so good. Like flowers.\" \n\nSean's pained eyes pinned his with the deepest hatred. Die. This man was going to die today. \n\nSean screamed at his body but it wouldn't cooperate. He could barely take in air. He just needed a minute, but he was cornered. \n\nThen Henry attacked again. He roundhouse kicked him across the face. He held him by his collar and punched him repeatedly in the face. Sean couldn't do anything but take it. He felt so weak. \n\nHe was too emotionally invested. He kept making careless mistakes. He wasn't thinking logically or strategically. No doubt that was Henry's goal as he taunted him.\n\nAs he felt the violent blows, Sean cleared his mind. Just as he trained. \n\nHe made himself hollow. \n\nLike a steel drum in the middle of a lush forest. \n\nThe smell of the sweet morning dew lulled him and numbed him from the pain. \n\nThere was nothing around him. Nothing could hurt him. Nothing could break him. \n\nSoon Henry's punches slowed. His fists felt heavy and his shoulders drooped. In that moment Sean's head turned towards Henry with his eyes closed. His gaze was serene. As if he was sleeping. Henry was caught off guard. He didn't know what was happening.\n\nSuddenly Sean opened his eyes and head butted him with all his strength. He heard a sickening crunch. Henry stumbled and let out a shrill cry of pain.\n\n\"Fuck, not again!\" Henry growled through clenched teeth. This would be the ninth time his nose was broken. \n\nSean didn't let up, he was like a machine. Blow after blow. Something from deep inside of him was unleashed. He swiftly administered it to Henry's face and torso. Then, in one fell swoop, Sean kicked Henry's legs out from under him. The large man landed on his back with a loud thud. He remained unconscious on the floor. \n\nSean quickly raised his fists in a fighting stance again but when he saw his opponent was finally down; he cautiously watched his every move. Sean dragged Henry's heavy body to the wall and tied him up with some rope he found. \n\nSean quickly grabbed the guns they discarded and smacked Henry awake. \"Hey. Hey! Make the call.\"\n\nHenry's eyes filtered open and struggled to get out when saw he was tied up. Henry clenched his teeth. \n\nSean mashed his foot over the rib he knew was broken. Henry let out a roar as he gurgled from the searing pain. \n\n\"Do it.\" Sean hissed. \n\nHenry gestured towards his phone in his pocket. Sean retrieved it and Henry instructed him to dial the last call. As soon as the other line picked up, he barked out orders to bring her out.\n\nSean's aim remained steady on Henry, but his head turned towards the sound of shuffling. \n\n\"Easy. Easy.\" Sean instructed the two armed men he saw walk in by Layla's side. There she was. She was wild eyed and looked completely petrified. \n\n\"Lower your weapons and let her go.\" \n\nWhen the men didn't immediately comply, Sean eyed Henry and dug his heel into his side even harder. Henry squirmed and yelled for them to listen to him. They slowly removed their weapons and slid them to the side. Then they promptly released Layla from her restraints and took the gags off.\n\nWhen Sean and Layla's eyes met Sean let out a small smile and she whimpered as tears fell from her cheeks. Her heart beat loudly in her chest. Her heart broke at seeing Sean. He looked badly bruised. His face was full of purples and blues and his eye was swollen. He came for her. Just like he said he would. God, how she wanted to run to him and hug him! She wanted to tell him how sorry she was. \n\nLayla looked at the men and slowly walked towards Sean. She was only a few feet away. Just a little closer...\n\nShe rushed over to and ran into his arms. He held her tight and deeply inhaled. Before he uttered a word, his gaze shifted and in that millisecond he realized Henry was gone. \n\nHe quickly turned around, but it was too late. \n\nSuddenly without warning Henry stabbed Sean in his mid-back with a large blade. \n\n\"No!\" Layla screamed. Sean's eyes widened in surprise as the excruciating pain traveled through him. He almost passed out from the piercing vibration that echoed throughout his back. Layla tried to attack Henry, but the men were already there and restrained her. She kicked and scratched and screamed but she couldn't get out from under them. Her world collapsed.\n\nHenry let go of him and Sean had no choice but to fall to his knees. He tried to reach behind but any movement made him cry out in pain. \n\nHenry let out a hearty chuckle. \"That was for breaking my nose again.\" Then he roughly grabbed the gun out of Sean's hand.\n\nSean's breath was labored and he furrowed his brow in confusion and despair. \"Just let her go.\" He managed to say.\n\nWhen Layla caught hold of Henry's smirk, she screamed and yelled obscenities at him. She couldn't believe this vile man was Henry. Someone she thought of as a friend.\n\nEarlier that day when she first realized this man was the Henry she befriended on the trip there, bile rose from deep within her gut. \n\nThree men approached her and Ron. He was the guard Jason sent to accompany her. Initially she was surprised to see Jason send a guard to accompany her, but even more surprised to see they were being approached by these men. At first she thought they were also there as additional security. \n\nThey didn't know what was going on, but knew something was terribly wrong when they became hostile. Even though Ron had a gun, he was no match for these men. Henry barreled over towards Ron and swiftly snapped his neck and continued on his way. \n\nLayla's eyes widened in horror as shock overtook her. It wasn't until she was dragged away that she realized they were actually there for her. \n\nLayla found out Henry had been wearing a disguise this whole time similar to Merle's. He was completely different in real life. He was no longer jovial, sweet and well-mannered; he was a merciless killer. His sole purpose was to get close to her to cause her and her friends harm. Desperately she tried to scream but was quickly bound and gagged. She didn't know what the fuck was going on, but she remained silent when she saw the crazed look in his eye. \n\nWhen they arrived at the location they were at now, the unscrupulous armed men grabbed her and shoved her to the hard concrete floor. \n\nThey told her to shut the fuck up and stop squirming around. They looked to be in an abandoned building. As the time passed, one of them remarked they were bored. The other suggested they have some fun while looking suggestively towards Layla. \n\nLayla tried to shuffle away, but one of the men quickly smacked her and pulled her hair while the other taunted her. They told her the disgusting things they wanted to do to her. They said they liked to hear her scream and how much they wanted to her scream louder. \n\nIn response, the bile she managed to hold down all this time, came up. She threw up all over one of the men's shoes. The man was completely enraged. He barreled towards her, reaching for her neck to choke her with his bare hands.\n\nSuddenly they heard a noise. The man immediately stopped dead in his tracks as they looked on towards the door in curiosity. \n\nLayla thought it might be Henry, but it wasn't. It was a man who came in. This one was more intimidating than all of them. He didn't speak and looked almost bored to be there. His eyes lifted towards the men and one of his eyebrows rose at the unfolding scene. That was the extent of expression he showed. His gaze was almost apathetic.\n\nHe was tall, had a dark tan, aristocratic nose and full lips peeked from under his well groomed beard. His jet black hair was slicked back and he looked as if he was of Arabic ancestry. \n\nHis face held no warmth as he disgustedly looked at the men. The two men looked as if they were about to piss themselves in the presence of this stranger. Layla heard one of them utter his name. Haseem... \n\nOne of the men whispered that Haseem was one of the Rollins's most feared and most respected lieutenants. A natural born killer, he said loud enough so only Layla could hear. He smiled wickedly at her as if relaying a promise. \n\nHaseem's gaze briefly landed on Layla before he continued to walk into the room. It was then that Layla saw it. She noticed a long sword strapped to his hip. Her whole body immediately shook. A horrible foreboding feeling came over her. She closed her eyes tightly and bent over as several tears managed to escape her eyes.\n\nHow did this happen to her? Layla thought back to how different her life had been just a few hours before. She could've been on her way to her home or even back at the house enjoying the wedding. How she wished to be back in her bed sipping some hot tea.\n\nShe felt a gentle tap on her shoulder and looked up to see Haseem. He didn't say anything and didn't look concerned for her welfare, but surprisingly offered her bottle of water. She was thirsty, but she wouldn't dare drink it. She didn't know if it was poisoned or drugged. Haseem seemed to understand her trepidation. He grabbed an empty cup and poured some of the water in it and drank its contents. As if to assure her it was safe. Finally with great hesitation Layla took the bottle and gulped the water down. She let out a contended sound as it quenched her thirst. \n\nThe two men looked on in irritation, but didn't dare utter a word. \n\nThen she heard some commotion outside. Henry came in and looked mad as hell. He muttered something about there being an ambush. Something about that little motherfucker Sean had it all planned out. Layla's heart leapt when she heard Sean's name. There may still be hope for her. \n\nHowever Henry assured the men they would get paid, they just had to follow through on the plan. Apparently someone named Rollins still had people who would ensure the money reached their bank accounts as soon as the job was done. The men agreed. Henry then looked towards Haseem who remained silent during the exchange. \n\n\"And I don't give a fuck who you are, you follow my lead. Alright?\"\n\nHaseem's looked at him unfazed. He looked uninterested in acknowledging Henry and instead let out a sigh. Obviously used to this man's antics, Henry took it as a confirmation and left the room. \n\nNow as Layla looked at Sean, he looked to be in so much pain. All she wanted to do was be in his arms one more time. Guilt struck her. He was there for her. He gambled his life for her. There was so much she needed to tell him.\n\nOne of the men pushed Layla to the ground and forced her to kneel across from Sean.\n\nSean stared into her eyes even as the numbing unimaginable pain spiked through him. God she was beautiful. Maybe he never deserved her. This is what happened to the women he fell in love with. Suddenly a ball of regret and self-hatred threatened to consume him. \n\nHe was defeated. His shoulders sagged and he could only whisper, \"I'm so sorry.\"\n\nLayla shook her head and cried. She recognized the look of defeat in his eye. No, they had to have hope, even if there was none to be had.\n\n\"Now, the boss was very specific on how he wanted this to go. He said, put him and the girl on their knees facing each other... and to use a sword. Just like old times he said.\" Henry let out a chuckle. \n\n\"I don't really use swords, but I'm damn good with a blade. So I'm going to need that back.\"\n\nHenry grabbed the blade still imbedded in Sean's back and, with one swift motion, pulled it out. Sean let out a torturous sound. He gurgled and felt his consciousness start to go in and out. The pain he felt was beyond physical. At that moment he was transported to years before. \n\nIt was happening again. \n\nHe was powerless to stop it. \n\nAgain. \n\nHis vision went blurry. All he smelled was the sweet smell of the Khan farm's poppies. It made him sick to his stomach. He inhaled deeply as though he couldn't get enough oxygen to his lungs. His chest rose erratically and he was disoriented. \n\nSean could hear Layla's hysterical cries as they blended with Khatira's. Khatira, the pretty local girl he was completely infatuated with. The girl who lay her trust in him only to be let down. He blinked several times and saw Layla. \n\nBlood. All Sean could smell was the sickening iron-filled scent everywhere. There were bodies everywhere. His friends, his captain... all good soldiers dead at the hands of pure evil. \n\nSean realized the sickening iron-filled scent of blood he smelled was his own. \n\nHassem finally appeared behind Layla and the guards. He'd been on the phone for a couple of minutes prior. Henry wondered who he spoke to. He'd better have been talking to whoever was going to get him his money. He had a plane to catch.",
        "Sean's droopy aquamarine eyes connected with Haseem and he slowly nodded. He understood. \n\nRollins arranged for this last act to play out just like the last time. \n\nTo inflict the maximum pain. \n\nSean and Layla would be executed at the same time.\n\nHenry girded his blade and waited. Layla would be the first to go so Sean could witness it. He looked down on Sean and couldn't wait to end this.\n\nSean's eyes connected with Haseem's. He hadn't seen him in years. Their suspicions had been correct. Although a sliver of doubt crept in, he forged on. Slowly and with great struggle Sean lifted his right hand and touched his chest.\n\nWith his eyes his still on Haseem, Sean whispered, \"As-salamu alaykum brother.\" \n\nHenry, the guards and Layla were confused as to who Sean was talking to. \n\nHaseem slowly nodded. He let out a small smile and slightly bowed towards Sean. He always liked that about him. The respect he showed towards his customs. \"Wa-laykum salaam.\" \n\nThe next seconds went lighting fast. In that split second Haseem wielded his sword and sliced through one of the guard's neck and plunged into the other. They both fell to the floor with a loud thud. Henry was momentarily shocked at the turn of events. He gritted his teeth and quickly hurled his blade towards Sean's neck. \n\nBefore Henry could finish swinging the weapon two gunshots echoed through the room. \n\n--- \n\n--- \n\nAgitated birds flew above them spooked from the loud sound. \n\nThe booming pops echoed in Layla's ear. \n\nHer breath stopped. \n\nHer heartbeat slowed. \n\nHer voice was lost.\n\nCaught between horror and desperation; the throbbing stillness froze her. One beat at a time.\n\nHenry's surprised eyes widened as he looked down at his chest. Sean was the one holding the gun. From his kneeling position he held the gun steady towards him. No one knew when he grabbed it again. Blood quickly spread drenching Henry's shirt as the fatal bullet did its damage. Henry stumbled then fell to the ground. \n\nIt was all blurry. Sean couldn't hear anything. His body finally gave out and he collapsed to the ground. \n\nHis last images were vivid and familiar. \n\nWashed with white he recognized Layla as her angelic face came into view. He was grateful that would be the last image he would see. He gently closed his eyes and succumbed to sleep.\n\n\"Sean, stay with me. Don't go to sleep Sean. Stay with me. Oh GOD. Please! Sean! Wake up!\"\n\nBut everything in Sean's world had already turned black. __________\n\nThe medical transport chopper dropped the patient at 1700 hours. \n\nThey quickly transported him into an ambulance. The hospital was 15 minutes away. The ambulance ride was a noisy one. There were voices on top of voices. Calling out orders and asking questions. \n\nThe military medical personnel quickly worked on him. With surgical scissors they cut through his shirt as they assessed the damaged. The man seemed slightly lucid. His face was covered in his now drying blood. \n\nThe patient was male, in his late fifties, had no history of any major allergies and wasn't currently on any medications. He was being treated for battery and a blow to the head. They administered oxygen, checked his vitals and quickly started an IV line. They feared he had internal bleeding, but most likely it was severe bruising and a possible cerebral contusion.\n\nHe seemed innocent enough, but the man was a prisoner who had to be restrained at all times. There were four Marines assigned to him. They didn't say much, but their eyes remained glued to the man who lay quietly on the stretcher. The medical personnel didn't know who this man was, but he must be someone dangerous. \n\nThe man moved his oxygen mask to the side and chuckled. \"Do you know who I am? I've got connections you wouldn't even dream of. I'll be out of custody within a day.\" The older man spoke seemingly to the group of silent Marines or whoever would listen.\n\nOne particular Marine named Caleb clenched his teeth at hearing his voice. He hated this man. \n\nHe hoped this old guy wasn't going to cause trouble because he was not in the mood. He was so glad to see Sean beat him up so badly. Damn near killed the man; he deserved that and much more. \n\nThey had orders to bring him in alive. Preferably, but not necessarily. Did Rollins not know he was the most wanted man in America? What the U.S. accomplished this day would go down in history as neutralizing the biggest terrorist threat in history. He would surely spend the rest of his days awaiting his death sentence. And yet he knew that as soon as they got back to the U.S. there would probably be protests to commute his sentence to life. Even though it would be a closed door military tribunal, Rollins' fate would be a highly publicized one. \n\nIt wasn't fair. This man was responsible for so many American deaths. One of which was his older brother, Aiden. He was one of the thousands who died in one of Rollins' raids. His brother died at the hands of this man. And here he was tasked to watch him be nursed back to health.\n\nSuddenly a sharp pop whizzed through the ambulance window. Several loud screams and curses flooded the truck. The Marine's team leader Rick hastily barked out orders. They quickly assembled into their positions. They had been compromised. \n\n\"Keep driving.\" Rick yelled at the ambulance driver. They were just minutes away from the hospital. The paramedics took cover behind anything they could find.\n\nRick peered through the ambulance window to see what kind of threat the faced. It was most definitely one of Rollins' men there to try and to break him free.\n\nTheir engaged weapons were at their fingertips as they waited for other shots to follow. \n\nThey prepared for an attack. \n\nBut none came.\n\nJust as they reached the hospital, Rick's eyes landed on the older man who looked to be sleeping peacefully in the ambulance stretcher. The squad quickly assembled outside providing cover as they finished transport. The medical personnel scrambled with the patient, but found him to be unresponsive. The doctors rushed to greet the incoming patient and were confused. They were told his injuries were non life-threatening. They quickly searched his chest and found it. A direct shot to his heart. Killed instantly.\n\nNo one knew where the bullet came from. This was the work of a highly trained marksman. \n\nPerhaps it was an enemy combatant out to make sure Rollins didn't flip on them and reveal any enemy secrets. Perhaps it was the U.S. government who preferred to deal with a dead traitor than a traitor on trial for his life. Or perhaps it was someone who finally fulfilled his promise."
    ],
    "authorname": "partial2passion",
    "tags": [
        "fight",
        "capture",
        "drama",
        "black woman",
        "deadly",
        "action",
        "suspense",
        "romance drama",
        "rescue",
        "military"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/duplicity-ch-16"
}