{
    "title": "The Masks We Wear",
    "pages": [
        "This story is a collaboration between MsCherylTerra and Bebop3. It was a pleasure to write and a rewarding experiment. The authors hope you enjoy the story. \n\nMsCherylTerra's stories can be found here: https://www.literotica.com/stories/memberpage.php?uid=5134587&page=submissions\n\nThe Masks We Wear\n\nHIM\n\nI was sitting in a chair at a large wooden table when he walked in, sending my stomach south. I considered ducking out the rear exit while he looked around trying to spot me. My laptop and six books were on the table and there was no way I could get the books to the librarian and my laptop in the bag before he noticed. Instead, I looked around to make sure I was alone and then checked the ceiling corners to see if there were any cameras mounted. \n\nThere was no one too close, but I certainly wasn't alone. About a dozen other students were nearby, all with their heads in their books or tablets.\n\nFrank Dellacore was striding towards me before I could come up with an exit strategy, so I remained where I was, stared at him and tried to look composed. He ignored the people watching him. I guessed that he was used to it. Frank was the university's best linebacker in a generation and if anyone was a star on campus, he was it. \n\nTurning a chair around so he could sit like a tough guy, he leaned forward. His odious cologne overpowered the weird mix of cleaning supplies and musty books that I found so appealing. \n\nLike the clich\u00e9 he was, there was a sneer on his face as he began. \"Let me explain something to you. There is no world anywhere in the universe where you take my girlfriend out for pizza like it's some sort of date. Are you out of your damned mind?\"\n\nMichelle Calzaghi and I were in two classes together. One was Dr. Gholmite's \"The Crusades East and West 1095-1230\" and the second was Dr. Bajin's \"Econ 159, Game Theory\". She was completely lost in Game Theory and I took it because I could ace it easily and was planning on going for a M.Sc. in Data Analytics. She was way, way out of my league and I knew it, which made it a lot easier for me to agree to some informal tutoring. Since it wouldn't go anywhere in a million years, there wasn't any pressure. \n\nIt seemed that Frank had found out about our getting pizza after hitting the books and wasn't too happy. \n\nWithout waiting for me to confirm or deny that I was actually out of my damned mind, he continued. \"I get it. You couldn't possibly get your own girl, so you want pussy by proximity. If you're not getting any, at least you can hang out with someone like Michelle and pick up a whiff of what I'm getting. You're a smart guy. Use that fucking brain of yours to figure out what I'm going to do if you piss me off. You help her with her class? Do it here, in the library. When you're done? Get up and walk away. Your time with Michelle ends the moment you step out the door. Got it?\"\n\nWhen I didn't reply, he answered his own question. \"Yeah, you got it.\"\n\nAs he stood up, he smacked me in the back of the head, hard. He was about five feet from the table before I finally spoke up. \n\n\"Hey, Frank, you hunt?\"\n\nStopping, he turned to look at me. \"What?\"\n\n\"You hunt? I do. Since I was a kid. Usually deer, but sometimes feral hogs. Those things can be vicious, I'll tell ya. Never been? In a way, the oddest part is when you're essentially done. After you get the animal back to the cabin or whatever you're using as a base, you string it up by the back legs and hoist it off the ground. You ever see a Gunther NP, Frank? It's a knife, about so big.\" \n\nI held my hands about ten inches apart. \n\n\"Well, that's what I use, anyway. You slit the animal's throat and let it bleed out. You have to be careful; the blood gets everywhere. Then you slice it open from stem to stern. Sort of from here,\" I gestured to my navel and then to my sternum. \"to here and remove the offal. Now here's the weird thing, in October or November, the heat released from the carcass causes a visible... I don't know, steam almost, that rises into the air. Sort of like a final breath or soul or something. It's oddly peaceful, as if I've helped the animal on its final journey.\"\n\nFrank looked around the library, and then back to me, clearly thinking that I was nuts.\n\nI tried not to blink as I spoke, hoping to add to the creep factor. \"It's nice, in a way. Like a signal that everything is complete and finally done. The animal's life is over, and you can skin it and take the meat. Frank, if you ever put your hands on me again, it will be the last time you touch anyone.\"\n\nLooking around again as if to see if there were witnesses to my bizarre threat, he just shook his head and walked out. \n\nI didn't have to be a detective to know that Frank was from Chicago. Everyone at the University had heard his bio enough times to cause low level nausea whenever it was brought up again. I had never heard any mention of hunting, fishing, hiking or anything similar.\n\nSo, I lied.\n\nGunther NP was made up and the closest I had ever gotten to hunting was doing research and watching some videos for a paper I had to turn in. I had gotten an A, so I had that going for me. My story must have been convincing, as Michelle didn't mention anything to me, and Frank never bothered me again. \n\nI turned to the closest book. The page was a jumble of nonsensical letters as I sat there trying to slow my heart rate. My movements were slow and deliberate, which I hoped passed for calm and I flipped a few pages as I pretended to read. After half an hour, I packed up my stuff and got ready to leave. I could probably outrun Frank over a long distance, but if it was ten yards or less, he'd destroy me. \n\nFrank went out the main entrance, so I was going to try the rear. They had one check-out desk back there, but I'd wait on a line if it would help in avoiding the hyper-aggressive jock. I was jostling books in my backpack when I heard her. Mandy had an almost sing-song stereotypical SoCal voice and was going on and on about some regatta they were having on campus with balsa wood boats the students painted and constructed. \n\nShe'd been on me like glue for the past few months and I was suffocating. Mandy was nice enough, but unrelentingly cheery and seemed almost obsessive. Grateful I hadn't been noticed, I turned around and risked the dangers of the front exit. \n\nMadison was checking out a book as I approached the huge wooden counter with what I wanted to take back to the dorm. She was pretty and nice enough, but quiet. I liked her, but I didn't know if she thought we were friends. We studied together and I'd always wanted to get to know her better, but didn't know much about her other than that she was really smart and really reserved. Mrs. Havisham was handing her \"Cultural Terrorist\" as I put my books on the desk.\n\n\"Hey, Madison. Sociology?\"\n\nShe was bent forward slightly, her light brown hair obscuring her face. \"Yeah.\"\n\n\"Cool. You set for Thursday?\"\n\n\"I think so. I read 'Advanced Number Theory' last summer. Covers a lot of it.\"\n\nMadison was a soft talker and I had to lean in to make sure I heard her clearly. \"Was that by Cohn?\" I smiled. \"So, this is all sort of a brush-up for what you already know?\"\n\n\"Yeah.\"\n\n\"Okay, thanks. I'll check it out.\"\n\n\"Okay. I... Bye, Craig.\"\n\n\"See ya, Madison.\"\n\nAfter checking out my books, I stepped out of the library, looked around and headed back to my dorm. No steroidal freaks came flying out of the hedges and I breathed a sigh of relief as I closed the door behind me. \n\n<center>*****</center>\n\nHER\n\nIt was surprising how much I liked him.\n\nHim, of all people.\n\nHim.\n\nI had never felt that way about anyone. More importantly, I had never wanted to feel that way about anyone. Feelings were... complicated. Feelings were scary. Feelings made people do things and say things and act in ways that weren't logical. Feelings took good people and turned them into... well, I wouldn't say monsters. Not all of them. But enough of them.\n\nSo, I let people and feelings and monsters pass by, let them drift past and plod along while I focused on a world that made more sense. They moved around me, and I ignored them, choosing books and numbers and facts instead of joining a rat race where the only prize was pain.\n\nBut then he sprinted past and hadn't stopped running through my mind since. \n\nNo book in the world had given me the words to describe him. He was smart, warm and beguiling. He was ambitious and dedicated. He was beautiful. He was so many things that I couldn't possibly have begun to name, and it infuriated me that I couldn't find the words. \n\nIt terrified me that I wanted to find the words.\n\nI knew better than to feel the way I did. He was too good to be true. Men always were. Once upon a time, my mother had missed the warning bells that should have gone off when she met my father. She missed them when he asked her to be his girlfriend, and again when he asked her to be his wife, and still again when he put me in her stomach and again when I popped out nine months later. Since she missed all those bells, I got to watch as he broke her down, as the shining star of a woman she was supposed to be was extinguished at the hand of a man who said he loved her.\n\nSomehow, I hadn't learned my lesson from that. It had taken no less than three stupid boys to teach me a lesson I'd already witnessed every day of my life. \n\nThree stupid boys, three horrible heartbreaks, and I still hadn't managed to experience the one thing that I had heard might make men worth it. Based on the hurt they'd caused even without giving up my virginity, I thought that it was pretty unlikely that it was actually worth it. \n\nMaybe there were men who weren't like that, but I didn't want to take the risk of finding out.\n\nUntil him.\n\nI wanted to tell him. I wanted to talk to him and tell him I liked him. I wanted him to take me on a date, to talk about books and computers and whatever else people might talk about on dates. I wanted to kiss him, to touch his hair, to... well, other things. Things I didn't have words for, either.\n\nI doubted he wanted any of those things, though. It might have been easier if he didn't even know I existed, but he did. He knew my name and he knew me from the classes we shared, and if he knew anything else about me, that would have been a surprise. \n\nJust because I wanted to tell him and touch him and do all those other things didn't mean I had the capacity to act on it. I could barely get through a conversation with him without my mouth drying up, my fingers and toes tingling numbly as my heart raced fast enough that I was sure it was nearly visible through my chest. \n\nAnd what if he didn't reciprocate my feelings? What if he took one look at me and laughed? \n\nI wanted his attention, and didn't. I wanted to talk to him, and couldn't. I wanted to just get over him, just move on and go back to my life of books and numbers and grades. \n\nIf I could just be someone else, just... put on a mask and admit all those things, tell him how amazing I thought he was, admit all my feelings and then disappear, maybe it would help me get past him. \n\nIt was that thought that made me do it.\n\nIt was an exercise, I reasoned. Just... a weird kind of exercise to help myself work through those feelings. It wasn't a crazy idea. I had taken a psychology class in high school, and roleplay was a legitimate method of working through emotions.\n\nI didn't have a mask, but I had a wig left over from a costume party my father insisted I attend the year before. It was long and dark, and I felt silly putting it on, but I thought it would help me be someone else, the person I wanted to be and couldn't. \n\nTalking to myself in the middle of my empty apartment felt weird, though, so I turned on my computer and recorded myself as though I was making a confessional. Just to help with the realism, I told myself.\n\nWhen I watched the video back, it didn't really help. It just looked like me, wearing a wig.\n\nBut I could change that.\n\n<center>*****</center>\n\nHIM\n\n\"I'm making grilled cheese with ham. Want one?\"\n\nLooking up from my text, I rubbed my eyes and looked at the clock. Fuck, it was almost 4 PM. \"Uh, yeah, thanks.\"\n\nI'd been sitting there for five hours. Getting up, I stretched, went to the bathroom and grabbed a water. Tim had an electric griddle thing his mother bought him. He kept it in a canvas bag labeled \"gym laundry\" so the RA didn't find it. As he was cooking up our contraband supper, my phone rang. \n\nMy eye rolling provoked guilt even though she couldn't see it. \"Hey, Mom. What's up?\"\n\n\"Something has to be up for me to talk to my only son?\"\n\n\"Hold on one sec, Ma. Tim! Can you throw pickles on mine?\" He grunted something in response. \"So, how's dad?\"\n\nWe spoke about my father. We spoke about Mom's bursitis. We spoke about Mr. Fluffernutter, our aged cat. We spoke about everything under the sun as I ran over my class notes and mostly let Mom do the talking. \n\n\"Are you still running, Craig?\"\n\n\"Every morning.\"\n\n\"What about volleyball?\"\n\n\"What about it?\"\n\n\"Well, running is so... alone.\"\n\n\"Yeah, that's why I like it. I get out there and I can hear myself think.\"\n\n\"You're alone too much. How are you going to meet any girls if you're running everywhere?\"\n\n\"I'm... Look, Mom, I'm fine\"\n\n\"You're not fine. I'm your mother, I know these things. This is when you should be spreading your wings and meeting people and getting your nose out of those books. You know, they have co-ed volleyball teams. You liked it in High School.\"\n\n\"In gym class.\" I sighed. \"It... Mom, I'm good, really.\"\n\n\"Co-ed means there'll be girls.\"\n\n\"I know what co-ed means, Mom.\"\n\n\"Of course you do. I'm sorry, honey. I just worry. You just need to socialize more.\"\n\nTim called out. \"Craig!\"\n\n\"Okay, I appreciate that, Mom, but I'm fine. Really.\"\n\nShe sighed. \"Your sister sends her love. She says one of her friends has a younger sister.\"\n\nTim yelled out again. \"Craig!\"\n\n\"I'm sure she's really nice, but I'm sort of busy at college three states away. Mom, Tim is calling. Can I call you back tomorrow?\"\n\n\"Are you really going to call?\"\n\n\"Yeah, Ma.\"\n\n\"Okay, tomorrow then.\"\n\nShe hung up after telling me she loved me, and Tim called out again.\n\n\"Craig, is she talking about you?\"\n\n\"Who?\"\n\n\"Her.\"\n\nHe tilted his laptop and I saw a stunning brunette speaking into the screen. She likely had a vlog, but it was on the unofficial University of Chicago YouTube page. Her green eyes were piercing, and she was possibly the most beautiful woman I'd ever seen, yet she somehow seemed familiar.\n\n\"Hold on, I'll restart it.\"\n\nI sat down and watched from the start. \n\n\"Hi! I'm Casey Arlington and this is UC Watch. It seems that a certain student athlete thought it would be a good idea to mark his territory and let one of UC's most academically gifted students know that he shouldn't have pizza with the athlete's girlfriend. Because, as we all know, pizza is a gateway carb and always leads to sex and woman can't be trusted to not cheat when confronted with the allure of dough, marinara and mozzarella. \n\n\"The athlete quickly found out that he bit off more than he could chew when the stand-out mathematician calmly explained how he dressed a slaughtered hog after killing it. Mr. Linebacker seemed to realize the difference between sacking a quarterback and trifling with someone who is used to killing for his meals. \n\n\"If you see a certain gifted student out for his morning runs, wave hello and thank him for standing up to a bully who every person intelligent enough to care about something other than football can't stand. In the meantime, let's hope Ms. Uber Popular can keep her legs closed when confronted with an extra cheese and pepperoni aphrodisiac.\"\n\nI sat there staring at the screen. \"What the hell?\"\n\n\"Dude, she's super-hot. You know her?\"\n\n\"No and I'm hoping she didn't just get me killed. Where's my sandwich?\"\n\n<center>*****</center>\n\nHER\n\nI never intended for things to snowball the way they did.\n\nIt's just, I did a really good job on that video. \n\nThe first iteration of the video looked like one of those things that goes around at Christmas, where an office full of people upload a picture of themselves that gets superimposed onto a dancing cartoon elf. The elf-office worker hybrid then dances around the screen to some kind of Christmas rap and the workers are delighted, laughing hysterically as they share it to Facebook where no one watches it because they've already seen the video, just with faces they care about more already on the elves. \n\nSuffice to say, it was disappointingly terrible. Emotional exercise or not, it didn't meet the standards I upheld for myself. \n\nI spent the night trying to improve it. I bought 12 hours of high-performance computing from Amazon Web Services and that made a huge difference. It was a puzzle, a challenge, an itch that needed just the right combination of technology and art to be scratched. I recorded a second video, a shorter one, telling the story of him and the way his mind worked, a story I wanted people to know so they could appreciate everything he was.\n\nI took a face that wasn't mine and made it my own. At the time, I didn't consider just how creepy that sounded. I didn't see it like Silence of the Lambs or Face Off. I felt like a spy or a hacker or something far more badass than a nerd behind a computer digitally masking her face using Deepfake technology. \n\nYeah. Deepfake. I didn't really consider the, uh, moral implications at the time. It was still just an exercise, just a way to challenge myself. The best minds answer questions by asking their own. They ask, \"what if?\" and then they don't stop until they know. \n\nIt's just, when I finished the video and I saw how flawlessly I made her face into mine and how funny she was and how... not me it was, I wanted to know what other people thought. \n\nI mean, I hadn't named anyone in the video. Well, except her. I gave her a name because she needed a name. Something that wasn't mine. But I didn't name anyone real in the video.\n\nMy heart hammered in my chest as I uploaded it to the YouTube channel. I thought maybe a few people would see it and laugh, maybe leave a couple of comments about it. I didn't expect... I didn't think it would go the way it did.\n\nAfter what seemed like the millionth share on every single one of the social media platforms the school used, I realized he was going to see it. Not if, not \"he might,\" but he was going to see it. \n\nThe comments were atrocious. Not about him, but about the bully he'd obliterated with only his words. People shared stories far too similar to the one I told, stories of aggressive jealousy and idle threats, stories without a hero to take down the villain, stories where people silently accepted the actions of a pig and let him get away with them.\n\nI made him the hero. I told a story that people needed to hear, gave them a point to rally around. I never named him, but I was sure people suspected. They plotted and debated, trying to figure out who the mathematician was, abuzz with conspiracy and delighted by the mystery. \n\nWatching quietly, I felt a sick sense of pride in what I had accomplished by sharing the story. I watched people come together, band together against that scumbag, and knew they would never suspect it was me behind the video. I had left no trace of myself, erasing everything that made me the small nothing that I was, free to witness the reverberations of my actions. \n\nThe only downside was not knowing what he thought and having no way to ask.\n\nI resolved to let it lie, to keep the secret to myself, and to let it fade away into the recesses of the internet's memory, no one the wiser to who the girl in the video was.",
        "<center>*****</center>\n\nHIM\n\nUC is a big school. I can't count how many runners there are, whether they are students, athletes or staff. Getting an early morning run in isn't unusual, and yet... Two people I barely knew gave me a thumbs up as I stretched out and people seemed to watch me as if I were a novelty while I ran. It was weird and off-putting. \n\nMoving behind a tree, I quickly peeled off my tee that had an image of Feynman playing bongos, turned it inside out and put it back on. The chances of someone not in the math department knowing about Feynman was remote, but I was starting to freak out. There was no need to advertise that I was both a math geek and a runner. \n\nAfter doing my five miles I went back to the dorm to shower and Tim was watching the video again. \n\n\"Dude, you gotta find out who she is. Seriously, totally hot. Have you seen her on campus? Maybe Baker Commons?\"\n\n\"Yeah, I don't know. Something about her seems familiar, but... I can't put my finger on it.\"\n\n\"If you figure it out and introduce me, grilled cheese for life. As many as you want, whenever you want.\"\n\nLaughing, I went to take a shower. An hour later I was in Dr. Gholmite's lecture. Michelle slammed open the door and came running down the steps just as the clock struck nine. Sitting next to me, she passed an egg and cheese sandwich my way. I tried to be surreptitious as I snuck a bite here and there when the professor was writing on the chalkboard. \n\nWhen the class was over, Michelle remained sitting. \"So, that was obviously about you, right?\"\n\nIt was clear what she was talking about. I should have realized that she would see the video. \"Uhm, yeah. I guess.\"\n\n\"You guess? Did Frank try to scare you off or didn't he?\"\n\n\"He did.\"\n\nHer foot tapping, eyes narrowed as she lowered her voice. \"I'll talk to him. He... I'll talk to him. Don't worry about a thing. I'm really sorry, Craig.\"\n\n\"It's fine. He... I don't know. He's just being protective or something.\"\n\n\"That's bullshit. I'll eat with who I want, when I want. He doesn't dictate who my friends are.\" She smiled. \"I guess that makes me Ms. Uber Popular.\"\n\nI smiled back. \"Seems like.\"\n\n\"So, who's this Casey? Friend of yours?\"\n\n\"No. I don't think we've ever met, but she seems familiar. It's annoying, actually. Like a song that you know but can't remember the title or who it's by? It'll come to me.\"\n\n\"Well, she's a beautiful girl.\"\n\nI thought for a second, remembering the woman in the video. \"Yeah, she's definitely that.\"\n\n\"Medicci later? Get some dinner and then hit up the books? Please? I'll pay for dinner and your time.\"\n\n\"Sure, but we'll split dinner.\" It was awkward talking about money with someone I felt was becoming more of a friend than client, but I needed the cash. \"Normal tutoring fees okay?\"\n\n\"Perfect.\"\n\nAs we left, I saw Frank and another huge guy. He was waiting for Michelle but stared at me with obvious anger. I touched my shirt just below my belly button and then where my chest started and mouthed the words \"stem to stern\". He looked away.\n\n<center>*****</center>\n\nHER\n\nI was going to let the whole thing go.\n\nI really, really was.\n\nBut what that prick had done to him just made me so mad.\n\nNot to mention that every time I saw him, he looked unsettled, shying away from the attention I'd unwittingly thrust on him.\n\nSo, I... well, apologized. \n\nI tried to apologize\n\nI mean, it started as an apology, that was it. Just a one-off revisiting of being her so I could tell him I was sorry for meddling in his life. \n\nAn email wasn't good enough. He could easily assume it was someone pretending to be her, sending him messages as some kind of mean joke. Besides, she was\u2014in the backstory I had invented for her\u2014another student. He'd be suspicious of an off-campus email with her name.\n\nAnother video on the school YouTube channel would just draw more attention to him. And another video would increase the chances of people recognizing her. I didn't put much stock in the collective intelligence of most of the other students, but a few of them might put it together. The film studies students were the most likely, but anyone observant might figure it out.\n\nI steadfastly ignored the fact that \"anyone\" could include him.\n\nTo give myself some credit, I did try to talk myself out of it. I imagined getting caught, and I swear the thought of it nearly paralyzed me for days. Having to explain myself to him, to everyone... to my parents.\n\nIt made me burn with shame. My father... \n\nThis isn't about me. It doesn't matter what I thought my dad would do. Or say. Or... I mean, I didn't consider how much I was putting on the line by breaking my promise that the video was just a one time thing. \n\nI just felt like he deserved an apology. He never asked me to defend him. He didn't need anyone to defend him. I didn't know if he knew that about himself before, but if anything good had come from my actions, I hoped that I\u2014well, she\u2014had made him see that.\n\nShe was what I wanted to be but never could, never would. She was the person I felt he deserved. \n\nI put the wig on and became her, and I made something that was only ever meant for him.\n\n<center>*****</center>\n\nHIM\n\nI sat on my bed, my back against the wall, laptop propped on my thighs. This was too weird. I was in the other room with Tim when the email popped up. About to open it, I saw that it was from CArlington@UofC.edu; as in Casey Arlington, video girl. There was an attachment that was sizeable enough to be a video, so being the decisive, take charge person that I am, I went to my room, sat and stared at the file like it was a vial that said \"Drink Me\".\n\nAfter a few minutes of hesitation, I opened the email. The text was simple and to the point. \"Please play video\" and was signed \"Casey\". My finger hovered over the mouse until I finally clicked on the attachment. A quick scan showed no viruses, the video started and down the rabbit hole I went. \n\nThere was no emotion in me, except for a little anger. This woman jumped into my life like a monsoon and kicked up wreckage everywhere. I assumed that she thought she was being cute and could leverage some Likes for a new vlog or something, but I was the one being affected. It was a popular guessing game on campus that was as difficult as what was the color of George Washington's white horse. Maybe I was seeing more than what actually existed, but it felt like I was being stared at and whispered about so this woman could make a splash on social media. \n\nNone of that stopped my heart from beating a bit quicker when she came on screen. Whether she was shallow or not, there was no denying that she was hot. \n\nI was expecting a preview of a video that she would be releasing publicly later. Maybe it was her attempt to get in front of any pushback from me. She'd let me comment, she might edit something out or add something; I'd be coddled, and she could continue on. I couldn't have been more wrong. \n\nMaybe I wasn't quite as open minded as I'd like to think. I had assumed that Casey was going to be facile, but basically vapid. Maybe she'd move from campus gossip to talking about hair products. That wasn't the case. Apparently, I was going to have to get used to being wrong when it came to her. \n\nThe video wasn't for public consumption and she was far from vapid. \n\nCasey was apologetic, eloquent and... sweet. Her first video was made in anger after she saw what happened in the library. She seemed to be very irritated at the entitlement displayed by some student athletes and after that confrontation it pushed her over the edge, and she needed to make a statement. \n\nThe video was brief, and I found myself regretting that. I played it again after it ended. She'd made me laugh when describing Frank and used a silly patois when talking about how the football players would be discussing me. She threw in lots of \"duh's\" and had me smiling again during the second viewing. \n\nCasey's honesty and sincerity while apologizing for how she imagined the first video impacted me made me reevaluate her. I don't know if you can really like someone who you've never met and only knew through one general video and another brief video for you only, but I certainly no longer disliked her. \n\nAfter contemplating watching it a third time, I put the laptop down, grabbed my wallet and headed out. Tired of grilled cheese, in spite of Tim's admitted mastery, I headed to Baker Commons. There were a lot of restaurants near campus and others on campus, but none that would let me fill up as cheaply with reasonably decent food. \n\nI had a huge plate of meatloaf and mac and cheese and was listening to \"The Secrets of Mathematics\" podcast. I nearly jumped when Mandy plopped herself down at my table. She just sat there, staring at me with a huge friendly smile. Creeped out, I pulled out the ear buds. \n\n\"Hey, Mandy. What's up?\"\n\n\"Guess what I got you?\"\n\n\"What?\"\n\n\"I got you something. Go ahead, guess.\"\n\n\"Uhm, dessert? Some pie?\"\n\n\"Nope. Guess again.\"\n\nI sighed. \"Mandy, why don't you just tell me?\"\n\nShe gave me a mock frown. \"Okay, Mr. SpoilySport.\" She lifted her hand from below the table and it held a brown paper bag. \"I registered you for the regatta! All the pieces for your boat are in here. It came with the registration, but you can add anything you want to it. I threw in some paints and stuff. I thought we could assemble them together? Maybe at my dorm? Tonight?\"\n\n\"Oh.\" I paused. \"Thanks. I, uh, I need to get some studying in. Can I get back to you about assembling the boats?\"\n\nShe gave me that same mock frown. \"You spend too much time studying. Why don't you come over?\" She dropped her voice a bit. \"You'll have a good time, I promise.\"\n\n\"Yeah, that sounds great, but I really need to brush up on some stuff. Big project coming up and, uhm, a test, and... yeah. So, can I get back to you?\"\n\nShe smiled that big smile. \"You better, mister! Hugs?\"\n\n\"Uhm, sure.\" I threw the last of the dinner down my throat, stood, hugged her quickly and mumbled \"Bye\" with a mouth full of food and got the hell out of there. \n\nThere was just something about Mandy. She was cute enough and was clearly into me, but... I don't know. She was unrelenting. Mandy reminded me of an irrepressible, perky Terminator. Nothing stopped her, nothing slowed her down. She was just a lot. I got the feeling that if I just got with her once she'd be choosing our kids' names by the next day.\n\nI was back at the dorm, my nose in textbooks when Tim burst through the door. There was no reason, he was just like that. Throwing his backpack on the floor near the desk we shared, he went into his room. \n\n\"Hey! Grilled cheese?\"\n\n\"No, I'm good. Just ate.\" I looked to my right at the laptop and realized how wrong I was. It was a quarter past midnight. I'd been sitting there studying for more than four hours. \"Uhm, actually, yeah. Thanks.\" \n\n\"One or two?\"\n\n\"One.\"\n\nI sometimes do my best thinking by letting my brain work on a problem in the background while I keep busy doing something else. That had been what I'd been doing with Casey. She was hot, that was undeniable, but there was more to it than that. She also seemed kind, concerned about me, funny and smart. Basically, out of my league. \n\nSo, I sort of retreated. That's what I do. I avoid confrontations, like with Mandy, and I think about things. And then think some more. Should I respond to the video or should I just appreciate her effort and keep an eye out for whatever her next video is on the school's YouTube channel?\n\nIf she was cool enough to send an apology, I could sac-up and at least say thanks. \n\nIt should have been a few lines. \"Hey, thanks for the video. We're all good, no worries. I appreciate the sentiment.\" Yeah, that's not what happened. I ditched four attempts and my final version was twice the length of War and Peace. I highlighted it all, about to delete it when I looked up and saw Tim staring at me. \n\n\"What's up?\"\n\n\"Dude, you've just been staring at the screen and typing for forty minutes. I told you three times that your sandwich was ready. It's at your elbow.\"\n\nI looked down at the cold grilled cheese and the bottled water he left there and for some reason flushed.\n\n\"Uhm, yeah. Thanks. I sort of got into this.\"\n\n\"Whatever.\"\n\nInstead of deleting it, I hit send. Immediate regret followed. I sounded like a fanboy. I told her that I liked her sense of humor and appreciated her honesty and I even referenced what she had playing in the background and asked what sort of music she liked. I felt like an idiot. \n\nWorst of all, I sent her my phone number \"In case you want to text.\" Why on Earth would she want to text me? I was mortified. \n\nI was convinced that was going to be the last I'd hear from her. \n\n<center>*****</center>\n\nHER\n\nI'd had to spoof the email header, obviously, so that it looked like it came from a legitimate university student. I mean, yes, I could have just spoofed the email and not sent another video and just apologized, but... well, I didn't think of that until after I made the apology video and by that point it seemed like a waste not to send it.\n\nI was going to let it go there. After creating another email account to use for spoofing on the off chance it could ever lead back to me, I was going to send the video, never check the email again, and just let the whole situation be completely done. \n\nExcept, I might have accidentally-on-purpose set that account to forward a notification to me if it ever received a response.\n\nI ignored it for a while. I told myself it was Pandora's box, that opening it would be a terrible idea. I needed to be strong and ignore it. It was probably an angry email from him, telling me... well, her... that he'd never forgive her. Or maybe he had figured it out. Maybe he knew it was me behind the whole thing.\n\nIgnoring it was hopeless. It was an itch, an infuriating tickle that I was trying to pretend wasn't there, and I had the ability to scratch it. What was I trying to prove by letting it go unread? Even if he hated me, even if he had figured the whole ruse out, wouldn't it be better to know than to let myself suffer in a permanent limbo?\n\nI was going to read it, delete it, and never respond. That's what I decided, and I told myself that was what I was going to stick to.\n\nIt's just, the response was so... sweet.\n\nHe liked her, like, really liked her. \n\nI read the response three times in a row, imagining his face as he typed those words. Nervousness was wound through each of them, apprehension and appreciation and honest, beautiful vulnerability. I may not have been the most emotionally astute person, but even I could tell how much he liked me.\n\nI mean, her.\n\nThe knowledge that it wasn't me that he liked hurt. And that hurt should have stopped me from responding. It should have been a hint that what I was doing was wrong, that I was already halfway down the slippery slope of what was right and that doing anything more would be utterly, entirely wrong. \n\nIt's just that I had never liked anyone the way I liked him. And he liked me.\n\nAnd even though it wasn't me, really, she was a part of me.\n\nHe had noticed the music I'd had playing in the background and asked about it. It was rude not to answer a direct question. That had been ingrained in me since I was a child. My father was strict about it: when someone asked you a question, you responded, and you responded promptly. \n\nBut that was my father, not hers. I tried to tell myself she wouldn't care, she wouldn't respond just because there was a knot of guilt in the pit of her stomach and her heart was pounding because lesson after lesson she received as a child said that she should do exactly as she was told.\n\nNo, she would respond because she wanted to.\n\nAnd didn't I want to? \n\nHe included his phone number. He wanted me to text him. He wanted... he wanted to talk more. \n\nIt was stupid. It was absolutely moronic, completely idiotic, the kind of thing that recalcitrant fuckwit from the library would have done. \n\nNot only had I responded, not only had I engaged when I should have let things die, but I'd done the worst thing I could have possibly done. \n\nThere was a ridiculous amount of money in my bank account. I hated touching it, hated using it, hated benefiting from my father's affluence. It seemed only fitting that I would use that money to do something so stupid as to go out and buy a new cell phone with a new phone number, just so I could keep up a lie.\n\nWhen I got back to my dorm, I didn't even think. Before I knew what was happening, I'd typed a message and hit send. I stared at the new phone, heart racing and sweat beading on my forehead. I hadn't even re-read what I'd written before sending it. \n\nHey cutie. It's Casey. So, about that music...\n\n<center>*****</center>\n\nHIM\n\nI just felt weird. Descriptions weren't coming to mind so 'weird' had to suffice. Maybe lighter? Is that possible? Can an hour-long text conversation make you physically lighter? We got into a discussion that was close to an argument when I found out she liked trap. She said she listened to it constantly while studying and I was aghast. I mean, there's some trap that has good flow, but that's due to the artist, not the style. Seriously? Southern influenced overly melodic rap? Cowboy hip-hop? Really?\n\nAnd yet... it was fun. She mocked my classic rock, saying it was popular before our parents were born. We went back and forth, made our arguments and just had a good time. Ten minutes in and I felt like I'd already known her. Casey was personable and funny and knew what she was talking about and the only stumbling block was that I kept asking myself, why me? \n\nIf that was the extent of things, if she never sent another text, I'd be cool with it. That didn't stop me from getting irritated when my phone vibrated and I saw the text was from my sister. Not exactly fair to her, but such is life. Mom was bugging her, asking her to check on me. I replied, telling her I was fine and asked after the kids. \n\nStepping into 5727 Building, my phone buzzed again. I pulled it out as I shuffled and squeezed past my fellow math-heads to find another text from Casey.\n\nBreaking News: Led Zeppelin splitting up! Have a great day, grandpa. \n\nLaughing, I made my way to Advanced Linear Algebra. Sitting down a few yards from Madison, I saw her talking to Charlie Northcutt. It might be better to say that he was talking to her. As usual, she hid behind her curtain of hair, talking to Charlie, but not really looking at him. I felt bad for him. He clearly liked her, and I didn't think she realized it. Just like how she didn't realize I'd always wanted to get to know her better. \n\nThere was a pause where he was clearly searching for something to extend their conversation. She took that pause as him ending the discussion and moved away. Sitting down next to me, Madison began talking.\n\n\"Are you set with tensor analysis?\"\n\n\"Honestly? I'm not sure. I think so, but... yeah, who knows? How about you?\"\n\n\"I'll be ready. Do you have time to get to the library later? I'd like to go over eigenvectors and eigenvalues some more.\"\n\nI'd been thinking about going back to my dorm and studying and although I didn't want to admit to myself, it was because I hoped Casey would text again. Unlike Mandy or even Michelle, Madison was a friend, even if I didn't know that much about her. If she wanted some help, I was in, so the library it was. We had a weird relationship and it had been that way since our first week on campus. I had no idea about her family or her interests, although I saw her carrying a Neal Stephenson novel once; but we gravitated towards one another for course load stuff. There were worse things than having a cute girl for a study partner.",
        "We prepped the same and had the same study habits, but thankfully our stumbling blocks were different. She helped me when I needed it and I returned the favor; always. I didn't know if she had a car, I didn't know if she liked the Cubbies or the Sox and I didn't know if she had siblings. I did know her favorite snacks, when she started to get those migraines and how oblivious she was when some guy was into her. \n\nThe library had a private room available and I reserved it, avoiding glances from people I thought were staring at me. It was awkward, but I didn't really mind anymore. It felt like Casey was a real person now and not just some abstract annoyance, and that helped. Let them stare. It'll be over as soon as something else happens on campus that grabs people's attention. \n\nMadison met me at the reference desk, and we made our way to the room. When we sat down, opened our laptops and began to dig in, she paused, upturned her bookbag and a pile of candy came pouring out. She gave a shy half smile and pushed over about half, including the three Almond Joys, keeping the peanut butter cups to herself. \n\n\"How do you eat that coconut stuff? S'gross.\"\n\nI laughed. There had to be at least 20 candy bars there. Madison couldn't seem to be less interested in fashion or the latest trends, but I've never seen her worry about money. She wasn't obnoxious about it, but if I was being honest, she paid for food and drinks more often than I did when we were working on projects or studying. \n\nI tore open the wrapping with my teeth and took a bite. \"S'delicious!\" I replied, gently mocking her s'gross.\n\nWe got to work. After a few hours I was glad for the sugar rush. She had an off-campus apartment and headed her way while I looked forward to grilled cheese and went back to the dorm. I hadn't felt a buzzing, but I checked my phone anyway. No new texts.\n\n<center>*****</center>\n\nHER\n\nThe battle between hoping he'd text back and hoping he wouldn't was exhausting.\n\nBeing the kind of person who now had a burner phone and was leading a clandestine double life was also exhausting. The spies in the novels I read never talked about how tiring that aspect of espionage is.\n\nThe novels also don't talk about the unsettling sense of not knowing who you are anymore or about how the person you're pretending to be starts to bleed into your actual self.\n\nFreud said that human personality was basically determined by childhood experiences. His theory was that there were five stages of development and any sort of trauma during those stages would determine what kind of person you would be as an adult. I didn't know if I really believed his theories, nor did I really want to agree with someone who thought the entirety of human existence revolved around sexual experiences and believed every man wanted to sleep with his mother, but there's no denying that childhood experiences shape a lot about a person.\n\nI couldn't really determine which stage held the most trauma for me, nor could I really pinpoint which trauma turned me into the messed-up person that I was. There were a lot of them, spread across each of the stages, and I didn't know which had led me to think it was a good idea to create an entirely new person just to be friends with him.\n\nIt did get me thinking, though. If my personality was determined by childhood trauma, how was Casey's personality determined? What made her so witty and fun and confident? How was I capable of creating someone who was so different than me?\n\nShe was almost like a personification of my thoughts, as if some force had collected up all the things in my mind that I kept hidden and turned them into a person. Well, the approximation of a person. She wasn't corporeal, but she did exist, to an extent. She was real to me.\n\nAnd she was real to him.\n\nMaybe it would have been kinder to just stop texting him, just let Casey ghost him and break his heart so he could move on and find an actual woman who existed outside of the digital realm. I just couldn't bring myself to hurt him like that.\n\nSo instead, I thought maybe the strange little friendship they had could run its course. I'd give it a few days, then let things naturally slow down until they stopped, and he could move on without getting hurt. I'd let him lead, only responding to his texts, never instigating a conversation myself. \n\nI went the whole day without texting him before breaking and sending a message when I got home.\n\nIt was just a quick text, something trivial and unimportant, but he responded right away. I made some joke back, smiling and waiting eagerly for him to respond as I lay on my bed, ignoring all the studying I had to do. \n\nWhen he started asking me about myself, I stopped smiling.\n\nIt wasn't like the first time we texted for hours, when we argued playfully about music and I'd had to justify why trap was the perfect soundtrack for studying. I doubted that his intention was to make me uncomfortable with his questions. Frankly, they were standard for people who were getting to know each other. Where was I from? What did my parents do? Did I have any siblings?\n\nQuestions that I had an answer for, but she didn't. \n\nHe seemed to sense my unease, even just through texts. Which meant that I could sense his unease, and I started to panic. If he wasn't comfortable talking to me, it was over... and while that's what I wanted, I also... I just wasn't ready for it to be over.\n\nSo, I opened the box. \n\nHe didn't know those things about me in real life, since I never talked about any of this with anyone. I still tried to keep things as vague as I could on the off chance that I slipped up one day, but I still... I told him things I had never told anyone.\n\nI told him about my dad. The former college athlete, the muscle-headed bully that took what he wanted with brawn rather than brains. Nothing specific or particularly telling, just about how... well, messed up he was. And how messed up that made me feel. I told him about how hard it was to trust anyone because of it, and how hard I found it to open up to people. \n\nI tried to explain why the incident in the library had made me so mad, and why I'd had to say something, why I had to try to make sure that people like Frank didn't go through life unchallenged. If they did, there would be another girl like me, years in the future, hurting and hiding and lost. I spilled everything I could to him, hoping he would understand... but also hoping he didn't.\n\nI mean, it could have been the perfect excuse for him to stop texting me. Share a whole bunch of emotional baggage, admit a bunch of things that could scare him off, and maybe he'd bow out. I almost expected him to, honestly. \n\nI apparently underestimated how much he liked me.\n\nWell, not me. Her.\n\nThat was when I really, truly realized how much of a mess I had created, and that I had no idea how I was going to get out of it.\n\n<center>*****</center>\n\nHIM\n\n\"We haven't even met in person. You need to give it a rest.\"\n\n\"Yeah, but when you do, you'll introduce me, right?\"\n\nNo, Tim. I wasn't going to fucking introduce you. I was starting to think of Casey in the mindset of 'my'. I wasn't going to introduce him to my Casey. I wasn't going to introduce him to my friend, to my... whatever we were. I knew where his head was at and it was low-level irritating. \n\n\"Of course. First thing.\" Fuck that noise. \n\nFeeling guilty about mooching off him, I used the gift certificate Mom sent me and ordered us a pizza. They were gigantic in Chicago and one pie will fill us up and be enough for having more later, which is pretty impressive for two college guys who eat like ravaging locusts. Lou Malnatti's was sort of a clich\u00e9 for Chicago natives, but for two students who weren't born in the Windy City, it was a rare treat. \n\nTim tipped the delivery guy and we grabbed paper towels, Mt. Dew and paper plates. Sitting down, my phone buzzed. My heart beat just a little faster and as much as I loved her, I hoped it wasn't my sister again. Pulling it out, I saw that it was a text from Casey. \n\nI turned to Tim. \"Start eating, I'll be right back.\"\n\n\"Sure. See you in an hour or two. Tell her I said hi. You're gone too long, I'm starting on your slices.\"\n\nHe could've eaten the whole thing for all I cared. Okay, that's not true. But more than his share would have been fine. Sitting on my bed, I replied to her text and we were off again. Things were smooth, easy and... I don't know. What's the right word? Good? No, too mild. Whatever. We were fitting. Maybe that's better. There was no stress trying to figure out what to say next or how to best phrase it. My thumbs just flew, and everything was comfortable. \n\nUntil I fucked up.\n\nWhat was smooth as glass became slow, halting and awkward. I ground our conversation to a halt because I couldn't be happy with enough. I had to go and ask her about her family, like an idiot. Why the hell couldn't I be happy with what she was offering? I'm such a dolt. \n\nCasey was hesitant, there were now delays between her responses and our conversation almost died. She repeated herself a few times and I could feel her stretching to find the right words. I should have left it alone.\n\nIt turns out that her father was a dick. Overbearing, demanding to be the center of attention, used to getting his way and trying to make himself bigger by making others smaller, his wife and daughter were adjuncts of himself instead of people in their own right. She told me how old videos of her mother made her sad. She seemed so vibrant and alive, but decades with her father had quashed that. He was like Frank, only 20 years older. \n\nAnd because I'm an idiot, I dredged this up. \n\nMy responses grew slower as I tried to think of what to say in response to these slow, painful revelations. What could I say? There were no words from a virtual stranger that could ease her pain or make things okay, regardless of how much I didn't want to be a stranger and wanted to help.\n\nWe eventually made a few weak jokes and ended things awkwardly. I was too sad and pissed off at myself to be angry. Resigned was closer to the truth; resigned that it was over and that would be the last I'd hear from her. \n\n\"Dude, pizza's getting cold.\"\n\n\"Whatever.\"\n\n\"You want me to throw it in the fridge?\"\n\n\"Tim, do whatever the fuck you want. Throw it in the fridge, toss it out, eat it; whatever.\"\n\nWith a frown, he slowly nodded his head, grabbed some foil, wrapped the slice and stacked it in the mini-fridge with the others. I put on my running shoes and an old tee and headed towards the door. I needed to do something, anything to clear my head and get out of the emotional fog. How on Earth did this woman come to mean so much to me after so short a time?\n\n\"Hey, hold up.\"\n\nTim was pulling on his sneakers. \n\nI frowned. \"I'll be back in an hour, okay?\"\n\n\"No, not really. I'm going with you.\"\n\n\"What?\"\n\n\"Look, something went down and I don't want you, you know, alone, I guess. We don't have to talk or anything, I'll just go with you. We can talk if you want to. You know I'm just joking around about her, right? I don't want you to hook me up. I see how you get when she texts. Let's just get out of here for a while, go for a run and things'll look better when we get back.\"\n\nI smiled in spite of myself. \"That's... Thanks, but I'm good. Not being a dick, but I need to push it and you're not an everyday runner and you just had three slices of deep-dish.\"\n\nHe grinned and put his hands on his stomach. \"I wasn't going to say anything but thank God you turned me down. I would've puked after half a mile.\"\n\nLaughing, I opened the door. \"Thanks, Tim. Be back in a bit.\"\n\nI ran and I thought. What was normal for me would be to step back, wait for something, anything and if it didn't come, just accept it and move on. Step after step I became more resolute. That wasn't going to happen this time. I was too passive. I liked Casey, truly liked her. I wasn't just going to be a passenger on this ride, going wherever it took me. \n\nBy the time I got back, I knew that I was going to text her. I'd give her some space and a bit of time and reach out the next day. I felt oddly energized. Not sitting back and waiting for things to happen wasn't who I normally was, and I liked the change. Grabbing my laptop, I went to do some studying when I got a ping notifying me of an email.\n\nHey, handsome! Thought you were going to call? Free tonight? We can get started on those boats... or anything else you'd like. I'm making my famous marinara. Get that cute butt over here! 8:30?\n\nHugs!\n\nMandy\n\nI sighed. \n\nHey, Mandy. Thanks for the offer, but I can't tonight. I've got a big project coming up in ALA. Gonna be hitting the books pretty hard.\n\nI'd barely had time to look at some notes when there was another ping.\n\nYou work too hard! Can't study on an empty stomach. I'll bring over some of my world famous pasta? Which dorm are you in and what's the room number?\n\nWhat the actual fuck?\n\nWow, that's really great of you, but I'm gonna have to take a raincheck. If you come by I'll be all distracted. I've got pizza in the fridge, so I'll make it through. Thanks, though!\n\nAnother ping.\n\nYou're no fun. : ) Okay, if you get done early, call me. Anytime. I'm up late. Even if you just want to talk or stop by. For any reason. You have my number?\n\nYeah, Mandy. I have your number. You've given it to me a dozen times. \n\nI didn't reply and instead got to studying. I built in a 90-minute break at 7:30. I was going to have dinner with Michelle at Medici on 57th. She'd either pay me some token for the tutoring or buy my dinner, and I was fine with either. By that time, I'd need to clear my head before jumping back in for a few more hours. \n\nStudying with a full stomach was impossible for me. I'd fall asleep almost immediately. With that in mind, I ordered a salad with grilled chicken breast. Michelle was having lasagna and it looked amazing, but she just picked at it, sighing occasionally. \n\n\"You okay?\"\n\n\"Yeah. No, actually. It's Frank. He...\"\n\nWe were interrupted by a too-loud voice. \"I see what sort of figures you're studying, Craig.\"\n\nUgghh. I looked up into Mandy's glare. She was clutching a to-go bag and looking down at us. \n\n\"What's the matter, bitch? Frank's doing Kelly, so you have to go after Craig? I've told you; he's taken.\" She turned to me. \"This? Really? You're not with me because of Ms. Popular? Some ratchet whore that's probably been with half the campus, and you'd prefer to be with her? Fine! Take the football team's leftovers, just get yourself to the clinic when you pull out of that swamp. We... Craig, we...\"\n\nShe turned and left. Michelle sat there, open mouthed.\n\n\"What. The. Hell?\"\n\n\"Michelle, I am SO sorry. That... that was the most embarrassing... I don't know what to say. She's crazy.\"\n\n\"Ya think? Stalker much?\"\n\n\"Did she really tell you I was taken?\"\n\n\"Sort of. Not in so many words, but she'd tell me how you were working on ships or boats or whatever together and how she was going to take up running and... That girl is nuts.\"\n\n\"Really, Michelle, I've never even gone out with her. I'm... dammit. Look, I really am sorry. Let me buy dinner?\"\n\n\"No, I already owe you. And to be honest, I needed to talk to a friend. She's crazy, but she was right about Frank. He finally realized that I wasn't just playing, and he wasn't going to get any from me, so he's getting it from Kelly.\"\n\nThis was awkward.\n\n\"Oh. Uhm, sorry, I guess. That sorta sucks.\"\n\n\"Yeah. I mean, I'm not a prude. I guess deep down I know what the deal was. If it was the right person, that would be different. Some part of me knew Frank wasn't, but it still hurts that he'd hook up with her and not even bother ending it with me or saying anything.\"\n\n\"He's...\" I didn't know what to say. \"Listen, Frank's an idiot. You're going to find someone better than him and it's going to be soon.\"\n\n\"Thanks, Craig. Listen, I know you need to get back. Can we do something tomorrow? Maybe just a couple of hours? I don't want to stay alone and mope all day. My brother keeps telling me I should watch \"The Rocketeer\". It was like one of the first comic-book movies. Bring your roommate or someone, I'll make popcorn. I've got like five different toppings. I need to... I don't know. Laugh, hang out. Something.\"\n\n\"Yeah, sure. Tomorrow night, after, I don't know, seven?\"\n\n\"That'd be great. Craig?\"\n\n\"Yeah?\"\n\n\"Don't bring Mandy.\"\n\nI smiled. \"Funny.\"\n\nShe laughed. We finished our food and I went back to the books. The next day I went for a morning run and then texted Casey. I was nervous, but she got right back to me and everything was fine again. We joked and teased and laughed and I felt relieved and sort of energized.\n\n<center>*****</center>\n\nHER\n\nWhen my burner phone went off the next morning, I was torn between delight and trepidation. \n\nI texted him back because that was the rule I'd set for myself. I could text him if he texted me first. It didn't matter that I'd already broken that rule and that I shouldn't have been texting him and that it was all going to end horribly, terribly, heartbreakingly bad. \n\nFor a few glorious hours, I let myself feel the delight. Things flowed smoothly, easy conversations that felt almost... almost real, even though she wasn't real.\n\nIt was like the divulging of my lamentable past had brought us closer together. It should have been a milestone, a turning point in the strange and beautiful friendship we were developing. He didn't see me as just a concept anymore, but as a person. A friend. \n\nIt's just too bad that one of us wasn't actually a real person.\n\nIt was also too bad that he had a girlfriend. Or, might have a girlfriend. I was confused about the entire situation. Asking him about it was off the table, though. He had never told Casey about any other girls, and I didn't exactly have the option to ask him myself. I couldn't even imagine how to bring up the topic after what I'd heard.\n\nBut I let myself forget about that for a while. I let myself enjoy the conversation with him, giving in to the temptation to just pretend for a few hours. Things didn't start going downhill until I saw him in person. \n\nThat wasn't odd or bad, in itself. I mean, I knew him. What was odd was hearing him talk about me.\n\nMe, as in Casey, that is. \n\nHe was asking about her quietly. It was sort of endearing, actually, watching him try to casually work it into conversations. \n\n\"Listen, speaking of music, have you ever met Casey Arlington? Yeah, the girl from... yeah. I was hoping to run into her one of these days. You know what she's taking here?\"\n\n\"Maybe she's in medicine? Why don't you just ask her?\" \n\nThen he'd shrug and awkwardly change the subject. \n\nOf course, nobody knew her. She didn't exist. \n\nSomewhat thankfully, he didn't ask Casey what she was taking. I didn't have an answer for it, and it might have really been the thing that ended everything. I wouldn't have been able to respond. I'd made it clear that Casey was a UC student. I mean, she had the email address and everything. \n\nI didn't quite know what to think about his asking, either. I left class confused, something that very rarely happened when I was leaving class. If he had a girlfriend, why was he trying to find Casey? \n\nHe might have asked a few more people if they knew Casey, but if he did, he gave up relatively quickly.\n\nI nearly puked when the next text came through.\n\nAre you around campus? Maybe we could meet up for lunch.\n\nI responded back quickly, hoping the panic I felt wasn't blatantly obvious on my face as people walked by.\n\nSorry, cutie. Have an appointment I can't miss.\n\nMy hands were shaking so much I almost sent it before deleting the last part of the text, which had said \"Maybe another time?\" It would have been a stupid, horrible, wretched mistake, and I was almost shaken enough to have made it. ",
        "I felt like people were watching me. They weren't, but I felt like they were. He didn't text back right away, and I had to stop in the bathroom to calm myself before going to my next class. What if he thought Casey was shooting him down? Or what if he thought she wasn't interested? He'd be heartbroken. \n\nWhich was a good thing, I argued with myself. He needed to get over Casey and move on. Casey wasn't real. Casey had the face of a beautiful actress and the personality of a person I wanted to be but never could. He needed to stop texting her, because I clearly wasn't strong enough to stop myself from texting him.\n\nMen. They were nothing but machines for pain. Even like this, even when it wasn't his fault that I was hurting. I had no one to blame but myself, but it all started because I liked him. \n\nThere was no way to come out of this without being hurt. If he texted back, it would just be another day stretching towards ruin. If he didn't... \n\nI can't say I wasn't relieved when my burner phone went off. I also can't say I wasn't devastated. It was a good thing I was back at my apartment, because someone would have definitely realized I was about to break down if they'd seen me. \n\nWhat's your favorite candy?\n\nI tried not to smile as I read the message. It was so random, but then, a lot of our conversations were.\n\nReese's Peanut Butter Cups. Why?\n\nWanna come to a movie night with me and a friend? I'll get the candy. All the Reese's you can eat, my treat. Tomorrow, around 7?\n\nI should have texted back right away. Or maybe pausing was the best choice. Honestly, it didn't matter. \n\nThe whole thing was fucked up from the moment I'd put the wig on.\n\nAw, that sounds like fun. I have plans unfortunately, sorry. Eat a whole bunch of Reese's for me and enjoy the movie! What are you guys seeing?\n\nToo bad. We're watching The Rocketeer. Some old comic book movie, I guess.\n\nI had already thrown the phone across the room and backed against the wall, heart racing so fast that my vision was blurring around the edges. If I hadn't, his next message would have made me do the exact same thing.\n\nListen, I know this is kind of weird or awkward or whatever. I guess I'm just hoping we could maybe hang out sometime. Would you be up for that?\n\n<center>*****</center>\n\nHIM\n\nTim was a good guy and he was comfortable with women in a way that I wasn't. There was an ease there that I envied. It seemed as if he wanted company, he could arrange it. Women liked him and felt he was, I don't know, approachable and safe but still worth pursuing. I didn't want to introduce him to Casey, that was for damned sure, but Michelle? Maybe. \n\nWhen I went for my run that morning, I stopped at Harper Foods. I tried to shop quickly. No one wants to be in line behind the sweaty guy. I had a bunch of candy, some frozen burritos, a bag of chips and some oranges. Neither Michelle nor Tim were picky, so I just grabbed whatever caught my eye. \n\nI thought about continuing to Hyde Park Produce for some other stuff, but I realized what was going on. Distracting myself by running and buying stuff wasn't a solution. Hell, I didn't even know if I had a problem yet. Casey turned me down twice and then never replied to my last text. Normally, I would accept that as a clear sign that we were friends who texted and nothing more would come of it. \n\nBut I also thought we were done when I pried about her family.\n\nFor once, I wasn't going to be passive. It was different with her and I couldn't put my finger on why. All I knew is that she was worth pursuing. I'd give her some time, maybe a week or so and then try again. \n\nI found myself scanning faces as I made my way back to the dorm. I saw one brunette who I followed for about 30 yards before realizing it wasn't her. I needed to get my head on straight. Getting back to the dorm, I heard the water from Tim's shower. I ate a couple of hard-boiled eggs, pulled up my notes on eigenvectors and dug in.\n\nWhen he came out of his room, I hit him up. \"Hey, got plans tonight?\" \n\n\"What time?\"\n\n\"Like, seven to ten?\"\n\n\"Yeah, sorry. What's up?\"\n\n\"Nothing. Watching a movie with Michelle. Thought you might want to join.\"\n\n\"Definitely next time. I'm going out with a second-year nursing student.\"\n\n\"Sure. No problem.\" \n\nI got back to studying. Looking up, blinking, I realized it was a little after 1:00 pm. Getting up to get a drink, I stretched, grabbed a banana and went back to my chair. Grabbing the phone, I texted Casey.\n\nHope the appointment went well. Have a great night. \n\nNot bad. Not pushy, not too inquisitive. Give her some space and just say 'hey'. I was overthinking this. It was just a text. That wasn't responded to in a minute. Or five minutes. Or half an hour. Going back to studying, I kept looking at the phone before I had to head off for my two classes. \n\nI finally got a text, but it was from Michelle with directions. I headed over with my bag of snacks and could smell the popcorn as I knocked on her door. She was dressed in sweats and had one mitten on her left hand and another under her armpit. I realized they were for hot pots and pans and followed her back to the kitchen. \n\nShe looked over her shoulder. \"Any preference for toppings? Any allergies or anything? Mandy'll hate me forever if I kill her boyfriend.\"\n\n\"Still with the Mandy jokes. You crack me up. Anything is good. I usually just have salt and butter.\"\n\nMichelle had six bowls set up and seasoned each differently. We carried them to the couch, and she started the movie. \n\n\"Thanks for coming over, Craig. I just sort of feel crappy and I don't want to go out and show my face. Everyone on campus is going to know and I don't want that fake sympathy. I just want to crawl up, watch a movie and relax.\"\n\n\"Sure. Not a problem. I never saw it, and the popcorn smells great, so it's all good.\"\n\nWe were about a half an hour into The Rocketeer when I started feeling very uncomfortable. Something was off and I couldn't tell what. I couldn't name them, but I recognized most of the male actors. Not a big deal. The female lead, though? There was just something... wrong. I looked over at Michelle to see if I was alone in this and she was rooting through the bag. \n\n\"Ohhh! Peanut Butter Cups. My fave!\"\n\nMy head was on a swivel. I looked at the actress and back at Michelle and her candy. Then back to the actress. Who... Jennifer Connelly! That's who it was. She was unbelievably hot. Just like Casey. I mean, exactly like Casey. I mean, it was fucking Casey, or Casey was her. I looked back at Michelle. Was she smiling at me?\n\nEverything was falling into place. Ms. Uber Popular? How vain do you have to be to call yourself that? I'm in Math Sciences, would she think I didn't know what Deepfake was? Was this her idea of a joke? Wait until I saw her and the movie together and everything comes together as she eats my damned candy, the candy not-Casey told me yesterday was her favorite? \n\nWas this funny?\n\nGrabbing the bag from her hand, I hurled it against the wall. I knew it. I fucking knew it and I ignored what every instinct was telling me. Girls like that don't send me videos. They don't text for hours. Did she even break-up with Frank? Was he in on this? Standing, I made my way to the door.\n\n\"Craig? What the hell, man?\"\n\nStopping, not looking back, I struggled to keep my voice under control. \"Congrats, Michelle. You got me. You made me look like a fucking idiot. Everyone have a good laugh at the math nerd? You have some private group chat where you posted our texts?\"\n\n\"Our... What the hell are you talking about?\" She sounded pissed.\n\nI turned and gestured towards the TV. \"Was this just rubbing my nose in it? I wouldn't realize what was going on with the evidence right in front of me? You're good, but you're not that good. Did someone help you with the Deepfake? Some other nerd you're playing?\"\n\n\"I... Craig, I swear that I have no idea what you're talking about. What's Deepfake?\"\n\nShe sounded sincere and offended and befuddled. \n\n\"You're telling me it's not you?\"\n\nShe was almost yelling and now I could add angry to the list of her emotions. \"Me what? What the hell are you talking about?\"\n\nOh, shit. \n\n\"Okay, listen, I don't know what to think right now. Are you Casey?\"\n\n\"Am I... What does that even mean?\"\n\nSo, I explained. How Deepfake was software that allowed you to put someone's face over your own if you have enough data points for the other person. How a long career in the movies gave you plenty of data to draw from. How \"Casey\" was using Jennifer Connelly's face to mask her identity. \n\n\"And you thought that was me? What am I, some sort of psycho? You have the videos? Pull them up on your phone.\"\n\nWe did. \n\n\"You idiot, I'm three or four inches taller than her and her tits are bigger than mine.\"\n\nGreat. Now I destroyed a friendship I valued and just found out that a woman I was falling for was fucking with my head as a joke. A perfect night. \n\n\"Michelle, I'm really, really sorry. She told me yesterday that her favorite candy was peanut butter cups and I sat there and when I realized why Connelly was bothering me all night and then I looked at you and you were eating the candy and... I'm such an idiot.\"\n\nI was babbling. \n\nShaking her head slightly, she frowned. \"Okay, I get it, I guess. I mean, yeah, that's pretty damn freaky. Start the movie again and freeze it when she's on screen.\"\n\nWe went back and forth between the video and the movie. It was seamless. How did I not notice this before? I'd seen Jennifer Connelly in other stuff. She was in that weird Hulk movie and the one about John Nash. John Nash... what the fuck? She was in the movie about the mathematician who pioneered game theory and won the Nobel. The mathematician who saw things that weren't actually there. Like me, thinking I saw someone who cared when instead I was being laughed at. \n\n\"Michelle, you see A Beautiful Mind?\"\n\n\"No, why?\"\n\n\"Never mind. This... if it wasn't you, who was it?\"\n\n\"I can't believe I'm saying this, but... Mandy?\"\n\n\"Mandy? She's crazy enough but, I don't know. No, it can't be her. It's not who she is. She's the most in-your-face person I know. She'd just film herself. Besides, she's sort of an idiot. She wouldn't pull it off this well.\"\n\n\"Well, then who? I don't know, Craig, but this is creepy as fuck.\"\n\nWe talked for another twenty minutes before I left. I didn't want to go back to my empty dorm, so I walked around the campus and then across the campus. Who would want to do this to me? Who was capable enough to do this? I just couldn't wrap my head around it. What did I do to someone that was so horrendous that they would play me like this?\n\nI stopped at the small store on campus and got a Mt. Dew. As I was about to pay, I saw the Reese's Peanut Butter cup in the sales rack. I thought of who would know enough about Deepfake to be able to pull this off. Closing my eyes, I saw Madison turn her bag upside down in the library, dumping out the candy. I saw her give me the Almond Joys and keeping the peanut butter cups. \n\n\"Dude, you in line?\" He repeated himself. \"Dude?\"\n\nI looked up and saw the guy with the frozen pizza and two liter standing behind me. \n\nIt took me a second to reply. \"No. Just being an idiot again. Sorry. Go ahead.\"\n\nI stepped out of the line, put down the drink and walked out. Grabbing my phone, I texted not-Casey.\n\nI don't know what I did to you to make you do this. You could have just talked to me. We could have worked it out. You fucking killed me, Madison. Killed me. I was falling for you and now I realize it was all a joke. You win. I'm done.\n\nBack at my dorm, I slept. Missing classes the next day, I got out of bed to use the bathroom and drink from the faucet. Then I slept some more. Tim banged on my door. I ignored him. I skipped classes again the next day. He used a screwdriver to unlock my door and check on me. My phone rang and buzzed until the battery died.\n\nI was lost, adrift in a sea of grey. I just wanted to sleep.\n\n<center>*****</center>\n\nHER\n\n\"If he had just... just figured out that it wasn't... that she wasn't real, you know, and that was it? I could have lived with that. I mean, maybe. I would still feel like a monster, but it... you know, it wouldn't have been so bad.\n\n\"I don't know how he figured out it was me. Some clue, something I missed. I watched the videos again and again, trying to figure out if I'd missed something, but they were perfect. Two videos had convinced him Casey existed, so it had to be something I'd said when we were texting. I read the entirety of our messages over and over, and I still... I don't know where I fucked up.\n\n\"I can't even be mad at myself for fucking it up, though. Like, what did I expect? The ball had to drop somewhere. Happily ever after was never possible. Girls who fuck with guys like that don't deserve happy endings. The only person who should have gotten a happily ever after was Craig, because he... he didn't ask for this.\n\n\"I tried to apologize. I texted him back and... well, he blocked Casey's number. And my number. And probably my email. He didn't come to class. He didn't... I don't blame him. I just... I don't deserve to know if he's okay or not. I don't deserve shit.\n\n\"This is my fault. This is not something excusable or justifiable or explainable. It's not logical, it's not rational, it's not even understandable. I just want to apologize. I just wanted to... to tell him it wasn't a joke. I didn't tell anyone, I wasn't laughing at him. I swear on my life and on anything in the whole world that it wasn't malicious. I knew it would hurt him, but I didn't want... \n\n\"Craig, I'm sorry. I'm so, so sorry. \n\n\"I don't know why he hasn't told anyone it was me behind the videos. Everyone knows they were fake, but they didn't know it was me. I don't deserve that kind of anonymity. I don't deserve to be protected in this.\n\n\"My name is Madison Leigh and I'm a first-year Math Science student. I'm a virgin, I have a huge crush on Craig Lopez, and I did something weird and creepy and let it go on for too long. I made two Deepfake videos where I stole Jennifer Connelly's face and said it was a student named Casey Arlington, who was really just a figment of my imagination. I made two videos as myself. This one, and the one I sent my dad. \n\n\"Craig doesn't know it, but he gave me the confidence to do that. This whole shit-show of a situation had one silver lining, and that was finally telling my father how horrible I think he is. I haven't heard back yet. I mean, I'm probably going to be disowned, so... yeah, I've got that going for me.\n\n\"This is the last time you'll all hear from me or Casey. I'm... I'm going to go home now.\"\n\nI swallowed hard, reaching towards the camera to turn it off before hesitating and looking back at it.\n\n\"Craig. I'm sorry. You shouldn't forgive me, but I'm sorry.\" \n\nWith that, I turned the camera off.\n\nThe video had been live, so I didn't need to post anything. I knew Craig would see it. The entire campus seemed to know what happened, so it would only be a matter of time before someone forced him to watch it. \n\nI spent the rest of the day packing. I wasn't sure where I was going to go, but my apartment was too close to campus. All of Chicago was too close to campus. Disowned was too light of a word to describe how my father would react to the video I'd sent him, but I didn't think there was anywhere else I could go. \n\nI'd just apologize. Keep my head down, mouth shut, and let him scream. \n\nI had fucked up a lot of things, but that was one thing I knew I was good at.\n\n<center>*****</center>\n\nHIM\n\nIt was time for me to return through the looking glass and re-enter a world where women like non-Casey weren't interested in math nerds. Three days had passed and I wasn't sure who I was the most angry at. I couldn't believe how gullible I was. I was furious at myself for slipping so easily into confirmation bias. I wanted it to be true, so it had to be true. So much for my dedication to logic. \n\nMadison was a constant source of anger. I still couldn't figure out what I had done. Was I not there enough? Did I let her down when she needed help with studying or a project? Did I offend her somehow and not even realize it? Had she somehow realized I thought she was cute and thought it would be funny to fuck with me? Was she getting even with me or was it all just for the lulz? I was starting to not give a fuck. There's just no excuse. \n\nMost of all, I was pissed at the people on campus. She posted some video bragging to everyone about what she did. I refused to watch it. I didn't need the recap, I lived through it. Taking a victory lap seemed too cheap for her, but I guess I never knew who Madison was. Great. She won. She let everyone know. Fuck her and fuck them. \n\nI was getting bombarded with emails and texts from people I barely knew and strangers. Everyone one of them had advice. Forgive her. Talk to her. File criminal charges. Get her kicked out of school. Make my own video telling people how I felt. They were like vultures feeding off my misery. This wasn't some reality show, it was my life. \n\nI wrote to my professors and TA's letting them know that I had a personal issue to deal with but that I'd be back for the next class. Opening the windows, I aired out my room and cleared out the empty water bottles and paper plates from the drinks and sandwiches that Tim broke into my room. \n\nThe shower felt pretty amazing in spite of my wanting to remain pissed at the world. I was rank and just standing there under the water pulled some of the venom from my soul. Gathering up my sheets, I put them in the laundry bag with the rest of my stuff, swept up my laptop and headed down to do some washing. \n\nWhile I was sitting there waiting, I added filters to my email. Nothing mentioning Casey was getting through. I mass deleted every email from people I didn't personally know. They'd have to enjoy their dramatics without my participation. I looked up and saw some guy staring at me, like I was a monkey at the zoo. \n\n\"What?!\"\n\nHe took a step back. \"Nothing. Dude, relax. I need change for the machine and I only have a five. Not a problem. I'll ask someone else.\"\n\nI shook my head, disappointed in myself again. \"I, uh, I use my student card. Got credits for the semester. Sorry.\"\n\nWhile the clothes were drying, I went over my coursework and tried to catch up on the studying I'd missed over the past 72 hours. There was a dull clunk as I felt a hand on my shoulder. Our RA had put a Mt. Dew on the hard plastic chair next to me. \n\n\"It sucks, man, but fuck 'em. It's going to blow over quick. Let me know if you need anything.\"\n\nIt was a few kind words and a soda. Why did I feel like crying? \n\nI trudged back up to my room, bag slung over my shoulder. The door was already open, and Michelle and Tim were sitting on our cheap used couch, talking. They seemed comfortable and she was smiling. Maybe there was a silver lining somewhere in this nightmare. Stepping through the door, I made some noise. Putting a halt to their conversation, they both stared for a minute. \n\nTim stood. \"Hey, you okay? Where were you? You eat? You hungry or something?\"\n\n\"Yeah, not good, but getting there. You... Thanks, Tim. I appreciate, well, everything.\"\n\nMichelle stood as well and I noticed how close she stood to Tim. \"Seriously, Craig. How are you?\"\n\n\"Look, I'm pissed and shaken a bit and... I don't know, but I'll be all right. It's not like we were in a relationship or... I don't know. It's just so much at once, right? She did it. That's fucked up. I thought we were friends, so it's not just that she screwed me over, but it was a betrayal, so there's that. Then it was so public and now everyone is in my shit and on top of everything else, I heard she put out a new video bragging about what she did.\"",
        "Michelle frowned. \"Bragging? Craig, did you watch the video?\"\n\n\"No.\"\n\n\"You should.\"\n\n\"Look, I don't need to swallow any more of that bile. I get it. She won. I'm a joke. Whatever war she was waging, she won.\"\n\n\"This whole thing did a number on you, didn't it? Watch the video. She didn't create Casey to tease you or to make you out to be an idiot. She did it to find the courage to say what she couldn't otherwise say. You're Roxane. She's both Cyrano and her own Christian. Please, watch the video and try to imagine how much courage it took to make it. When this all started, she had to create a new identity to be honest with you and now she's out there in front of the world as herself admitting how much she fucked up. That's a huge step. It was live streamed, but I have a copy.\"\n\nShe sent me the file, I grabbed a box of Pop Tarts, went to my room and watched while I ate. Things...shifted. I was still angry, but now it was more with the situation itself than with Madison. Don't get me wrong, I was still pissed at her, but now it was mixed with either compassion or understanding. And what was up with her hair? Why did she always cover her face with it like that? She, well, she wasn't ugly or anything. She was actually... whatever. \n\nI started it again. Her pain was palpable, and I grew irritated as I realized I felt bad for her. She created this! I was the victim, why should I be feeling bad for her? No wonder I was so easy to fool, it turned out that I was a complete idiot. \n\nThe third time I watched it through something odd began happening. The memories of the other two videos changed. It was no longer Jennifer Connelly's face I was seeing in my mind; it was Madison's. I'd pictured Jennifer as we texted and now that changed as well. It was Madison making me laugh. It was Madison talking about her father. It was Madison, always Madison. I sighed and refused to watch it a fourth time.\n\nThis whole situation was a big bag of crazy.\n\nThey were sitting together and watching me as I came out of my room. Tim was about to speak when Michelle put her hand on his knee. He turned to her as she spoke. \n\n\"Craig, you need to talk to her.\"\n\nI sighed. \"I know.\"\n\nGoing through all of our old emails, I finally found her address. It was drizzling out, but that was fine. It fit my mood. I knew that her grandmother had left her money, but damn. This was a hell of a lot nicer neighborhood than I thought any UofC student could afford. Oddly, her door was open. I realized why when I saw all the stacked boxes. Movers were likely on their way.\n\nShe was in the living room and I could see her packing from the door. I walked in, got within about a dozen feet and spoke to her back. I guess I was quiet when I walked in. Madison tensed as soon as she heard my voice. \n\n\"I... I need help understanding this. I need to see you as you explain. Look in your eyes. Madison, can you tell me why?\"\n\n<center>*****</center>\n\nHER\n\nThe muscles in my throat closed so quickly that I could barely breathe, let alone tell him why. \n\nIt was physically painful to turn around. I didn't want to look in his eyes. I didn't... couldn't. I couldn't do it. \n\nBut he had asked a direct question, and direct questions should be answered. Promptly. \n\nThe most I could do was straighten up, every muscle in my body screaming as I stood. Turning towards him was like learning to walk again. The movements felt staggered, like someone was guiding my legs with a remote control that had a low battery. I stared at the floor, but he said he wanted to look in my eyes, so I forced my neck up from its bowed position.\n\nCraig was in my apartment. Craig had entered my apartment, closed the door, and was standing in my living room. Craig was in my apartment asking me to explain why I was batshit fucking crazy. \n\nI met his eyes for all of a millisecond before shutting down. My teeth smashed together to keep my chin from shaking, my hair fell in front of my face like a shield, and I folded my arms in front of me, as if that was the thing that would keep me from falling apart. \n\nThe silence was awkward as he waited for a response, but I couldn't. \n\n\"I don't think I'm asking much, all things considered,\" he finally said.\n\nHe wasn't asking much at all. He had every right to ask. There was just no way of... Casey was the one who could talk to him. Sure, I'd made a video as myself, but there was a big difference between a camera and a real, live person. \n\n\"Look, if you're not even going to... I thought, after seeing the video, you'd... this was a mistake.\" He could barely hide the disgust in his voice.\n\nA strange noise emitted from my throat as I tried to force myself to speak. A mix of a whine and a groan, it was horrendously embarrassing, and I cut it off with a gasp as my face went red. \n\n\"What... what was that?\" \n\nDisgust was joined by thinly veiled confusion. \n\nI tried again, and that time the words made it through, albeit softly.\n\n\"I'm fucked up.\" \n\n\"Madison, I can barely hear you.\" \n\n\"I'm fucked up. I'm fucked up, okay?!\"\n\nOnce the words started, they wouldn't stop. I still couldn't look up, still hid behind the curtain of hair, but I could sense him. I could imagine the revulsion on his face as he looked at me. I couldn't bring myself to look up and actually witness it.\n\n\"I'm fucked up. I'm weird. I'm crazy. I know it, you know it, the whole campus knows it now. I messed up your life and you want to understand why. I want to tell you why, but I can't, because I don't understand either. All I can tell you is that I didn't laugh. It wasn't a joke. I... I didn't lie to you about anything. I mean, I did. The whole... I just, I didn't lie about... about the real stuff.\"\n\nMy voice cracked as I trailed off, the words starting strong and becoming softer and softer until the nonsensical statement that I didn't lie to him was barely audible. I cringed beneath my mask of hair at how stupid I sounded.\n\n\"Would you look at me?\"\n\nA single, choked grunt of a sob escaped my throat. \n\n\"I need you to look at me.\"\n\nHis voice was far more gentle than I deserved, insistent but patient. He should have been demanding I look at him, insisting on an explanation, berating me for how stupid I sounded. That was... that was what men did. Some men. \n\nNot him, though.\n\nInch by inch, I forced my neck to tilt up. My hair still covered my cheeks, a security blanket, and I didn't open my eyes until my chin was straight. When I did, I looked at his chest, and then his lips, and then, agonizingly, into his eyes. \n\nHis expression was guarded, still hesitant, but his eyes were warm. Whatever he saw in my face, he must have decided I was telling the truth, because he sighed.\n\n\"You know, this would be a hell of a lot easier if you'd done it to fuck with me. 'Least then I'd know how to feel.\" \n\n\"W-What?\"\n\n\"I don't know how to feel. I'm pissed. Well, I was pissed. And hurt.\"\n\nI bit my lip, tearing my eyes away from him.\n\n\"I should be mad. And I was mad, I was beyond mad. But now... I'm just confused.\"\n\n\"Why?\"\n\n\"Because I shouldn't still like you, and I do. More, actually.\"\n\nI laughed. I don't know why that was my response, but a sharp squawk of laughter echoed through the mostly-empty apartment before I stopped myself.\n\n\"You're crazy,\" I said. \"I mean, I'm crazy, but you're crazy.\"\n\n\"You're not crazy. You're just...\"\n\n\"Crazy,\" I said. \"You don't like me. You like Casey, and Casey isn't real.\" \n\n\"You are Casey.\" \n\n\"There's something wrong with me, Craig.\" My voice came out stringy, wavering as I spoke. \"I couldn't... I could barely talk to you when we were friends. It took making up a whole entire person to be able to even get to know you. That's not normal.\"\n\n\"It's not, but neither was how your dad treated you.\" \n\nI stared at him for a long moment before realizing I was making eye contact again.\n\n\"That was true, wasn't it?\" He looked nervous.\n\n\"Yes,\" I whispered.\n\n\"And besides the name, the video, and telling me you had an appointment at lunch, everything else was true?\" \n\nI nodded.\n\n\"Madison, I... I can't explain it any better than you can, but I still like you. I understand why you needed to do it.\"\n\n\"You don't like me,\" I said again. \"I'm not her. I can't be like that. You liked Casey. She was hot and smart and funny and\u2014\"\n\n\"An illusion. She was the illusion I was infatuated with. I was falling for the woman behind the mask, and I didn't know it until you took the mask off.\" \n\n\"You shouldn't say that.\" My voice broke as words came tumbling out again and I bowed my head, shrouding myself in the safety of my hair. \"You shouldn't. I hurt you and I can't blame anyone but myself for this entire mess. I just, I liked you... still like you, but I mean, that's... that's not the point. Normal people don't make Deepfake videos and buy burner phones so they can text someone they like, normal people just... just tell them, and I couldn't, and that's not your fault, it's my fault, because I'm fucked up. I told you, I'm fucked up. This isn't\u2014\"\n\nI was still rambling as he crossed the apartment, three long strides bringing him in front of me. It wasn't until he brought his hands to my cheeks, pushing my hair out of my face before tilting my head up, that I lost track of whatever I was saying.\n\nThere was a pause, a single moment where our eyes met, my lips parted in the middle of some unimportant word, and then his mouth was on mine.\n\nHe kissed me.\n\nI mean, he kissed me. \n\nA million things flew through my head. None of them mattered. All that mattered was the lips that were pressed to mine, the warmth of his breath and the softness of his mouth and the sudden, intense flow of energy that crashed through my body.\n\nAnd just like that, it was over. He pulled back and I inhaled, trying not to make a noise. His hands left the sides of my face, hovering as he hesitated.\n\n\"Uh,\" he said. \"Sorry. I should've probably, um, asked first.\"\n\nI responded by not asking before I brought my hands to his head and pulled his face back to mine, kissing him again.\n\nI mean, if either of us should have asked permission to do anything, it should have been me, but he certainly didn't seem to mind as he kissed me again. Nor did he seem to mind as his tongue pushed its way into my mouth, or when his teeth gently grazed my bottom lip, or when his hands stopped hovering and found my shoulders, and then my arms, and then wrapped around my waist.\n\nAnd I definitely didn't mind when his hands started wandering, fingers spread against my back before tentatively moving to my sides. I touched his cheek softly, then his hair, and it was only when the tips of my fingers trailed to his neck that he pulled back again, this time stepping away from me.\n\n\"Maybe we should... Should we slow down?\"\n\n\"No.\"\n\nHe laughed.\n\n\"Unless you want to.\"\n\nHe shook his head. \"This is crazy, but I... definitely want to be here, with you.\" \n\nI bit my lip as he trailed off.\n\n\"My bed isn't packed up yet if you want to... to go somewhere more comfortable.\" \n\nMy cheeks were red, I knew that. And my voice was shaking as much as my hands were. And that nervousness is probably what reminded him of the admission I'd made in the video.\n\n\"Aren't you... uh... you know, a virgin?\"\n\nI nodded.\n\nCraig grimaced. \"We don't have to do this. I don't want you to think you have to\u2014\"\n\n\"Don't.\"\n\n\"What?\"\n\n\"Don't say that, please,\" I said quietly. \n\nI knew what he was going to say, because I'd already thought it. He was going to say he didn't want me to give up my virginity in some absurd apology for everything I'd done, that he didn't want to feel like I was trying to sleep with him to make up for my actions. \n\nThat wasn't why I wanted to sleep with him. \n\nThe fact that he was questioning it was just more proof of how truly good Craig was. That after everything, he wasn't the kind of guy who would do that, the kind of guy who thought he was entitled to sex with me as a kind of sick compensation for what I'd done. \n\nI didn't want him to say it because I felt like I didn't deserve that kind of consideration, and I didn't deserve to be with a man who would be so compassionate in the face of everything that had happened. \n\nIf he said it, I'd have to tell him that, and I really, really just wanted him to continue kissing me and touching me and... well. \n\nCraig looked torn between finishing his thought and asking me where the bedroom was. I decided for him, taking his hand and turning on my heel without another word, leading him down the hallway to my room.\n\nIt was sparsely decorated, most of my possessions in boxes in the living room, but the bed was still neatly made. Once there, I closed the door, then turned to him.\n\n\"Madison, are you sure?\" he asked, his voice dry.\n\nI responded by taking my shirt off.\n\n\"That's a yes, then?\"\n\nI nodded.\n\n\"You know you can talk, right?\" \n\nHis gentle teasing made me laugh.\n\n\"Yes,\" I said. \n\nDespite his comment, we didn't do much more talking. We did a lot more kissing, and a lot more exploring. When his shirt had joined mine on the floor and his hand had slipped into the waistband of my jeans, there were a lot more noises... just not, well, talking, per se. \n\nWhen he had removed my jeans, and his jeans, and every other stitch of clothing either of us were wearing before parting my thighs and gently, slowly sliding himself inside me, I made a soft noise that wasn't quite a cry, but wasn't quite anything else, either. He kissed me, murmuring soft words that comforted me in a way I didn't deserve, but that he was good enough to give me. He brushed my hair away from my face, insisting he see me, lips touching my cheek and nose and forehead and eyelids as he took me. \n\nAnd when we finished, laying on my bed, sweating and naked and trembling, he took me into his arms again. \n\n\"Are you really going home?\" he asked.\n\n\"Guess so.\"\n\n\"Why?\"\n\n\"How can I stay?\"\n\n\"After doing all that to get my attention, you're just gonna leave?\"\n\nI blushed, knowing he was joking, but unable to find the humor beneath the knot of anxiety in my stomach.\n\n\"Everyone knows it was me. I can't show my face on campus. People will...\"\n\nHe thought for a moment.\n\n\"We'll tell 'em it was Deepfaked.\"\n\n\"What?!\"\n\n\"Yeah, that someone Deepfaked the confession video to make it seem like it was you. We'll blame, I dunno, Mandy.\" \n\n\"Mandy?\" I said indignantly. \"No one would believe that. She wouldn't even be able to figure out how to turn the camera on, let alone Deepfake anything.\" \n\nI couldn't help but laugh as he did, until we were both giggling maniacally as we held each other like the crazy, awkward, ridiculous people we were.\n\nCraig didn't go home that evening, much to his roommate Tim's concern. Or pride. I still wasn't entirely sure what Tim thought of everything, especially after Craig had packed up his possessions and brought them to my apartment. We unpacked our things together, putting my belongings back and making room for his, as though it were truly the start of something new.\n\nTim didn't mind losing his roommate too much, from what I could tell. Ms. Uber Popular, who was actually just about the sweetest person I'd ever met, was spending a lot more time there in Craig's absence. \n\nWe handled the fallout from the videos by not handling it. When people whispered or pointed, we ignored them. I knew what they said about me.\n\nI didn't care. \n\nThree weeks later, Craig was lying beside me, brushing the hair off of my face as I lay on my back, sheets tangled around us as we caught our breaths. He toyed with it, twisting strands between his fingers.\n\n\"What's on your mind?\" I asked.\n\nHe leaned forward, kissing my neck softly. \n\n\"You know those summer internships they do at Google?\"\n\n\"Yeah.\"\n\n\"I got one.\"\n\n\"Really? Wow. I didn't even know you applied.\" \n\n\"You should. They'd take you, for sure.\" \n\nHe pulled his face away from my neck, looking into my eyes as I stared back at him. I didn't say anything, and he raised an eyebrow.\n\n\"Even if you don't want to apply... would you come with me? I mean, for the summer?\" \n\n\"I'd go with you anywhere.\" \n\nAnd it was true. Anywhere, anytime, I would go with him. He had me, all of me, and I would never hide that from him again. \n\n<center>*****</center>\n\n<center>The authors would like to thank Mr. H.B. Reese for the obvious, Steve M for his insights and patience and NoraFares for her editing.\n\nBebop3 would like to note that MsCherylTerra will be participating in blackrandl1958's upcoming \"Highway Song\" story event. He was privileged to have read an early copy of her story and was blown away. \n\nRandi always does an amazing job creating and curating these events. Tune in for some wonderful stories by some of the best writers on Literotica. St. Patrick's Day, 2020.</center>"
    ],
    "authorname": "Bebop3",
    "tags": [
        "reeses pbc",
        "deepfake",
        "university of chicago",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-masks-we-wear"
}