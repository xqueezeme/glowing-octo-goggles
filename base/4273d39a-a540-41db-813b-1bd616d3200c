{
    "title": "Renascence Ch. 06",
    "pages": [
        "Author's Note:\n\nMy sincerest thanks to my dear friend Lun who worked tirelessly to make this chapter happen with her excellent editing skills and beta reading all the many, many drafts(even the discarded ones, bless her). \n\nHope you all enjoy the chapter. My only reward for my work are in your comments and votes. Please consider sharing your thoughts with me. \n\nCheers, \n\nNora\n\n\u2014\n\nRenascence\n\nNoun:\n\nThe revival of something that has been dormant\n\n\u2014\n\nI was homesick. \n\nAll good feelings originated from the California sun, from the rapturous heat waves that cracked and fissured the skin of my elbows, tanning me until golden-brown freckles dusted my nose and bluer blues reflected in my eyes. In California I'd had a woman's body, flush with gentle curves and delicate bones. In California I'd known how to smile, how to laugh, how to just be because Emma had been there, walking one step ahead, casting me in her shadow, protecting me from being burned. In California, Emma had been my home.\n\nAnd now I was homesick and homeless, skinny and frail with sunken eyes and broken dreams\u2014but I had love. The big kind of love, the kind that sat in my heart impatiently before spreading to my veins, spreading to my nerves, and spreading to my fingertips like it was magic, pure magic. It was love like the California sun, love like vivid eyes, love like vigor and happiness and freedom. \n\nIt was love like Emma. \n\nThat's what made it hurt to fall in love\u2014knowing I couldn't talk to her about it, couldn't tell her that she'd been right about so much of it, couldn't talk about the butterflies and weak knees and anxious heartbeats, of all those tell-tale signs of the heart relinquishing itself. There was so much I wanted to talk about with my sister, my best friend, but she was gone and that was reality and there wasn't a damn thing I could do about it\u2014except maybe make my peace with it. \n\nAnd the man I was falling in love with was the one showing me how. With those hazel eyes, golden and green and blue, gazing in a way that was almost worshipful, I felt then that he could see through me, past the leftover twin and the gaunt face and the sad eyes, and see me, the real me: timid, all soft edges and flowery words, crowded brain and fingers searching, seeking contact, warm contact; big hands and hot lips kind of contact; whispers and words, needy and small, apprehensive and anxious\u2014and somehow, despite it all, still worth looking at. \n\nAnd when he did that, when he gazed at me like I was beautiful, I felt powerful, strong, confident, and capable, so fucking capable that I hadn't been afraid to let myself wrap my arms around his neck and kiss him. Slow and sweet, long and languorously, heart uncaged and open. We'd passed the minutes that way, losing ourselves in each other, creating dangerous memories, risking everything just for this\u2014contact, warm contact,real contact. \n\nGabriel Hart could become one of two things: my religion, or my ruin. He'd come into my sad, dreary existence like a messiah, bringing with him deliverance, guidance, and the renascence of happiness. He was a prayer answered, a wish granted, but in some ways, he was also a fallen angel, a demon of his own caliber, wielding darkness with one hand, blazing light with the other. He held the power to heal me, but he also held the power to burn me. It should have scared me to be so vulnerable, should have scared me to need him more than I needed air, but all I could do was open up my heart and pray; please, destroy me in this storm. \n\nAnd so he did. \n\nWe became tethered in lips and limbs, kisses raw and hearts vulnerable, smoking this pipe dream to a high, committing acts that held no honor, no morality, breaking all the goddamn rules that we pretended could keep us apart. I didn't give a fuck that it was wrong; to everyone else, he was abusing his power, using his authority to get me to bend my will to him, but to me, Gabe was doing nothing short of miracles, saving me when I'd thought I couldn't be saved. I was full of agony, dripping with agony, could fill entire oceans with my agony, and he came and offered those scarred hands to lead me away from it, to leave the agony locked up behind us. \n\nAnd if that wasn't beautiful, if that wasn't pure, then I don't know what was.\n\n\u2014\n\nColors of a sunrise bled into the sky, purples to blues and yellows and reds and pinks, all like brushstrokes dipped in water, bleeding, swirling. Even here, even in this small godforsaken town in the dead of winter, the sky that I had always loved had followed me, loyal as ever, never letting me down, gifting me sunrises like these when I needed them most. In the unbearable cold of winter, at least heat could still come from the warmth of color.\n\nIn two weeks I would turn nineteen, but nothing would change, not even the sky. Everything was going to continue as normal with fate playing its' sick game, dangling Gabe in front of me like a prize, always out of reach. Legally, even now there were no laws being broken, but society dug its claws into us anyways, forbidding the purest relationship two people could ever share. I needed him in almost desperation, like my soul was starved for him, making a beggar out of me, anguished, ravenous. And crazy as it sounded, I knew he needed me too. He was lonely in his despair, filling all his emptiness with good deeds, like he had to make the most of being spared in the accident. \n\nFor as long as necessary, I was going to let Gabe believe that he was the only one doing all the saving. I was going to open up to him, blossom like he wanted me to, share everything, all the ugly, all the beautiful, and then maybe he'd see how alike we were. Inside he was vulnerable too, just as broken, just as alone. I wanted to show him that it was okay to let go, to stop being who he thought he had to be, and just... be. He hid all his scars, put on all these smiles, opened his mouth and spoke dreams, but still, he was compensating. Overcompensating, like he was proving that he deserved to be here, worthy of living. \n\n\"What are you thinking about?\" he asked, pulling me out of my thoughts. I was looking out the window of his otherwise empty classroom, peering up at the sky. A steaming cup of coffee was warming my hands. \n\n\"Summer,\" I said. \"The sunrise is the same every season in California, but the colors always reminded me of summer. I can almost pretend I'm still there.\"\n\nGabe came to stand beside me, looking out the window like he was trying to see what I was seeing. It probably wasn't very hard, considering all the time he'd spent there, studying at a college just an hour's drive from where I'd lived. It was bizarre to think that we may have passed each other as strangers on the street and never known it. \n\n\"Do you ever think about going back?\" he asked. \n\nI shrugged. I hadn't thought about anything. \n\n\"You should,\" he said, taking a sip of his own coffee. \"It'd be good for you. This place isn't doing you any favors. You're miserable here.\"\n\n\"I'd be miserable anywhere.\"\n\n\"That's only true if you let it be true,\" he said. \n\nWe looked out the window in silence for a few more minutes. I saw the colors continue to change as morning touched the earth, bringing things to life even in the winter. Gabe stood a good foot and a half away, a modest distance that looked innocent on the outside, though inside we were still radiating heat together. My nerves were like clusters, tingling, almost begging to reach out and touch him, but I didn't dare. \n\nThe hallways were crowded with people: students, and teachers alike. Their presence was loud, so loud, like they were sounds that only existed to fuck with me; they were the reason Gabe wasn't standing closer to me, the reason he didn't have his mouth on mine. He'd pulled me into this classroom in the dark when we'd first arrived, kissing me briefly before switching the lights on and ending all contact. He tasted like mint toothpaste and coffee, a combination that made me hungry, like my tongue hadn't gotten enough, like I needed another taste, just a little one\u2014but he pulled away, pressed a chaste kiss to my forehead and walked away. \n\nFor the rest of this semester, it was going to be this way. Quiet mornings with no touching, no kissing, no nothing, and then entire hours of being in the same building, existing in all the same space, and still somehow being apart. Entire classes without each other, hours and hours, the minutes ticking by, tick, tock, separating us, bringing us back together to meet for the last class of the day. This was it. This was our reality for four, almost five, more months.\n\nWe hadn't talked about last night. The second I'd first caught his eye in the parking lot I'd turned a little pink, suddenly shy because the words out of his mouth had been filthy, but in person he looked courteous and gentlemanly, holding open doors and getting me coffee from the teacher's lounge. If I was a more insecure person I would have taken the distance he put between us as a sign of his disinterest, but I knew better; Gabriel Hart wanted me. What was important now was protecting each other from the world. Gabe, from the world that would ruin him for wanting me, and me from myself and all the diseased thoughts that festered in my brain.\n\nIf Gabe lost his job he wouldn't get to be here with me in an empty classroom on a cold morning with the sunrise touching his dark brown hair, making it glint copper in some places, looking like sunlight had been melted and poured over him. If Gabe lost his job, how would he pay his bills? Student loans, rent, food, gas, car payment\u2014it was all grown-up stuff I still hadn't been exposed to, but I couldn't imagine that it'd be any walk in the park navigating that kind of crisis. If Gabe lost his job, he wouldn't be able to look at me everyday and lend me his strength. If Gabe lost his job, I'd be cut loose into the void again. \n\nAnd that was why even though he stood a foot and a half away, he was doing it because, in the long run, it kept me close. My arms ached in their loneliness, but my heart would ache in his absence, in his ruin. \n\nWhen the bell rang, we looked at each other, our eyes speaking in our private language again, saying 'we can do this'.  And as the door opened, as a horde of students swarmed in, we did exactly that. \n\n\u2014\n\nI liked the paint between my fingers, the Friday afternoon exhale, sitting on a stool and contemplating, reminiscing, getting lost in all the old while finding all the new; breathing, inhaling, exhaling, leaving behind who I'd thought I was, seeking who I really was. I am ocean eyes, painting on a blank canvas to see myself, to see where a paintbrush could take me. \n\nStaring back at me from the canvas were vibrant eyes, soulful and alive amongst all the gray, all the silvery shadows and dark values. It was a distorted face, like the kind you'd see on an old VCR tape if you paused it between frames. It was a painting of a person changing, moving forward with time, leaving behind the old life lived, shedding skin and seeking sunlight. The idea had come to me in pieces. It had started as eyes first, blue, clear, bright; then the outline of a face, drawn faintly with a pencil; but when it came time to paint it, the face broke up into two, overlapping, warping. I hadn't decided I was going to do it that way. It just... happened. \n\n\"Ah, a self-portrait. Interesting,\" Mr. Young said, coming to stand beside me. I shrugged, unsure. He wasn't wrong, but he wasn't right either. \n\n\"What? You don't think so?\" He asked, tilting his head from one side to the other, studying the painting with curious eyes. \n\n\"I don't know,\" I said. \"I guess the eyes are mine, but I'm not sure about the rest.\"\n\n\"This looks like a transition,\" Mr. Young said, pointing to show me where the two faces bled into one another. \"Marvelous. The technique is beyond what I would have guessed for your level of skill. Have you painted before?\"\n\nMy face reddened. \"Not really. I just did what I thought looked right.\"\n\n\"Keep it up,\" Mr. Young said, smiling wide. \"This is good, very good. You may want to consider a future in art. Just a thought.\"\n\nIt wasn't a thought that had ever crossed my mind before. I'd been raised beside an academic, seeking knowledge the way Emma had, pursuing the greater meanings in life with wit, logic, and intellectualism. It hadn't occurred to me before that you could find those meanings through the arts. Now that I was here, painting and seeking answers, I knew that they both had their place in the world. There were some things that could not be measured, could not be explained or made sense of. It was only through art that they could be translated. \n\nSaturated and spilling, I let the colors speak for me, telling my story. With fingers stained and eyes honest, I spoke a truth that I hadn't been able to speak before. I talked about my past, about the girl I used to be, the girl who read too many books, sought too much knowledge, tried too hard to make sense of the world. But I also talked about the new me, the quiet girl with the loud thoughts, saying nothing with her mouth, saying everything with her eyes and her canvas. \n\nEvery time I walked out of Mr. Young's classroom, it was a metamorphosis. Like a butterfly, I escaped my cocoon, reborn anew each day, sent out to the world to fly. In finding myself, in separating from the ghost of my sister's shell, I found some comfort, some relief. A weight seemed to be lifting off my shoulders, easing the burden. It still hurt to lose her, it would always hurt, but I was allowed to let myself heal. That's what Gabe taught me. I was allowed. \n\nAnd so the world may have witnessed my fall, but now it was time for it to watch my rise.\n\n\u2014\n\nDuring sixth-period Creative Writing, time became a concept. \n\nThe hour spread out like butter, sunshine yellow and warm, so warm that it was like time was melting. The afternoon seemed to stretch as Mr. Hart talked, expanding like a bubble, enclosing us all inside. In class, I could watch him in motion, the way his hands moved, the way his mouth moved, the way his words moved. He hardly looked at me, hardly seemed to acknowledge that I was there, but when he'd glanced at me briefly, when he'd looked me over from head to toe the second I walked in, he set me on fire, reminding me of all the filthy words he'd whispered, all the dark things that had come spilling from his mouth to get me slick and wet for him, panting like an animal, needy and small. My skin burned throughout the period, hot like the California sun, blazing inside of me like a ball of fire that lived in the center of my chest. \n\nFirst period as his T.A. had been like this, only worse because I'd sat up front beside him, so close that I could've reached out and touched him. It was temptation that drove me, but compassion and understanding that stopped me. The one thing I wanted more than anything, more than his body, more than sex, was to protect him. So I'd folded away from the desire, picked up a red pen and graded papers in silence while Mr. Hart had talked, weaving a dream with his words to a classroom of teenagers.\n\nMr. Hart. That's what I liked to think of him as in the classroom to disassociate him from the man that made me come so hard that I saw stars. Mr. Hart was one of those involved teachers. You know the kind, the ones that engaged their students, the ones that knew how to command a room, the ones that got through to the stubborn teenagers, making them face the true reality of life and how fragile it was. Mr. Hart was my teacher, but Gabe was someone else entirely; he was the keeper of my secrets, my sanity, my heart. \n\nMr. Hart taught creative writing. Gabe taught forgiveness, hope, and love. \n\nAnd then class was ending and everyone left in a hurry, impatient to start the weekend and kick it off with a roar of engines in the parking lot, honking and tires screeching, people chattering, doors swinging closed. I lingered at the back of the classroom, organizing my bag just for something to do until all that remained was the silence and Gabe. The only reaction I had to the click of the door locking was meeting his gaze. \n\n\"About last night\u2014\"\n\n\"Don't,\" I said, cutting him off. \n\n\"You don't know what I was going to say.\" \n\nI smiled humorlessly. \"You regret everything.\"\n\nIt was his turn to smile, but I didn't like it\u2014I generally don't like smug smiles. He looked delighted by the prospect of proving me wrong. \n\n\"No,\" was all he said. Great. He was going to make me work for this one. \n\n\"Alright, Captain Ahab, I'll bite. What were you going to say?\"\n\n\"Well, Moby Dick, I was going to say that last night was\u2014a lot.\"\n\n\"Stop trying to make this weird,\" I said, getting up from my seat. \n\n\"I just wanted to know if it was too much for you. I can back off anytime you need me to.\"\n\n\"I need you to not back off,\" I said. \"I need you to do the opposite.\"\n\nHe nodded, striding over. My heart rate spiked as he took me into his arms, his warmth seeping, spreading to my skin like a fever. \n\n\"Grace,\" was all he said before his mouth met mine. I could taste the relief on his lips, the chaos unfurling from within us as we surrendered to something that we could neither define or defy. Almost like it was muscle memory, my lips parted for him, my tastebuds bursting with the leftover flavor of his cinnamon gum, spicy and sharp, cutting right through the last of my resolve. I kissed him like I loved him, like I wanted him to know, and he kissed me back. I whimpered against his lips, feeling my knees weaken with each passing second, inhaling the scent of him, the taste of him, losing myself completely in him. \n\nWhen Gabe finally broke the kiss, he took my face gently in his hands. There was sadness there in those hands, lined with scars, ropes and ridges of being broken so permanently that it would always remain irreparable. \n\n\"How did you get these?\" I asked, taking one hand. I followed the path of a jagged scar in the center of his palm with my finger. \n\n\"My brother was stuck in a burning car, \" Gabe said. \"I pried off a shattered window and put out the fire on his clothes with my bare hands.\"\n\nThe image of it flashed in my mind so vividly that I had to close my eyes to shut it out. Burns and cuts and scrapes were physical, but this? This went beyond that. This kind of sacrifice was like burns and cuts and scrapes of the soul. Despite it all, despite the scars, his brother still hadn't survived. \n\n\"Why do you hide them away from the world?\" I asked. My voice was so small that I could barely recognize it. \n\n\"People ask too many questions.\"\n\n\"And what happens when you answer them?\"\n\n\"They start acting like I'm some kind of hero. I'm not.\"\n\n\"But you are a hero,\" I said, pressing his hand back against my cheek. \"You're saving me.\"\n\n\"No, Grace,\" he said softly. \"You're saving me.\"\n\nAnd there we were, the nerd brain and the drama queen, two souls trapped in two broken bodies, but when we were together like this, when time stopped and everything fell into place, it felt for a moment that maybe we weren't so broken\u2014that maybe, just maybe, we could still be whole. With my body trembling, I wrapped my arms around his neck to find some of his strength to borrow, and he gave it to me, leaning into my touch, supporting me with one arm, pulling me flush against his body. \n\n\"A-About last night,\" I said, looking away in embarrassment. \"It wasn't too much for me.\"\n\n\"No?\" He said, leaning down to kiss my neck. I froze. God, where the fuck did all my cool go when I was around him? I was like putty in his hands, all gooey and weak. \n\n\"No,\" I whimpered pathetically. ",
        "\"You didn't come until I gave you permission to,\" he said, his voice gravelly, deep. \"You think you could manage that again tonight?\"\n\nI nodded, face burning. Holy crap, he needed to shut up. He needed to shut up right this second. \n\n\"You think you could manage that right now?\"\n\nOh god. He couldn't be serious. Not here. I should remind him how dangerous and stupid it would be to fool around at school, especially since it was a Friday and school was going to be locked up for the weekend\u2014but I couldn't find the words, and a part of me didn't want to find the words. What I wanted was him. \n\n\"Don't stop.\"\n\nThat was all it took. Before I could even begin to guess what he'd do next, he was picking me up, his mouth finding mine, kissing me like we were dying, like this was the last kiss we'd ever share. I wrapped my arms around his neck and let out a muffled cry when my back suddenly hit the classroom wall. I hadn't even realized he'd walked us to it. \n\n\"Don't make a sound,\" he said, lifting me higher. My breathing quickened as he unsnapped the button of my jeans and pulled my zipper down in one swift motion. Then he was pulling my jeans down, inch by inch, nice and slow so that he could watch me, like he was teasing himself as he undressed me. \n\n\"Gabe.\" \n\n\"Not a sound,\" he reminded me. Nothing he said was a request. It was an order, a command, a need that bubbled up from inside of him, a need to make me obey, to make me submit. He was powerful, taking what he wanted, and god it was so fucking hot. There were no more wicked games to play, no more talking and teasing\u2014there was only this, him pulling down my jeans to my ankles, guiding my legs over his shoulders, folding me up against the wall, pushing my underwear aside, and then\u2014\n\n\"Oh, fuck,\" I gasped as his hot tongue licked my wet pussy. He glanced up at me, eyes dark, angry, and sucked in my clit\u2014hard. Tears fell from the corner of my eyes. It felt so fucking good, but it also hurt. A lot. Lesson learned; don't make a sound. \n\nI gripped his hair, making him hiss, and threw my head back, hitting it against the wall, but I didn't even feel it, didn't feel anything but the blinding pleasure that came from his tongue on my pussy, licking through my slick folds, tasting me, all but devouring me. \n\n\"So fucking good,\" he said, making my body jolt as he kissed my clit, lapping at it like an animal, making me feel filthy. \"You taste so good, Grace. Sweeter than I imagined.\"\n\nI was going to come\u2014\n\n\"Not yet,\" he said, reading the fluttering in my pussy right before I came. He stopped, making me almost scream in frustration. I wanted to protest, but I knew I couldn't, knew I wasn't supposed to complain, knew I wasn't allowed to make a sound. When he slipped one of his long fingers inside of me, I almost fucking moaned like the little slut I was, but I wanted to come so fucking badly that I swallowed it back. \n\n\"Good girl,\" he said, rewarding me by inserting another finger inside of me. I was so tight and small that those two fingers were almost too much for me, filling me up, lining my sensitive walls. I bit down on my lower lip, legs trembling as he curved those fingers inward, finding that spot. In and out, slow and then fast, hitting that spot again and again and again. \n\nOh fuck, I couldn't\u2014\n\n\"Now,\" he said. \"Come for me.\"\n\nI came apart. My pussy contracted around those long fingers, squeezing and squeezing, obeying his command, relinquishing all power, gifting it to him in a peace offering. I came for him and came for him and came for him, my toes curling, fingers gripping his hair tighter, making him laugh a cruel laugh before kissing my pussy, licking up my slick, gushing slit one last time. \n\nAnd then the tenderness that came afterwards; the steady, capable hands of a man that could've been in love; slow, calculated, and gentle; lowering me down, teaching me kindness, teaching me compassion, teaching me all the things I'd forgotten how to define. The way my hair was stroked back from my face, the way a raw kiss tasted, the way we looked right into each other, right where our hearts ticked and our souls resided\u2014right in that place that sang for us. \n\nBecause I was in love. And maybe he was too. \n\n\"Was it too much?\" he asked. His tone was gentle but cautious, like he was afraid I was going to tell him to fuck off or something. I was feeling hella shy, my face burning from the realization that my teacher had just eaten me out, and he'd done it good, so fucking good that my knees were weak and shaking. I didn't know how to answer him without tripping up on my words, but I knew I had to say something.\n\n\"No.\" Nice, just one word. Real eloquent, I know. \n\nGabe kissed my temple, saying nothing, like he suspected how weird this whole thing was for me. I let him pull my jeans back up, like I was some kind of preschooler who needed the teacher's help. I can't say I minded though. His hands were big, warm, and lingered maybe a second longer on my ass than necessary. It made me laugh, which he took as a good sign. \n\n\"Come on,\" he said, taking my hand. \"Let's get going.\"\n\n\"Wait,\" I said, flexing my hand in his. \"What about you?\"\n\n\"Don't worry about me. I got everything I wanted.\"\n\nI made a face. \"You didn't-uh, you didn't\u2014\"\n\n\"Come?\"\n\n\"Yes, that.\"\n\nGabe chuckled. \"Relax, Grace. I'm good. I promise.\"\n\nI promise. \n\nHis promises were like bandaids laid over my broken heart, holding together all the pieces. I wasn't a self-assuring type of person; I was too hard on myself, too cynical and icy and unforgiving. Gabe was the opposite, speaking every word with conviction, challenging my pain with his own, showing me what it meant to be hurt but also healed. When he made promises, when he placed them like that over my heart, I felt better\u2014reassured. \n\n\"You should let me return the favor anyway. Soon,\" I said. \n\n\"There's nothing to return. I didn't do you a favor. Trust me when I say that what I just did was about the most selfish thing I've ever done.\"\n\nRight, sure.\n\n\"You're doing that thing again,\" I said, rolling my eyes. \n\n\"What thing?\"\n\n\"You know, making zero sense.\"\n\nGabe laughed and tugged my hand, pulling me into his arms. He rubbed my back, his laughter like charity, like a blessing, like everything wonderful taken and turned into sound. I grinned and hugged him back, burrowing my face in his shirt to hide how dorky I looked. I'd almost forgotten this, the kind of happiness that made you feel weightless, like you could be swept away by even the gentlest of waves. \n\n\"We really do have to go now,\" he said, giving me a squeeze and crack! went my back. \n\n\"Oh shit, Grace. I'm sorry. You okay?\"\n\n\"Fine,\" I said, looking up at him. \"That felt good. You cracked my back and scratched an itch today. What else can you do?\"\n\n\"You don't want to find out.\" \n\n\"But I do.\"\n\n\"You're trouble, you know that?\" He said, laughing. \n\n\"I don't know what you're talking about. I'm an absolute angel.\"\n\n\"Yeah,\" he said, his voice going soft. \"I won't argue that.\"\n\nI used to be afraid of all the terrible pieces inside of me, of my demons and my ghosts, haunting me in the darkness, but then Gabe came and took over the barren place where my heart had once been. He did not chase my demons away, but rather faced them with open arms, healing the sickest parts of me, the dark places that I'd thought would always bleed, always ache, always hurt. I'd had only the most terrible pain to consume me, but now I had the most beautiful, powerful feeling to counter it\u2014love. \n\nI loved him. \n\n\"Let's go,\" I said, blushing. \n\nAnd we did just that. We pulled apart like honey, all warm and sticky, clinging together until the very last second, letting go to walk in opposite directions. Me towards the exit with my backpack slung over my shoulder, him towards his desk to gather his things. \n\n\"Grace?\" he said just as my hand touched the doorknob. \n\n\"Yes?\" I said, turning around. He was standing by his desk, shoulders slumped, hands in his pockets. It was a moment before he spoke. \n\n\"You are not the rain.\"\n\nI blinked, vision blurring. The essay. He must've read between the lines.\n\n\"You don't exist just to fall.\"\n\nNo. \n\n\"You are sunshine, Grace Craft.\"\n\nStop.\n\n\"I love\u2014I have to go,\" I said, and bolted. Out the door, down the hall, bursting through the front doors, running right out into the crisp winter air, feet pounding on the pavement, my truck in sight, closer and closer\u2014and then I was driving away, pushing the miles, escaping it, escaping him. \n\nOh fuck, I almost said it. \n\nI almost told him I loved him. \n\n\u2014\n\nThere was this Swiss psychologist that I read about while in AP Psychology my sophomore year. Carl Jung, philosopher, author, anthropologist, and analytical psychologist extraordinaire. The way he'd looked at the world was kind of poetic, kind of beautiful, kind of strange and ugly and wonderful all at once. How we were individually, how understanding others had a lot more to do with understanding ourselves, how we met ourselves in others time and time again, reacquainting ourselves with the mirrors of our souls, finding all the frayed strings and catching hold, reeling ourselves out of every person we ever got to know. He'd had a lot to say about love, a lot of theories that had always stuck with me, brewing in my brain like a witch's potion, one I'd been wary of drinking for years because what he'd said about love had truthfully scared the shit out of me. \n\nIn the beginning, it's this veil of illusion, showing us only what we want to see, filling our minds with things like sparks and lightning and thunder and rain\u2014things that we have the capacity to relate to and understand. We fill in all the blanks with what we know, sometimes making a person out to be better than they are, or worse, out to be someone they aren't at all. The person we subconsciously look for is a person we already know, a person we've already loved for a long time. Falling in love was about finding the person who fit, the person who was familiar in a strange but magical way, the person who we'd always dreamt of, always wanted, always had somehow known was out there. And one day we meet them, and it all just kind of clicks. \n\nThere you are, our souls would say. I've been looking for you.\n\nBut there was a sad truth in Jungian theories, a truth that you had to come to face if you believed in everything else he was saying: love was projection. If you broke it all down, if you studied what he really had to say, poetry aside, love always began kind of fake, kind of made-up, kind of bullshit. \n\nI was in love with someone I barely knew. Was that really love? Or was I projecting?\n\nIt fucked me up, laying there in my bed in the dark, thinking about shit that regular people didn't have to think about it. Regular people just fell in love, in the head-over-heels-Hollywood kind of love, worrying only whether or not the other person loved them back. What I worried about was if love was even a real thing, if it was even possible to have a true connection with someone that you didn't know. \n\nGabe was familiar; his tragedy matching mine, his sense of humor, his understanding, his care, his easy-going nature\u2014all wonderful things, beautiful things, all things that could be relatable to anyone with a broken past. He'd fit right into that hole I'd had in my heart... but it could've been that the hole had been so big that anyone could've fallen in. \n\nIt's funny, all it took was me almost saying out loud that I was in love for me to rethink whether it was even true. \n\n\"Grace.\"\n\n\"Mm,\" I responded absently, and shifted in the darkness, bringing my knees up to hug them. My phone rested on the pillow beside me, the call on speaker with the volume on the lowest setting. No one outside of my room would be able to hear.\n\n\"You're quiet tonight,\" said the voice on the other end of the line. He sounded a little tired, but seeing as it was two in the morning, I couldn't have blamed him. \n\n\"Go to sleep,\" I mumbled.\n\n\"Only after you tell me what's on your mind.\"\n\n\"Carl Jung,\" I said, wondering if he'd be jealous, if he'd care that some other guy's name had been uttered from my lips. God, I was so fucking juvenile sometimes. \n\n\"The psychologist?\" I expected him to laugh, but he didn't. \n\n\"Yeah,\" I said, feeling both disappointed that he wasn't jealous, and relieved that he even knew who I was talking about. That's the thing about being a smart person (not to toot my own horn), sometimes it's hard to find people that get what you're talking about. For most of my life, Emma had been the one to get me, the one that didn't have to Google words I used or make me break down my opinions to make sense. She just kind of got me, and I guess Gabe did too. He fit, and that's what fucking worried me. Fitting was a simple concept, and love? Love was complex. Maybe I was projecting after all. \n\n\"Jungian theories keeping you up?\" he asked, and this time he did sound a little amused.\n\n\"Yeah, well, what keeps you up?\" I grumbled defensively. \"Number theory? Mathematical physics? Or the dreaded multivariable calculus?\"\n\n\"Not like they used to,\" he said, playing along. \"These days it's you, Grace.\"\n\nThat made my heart sing. \n\n\"You're cheesy, you know that?\" I said, trying not to sound pleased. \n\n\"Tell me about Carl Jung,\" he said, ignoring what I'd said. \"What theory is keeping you up?\"\n\n\"You know the one about the anima and the animus? The animus is what women look for in a man, and the anima is the female counterpart that men look for in a woman. It's the name given to the perfect version of the person we're looking for. Well, I was thinking that looking for people based on our own understanding is kind of fake, you know. That would make love a projection of ourselves. It's not... real.\"\n\n\"Love doesn't have to be so textbook,\" he said. \"If that's what's bothering you, just remember that it's only a theory. Jung was just saying that love is subjective. You fall in love with what you know, what you can relate to, what you understand. There's nothing wrong with finding yourself in another person and loving them for it.\"\n\n\"My sister used to say that people are like circles cut in half, and that there's another half of us floating around out there somewhere. She believed in soulmates. I guess it just really fucking sucks how Carl Jung makes my sister's theory sound so childlike.\"\n\nGabe surprised me when a moment later he said, \"Carl Jung's anima/animus doesn't challenge your sister's theory. In fact, it can even be said that they follow the same thought process. Searching for the other half of ourselves in another person is exactly what Jung and your sister both theorized. I know anima and animus sound cold and clinical, but broken down they're just words for soulmate, aren't they? Jung and your sister were saying the same thing.\"\n\nIt felt suddenly like a weight had been lifted. Deep down, that was what had really been bothering me, my stupid feeling that Jung was challenging my dead sister's philosophy, but Gabe was right; they'd been saying the same thing. Emma had been so whimsical, so full of life, believing in a special kind of love, a life-altering, life-shattering, transcendent kind of love. Jung's theory had seemed so technical that I hadn't been able to make the connection on my own.\n\nAnd maybe love was a projection, maybe it was mostly about ourselves and how others related to us, but it was damn well better than being alone. From deep inside of me, from my heart, from my bones, from the very matter I was made of, courage surfaced. The courage to forgive, to move on. The courage to love. \n\n\"You're right, they were saying the same thing,\" I said, snuggling cozily into my blanket. \"And now that you know what was on my mind, can we sleep?\"\n\n\"Yeah, Grace,\" he said, \"we can sleep.\"\n\n\u2014\n\nLight sluiced in patterns through the blinds of the store, casting thin, rectangular shadows on a stack of sketchbooks, all lined up like a dream just waiting to be dreamt. My hand trailed over the spines, warm where the light had touched them. I opened one and felt the texture of the fresh pages, blank and white as eggshells. My fingers flexed, already seeking a pencil to draw with, but I didn't have one. I'd have to buy it, just like I'd have to buy all the other supplies on Mr. Young's list. I'd gathered almost everything, but the only things missing were the paints. The small art store in town didn't carry Sennelier, and Mr. Young had insisted that it was the only brand worth buying. It made him a little bit of an art snob, but I still trusted his opinion enough to be willing to go looking for them. \n\n\"So where would I find the Sennelier paints?\" I asked at the register. A cashier named Cherry was ringing me up, her long manicured nails clack-clacking loudly on the POS system. \n\n\"A Michael's would carry them for sure. There's a few in Omaha,\" she said, smacking gum around in her mouth as she talked. I cringed, but kept my expression even and composed. It was too early in the day to be getting annoyed. I paid, thanked her, and carted three hundred dollars worth of art supplies to my truck. \n\n\"Please tell me you know where I can find a Michael's,\" I said into my phone, balancing it on one shoulder as I loaded up the supplies. An easel and canvases and brushes and palette knives and sketchpads and pencils and kneaded erasers and\u2014the list goes on and on. \n\n\"Like the art store?\" asked Gabe's deep voice from the other end of the line. \n\n\"Like exactly that.\"\n\n\"There's one about three miles from me. Why?\"\n\n\"I need to buy some paint for my art class.\"\n\n\"You paint?\"\n\n\"No, of course not. I'm just buying paint for the sake of owning it,\" I said sarcastically. \n\nHis responding laugh was like food for my soul, sating the hunger.\n\n\"Smartass,\" he said. \n\n\"Nerd brain.\"\n\n\"And proud of it. Send me a list,\" he said. \"I'll go get your paints.\"\n\n\"No, I want to check out the store and see what else they have. The art store in town sucks. They barely have anything beyond the basics.\"\n\n\"If that's what sells then that's what they'll stock. It's not their fault that a fancy artist moved into town,\" he teased. \n\n\"I am not a fancy artist,\" I grumbled, getting into my car and starting up the engine. I hooked up the phone to the car's Bluetooth system so I could talk to him hands-free. The last thing I needed was another fucking accident. \n\n\"I'll send you the address,\" Gabe said, ignoring my comment. \"I'll meet you there.\"\n\n\"You don't have to come,\" I said, feeling shy. We'd never hung out outside of school before. \n\n\"I won't if you don't want me to,\" he said, reading my unease. \n\n\"Of course I want you to. I just don't want you to go through any trouble.\"\n\n\"It's no trouble at all. I want to see you.\"\n\nI blushed and was glad that he wasn't there to see it. It'd probably make him smile all smug and tease me. \n\nMy phoned dinged from a text message. It was the address to the Michael's art store. I clicked it to bring it up on Google Maps and hit 'Start' to get the directions. An hour and a half. Fucking hell. \n\n\"You live so far away,\" I said. \"It's like driving to another planet.\"\n\n\"I can come to get you if you don't think you can make the drive.\"\n\n\"Don't be ridiculous. Back and forth twice, that'd be six hours total of driving for you. Plus, I'm not some gormless twat. I can make the drive.\"\n\n\"Gormless,\" he said, laughing. \"I've never actually heard anyone use that word before.\"\n\n\"It's British slang for fucking idiot.\"\n\n\"You're not gormless, Grace.\"\n\n\"I didn't say I was.\"\n\n\"Right-o, cheerio.\"\n\n\"Oh god, shut up,\" I said, giggling. \n",
        "\"Am I distracting your driving?\"\n\n\"Yes,\" I answered truthfully. It was hard to concentrate with him being so cute. I felt like I could see his face in every reflection, like he'd changed my vision forever. He was everywhere.\n\n\"I'll see you soon then. Drive safe, alright?\"\n\n\"Right-o, cheerio,\" I answered. \n\nHe laughed. \"Get over here so I can kiss you, you adorable creature.\"\n\n\"Stay away from me. I don't want your cooties.\"\n\n\"I think you do.\"\n\n\"Goodbye, Gabe.\"\n\n\"Be safe,\" he said with a chuckle and hung up. \n\n\u2014\n\nMichael's is big. Like department store big, probably ten times bigger than the art store back in town. With aisle after aisle of art supplies, it was an amateur artist's dream. I trailed through the store, exploring while I waited for Gabe, who lived close enough to get there in less than five minutes, but for some reason there was a lot of traffic on the roads. It had started after I'd already gotten to the store. I hoped it'd clear up by the time I had to go home.\n\nI was browsing through a few Paint by Number kits, and the minutes sort of ticked by. I checked my watch. It had been another fifteen minutes. Where the fuck was he?\n\n\"Grace,\" said a frantic voice, a big hand grabbing me suddenly by the arm. I turned around and looked up, and there stood Gabe, his wavy dark hair tousled, a grave expression on his face. \n\n\"We have to go right now,\" he said, tugging me towards the exit. \"There's been an emergency blizzard warning.\"\n\n\"Whoa,\" I said, tripping to keep up. His grip on me tightened, straightening my stance with a jerk up by the arm. \"This\u2014is sudden.\"\n\n\"That's how blizzards are. They appear out of nowhere, and that's what makes them so dangerous. Come on, we have no time to waste.\"\n\n\"Where are we going?\" I asked.\n\n\"My apartment. It's safer there. I don't want you waiting out the storm here.\"\n\nHis apartment. Crap, I was not dressed right for this. I hadn't exactly left the house this morning with a matching pair of bra and panties. In fact, I was wearing an old, worn pair of underwear and a bra without any underwire\u2014comfortable, but doing nothing for my tits. I hadn't expected to see him at all today, and now I was headed to his apartment. Christ, save me. I didn't know if I was going to survive this. \n\n\"Leave your truck here,\" he said when I'd looked across the parking lot outside. My car was parked in the back, but Gabe's was right out front, parked in a space that another frantic shopper must've left recently. There was a line of cars already on their way out onto the street. \n\nI got into Gabe's car as he started it, and the engine roared to life, sending heat blasting from the vents. I sighed, buckled in and leaned back to observe him as he threw an arm behind my headrest to back out of the parking spot. I don't know why, but I'd always kind of found it hot when guys did that. \n\n\"What?\" he said, glancing at me briefly. \n\n\"I was just thinking that you're hot. Like disgustingly hot.\"\n\n\"And you're beautiful. In a really loathsome kind of way,\" he retorted, grinning at the scowl I gave him. \n\nHe drove carefully, but urgently. When we made it to an underground parking garage to a nine-story building ten minutes later, he finally let out a deep sigh.\n\n\"Out of the red for now,\" he said. \"We're going to take the stairs. I don't trust the elevator. Think you have it in you to climb five flights?\"\n\n\"No,\" I said, mortified. \"Physical activity and I don't mix. We're like oil and water.\"\n\n\"I'll carry you. I forgot you were anemic.\"\n\n\"What\u2014no. I'll be fine.\"\n\nTo give myself some credit, I did make it up over halfway there. Three and a half flights before my legs turned to jelly and my chest ached. The stitch in my side was the most uncomfortable feeling I'd had in a long time. I bent over to catch my breath, rewarding Gabe with the middle finger. \n\n\"You-you fucking su-suck,\" I said, breathing hard. \n\n\"Here,\" he said, picking me up. \"I've got you.\"\n\nMy head lolled on his shoulder as he took the stairs one, two at a time. He was agile, sure-footed and quick. It was a testament to what I guessed was a healthy lifestyle of eating right and working out\u2014two things that I knew jack about. I was too skinny and embarrassingly weak\u2014sexy, I know. \n\n\"This is me,\" he said, lowering me to my feet in front of apartment 509. He dug around in his pockets for his keys, located them, and then turned the lock. I reached out and turned his doorknob, knocking his hand aside. I really wanted to see his goddamn apartment. \n\n\"This is... sterile,\" I said, looking around at the sleek floors and spotless countertops of the kitchen to the right of the entrance. \"You're so clean.\"\n\n\"You say that like it's a bad thing,\" Gabe said, locking up behind him. \"Here, give me your coat.\"\n\nI unwrapped my scarf from my neck and unzipped my puffy purple insulated jacket. A pack of cigarettes was in the pocket, giving me the sudden urge to smoke, but I pushed the thought aside. I was not going to kiss him with nasty smoker's breath. He deserved the taste of my vanilla chapstick and Altoid wintergreen mint. I'd prepared for the kiss he'd promised. \n\n\"Thanks,\" I said, handing him my coat and scarf. He hung it up in a small hallway closet to the left of the entrance. His apartment had a modern open-floor plan, the kitchen facing a living room with a couch, an armchair, a coffee table, a big flatscreen TV and some plants that lined the windowsill of a large window. There were two doors on the far right corner, probably leading to a bedroom and bathroom. All in all, it was a small, but rather cozy little apartment. And clean, way too clean. \n\n\"I left the heat on,\" he said, placing a hand on the small of my back as he passed me to get to the kitchen. It was such a small gesture, probably something he hadn't even consciously meant to do, but it was enough to fill me with warmth. I remembered seeing my parents this way, Dad passing Mom, touching her gently, like it was a small sign for I love you. \n\n\"Hungry?\" Gabe asked, pulling his fridge open. \"Thirsty? Both?\"\n\n\"Some water, if you don't mind.\"\n\n\"Catch,\" he said, throwing me a water bottle. I reached out to catch it, but all I managed to do was let it slip out of my grasp the moment it touched my hands. \n\n\"Hopeless,\" he said, chuckling, and strode over. He picked the water bottle off the floor, unscrewed the cap and passed it to me. I snatched it out of his hand, sloshing water down my wrist, wetting the sleeves of my shirt.\n\n\"Give me the grand tour,\" I said after I'd downed the entire bottle. I hadn't realized I'd been so thirsty. Gabe chucked the bottle in a recycle bin in a cupboard under the sink for me. \n\n\"This is it,\" he said, making a grand gesture of opening his arms like he was presenting a tiger at a circus or something. He looked like an idiot. \n\n\"You look like an idiot.\"\n\n\"Come on,\" he said, unbothered. \"One grand tour coming up.\"\n\nGabe introduced me to each of his plants, all cacti, which he'd named Happiness, Courage, Depression, and lastly (and most surprisingly), Grace. \n\nSeriously. \n\n\"I like to keep the things that confuse me close to me. I study them and think about them and spend time with them,\" he explained, slinging an arm casually over my shoulder. I wrapped my arms around his middle, taking in the scent of his cologne, a bold sandalwood that made me feel content, safe. It's weird how the senses can affect how you feel, how just a few spritzes of cologne had the power to take all of my anxiety and stomp it out. \n\nI looked at Depression, and it was pretty true to its name; it was the saddest looking one of the bunch. Happiness looked cheerful with little flowers that had bloomed, and Courage was bright, vivid and bold. Grace was a Christmas cactus, which Gabe said was also called a Schlumbergera. It was delicate, with shy, drooping flowers and fiery red in color. I tried to imagine Gabe coming home to these plants, sitting beside them, watering them and talking to them, making himself comfortable with all the feelings that were still a struggle for him\u2014and then me, the greatest mystery of all. Maybe that was how he was cracking my code, by talking to the plant, by thinking about everything objectively, seeing me, not the me that his psyche projected. \n\n\"Do you get lonely?\" I asked, hoping it didn't sound like I was insulting him. I wasn't. \n\n\"Sometimes, but I'm what you'd call a recluse. Most of the time I don't mind the solitude.\"\n\n\"I get that,\" I said. \"I like being alone, too.\"\n\n\"For the record, it's different with you. I feel that same sense of peace when it's just us,\" he said, looking down at me. His hazel eyes were light today, honey-golden with green and blue edges. He looked sincere and pure, made up of truth and justice, speaking our secret language with those beautiful eyes. Except there were no secrets there. \n\nAnd that's when it occurred to me. There was no danger of being caught here. None. \n\n\"Kiss me,\" I said, reaching up to grab the collar of his t-shirt. I yanked him down, wrapped my arms around his neck and gazed at him expectantly. \n\n\"As many times as you ask me to,\" he said, lifting me gently, leveling our faces. My ankles locked around his waist, hands weaving into his thick hair, pulling as he let out a satisfied hiss. \n\nAnd then he kissed me. \n\nThe windows rattled from the storm as we made out, tongues sliding, breaths hitching, lips finding purpose, finding relief, finding the connection, linking in a network of feelings\u2014happiness and courage and even depression, bringing out our dark sides, our broken sides, but only to fix them, to fix us. \n\n\"Tell me to stop,\" he said, walking us to one of the doors. \n\n\"Don't,\" I said breathlessly. \"Don't stop.\"\n\n\"Fuck,\" he growled, balancing me with one arm around me, the other turning the doorknob, opening up to a bedroom. He walked in, kicking the door closed behind him and dropped me unceremoniously on the bed. \n\nI leaned up on my elbows, panting, my long hair a wild mess on my shoulders. I blew a strand of hair away from my face, watching as he stripped off his shirt and began to undo his belt. God, his fucking body was better than I'd imagined, lean but muscular, shoulders broad and forearms rippling, radiating strength, power. \n\n\"Wait,\" I said, sliding off the bed. I got on my knees in front of him, looking up with hungry eyes. \"Let me.\" \n\nHe didn't say anything as I took over undoing his belt, my movements shaky, but determined. In a flash I had the belt unbuckled, button unsnapped, and then I was pulling down his zipper when his hand closed over mine, stopping me. \n\n\"You don't belong on your knees,\" he said. \"Get up.\"\n\nI shot him a deathly glare. \"For once, just go with it, Gabe.\"\n\n\"I don't think so,\" he said, his hand closing tightly around mine before jerking me up. I let out a startled gasp, surprised and infuriated, but he didn't give me a chance to shout. His mouth covered mine, kissing me feverishly, pushing me back on the bed, sliding down his boxer briefs, kicking off his jeans, reaching for mine, undoing the button, pulling down my zipper, sliding the jeans off my hips, lower and lower, grabbing my panties on the way down, exposing me to him and the warm air. He only broke the kiss to pull my shirt off my body, one hand slipping under my back, unsnapping my bra, pushing the straps down my shoulders, kissing the marks they'd left, licking the lines, making me shiver and moan. \n\nWe were naked in every way now, literally and figuratively. \n\n\"Here in bed,\" he said darkly, his voice deep and low, \"I own you.\"\n\nGod, yes. I wanted to be owned, taken and overpowered, relinquishing all control to him, letting him have his way with my body, to spend himself in me, to fuck me raw, filling all my emptiness with the stiff erection that was resting on my thigh. Like air, I inhaled him, taking in his heady scent, fingernails digging into his shoulders, drawing him to me, moaning to tease him, to make him do what we'd tumbled into this bedroom to do. \n\n\"I'm going to make you come so fucking hard,\" he said, kissing from my shoulders to my breasts, his breath hot on my skin. I writhed beneath him, throwing my head back on the bed, the soft comforter softening the blow. He kissed and licked around my sensitive nipples, teasing me, ignoring the frustrated groan that left my lips. \n\n\"Stop fucking around,\" I said, fingers biting down into his skin. \n\n\"I'll stop when I fucking mean to,\" he replied, staring back at me with a fierce, determined expression. There was no getting my way here. I was at his mercy. \n\n\"Oh, god,\" I gasped when he unexpectedly took my nipple into his mouth, sucking hard, shocking me right to the place between my legs, making my insides turn to jelly. He nibbled, taking my sensitive nipple between his teeth, taking me somewhere euphoric between pain and pleasure until I could hardly take it anymore, begging him and begging him to keep going. He did, licking and sucking and biting as he parted my legs with his knee, fitting himself between my legs, the result of his arousal lining up with my sopping little pussy, dripping and slick for him. \n\n\"Are you on\u2014?\"\n\n\"Yes,\" I answered immediately. \"It helps with my anemia. I've been taking birth control for years.\"\n\n\"Good,\" he growled, and then he slammed into me, his thickness stretching me, sliding against my sensitive folds, entering me, deeper and deeper, so big that I felt a white-hot pinch. I gasped, stiffening from the sudden sharp pain, tears pricking my eyes. I wasn't a virgin, but this hurt worse than losing my virginity, worse than tearing my hymen, worse than sloppy sex. He was experienced, hips snapping, slowing down to let me accommodate to the size of him, thick and long, filling me and filling me and filling me. Despite the attitude, despite the power, despite himself, he was still showing me mercy. \n\n\"Shh,\" he soothed, kissing me to comfort me, tender and sympathetic, that compassion he held seeping out, giving away that his intention was not to hurt me, but to bring me pleasure. My body adjusted, adapted, receiving his stiff length greedily, so tight that I was sucking him in, making him groan and hiss and moan right into my ear, the sounds making my toes curl. \n\nHe detected the change, listened as my gasps of pain turned into delicious moans, and then he didn't hold back anymore, ruthlessly pounding into me, brutal and frantic, like he was taking weeks of pent-up frustration out on this one moment, punishing me, punishing my body, forgetting that I was small, that I was delicate and fragile and could shatter any moment. \n\nI fucking loved it. \n\nThe steadiness became unsteadiness, the control became uncontrollable, and the ache and need to come was elevating, taking me higher and higher, squeezing around the heavy cock inside of me, quivering, throbbing. My legs were lifted, thrown over his shoulders, and the angle changed, and suddenly I was speaking nonsense, begging and pleading, again and again, asking him to hit that spot, right there, please! \n\nThat was the last of the mercy he showed me. Harder and harder, deeper and deeper, fast and precise, finding the one place that had the capacity to throw me over the edge in seconds, and then\u2014\n\nComing, we were coming. \n\nThe liquid heat that flooded me, spilling and spilling, the pulse, jerking and groaning gutturally, toes curling, blinding white stars, shattering me, shattering everything. It was so good that I wept, gasping and crying through the ecstasy, my fingernails digging into his back, scratching, drawing blood, leaving my mark, altering him the way he'd altered me, the way he'd appeared from nowhere, entering my life and entering me, changing me forever, making me fall so deeply and unequivocally in love that there was no turning back. He'd conquered me, conquered my heart, my spirit, my soul. \n\nThis was beyond a projection. This was transcendent, phenomenal, all-consuming and surpassing love, the real kind of love, the big kind of love.\n\n\"I love you.\"\n\nAnd I cried some more, wrapping my arms around his neck, burying my face into his chest, crying and crying because I hadn't been the one to utter those three life-altering words.\n\nIt had been Gabe. \n\n\"I love you too,\" I sobbed. \n\n\"I know,\" he said. \n\nThen he made love to me, slow and deep, showing me how a man loved a woman, what it meant to fall in love, what it meant to have a slow crawl to a climax, coming undone and apart. He held me, speaking softly, talking me through my orgasm, whispering sweet, dirty things to prolong it, holding me like he was afraid I was going to fall through his grasp and disappear. I held tight, kind of afraid myself, like none of this was real, like I'd wake up any second and he wouldn't be there.\n\n\"Don't ever let go,\" I said desperately. \n\n\"I won't.\"\n\nThe aftermath was like molten lava creating something new, like a volcanic eruption that had resulted in a new island, a new place, beautiful and barren, but still something amazing. We lay together in his bed as the room grew darker and darker, whether from the storm or from the time of day, I didn't know, didn't care. All I knew was that I was in Gabe's arms, lost in that place between heaven and hell again, the great unknown, the only place where the two of us were allowed to exist together. \n\n\"Do you believe in soulmates?\" I asked him. \n\n\"I didn't,\" he said hoarsely, \"but I do now.\"\n\nAnd with that statement, Gabriel Hart became both my religion and my ruin."
    ],
    "authorname": "norafares",
    "tags": [
        "renascence",
        "student",
        "student teacher",
        "teacher",
        "teacher student",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/renascence-ch-06"
}