{
    "title": "Supernatural Earth Pt. 09",
    "pages": [
        "\"The Werewolf Chronicles -- Omnibus\" Part 9 of Supernatural Earth.\n\n***\n\nAuthor's notes:<br >\n\nThis story happens a couple of months after \"The Creature Below - Omnibus 03\" and well over three years since \"Snow Maiden - Omnibus 02\" and \"The Prison Creature\". The current year in the storyline is 2020 as established with Brad's math in the last installment.\n\nRecommended complete reading order of Supernatural Earth (and yes, there will be a consolidation done once I've competed the series. I will be coming out with a proper timeline in \"Maiden of Summer\"):\n\n00 - \"The Crimson Tithe\" (Optional)<br >01 - \"Vampiress, Mine -- Omnibus\"<br >02 - \"The Snow Maiden -- Omnibus\"<br >03 - \"The Creature Below -- Omnibus\"<br >04 - \"The Creature Below -- Omnibus 02\"<br >05 - \"Vampiress, Mine -- Omnibus 02\"<br >06 - \"The Snow Maiden -- Omnibus 02\"<br >07 - \"The Prison Creature\" (Recommended, but still Optional)<br >08 - \"The Creature Below -- Omnibus 03\"<br >09 - \"Werewolf Chronicles - Omnibus\"<br >10 - \"Amazon of Mine - Omnibus\" (forthcoming)<br >11 - \"Maiden of Summer - Omnibus\" (forthcoming)<br >12 - \"Werewolf Chronicles - Omnibus 02\" (forthcoming)\n\n13 - \"By Mandate of Heaven\" (forthcoming - end of series)\n\n*\n\nTo Recap: there are 12 women currently imprisoned in the Prison Creature:\n\nMary - former mayor of Newhaven\n\nKimberly - former Assembly Councilwoman of Newhaven.\n\nKaitlyn - Caretaker of the Crystal Lake Lurker that was killed by the Hunters.\n\nErica - Spy for Newhaven\n\nJen - Former Nudist Camp Owner\n\nPlus 7 unnamed civilians from the Nudist Camp\n\n*\n\nSome side notes for my regular readers: I've been wanting to do the redemption story for the Werewolves around Metro for some time now as they'd been the bad guys ever since I first wrote \"Vampiress, Mine\" Chapter 1 back in 2013 for the Halloween Contest that year. They've been the big baddies for the Vamps for half of the series now and I think it's now the right time to not only set things up for the end of the series but to get them back on the straight and narrow.\n\nThis story also marks a couple of firsts for me. This is the first time that I've done a threesome with openly bi males (I usually do threesomes with a single male and two bi females, if you've been paying attention) and I get just a little bit into it with them (hey, baby steps... I am, after all, straight, and this is new territory for me). I'm also pretty much going full metal furry here with the Werewolves having sex with mortal women. Yeah, I've touched upon it in the past and while I did it a bit with the Minotaurs in SM02 and CB03, but to me that seemed more of within the realm of monster sex. When I did Crimson Tithe, the Werewolf-Human scenes there were so brief that it was hardly a thing. Here, I think that I went all out on the details with all the Werewolf-Human sex that's in here.\n\nWith that said, I hope that you enjoy the story!\n\n***\n\n\"Mirrors on the ceiling, the pink champagne on ice,\n\nShe said: we are all just prisoners here of our own device.\n\nAnd in the Master's Chambers, they gathered for the feast.\n\nThey stabbed it with their steely knives but they just can't kill the beast!\"\n\n-The Eagles, Hotel California (1977)\n\n\"A little revolution now and then is a healthy thing, don't you think?\"\n\n-Captain Marko Ramius, The Hunt for Red October (1990)\n\n***\n\nCHAPTER 1: Restlessness...\n\n\"Sir, the werewolves are getting restless again,\" one of the guards reported to Raymond Tillis inside of his study, now command center.\n\nAt his desk, Raymond swore under his breath. Those miserable fleabag hounds of his were becoming more trouble than they were worth. But he wasn't about to release them or anything, that'd be a sin. Supernaturals would serve Humans and that was all there was to that. However, he still had to throw the mutts a bone occasionally or else they might somehow overcome their magical imprisonment and rise up against him. That, he could never allow. \"What do they want now?\" he grumbled irritably. \"They'd just been ran in that last operation that took out that migrating band of Minotaurs.\"\n\n\"They suffered losses in our last series of strikes,\" the guard replied at once, all business to the point that despite the bad news, Raymond respected the man for delivering it straight and to the point. \"Despite the fact that they don't have a full moon for their females to be in their optimal fertile period, they want breed again to replenish their numbers...\" he paused. \"They claim that they're almost to the limit of their genetic diversity.\"\n\n\"Those damn whelps grow slowly like humans do,\" Raymond sighed, leaning back in his chair and silently lamenting rubbing his head in the process. \"It'll take a good thirteen years for them to be lethal and another five after that to be considered breeding stock themselves.\" He fished out a report from his desk that indicated the current numbers he had in his werewolf population. His numbers matched what the Werewolves were saying. Outside genetic material was needed in order to keep inbreeding to a minimum. Then, he consulted his computer to pull up what he was planning on doing with the breeders that he had imprisoned beneath the estate.\n\nTwelve women were in stasis tubes in a sub-basement at the moment while the Prison Creature was going through its programming to tunnel its way further down to a cavern that had been discovered. The next phase of his plan required, at minimum, three of the women in their tubes. All twelve would be optimal. Nine should work just fine. He wished he had some breeder men to fuck the werewolf females but no self-respecting man on his payroll would do it. \"Alright...\" Raymond said slowly, \"Take Kimberly out and have her birth another pup for them, she's used to it by now. Get Erica so that we can show Newhaven and all who support them what happens to traitors and spies, and, let's see...\" he tapped a finger on his chin as he thought it over, \"Get this petite little Strawberry Blonde... Amanda. She looks like she could use a monster cock inside of her.\"\n\n\"Yes sir,\" the guard replied at once. \"Anything else, sir?\"\n\n\"Yeah, get those Magi bitches in here ASAP so that they can tell me when we're going to begin!\" he lamented. \"The backlash from the supernaturals coming out of the closet has ebbed for now and I want to capitalize on the lull.\n\n*\n\nKimberly was wondering what was up as her belly shrank back to normal a moment before she was taken out of her tube along with two other girls. Thanks to Jen's arrival, who managed to get a faint psychic link going on between all of them again, she knew their names and that was about it. All they could do was relay messages through Jen. It was like they went from digital FaceTime messaging to analog texting overnight. But at least they had something until they could get back into the main body of the Prison Lurker and try to mentally hack it again. It was also good to have some reassurance from the outside that they were still there and planning on getting them... someday.\n\nRight before she was taken out of the tube, the biomass holding her arms and legs had shrank into small blobs again and the creature that was wrapped around and up inside of her loins, a Facehugger, dropped off of her body having drained the last of the nectar out of her womb. Oddly enough, her breasts still felt plump, round, heavy, and full with milk. When the workers pulled her out, she still had the Hugger that was on her face and head on her and it was still in charge of her body much like the Seekers had done when she was first captured. She caught glimpses of the other two and saw that their bodies were much the same; full tits and empty bellies. \"March!\" one man commanded them and they all fell into step in line behind him. Three other workers walked with them on either side.\n\nThey were led up the stairs and out a back door to the outside. It was nighttime and Kimberly took the opportunity to look up at the stars since she didn't know when, or if, she'd see them again. Then it was across the open courtyard to the back corner of the estate grounds where a massive barn was at. Kimberly had been here before and so she knew what was coming. Erica and Amanda, however, probably did not. She sent a mental ping to Jen and the response came back that they were informed as to the contents of the barn.\n\nInside, once the airlock like room had been cycled to ensure that no one attempted escape, they were taken to three beds in a pinwheel formation that had been laid out by other workers in the center of the barn in preparation. The women were handcuffed spread eagled on the small military boot camp beds before the workers gave the order whistle to the Facehuggers to release their prey. Kimberly, Erica, and Amanda all sputtered and coughed the moment the tubes were retracted from their lungs and their stomachs. The workers placed the Huggers into black steel cylinders and then promptly left the room.\n\nImmediately, Kimberly rolled as much as she could and looked up and to her left at Amanda. The young girl was already shaking and crying with fright. \"Hey,\" Kimberly said in a motherly tone. She stretched and was able to get a hold of Amanda's hand to gently squeeze. \"Amanda, listen to me, alright honey? Hey! Are you listening to me?\"\n\n\"Y-Y-Yes...\" Amanda's reply was shaky and fearful. Tears were already flowing from the corners of her eyes. She squeezed Kimberly's hand back in a death grip. \"Why is this happening to me?\"\n\n\"How old are you, honey?\"\n\n\"Eighteen... I was about to start my Freshman year at Metro University.\" Amanda replied. \"I was at a nudist camp on family vacation before I moved. Then... this!\"\n\n\"I have a son around your age. Have you ever had sex before?\" Kimberly asked. Amanda shook her head no. The girl was still a virgin. Well... this is going to be an experience... Kimberly thought as her eyes traveled over the two levels of the barn over the holding pens that housed the Werewolves. She blew out a breath. \"Okay, Amanda, here's what's going to happen. I've done this before so this isn't anything new to me. Any moment now, they're going to open the doors. Werewolves are going to come out and they're going to mate with us,\" she explained in a hurried fashion.\n\nAmanda gasped in shock. \"How long are we going to be here?\"\n\n\"At best? Ten months.\" Kimberly replied somberly. \"But don't worry; they're gentle people just like we are. Just... trapped in a humanoid wolf body. They'll consider us part of the pack and look after us during that time\"\n\n\"I'm betting nine months,\" Erica piped in. \"Judging by the way my sides are twinging, I think that the Huggers made us ovulate before detaching.\" She reached up and found Amanda's other hand and squeezed it. \"Hey, you're not alone here. This'll be my first kid, too.\"\n\nAmanda twister her head to regard the short cropped brunette. \"You're taking this awfully well.\"\n\nErica shrugged. \"I knew that this was a possibility when I came here and it's not like this is my first rodeo with a supernatural,\" she admitted, giving her hand a reassuring squeeze. At the same time, though, she sought out Kimberly's free hand so that they could all be connected in silent support for one another.\n\nA buzzer sounded, catching their attention. All the doors to the holding pens swung open and the Werewolves, all in their humanoid wolf form with their silver collars on, started filing out to see what was going on. The biggest and baddest looking one, the Pack Alpha that Kimberly knew as Fenrir, paused from where he exited with his pack mate and looked down at them. \"Well... that was quick...\" he rumbled before coming down the stairs. \"I did not expect Tillis the Betrayer to honor that request.\"\n\n\"Hi Fenrir,\" Kimberly said in a sarcastically bored voice from where she lay at, her eyes tracking the direction of his voice as he momentarily moved out of view. \"How's my baby doing?\" she asked, turning back to serious.\n\n\"He is doing well,\" Fenrir told her, walking up on his hind legs and looking down at the three of them. \"He is strong, just like his mother,\" he acknowledged her role in the baby's birthing with a formal bow of his head. \"He will be a good warrior once he is old enough.\"\n\nTears glistened in Kimberly's eyes and she forced a smile. While she passed the months away at a time while in either the Prison Creature or those damn tubes that Tillis made, the fruit of her own loins and that of a Werewolf was growing up. \"Can I see him?\" she asked, her normally hard voice hitching at the request.\n\n\"We have been expanding this barn above and below and are keeping the females who are raising the young sequestered away from this main communal place as this is where we work out, socialize, feed, and... other... activities,\" his lustful gaze swept over her body. \"We can also keep them away from the Hunters as much as possible. I don't think that even Tillis has the nerve to try and separate us from our young. I will have Carthel take you to his mate, Lyra, later once the Hunters see fit to release you from the bedding.\" Fenrir explained.\n\nKimberly nodded her understanding. Carthel had been the lucky one to knock her up the first time around. They were able to tell by scent alone who the father was and after that was determined, Kimberly slept with Carthel and Lyra until the baby was born. The same thing was going to happen this time as well. She made the quick introductions and Fenrir nodded to each of them in turn.\n\nFenrir's attention fixated onto Amanda. \"You are untouched?\" he noted after getting a good wiff of her scent. \"Aside from those creatures that Tillis has spawned, that is?\" Amanda managed a shaky nod. \"Do not worry, little one, we will be as gentle as possible with you until you have acclimated to our bodies.\"\n\n\"Don't I get a say in this?\" Amanda asked, panicked.\n\n\"Sadly, none of us have a say in this. We are all prisoners here.\" Fenrir shook his head. \"All things being equal; you'd have a choice in the matter to mate with us or not. Tillis does this to remind us that he is in charge and that he holds the power of life and death over us now thanks to our arrogance and our blind hatred for the Vampires.\" His eyes focused on Amanda. \"Unfortunately, were we to simply ignore you and leave you untouched and unsullied, Tillis would come in here and force copulation upon you. Or, worse, he might take one of our females to throw to his creature.\"\n\nKimberly squeezed Amanda's hand in rapid succession to get her attention. \"Its a triage thing with them; he has to think of the pack and while he sympathizes with us, he can't do the noble and honorable thing that would damage the pack,\" she added in. \"It sucks but it's literally a rock and a hard place. If they could free us and avoid repercussions, they'd do it in a heartbeat.\n\n\"Yes... exactly.\" Fenrir confirmed. \"Now... we will have to find someone suitable to not only mate with you but to care for the young after they're born...\" His eyes scanned his pack and then he started barking and howling out orders while pointing and gesturing with his clawed hand. Six Werewolves came up; four male and two female. \"This is Trnald and Dasha. They were mated long before our enslavement and have yet to reproduce. Erica, you look the most like Dasha when she is in her human form. So I will have Trnald be with you.\"\n\nErica looked at the pair and nodded. Both of them smiled back at her. \"I assure you,\" Dasha replied, leaning over to give Erica as much of a big hug that she could despite Erica being restrained on the bed. \"No... I swear to you that your child will have a loving home with us and you will always be welcomed in our den.\" Erica nodded back, tears now glistening in her eyes as she was overcome with emotion.\n\nFenrir motioned the next pair over in front of Amanda. \"This is Yovel and Barald, two young males who are hopelessly in love with each other. Naturally they cannot bear young themselves but they will make a strong family unit. They will be best suited for you as they will be gentle.\"\n\nAmanda blinked, curiosity and surprise overtaking her fear. \"You're gay?\" she blurted out before realizing how that sounded.\n\nYovel and Barald both laughed. \"Bi, actually,\" Yovel corrected her. \"We both had female mates who were killed in the war with the Vampires. The four of us had been extremely close before. After our mates died, we just naturally gravitated to each other for support.\"\n\nKimberly could see that, just like she'd done before, Amanda's heart broke at their bittersweet tale. Kimberly remembered her time with those two fondly as they kept her nice and filled up in both holes in their attempt to impregnate her. The memory made her feel all warm and fuzzy inside. \"You'll like them, dear,\" she reassured Amanda. \"I don't think that Fenrir could've picked a better couple for you.\" Amanda smiled back in response.\n\n\"This is Elias and Glinda,\" Fenrir motioned to the last couple as brought them in front of Kimberly. \"And please, no showtunes jokes; we've heard them all from the Hunters. Glinda was injured when the Vampires attacked the compound here last year. Our healers and Tillis' doctors just confirmed that she's now barren.\"\n\n\"I will be a good mother to your child,\" Glinda declared with a trace of fear and panic as if Kimberly could just up and walk out of here and say no to the whole ordeal.\n\nKimberly gave her a reassuring smile. \"That alone tells me that you will,\" she said. Her eyes flicked up to Fenrir. \"We should probably get started before Tillis and his goons come in here and screw your plans for selective breeding up.\"\n\n\"I agree,\" Fenris nodded. \"We will give you privacy for this first mating but I cannot guarantee that after today as after we confirm that you're pregnant, I'm going to allow the pack to have you in turn.\" With that, he motioned for the assembled members of the pack to get on with their duties while he took Dasha and Glinda under each arm to lead the sad women away while their men stayed behind to impregnate Erica and Kimberly.\n\n*\n\nWithin her stasis tube, Jen watched as Kimberly, Erica, and Amanda were taken out of their tubes, lined up, and marched out. Naturally, she couldn't do anything except observe out of the corners of her eyes. She couldn't even turn her head left or right. That was how much control the Facehuggers exerted over her body as they were attached to her head and abdomen. She knew that a couple of things were going down from recent changes and decided that it was time to report in.\n\nShe feigned sleep by closing her eyes and she concentrated on the relay that had been established. Looking back on it, she had to applaud the sheer genius of Brad's fallback plan. The last two Lurkers that she'd birthed were setup in places so that when she was brought here to Tillis' Estate compound, they'd provide a direct relay link to Newhaven. The Magi, from what she'd learned when she reestablished contact with Brad, might have magical wards setup to prevent long range telepathy between a Lurker and a Caretaker, but they didn't have it setup to prevent Lurkers that were nearby. The Lurker Young that she'd birthed were acting as single amplifiers.\n\nJen was under explicit orders not to let on that she had this power. Even she didn't have all the specifics as to what Skulker had done to her body to allow her to do this and that was to protect the methodology. Brad always apologized to her but she kept on telling him that it was okay. Where other women had found hell, she'd found heaven and loved every minute of it.\n\nBrad? She mentally spoke along the relay link. Brad?  Are you there?\n\nHold on... Brad's mind replied. She felt a wave of sexual release from his end and then he was back. Sorry about that... you caught me in the middle of something.",
        "Are you fucking that Minotaur again?\n\nBreesha?  Yeah. Brad admitted. And I thought that your sex drive was insatiable.  Breesha has a few hundred years of catching up to do.  She has the Minotaurs jump me and practically drag me to her cave whenever I get back into town.  But I doubt that you wanted to hear about my sex life.  What'cha got for me?\n\nJen filled him in on Kimberly, Erica, and Amanda's plight. I just got word that they're heading to the Werewolves' barn.  I don't think that they're going to be back in their tubes for some time.\n\nI concur... Brad agreed.  Tillis got off on breeding Kimberly to them last time.  I imagine that this'll go on his so-called Hunter News Network.  We'll keep an eye out for it and notify their families.\n\nAll my clients made it there? Jen asked. She'd hoped that they'd all made the trek up there once Brad had filled her in on the events of what happened after she'd been taken.\n\nYeah, the last family finally wised up and immigrated here after being harassed non-stop about what went down at my lake.  He replied.  Anything else?\n\nYeah, I heard Tillis' men say something about the Magi coming back and they only needed nine of something and then they had all of the Huggers wake up to actively fuck us.  I have no idea what they're talking about. Jen got out.  Can you see if it means anything?  I gotta go before this Hugger figures out that I'm not really sleeping when I should be getting off.  The one vibrating up my pussy and ass now is getting distracting...\n\nAs near as we can figure, the Huggers just think that you're talking to yourself in your head, but we can be cautious.  Keep your ears open Jen and keep a low profile; we don't want you getting caught.\n\nWhat more can they do to me?  I keep telling you that I love it here.  Fuck, you're going to have to figure out a way to make one of these things once you get all of us out of here.  Jen replied with a mental derisive snort.  Go have fun with your Minotaur.  I'm going to go back to being well-fucked.\n\nThe mental link went dead just in time for Jen to orgasm hard from what she called the Hugger's fiery load being blown up into her. Normally the Huggers stopped at that point but this time they continued. After she came down off of her orgasm, she looked up and down the line to see that the other women were experiencing the same thing. Something's up... she thought as she got ready for her next mind blowing orgasm.\n\n***\n\nCHAPTER 2: The Mating\n\nThe Werewolves had tried to reposition the beds so that each coupling would have some amount of privacy from the others but Amanda, then Erica, protested and refused to release each other's hands or Kimberly's hands. It was Kimberly who suggested that they all be there for this first time for support of each other and the Werewolf men all reluctantly agreed.\n\nAmanda saw Elias go to her right towards Kimberly while Trnald went around off to her left to Erica. Barald leaned over the foot of Amanda's bed to rub the pads of his hands up and down her legs while Yovel hunkered down off to her left to place his left hand on her belly and to stroke her hair with his right hand. \"Just relax,\" he said in a surprisingly gentle tone. She swallowed hard and nodded the best she could, trying to will herself to do just that. Amanda did notice that both of their claws had retracted back into their hands even if they were still furry and somewhat wolf-like. They reminded her of the Worgen off of World of Warcraft.\n\nThinking that, that made her relax considerably. She took a few deep calming breaths as she concentrated on Yovel's soothing words of encouragement that he was now whispering into her ear. She felt his hand come up to cup her small B cup left breast, then her right. Barald's hands were still going up and down the outsides of her legs and then they were coming up her inner thighs. The intimate touch made her jump and Yovel was there to calm her down and to bring her anxiety back down. He nuzzled the side of her neck and his hot breath felt oddly erotic there, shooting tingles all the way down to her loins. Her nipples perked up under Yovel's touch and she felt his thumb start to brush back and forth over her right one, making her hum.\n\n\"That's it,\" Yovel was saying as he nipped and licked at her neck, careful to keep his muzzle off of her as to not freak her out too much. \"Just relax, you're doing great,\" he reassured her. Meanwhile, Barald had gone hard and was carefully mounting her on the bed, his huge, blood red cock saluting her nakedness. When she didn't flinch, but instead parted her legs open further, he inched forward until his tip was resting against her moistening slit. He took his cock into hand and slowly dragged it up and down her opening, making her writhe and moan in the process.\n\nAmanda started to open her eyes but Yovel covered them with his hand. \"No, don't look,\" he ordered her. \"Just keep your eyes closed and feel.\" She nodded her understanding and figured that for this first time it'd probably be for the better. Her hands were still above her head, handcuffed to the headframe, and gripping Kimberly and Erica's hands. Their constant touch was reassuring. Kimberly was idly stroking Amanda's knuckles with one finger as it bounced in time to the Werewolf fucking her. Erica's hand was squeezing Amanda's other hand in time with her bouncing, every time Trnald drove down into her in fact.\n\nThat mean that Yovel and Barald were taking longer than their pack mates to have her. That fact endeared them to her even more than the heartbreaking story of losing their wives. \"I'm ready...\" she breathed.\n\n\"Are you sure?\" Barald's smooth voice asked over top of her.\n\nPausing to consider it, Amanda bit her lip and nodded. \"Mmm-hm.\"\n\n\"I just want you to know,\" Barald whispered to her as he leaned over top of her, his furry body feeling warm and ticklish against her own smooth skin, \"that you're the first woman we've had since our mates died.\"\n\nUpon hearing that, she instantly felt honored.\n\n\"This might hurt, Amanda,\" Yovel cautioned her in her ear. \"Just relax.\"\n\nBarald lifted his cock to her pussy and eased into her. His hardness was larger than anything she'd had inside of her to date. She'd played with toys before but nothing ever deep enough as to pop her cherry. That had been taken from her that day when she was chained down in the room and those damn spider things, Huggers as she mentally heard Jen call them, drove their things up into her, rupturing her hymen. \"Ahhhhhhh,\" she gasped, then grit her teeth as her pussy stretched wide to accommodate his manhood. There was a final pop as something bulbous at the base of his cock pushed inside of her as well, locking their loins together. \"Oh my God...\" she moaned.\n\nAfter giving her body a moment to accommodate him, Barald began to thrust into her. He was slow and deliberate at first and increased the rhythm once he was content that she could take it. Off to her left, Yovel was playing with her right tit with his hand while sucking on her left tit with his mouth. His free hand was still up over her eyes to prevent her from looking at them.\n\nThey were most definitely givers, Amanda surmised, as they systematically attacked each of her erogenous zones while Barald truly took her virginity. As good as they were, she just didn't think that she'd be able to get off. Not yet. She'd resigned herself to ten months, possibly a year, of being bred out to them and maybe, in time she'd be able to get off from the intercourse. It just wasn't going to happen for her today. \"Just take me,\" she breathed as Barald fucked her.\n\n\"If you insist,\" Barald conceded, sounding reluctant to do so. He let loose, fucking her harder and faster until he grunted and blew his load into her. He kept his cock fully entrenched to the hilt within her until his cock eventually went limp. Amanda squeezed both Erica and Kimberly's hands as she felt his hot cum gush up into her. If she didn't get pregnant on her first time of truly having sex with a man, she'd be surprised. Especially if what Erica said was true in that the Huggers had forced her body to ovulate.\n\nAll in all, she had to admit that the sex did feel good. It was far more pleasurable than the Hugger forcing its way inside of her ass and pussy and then making her cum so hard that it hurt. \"That felt really good... thank you...\" she told him.\n\n\"Just wait until we can take you back to our den,\" Barald said suggestively as he got up off of her. \"Then you'll really thank us as we'll give you a howling good time.\"\n\nShe grunted at the bad joke and she swore that she could hear Yovel roll his eyes in disgust at his husband as he said \"Really, with the bad puns, really?\" Amanda smiled and then grunted again as Yovel now mounted her, sliding his cock into her as quickly as possible before the cum from Barald could dribble out of her. After all, they were here to breed her and they couldn't afford to wait until she ovulated again. This time, the penetration up to the bulbous base of his cock went easier thanks to Barald breaking her in.\n\nAs Yovel now fucked her, his hips gently rocking against hers, Barald took over covering her eyes and playing with her breasts. Amanda was getting more into it now as she was moaning and whimpering softly with each thrust of his hard cock into her but she still didn't feel like she was going to climax. Nevertheless, she found the overall experience enjoyable. Yovel didn't take as long as his partner did as she'd already expressed her desire to get things done. He came inside of her within a couple of minutes, his seed pumping into her endlessly with his cock locked inside of her pussy. The base was so huge that Amanda didn't think that she'd be able to dislodge him even if she wanted to.\n\nOnce his cock stopped pulsating inside of her, Yovel laid down on top of her. \"Rest, for now,\" he whispered into her right ear as Barald was still whispering sweet nothings into her left. \"I must remain on you to ensure that our seed stays inside,\" he explained. In the back of her mind, it made sense as they were, after all, attempting to impregnate her. She let out a content sigh and marveled at how his body felt like a huge fur coat or blanket that was draped across her.\n\nShe was asleep in no time.\n\n*\n\nTrnald approached Erica and studied her as she stared right back at him. While his pack mates were warming Amanda up, he decided to go for broke to give Erica the maximum amount of pleasure possible. \"My form does not scare you?\"\n\n\"No,\" Erica admitted, shaking her head. \"After seeing what I've seen, nothing much fazes me now.\"\n\nHe cocked his head in curiosity. \"Have you seen our kind before?\"\n\n\"I've even fucked a Werewolf too,\" Erica said with a lopsided grin. \"In preparation for coming here, my boss had me do a tour of everyone's bed so that I'd be prepared for all possibilities; Immortal Humans, Lurkers, Minotaurs, Vampires, Werewolves, Sirens... you name it.\" She gyrated her hips up. \"So are we going to do this or what?\"\n\n\"Ha!\" Trnald laughed. \"You got fire, just like Miss Kimberly there. I like you and will be proud to raise our pup,\" he added as he retracted his claws, slid his hands up the sides of her thighs, and plunged his muzzle right between her legs. His long tongue lapped out at her slit, dragging all the way from her clit around to her asshole. Erica shuddered, moaned, and arched her back in response. After getting her nice and wet, from both his tongue and her juices, Trnald drove his tongue up inside of her and dragged it back out along the front wall of her pussy.\n\n\"Ooooohmyyyygoooooddd...\" Erica groaned, her eyes rolling back into her head. The Werewolf that she'd slept with back in Newhaven never did that. Then again, when Mister Parker was prepping her for her mission, it was always in forced scenarios and not lovemaking scenarios. She writhed on the bed as Trnald tongue fucked her for a good minute before mounting her. Erica whined in dismay when he pulled back but then moaned with pleasure as his thick cock penetrated her. \"Ohhhh God... yes...\" she breathed as she rocked her hips up in time with his slow thrusting.\n\nTrnald leaned in to her even as he slid his hands around to grip her bottom while he pushed his hips back and forth. He nuzzled the side of her neck and she turned her head to give him better access. First he slid his tongue back and forth across her carotid artery and then opened his jowls to clamp over her neck in a dominant, mating fashion. Like a predator of old, claiming a mate in the wilderness, he too claimed her as his for the time being. He applied just a little bit of pressure but not enough to break the skin. Erica moaned deeply in response as he took her in a domineering fashion. \"Fuck... yeah...\" she gasped.\n\nHer breasts, still swollen and sensitive with the milk inside of them that the Huggers forced her body to produce, brushed up against Trnald's muscular but furry chest every time he drove down into her. Her nipples, standing hard on end, continually were tickled and teased in the process. His mouth was sucking on her neck while his tongue swirled over her skin there. His thick cock was like a piston inside of her pussy; steadily hammering away at her. Erica felt herself quickly going over the edge. \"I'm gonna cum...\" she whispered. \"Fuck me... Cum inside of me... please...\"\n\nThose were the words that Trnald was waiting for. He ground his hips down into her hard as he drove his cock as far into her as he could get as he let loose. His cock became engorged, the bulb at the base of his cock expanding to lock them together, and a torrent of his seed burst forth right into her waiting womb. Erica's mouth opened to scream her ecstasy and he moved his mouth over hers to kiss her, allowing her voice to be muffled by his mouth. She screamed long and loud, her tongue getting attacked by his as he kissed her while they came together. Her body was on fire and her pussy was tingling and throbbing in time with his cock pulsating and pumping his seed into her. He managed short little thrusts while the orgasmed and eventually they both let out a breathless sigh of relief and contentment.\n\nWhen it was finally over, he settled down on top of her, forearms on either side of her head so that he wouldn't crush her underneath of his bulk. Erica was humming with satisfaction as he idly stroked her hair lovingly. \"Oh my god, that was incredible...\" she moaned beneath him.\n\n\"Just the start of many...\" he replied, smiling down at her as he kept his cock inside of her to ensure that his seed stayed inside of her.\n\n\"I hope you got more in there,\" Erica mused, bearing down on his cock and fluttering her pussy. \"Since we have to get me knocked up anyway, we might as well enjoy every moment that we can.\" She craned her neck up to give him a kiss on his lips.\n\n\"I certainly agree with that,\" Trnald agreed, moaning in pleasure himself as her pussy gripped and released his cock. His cock quickly rose back to the challenge inside of her and he began rocking his hips into her again as he hardened.\n\nSoon he was fucking her hard and deep amid her sweet gasps of pleasure. He heard something jingle behind him and he looked over his shoulder to see that Erica was trying to bring her legs up. \"God damn these cuffs...\" she complained. \"I wanted to wrap my legs around you.\"\n\nJust the thought of that made Trnald even harder and he pounded her more as a result. \"I'd remove them for you but they've been made out of a silver alloy. I cannot touch them.\"\n\n\"Fucking figures...\" Erica grumbled.\n\n\"Relax, my dear,\" Trnald told her, angling down so that he could grip her neck with his mouth again while bringing one hand up to stroke her breast, \"we will have time for that later,\" he promised as they fucked each other to another shared orgasm.\n\n*\n\nOver on Kimberly's bed, Elias was being nice and rough with her; placing his massive hands over her upper arms to pin her while pounding her pussy relentlessly. Kimberly's only thought when he mounted her and impaled her with his massive cock without waiting to see if she was wet was Oh thank God he remembered how I like it... Like the other three Werewolves who were fucking Amanda and Erica, Kimberly had fucked Elias the last time she was here. Granted, the barn was much nicer now than it was before and this time she at least got a bed for this first round.\n\nAs Elias plowed into her, Kimberly bucked up against them. She wished that Tillis and his henchmen hadn't bothered with handcuffing them to the bed so that she could turn over and get a proper pounding from behind. Ah well... that'll have to wait... I guess... Kimberly was content, for now, to be drilled by Elias.\n\nThere was a buzz in the back of her mind and she heard Jen asking her questions. What the hell did she want? She was interrupting Kimberly's attempt at having fun with this and didn't need any distractions. What? she finally asked.\n\nNewhaven Watching... Want to know what you said with Werewolf... Jen's limited reply came.\n\nThat got her attention. She opened her eyes and looked up at Elias. Then, without moving her head, she looked around and found the tiny cameras that were positioned around the communal area and gasped. Elias saw the surprise in her eyes and leaned in to whisper to her. \"We heard the guards talking about showing us off to the world to show we are tamed,\" he said, the disgust evident in his voice. \"We took out the cameras in our dens while leaving these out here. It's safe to assume that we are being watched by the world.\"\n\n\"That's why you wanted to move the beds...\" the realization dawned on Kimberly as she whispered the response back into his ear, turning her head so that it'd look like she was nuzzling her furry werewolf lover. Now she was suddenly paranoid. Elias had paused and Kimberly urgently whispered to him, \"No, don't stop! Keep fucking me!\" He did as she asked as she mentally gave Jen the quick rundown to relay back to Newhaven. Oh Donald... she thought sadly, Please forgive me if you're watching this and please do as I asked and find someone back home to sleep with... It was a sobering thought that dampened her sex drive. She knew that he'd screwed that Siren girl, Samantha, while she was mentally inhabiting her body. But she didn't know if Don had slept with anyone else ever since. She hoped that she did.\n\nThankfully, Elias knew how to get her back in the mood. He growled down at her and clamped his jowls around the front of her neck to dominate her. \"Oh God...\" she gurgled in response as he pounded her harder and faster. He was getting close, she could tell, as his cock started to swell within her. With his muzzle now around her neck, he brought his arms down to rest on his elbows to keep his leverage then placed his hands up onto her large breasts and squeezed. At the same time, he used this thumbs to flick up over her nipples. \"Oh God... yes... right there...\" Kimberly breathed in response, lifting her hips up off the bed slightly as he got her at just the right angle. Soon all of her reservations and hang-ups were thrown to the wind as the orgasm rumbled out of her loins to wash over her body.\n\nSensing and feeling her climax, Elias thrust into her two more times and then held it as his seed spewed forth from his cock into her womb. He let out a deep moan of pleasure along with Kimberly as their bodies rocked together in passion. It was a short orgasm for her as she had to work back up to it but he continued throbbing inside of her until his balls had emptied out. Kimberly moaned and kissed the side of his head. \"Thanks, Elias,\" she sighed.",
        "\"I am sorry that you were troubled,\" he rumbled back in response as he settled down to keep his cock within her to ensure that none of his seed dripped from her body. \"You were thinking of your mate and if he was watching?\" he asked.\n\nDamn the werewolf, he was really observant. Kimberly gave him a wan smile and nodded. \"Yeah...\" she said softly. \"I'm pretty sure he was watching since Tillis is that goddamn sadistic. Don.. my husband... has permission to seek out other sexual pursuits until I can get out of here... But...\"\n\n\"But you still miss being away from him,\" Elias nodded. \"It is a concept we can understand as we are separated from others of our kind that we have developed bonds and friendships with. Even some of us have mated together out of convenience as some of out mates are on the outside and we are trapped on the inside to serve Tillis. And then, of course, we have the issue of having our mates in here watch as we mate with you to reproduce.\" He nuzzled her head with his nose. \"No more such thoughts. Rest now. We will have more time to talk later and screw our combined worries away.\"\n\n\"Remind me to fuck your wife later as a way of saying I'm sorry,\" Kimberly yawned as she stretched as much as she could in her bonds.\n\n\"I'm sure she'll take you up on that offer.\"\n\n*\n\nThe guard reported back to Raymond with a salute. \"The three breeder women have been delivered to the Werewolf Barn, sir.\"\n\nRaymond looked up from his work and glanced at a side monitor that showed the Pack Alpha talking with the girls and then motioning for other Werewolves to come over. Raymond pushed a few buttons on his computer that would start the live feed for one of his channels and then another few commands that would pipe the feed directly to Newhaven. Let that so-called 'Governor' chew on that for awhile. \"Good,\" he said, \"Wait until they're done then go in there and uncuff them from the beds. The Werewolves will spend the next month fucking them until they're pregnant and then they'll spend the next nine months fucking them into oblivion until they give birth.\" He looked at the guard. \"Make sure you up your patrols. Now that Newhaven is getting this feed, I'm sure they're going to try some misbegotten attempt at rescue again like they did last year. When they do, maybe I can get the President to declare war on them to take them back. God, I still can't believe that he let them secede. At the very least, it'll keep them busy while I carry on with my real plans.\"\n\n\"Yes, sir,\" the guard replied. Knowing that he was dismissed, he saluted and left.\n\nRaymond continued to work in silence. He got the urge again to fuck and his mind went to his wife, Becky, but she was pregnant again with their second child and he didn't want to risk the pregnancy. Hopefully this time she'd produce a boy. A girl had been born as their first, much to Raymond's dismay. Women have their place but I can't expect one to be my heir... he thought bitterly. Checking the time and seeing that the Magis were not due to arrive for another hour at least, he mentally cycled thorough the list of maids, cooks, and other support staff that he had who were women and then discarded them all. His eyes drifted back to the spectacle where four werewolf men were now fucking the three breeders. Well shit, I can do the same thing... he thought. Hell, after the Magi are done tonight, I can start rotating them up here to be on display for me at all times. Yeah...\n\nHe grabbed his phone and dialed up his floor boss for the holding tank room. \"Yeah, get me one of the girls out of the tanks and bring her up to my office. Hmmm... someone redheaded and curvy. I want a little meat on the bones so I can pound her hard. Make sure that she'd pumped full of paralytic and mind control to last at least an hour and then get the Facehuggers off of her. I don't want to fuck and alien while she's up here,\" he ordered his man on the other in. \"Good, thanks.\"\n\n***\n\nCHAPTER 3: Going on the offensive...\n\nGovernor Aden Parker of Newhaven watched the video feed along with his head Siren, Brad Fiddis, who had formerly been Lurker Skulker's caretaker. Also in attendance in his small office while the new one was being built were the newly elected representatives for the Humans to sit on the newly formed Council; Donald Brock and former Sheriff Robert Griffin. Sheriff Zander Fielder, who had been elected back in the day when Robert retired, had just won reelection to his position now that Newhaven was a city-state, was leaning back into a corner with arms crossed and a grim look on his face.\n\nDon was Kimberly Brock's husband and watching her be bred by Werewolves was taking its toll on him. As was the knowledge that Erica was practically like a daughter to him as his son had been dating her at the time she was found out to be their spy. He buried his face into his hands as the sounds of fucking and passion came in through the speakers. \"I don't know what's worse,\" Don moaned despairingly, \"watching my wife be forced to do this or the fact that I'm horny now and want to go out and fuck someone...\" He let out a long sigh as he sat back upright, running his hands alongside his short brown hair that was greying at the temples, and looked upwards in beseechment. \"Does that make me a goddamn Cuck or something?\"\n\n\"It makes you human,\" Aden said, not taking his eyes off the screen. As the person ultimately responsible for the women's predicament, he felt that it was his obligation to watch. \"You see your wife getting pleasured and you want to go out and do the same. Relax; it's natural and you two have an open relationship now. But, at least we know that they're alive and safe, even if Tillis is using this as propaganda porn.\" As the Werewolves finally spent their loads into the ladies, the feed cut out. Aden turned to his friends. \"Thoughts?\"\n\n\"Other than 'I told you so'?\" Zander quipped from the corner. Aden flipped him off as he didn't need to be reminded of the fact that one bullet from Aden's sniper rifle could've avoided years of conflict that had cost lives on both sides. He'd had Raymond Tillis in his sights and not taken the shot because Raymond, at the time, had thrown down his weapon and raised his hands in surrender. Aden had a code that he'd held on to from his military days that one does not shoot those who are unarmed and have given up.\n\nIf Aden knew then what he knew now, he would've pulled the trigger. But that was water under the bridge now.\n\n\"I don't need jokes,\" Aden said, \"I need options. There's gotta be something that we can do to get Tillis' captives out of there.\"\n\n\"Well,\" Brad had been pondering the situation. \"We do have our own spy in there in the form of Jen now, she's been our source of intelligence.\"\n\n\"I'm not talking about just the girls,\" Aden interrupted him. \"I'm talking about the Werewolves as well since they're as trapped as our women are.\" He looked around the room as one could've heard a pin drop. \"What?\" he asked. \"Am I the only one who cares about them too?\"\n\n\"Why should we care about them?\" Robert asked point blank. \"They made their bed and now they can sleep in it after attacking both the Vamps and us.\"\n\n\"I think that even Princess Vanderheim down in Metro would agree that her most hated enemy has suffered enough,\" Aden replied dryly. He looked at the now blank screen. \"I wish we could've caught the exchange between Kimberly and that Alpha but Tillis had the feed muted for that part.\"\n\n\"Hold on...\" Brad held up his hand and concentrated for a moment. He mentally pinged Jen, who relayed him to Kimberly, who gave him as brief a synopsis as possible. Brad spoke as he relayed the information back as fast as he got it. \"The Alpha's name is Fenrir, he's been expressing remorse for their role in the war against the Vampires, and... holy shit... something about they have family units in the compound now that they're trying to keep Tillis away from at all costs... fuck me running... to protect the children who've been born there.\"\n\nThere was a series of muttering and curses under people's breath around the room at that revelation. Aden gave Robert a pointed look. \"Do the sins of the parents translate down to the children?\" he asked.\n\nRobert held up his hand. \"I withdraw the protest. Damn... he's got kids hostage there.\"\n\n\"Something you don't see in his propaganda machine since he knows that'd turn popular opinion against him,\" Aden somberly agreed with a nod. Then an idea hit him. \"Maybe we can use that... he's all about image... maybe we can get him to release the women and the children?\"\n\n\"Hate to rain on your parade, buddy,\" Zander piped in, \"but when's the last time he ever released anyone on his own accord?\"\n\n\"We never had a bargaining chip before,\" Aden replied. He was tapping his forefinger to his lip in thought as the plan came together in his mind. He hit the intercom button on his desk phone. \"Michelle, get me Alpha Irving and Representative Reed in here from the Werewolf pack. Then grab Carlos and Emily Vasquez from the Vampire delegation. Put the four of them in the west wing conference room and make sure that they don't kill each other.\"\n\n\"Yes, sir,\" his secretary replied at once before staring to make the calls.\n\n\"Brad,\" Aden pointed to the male Siren, who cocked his head in curiosity, \"You have an idea of when the Hunters will strike next?\"\n\n\"We have a general idea...\" Brad said carefully, \"but we always have to keep a low profile since any open hostilities between us and the Hunters can result in open war with the United States now. We do our best to try and dissuade them rather than outright kill them.\n\n\"The next time you're called out to defend a Lurker or any other supernatural group of refugees that's heading our way, I want you to take prisoners.\"\n\nBrad gaped at him. \"Are you fucking kidding me?\"\n\n\"No, grab one of the Fae to open a portal here so that we can get this done quickly. Be sure to grab both men and women who are involved in the attacks and we can hold them for war crimes on civilian refugees to present to the U.N. Zander, get ready to receive guests. I want men and women separated and I want everything done to the letter of the Geneva Conventions.\"\n\n\"What the fuck are you getting at here?\" Zander asked, wondering if his friend was off his rocker. \"You know the shit show that's going to come down on us if we take American prisoners off of American soil?\"\n\n\"Yeah...\" Aden nodded, now grinning wolfishly. \"I'm counting on it.\"\n\n*\n\nAden left his office in a hurry, going over plans and notes on his tablet when his brother suddenly stepped out of a shadow beside him and fell into step. Taken off guard by the sudden intrusion, Aden pivoted on his foot and decked James, sending him to the ground. \"Fuck! Warn me the next time you decide to pop in like that!\" Aden admonished him as he helped James up.\n\n\"Glad to see you too, brother,\" James quipped, rubbing his jaw. \"Damn, that was a good punch. You've been practicing.\"\n\n\"I've also been lifting since not all of us around here have been gifted by God,\" Aden remarked as he continued on with James walking beside him, albeit at a slight distance.\n\n\"God and Goddess, get it right,\" James corrected him. \"So what's this meeting about?\"\n\nAden eyed him. \"You heard?\"\n\n\"About five seconds after your secretary called Carlos and Emily up. They said that she sounded urgent and wanted any last minute instructions on our position.\" James explained. \"What is it that we need to take a position on? They didn't say what the meeting is about.\"\n\n\"That's because I haven't told them what the meeting is about.\" Aden replied as they approached the conference room. \"I'm surprised that you didn't bring Ashley with you.\"\n\n\"Eh, she's busy with her campaign to become Mayor of Metro. You should see the slogan; 'I already run the city so why not make it formal?'\"\n\nAden laughed at his sister-in-law's form of humor. \"That'll go over well with the Cthulhu-for-President crowd.\"\n\n\"She's ahead in the polls since nearly all of the supernaturals that have been laying low in the city were all registered voters to begin with,\" James grinned. \"Of course the opposition is having kittens and have already claimed voter fraud and tampering until it was pointed out that the State Constitution makes no distinction for supernatural beings. All it says is those who have resided in the state for X amount of years is eligible to vote and run for office and Ashley more than qualifies since she came over before the state even existed. She's been smoking the incumbent in all of the debates since she's older, wiser, and far more educated than he could ever hope to be.\"\n\n\"Well, being undead for a few centuries does help,\" Aden said as they entered the conference room. The two Vampires, Carlos having been converted recently to be like his wife, the two Werewolves, and Aden's secretary, all rose to their feet out of respect for Aden's office. Carlos and Emily then bowed to James who was effectively their Prince. James nodded back at them and took a seat beside them while Aden sat at the head of the table. \"Thank you, Michelle,\" he told his secretary who smiled and promptly left to addend to her other duties.\n\n\"What's this about, Governor?\" Alpha Irving asked once they were seated again. His steel eyes shifted over to the Vampires. \"And why are they here?\"\n\nAden shot the two Werewolves, presently in their human form, an irritated look. \"If you'd give me a moment to explain, I'll be happy to,\" he said in an even, terse voice. \"As you all are no doubt aware, there is a pack of Werewolves who are currently enslaved by the leader of the Hunters, Raymond Tillis. Now, would it be fair to say that the Werewolves here in Newhaven would like to see their brethren released?\" he asked, immediately holding up a forestalling hand towards Emily, who'd shot to her feet and opened her mouth to protest. After getting a glare from James, she slowly sat back down.\n\n\"Yes,\" Irving replied, glaring daggers at Emily.\n\nAden turned to the Vampiress. \"I know that the Vampires and Werewolves hate each other like Cats and dogs or even England and France,\" he said dryly. \"But would the Vampires agree that these particular Werewolves, who did go to war against you all in Metro, have paid for their sins against you?\" he asked, this time holding up a hand to the side to forestall the protests forming from the Werewolves who he knew didn't think of the war as being a crime. Aden knew all about The Mistress from his brother. The Mistress had played both sides in her bid to become the head Vamp in the region and was executed for her crimes.\n\nEmily mulled it over then looked to James for support. James nodded and she let out a long, resigned sigh. \"Oui... Ve would agree...\" she replied in her French accent.\n\n\"Then, since we are in agreement here,\" Aden pressed on, \"we would be okay with any rescued Werewolf prisoners relocating here to settle with their families, correct?\"\n\n\"Absolutely!\" both Irving and Reed said at once.\n\n\"Pardon senor...\" Carlos chimed in, his thick Latino accent evident, \"Families?\"\n\n\"Being in a closed society of their own, the Werewolves that Tillis has magically enslaved have been breeding all this time; both with each other and with women that Tillis choses from the Prison Creature,\" Aden explained. \"There's no easy way to say it so I'll just say it: Tillis has children, most of them infants and toddlers, imprisoned within his compound.\"\n\nCarlos paled. \"Ay Dios Mio...\"\n\n\"My god...\" Irving was taken aback by this news. Reed wasn't saying anything, he was just gaping in shock and horror.\n\nEven Emily was shaken at that as she gasped, her hand shooting up to her mouth with tears glistening in her eyes. \"Merde...\"\n\n\"Holy fuck...\" James breathed, rubbing his mouth.\n\nAden eyed his brother. \"Even you Angelics didn't know?\"\n\nJames shrugged. \"The Magi that are helping them have so many wards up and are using magic not of this realm of existence. I don't think that even the Lord and Lady themselves knew... if they're paying attention at all, that is. After all, we're just one anthill out of many in a huge universe that they oversee.\"\n\nAden nodded and then eyed Emily. \"Are the Vampires in agreement that we should help the Werewolf families if the opportunity presents itself?\"\n\n\"Oui!\" Emily emphatically nodded.\n\n\"Good,\" Aden smiled. \"Then get with Princess Vanderheim. I request for her to be on standby to apply political pressure from her end if need be.\" Aden then turned to Irvnig and Reed. \"Can the Werewolves be ready to move if I need them for a rescue operation.\"\n\n\"For this,\" Irving said carefully, all business now, \"I will enlist the help of the Great DenFather and Great DenMother themselves; Geir and Kara. I'll place the calls to Mormor at once. Political pressure from our own delegations to Norway, Finland, and Sweden through the U.N. could help as well,\" he explained. \"By your leave, Governor?\" Aden nodded and the two Werewolves hastily made tracks to get on things.\n\n\"We need to get this information to the Princess as well,\" Carlos put in.\n\n\"I'll take you two back to her,\" James put in, standing up. \"If you don't mind, brother?\"\n\n\"By all means, do what you have to. And... thank you.\"\n\n\"Non... Emily shook her head. \"Thank you, Governor. While we Vampires cannot have children on our own, we do have a code that we will not harm 'de innocent... no matter what race they may be from.\"\n\n*\n\n\"Ah-hah... ahhngh... ah...\" Jen gasped as Raymond continually thrust into her. She was on her back on his desk with her head hanging off the other end. Her eyes stared off into space and her legs were splayed high up into the air, held in a V, as she held onto her own thighs while he held onto her ankles. The angle allowed his short, but thick, cock to plow further into her than it normally would. In the back of her mind she wasn't sure if he took Viagra or was just naturally horny as he'd been fucking her relentlessly for a good half hour now while watching a select bank of monitors that showed Kimberly, Erica, and Amanda all being fucked a second time by the Werewolves.\n\nThe entire time, she kept her mind as blank as possible so that she could observe and mentally report back to Brad later. She'd heard Mary, Kimberly, Kaitlyn, and Erica all lament to her telepathically to her about Raymond Tillis and how he likes to sadistically fuck but thus far she didn't see a problem. Then again, she was essentially mind controlled, which placed all the power with him anyway and he was a man who seemed to get off on power. Sure, he was slapping at her big, heavy tits, twisting and pulling her nipples, slapping at her pussy, slapping her face, and even choking her at times but she'd had far worse by far more cruel men in her life. She felt every slap, pinch, pull, and blow to her body just like she felt every thrust of his cock into her now tight pussy, thanks to that nectar that she was immersed in.\n\n\"God damn...\" Raymond breathed as he relentlessly fucked her with her ankles up over his shoulders. \"I shoulda thought of this years ago...\" He slapped her breasts again, going straight across her nipples. \"You like that, don't you, bitch?\" he crowed as he pounded her hard and fast. \"Cum for me again, bitch.\"\n\n\"Ahhhhhhhh!\" Jen cried out as her body orgasmed on command. Her body shook and her pussy gripped his cock. A second later she felt his warm cum shoot up into her. He'd discovered that with the mind control nectar from the Huggers, he could make her cum whenever he told her to. Already she was in the throes of her third climax since coming up to his office study. Raymond arched his back and shoved his hips into hers as his came, sighing with relief the entire time.\n\n\"That was just what the fucking doctor ordered...\" he muttered before turning his attention to someone who'd just entered. \"Well it's about time that you got here! What took you so long? Ah, never mind that now,\" he said as he talked. Jen realized that she couldn't quite hear who he was talking to but paid attention nonetheless. \"Her? Fine. We'll shove her back in and get started.\"",
        "While he was talking, she found that control was slipping back to her limbs. Which was just as well as she was feeling the strain of holding her legs continually upright. Her body relaxed and she rolled to her side on the desk, her arms and legs going limp to the point that she wound up falling off of the desk and onto the floor.\n\nRaymond was back in an instant as he was looking down at her with a cross look. \"You moved...\" he said. \"Do you have control of your body and your mind back? What did you hear?\"\n\n\"Haaanh?\" Jen replied dumbly. It wasn't far from the truth as her arms and legs felt like jello and she'd just experienced three orgasms in the space of a half hour.\n\n\"Hmph...\" Raymond snorted as he looked at the three ladies behind him. \"See? Told you she wouldn't know anything.\"\n\n\"Perhaps...\" the lead woman said, eyes narrowing on Jen. \"You are certain she's still under your control?\" Despite her beautiful looks, she sounded like she was a pack-a-day smoker.\n\n\"Of course, watch,\" Raymond snapped his fingers and pointed to his cock, that he still had yet to shove back into his pants. \"Bitch, suck me off.\"\n\nAh fuck... Jen thought but summoned up enough strength to do as she was told. She grabbed him around his fat hips, squeezed his ass, took his cock full into her mouth to start sucking, and looked up at him with the most submissive look she could muster.\n\n\"You see?\" Raymond crowed at his guests. \"Still under my control.\"\n\n\"Very well,\" the lead woman said, rolling her eyes. \"Finish what you've started here and then meet us downstairs. But be quick about it, the Old Gods wait for no mortal.\" she added, leading her two compatriots out of the room. \"We have a lot of preparations to make for tomorrow night's ritual!\"\n\nRaymond waited for them to leave and then looked down at Jen into her green eyes. Jen looked right back up at him. \"You're a little submissive slut even without the Hugger on you, aren't you?\"\n\n\"Mmmmm-hmmmm,\" Jen confirmed for him as she eagerly sucked his cock back to life. After all; it wasn't a relationship... it was just sex... and she could fuck with the best of them. She could care less who it was. She used Brad for sex and now she could use Raymond for sex... even if Brad was better at it. Bad sex is better than no sex, in her opinion.\n\n\"You like sucking and fucking, don't you?\" Raymond asked her. She gave him another moan of affirmation. \"Good, then lift those fine ass titties up here for me to play with while I get off in your mouth, then we have business to attend to downstairs,\" he breathed as he began to fuck her mouth in earnest. \"Damn you're good at this...\" he sighed as he tweaked her nipples while she blew him to oblivion.\n\n*\n\nSeff watched with crossed arms from his perch on the second floor of the barn as his pack brothers made love to Kimberly, Erica, and Amanda for the second time tonight. His cock twitched in response to watching them. His mind floated back to the first time that his body felt Miss Kimbery in those brothel rooms next to where the Prison Creature was housed under the main building of the Estate. She'd used her body for him to lose his virginity and for that he'd been eternally grateful for it as he'd had other sexual liaisons with some of the unattached females in the pack, but nothing that warranted formal mating. That had been about a year ago and now he was nearly 20. As the memories flooded back, his cock strained to taste her body once again. That wouldn't happen for at least another month.\n\n\"You shouldn't be watching...\" Fenrir grumbled at him as he approached. \"It is distasteful. You'll get your turn soon enough.\"\n\n\"No...\" Seff looked him right in the eye and hooked his silver collar with his thumb despite the searing pain. \"This is distasteful.\" He let it drop and nodded down towards the orgy. \"Those three, are heroes and should be worshipped like Mighty Geir did to the Great DenMother herself when she gave herself over in the Final Tithe.\"\n\nDespite the insolent attitude, Fenrir found himself smiling at the young wolf. \"You know our history. That is good. And here I thought that it was going to be lost on the younger generations.\"\n\n\"The elders still teach us despite our... situation...\" Seff admitted. \"I learn all that I can. I also work out and exercise all that I can despite our confinement.\"\n\n\"Good,\" Fenrir nodded with approval. \"You will make a fine Alpha one day.\"\n\n\"Sooner than later if I have a say in it,\" Seff challenged, looking him right in the eyes. \"You were responsible for this and you will have to pay for it.\"\n\n\"Of that, my son, we are in agreement of,\" Fenrir replied with a resigned sigh. \"Our... no... that's not fair... My... arrogance and blind hatred led us here. First The Mistress... now Tillis...\" He shook his head and then placed a hand on Seff's shoulder. \"Promise me one thing, son, that after you kill me and you lead the pack, promise me that you will not make the same mistakes that I have done. Our blood feud with the Vampires cost us. We will need them as allies against human groups like these Hunters.\"\n\nSeff was taken aback by his father's admission of guilt and his request. \"Should we forgive them, father?\" He blinked in incomprehension. \"After all the losses...\"\n\n\"They have sustained losses too,\" Fenrir cut him off sharply. Then he took a deep breath. \"Its probably for the best that we just let the past go and move on from here... if there even is a future for us to look forward to, that is,\" he added as he then padded past his son.\n\nNow Seff had something else to think of as the orgy down below came second place. He wondered if there was a way to escape this hellhole and how long it would take to do it.\"\n\n***\n\nCHAPTER 4: Preparations\n\nVera of the Nightsky Coven directed her sisters, Johanna and Linda, into the correct positions for triangulation as her eyes tracked the ley line energy that formed on the nexus point here at the Estate. They were down on the flat, deep end of the old Olympic sized swimming pool, now drained of water, now that the Prison Creature was being relocated. Her and her sisters took a piece of chalk out and drew a circle around their feet. Then they turned away from each other, took three steps, and drew an X on the ground at each step. Finally, they took one last step out, drew another circle followed by two more on either side of that one. \"Get the tubes down here on each of these outer circles,\" she called up to one of the workers. \"Make sure that there is a blonde, brunette, and a redhead at each of the three points!\"\n\nThe workers scurried to do her bidding and a moment later, the stasis tanks were being wheeled down makeshift ramps in the shallow end. Vera directed each tank into place and then her and her three sisters stepped onto one of the Xs; Vera on the innermost, Johanna on the middle, and Linda on the outer one. Then, as one and moving clockwise, they drew a massive circle around the three smaller inner circles that they'd first drawn. When the circles were completed, they each then stepped back into the circle they'd drawn, raised their hands up, and began to chant.\n\n*\n\n\"I'll have to settle for one of my maids to fuck while I'm waiting for this thing by the Magi to be done,\" Raymond muttered as he took Jen back downstairs and put her back into her tube before moving off. A Facehugger latched back onto her neck and wrapped its tail around her neck to take over her breathing as she was secured back inside the biomass and nectar. Only this time, she noticed, the Hugger didn't force any of it's mind-control nectar into her. She was now moving of her own volition, not that it mattered once her legs were covered back up to her knees and her arms covered back down to her elbows above her head again.\n\nWhat's more; she saw that the others were now moving freely. Workers passed by along with two of the three women that Jen had seen earlier. \"Good... good...\" one of them was saying with glee. \"The ritual won't work if they're all pacified. We want them to feel and know what's going on...\" she was saying as they walked by Jen's tube. What the fuck is that supposed to mean? she wondered. She saw the fright and uncertainty in the others and she had to admit that she was feeling a bit apprehensive herself on this.\n\nThere was silence of a time and then the workers came back and started wheeling them out of the storage room, down a series of hallways, down some ramps and then out into another open area that looked like it used to be a swimming facility. They were each wheeled into a small circle on the outside of three larger circles. Jen noted that she was paired with a blonde girl and a brunette girl from her nudist camp. She then watched as the three mystery ladies stepped into a circle of their own, raised their hands up high, and began to chant.\n\nWhen they started to chant, the workers manipulated controls on the base of the stasis tubes. Two large tentacles came up from the biomass on the floor to find Jen's most intimate folds and push inside. They penetrated all the way up into her ass and pussy, expanding and filling her up like never before. The one up her pussy even pressed into her womb where it let out a burst of fluid as if it just had a short orgasm. It made her feel warm and fuzzy inside. While that was happening, two tentacles descended from the roof of the tube to attach to her nipples, molding themselves around the tips of her breasts and making her nipples harder than they'd ever been before. It all reminded her of being with Skulker for a birthing.\n\nOutside, the three chanting ladies were getting louder. White, crackling balls of light appeared between their upraised hands. Each chalk circle on the ground began to glow. White lines of energy sizzled out from each of the tubes, connecting the three outer ones together and then shooting a central one out through a chanting lady to come together in the center.\n\nJen felt something start to tingle inside of her belly and it grew outward, inflating her abdomen to make her look very pregnant. It was like the fire seed from the Huggers when she was impregnated with a couple, but more intense. It was almost like a ball of lighting, much like the one that the chanting ladies were holding, was inside of her uterus. Her belly started to twinge hard as her thighs started to shake. Her breasts started to feel heavy and sensitive and her nipples felt like they were being vibrated and electrocuted. The tentacles inside of her ass and pussy started to vibrate harder and faster with each passing second. Her body jerked and writhed as the electricity in the air increased. Every nerve ending on her body seemed to be electrified and on fire as she became hypersensitive. She was going to cum and she was going to do it soon... she knew it.\n\nAnd that's when the screaming started from each of the nine women in the stasis tubes as their bodies exploded into powerful orgasms and didn't stop.\n\n*\n\nThe cacophony of nine screaming women in the throes of an endless orgasm filled the room. Vera and her sisters lowered their arms, holding their balls of light before them. They stepped with careful precision towards the center of the circle where the lines of energy met. Then they slowly pushed the balls together at the nexus until they merged into one. With their job complete, they each raised their hands to the side, touching their sister's palms, and took one step to the side, counterclockwise, to step out of the lines of energy. Then then lowered their arms, did an about face, and marched out of the circles, careful to step over the lines and to not touch the tubes. Once they were outside the circle, they gathered the shallow end, closed their eyes and touched their foreheads together, and then walked out of the pool as one group.\n\n\"It is done,\" Vera reported to Raymond Tillis, who'd been watching from the safety outside of the pool along with his workers. \"The nexus will charge for a day and then we will be able to complete the ritual then.\"\n\n\"Amazing...\" Raymond breathed, taken in awe at what they'd just witnessed. \"And this... spell... will allow us to contact God?\"\n\n\"This will allow us to contact the one, true God from which we derive our power,\" Vera corrected him.\n\nRaymond jerked his head towards the ritual circle. \"And the women inside? What's going to happen to them?\"\n\n\"They will be fine,\" Vera reassured him. \"The Prison Biomass and the Facehuggers will sustain their bodies indefinitely. We could use them to charge a nuclear explosion and they'd be no worse for wear. The ritual feeds off of their hedonistic passion and fuels the nexus. The more intense the orgasm they feel, the more sexual energy gets fed into it which is why we had your workers have the Facehuggers release their control on the women except for their breathing and nutrition. More women connected within the ritual would have been preferable and would've got things done quickly.\" she gave him a pointed look.\n\n\"I had to spare some of them to breed with my mutts,\" Raymond said dismissively. \"It was that, or face a possible insurrection as some of them are showing signs of resisting the silver and the magic inside of their collars.\"<br ><br >Vera rolled her eyes and let out a disgusted huff. \"Then get your wife to reenergize them. She might have been cut loose from our Coven per your request, but she still retains the power that has been granted her,\" she explained. \"Now, please show us to our rooms so that we may rest for tomorrow night's ritual.\"\n\n\"Right this way, ladies,\" Raymond gestured. \"Anything for three Magi of the Lord.\"\n\n***\n\nCHAPTER 5: Well Fucked.\n\nThe next morning, Amanda was woken up to find Tillis' workers uncuffing her ankles and wrists. She was then helped up off of the bed so that it could be taken away. Yovel and Barald stood nearby, furry arms crossed, glaring daggers at the workers for just daring to touch her. Elias and Trnald were standing in line next to them, also glaring at the workers. The workers freed Erica and Kimberly as well, helping them up before taking their beds as well. The last worker out the door flipped the Werewolves the middle finger before snapping out \"Now, you mutts can move.\" He hastily closed the door to the so-called airlock room for protection as all four of them leapt at him, all snapping their jaws in the wake of his fast retreat.\n\n\"One day they'll fuck up and we'll get them...\" Elias muttered with disappointment and anger in his voice.\n\n\"My hero,\" Kimberly said sweetly, giving Elias a peck on the side of his muzzle. He seemed to blush and led her off with a sideways jerk of his head.\n\n\"Well,\" Yovel said, smiling, \"Right now I can settle for fucking this beautiful young lady right here,\" he said, looking right at Amanda. He even took her small hand into his large Werewolf hand and gingerly kissed the tops of her knuckles. His gaze and kiss brought heat to her cheeks as she blushed from the compliment. \"We must get more of our seed within you my dear and this time I promise that we'll see to your needs now that we don't have the legion of doom watching.\"\n\n\"You always were the romantic...\" Barald teased him, sticking out his tongue at him.\n\n\"You're just jealous of my charm,\" Yovel countered, blowing him a kiss back.\n\n\"That's okay, I'm the one with the good looks,\" Barald said, tossing his head back and making like he was throwing his mane of black hair back dramatically.\n\nAmanda actually found herself laughing at the exchange and found it endearing. She could feel and see the love between them. Yovel kept a hold of her hand and led her upstairs with Barald trailing close behind. Erica was being led off by Trnald. \"I do hope that you'll enjoy our humble abode while you're with us, Amanda,\" Yovel was telling her. \"As Fenrir was saying last night; we've been continually upgrading and refurbishing the place with what we have to work with.\"\n\n\"I'm surprised that Tillis allows you to do that,\" Amanda noted, thinking that this was looking more of a barn for racing horses as opposed to a prison complex that held them in here.\n\n\"Oh he likes to keep us busy,\" Barald rolled his eyes. \"When we're not doing missions for him or out walking security like his personal dogs, he has us continually maintaining and upgrading in here. We're slave labor to him and he wants to keep our,\" he raised his hands in quotations \"idle paws active lest they do the devil's work.\"\n\n\"So, I thought that Werewolves only changed on a full moon or something like that?\" Amanda asked. \"Yet, it wasn't a full moon last night that I could see and you're in your humanoid wolf form?\"\n\n\"It's because of these accursed things,\" Yovel indicated the silver collars. \"They force us to remain in our Werewolf form all the time. We can't take them off because of the silver alloy and the magical runes embedded in them. Only Raymond, his wife, or their kids can take these things off. God forbid if he ever has grandchildren, the ability would pass down to them.\"\n\n\"My God...\" Amanda gasped as they led her into their den. \"How long have you all been like this?\"\n\nYovel looked at his husband. \"We've been like this, what? Four... going on five... years now?\"\n\n\"Hell if I know,\" Barald sighed with dismissive wave of his hand. \"I've been like this so long I stopped counting. I don't even think I can remember what we all look like in human form.\" He then indicated the area. \"Well, here we are; a little studio apartment den with all the comforts of home; bed with a lot of pillows and blankets, a small kitchenette, and a decent sized bathroom.\"\n\n\"Oh thank God, 'cause I have to go!\" Amanda said, breaking away long enough to relieve and clean herself. \"Much better,\" she sighed a half hour later when she came back out having taken a much needed shower. Then she stood there bouncing on the balls of her feet while looking awkward. \"So, what now?\" she asked.\n\n\"Well, Tillis doesn't have anything planned for us today. Food supply run won't come until tomorrow, so we're free to do whatever the hell we want to,\" Barald said from where he'd been at in the kitchen. He smiled, bowed, and motioned to the bed. \"I do believe my hubby promised you a mind blowing orgasm?\"\n\n\"I said that we'd take care of her needs,\" Yovel said defensively, getting up off of the bed and walking over to her.\n\n\"Same diff...\"\n\nThey each took Amanda by a hand and led her over to the huge king sized bed. She laid back and sighed as the bed was nice and soft with the pillow top comforters and fur blankets. She took a moment to stretch out as much as possible after being in that cramped tube for so long. How long had it been since she was thrown into that thing? Her gaze went to outside where she got her first good look. It had to be the end of summer now as leaves on the trees were just now starting to turn. So, what, months maybe?\n\nThe guys laid on either side of her, Yovel to her left and Barald to her right. She felt it oddly disconcerting but at the same time oddly pleasant as they looked down upon her with those hungry eyes of theirs. But other than food, the only hunger that existed was that of a sexual nature. Barald was already stroking her hair and caressing the side of her head while his other hand slid up her right inner thigh, prompting her to spread her legs for them. Yovel's hand came up to cup her sex as he leaned in to nuzzle and kiss the side of her neck. Amanda closed her eyes and sighed, never before having been given this kind of attention from any guy, let alone two of them at the same time. She felt her pussy tingle and moisten.\n\nBarald leaned in to suckle on the other side of her neck, all the while stroking her thigh. Yovel moved down her body, leaving a trail of kisses in his wake, as he sought out her left breast. He slid his tongue around her nipple in circles, making it perk up. His left hand started to rhythmically squeeze her mound.",
        "Amanda closed her eyes and hummed, letting biology and lust take over from there. Her hands drifted out to the side where she started running her hands through their thick, dark grey fur. Her hand jumped when she accidentally found Barald's right ear and it twitched from her touch. \"Oh! Sorry!\"\n\n\"Heh... it's okay,\" Barald chuckled, \"it happens.\"\n\n\"I'm... sorta new at this whole lovemaking thing...\" Amanda admitted. \"Let alone with a Werewolf.\"\n\n\"It's okay, my dear,\" Yovel reassured her. \"You're doing fine. Just relax and let your body do what it wants to do and let us do the rest.\"\n\nShe bit her lip and nodded, exhaling slowly and closing her eyes to calm herself back down. Their mouths went back to work on her body, kissing, sucking, and moving across her skin, alternating from her neck down to her pert little breasts. Their hands were moving as a team as one would be stroking her inner thighs while the other one was massaging her mound. She was soon letting out little moans and mews of contentment from their touch. It was Yovel who then drifted further down her body with his mouth, shifting his body so that he could lay between her legs.\n\nA bit startled at his change in position, she looked down her body, past her tits, to see his eyes just above her bare mound. \"Ever have someone go down on you before?\" he asked with a twinkle in his eyes. She shook her head and she saw him smile. \"You will enjoy this, then,\" he said, lapping out with his long tongue at her slit.\n\n\"Ooooohohhhhhh...\" Amanda groaned, arching her back at the sensation of his tongue moving up and down over her pussy. \"Ohmygawd...\" her hands gripped the bedding as his tongue started driving her wild. His tongue seemed to be everywhere at once; inside of her, outside of her, swirling, lapping, licking, dragging... it was like it had a life of its own. Barald was now playing with her breasts with both hands, gently kneading and pinching them, while occasionally brushing her hard nipples.\n\nAmanda was licking her lips and working her mouth. She yearend to be kissed... or having something in her mouth to suck. While never having a boyfriend that she'd ever had go down on her or fuck her, she loved making out and she also loved giving head. Her mother quipped that she had an oral fetish. Her right hand sought out Barald and she moved her hand through his fur, up the side of his body. Even though the fur she could tell that he had well defined muscles and a hard chest. On impulse, when she found his head, she pulled him down to her and kissed him full on the lips.\n\nAside from the larger canine nose, fur, and rows of teeth, his kiss wasn't that much different from that of a human's. She'd kissed boys with beards that felt scruffier than this. Barald seemed taken aback by this at first but then went with it, kissing her right back.\n\nHer hand went wandering again a she let it trail down his body, down his chest, to his abdomen. She sought out his cock to touch. Barald sensed this and shuffled up further in the bed so that she could grip it, groaning into her mouth when she found it and squeezed. With her eyes closed, it felt no different than a human's cock; just thicker and longer. She noted that he was already hard... for her. Amanda started to stroke him.\n\nSensing and smelling that she was now in heat, Yovel crawled up in between her legs, holding her by the calves of her legs as he positioned his cock. She felt it nuzzle up against her pussy and she tensed her butt to lift her hips up slightly in anticipation of having it inside of her again. Amanda heard him let out a rumbling grunt of approval as he slid his cock up over her slit and mound. \"Once we have you full with our child, we'll have to introduce you to double penetration,\" he mused as he then let the head of his cock drop down and he slowly pushed into her.\n\n\"AAAhhhhhh... Mmmmmm...\" Amanda gasped and hummed as Yovel slid into her. Now that a lot of her hang-ups were gone from the previous night, this time the sex felt exquisite.\n\nYovel pushed down into her and up when he thrust, making sure to put pressure on her clit as he moved inside of her. He reveled in the look of passion on her face and enjoyed watching Barald make out with her while he played with her breast. \"Now that's a sight I could get used to again...\" he mused, running a hand up Barald's back and ruffling the top of his head Amanda was whimpering beneath them as she made out with Barald and was being fucked by Yovel. Yovel felt her pussy start to flutter. He grabbed Barald's hand and placed it down between him and Amanda. Barald got the idea at once and started fingering Amanda's clit furiously while Yovel's cock continued to slide in and out. He felt Amanda get close and was holding out for her.\n\nAmanda was letting out little tiny whimpers and moans. She'd never experienced anything like this in her life and she was loving every minute of it. Then she let out a deep, guttural groan into Barald's mouth as her body bucked and shivered as the orgasm slammed through her. Barald kissed her passionately in return while still furiously fingering her until she got overly sensitive and cried out for mercy. But mercy was not to come as Yovel arched his back and let out a long sigh of relief as his cock became engorged inside of her, the bulb at its base locking their loins together while his balls emptied out their contents into her womb. Amanda's eyes rolled back into her head as she bucked against him and screamed at the prolonged intense orgasm.\n\n\"Oh god... oh god... oh god...\" Amanda was panting when it was all over. \"No more... please...\"\n\n\"Ahhhh... but I still have yet to have my turn,\" Barald said with a smile. \"After all, I have you to thank for this,\" he indicated his hardness that Amanda had thankfully took her hand away from when she came otherwise he feared she might've crushed it.\n\nYovel finally went limp and he pulled out and traded places with Barald, the two giving each other a quick kiss as they passed on the bed. Barald lifted Amanda by her slender hips and eased into her, his cock sliding right into place as if it were a perfect fit. \"Oh god...\" Amanda moaned and shuddered as he penetrated her body. \"Is it always going to be like this with you two every day?\"\n\n\"Every day, every night, whenever we can, babe,\" Barald confirmed, smiling down at her as he began to pump his hips into hers. Yovel took over fingering her clit as he nuzzled her neck. \"We intend to keep you filled up with our seed to get you pregnant.\"\n\nStill overcome with passion, Amanda slid her hand behind his head to guide him down for a kiss. He slid his arm under her neck to cradle her head as they made out while Barald slowly fucked her to another blissful orgasm.\n\n*\n\nElias led Kimberly to his and Glinda's den on the first floor. Glinda was there with a black thong that had two dildo plugs in the crotch. \"I was told by Lyra that you used this last time?\" she asked, holding it up, \"There were two more delivered for the others. It was used to make sure the pack's seed stayed in you at all times?\"\n\n\"I'm surprised that Lyra still had it,\" Kimberly quipped as she saw the thing. Before, she hated it when the workers had came in when she'd been strapped to a pillory to put that thing inside of her. Now that things were going the way they were, it was a welcomed sight. She took it from Glinda and then wrapped the Werewolf woman up into a big hug. \"I'm sorry I have to impose upon you two like this. I promise I won't be in the way once Elias knocks me up again.\"\n\n\"Don't be,\" Glinda hugged her right back. \"You are doing something and giving us something that I cannot. That is special,\" she said even though Kimberly could tell that it was eating her up inside. \"I'll just leave you two here...\"\n\n\"Like hell you will,\" Kimberly scoffed, grabbing her by the hand and dragging her over to the bed. \"I'm going to need someone to play with after Elias has done blown his wad and gone to sleep!\"\n\n\"Hey! I can hear you, you know.\" Elias protested at the insinuation. Kimberly stuck her tongue out at him and then wiggled her ass at him in provocation as she and Glinda knelt on the bed, face to face.\n\nKimberly dropped the plug thong to the side and then wrapped her arms around Glinda's neck to pull her into a passionate kiss. Glinda moaned as she reciprocated the kiss and the embrace. They broke off momentarily to give Elias a 'are you going to get your ass over here and join us' look. Elias' cock was already standing on end as he watched his wife make out with his human breeding partner, shocked at how uninhibited Kimberly was.\n\nElias hustled over to them and sidled up behind Kimberly. With a nudge on her shoulders, he pushed Kimberly forward. Glinda laid back and pulled Kimberly down on top of her. Kimberly spread her legs wide so that she was straddling Glinda's body, arching her back and rotating her hips to give Elias easy access. Their breasts pressed together and Kimberly felt Glinda's nipples harden and poke up out of the fur. She moved her hands down to grope them as she ground against Glinda's sex. Elias positioned his cock right at Kimberly's waiting slit, finding it nice and moist for him. He grabbed her hips and eased into her.\n\n\"Oh my god he's big...\" Kimberly buried her head into Glinda's shoulder and moaned.\n\n\"One of the reasons I keep him around.\" Glinda laughed, running her hand through Kimberly's red hair as she held on to Glinda while Elias penetrated her.\n\n\"Hey!\" Elias protested again. \"I'm good for other things, you know!\"\n\n\"Right now: don't care!\" Kimberly shouted from Glinda's shoulder, albeit a bit muffled. She arched her back and gasped when Elias started fucking her in earnest with his hands on her hips, pulling her back slightly with every thrust forward. \"Oh God, yes...\" she breathed as she brought her head back up only to be kissed deeply by Glinda. Their tongues intermingled and Kimberly lost herself in the sensation of her nude body trapped between their two furry bodies.\n\nBehind her, Elias grunted as he suddenly came hard inside of Kimberly. He plowed deep into her right as his cock became engorged to lock their genitals together. Kimberly moaned into Glinda's mouth as she felt Elias' hot cum flood into her in a non-stop current. Then, just as fast as he'd came, he slumped over them both, panting from the exertion. \"Sorry...\" he mumbled out. \"Don't know what came over me...\"\n\n\"Don't be,\" Kimberly said, breaking away from kissing Glinda to give him a peck on the side of his face. \"I take it as a compliment. Of course...\" she grunted as she shifted uncomfortably, \"You're going to have to get off of me and get the plug panties on me since being between you two is gonna crush me.\"\n\n\"Right,\" Elias leaned over to fetch the panties and spat on the two plugs to lube them up. Then he eased out of Kimberly and quickly put them on her, shoving both dildos up inside of her as fast as he could.\n\nKimberly grunted again as she was roughly double penetrated. She then waved Elias off. \"Go over there and watch while I take care of your wife. When you get hard again, we'll fuck some more.\"\n\n\"Sounds like a great idea to me,\" Elias smiled as he settled back to enjoy the show.\n\n*\n\nTrnald took Erica to one side of the barn to his den that he shared with Dasha. \"I was given this to give to you for when Trnald is not inside of you,\" she told Erica, holding up an adjustable black thong that had two dildos in the crotch. \"I'm told it will keep his seed inside of you.\"\n\n\"Yeah... that it will...\" Erica admitted, eyeing the thing. The vaginal dildo plug, she understood. But the butt plug? That was just Tillis' men being cruel idiots. \"Thank you,\" she said, taking it from Dasha. She then grabbed Dasha's hand as she turned to go. \"Wait! Where are you going?\"\n\n\"I...\" she looked uncertain. \"I figured that you two would want privacy,\" she said sadly. \"I do not wish to intrude on you and my husband during your interlude.\"\n\nErica's heart broke. She could see how Dasha was depressed at not being able to conceive for her mate and from what Erica understood, they mated for life. Erica pulled Dasha close into a tight hug. \"Stay, please?\" she whispered into Dasha's ear. \"This child is going to be yours and, if you don't mind being with women that is, I wouldn't mind if you were here for its conception.\"\n\nTouched, Dasha's eyes watered and she hugged Erica back just as tight. \"Ooooh... thank you...\" she whispered into Erica's ear.\n\n\"Yes, mate,\" Trnald smiled at Dasha, stroking her back. \"Please stay with us.\" He nuzzled the side of her head and she turned to kiss him passionately.\n\n\"Where would you like us, dear?\" Dasha asked him in a newly found husky voice.\n\n\"Over by the wall on the bed,\" Trnald indicated with a jerk of his head. The three of them walked over where he placed Erica facing the wall, leaning against it with arms holding her back from it and her legs spread as if she were being frisked by the police.\n\nDasha got what her husband wanted and knelt down in front of Erica where she started rubbing Erica's bare mound while sucking on Erica's breasts. Erica hummed with pleasure and felt Dasha spreading her pussy open wide for her husband. Trnald positioned himself behind Erica, rubbing his cock back and forth across her slit a few times to get hard before nudging his cock just inside of her opening. Once the head of his cock was in, he pushed deeper into her.\n\n\"Oooohhhh,\" Erica closed her eyes and groaned as Trnald's cock filled her up to his bulbous base that seemed to pop inside of her again to keep them joined at the hips. In her mind, she could definitely get used to this feeling; especially with Dasha's hand working on her pussy while her mouth was on her breasts. She found herself whimpering with pleasure, with her hips rocking back against Trnald's, as he slowly thrust into her. I could get used to this...  This is almost like what I had back in the day...\n\nTrnald was reaching around Erica to both play with her free breast and to caress the side of his wife's head as she suckled on Erica's tit. \"I so wish I could be fucking you, dear,\" he admitted as he looked down at her.\n\nDasha smiled up at him. \"You could, so long as you didn't go all the way inside of me and you finished off in her,\" she told him. \"But we can save that for tonight.\"\n\n\"Mmmmm...\" Trnald hummed with pleasure at that mental image. \"I can hardly wait,\" he started fucking Erica in earnest as he pictured making love to his wife on her back and then, right as he was about to blow, bringing his cock up into Erica, stuffing her full, and letting loose into her womb. The idea made his cock even harder as he fucked Erica. \"I so want to do that now.\"\n\n\"Oh I won't mind...\" Erica breathed as she continued to push back from the wall against Trnald. She, too, was picturing a similar scenario only with her being on her back, Dasha straddling her body while being fucked by Trnald before Trnald had to pull out and blow his seed down into her. \"Oh trust me... I won't mind at all...\" she purred at that thought as Trnald suddenly blew his wad up into her and she joined him in a screaming orgasm shortly thereafter.\n\nOnce they were done, and Erica had her plug panties on, they tag-teamed Dasha, getting her off until Trnald was rising up for another round.\n\n*\n\nWhen Newhaven came out of the proverbial closet and became the new center of the scientific world, Aden had kept the Sirens a secret. Mainly because they were, essentially, a genetic experiment that the Lurkers were running and the experiment was still in effect. The secondary reason is because they instantly became Newhaven's black ops team; one man and four women who could blend in anywhere at will. It made them the perfect operatives to go anywhere and not be noticed.\n\nBrad Fiddis led his team consisting of Samantha, Natalia, Jasmine, and Lucy through the back woods just outside of Newhaven's perimeter wall. Their Lurker skin that covered them from head to toe shimmered in a varity of colors, constantly shifting and changing to their surroundings like a Yautja on the hunt from the Predator movie series. They ran, dodged, duck, wove, and leapt through the trees at breakneck speed, going all out to intercept a Minotaur tribe that had just reported in at Metro and were making their way north the Newhaven along what was quickly being called 'The Freedom Highway'.\n\nTechnically, per the initial treaty between Newhaven, Canada, and the United States, any supernatural being that made it to the highway was supposed to be considered safe and protected. The initial proposal had been that all supernaturals declaring their intent to immigrate to Newhaven was to be allowed to go but the U.S. Congress was dragging its feet in defining citizenship status for them. That didn't stop Canada or the sovereign Native American Tribes from signing it. The U.S. agreed to treat them like runaway slaves from the Civil War; if they made it to Metro, like the slaves of old made it across the Mason-Dixon Line, they'd be safe. Otherwise, fair game to Hunters and other anti-supernatural vigilantes.\n\nNaturally, that didn't sit well with the United Nations, who promptly filed sanctions against the U.S., not that the U.S. noticed or even cared. But that gave Aden justification to send the Sirens out to protect the incoming refugees, international incident be damned. It was one of the things that Brad liked Aden and was willing to follow him; the man knew when to play hardball and throw pointless laws and regulations out the window to save lives.\n\nToday was no exception. They found the Minotaur refugees five miles out of Metro, all heading northbound on foot and herding their beasts of burden that pulled supply wagons like they were out of the 1800s. It was how they'd survived this long in a modern society; self sufficient, living with nature, and off the grid. There was hardly any motorized traffic these days unless someone was specifically going to Newhaven for something. The locals who didn't want to be close to the new City-State had their homes bought up by Newhaven at above market rate to create the safe corridor. The residents were more than happy to sell as they were getting deals of a life time and imminent domain hadn't been forced upon them.\n\nAs the Sirens got close, the Hunters in their TDI Attack Helicopters, three in all, came up and over the forest canopy to bear down on the hapless refugees, firing their traditional warning shots over their heads to get them to surrender so that they can execute them on Hunter News Network. The Sirens had the jump on them this time as they were both ready for it and they had special orders for today; minimize casualties on both sides, ensure the safety of the refugees, take prisoners if feasible. Using Brad and Samantha as a slingshot, Natalia, Jasmine, and Lucy went flying up into the air straight for the helicopters and were plastered on their windshields like bugs before the pilots even saw them.\n\nLucy scurried to the port side door of the helicopter, a modified Sikorski UH-60 Blackhawk, and ripped the door off of its hinges. She then formed her right forearm into a spear and shouted at the startled pilot \"Turn north to three-six-zero true and land in Newhaven! You and your entire crew is under arrest for violation of the Newhaven Treaty!\"\n\nThe pilot had his sidearm out and fired his entire clip into Lucy's now pink abdomen skin. She looked down at it with disdain and then back up at him. \"Really?\" she asked him. She then speared him through the neck, severed his belt straps, and sent the body tumbling to the ground below. Her demands were repeated to the co-pilot.\n\n\"You kill me, then there's no one to fly and we all will crash, freak!\" he shouted back at her.\n\n\"I can survive the explosion,\" Lucy countered. \"Can you?\" She asked rhetorically as she settled into the pilot's seat. \"Three-Six-Zero and signal your surrender to Metro Air Traffic Control.\" Lucy waggled her new spear arm at him for emphasis.",
        "\"This is a black ops mission! We don't even have a flight plan! They don't know we're here!\"\n\nLucy nicked him across the face. \"If I have to fucking repeat myself then I'm going to crash this thing out of spite, dumbass! Ya wanna die today, flyboy? Now light yourself up on ATC radar, admit that you're committing a crime, signal your surrender to us, and turn this bird north.\"\n\n\"Fucking hell...\" the co-pilot swore as he saw the other two in his flight already dropping out of formation and doing what he'd been hesitant to do. \"Metro ATC, this is TDI Avenger, 3rd in a flight of 3. Be advised that we are surrendering to Newhaven as...\" he glanced at Lucy, who waggled her spear arm in his face, \"as we have been involved in an illegal attack on supernaturals, over.\"\n\n\"Roger, Avenger Three,\" the response came back at once. \"Squawk 7703 and remain on this frequency. Proceed as planned to Newhaven.\"\n\n\"There,\" Lucy gushed, putting her arm back to normal. \"All better! Now tell me; do all of you pilots enjoy women who are as fast as their helicopters and airplanes?\" she asked, her voice going all sweet and sugary.\n\n\"Wait... what the fuck are you talking about?\" he asked, confused.\n\n\"Don't you find me pretty?\"\n\n\"I think you look like a piece of bubblegum, lady!\" When he looked back at her he did a double take. Gone was the pink latex skin to be replaced by Lucy in her normal human naked glory. \"What the fuck!\" he gasped.\n\n\"How about now?\" she asked coyly with a dazzling smile.\n\nBefore he could stop gaping at her and answer her, the squad commander of the Hunters in the back finally realized that they hadn't bounced their uninvited guest and came forward with a pistol drawn. \"Get off this helicopter!\" he yelled at her, cocking the hammer.\n\n\"Put that away before you hurt yourself,\" Lucy calmly yanked the pistol out of his grip and backhanded him back into the cargo compartment. She then dumped the magazine and chambered round out onto the floor before dropping the pistol down there with it. Once that was done, she smiled and batted her eyelashes at the pilot. \"So, you were saying about how beautiful I looked?\"\n\nThe co-pilot was uncertain as to what to say, figuring he was fucked either way.\n\n*\n\nRaymond Tillis was not a happy camper. He'd just received word that three of his attack helicopters who'd been after a Minotaur Convoy had been boarded and taken over somehow by supernaturals out of Newhaven this morning. He cursed the loss of the helicopters and the twenty one men and women aboard that were going for the Minotaurs. Initially he'd been prepared with a statement of humanitarian aid until footage released by Newhaven that showed the attack from the ground. Coupled with the gun cameras on the blackhawks pretty much fucked his entire plan so he went with an official \"No Comment\" to the press and then got on the phone with the Secretary of Homeland Security to endure a tongue lashing for an hour straight as to how he had to honor the so-called 'Freedom Corridor'\n\nThe only thing that could salvage this shitshow was what was going down in the basement. The Magi indicated that the ritual was complete and that they were ready to proceed with the second phase. Raymond went to his safe that he had hidden behind a secret panel in a bookshelf. Opening it up, he retrieved the ancient tome, The Key of Solomon, that he'd procured from a university a couple years before.\n\nAs he got down to the basement, he saw that the three Magi women were already in their places in the ritual circle they'd created. The circle hummed with sexual energy in the air and he got an instant erection at seeing the nine naked women in their stasis tubes all writhing and shaking from the endless orgasms they'd been enduring since last night. Their voices had since gone hoarse from the constant screaming they'd been doing from cumming for so long and for so hard. He figured they'd still be screaming now if they could.\n\nRaymond walked into the center of the circle, knelt, placed the book at his knees, and crossed himself piously. He then opened the tome to the correct page and chanted out the summoning words from the old, nearly forgotten language. The Magi stopped chanting and all the girls in the tanks went limp.\n\nThen they all started to speak in a deep, otherworldly voice all around him:\n\nI have not heard from this world in some time.  Who dares to call out to me?\n\n\"Oh my God!\" Raymond gasped in surprise. \"It worked! I can hear him! I can hear the Lord!\" He cleared his throat and spoke louder. \"I am Raymond Tillis, oh Lord, can you hear me?\"\n\nI hear you... What do you seek of me... mortal?\n\n\"You are God?\" Raymond asked. So many questions flooded his mind.\n\nSee now that I, even I, am he and there is no other with me.  I am thy Lord, your Master.  Now, What do you seek of me?\n\nHands shaking from fear and giddiness, Raymond finally summoned up the nerve to ask the primary question, the one question that he'd been wanting to ask of God all these years. It was the one reason he'd became a Hunter in the first place, the reason he took over when Spence was killed. \"I... I wish to purge the world of evil, oh Lord...\" he said, his voice quaking just a bit. \"I wish to help bring about your second coming as foretold in Revelations. I want to cast out the unbelievers and the unclean. I want to rid the world of the abominations that still walk this planet and make it pure with nothing more than us humans who will rightfully worship you and glorify your name!\" The more he spoke the more embolden he got. \"I want the power to rid the world of the wickedness that consumed it just like you rid the world of Sodom and Gomorrah!\"\n\nI see that your heart is indeed dedicated to us.  You will have the knowledge that you seek.  Here is what you will need to do to awaken us and complete our work...\n\n*\n\nOver in Metro in the City Circle Cathedral, Father Michael felt the hole in reality rip wide open. His head came up and his eyes shot wide open in surprise and terror from where he'd been meditating and praying in his conversation with the Lord and Lady.\n\n\"Oh Fuck...\"\n\nHis eyes grew distant as he tried to locate the source of the rip and was breathing hard at what he'd just felt ripple all throughout the cosmos of this realm. There were two voices now buzzing inside of his head. Instantly, his entire body seemed to blink and fold at the same time as his body transformed and he shed his mortal coil.\n\nMichael the Archangel stood up, sword blazing and wings spread. The Lord and Lady were calling him back directly. He looked up to the realm of heaven and jumped. There was going to be hell to pay now as the one thing that he and his angelic brethren had been working to prevent had finally happened.\n\nSomeone had contacted the Old Gods directly.\n\n***\n\nCHAPTER 6: Developments\n\n\"Do you have any idea how much trouble you're in?\" Raymond Tillis glared at Aden Parker across the video conference feed a few days later. \"You have stolen three helicopters, killed one pilot, and kidnapped twenty men and women who are American citizens,\" Raymond growled. \"I have half a mind to ask the President for a formal declaration of war just to wipe you traitors out for coming over your own self-defined borders.\"\n\nAden was unfazed by the saber rattling as Raymond spewed out his threats. \"Wrong,\" Aden replied calmly. \"What I currently have is twenty terrorists in custody whom I plan on bringing before the United Nations on War Crimes and Terroristic Attacks. I've just been informed that we have three more terrorist helicopters captured when they attacked an independent Werewolf pack that was making it's way here up the St. Lawrence River this morning. Sadly, eleven of them over all three helicopters decided that they were going to fight to the last and my response team had no choice but to kill them when they refused to break off their attacks and surrender,\" he explained, having just gotten word that Brad and his Sirens had pulled off another successful defense of supernatural refugees. \"That brings me up to six helicopters and thirty people. The U.N. has already declared that all material captured from Terrorists is forfeited to the capturing body... which is me.\"\n\n\"When I am through with you, Parker...\" Raymond growled.\n\n\"Here's what I propose,\" Aden said, cutting him off, \"that you cease your attacks and meet me for a prisoner exchange. I give you your people and you give me mine.\"\n\n\"I don't have...\"\n\n\"Shut up and don't insult my intelligence, Raymond,\" Aden snapped at him. \"The women inside the Prison Creature and that pack of Werewolves. I'll make this easy for you: give me them back and you can have your people back. Simple and done.\"\n\nRaymond leaned in close to the camera and pointed a pudgy finger at him. \"I will never release any supernatural being or those people who support them for as long as I draw breath. They will serve humanity like they should or they will die. I do not negotiate with terrorists and traitors. That is as simple as it gets, Parker.\"\n\n\"Well then, I'm going to continue to take prisoners and proceed to reeducate them so that they'll fight for me until you agree to meet me at the negotiation table, Tillis,\" Aden replied back before cutting the feed.\n\n*\n\nTrnald came into the den looking like he'd been beat up to hell and back followed by Dasha who was looking equally worse for wear. Erica had been in the process of tidying up their den and rushed to their side. \"Oh my God, what happened to you two?\" she cried out.\n\n\"The guards had us out on a mission,\" Dasha said morosely as she flopped onto the couch while Erica helped Trnald into the bed. \"We were the ground support to attack others of our kind who were fleeing to your Newhaven.\"\n\n\"Your people have some kind of super suits...\" Trnald said, sighing with relief as he laid back and stared at the ceiling. \"They didn't kill any of the pack... only the guards in the helicopters. They just roughed us up when we were forced to attack. Thankfully our ground leader had some sense to withdraw. We managed to make it back before those things came after us.\" He looked at Erica. \"Do you know what those things are?\"\n\n\"No,\" she lied easily. She knew he was talking about the Sirens. \"Do you need to go see the doctor?\"\n\n\"No,\" Dasha yawned. \"We just need to rest. We were not injured seriously enough to warrant the doctors.\"\n\n\"I know that I should fuck you, and I would really like to,\" Trnald said, eyes roving up and down Erica's semi-nude body since she had the plug panties on. \"But I just don't have it in me right now.\"\n\n\"Then let me take care of you,\" Erica said, climbing onto the bed and settling between his legs. She reached down for the folds of skin and fur at his crotch to start stroking. His angry red cock began to rise under her touch. She took the head of it into her mouth and started sucking on it hard. When she'd first did this a couple nights ago, she'd been surprised at how remarkably similar a human cock was to one in werewolf form. It still had the basic properties; head, foreskin, shape, dimensions, et cetera... it wasn't a dog's cock or anything like in Anime, Hentai, and porn. The exception that the base of his cock right above his ballsack was thicker and rounder when he was in werewolf form. Trnald had explained to her that it was a mating evolution thing; right when he was about cum it was that portion that swelled up to fill her like a plug so that she couldn't pull away. Thus, his seed would pump into her and not splash out, ensuring the maximum amount would enter her to fertilize her eggs.\n\nErica sucked him to hardness. Then she took her plug panties off, straddled his now huge manhood, and lowered herself down onto it, sighing as he slid easily into her. Beneath her, Trnald groaned with pleasure. \"We certainly do not deserve you...\" he moaned. \"You are too good for me and my mate.\"\n\n\"But you have me anyway,\" Erica whispered to him, hands coming up her body so that she could play with her own breasts for his viewing pleasure. \"So enjoy me while you have me,\" she added as she started to gyrate her hips back and forth on top of him.\n\n\"I'll just stay over here and enjoy the view,\" Dasha mused with approval. \"I love this view of my mate's cock going in and out of you while you ride him.\"\n\n\"I'll take care of you next, Dasha dear,\" Erica promised, looking over her shoulder and blowing her a kiss. Dasha blew her a kiss right back. Erica then turned back to Trnald and locked eyes with him as she started riding him harder and faster.\n\n\"If you don't take your time, I'm gonna blow before you're ready...\" Trnald protested.\n\n\"Just take me,\" Erica told him. \"This is for you,\" she gasped as she rode him to a quick and hard orgasm that blew up into her body with such a force that she felt like she'd been kicked between the legs... but feeling good in the process. She took all of his seed into her and settled down onto his chest with his cock still inside of her until he finally went limp and slid out. Erica got her plug panty back on quickly after that happened and walked over to take care of Dasha to find her already asleep.\n\n\"Well... when you wake up, I guess,\" Erica said, smoothing down Dasha's hair fur and kissing her on the forehead tenderly.\n\n*\n\nA few days after that, Elias was coming back into their den after his patrol on the wall was done. Glinda was on her way to the nursery to assist the other mothers there. Much like he had over the last week, he came in and found Kimberly busy reading something from their fledgling communal library. Today she'd switched books to Histories of the Werewolf Packs, Volume One, he noted. From where she was seated by the barred window, her head came up and she smiled at him. Then she stood up, took her plug panties off, and strode over to the bed where she laid down. \"How do you want me?\" she asked him. \"On my back or on my stomach?\"\n\n\"Back, this time, please,\" Elias smiled at her. He was pretty sure that she was pregnant with his and Glinda's child already as her scent had already changed slightly to match his, but orders were orders; he was required to fuck her every day until Tillis' doctor came back to confirm it. Not that he minded the orders as he found Kimberly very pleasing. Kimberly didn't seem to mind either as it'd become routine for her to just go to the bed for him to fuck her whenever he came back to the den before he had to go back out to attend to other duties.\n\nKimberly rolled to her back and spread her legs wide for him. He was already hard for her when he entered the den. Without so much as another word between them, he mounted her and drove his cock into her open, wet, and waiting sex. Kimberly arched her back and moaned as he penetrated her, her arms coming up to grip his powerful biceps while her legs wrapped around his midsection with her heels digging into his back.\n\nAs his time was limited between duties, Elias fucked her hard and fast. He and Glinda always made it up to her in the evenings after mealtime; ensuring that she got off at least twice every evening. \"Oh god yes...\" Kimberly moaned beneath him. \"Fuck me hard... just like that...\" Spurred on by her words, he proceeded to do just that.\n\nWhat surprised him was when he came inside of her, she joined him in the orgasm. Her body exploded the moment his cock swelled and twitched inside of her pussy. Her pussy gripped and released his cock as his cock shot his seed deep within her. She let out a loud, long moan as her body shuddered in its erotic release. \"Oh fuck that felt good.\"\n\n\"You're primed today...\" Elias noted as he settled down on top of her while they waited for his cock to go limp within her.\n\n\"I was reading about the legend of Kara and Geir,\" Kimberly said. \"Gives a whole new meaning to the old Red Riding Hood tale. God, that was a romantic and erotic story to read...\"\n\n\"Not a mere story,\" Elias shook his head. \"History.\"\n\nKimberly looked up at him with her face twisted in an incredulous look. \"And you know this how?\"\n\n\"Kara and Geir are our species' current Alphas.\" Elias said. \"They rule the combined Werewolf Packs of the world. We refer to them as the Great DenMother and Great DenFather on Earth, after their counterparts who selected them from heaven.\"\n\n\"You're serious?\" Kimberly asked, \"That'd make them, what, a couple hundred years old?\"\n\n\"Nearly two hundred and fifty,\" Elias confirmed. \"The oldest and wisest of our species rules. It's been that way for as long as we existed. We are a long lived race much like the vampires are.\" He rose up a bit and looked down their bodies between them. He'd finally gone limp and was sliding out of Kimberly's pussy. Kimberly snagged her plug panties and shimmied into them quickly. \"Back to work, I guess.\"\n\n\"I'll be here next time you get a break,\" she said happily, giving him a loving kiss on the mouth while running her hand down his body to his cock. \"Just be ready for me again when you get back home later.\n\n*\n\n<br >Jen woke back up with a start. The last thing she remembered before passing out was that the long, blissful yet painful orgasm had ended. After that... nothing. She didn't even have any dreams. It was just darkness as if she'd been asleep without any REM. Her body felt like Jello and she figured that it was a good thing that she didn't have to walk because she seriously doubted if she could. <br ><br >She took a look around; she was still at the bottom of the empty pool and the chalk circles were still in place. No, scratch that, one of the tubes was missing. She surmised that Tillis probably had that girl up in his study. The other girls were still in their stasis tubes all either just waking up or still out of it. Everyone, Jen included, still had the tentacles up between their legs and had the tentacles attached to their breasts. The Facehuggers were still on their heads doing the breathing and feeding for them.\n\nHoly fuck... what happened... she wondered, feeling loopy.\n\nJEN!  Brad's urgent voice came back. Is that you?  What happened?\n\nDon't... know... She admitted. Feeling woozy and bowlegged... that's for sure.  These three girls came out, did some chanting, arranged us in a circle, then it was like we were having an orgasm for a day...\n\nI know, I felt it... Brad told her. Jen... that was a week ago...\n\nJen gasped. They'd been out of it for a week and they were just now coming around? What the hell did those women do to them? It felt like she'd been asleep for a day or so but a whole week? What the hell? What's going on, Brad?\n\nI dunno but it's been a real shitshow up here.  Tillis is ramping up his attacks on supernaturals and we lost contact with you for a week.  I also heard that the Angelics are having kittens.  I don't know specifics but when I do, I'll let you know.\n\nLikewise... Jen agreed with him as she watched as the missing tube get wheeled back in with the tentacles in the tubes extending out to lodge into the girl's intimate holes and cover her nips back up again. The workers then went around checking readouts on control panels and one pointed at her. They came over to her tube, looked at the panel on the base, then started wheeling her out. I'll get back to you... looks like I've been selected to fuck the big guy upstairs again since I'm awake.  Not all of the nine of us are completely awake yet."
    ],
    "authorname": "AlexClayton",
    "tags": [
        "nonhuman",
        "werewolf",
        "breeding",
        "supernatural erotica",
        "supernatural romance",
        "reluctance",
        "threesome",
        "rough sex",
        "bondage",
        "mind control"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/werewolf-chronicles-omnibus"
}