{
    "title": "Onus 06",
    "pages": [
        "*Surprise, Bitch.\n\nAll characters are 18+*\n\n*****\n\n\"What would you like?\"\n\nHe was standing in the center of his spacious kitchen, with its slick granite counters and shiny chrome finishing. The sleeves of his green sweater were rolled up halfway to his elbows, showing toned forearms and lines of scars as neat as cross-ties on a railroad track.\n\nHis hands were open, palms tilted towards me in a universal gesture of plenty and benevolence.\n\nWhat would I like? I mouthed it, changing the 'you' to an 'I', tasting the words and contemplating just how completely foreign they felt in my mouth. How strange my own sense of autonomy felt, resting on my shoulders like a weight.\n\nI shrugged. Trying to shrug this strange new feeling off my shoulders.\n\nHe shrugged right back at me, his palms tilted towards me as if his hands were boats, and the palms were tilted towards heaven.\n\n\"I don't buy things that I don't like to eat. You can pick something, and you wont have to worry about it being something gross. I like to cook, so it wont be any trouble.\" He laughed, a little self-consciously. His arms, tired, dropped to his sides. \"Remember the omelets?\"\n\nI nodded, and I felt a faint smile on my face.\n\n\"I cooked them all in about twenty minutes, but that was after at least an hour of prepping everything, so it would be perfect. Whatever you want, it wont be as long or messy as those omelets were.\"\n\nHe started looking in a pantry and pulling some things out. \"Just spitballing here...\" He murmured, his head buried in the cupboard. His voice was so much quicker, easier. He was almost hyper. It was a change.\n\nI stood back a little, watching as he pulled out a few things. Pasta, cans of soup, pancake mix. He moved to the fridge and pulled out a package of hamburger, some asparagus, a frozen pizza.\n\nI poked my head in the refrigerator when he backed away a little, and looked around. I started pulling a few things out, putting them together in one spot on the counter. A little hesitantly, looking at him for confirmation.\n\nOrange juice. A red string bag of clementines. A shiny yellow pepper. A jar of salty green olives. A bag of shredded cheese.\n\nI edged around the kitchen, glancing at him. I went to the basket on the counter, and I took out a tomato, an onion, and pried a clove of garlic from the half-bulb in the basket. I put that in the pile.\n\nLast I checked the cupboard hoping against hope. It was a little dizzying to see so much food at once, and so much of it was fresh. I found an open bag of rice, the torn end twisted and clamped shut with a red pin. I brought it out and put it in the pile.\n\nI moved the things around. I put the pepper, tomato, garlic, rice, and shredded cheese in one pile, and everything else in another pile. Then I wiped my hands together and looked nervously at him from under the fringe of my hair. It seemed like too much. I felt foolish, and a little embarrassed. I should have shrugged harder, gotten him to make a choice.\n\n\"Stuffed peppers?\" I nodded, and reached out to tap the tomato. \"Stuffed peppers and tomatoes... Do you want to try stuffing them with beef and rice? Or just rice?\" As he spoke, he was putting away the other options. He went to the sink and started washing his hands.\n\nI moved the three pound package of hamburger decisively into the pile, and he grinned, shaking off his hands.\n\n\"Let's get started, then.\"\n\n--\n\nI wanted to stay in the kitchen, and I also wanted to help make the food. It was fun, and I was hungry and I wanted to help.\n\nBut I was also pretty timid about handling the food.\n\nLots of people thought that Onus were dirty because of the sensory patches. That we had sensory organs that were always exposed, and often damp because of natural secretions that cleaned them, like tears. And every Onus had small patches on their fingertips, and on the upper part of the palm.\n\nI washed my hands over and over. So many times that the skin on my knuckles became flaky. I tried not to touch any food that wasn't covered or in a package or covered by a skin, like the fruit and peppers.\n\nI tried not to touch the inside of the peppers or chopped onion for a simpler reason.\n\nThe radio was on. I saw Sam's foot tapping. The way we were moving, it was like a very careful dance. Or like two magnets. We were near each other, but whenever he moved a little closer to me, I would take a step back. Whenever he crossed the kitchen away from me, I would follow a little ways behind. I couldn't seem to stop.\n\nBefore we got the two stuffed peppers and two stuffed tomatoes in the oven, my feet were starting to ache, and Sam reminded me that I had just had surgery yesterday, so I took some pain pills and rested on the couch while Sam cleaned some dishes and countertops and prepared the non-entree elements of the meal.\n\n\"Catch.\" He threw a clementine orange at me. I missed, and the small fruit bounced off my forearm, and onto the couch. I felt my face flushing a little, but I picked up the orange and started to peel.\n\nOranges were something I hadn't tasted in a very long time. Apparently, they used to be really cheap. But after the Onus, there was no such thing as cheap labor. Population had decreased too rapidly. \n\nI wondered if they were cheaper now because the Onus in California were old enough to pick fruit.\n\nOrange peels were an exercise in frustration. I had to peel it with my fingers, and the peel pelted my fingertips with bitter zest as I bruised it. I made a face from the bitter taste on my fingertips as I tried to use my nails.\n\nWhen I finally got the peel off, I nibbled at a slice until the membrane was gone from one side of the wedge. I touched the peeled juicy flesh with my fingers, soaking away the memory of bitterness with the sweet.\n\n\"Does it taste different? With your fingers, I mean?\"\n\nI quickly put my sticky fingers in my mouth, eating the ragged slice as well. It was sweet, popping on my long grey tongue. I looked up at Sam, feeling guilty, like a dog.\n\nHe bit his lip. \"You don't have to stop. I was just wondering.\"\n\nHe went back to rinsing the cutting board.\n\n\"St-Stronger.\" I whispered. He looked up quickly. \n\nSuddenly he was the one looking at me with guilty puppy-eyes. \"Sorry, didn't catch that?\" \n\n\"T-Tastes...\" I had a problem with the pause. My voice felt like it was trying to die in my throat while I tried to force the second word out. \"... Stronger.\"\n\nHe nodded, thoughtful. \"It's okay to touch the food. You don't have to hide it around me, or be embarrassed when I see it. If it tastes better, then go for it.\"\n\nI nodded cautiously, but I still put the next slice of my clementine directly into my mouth.\n\n--\n\nHe was easing the steaming stuffed peppers and tomatoes onto two plates. The smell was heavenly. The melted cheese near the top oozed.\n\nI had a yellow bell pepper, a tomato, ten green olives, half of my clementine, and a tall glass of orange juice.\n\nI worried about the table. The chairs were too close together, but the table was too wide. I didn't want to sit far away. But I didn't want to sit next to him. Across was too far.\n\nHe solved the problem by sitting at the corner of the table. I sat at the end, so we were kitty-corner to each other.\n\nSam spoke a little during the meal, but we spent most of it in content silence.\n\nAfter, he helped me to move my things into the snake room. It was warmer in there. He said he could work on getting me a cot, or I could sleep on the couch if I preferred. I nodded and touched the couch.\n\n\"It's getting late, so I'm going down to my room. It's the middle one, in case you need anything. Don't worry about waking me, okay?\"\n\nI nodded solemnly. I was so full it made me drowsy. I started digging through a box of his old clothes, keeping one eye on him, and the other eye for some comfortable sleeping clothes. He awkwardly backed out of the room and left the door open a crack, before padding down the hall.\n\nI waited until I could hear his footsteps down the stairs, before padding to the door to open it. I left it all the way open. The light from downstairs made the doorway into a rectangle of yellow light.\n\nI changed into a shirt that must have been huge even on him. On me, it went to the top of my walking boots and I had to keep pulling it up over one shoulder or the other. It had a faint picture on the front and was soft-worn and holey around the seams. It had a good smell. Fabric softener and linens. A dry smell. A quiet smell.\n\nI had lights to both sides. The faint yellow light of the doorway, and the hot yellow light from Pocky's lamp. She was slowly moving. Her coils gleamed. I could see a fat lump in her body, about a foot behind her head. Sam had thawed a frozen rabbit for her.\n\nI pulled the soft knit blanket up and closed my eyes. I could still see the light beyond my lids, but that was good.\n\nFor so long, things had been dark.\n\n--\n\nThe note was on the side of Hippocrates's cage.\n\n\"I left some quiche in the fridge, if you'd like to heat it up. I have some pain pills down in the kitchen if you need them. Go to my room, and turn the TV to C-SPAN at 2PM. If you want to get a glimpse of yours truly.\"\n\nHe signed it with an S. When I pulled the note from Pocky's cage she looked at me with flat reptile eyes.\n\nI didn't know what time it was. My bladder felt painful and I felt relaxed and awake. My ankles were singing painfully.\n\nI clunked and clumped down the stairs and to the kitchen. The big clock on the wall said it was fifteen to one.\n\nTaking a piss felt almost as good as when the pain pills started kicking in. The quiche was full of sausage and spinach.\n\nI clumped into his room and sat down on his bed. The bedsprings squawked at me. I turned on the TV, wondering which channel C-SPAN was on. I wasn't even quite sure what C-SPAN was.\n\nIt was a news station. I sat on top of Sam's bed and I hugged one of his pillows to my chest while the clock ticked closer to two. I liked how the pillow smelled. It made me feel safe. The coverage was panning over a large semi-circular room, with a couple hundred people sitting at the benches. The chairs all faced a large american flag hanging on the wall.\n\nI checked the clock on the wall. The minute hand was hovering slightly to the left of twelve.\n\n\"Recess is over at the House of Representatives, and now it is time to hear a speaker on behalf of the Onus Recognition Act, or as many are calling it, The Bill of Nonhuman Rights.\"\n\nThe footage changed. More focused. \"This is day fifteen of the case, and today we will hear the much-anticipated live testimony by Dr. Samuel Desta, a major voice for Onus rights and a leader on the team that developed the Kinicke treatments in 2027.\"\n\nMy heart was pounding in my chest. I felt like I had to shout, or do something. I didn't know what to do with the new information. The intense rush of joy and relief. \n\nThe Kinicke treatments came out when I was twelve years old. A regimen of medications and vitamins that had extended the lives of Onus mothers, on average, by seven years. By the time it came out, a two thirds of the mothers had already been dead. I remembered helping my mother to inject when her hands were shaky, or when she had to inject into her dominant arm.\n\nHe wouldn't hurt me. Not if he had researched the Kinicke regimen. Not if he was 'a major voice'. No wonder he had wanted me to watch this. I didn't know how to express the sheer relief, so I just kept quiet and hugged the pillow very tight, watching Sam on the television, walking up to the podium and shuffling his notes. \n\nThe bright lights in the semi-circular room shone brightly off of his black silk patch. He was wearing a white doctor's coat over a black sweater. He set down his notes and cleared his throat. Two women were struggling with a projector stand, and he took a moment to help them hold it up while they locked the legs in place. The room was silent, except for shuffling, and the clicks of the unruly projector stand. When it was set up, two long awkward minutes later, he ran a hand through his short hair and stepped up to the podium to speak.\n\n\"I find it funny, that I hear people on the street talking about the 'nonhuman bill of rights,' or the 'Onus bill of rights.' I think people only call it that because it inflames both sides.\" \n\nHe spoke rigidly, slowly. I could hear his speech impediment now more than usual. The microphone seemed to amplify it, make it sound much worse. He spoke slowly, so he could sound almost normal.\n\n\"To my side. The side that wants to give Onus the same rights as us, as all of us, it makes it sound so much grander.\" A murmur of dissent washed up at his words. He waited for the room to quiet.\n\n\"To those who have only ever seen the Onus as a threat, a burden, a pestilence, even, the nonhuman bill of rights is a mockery. A cruel dig. I have heard some of our 'news' anchors referring to it as surrender to terrorism. And many people seem to agree with them.\"\n\nHe flipped a notecard to the back of his pile.\n\n\"The majority of this debate has been focusing on clause 1 of the Onus Recognition Act.\" He spoke the name of the bill deliberately as if to draw attention to the wording. \"Which makes it illegal to own or run human-exclusive facilities. Makes all streets, hospitals, colleges, and businesses open places for Onus men and women to frequent, work, or study. All of the attention has been on Clause 1. The last three have been afterthoughts, if mentioned at all.\"\n\nHe clicked his notecards down on the podium. \"As a co-writer of the bill, I want to set the record straight. And in layman's terms. So we can see what is at stake here.\n\nHe was suddenly holding a clicker, and as he pressed a button, the screen behind him lit up with an image. It was a long white table down the middle. On the left, Onus, on the right, humans. The humans were mostly young, volunteer workers. They were giving bundles of clothes, canned goods, sandwiches in baggies, paper cups of coffee.\n\n\"This is an image from one of my Onii clinics.\" Sam murmured. \"Right now, my ten clinics make up more than half of the Onus-directed charity in the city. We are funded by myself and private donations. Clause 2 of the Onus Recognition Act is to de-stigmatize and protect organizations and individuals who give medicine, food, or shelter to Onus.\"\n\nHe clicked to the next picture. A building in flames. \"This is one of my clinics two months ago. Burned to the ground. Along with tens of thousands in damages and destroying a field hospital I had been using to treat injured Onus. The only surgical center within four hundred miles open to them. The police were no help. Thankfully, no one was hurt.\"\n\n\"Right now, it is not mandatory for police to write incident reports where the victim is an Onus or an Onus-run facility. This Clause would change that.\"\n\nHe pressed the clicker again and this time, my hands closed into tight little fists. I bit down on the pillow and hot tears gathered in my eyes. Of embarrassment. Of shame.\n\nIt was me. The picture was me. My face was blurred. It was the picture that he had taken of me. I was in that little pleated skirt. The bruises on my body stood out in raw dark splotches. The ring in my navel, the rings in my nipples, they were swollen, and dried blood trickled down from each piece of metal. Everyone could see that I was behind bars. See the bloodstained mattress behind me.\n\n\"I found these pictures on craigslist.\" Sam said softly, bitterly. The camera panned to the rest of the faces in the room, I saw disgust, shock, intense interest. Sam's speech was probably the most heated and interesting debate that they had seen all day.\n\n\"This young man was detained in an underground cell, six feet by eleven feet, for four years. When I called the authorities on the man who imprisoned him, the worst they were able to charge him with was the unlicensed sale of exotic animals.\" Sam rubbed his temple. His brow was furrowed. His jaw set. \"He was sentenced with two months in jail, as well as a fine of fifteen thousand dollars. For the capture, rape, imprisonment, and battery of a nineteen-year-old boy.\"\n\nIt was so quiet, that the cameras caught the ticking of a clock on the wall. \"Clause 3 is about trying to get Onus back into the eyes of law enforcement. For too long, the EO's have had sole responsibility. The EO's are strictly for regulation of the Onus themselves. They are corrupt, unregulated, and abusive. All of those have been documented.\" He pressed his clicker several times. Pictures of Onus getting beaten in the streets. \"And they do nothing to protect their charges. Full humans have been able to assault, kidnap, and even murder Onus without getting charged at all, much less charged on an equivalent basis to crimes of the same nature against full humans.\"\n\n\"Clause 3 is about integrating the EO's into the regular police, stricter sentencing for crimes against Onus, allowing Onus to have jury duty, and to be taken as credible witnesses in a court of law. To give them a voice. To recognize them.\"\n\nHe clicked to the next image. It was a three-story building, run-down, with several broken windows, scrawled with graffiti. Surrounded by a tall chain-link fence crowned with razor wire, with several familiar signs on the outside. Blank white faces, with dead black eyes.\n\n\"This is a picture of the North Central Onii. It has cold running water and the heat is kept running to a maximum of fifty degrees. It has sixty rooms, that hold about eight people on average. It has indoor plumbing, eight rooms to every bathroom stall.\" He pressed the clicker a few more times. A picture of ten Onus women, huddled in a single room together. Four squeezed on the bed, more on the floor, all staring at the cameraman. A line for the bathroom, many of them holding plastic bottles or empty milk jugs. Two Onus men trying to put up a blanket over a broken window.\n\n\"This is currently the largest and best-run Onus facility. Every night, there is a massive line of Onus trying to get in. Most facilities are more like this.\" More pictures. Empty lots with trashfires, piles of filthy bedding, an Onus woman cringing from a snarling dog at the end of an EO's leash.\n\n\"Clause four of the Onus Recognition Act is to create a census of all Onus individuals in the United States. And to divert funds to rebuilding and maintaining the Onii.\"\n\n\"Back to how I started. This is not a bill of rights. It is nothing as advanced. The Onus Recognition act is a long-overdue first measure. Basic rights. Rights to shelter, charity, and help from authorities. Recognition by the law. For too long, we have treated the Onus like an infestation.\"\n\nHe was becoming emotional. It made his speech impediment worse. I leaned forward, my eyes burning. I felt like every eye in that room was on me, as well as him. \n\n\"They are half human. They had no say in their birth. And it is time for us to recognize our children.\"\n\nHe stepped down. To scattered applause, and a lot of whispering.\n\nI buried my face in the pillow for a long minute, and I couldn't hear what any of them were saying.\n\nWhen I looked back up, a woman was speaking, but I didn't care about her. I wanted to check the other news stations. I wanted to see more of him. More of Sam.\n\nI flipped past a sport channel, a cooking show, and then a news show. I was excited when I saw a still from Sam's speech in the upper right hand corner, but after a few seconds, my excitement withered up, and the joy in my chest went sour.\n\n\"Who the hell does this freak think he's fooling?\" I didn't recognize the man. He had a flushed red complextion and thinning grey hair. His face was heavy and pallid. His eyes beady and dark. \"Yeah, I call him a freak. It's what we call the Onus, and he wants to be like them so much it's painful to watch.\"\n\n\"He wants to give to the world's largest population of murderers and thieves. The US has been the kindest country to Onus. We have the largest population of them. Precisely because we were giving them charity. We let them live and grow up in our cities. We gave them food and homes, even after murdering half of the world's fertile women. How did they repay us?",
        "A line graph. I couldn't see it through a scrim of angry tears. \"By becoming the most criminal group in America!. Onus fill the streets like detritus, stealing, loitering, begging, assaulting who they can get away with, and Desta has the goddamn nerve to try and push this cancer of a bill through barely a month after the Detroit Massacre. Twenty-eight humans dead by the hands of Onus thugs.\n\nThe shouting man had a partner. A younger thinner man with wire-rim glasses and lines around his mouth. \"It would have been bad timing whenever, Roger, the crimes from the Onus community have always been constant. The last time they were as low as the crime rates from the regular population is when they were all under twelve years old. Just five months ago, there was that crime spree in Colorado...\"\n\n\"Exactly my point Jenk. And this lunatic doctor wants them walking among us. He wants them serving our food, teaching our children, infecting our hospitals.\"\n\nJenks let out a low laugh. \"At least it's not like they could have gotten a worse spokesman than 'Doctor' Desta.\" He started mocking Sam. Thickening and imitating his small speech impediment until it became a brogue. The other man was laughing. His face was so red and shiny, the skin almost translucent, like a tomato close to bursting.\n\nI fumbled with the remote, finally managing to turn the TV off with my shaking hands.\n\nI slowly brought my knees up to hug them. I clenched my wrists in my hands as hard as I could. I felt a buzzing in my ears. A ringing. Was it just the blood going through my ears? Was my heart beating that hard? It felt like it. It felt like I could feel my temples pulsing.\n\n\"No.\" I mouthed, not making a sound. \"No. Don't. Don't.\"\n\nMy wrists hurt from how tight I grasped them. I felt the plastic of my walking boots clack as they were pressed together. It hurt, but I couldn't let go of my arms. I had to hold on.\n\nThe thin noise in my ears wouldn't go away. Neither would the pulsing. I moaned softly and let go of my wrists. My right hand was in my mouth and I bit down, stopping just before drawing blood. I whimpered a little, muffling the sounds on the webbing between my thumb and index finger.\n\nI had a callus. The buzzing didn't go away until I broke that callus. Until my hand stung and I tasted blood.\n\nI looked down at my forearms. At my freak-white bite-stippled skin. The red oozing out. Red and white. Red and fucking white.\n\nI could feel my mouth trembling. I was so angry with them. Those men. I wished that they were bleeding. The fat one was so red he probably wouldn't notice if not for the pain.\n\nI wanted to do it again. When I was with the ordinary man, I never bit myself only once.\n\nI shook my head so vigorously that my hair flopped back and forth and my neck hurt. \"No!\" This time I whispered it.\n\nThe second time, it was easier to listen to myself. By the time I clopped myself to the kitchen to wash my hand in the sink, I didn't want to bite myself at all.\n\nI told myself.\n\n--\n\nI could hear the door lock clicking, and when I glanced at the wall clock, it was about eight. I shakily stood up from the couch. My legs felt wobbly. My chest felt hot and achy. I must have been getting sick.\n\nI waited for the door to open. He shouldered in. The wind was howling outside, his coat was crusted with snow, even though he had just left his car. He was carrying a large grease-spotted brown bag.\n\nHe shut the door behind him. His back was facing me. My face flushed. I suddenly felt stupid. Just waiting here for him. How pathetic did that look? Like a dog running to the door when master comes home. My chest, under my arms, my groin, all felt swampy and hot, but suddenly I shuddered. I was cold with unease. I twisted the long baggy shirt around my right hand, hiding it from him.\n\nI took a step backwards, then I had to grab the back of the couch to keep my balance. The walking boots were so clumsy. I still wasn't very good at walking in them.\n\nHe slipped the coat off and turned around. He jumped when he saw me. Startled. He had high red patches on his cheeks from the cold wind. He smiled when he saw me. \"Wasn't expecting you.\" He said softly. \"It's hard to get used to someone at home. Did you see the speech?\"\n\nMy throat felt swollen up. I opened my mouth, but nothing would come out. Making me flush darker yet. I leaned against the couch back. I felt like if I let go, I would flop down to the floor. I only nodded. Cold air emanated from the foyer, and I realized I was still only wearing a sleeping shirt and a pair of boxers.\n\nHis smile was slipping a little. He seemed concerned. \"Are you in pain? I have some pain pills with me, could you tell me when you dosed yourself last? It's not good to have them too close together.\" He took two small steps towards me, hesitating where he stood. He had snow crusted onto his boots. Making small piles of slush on the floorboards. Melting into dirty puddles. His good eye was brown and warm and worried about me.\n\nHe had developed the Kinicke treatments.\n\nHe had spoken for me.\n\nI tried to say how grateful I was. How much I thanked him. But my stupid throat felt swollen shut. My eyes felt hot.\n\nI did something else.\n\nI felt like I was a stranger in my own body when I stepped forward. Towards him. He looked just as surprised as I felt. I closed my eyes.\n\nHis chest was surprisingly slim.\n\nMy arms crossed at the wrists. behind his shoulders. He was warm. His sweater smelled like him and detergent. I could hear the thump-thump of his heart below his sweater and below his skin. Feel it thump faster and faster. I was doing that to him, I realized.\n\nFor a split second, the shock of his body in my arms was almost enough to make me let go. To run. But after the moment passed, I only squeezed tighter. My chest felt hot and tight.\n\nHe carefully put his hands on my shoulders, then he draped one arm around my back. I could feel the heavy heat of the paper bag against my back. \"I... I guess you watched it then.\" His voice was soft, and kind, if surprised. I didn't want to let go. I didn't want him to see the way my eyes were leaking.\n\nWe stood in the foyer for a long time.\n\n--\n\nHe gently untangled me and I wiped my eyes, embarrassed and looking at the floor. \"I was going to bring some supplies to the clinic, but first I wanted to have dinner with you. I brought some chinese?\n\nMy head was still swimming. There was something confusing and intoxicating about how hugging him had made me feel. I shrugged my shoulders and nodded. Now that I was less distracted, I could smell the hot greasy food from the bag and it was making my stomach grumble.\n\nHe sounded so calm, as if nothing had happened, but I was still a little shaken up. I had hugged him. Squeezed him. It had felt so nice. I wanted to say something but I didn't know what to say and I felt so flushed and embarrassed.\n\nI didn't know what to feel.\n\nI clumped over to the table on my walking boots and sat down while he pulled some sodas from the fridge. I reached and put my fingertips against the stained paper bag. Tasting the grease and the salt. My mouth watered and my stomach cramped up.\n\n\"Open it up, if...if you want to.\" His speech was a little slower and clumsier than usual. I stole a glance at him from the corner of my eye, and he didn't look quite as calm as he seemed. He kept staring at me and back at the fridge. He seemed nervous. I wondered if it was because of me, or the speech, or something else.\n\n--\n\nHe did a lot of the heavy lifting. I helped him when I could. My boots made the trip up and down the stairs overlong and unbalanced. My sensitivity to the cold made trips to the car impractical.\n\nWe brought down the boxes and boxes of supplies from the storage room. Me, at my own pace. Disinfectant and insulin and IV bags of saline. The saline boxes were the heaviest. The hypodermic needles were the lightest.\n\nI had a wide-tipped red marker, and Sam told me to check inside each box, and write the number of units, as well as what was in the box.\n\n16 liters, Saline IV fluid. I wrote. The marker squeaked. 1 oz bars of soap, 116 count. Boxes of latex gloves, 112 per box, 36 boxes. I tried to make my letters as big and neat and square as I could.\n\nOnce he had moved all of the boxes into the foyer, he started taking trips outside. While I finished labeling. I saw a flash of bright yellowish headlights in the windows. The car we had driven had blue-toned headlights. I peeked out the window and saw him driving a different vehicle out of a low barn that I hadn't been able to see from the upper floors. This was a big white van, with enough room to actually carry all of our boxes.\n\n\"Part of why I had to sneak you into the hospital.\" He murmured while I helped to stack a box on top of the other boxes in his arms. \"My field hospital was burnt down. But I have a new one, and this first batch of supplies is mostly for the new location.\"\n\nI caught the emphasis, but not the significance.\n\nHe never asked if I wanted to go outright. But around nine, I bundled up and clopped through the bitter-cold snow to jump into the passenger seat of the big white van. I carried a large box of surgical dressings on my lap. My feet rested on a soft bulk-sized package of sanitary napkins. The back was stuffed with boxes, save for a narrow gap so he could see through the rear window.\n\nThe heat was roaring. We started to move and I jumped a little at the engine sound. The blue car was almost silent, the white van, less so.\n\nThe day of my surgery, I had been sick, and scared and tired. Today seemed different.\n\nHis patch was facing me. I could see just a hint of his long eyelashes past the bridge of his nose. I looked at it out of the corner of my eyes. It was advantage that Onus had. You could never tell if one of us was looking directly at you or not. I had learned that full-humans got angry, or uncomfortable if I didn't face them directly when speaking.\n\nThey thought our eyes were emotionless. Dishonest.\n\nSam had his blind side facing me. When he glanced to look at me, I knew it beyond a shadow of doubt.\n\nHe smiled a little. \"Do you want to listen to the radio? You can pick the station.\"\n\nI fiddled with the old plastic controls, different than what I was used to. As I was scanning the stations, I felt him looking at me. I felt a sudden heady rush of blood to my head. I felt almost dizzy.\n\nMy fingertips were shaking a little. I left it on the station. The classical station that had given me my first music.\n\n--\n\n\"I... I did something bad.\"\n\nThe land was mesmerizing, just watching it pass out the window. It took a moment to register his words. I sat up, and faced him. He had to keep turning his head. Turning to glance at me with his sad brown eye. Back to the road.\n\nI wasn't afraid. I don't know why I wasn't afraid. His voice was taut with anxiety. His speech stiff and awkward because of it. I should have been afraid. It felt reckless not to be afraid.\n\n\"During the speech. For clause three. I...\"\n\nI realized why I wasn't afraid. He sounded afraid. Of me. I could barely wrap my mind around that concept, but I wasn't afraid.\n\nHe let out a long painful sigh, as if frustrated at how his voice failed him. I felt an instant rush of sympathy.\n\n\"I shouldn't have used that picture.\" He got the last phrase off of his chest in a quick rush of breath. I could see his knuckles whiten on the steering wheel. He wasn't turning his head to look at me. He was afraid. Afraid that I would be angry with him.\n\nMy throat felt thick. I wasn't angry. I wasn't sure what I was feeling. All I knew was that it was good.\n\nI felt my mouth curl up a little bit. I carefully reached over and touched his sleeve. His hand was on the wheel, so I touched gentle, slow.\n\n\"... 'S'okay.\" I whispered. I bit my lip for a second, this was important. He had to know. I had to tell him right, without wasting words.\n\nHe was about to talk, but he shut up when I started. He knew how hard it was for me. The headlights of the car lit up the cauls of fine white powder, snaking across the hard white snow-pack of the road.\n\n\"Was scared before.\" I mumbled. \"But after... After the speech...\" I shook my head, and smiled at him. \n\n\"I wasn't.\"\n\nHe turned his head back to the road, smiling. And we were both speechless for a small time.\n\nIt was hard to tell from the dashboard lights, but I thought I saw his eye gleaming.\n\n--\n\nWe got into the city. The city proper. Into the slums.\n\nThere was a small section where five separate Onii were within a mile of each other. I had never slept in these Onii, but I recognized them. The trash, crude or makeshift shelters, long lines for water.\n\nBut now I saw something else. Something new.\n\nA long white RV-type vehicle was sitting on a curb. One of the side panels opened, like a food truck, and a line of Onus, almost a hundred long was wending down the sidewalk. A smaller line was waiting by a door into the vehicle. The long line seemed to be moving quickly. The small line, not much at all.\n\n\"My field hospital was excellent.\" The bitterness in his voice made me feel his anger. \"Now, we have a mobile one. Right now, my associates are giving emergency medical care that Onus can't really get anywhere else. A few will need surgery, a few always do. We have to perform those during the day, before curfew. The Mobile is only allowed inside the Oniis until midnight. We pick a different one every night.\"\n\nHe brooded for a moment, but then a he put a determined smile on his face. He held up a box of bandages. \"Are you ready?\"\n\nI looked out at the line of Onus. Men and women, wearing dirty layers of clothes as protection against the cold. I saw several bundles against a fence. The clothed ones were sleeping. The naked ones were dead, their clothes scavenged to the last stitch. \n\nThey all looked so small.\n\nI nodded.\n\n--\n\nThe inside of the Mobile was tight, capable, and quiet.\n\nTwo full-human women, doctors or nurses, I wasn't sure, were manning two small stations. The black woman was shining a small flashlight into an Onus man's mouth. The man had missing teeth, and the few remaining were badly rotted. The look in his eyes was feverish and pained and grateful.\n\nThe Caucasian woman was asking an Onus woman questions, and writing things down on a chart. As I watched she stood up, whirled a curtain around the both of them, making a small private space. Through the thin curtain, I could see a shadow-woman taking off her clothes.\n\nSam and I had slipped in through a nearly seamless door in the back. \"I can start taking patients.\" He murmured. I glanced at him, startled. His voice sounded smooth and businesslike. His impediment all but gone.\n\nThe black doctor looked up and smiled hugely. \"Santa Desta, you're here. Did you bring me any presents this time?\n\nI could see lines of strain around her mouth and forehead. She glanced at me, but the smile didn't slip.\n\nSam was unfolding a third bench from the wall. Setting up his own station. \"We could have the security start bringing supplies from my van. Celine got her hands on a practical goldmine of Lidocaine, we'll have the stuff coming out of our ears, and she got twenty units of whole O- blood from the North Central Onii. Charlie and his gang have gathered more non-medical supplies. Camping blankets, socks, chemical handwarmers, clothes, menstrual supplies. Sami said that financial donations stopped trickling and started pouring today.\"\n\nI felt a little bewildered. Not in a bad way.\n\nSam leaned out of the door. \"I can help who's next?\"\n\nHe helped a young Onus woman up. She was holding a dirty wad of cloth over her eye, and looking up at Sam like she had caught a glimpse of the face of God.\n\nThey found a place for me, in the tiny Mobile. Near the side window where another volunteer was distributing care packages to the long line. I helped to assemble them, and that freed another volunteer to help bring in more supplies.\n\nThe volunteer was a college kid with glasses, a heavy gut, and a shaved blonde head. He smiled a lot, and talked in my ear about some project they were working on. A trade school, for Onus who had been misplaced and undereducated their whole lives.\n\nI listened to half of it. Nodding, putting together the simple elements for the packages. Food bars, soap, rain ponchos, foil body-heat blankets that folded to the size of a book of stamps. For women, I added a handful of sanitary napkins. For a limited number, we could give out OTC medications, from a dwindling bucket of samples.\n\nThe Onus were mostly as silent as I was. They were scared and mistrusting, most of them. Like half-feral dogs. Maybe one in five said thank you. Some snatched the care packages away from the volunteer, like they were afraid it would be taken away.\n\n--\n\nThe EOs didn't talk to us. They just banged on the side of the Mobile with clubs, and all the Onus in line scattered, fleeing to the crude shelters that filled most of the Onii.\n\nI sat up and my back creaked in protest. I had been sitting here for hours, only rising occasionally to grab a new big box of soap, or food bars. The time had just flown.\n\nThe volunteers were working to break up and store away the parts of the Mobile. Almost all of the supplies were taken out of it, given to Elise, the exhausted-looking doctor. She who could grin with pain in her eyes, and call him Santa.\n\n\"I'm glad you've been feeling a little better.\" Sam murmured to me. \"You helped us a lot, and these are busy times.\" He grinned. \"Things are really changing. For the first time. It's too late, and too little, but we can't waste a moment.\"\n\nI nodded. We were walking to Elise's minivan with a small gaggle of volunteers. I was walking slowly in my boot-casts, carrying a half-empty box of disinfectant. I gestured with the box towards the van. Asking the question with my eyes and my shrugging shoulders.\n\n\"We can't leave the supplies in the Mobile. It's cheaper than the field hospital, and we can move it from night to night. But if it gets destroyed like my last facility, I want to at least not lose the supplies.\"\n\nI shivered. I was sick and tired of the cold. It was very late. I felt a jolt to my stomach. I was going into a warm van. Back to a house that was more like a mansion. All the Onus that we had helped. They would be curled up under body heat blankets and ponchos, eating our protein bars, but still shivering out in the Onii. Sick, cold, afraid.\n\nThe thought had a bittersweet dissonance to it. I felt like a stranger, in my own life.\n\nI set my box down, and slipped on a patch of muddy ice. Suddenly I was breathless, on the ground, with a fierce stinging from where I had landed heavily on my left hip. My air came out of me in a startled whoosh.\n\nFor two beats, I lay, frozen, waiting for a deeper pain to sink it's teeth, but it didn't come. I had landed awkward, but I had taken some of the fall with my arms. At least I hadn't dropped or broken anything.\n\n\"Jesus, are you okay?\"\n\nHe was on his knees in less than a second. His boxes carelessly cast aside on the dirty icy ground. His hands were hovering, and his words with distorted with distress and worry.\n\nI was surrounded by people. I was flushed and stinging so I just popped a quick thumbs-up with my gloved hand. Nuzzling down into my scarf to hide my face. Sam's gloved hands hovered for a second more, so I took them, to help me stand.\n\nI hesitated when I was up, feeling off balance. I was very close to him, still holding his hands for support. I leaned into him for a second, to regain my balance. The wind blew a hard edge against us, and a wide bank of lights for the Onii faded into darkness.\n\nI stayed against him for as long as it took my eyes to adjust. All of his friends were watching him. His peers. He didn't say a word to them.",
        "\"Home?\" I whispered. The fabric of his coat was rough against my lip.\n\nHe nodded. I turned and started walking towards the van. Confident that he was one step behind me.\n\n--\n\nHis hand was very gentle on my upper arm. I blinked, and the dashboard steadied and sharpened. We were in front of the house. Surrounded by skeletal trees and under a crust of stars. The heat from the dashboard was heavy and stupefying. \n\n\"How is your leg?\" He asked me. It wasn't snowing outside. It was perfectly clear. I gave him a thumbs up. My hip was a little sore, but the fall hadn't hurt me.\n\n\"It's pretty slippery out there. I'll come to the door, be your crutch.\"\n\nHe slipped out of the driver's side. I was under layers of jackets and sweatshirts, in a heated car, and I still shivered at the draft that came in through his side. He helped me to stand. My feet slipped, but I was clutching his arms for support, so I stayed upright. I held on tight. Fingertips digging into the meat of his upper arms. Face buried in his jacket to stay away from the wind.\n\nWe scurried to the house. As soon as the door was closed, I could feel the warmth of the house. The emptiness of it. It was late. Nearly one in the morning. I heard Sam yawn behind me. He had a long day. A long day of fighting. For me, for my kind.\n\n\"H\u2014ah\u2014how's you're level of pain? I can give you one more tablet today\" He unstrung his scarf and hung it on a hook. I shrugged out of his heavy coat. I tried to hang the coat, but the hooks were high above my head and I almost lost my balance trying to tip-toe on my stiff walking boots. \"I can get that...\"\n\n\"Please.\" I whispered, hoarsely. Now that I was standing again, my feet were aching from all the walking.\n\nI sat at the table, rubbing the sleep from my eyes.\n\n\"Shiloh?\" I flinched, and looked up. He was holding a green glass bottle. \"I... I was going to have a glass of wine before I went to bed. Did you want one?\"\n\nHe was sad that I flinched. I could tell by the way he looked at me. I felt guilty. He hadn't hurt me. Not once. But I was so...\n\nI nodded. I had never tasted wine. Never tasted any kind of alcohol.\n\nHe did one better than a glass of wine. He sliced a few apples with a paring knife, so quick and efficient that I was a little mesmerized by how fast he dismantled them. He saw me watching, and smiled. \"The glasses are in the cabinet behind you.\"\n\nThe stems of the glasses looked so delicate. I looked down at my hands. I didn't have nimble steady hands like Sam. When I held my hands flat they shook. I was very careful with the glasses. I moved slow and set them on the table deliberately.\n\nSam brought the bottle and plate to the table. He had added a wedge of chalk-white cheese and a tube of crackers to the plate.\n\nHe filled our glasses. I could smell the wine right away. It was almost overpowering. A purple fruit-smell that practically clawed it's way up my nose. I could taste it on the air when I opened my mouth and inhaled air over my sensitive grey tongue.\n\nI felt him watching, but I did it anyway. I carefully dipped my fingertip into the wine glass.\n\nWhen the sensory patch on my fingertip was hovering above the wine I could take in the strong purple smell. The wine was so dark that it was only red at the meniscus. When I actually touched the wine, I wasn't quite sure that I liked the taste, but I was sure that I didn't dislike it. I took a sip, holding the glass with both hands so I wouldn't drop it on accident.\n\nI covered my mouth with my hands so I wouldn't stick my tongue out. The wine was burny-tingly all over my mouth. But it wasn't a bad feeling. Just funny. I knew how to make a knot in my tongue, work the knot from root to tip to cleanse the burny-tingly spit away. I wanted to do it. But I couldn't do it with my mouth closed.\n\n\"That bad?\" He asked, a little smile on his face. I shook my head, but the taste was clinging to my tongue, heavy and a little nauseating.\n\nI gingerly got up, he started to rise, too. I shook my head and held up my hand tentatively. It felt wrong, wrong to do that. To tell him not to get up. I dropped my hand right away. \"Back.\" I whispered hoarsely. \"I'll c-come... back.\"\n\nI clopped to the bathroom. As soon as I was out of sight I opened my mouth and watched my long grey tongue in the mirror. Long and grey and shiny, made of softer tissue than human tongues. It was smooth to the touch except for a double-line of darker buds on either side of the middle crease. Mucus glands. My tongue was much longer than a human's. When I stuck it out as far as I could, I could tap my Adam's apple, or the middle of my hairline with the pointed tip.\n\nI stuck my tongue out so the tip hung below my chin, and I flexed the base of my tongue into a knot. The movement was reflexive, once I started to knot my tongue, I couldn't stop or speed up the way the knot slid down to the tip of my tongue.\n\nA thick gob of pinkish mucus landed in the sink, and the burning sensation was gone. I put my tongue back in my mouth. I ran the water until the mucus slid down the drain.\n\nI opened the door a crack, and hid. He was facing three quarters away from me. I could see the laces of his patch making horizontal parts in his short sandy hair. The black void of his patch was on my side. \n\nHe glanced my way and I didn't think. I flinched back, slamming the door shut. As soon as I did, I mouthed 'stupid' and clutched my head in both hands. My heart jackhammered frantically in my chest and I felt flushed and angry. Angry at myself. I couldn't tell if I was angry for spying, or angry for being caught. Maybe a little of both.\n\nI sighed and opened the door, hanging my head a little.\n\n\"Shy? Are you okay?\"\n\nI nodded, and finished clacking back to the dining table. I liked it when he said my name. Somehow, I liked it even more when he only used half of it.\n\nI sat and took some apple slices. The taste of those was sweet and uncomplicated. Singing in my fingertips.\n\n\"Shiloh?\" I looked up at him. \"Were you just shedding your tongue lining?\"\n\nI suddenly felt naked. I flushed and looked down at the table, covering my face with my hands. He knew. It didn't matter that I had tried to hide my ugly eel-tongue from him.\n\n\"Hey, hey, shh. It's okay. Shy... If you ever need to slough your tongue, just do it. A healthy Onus is supposed to shed the lining about four times a day.\" I looked at him, startled. I had never heard anything like that. I could see sadness in his eye, and something like quiet rage was slipping into his voice. \"I know what most humans say about your tongue. I know you're probably used to hiding it. If you ever want to taste the air, shed the lining, make silly faces, whatever, you can do it. You don't need to hide in the bathroom.\" He shrugged. \"You can if you want, but it's important that you try and shed at least twice a day. It's just part of oral hygiene for Onus.\"\n\nI took a bite of soft cheese on a cracker. After knotting my tongue, food always tasted better, my sense of smell sharpened. I took another sip of wine, and this time, the cloying taste didn't stick to my tongue like a stench. \"Mmm.\"\n\n\"It's good? You like it?\" When he said that, his face lit up, almost transformed. I liked it when he smiled. I nodded earnestly, taking another bite.\n\nWhen the plate was reduced to a waxy rind and a spatter of crumbs, I decided to scrape together as many words as I could.\n\n\"sssSam?\"\n\n\"Hm?\"\n\n\"Tha... Thank you.\"\n\n\"Don't worry about it. You helped out at the Onii tonight, and I thought you might be hungry.\"\n\n\"For... Everything. Kini-Kin... Kinick-ke.\" I pointed to a spot on the table. \"Food.\" Another spot, punctuating my gratitude. \"For... \" I felt my face crumple a little and I couldn't say anything else. My collection of words had scattered to the winds. I was so angry that I hit my forehead with the palm of my hand over and over again, my mouth screwed into an angry cut.\n\n\"No... No please, don't do that Shiloh.\" He didn't want to grab me, didn't want to physically restrain me. I was too upset. I crossed my arms tightly, tucking my hands into my armpits, and crying with frustration.\n\nHe stood and opened a drawer, looking back anxiously, watching me to make sure I didn't hit myself again. I followed him with my eyes. He came back with a pen and notepad.\n\n\"Here. Just use this, if the words wont come out.\"\n\nI took the pen and wrote angrily. I could barely see the paper through my tears. When I blinked, I could see my angry pointy scrawl for a moment. I could see my bloodless knuckles tight on the pen.\n\n'You saved my life, my mother, my mind, my kind. I can't even say thank you.'\n\nI let go of the pen, and it rolled away from my loose hand. My breathing was slowing. My mouth and eyes went soft and relaxed. I let go of my arms and wiped my eyes with the heel of my hand.\n\n\"Well, now you can, Shy.\"\n\nHis hand was resting on the notepad, his fingers splayed under my frustration. I nodded, and tentatively reached out. His fingers were wider than mine, darker. He had fine golden hairs on the back of his hand, the back of his fingers. I wanted to see if they were soft.\n\nHe let me run a fingertip down his middle finger, from the smooth white bed of his fingernail, to the gentle blue-tinged ridge of a vein. I followed the vessel with my fingertip, feeling the thin coarse hairs. The vein branched, a tributary runneled down his thumb, another to the contour of his wrist.\n\nWhen I followed his blood to his thumb, he reacted for the first time, turning his hand over slowly. I touched his palm with two fingers, then three. Sliding my fingertips over a valley of lifelines to the three crevasses between four digits.\n\nHis palm tasted like wine and soap and apples.\n\nThe gentleness of his fingers closing over mine was a balm.\n\n--\n\nI fell asleep in Pocky's room. I wrote a note for Sam, asking him to leave the door all the way open. He told me goodnight, and gently squeezed my hand.\n\nSleep evaded me. The green digital readout on my radio measured one hundred and seventy-three fragments of time before I gave up.\n\nI turned off the hall light as I left Hippocrates' room. I closed the door behind me. It was dark, cut off from her heat lamp, but my eyes adjusted quickly.\n\nThe stairs creaked twice, but the house was very sturdy.\n\nThe house felt alive, but asleep. It made quiet sounds. Water and electricity and air. That was all any life form needed. The house was as alive as I was.\n\nI shuffled my boots on the carpet so I wouldn't clop. I was barely breathing. I could hear the house breathing, the air humming through the vents, the faint buzzing of it's synapses, the gurgle of it's pipes. And as I crept closer, I could hear him breathing.\n\nHe wasn't snoring. Not quite. His breath did catch a little every time he inhaled. Nothing so vulgar as a snore.\n\nThe doorknob shocked me when I tried to touch it. The blue spark leapt from my finger to the cold metal with an audible snap. The tiny afterimage was burnt into my tired eyes.\n\nIt may have taken thirty seconds to open his door. It may have been closer to three or four minutes. Inching it open. Creeping it open. Freezing at every individual fraction of a creak.\n\nI slipped through the gap.\n\nThe only light was the faint blue glow of his alarm clock. His soft rough breathing was slow and even. I could see the long hump of his body under the covers.\n\nHis mattress was memory foam. Not springs. I never would have dared, if the bed had been able to announce my presence.\n\nI perched myself at the very edge of the bed, facing the door. I didn't cover myself with the blanket. I was as close to the edge as I could be without falling off.\n\nI let his breathing lull me to sleep.\n\n*****\n\n*Round and round and round she goes\n\nWhen will she post?\n\nNobody knows.\n\nI keep my promises.*"
    ],
    "authorname": "Cruel2BKind",
    "tags": [
        "aliens",
        "gay aliens",
        "gay romance",
        "gay",
        "half-breed",
        "alien romance",
        "dystopia",
        "future",
        "tongue"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/onus-06"
}