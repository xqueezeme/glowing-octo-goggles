{
    "title": "Eventide",
    "pages": [
        "The sea and water are a large part of my life, which is I suppose why they figure so prominently in many of my stories.\n\nThose of you lucky enough to have lived in Cape Town may recognise some of this scenery.\n\nAs always, I hope you enjoy it.\n\n- W\n\n.:.\n\nIt was a bright Saturday morning. The damned Hadedas in the bluegums at the bottom of the garden had woken me at some ungodly hour, and I'd lain in bed, somewhat stupefied from the previous nights' raucous dinner party. But the lure of the morning was strong, and I'd decided to make best use of the glorious weather and actually get outside into it.\n\nHalf-past six saw me humping my surf ski onto the roof-racks of my battered Volkswagen Golf. It was a twenty minute drive through to the bay, where I hoped the winds of the week had generated some gentle rolling waves for me to surf. Erin had not answered my call, so I guessed the slut was still in bed with the boy she'd been flirting with the prior night. I hoped she'd used protection, he'd looked a little greasy, but I guessed a girl's gotta do what a girl's gotta do when pickings are slim.\n\nTraffic was light, and I was singing Dire Straits' Romeo and Juliet out loud as I crested the pass and started the winding descent on the far side.\n\nThe beach was almost deserted; which suited me fine. I love my body, but it draws the wrong sort of attention, and the bay's seafront is not the most upmarket of places - definitely not a place I enjoy wandering around solo in skin-tight paddling shorts, a sports bra and a neoprene rash vest, especially not when handling my surf-ski. It makes a certain kind of man come up and offer to \"help\" me. The beach has the advantage, though, of being mostly shark-free, which on a coast otherwise infested with Great Whites is a pretty good draw card in my book.\n\nThe swell was good - not great, but good. I locked my car, secured my dry-bag to the straps behind my surf-ski's cockpit, hefted my paddle, and charged the waves, grinning. \n\n.:.\n\nFor an hour I lost myself; the charge out into deeper water, the fast turn, and the burst of acceleration necessary to catch a wave as it rolled past; this was my favourite thing. The hiss of the wake I carved, the tumbling helter-skelter of limbs if I misjudged my exit, and the walk of shame to retrieve the ski. \n\nI loved it.\n\nThe tide came in, as it always does, and eventually the flat white sandy bottom of the bay was too deep to generate surf - what waves there were were turning into dumpers that crashed a few metres from the shoreline. I sighed, caught one of the last decent sets in, and pulled my surf-ski up onto the beach. Tourists and locals were now out in force; it was time for me to think of moving on. Breakfast called.\n\nI smiled quiet good-mornings to one or two local paddlers that I recognised. They'd just come in from a distance piece out into the ocean - crazy, to my mind, given what lurked out there in the water. Then, in one fluid practised movement I lifted my surf-ski over my head and slid it onto the roof racks. I unlocked my car, recovered my ratchet straps, and wound the hull down tight so it wouldn't move before I tied off the loose ends.\n\nI flung my beach towel onto the seat, arranged it so I wouldn't further stain the fabric, and headed home.\n\n.:.\n\nA long, hot shower in the upstairs bathroom saw to the sea salt, and I let myself drip-dry as I tied my hair up into the habitual straggly pony tail. University holidays were a lovely opportunity to abuse my parents' hospitality, and I did so shamelessly. They were away for the week, of course, on some mad hiking sojourn up the West Coast. I wasn't complaining, it meant I could have friends over or, much more frequently, close the blinds and wander around the house nude or barely clothed, enjoying the cool inside air while the summer sweltered outside. Later I'd don a bikini and sun myself by the pool, but for now it was a pair of thin gym pants and a cotton vest as I dug in the fridge for fruit. \n\nI put one of the innumerable movie channels on to provide background noise as I mixed strawberries, raspberries and some still-OK plums with yogurt and muesli. And then I sat, staring out the window at the water rippling in the sunlight, at the trees moving in the first hint of the morning breeze.\n\n.:.\n\nI lay, knees raised, on the deck chair; my tatty woven grass hat, cheapo sunglasses and a glass of white wine all the company I wanted. The day was getting hotter, and I could feel sweat starting to slick my shoulders and anywhere else that wasn't exposed to airflow. It was shaping up to be a scorcher.\n\nI watched two gulls cut the air above me; one gave a forlorn cry as they passed. \"You and me both,\" I answered. I sat up, flung aside my hat and sunglasses, and knifed cleanly into the pool, carving a long, slow arc through the cool water. I surfaced, turned onto my back, and floated for a while, enjoying the cold kiss of the water against my flanks and breasts.\n\nSomething made me open my eyes.\n\n\"Olly!\" I shrieked, disbelieving, jerking upright in the water.\n\nHe grinned down at me from my deck chair; that shit-eating smirk I know so well.\n\n\"What the hell, asshole, when did you get here?\"\n\n\"Literally this minute, I just walked in the door. It's thirty one degrees and I thought to myself 'Where could Shannon possibly be?' Answer, of course? In the water.\"\n\n\"You should have told me you were coming,\" I protested, giddy from the surprise. I swam to the steps, clambered out, and attacked him, swinging my arms up behind his neck, laughing like a carefree girl as my twin swung me around and around.\n\n\"I missed you,\" I yelled, as he set me down. \"You dick. You didn't phone me once from Italy.\"\n\n\"I was having too much fun,\" he retorted, grinning. \"Ski trips are serious business, I had a lot of drinking and so on and so forth to do.\"\n\n\"Uh huh. Too busy to phone your sister when you know she's eating her guts out with jealousy. You complete penis.\"\n\nHe laughed, and I grinned up at him. \n\n.:.\n\nOlly and I were born a scant few minutes apart, by C-section, after mum went into labour a week or so before term. He's supposedly the oldest, but come on, what difference does a few minutes make? We're two sides of the same coin. Except that Olly is totally adept at being an adult. While I... I pretend. Sometimes I fool even myself.\n\nBut I only feel whole when he's there.\n\nSo, unexpected surprises like this really are like all my Christmases have come at once, and I use them to their full advantage.\n\n.:.\n\n\"You got back now, I take it,\" I asked, eyeing his duffel bag and ragged backpack.\n\n\"Landed at CT International a short while ago, retrieved my car, drove straight here to abuse the shower and the pool.\"\n\n\"Mum and Dad are away; we have the run of the place.\"\n\n\"Excellent. Holiday part two, fight!\"\n\n\"Yeah, yeah, go shower, you reek of other people.\"\n\nHe snorted, and stripped off his shirt to fling it at me. I screeched, ducked, and he disappeared upstairs, laughing.\n\nI kicked his shirt into the corner by the washing machine and straightened my pony tail. Then I broke out the coffee and plunger and boiled the kettle to make us both a cup; I could see my twin was struggling from lack of sleep - he was too tall to sit comfortably in any economy class airline seat, and even when he could stretch out his legs, he'd be awake most of the flight.\n\nIf we flew together, though, I always slept like a baby, drooling quietly on his shoulder from shortly after takeoff to shortly before breakfast in the morning.\n\nI sat in the armchair by the sliding door, in the breeze but out of the sun, enjoying the kiss of the wind on my skin and the goosebumps it raised. I wondered how long he planned to stay this time; whether this was a whistle stop or whether he'd stick around for a few weeks and enjoy the long, hot days with me for a while. \n\nThe sea is my chapel, but Olly is my pantheon. When I'm happy, when I'm sad, when I need divine intervention, when I need my best friend - Olly is who I call. \n\nAnd he always answers. \n\n.:.\n\n\"Coffee, sahib,\" I murmured, fluttering my eyelashes. \n\n\"Stop it,\" he laughed. \"You're my sister, not my body slave.\"\n\n\"Play-acting amuses me at times,\" I retorted, sticking out my tongue for good measure.\n\nHe smiled at me. \"I missed you, Shan.\"\n\n\"Missed you too, Olly. How was Tirol?\"\n\n\"Too hot. We didn't get much snowfall so I spent a lot of time sunbathing. The Italians there were telling me it's the hottest winter they've had in a couple of years. We had one or two good powder days and the pistes were OK early in the morning, but it was so busy that by mid morning we were down to ice on the lower slopes. Ice and moguls.\"\n\n\"Ugh,\" I sympathised. \"Unpleasant snowboarding conditions.\"\n\n\"Yeah. I was on skis after the first day, easier.\"\n\n\"Show-off.\"\n\n\"Nah, it was more about not killing myself by digging the edge of a board into a mogul and slamming myself face-first into rocks.\"\n\nI yawned and stretched. \"I'd love to go skiing again. It's been years.\"\n\n\"You should have come with this time, it was a good crowd.\"\n\n\"Mm. Timetable clashed. I'll make do with the ocean this year I guess.\"\n\n\"You go paddling this morning, then?\" he asked.\n\n\"Same old, same old.\"\n\n\"How was the surf?\"\n\n\"Reasonable till the tide came in.\"\n\n\"Maybe I'll join you tomorrow,\" he said, sipping his coffee.\n\n\"Maybe you should,\" I answered, softly.\n\nI stood and stretched again, then touched his shoulder gently. \"I'm going back into the water, the weather is too good to miss.\"\n\n\"Shall we head down to the beach later for sundowners?\"\n\nI draped my towel over my shoulder and glanced back at him. \"That sounds like a great idea. It's a date. Go sleep, you look broken.\"\n\n\"I will now, just finishing my coffee.\"\n\n\"See you later, Olly.\"\n\n\"Later, Shan.\"\n\n.:.\n\nI ducked under the surface and pushed off the wall of the pool, gliding slowly towards the far side, watching the small whorls of bubbles I trailed in my wake. I touched the far wall, spun, and pushed off again, my hair trailing like spiderwebs over my shoulders and neck. I surfaced and floated a while, gently moving my hands and feet, keeping myself centred in the pool against the current of the filtration system and water feature's cascade. \n\nI thought about myself, about my life. About the statistics degree I was pursuing without real conviction; about my low levels of give-a-fuck towards most things in modern life. I wondered, briefly, at what point I'd become so broken. I took a breath, submerging again, turning a somersault, two, three, before coming back to the surface once more.\n\nIt wasn't trauma. There was no abuse in my childhood; nothing had been done to me. I'd just... never fitted right into the world and the world's view of me. A tall, slender blonde girl who shows no interest in men earns herself some foul epithets in day to day life. I had guy friends and girl friends, but that was all they were; bar some senior school experimentation with a boy or three and a memorable evening with a girl in first-year, I'd stayed pretty much uninvolved. \n\nDitto for other real life things. I fiercely loved paddling, enjoyed socialising with my friends, but had few other real interests outside books, the occasional computer game and movie, and the ocean.\n\nIf only I could somehow make a life out of being an itinerant ocean-going bookworm... I snorted, amused at myself, and dived again, then drifted to the side, and with a leap upwards lifted myself clear of the water and onto the paving stones. I gathered my legs under myself and rose to my feet. The sun was starting to burn and, while I worshipped my tan, I worshipped my lack of wrinkles and moles more.\n\nI dried off the worst of the water, clambered up the long tiled staircase, and popped my head into Olly's room to check on him. He was asleep, and I smiled to myself. I stripped in the bathroom, towelled myself quickly dry, pulled on some sleeping shorts and a tee-shirt, then slipped back into his room. I slowly, gently lowered myself onto his futon next to him, and rolled over so that I could watch him breathing.\n\n.:.\n\nI woke up wrapped up in a fluffy throw, with Oliver reading beside me.\n\n\"I forget how sneaky you can be,\" he observed when he noticed me stir.\n\n\"I missed you, and you looked so peaceful asleep that I thought I'd join you,\" I yawned.\n\n\"Mm. Well. We're probably going to miss the sunset now.\"\n\n\"We can watch it from the deck,\" I said, stretching, languid. \"The beach will still be there tomorrow,\" I added.\n\n\"Lazybones.\"\n\n\"It's summer. It's holiday. Fuck the world. I'm having some delicious, well-deserved me time.\"\n\nOlly snorted, but didn't disagree with my sentiment. He put his book aside and sat up, cross-legged. \"How long are you here for, Shan?\" \n\n\"At least the next week, maybe longer. My flat echoes; home doesn't.\"\n\n\"Funny that, I'd rattle around like a pea in a can if I was here alone.\"\n\n\"You don't spend as much time here as I do.\" I rolled onto my back, then sat up. \"Scavenge more off mum and dad and you'll fit right in here as well,\" I added, grinning.\n\n\"Parasite,\" he smiled.\n\n\"Symbiote,\" I corrected him. \"I provide them with amusement and excitement, and they keep me watered and fed.\"\n\n\"Uh huh. Speaking of... do you have plans for dinner?\"\n\n\"None. Why?\"\n\n\"Well, there's not much wind so we could always fire up the Weber and cook something.\"\n\n\"Does alcohol figure into this plan?\"\n\n\"Is the Pope Catholic?\" he asked.\n\n\"Mm. Deal. Olly?\"\n\n\"Yeah?\"\n\nI leaned in and hugged him. \"I'm glad you're home. Next time, take me with.\"\n\nHe squeezed me to him. \"Deal, Shannon.\" He rose smoothly to his feet and reached down, offering me his hand. I smiled, took it, and followed him downstairs.\n\n\"You got yourself quite a tan in Italy.\"\n\n\"As I said. It was so hot I was running around in a tee-shirt half the time. It was amazing. Lots of good looking women in tight shirts on the slopes. Usually they'd be camouflaged. I enjoyed myself.\"\n\n\"Slut,\" I teased.\n\n\"Guy,\" he corrected me, laughing. \"Can't blame me.\"\n\n\"Can. Shall,\" I retorted, touching his shoulder to let him know I was kidding.\n\n.:.\n\n\"Your wine,\" he said as he placed a glass next to me. \n\nI smiled thanks up at him. \"Chenin Blanc?\"\n\n\"No, Sav Blanc. I'm cooking fish. Snoek in apricot.\"\n\n\"Mm. That sounds nice. Been a while since I ate that.\"\n\n\"You're just too lazy to cook it for yourself, Shan. Let's admit the truth.\"\n\n\"I like having a personal chef,\" I protested - Olly sipped his own wine, and shook his head. \n\n\"You're getting skinny,\" he added. \"Don't go to far, Shan. Don't turn from slender to skeletal.\"\n\n\"Or else?\"\n\n\"Or else I'll tie you down and force-feed you ice cream.\"\n\n\"Yes, master,\" I slurred.\n\n\"Don't do that, Shannon,\" Olly growled. \"Don't fuck with your body - you're stunning and healthy. Don't chase the unhealthy ideal.\"\n\nI blinked up at him. \"I'm not chasing anything, Oliver. I just... sometimes forget to eat.\"\n\nHe glared at me over his wineglass. \"Nobody forgets to eat.\"\n\n\"I do, sometimes. Sometimes... I'm so wrapped up in my book or in watching the sea...\"\n\n\"Uh huh.\"\n\nHe shifted his deck chair closer to mine, set his glass down next to it, and lay back, looking upwards into the early evening sky.\n\n\"What's up with you?\" I asked. \"You don't usually abuse me like this.\"\n\nHe sighed. \"You worry me, Shan.\"\n\n\"Me?\"\n\nHe turned his head to watch me. \"Yeah, you. I worry about you when I'm not around to look after you. I don't think you take good enough care of yourself.\"\n\n\"I get exercise and sun and I haven't managed to croak yet.\"\n\n\"Mm,\" he answered, eyebrow raised.\n\nI reached out; rested my left hand gently on his right shoulder. After a moment, he covered it with his own.\n\n\"I'm OK, Oliver.\"\n\n\"It's the just OK bit that I worry about, Shan.\"\n\nI smiled wistfully. \"You can't protect me from everything, Olly.\"\n\n\"I'll stop trying when I'm dead.\"\n\nI glanced away, warmed by his concern. \"So tell me about your conquests in Europe.\" I sipped my wine; a delicious, dry white.\n\n\"There's not much to tell,\" he responded. \"Lots of pretty girls but nobody I'd bring home with me.\"\n\n\"Hah. I'm sure you had a... dalliance or two.\"\n\nHe shot me a strange look. \"Actually... no. I kissed a girl, but it didn't feel right so I didn't take it further.\"\n\n\"Oh come on, Olly,\" I laughed. \"They must have been all over a hunk like you.\"\n\n\"European men are good looking,\" he answered, shrugging. \"They're immune to tall blonds.\"\n\n\"Poor, neglected thing,\" I sympathised.\n\n\"I survived,\" he retorted, grinning.\n\n\"Mm. Ah well, there goes that vicarious gossip. I guess we're down to discussing the weather.\"\n\n\"Moist and sticky.\" \n\n\"Now you're just being foul.\"\n\nHe waved an arm vaguely. \"Pot, kettle.\"\n\n\"Touche.\"\n\nWe watched Venus appear over the mountain. Gulls, Hadedahs and the odd bat flitted over, and I enjoyed the soft soughing rattle of the bluegum's leaves as the breeze picked up. A zephyr stirred ripples on the mirror-smooth surface of the pool. \n\nI took a breath, sighed it out.\n\n\"Time to light the fire, I think.\"\n\n\"On it like a bad rash,\" he answered, standing.\n\n.:.\n\n\"Fish will be ready shortly, Shan.\"\n\n\"OK,\" I called out from the kitchen. \"Potatoes are done, just doing the tomatoes.\"\n\n\"Bring some more wine with you, will you?\"\n\n\"Sure thing. Which Sav Blanc was it?\"\n\n\"Klein Constantia. Top right of the small rack. There's at least one more there.\"\n\n\"Got it.\"\n\nI carried the food, cutlery and wine out and set it down on the deck table. Oliver picked up the foil packet containing the fish and set it down on the baking tray I held. We sat down next to one-another on the cushion-covered bench, and he poured a fresh glass of wine for me.\n\n\"Welcome home, Olly,\" I said softly, raising my glass to him.\n\n\"Good to be home, Shan,\" he answered, clinking his glass to mine. \"Home is where the heart is after all.\"\n\n\"Indeed. The fish smells lovely, thank you.\"\n\n\"Spuds are nice,\" he returned. \"Thanks for organising them.\"\n\n\"No problem. They're easy. Fish is hard.\"\n\nWe ate quietly, and I enjoyed the comforting sense of his proximity to me. Our shoulders bumped occasionally, and at one point he gave me a long, level look.\n\n\"What?\" I growled, suspicious.\n\n\"Glad to see you eating is all.\"\n\n\"Oh, Olly. I promise I'm not starving myself.\"\n\n\"Can't blame a big brother for worrying about his baby sister, Shan.\"\n\n\"You're older by a few minutes.\"\n\n\"Still technically true.\"\n\nI grinned, and laid my head against his shoulder. \"Goody two-shoes.\"\n\n\"Unabashedly.\"\n\nI grabbed our plates once we were done, and carried them through to the kitchen where I quickly rinsed and stacked them for later. Olly recharged our glasses and fetched me a light thermal blanket. \"Wind's getting up and cloud's rolling down over the mountain,\" he answered my unspoken question. \"I know how you feel the cold, Shan.\"\n\n\"Thanks, babe,\" I replied, and he laughed.\n\nThe evening was my favourite kind. Wind, clouds, deep ultramarine at the zenith fading to dusky pink towards the west. Slowly the stars of the southern sky came out - Sirius, Castor, Pollux, Rigel in Orion, the Pleiades. Bats and the occasional owl darted through the circle of light cast by our windows, and I could hear Olly breathing.\n\n\"I don't look up enough,\" he sighed after some time.\n\n\"I never stop.\"\n\n\"I know.\"\n\n\"I want to go up north, Olly. Somewhere dark, away from city lights.\"\n\n\"So do it.\"\n\n\"Not alone.\"\n\nHe smiled over at me. \"Like I'd let you go have fun by yourself.\"\n\n\"Promises, promises,\" I whispered; he didn't answer, but he reached out to squeeze my hand. I took a small breath, puzzled by the strange sense of dizziness I felt, before brushing it off as the effect of the wine.",
        ".:.\n\n\"Gonna shower,\" I said. \"Feeling woozy.\"\n\n\"Sun, insufficient food, too much wine. Told ya,\" he observed.\n\n\"Uh huh. Olly?\"\n\n\"Yeah?\"\n\n\"Seriously, I think I need some help getting upstairs.\"\n\nHe was by my side immediately, concerned. \"Shan, you OK?\"\n\n\"Feeling light-headed. Just a bit, but don't particularly want to fall downstairs and bleed everywhere again.\"\n\n\"Once was enough, thanks,\" he grumped, and I laughed at the memory of my tumble at age seventeen and the drama it had orchestrated. \n\n\"It could be exciting. Think of the ambulance ride, the emergency room, the new and interesting people,\" I teased him.\n\n\"Can it, Shannon. Seriously, not funny.\"\n\n\"Spoilsport.\"\n\n\"Take my arm, you crazy wench,\" he said, exasperated but grinning in spite of it.\n\n\"You say the most flattering things,\" I laughed, but I was grateful for his solid presence beside me as we climbed upstairs.\n\n\"I'll be OK from here. Thanks.\" I hugged him; kissed him gently on the cheek. \"My hero.\"\n\n\"Call me if you feel dizzy, OK?\"\n\n\"Will do. I'll leave the bathroom door open. No peeking.\"\n\nOlly shook his head and stalked off downstairs; I leaned against the wall and watched him for a moment. Then I stepped into the bathroom and cranked open the shower. As the room heated up I loosened my hair, then I stripped out of my clothes and folded them over the towel rail for afterwards. I stepped into the shower and let the hot water sluice over me. I reached for the soap, intending to wash myself.\n\nBut something was wrong. \n\nI watched the water, confused. Sparkles of light danced in my vision, and before I knew it I was slumped on the shower floor, water spraying in my face.\n\n\"Olly... Olly... OLLY!\" I screamed. I heard footsteps pounding up the stairs, and he appeared in the doorway.\n\n\"Jesus Christ!\"\n\n\"Help,\" I cried.\n\nHe lunged into the shower, turned off the water and got his arms under my shoulders. He dragged me out into the bathroom proper and wrapped me in a towel, then held me to him.\n\n\"Shannon, Shannon, talk to me. Talk to me, sis.\"\n\n\"OK... I'm OK...\" I gulped. \"Fuck... fuck, Olly, I have no idea what happened.\"\n\n\"Did you hit your head?\"\n\n\"Don't think so.\"\n\n\"Think it was the heat?\"\n\n\"Think so.\"\n\n\"OK. Let me get your clothes.\"\n\n\"No,\" I cried, clinging. \"No, no, no, don't go, please, please just hold me...\"\n\nHe wrapped his wiry arms around me and cradled my head against his chest, rocking slowly back and forth. \"Shh, shh, Shan, shh, you're OK... you're OK...\"\n\nIt was some time before I'd let him go. \n\n.:.\n\nHe slipped my arm behind his neck, and lifted me into his arms, my face nestled into his neck. He carried me, silent, down the hallway to my room, where he put me gently down on my bed. \"Shift,\" he whispered, and as I did he pulled aside my crumpled duvet and sheet for me, then pulled them over. He sat, staring down at me.\n\n\"What?\" I asked, tired.\n\n\"Waiting for my heart to start again,\" he answered, softly. \"Haven't been that scared in a while, Shan.\"\n\n\"Sorry. Sorry for scaring you like that.\"\n\n\"You have to take better care of yourself, Shan. You have to. Do it for me if you can't do it for yourself.\"\n\n\"Olly, please. It wasn't intentional. I just forgot to eat lunch, and I've had a busy day and too much sun.\"\n\n\"Mm. Well. I'm going to drag my futon in here so I'm within reach.\"\n\n\"Olly, don't be daft. It's a double bed, there's space enough for you in it.\"\n\n\"It's your bed, Shan.\"\n\n\"And I'm saying there's space in it for you. Olly... that frightened the fuck out of me. I'd... I'd really appreciate it if you were close enough to touch, tonight.\" I swallowed. \n\nHe nodded. \"I'll be with you shortly, OK, Shan? Just going to wash the smoke off me and get my PJ's.\"\n\n\"I'm not going anywhere,\" I replied, shivering. \"Please be quick though, I don't feel well.\"\n\nOlly was true to his word; I'm sure he was exhausted and would have loved a proper bath or shower, but he was back in under five minutes, wearing his tatty old linen sleeping trousers and carrying two bottles of water. I wriggled over and he slipped under the covers. \n\n\"Well, this brings back memories,\" I observed after a brief silence.\n\nHe snorted. \"Bit different at our age than when we were twelve, Shan.\"\n\n\"Not really. You're still my best friend and my best slave,\" I smiled.\n\n\"I'm going to be staying a while,\" he said, apropos of nothing.\n\n\"Why?\"\n\n\"To make sure you're well.\"\n\n\"Olly,\" I protested.\n\n\"Stow it, Shannon. I'm bigger, uglier and a metric fuckton more stubborn than you are.\"\n\n\"Well... I wasn't going to protest much, you know. It's nice to be around you again, and I won't say no to you being around more.\"\n\n\"Mm.\"\n\nI rolled away. \"Night, Olly. Love you.\"\n\n\"Love you too, Shan. Sleep now. Wake me if you need me.\"\n\n.:.\n\nSomething did wake me; some subtle strangeness. I lay, eyes closed, listening, trying to work out what it was. \n\nOlly's breathing was odd; it sounded slow and deep, different. And there was something else; the soft rasp of moving fabric.\n\nI rolled onto my back, faked a sleepy murmur, and then lay, silent as the grave, listening. Olly took a soft breath, and I felt him shift alongside me. I waited, curious, and after some time I felt him moving again. Strange, rhythmic sub-vocal sounds, the rustle of fabric... I turned my head slightly, opening my eye a sliver.\n\nHe lay next to me, on his back, eyes closed, right arm moving gently under the covers. I suddenly realised what he was doing, and the shock nearly made me call out. Somehow I didn't. Instead, I lay there, heart thumping, listening to him as he slowly stroked himself. He shifted a leg slightly, arched a bit, and a bit more. The note of his breathing deepened. Then, he stopped, turned his head towards me; watching me for a moment before he slipped out from under the duvet and snuck out of my room. The bathroom door clicked softly closed.\n\nI let out a shuddering breath, and squeezed my legs together as I realised how aroused I was. I slipped my hand under the waistband of my pyjamas and snuck a finger down to myself, over the short-stubble of my shaven mons to my slick, tingling lips and clit.\n\nI stroked my index finger along my slit, feeling the damp heat of my entrance against my fingertip. I hadn't masturbated in a long while; but the need to do so had taken hold of me. Hardly thinking of the possibility of being caught out, I started to touch and caress my clit with my right hand while I slowly worked my left index and middle fingers into myself. \n\nMy vagina spasmed tightly down on me and I whimpered - it had been an age since I'd felt more than a passing, peripheral need, and this, this aching urge, was something I'd almost forgotten. \n\nI teased around my clit, thinking of Olly touching himself, lying in bed next to me, hard and throbbing. I opened my legs, pushed into myself, spread myself, arching backwards, lifting myself up off the bed as I ground down against my hand. \n\nI visualised Olly, imagined him hunched over, cock in hand, thrusting and stroking himself to climax, and I stepped up the tempo of my play; urgent now, desperate in my need to finish before he came back, because I knew that if he came back before I found release I'd never be able to sleep.\n\nI felt my pussy throb once, then again. I gasped a quick breath. I drove my fingers hard into myself, arching my hips up against my hand for extra depth. I struggled for another breath, then another as I pressed and teased my fingertips against the front of my vagina. \n\nI felt myself rising, rising, plateauing... and then, just as I heard the sound of the toilet flushing I managed to drive myself over, curling my fingers over in me, spreading myself, groaning as my belly spasmed and my muscles contracted on my slick fingers. \n\n\"Oh, oh, oh...\"\n\nI bit my lip, trying to muffle myself, trying not to give myself away. \n\nSlowly the spasms subsided; slowly I unwound myself; took a shuddering breath. \n\nFootsteps in the passage.\n\nI barely had time to pull out before he slipped back into the room. I lay still, heart hammering, as Olly climbed slowly back under the covers. I paused, silent, for a moment - then I rolled onto my side, away from him, and sighed softly, pretending to be asleep. \n\n\"Shannon?\" he whispered; I didn't answer, and that seemed to satisfy him, because he gently wrapped his arm around me, and pulled himself in until we were spooning.\n\nThe sensation of his slowly softening cock against me kept me awake and aching long after he'd begun to gently snore.\n\n.:.\n\n\"Good morning,\" came the quiet whisper, and I rolled over, brushing the sleep out of my eyes.\n\n\"Hi,\" I smiled, groggy.\n\n\"I've got breakfast on the go downstairs,\" he said. He stroked my fringe gently out of my eyes. \"How are you feeling?\"\n\n\"Tired,\" I yawned. \"Strangely so.\"\n\n\"You were a bit restless last night. Think your body was letting you know it was unhappy.\"\n\n\"I dreamed someone was spooning me. Was that you?\"\n\n\"Guilty as charged,\" he said, blushing. I pretended not to notice.\n\n\"It was nice. I felt warm and safe.\"\n\n\"You were. You able to stand?\"\n\n\"Yeah. I feel OK. Not dizzy... just... wrung out, you know.\"\n\n\"Yeah.\"\n\nI pulled back the duvet, and Olly helped me stand. \"You want some clean clothes?\" he asked, and I shook my head. \"These are OK, thanks.\"\n\n\"Shan... um... you need a bra,\" he offered, blushing more.\n\nI glanced down, saw my hard nipples showing through the thin cotton of my top, and laughed. \"Olly, I'm sure you've seen girls smuggling smarties before. It's nice to not be constricted all the time. But if it bugs you I'll put something on.\"\n\n\"No, no,\" he protested, \"I don't mind.\"\n\n\"I'm sure,\" I grinned.\n\n\"I surrender. Come. Take my arm.\"\n\nOlly led me downstairs and sat me down at the kitchen table. \"Here,\" he said, putting a small plate of bacon and scrambled eggs in front of me.\n\n\"Wow. This is a luxury,\" I said, glancing up at him. \"What did I do to deserve this?\"\n\n\"Scared me to death.\"\n\n\"Are we still on this?\"\n\n\"We're going to be on this till I'm sure you're OK, Shan. Eat your bacon,\" he added. \n\nI watched him for a moment.\n\n\"Are you coming to join me?\"\n\nHe put his own plate down and sat down next to me. \"Happy?\"\n\n\"Deliriously so,\" I teased. \"Thanks, Olly. You know my buttons.\"\n\nHe coughed on his toast, and I grinned to myself, deciding that I liked this new power I had to destabilise him.\n\nI snuck glances at him as I ate, watching him, watching the way he in turn snuck glances at me. Thoughts of last night came back to me, and I dallied with a slice of toast, staring out the window.\n\nHe'd been playing with himself. Masturbating in bed, next to me. And the knowledge had aroused me almost beyond my ability to control myself. I was curious what had driven him to do that; Oliver is a private boy; the thought of him fooling around somewhere where discovery was a possibility didn't sit well in my mental map of him. \n\nHe quietly washed up the breakfast dishes and the shrapnel from the prior night, while I sat, nursed a cup of coffee and watched him. And as I watched I pondered, and as I pondered I started to consider how to get inside his head; how to uncover what had possessed him last night. \n\nI wanted to fuck with his head in the way he'd just so thoroughly fucked with mine.\n\n.:.\n\nI dug out some short, tight white cotton pants and a thin baby blue vest. To them I added a white bikini top. I tried to avoid my eyes in the mirror as I dressed, rationalising it away as simply a fishing expedition. \n\nBut under the platitudes, I burned. Having him masturbating next to me, in my bed, had lit a fire inside me that had been banished for a long time. Sex is something for other people; I've never had much luck with it, and the occasional urge I do feel can be dealt with with a vibrator or my fingers. \n\nThis, however... I couldn't remember this aching before. This consuming need to touch myself. To be touched.\n\nI shed my sleeping clothes and snuck a brief, pensive look at myself. My ribs were showing more. I struggled into my bikini top, then pulled on the white linen shorts, briefly enjoying the sensation of the seam against my bare lips. I pulled on the vest, grinning at the way it accentuated the flatness of my stomach and the curve of my breasts. \n\nFinally, I tied my hair up into a ponytail with a baby-blue hairband. The effect was everything I'd hoped it would be.\n\nI held tightly to the rail as I walked downstairs, and didn't miss the way he froze and stared for a moment.\n\n\"It's a lovely day,\" I said, stretching my arms above my head. \"What do you feel like doing with it?\"\n\nHe cleared his throat. \"How about we lurk?\"\n\n\"More wine, more sun?\"\n\n\"Books and the umbrella maybe? We could set up the deck chairs in the shady corner.\"\n\n\"Mm. That sounds nice.\" I sauntered over to him, then turned side-on to stare out the window. \"It looks like the wind will blow later.\"\n\n\"Later is later,\" he said, softly. I glanced down at him; his expression was strange, almost intense, and I felt a zing deep in me as I realised that he was trying to fight down the urge to stare.\n\n.:.\n\nHe dragged the deck chairs over into the shade, and set up the big canvas umbrella to give us more screening. I noticed he'd set the chairs up next to one-another but elected not to point it out. Instead, I sat, trailing my feet in the water and listened to the birds.\n\n\"The lurk spot is ready, mistress,\" he said, bowing.\n\nI grinned up at him. \"Don't do that, I'll start expecting it. Help me up, will you?\"\n\nHe reached down, took my offered hand, waited till I'd lifted my feet and placed them, then pulled me smoothly to my feet. I stepped into him and wrapped my arms around him, squeezing myself against him. \"Thanks for last night. I was terrified after that.\"\n\n\"You and me both,\" he whispered, squeezing back. \"I had visions of 3am emergency room trips. Not fun.\"\n\n\"Mm. Well. Thanks for holding me during the night. I slept well.\"\n\n\"Don't mention it,\" he answered, and I smiled at the blush that spread over his neck. Oliver has no poker face, and I love him for it.\n\nI sat down on a deckchair, and tucked my legs up to the side as I leaned back. \"So.\"\n\n\"So,\" he agreed, sitting next to me.\n\n\"Tell me what you've been doing,\" I said softly.\n\n\"I thought this was lurk time.\"\n\n\"It is. But I haven't talked to you in what feels like ages, and I'm curious.\"\n\n\"Curious about what?\"\n\n\"How you are.\"\n\nHe glanced at me; I replied with a shrug. \"You know the state of my life, Olly. It doesn't change much.\"\n\n\"We need to get you a boyfriend.\"\n\n\"I need a boyfriend like I need a clit-piercing.\"\n\nHe choked on his coffee.\n\n\"I don't have one,\" I added. \"In case you were wondering.\"\n\n\"I wasn't. It's not something I'd ever wonder about,\" he coughed, slightly wild-eyed.\n\n\"Well, regardless, I don't need a boyfriend.\"\n\n\"Everybody needs someone, Shannon,\" he said softly. \"Even you.\"\n\nI stretched my arms up, clasping my hands behind my head. \"I need love, not distractions. Boyfriends come with drama, with the inevitable Oh-I-tripped-and-put-my-cock-in-her.\"\n\n\"You're still angry over that.\"\n\n\"Still? Always.\"\n\n\"He's done his time, Shannon. Maybe you should let it go.\"\n\n\"Why?\"\n\n\"Guys do stupid things when they're turned on.\"\n\nI eyed him. \"There's stupid and then there's fucking your best friend. Would you do that to a girl you said you loved, Olly?\"\n\nHe glanced away. \"No. No, I wouldn't. But not everyone has my iron will.\"\n\nI laughed. \"I've seen you unable to resist sweets for more than ten seconds.\"\n\n\"Sweets are different from spice.\"\n\n\"Spice?\"\n\n\"Sugar and spice and everything nice,\" he answered in the sing-song nursery rhyme of our youth.\n\n\"Slugs and snails and puppy dog tails,\" I echoed him, softly. \n\n\"I miss being a child,\" he said, after a while. \"It was easy.\"\n\n\"It was.\"\n\nHe finished his coffee and lay back.\n\n\"You still haven't answered my question,\" I said after a while.\n\n\"I'm single, if that's what you're digging for.\"\n\n\"Why? It's been, what, a year?\"\n\n\"Roughly.\"\n\n\"And there's been nobody in that time?\"\n\n\"Honestly? I had a one-nighter but it left me feeling so dirty I never want to do it again.\"\n\n\"What are you looking for?\"\n\n\"Excitement. Adventure. Mischief. A partner in crime.\"\n\n\"Sounds nice. Maybe you can find me one too.\"\n\nHe eyed me. \"You just need someone to fuck you silly once or twice.\"\n\nI blinked. \"You profane fucker. That's gross.\"\n\nHe grinned, and after a while I laughed at him. \"Yeah, fair enough, I guess you're right. I do need someone to fuck the fun into me.\" I shifted my leg slightly, and took a breath. \"It's been so long for me.\"\n\n\"How long?\"\n\n\"I stopped counting at three years.\"\n\n\"Three...\" he said, disbelieving. \"What the fuck?\"\n\nI sighed. \"Guys have it lucky. You get hard-on, you put it somewhere warm and moist, you come, you move on, probably without much introspection or self-doubt.\"\n\n\"Sometimes, maybe...\"\n\nI straightened my legs and pointed my toes. \"I can't do that. I can't let a stranger inside me.\"\n\n\"When you put it like that...\"\n\n\"It's a physical thing, Olly. I lock up. It's horrible. It hurts like hell.\"\n\n\"You're right, it's easier being a guy.\"\n\n\"Must be nice.\"\n\n\"It has its ups and downs.\"\n\nWe laughed at the pun, and I reached out to squeeze his shoulder. \"Sorry, didn't mean to get so intense with you.\"\n\n\"No, I... I like when you open up, Shan. You are too closed.\"\n\n\"This doesn't weird you out, does it?\"\n\n\"What?\"\n\n\"Talking sex with me,\" I said, softly.\n\n\"I've had weirder conversations, Shan. You're my twin. You're my yin. I'd feel pretty shit if you didn't feel like you could talk to me.\"\n\n\"Yes, but...\"\n\n\"Shan, stow it.\"\n\n\"Yes, sahib.\"\n\nHe snorted back the laugh.\n\n.:.\n\nI leaned on the counter next to him, watching him work at the stove. Olly was an efficient, competent cook, and most of what he touched came out nicely. I tried to ignore the frequent glances he shot at me; I also tried to ignore the way he'd occasionally brush against me. Every time he did I felt electricity crawl up my legs, and it was becoming very difficult not to reciprocate. \n\nSomething was happening. Something about the night before was fucking with me in a big way. It was no longer just a fishing expedition for me; now I wanted to see how much I could get from him. Talking even briefly about sex with him had done things to me I could not understand; I'd been uncomfortably damp by the time we came inside to organise lunch.\n\nSo now, I teased myself and likely him as well; I knew how tight my pants were on my bum and my pose was chosen to make them ride up further. \n\nI found myself thinking about him, about his body. I wondered what he was like; and I flushed.. \n\n\"Sorry?\" I realised he'd asked a question.\n\n\"I said, can you get the vinegar?\"\n\n\"Sure.\" I stood, moved over to the corner cupboard, and bent to rummage.\n\n\"Got it,\" I said, straightening.\n\n\"Shit,\" he swore, snatching his hand back from the pan.\n\n\"OK?\"\n\n\"Yeah, splash of hot oil.\"\n\n\"Need ice?\"\n\n\"Yeah,\" he said, wincing. \"Please.\"\n\nI dug out the ice cubes, wrapped several in a wet dish towel, and then took his hand. I wrapped it in the dish towel, and then just held it; conscious of the goosebumps on my shoulders. I squeaked as he pulled me to him.\n\n\"Sorry you burned yourself,\" I managed after a moment of breathlessness.\n\n\"My own stupid fault, I should know better by now. It's not the first time.\"\n\nI pulled back the cloth and winced at the red burn mark. \"That's a nasty one.\"\n\n\"Bit more time in the ice and by tomorrow it will be a bad memory.\"\n\n\"Time heals all wounds.\"\n\n\"This coming from you?\"\n\n\"I didn't say I believed it.\"\n\n\"Shan?\"\n\n\"Yeah?\"\n\n\"I need my hand back.\"\n\n\"Oh? Oh, right. Sorry.\"\n",
        "I let go of his hand, stepped back, then climbed up onto the counter to watch him as he finished the cuts of steak off with balsamic glaze. \n\n\"You have the knack for it. I've never been able to cook fillet.\"\n\n\"Pan's got to be hot, and you need to have a good feel for the change in colour,\" he said, as he sprinkled Parmesan over mine. \"Inside or out?\" he added.\n\n\"Outside, of course. Why be indoors when the day is so lovely?\"\n\n\"True. Here. I'll grab the tray; you bring some wine.\"\n\n\"'Kay.\"\n\nI gathered up two glasses and a bottle of Pinot Noir and followed him to our outdoor table. Olly set a place for me, dished up the salad and then took up position opposite me. \n\n\"Cheers, Shannon.\"\n\n\"Happy Sunday, Olly.\"\n\n\"To many more,\" he said, clinking his glass to mine.\n\n.:.\n\nI slipped off my top and tossed it aside, then knifed into the water. I rolled, arched up to the surface, and then floated, eyes closed, enjoying the sun on my face.\n\nAfter a moment or two I felt ripples, and opened my eyes; Olly had joined me in the water. I smiled over at him. \"Took you long enough.\"\n\n\"I'm not an otter like you.\"\n\n\"Mm. Pity. Water's my element. Air's yours.\"\n\n\"This is the interface, then.\"\n\nHe turned onto his back and tried to float, but failed. I laughed at him. \"Still can't do it?\"\n\n\"I have dense bones,\" he grumbled.\n\n\"You don't have enough body fat.\"\n\n\"If one needed body fat in order to float, Shan, you'd sink like a stone.\"\n\n\"Girls have more than boys; fact.\"\n\n\"Maybe, but you're pretty light on spare weight.\"\n\n\"Is that your way of saying I look good or of accusing me of being anorexic?\"\n\n\"The former. With maybe a touch of the latter.\"\n\n\"Thanks for the almost-complement then.\"\n\n\"You're welcome,\" he grinned. \"Seriously, though, you must get a lot of attention these days.\"\n\n\"The wrong sort,\" I murmured. \"I'm tempted to buy one of those Victorian bathing costumes for next time I go to the beach.\"\n\n\"It won't help,\" he said. \"You'd need to wear a tent.\"\n\n\"I could arrange that.\"\n\nHe dipped under the water, and I felt him skim under me, barely touching. I listened to the ripples he made, the faint thud as he kicked off the far wall, and felt the turbulence of his return passage under me.\n\n\"Remember how we used to swim lengths?\" I asked, once he'd surfaced.\n\n\"You always won.\"\n\n\"It was nice to have something I was good at.\"\n\n\"You're good at a lot of things, Shan. You just don't believe much in yourself.\"\n\n\"You always were my best cheerleader.\"\n\n\"Someone has to do the job.\"\n\n.:.\n\nI reached for a towel and wrapped it around myself; a South-wester wind was building, blowing cloud over the top of the mountain, and the temperature had dropped several degrees. I suppressed a shiver. \"Sorry, Olly, it's getting too cold now.\"\n\n\"Yeah, I'll get out now too,\" he muttered. \"Gonna need a long-sleeved top soon at this rate.\"\n\n\"Going to shower,\" I called back to him over my shoulder. I walked indoors and climbed the stairs, grabbed a fresh towel from the linen cupboard, and then ducked into the bathroom. I turned on the tap, set the temperature just short of scalding, and closed the bathroom door. \n\nI waited for the water to heat up, then stripped out of my bikini top and the soaked pants and stepped into the cubicle. Cautious, I leaned against the wall, not wanting a repeat of the previous evening.\n\nAfter a short while I decided I would be OK. I reached up, letting the hot water sluice over my neck and shoulders, before I ran my fingers through my hair to work the pool's salt out of it. I reached for Olly's body wash, and gave myself a quick once-over to clean my skin. \n\nI didn't want to overheat, so I didn't spend long under the water; instead, after a brief soak I killed it and wrapped my fluffy blue towel around my midriff.\n\n\"Shower's yours,\" I called to Olly as I opened the bathroom door.\n\n\"Thanks, Shan,\" he replied from his room. I gave him a smile and a wave as I walked past his doorway; he was watching the clouds roll down the mountainside from his bedroom window. \n\nI towelled myself dry, then pulled on a pair of thin blue panties, some grey woollen tights and a white cotton thermal vest. I walked back down the passage, then stopped at the bathroom door. Olly had left it slightly ajar. Something drove me to step up to it, and I leaned against the door frame and stared through the slight gap. \n\nOlly was in the shower, water sluicing down over his body. I had a great view of his tanned back, legs and bum as he soaped himself and washed his body. I stood a moment, screened by the door, and watched him as he cleaned himself.\n\nThen my heart hammered in my chest and I felt strangely weak as he turned to face me and I saw him for the first time.\n\nI stepped guiltily back from the gap, scared he'd see me.\n\nI'd seen him in various stages of undress before but... for some reason this felt different. He looked... good. Muscular and lean. I'd always known, peripherally, that my brother had a great body, but seeing him nude in the shower took things to another level.\n\nI snuck back to the door, and watched, giddy as a sixteen year old, as Olly reached down to clean himself. I took a slow breath as I watched him cup his balls and stream shower water over himself. Then, almost idly, he took his penis in his hand and slowly stroked himself, leaning back against the wall of the shower cubicle as his cock swelled in his hand. \n\nI felt myself blushing, and after a moment more of voyeurism I slunk off. \"What the fuck, Shannon,\" I whispered to myself. But there was an ache deep inside me now, a dark heat, and I couldn't banish the naked image of him from my mind. I was desperately aroused.\n\nI calmed the lighheadedness with a glass of wine, and then closed the sliding door to the outside as the wind built. I sat in the leather armchair by the door, tucking my legs up under me again as I watched the clouds roll in. \n\nAnd as I sat I thought about Olly. About his fair-haired, muscular thighs. About his strong, wiry forearms. His calloused hands. The small scar on his chin from the hockey ball. His blue eyes. His smile. The dimple in the small of his back. The small neat and obviously trimmed patch of pubic hair around his ample cock. The slight bend in his shaft when he was erect. The broad head of his cock, and the way he'd tensed his six-pack as he played with himself.\n\nI was aching, soaking. I slipped a finger down under my leggings and moaned at the heat between my lips. I flushed, embarrassed, disgusted with myself over the cause of my arousal, and I clambered to my feet. It was one thing to fuck with him; this was something totally different, and I needed to bolt a lid down on it.\n\nSo I finished my glass of wine and tried to put my need out of my mind. I dug around under our fireplace for kindling; there was only a small amount of wood so I went to grab some logs from Dad's pile in the garage. I carried a couple of arm-fulls back up to the living area, and after some struggling I managed to get a small fire going. Then I refilled my wineglass and thought very hard about the wind.\n\nOliver came downstairs eventually in shorts and a long, tight running top. I handed him a glass of wine and tried to ignore the shape of his chest under his top as I took up my spot in front of the fireplace once more.\n\n\"You OK?\" he asked, after a moment.\n\n\"Yep, fine, all good,\" I bluffed.\n\n\"Uh huh. I know that pose. Something's bugging you.\"\n\n\"Nope, everything's peachy,\" I disagreed with a smile. \"One hundred percent good.\"\n\n\"Now I know you're fibbing.\"\n\nI shook my head but didn't answer immediately; Olly lowered himself to the floor next to me.\n\n\"What's up?\" he asked, gently.\n\nI sighed. \"Just... thinking.\"\n\n\"About?\"\n\n\"My fucked up libido, mainly.\"\n\nHe was silent a moment, and I glanced over at him. \"You asked, Olly.\"\n\n\"Yeah, I did,\" he agreed. \"What brought this on?\"\n\n\"Oh, a number of things... mostly I guess I was just mulling over our earlier conversation,\" I deflected. \"I guess I just realised that it's been more than three times round the sun since I last had a penis in me.\"\n\nHe frowned. \"I still find that hard to believe. You've dated guys these last few years.\"\n\n\"Dated yes, fucked no. Furthest I'd let them go was to suck them off or let them come on me.\"\n\n\"What happened to you, Shan? Did someone...\"\n\n\"Nope. No trauma. Just no... drive, I guess. I never felt the spark I need to get aroused enough for it to work for me.\"\n\n\"Have you talked to someone about it?\"\n\n\"Hi, mum, it's me, Shannon. I can't seem to let the guys I'm with put their cocks in me. Can I get some pointers, some advice?\"\n\nHe laughed, startled, and after a moment I joined in.\n\n\"Holy fuck, I can imagine how that conversation would go,\" he giggled.\n\n\"The look of horror. Oh god,\" I squealed, leaning forward, laughing. \"She'd die. She'd die of panic and mortification. Oh god,\" I took a deep breath. \"Thanks, Olly. Sometimes I forget how much you make me laugh.\"\n\nHe reached out to squeeze my knee. \"Don't mention it, Shan.\"\n\nI swallowed, looked away, sipped my wine, and tried to ignore the sparks that crawled where he'd touched me.\n\n.:.\n\nWe'd dragged blankets and pillows down onto the stone flagstones to make up a nest for ourselves in front of the fireplace. Orange light licked over and around us, and we'd started on the second bottle of red. \n\nOutside, the wind howled.\n\n\"So tell me about the one nighter,\" I asked, watching him.\n\n\"Why?\"\n\n\"Because I'm bored. Because... I'm curious. I can neither confirm nor deny that I have a bit of a voyeuristic streak in me.\"\n\n\"I'd never have guessed. I had you pegged at exhibitionism.\"\n\n\"Me?\"\n\n\"You,\" he answered, levelly. I didn't try to deny it. Instead I just grinned up at him.\n\n\"Stop that,\" he said, laughing.\n\nI grinned some more.\n\n\"Stop it. Stop it and I'll talk.\"\n\n\"Excellent,\" I cackled, settling back into our mound of pillows. \"Spill the juicy details.\"\n\n\"She was a year ahead of me. Doing engineering as well. Brilliant. Pretty hot too; she played hockey for the women's second team and I guess that's how we started talking.\"\n\n\"Fit?\"\n\n\"Reckon she could have run rings around me. She was trying to make the first eleven. She wanted hockey colours.\"\n\n\"Describe her.\"\n\n\"Five foot ten or so. Slender waist, but a sprinter's build. Pale blue eyes, brown hair with a wave to it. You know the look some Eastern European girls have? That face shape with the delicate jaw and big eyes?\"\n\n\"Uh huh.\"\n\n\"She had that in spades. Gorgeous. Funny. Interesting.\"\n\n\"So why didn't you date her?\"\n\n\"Batshit, bunny-boiling crazy. I only found this out after I'd done the deed.\"\n\nI laughed. \"Ouch.\"\n\n\"Yeah. I wish I'd known that before. Seriously, I considered changing Universities. She was... uncannily good at finding me.\"\n\n\"So what happened?\" I asked, propping myself up on an arm and watching his face.\n\n\"When?\"\n\n\"When you two shagged, dumbo.\"\n\n\"Um... Shan...\"\n\n\"You said it didn't weird you out to talk about this stuff,\" I said, quietly. \"This is me trying to be open, Olly.\"\n\nHe stared at me for a moment. \"OK. OK. You're right. Um...\" he hesitated. \"OK. So. We hit it off at a social evening. I'd noticed her around obviously, and I had a drink or two in me and decided to just go over and say hello. She was friendly, and open, I bought her a drink and we talked about our courses. \n\nWe danced a bit, drank a bit more. She was a nice height for me, and she had this way of looking up at me and smiling this small smile... well, one thing led to another and before I knew it it was 2am and we were walking hand in hand back to her rooms. She snuck me in, and we weren't even through the door before she had her top off.\"\n\n\"Fast mover,\" I breathed.\n\n\"Determined too. She grabbed my hands, put them on her, told me to use her.\"\n\n\"Use her?\"\n\n\"Her exact words. 'Use me.'\"\n\n\"Wow. Kinky.\"\n\n\"You have no idea...\"\n\n\"So spill the beans.\"\n\nHe took a sip of his wine, and coughed. \"OK. This bit might get... detailed. She... she wanted me to bite her breasts. Not hard... just...\"\n\n\"Love nibbles,\" I said, softly.\n\n\"I guess. I wasn't really complaining, her breasts were amazing. Perky little ones, great nipples... She smelled nice; clean. Before I knew it we were on her bed; she was on top of me, grinding her panties against me, arched forward so her breasts were close enough for me to nibble. And kiss. And suck.\"\n\nI squeezed my legs together, and bit my lip hard.\n\n\"Then, she had a hand in my pants, and was touching me, stroking me.\"\n\n\"Nice?\" I breathed, my mind conjuring up the image to taunt me.\n\n\"I hadn't been with anyone for a while, you do the math,\" he grinned. \"Yeah. Yeah, it was nice. She pulled me out. Then, before I knew what was happening, she was rubbing me against her pussy. She'd pulled her panties aside and basically just climbed on top of me like that; still in her skirt and me still pretty much fully clothed.\"\n\n\"Mm. Sounds like she couldn't wait. What was it like?\"\n\n\"She was incredibly tight. Very hot. Soaking wet. She was moaning before we'd been going at it for ten seconds...\"\n\n\"Lucky wench,\" I teased him. \"Must be nice to be wired like that.\"\n\n\"Apart from the batshit crazy bit.\"\n\n\"That was later. You're telling me about before.\" \n\n\"Um... I didn't last long. She... she gave me this look as I came, like, 'I'm not done with you'. And she wasn't. She rode me and fingered herself till she'd come, then she got off the bed and stripped. She stripped me. She sat down on my cock again, and... hot-dogged me...\"\n\n\"What?\" I said, in disbelief.\n\n\"Hot-dogging... it's like... it's when the girl rubs her pussy along the guys cock like it's a hot dog sausage?\"\n\nI fell backwards, laughing till I wheezed for breath. \n\nOlly gave me a disgusted look. \"Shut it, Shan. It's embarrassing enough; I don't need your mockery...\"\n\n\"Why's it embarrassing?\" I wheezed, chuckling. \"You sound like you got a great shag out of it.\"\n\n\"It's embarrassing telling you about it,\" he complained. \"You're my... you're the person whose opinion matters most to me.\"\n\n\"Olly,\" I managed, trying not to laugh any more. \"Olly, I'm not judging. I just found the image... hilarious. Hilarious, and... interesting,\" I added, grinning. \"I'll try that someday... that is... if I find someone I can let go long enough to do it to,\" I sighed. \n\n\"Sorry, Shan. Didn't mean to upset you.\"\n\n\"Ssh, it doesn't matter, we're talking about you,\" I interrupted. \"So... she was...\" I snorted, \"hot-dogging you... then what?\"\n\n\"Obviously I got hard again. She spun round, knelt down, and basically instructed me to fuck her doggy-style.\"\n\n\"And?\"\n\n\"I did. I lasted much longer. She didn't. I think her legs gave out in the end before I finally finished.\"\n\n\"Mm. Lucky slut,\" I breathed, conscious of the tingling of my own clit. \"Lucky you, too, to find one like that.\"\n\n\"Pity about the baggage. She seemed OK in the morning, kissed me goodbye and snuck me out before anyone else woke up. 2 hours of sleep broke me.\"\n\n\"Was she really that crazy? Or just lonely?\" I mused.\n\n\"Crazy, desperate, I don't know. She freaked me the fuck out and I didn't ever really speak to her again. She left the end of that year.\"\n\n\"Regrets?\" I asked him, softly.\n\n\"I... feel guilty for not saying goodbye to her, I guess.\"\n\nI leaned in, rested my head on his shoulder. \"You're a sweet boy, Oliver.\"\n\n\"Sometimes,\" he sighed. \"I regret how cold I was to her. But... I was younger and stupider and honestly not ready for anything intense.\"\n\n\"Mhmm. Intense can take its toll,\" I agreed, closing my eyes. He wrapped an arm around me, pulled me closer; I wriggled slightly.\n\n\"You look tired and sad, Shan. What's on your mind?\"\n\n\"Just... wishing, I guess.\"\n\n\"Wishing?\"\n\n\"For the experiences you've had. Mine have been slim pickings. Best sex I had was from a girl...\"\n\n\"Whoa, whoa, whoa. Back up a bit. A girl?\"\n\n\"I licked some carpet once, Olly, it's nothing major.\"\n\n\"Wow... I just... Shan, that's something I honestly never thought I'd hear come out of your mouth.\"\n\n\"I was lonely, she was nice... match made in heaven, really.\"\n\n\"Are you...\"\n\nI laughed. \"No, no Olly. When I'm anything it's penetration I want, not clit... well, mostly anyway. But... variety is the spice of life.\"\n\nI watched him shaking his head, amused at the effect it had had on him. \"Shall I tell you about it?\"\n\n\"No, please don't tell me about the time you shagged a girl... of course I want to hear about it, what the fuck,\" he yelled, laughing.\n\nI snorted. \"Typical guy.\"\n\n\"Shan, when a hot girl says she's got lesbian tendencies... that's right up there in the top three of every guys' fantasy list.\"\n\n\"Hot girl?\"\n\nHe thumped the back of my head. \"Don't act dumb, it demeans you.\"\n\n\"I think I'm attractive, not hot, Olly.\"\n\n\"Shannon,\" he said. I glanced up at him, then away, disturbed by the intensity of his expression. \"Don't belittle yourself.\"\n\nI shrugged, flushing. \n\nOlly pulled me in and touched his forehead to my temple for a moment.\n\nI let out a small, shuddering breath and waited for the shivers to pass.\n\n.:.\n\nThe fire hissed and cracked; golden sparks chased one-another up into the flue, and the logs jetted out whorls of smoke as they burned. Ollie sat, and I lay on my side, watching the firelight playing on his face.\n\n\"So?\" he probed, gently.\n\nI took a breath. \"I guess this is about the girl.\"\n\n\"It's a miracle, she's a mind reader.\"\n\n\"Sarcasm doesn't suit you, Olly.\"\n\n\"Yeah yeah.\" He waved his hand. \"I hear that a lot.\"\n\nI lay still a moment, remembering. \n\n\"It was a dark and stormy night,\" I began.\n\n\"Oh, for fuck sakes,\" he said in disgust.\n\n\"Olly, I'm serious. It was a dark and stormy night. It was winter. July. She and I were studying in the library, or at least, trying to. The wind was howling, it was hard to concentrate because other buildings kept losing roof tiles and the bins outside were blowing around and crashing into walls.\"\n\n\"Uh huh. Less scene setting, more action.\"\n\nI snorted. \"Fine. The library was closing and her room was closer than the car park; when she saw me packing up she offered me some tea and a warm place to hide while I waited for the worst of the weather to pass. We dashed across the quad to her residence and were both completely soaked before we'd got halfway there.\"\n\n\"It was mad... it was... exhilarating. The wind. The rain. The noise. I felt so alive in that moment. She was holding my hand; I can remember the feel of her fingers in mine, the way she laughed as we ducked into the entrance hall of her residence. Our bags, our clothes - totally soaked too. Her hair, plastered to her face, and the grin she gave me as she brushed it out of her eyes.\"\n\n\"She let me into her room and handed me a towel and a dressing gown, then dried herself off; she didn't seem self-conscious when she stripped to change. It... she captivated me. She was tall... almost as tall as me. She had this amazing flame-red hair. And she had these unbelievable legs... \"\n\n\"She was flushed from the run and the cold air. She caught me staring, and... and she turned to face me, smiled, and asked if I liked the view.\"\n\n\"You clearly did.\"\n\n\"I stammered out some apology. I can still remember the sound of her laughter. The way she sauntered over to me, without a stitch on; the way she leaned forward... she had these lovely, lovely small breasts, delicate pink nipples... and this scent. Oh god, Olly,\" I added with a small shudder. \"I wish I could have bottled that. She sat on my lap, lifted my chin gently, and then just kissed me.\"\n\n\"Wow,\" he breathed. \"Oh god, that sounds hot.\"\n\n\"You just simply... Olly, words just don't do the feeling justice. You know that trite phrase, 'She took my breath away\"'\"\n\n\"Mm, I've heard it...\"",
        "\"She took my breath away, Olly. She kissed me for what was probably just a breath or two, and left me panting, shivering, actually unable to string words together. I think she felt sorry for me, because she backed off slightly and made me a cup of tea, and spent a good bit of time talking me down and making sure I was OK... She gave me lots of outs. I didn't take any of them. She had me hook, line and sinker and I think part of me was glad.\"\n\n\"So it was good?\"\n\n\"So good it still makes me curl my toes, four years later.\"\n\n\"Hah. Need some privacy?\"\n\n\"Later, maybe,\" I taunted him.\n\n\"And?\" \n\n\"A lady never tells,\" I demurred.\n\n\"Shannon!\"\n\n\"Nuh uh. Some things are for me alone,\" I replied. \"It was only the once. If things had been different maybe it would have been something more, but she met someone shortly afterwards.\" I took a breath, remembering. \"I was... bitterly upset. I think that, had she not, I might have...\"\n\n\"Might have what?\"\n\nI met his eyes, then glanced down at my wine. \"Fallen.\"\n\n\"I thought you said...\"\n\n\"Olly. For me... honestly... it's the person I want against me... not the body they happen to wear. She was... special. I felt something. I...\"\n\n\"You what,\" he prodded, gently.\n\n\"I would have liked to have had a chance to see where it led,\" I sighed. \"I would have liked a chance at happiness.\"\n\nHe said nothing; there was nothing he could say.\n\n\"Whoo,\" I said, after a while. \"That's woken me up. I need some air.\"\n\n\"I'll get us some more wine.\"\n\n\"Decent stuff, please, no tramp juice. If I'm going to suffer a hang-over I'd at least like to earn it.\"\n\n.:.\n\nI slid the door back on its tracks, and walked out into the howling wind, stopping at the edge of the paving stones where the grass plunged to the fence at the bottom of the garden. Dust and leaves stung my legs, and the long raking arms of the bluegums clawed at the night sky.\n\nShelley. \n\nIt had been months since I'd thought about her. The pang was still there, though. I'd spent maybe eight hours with her outside of class, and those eight hours felt like they were part of a different life. I remembered the feel of her hair against my shoulders as she spooned me. I remembered the way she had of holding my belly just so. The way her lips felt on my neck, on my cheeks, on my lips. The feeling of her tongue on my clit, the taste of her body and the shivering wail she gave when she came.\n\nI still felt cheated, even now, after all this time. \n\nI hoped she was well.\n\n.:.\n\nOlly handed me a full wineglass and I gave him a small smile.\n\n\"You OK, Shan?\"\n\n\"No. But I will be in a bit. I don't deal well with bittersweet memories and regrets.\"\n\n\"At least you have the memories, sweetie,\" he offered softly. \n\nI squinted at him. \"I guess. Cold comfort right now, though.\"\n\n\"That's life, isn't it. We can't always have what we want.\"\n\n\"It sucks that way,\" I agreed. I threw a log onto the fire. \"So that's the sad tragedy of Shannon. I've shagged one girl and had two guys in come in me, and the only sex orgasm I had that I didn't give myself was from her. Neither guy lasted long enough for me to even get to my plateau. And honestly, it just hurt too much to be at all enjoyable. I was glad when they'd come and I could leave and go wash them off me.\"\n\nOlly shook his head. \"Not taking long I can understand; no guy would last long in you.\"\n\n\"Say what?\"\n\n\"You're a stunning woman, Shan. Any guy who got into you would be so wound up they'd have a hair trigger. They'd be working against a massive handicap.\"\n\n\"Maybe I should try with a bag over my head.\"\n\n\"Or maybe you just haven't met the right kind of guy...\"\n\n\"Someone with a mechanical cock?\"\n\n\"Or willpower,\" he winked.\n\nI stared into the flames. \n\n\"I suck at meeting men,\" I said, after a while. \"Sometimes I wish men didn't find me attractive. Then maybe I'd have a chance of finding one who could have a conversation with me as opposed to spending their lives just wanting to fuck me.\" I flung another log onto the fire. \"I'm lonely, Olly. I need someone who will love me for me. Issues included.\"\n\n\"You have me, Shan. And your issues are minor, all things considered.\"\n\n\"You aren't there to keep the bed warm at night.\" I thought a moment, \"Well, except that is, when your idiot sister injures herself.\"\n\n\"I'm a professional white knight, I suppose.\"\n\n\"My white knight, anyway. I wish I could meet someone like you. At least you think I'm hot, I guess.\"\n\n\"Any man would, Shan.\"\n\n\"Why?\"\n\n\"Do you need an itemised list?\"\n\n\"Hah, do you have one?\"\n\n\"Mm. Reasons Shannon is hot. One, amazing bum.\"\n\n\"Olly,\" I giggled.\n\n\"Two, drop-dead amazing figure. Three. Stunning eyes.\"\n\n\"Mm.\"\n\n\"Four, gives great hugs. Five. Relates to point one. Penchant for going commando in white pants.\"\n\n\"You noticed that...\"\n\n\"It's kind of hard not to, Shan. Linen's pretty transparent when wet, you know. Pretty obvious you weren't wearing a bikini bottom.\"\n\n\"You'd only see it if you were staring at my bum, Olly. Were you staring at my bum?\"\n\n\"Speaking as a red-blooded man, Shannon, it's kind of hard not to. You have a fantastic figure. The stuff men's fantasies are made of.\"\n\n\"I'm your sister, you perve.\"\n\n\"Yes, and I'm sure I'll burn in hell eventually. But you're also a solid ten, and to be frank you're the one who went commando. Not looking would be like driving through the Alps without looking at the snow. And the view is... well, pretty nice.\"\n\n\"True, I guess,\" I murmured. \"So... is that the complete list?\"\n\n\"There are more items on it.\"\n\n\"Such as?\" I laughed.\n\n\"Well, it's kind of unfair to mention this, since you had fallen down, but your breasts are amazing.\"\n\n\"Olly!\"\n\n\"You wanted the list, Shan. I'm being honest with you.\"\n\nI took a large gulp of my wine.\n\n\"Shall I stop?\" he asked, softly.\n\n\"Probably,\" I whispered. \"Probably a good idea. Otherwise it might get weird.\"\n\n\"Weird how?\"\n\n\"Olly, I'm pretty wound up after this chat. Really, really, wound up. I think you can imagine the rest.\"\n\n\"Aching?\"\n\n\"You simply cannot imagine,\" I moaned.\n\n\"Yep. You need a boyfriend.\"\n\n\"I don't need a fucking boyfriend,\" I retorted. \"Boyfriends come with drama.\"\n\n\"A girlfriend then?\"\n\n\"Same same but different.\"\n\n\"Robo-lover 9001 Sport Edition?\"\n\n\"Does it come with a vibrating dick? Because otherwise I'm sure it will be a great door-stop.\"\n\nOliver laughed. \"Beggars can't be choosers.\"\n\n\"Doesn't mean I'm going to spread my legs for the first thing to come my way, present urge notwithstanding.\"\n\nWe watched the fire for a while in silence. Then Olly stretched.\n\n\"So... since we're on the topic...\"\n\n\"Uh huh. I wondered how long that would take.\"\n\n\"What gets you going?\"\n\nI rolled onto my back, and thought for a bit. \"Difficult to pin down. It's some combination of what they look like, sound like, the tightness of their shirts, the sexiness of their arms... how they walk, the phase of the moon, the alignment of the outer planets...\"\n\n\"Complex, in other words.\"\n\n\"I am nothing if not complex.\"\n\n\"True,\" he agreed. \"I'm still wondering what possessed you to run around commando.\"\n\n\"Lets just say that I was... amusing myself.\"\n\n\"And did it work?\"\n\n\"It's got me to a headspace I haven't been in for a while... If you hadn't been here I'd have been running around nude, after all. Amongst other things.\"\n\n\"Really?\" he asked, leering.\n\n\"I like it,\" I said, softly. \"I like wearing as little as possible. It makes me feel liberated. Free. Nothing between the air and my skin.\"\n\n\"As I said, exhibitionist.\"\n\n\"Partly, I guess. But I just like the feeling of the wind and water on me with nothing to distract me.\" I paused. \"So... fair's fair, what gets you going?\"\n\nOlly sipped his wine. \"Mm. She has to be tall. Shapely. Natural. I like girls who are feminine; not famine or fashion victims.\" He paused, thinking. \"Pretty face helps, obviously. Nape of the neck is a big turn-on for me. If a girl has a hairstyle that shows that... well, it's hard for me to focus. Boobs are nice, obviously. Nice bum is nice, too.\"\n\n\"Nice shopping list,\" I drawled.\n\n\"Not that easy to find the complete package, you know,\" he said softly. \"Because personality comes into it too. I need to feel the physical spark, but I also need to be able to talk to her. A fuck is a fine thing, but if I'm not going to be happy holding her afterwards I'm not interested.\"\n\n\"Has that ever happened?\"\n\n\"Once. It got awkward.\"\n\n\"Hah. Shame. Still, you're a guy. At least you can find someone.\"\n\n\"You labour under a common misunderstanding... It's not easy for me either.\"\n\n\"I know... it's just... you've got your shit together, and I'm envious of you.\" \n\n\"You've got a love affair with the ocean and you move like you're water personified. You don't care about irrelevant shit. People fall over themselves for you, yet you never use your powers for evil. The envy goes both ways, Shan. You're amazing. I wish I was more like you.\" He paused. \"I wish I could meet someone like you.\"\n\nI glanced away, blushing. \n\n\"Are my breasts really that nice?\" I asked, softly.\n\nOlly put down the wine glass. \"Are you kidding me?\"\n\n\"Call it... curiosity. And fishing for compliments from the only man I trust to be objective.\"\n\n\"Shan,\" he said, shaking his head. \"Jesus Christ. They're spectacular.\"\n\n\"I sometimes feel they're too small.\"\n\n\"No. No. Nope. Definitely not. They're perfect. Just like you.\"\n\nWe watched the fire in silence for a moment, and I mulled his words over in my head. I could feel the dampness between my thighs; talking to Olly about sex had wound me up to breaking point. I needed release. But a dark part of me didn't want to do it alone. I'd seen him naked. I'd heard him playing with himself. I'd felt his hard cock against my bum, and I'd dreamed of what it would feel like in me. \n\nMy heart was racing and, lightheaded, I pushed the boundaries further.\n\n\"How drunk are you?\" I breathed.\n\n\"Scale of one to very? Almost very.\"\n\n\"Can you still get upstairs?\"\n\nHe pursed his lips. \"Probably.\"\n\n\"I can't.\"\n\n\"You need help?\"\n\n\"Yes. Too unsteady to get up.\"\n\n\"Put your arm around me.\"\n\nHe ducked under my arm and wrapped his around my back.\n\n\"Olly,\" I teased, as his fingers brushed my breast.\n\n\"Whoops, sorry.\"\n\nI laughed, and kissed his cheek. \"If you need to drag me upstairs by the boobs you'll need to ask, you know. I need a bit of time to get warmed up...\"\n\n\"Jesus Christ, Shannon,\" he laughed. \n\nI slid my right arm down over his back to his hip, and pulled him against me.\n\n\"Am I tall enough, Olly?\"\n\n\"Sorry?\" he murmured, as he steered us to the stairs.\n\n\"You said you like tall girls. Am I a tall girl? Like you want?\"\n\n\"You're my perfect height,\" he answered distractedly as he steered me.\n\n\"I'm glad,\" I breathed, leaning into him.\n\n\"You want to shower again?\"\n\n\"Nah. Still clean. Mostly...\"\n\n\"Right, bedroom it is.\"\n\nOlly helped me to my room, pulled back my blankets, and gently lowered me onto my bed. He slipped out from under my arm and then knelt on the floor, looking up at me. \"Shan, you OK?\"\n\n\"Drunk, Olly. Really drunk... and other stuff.\"\n\n\"You and me both.\"\n\n\"Can you get me some water?\"\n\n\"Sure, be right back.\"\n\nI listened as his footsteps faded. \n\nI could no longer deny how desperately I needed sex. Olly's running commentary and descriptions of his conquests and likes had turned me on to the point I didn't care any more. And throughout it all I'd been tormented by the vision of him, naked in the shower. The memory of him erect. My body had responded to that like I'd never felt before, and I could no longer abjure the fantasy of him climbing onto me and pushing himself into me.\n\nI wanted him to touch me. I wanted him to kiss me. I wanted him in me. Decision made, I took the hem of my top and in one slow motion pulled it up and over, off myself. I leaned backwards, arching my back, enjoying the goosebumps that crawled up over my shoulders from the chill air.\n\n\"Shan?\"\n\nI lifted my head, stared at him. \"Hey.\"\n\n\"Um... Shan... you going to put a tee-shirt on?\"\n\n\"No.\"\n\n\"Um...\"\n\n\"Come in here, Olly.\"\n\n\"Shan, I can't not look.\"\n\n\"So look. You're my twin. I don't care if you see me naked. I want you to look at them. At me.\"\n\nHe set the small bottle of Evian he'd fetched for me down on my bedside table, and sat down next to me on my bed. \n\n\"What are you doing?\" he asked, softly.\n\n\"Showing you me.\"\n\n\"Why?\"\n\n\"Because I'm lonely. Because I'm excruciatingly horny. Because I'm drunk. Because you're here. Because... I trust you to be honest with me.\"\n\n\"Honest... about?\"\n\n\"Me.\"\n\nI stood unsteadily and backed away from him until I felt the bedroom wall, cold against my back. \n\n\"Shan, what are you doing?\"\n\n\"This.\"\n\nI hooked my thumbs into the waistband of my leggings, and in one easy movement pulled them and my panties down and off me.\n\n\"Shannon!\"\n\nI kicked them free of me, then stood, haughty, staring down at him.\n\nHis eyes were wide, and he'd half-risen to his feet.\n\n\"Tell me what you see,\" I murmured.\n\n\"My sister,\" he stammered.\n\n\"Just your sister?\"\n\n\"My hot sister.\"\n\n\"If I weren't your sister, would you want me?\"\n\n\"Yes,\" he breathed.\n\n\"Why?\"\n\nHe leaned back, and exhaled. \"Because. Because you're stunning. Because your breasts are perfect. Your neck is slender, gorgeous, a work of art. Your bum is fantastic. You're beautiful.\"\n\n\"My pussy?\"\n\n\"Looks amazing,\" he groaned.\n\n\"You like shaven girls?\"\n\n\"Love them...\"\n\nI slid my hands down over my belly, then dropped one hand down to myself.\n\n\"Shan, what are you doing?\"\n\n\"Touching myself,\" I moaned. \"Talking dirty with you today has made me so hot. I've been wet all day, Olly. All day. It's been driving me mad. I... need to come.\"\n\n\"Shan, this is a bad idea.\"\n\n\"I don't care. I don't care. Tell me you don't want me to play with myself.\"\n\nHe took a shuddering breath.\n\n\"I thought as much,\" I whimpered as I touched myself. I spread my legs slightly, then stroked a finger into the cleft of my lips. \"Oh god, Olly, god, I'm so wet.\"\n\n\"Jesus Christ,\" Olly moaned.\n\n\"This making you hard, Olly?\"\n\n\"Shan, you've gotta stop this.\"\n\n\"Why?\" I whimpered, as I teased a finger around my entrance.\n\n\"Because I'm begging.\"\n\n\"Why?\"\n\n\"Because I'm never going to get this out of my head.\"\n\n\"So don't. Store it. Wank to images of me if you want to. I don't mind. In fact, I like the idea. I like... the thought of you touching yourself... thinking of me...\"\n\nI pressed up against the wall, then spread my legs further. I slowly started to drive my right index finger in and out of me, groaning deep in my throat as my lips spread over the joints. I pinched my nipples as I penetrated myself, loving how hard they were. Olly was quiet, staring at me, and I threw back my head, grinning at the way I'd captivated him with my body.\n\nMy vagina cramped once on my fingers, and I shuddered. I added a second finger slowly, letting my body slick it up before thrusting it into me and spreading both in me to stretch myself. My clit was aching, and every stroke of my fingers teased past it and sent little jolts into my legs and back.\n\n\"Olly...\"\n\n\"Yeah.\"\n\n\"Are you... enjoying this?\"\n\n\"Oh god.\"\n\n\"You like your little sister fucking... herself for you?\"\n\n\"God, Shan, this is...\"\n\n\"What?\" I panted, as I drove my fingers into myself.\n\n\"Depraved...\" \n\n\"That means... hot... right?\"\n\n\"So hot. So fucking hot. Your body is amazing.\"\n\n\"I love that... this... gets you... so... ungh...\"\n\n\"You going to come, Shan\"\n\n\"Almost... uh... fuck, almost, so close...\"\n\nI closed my eyes, driving hard into myself, then gasped for breath as I felt Olly's arms around me. He crushed me to him, holding me, grinding himself against me as I drove my fingers in and out of my dripping vagina.\n\n\"Olly,\" I cried out.\n\n\"Come for me, Shan,\" he breathed in my ear. \"Let me feel you come for me.\"\n\n\"Olly... gonna... gonna...\"\n\nMy body spasmed, and I wailed as my orgasm took me. Olly caught me as my legs gave out and held me as my belly quivered with contraction after contraction. I sobbed for breath against his neck, conscious only of the prickling of his stubble against my cheek, the fire in my belly, and the rock-hard bulge of his penis against my hip.\n\n.:.\n\nI lay next to him, eyes closed, waiting for the room to stop spinning.\n\n\"Sorry,\" I murmured again.\n\n\"Stop apologising,\" he whispered back.\n\n\"Didn't mean to get freaky on you.\"\n\n\"I'm still here, aren't I?\"\n\n\"Mm. Just means you're as bent as I am. God, Olly... fuck, that was an amazing orgasm.\"\n\n\"You felt like you needed it.\"\n\n\"I've needed that since you were playing with yourself last night.\"\n\n\"Uh... sorry, Shannon. I guess I woke you.\"\n\n\"Yeah. It took me a moment to work out what you were doing...\"\n\n\"Sorry,\" he said again. \n\n\"What made you do it?\"\n\n\"Um... don't like to say,\" he demurred.\n\n\"After what I just showed you you owe me one...\"\n\n\"Promise you won't get angry with me.\"\n\n\"Cross my heart.\" I trailed a finger down between my breasts. \n\nOlly swallowed.\n\n\"I was... fantasising about you, naked,\" he said, softly. \"When I was picking you up I couldn't help but see your breasts and a flash of your pussy... you were shaven. It's a major kink of mine... my biggest, really. I couldn't get it out of my head when I was in bed next to you. I was lying there. Thinking of your body. And... I couldn't sleep. It's been a long time for me too... and you were so warm next to me. So... I did the only thing I could think of to deal with it.\"\n\n\"Mm,\" I smiled. \"I'm glad I had an effect on you.\"\n\n\"Oh God, did you ever...\"\n\nI opened my eyes and rolled over to face him. \"Well... you got a floor show and so far I just got mental imagery.\"\n\n\"That wasn't a floor show. That was A-grade pornography,\" he sighed. \"You've just destroyed the Internet for me, Shan. Nothing's going to compete with what I just saw.\"\n\n\"And felt.\"\n\n\"Somewhat.\"\n\n\"How drunk are you really?\" I asked, hesitant.\n\n\"Not enough to kill my... urge.\"\n\n\"Describe your urge.\"\n\n\"Shan.\"\n\nI sat up, and laughed as his eyes dropped to my breasts.\n\n\"Thanks,\" he said, sarcastically.\n\n\"Are you complaining?\"\n\n\"Yeah.\"\n\n\"Why?\"\n\n\"Because I'm rock hard, Shan. Aching. And wanking isn't going to cure this one.\"\n\n\"Mm.\"\n\nI slowly reached out to him.\n\n\"Shan,\" he breathed.\n\n\"I want to see you. I felt you against me last night, and earlier when you were holding me. I want to see you.\"\n\nI pulled back the duvet. Olly had an obvious bulge and wet spot, and I glanced down at his crotch, then met his eyes again. \"I'm nude, Olly. I think it's only fair you should be too.\"\n\n\"Shan... this is a massively, catastrophically, monstrously bad idea.\"\n\n\"Why?\"\n\n\"Because if I get nude, I'm going to want to do... things.\"\n\n\"Such as?\"\n\n\"Touch you.\"\n\n\"Only touch?\" \n\n\"Touch, taste, feel, finger, fuck,\" he groaned. \"All the things I shouldn't do to my sister.\"\n\n\"And, yet, somehow, all the things she'd love to have her brother do to her,\" I whispered. \"Olly... I'm aching. I'm drenched. I never, ever get this aroused. I want to feel what it's like to be touched by a man that turns me on.\"\n\n\"Shannon.\"\n\n\"You can stop any time you want to. Any time. But nothing you do to me here is going to make me stop loving you. You're my twin. You're my yang. If anyone on this god-forsaken world can get me it's you. So Olly... please... give me this moment.\"\n\nHis eyes were dark, and he opened his mouth as if to say something. But then he slipped off the bed.\n\n\"This is your fault,\" he said softly, as he pulled off his shirt.\n\n\"I take full responsibility for getting you drunk and taking advantage of you.\"\n\nHe unbuttoned his pants, and then let them and his underwear fall. His cock was rock hard, jutting proudly out in front of him. I watched it as it bobbed with his pulse, fascinated by his large, engorged head and the way the veins stood out against his shaft. ",
        "\"You're incredibly hot,\" I said after a moment, feeling strangely lightheaded.\n\nOlly shook his head. \"No, that's you. I'm just a good-looking guy.\"\n\nI stood up, and walked to him. I swung my arms up around his neck, and pulled myself against him, letting out a shivery moan as I felt his chest against my breasts and his cock against my belly.\n\n\"Olly?\"\n\n\"Yeah, Shan.\"\n\n\"I know it's wrong. But I really, really want you to fuck me.\"\n\n\"I'm not going to fuck you.\"\n\n\"Please, Olly.\"\n\n\"No.\"\n\n\"Olly... do you need me to beg for you? Because if that's what you need I'll do it. I will do anything you want. I'll let you do anything you want to me. Just fuck me. Please, Olly. Please. Please.\"\n\n\"Shannon. Stop it. I'm not going to fuck you.\"\n\nI stared into his eyes, feeling the flush of shame and rejection crawling up over my face.\n\nHe took a breath, and sighed it out as he pulled me against him and tucked his face into my neck.\n\n\"I'm going to make love to you.\"\n\n.:.\n\nHe gently pushed me down onto the bed, and lay down next to me. I rolled towards him, and he pillowed my head on an arm. I stared at him, at his eyes, dark in the dimmed light.\n\nHe reached out, brushed a wisp of hair away from my lips. \n\nI shivered, wriggled closer till I felt the firm shape of him, pressing, throbbing against my belly.\n\nOlly trailed his nails, gently, from my neck down along my spine. I arched against him.\n\n\"Stop teasing me.\"\n\n\"No,\" he replied, soft and gentle. He trailed his fingertips over my bum and down to my hip.\n\n\"Olly, please,\" I whimpered, shuddering.\n\n\"I want to do this properly, Shan. I want to feel every bit of you. Every bit. Make you beg for more and beg for me to stop.\"\n\n\"It's not going... to take long... I'm so wound up.\"\n\nHe teased his hand gently into the vee of my belly and thighs.\n\nI lifted my leg, spread myself slightly. My nipples were hard, aching.\n\nHe nuzzled my neck, kissing gently under the line of my jaw, and his fingers found my slit.\n\n\"Fuck,\" he breathed as he felt how wet I was. I moaned at the way his cock pulsed against me, then pushed hard against him as I felt him feeling down between my lips to my clit.\n\n\"Olly,\" I moaned, \"Oh fuck, oh fuck... there... there, right... there...\"\n\nHe bit me gently, then rolled me onto my back. His lips burned a track down over my shoulder and pectoral to my right breast. He kissed around my breast and areola, and then as he took my nipple into his mouth he stroked my clit with the tip of his finger.\n\nI cried out. He leaned onto me, pinning me. His tongue, deft on my nipple, hot and slick, hot and slick like his finger on me. He stroked my clit, teasing the nub of nerves below its hood, ducking his fingertip down to my aching entrance every heartbeat or two to taunt me, while I bit hard on my lip to stop myself from screaming. His motions were gentle, languid... but insistent. He kept to a rhythm, timed to my gasps, pinning me so I could writhe but not wriggle, so that I couldn't get away. \n\nHis breath curled out, warm, over my breast. I could feel the faint sheen of sweat where his skin touched mine. I could smell the faint scent of myself now. \n\nI was building. My body climbed up to my plateau. Olly sensed it, and held me there a moment, two moments, nibbling gently on my nipple as he teased my inner lips with his slick fingertip. He pushed his finger slowly into me - I felt my stomach muscles clenching and I let out a soft moan of need. I gasped for air as I bucked, ground, thrust up against his rock-hard cock and his finger.\n\n\"Olly...\"\n\n\"Come for me, Shannon,\" he whispered.\n\n\"Olly...\"\n\n\"Let go...\"\n\n\"I'm... I'm...\"\n\nAnd then a wordless wail as I bent backwards, muscles locked, pussy cramping, as he pushed his finger into me to feel me come.\n\nAnd then, Olly, between my legs, spreading me. I hadn't even time to gasp a breath before his tongue was on my clit and lips.\n\nI shuddered, moaned, writhed. He held me firm and slowly worked two, then three fingers into me while he teased, nibbled, sucked my clit and inner lips.\n\nMy body shook, and I cried as the pleasure of what he was doing to me overrode all my controls. I hugged myself, clutched at my breasts, the sheets, his head, forcing him hard against me, unable, unwilling to stop him even as the sensation of his tongue on my pussy fused my senses.\n\nI couldn't stop myself; I was grinding my crotch against his mouth, gasping, panting nonsensical words as Olly slowly fucked me with his fingers. I could feel myself building again. Olly could feel it too, because he switched from licking to sucking, gently pulling my clit out and away from my body, rolling it slightly between his lips as he drove himself in and out of me.\n\nMy orgasm hit like a lightning strike; my muscles clenching so tight that I involuntarily sat up, holding him to me as I rode through aftershock after aftershock until I couldn't any more.\n\n\"Stop... stop... stop!\" I begged, and after a final, slow, tender lick he did.\n\n.:.\n\n\"Jesus... God... fuck...\" I whimpered into his chest.\n\n\"You OK?\"\n\n\"No. No. Not at all. Fucking broken. Jesus...\"\n\n\"I'll take that as a compliment,\" he said, chuckling.\n\n\"Oh my Christ, Olly, where the fuck did you learn to do that?\"\n\n\"Internet,\" he observed, amused.\n\n\"I have never, never, ever felt anything like that. Oh God. I feel like I've been turned inside out.\"\n\nI snuggled closer to him and pushed my belly against him. His cock twitched against me, and he made a noise deep in his throat as I snuck my fingers down between us. Hesitantly at first, I touched him. He groaned and shifted his hips as I closed my fingers around his shaft. I looked up at him, met his half-closed gaze as I stroked my hand slowly up along him.\n\n\"God, Shannon, that's nice,\" he moaned.\n\n\"Your cock is so hot, so hard,\" I whispered. \"So smooth,\" I added, stroking my fingers down over his balls.\n\nHe grunted, and I felt his stomach muscles tense and he throbbed in my fingers. I glanced down, then pushed myself free of him and rolled onto my belly. I shimmied round, pulled myself closer to him and gently tongued his head.\n\n\"Oh fuck,\" he grunted.\n\nI smiled to myself, then ran my tongue around his head, slicking him up. I took him into my mouth, slowly, feeling the heat rise in me again, loving the feel of his skin against my tongue as I closed my lips on him and licked his shaft. I slowly began moving my head, slipping his hard cock a small fraction in and out of my mouth. \n\nOlly reached down to tangle his fingers in my hair, applying pressure as he moved his hips, trying to force more of himself into me.\n\nI let him do it for a moment, then I took as much of him as I could in one swift stroke. He arched under me, hissing for breath, and I gagged slightly. I pulled back, pulled away, and stroked him slowly as I sat up and looked down at his body.\n\n\"Sorry,\" I coughed, \"you're too big for me.\"\n\n\"God that was so nice. Your mouth feels so good.\"\n\n\"I know something that's going to feel even better on you... roll onto your back.\"\n\nI flung my leg over him and levered myself up so I sat on his belly. I could feel the heat of him against me; could feel each throb of his pulse in his rock-hard penis where it nestled between my lips. I looked down at him, at this gorgeous boy, my brother, appreciating the view before I reached down, shifted him slightly, and paused, his cock pressing against my slit, perfectly positioned.\n\nThen, before I could get cold feet, I pushed down on him, eyes closed, groaning as he stretched me. Olly clasped my bum in his hands, and pushed up off the bed, thrusting into me until he bottomed out.\n\nI collapsed forward, panting, gasping, stretched almost to the point of pain by my brother so deep inside me.\n\n\"Oh... oh God... slowly, slowly,\" I begged, \"Slowly, Olly... fuck... you're so big... Slowly!\"\n\nHe ignored me.\n\nI bit down on my lip as Olly drew back and forced himself into me again.\n\n\"Fuck... ow.... fuck... oh... God... fucking,\" the words pouring out of me in an uncontrollable torrent as he crushed me against his chest and drove his hard penis into me. I could feel the shape of him in me; feel the way my near-virginal cunt gripped him, stretched over the hard ridges of his erect shaft. He was panting now and I leaned on him, my breasts crushed against him, my belly slick with our sweat as he pounded in and out of me.\n\nI could feel my body responding, despite the discomfort. His penis was hard, hard against the front of my vagina, distending me with every stroke, and the angle meant that each time he entered me his belly brushed against my clit. I broke free of his arms, gasped a breath, and sat up on him, moaning at the extra depth of penetration this brought me.\n\nHe reached up, took my nipples in his fingers, squeezed. I leaned backwards, grinding myself against him.\n\n\"Shan,\" he panted.\n\n\"Yeah...\"\n\n\"Not gonna... last...\"\n\n\"Don't...care...\" \n\nHe pulled all the way out of me, then thrust in again. I reached down to myself and started to frantically finger my clit, moaning at its sensitivity. He pulled out again, thrust in again, and I groaned at the impact. I could feel how my muscles spasmed on him, and the panting gasps he let out let me know he could feel it too. Then, suddenly,his orgasm hit - I fell forward onto him, mouth gaping, digging my nails into him and biting down on his neck as I felt him start to throb deep in me.\n\nOlly arched, groaning deep in his throat, lifting both of us off the bed as he tried to force himself deeper still. \"Fuck, fuck, fuck,\" I cried out; I could feel him coming in me and I loved it, loved the way his cock pulsed, loved the way his muscles tensed, loved the sub-vocal way he echoed me and the strength with which he held me against him.\n\nEventually he released me, and after a moment lying prostrate on him I levered myself up; looked down at him.\n\nWe said nothing for a moment as we both considered the enormity of what we'd just done. \n\nThen Olly grinned, and I smiled down at him. He reached up, cupped my head, and pulled me downwards again. His lips were warm, soft, and the long, slow, tender kiss he gave me left me breathless and weak.\n\n\"That was amazing,\" I managed after a moment. \"Really amazing.\"\n\n\"I'm not finished,\" he whispered into my ear.\n\n\"Uh...\"\n\nHe pulled out, and I felt the hot gush of his semen follow his cock out of me.\n\n\"Where are you going?\" I demanded, as he levered me gently but firmly off him\n\n\"Not far.\"\n\nHe gently nudged me me over onto my stomach. I lay, eyes closed, wondering.\n\n\"What are you doing?\" I asked, after a moment.\n\n\"As I said, I'm not done.\"\n\nI felt him climb on top of me; felt the sticky heat of his semi-erect cock nestle between my cheeks.\n\n\"Olly?\"\n\nI felt his fingers between my legs, and arched, hissing, as he fingered my semen-slicked entrance.\n\n\"Spread your legs slightly, Shan,\" he breathed into my ear.\n\n\"What are you... doing?\"\n\nI felt his cock between my legs, felt the head nestle against me. \n\nHe leaned forward to kiss the nape of my neck. \"Relax...\"\n\n\"Easy for you to say,\" I groaned, \"you're not the one full of come and feeling that penis against her again...oh... oh god...\"\n\nI bit down on the sheet as I felt him entering me. I moaned loudly as I felt his belly against my bum. Olly supported himself on his arms as he lowered himself onto me, his weight forcing me down.\n\nI wormed a hand down between my legs, and felt his cock where it disappeared inside me. He was slick, and though not as hard as he'd been he still stretched me in a way I'd never felt before. \n\n\"Olly,\" I gasped as he pulled back. He kissed my neck and thrust into me again; I cried out, and again, and again as he fucked me slowly, deeply, from behind.\n\nI could feel my lips gripping his shaft. I could feel his semen pooling under my belly. I could smell him, and me, and us. I closed my eyes, concentrating on the exquisite sensation of his penis as it slid in and out of me, on the feeling of his skin, slick from our lovemaking, of the ridges sliding between my two fingers as I stroked my fingertips over my lips.\n\n\"You... are... so... tight,\" he moaned into my neck.\n\n\"Practically a... virgin,\" I gasped, shuddering as my stomach muscles contracted.\n\n\"You feel so... good on... me...\"\n\nHe leaned forward, putting his bodyweight onto me. He started to thrust hard and deep into me, slamming his belly into my bum as he bottomed out.\n\n\"Uh... uh... oh... god... uh...\" I grunted, as each stroke drove the air out of me. He took the lobe of my left ear in his mouth and bit down firmly, and I arched back against him, crying out. \n\nA hot, hard, aching need, deep in my belly, partially satisfied with each stroke of his cock but each stroke leaving me with a greater craving for the next. I needed him like this. I couldn't imagine anything else but this, anything else but his hard penis in me, all the way in me, filling me, making me so hot for him that I couldn't want any other way to be.\n\n\"Olly... Olly... I'm... I'm...\" \n\nHe reached down under me, pulled himself against me, cupping me breasts in his hands and laying his weight on me as he drove frantically in and out of me.\n\n\"Olly... I'm... gonna...\"\n\n\"Come for me... Shan... want to... feel...on me...\"\n\n\"Gonna... gonna... oh... oh... oh...\"\n\nAnd after that, nothing, nothing but the feeling of him in me, driving me over, through the fading of my senses and the uncontrollable bucking, shaking, crashing orgasm that broke me.\n\nAnd, perhaps mere moments after that, the shivering moan of my twin above me and the hot, delicious flow of his come.\n\n.:.\n\nHe lay, arm pillowing my head and slowly-softening cock nestling against my bum, cupping my belly and holding me gently against him. I listened to the sound of his breathing, enjoying the sensation of each breath as he sighed it out into the nape of my neck.\n\nI ached; but it was a good hurt, like the ache after a long run. My inner thighs were still sticky from us, and I for one was too lethargic to hunt a towel just yet.\n\n\"You OK?\" he breathed.\n\n\"Daydreaming. Glad my drought is over. Loving how I'm sticky from it.\"\n\nI felt his grin, and squirmed slightly as he gently squeezed me against him.\n\n\"It was a nice way to break mine too.\"\n\n\"Hah, I'll bet. Kinky drunken taboo sibling sex. Just what the doctor ordered.\"\n\n\"I'll take a repeat prescription, please.\"\n\nI laughed softly, then wriggled free so I could roll over and face him.\n\nI watched him, watched the slight motion as he breathed.\n\n\"I'd be good with that,\" I said, after a while. \"I'd be good with sex like that when I could get it from you.\"\n\nHe opened an eye. \"It will require an enormous amount of sneaking around.\"\n\n\"I am nothing if not sneaky,\" I whispered, reaching down to cup his penis. \"And this cock is a great motivator.\"\n\nHe leaned in, and kissed me, and I melted against him with a sigh.\n\n\"Olly?\" I whispered, after a while.\n\n\"Uh huh.\"\n\n\"Promise me this won't change... us.\"\n\n\"I can't. Of course it will change us. But... you're my other half, Shan. I'll always only be a skin's width away from you.\"\n\n\"Literally, sometimes...\"\n\n\"When you'll let me...\"\n\n\"Whenever you want me.\"\n\n\"Mm. Don't make promises you can't keep,\" he said. \"I'm going to want you all the time.\"\n\n\"So you'll have to get good at taking the chances,\" I grinned.\n\n\"Go commando more often and I'll do my duty,\" he retorted.\n\n\"Commando, short skirts, perfect for you to sneak a quickie...\"\n\n\"Mm, Shan, that sounds nice... I've always wanted to do that to you...\"\n\n\"What, be in me?\"\n\n\"Always had fantasies about you, Shannon. Bit hard not to, given how beautiful you are.\"\n\n\"Mm. Flirt.\"\n\n\"Unashamedly so,\" he yawned.\n\nWe lay quiet, joined, content. Olly's breathing slowed and deepened, and the sensation of him sleeping curled up against me filled me with a gentle warmth. \n\nI knew that doubts and recriminations would come, later, but they were later's problem, and right now I was where I wanted to be. I closed my eyes and listened to the wind howling down the mountainside.\n\nI fell asleep, still smiling, and woke to daylight and Olly's gentle but insistent touch."
    ],
    "authorname": "onehitwanda",
    "tags": [
        "twins",
        "brother",
        "sister",
        "exhibitionism"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/eventide"
}