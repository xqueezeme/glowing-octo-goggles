{
    "title": "Fathers and Sons Ch. 03",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is listed in WifeWatchman's biography, which is currently not updating. Stories after Music Box Dancer are: Return To Apple Grove, Media Matters, Swamp Frogs, Man of God, Fathers and Sons.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 16 - Continuing the Investigation\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the redheaded MILF reporterette at 7:00am, Wednesday, August 8th, from in front of the Federal Building off Courthouse Square. \"Fox Two News has learned that wanted fugitive Jack King was arrested at City Airport by the FBI last night.\"\n\nBettina began: \"The FBI is crediting Charlie Griswold, quadriplegic son of Sheriff candidate Antonio Griswold, for discovering information that the led the FBI to the capture of Jack King, who had escaped prison and was believed to be hiding in France or Russia. Charlie Griswold, who was discovered to be able to communicate by blinking his eyes in Morse Code, was working with Police to decode several encrypted files.\"\n\n\"In a related story, TCPD Detectives reviewing young Griswold's case re-examined the car he crashed into a bridge support near the bypass over a decade ago, and they found definitive evidence that the car was tampered with. Detective Jerome Davis briefly spoke to reporters last night. Roll tape.\"\n\nTape rolled. \"It was amazing that Charlie Griswold was able to prevent his car from killing innocent people.\" said Detective Davis outside the Hospital, the dark of night in the background. \"He had no brakes, they were cut, and he was trying to get the car to the West expressway and to empty farms. I'd call him a hero for doing all he could to keep others from being hurt.\"\n\nBack to Bettina live: \"Those sentiments were shared by superstar rapper T-Square, who visited Charlie at University Hospital yesterday. Charlie said he was a big T-Square fan, and was excited by the visit. As these pictures show, Charlie and T-Square posed in trademark 'T-Square shades' during the visit.\" A photo, provided by T-Square's publicist, showed him posing with Charlie. \n\n\"And in State news,\" said Bettina, \"Robert Mullen has issued more subpoenas. Alan Davidson and Steve Fuqua, aides to Governor Jared, have been ordered to appear before the Independent State Counsel to answer questions. Dave Smigelski, also a Jared aide, is expected to testify before the Special Grand Jury soon, but Fox Two News has learned that his testimony does not implicate Commander Donald Troy. Political experts believe that Mr. Mullen is on track to bring charges against Governor Jared, perhaps by mid-October.\"\n\n* * * * * * * * * * * * * * *\n\n\"That was so cool, seeing Charlie and T-Square in shades like that.\" said Joanne Warner.\n\n\"Nice of T-Square to visit Charlie, too.\" said Theo Washington. \"Charlie's a cop's son, and T-Square doesn't like cops too much.\"\n\n\"How did he find out Charlie liked his music?\" asked Teddy Parker. After a few seconds, all eyes came to rest upon Your Iron Crowbar.\n\n\"Yeah, Charlie told me, and I told T-Square.\" I said. \"Invited him to go visit, I did. Good press for T-Square. And he respects Chief Griswold more than you might realize.\"\n\n\"I'll tell you who the one Police Officer that T-Square respects is.\" said Cindy Ross. \"If you need a hint: he's in this room now.\"\n\n\"What's going on with Jack King?\" asked Teresa Croyle, who had been around long enough to remember the culprit behind the 'Black Badge' case. (Author's note: 'Case of the Black Badge', also 'Seriously Inconvenienced', Ch. 02, for the escape.)\n\n\"His father, Conrad King,\" I said, \"spirited him out of America after we busted him several years ago. He was over in France, drinking the good wine and eating the good food, then for some silly reason decided to come back... just as his name showed up on one of the files Charlie decoded.\"\n\n\"By the way, Detective Davis\" said Teresa, \"that was good work yesterday, interviewing Charlie. Showed compassion while still asking the hard questions and getting the painful answers.\"\n\n\"Your dad was impressed, too.\" said Cindy. \"He didn't show much on his face, but I could see in his eyes that he was interested in how you conducted the questions.\"\n\n\"Thank you, ma'am.\" said Jerome. \"And the stories of whoever swerved into him and made him go into the bridge support... well, I can tell them today that it wasn't them. Charlie's car was going into that bridge support no matter what. He said the car just lurched towards it and he couldn't swerve it at all...\"\n\nJust then the Mighty Miltons, Myron and Mary, came into MCD, both looking straight at me. I excused myself and led them to my office.\n\n* * * * * * * * * * * * * * *\n\n\"Okay, so you were able to trace those URLs?\" I asked as we sat down in my office.\n\n\"Yes sir.\" said Myron. \"They go back to basic GoDaddy accounts, which were created in Queenie's name. They connected to pages that were sitting on the servers of the State Legislature.\"\n\n\"Katherine Woodburn's?\" I asked.\n\n\"We weren't able to get that granular, sir.\" said Mary. \"The pages are on a section of servers that are part of the general Legislature pages and files. Their hired I.T. people maintain them. This is the area where bills are stored. You remember, sir, those bills that were changed to add this County to sites for State Crime Labs? Those were in that area when they were hacked.\"\n\n\"So it was pretty much easy for anyone to put them there and get to them.\" I said. The Miltons nodded in agreement.\n\n\"Did you get any information on who has accessed those files?\"\n\n\"You, recently, sir.\" Mary said. \"Obviously when decoding the Queenie Files. Before that, they hadn't been accessed in nearly a year, at least. The meta data is sketchy, at best, and there's no real hope to find out who accessed the data and trace it back to a real live person.\"\n\nI nodded. \"Can anyone besides Legislators get into those servers?\"\n\n\"The Executive Branch departments all have different servers, and no access to the Legislative servers, and vice versa.\" said Myron, looking at notes. \"The State Supreme Court and the entire State's Court system documents have their own servers, as well. It is very unlikely anyone but Legislators, aides, staffers, employees, and such, have access to the Legislature servers, though of course they could be hacked.\"\n\n\"Well...\" I said, \"we're that far. And it'll be the contents that are important, more than the origins. You guys did a great job, as always.\"\n\n\"We did do one other thing, sir.\" said Myron. \"I broke into every State Government server running, and looked for web addresses that were strange, like the 'https://509503' address. There's a bunch of them, and I'll have to go through them as well as narrow the search parameters. But we'll see if we find anything.\"\n\n* * * * * * * * * * * * * * *\n\n\"Get out of my Police Station.\" ordered Chief Sean Moynahan.\n\n\"Sir?\" I asked as I stood in front of his desk.\n\n\"There is going to be a Press conference by the FBI at 11:00am.\" said the Chief. \"In the City. Special Agent In Charge Muscone will be briefing the world on the Jack King arrest. You will not be expected to speak or take questions at it, but you might get some information from it.\"\n\n\"Yes sir.\" I said.\n\n\"Take Deputy Chief Ross with you.\" said Moynahan. \"She needs a break from the budget work she's been doing. Her bleary eyes are making my eyes feel bleary.\"\n\nI smiled. \"Yes sir.\" I said. \"Mr. Davis is putting the Charlie Griswold transcripts into proper order, and Jerome will put it all into the servers. After that, we'll need to find new work for Charlie to do.\"\n\n\"I think you'll find that is taken care of when you get to the City.\" said the Chief, somewhat cryptically. \"Okay, go. Dismissed.\" I moved out smartly.\n\n* * * * * * * * * * * * * * *\n\nCindy and I came into MCD before leaving. \"Sir!\" called out Jerome Davis, seeing me. \"I've got something for you.\"\n\nI went up to his desk. The other Detectives were listening, though of course they pretended that they were not listening. Jonathan Davis was at the empty desk near the coffee machine, filling in all the small details on the Charlie transcripts.\n\n\"Whaddya got?\" I asked.\n\n\"When I saw the electronics used on Charlie's car, something triggered a memory in me.\" said Jerome. \"I checked, and they're the same types the electronics that were used in your cars when the Consultant burned down your old Cabin, made by the same company.\" (Author's note: 'Seriously Inconvenienced', Ch. 04.) I winced at the memory as he handed me a file folder with some papers.\n\n\"Dayum, Detective Davis,\" I said, very impressed. \"That is Iron Crowbar thinking there. Here, hold this.\" I handed him the red crowbar as I began to look at the file.\n\n\"Police Boxing Matches, Warner!\" Jerome called out as he waved the crowbar at Joanne. \"I'm taking you down next year!\"\n\n\"You and what Army?\" Joanne fired back.\n\n\"I think you mean 'what Navy'.\" interjected Theo Washington. Everyone was laughing by now. Even retired Sr. Chief Petty Officer Jonathan Davis could not resist a grin.\n\n\"Okay, this is great stuff, Jerome.\" I said. \"Hold this for me, I'll get it when I get back. You guys keep at it.\" I handed Jerome the folder, got the red crowbar back, then Cindy and I headed out, Cindy giving Jerome a thumbs-up as she passed by his desk.\n\n* * * * * * * * * * * * * * *\n\n\"A merit badge.\" Cindy said as we drove to the City in my Police SUV. \"You earned a frickin' merit badge, what, 20 years ago, and then you notice a guy in a hospital bed blinking in Morse Code.\"\n\n\"Something like that.\" I said. \"As your father says, there are no coincidences in the Universe.\"\n\n\"True.\" said Cindy. \"And Charlie... lying there all those years, unable to move, knowing what was going on around him... well, the light sure is back on in his eyes... and his dad's.\"\n\n\"Yeah, it's been good for him, too.\" I said. \"But Mrs. Griswold... she still looks haunted by it all.\"\n\nWe sped into the City and took the exit that would take us to the Federal Building. We were allowed into the parking deck, and then we made our way to the FBI offices.\n\n\"Ah, the Crowbar People have arrived.\" said Jack Muscone as we got to his office. \"Come on in to my team's room.\" He led us into the large room, the FBI's equivalent of the MCD room. We were greeted enthusiastically by Team Lazarus. Sandra Speer had pictures of Greta, so guess where I went to. Meanwhile, Cindy talked with Martin Nash and Lindy Linares. Julius Jefferson and Ben Crenshaw joined me and Sandra in conversation after a moment.\n\n\"Great job with that Charlie guy.\" said Crenshaw. \"And him cracking those puzzles was pretty solid. All our crypto guys were impressed.\"\n\n\"Yeah, he did great on that.\" I said. \"So, what happened with Jack King?\" That caused some 'unrest' to come into the atmosphere.\n\n\"We made the bust at City Airport.\" said Jefferson, \"and then Homeland Security came and got him. We didn't even get a chance to talk to him, so I hope you weren't wanting to.\"\n\n\"Naaah.\" I said. \"I'd be stunned if he has any knowledge of the stuff I'm dealing with.\" Seeing the looks of shock on their faces, I told the Special Agents: \"They want him in Washington so they can find out what he was doing for France and Russia. He hasn't worried himself about what's been going on here since his father died.\"\n\n\"So why did he come back to America?\" Sandra asked.\n\n\"My guess is that he was set up.\" I replied. \"Someone asked him to come to the City, he stupidly did so, and there you guys were, waiting for him.\"\n\n\"Who would do that?\" asked Julius Jefferson. \"The person behind the Queenie Files? King's name was on the list, after all.\"\n\n\"True.\" I said. \"I don't know for sure, but one thing caught my attention: it would have to be someone with international connections similar to King's, and someone he knew.\"\n\n\"CIA operative?\" asked Martin Nash. He, Lindy, and Cindy had been listening in.\n\n\"That's a possibility.\" I said.\n\nJust then, Jack's boss, the Executive Assistant Director (EAD) came to the door with Jack in tow. \"Commander Troy,\" he said, \"can we borrow you for a moment?\"\n\n* * * * * * * * * * * * * * *\n\nWe went into the room with the plexiglass cube on springs, the most secure room in the building against being bugged. Joining the EAD, Jack, and me was the retired Deputy Director of the FBI.\n\n\"Sir,\" I asked, \"why did you bother retiring from the FBI? You're here all the time.\"\n\nThe DepDirector laughed. \"By retiring, I can be here instead of in Washington. And I can just play consultant like you.\"\n\n\"So what am I consulting on today?\" I asked.\n\nThe EAD said \"First, congratulations to you and Charlie Griswold for that splendid job deciphering those files. Second, is there anything or anyone new that's popped up about them?\"\n\n\"No sir.\" I said. \"I'll say this much: there is still nothing that can help the Deputy Director, nor anything that should worry him.\" I looked meaningfully at the DepDirector as I said that.\n\n\"I hope you're right.\" said the DepDirector. \"That list of names you gave Jack was not a group of small potatoes. Weatherby, Blassingame... possible Superior Bloodlines leftovers.\"\n\n\"Establishment Elites, to be sure,\" I said, \"but Superior Bloodlines is crushed, sir. You will not see them nor their ilk again in your lifetime.\"\n\n\"Any idea what connects those names you gave us?\" asked the EAD, and I could sense him peering right through me.\n\n\"Well, sir,\" I said, \"it looks like the names can be broken into three groups. There's the 'old school' group: Henry Wargrave, Austin Murphy, Jack King. Then there's the middle group: Jack Lewis, Leon Mills. Then there's the newer group: Conrad King, Mitt Willis, Weatherby, Blassingame, all Establishment Elitists and Capitalist Cronies. I'm placing Conrad King in that last group, though he was an associate of Wargrave and Jack King is his son.\"\n\n\"Of course,\" I continued, \"some of those on the list are dead. Wargrave, Conrad King, and very recently Mitt Willis. But Willis died so recently that we can safely infer that the person behind the Queenie Files put his name on the list while he was alive.\"\n\n\"Conrad King died only a little over a year ago, also.\" said the DepDirector. \"Maybe this Shadow Filemaker didn't know he was dead.\" That caused me to go into a brief reverie as something struck me.\n\n\"That's... a thought...\" I said, mostly to myself, feeling myself staring forward into empty space. \"What if the guy, or girl, didn't know that any of those persons were dead?\"\n\n\"Well...\" said the DepDirector, \"it would be hard to understand how someone could do all this, put those names on the list, put the physical files in a safe deposit box in the City, but not know that Henry Wargrave was dead... but I've seen even stranger things involving the Iron Crowbar. So who knows?\"\n\n\"Okay, Jack,\" said the EAD, \"it's Press Conference time...\"\n\n* * * * * * * * * * * * * * *\n\n\"Thanks to the outstanding work of FBI Consultant Don Troy and our friend Charlie Griswold,\" Jack Muscone said to the gaggle of Press, \"we were able to develop information that led to the arrest of wanted fugitive Jack King. We obtained the proper warrants, and made the arrest of Jack King at City Airport as he deplaned from a flight from France.\"\n\n\"Agent Muscone!\" shouted Jenna James, \"Jack King was arrested at the airport just hours after Charlie Griswold decoded files that had been recovered after months of being in hiding. What specific information led to being able to meet Mr. King's plane at the airport?\" She glanced over at me after asking, and knew from my look at her that I was realizing she knew far more than she should.\n\n\"The case is still in progress with regards to other fugitives from the law.\" said Muscone. \"So I'm not able to elaborate on that information at this time.\"\n\n\"With what is Mr. King being charged?\" asked Bettina Wurtzburg.\n\n\"First of all, he escaped from prison,\" said Muscone, \"so that and the previous charges would apply. All of that occurred in your County, Ms. Wurtzburg, so I'll refer your fellow reporters to you for more on that.\" There were some chuckles amongst the reporters, but Bettina was not amused.\n\n\"Agent Muscone,\" said Cynthia Freeman, KSTD's new reporterette, \"a former coach at the University, Willy Gonzales, allegedly raped a student-athlete named Selena Martinez some years ago. Ms. Martinez was found murdered here in the City last year, and Gonzales was found dead before a game at (Wildcat School). My question is: what is the FBI's involvement in that case? Did you assist any of the local jurisdictions in investigating those murders?\"\n\n\"I'll have to go back and check on all that.\" said Muscone. \"It would be standard procedure in cases that cross State Lines for local jurisdictions to obtain the help of FBI assets where needed, but I can't speak to those specific cases standing here in front of you right now.\"\n\nI had noticed that Cynthia, Jenna James, and Diane Williams had all looked over at me after the question was asked. I just stared back at each of them, unsure of the game they were playing.\n\n\"Agent Muscone,\" said Lester Holder, an edge of maliciousness in his voice, \"will Commander Troy be made available for questions regarding the decoding of these files?\"\n\n\"I don't know.\" said Muscone, looking over at me. \"It's up to him.\" I just shook my head slightly, tapping the crowbar in my hand. My war with the Press was still full-on. \n\n\"Looks like a 'no' on that one, Holder.\" said Muscone. \"Probably for the best for all of you Press guys.\" The collective eyes of the Press smoldered with hatred at that shot...\n\nPart 17 - Violent Violations\n\n\"What do you want, Senator?\" snarled Jayne Hallerton. The lovely blonde had been summoned to the Cannon Building and the penthouse office that had once been Henry Wargrave's. Now Senator Samuel Russell occupied it.\n\n\"I called you here,\" said Russell, \"to reach an understanding on your relationship with my son.\"\n\n\"So you said on the phone.\" Jayne said. She had told Billy, the Senator's son, of the phone call. After a discussion of it, they decided to at least hear what Senator Russell had to say. Maybe he would at least accept the inevitable of Billy and Jayne's relationship.\n\n\"I want you to stop seeing my son.\" said Russell. \"I want you to leave this State, go somewhere else, and never see my son again.\"\n\n\"You're full of shit.\" Jayne said. \"Who the fuck are you to tell me who I can and can't see?\"\n\n\"I'm a U.S. Senator, for one thing.\" said Russell. \"And you are a whore and an embarrassment to my family name. I'll make you one final offer.\" He picked up an envelope. \"Inside this envelope is a check for $100,000. Cash the check, do what you want with the money. In exchange, you will never attempt to see my son again.\"\n\nJayne took the envelope, and Russell thought he and won. Then she held it up in front of him and ripped it in two, then flipped the pieces into the air.\n\n\"I don't want your dirty money.\" Jayne snarled. \"Fuck it, and fuck you!\" She turned to go.\n\nRussell flew from around his desk and grabbed her arm. \"Listen, you little bitch...\" he started. Jayne tried to pull away from him.\n\n\"Let me go!\" she screamed loudly. \"Let go of my arm!\"\n\n\"You fucking cunt!\" Russell roared. He swung his arm in a backhand slap, connecting solidly with the side of the blonde's beautiful face. She went down in a heap.",
        "\"Fucking whore.\" Russell snarled as he dove down on top of her. \"It's you who is going to get fucked, you piece of trash!\"\n\nJayne tried to push the much heavier man off, but he was too heavy, too strong, and too enraged. He reached under her skirt and pushed her panties aside, driving one finger roughly past her cuntlips. Her pussy began to moisten as a defense mechanism as she tried to scratch at Russell's eyes and face.\n\n*WHAP!!*\n\nRussell had raised up, and her slapped Jayne's face as hard as he could. \"You bitch!\" he roared. \"You try to scratch my face again, and I'll break your god-damn jaw!\" The blow had knocked Jayne almost senseless, and Russell used the moment of her going lip to open his pants and lower them. He fit the head of his throbbing hard cock to her opening and tried to push in.\n\nJayne was still tight and dry, and she was trying to fight him off again. Russell jammed a finger into her twat again, roughly massaging her cuntwalls and the edge of her labes. Finally, he'd had enough.\n\n*SLAP!!*\n\n\"Spread your legs, whore!\" he growled, \"and get what's coming to you!\" He lowered himself onto Jayne again, sliding his cockhead along her labes. Finally, he found the opening and pushed forward.\n\n\"Aieeeeeeeee!\" Jayne screamed out as Russell's cock sank into her cunt. He began thrusting savagely, using his weight to power into her again and again as she screamed and squirmed beneath him.\n\n* * * * * * * * * * * * * * *\n\nBilly Russell was waiting in the hallway outside. Senator Russell's security was watching him balefully. As the time went on, his foreboding increased. And then he thought he heard a yelp.\n\nHe peered down the hallway and said \"What was that?\" The guards took the bait and looked. In a flash, he went for the door, and found the handle unlocked. He burst into the room.\n\n\"WHAT THE HELL ARE YOU DOING?\" he yelled as he caught sight of his father on top of his blonde girlfriend, Jayne's nose bleeding from the blows she'd sustained. \"GET OFF HER, YOU RAPIST BASTARD!!\"\n\nBilly charged his father, slamming into him as if he were making a football tackle. The blow sent Senator Russell sprawling. He did not have time to recover, and his pants being halfway down his legs did not help. Billy got to him and drove his bunched fist into his father's ribs, which connected with a sickening *CRUNCH!* Then Billy drove his fist as heard as he could into his father's face, landing another direct, solid blow. \n\nAs Billy rained more blows down onto his father, security people were pouring in, ready to empty their guns into Billy. But they couldn't shoot for a second, because they would've hit the Senator. As the elder Russell collapsed, the Security raised their guns...\n\n\"STOP!\" yelled a woman's voice. Mrs. Russell had rushed into the room as the security men paused for a brief second. \"Stop it, Billy!\" Mrs. Russell yelled.\n\n\"No, Mom!\" Billy yelled. \"I'm going to gill this bastard.\" But the security guards had regrouped, and they attacked and tackled Billy to the floor. They also grabbed Jayne as if she were the violent felon instead of the rape victim. They began driving their fists into Billy's face and body, and also hit Jayne very hard in her face.\n\n\"Get those shit eaters out of here!\" ordered Senator Russell as he pulled up his pants and fastened his belt. \"I'll deal with your ass soon, you punk traitor.\" he snarled at Billy. \"Write your will and put your affairs in order, you little shit.\"\n\nThe guards forced Billy and Jayne to the hallway, continuing to punch them. Other guards, the building's security were coming up the stairs. \"We'll take them.\" said the leader of the building security, an older man with a big mustache.\n\n\"My father raped this woman.\" Billy gasped.\n\n\"Shut up for now, kid.\" said the leader. \"I'm trying to save your lives here.\" \n\nThey proceeded to the garage and to Billy's car. \"Listen, kid,\" said the leader, \"don't stop in the City. Drive all the way out. Go to Westphalia. Take her to the hospital there, call the Westphalia Police. Now get out of here if you want to live.\"\n\nAs Billy drove out, the security people began going back inside and to their posts. the leader had his cellphone out and was making phone calls. His own life depended on a few things now...\n\nPart 18 - Blackmailed\n\nOnce the FBI press conference was over, Cindy and I made our goodbyes and left.\n\n\"There's one other place I need to go,\" I said, \"while we're on this side of the State.\"\n\n\"As long as it's not Sparta, or Acropolis City,\" Cindy said, mentioning the location of Eastern State and then the Capitol of the State to our east, \"then I'm good.\"\n\nI smiled. \"Noooo, not yet, anyway. Just to Westphalia. It's time... to plug a huge leak.\" Cindy's eyes widened in surprise as I filled her in on the details.\n\n* * * * * * * * * * * * * * *\n\nWe pulled in to SBI Headquarters. Cindy went to see SBI Inspector Britt Maxwell and SBI Lt. Norm Chow. I went to the office of SBI Director Tom Conlan. His assistant showed me in.\n\n\"Ah, hello Commander.\" said Conlan as he wrapped up some paperwork. \"Bit of a surprise seeing you. I saw the FBI press conference. Heck of a job you guys did will all that stuff.\"\n\n\"Thank you.\" I said solemnly, making sure the door was closed behind me, and activating the bug-killer. \"That's why I'm here now.\"\n\nConlan was too smart to not realize what I was really saying. I saw first fear, then resignation in his eyes. \"The files? They had everything?\"\n\n\"They had enough.\" I said as I sat down in front of his desk. \"I already knew some of it. Like that TV show says: You are the Mole.\"\n\nConlan bowed his head, then rallied. \"How much do you know?\"\n\n\"Everything, I think.\" I said. \"Why don't I just tell you what I do know, and you fill in the blanks if I go astray.\" Conlan nodded.\n\nI began: \"Some 14 or so years ago, you were driving with your brother Bill Conlan in my home Town & County. Bill already had a couple of DUIs; a third one would mean jail time and loss of his engineering certificates from the State. But he was driving impaired, and you were a passenger in the car.\"\n\n\"You were driving on the Bypass, going north. At the turn, Bill missed the red light, and had to swerve hard to miss a car that was going at a very high rate of speed. That car crashed into the bridge support. Rather than stop to help, Bill floored it, going west and getting to and crossing the State Line.\"\n\n\"Yes.\" said Conlan. \"We drove west and south through the farms for a long way. Came back home crossing the bridge into Benning County, which never had any law enforcement to speak of, and made our way home after a couple of days.\"\n\nI nodded. I said \"The problem was that it was Charlie Griswold's car that crashed. The incident reports of the time suggested that his car swerved to avoid yours, then later settled on a story that Charlie was trying to commit suicide by car crash. Turns out it was neither, and in just the last couple of days we have proved that it was someone trying to murder Charlie.\"\n\n\"Moving along,\" I said, \"that incident scared your brother sober, and kept you sober as well, I would imagine. Y'all went about your lives, hoping the secret was buried... and then a few years ago, as you were making your way up the SBI ladder of power, you were contacted. Someone had enough photo evidence, including a time stamp photo of your brother's car crossing the State Line just minutes after Charlie's crash. That person threatened to expose you. From that point on, that person forced you to use your SBI position to gather information and pass it on to him. Yes, him... it was Pastor Raymond Westboro, the Consultant of Crime.\"\n\n\"Yes, it was.\" said Conlan, his face a mask of shame. \"You cannot imagine how bad it is to be at the mercy of that man. How you beat him, I don't know, but thank God you did! But his death was not enough...\"\n\n\"No.\" I said. \"Your secret was either passed on by him, or found out independently. For the sake of your brother, if not yourself, you had to continue to use your SBI position to pass along information... this time to Senator Katherine Woodburn.\"\n\n\"That's partly right.\" said Conlan. \"She knew, but her aide Queenie knew more. Queenie worked for more than one person; she was an operative for the State Democrat Party. It was Queenie and another person, and I don't know who that person is, that contacted me. They actually said they had no real interest in exposing me and ruining my brother, but they wanted information on Jared and some other things for Woodburn.\"\n\n\"Like the information on the Media.\" I said.\n\n\"Yes.\" said Conlan. \"Queenie had me gather as much information on as many reporters that I could possibly get. And it was easy to get a lot: reporters are an amoral, sleazy bunch, worse than politicians. I realized when you began retaliating against the Press by exposing their affairs that it was my information you were using, and that was the first time I realized Woodburn knew about me being the Mole, as you call it. I don't know why she gave you all that information, though; it was really hot stuff to keep the Press at bay.\"\n\n\"Oh, she gave it to me because she knew I'd use it... and will continue to use it in the future.\" I said. \"She also knew that I was close to learning the secrets of the Queenie Files, and that you were going to be lost as a Mole... which is true. I'm going to have to shut you down.\"\n\n\"How?\" asked Conlan, growing shocked. \"You're not going to... expose me, are you?\"\n\n\"Not if I can help it.\" I said. \"Since I know the truth about Charlie's car crash, I don't hold you guilty of anything of your own doing. But the pipeline into the Jared Administration has to be stopped... and the only way I know of that can make that happen and maybe you not be exposed... is by you resigning as SBI Director.\"\n\n\"I'll do it, of course.\" said Conlan, relief beginning to show on his face. \"But who is going to replace me? Maxwell?\"\n\n\"I don't know.\" I said. \"It's a dilemma, for sure. There are not many good people left to take over the SBI leadership, just excrement like Gaston and Mills. But trust me when I say this, Tom: it wouldn't have mattered. You'd have been gone as SBI Director within a few months, anyway. And in far worse shape than I'm going to leave you in.\"\n\n\"So you think the Dems will win both Houses of the Legislature?\" Conlan asked.\n\n\"Not necessarily.\" I said. \"But some serious power moves are being made all over the State. They think I am stoo-pid and don't see what they are doing. They will be asked to reconsider their premises, but in the meantime... you'll get much better nights of sleep in a new line of work.\"\n\n\"That's certainly true.\" said Conlan. \"Politics in this State are a cesspool of pure filth. I don't know how or why you deal with it. So how long have you known I was a Mole?\" asked Conlan.\n\n\"Since the cases I call the 'Pink Panther' cases.\" I said. \"Remember during that time that you gave me some early information about them? I started looking into things then. I didn't have an answer to succession to the Directorship, and overall you're one of the good guys, so I didn't do anything then. But now... there's no choice. I have to get you safely out of here before the Press figures it out.\"\n\nAfter a few more minutes of discussion, Conlan and I went to Britt Maxwell's office. We went inside. \"Okay, let's put our heads together and try to figure a few things out.\" I said as I turned on the bug-killer again...\n\nPart 19 - Leaders and Followers\n\n3:30pm, Wednesday, August 8th. Cindy and I arrived at the Emergency Room of Westphalia Hospital. Local LEOs and SBI Agent Norm Chow were gathering information. Two full rape kits had been used to collect evidence at Chow's request, and the second set would go to the State Crime Lab in my Town & County, the first going to Westphalia's State Crime Lab.\n\nThe photographers and videographers were at work, and what they were taping was horrific. Jayne Hallerton's lovely face was covered in dark purple bruises, her left eye swollen shut, bruises forming over her body, and unmistakeable rape damage had been done to her vagina. Billy Russell's face was also a mass of bruises, and he had cracked ribs and possible soft tissue damage in potentially vital areas.\n\nCindy and I had gotten the call from E.J. Jefferson of the City Police. I did not ask his source, but Cindy and I rushed down to the hospital.\n\n\"Anyone getting a warrant yet?\" I asked after hearing the stories and seeing Jayne and Billy in their beaten conditions.\n\n\"Yes.\" said Norm Chow. \"Inspector Maxwell herself went up to the Courthouse.\"\n\n\"Good.\" I said. \"As soon as it's issued, let's go get the bastard. How many SBI Agents do we have available, Norm?\"\n\n\"Six, sir.\" said Chow. \"We'll have to have City Police if we go after him at the Cannon Building.\"\n\n* * * * * * * * * * * * * * *\n\nWith the warrant in hand, Cindy, Norm, and I went to City Police HQ, where we met with 'trouble'.\n\nWe first met with Detective Sapper Warren. He called in Detectives E.J. Jefferson and Tony Long. 'Trouble' was introduced when we went to get manpower to effect the arrest.\n\n\"What?!\" shouted the Lieutenant at the Downtown Precinct. \"But... he's a United States Senator! We can't just go arrest him?\"\n\n\"Why not?\" I asked. \"I've got the warrant right here. Forcible rape. Assault and battery.\"\n\n\"Like I said,\" said the Lieutenant, \"he's a Senator!\"\n\n\"What, are you scared of him?\" I asked, looking the man in the eyes. He did not appreciate the affront to his manhood and was squaring up to me. Before Cindy could respond, I said \"Hell, forget it. I'll go arrest him myself.\" I turned to leave.\n\n\"Hold on, Inspector,\" said a Sergeant, using my SBI title. \"All right guys, get your armor!\" The City Police Lieutenant was stunned as he watched his men follow us out the door, but he did not stop us...\n\n* * * * * * * * * * * * * * *\n\n\"Loddy-doddy-everybody,\" announced E.J. Jefferson to the Officers massing in front of the Cannon Building, \"have your armor on. No armor, no fun today. No exceptions.\" Police checked themselves and each other to ensure the armor was being properly worn. Then, at Jefferson's signal, they rushed in and up stairs and elevators.\n\n* * * * * * * * * * * * * * *\n\n\"All right, let's get the fuck out of here.\" said Samuel Russell. \"My wife will be on the chopper with me, we'll take it to City Airport and then fly my private plane to Washington.\"\n\nThe faint sound of a helicopter approaching reached their ears. \"Federal Government.\" said a security man. \"It's ours.\"\n\nHe was half right. The chopper was the Federal Government's: the FBI's. It had just taken off from the Federal Building, not City Airport. You get one guess who the pilot was, and that guess had better be 'Your Iron Crowbar'.\n\nAs I landed on the helipad of the Cannon Building, I saw in the distance that another helicopter was coming in from the north. \"Watch out for that bogey coming in!\" I yelled to the others in the aircraft. \"Let's go! Go go go!\" The Officers exited and ran to the building entrance. I brought up the rear, watching the other helicopter. As it came in, I had my service weapon ready, and Cindy had a no-shit M-4, locked and loaded and ready to go. The other chopper observed us, then peeled off and headed back north.\n\n* * * * * * * * * * * * * * *\n\nThe pincer movement worked to perfection. Officers from above and below converged upon the entrance to Russell's office. His living quarters on the floor below were already secured, and his wife had been taken into custody as a material witness.\n\nMost of the security people were not resisting. But as we converged, some of them drew weapons to protect the door. I decided to treat the City and State LEOs to an exhibition of raw Crowbar power. I hurtled myself into them before they could fire at me. Crowbar met flesh in several sickening thuds as I whirled through them. Seconds later, six security men were on the floor.\n\n\"Six-to-one odds, in our favor yet again.\" said Cindy. \"Cuff 'em. Ready, Rudolph?\"\n\n\"Ready, Santa.\" I said, our play on the old 'Rudolph the Red Nosed Reindeer' Christmas special. I was going to bust in the door, and Cindy would help pivot me so that I could bring maximum power to it. \n\nI took a step back, then a couple of steps forward, and slammed my foot onto the door. I pushed off so hard that it caused me to leave my feet, but Cindy was ready to help brace me. And as I recovered, the momentum of our bodies caused me to be able to sling Cindy at the door, whereupon she delivered a staggeringly powerful kick.\n\nIt worked. The deadbolt held, but the hinges on the other side of the door did not. The door flew into the room. I yanked Cindy back as armored LEOs invaded.\n\nRussell was at his desk, surrounded by security with guns drawn. Laser dots appeared on them and upon the Senator. \n\n\"DROP YOUR WEAPONS!\" one of the City Police shouted. For a split-second, it looked like a bloodbath was about to happen. Then Senator Samuel Russell made his wisest move of the day.\n\n\"Lower your weapons, men.\" he said as Cindy and I came into view. As Officers advanced to arrest him, his eyes were boring into mine. \"You will pay for this, Iron Crowbar. You will pay.\"\n\n\"Funny.\" I replied. \"Mitt Willis said the same thing.\" Russell's eyes turned even darker, if that were possible, and were filled with unappeasable hatred...\n\n* * * * * * * * * * * * * * *\n\nRussell was perp-walked through a crush of Media, and was transported by van to City Police Headquarters. We'd learned from the Mitt Willis arrest: it was only an eight foot walk to the van waiting on the sidewalk.\n\nCindy and I did not participate. We had a helicopter to return to the Federal Building. We did so, making the short trip in just a few minutes. As we landed and I shut down the aircraft, I said \"Anyone asked you about your jurisdictional issues yet?\"\n\n\"No problem.\" she said, exhibiting her SBI Reserve badge. \"Britt swore me back in while you were talking to Conlan.\" I smiled brightly at that, and we fist-bumped.\n\nWe went down to the FBI offices. Clumps of people were surrounding televisions. KSB was covering the arrest of the United States Senator. Talking Heads, which Bettina called experts, were already trying to tell people exactly what to think about all of it.\n\n\"Not a bad job.\" said Jack Muscone as we came into the Team Lazarus office space. \"Got to fly a chopper, bust a door down, arrest one of the most powerful men in the country. More fun than human beings should be allowed to have.\" Cindy and I smiled.\n\n\"The part about arresting the Elitist was sure fun.\" I said.\n\n\"That took a lot of balls, too.\" said the EAD. \"Even though it's pretty obvious he raped that girl, nobody was moving to arrest him until you went through like a tornado.\"\n\nFor some reason, his comments disquieted me, as if he was sending me a message that was more of a warning than a compliment.\n\n* * * * * * * * * * * * * * *\n\nBefore driving back home, Cindy and I went to City Police Headquarters. We were led through interviews on videocamera pertaining to our portions of the Russell case, filled out our paperwork, and discussed the case with Tony Long and Sapper Warren.\n\n\"Pretty cut-and-dried.\" said Long. \"Initial semen analysis already types to Russell, though his lawyer is saying it's the son's semen. The full DNA workups from two different Crime Labs will be back in a week. We took cheek swabs of the Senator, Billy, and Jayne for comparison analysis. This is going to be easy.\"\n\n\"I dunno.\" said Sapper Warren. \"His lawyer was whining about him having to be allowed to go back to Washington. Says something's in the Constitution that says he can't be arrested and held back from his Congressional duties.\"\n\n\"Congress is out of session right now.\" I said. \"He may have a complaint in September when Congress reconvenes, but not now.\"",
        "\"We've got another problem.\" said E.J. Jefferson. He hooked his laptop up to the monitor on the nearby wall and brought up a file. \"This is what Mrs. Russell is telling the ADA.\"\n\nThe tape ran, showing Mrs. Russell saying \"I am saying to you now, and will say under oath in Court: the sex was consentual. There was no rape. I saw it all. That whore Jayne Hallerton came on to my husband, and they engaged in consentual sex.\"\n\n\"How did she get those bad bruises on her face, then?\" asked a female Officer.\n\n\"My son Billy did that.\" said Mrs. Russell. \"He beat the crap out of Jayne when he came in and found her having consentual sex with my husband.\"\n\nE.J. ended the tape playback and said \"Obviously this contradicts what Jayne and Billy are saying. Our Officers and Police Psychologists are trying to probe Mrs. Russell with specific questions, but she's not taking any bait. She's avoiding some questions, but always brings it back to Jayne and Billy as the aggressors.\"\n\n\"Damn.\" Cindy said. \"Stockholm Syndrome and then some.\"\n\n\"Maybe a little more practical than that.\" I said. \"She throws her husband under the bus, and what does she have left? No income, his wealth and power base gone, a son that hates her and a daughter that doesn't give a rip, if I don't miss my guess...\"\n\n\"And you never do.\" Cindy said bleakly. \"Unfortunately.\"\n\nWith that, having no more to do with this case, we made our goodbyes and drove towards home. We stopped at Molly's, where the boys were very excited to see Daddy on a weeknight. I took everyone out to dinner, and I talked to Ian and Ross while Cindy and Molly gossiped. Then I tucked the boys in at home before Cindy and I headed on to my own Town & County.\n\n\"I just don't get to see them enough.\" I said wistfully. \"Not blaming Molly in any way, but I'd love to see them every day, like I do Carole and Jim.\"\n\n\"You do pretty well with that.\" Cindy said. \"Most weekends at The Cabin, weekdays here and there. At least they and their mom are close by.\"\n\n\"Yes.\" I said. \"In that, I am blessed, and will stop bitching about it.\" Cindy smiled at that, and I suspected that smile contained an unspoken biting, sarcastic remark...\n\nPart 20 - Accolades\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporterette at 7:00am, Thursday, August 9th, from in front of the Federal Office Building. \"Fox Two News is bringing you continuing coverage of yesterday's arrest of U.S. Senator Samuel Russell!\"\n\nBettina began: \"Senator Russell has been accused by Jayne Hallerton, a former student at the University, of forcible rape. Charges of assault and battery were also added when Billy Russell, the Senator's son, was accosted by Russell's security when Billy tried to help Ms. Hallerton. Billy Russell and Ms. Hallerton allege they were severely physically beaten by the security personnel upon Senator Russell's orders.\"\n\n\"However,\" said Bettina, \"Senator Russell furiously denies the charges, and his wife so far has corroborated his story that the sex was consentual, that Billy Russell was the aggressor and beat up Jayne Hallerton after discovering her having consentual sex with Billy's father. Reaction around the State was swift. Roll tape.\"\n\n\"This needs to be thoroughly investigated.\" said Republican U.S. Senator Richard Nunn. \"And Senator Russell needs to step down as U.S. Senator.\"\n\n\"There are disputed accounts of what took place.\" said Lt. Governor Graham Collins. \"We need to discover the truth, and remember that a person is innocent until proved guilty.\"\n\n\"There's no doubt in my mind that this is a story created by a tramp and her sleazebag boyfriend.\" said House and Ways Chairman Wilson Hammonds. \"Senator Russell is a fine, upstanding man, and his wife speaking on his behalf just proves that he is innocent of these charges.\"\n\n\"Senator Russell is typical of the sleazebag Republicans that trample on the rights and bodies of women.\" said Patricia Iceland, head of the State Organization of Women, the SOWs.\n\n\"Typical Republican sleaze.\" said State Rep. Elijah McKinney of Southport. \"Republicans hate women, think they're only good for being raped.\"\n\n\"I'll just say one thing.\" said State Senator Katherine Woodburn. \"Commander Donald Troy has not treated this case like a false accusation! He led the Officers that made the arrest of Republican Senator Russell.\"\n\nBack to Bettina live: \"The SBI took the lead in the investigation, as Jayne Hallerton went to the Westphalia Hospital and called local Police from there. But with the case occurring in the City, the jurisdiction is there. SBI Inspector Donald Troy oversaw the processing of the evidence, and executed the warrant once it was issued. The evidence is being processed in not one but two of the six State Crime Labs, and is being treated with special care due to the status of the accused.\"\n\n\"And in other news,\" said Bettina, \"Fox Two News has learned from several sources that SBI Director Tom Conlan may resign from the SBI as early as today. Mr. Conlan has been rumored to have been considering this move for some time, and may have moved up his timetable due to health considerations.\"\n\n\"And last,\" said Bettina, \"Governor Jared has announced that he will award the Governor's Gold Medal to quadriplegic Charlie Griswold. Young Mr. Griswold is credited with solving encrypted files that led to the arrest of wanted fugitive Jack King...\"\n\n* * * * * * * * * * * * * * *\n\n\"The Press is absolutely stunned that the Iron Crowbar went and made that arrest of a sitting U.S. Senator.\" said Chief Moynahan. \"So are the poli-tisssshhhhhh-uns, for that matter.\"\n\n\"The City Police were pretty reticent to do a damn thing, as well.\" said Cindy Ross. \"But the Iron Crowbar has no fear of the Elites.\"\n\n\"Must've been that practice perp-walking Mittens Willis that desensitized me.\" I said.\n\n\"Speaking of that,\" said Theo Washington, \"why is Senator Woodburn giving you props, Commander?\"\n\n\"Who knows?\" I said simply. I had not figured out what that was about, yet.\n\n\"That's great for Charlie,\" said Joanne, \"that he's going to be awarded for his good work. I just wish there was more we could give him to do.\"\n\n\"I think some good things are being worked on.\" I said. \"Time will tell on that.\"\n\n* * * * * * * * * * * * * * *\n\nAs my Angels came in to my office just before 8:00am, it was Tanya that said \"You know, Bettina didn't go over to Tim Sioban of KSB for the report on Senator Russell, and I found out why. Jack texted me and said that KSB is not covering the arrest at all.\"\n\n\"Wow.\" I said flatly. \"Well, lets see if the SNN cabal is covering it.\"\n\n\"This is Cynthia Freeman, KSTD Five-Alive News in the Morning!\" said Cynthia Freeman at 8:00am. \"We are going to our SNN affiliate in the City. Diane!\"\n\n\"Thank you, everyone.\" said Diane Williams of KCTY, speaking slowly and condescendingly as if instructing small, brain-addled children. \"We are covering the arrest of U.S. Senator Samuel Russell and the very disputed allegations that he sexually assaulted a woman yesterday. The Senator's wife corroborates his story, while the accusation is backed up by the Senator's son.\"\n\nThe rest of the report was scant, and soon KSTD had Cynthia Freeman back on the air. \"In local news, the Governor of the State will be visiting University Hospital today, where he will confer the Governor's Gold Medal upon Charlie Griswold for Mr. Griswold's actions decoding files which led to the arrest of an escaped prisoner and international criminal. Mr. Griswold is a quadriplegic, and can only communicate by blinking Morse Code with his eyes...\"\n\n* * * * * * * * * * * * * * *\n\n\"They're starting to bury it.\" Cindy declared. \"They're starting to bury the Russell rape story, aren't they?\" She was peering at me. So were my other two Angels.\n\n\"Looks like it.\" I said quietly. \"Okay, down to business. Commander Ross, are you staying?\"\n\n\"If you don't mind, I think I will.\" said Cindy. \"I need to know what you guys are planning, so I can make sure it's budgeted.\"\n\n\"Sure.\" I said. \"So, ladies, this is your chance to get all of the Christmas goodies that you want.\" Everyone laughed. \n\n\"All I want for Christmas,\" said Teresa, \"is a new 1st Precinct Captain.\" Tanya and Cindy were shocked. It is possible that I was not.\n\n\"What's wrong with Goodwin?\" asked Tanya. \"He stirring up Union trouble?\"\n\n\"Some.\" Teresa replied. \"But I'm getting word that he's put out feelers for job opportunities. Other Police Departments, security at big businesses in the area...\" She was looking at me as she said it.\n\n\"Oh my goodness.\" said Tanya. \"Why? That business with Julia?\"\n\n\"That's some of it.\" I said. \"He consulted with the Union about a grievance, and was told he had no case. He's still got a bit of righteous dander up about us taking Rodriguez from under his nose. But I think Captain Croyle is seeing what I'm seeing: the SBI is about to be in need of a good dose of integrity.\"\n\n\"And Goodwin would be a good fit for SBI Director.\" said Teresa.\n\n\"O.M.G.\" said Tanya. \"So that Press crap isn't just a rumor? Conlan is leaving the SBI?\"\n\nI nodded. \"Yes, and for health reasons.\" I said, not giving the real reasons, which Tanya would learn over time. \"And his leaving creates a real hole in the SBI leadership. Britt Maxwell does not want the job; she wants to stay where she is, and I don't blame her. There's not a lot of people left to consider. Lt. Leon Mills is the Press's frontrunner, but he's so dirty that not even a box of Tide can clean him up.\"\n\n\"Roll Tide Roll.\" muttered Cindy Ross with a sideways look at Teresa. She received a look that would've been a crowbar being waved in her general direction... if Teresa carried a crowbar.\n\n\"Soooo,\" I said, \"Precinct Captain Goodwin will just happen to be available to talk to the Governor today at the Gold Medal ceremony. So, Teresa, what are your plans for a replacement?\"\n\n\"I know you won't promote Irwin nor Rudistan yet.\" said Teresa. \"So I've about decided that we could laterally transfer PCpt. Carswell from 2d Precinct to 1st Precinct, and then see about filling in that 2d Precinct role.\"\n\n\"I like the idea of moving Carswell.\" I said. \"He's good, but laid back, and probably would be more comfortable with Irwin than the 'Energizer Bunny' that Rudistan can be.\"\n\n\"What about Sergeant Abram?\" Cindy said. \"He should've been a Lieutenant already, if you ask me. I think his Judaism has held him back from promotions in the past, but this here Police Commander won't brook that crap today. He's got a stellar record, and has pretty much run the Police Force during the Christmas season.\"\n\n\"The only problem I have with that, Commander Ross,\" I said, \"is that I did not think of it myself first.\" Everyone broke out laughing at that.\n\n* * * * * * * * * * * * * * *\n\n\"Good morning, Priya.\" said Katherine Woodburn as Priya came into the State Senator's office at her home. \"You look very beautiful today.\"\n\n\"It's because of that night we had together last night.\" Priya said with a lovely smile. \n\n\"Yes, that was wonderful.\" said Katherine. \"Even better is when Clark joins us for threesomes.\" \n\n\"Mmmm, and what about if Don Troy ever joins us for a hot threesome?\" Priya asked. \"You would have orgasms all night long.\"\n\n\"As would you.\" replied Katherine, both women knowing she had a crush on the Iron Crowbar's 'other' crowbar, though knowing he was the deeply hated Enemy. \"So. what are the agenda items today.\"\n\n\"You've been invited to attend the ceremony for the Governor awarding the Governor's Gold Medal to Charlie Griswold.\" said Priya. \"Nothing is scheduled yet about the shakeup in the SBI leadership, but we're expecting phone calls as well as the Press calling for a reaction from you.\"\n\n\"Yes...\" said Katherine, going introspective. \"I'm still pretty amazed that Charlie Griswold decoded those files, and so quickly. Of course the Iron Crowbar was working with him, may have done most of the work then given Charlie most of the credit...\" She continued to think.\n\n\"I'm hearing that Charlie did most of it,\" replied Priya, \"and that he caught the FBI's attention.\"\n\n\"Interesting.\" said Katherine. \"Well, I wish I could go see him, but I cannot be seen in public with Jared. So... send a note to the Griswold's, Charlie's parents, saying I can't be at the ceremony, but congratulations to Charlie. Now, who do we want to replace Tom Conlan as SBI Director?\"\n\n\"Leon Mills is the Media choice.\" said Priya. \"We don't want Britt Maxwell, but she's staying where she is as State Inspector General. No one thinks the Iron Crowbar will take it. Some Democrats are suggesting Robert Mullen, but there's no way the Governor would appoint him.\"\n\n\"All true.\" said Katherine. \"The biggest problem right now, for me anyway, is that we were going to get Jack Lewis back into the SBI Director slot, and start pounding Moynahan here, Soltis in Midtown, Evans in Hillside, and the Iron Crowbar here. But it's too soon. And Conlan's usefulness to us... is ended.\"\n\n* * * * * * * * * * * * * * *\n\nThe entourage of State Patrol vehicles and armored SUVs was for show. The University Hospital life flight helicopter had been landed on the football field at Memorial Stadium, still close by but off the roof. On the roof of the Hospital landed a Bell 206, and from it departed the Governor, an aide, and a State Patrolman assigned to the Governor's security.\n\nThe ensemble collected itself in the waiting room near the hospice wing of the Hospital. Governor Jared made a couple of pictures with the Hospital Administrator and Dr. Napp, who received a citation for his cutting-edge cancer research.\n\nThen Chief Griswold led the way down the hall to his son's room. Senior Chief Petty Officer Jonathan Davis (USN - Ret.) was ready to interpret as the video cameras and photography cameras went to work.\n\nThe Governor was introduced by Chief Griswold. Charlie blinked that he remembered the Governor from years before. Then the proclamation was read as the Governor pinned the Gold Medal to Charlie's pajama shirt.\n\n\"He says 'thank you'.\" announced Mr. Davis. A couple more pictures were taken. The Griswolds stayed with Charlie as the room emptied. In the hallway, the Governor came up to me and one of my Officers.\n\n\"Governor,\" I said, \"this is Precinct Captain James Goodwin. He ran our Internal Affairs for several years. This room to your left is empty; why don't you talk to Captain Goodwin about the open SBI Director slot?\"\n\n\"You anticipate my every want, Commander.\" said the Governor. He and Goodwin went into the empty room for a conversation.\n\nAfter they went into the room, the FBI contingent came in. Jack Muscone and Martin Nash led Special Agent in Charge Ashton Cardigan into Charlie's room. I was asked to come in with them.\n\n\"Hello, Charlie.\" said Cardigan. \"My name is Ashton Cardigan. I'm in charge of cybersecurity and cyber-related crimes for this region of the country. We were very impressed with your work on the Queenie Files.\"\n\n\"T h a n k y o u.\" blinked Charlie.\n\n\"Your friend Commander Troy is an FBI Consultant with us.\" said Cardigan. \"We would like to offer you a paid FBI Consulting job as well, helping us crack codes and stuff. You'd be part of Law Enforcement, like Commander Troy... and like your father. Would that interest you?\"\n\nThere were tears in Charlie's eyes as he blinked \"Y E S! T h a n k y o u.\" There may have been some tears in Chief Griswold's eyes, as well as Cardigan clipped an FBI Consultant badge on Charlie's shirt, next to the Governor's Gold Medal. \n\nAs Cardigan had said... the son was following the father into law enforcement. Charlie's childhood dream. His father's dream for him, as well...\n\n* * * * * * * * * * * * * * *\n\n\"I think he'll do well.\" said the Governor. \"I've asked SBI-Director-to-be Goodwin to fly down to Midtown with me. We'll have the press conference this afternoon.\"\n\n\"Congratulations.\" I said to Goodwin as we shook hands. \"This'll be great for you.\"\n\n\"Thank you, Commander.\" said Goodwin. \"I'll email my TCPD resignation... a very reluctant resignation... later today.\"\n\nIt would work out. The Governor had told Goodwin that SBI Inspector Britt Maxwell did not answer to him but to the Governor directly (nothing new there), and also clarified what I was: technically a Reservist and answerable to him while on SBI duty, but I was really pretty much my own 'special unit' inside the SBI which answered to the Governor.\n\nBottom line, Goodwin having worked for me in the past and now being over me was a mitigated issue, and Goodwin would be able to clean up the SBI and 'fundamentally transform' it, as the Governor wanted, into a unit helpful to local LEOs and Statewide crimefighting...\n\nPart 21 - Three Phone Calls\n\nIt was the afternoon of Thursday, August 9th. SBI Lieutenant Leon Mills sat in his office in Midtown. It had been a busy day for his telephone. The Press and the half of the SBI that talked to him had been calling about the news that was traveling throughout the State like lightning on a wire.\n\nLeon Mills had been assistant to SBI Deputy Director Robert Gaston back when Jack Lewis was Director of the SBI. Mills was one of the dirty players, like-minded with the likes of Justin Pelletier and Richard 'Dick' Ferrell. He was now ostensibly attached to the Narcotics Task Force, but in reality he was a 'free agent' and a loose cannon.\n\nHe knew well that SBI Inspector General Britt Maxwell was constantly and ceaselessly investigating him, and that the Iron Crowbar was well aware of his (Mills's) dirty hands. And that made his work a little bit harder: he was the crossroads of a group of politicians, crony capitalists, and State LEOs that were working to restore the SBI to a position of crushing authority over local jurisdictions, with Jack Lewis returned to his rightful place as SBI Director.\n\nFor reasons he could not understand, everything the group was doing was failing. The SBI-NTF was paralyzed with incompetence and lack of resources, while the SBI Inspector was all over the place... except she would never investigate that bastard Governor Jared for anything.\n\nAnd now, absolute disaster. Tom Conlan, who was being effectively blackmailed into immobility, had resigned. The Queenie Files had been cracked, and his (Mills's) name was one of those listed in the files, which meant the FBI was now paying attention to him. The plans to restore Lewis were breaking down fast, especially if the Governor found someone honest to run the SBI as Director. That would be a disaster.\n\nThe first phone call came. \"Hello, Lieutenant Governor.\" Mills said.\n\n\"Hello, Leon.\" said Graham Collins. \"What's the word on Conlan's resignation?\"\n\n\"Word I'm getting is health reasons.\" said Mills. \"But we can put two and two together: Some encrypted files were decoded, and Conlan is resigning.\"\n\n\"Cause and effect, eh?\" said Collins. \"So what does this do for getting Jared out?\"\n\n\"Back burner at least.\" said Mills. \"We're hoping Mullen comes up with something, but word I'm getting is that Jared's aides aren't giving Mullen enough.\"\n\nCollins swore. He then said \"Look, Leon, time is getting short. Samuel Russell couldn't keep his pants zipped up, and now he's being accused of rape. We have got to get Jared so that Russell can resign and be replaced by one of our guys.\"\n\n\"I'm doing what I can, Mr. Collins.\" said Mills. \"I'm putting out a lot of fires right now, though.\"\n\n\"Mills, you're our SBI guy.\" said Collins. \"Come up with something. Something effective. I'll get you the Governor's schedule for the next few weeks; maybe that will help you plan something. Gotta go.\" With that, the cellphone connection ended.\n\n* * * * * * * * * * * * * * *\n\n\"Hello, Leon.\" said Jack Lewis.\n\n\"Hello, sir.\" said Mills. Their connection was by cellphone. \"What can I do for you?\"",
        "\"What's the status of the Queenie Files?\" asked Lewis.\n\n\"They were cracked, Mr. Lewis.\" said Mills. \"Your buddy Griswold's son broke them from his hospital bed.\"\n\n\"Griswold is no buddy of mine.\" growled Lewis. \"Don't ever say that again, even joking. So what's the damage?\"\n\n\"Conlan resigned as SBI Director, sir.\" said Mills. \"Possibly due to information in the files. That happened too fast; now our plans to bring you back are breaking down.\"\n\n\"All because of that fucking cripple.\" muttered Lewis. \"God damn him, and his father!\"\n\n\"Yes sir.\" said Mills. \"All we can do now is wait until the midterm elections, see who wins the Houses of the Legislature.\"\n\n\"True.\" said Lewis. \"Well, see what you can find out and get back to me. Oh, and make sure you keep an eye on Katherine Woodburn. That bitch is worse than a Spider in the center of a web. She comes out and bites people once in a while. This disaster may just be one of her bites...\"\n\n* * * * * * * * * * * * * * *\n\n\"Mills.\" said Mills, answering his cellphone again.\n\n\"It's a disaster in that State.\" said a voice familiar to Mills. \"The FBI is starting to look at me now. The attention is... bothersome.\"\n\n\"Yes sir, I know.\" said Mills. \"And the SBI Director resigned.\"\n\n\"That is nothing.\" said the man on the other end of the line. \"The FBI wants to bring young Griswold into their cyber fold as a Consultant. That would be another total disaster for us.\"\n\n\"What do you want me to do about it, sir?\" asked Mills.\n\n\"You remember the Consultant's methods.\" said the man. \"Use them.\"\n\nThe line went dead.\n\nPart 22 - Succession\n\nAt 3:30pm, Thursday, August 9th, MCD became a little crowded. We gathered to watch the Press Conference from the State Capitol building.\n\n\"Thank you for coming.\" said Governor Val Jared, stepping up to the bank of microphones in front of the gaggle of Press reporters, flanked by Tom Conlan and James 'Curly' Goodwin.\n\n\"First,\" said the Governor, \"I had the pleasure of awarding Charlie Griswold the Governor's Gold Medal this morning. Despite being a quadriplegic who can only communicate by blinking his eyes, Charlie Griswold decoded several encrypted files that allowed wanted fugitive Jack King to be arrested and returned to prison. Mr. Griswold has been offered and has accepted an opportunity to work with the FBI in their crypto-analysis units.\" Staffers applauded. Others joined in.\n\n\"Second,\" said the Governor, \"I have reluctantly accepted the resignation of Tom Conlan as SBI Director. Tom has done a tremendous job in the SBI, and as its Director he has helped clean up the corruption and re-direct the SBI's mission to one the People of our State can be justifiably proud.\" Staffers applauded. No one else joined in.\n\n\"Third,\" said the Governor, \"I am happy to say that James Goodwin of the Town & County Police Force has accepted my request to become the next Director of the SBI. Captain Goodwin did an excellent job leading the Internal Affairs Department of the TCPD, and he brings that integrity and work ethic to the SBI. I look forward to working with Director Goodwin to continue the work to 'fundamentally transform' the SBI into an organization that will serve local Law Enforcement, not attempt to rule over it.\" Staffers applauded. Everyone else was shocked at the speed with which the position had been filled.\n\n* * * * * * * * * * * * * * *\n\n\"That's that.\" said Captain Teresa Croyle as we turned from the televisions and people began trickling out.\n\n\"Who is going to replace Precinct Captain Goodwin, ma'am?\" asked Detective Julia Rodriguez.\n\n\"Not sure yet.\" Teresa said, though she knew 2d Precinct Captain Carswell had been told he'd be transferring on Monday morning. \"I heard Commander Ross is getting bored with budgets. Maybe she'll apply for the job.\"\n\n\"Commander Ross is getting bored with boring Police Captains.\" replied Commander Ross. Detectives were wide-eyed with the seemingly vicious repart\u00e9e.\n\n\"Good thing we have none of those around here.\" I said. \"Never a boring day in the Town & County Police Force. But Goodwin going to the SBI will be a good step up for him, and good for the SBI.\" And good for us, I silently thought to myself.\n\n\"The Governor acted fast on that.\" said Theo Washington. \"He comes into this County, rewards Charlie, leaves with a new SBI Director.\"\n\n\"Things move fast in this County, Theo.\" I said. \"Especially boring Captains trying to run over me with their tanks.\" Indeed, Tanya had driven her wheelchair right up behind me, her eyes sparkling and her cheeks rosy with perkiness.\n\n\"Unfortunately, Commander,\" Tanya said, \"things are getting slow. I'm thinking we may need to dig up a cold case to have some fun with. Parker! You up to that?\"\n\n\"Yes ma'am.\" said Parker.\n\n\"Ma'am,\" said Jerome Davis, \"Parker has been helping me work on the perps that sabotaged Charlie Griswold's car. Can I keep him for a little longer?\"\n\n\"Sounds like that's a cold case in itself.\" said Tanya. \"Sure, keep at it.\"\n\n* * * * * * * * * * * * * * *\n\nOn my way home that evening, I had a thought that I should go by and see Charlie. I figured he might be asleep, but upon getting to his room, I found him to be awake. He began blinking his eyes furiously.\n\n\"Whoa, whoa, slow down, buddy.\" I said quietly. He did so, now that he knew he had my attention.\n\nHe began blinking: \"D o n, t h a n k s f o r e v e r y t h i n g.\"\n\nI smiled. \"Glad to have been of help.\" I said. More furious blinking, then Charlie slowed down again.\n\n\"D o n,\" he blinked, \"p l e a s e... t a k e c a r e o f M o m a n d D a d f o r m e.\"\n\nI nodded. \"I can promise you that.\" I said. \"I will take care of them. For you and for me.\"\n\n\"T h a n k y o u, b r o t h e r.\" Charlie blinked. I could see he was exhausted, so I told him I would come see him the next day. He was asleep by the time I got out of the room.\n\nI contemplated what he had said, and had asked. And yes, I could do what he wanted to do but could not do himself. Wasn't there an old song about that? He ain't heavy, he's my brother..., I thought...\n\nPart 22 - League of Shadows\n\n3:15am, Friday, August 10th.\n\nThe orderly came up to Patrolman Phil Goodwright.\n\n\"Whatcha got?\" asked Goodwright.\n\n\"Nutritional supplements.\" said the orderly. \"Just like last night.\" He exhibited his Hospital badge. Goodwright scanned the bar code on it, and the reader said the badge was legitimate. \n\nThe orderly went into Charlie Griswold's room and hooked up the IV bag he'd brought with him into Charlie's water tube.\n\n\"What's going on?\" said Police Sergeant DeLong, who'd seen the orderly go in from a distance.\n\n\"Said he had nutritional supplements.\" said Goodwright. \"Brought them in last night, too. Said the doctors were upping Charlie's intake because of all the excitement he's been through.\"\n\n\"I'm going to the Nurse's Station and check that out.\" said DeLong. He began walking down the hall.\n\nA moment later the orderly came out. He'd left the rolling table with the IV materials in the room, Goodwright had noticed.\n\n\"Hey, hold on a second.\" he called out. The orderly continued on as if he'd heard nothing.\n\n\"Hey, stop!\" called out Goodwright. The orderly looked back, then began running.\n\nDeLong saw what was going on, and as the orderly tore around the corner, DeLong gave chase. The nurse at the station was calling in the code to lock the Hospital down.\n\nThe orderly ran down the hallway and turned a corner, then ran down the hall to another patient room. He rushed inside. The room was empty.\n\n* * * * * * * * * * * * * * *\n\nThe TCPD Officers were converged around the door. Sergeant DeLong gave the signal, and Corporals Kirkpatrick and Hicks burst in.\n\n\"Clear!\" called out Hicks. Officers came in. The orderly was lying on the floor, dead. A pungent odor of almonds as well as the foam drooling from his mouth showed that he had self-ingested cyanide.\n\nThey went back towards Charlie's room, where several nurses and two doctors had already convened. They knew this wasn't good.\n\n\"Call Commander Troy.\" said Corporal Hicks. \"Bad news does not get better with age.\"\n\n* * * * * * * * * * * * * * *\n\nI stepped off the elevator and turned towards the Hospice side of the facility. I saw Hicks and DeLong at the hallway intersection, looking grim... and a little bit scared.\n\n\"What happened?\" I asked. They recounted the chase and finding the body. DeLong filled in what he knew about the orderly as we went down the hall.\n\n\"He was here last night, sir.\" said a considerably agitated Goodwright. \"His badge checked out.\" I looked at the information that was still on the badge reader.\n\n\"Looks like you guys did right, and all that you could.\" I said. \"Okay, let's go see...\"\n\nI went to Charlie's room. Dr. Morgan and Dr. Cordell were there. The Admiral looked about as profoundly sad as I'd ever seen him look.\n\n\"The Crime Lab just took the IV bag.\" said Cordell. \"Looks like barbiturates and maybe potassium chloride.\"\n\nI looked onto the bed. Charlie was lying there, as always, staring at the ceiling. The eyes were no longer blinking. I reached over and closed them, tears in my own eyes.\n\nCharlie Griswold was gone.\n\nTo be continued.\n\nWho is behind the killing of Charlie Griswold? Final chapter next..."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "nonconsent",
        "mystery",
        "drama",
        "police drama",
        "crime drama",
        "iron crowbar",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/fathers-and-sons-ch-03"
}