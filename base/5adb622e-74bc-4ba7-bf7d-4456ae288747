{
    "title": "Bengali Tigress",
    "pages": [
        "This is a story of an erotic encounter that turns into romance. There are some twists along the way before the confrontational conclusion. There is a fair amount of sex in this, a lot of sensual foreplay, and many other moments of pleasure.\n\nI would like to give a big thanks to fellow author norafares, as she provided the inspiration for the female character, advised on the Bengali aspects, and line edited the final version.\n\nI really appreciate comments, as they confirm, or add perspective to, my awareness of what this audience appreciates, or dislikes. However, pedantic nit-picking comments that do not comment on the storyline will be deleted.\n\nBENGALI TIGRESS\n\n\"God, is my boss ever going to Shut UP?\"\n\n\"Come on Nick, look at those tits! Don't you just want to motorboat those beauties? [burp] Never seen 'em that big in Singapore before, ya know! Maybe I should try to get a quick bounce with that one before I head out for that damn redeye flight in... shit, is this watch working ...an hour and a half?\"\n\n\"I hate it when Mr. Hayward drinks and talks about women like this, like they're... What? ...toys for his express enjoyment? You jerk, Martin, their beautiful creatures, and to be appreciated as such.\" \n\nTrying to keep the disgust off of my face, I answered, \"Hey Martin, they said they'd pick you up at 10:20, and that's only an hour and 5 minutes from now. Don't you think... like, maybe ...you ought to slow down on those martinis?\"\n\n\"Hah! Nick, boy, you and I did it! Closed that Manjur International deal. Fuckers never knew what hit 'em!\"\n\n\"Geez... I hope nobody in this bar heard that! We wouldn't want that to get back to Manjur.\"\n\nHiding my frustration, I smiled, \"Yeah, and you get to leave tonight. I'm still here for another week to work out the final specs for that double-redundant system you sold them.\"\n\n\"Shit!\" he grinned, \"You get to chase all this cute ass for a week! If you'd just workout, buff up, Nick, you'd have 'em crawling at your feet. You're a good lookin' guy, ya know?\"\n\n\"Not this again, Martin... Please? I don't want to be a male model or the living embodiment of a Romance cover for some dreamy-eyed schoolgirl! I've told you, physical appearance isn't enough for me. I want a woman with intelligence, character, charm... and sensuality. That's if you haven't scared them all off, you loudmouth!\"\n\n\"Me?\" Martin had continued as those thoughts of mine had rolled on, \"I have to go back to the PC land of [burp] headquarters, where Cheryl... do you know Cheryl?\"\n\nI shook my head, resigned to another onslaught of verbal testosterone.\n\n\"Cheryl is the VP of marketing's secretary. Best tits in the whole damn company and she knows it, the cock teasing pussy.\"\n\n\"Give me a break, Martin! Tits, ass, pussy. I can't... even think of women in those terms.\"\n\n\"So Nick, can I go up to her and tell her what I wanna do with her super hooters? Fuck no. PC shit. 'Nice day Cheryl. Good to see you, Cheryl.' Not even a 'The girls are looking fine today, Cheryl'. Damn 'political correctness'. Takes all the fun out of flirting.\"\n\n\"What about their exquisite curves, Martin? Their mesmerizing eyes, delightful smiles, or haunting voices? Does that ever enter your caveman brain?\"\n\nThis time my sigh was audible. \"So, you talk to Michelle and the kids recently?\"\n\n\"Phhhfff...\" Martin exhaled through his closed lips. \"Bitch will only let me have 'em for one afternoon, next weekend. I'm their goddam father, Nick, [burp, choke] and I [cough] get 'em for two afternoons a month. And even that little bit cost me big, cuz of her weasel lawyer. They'll be going to college soon, and then I'll never see 'em!\"\n\n\"God, he has got to be a helluva liability for our company. If his real mouth ever got going in front of clients... Poof! This objectifying pig Would fly! If he wasn't such a damn good closer, I'd ask to be somebody else's sales engineer, in a flash.\"\n\nI clenched my lips to get my words under control, \"Okay, Martin... you ready for your shuttle in... uh... 55 minutes?\"\n\n\"Shit... Suppose I better go pack. Ha!\"\n\nI was so thankful when he stood, but my luck didn't hold.\n\n\"Hey, Nicky boy!\" Look at that one! Not one of those local chinky pieces of ass!\"\n\n\"Martin!\" I barked, louder than I intended. \"Please... keep your voice down, if you going to insult people!\" I hissed.\n\n\"Ha! Nicky boy has a voice! Good for you!\" Then he lecherously winked. \"I'm gonna see if I can fit that one into my suitcase.\"\n\nI watched him weave after the admittedly beautiful woman, at least from my view of her backside. Not tall, satiny gold two piece with a skirt. Her bare midriff displayed an impressively small waist. \"Lovely shape!\" Her dark, slightly ruffled hair wandered down to just short of that bare skin.\n\nHer reflective gold spike heels carried her to a tall bar chair. Martin was closing in. I watched from my booth, with her at the far end of the bar from where I sat.\n\nFacing forward, she set her gold clutch purse on the counter, both hands calmly resting on top of it. She had exotic tapering almond-shaped eyes on a lovely square-shaped face with a mildly pointed chin. Martin moved in beside her, leaning forward to try to look back at her face. I cringed for her. Her eyes swung to look at him, while the rest of her face didn't move. As I only saw the back/top of his head, I assumed Martin was grinning at her, but her mouth gave up only a taut, amused smirk.\n\nI expected Martin was talking from the way his head shifted about and then I saw him wave two fingers at the bartender. She quickly waved off the order, wagging one rather small finger, and then her eyes swiveled back to Martin. She said no more than a few words, and Martin slightly backed away. His head shifted around again, and I saw her eyes take on an icy glare. The smirk remained but was no longer amused.\n\nI became a bit anxious when she paused. Then it looked like she said two words, with no obvious anger. Martin stood up, slowly. Her appealing eyes softened and returned to center. Martin said something, and walked away. Her smirk was now 'contented'.\n\nShe was a cool cat if she could snuff Martin that easily, and therefore, I was intrigued.\n\nMartin returned to our booth, but stayed standing. \"She's one fine piece, Nicky! But she could star in Frozen... BRRrrr! Sure if I had more time, I could thaw her out and get her in the sack. But, hey, her loss! Anyway, don't fuck up the Manjur deal, when I'm gone!\"\n\n\"Geez, Martin! You know I'm not...\"\n\n\"I know, I know. Got complete faith in ya kid. Ya haven't let us down yet... Just don't start here, okay? Gotta fly. Hah!\"\n\n\"Have a good flight.\" My relief could begin, now.\n\nWith a sloppy pat on my shoulder, he began what would be a nearly linear path to the hotel bar's exit. I watched the exit for nearly five seconds to make sure he was gone. Then I took a deep breath and leaned back in the booth, as I sipped on my whiskey sour.\n\n\"Alright Nicholas, you've got a lot to do at Manjur's computer center on Monday, so you've only got tomorrow to get your brain in gear. That second backup Martin just added to the order is going to be a bitch, since I didn't check for space for a second backup cooling system when we were there. I think they'll both fit, but man, am I ever crossing my fingers!\"\n\nMy eyes wandered in thought, but my brain fell out of engineering mode instantly when I saw her eyes looking at me. Her smirk curled up a little, as her eyes went down, and then came back up to examine the wall of liquor bottles behind the bar. I watched as she brought the straw of her tall, dark drink up and slowly wrapped those reddened lips around it.\n\n\"Can't remember when I've seen someone smirk while drinking through a straw?\"\n\nMy mind didn't know what to make of this attractive, inscrutable woman. There was the vaguest familiarity in her looks, but I couldn't think of who she reminded me of. Sifting through memories of actresses, friends, and family turned up nothing. I supposed it might come back to me before she left the bar. But I didn't want her to leave, since I was enjoying the puzzle of studying what kind of person she must be.\n\nI knew I sure didn't have any clever opening lines that were worthy of her, if not simply way too clich\u00e9. My repertoire of snappy remarks was quite limited. That's if my voice didn't bobble when I tried to break the ice. Some beautiful women left me cold, as they were so wrapped up in being the center of attention. I liked beautiful women on the other end of the spectrum: Ones who found their looks a happy stroke of luck, but seemed like they would be the same person regardless of whether their looks got attention.\n\nI could only wonder where Martin's \"Ice Queen\" fell on this scale, if she even fit into it. She certainly dressed to please the eye, yet nothing was flirtatious. I hadn't seen her talk to anyone besides Martin and the bartender. What was her interest in being here? She didn't look sad or lonely, as her eyes prowled the bar. She seemed to study everything.\n\nThen her eyes again landed on me. This time there was the briefest pause, before her eyes continued. It was a moment longer than I had seen her look at anyone else.\n\nI wanted to contemplate that pause, but dinner, lots of water, and a couple drinks were making their presence known. I asked the waitress where the restrooms were. She pointed to the far end of the bar, right behind my puzzle of a woman.\n\nI put my cocktail napkin over my drink and then headed off. The briefest of glimpses of her came from between other patrons at the crowded bar counter as I walked along. I thought I saw her eyes turned my way. As I approached her, I couldn't see her face. After I passed by her, I nearly got my face flattened by the bathroom door when a rushing customer came out. Payment for the luck of that near-miss was a rather sore toe.\n\nWhen I came out, she was talking to the female bartender. Over the background noise, I wasn't sure if she was whispering, or just had a very soft voice. I slowed for step or two, and the only word, of the few I heard, seemed to be \"bikini.\" That brought a pleasant image of the curves of her small waist in a gold bikini, as I walked back to my booth.\n\nI sat there, finishing the small amount of my drink that was left. I flagged the waitress and ordered what had to be my last whiskey sour. It was more than I should drink, but I still wanted to watch the \"Ice Queen,\" as I was far from figuring her out.\n\nMy drink arrived, along with the bar bill, and I stared into my drink, and berated myself.\n\n\"Just go up and talk to her, for Christ's sake. Even if she bites my head off, I'd get to hear more of her voice. And maybe... see a little more expression in her pretty face. That'd sure give me something to plug into my fantasy tonight. Yeah, my fantasy. Someday I'm going to act on this fantasy, and throw every sensual thing I can at a woman. Someday.\"\n\nI glanced up at her, and she was occupied with stirring her drink with her straw.\n\n\"But what if she actually talks to me for a while? Think of all the pieces I would have for my fantasy? It could be loaded with her face, maybe a smile or a laugh. And I would get to look into those mysterious eyes, and hear a lot more of that voice. Isn't that worth fighting these nerves? My shyness is not going away unless I challenge it. Come on! Get on your feet and move, Nick! Do It... NOW!\"\n\nI sucked in the biggest breath of courage I could find and brought my eyes up to look at her.\n\n\"Great! She's talking to another man. \"Too slow, Nick... again.\"\n\nI watched the exchange between them, which turned out to be brief. Him, something. Her, a couple of words. Him, something with a grin. She shakes her head. He still grins. She glares. He leaves.\n\nMy eyes dropped to look at some woman's red shoes. \"The Ice Queen'll shoot me down even faster than that. I'm no lady's man! ...Try, just try, you idiot!\"\n\nI looked back up... and sagged. She was paying her bill, and I noted she was doing it with an American Express Black Card.\n\n\"The lady has lots of money at her disposal. That means she lives in different world from me!\"\n\nShe slid the receipt and pen across the bar, said a couple of words to the bartender, and then turned on her tall bar chair. Then she paused.\n\nLooking through the corner of her eyes, she looked at me and slowly blinked. Very slowly blinked. My shocked brain could only think, \"What... Wait a minute! ...Isn't that what our family cat did to me when I was growing up? Wink slowly and then... approach me?\"\n\nShe was coming down along the bar, heading towards the exit. I stood up, watching her. \"Think fast, you idiot! Whatever happens, just don't choke.\" I took a step forward. So did some other big, well-dressed guy... right into her path. She and I both paused, me by my booth and her confronted by Mr. \"Sharp Looking Man.\" She shook her head and tried to step around him. His forearm came out to make her stop. She did. My heart was in overdrive, and I felt its pulses in the back of my neck.\n\nThat's when her eyes turned to me, and she blinked. I started walking towards her, hoping that is what that blink meant. A moment later, she extended her hand to me, around the SLM's arm, which he then withdrew. \"Excuse us\" I said, as I took her small fingers into my hand. \"Here we go, Nick...the big leagues.\"\n\nAs I led her back to my booth, she spoke, and her soft, quiet voice surprised me, \"Were you just going to let me walk out?\"\n\n\"Was that a hint of humor I heard... I sure hope so. She's challenged me! Stand your ground, Nick. This is it.\"\n\n\"I'll admit,\" I said, trying to keep my thoughts ahead of my mouth, \"I didn't expect competition.\"\n\n\"Him? Not a chance.\" Her voice carried a distinct accent, but it did not make her hard to understand. Finishing her sentence, she resumed a mildly pleased smirk, and kept her eyes on mine. I looked back at those lovely dark eyes, and was trying to imagine the depth of personality that hid behind them. And that voice was so quiet. I wondered if it was natural, or maybe a learned behavior from a country where women were not supposed to speak up.\n\n\"Is this normally how you introduce yourself... with silence?\"\n\n\"Sorry! I was lost in thought there for a moment. I'm Nicholas Tanner, from California.\" She politely shook my hand, and the contact confirmed the smoothness of her fingers.\n\n\"Is Nick acceptable?\"\n\n\"Perfectly,\" I said, \"And your accent is intriguing.\"\n\n\"As is yours.\" Her pleased smirk curled at the corners.\n\nMy tension got to me, and I laughed, briefly.\n\n\"A delightful laugh. You may call me Baghini. I live here, but I am from Bangladesh.\"\n\n\"How interesting!\" I said, smiling, while I realized the earlier \"bikini\" I heard was probably \"Baghini,\" \"I spent a few days in Dhaka about a month ago, on business.\"\n\n\"Yes, Dhaka is our capital and my birthplace. Was it only business?\"\n\n\"I did get in a half-day tour, sort of. They dropped us at a number of locations, and then picked us up again. I did see such places as the National Museum, Lalbagh Fort, and... is it Asson Manzi?\"\n\n\"Ahsan Manzil, and does Archeology interest you?\"\n\n\"Casually, but I always find it so... almost strange... to be in a place with things that are over 1,000 years old, when 'old' in America is 200 years. Quite a perspective.\"\n\nHer smirk had softened into a contented style, and I began to think of it as a normal feature of her face, to always appear to be smirking. I found the smirk rather endearing, and found her rather easy to talk to.\n\n\"Yes, I have that same feeling. Bangladesh is young as its own country, not quite 50 years old, yet. But the Bengali and our origins are thousands of years old.\"\n\nI nodded, and then thought to ask, \"Is there a shorter name I can use for you, than Baghini? Maybe Bagha?\"\n\nHer smirk curled again, and she shook her head, \"The word 'bagha' means 'Tiger,\" ...and I am not male.\"\n\n\"No. You are quite obviously not! Is there a meaning for Baghini then?\"\n\n\"Tigress.\"\n\n\"Really? And your parents named you that?\"\n\n\"No,\" she said, and her eyes narrowed, \"It is the name I chose for myself.\"\n\n\"Interesting. But, I wonder why she chose that name?... Oh! Drinks.\"\n\n\"I'm sorry,\" I said abruptly, \"I forgot to ask if you would like something to drink.\"\n\nShe shook her head, and then offered, \"I don't think I want to take time for that.\"\n\n\"That's... disappointing. I was enjoying your company and hoping to get to know you.\"\n\n\"And I,\" she said, her voice even quieter, \"...like you, Nick. And would like to know you better, too.\"\n\n\"Wonderful,\" I said, as I questioned quite what direction I should take after that encouraging response. \"Then, would you like...\"\n\n\"Your room,\" she interrupted. \"I assume you are staying in this hotel?\"\n\nI'm sure the surprise showed on my face, even though I was trying to retain a calm appearance... like this happened to me all the time.\n\n\"I feel like I should say something clever and manly right now?\"\n\nThe smirk curled higher, creating rounding cheeks. \"'Yes' is quite enough. May we go?\"\n\n\"Uh...Yes!\" I quickly wrote my hotel room number and signed the receipt, then stood. I offered her my hand. She raised her arm and took my hand, and then stood. In heels, she was almost the same height as me.\n\nI led her out and to the elevators, the whole time wondering \"How do you make love to a Tigress?\"\n\nI motioned her in and pushed the button for the 35<sup>th</sup> floor, where the company had put me. Baghini leaned against the side of the glass-walled elevator, with that so quiet voice saying, \"I do not like arrogance or large egos in men.\"\n\nI smiled. \"Is this some Bengali tradition I have not heard of? That women approach the men, for...\"\n\n\"Sex?\" she finished, not waiting for me to find a more polite term. \"Anything, but. It is one reason I am no longer residing in Bangladesh.\"\n\nShe clasped her purse behind her, with both hands, and slowly walked towards me. Those eyes did not blink as they focused on my eyes. \"Such sexual freedom is completely at odds with my culture. So, I am here, where I can be the Baghini.\"\n\n\"Am I the prey?\" I asked, with a grin, but feeling only half the humor of that remark.\n\n\"Oh, yes,\" she said, her voice seeming to whisper, though it was hard to be sure with her quiet voice.\n\n\"What is 'being the prey' supposed to be like? Am I her fantasy? Might she be mine? Do I let her control the evening, or does she expect me to take over?\"\n\n\"You are quiet,\" she cooed. \"Do I scare you?\"\n\n\"Honestly, a little.\"\n\n\"Good\" she cooed back.\n\nThe elevator came to a halt with our eyes locked.\n\n\"Tigress?\" I gestured for her to exit. Then I passed her and led her a few doors down to my room. I went to put the room card in the slot, but she came around and stood in front of me. I paused with a curious smile.",
        "\"Last chance,\" she said, wearing a satisfied smirk. \"If we enter, I cannot guarantee you will survive.\" Her smirk curled into those rounded cheeks.\n\nI eased her slightly to the side, and slid the room card through the lock, and released the latch. \"The prey has been mesmerized by the haunting eyes of this Tigress. I go to my death willingly.\"\n\nShe gave me that slow, cat-like blink of her eyes, and then slowly backed up, forcing the door open. She turned and walked to the windows, and looked out.\n\nI slowly closed the door, with my mind madly processing what I should do now. \"She is so alluring, and I desire the unknown of her. She's like no one I've ever encountered before. I have to be as I've never been before. This must be Nicholas unleashed, and I can only hope it will be enough for her!\"\n\nMy imagination conjured up all the erotic foreplay I had ever dreamed of sharing with a woman, as I finished walking up to her.\n\nFacing the window, that soft voice asked, \"Is prey ready?\"\n\n\"This is my first 'Tigress' experience, so I may need a little coaching.\"\n\nShe turned. \"Then, close the curtains, please, prey. Singapore has rules about nudity visible to the public.\"\n\n\"Well, getting arrested would be bad for my employment.\" I stepped aside and pressed the switch that auto-closed the curtain.\n\nShe stepped over to me, and took my tie in her hands, and started removing the tie tack, which had belonged to my father. \"And who should I notify if you expire?\"\n\n\"Well, if I should happen to succumb from my time with Baghini, then she should contact Coolenetics Engineering. She has already met my boss, Martin, unfortunately.\"\n\n\"A prime example of a man I despise,\" she said, as she set my tie tack on the dresser.\n\n\"As a man, he disgusts me, too. But, as a salesman, he makes me great commissions.\"\n\n\"At least I know where to send your body, then,\" she said, as her eyes turned to me, with a look that told me it was \"prey\" time.\n\nShe pounced on my suit jacket, jerking the sleeves down until it dropped away. Pushing me against the dresser, she tugged on my tie, yanking one end free, and then tossed it over her shoulder. My belt buckle was her next target.\n\n\"God, I hope this works!\"\n\nI stopped her, gently holding her wrists. She paused, eyes showing that she hadn't decided whether to let me stop her or not.\n\nI let go of one wrist and brushed her hair back, before I traced the edge of her pretty ear with my finger. She pulled back and looked at me, a sliver of curiosity added as she studied her prey. The moment over, she resumed and went to the buttons of my dress shirt.\n\nShe had undone a few of them before I stopped her by putting one hand over the still-closed buttons. I use my other hand to softly wrap around her neck, and then used my thumb to skim along the edge of her jaw. Her eyes rose and searched mine for understanding, while she lightly tilted her neck into my hand.\n\nWith my hand still on her neck, she seemed to take a new direction. She reached up to the cuff of my hand covering the buttons and removed the cufflink there.\n\n\"Is she trying to create a diversion?\"\n\nOnce the cufflink was gone, I rolled my wrist and grasped hers. She looked at my hand. I moved my other hand from her neck and used it to run the back of two fingers up the inside of her arm, before I used my thumb to massage the soft area at the inside of her elbow.\n\nShe looked at me, and a small curl came to one side of her smirk. That prompted a round cheek to appear. She approved of this conversation.\n\nRelatively leisurely, she took my wrist, and removed the remaining cufflink, and then set both of them on the dresser with my tie tack. Then she waited, with both sides of her smirk curled up, and eyes surveying mine. I could see she was trying to guess my next move.\n\nMy face approached hers, and those eyes waited until the last moment before yielding to close. I kissed one eyelid, then the other, and heard the slightest hum from her. As I pulled my face back, her eyes opened with a new softness and started searching around my face. Her decision came when she used her hand to cradle one side of my face, before moving her face close. She set her mouth to skimming along my opposite cheek, from chin to jaw.\n\nThen, my earlobe received a nip. Clear escalation. She pulled back and waited. Her stare was intense, daring this prey to please her further.\n\n\"Is this the one? The one who desires my passion for sensuality? I can only hope, for she certainly seems to want what I am doing.\"\n\nWith that hope, I took my time before I put both hands around her cheeks, and moved my lips close to hers. I felt her hand come to rest against the exposed part of my chest. With my tongue, I slowly traced the edges of her lips. That's when I first found her \"tell.\" Her fingers fluttered on my chest and then withdrew. I slowly slid my hands down her now rounded cheeks. Baghini, the Tigress, was now my prey, too.\n\nAnd that's when it happened. When I slowly pulled back from her face, and found her still in the same position, eyes closed, but with a smile on her face. A full, lovely, white smile. Her eyes opened, while the smile slowly settled back into a grin. The soft look in those almond eyes, as they just kept looking at me, seemed to say that her plans had changed.\n\n\"Baghini likes this. Will there be more?\"\n\n\"So much more, if Baghini asks.\"\n\n\"Then I ask,\" she whispered, \"I want more... please?\"\n\nI looked down at her and nodded. Letting my eyes drop, I examined her clothes. Quite conveniently, gold-toned zippers were running right down the center of both her top and skirt. I let my hand drop down to her exposed midriff, putting my fingers on her waist. Her breath paused as I made the first skin-to-skin contact in that region. I wrapped my hand around the side of her small waist, then did the same with my other hand.\n\nTwo rounded cheeks were perched above the curled corners of her smirk. Her eyes watched mine, looking at me in a new way. I slid my thumbs up under her top until I found her lowest rib, after which I traced along it, towards her center.\n\nThe warmth in her eyes said that I was on the right track. After pausing to enjoy the sensation of my touch, she reached between my arms and set to work on my remaining exposed shirt buttons. She did each as if they were delicate objects, carefully caressing each one before she went on to the next.\n\nI let my thumbs explore her rib and the adjacent stomach while I waited. Once there were no exposed buttons left to release, she snuck both hands inside my open shirt and casually slid her palms around my waist. I brought one hand up to her top's zipper, just below her neck.\n\nBaghini looked up, and this time I didn't tease. I let my lips find hers, and they were heavenly. Gently swirling my mouth on hers, I began pushing the zipper down. Her breaths grew deeper as I progressed down, with the back of my hand brushing the soft, yielding skin of her breast, and the delicate brassiere that held it. All while I kept that first kiss going, with our lips dancing to the delight of the first meeting. And those fingertips of hers danced on my waist, as well.\n\nI leisurely removed my lips, enjoying those slight tugs where our lips stayed stuck together momentarily, as if sad to part. Her hands departed my waist, so I used my hands to cradle both sides of her neck. I paused there while our eyes came to meet, before I slid my hands down, relishing her skin, as her top slid over her shoulders and down her arms. I held onto an edge of her top as it fell away. I placed a kiss on her forehead before I twisted to drape her top over a nearby chair.\n\nAs our eyes once again met, I brushed her hair back from her shoulders, then ran the back of a finger on each hand down, following her bra straps. I continued, traveling around the outer edge of her red lace entrapped breasts. Her paused breathing resumed when I parked with my fingers on her adjacent ribs.\n\nLeaving her ribs, I brought my hands up. Her hands stopped me, though, and held both my forearms. She pushed me back the short distance to the dresser and looked down. Then she moved her hands to tug my shirt up, and carefully released the couple buttons she had uncovered. Her head slowly rose, eyes leading, and then moved closer to mine. Her lips entrapped my lower lip, tugging at it, as my shirt was brushed off my body by smooth, skimming hands. My happy hum escaped before I even knew it was coming.\n\n\"This is the one. She's definitely the one.\"\n\nLetting go of my lip, her face turned back down, and her hands moved to my belt. Lazily, as if taunting me with her slowness, she pulled the leather out through the buckle, releasing it from the prong. Then, just as lazily, she pulled the end of the belt out of the buckle. As she did, I kissed the top of her head. I had just started to raise my hand to pull away a few hairs of hers, which had stuck to my lips, before her hairs were pulled from me as her head dropped away.\n\nMy first thought was that it was too soon for this, as I felt the tugs on my belt, but I soon had to grin as I saw her tugging to remove my belt using her mouth to grasp the buckle. Knees bent, with one hand on the dresser, she tugged and tugged, apparently finding progress more difficult than predicted. Finally, the remainder of the belt slithered out of the last belt loops with ease... and Baghini fell on her butt.\n\nI tried not to laugh, but it was just too funny to contain. She sat there, with my belt hanging from her mouth, hair draped over her face, and with that soft voice of hers giggling like a schoolgirl.\n\nI got down on my hands and knees, still laughing, and brushed her hair back to see a grin grasping my belt, and happy eyes trained on me. I took my belt and her mouth released it.\n\n\"Has Bhagini spoiled the mood?\" she asked, with a chuckle, while sitting on the floor with her arms braced behind her.\n\nI canted forward on my four limbs and gave her a soft kiss. One of her arms grabbed my arm below the shoulder, to pull herself to me. After her other arm gained my neck for leverage to hold herself up, her mouth laid into mine with aggression. Her tongue probed the opening of my lips, and our tongues dueled on, and on.\n\nFinally coming up for breath, I rather cleverly held her so that she did not fall back, and she let her grip on me slide away. Then, I sank on my heels as I pulled her to me. Through my elevated breaths, I suggested, \"I think we should move to somewhere softer and, well, safer?\"\n\n\"Will my Bagha take me to his bed, please?\" Her sultry voice was mesmerizing with its softness.\n\nI stood up, holding one of her hands, and then helped her rise to her feet. I immediately pulled her to me, turned her, and started walking her, backward, to the bed. Her grin pushed her cheeks so high that the twinkle in her lovely eyes only had room to dance over her pupils.\n\nI purred to her as her calves backed against the bed, \"You are my fantasy, and I'm not nearly done with you.\"\n\n\"You do know that Tigers cannot purr?\"\n\n\"Can there be an exception for your Bagha?\" I smiled, as I let her come to rest on the top of the bed, and looked down over her.\n\n\"Absolutely.\" Then the twinkle and rounded cheeks faded to concern. \"If I can ask such a thing of you; you will only purr when with Baghini?\"\n\n\"Only Baghini,\" I assured, for I knew I meant it. No woman in my life had come close to this kind of sensual play, and I had no desire to \"purr\" for anyone else. I was not letting her get away without a fight.\n\nA grin rounded her cheeks again, and I grinned back while I reached down and slipped off her bright gold shoes. She wiggled her newly freed toes, which I judged to be because of some soreness. So, I took a nearby chair, dragged it close, and sat. I raised her feet and set them on my knees, whereupon I set about firmly rubbing the heel of my hands into the soles of her small feet.\n\nI saw her head drop down to the bed in my peripheral vision, and smiled to myself.\n\n\"Now I purr for you. Ooohh, that is so good after the day I've had.\"\n\n\"And what kind of day was it?\" I asked.\n\n\"Many meetings. Many presentations, while standing.\"\n\n\"What kind of work does a Baghini do?\" I moved to massage the tops of her feet, as I waited a moment for an answer.\n\nShe answered first with a short chuckle, then followed with, \"The name 'Baghini' is just for me... or you. It is not for my work. I manage a large philanthropic fund.\"\n\n\"That explains the Amex Black card I saw you pay with.\"\n\n\"Mostly,\" she replied, in total.\n\nFinishing up with massaging her toes, I removed her legs from my knees and let them hang over the end of the mattress. I watched her lazily rotate her feet and wiggle her toes.\n\n\"Bismayakara!\" she sighed. Then she chuckled. \"It means 'wonderful' in Bangla!\" She sat up, and looked at my pants. \"What else would be bismayakara is if I help you with your pants, which are about to fall off. Stand, please?\"\n\nI pushed the chair back, and did as requested. From her seated position, her hands went towards my waist and I waited for my pants to fall. And I was still waiting when I felt small tugs below my navel. Then came the sultry voice that I adored.\n\n\"I love when men have these hairs below their navels,\" she said, as she softly twisted and tugged at those hairs, \"It is like a natural arrow pointing at the heaven below. Or...\" and the waistband of my suit slacks popped loose, \"...a breadcrumb trail to a delicious meal.\"\n\nThe exclamation point was added to that when she leaned forward and put her tongue in my navel and then slid it down the hair trail, while she pulled my zipper down. I think she could feel me shiver.\n\nHer tongue stopped at the waistband of my boxer briefs. She let my pants drop to the floor, but quickly used the back of one fingernail to drag up my underwear from my balls and on up of the top of my semi-hard shaft. My moan sounded a lot louder in my ears than it felt coming up my throat.\n\n\"Very glad I have your attention,\" she purred.\n\n\"God, you can have my undivided attention as often as you want. This is so much better than my imagination!\" My tamer spoken words were, \"I will give you my attention for as long as it pleases you.\"\n\n\"Every touch of yours pleases me,\" her sultry, soft voice said, \"But I can be greedy, so you may have to please me for a long time.\"\n\nThe smile grew big on my face, while I stepped out of my shoes and pants, and then pulled off my socks. \"Bismayakara,\" I sighed, reaching for the front zipper of her skirt. She leaned back on her elbows and watched me. Her eyes happily followed my actions as I slowly pulled the zipper down, and then wiggled it at the end to get it to release its last hold.\n\nI left the skirt nearly closed, with a hint of her red panties peeking through. Starting at the outside of her knees, I gradually slid my hands up the outside of her thighs to her hips, peeling her skirt open with the upward progress of my hands. Poking my fingers under the edge of her butt, I squeezed my fingers, and she raised her hips in response. I slipped her skirt away and set it on a chair.\n\nNow I enjoyed absorbing the view. I reveled in the taper of her firm legs, the smooth curve of her hips, the distinct rise of her mons under the red lace covering, the smooth stomach marked only by the tiny funnel-like recess of her navel. Then, more smooth skin, in her buttery tan shade, led me to nicely rounded breasts that slightly sagged against the fabric at the sides of her lacy bra. Finally, I got back to her lovely, nearly patient face, as she shook her hair. I chuckled at her questioning eyes, apparently eager for me to finish my visual assessment and return to my physical one.\n\n\"Reviewing the package?\" she said, in playful exasperation. That tone hit a warm spot in me.\n\n\"Memorizing the Tigress,\" I countered.\n\nA contented smirk settled on her lips, and she patted the mattress beside her. I moved onto the bed and settled against her, on my back. Baghini turned on her side towards me and placed her leg over my thigh. I turned my head to her and grinned, but found her looking at my hair. Resting her elbow on my chest, she started toying with my hair.\n\n\"Your dark blond hair is close to my skin color, so my fingers can almost hide there.\" She spread her fingers and combed them through my hair, several times. \"With my straight hair, I have always found such waves, as you have, to fascinate me in the way they resist being straightened.\"\n\nI closed my eyes as she talked and sucked in the sensation of her soft and warm body against me, her fingers combing my hair, and her voice so close to my face. Then there was the movement of her breathing, her hair that had drifted over my shoulder, and even the faintest sensation of her heartbeat against my arm.\n\n\"Not falling asleep are we, Nicholas?\"\n\n\"No,\" I sighed, \"Just absorbing the sensation of you and the moment.\" I felt her lean my way, while the hand in my hair departed. Then those luscious lips gently met mine, and we luxuriated in the contact of our bodies. Her hand stroked my chest. Mine stroked her neck.\n\nWhat started soft and slow became my leg pressing between hers, interlocked arms squeezing our bodies so tight it complicated our more rapid breathing. We sank deeper and deeper into lust. Tongues dueled again, moans were traded, her hair surrounded my face as she moved on top of me, and my erection struggled to grow against the pressure of her weight on me.\n\nI writhed, pressing my hard erection against her by gripping her ass with one hand, while my other hand dove into her hair and held her head still so that my mouth could regain hers. Our rapid breaths went in and out of sync. An urgent thought came to me to release her bra, as I wanted her bare breasts in my hands.\n\nBut before I could act, she slid her hips to one side. My attention went to her yanking the front of my briefs under my balls, grabbing my erection, positioning her wetness on my tip, and then dropping herself over my erection. Just that quick. We both gasped, mine because of the amazing warmth within her, and the perfect fit.\n\nShe put her hands on my chest, pushed her arms straight to hold herself up, and proceeded into a pounding rhythm, which was punctuated with the wet, squishing sounds of our union. Her eyes closed at first, but a short time later opened and locked onto my eyes.\n\nI was intending a longer, sensual approach to our first fuck, but now I just wanted myself deep and hard within her enveloping warmth. I looked down and saw the crotch of her red panties moved to one side and my wet cock rapidly appearing and disappearing between her smooth folds.\n\nRealizing the suddenness of our coupling had bypassed an issue, I huffed out, \"Baghini, do I need...\"\n\nShe shook her head rapidly, sending her hair into tangles that were then highlighted by sparkles of sweat. \"I'm safe!\" was all she huffed. Her fervent riding escalated, moving with an intensity that just screamed \"Need!\"\n\nThis felt so right to be inside her, and I started to meet her down thrusts with my own up thrusts. Soon, the lips above me pursed and the eyes rolled up and closed. The sensation of the ripples within her moving over my cock was exquisite and my loins pleaded for their release to come soon.\n\nAs if answering me, her thighs began to quiver. \"Tigress?\" I huffed out as a strong whisper.\n\nBaghini immediately responded, between urgent breaths, \"Fuck! Ami eta bhalobasi!\" [I love this!]. With my eyes fighting to focus on her, I saw it hit her just before I felt it. A sudden jolt sent her upright with her contorted face swinging back, and then she tightened around me. The second jolt sent her back forward, onto me. She planted her hands hard on my chest with the heels of them pressed into my chest, while her fingers twitched. Her head also went down, tossing her hair around her face. The last, as I was to find out, jolt dropped her to her elbows, putting her face, in its moment of pure pleasure, right in front of mine.",
        "I needed my finish, as her insides clung to my shaft, deep within her. But still, I had to savor this moment. While her dark hair tried to smother me, I reveled in the dissolving passion in her face, her lunging for air, and then I listened to those sweet, last whimpers from her call out to her departing ecstasy. I had never had a more satisfying moment in my life.\n\nI was close to my own end, when her long sigh came and she sank onto my chest. Gasps were exhaled into my neck as shudders played their tune with her body. Unable to hold back any longer to observe Baghini's pleasures, I started thrusting into her still clenching heat. A few moments later, I felt that familiar tingling spread into my thighs, and I thrust once, twice, another time, and then the last, where I pushed the tip of my dick as deep as possible into her and held it there. \"Baghini, I whispered in my enthralling anguish, as I felt the demanding need to release within her answered by every pulse of my cock.\n\n- - - - - - -\n\nWe were silent for so long, simply listening to the other breathe. Limp body pressed upon limp body, with no ambition or strength to move. The ultimate peace following the ultimate pleasure.\n\n\"Nick?\" I heard, and I sensed the smile in that word. My hand came up and my fingertips made random patterns in the sweat on her back.\n\n\"Baghini?\"\n\nIt is a wonderful sensation to have a woman chuckle when on top of you. When it was this woman, now, and nearly naked, it was heaven. I had shrunk enough that her body finally ejected me, and so she slid off of me, forming a fleshy puddle of a woman along my side, with my arm around her.\n\n\"Next time, let's take all of our clothes off, Tigress.\"\n\nShe almost laughed, but her exhaustion had left her with too little energy.\n\nI knew the endorphins were yet flying through my blood, but that thought still couldn't shake me from the realization that there was just something so right, so correct about this moment, with this lovely puddle cradled in my embrace. I reached down with my free arm and brought the trapped waistband of my underwear back up, and then settled in.\n\nIt seemed I wasn't the only one enjoying this moment, for her next tired, and even softer, words were, \"This is usually when Tigress has had her fill and leaves her prey, with no regret. But you are no longer prey. I came here just for desire, but found comfort here, as well. May I stay the night with Bagha? Like this?\"\n\n\"I would be so very disappointed if you didn't!\" I said as I started drifting my fingers down her body and then back up again.\n\n\"Can we take a shower before we sleep?\" She wiggled slightly as my fingers drew across her ribs, while she waited for my answer.\n\n\"I think I heard that tigers like water,\" I chuckled.\n\n\"Oh yes, very much,\" she chuckled back and snuggled closer.\n\nShe let one hand drop to my thigh and then started stroking it.\n\n\"Let me know when Baghini is ready to be bathed, okay?\"\n\n\"To be bathed?\" she hummed into my chest, \"I like the sound of that. I suppose we should do that now, as you have made a mess in my panties.\n\nIt certainly took extra effort to put my relaxed body into motion. Sliding off of the bed, I offered her a hand to help her up. She took my hand but just smirked at me and offered no effort of her own. I started to pull on her, moving her a bit, and she chuckled mischievously.\n\nSo, I grabbed her foot, too, and dragged her body across the bed cover, to the accompaniment of squeals and giggles. \"This, the sultry tigress from early this night, now delightfully childlike.\" She yielded as her body teetered on the edge of the mattress, then swiveled and stood. Wrapping her arms around my chest, she put her cheek on my chest as well.\n\n\"I needed this. Thank you,\" she said.\n\n\"And you need a shower, beautiful.\"\n\nShe pulled back. \"Yes, I do smell. Come with me.\" Taking my hand, she towed me to the spacious bathroom.\n\nWhen she stopped, I closed up the space between us, and put my head on her shoulder, and said, \"Now to do what I didn't get to do, earlier.\"\n\nI leaned back and unhooked her bra. She slid it down her arms and set it aside. Still behind her, I let her wait a moment. She shifted her weight from one foot to the other. I ran a finger down her spine. She shivered. I kissed her shoulder, and she tilted her head to rest against mine.\n\nThen I slid my hands around her ribs, under her arms, and then brought my hands up over her breasts, and let them flow into my cupped fingers. Her sigh of satisfaction was rich and even echoed slightly in the tiled room. I kept my hands there as I kissed her neck and then her ear.\n\n\"You're a bad man, Mr. Tanner. Thank you! But, now we should get in that shower.\" She pulled away from me and turned. \"But I will have my turn before we do that.\" She came back to me, squatted, and hooked her fingers into the waistband of my underwear. \"Now...to see what felt so good inside of me a short time ago.\" She drew my shorts down, and I enjoyed how her look lingered on my manhood.\n\nShe wrapped her hand around my softened shaft, and pulled me into the shower, with both of us stepping around the glass wall and then to one side. \"Let me wash this for you.\" She turned and twisted on the shower with her free hand. While we waited for the water to heat, I toyed with the ends of her long, almost charcoal-colored hair\n\nLetting go of me, she pointed at the water spray and said, \"In.\" I stepped into the tepid water, and then she did.\n\n\"Hotter?\" I asked, and she nodded. A couple of adjustments later, we had it set to our joint liking. Baghini had been soaping up my back, while I made those adjustments. Then she used the soap on herself to first soap her wet panties, before removing them. That was my first full view of her shaved mons and I enjoyed watching her wash my contribution off, and out, of her.\n\nShe soaped her panties up and then rinsed them off, after I stepped aside to let her have more spray. Then she stepped around the glass and draped her panties over a towel rack. I grinned at how her red panties contrasted with the hotel's cream-colored towels. While I grinned, she wetted her hair. Then she handed me the soap, and turned her back to me, as the hot water hit her chest.\n\nI soaped her all over, except for her face, enjoying the way this woman's breasts slipped under my soapy hands. My work seemed quite enjoyable to her, too. She then turned, took the soap from me, and started in soaping my manhood. Her smirk curled way up, as I grew in her hands. Not trying to really start anything, she changed to soap my body, except for my face and the back she had already done.\n\nAfter examining her handy work, she stepped against me and slithered around as she hugged me. I reached around her, hugged her back, and gave her a leisurely kiss. Then we rinsed off and started drying off, her with her hair wrapped into a towel. She finished her body, and went to the wall-mounted blow dryer and started in drying her hair, in the nude. When I finished drying, I brushed my teeth. She briefly smiled, as she kept drying. Done with my teeth, and with all that lovely skin next to me, I decided to explore.\n\nI kneeled down behind her and started kissing her thighs. I kept working upward, smooching across her pert ass. I think I heard a giggle or two over the sounds of the hairdryer. I could only kiss her lower back, as she was tossing her hair around as she dried it.\n\nChanging things up, I got on my knees, brought my arms around, and started stroking the front of her legs. I peeked around and looked in the mirror. She was grinning constantly. When I brushed over her vulva, she buckled slightly as she laughed. Then I got a blast of hairdryer on the side of my face.\n\nShe put the hairdryer away and turned around. \"Can we continue this tomorrow?\"\n\nI nodded but kissed the navel that was right in front of my face. Then I kissed down. Hands on my cheeks stopped me, and I looked up. She looked at me and chuckled, \"Bagha, it is after midnight! Can you save this excellent idea for the morning? Bedtime, please?\"\n\nI smiled and left to turn down the bed, also turning the A/C down another two degrees for the night. She turned off the main room lights, as I switched on one of the bed lamps. I let her get in first and arrange the pillows to her preference. Then I slid in next to her and moved my arm under her neck.\n\nShe nestled against me, with her head on my chest, her breasts pressed against my lower ribs, and her hip partway over my leg, as her knee pushed between my legs. I gave her forehead a kiss and then lightly stroked her back with the hand that I already had behind her. I swept a few hairs from her face and watched as her eyes smiled up at me, and then closed.\n\nI was so happy just lying there, gently brushing her cheek, chin, and ear, as her slow breaths came and went. My thoughts started to wander as I quietly withdrew my hand, \"Why is it so hard to find moments like this with women, where there is no awkwardness, no 'you first,' clumsiness? To just be in sync like this with someone else's pleasure, comfort, and humor?\"\n\nIt wasn't long before I heard the soft sounds of her sleeping, so I turned out the light. Somewhere in my long thoughts about the satisfaction of her with me, I fell asleep, too.\n\n=+=+=+=+=+=+=\n\nI have often thought I should hear that MS software chime when I wake up, and my senses boot up for that first time. Having shifting warm skin against you is a great way to reenter the world. This lovely skin yawned, \"Suprabhata.\"\n\n\"Is that a greeting or a request for coffee?\" I said, as I captured one of her breasts.\n\n\"It means 'good morning' Bagha,\" she chuckled. \"Did you sleep well?\"\n\n\"Like a log.\"\n\n\"A log? Like a tree, wood?\"\n\n\"Just a saying in English,\" I said, \"It means you slept... I suppose solidly, or without moving.\" Then I added, \"Excuse me, bathroom\"\n\nAs I slid out of bed, Baghini chuckled, \"Kukurera mata. Like a log. I shall have to remember that. English has many strange idioms.\"\n\nI stopped at the corner, and smiled, \"Now I have to 'drain the snake'.\"\n\n\"No! Really? That is one, too?\" she chuckled.\n\n\"Yup!\" I disappeared into the bathroom.\n\nWhen I came back out, she was waiting. \"Now, me.\"\n\nI climbed back in bed, pulled the sheets over me, and waited. When she came back, she flipped the sheets back, crawled halfway over me, and then sprawled on top me.\n\nShe lay crosswise to me, stomach to stomach, grinning. \"Do you have anywhere you need to be today? Any faith to observe? I do not.\"\n\n\"I do have something I need to today,\" I wheezed, from my compressed stomach.\n\n\"Oh,\" she said and moved to sit beside me.\n\n\"I need to worship my Baghini, all day.\"\n\nHer smile grew but then faded again. \"Being with you, Nick, is so special to me.\" Her finger pushed one of my blonde waves farther from my eye. \"But, you must understand that Baghini belongs to no man. She is a creature that mysteriously appears, and later disappears back into the jungle.\"\n\nThis sudden seriousness sent my mind into overdrive. \"When I said 'my', I was being playful... affectionate, you know. I don't want you to think... ever think, that I would treat you like a possession!\"\n\n\"No, I do not believe you would. And it is not that,\" she said, her eyes scanning my face. \"Baghini is a creature I let out to play, only occasionally. When I think it is safe enough, I let her hunt.\"\n\nI scooted up to a sitting position and bumped her shoulder. \"Are you married?\"\n\n\"NO!\" she said, in a voice finally loud enough that I could call it normal for most other people. \"There is no one like that for me!\"\n\nThe relief of that answer at least allowed me to enjoy my view of the beautiful, naked woman next to me. \"Then... can I have today with Baghini, or whoever you want to be?\"\n\n\"Yes, today. But, not this evening or tonight.\" She almost sounded apologetic.\n\n\"Then, is there someplace you'd like to go today? A restaurant, a...\"\n\n\"No... no! May we please stay here? Room service would be quite suitable.\"\n\n\"Of course.\" I put my arm around her shoulders, and said, \"I suppose we can find something to do with our day.\"\n\nShe grinned.\n\nI waited. Finally, I asked, \"What?\"\n\n\"Then I ask,\" she whispered, \"I want more... please?\"\n\nI put my hand around her breast, leaving her areola cradled between my thumb and index finger. I softly squeezed, first one way, and then another, and watched as I pushed her dark areola into different shapes.\n\nShe chuckled, \"Is this supposed to arouse Baghini?\"\n\n\"No,\" I said, \"To amuse Bagha.\"\n\n\"You are niriha! [silly!]\"\n\n\"This is so wonderful with her. How can it be that I find my perfect woman, and yet I don't know if today is our last day?\"\n\n= = = = = = =\n\nWe ordered breakfast and spent the wait time curled together, stroking each other, and talking of our childhoods. She told me of the joy of her family and younger, spoiled sister in Dhaka, Bangladesh, the beauty of the local park she played in with them, friends she once had, and even the sorrow of once visiting the devastation of one of the major flood-damaged areas. All of it never went past the age of 14.\n\nI told her of my growing up in Mountain View, California, USA, with my loving mother, caring-but-always-working father, brat younger brother, and quiet younger sister. I told her of the colorful salt production on the south end of San Francisco Bay, the forested foothills, and the beautiful coastline just beyond, my friends, and our family cats.\n\nAfter breakfast, I put the trays outside, along with the Do Not Disturb sign, and then we continued our exploration of each other, one finger or one tongue at a time. That was interspersed with various massages of necks, thighs, backs, shoulders, and finally the erogenous areas. Gently and slowly, we imploded into lust. Individual orgasms blossomed in response to the other's attention. Once again, we had spontaneous ignition, and our fevered souls met in an urgent round of doggy-style sex.\n\nExhaustion led to lunch, led to a nap, which led to a woody, which was put to good use in a languid session of missionary sex. That led to perfectly timed, simultaneous orgasms after lengthy pronouncements of their impending arrivals.\n\nThe resultant late afternoon exhaustion led to me, once again, having my now favorite puddle at my side. Every time she ended up there, it seemed even better than the last time. My soul told me she belonged there. Still, the evening could not be held back, and she sadly informed me that she needed to shower, dress, and get back to her life.\n\nSo, I helped her shower, helped her dry her hair as I had before, and got a blast from the hairdryer on my face, as I had before. That play helped me avoid the deepening sensation that I may never see her again. She dressed, restored her makeup, and then walked over to me. Her eyes were a bit damp as she looked at me.\n\n\"Let me get dressed, and I'll walk you out,\" I offered.\n\n\"No... I shouldn't be seen with you. I took that risk last night. But, now it is unnecessary.\n\n\"I'm here until Friday,\" I said.\n\n\"I doubt Baghini can play this week.\"\n\n\"I will probably be back in two more weeks after that,\" I said, hoping not to sound desperately anxious.\n\n\"Give me your phone.\"\n\nI went and got my suit jacket off of the floor, where it been for my nearly full day of erotic adventures, pulled my phone out, and handed it to her.\n\n\"iPhone. Good.\" She tapped and then handed it back. \"Now, here is a number. Short texts only - No photos, no calls. You tell me when, and maybe I can be Baghini.\"\n\nI clutched the phone, wishing it was her heart I held. \"Can you tell me your real name. And why can't you just be Baghini when you want to?\"\n\n\"I see the look in your eyes, Nicholas Tanner. If you knew my real name, you'd pursue me, would you not?\"\n\n\"I suppose... yeah, I would,\" I sighed.\n\nShe put a hand to my cheek. \"And my heart would be joyous if you did. I want to see you again... and even again after that. But, I do not know when it would be safe to do that right now.\"\n\n\"Because?\"\n\nShe turned and walked towards the window, and pressed the control to open the curtains. \"Because, I grew up in a Muslim family with many, many traditions. Even though my family is relatively liberal, their world has not changed enough to accept a daughter that sleeps with men for the pleasure of it. I left most of them and that faith over twelve years ago. Still, I do not wish to disgrace them by openly living my life as I please. Can you understand that... at least a little?\"\n\nMoving close behind her, I said, \"I... think so. As I said, I don't want to hurt you or possess you. But, you have been the lover I have fantasized about, and I find myself very attracted to the woman behind that name, too. I just want to share my time with you, to bring you pleasure, even if we have to just stay in a hotel room.\"\n\n\"I...I must go now,\" she said, and turned and give me a quick kiss, \"To hope.\"\n\nWhen she closed that door, I wasn't sure my life hadn't just left with her.\n\nLater I got dressed, went down to the bar, and had dinner. I kept looking to the barstool she had sat in, almost able to imagine her there again. Yet, I had the Manjur project in the morning, and I hadn't put any thought into the complexities of it, until now.\n\nI did my best to enjoy my Asian fusion meal, and focus on Manjur International, but thoughts of her voice, her skin, her gasps, crept in from every direction.\n\n=+=+=+=+=+=+=\n\nArriving at Manjur International's Singapore office just ahead of the 9 a.m. appointment, I met my contact, Mr. Koh. We started reviewing the available space in the computer center for my company's cooling system. We were at it until lunchtime. After lunch, we resumed preliminary checks of locations for electrical hookups and locations for the thermal sensors that would control the systems. Later, we would need to review the probable sequence for changing out the old system to our system.\n\nI had my head down, looking under a computer rack for possible duct paths, when I heard Mr. Koh across the room, \"Mr. Manjur! Sir! What an honor.\"\n\nI quickly stood up and dusted my hand off on one of the rags we were using. As Mr. Manjur came around the corner, I put my hand over my heart and quickly bowed my head. Then I put my hand out to shake his.\n\n\"What a surprise, Mr. Manjur. When we met with you in Dhaka, you didn't mention you'd be in Singapore, now.\"\n\n\"Hello, Mr. Tanner. It is very good to see you again. And, no, I was not planning on being here when we last met.\"\n\nMr. Koh shuffled into Mr. Manjur's peripheral vision, and asked, \"How can we serve you, today, Mr. Manjur, sir?\"\n\nMr. Manjur responded, \"I wanted to look in on your progress. Mr. Tanner, you expressed some concerns that the double-redundant system would not fit in the existing system's space?\"\n\n\"I believe it will work, sir,\" I said. \"There appears to just enough space for the flow units and the control systems. Existing wiring and thermal exhaust ducting seem to be adequate.\"\n\nMr. Koh jumped in, \"Yes, sir. Everything looks perfect and I should be able to manage the installation in a very short time, once the equipment arrives. There will be nothing to worry about, sir!\"\n\n\"Thank you, Mr. Koh, I'm sure you will do an admirable job with it,\" Mr. Manjur, said. \"Now, if you would excuse us, I would like to talk to Mr. Tanner.\"\n\n\"Of course, sir,\" Mr. Koh said, before he backed out through the door.\n\nMr. Manjur turned to me and just looked. I waited, unsure what this silence was about. I quickly examined him to see if there was something I should notice. Nothing I could see. He appeared just as he had in Dhaka; impeccably dressed, standing about my height, slim, and with intense eyes.",
        "He turned and started a slow walk away, along the tall, blinking computer bank.\n\n\"Mr. Tanner...Tell me. Should I have bought the double redundant system, or would the single backup system have been adequate?\"\n\nStartled, I said, \"Uh... I think you should contact Mr. Hayward if you have any concerns about your purchase.\"\n\nMr. Manjur pivoted, eyes fixed on me. \"Martin Hayward is a fool. I bought this system because I believed you, Mr. Tanner. Now, you have shown the proper deference to your company's hierarchy by deferring my question to Hayward. I respect that. But, I want your truthful opinion.\"\n\nThe knots inside me stayed strong but got no worse. I swallowed first, then said, \"In my opinion... It is hard to say. Extra redundancy can always prove useful, in the unlikely case the primary and first backup should be inoperative. But much of that reliability depends specifically on routine maintenance by your staff.\"\n\n\"So your systems never fail?\" he asked.\n\n\"We have only had two failures of a primary cooling system, to my knowledge, and both were caused by service being delayed beyond our specified intervals.\" Then I took a deeper breath, \"If you have confidence in your department to maintain everything properly, then I would expect no issues.\"\n\n\"And I should believe you on this?\" Mr. Manjur said, not blinking.\n\n\"If the truth is what you want, then yes.\" \"Shit, did I really say that to him!\"\n\nHe smiled. I breathed.\n\n\"Then, Mr. Tanner, what do you think of my department head, Mr. Koh... remember, honesty?\"\n\n\"Ok, honestly...I think he is dedicated, reasonably knowledgeable, and hard-working. But, not very imaginative, and runs to double-check the manual every time he does something.\"\n\n\"Honesty! How refreshing,\" Mr. Manjur said, \"Not like that sniveling Mr. Koh.\" Mr. Manjur glanced at his gold watch.\n\n\"Unfortunately, I have another important meeting in a few minutes. Can you have dinner with me, and another of my directors, at 6:30 at the Golden Sunset in the Stratton Hotel? I would like to discuss a position in my companies, as I am very impressed with you. I have to fly out after dinner, so I need to combine your meeting and my director's over dinner.\"\n\nFeeling like I should be wobbling on my feet, my voice almost croaked, \"Certainly, sir. I'd be delighted. 6:30 will be fine. Thank you, very much.\"\n\n\"I look forward to it, Mr. Tanner. Dress casually,\" he said, and left.\n\nI stood there, stunned, until Mr. Koh came back in, and asked, \"Did everything go alright?\"\n\n\"Yes,\" I said, struggling for further words.\n\n\"Is he happy with your new system?\" he asked.\n\n\"Yes,\" I said, again, then added, \"We just need to clean up our tools, and then we should be done.\"\n\n\"Certainly, Mr. Tanner.\"\n\n= = = = = = =\n\nAfter having returned to the hotel, and changing to casual clothes, more suitable to the humidity, I arrived at the Golden Sunset at 6:20 p.m. Mr. Manjur was already there, so I was taken to his table. I greeted him as I had earlier today, and sat opposite him.\n\nMr. Manjur spoke first, \"Since my director is not here yet, I would like to get right to the point. I have had you looked into and I think you are an honest and talented individual, who is underutilized and undervalued by your current employer. I would like to offer you the position of Manager of Computer Services for Manjur International.\"\n\n\"I'm astonished, and honored, by your offer, Mr. Manjur.\"\n\nHe raised his palm off the table and wagged his hand. \"You are deserving. I want you to control all seven of our centers in Asia, make sure the equipment is sufficiently capable, as well as properly installed and maintained. And, I would value any ideas you have for improvements.\"\n\n\"This is rather sudden, I said, \"and I'm finding myself bewildered by all the considerations.\"\n\n\"Quite understandable, Mr. Tanner. Please take your time to consider my offer. Logistically, I would need you to relocate to either Dhaka, Hyderabad, India, or here in Singapore. Let's make your salary a simple number; one-quarter of a million US dollars, per year. We offer 3-weeks vacation, full benefits, travel on corporate aircraft, relocation costs, and appropriate club memberships. Plus we... excuse me, my director is here. May I introduce you to Sanchari Begum Manjur.\n\nBaghini smiled politely, and gestured with flared eyes, as well as her hand, for me to take my stunned face and sit, now! She sat between us.\n\nBefore he could introduce me, I choked, \"Manjur?\" and hoped I wasn't blushing. I was.\n\n\"My dear,\" he said, \"May I introduce Mr. Nicholas Tanner of Coolenetics Engineering, and, hopefully, soon part of Manjur International. And, it seems he is taken by your beauty, as his blush would seem to indicate.\"\n\nI felt her foot suddenly find mine, and press down, firmly.\n\nChuckling, he added, \"And, yes, Mr. Tanner she is a Manjur. In fact, my eldest daughter, and director of my charitable foundation.\"\n\nMy mind screamed, \"Oh shit! I just spent a day fucking Manjur's daughter. I'm dead, just Dead!\"\n\nYet, I kept my tongue under control, and extended my hand, and said, \"Very pleased to meet you, Ms. Manjur. Do you live in Singapore?\"\n\nHer foot pressed harder for a moment as she shook my hand politely.\n\n\"Yes, I do, Mr. Tanner. And, congratulations if you choose to join my father's business.\"\n\n\"Yes, my dear. I have offered him the position of managing the maintenance and operation of all of our computer centers. I have requested that he relocate to either Dhaka, Hyderabad, or here.\"\n\n\"Well, Mr. Tanner,\" she said, and her foot pressed hard on mine, \"we may run into each other in the course of business.\"\n\n\"It would be a pleasure to work with you, Ms. Manjur, I'm sure.\"\n\nShe nearly crushed my foot.\n\nMr. Manjur laughed, \"Be careful what you ask for Mr. Tanner, as my daughter is very stubborn and opinionated. So much so that I have not been able to find her an acceptable husband in thirteen years of trying.\n\nI winced as my foot was again compressed, while I saw a glare on Bagh... Sanchari's face that looked downright vicious, as she faced her father.\n\nHer quiet voice had a real edge, as she said, \"My father is just joking Mr. Tanner. He knows quite well that I will choose my own husband, when I am ready.\"\n\n\"Sanchari, dear,\" Mr. Manjur tried to coach, \"Let us not bore Mr. Tanner with such family matters.\"\n\n\"Of course, father,\" she smiled. I'd only known her less than 48 hours, and I could see how fake that smile was.\n\n\"Sanchari, Mr. Tanner, we should order our food as I have to make my flight.\"\n\n= = = = = = =\n\nThe evening was polite and cordial, and I tried to direct my conversation to Mr. Manjur. I only got my foot squeezed a few times through the meal. Finally, Mr. Manjur said he needed to leave for the airport. He said the meal was all paid for, and... he asked me if I would see that his daughter got home safely.\n\nMy foot got crushed, again.\n\n\"I can get home quite safely, baba [daddy]. You know it is only a few blocks from here. I'm sure Mr. Tanner has better things to do than protect my honor.\"\n\n\"I have good instincts, little one, and I am sure you can trust Mr. Tanner.\"\n\nTorn with which way to go with this, I said, \"I have no plans, Mr. Manjur. If it would be a comfort to you, I will gladly escort Ms. Manjur home.\"\n\n\"Thank you, it would. I hope you will join my companies. And, I will see you again, soon, Phula [flower].\" With that, he left. Her foot released mine. I glanced at Baghini, and she glanced at me.\n\nIn a loud whisper, she said, \"Don't! He may have people watching me. No... NO... do not laugh! They will know for sure.\"\n\nWe both had a very hard time containing the laughter of our stress relief, but we managed. After a moment, and ready to leave, I stood and offered her my hand.\n\n\"No,\" she whispered, \"You should not touch me!\" as she stood. We walked out, side by side.\n\n\"That is a very beautiful dress. Is it a traditional style, Sanchari?\"\n\n\"Yes, you know my name now. And thank you for the compliment. The dress is a modern variation on the well-known Sari.\"\n\n\"And what does Sanchari mean?\"\n\n\"A traveler in motion.\"\n\n\"I wonder if your parents had any idea how appropriate that name would seem?\"\n\n\"I doubt it,\" she chuckled.\n\nI looked around and saw no one close to us, so I said, \"And this is the man... of your family, that you do not want to disgrace? Right?\"\n\n\"Yes,\" she said as we walked slowly.\n\n\"Does he know about Baghini\"\n\n\"No! Father would totally disown me, as well as fire me, if he knew I slept around! He has his people check on me from time to time, especially when he is in town. That is why I have to be careful!\"\n\n\"Jeez, Sanchari. What am I supposed to do? I have a huge contract to fulfill with your dad. And he offers me a fantastic sounding job. I assume that if he finds out you and I are having great sex, then we're both up... a bad creek.\"\n\n\"Yes. Father would be absolutely infuriated. I would fear for all of our jobs if he knew... and... you thought it was great sex?\"\n\nI stopped and turned to reach for her.\n\n\"Don't touch me! Remember?\"\n\nI put my hands in my pockets. \"Absolutely the best sex ever!\"\n\nWe started walking again. \"I thought so, too, Nick. It was wonderful, really.\" Then she slowed. \"This is my place.\"\n\nI frowned, \"Then I guess I will see you... when I see you... I guess.\"\n\n\"Oh, Nick. I want you so much, right now!\"\n\n\"I want you, all of the time!\"\n\n\"Nick! I'll go in, and you walk around the block! Then come in and tell security \"Baghini\". My condo is number 2514. We'll only have long enough time to pretend we're having coffee. Alright?\"\n\n\"You sure?\"\n\n\"Not 100 percent, but I want you so much. I'll be in the bedroom, waiting. Now, go!\"\n\nI did as she instructed, walking around the block, as my eager erection fought for space in my pants. Easily getting past security, I found the door to #2514 unlocked. I stepped in, shut the door, and announced, \"Baghini.\"\n\n\"Here,\" came her voice from down the hallway of her beautifully decorated condo. It was the loudest volume I had ever heard from her. When I walked in, she was on the bed, gloriously naked. \"Hurry up!\"\n\nI tossed off my clothes, with my erection eagerly springing out in greeting. She spread her legs. I lunged toward her, and I think I was inside her before the bed even settled from my landing.\n\n\"God, her pussy is so warm!\"\n\n\"Don't be gentle,\" she moaned, as she pushed her hips at me.\n\n\"I can't believe how good she feels, and how much I need to be in her!\"\n\nWe were desperate, our bodies colliding out of sync, as we both thrust with urgency. She gave up her thrusts and pulled her knees back. I took that opportunity to slam myself into her, again and again, with a desire born of wanting to penetrate her soul, more than attain my orgasm.\n\nIn maybe five or six minutes, the moans had subsided and we lay next to each other, breathing deeply. \"I wish so much that I could sleep in your arms tonight,\" she said.\n\n\"So do I. But you can't. I do understand,\" I said, dejectedly, as I rolled off the bed and picked up my clothes, and started putting them on. She jumped off the bed, dug in her purse, and handed me her business card.\n\n\"Don't leave anything too personal in a message, as my assistant often sees them.\"\n\n\"Got it,\" I said, as I finished getting dressed. She grabbed me in a passionate kiss, followed by, \"Let's hope it's not long before we can be together again... if we can. I'll miss you!\"\n\nI looked at those dark almond eyes and shook my head. \"I... just need you. That's all I can say... I need you.\" I saw a smile bloom as I turned and left. Looking back again was too hard. I went all the way back to my hotel without looking back.\n\n=+=+=+=+=+=+=\n\nThe week passed in a maze of planning and meetings, punctuated by lonely nights. It appeared we were all set for the installation in two weeks, assuming everything cleared Customs in Singapore as predicted.\n\nI had resisted contacting Baghini on Tuesday partly out of fear of discovery, and partly because it simply pained me so much to see that simple \"Miss U\" in her text. Then she texted me that she had to leave for business Wednesday in Hong Kong for several days. I was left unable to even imagine her being in her own bed at night.\n\nWhile I was flying back to San Francisco on Friday, I looked out at the shimmering ocean and the soft clouds. I wanted my mind to think of home, friends, even my job.\n\nBut at every chance, it veered back to Singapore, to the velvety softness of her voice. And to that playful grin, surrounded in red lip gloss, so close to my face that I couldn't even focus on it. To brushing her hair aside to expose those dark almond eyes and the makeup she used to make her eyes look even more tapered. And to the silky skin of that blissful puddle that'd snuggled next to me. I had to put the airline's inflight magazine on my lap to hide my erection from the businesswoman in the aisle seat.\n\nIt was going to be a long two weeks before I'd be with her again... if I could see her again.\n\n=+=+=+=+=+=+=\n\nIn those two weeks, I had decided to throw my life to the wind. I told Mr. Manjur's assistant that I was interested in the job, but that I wanted to finish the installation for Coolenetics first. I requested assistance in planning my relocation to Singapore, hoping to find some place in the district close to Baghini, though I certainly did not tell his assistant that.\n\nBaghini and I had texted on her secret number, but only the briefest, \"Miss U's, Want U's, Need U's\". How I longed to hear her voice say those words, not just read them in some little white box on my phone's screen.\n\nNow, I was flying back to Singapore for Coolenetics, Manjur Int'l, and to see it as my future home. But most of all, I needed to see my Baghini. I had left a message at Sanchari's business number of when I was arriving.\n\nI landed on Sunday morning and was surprised to see a man with a tablet computer that said, \"Nicholas Tanner\" when I left Customs. The Manjur Int'l car took me to the same hotel since Coolenetics had booked me in the same place as before. I had hoped to find Baghini in the car or in the hotel, but it was not to be.\n\nI texted her secret number, \"Bagha is here!\"\n\nThe reply was quick, \"I know. Your room? One hour?\"\n\nI clicked off my instant reply, \"Less? Nearly lunch. Eaten?\"\n\n\"Yes. Order just 4 you.\"\n\nSo, I ordered my meal and then ate while pacing the floor. Just short of an hour, around 12:30, I heard the knock and whipped the door open. The sudden movement of the door rustled the delicate black fabric she was hiding in. She hurried in, and I closed the door. She smiled, slightly anxiously, as she slid the black shawl off of her head.\n\nI was so torn. Part of me wanted to be moving inside her at this very moment and hearing her pleading moans. The other part just wanted to devour the sight of her naked body, yet barely daring to touch the beautiful shell of the soul I craved.\n\n\"Is there a problem, Bagha?\"\n\nI brought my eyes back up to meet hers. My eyes started to well up.\n\n\"What is wrong, Nick!\" she softly pleaded, moving right up against me.\n\n\"Sanchari... I... just didn't know how much I missed you until this moment.\"\n\nShe hugged me. \"I have missed you even more than I expected, too.\"\n\nMy hands hovered near her neck. \"So, where do I start to get you out of this dress?\"\n\nShe chuckled, \"I'll do it.\" She reached by her shoulder, undid something, and then started unwinding the dress off of her. After a couple of revolutions, she only had her bra and panties left, since she had stepped out of her shoes, as well. Baghini snuggled up to me, and pushed her hands under my polo shirt, lifting it until I raised my arms and bent over for her to pull it off. I let her take my pants off, after which she pushed me onto the bed and peeled my socks off. Unceremoniously, she pulled off my boxer briefs, undid her bra, and slid off her panties. She scooted past me on the bed, which I had already turned down, and turned on her side, with her head on the pillow.\n\nI turned and just looked at the lovely form of her waiting for me.\n\nHer grin grew, cheeks rounded, and eyes smiled. \"Have you forgotten how to do this, in just two weeks?\"\n\nI smiled, and moved up the bed, until I lay on my side, facing her. She reached out and brushed my cheek, while watching my eyes. \"I miss this as much as the sex.\"\n\nI did too, and we spent nearly an hour just touching and talking about the last two weeks. My finger circle around her waiting breast as I told her more about my interest in her father's job offer. Her fingers slid up my thigh and over my hip as she said how excited she was that I would be close. One of her fingers traveled aimlessly over my stomach as she verbally pondered how we could be discreet over a longer period of time.\n\nI kissed the end of her nose, before I told her I was hoping to find a place close to hers. She combed her fingers through my hair, in that way I enjoyed so much, as she talked of how much she would enjoy having me nearby.\n\nI drew random patterns with my finger on her mons as I explained how I wanted to finish the installation job, before leaving Coolenetics. She squirmed gently, grinned, and watched my eyes, as she listened.\n\nAfter an hour, there was a lot more touching than talking. Kisses also reduced the talking. The talking finally became one-sided, with her words unintelligible, when I nuzzled in between her legs, and let my tongue do the talking. She was a good listener. I really delighted at bringing her to point that her passionate babbling was in Bangla, instead of English. Translation wasn't required. And it was such an enjoyable challenge to try to stay in the best position on her pussy, as she writhed and arched.\n\nLater, it was my turn to mumble various mono-syllabic words as she pushed her throat around me. I honored her efforts by nearly passing out. She was that good.\n\nWe had a good rest, spooning and laughing about our crazy situation. Her laughter tickled a warm spot in me, which made me desire it that much more.\n\nFinally, I made love to her as slowly as I could. It was the most exquisite, sensual thing that I had ever done with her, and that was saying something. I was slow in and slow out, shifting to enter her at different angles, changing rhythms, nibbling on her nipples, and keeping my eyes on hers most of the time. Afterward, I lay next to her, imagining a life of making love to her like that.\n\nToo soon, we had to behave like we were alive, and got up. After we had ordered and eaten dinner, she had to leave. Being seen going home late was just too much of a risk. Once again, it was just plain hard to say goodbye, not really sure if or when we could just be in each other's arms again.\n\nWhen she was gone, I once again endured loneliness I had never felt with anyone else. It was more like a piece of me had left.\n\n= = = = = = =\n\nTuesday appeared to be our lucky day to get together again. Manjur's staff and I broke off the installation work at 3:30 when we hit an electrical snag, and had to have some electricians come in before we could continue. Baghini had a clear schedule for the rest of the day too, so she was able to get to my hotel room at 4:30.\n\n\"Only two days since I was with you, and that is too long,\" she sighed, as her head was pressed against my collarbone.\n\n\"As soon as you leave each time, it is too long for me,\" I answered, with my chin against her hair.\n\nI guided her to the bed, and she stepped out of her shoes. Quietly, she unbuttoned my shirt and slid it off. This time I knew how to unwind her disguise, and happily disrobed her. With a grin, she removed my pants, underwear, and socks.",
        "She reached for my erection, but I caught her hand and instead turned her around like a dance move. Then I snuggled up behind her and wrapped her in my arms. Her hands came up and brushed along my forearms, and we just swayed in that embrace for a minute or more. I stepped back and removed her bra and panties.\n\nThen I had an ambitious idea. So, I turned her around and picked her up, with my hands under her thighs. She put her arms over my shoulders and moved to kiss me as my erection brushed up under her. I felt the dampness already there, as I put my lips to hers and she hummed happily, while I turned us both and started backing up to the bed.\n\nUntil I stepped on her shoe. Off-balance, I twisted, before we both crashed onto the turned-down bed... sort of. I landed on my side, with my hips just off the edge of the bed. That caused me to slide to the floor. Concerned for her, I looked and found her face down on the mattress, with her legs, from just above the knees and down, hanging out in the air, wiggling. I quickly got up and saw her hair all around her face, with her chest heaving rhythmically.\n\nSmiling, I crawled up besideher. \"Is Baghini laughing?\" The pile of hair and her chest heaved bigger. Then she pushed herself up on her arms, and the real laughter escaped.\n\n\"What did you think you were doing?\" she laughed, as she started to crawl up to the pillows.\n\nI slid up to the pillows, and meekly said, \"Sorry!\" She grabbed me and kissed me, still laughing. It took us only minutes to work up to the really heavy breathing. The passion grew into a couple of rousing orgasms, which led to some cool off time as we cuddled.\n\nAfter a while, she rolled over to face me, putting her hand on my cheek. She was going to say something, but I spoke first. \"Sanchari, you are the most special woman I have ever known.\"\n\nI could see her eyes getting wet above the big smile, as she said, \"Will it scare you if I tell you that I have never been happier than with you?\"\n\n\"Doesn't scare me at all, beautiful. You hungry?\"\n\nShe nodded, and so we ordered dinner. Sanchari jumped in for a quick sweat-removing shower. We were both in bathrobes when the knock at the door came. I answered it.\n\n\"Mr. Ma...\"\n\n\"You? I'll have you... you - where is my daughter! Mr. Manjur burst past me, and I knew we were fucked. Baghini was in the bathroom, and saw him look at her and he seethed.\n\n\"Father!\" she barked.\n\nI moved around behind Mr. Manjur in the hallway to get past him. Then, I went to stand by the dresser.\n\nLoud words finally came to his ever-reddening face, \"YOU... you disgrace me like this! My own daughter!\" He sputtered for a moment and then continued, \"They said you were in here, but...but I did not want to believe it! You... you are... besya! Ebam ei amerikana sange! [whore! And with this American!]\n\n\"Shit, this is so bad! What are we going to do? And I wish I knew what he just said?\"\n\nThat's when I heard her voice, at least I thought it must be her voice, because there was no one else in here. But I had never heard anything like this from her. Her voice was strong, proud, and she hissed at him, \"Speak English! Do not disrespect him like that. He is involved in this, too.\"\n\nMr. Manjur seemed startled for a moment, but then flashed a scowl in my direction. He growled, \"Is it you... Mr. Tanner, that teaches my daughter to talk back to her father like this!\"\n\nHer voice was harsh, and determined, \"No, Father! This is all from your 'little flower.' You taught me this! Yelling, intimidation, threats... And now? What? Spying?\"\n\n\"You talk to me with such disrespect! You are no longer my daughter!\"\n\n\"Good!\" she screamed at him.\n\nHis rage was growing at her every challenge. Pointing at me, he yelled, \"And this man no longer has a job with me... and I will see him fired, and his contract canceled!\"\n\n\"Oh, fuck! I'm so... wait. What is she doing?\"\n\nSanchari came out of the bathroom and moved to stand right in front of him. She screamed, \"You Fucking Coward!\"\n\nThose words seem to knock some of the fight out of him. After a moment, he collected himself. \"Coward?\" he barked back and then stuttered and stumbled, \"Your father. How dare you!... You ungrateful...\"\n\n\"Grateful for what, father?\" she again hissed. \"That I, yes a woman, have succeeded at my job so well that you are now an honored man for your great charity work? Really? And every time you get another award, you are so grateful to me that you have, never once, mentioned my name in your speeches!\"\n\nHe looked outraged but said nothing. She turned and paced the few steps to the front door and back. \"Yes, you gave me a job in Singapore when I left home... but it was me... ME... my hard work and talent that got you to make me the director. And now you will just throw me out because I live my life as I choose?\"\n\n\"Sanchari!\" and there was a slight edge of compassion to his words, \"You cannot 'choose' to lay with a man when you are not married to him! It is against our faith... Against the All Mighty's laws.\"\n\n\"Your faith, not mine!\"\n\nHe was taken aback by that answer. \"You were born Muslim, Sanchari. You cannot change that!\"\n\n\"It's a faith, father, not ancestry. And it is no longer what I believe in!\"\n\nHe turned to me, and growled, \"It is you that has perverted her? This is not my daughter!\"\n\nSanchari grabbed his arm. \"Look at me. You talk to me! He has nothing to do with my faith or how I have chosen to live my life!\"\n\nThere were sharp raps on the door. Startled, Sanchari turned and opened it. Looking past her, I saw the staff member with our meal cart, along with two security people.\n\n\"Shit! As if we don't have enough problems. Now what?\"\n\nOne of the security men exclaimed, \"Mr. Manjur! We had no idea it was you... I mean we had complaints of shouting, but we didn't know...\"\n\nMr. Manjur waived a hand that stopped him. \"Please give the manager my apologies. It is just a family matter and we apologize for disturbing anyone.\"\n\nThe security man said, \"Of course, sir! I will convey your apology and thank you for your cooperation. Good evening.\"\n\nSanchari pulled in the food cart, and I quickly found my wallet and pulled out the tip. She pushed the cart past her father, and I handed her the tip, which she passed on. Then, she closed the door as I moved the cart away.\n\nNow her voice was closer to normal but very stern. \"Father, I live my life, as a woman in this world of today, and am the equal of any man! I've often deferred to you and your beliefs because I didn't want my family to suffer any further disgrace because of me. But I will not live my life solely to serve your purposes!\"\n\nHe pointed at the messy bed, and his voice was terse and just short of shouting. \"And now you have disgraced the family, again. Have you no shame left?\"\n\nSanchari slammed her palms into his chest, causing him to take a step back to keep his balance. I even flinched at her sudden \"attack\". She stood for a moment glaring at him, and he seemed perplexed at her physical action. Then my heart stung as I saw her tears. She could hardly contain the anger in her voice, \"Your disgrace, you mean? Your pride! Where is my baba that put me on his lap and told me he would always protect me?\"\n\n\"I was...\"\n\nShe hit his chest again and knocked him back another step. He seemed unable to comprehend her violence and didn't seem to be trying to speak anymore. \"Where was my baba when I was 15, and the man he picked for me to marry raped me because I said 'No' to marrying him!\"\n\nShe hit him once again, sending him bumping into the lamp. \"Were you protecting me - or you - when you flew me to wherever it was, and they gave me that abortion!\"\n\n\"Sanchari,\" he pleaded.\n\nShe did not wait for him to say more. Her eyes turned to me with her tears streaming and a sad look that pleaded to me. \"And because of that convenient abortion when I was 15, I can never bear you a grandchild! Is that how you 'protected me,' baba?\"\n\nNow I knew what the look was for. She was revealing that we, if there were to be a \"we\", could not have children together. My heart was breaking for her.\n\nSomewhat contrite, he began, \"Sanchari, I never meant...\"\n\n\"Don't you dare say that to me, father! You told me the rape was my fault, that I had disgraced you and the family... that you would not be able to find a man that would want to marry me. And you told me that... that I was worthless! Now, you want to tell me that it was what? A Joke? Poorly chosen words?\"\n\nHe reached out to her, but she backed away.\n\n\"Baba... I pleaded with you to let me leave so that I wouldn't continue to disgrace the family. You brought me here, put me in school. I gave up my mother, and my sister when I was sixteen. And now... my niece, nephew, and brother-in-law, too. So, if you want to disown me, deny me now, you go ahead... I can get a new job, a new home, and you'll never see me again! If you can live with that, then you're not my baba, anyway!\"\n\nMr. Manjur looked behind him, found a chair, and dropped into it. \"Blaming everything on Nondo Ghosh, eh?\"\n\n\"That old idiom? No, it's not all your fault, father. But you are the one who set it all in motion when I was 15, and you're the one today that holds our future... Nick's and mine, in your hands. So, what will you do?\"\n\nI felt so much pain for her that I hadn't even thought of my own situation in all this. And, sure as hell, I was proud of her.\n\n\"Please listen, my Flower?\" he said, with a tear sneaking out his eye.\n\nShe crossed her arms and glared, cheeks wet, but with tears no longer flowing.\n\n\"I suppose I can be a bit blind to my own ambitions. And I am sorry what I did to you then. But you were just a girl then, and I mean no further disrespect, but it was my job as your father to tell you what to do. Now you are grown, and, as you have made clear today, quite formidable and independent. More so than I ever imagined possible. For that short sidedness, I can only apologize.\"\n\nHer arms unfolded. \"Thank you for that acknowledgment, at least.\"\n\n\"But this, Sanchari... a man? With your intelligence, what would you have me do? Our faith... well my faith, does not tolerate such behavior. I cannot say, 'Oh, excuse me you two. Please continue what you were doing.\"\n\nWith a sigh, she said, \"Baba, I know I can't expect your faith to ignore what you have found here today. I do understand. I know you should deny me as your daughter, to confirm your religious beliefs. But at this moment, it is only the three of us that know of this, plus for you, Allah. Well, plus those three staff, and your spy, all of whom I assume you can acquire their silence from?\"\n\n\"I can,\" he said.\n\n\"But, is your faith so rigid that you can ignore everything you have done to me, all that you have cost me, and then ruin me again for finding the most delightful, gentle, and hopefully forgiving man that I have ever known? Is that really what your faith means to you?\"\n\nShe glanced at me, with a sad smirk, and I grinned happily back at her.\n\n\"You've got him on the ropes, Tigress. Close the deal!\"\n\n\"But Flower, such sacrilege? You ask me to ignore that you take a man into your bed, and whom you do not even love! Mr. Manjur turned to glare at me, but then I could see something was happening in his mind, as his face started to change. His glare faded as his eyes trailed away, and then he turned back to look at Sanchari.\n\n\"Or do you... love him?\"\n\n\"That is between us, father.\"\n\n\"NO... Not when you ask me to suppress my faith and live with what I may do because of that. Do you love him, my Little Flower?\"\n\nMy Baghini fidgeted, looked at me, then turned her eyes down as the tears came again. The soft voice came back, \"Yes, baba, very much!\"\n\n\"YES!\" exploded inside me.\n\nHer wet eyes came up and looked at me, and I nodded enthusiastically. She quickly smiled and gurgled a chuckle. I so wanted to hold her, kiss her, and actually say the words of my love for her. But there was still too much at stake. She was in the battle for her life and I had no way to help.\n\nMr. Manjur turned to me, \"And you, Nicholas Tanner, what are your feelings for my daughter, whom you have defiled?\"\n\n\"Oh shit, Nick. Now you're on. Don't blow it!\"\n\nI tensed, my mind rapidly shuffling ideas to find ones that could be good enough to counter the clear challenge in his question. Deciding, and determined, I took a deep breath while he grew obviously impatient with my slow response. \"Sir, I could simply say that I love her as well, but that would not be nearly enough. I am incomplete without her. Her absence from me is like a wound. She is in my mind always, waiting to be thought of at the first opportunity... Her happiness means everything to me, sir.\"\n\nI looked over to my Baghini and found her biting her lip and using the bathrobe sleeve to wipe away her tears.\n\n\"Then it seems what I will ask, Flower, will be even less difficult than I had hoped.\"\n\n\"What is it?\" she sniffed.\n\n\"Mr. Tanner, would you be willing to accept my daughter as your wife, and soon... as a resolution that I can accept for ignoring that I knew of this physical relationship?\"\n\nI wasn't letting that question stand, even if it cost me my job... or jobs. \"No, sir, I will not accept your daughter.\" Both Baghini and her father were clearly startled. She looked at me anxiously, obviously concerned.\n\nI walked close to him, and looked down at him, in that chair with his cheek still damp. \"Mr. Manjur, sir, you wanted my honesty. Now, it is more important than ever that I be honest with you. I will not accept her, because that term means she is a 'thing'... to be given, or taken. I will marry her only if she is fully willing to stand at my side, equal in every measure and every decision.\"\n\nBaghini scurried over, captured my wrist, stuck her face into my arm, and snuffled. I could feel her body shaking.\n\nI continued, \"While I respect your faith, if it comes to a choice between the respect of her or you, then she will win every time... regardless of any disgrace your family perceives. It is my wish to marry her, only if she is willing, and not because it is some... ultimatum of your conscience.\"\n\nI coaxed her to let go of me, and I got down on one knee, and said, \"Sanchari Begum Manjur, will you have me as your husband?\" Her smile gleamed bright as she glanced at her father, and then turned to me, nodding furiously.\n\n\"Flower, it seems you have chosen very wisely. I should have expected no less of you. And I suppose you, too, Nicholas. My congratulations to you both. Can my lovely daughter forgive me the smallest bit, and give me a hug?\"\n\nSanchari brushed back all of her hair, which was everywhere after so much nodding, and went and hugged her father after he stood.\n\nMr. Manjur looked to be both satisfied and sad. \"I shall be going now. And Sanchari, why don't you take a week off after Nick - if I may call him that -- finishes his cooling project? Go to America to help him move here? I assume you two are planning to live here and keep working for me?\"\n\nShe looked at me with that question on her face, and I nodded.\n\n\"Yes, father, we plan to live here and work for you. I will take that vacation, but may I have two weeks so that I can be a tourist as well? And, of course, this would have nothing to do with the fact that we will be well out of the sight of anyone you might know? Right?\"\n\n\"That is a convenient benefit, Flower,\" and the family smirk spread across his face.\n\nThen it hit me. She had looked familiar in the bar that first night because I had met her father!\" I started chuckling, and they both looked at me, oddly. I caught myself, and said, \"'Nick' would be fine. And I will take good care of her in America, sir.\"\n\n\"Just, please, do it very privately... please?\" he said.\n\n\"Of course, sir.\"\n\nHe took her hand, and said, \"And my dear, Sanchari. Please know that you have made me ashamed of how I have treated you at times. And I apologize for being too blind to have seen it before. But, if there is a next time, please do not yell or hit me. It is very painful for this old man's heart.\"\n\nTheir smiles to each other were heartwarming.\n\n\"Alright, as I said, I am going. And I hope you will be too, soon, my flower?\"\n\n\"Yes, baba,\" she chuckled.\n\nWith one last turn to smile at her, he left.\n\nMy Baghini stepped back against me, with a thump, and then I had to hold her up, as she shivered and nearly collapsed.\n\n\"I have never talked to my father like that! Never! I don't know how I did it? Now I'm just shaking so much.\"\n\n\"Maybe it was my Tigress that told him off. She was pretty impressive. I hope you never get mad at me like that!\"\n\nShe spun in my arms, still unsteady, and found my eyes. \"You really meant what you said? About love and marriage? To me?\"\n\n\"Depends\"\n\n\"Depends, on what!\"\n\n\"How big your baba's shotgun is.\"\n\n\"What does his shotgun have to do with this?\"\n\n\"I'm joking! Yes, I meant everything I said to your father. It was another idiom I was teasing you with. Sorry the humor was lost on you. Look up \"shotgun wedding.\"\n\nShe thumped a fist onto my chest, laughing, \"Don't scare me like that! You want to make more jokes, please don't do them about loving or marrying me! This doesn't seem real yet.\"\n\n\"But, you are happy, my Baghini?\"\n\n\"Oh, yes!\" she chirped, \"Very, very happy!\"\n\n\"Then I suppose we should shop for your engagement ring tomorrow. I assume there is no custom of yours that would object to that?\"\n\n\"Not mine. There are confusing rules for Muslims, but my new rule is that you must have one, too. For my father's sake, though, it will not be gold.\"\n\n\"Okay, we shop for two rings, silver or platinum.\"\n\n\"This all seems impossible, Nick. Just over an hour ago, we were making love, then I was nearly disowned, and now we are engaged! And I'm going to see America for the first time, and I'll be alone with you for two weeks. Plus, we have to plan our wedding, honeymoon, and future!\"\n\n\"My vote is a honeymoon in Bora Bora.\"\n\n\"Great choice, Bagha. I agree! And, will you accept my condo as our home, at least to begin with?\"\n\n\"Certainly. See, this is easier than you thought.\"\n\n\"I only need you, Nick. And since I haven't said it to you... I love you, Nicholas Tanner!\"\n\n\"And I love my bismayakara Baghini, and the future Misses Sanchari...\"\n\n\"Manjur-Tanner.\"\n\nI laughed and squeezed her tight. \"I like that. Please meet my lovely wife, Sanchari Manjur-Tanner, the Bengali Tigress!\"\n\n\"Nick! That is private... for us, that name Baghini.\" Then she loosened the knot at the waist of my bathrobe. \"Before I leave, why don't I remind you, one more time, what that name is to be used for?\"\n\n\"You think I have forgotten?\" I smiled.\n\n\"Then I ask,\" she whispered, \"I want more... please!\"\n\n \n"
    ],
    "authorname": "GoneGray",
    "tags": [
        "erotic couplilng",
        "bangladesh",
        "consensual",
        "couple",
        "hotel",
        "india",
        "interracial",
        "orgasm",
        "romantic",
        "straight sex"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/bengali-tigress"
}