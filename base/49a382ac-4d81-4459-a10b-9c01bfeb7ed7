{
    "title": "Fire in the Embers Ch. 01",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 1 - Prologue \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled my favorite redheaded reporterette at precisely 7:00am, Monday November 9th. \"We are bringing you continuing coverage of the major drug bust over the weekend by the Town & County Police Force's Vice Squad, led by Lieutenant Teresa Croyle!\"\n\nAll of MCD was watching intently as Bettina continued: \"The drug operation centered around an organization called Viscotti Cabs. Their cab service only picked up customers who were known to them, and their operation was a mere front for distributing drugs in the County. The TCPD has been working on this case for over a year, and concluded their investigation with the arrest of eight people Saturday night.\"\n\n(Author's note: the Viscotti Cabs situation was first brought up in 'The Case of the Murdered Bride'.)\n\n\"Fantastic!\" Lt. Tanya Perlman said, giving a fist pump.\n\n\"Teresa kicked ass on this, as did Grubby Paul, who infiltrated them.\" said Cpt. Cindy Ross.\n\n\"Yes.\" I said. \"I eagerly await your submissions for commendations for all involved.\"\n\n\"It's worth the paperwork.\" Cindy said. \"By the way--\"\n\nShe was interrupted as Bettina said \"In other news regarding the Police Department, the Town & County Council is expected to bring up the issue of hiring a new Police Chief, and have asked Sheriff Daniel Allgood and Commander Donald Troy to attend their executive session. Once again, Commander Donald Troy has taken his name out of consideration for the post, and Channel Two News has learned from multiple sources that the Council may already have our next Police Chief's name in mind.\"\n\n\"Is that true?\" asked Tanya as she filled her mug with coffee.\n\n\"Yes.\" I said. \"It's a done deal... well, after the Council affirms it, then has a second reading of the bill next week.\"\n\n\"Not going to tell us who, sir?\" asked Martin Nash.\n\n\"I'll tell y'all Wednesday, once it's confirmed.\" I said as I noticed Vice Detectives had been trickling into the MCD room. Something was up, and I had a sneaking suspicion what it was and who was behind it... a certain platinum blonde Canadian wielding the Blue Crowbar.\n\n\"They're moving really fast on getting a new Chief.\" said Chris 'Pervert' Purvis of Vice. \"Won't Chief Bennett be here through the end of the year?\"\n\n\"That was the original plan.\" I said as everyone poured more coffee, and started fresh pots. \"But if the Council acts tomorrow, they may let Chief Bennett go ahead to his new job, which he's pretty much doing half the time already.\"\n\nJust then, Lt. Teresa Croyle came into MCD. \"Where is everybody?\" she asked. And the Blue Crowbar's plan came to fruition: all of the Detectives stood and gave her a huge round of applause for the Viscotti Cabs bust. And well-deserved, too.\n\n\"Congratulations, Lieutenant!\" Cindy shouted as the applause finally died down. Teresa was blushing furiously as Cindy opened a box of doughnuts she'd just brought out from under a desk. \"You get the first doughnut today. We'll save a couple for Grubby Paul when he comes on duty this afternoon. But you guys did a fantastic job on this. Especially you, Lieutenant. You've stuck with this for over a year, and you finally landed those fish.\"\n\n\"And she doesn't even need a crowbar.\" I said, getting laughter. \"Truly great work, Lieutenant. And all of you in Vice deserve credit as well. Great job, guys!\" There was more acclaim, then the boxes of doughnuts were attacked.\n\nTeresa was not used to such praise, especially in front of her peers, subordinates, and superiors, and I could see on her face that she was trying to deal with it internally. I had a flashback to the time she was nearly fired for beating up Dean Allen, and the Christmas party and all that that had meant. Teresa had come a long way, a long, long way. And I hoped she would sustain and prevail in the tests to come...\n\nPart 2 - Cab Service \n\n\"We've still got a lot of work to do on this.\" Teresa said as she and ADA Jenna Stiles sat in my office chairs in front of my desk, with Cindy sitting behind them on the sofa. \"I'm hoping we can get the Viscottis to talk, maybe give us more. Maybe even the Beanstalk Gang, finally and at last. Commander, Jenna and I will try to break them down first, but I lose no face in asking if you'll help us out with the interrogations. No one else can do it any better.\"\n\n\"Sure, no problem.\" I said. \"What do you want from them?\"\n\nJenna said \"We're pretty sure the Beanstalk Gang was their primary supplier. Ever since Captain Malone left Town, other gangs have been able to operate here... at least until Lt. Croyle shuts them down. However, most of the distributors stuck with the Beanstalkers, and were only now getting some inroads into them.\"\n\n\"This is where I berate myself for not paying more attention to the Vice side of things.\" I said. \"Thank goodness I have someone of Lt. Croyle's ability leading us there.\"\n\n\"I have a lot of help, Commander.\" said Teresa. \"And your Captain of Detectives has been giving us plenty of support, and I know you've got our backs too.\"\n\n\"Oh, no doubts on that.\" I said. \"So let me ask this, at least to the extent you can tell me without blowing C.I. covers: who else do we need to be looking at to chop down this Beanstalk, or at least make it wither and die away?\"\n\nTeresa replied \"As you know, Commander, it used to be that the Beanstalk Gang was the only game in Town. Captain Malone would drive the rest away or put the competition in jail. But as soon as he (Cpt. Malone) was gone, T-Square stopped dealing with them, and began opening his own pipelines. But here's the cute little trick: the Beanstalkers saw their exclusivity coming to an end, so they set up other gangs and made them look like 'competition'... but they're really all interconnected.\"\n\n\"Kind of like phone companies or cable companies pretending to have competition, when they're all owned by the same holding companies.\" I said. Jenna nodded.\n\n\"That's right.\" said Teresa. \"And they've set up some pretty interesting groups. Viscotti Cabs was one of their oldest and best. But we can find them in just about anything to do with transportation and delivery. That Kroger regional executive was one example. That one didn't work out, but for every failure they have two successful lines.\n\n\"Another really big one is restaurants.\" Teresa continued. \"Take the Hyatt Hotel, or University Hotel. Somebody brings in one little extra package of some food item, like ketchup, or coffee creamer. Then a guest in the hotel gets a little package with his or her room service the next morning. And then there's things on a larger scale, going through the same channels.s\"\n\n\"And damn near impossible to catch.\" I said.\n\n\"Yes sir.\" said Teresa. \"Which is why getting the Viscottis to talk is such a big deal. They're buying from the Beanstalk Gang, and if we can set up a sting and catch them based upon Viscotti's information, then we can work on the Beanstalk Gang to turn on their supplier, and so on and so forth.\"\n\n'So out of idle curiosity,\" I asked, \"where do you usually find that the chain ends? Where is it that we stop being able to catch these guys?\"\n\n\"For us, the County line.\" said Teresa. \"Some States have good regional or State-wide task forces, while some States, like our own, have State-level law enforcement that doesn't give a damn. Dick Ferrell's Narcotics Task Force is an absolute joke; criminals do not fear him nor his people at all, local LEOs have absolutely no respect for him.\"\n\n\"Can't imagine who those might be.\" I said drily.\"\n\nTeresa's eyes glinted as she said \"One LEO even began shooting at him and his corrupt minions with a machine gun. I'm only sorry that guy missed. He needs range time.\"\n\nCindy and I burst out laughing at that one, knowing that I was the errant machine gun operator, and how often I instruct my Officers to get more range time. Jenna looked confused as I said \"Good one, Lt. Croyle. \"I'll see if I can get some time on the outdoor range with a machine gun, just in case we have that scenario again. So we have problems at the State level?\"\n\n\"We do, but some States are luckier.\" Teresa said. \"States with good interdiction, and those aren't many, usually find a helpful FBI or DEA working with them if State lines are crossed. In this State, the FBI or DEA pretty much has to come to the County-level LEOs to get anything done... assuming they, the Feds, want to get something done.\"\n\n\"And of course,\" I said, \"once we take out a group like the Viscottis or the Beanstalkers, you're looking at new groups coming in and replacing them. Gangs, like MS-13; motorcycle gangs, such as the Hell's Angels or other, newer bikers like 'White Roots'. The party never stops with them.\"\n\n\"Good job security for us.\" Teresa said, with no small amount of sarcasm in her voice.\n\n\"But that is the one thing that burns me up.\" said Cindy, piping in from behind. \"You guys spend months working to bust these bastards, the D.A.'s Office spends time and effort to prosecute them, and asshole judges like Harry 'Spud' Nance just set low bails and they walk, never to return. And then another gang starts up, and guess who is behind it? Yep, the same guys that walked on the low bails. And then Appellate Judges like Leahy look as hard as they can for any technicality over which to release them.\"\n\nI observed that Jenna Stiles's eyes flashed some anger at her fianc\u00e9e's comment; Jenna was of the political Left, and actively so, while Cindy was a political atheist. No, I had no desire to know what their pillow talk was about, I thought to myself.\n\n\"Well, we can only do what we can do.\" I said. \"So!... let's concentrate on the bastards we have in our jails now, and let the cards fall as they may.\"\n\n* * * * * * * * * * * * * * * *\n\n\"I got nothin' for you little girls.\" said Vince Viscotti. He was a large, muscular man with a balding head. I had to resist the temptation to call him 'Popeye'. He talked in an Italian accent, though with fewer hand motions and gesticulations than many Italians I know. Oh, is that politically incorrect to say? Get over it.\n\nSpeaking of political incorrectness, Viscotti was showing his clear disrespect for the women on the other side of the table. Corporal Ronnie Kirkpatrick was doing the guard duty in the room, and Viscotti just ignored him as he said \"You women will never be able to prove that I was involved in any of this. By the way, where is my lawyer?\"\n\n\"You haven't asked for one yet.\" said Croyle. \"Do you want one?\"\n\n\"He's trying to be sneaky with us, Lieutenant.\" ADA Stiles said. \"By asking where the lawyer is, he's essentially asking for one. So we won't ask him any more questions until his attorney shows up. Mr. Viscotti, do you want to call your own attorney, or shall we send a Court-appointed Public Defender to represent you?\"\n\nViscotti frowned, seeing his little ruse hadn't worked. I was watching through the one-way glass with Grubby Paul and Cindy, and I pointed out his little gambit. \"Jenna did a great job on that one.\" I said. \"My question is: who coached this meathead to do that?\" We listened as Viscotti growled that he wanted a phone to call his attorney.\n\n* * * * * * * * * * * * * * * *\n\nThe attorney from Andolini & Tommasino, P.C., arrived at 11:00am and went into conference with Viscotti immediately. His name was Tessaforte. He was short, putting on weight. His hair was frazzled on either side, almost Crusty-The-Clown in appearance, with an oval face and glasses that made him appear nerdish. I knew that this law firm was dedicated to Italian clientele, mostly in the City, and was very much Mob-connected.\n\nWhen Teresa and Jenna were 'invited' back, they found the attorney as disdainful of the females as Viscotti had been, as Tessaforte said \"You little ladies don't have a thing on my client. He may have been an investor in this cab company, but he didn't personally run it.\"\n\n\"First of all,\" said Teresa, \"if you call me a 'little' lady again, you will find out just how hard a punch I can pack. Second, we've got your little boy 'Popeye' here ice cold for big-time drug distribution as well as RICO violations.\"\n\n\"Who are you calling a little boy, bitch?\" growled Viscotti. \"I'll break you in half.\" His lawyer worked to calm him down as Corporal Kirkpatrick showed readiness with his billy stick and Teresa glared at him.\n\n\"Your client, Mr. Tessaforte,\" said Jenna Stiles, not even giving Viscotti the courtesy of acknowledgement, \"is going to be arraigned in two hours or so, and we are talking tens of years of imprisonment at a maximum security facility once it goes to trial. Judges here really love to give consecutive sentences. But you think we don't have a case? By all means, walk right in there and plead 'not guilty', and we'll find out. Cooperate with us, and maybe you get concurrent sentences, with parole possibilities, at Sunnydale Medium Security Prison.\"\n\nThe lawyer was a whiney, know-it-all asshole. He proved it by saying \"Girls, this man is not going to be doing any prison time at all. In fact, he'll be suing you and your Police Department for violating his rights and putting him through this unreasonable process.\"\n\n\"El. Oh. El.\" retorted Jenna. \"Bring it on, Tessie. I'm looking forward to watching you be disbarred if you try.\"\n\nThe back and forth went on for a while, with the lawyer sneeringly calling Teresa and Jenna \"girls\" and \"little girls\" over and over, and Viscotti just sitting back in his chair with his arms folded, his face alternating between sneers and laughter. At one point in time he made a circle with the fingers of his right hand and pistoned his left index finger in the circle, the universal sign of 'fuck you' to the women. Jenna had to restrain Teresa. I tapped on the glass and the women came out.\n\n\"The gender gap notwithstanding,\" I said, \"do you think you're going to get anywhere with these clowns?\"\n\n\"No.\" said Jenna. \"We've got 90 minutes to arraignment, and I'd like to break him down before then, though it's not a necessity. If you want to give it a crack, Commander, go for it.\"\n\n\"And 'crack' is the operative words... as in 'crack their fucking heads open'.\" I said. I whispered an instruction to Cindy, then said out loud \"Ms. Stiles, you're with me.\" I opened the door and went into the Interrogation Room, followed by ADA Stiles. \n\n\"Oh, well if it ain't the big boy himself.\" sneered the lawyer. \"Your cunts can't get the job done?\"\n\n\"Watch your language, asshole.\" I said. \"If you're trying to goad me into physically beating you down, that can be arranged. And yes, I'm saying that right into that camera up there.\" I'm not sure what induced the fear into the lawyer, whether it was my bravado or his realizing that I actually didn't care if there was a camera recording me whipping his ass... but I saw the change in his eyes.\n\nWhen you get back home, Tessaforte,\" I said to the lawyer as I sat down, \"be sure to tell Jimmy 'Coffin' Cerone that the Iron Crowbar says hello, and that I'm taking a professional interest in pussies named 'Tessaforte'... my profession's interest, of course. Or I'll tell him myself when I see him next. In the meantime, Mr. Viscotti, you and I have a lot to talk about... a lahhhhhht to talk about.\"\n\n\"What, you think you got more clout with 'Coffin' Cerone than my lawyer here?\" Viscotti said sardonically. Maybe he hadn't noticed his lawyer going pale and looking sickish after I'd brought up Cerone's name. And he definitely didn't realize he'd just given his lawyer away as being part of Cerone's mob clan.\n\n\"We'll find out.\" I said. \"I'm neither forgiving nor forgetting what he just called this ADA and my female officers, and we'll see how 'Coffin' feels about that. But let's just talk about you, Vincent. I want names of your suppliers. I want the where and the how and the when of your buys from them. I want you to make your lists and I'll check them twice.\"\n\n\"Are you out of your mind?\" snarled the lawyer. \"Vince, take the Fifth, tell this redheaded stepchild to shove his crowbar up his ass.\"\n\n\"I think this loser is trying to bait you, Commander.\" said Jenna, also a redhead.\n\n\"No doubt about it.\" I said, \"He knows he's irrevocably crossed the line, so if he's in for a penny he might as well be in for the full pound.\" My look at 'Tessie', boring right through him, might possibly have backed up my works. The lawyer continued to look like he was about to lose his breakfast.\n\nI then turned to Vince, ignoring the asshole lawyer. \"You work with me, Vince, and you'll have a merry Christmas at Sunnydale. You don't... well, Jimmy Cerone and the Southport boys don't have much use for you anymore, especially after I talk to him about you. And the hombres of MS-13 in prison are going to give you that circle-finger sign you gave my Lieutenant... right before they give you a few Christmas presents and get some fresh Italian cherry ass, many times over. You might live through it...\" I just shrugged after that.\n\n\"That's harassment!\" yelled the lawyer. \"You can't talk to my client that way! Vince, say nothing. This bastard has nothing, so he's resorting to intimidation and threats. You'll be out in no time.\" \n\n\"ADA Stiles,\" I said, getting up, \"just let the process run. We'll get the supplier names from one of the other guys we've arrested. They'll be glad to let Vince take the fall, and be bent over in jail, while they take the deals. And then 'Coffin' will take care of Vince at the Asylum.\" Jenna got up to leave with me.\n\n\"Wait...\" said Vince. His face showed his fear and uncertainly.\n\n\"SHUT UP!\" yelled the lawyer. \"Don't listen to them! They're lying, they'll say anything!\"\n\n\"He's right, Vince.\" I said as I got to the door. \"I'll say anything... to Jimmy Cerone. And he'll listen, too. Good luck to you.\" I reached for the door handle.\n\n\"Hold on!\" Vince gasped out. \"I'll... what's the deal again?\"\n\n\"NO!\" shouted the lawyer.\n\n\"Shut up, jerk!\" growled Vince. He turned to me. \"Let's work something out.\"\n\n* * * * * * * * * * * * * * * *\n\n\"You know,\" Jenna said as we talked in my office later that afternoon, with Cindy and Teresa also present, \"none of us could've done that interrogation like you did. But what if he'd called your bluff?\"\n\nVince Viscotti had given us a ton of information. The other seven that were arrested with him had also taken deals, and the arraignments had turned into easy plea deals.\n\n\"What bluff?\" I asked flatly.\n\n\"Cerone.\" said Jenna. \"Acting like you knew him, had clout with him.\"\n\n\"That was no bluff.\" I said simply. \"I dealt with Cerone months ago, during the SBI legislation meetings. If and when I do talk to Cerone about that asshole lawyer, Cerone is going to ask that lawyer why his, Cerone's, harmony is being disturbed because that lawyer is annoying the Iron Crowbar.\"\n\n\"Winning friends and influencing people, like Chief Griswold used to say.\" Cindy said. A red crowbar was waved in her general direction.\n\n\"Viscotti knew that I really could have enough influence on Cerone to make it very tough on Viscotti in prison.\" I continued. \"Ergo, he wisely took the deal. He won't be at Sunnydale, he'll be in protective custody somewhere else, but with a far easier life than it would've been if he'd taken the fall.",
        "\"By the way, we took care of that lawyer.\" Cindy said. Indeed, when the jerk had left the building, he found all four of his tires flat, without air. Uniformed officers had confronted him as he yelled and screamed in the front lobby. He was threatening to sue; they were threatening to arrest him. They also told him to get his car off the property or it would be impounded. He'd had to call a tow truck at personal expense, swearing and cursing that he was 'connected' and that I'd be hearing from his 'friends'.\n\n\"Yeah, right. He's 'connected'.\" I said. \"Well, enough about him. Teresa, you've got work to do. That information on the Beanstalk Gang won't stay good very long.\"\n\n\"Yes sir.\" Teresa said. \"But we're going to have to do surveillance, corroborate what we've been told. Stakeouts of the warehouses, all of that. If what Vince told is good, Thursday night should be fun.\"\n\n\"Good.\" I said. \"Keep at it. By the way, I noticed Detective Newton came in and was listening to some of Viscotti's confession. What was up with that?\"\n\nTeresa replied \"She was taking some notes on the financial arrangements as Vince gave them to us. She's tracing them now.\"\n\n\"Cool beans.\" I said. \"But run me a raw report of that information, i.e. the straight transcript of Vince's own words, as well as anything The Abacus finds. I want to follow up for... other reasons.\"\n\nPart 3 - Night Moods \n\nMonday evening, November 9th. Laura and I, and our children, were having dinner with Daniel and Melina Allgood, and their child, at their home overlooking the Town from the northeastern viewpoint. As the sisters talked inside, Daniel and I took our drinks outside and talked 'shop'.\n\n\"Tomorrow night.\" said Daniel. \"You'll need to be there, though they might not talk to you except to vouch for the candidate to replace Bennett in the Chief's chair. But it'll come to pass. Just like everything else you want to happen.\" I smiled at that one.\n\n\"Cool beans.\" I said. \"I do have a question for you, Daniel: who is the Intendent?\"\n\n\"Oh!\" said Daniel, caught unawares by my unexpected question. \"I guess you mean Mrs. Peabody.\"\n\n\"I guess so.\" I said. \"Who is she?\"\n\n\"Oh, you don't know?\" Daniel asked, peering at me in surprise. \"She's...well, let's just say she is the Town & County Government.\"\n\n\"How so?\" I asked, seeming laconically, but my senses concentrating on every word.\n\n\"Well, you probably haven't had to deal with her.\" Daniel said. \"She basically is the one-woman staff and secretary for the Town & County Council. She has a small administrative office in City Hall, and her position and title is 'Intendent'. I have to deal with her for paperwork issues that all of us elected officials have to do; she gets it all done for us.\"\n\n\"But she's not our servant.\" Daniel continued. \"I daresay it's the other way around. She's in charge of us. She is like Elsie Gringer, and your mom from what I'm told, in that she knows everything that has gone on and is going on in this County, at least as regards our elected officials.\"\n\n\"Sounds like someone I'd like to get to know.\" I said. \"What's she like?\"\n\n\"I think she's over 50 now, but she doesn't look like it; she looks much younger than her age. And she's a MILF hottie; you definitely will like her. She 'has the aura', as you and Melina say about certain people. By the way, why has this come up?\"\n\n\"Her Town & County badge was found on the lawn of Courthouse Square.\" I said. \"I think I'll have to ask her about it when I return it to her.\"\n\n\"Want me to let her know you're coming to visit?\" Daniel asked. \"She won't like being intruded upon without an appointment. I found that out the hard way.\"\n\n\"No,\" I said, \"don't tell her I'm coming to see her. In fact... don't mention this conversation with anyone. Maybe I'm paranoid, but I don't want anyone to know what I'm doing or who I'm talking with in advance of it happening.\"\n\n\"As you wish.\" said Daniel. \"Don... I know you're going through a lot, and working on a very tough problem. But don't let it eat you up. You've got a huge support group in your family and some really outstanding Police subordinates.\"\n\n\"I hear you.\" I said, sipping my drink. \"I probably sound like a paranoid crazy-man. But it's better to err on the side of discretion...\"\n\n* * * * * * * * * * * * * * * *\n\nIt was nearly midnight. Laura and I had returned home, and she put the kids to bed as I took Bowser outside to do his business. Once he was back inside and settled under Carole's crib, I began working on the Jack Burke tapes and Laura took care of 'Company' business on her secure laptop. Some long minutes later, she got up, went into the kitchen, and came back out.\n\n\"Looking at porn again?\" she teased me as she brought me a glass of iced tea. \"I thought that was my job.\" I smiled.\n\n\"Noooo, this is definitely in my professional arena.\" I said. \"I think... that I've finally got an idea of what to look for in these tapes. I think one of the women on it might hold a clue to our Consultant's interest in these tapes.\"\n\n\"I'll let you get back to it, then.\" Laura said. But she did not move away.\n\n\"What are you working on?\" I asked, sensing she wanted me to ask.\n\n\"Well,\" she said, sitting down next to me, \"I'm still working on the fallout from Sharples exposing Janet Riordan and Callie Carrington. The FBI should be taking the lead on investigating this, as it's a domestic counter-intelligence issue. But they're dragging their feet on it. Jack's boss thinks someone is holding the investigation back, and doing so to protect Superior Bloodlines and other supremacist groups. He may well be right.\"\n\n\"Are he and Jack involved in the Sharples investigation?\" I asked. \"I know they haven't said a word to me about it.\"\n\n\"No.\" said Laura. \"Since that idiot FBI lawyer Bond interrogated you and pretty much shredded the Constitution in doing so, the counter-intel group working on the case circled the wagons and clammed up.\"\n\n\"They still think I was behind that, don't they?\" I asked, with no small amount of acerbity in my voice.\n\n\"Let's just say...\" Laura said, knowing it'd be foolish and hardly possible to keep the truth from me, \"that they are divided in their opinions. Most don't, but there are a few, led by Dr. Casey B. Walker, who want to interrogate you... and I'm not talking about a recorded discussion with lawyers.\"\n\n\"Are you serious?\" I asked, shocked. Laura did not answer, and the silence was as telling as it was deafening. \"Well, chalk up another reason I'm glad I told them to pound sand instead of working for them. So when are you retiring?\" I wasn't kidding: I wanted my wife out of that organization, and she knew it.\n\n\"My presence is needed...\" said Laura, \"... to keep assholes like Walker from doing what they want to do. And not just to you. These guys are getting... carried away about things.\"\n\n\"How do you stop them?\" I asked.\n\n\"By borrowing your crowbar and beating them to death.\" said Laura. Something beyond instinct suggested to my mind that my wife was not joking about that.\n\n* * * * * * * * * * * * * * * *\n\nAfter Laura went back to her work, I began looking at the Burke tapes again. About fifteen minutes later I found what I wanted.\n\nA very lovely older woman was lying on Jack's bed, and he was on top of her, pumping his huge cock steadily in and out of her. The woman had a great pair of legs and a nice body, I noted. The view was from the tops of their heads, looking down their bodies toward their coupled loins. That bastard Jack Burke got a lot of pussy, and from a lot of great looking women, I noted with some acidity... and with admitted jealousy.\n\nAs the tape rolled, the lovers finished copulating as Burke came inside the woman. The sound was garbled and barely audible, but I could tell he was saying he was going to take a shower.\n\nAnd then... it happened! The woman sprang off the bed and to her purse, which was near her clothes on the floor. She pulled out a small, wrapped package and bent down to the A.C. vent, which was just off the floor. Pulling it out, she thrust the package as far into the vent as she could. Then she replaced the vent cover and began getting dressed. A moment later she disappeared from the camera's view.\n\nThat has to be it! I thought to myself. Whatever is in that package is the clue! I need to find that package...\n\nAnd above all else, I realized as I watched that segment again, I knew that the woman in this tape... was The Intendent, Mrs. Peabody.\n\nPart 4 - Coffee and Police \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette from in front of City Hall at precisely 7:00am on Tuesday, November 10th. \"Channel Two News has learned that the body found in the River in Southport last night is that of Ambrusco Tessaforte, a lawyer with the Andolini & Tommasino Law Firm in Southport!\"\n\nBettina went on, her lusciously lipsticked lips looking like they wanted to perform fellatio on the big microphone she was holding: \"The local connection is that Tessaforte was the lawyer representing Vincent Viscotti, who made a plea deal with the District Attorney's Office over charges stemming from the Town & County Police Department's Vice Squad's bust of his taxicab service as a front for the distribution of illegal drugs.\"\n\n\"Oh, shit.\" I muttered as all of MCD and some of Vice watched in silence.\n\n\"In other news,\" said Bettina, \"the Town & County Council will meet tonight, and in all likelihood will go into executive session. Channel Two News has confirmed from multiple sources that at least one interview for the position of Police Chief will take place, and we also know that Commander Donald Troy has been requested to be at this meeting. This in spite of Commander Troy's constant denials of willingness to take the Chief's job himself.\"\n\nBettina continued: \"Channel Two News reached out to Police Chief Harold Bennett, who said he is unaware of the Council's actions regarding the post of Police Chief, and that he, Chief Bennett, will be at the post until the end of the year... unless the Council informs him otherwise. We now go to Sports with Chick Pringle. Chuck!\"\n\n\"That really sucks.\" said Chris 'Pervert' Purvis of Vice. \"Now the whole world knows that Viscotti pled out, and we may not get to use the information he gave us.\"\n\n\"That's true.\" Cindy Ross said. \n\n\"You think they'd try to kill Viscotti instead of his lawyer.\" said Martin Nash of MCD. \"Commander, anything to that?\"\n\n\"I don't know.\" I said. \"That's Southport's business. I've got enough problems up here in this fine County. Crimes to solve, Detectives to teach how to make coffee...\" That got a laugh.\n\n\"And politics!\" Cindy said loudly, and with what I knew to be sarcasm. \"You've got an engraved invitation to meet the People's Representatives tonight!\" More laughter.\n\n\"Don't remind me.\" I said sourly. \"I'd rather keep drinking this coffee... ugh! Hell, people, we made better tasting coffee on Army Reserve exercises! Who is making this stuff?\"\n\n\"A crime we hope the Iron Crowbar will be unable to solve.\" said Tanya Perlman, a mischievous grin on her cherubic face.\n\n\"So, Commander,\" said Joanne Cummings, \"did Deputy Chief Brownlee get an invitation to meet the Council?\"\n\n\"You are making trouble, Detective Cummings.\" I said. \"I get the idea that you are the perpetrator behind this coffee, and you are trying to distract me.\"\n\n\"No sir!\" Joanne said, but smiling as she did so. \"I'm currently in the Army Reserve, and I can make better coffee than this!\"\n\n\"By the way,\" Cindy said, \"who else in here either is or was in the military, Reserve included?\" The hands raised were mine, Joanne's, Martin Nash's, and Diana Torres's.\n\n\"Grubby Paul in Vice was, also.\" I said. \"Cindy's dad was in the Canadian Air Force, and Teresa's dad was a hero in the Viet Nam War. I won't even try to name all those in SWAT and the Uniformed Officer ranks.\"\n\n\"Dr. Eckhart was in the Canadian Air Force?\" asked Teresa.\n\n\"No, my 'dad' dad. Molly's dad.\" said Cindy. \"How did you know that, Don? Molly tell you?\" I just nodded.\n\n\"Oh, and speaking of your question, Joanne...\" I said, then turned to the door leading to the back hallway. \"Brownlee! Stop peeking in from behind the door! Either come in or get out!\" There was a silence in the room as Brownlee stepped into the doorway. I noted that his face was red... was that just embarrassment? And his eyes looked weird. Weirder than normal.\n\n\"Don't you guys have work to do?\" he asked sourly.\n\n\"Yes, and they're where they are supposed to be.\" I said loudly, pulling out the cup that held the coffee filter and grounds. \"I'm about to give these Detectives a lesson on how to make coffee properly. Care to join the lesson?\" Brownlee just shook his head and left. I taught my Detectives how to properly make coffee.\n\n* * * * * * * * * * * * * * * *\n\nAt the Angels Meeting at 8:15am in my office, Cindy said \"That was absolutely right that Bettina's report on Viscotti might kill our chances of nailing the Beanstalk Gang.\"\n\nTeresa replied. \"Maybe, but we've got surveillance of two warehouses. Both had some activity, though not much. My people are sifting through photographs taken at the locations, seeing if the people in the photos match the regular employees of the places.\"\n\n\"How are you getting photos of the employees?\" I asked.\n\n\"Like we always do.\" Teresa replied. \"Lainie hits tax records for name lists, then DMV for the photos. Neither the company nor the employees are ever contacted until we need to.\" I just nodded, having known that but still impressed (and somewhat disturbed) at how easy it was for the Government to get data on Citizens.\n\nTeresa continued: \"I've put Charles and Hewitt of SWAT on alert for Thursday night. If the perps bug out and are not there, so be it. If they're there like we think they'll be, then we are going to be making a huge harvest of 'Beans', and chopping down the Beanstalk for good.\"\n\n\"Okay, great.\" I said. \"Just get Captain Ross's or my 'go' when you're ready to do it. Also, keep any information on it on the down-low. Need to know basis. It's bad enough that the Press is getting all this stuff about us so easily. I definitely know how Chief Griswold always felt.\"\n\nHave I mentioned that I am not a fan of the Press?\n\n\"I hope the Council asks our new Chief-to-be about his attitude towards the Press.\" Tanya Perlman said. \"That should be the first prerequisite for the job.\"\n\n\"It is.\" I said. \"The Council pretends not to realize it, but it is.\"\n\n\u2028\"So, Commander,\" said Teresa, \"is the next Chief going to be Robert Brownlee?\"\n\n\"Like Detective Cummings, you are being a trouble maker, Lieutenant Croyle.\" I said with a grin. \"But the answer is 'no'. The Council was bluffing about that, trying to get me to take the job. But the Sheriff is in Town, and he headed them off at the pass. This interview is a mere formality. The hire is a done deal.\"\n\n\"Commander,\" said Cindy, \"what happened to that lawyer Tessaforte?\"\n\n\"He was fished out of the River just where it flows into Southport's jurisdiction.\" I replied. \"I have no information on it, not even a cause of death yet. I asked them for a report as a courtesy, seeing as he was here earlier in the day, but they haven't gotten back to me yet.\"\n\n\"Will they?\" asked Teresa.\n\n\"Oh, I think so.\" I said. \"It'll be as bare-bones a report as they can make it, but they'll put out something in general for the public record. Okay, ladies, I need to talk with your Captain for a few moments.\" Teresa and Tanya correctly deduced what I wanted to see happen, and they excused themselves and left the office.\n\n* * * * * * * * * * * * * * * *\n\nOnce back in her office, Lt. Tanya Perlman was surprised by who came to her office: Detective Joanne Cummings.\n\n\"Ma'am,\" Cummings said, \"is it okay if I go home a little early today? Seth and I have one of those pre-marriage classes with Pastor Westboro this afternoon.\"\n\n\"Is that a group thing, or just the two of you?\" Tanya asked, seemingly nonchalantly.\n\n\"It's a group.\" said Joanne. \"Most of us are getting married next Spring; we've already jockeyed for who gets what weekend. Now it's a series of classes on the religious and spiritual nature of marriage.\"\n\n\"Taught by an unmarried man?\" Tanya said. Joanne didn't take to that too well.\n\n\"That's not fair, ma'am.\" the lovely blonde said. \"He was married a long time ago. I'm not sure what happened, if his wife left him or if she died, but he never remarried. He says the vows of matrimony are as sacred as the Ten Commandments.\"\n\n\"This is the wrong Town to have those views, from what I've witnessed.\" Tanya said, more to herself than to Joanne. She caught herself and said \"Sure, Joanne, leave when you need to.\"\n\nPart 5 - Access Never Denied \n\nI turned the TV up so that it was fairly loud in the office, but not enough to distract nor disturb the people in the anteroom or the hallway. I also got out and turned on my anti-bugging device, so that my upcoming conversation with Cindy would not be overheard by I.A. nor anyone else. Last but not least, Cindy and I positioned our chairs in the middle of the room and close to each other's so that we could talk quietly.\n\n\"Whassup?\" Cindy asked quietly.\n\n\"I think I found something on the Jack Burke tapes.\" I said. \"Someone hid something inside his apartment. I need to find a way to go in and extract that hidden package. And I really need to do it today, at least before the Council meeting tonight.\"\n\n\"Why not just ask the apartment manager to let you in?\" Cindy said.\n\nI replied \"These apartments are a bit low end. The renters are mostly younger types, some are University students, and a good number of them use recreational drugs. This apartment is currently occupied by a young couple that easily fits the description.\"\n\nI continued: \"The apartment manager is known to me. He is hostile to Police; if I asked, he would demand a well-defined and strictly narrow warrant, he would have a lawyer examine it, and he would want to be present during the search. Last but not least, any publicity at all, even getting a warrant under some other pretext, creates a public record that our Consultant is constantly watching for, and so it would tip him off.\"\n\nCindy nodded as I talked. \"So you're thinking you have to go to the Dark Side to get this material, however good a cause it is.\" she said. I nodded.\n\nAfter a moment of thought, she said \"I could probably get Jenna to get a secret warrant, saying the newly developed drug information requires fast action. We can take a dog, go in and sniff around. If they have drugs, great: we make a bust. If not, we say the data must've been erroneous. It's not like that never legitimately happens.\"\n\n\"True.\" I said. \"And I like that idea, but there's another problem: let's say we got a secret warrant on some pretext of drugs and went in. I still have to have time to get that stuff, secrete it and get it out of there, and do this without other officers seeing me do it. And as you know, we take videocameras to crime scenes now.\"\n\n\"I think we can get around that one.\" Cindy said. \"Which room is it that you need to be alone in?\"\n\n\"The bedroom.\" I said.\n\n* * * * * * * * * * * * * * * *\n\nCaptain Cindy Ross went into Lt. Teresa Croyle's office. \"Teresa,\" she said, \"we've developed a lead on a possible drug shipment at an apartment complex south of Downtown.\"\n\n\"Okay, I'll get some people on it, get a warrant for it--\" Teresa started saying, but Cindy held up her hand.\n\n\"This one needs to be in secrecy.\" Cindy said. \"And since you're working the Viscotti information and preparing to take down the Beanstalk Gang, the Commander has 'suggested' to me that this be a cross-training event. So I'm going to take a few Uniformed officers and handle it myself.\"\n\n\"Uh... okay.\" said Teresa, realizing that there must be more to this...",
        "The scene was repeated in Lt. Tanya Perlman's office, except that when Cindy suggested that Cummings and Parker monitor the radios, Tanya had to tell her that Cummings had been excused for a church appointment. \n\nUpon hearing that, Cindy went to update her boss. She wondered why the Iron Crowbar's eyes gleamed a bit upon hearing the news that Joanne and Seth would have their times occupied in Pastor Westboro's class...\n\n* * * * * * * * * * * * * * * *\n\nJudge Patrick R. Folsom received A.D.A. Jenna Stiles in his chambers. He was surprised to see who was with her: the Commander of the Town & County Police Force. He was even more surprised as I began walking around his chambers with a small metallic device in my hand.\n\n\"My apologies, Your Honor.\" I said. \"I'm just making sure your chambers are not bugged. As ADA Stiles will explain, this is highly sensitive information.\"\n\n\"Did you find anything?\" asked the judge as he watched me work.\n\n\"No sir.\" I said after completing my sweep. I'd used my personal device, but it had found nothing. That did not preclude certain 'passive' bugs from being there, but I had to go with it as best I could.\n\nJenna Stiles said \"Your Honor, we've gotten information from a confidential informant that drugs are in the apartment listed in this warrant application. We have reason to believe that these drugs could be moved very soon, and we are also worried about leaks. Therefore, I'm asking for this warrant to be kept under secret seal until it's executed.\"\n\nAfter some back and forth with the judge, he stated that the warrant should be issued, and that his own assistant would type it up and issue it, therefore it wouldn't go through the normal Courthouse bureaucracy...\n\n* * * * * * * * * * * * * * * *\n\nAt 5:30pm four TCPD Police cars pulled into the apartment complex where Jack Burke had once lived. It was south of Courthouse Square, and if it had been run down when the Burke apartment was searched years before, it was even more run down now.\n\nOne of those TCPD cars was my SUV, with me and Cindy inside it. The first of two Police cruisers held Sergeant Rudistan, Sr. Patrolman Morton, Sergeant Hugh Hewitt of SWAT, and young Patrolman Johnson. The second cruiser contained J.R. Barnes, Christina Cho, the TCPD Photographer with a video recorder, and an Officer that would assist in evidence collection and two-man control.\n\nLast was the the K-9 vehicle, a covered truck converted to safely transport Sergeant Stonewall, our best drug dog, as well as his armor and handling equipment, and also some stuff for the SWAT teams... yes, that's how we sneak some stuff in without the Press realizing what they are seeing.\n\nWhen we stopped, we ran full speed to the stairs and up them to the proper address. Gathering by the sides of the door, Sergeant Rudistan knocked and announced the Police presence. No one answered the door, but Rudistan whispered that he could hear movement inside. I gave the signal to force the door.\n\nThe well-armored SWAT and Uniformed officers used (of all things) a crowbar to jimmy open the door, then rushed inside yelling \"POLICE! FREEZE!\" I heard a woman screech, then a man start cursing as they were subdued and forced to lie prone on the floor. The apartment was cleared and the rest of us went in.\n\n\"We're executing a warrant to search this apartment for controlled substances.\" Cpt. Ross said to the young couple lying on the floor. \"Stay where you are, cooperate, and nobody gets hurt. Okay, bring in the dog.\"\n\nI'd 'wandered' into the bedroom, and spotted the object of my interest, the A.C. vent, in the side wall. Cindy directed that the bedroom be searched first. Sergeant Stonewall sniffed around, including at the vent where I pointed, but found nothing to interest him. Then he was taken into the main room and the kitchen.\n\n\"He's alerting!\" yelled his handler as Stonewall got excited in the kitchen. He was sniffing around the refrigerator. He was helped onto the counter, where he again got excited sniffing at one of the cabinets. The videographer was recording as the door was opened and Stonewall stuck his snout into the cabinet. He then barked and tried sit down, showing that he'd found something His handler got him off the counter and the area was searched. A couple of bags of marijuana were found, and then some pills were found that Stonewall took interest in when they were presented to his 'sniff test'.\n\nWhile all that was going on, I was alone in the bedroom, and Cindy was guarding the door. I sprang to the vent, practically ripped it out of the wall, and looked inside with my penlight. Seeing something, I reached my hand in almost as far as it could reach and grabbed the plastic-sealed package. Pulling it out, I immediately secreted it in the large inside pocket of my trenchcoat, which I had worn for this purpose. I replaced the vent cover hastily, not really worrying about a tight fit.\n\nSergeant Stonewall also found small quantities of drugs in the sofa of the main room, and hiding in a potted plant's container. \"This could be crystal meth.\" said one of the Crime Lab people, examining it. The crystalline structure was a translucent white in color.\n\n\"All right, Sergeant,\" said Cindy, \"put these guys under arrest and take them to Precinct 1 Headquarters for booking.\" We were inside Precinct 1's jurisdiction, and I did not want these perps to be taken to Police Headquarters, even though it was physically closer than Precinct 1's Headquarters.\n\n\"I'll leave you guys to process this scene.\" I said. \"Good work, Captain. Good work, everyone.\"\n\n\"Just put a few extra bucks in our next paychecks, Commander!\" Sergeant Rudistan said jovially. I laughed and said I wished I could do that, then Cindy and I left together.\n\n\"Find what you were looking for?\" Cindy asked.\n\n\"Sure did.\" I said. \"I'm glad we found some secreted drugs, though. That legitimized this mission, even if it's only 'possession' amounts.\"\n\n\"Yeah, but if that stuff Stonewall found in the potted plant is what we think it is,\" Cindy said, \"then we might've gotten a bonus in this bust. These guys will be worth talking to, for sure.\" I could tell that my partner was not only happy but relieved that this operation had actually borne legitimate fruit. With the Dark Side, Cindy Ross was still not comfortable. And for that, happy I was.\n\nPart 6 - The Intendent \n\nI dropped Cindy off at Police Headquarters and drove to The Cabin. Cpt. Moynahan was there, as he was staying in my guest bedroom. The place was spotless, I noted.\n\n\"Wow, you really cleaned this place up.\" I said. \"I appreciate it.\"\n\n\"Welll,\" said Moynahan in his gravelly voice, getting up off the sofa upon which he had been perched, \"you've been very generous to allow me to stay here, and it's the least I could do. Besiiiidesss... this Town would be a great place to live and work, but it's not exactly... the most exciting tourist attraction, if you know what I mean.\"\n\nI just laughed. \"Okay then. I'm going to do some work in my office and then get ready for the Council meeting, if you want to get ready now.\"\n\n\"I'll do just that.\" said Moynahan. As he went upstairs, I unlocked my office, went inside, locked the door again, then opened up the trap door to the wine cellar dug into the mountain. Descending, I went past the wine cellar room into the little cubbyhole behind it, which contained my electronic gear, servers, and stuff that I needed to remain secret. I quickly unwrapped and examined the package I'd taken from Jack Burke's apartment.\n\nI could tell that it was some really good stuff. Mostly DVDs and CD data discs, but also some papers, some handwritten notes... and two keys to two safe-deposit boxes at two of the Town's banks, along with information on which boxes and which banks I should go to.\n\nI didn't have time to look at the information, so I pulled what looked like a rock in the far wall out, secreted this package in the space behind, replaced the rock, re-secured the server room, then got out of the 'dungeon' and re-secured the trap door.\n\nIt was time to get ready and go to the Council meeting. I went upstairs to the Master Bedroom with my Duty Dress uniform in tow. Once finished and dressed, I went back downstairs, where Cpt. Moynahan awaited me.\n\n\"Ready to go, sir?\" I asked.\n\n\"Don't call me 'sir', Commander.\" Moynahan growled, but in a friendly way \"At least not yet.\" I grinned and we left, riding together in my Police SUV. \n\n* * * * * * * * * * * * * * * *\n\nAt 7:30pm, Tuesday November 10th, the Town & County Council convened in the Council Chamber, as the auditorium was called, and proceeded to go through the County's business. Citizens came forward with various requests, there were some notices of intent to file lawsuits against the County, and some public discussion and Council repart\u00e9e over zoning issues and a 'public housing' project near Ronald Reagan Park, which was being vehemently opposed by residents of the area.\n\nAs I watched the proceedings, I noticed several Sheriff Deputies in the room, as they always were. Their uniforms were pressed and they made sure to look their best, as their boss the Sheriff himself was there. With me was Cindy Ross in her Duty Dress uniform, Captain Moynahan in his Midtown Police attire, and, to my utter surprise, Lt. Molly Evans, totally pregnant and looking like she was about to burst. And to my even greater surprise, Lieutenant Teresa Croyle was there in her duty dress uniform, wearing a skirt and heels that showed off her magnificent legs.\n\nThe Mayor called for the executive session over personnel issues, and asked that those of us invited to attend come back also. Once inside the smaller room, where the Council actually did most of its work, we sat down in chairs along the walls, while the Council members sat at the table.\n\n\"Okay,\" said the Mayor, \"let's discuss the lead candidate for Police Chief, who is waiting outside. These other officers are here to answer our questions about this candidate. His name is Captain Sean Moynahan, currently of the Midtown Police Force. We interviewed him, though mostly as a courtesy on both sides, when we were last considering a Police Chief. He was an Army officer, in the 1st Cavalry Division, before joining a Police Department in New York State, then moving to Midtown.\"\n\n\"We have here,\" said the Mayor, \"Lieutenant Molly Evans of the Nextdoor County Police, who worked for several years as part of Captain Moynahan's team in Homicide in Midtown, and Lt. Teresa Croyle of our own Police Force's Vice Squad, who was in Midtown P.D. Internal Affairs for some months. And of course you all know Commander Troy and Captain Ross.\"\n\nMolly went first, describing that Cpt. Moynahan was one of the best officers she'd ever worked with and learned from, detailing his stellar record of successful arrests as well as his leadership qualities while leading their team. Although no one expected her to say anything negative, several Council members grilled her about his cases. Her 'testimony' was unimpeachable.\n\n\"So, Lieutenant Croyle,\" said Councilwoman Malinda Adams with near-maliciousness, \"you were consigned to Internal Affairs in Midtown for some months. Did their Internal Affairs ever have any issues with Captain Moynahan.\"\n\n\"No ma'am.\" said Teresa.\n\n\"I must object to this.\" said Councilwoman Kelly Carnes. \"If Lt. Croyle was a part of Midtown I.A., she would in all likelihood be restricted from discussing any issues their I.A. had with Moynahan. Is that not so, Ms. Croyle?\"\n\n\"If there were issues,\" Teresa replied flatly, \"I would not be able to publicly discuss them. But since there were no issues at all, I am able to tell you that... and I just did.\" I saw Carnes's eyes flare a bit. Teresa's voice was not one insinuating respect for the Councilwoman.\n\nDagmar Schoen, who was Kelly Carnes's nemesis on the Council, spoke up. \"Lieutenant Croyle's input is very valuable, and her unique position of being part of Midtown Internal Affairs allows us to have a good extra perspective on Captain Moynahan. I believe Lt. Croyle's positive comments on this matter should weigh heavily in our decision.\"\n\n\"The word of a police officer who exercised police brutality against a State Senator's son?\" thundered Thomas P. Cook. \"If anything, her word is nothing here. Why she is even allowed to stain our Police Force's good name with her presence is beyond my comprehension.\"\n\n\"Say anything like that again, Mr. Cook,\" I replied, standing up, not letting the anger in my voice be subdued, \"and I will not only give you something to 'comprehend', I will show you the true meaning of 'police brutality'.\" I might have been tapping my red crowbar in my other hand as I spoke. \"Lieutenant Croyle is one of the best police officers I have the privilege of working with, and her integrity is of a level you have no right to even speak of, Mr. Cook.\"\n\n\"What are insinuating, Commander?\" growled Cook, also standing up. \"If you're going to accuse me of something, you better be able to back it up. I'll also remind you that you work for us, not the other way around, and that goes for your abusive Officer here, as well.\"\n\n\"Gentlemen, please sit down.\" said Pastor Raymond Westboro, taking charge of the meeting as he often did, as the Mayor was by no means the strongest personality in the room. \"We are drifting far, far away from the point of this executive session.\"\n\n\"I wish to go on record,\" said Malinda Adams, \"that Lieutenant Croyle has shown herself to be a good Peace Officer in these last few months. She has defeated the Viscotti Cabs drug operation, and while some here may correctly debate the wisdom of Commander Troy's decisions, his bringing Lt. Croyle back to our Police Force can be counted as one of his better ones.\"\n\n\"Thank you, Ms. Adams,\" said Mayor Vaughan, smiling in agreement with her, \"but let's do get back to the matter at hand. Commander Troy, you have worked with Captain Moynahan several times in your capacity with the SBI Reserve?\"\n\n\"Yes, Mr. Mayor.\" I said, still standing. I was still pissed at Cook's insinuations of Lt. Croyle, and I knew I had to get my head back in the game.\n\n\"And since we know you were behind Sheriff Allgood's nomination of Cpt. Moynahan to the Police Chief job, you must think highly of him.\" said the Mayor.\n\n\"Both personally and professionally.\" I said. \"And let me just say this: if you want to see the measure of what type of Police Chief he will be, just look at the teams he trained and worked with in Midtown. Lt. Evans was offered the Nextdoor County Vice leadership job in no small part because of the excellent work she did in Midtown, under Cpt. Moynahan... but I'll let her make her own statements to that--\"\n\n\"Then why didn't you hire her for your Vice Squad instead of this other officer with her record of abuse.\" snarled Thomas P. Cook.\n\n\"Don't fall for it, Commander.\" Cindy said, loud enough for everyone to hear.\n\n\"No worries, Captain.\" I said. I turned to Cook and said clearly \"Solely because of the nepotism laws, Mr. Cook. Lt. Evans cannot work as her sister's subordinate.\"\n\n\"That doesn't stop your cousin Captain Ross from working for you, though, does it Commander?\" Cook growled. \"Selective application of the law, there?\"\n\n\"Are we going to have to rehash all this again?\" John Colby interjected, his baritone voice bursting through the room. \"You know the law, Cook. Stop acting like the ass you are and quit the antics.\"\n\n\"Watch yourself, Colby.\" Cook said menacingly. \"You're not exactly a saint in this Town--\"\n\n\"If that ain't the pot calling the kettle black...\" said Colby, ready and eager to get into it.\n\n\"That's enough!\" interrupted Pastor Westboro. \"Mr. Colby, Mr. Cook, the pots and the kettles can wait. You were saying, Commander Troy?\"\n\n\"Thank you, Pastor.\" I said. \"I was saying that in addition to Lt. Evans, Wes Masters, who is now my Lieutenant of all our Uniformed Officers, was part of Captain Moynahan's team, and the high level of professionalism our officers are showing can be partially attributed to the training Cpt. Moynahan gave Lt. Masters, which Lt. Masters is now imparting to my Officers.\"\n\n\"What about Detective Soltis, Commander?\" asked Pastor Raymond Westboro. \"He also was part of Cpt. Moynahan's unit, but was recently suspended after his police badge was found on the body of a dead woman?\"\n\n\"He was cleared of any issues with that, Pastor.\" I said. I'd stepped in front of Molly, to keep her from saying anything, much less defending Soltis with more physical action.\n\n\"Yes, he was.\" said Westboro. \"And was he not subsequently hired by the State Bureau of Investigation's Office of Ethics and Review?\"\n\n\"Yes, Pastor, he was.\" I said, wondering where this line if inquiry was going.\n\n\"Upon your recommendation, Commander?\" asked Westboro.\n\n\"No, Pastor.\" I said, a bit surprised. \"Although I would've heartily recommended Detective Soltis, the SBI's Inspector General was way ahead of me on that one. But let that hire speak to Detective Soltis's integrity, and therefore the integrity of the man who trained him, Captain Moynahan.\"\n\n\"Captain Ross,\" said the Mayor as I sat down, \"you worked with Captain Moynahan also?\"\n\n\"Yes sir.\" said Cindy.\n\n\"Anything to add to what we've already heard?\" asked the Mayor.\n\n\"Only that I agree with every good sentiment spoken of him.\" Cindy said. \"And I most definitely agree with Commander Troy and Councilwoman Adams's opinions of Lieutenant Teresa Croyle. I will fight like hell to keep her working with me.\" Her eyes bored into Thomas P. Cook's as she said that.\n\n\"Thank you, everyone, for your input.\" said the Mayor, interjecting himself before the red-faced Thomas P. Cook could say anything. \"Now if you'll excuse us, we'll bring in Cpt. Moynahan now.\" We all got up to go. As we left, an older woman escorted Captain Moynahan into the room. I took notice of her as she passed out papers to all the Council members.\n\nShe looked like she was in her forties, but I could tell she was actually older, maybe in her fifties already. She was wearing a silvery blouse and a black skirt, sheer black stockings and high heel black pumps. Her legs and feet were absolutely gorgeous, shapely and elegant. Truly as fine as my wife's legs, I thought to myself. Her breasts were large and her body tapered to a slim waist before flaring to wider hips, and a mouthwatering ass under that tight black skirt. Her hair was dyed frost-gray, and was likely brown or black (or turning naturally gray) if allowed to be seen in its original light.\n\nAs the door closed on my view of this MILF Goddess, I heard Teresa saying \"Thank you guys for standing up for me like that.\" Cindy and Teresa hugged each other.\n\n\"You know we've got your back, sister.\" Cindy said. \"Don, I've got crowbar dibs on that jerk Cook.\"\n\n\"I dunno, I feel like pulling rank on you for that one.\" I said. \"We'll talk of that tomorrow. Why don't you ladies go home, and I'll see you in the morning.\" I escorted them to the door that led to the hallway to get out of City Hall. Just then I saw the lovely woman come out of the Council meeting room and go down the hall the other way. I decided to follow her.\n\nI went around a couple of corners and down a couple of hallways before seeing her turn into a small office and closing the wood door behind her. There was no name on the door, just the room number and title of the office holder on a plastic plaque beside the door. I did not bother to knock, but just opened the door.\n\nShe was listening on an intercom to the Council as they interviewed Cpt. Moynahan. When I opened the door, her head flung upwards, and she showed shock that anyone dared intrude upon her private reserve.\n\n\"Yes? What do you want?\" she said harshly. In spite of that, I could definitely feel that presence, that 'aura' around her, the energy coming from her. I tried to project my own energy as I willed myself forward.",
        "\"My name is Commander Donald Troy.\" I said as I came on in without invitation. \"And I believe you are Mrs. Peabody... The Intendent.\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "big cock",
        "milf"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/fire-in-the-embers-ch-01"
}