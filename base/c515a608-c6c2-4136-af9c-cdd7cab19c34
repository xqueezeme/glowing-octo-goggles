{
    "title": "Ready Player Two Ch. 03",
    "pages": [
        "Diana smiled humorlessly to herself as she drove away. J.D. had finally remembered everything and was now probably looking for her phone, which was in Diana's consol. The image of her naked on the doorstep made her want to laugh and berate herself at the same time. She took her own phone, put it in the holder on her dash, and asked Google to call a familiar number. The phone rang once and a deep, male voice answered.\n\n\"Hi, sweetheart! How's my favorite girl? Did you miss me?\" Then after a pause, \"Are you driving?\"\n\n\"I always miss you,\" Diana answered. It was an exchange they made every time they spoke. \"Yes, I'm driving, but I have you on speaker.\" Diana rushed forward. \"Do you remember me telling you about that girl who did me wrong back in college?\"\n\n\"How could I forget, sweetheart?\" The voice answered. \"You were pretty upset.\"\n\n\"Yeah well, I ran into her again today,\" Diana sighed.\n\n\"Should I be calling an ambulance, or a lawyer, or both?\" The voice asked, only half teasing.\n\nDiana laughed, \"No, she'll be fine... Eventually.\" Diana continued, \"But that's not why I'm calling. Come to find out she's one of yours. Her name is FDO J.D. Lewis.\"\n\nAfter a considerable pause on the other end, the voice asked in a more serious tone, \"And where is the Lieutenant now, dear?\"\n\n\"Ummm, she's indisposed, a little tied up, to my bed, well, was...\" she murmured and then realized how he had addressed J.D. \"Wait, you know her?\"\n\n\"Turn the car around right now Diana!\" The voice commanded. \"Lieutenant Jane Lewis is the best FDO I've ever had the pleasure of teaching, not to mention the leader of the best field artillery team in the entire U.S. Army.\"\n\n\"Wow. I only circled the block, I'm coasting into the driveway now,\" she answered, chastised. \"I wasn't planning on leaving her there. I just needed to teach her a lesson.\"\n\n\"Jesus, Diana,\" the voice came back, exasperated. \"The lieutenant has to be at the base early in the morning for briefing. The team is being deployed to Iraq.\"\n\nDiana's heart skipped a beat and she paused halfway out of the car. \"What? When?\"\n\n\"In five days,\" the voice said softly, recognizing the emotion in her voice. When Diana said nothing, the voice asked, \"Are you ok honey?\"\n\n\"No. I'm not done with her.\" Diana said, her voice hitching with unshed tears. Then she called him by a name she hadn't used in a very long time, as the tears overflowed her eyes. \"Oh Daddy, I think I'm falling in love.\"\n\nJ.D. sat on the bed for a moment trying and failing to come up with a plan that would get Diana back into her arms. Her mind replayed the night that she had first met Diana over and over again. Now that Diana had unblocked the memory, it wouldn't stop. She deserved Diana's anger and this twisted revenge, but she wanted, no needed, to explain things. She had no idea whose house she was in and she didn't have her phone.\n\n\"Maybe there's a house phone,\" she said to herself. The hoarseness of her voice reminded her that she also had a desperate need for water. She walked downstairs in search of the kitchen. She took a glass from the dishrack and filled it from the tap. She gulped down the first glassfull and refilled the glass. As she sipped, she went looking for a phone. She spotted one on a table next to an antique chaise lounge. The next thing she spotted almost made her drop the glass. It was a photograph, a studio family shot, in a fancy silver frame. There was Diana, at about the same age as when J.D. had first met her. On the other side of the image was a dour, unsmiling woman, who was obviously Diana's mother, same auburn hair and the same eyes. But the figure that had made her heart stutter was the stoic gentleman in the middle. Gray hair, piercing blue eyes, stiff as a board, Army dress blues and one single star on each of his shoulders.\n\n\"Oh shit, oh shit,\" she whispered, panicking as she found more and more pictures framed throughout the great room, the truth becoming more and more obvious. Diana's father was none other than Brigadier General Saul \"The Rhino\" Rogers.\n\nRetreat, retreat! Her voice screamed inside her head. She quickly washed the glass and returned it to the dishrack before jogging to the door, her brain a ramble of disconnected thoughts.\n\nShe gently closed the door behind her and took a deep, cleansing breath. Gotta find Diana. Explain, she thought to herself before taking in her surroundings, only to find her target standing 20 feet away.\n\nDiana stood, leaning against the Mustang parked at the far side of the wide driveway, holding her phone in front of her face. J.D. didn't hesitate and began walking toward her, rambling.\n\n\"Diana, please let me explain,\" she said breathlessly. Ignoring the shake of Diana's head and the warning in Diana's eyes, she continued while closing the distance, \"I was afraid of hurting you because I was your first and I was going...\" She was cut off by a very familiar, deep, male voice that emanated from Diana's phone.\n\n\"Lieutenant Lewis,\" the voice commanded.\n\nJ.D. stopped just feet from Diana and her face fell before she automatically responded.\n\n\"Sir, yes sir!\" She barked, looking at Diana with eyes full of fear.\n\n\"At ease Lieutenant,\" General Rogers spoke from the phone. A frustrated, yet resigned sigh followed.\n\n\"I'd like to personally apologize for my daughter Diana's foolish behavior,\" he stated matter of factly. \"I hope that you are in good health?\" Diana looked stricken.\n\n\"Yes sir,\" J.D. confirmed.\n\n\"Well that's a relief,\" he replied. \"So I can expect you on base, ready for duty, at 0600 sharp?\"\n\n\"Sir, yes sir!\" J.D. confirmed strongly.\n\n\"Diana?\" The general requested only a tad more softly.\n\n\"Yes sir?\" She asked meekly.\n\nA very heartfelt, sad sigh came over the phone's speaker. \"Don't make the same mistake I did.\"\n\nA tear slipped down Diana's cheek. \"I love you Dad,\" she said, voice hitching.\n\n\"I love you too sweetheart,\" he replied with feeling. \"I'll see you both in the morning.\"\n\nDiana lowered the phone and slapped J.D.'s hand away as it came to wipe the tear off of her face.\n\n\"Oh no you don't, Lieutenant Jane Lewis\" she growled. \"I still need answers.\"\n\nJ.D.'s face paled at the use of her first name. \"I was going away to Basic and then to OCS and then to God knows where,\" J.D. said hurriedly. \"Maybe to die. I'd rather you were angry than grief-stricken.\"\n\nDiana put her hand up for J.D. to stop. \"I know all that. Tay spilled her guts about five minutes after I pushed her into a corner and pretty much threatened her life, and I forgive you for being as stupid as she was with your silly little game,\" Diana explained. \"And my father just told me what happened to your parents, so I understand your state of mind and why you enlisted, even though you still should have given me a chance to make up my own mind.\" Diana paused as J.D. stood in front of her looking pitiful. \"What I don't understand is how you could forget me so easily. I certainly couldn't forget you,\" she finished in so soft a voice that J.D. could barely hear her.\n\nThis time when J.D. stepped closer, Diana didn't stop her. J.D. took her face and wiped the tears that were now streaming down her cheeks. She took Diana into her arms and started to explain.\n\n\"I met you about six months after my parents died,\" she began. \"I had accelerated through my bachelors degree and immediately applied to OCS. I was accepted and told to report to Basic at the end of the Summer.\" Diana started to protest. \"I get that you know all of this. Let me finish,\" J.D. admonished. \"I was raw, completely raw. I went to that bar every night for almost three months and got hammered and played Tay's 'silly little game'. All I wanted to do was to get my bars and get overseas where I could get revenge for my parents. Where I could fucking annihilate the terrorists who planned that attack, who took them away from me,\" she growled. She took a deep breath and continued, \"and then I met you. You were like a breath of fresh air. So sweet. So open and carefree. You scared me, because of how I felt, how happy I was sharing all of that with you. And when you told me I was your first, I simply couldn't do it. I couldn't risk putting you through the same grief that I was suffering.\" She paused, and looked into Diana's eyes, \"It was foolish of me to assume anything about you, but I was foolish. To a fault. I left the very next day, came here to Fort Benning, sold my car, and buried myself in my revenge.\" She took a deep, ragged breath. \"It took me a long time of single-minded focus to bury that memory, but if I didn't I would have surely gotten myself, and possibly my team, killed. I didn't want to leave you, Diana. But I felt like I had no other choice.\"\n\nJ.D. stepped back and held Diana at arms length. She looked the beautiful woman up and down and said, \"And as far as recognizing you,\" she said smiling, \"you have to admit you look quite a bit different now.\"\n\n\"I've lost a few pounds,\" Diana said shortly. \"That's no excuse.\"\n\n\"A few?\" J.D. laughed at the understatement. \"You could probably kick my ass in hand-to-hand and you stopped dying your hair.\"\n\n\"I already kicked your ass,\" Diana said smugly.\n\n\"That you did, and I must say you're the first person I've ever wanted to thank for it,\" J.D. sighed. \"But now we're back to square one.\"\n\n\"What do you mean?\" Diana asked, obviously confused.\n\nJ.D. looked at her with the saddest expression she had ever seen and said softly, \"I have to leave you tomorrow. Again.\"\n\nJ.D. could feel the tears threatening and she bit them back. In that moment Diana forgave J.D. for everything. Diana stepped forward and kissed her tenderly.\n\n\"No. We have five more days,\" she said, smiling softly. \"Or should I say nights. I'm sure your days are going to be full.\" Diana apparently read the sudden question in J.D.'s eyes and answered it. \"Your team is being deployed to Iraq.\"\n\nJ.D. inhaled sharply. \"How do you know this?\"\n\n\"My father told me,\" Diana said looking at J.D. with extra care.\n\nShe was confused. \"Should he have? You don't have clearance.\"\n\nDiana laughed with amusement. \"We really need to catch up on one another. I have one of the highest top-secret clearance ratings available.\" She looked at J.D. and cocked her head. \"I'm an FBI agent with the Foreign Terrorist Joint Task Force. I'm what you might call, a behavioral analyst.\"\n\n\"You're an actor with the FBI?\" J.D. was incredulous. \"Well, that explains a lot,\" she said, thinking of the events of the day.\n\nDiana embraced J.D. without confirming or denying and said, \"I'm not acting now.\" She placed her mouth on J.D.'s and kissed her with a passion that J.D. had never known before. A kiss that filled her heart with all the love that she had denied herself. She gave it back ten-fold.\n\nWhen Diana finally broke the kiss, she took J.D.'s face into her hands and said, \"I told my father that I think I'm falling in love.\" She looked deeply into emotion filled, cobalt eyes. \"He said I could do a lot worse, no, he said 'a hell of a lot worse', than the esteemed Lieutenant Jane Lewis.\" Diana lovingly gazed at J.D. and smiled. \"I must say that I agree with him.\"\n\nJ.D. smiled brightly, \"He said 'esteemed'?\"\n\nDiana rolled her eyes, \"I may have embellished.\"\n\nJ.D. shook her head. \"Not your style,\" she grinned. \"A general called me esteemed.\"\n\n\"Shut up,\" Diana said with slight irritation.\n\n\"Make up your mind woman,\" J.D. teased. \"Do you want to hear my 'sweet voice' or not?\"\n\nDiana rolled her eyes again, \"what I want is for us to take a shower, eat some sustenance, and get some sleep. In that order.\" She sniffed J.D.'s neck, causing her to shiver. \"You stink.\"\n\n\"Your fault,\" J.D. replied smartly, nuzzling Diana's neck. She took Diana's hips into her hands and pulled her close. \"Showering with you sounds like an amazing idea.\"\n\n\"I'm always up for saving water,\" Diana purred before slapping J.D.'s ass. \"Let's go.\"\n\nDiana grabbed J.D.'s hand and led her into the house and up to the master bathroom. J.D. stepped back and watched Diana begin to take off her clothes.\n\n\"What?\" Diana favored her with a smart ass grin. \"You don't want to help this time?\"\n\nJ.D. growled, \"No. I want to see all of you 'this time'.\"\n\nDiana stripped slowly, facing J.D. First the blouse and then she shimmied out of the too large skirt. She stood there in just the bra. J.D. had to catch her breath as Diana flicked the front clasp, freeing her breasts.\n\n\"So beautiful,\" J.D. said softly, taking all of Diana in. J.D. just stared at the amazingly feminine form in front of her. Long toned legs led to a completely shaved and smooth sex. Flat belly and then up to those amazing round, firm breasts. Pink nipples that just begged to be in her mouth. Long graceful neck that led up to the most amazingly gorgeous mouth. Deep, intelligent, brown eyes, that cute button nose, and long, flowing auburn hair.\n\n\"Take your clothes off lover,\" Diana purred as she turned around to start the water.\n\nJ.D. quickly stripped as she stared at Diana's tight ass and hips. She closed the distance and wrapped her hands around a slim waist as she dipped her head down to kiss the spot between Diana's shoulder blades. She pushed herself onto Diana's behind as she snuck her hand down and slipped a finger into Diana's sex. She felt that hot, slick, pocket of wetness that she now remembered so well.\n\n\"So wet,\" she breathed into a cute ear as Diana moaned and pushed back against her. J.D. slipped a finger up to Diana's button and groaned as her hand was slapped aside and Diana stepped away from her and into the shower. J.D. watched, mesmerized, as Diana stood under the spray, head back, long auburn hair growing dark as the water saturated it, the shower splashing off of her magnificent breasts and flowing between them down to her very center.\n\n\"Hey soldier,\" Diana said provocatively, distracting J.D. from the water's path and up to her face. She smiled, crooked a finger, and made a come hither gesture. J.D. stepped into the shower and started toward Diana only to be held back by a hand to her upper chest.\n\n\"Stay there,\" Diana commanded. J.D. obeyed reluctantly. Diana reached out and adjusted the many multi-directional shower heads positioned on every wall of the large shower stall so that they were all directed on J.D.'s naked body. The hot water beat down on almost every inch of her exhausted, used, and abused muscles and she groaned in appreciation. She stood there limp, allowing the jets to soothe her into a state of total relaxation. She felt Diana turn her around and begin to apply body wash to her shoulders, kneading and pushing her fingers expertly around and into the tight muscles. Diana moved her hands down J.D.'s back, massaging all the way down to the cleft of her ass.\n\n\"Oh, damn,\" J.D. moaned. \"That feels so good.\"\n\nDiana pushed her thumbs into the tight muscles of J.D.'s buttocks with small circular motions, moving down to her thighs. J.D. felt like she could happily die right there.\n\nDiana massaged J.D. firmly and as she got to the limp woman's thighs she stepped forward and laid her breasts on J.D.'s back, snuggled her pelvis around J.D.'s buttocks, and cupped her hands around J.D.'s breasts. She slowly massaged the small, firm breasts and zeroed in on the slippery, wet nipples, very gently rubbing them by letting them slide through her fingers. She slowly massaged J.D.'s small hips and then inward over her tight abs, working her hands down while kissing her shoulder blades and neck. She let her right hand move down between the lips of J.D.'s sex until she could feel the slick wetness pooled there. J.D. immediately straightened, growled, and grabbed Diana's wrist. She pulled at Diana's arm while turning toward her, eventually trapping Diana's wrist behind her own back as J.D. leaned in for a soul-searing kiss.\n\n\"I've got a few moves of my own,\" J.D. said as she moved her lips down Diana's neck. She pulled on Diana's wrist forcing her to lean back and her breasts to rise to J.D.'s mouth. J.D. licked and sucked at the water flowing down the magnificent globes. As she took a nipple and began to suck, Diana sneaked her free hand down between J.D.'s slippery thighs and moaning, began to make firm circles over her clit. J.D. gasped, released Diana's right hand and pulled her close. J.D. brought her own hand down and found the waiting entrance to Diana's center and pushed her middle finger inside. They found each other's mouths and kissed passionately as they pleasured each other, the water cascading over them. They shared gasps and groans until their heavy breathing forced them to end the kiss. Their hands picked up speed and keeping pace with each other, they cascaded over the edge of ecstasy as one. They stood there under the pounding water, holding each other up, as they both shook from the shared orgasm. J.D. carefully pushed the wet hair off of Diana's face and stared deeply into her eyes.\n\n\"I'm the luckiest person in the world and I've completely fallen for you, Diana Rogers\" J.D. stated with complete sincerity. \"I don't want to ever leave you again.\"\n\nDiana stared sadly back, \"I know sweet woman,\" she whispered back, drawing J.D. into her arms. \"And I know you have to. But not for five glorious days.\"\n\nThey left the shower and helped each other dry off. After dressing and heating up some leftover casserole that was in the fridge, they sat down to eat. Diana watched as J.D. ate slowly, obviously exhausted.\n\n\"If at all possible I'd like to cook dinner for you tomorrow,\" she broke the silence. \"Any special requests?\"\n\n\"Can you be anymore incredible?\" J.D. asked smiling. \"You want to make me a home cooked meal? Where?\"\n\n\"Here of course, silly\" Diana replied.\n\n\"Aren't your parents coming back tomorrow?\" J.D. asked with a strange look.\n\n\"Yes,\" Diana said. \"It will be nice to cook for my parents again.\"\n\nJ.D. put her fork down and stared at Diana. \"You want me to have dinner with your parents?\" J.D. asked, completely stunned.\n\n\"Yes, J.D.,\" Diana replied, leaning forward. \"I want you to have dinner with my parents and then I want you in my bed, in their house, with me. And then have breakfast with them the next morning.\"\n\nJ.D.'s jaw dropped. A General's daughter. And not just any General, but The Rhino Rogers. I just had to fall for the fucking General's daughter. J.D. thought to herself, trying to keep from choking.\n\n\"Ok,\" Diana tried not to laugh at J.D.'s expression, \"Maybe not breakfast.\"\n\nDiana sat there waiting for a response. J.D. searched frantically for any excuse but simply could not deny the beautiful woman in front of her.\n\n\"OK,\" J.D. agreed reluctantly.\n\nDiana led J.D. back upstairs and slowly helped undress her, stealing kisses from the exhausted woman as she did. J.D. started to help Diana but was told to lie down under the sheets instead. Diana went into the bathroom, brushed her hair, and got undressed. When she returned, J.D. was fast asleep, curled up on her side. Diana smiled as a tear escaped.\n\nShe looked up and prayed silently, Please bring her back to me. Always.\n\nShe turned out the light, climbed under the covers, and molded her body to the back of the woman she loved.\n\nDiana and J.D. woke at 0400 in the same position they had fallen asleep in.\n\nDiana kissed J.D.'s shoulder and then whispered in her ear. \"Time to get up beautiful.\"\n\n\"Don't wanna,\" J.D. whined and pushed her ass into Diana in an attempt to snuggle closer to her.\n\n\"Keep that up and I may force you to go AWOL,\" Diana growled, feeling her clit as it began to throb.\n\nJ.D. chuckled and pushed back some more.\n\nDiana tightened her hold on J.D.'s hips and started to grind her clit onto J.D.'s backside, while she took J.D.'s shoulder between her teeth and moaned.\n\n\"Oh no you don't,\" J.D. admonished as she forcefully disentangled herself from Diana's hold and rolled herself to face the beautiful woman. \"I want to see you.\" J.D. stared into Diana's fully awake, heat-filled eyes and brought her hand down between Diana's thighs. Diana started to protest, not wanting to relinquish control, but she simply fell into those cobalt eyes and let J.D. love her.",
        "J.D. saw the quick battle in Diana's eyes and smiled at the outcome. She pushed Diana gently onto her back and spread her legs, all while continuing to gaze into her eyes. J.D. stroked the soft folds of Diana's sex slowly, gently.\n\n\"We don't have that kind of time baby,\" Diana said softly.\n\n\"Shh,\" J.D. continued staring down at her as she parted Diana's folds and traced the velvety, slickness with her fingers. Diana moaned as J.D. slid fingers up and down the length of her sex but avoided her throbbing button. J.D. was amazed at how lucky she was to be right there at that moment. To have this incredibly intelligent and beautiful woman staring into her eyes, trusting her with her body, trusting her with her heart. Diana had given her a second chance and J.D. knew that her own heart relied on her to not screw it up.\n\nJ.D. bent down and started placing light kisses on Diana's face as she circled Diana's opening with her fingers. Diana sighed, reveling in the attention. J.D. took some of the wetness onto her fingers and slicked it around Diana's clit causing her to arch her hips and gasp. Still searching Diana's eyes, J.D. slowly pushed two fingers into Diana's center. Diana's eyes widened and her hips came up to meet J.D.'s palm. J.D. bent down and as she lovingly kissed her she began to slowly stroke in and out of Diana. Diana moaned into J.D.'s mouth, the tension of the building orgasm and the loving way that it was being given were almost more than she could handle. It took everything she had not to take over and rush into it. J.D. ended the kiss, stopped her movements, and looked down at Diana with a smile. Before Diana could protest, J.D. slid her fingers as deeply into Diana as she could. She put her thumb on top of Diana's engorged nub, causing Diana to gasp. She curled the fingers that were surrounded in Diana's tight velvety embrace and pressed them to a special, sensitive area on the front wall of her sex.\n\n\"Oh, J.D.,\" Diana groaned, knowing exactly why J.D. was smiling.\n\n\"Come for me Diana,\" J.D. said gently and began to move her fingers and thumb.\n\nJ.D. watched as she took Diana up and over the edge and through wave after wave until J.D.'s hand was sopping wet and Diana was shivering and breathing hard into J.D.'s chest.\n\n\"Oh my God,\" Diana panted and J.D. heard a small sob.\n\nJ.D. turned Diana's face so that she could see those eyes again and the tears that were in them alarmed her.\n\n\"What is it?\" J.D. panicked. \"Did I hurt you?\"\n\n\"No, not at all,\" Diana looked back at J.D. with love. \"That was just so tender, so perfectly sweet.\" Diana raised her head to kiss J.D. deeply. As they were kissing a noise came from somewhere close by in the house, causing J.D. to jump.\n\n\"It's just my parents,\" Diana reassured. \"They must have come in late last night.\"\n\n\"Your parents are home?\" J.D.'s eyes got big and she jumped out of the bed.\n\n\"Ummm yeah,\" Diana replied, amused. \"They live here.\"\n\nJ.D. grabbed a nearby towel and wrapped it around her naked body. \"I thought they weren't supposed to come home until today.\"\n\n\"It is today,\" Diana's amusement was quickly fading. \"Get back here. I'm not done with you.\"\n\n\"Nuh uh,\" J.D. grunted, shaking her head. \"Not with your parents here.\"\n\n\"They live here,\" Diana stated again. \"Are you telling me you are not going to have sex with me while my parents are home?\"\n\n\"It's disrespectful Diana,\" J.D. said while searching for her clothes. \"Your father... Your mother...\" She stammered. \"They're in the next room.\" J.D.'s face was incredulous. \"I wouldn't be able to concentrate.\"\n\n\"Well I can. So you don't have to.\" Diana's voice took on a tinge of frustration. \"Stop getting dressed and come here. We still have a few minutes.\"\n\n\"I can't Diana,\" J.D. looked horrified. \"I'm sorry. I just can't.\"\n\n\"Damnit J.D.!\" Diana's frustration caused her to raise her voice. \"We're all adults here.\"\n\nA soft knock on the door interrupted their argument.\n\n\"Diana? Is the Lieutenant with you?\" A deep, male voice asked from the other side of the door.\n\n\"Yes, Dad,\" Diana sighed, staring angrily at a panicked J.D.\n\n\"Okay. We have about 45 minutes before we have to leave for base.\" Diana's father advised. \"I'm going to whip up some breakfast if you two are hungry. Your mother is still sleeping so try to be quiet.\"\n\nDiana heard the smile in her father's voice, but apparently J.D. had not.\n\n\"Oh. My. God.\" J.D. was in a state. \"Your father probably heard us. Only I would fall for a General's daughter. This is insane.\" J.D. mumbled to herself while tugging her shoes on, hopping in place. She looked at Diana, \"Please get dressed so that we can get this over with.\"\n\nDiana didn't know whether to laugh or go into full bitch mode. She decided on neither. \"We have 45 minutes,\" she said lazily and relaxed back into the bed.\n\n\"I can't go down there by myself,\" J.D. whined. \"Please Diana.\"\n\n\"Mmmm,\" Diana purred. \"There you go again, plying me with sweet words. I'm not ready to get up just yet. Come here.\" She patted the bed next to her.\n\nJ.D. looked at her, completely exasperated. She finally stepped over and sat down on the bed next to Diana.\n\nDiana reached over and turned J.D.'s face toward her. \"My father is not only this hard-ass General that you knew from Officer School. He's also my best friend and number one confidant. He's an amazingly cool, collected, and caring human being that I can and have talked to about everything.\" She stared hard into J.D.'s eyes and continued, \"And I mean everything.\" Diana rose up and J.D. couldn't help but let her eyes wander to the beautiful breasts that rose with her. Diana smiled as she watched J.D. look at her. \"He has also confided in me. We're not just father and daughter. We're friends. And J.D.?\" J.D. pulled her gaze back up to Diana's eyes. \"He approves of this,\" Diana said, indicating the two of them with her hand. \"And he, and my mother, understand what this entails. So, please, just fucking relax.\" Diana leaned over, placed her lips on J.D.'s, and kissed her deeply. Diana could tell that J.D. felt the kiss all the way to her toes when she moaned. \"Now that's more like it,\" Diana purred as they came up for air.\n\n\"You are amazing and I'll try to relax,\" J.D. conceded, smiling. \"But I still don't think it's right for us to make love while your parents are right next door.\"\n\n\"Okay,\" Diana countered, teasingly. \"Then we won't make love. We'll just fuck like two sex starved strangers. We can do it on the couch if you want. Or how about the kitchen counter. Oooh, I've always wanted to desecrate the formal dining room table.\" Diana waggled her eyebrows suggestively.\n\n\"You want to fuck where your parents eat?\" J.D. asked, teasing but also definitely feeling turned on.\n\n\"They hardly ever eat there,\" Diana smiled wickedly. She took J.D.'s earlobe between her teeth and sucked. \"I just want to have orgasm after orgasm. With you. Everywhere.\"\n\n\"Let me think about it,\" J.D. took Diana's face into her hands and gently pulled Diana's bottom lip into her mouth. \"Actually I need to stop thinking about it,\" she moaned. \"I have to get to work.\"\n\n\"Okay lover,\" Diana looked deeply into J.D.'s eyes. \"But this conversation is far from over.\"\n\nDiana got dressed and led J.D. down the staircase to the breakfast nook where General Rogers sat with a newspaper and a cup of coffee. Retired General, J.D. thought to herself while taking deep breaths in an attempt to slow her pounding heart.\n\n\"Good morning Dad,\" Diana said brightly before she kissed his cheek.\n\n\"Good morning sweetheart, Lieutenant,\" he replied unsmiling, nodding at each woman in turn.\n\n\"Good morning sir,\" J.D. replied strongly, not daring to meet the older man's piercing, and seemingly accusing, stare. This man hates me, J.D. thought miserably.\n\n\"Dad?\" Diana sighed, her hand on J.D.'s shoulder. \"Stop torturing J.D.\"\n\nDiana's father's face transformed completely as his lips formed into a shit-eating grin. \"Have a seat J.D. Diana, get our guest something to eat.\" He chuckled before smiling full on at J.D. \"Sorry about that. I just couldn't help myself. I'm glad to see you again J.D.\"\n\n\"Uh,\" J.D. stammered before smiling back. \"Thank you sir.\"\n\n\"It's Saul. Sir is reserved for the base. Or if Diana's in trouble,\" Diana humphed in response as she made plates for J.D. and herself. \"And my only other rule is no \"shop talk\" while off base. You cool with that?\"\n\n\"Shop talk?\" Diana asked.\n\n\"No Army talk,\" J.D. explained. \"Yes si... Saul, I'm cool with that.\"\n\n\"Then we'll get along just fine,\" Saul beamed an incredible smile at J.D. that she just couldn't help but return.\n\n\"I can see where Diana gets her smile from,\" J.D. mused.\n\n\"Every one of them in her extensive armory,\" the man grinned. \"I'm betting you've seen quite a few of them.\"\n\n\"That's enough talking about me,\" Diana interrupted. \"Here,\" she said roughly setting a plate in front of J.D. \"Do something useful with that mouth.\"\n\nJ.D. coughed hard as her mind tossed up the memory of Diana saying something similar to her the day before. Diana smiled knowingly.\n\n\"Diana,\" Saul sighed. \"Stop torturing J.D.\"\n\nDiana pulled up outside of the designated building at Fort Benning and turned toward J.D. \"Dad promised me he'd have you free by 1800 for dinner. I guess he's going to be helping with a lot of the new tech training your team is doing this week.\"\n\n\"Yeah,\" J.D. agreed, feeling her nerves start to jitter. \"Apparently they'll be more training with the local troops in Iraq, but some of the more sensitive stuff has to be mastered here.\"\n\nDiana brushed a thumb across J.D.'s lips tenderly. \"I hope you like lasagna. It's my mother's mother's recipe. She'll supervise so I don't screw it up.\" She caressed a cheek and slowly extended it down the left side of J.D.'s throat, eliciting a shiver.\n\n\"I love lasagna,\" J.D. said softly while returning Diana's gaze of longing. \"And I'd probably eat crusty shoe leather if you'd just keep touching me and looking at me like that. I'm going to pay get these windows tinted as soon as I can,\" J.D. said, wanting nothing more than to pull Diana across the seat and into her lap, but she knew that she couldn't even kiss her properly while on base. There were too many higher ranked officers around who knew them both and the saying \"loose lips, sink ships,\" was never truer than when a general's daughter was romantically involved with a female officer.\n\nJ.D. leaned over, kissed Diana's cheek and whispered into Diana's ear, \"Then we could make love in the car.\" She sucked and nipped at an earlobe before opening the car door, getting out, and closing the door.\n\n\"Been there, done that,\" Diana laughed.\n\nJ.D. spun around. \"The Firebird?\" She sighed at the reminder of her wrong doing. Another thought then entered her head as Diana raised an eyebrow at her. \"Are you talking about this car?\" Once she recognized the jealousy that churned in her stomach it immediately faded, but there was no doubt that it had flared.\n\n\"See ya later J.D.,\" Diana laughed while blowing a kiss as she drove away.\n\nOh yeah, J.D. thought to herself as she watched Diana drive away. I've fallen and fallen hard. How in the hell am I supposed to deal with being thousands of miles away from her? Possibly for years?\n\nJ.D. shook her head at her impossible circumstance and walked into the building.\n\nDiana wiped down the kitchen counters as her mother set the table. Mother and daughter had worked together on dinner for a little over three hours. Few words were spoken but Diana noticed that her mother seemed lighter, not in weight, she had always been a slight woman, but lighter in the way she carried herself. She had also not been condescending at all towards Diana, which was a welcome change. She's humming, Diana realized, as she watched her mother place glasses on the table. Diana smiled curiously at this small amazement until she heard the door being opened.\n\nShe rushed into the front room, wrapped her arms around J.D. and gave her a loud kiss on the mouth. J.D. stood stiff as a board, her cheeks flushed. With quick glances at Diana's parents, J.D. kissed Diana on the cheek and took a step back. Diana laughed, took hold of J.D.'s hand, and led her towards the kitchen.\n\n\"Dinners almost ready,\" Diana stated as she took the lasagna out of the oven and set it on the range to cool.\n\n\"It smells awesome,\" J.D. sighed as she leaned back tiredly against the counter and watched Diana flit about the kitchen. Diana looked up with a smile and noticed J.D. watching something other than her, saw tears gathering in cobalt eyes, and hurried over to see what had grabbed the dark haired beauty's emotion-filled attention. Diana's parents were still near the front door and they had their arms wrapped around one another. She could see small smiles on their faces as they rocked slightly back and forth, dancing to some internal music that only they could hear. She felt her own eyes fill at the scene.\n\nJ.D. smiled sadly, \"They remind me of the incredible love that my parents had.\"\n\nDiana took J.D.'s hand without taking her eyes off of her parents. \"I've never seen them like this.\"\n\nJ.D. looked at Diana and tenderly swiped a tear off of her cheek. \"Really?\"\n\n\"Yeah, really,\" Diana replied and turned to look into J.D.'s eyes \"Remember how my dad said 'don't make the same mistake I did'?\" J.D. nodded solemnly. Diana sighed. \"He put his career first. Didn't ask to marry my mom until she got pregnant with me. By then I think she was pretty much over it. But she's always been super responsible, so...\" she trailed off letting J.D. come to her own conclusions.\n\nDiana looked back at her parents and smiled. \"Come here you.\" She grabbed J.D.'s hand suddenly and dragged her into the formal dining room. Placing her palms flat on the table, she bent over and wiggling her ass, looked over her shoulder at J.D. and smiled wickedly. \"So what do ya think? We start like this and then end up sliding all over the top of the damn thing. I'd have to take the tablecloth off, of course.\"\n\nJ.D. blanched. \"Stop that,\" she admonished while looking over her own shoulder. \"We're going to be eating on that shortly.\"\n\n\"Exactly what I had in mind,\" Diana purred, turning and pulling J.D. into her arms. Diana went in for a kiss only to have J.D. suddenly back away. \"Damnit, J...\" Her frustrated words were cut off by her father's voice.\n\n\"J.D.?\" Saul Roger's naturally commanding voice beckoned J.D. to turn toward it. \"Allow me to introduce you to my lovely wife and Diana's mother, Celeste.\"\n\n\"Hello ma'am,\" J.D. smiled, blushing slightly. \"It's a pleasure to meet you.\" She offered her hand to the gentlewoman.\n\nCeleste brought her arms up, stepped forward, and wrapped J.D. in a hug.\n\nNow that's different. Diana thought to herself. What has happened to my mother?\n\n\"It's my pleasure J.D.\" Celeste replied while holding J.D. by the shoulders. \"All that I ask is that you withhold judgement of me based on my daughter's behavior.\"\n\nOh, there she is. Diana held her breath.\n\nCeleste smiled brightly. \"Unless she's being very good, that is,\" she finished with a wink and kissed J.D.'s very pink cheek as Diana's father laughed.\n\nWhat!?! Did my mother just tease my girlfriend? Who is this woman? She asked herself as she noticed that J.D. was looking as if she wanted to melt into the floor.\n\n\"So I think dinner's ready to be served.\" Diana announced for J.D.'s sake.\n\n\"I'll help,\" J.D. quickly turned and headed for the kitchen as Diana's parents chuckled softly. Diana shook her head at all three of them and followed J.D.\n\nJ.D. felt a hand on her back as she looked for something to serve as a pot holder. She stilled before turning. Her nerves were so tight she thought they might simply snap at any moment.\n\n\"It's ok love.\" Diana said softly, looking deeply into J.D.'s panicked gaze. \"Take a deep breath and calm down.\"\n\nJ.D. inhaled deeply and tried to hide the nerves. It's just dinner. She told herself. It's just dinner with Diana's parents, the parents of the woman that I've pretty much fallen madly in love with and have had multiple sexual encounters with, in their home, those parents, one of whom is a retired brigadier general. Her mind argued back at her maddeningly. J.D. inhaled again.\n\n\"Look at me J.D.\" Diana put her hands on J.D.'s shoulders. \"I'm sorry.\"\n\nJ.D. met Diana's gaze, the what? clearly visible in her eyes.\n\n\"I should've been more sensitive.\" Diana looked sorry. \"I'll keep my parent's talking and I won't touch you or tease you in front of them. Okay?\"\n\nJ.D. nodded her head, visibly relieved. She took one final, cleansing breath and stood up straight. She kissed Diana on the forehead with false confidence, but true feeling. \"Where are your potholders?\"\n\nDiana smiled. \"Here,\" she handed over a dish towel while grabbing potholders for herself. \"I'll be responsible for the lasagna, you grab the bread out of the oven.\"\n\nDiana served everyone and kept the conversation flowing as they all ate. At one point she noticed her father took her mother's hand and intertwined his fingers with hers. Very shortly after, she felt J.D. take her own hand under the table and fold their fingers together in the same way. Diana could not believe how happy she was in that moment. Her parents looked as if they were finally happy, the only woman that she could imagine being with was sitting right next to her and holding her hand, and everyone she loved was gathered, smiling and talking warmly with one another. Don't ruin this by thinking of the future Diana, she warned herself. Just stay in the here and now. She squeezed J.D.'s hand and smiled back at her when she shared her happy, cobalt eyes. Her parents smiled knowingly across the table. Oh yeah, Diana thought. The here and now is absolutely perfect."
    ],
    "authorname": "curious_joy",
    "tags": [
        "lesbian novella",
        "players",
        "drama"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/ready-player-two-ch-03"
}