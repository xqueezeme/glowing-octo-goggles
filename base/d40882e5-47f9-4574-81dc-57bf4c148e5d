{
    "title": "Dead and Horny Ch. 11",
    "pages": [
        "Hi all! I'm back with your favorite zombie/succubus/mimic story, and I hope this chapter delivers!\n\nNew reader? You've missed ten chapters of story, plus this is a spin-off of Home for Horny Monsters. If you wanna be caught up, start there and read until end of Book 2, then start on Ch. 1 of this tale!\n\nReturning reader? Welcome back! Boy, do I have a chapter for you! With our heroes about to storm the Black Palace, you are about to see the bloodiest action scene in the horny monster Universe as a mage, a succubus and a zombie go up against a private militia and a man-dragon.\n\nI really hope you like this chapter, because there's a really fun surprise in it that I've been dying to share with you.\n\nDon't forget to like the story and check my bio for next month's release dates. Have fun!\n\nHunger\n\nDana flicked her wrist, causing the sword to unfold itself just in time to parry the first attack. Tasia had leapt across the balcony, easily clearing two deck chairs in the process, and the swords scattered sparks as one blade slid off the other.\n\n\"Where did you get that?\" Tasia demanded. The knight was pressing hard, and if not for her recent feeding, Dana would have been easily toppled. The two of them clashed, and Dana twisted her blade, keeping them locked up.\n\n\"I'm just full of surprises,\" she said, then shoved the knight backward. Dana readied her sword, hoping to keep the knight at bay for a few more minutes.\n\nTasia spun about and sliced through the air with her blade. Dana immediately recognized the intended strike and stepped to the side. The sword cut through where Dana had been standing, and Tasia let out a growl and switched to a horizontal swipe. Dana blocked with her blade, but she was shoved sideways by the impact of the blow.\n\n\"Looks like your surprises are running out.\" Tasia unleashed an onslaught of blows, and with each one, Dana danced about, dodging out of the way. A risky counterattack was not necessary, all she needed to do was survive until Lily returned. \"You're fast, though, I'll give you that.\"\n\nDana grunted in response. Her offensive skills with a sword were non-existent. Even with enhanced speed and strength, Tasia was scoring tiny wounds along her arms and torso. They continued moving around the pool, and Dana kept turning her eyes to the sky, hoping to see Lily's dark shadow descending.\n\n\"Even if you get past me, you do know he'll kill you, right?\" Tasia's eyes were wild as she feinted to the left, then tried to stab Dana in the chest. \"He is like a god.\"\n\n\"You're so much better than this. You know that he's controlling you, right?\" Though Dana had no reason to like Tasia, it sickened her that the knight was under Tristan's thrall. When Daryl had blackmailed Dana, she had at least been able to think and speak for herself, to actually be something other than a complete slave. Was Tasia's mind trapped right now, screaming to get out? Or had she been completely subverted? Maybe it would be worth it to try and reason with the inner Tasia, to help draw her out long enough that the others could help.\n\n\"How long are you just going to let him make you his bitch?\" she asked, hoping that anger would be the most effective course.\n\nTasia did a weird shuffle with her feet, then hooked her foot in a deck chair and launched it at Dana. Dana brought up the sword to block it, but lost sight of the knight. It wasn't until she felt Tasia's blade pierce her through the gut that she realized that she had fucked up.\n\n\"How is this for doing something?\" Tasia growled, then twisted the blade. The knight had crouched low to hide herself behind the projectile, then stood to her full height when she had run Dana through. There was a grim satisfaction in Tasia's smile, and it occurred to Dana that the knight thought she had already won. It was time to press the dead girl advantage, but how?\n\nWhat would Lily do? Now that she was run through, she wouldn't be able to use the sword. She looked down to see if there was any way to pull herself free and noticed that Tasia's left breast was completely exposed. It had popped free of her bikini top while they had been fighting, and the bright areola had become a jiggling target.\n\nShe knew what Lily would do.\n\n\"Your tit's out.\" Dana let go of her sword, balled her hand into a fist, and then drove it into Tasia's breast as hard as she could. With any luck, this would get her the opening she needed, but she held nothing back. After all, there was no telling what it would take to bring Tasia down.\n\nThe bones in Dana's hand and forearm snapped on impact, unable to stand up to both her enhanced strength and whatever magical aura protected Tasia. The knight grunted and looked as if she was going to be ill. When her legs buckled, Dana used the moment to push forward and lift Tasia, then tackle her into the pool.\n\nThe knight struggled to get out from under her, but a heavy weight now pressed down on both of them. Dana felt Tick Tock change shape, and wire limbs sank themselves into the bottom of the pool, pinning them both in place. Tasia kicked her feet, struggling to break free, then let out a bubbling scream of rage.\n\nDana held tight, knowing that it was only a matter of time. When Tasia finally went limp, Dana waited an extra thirty seconds and wasn't surprised when the knight suddenly struggled anew, her attempt at subterfuge failing. When Tasia went limp a second time, Dana wondered how many minutes they had been beneath the water, then patted one of Tick Tock's limbs to let the mimic know it was time to surface.\n\nShe dragged Tasia to the edge of the water, then shoved her up onto the concrete just as a dark shape dropped down from above. It was Cyrus and Lily. The mage fought free of Lily's arms, then ran over.\n\n\"What happened?\" he asked.\n\n\"It got messy.\" Dana grabbed the sword in her gut and pulled it free, then tossed it on the ground. She swayed a bit as her muscles regenerated and tightened. \"She needs mouth to mouth right away. I had to drown her.\"\n\nCyrus looked appalled, but Lily knelt next to Tasia and opened the knight's mouth. She placed her lips on Tasia's and blew, then tilted her head to the side as a trickle of water came out. She repeated the process a few more times, pausing to listen to Tasia's lungs.\n\nTasia let out a groan of agony, then vomited up a bunch of water. She took a deep breath and shuddered, then turned her head to the side and whimpered.\n\n\"Will she be okay?\" asked Cyrus.\n\n\"Should be. But look.\" Lily lifted the shirt that Tasia had been wearing to reveal a deep purple bruise that extended back along Tasia's rib cage. \"I noticed it when I was listening to her heart. These ribs are very broken.\"\n\n\"But how? It would take a tremendous amount of force to accomplish such a thing.\" He looked at Dana, realization dawning on his face. \"You did this?\"\n\nDana held up her hand to reveal that some of her fingers had healed crooked. She rebroke them a couple of times until they straightened out, then flexed her hand. Something popped into place, and she nodded. \"Yep, that was me.\"\n\n\"Hmm.\" He looked at Tasia. \"Should we wait for her to wake up?\"\n\n\"Oh, she's out for the day. While I was giving her mouth to mouth, I stabbed her. We have no idea whether or not being knocked out will undo Tristan's control.\"\n\nCyrus let out a sigh of disappointment. \"I guess it's for the best, then. Let's hide her somewhere so that nobody messes with her.\" He pointed to a nearby door, then walked over and opened it. \"This is just a towel room. We can lay her down in here. Can someone get her sword?\"\n\n\"I've got it.\" Dana picked up Tasia's sword and then her own. She collapsed both of them and tossed them into Tick Tock's waiting flaps while Lily and Cyrus tucked Tasia away in the towel room. Towel room was probably not the best name for it, as it was full of dishes and serving trays as well, but it did indeed have giant stacks of towels, which they used to make a bed for Tasia to keep her comfortable. She handed Tasia's sword to Lily, who winced when it touched her flesh.\n\n\"I hate these things,\" Lily muttered, then tossed it unceremoniously onto Tasia's chest. \"Are you still good to come with us, magic man? I'm sensing some doubts in you.\"\n\n\"I'm still good.\" Cyrus sounded confident, but Dana could smell a shift in his body odor. Was it stress, or something else? \"Was just really hoping to have our heavy hitter.\"\n\n\"You've got your heavy hitter right here.\" Lily flexed her arms, then backed out of the door. \"Let's go fuck some shit up.\"\n\n\"Your language is abhorrent,\" muttered Cyrus, but he followed.\n\nThey moved into the bedroom and did a quick check for any more magic wards. Cyrus declared the room clear, then took point as they moved down the stairs and into the upper hall. Lily stopped the group and snuck ahead, her skin tone changing to match the walls around them.\n\n\"We didn't have a chance against her, did we?\" whispered Cyrus.\n\n\"You have no idea.\" They waited for a couple of minutes, and Lily came back, a smug look on her face.\n\n\"Looks like they're just a skeleton crew. Only a couple of them at the bottom of the stairs. Figure if we can get down there, I can put them out.\"\n\nCyrus pulled a pair of wands out of his pocket, then pulled something else out and handed it to Dana. It was a glass marble with a smoky liquid inside.\n\n\"What is this?\" Dana held the marble up to inspect it.\n\n\"Smokescreen. Use it in case we need a quick getaway.\" He put a wand in each hand and then looked at Lily. \"You lead the way. I'll silence any activity we come across.\"\n\n\"Such a gentleman.\" Lily led them to the stairwell. They stayed crouched while moving, which kept them from being seen from the next floor down.\n\nAs they crept along the upper landing, Dana couldn't help but wonder if Tristan was hidden behind one of the many doors they passed. Still, the men downstairs needed to be taken care of before they could address the issue. While they moved, Cyrus kept waving one of his wands about. It wasn't until the third time he did it that Dana saw the shimmering wave of magic that followed behind it. They were now moving without a sound, as if the volume of their little adventure had been muted.\n\nOnce at the top of the stairs, Lily took a peek over the railing and then held up three fingers.\n\nCyrus nodded, and the three of them began their descent. Cyrus moved ahead of Lily and Dana followed. Lily raised an eyebrow when Dana made eye contact, so she assumed the succubus was up to something.\n\nAt the bottom, the last few stairs widened dramatically, giving them a full view of the entryway. There was still some camera equipment remaining nearby, and one of the guards sat on it, his eyes down the main entryway. The other two were moving along the corridors on the sides. When one of them turned and saw them, he raised his gun.\n\nLily was already vaulting over the railing as Cyrus sent a blue wave of energy across the room that knocked the first guard off his feet. The guard on the boxes spun to face them, but took a stinger to the neck, and fell limp on the floor.\n\nThe third guard tried to flee down a hallway, but Lily grabbed one of the camera cases and launched it. It hit the guy in the back of the head, which sent him sprawling face first on the ground.\n\n\"See? Easy pea\u2014\" Lily's words were cut off by the sound of doors opening above them. Dana looked up to see that all of the doors they had passed were open now, and men with assault rifles came storming out, weapons pointed downstairs. Cyrus sent out a wave of purple energy with the wand in his offhand, and it was only while watching the energy expand in a dome that Dana saw the security cameras up above that had been hidden from view.\n\n\"Fuck!\" Lily grabbed Dana with her hands and Cyrus with her tail, then threw them both down one of the corridors as the men opened fire. Dana slid along the floor, her eyes wide as Lily was gunned down in a hail of bullets. The succubus spread her wings, her features distorting into something truly horrific before launching herself up and out of sight. The gunfire itself sounded like popping corn, and the first scream of agony was more like a sigh.\n\n\"This way!\" Cyrus grabbed her by the arm and led her to a nearby door. It was locked, but he muttered something under his breath and the door popped open, revealing a service stairwell.\n\n\"We can't just leave her,\" Dana told him.\n\n\"Yes, we can. She'll survive, one way or another, but you and I will not. They'll kill me and keep you to figure out why you won't die. It only gets worse from there.\" They came to the bottom of the stairs, and Cyrus now led them down a long hallway. \"We mapped this out before we got here, I know a safe\u2014\"\n\nThe stairwell door opened behind them, and two men with guns appeared and opened fire. Dana took one in the chest and let out an oomph of surprise, and Cyrus ducked into a nearby door. He leaned around the corner and fired a blast from each wand, his eyes wide when he leaned back.\n\n\"There are more coming,\" he mouthed, then pulled something out of his pocket and tossed it in the hall. There was a bubbling sound, and Dana watched as a large gelatinous mass expanded in the hallway. Bullets slammed into it, and Cyrus helped Dana stand.\n\nThrough the blob, there were now at least six men coming. Were they the same ones from above? Or were these different ones? It didn't matter, because as they turned the corner, they both slid to a stop as the door at the other end of the hall opened up, and four men emerged, their weapons ready.\n\n\"Lux!\" Cyrus summoned up a blue shield of energy that deflected the first volley, then turned around and opened a nearby door. It was a large store room, and Cyrus slammed the door behind them as a pair of bullets tore a hole through the metal.\n\nDana grabbed a nearby shelving unit and slid it in front of the door, then pulled Cyrus away. Bullets coming through the door were destroying everything inside, and when they got to the back of the room, the door was blown open by what must have been a grenade.\n\n\"Down!\" Cyrus pushed Dana against the wall, between a pair of shelves filled with laundry soap and cleaner. He summoned his blue shield again, and it flashed with every impact. Dana saw that the bullets weren't being stopped, but deflected, and she made herself small, hoping that they wouldn't hit her.\n\nCyrus dropped his wand and started digging around his pockets when a flashbang went off right in front of him. The mage covered his face with his hands and his shield wavered with his concentration. The light was bright, but the flashbang sounded like a brief fart.\n\n\"Concentrate fire!\" Someone shouted as if from a mile away, and the barrage increased. Cyrus was crouched low, his face pulled into a grimace, and the whole thing was ridiculous. The gunfire was muted even here, and despite the fact that Cyrus could potentially die, it sounded like a kid's video game, the volume turned as low as possible.\n\nTrying to figure out what to do, Dana spotted an electrical panel on the wall across from them. Gritting her teeth, she threw the smoke-filled marble across the room and then ran out into the open. Smoke filled the small space, and she managed to get her hands on the main switch before bullets ripped through her body. If she could turn the power off, maybe Cyrus could get back on his feet and do something other than play turtle on the floor.\n\nThe moment she pulled the main breaker, there was a loud pop as a bullet hit her in the ear and passed through to the other side of her skull. She fell to the floor, her thoughts spinning out of control as darkness flooded in.\n\n<center>\ud83d\udd70\ufe0f\ud83d\udd70\ufe0f\ud83d\udd70\ufe0f</center>\n\nTick Tock watched as Dana-human fell to the ground, some of her insides now on her outside. Humans were fragile creatures, and the fact that they even had an inside was kind of silly. Still, most of the creatures in this plane of existence were confined to the rules of spacetime, so Tick Tock couldn't fault Dana-human for her frailty.\n\nSpacetime had always been an interesting concept to Tick Tock, as it would be to other members of its kind, if they could ever evolve beyond the constant hunger and desire for survival. Temporally, mimics could only move forward through time, though they could alter the rate at which time passed. For instance, when Tick Tock had been tossed into storage by Emily, it was a simple manner of moving in fast-forward until a chance to escape arrived. Upon returning home, the mimic had been disappointed to discover that the new Caretaker had lacked the necessary spark to fix Tick Tock's broken gears.\n\nHowever, the Dana-human had radiated light like the sun, drawing the mimic immediately out from hiding. Many times while being fixed, Tick Tock had frozen time just to bask in her radiance, to allow itself a rare moment of joy. Such a being was extremely rare, and the mimic had come across only one other.\n\nOnce fixed, Tick Tock had been able to freely manipulate space as well. What the Dana-human saw as shapeshifting was nothing more than Tick Tock Folding spacetime like a paper airplane, or an origami swan.\n\nTick Tock's true form could never manifest completely in a four-dimensional space, for it simply wouldn't fit. It would be like trying to squeeze a sphere into a piece of paper without flattening it. Ever since leaving the house to help the Dana-human come to life again and regain her spark, Tick Tock had often frozen time or run it in fast forward. When Dana spoke, the mimic was always there to listen, often thinking for hours or days about her words and the best way to help.\n\nRight now, she was falling over, and Tick Tock had frozen the moment to think. There were so many things going on, it was hard to categorize them, but the mimic had all the time it would need.\n\nIf the Cyrus-morsel were to die, then it was likely that the Dana-human would be taken. The human-morsels down the hall were the primary problem, but how best to address them? Tick Tock wondered how to best Fold the space around it to assist them both. Perhaps it could Fold itself into a table, or even a metal slab? The bullets the men fired would likely damage its ability to Fold, and Dana-human was no longer able to fix any damage done. So maybe that wasn't the best move.\n\nSitting in the dark, a new possibility occurred to Tick Tock. The only thing that prevented the mimic from Folding space was the act of being observed, a truly frustrating attribute at times. Sure, Tick Tock could plan ahead and secrete razor-sharp limbs along its current form, but it wasn't the same as being free to swim through spacetime freely, Folding itself into different forms and shapes.\n\nIn a single moment, Tick Tock spent hours contemplating the best course of action. There didn't seem to be a single Fold that would accomplish protecting Dana-human from the morsels in the hall. Once all options had been weighed, Tick Tock decided to do something new.\n\nTick Tock Unfolded. The process was similar to Folding, but was far more exhausting because it forced the mimic to pull the entirety of its body into only three dimensions. This typically had the result of unleashing blinding terror on whatever creature saw it, but that didn't concern the mimic in the slightest.\n\nConcealed by smoke and hidden in the dark, Tick Tock Unfolded itself, forcing its mass into the three-dimensional space of the storage room.\n\nThrough the brief bursts of gunfire, the muffled screams of the human-morsels could be heard as Tick Tock moved along the hallway with a plethora of limbs, scaled, hairy and otherwise. Making sure to dodge the center line of fire, Tick Tock was able to grab the closest human-morsel and toss him inside of a space that most likely resembled a mouth, or some hideous maw. It was so hard to tell or care about what the morsels were seeing.",
        "Once inside the space, Tick Tock Folded the morsel into a tiny ball and then tucked it away in a sub-space where the protein could be digested. This resulted in a high-pressure spray of blood and tissue that soaked the room.\n\nCries of alarm became shrieks of terror as the mimic tore its way through the remaining morsels, spraying blood and gore everywhere. In between muzzle flashes, the mimic changed shapes, and the universe fought to define it, but Tick Tock was determined to protect the Dana-human. It owed its life to her, and would ensure that she regained her spark once again, even if it had to exhaust itself to do so.\n\nOnce out in the hallway, it made sure to devour the morsels before they could don their magic glasses, green things that would allow them to see in a different wavelength of light. By the time it Folded its last morsel, it slumped to the floor exhausted. Though its mind could stretch a single moment into an eternity, its body still required the passage of actual time to digest what it had consumed. It would save just a little bit of energy in case Dana-human needed it. Once Folded back into the shape of a backpack in the middle of the blood-soaked hallway, Tick Tock waited for her.\n\nThe mimic wouldn't have to wait long. After all, time was relative.\n\n<center>\ud83d\ude08\ud83d\ude08\ud83d\ude08</center>\n\nAs soon as Lily reached the upstairs landing, she grabbed one of the nearby mercenaries and used him as a shield, holding him up with her tail as she moved toward the men closest to her. The bullets that tore through her were painful, and she wondered if they had been tipped with silver or even blessed. The men held back to avoid shooting their comrade, and she took advantage of the moment by leaning around the gasping man.\n\n\"Don't stop shooting on his account. I intend to kill all of you.\" Realizing that her voice was muffled and they might not hear her, she reached a clawed hand around the man's throat and tore it open, hoping they would get the point.\n\nThe hallway erupted in quiet gunfire once more, and she threw the dead man and danced about the room, slashing and ripping. Her body became hot as hellfire surrounded her, summoned by her anger, and she tore her way through the men, pausing on occasion to sting a couple and knock them out.\n\nSomeone threw a flash bang, and she snatched it up and bit into it. It exploded in her face, and she laughed maniacally, spreading her wings wide to cast an eerie shadow. The lights suddenly went out, but Lily had no trouble seeing in the dark.\n\n\"To Hell with all of you!\" She tore her way through them, dodging gunfire and whipping her tail about to sting them. If given the chance, she would come back and eat every last one of them, but time was of the essence. She forced her way through a pair of men blocking the doorway and kicked one hard enough that his head snapped sideways on his body. The other drew a pistol, which she snatched out of his hands while stabbing him with her tail.\n\n\"Oh, why didn't I think of this?\" She picked up the man and the pistol and moved back into the hallway. While using him as her meatshield, she picked off two of the others with the pistol, then plucked another flashbang from the man's belt and tossed it into a trio of mercs at the top of the stairs. They ran out of the blast radius so she threw her meatshield after them, smashing into them, knocking one of them to the ground. Pistol empty, Lily scooped up a nearby assault rifle and strode purposefully forward.\n\nShe fired several rounds at the retreating men, knocking down one. The other fled across the main hall and ducked through one of the side rooms on the main floor. Expecting to find herself under attack again, she stopped and picked up an extra gun. If a group of men stormed out, she could put a few down from a distance.\n\nOther than the groans of the dying, there were no sounds to be heard in the main lobby. She paused just long enough to put a bullet in the head of a merc who was trying to aim his pistol at her. It seemed a shame to ruin so many perfectly good meals, but she was on a time crunch.\n\nThe lights flickered back on up above, and she frowned. So much for the advantage of night vision. She walked down a few steps, keeping her senses alert for another ambush. She took a few more tentative steps down the stairs and waited.\n\nSeveral moments passed.\n\nSuddenly, the door of a side room burst open. Tristan stormed out, bare-ass naked except for the pendant around his neck. His skin was a deep red, and from her vantage point on the stairs, she could see the open door to a sauna on the far wall of the room.\n\n\"You've got to be fucking kidding me!\" he roared, and Lily opened fire. She didn't know if guns would even work on him, and was disappointed to see many of the rounds bounce off his flesh. However, a couple did pierce his skin, but the rounds were still visible, meaning they only just broke the skin.\n\n\"Where the fuck is everybody?\" he demanded, then turned around, spying one of his men hiding behind a pillar. \"Get out here, you coward, or I'll eat your whole goddamn family!\"\n\nThe remaining merc fled.\n\nFeeling smug, Lily hopped over the railing and tossed her guns to the side. \"Looks like your friends are gone. You've got quite the mess to clean up.\"\n\n\"I'm about to make an even bigger one.\" His features rippled, and his jaw stretched wide. \"What makes you think that you'll be able to handle me now?\"\n\n\"Because she has help.\" Cyrus staggered out of the hallway, his feet and arms covered in blood. In one hand was a wand, but he held a silver dagger in the other. The dagger was humming with holy energy, and Lily took a step away from it out of instinct.\n\n\"I'm surprised to see you. But no matter.\" Tristan popped his knuckles and tilted his head back and forth. The Dragon Seed swung from side to side, glowing with a sickly aura. \"Let's dance.\"\n\nCyrus charged forward, then brought up his wand in defense when Tristan sent out a blast of dragon's fire. The summoned shield of light looked as if it was melting, and Lily jumped into the flames, her wings spread wide behind her.\n\n\"You'd better have a plan,\" she yelled over the roar of the flames.\n\n\"This!\" He held up the dagger. It had silver and pearl inlays throughout the handle, and she recognized the holy script engraved in the blade. \"It was for you, but it's time to improvise.\"\n\n\"Where's Dana?\"\n\nCyrus shook his head and pulled something new out of his pocket. \"Move!\"\n\nLily leapt to the side as Cyrus threw something into the flames. A gelatinous mass appeared in mid-air and exploded, coating the walls in flaming goo. Tristan coughed, and Lily saw that some of the gunk had hit him in the face. Wasting no time, she ran toward him and leapt into the air, tilting her body backward so that her tail could swing about.\n\nIn midair, the stinger of her tail became a spiked club that swung up into Tristan's exposed scrotum. The impact caused Lily to lose her balance mid-air and crash to the ground. When she rolled over, she saw that Tristan's face was now a deep purple as he clutched at his testicles.\n\nCyrus ran in with the dagger and planted it in Tristan's chest. The dagger didn't seem to do anything but further piss off the dragon, who let out a roar that shook the windows.\n\nTristan grabbed Cyrus by the shoulders and lifted him into the air before slamming him into the ground. Once free of the mage, he hunched over and clutched his nuts some more.\n\n\"Gonna...fucking...kill you,\" he muttered through deep breaths, then ripped the dagger out.\n\n\"I'd like to see you\u2014\" Lily let out a gasp when the dagger struck her in the chest. Tristan had moved so quickly that she hadn't even seen him throw it. Her body went numb as she fell to the floor, pinned in place by the artifact planted in her bosom. Pain radiated through her body as a beam of light came through the ceiling, pinning her in place with holy magic. In the distance, she could hear a choir of angelic voices singing, and she realized that she couldn't flee. Whatever this object was, it had pinned her onto this plane of existence, filling her with dread.\n\nTristan let out a wet cough and started moving toward her with murder in his eyes.\n\n<center>\ud83c\udf56\ud83c\udfcd\ufe0f\ud83c\udf56</center>\n\nDana was in her garage, an angle grinder held tight in her hands as she used it to trim her motorcycle's fender back into a smooth line. Sparks danced along the fender's edge, illuminating the dark corners of the room.\n\n\"What'cha workin' on, Sparks?\" Alex stepped out of the shadows, her bare feet silent on the concrete.\n\n\"Just fixing up the bike.\" Dana turned her head while taking off her safety glasses. \"What are you doing here? Aren't you supposed to be dead?\"\n\n\"That's a laugh.\" Alex pulled up a nearby chair and spun it around to sit on it backward. \"You're the only dead girl here.\"\n\n\"I'm not dead, though, I'm...\" Dana coughed, and something small and shiny fell out of her mouth and landed on the floor. She bent over and picked it up to inspect it. It was a bullet, covered in her blood. There was a sudden pressure in her head, just behind her eyes, and the room became blurry.\n\n\"Relax, Sparks, you're gonna make it. Just close your eyes for a second.\"\n\nDana obeyed, then let out a groan as the pressure intensified some more. \"What's happening?\" she asked.\n\n\"The human brain is a complicated thing, and it takes time to rebuild. That's the funny thing about your situation. You may be dead, but your body still fights so hard to live.\"\n\n\"That's because...I...want to live.\"\n\n\"I want you to live, too, Sparks. But you know it's never gonna be the way it used to be, right?\" She could feel Alex's hand on hers, squeezing tightly. \"You're not the same person you were when you were alive, and that's okay. This new person is pretty cool, too.\"\n\n\"Alex, what are you\u2014\" the pain vanished, and Dana blew a chunk of metal out of her left nostril, which pinged off the floor. When she opened her eyes, she was in the utility room of the Black Palace, but Alex still stood before her. A gnawing pain filled her belly, and she groaned when she stood. Why did she hurt so bad? Why was the room so smoky?\n\n\"Looks like you're out of fuel, Sparks.\" Alex walked across the utility room and passed through the wall.\n\n\"No, wait.\" Dana stumbled toward the door and fell. She caught herself at the last second, her hands now slick with moisture. Puzzled, she looked at her hand and saw that it was blood.\n\nIt smelled rich and aromatic, like the finest bowl of tomato soup, with just a hint of something in the background. Was it blue cheese? She sniffed again, her eyes rolling back in pleasure as her stomach growled.\n\n\"No,\" she whispered, then wiped the blood on the wall. The air was rich with its smell, and it wasn't until she stepped out in the hall and slipped in it that she realized that it was everywhere. Was this part of the hallucination?\n\n\"Why do you resist it?\" asked Alex. She was kneeling over something on the ground that looked like a piece of skin. \"The hunger, I mean.\"\n\n\"I don't want...to...\" Dana was distracted by the smell of food, her own hunger, and the fact that the hallway was also covered in photographs of the two of them. Their entire relationship was laid out before her, and she tried to grab at the one closest to her, but slipped in blood again. Why was there so much blood?\n\n\"You don't want to what? Become a monster?\" Alex stood over Dana now, only she was standing on the wall. \"It's all a matter of perspective, isn't it?\"\n\n\"Fuck perspective,\" Dana muttered, recalling an old conversation with Alex. The two of them had gotten into an argument one night after being called a pair of dykes. Dana had wanted to tear the guy apart, but Alex had told her to let it go. \"You will always be the villain in somebody else's story, right? No matter how pure our love is.\"\n\n\"So, you do remember.\" Alex smiled. This caused warmth to bloom deep inside Dana's chest, even though it was muted. \"So how is this any different?\"\n\n\"It's blood, it's...\" her thoughts weren't fitting together anymore, and she gagged.\n\n\"It's your brain trying to rebuild itself.\" Alex vanished and was now further down the hall. \"You can fight it, or you can give in.\"\n\n\"But...I'm not a monster...\" Dana sat against the wall, taking shallow breaths through her mouth. The air itself tasted good, and she closed her eyes in an attempt to shut it out.\n\n\"It isn't the act, Sparks. It's the intent. You aren't the girl you used to be, but you'll always be the one I love. You need to stop pretending that you're still a regular human. You're a badass, you know that? A badass fucking zombie who needs to eat to survive, and that's okay. So go ahead, taste it.\"\n\nDana opened her eyes and lifted her hands. The blood was cooling, but still warm. When she placed a finger in her mouth, she sighed in satisfaction when it touched her tongue.\n\n\"That's right, baby girl.\" Alex's voice was slightly more distant. \"Get yourself a snack, then get your pretty ass up those stairs and help your friend.\"\n\nDana eagerly licked the blood off her hands, finally allowing the hunger to take her over. Falling to the ground, she ran her tongue across the cold marble, then scooped up the bit of flesh and stuffed it in. It tasted like freshly seared steak, causing her to moan in satisfaction.\n\nThe photographs were gone now, but she didn't care. She crawled down the hall, licking her hands and scooping up chunks of meat. Her vision sharpened, and she felt a sharp pain in her temple as the bone started growing back.\n\nGrowing back? She touched the spot where the bullet had exited and discovered that there was a hole there, but it was getting smaller. That wasn't how her regeneration had worked before. Was it because she was eating flesh?\n\nDown the hallway, she found Tick Tock in the middle of a clean spot. There was a pair of prints in the blood that she assumed were Cyrus's, and when she picked up the mimic, she heard yelling from up above. She picked up another hunk of meat and chewed it, relishing at the delicious warmth that spread through her body.\n\nShe wanted more.\n\nStumbling up the stairs, she paused on the landing to cough out a fragment of bone, then laughed. The laughter turned to tears, and then to a growl. Her emotions were being shuffled about in her brain as synapsis reconnected, and old memories bubbled to the surface to pop before her eyes. Her eighth birthday, where she punched the neighbor boy for blowing out her candles. The middle school dance where she did the electric slide to the wrong song. The moment when she first held hands with Alex and felt her stomach drop as if she was on a roller coaster.\n\nLurching up the stairs, she heard Lily scream, followed by the sound of singing. Who the fuck was singing? Shaking her head, she felt her sinuses clear, then her ears popped. She stumbled forward down the hall and saw the main room. The odor of dead bodies was in the air here, and she saw Cyrus on the ground, unconscious and covered in blood.\n\nLily was also on the ground, but her body hovered a foot off the floor. A spotlight from somewhere above was shining on her, and there was a shining dagger with a crucifix handle sticking out of her chest. Tristan was moving toward her, smoke curling up out of his nostrils.\n\nAround his neck, the Dragon Seed glistened in the light just above a rather ragged wound that was smoking as well.\n\nTristan was saying something to Lily now, his tone condescending. It was so hard to concentrate on the words, because the dragon man smelled like the finest smoked brisket in the world, and she was fucking starving!\n\nShe sprinted across the room on bare feet, licking her lips and opening her mouth wide. When she landed on Tristan's back, she bit down into the tough flesh of his neck and growled, trying hard to break the skin and take just a piece of him with her.\n\n\"What the fuck?\" Tristan tried to grab at her over his shoulder, but she twisted sideways and stuck her hand in Tick Tock to pull out the sword. The slight difference in the handle revealed that it was Tasia's and now hers, but it would do. She didn't bother extending it, preferring the short form. It bounced harmlessly off his skin, and she scrambled across his back as he bent over. It was so easy to hold on to him, especially because he had thin ridges that would perhaps become wings someday.\n\n\"Stupid cunt!\" Tristan hollered, then grabbed her hand and crushed it, clearly expecting her to let go. She bit his ear instead, and almost laughed when a piece of it came off in her mouth. When she swallowed it, she felt a brief surge of energy go through her, as if she had slammed an energy drink.\n\nTristan howled in alarm, and twisted about. She saw the open wound in his chest and dug her fingers in, eager to get them wet with his blood. Retracting her wet fingers, she got just a taste of something that reminded her of barbecue sauce when he bent over violently, causing her to flip onto the ground.\n\n\"How are you still alive?\" he asked, his features alarmed, and she couldn't help but notice that the Dragon Seed was dangling just over her face. Distracted as she was by the bloody wound on his chest, the Seed had its own peculiar odor, like the finest cheese in the world, maybe a smoked gouda. God, she was so hungry!\n\nShe twisted the knife in her hand and used it to cut the chain holding the pendant. As if in slow motion, the Dragon Seed fell toward her. Tristan's eyes widened in panic as the magical artifact left his possession, and Dana opened her mouth wide.\n\nWhen the pendant struck the back of her throat, she swallowed it.\n\n\"No!\" Tristan picked her up and threw her across the room hard enough that she felt several of her bones break, but it was nothing compared to the heat flooding her body. It was as if she had consumed the sun, and it was now fighting to burn its way free of her. Her bones shifted and popped as her regeneration went into overdrive, and she let out a moan of pure ecstasy.\n\n\"Give it back!\" Tristan cried. Standing over her, he picked her up with one hand and jammed his other into her gut. Desperate to take the Seed back, he dug through her belly with sharp claws.\n\nDana was suddenly filled with rage at the audacity of this thing touching her body.\n\nClamping down on his wrist with her hand, she pulled him out of her. The veins in Tristan's forehead bulged as he was overpowered, and surprise was written across his features. Smoke poured from her skin as the wound sealed itself shut, and she headbutted him in the face hard enough that she felt something crack. This time, it wasn't part of her that had broken.\n\n\"Fuck!\" Tristan's nose sprayed blood, but he didn't dare let go of her. He tackled her to the ground and she grabbed at his throat, desperate to choke him. \"You're a strong little cunt, but are you fireproof?\"\n\nHis mouth stretched wide, and she could smell the heat forming inside his body as he readied a fiery blast. Her body might be able to heal the damage, but she would likely become hideously scarred, if not deformed by the act. Improvising on the spot, she took the dagger in her hand and shoved it inside of his mouth, making sure to flick her wrist on the way in.\n\nThe dagger unfolded itself, pausing briefly when the blade pressed against the roof of Tristan's mouth. Grunting in surprise, Tristan stood and stumbled about for a couple of seconds before the blade expanded to its full height, piercing through the top of his head and spraying the room with blood and brains. Dancing about like a macabre unicorn, he tipped over backward as flames shot out of his mouth and also through the hole in his skull. He now looked like a Roman Candle that had been tipped over, and dragonfire belched across the room, causing the furniture and walls to ignite.\n\n\"Dana!\" Lily cried out to her from across the room. \"Get this thing out of me!\"",
        "Dana lurched over to Lily with a drunken smile. \"You look so pretty,\" she told her, then knelt down to pull the dagger free. The handle of the dagger sizzled on contact with her skin, so she yanked it out quickly and tossed it to the side. The spotlight vanished, and Lily let out a groan as she rolled onto her side, curling into the fetal position.\n\n\"Don't be like that,\" Dana told her with a grin, then leaned over the succubus. Lily winced, then gasped when Dana licked her neck.\n\n\"What are you doing?\" asked Lily.\n\n\"I think you know.\" Despite the smell of the flames, now that Tristan was down, all Dana could think about was how horny she was. A small part of her noted that it may be the effect of the Dragon Seed, but she no longer cared. She gave Lily's breast a squeeze, then sniffed her neck.\n\n\"Seriously? Here?\" Lily pushed her away and stood. \"We need to get out of here before this whole place goes up.\"\n\n\"There's plenty of time.\" Dana grabbed Lily again and kissed her. The succubus melted into her arms for a moment, then grabbed her by the hand and pulled her toward the middle of the room.\n\n\"C'mon, let's take this party upstairs.\" Lily grabbed Cyrus by the wrist and tossed him over her shoulder. \"Find somewhere for sleeping beauty here to relax.\"\n\nDana groaned, her thighs burning with desire. \"Ugh, fine.\"\n\nTristan's body was clearly out of gas, but now the room was on fire. The air had become thick with smoke, but all Dana could think about were the curves of Lily's ass, the softness of her breasts. How she wanted to feel her lips all along her body, to pin the succubus down and see how many fingers would fit inside of her.\n\nShe groaned on the stairs and sank to the floor.\n\n\"Get your ass up here!\" Lily shouted, then tossed Cyrus on the upper landing and came back. \"Shit, you're a mess.\"\n\nDana giggled, then grabbed at Lily's legs. \"I want you to do that thing with your tail. It's all I can think about.\"\n\nLily sighed, then picked Dana up and slung her over her shoulder. \"I assume the bag is Tick Tock?\"\n\n\"Yep, yep.\" From where she hung, Dana could easily grab the top of Lily's butt. She ran her hands along Lily's spine. The fire was now along the walls, the flames roaring below them.\n\n\"Then the gang's all here.\" Lily knelt down, which allowed Dana to squeeze her ass with both hands. An unconscious Cyrus flopped over Lily's other shoulder, his mouth hanging open. She frowned at the mage. Why did he have to cock-block her right now?\n\nLily took them up to the master bedroom and then out to the patio. She tossed Cyrus onto a deck chair as the house ignited, sending smoke into the black sky above. Fire alarms in the house were now blaring, and Dana wondered how long they had been going.\n\nLily shifted, and Dana was now back on her feet. She smiled and put her hands on Lily's face.\n\nThe world came to a standstill, and all she could see was the vision before her. It wouldn't be enough to kiss Lily, or even to fuck her. She wanted to possess her, to make her come uncontrollably, to ride her face until Dana's voice was hoarse from crying out in rapture, to\u2014\n\n\"Cold shower time.\" Lily shoved Dana, and she fell backward over the railing, now tumbling through the air. She pinwheeled her limbs about for several moments before slamming into the water below, letting out a gasp as her body snapped and then reset itself in seconds. In her belly, the Dragon Seed burned, and she groaned beneath the water, her fingers running along her bare thighs and pulling aside the crotch of her bathing suit.\n\nIt was a burning need, now, and without Lily to see her through it, the hundred-yard distance from shore didn't matter. Maybe if she could get herself off, she could concentrate on something other than the lust that was overriding her brain.\n\nThe first orgasm only took her a few minutes, but she was left unsatisfied. The second took a bit longer, but accomplished little more than to fuel her desire, and she was strongly considering swimming to shore and finding somebody, anybody, who would be willing to fuck her.\n\nFrom above, a shape descended and snatched her up from the waves. It was Lily, who wore a determined look on her face. Dana frantically rubbed at her clit with one hand while grasping for the succubus with the other. They were headed out into the darkness of the waves, but after a few minutes, she realized that they were actually flying toward a distant light on the horizon.\n\nThe cargo ship loomed up at them like a tiny metal island, and Lily dropped Dana roughly in between a couple of large shipping containers. Her legs were broken, and she floundered about as her bones realigned. There was a brief moment where her mind was normal, while her bones were fusing, and then the lust returned.\n\nUp above, she could see the top of the bridge. Was there someone up there who could help her? She was almost to her feet, but her sea legs were garbage, and she tipped over just as Lily disappeared.\n\n\"Please,\" she begged. \"Please, help me. I need to get off.\"\n\n\"No amount of getting you off is going to help you. We need to fill your belly with something better than jewelry.\" Lily pressed her lips to Dana's and pushed her backward. The soft fabric of Tick Tock pressed against the metal door of a nearby container, making a rustling sound.\n\nYES! Dana's knees went weak as the succubus pressed her back against one of the shipping containers. All she wanted was to have her body explored, to discover new realms of pleasure, to experience\u2014\n\nThere was the rasping sound of metal, and Dana was kicked hard, her body tumbling into darkness. She bounced off the hood of a car that had been strapped down for transport, then fell to the ground.\n\n\"Go to horny jail,\" Lily told her, then slammed the door of the shipping container. Dana let out a cry of rage that was lost on the sea as the darkness closed in around her. Through the thick steel, she thought she heard Lily shout something, but it didn't matter. She was already breaking into the car, praying desperately that it had a stick shift.\n\n<center>\ud83d\udd12\ud83d\udd12\ud83d\udd12</center>\n\nWhen Cyrus opened his eyes, he was sitting on a bench overlooking the ocean from a cliff. The smell of salt in the air reminded him of Italy, and he turned to see that he wasn't alone.\n\nIt was Lily, the succubus. The unrepentant heathen was dressed as a nun, and she had her hands together as if in prayer. She opened one eye and winked at him, then opened her hands to reveal that she wasn't praying. In fact, she was eating a hot dog, and she made a point to shove the whole thing in her mouth in one bite, squirting mayonnaise and mustard all over her habit.\n\n\"Disgusting trollop,\" he said, then put a hand against his head. He felt pressure just behind his eyes, and he thought he might be sick.\n\n\"That would be the concussion,\" she told him, then held up a plate with another hot dog on it. \"Hungry?\"\n\n\"What are you doing here? Where are we?\"\n\n\"Oh, I think you know.\" She smirked and gave the hot dog a poke. It wiggled like a snake, and then a pair of feet burst through the side of the bun. She set it on the ground where it did a little dance in front of them.\n\nCyrus kicked the hot dog, sending it over the side of the cliff.\n\n\"Now that's fucking rude, he was mid-routine!\" Lily scowled at him. \"Though, to be fair, half of it is just the Worm.\"\n\n\"You're in my head,\" he told her, then went to open his coat. \"You realize that this is a violation of our oath.\"\n\n\"It would be, if the timer hadn't expired.\" Lily waggled her hand back and forth, and the sun set over the ocean and then rose again. \"You've been out about sixteen hours, with a few more for good measure.\"\n\n\"How?\" Cyrus put a hand to his head and winced. \"Ow, fuck!\"\n\n\"Ooh, such language. You got knocked out. The Black Palace burned to the ground, but I managed to get you to safety before the whole place went up. Stung you to keep you relaxed for the flight, 'cause it would have caused problems if you had woken up suddenly. Technically not a violation of our pact. You should know better than to make a deal with a demon.\" Lily stood from the bench and put her hands on her hips. \"As for your little trick to boot me out of here, you're in pretty bad shape. Requires more concentration than you can muster.\"\n\n\"So this is it, then. You have me at your mercy?\" He sat back and let out a sigh. \"And the seed? What happened to it?\"\n\n\"In our possession.\" Lily fashioned up a mock version of the Dragon Seed. \"We held a vote, but you were taking a nap. Worked out for us in the end.\" She tossed him the necklace, but he ignored it, letting it bounce off his chest.\n\n\"How long am I going to be in here?\" he asked. \"I know you can't eat me until you seduce me. You've already played your hand in letting me know where I am. So how long do you intend to drive me mad?\"\n\n\"Oh, I plan on being on your mind for the rest of your life.\" She sat down in his lap, her legs spreading wide to reveal that she was naked beneath the habit, save for her leather boots. \"I would be happy to come to an agreement with you. We could explore so many things together.\"\n\n\"If I have to feign celibacy for the next thirty years, I will do it. I will foil you at every turn, foul temptress.\" He refused to spend an eternity in her belly, undergoing God knew what torment. \"You will find that I am not easy prey.\"\n\n\"Oh, I do love a challenge.\" She leaned in close, her breath hot on his ears. Smoke was curling up around her face, her clothing starting to smolder. \"I could just kill you instead. Strangle you in your sleep, and be done with it. Would be way faster. What do you think?\"\n\nCyrus felt his blood chill at the offer, but not because it frightened him, but because he wanted to accept. The idea that he would give up so quickly was terrifying.\n\n\"What choice do I have?\" he offered in response. \"It's the illusion of choice. If I'm being truthful, I don't want either option. I choose to live.\"\n\n\"Interesting. And you think you're deserving of such a choice?\" She slid off his lap and looked out to the sea. \"Is that the same choice you would have offered me? Offered us? Would you let us go, regardless of who had the necklace?\" Her habit was smoking now, and pieces of it fell away to reveal a large pair of wings that extended ominously behind her.\n\n\"I...\" He dropped his eyes in shame. Lying to the succubus was a stupid idea, and she had him dead to rights. If their positions were switched, he would have killed her already.\n\n\"That's what I thought. Don't think I wasn't aware that our pact didn't extend to little miss psychopath, either. My vision is far better than yours at night, and I took my sweet ass time getting back until Dana drowned her ass.\"\n\n\"Tasia. Is she...\" He didn't even bother asking the question, because he knew the answer. Cyrus crossed his arms in front of his chest and took a deep breath. Maybe, if he could hold off her advances long enough, his head would clear and he could utilize the Enochian chant to burn her out of his mind. Maybe then she would simply snap his neck and be done with it. \"Never mind. I'll have you know that I won't go down without a fight.\"\n\n\"I would expect no less of you.\" She put her hands on his knees and pushed his legs apart. \"And I suppose you should expect no less from me.\"\n\nHe took a deep breath and tried to clear his mind, but that sharp pain continued to haunt him. Being unable to focus meant that he was essentially powerless, and he knew that she would toy with him until his inevitable end. She sat on his lap and pressed her hand to his chest, and there was a surge of pressure in his groin as his cock stirred in his pants.\n\n\"If you're wondering about that, it's because I have dosed you with a different kind of venom. I want it to be crystal clear that you have no chance of resisting, that there is no exit strategy, no possibility of winning. Everything that happens from this moment forward is completely out of your control, Master Cyrus.\" Her hands were on his chest now, and his heart was pounding. She felt good up against him, and he hated it.\n\n\"No,\" he whispered, his voice cracking. \"Please, don't.\"\n\nShe grabbed the hair on the back of his head and yanked it back. \"Begging? Are you really that pathetic?\"\n\n\"Yes.\"\n\n\"And if I had begged, would you have granted mercy?\"\n\nHis shoulders slumped, and he shook his head no. Decades of hunting the most vile creatures on Earth had taught him that mercy wasn't a gift to be given. There was always a balance, and a creature like her did not have a proper place in it. Neither did Dana, or the mimic for that matter.\n\nOh god, the mimic. All he could remember was seeing glimpses of it around the gunfire, and hearing screams, the memory sending chills down his spine.\n\nLily leaned in and placed her lips against his ear. When she breathed, he could feel the heat of it, and her tongue caressed his earlobe.\n\n\"I'm a creature of Hell, Cyrus. By every right, I should suck your soul out through your eyes and allow it to fester with the others for all eternity. It's all anyone expects of me, but there's something else that you should know, something even more important.\"\n\nShe went still, her breath hot on his cheek. He waited for her to finish, but she clearly was waiting for him to ask.\n\n\"What is that?\" he inquired, more than a little afraid of what the answer could be.\n\n\"Nature may have a hand in it, but our choices make far more monsters than anything else.\" She moved off of him and took a step back. The habit was gone now, and she wore a blood red corset and a black miniskirt. \"So the next time you come across a boogie man in the dark, I want you to stop and consider that maybe, just maybe, the next decision you choose is what makes you the true monster.\"\n\nWith that, she was gone. He looked around, puzzled by her sudden exit. Wondering what kind of game she was playing, he stood and walked around, only to discover that he had been placed on a small island in the middle of nowhere. Hours passed as he wandered aimlessly, and he was in the middle of contemplating a swim when he woke up.\n\nHe was in a hotel room, and his head was pounding like crazy. He sat up and caught a beam of sunlight out of the corner of his eyes, which nearly made him puke. He covered his eyes with his hands to gradually let the light in by spreading his fingers. From what little he could make out, he was in a bedroom, and once his eyes adjusted, he saw that several bottles of water and a bottle of aspirin had been put on the nightstand.\n\nHe took the pills and swallowed some water, his mouth feeling unusually dry. He couldn't tell if he was still asleep or not, but he did notice a note left by the aspirin, so he picked it up.\n\nYou're in an empty house, the note said. No idea when the owners will get back, so get your shit and bail.\n\nHe sighed and stood, his head immediately throbbing. He dug around in his pockets and discovered that his phone was still there, so pulled it out to make the call. He squinted at the screen to try and make out the keypad when he caught his reflection in the mirror.\n\nThe word DICK had been written across his forehead in permanent ink. Groaning, he went to rub it off when he heard someone moan in agony. Following the sound, he found himself in a bedroom down the hall, and lying on the bed was Tasia. She looked to be in rough shape, and when he rolled her over, he discovered that a pair of intricately drawn devils with huge dicks had been drawn on her cheeks in such a manner that it looked like they were fucking her nose.\n\nThere was a note next to her bed, and Cyrus picked it up.\n\nSome choices are harder than others. Don't make me regret mine. It was signed with a kiss, and he could only shake his head in amazement as he dialed the number for the local Order chapter to come extract them. Once he had activated his phone's GPS, he held up the note Lily had written him and just shook his head again. He wasn't sure what he was going to tell his superiors, or even what Tasia herself may remember, but it was clear to him that the succubus was giving him a choice. Her words still rang in his ears, because he knew that he wouldn't have shown her the same amount of mercy.\n\nAnd now that the choice was his, he had no idea what to do with it.\n\n<center>\ud83d\ude08\ud83d\ude08\ud83d\ude08</center>\n\nI really hoped you enjoyed that chapter, I absolutely adored writing that Tick Tock scene.\n\nFolks, the story is almost over. One more chapter to wrap this tale up, I can't wait for you to see it!\n\nThanks to all of you who've been reading, I really appreciate the emotional support. I get a chance to write every day because of you lovely human beings, and I hope that you are doing well. Be kind to yourselves and I will see you next time for the stunning conclusion to Dead and Horny!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "succubus",
        "zombie girl",
        "dragon boi",
        "action sequence",
        "that hallway scene though",
        "oh god so much blood everywhere",
        "tick tock motherfucker",
        "no sex this time just violence",
        "and some light oceanic masturbation",
        "go to horny jail"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/dead-and-horny-ch-11"
}