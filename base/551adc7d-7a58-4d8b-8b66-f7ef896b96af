{
    "title": "Two Hundred Dollars Ch. 04",
    "pages": [
        "177 Dollars\n\nTry as she might, Bailey couldn't get herself into Kent's room for the first two days of the long weekend.\n\nThe urge from underneath came forward, pressing at her, a nearly physical pressure twisting at her lower abdomen, pushing her hips in his direction. But every time she stood up, preparing to walk over to his room and make a mark on the board, she got one step and stopped. She tried not to think about the thing that stopped her.\n\nOn Saturday night, she told herself she'd sleep on it and she'd feel better in the morning. Maybe she'd creep in on him in the wee hours. Bailey tried to force the belief into her mind that she really just wanted to double it up on Sunday.\n\nThe whole day of Sunday went by, too, and every time she thought she'd take a break from her homework and take a couple bucks off her tally, she froze up the exact same way.\n\nAs much as she'd gotten herself past it once, just long enough to blank out the stupid image in her brain and reach orgasm, Bailey still found herself stuck.\n\nWorse yet, she'd almost recovered. She'd thought she could take Kent back as her own and write Laura out of the picture. That's why she'd proposed the whole \"show and tell\" thing, to bring something new into it, something she owned.\n\nThat hadn't gone as planned. She'd offered to pose for him, and how did he want her to pose?\n\nIn Laura's position.\n\nShe'd skated past that once, but as soon as she'd finished her orgasm, it had come back to haunt her.\n\nChrist, why does this even bother me? She did me a god damned favour, after all. Why does it feel like my best friend ate my dessert, finished my jigsaw puzzle and... and... what?\n\nWhat did she do that was so wrong?\n\nBailey couldn't put her finger on it, but as the sun set on Sunday evening, she knew the image of her friend, her skirt pulled up while Kent spanked her, would block her forever if she didn't find a way to do something about it.\n\nShe picked up her phone and opened the texting app. It took her about ten tries to compose the right message to Laura.\n\n\"Java Cafe? Ten minutes. You good?\"\n\nOf all the messages she'd considered, that one seemed simplest.\n\nOnly seconds passed before the reply came back.\n\n\"Sure!\"\n\nBailey stepped forward and, this time, didn't freeze after the first step. She called that a good sign, slipped on her fall jacket, her boots and hit the door.\n\n=============================\n\nShe arrived at the cafe ahead of Laura and pulled out her e-reader from the inside pocket of her jacket. She always kept something in there from the school's library, rotating fictional novels as fast as she could. When Bailey entered a cafe like this, she automatically took the nearest bar stool at the nearest table and started reading. The staff never bothered her, as long as she didn't clog things up at peak times, and she occasionally purchased something anyway.\n\nHer mind refused to stay on the plot of the book, however, instead focusing on what she planned to say to Laura when she arrived. She needed to explain to her friend that she'd overstepped her bounds, that she had to leave the Kent-and-Bailey issue to Kent-and-Bailey and never get involved-\n\n\"Hey!\" a joyful voice proclaimed from behind her.\n\nAs she sat on a high bar stool made, Laura easily wrapped her arms around Bailey's waist and gave her a giant hug.\n\n\"Hey,\" Bailey kept her tone much more conservative, carefully sliding the e-reader back into her pocket.\n\n\"Ha,\" Laura exclaimed, coming around to sit next to Bailey, \"you could start with 'thank you'?\"\n\n\"Thank you?\"\n\n\"You must have noticed by now,\" Laura held up two fingers. \"It wasn't the Great Pumpkin that took it for you.\"\n\nLaura's enthusiasm bubbled over in a way that stifled the serious matter Bailey wanted to discuss.\n\n\"Yeah,\" Bailey stomped on her emotions and managed a smile, \"Thanks.\"\n\n\"So?\", Laura doffed her gloves and beret to sit next to Bailey. \"Have we been keeping up?\"\n\n\"Oh, sort of, yeah.\"\n\n\"Sort of?\"\n\n\"Look,\" Bailey said. \"About that. I really don't-\"\n\nLaura held up her hand and Bailey, already feeling awkward about even broaching the subject, stopped talking.\n\n\"You want my help again,\" Laura's tone made it a statement instead of a question.\n\n\"No!\" Bailey said instantly before she calmed down. \"No, it's not that.\"\n\nLaura waited patiently, her eyebrows sinking in confusion as she stared at Bailey, watching her friend collect her thoughts through several deep breaths.\n\n\"What's wrong?\" Laura asked.\n\nYeah, idiot, the voice in her head prodded at the deeper recesses of her mind, What. Is. Wrong. With. You?\n\nBailey couldn't find her words for a solid minute as the feelings inside her head chased each other around. Part of her wanted to lash out in a rage at her friend, but the earnest, almost lovingly concerned look in Laura's eyes made her feel absolutely idiotic about even entertaining the faintest hint of anger. Laura honestly didn't understand, and you couldn't rage at your friend merely because of her ignorance.\n\nWorse than that, Bailey had no way to educate her.\n\n\"This debt,\" she began. \"It's mine, you see.\"\n\n\"Right...\"\n\nBailey inhaled, trying to figure out how she could approach this in a way that didn't ruin her friendship.\n\n\"When I saw two dollars missing,\" she explained. \"I thought Kent was pitying me.\"\n\nThere, she thought, that should cover it. The problem is that I don't want pity. I don't want it from Laura. I don't want it from Kent. It's a simple matter of pride, that's what this is. Kent and Laura upset my sense of pride and that explains everything.\n\nBailey's body flooded with a sense of relief, confident she'd finally come to terms with her emotions.\n\n\"And now that you know it was me?\" Laura trailed off suggestively, turning her head slightly to peer closely at her friend.\n\n\"It's like you're pitying me,\" Bailey finished resolutely.\n\n\"Oh,\" Laura said. Her face became stone and she repeated, \"Oh, I see.\"\n\nI hope you see, Bailey watched the expression on Laura's face loosen again as emotions flowed over her features like the shadows of clouds sweeping across a field of wheat.\n\n\"Alright,\" Laura bit her lip for a moment. \"Give me Kent's number and we'll straighten it out.\"\n\nBailey, feeling relieved, handed her phone over to Laura, who already knew her PIN and unlocked her phone. As she scrolled through Bailey's contacts, Bailey started wondering what she planned to do.\n\n\"Straighten what out, exactly?\"\n\nLaura waved a hand and mumbled at her as she copied the number over manually and sent a text. It took only a moment for the reply to come.\n\n\"He's on his way,\" Laura nodded confidently.\n\n\"Why are you-\"\n\nLaura stopped her with a hand wave again. \"Talk about something else,\" she said.\n\n\"I-\" Bailey stammered in frustration. \"Alright, fine.\"\n\nKent had apparently agreed to come to them and Bailey felt helpless against the Laura's gleeful implacability.\n\n=============================\n\nFor his part, Kent had no idea what the girls had planned. Laura's text message had said only, \"We're at Java Cafe. Can you come now?\"\n\nHe'd texted back \"kk\" and thrown his outdoor clothes on. The sun having long since set, the air had cooled and a light October wind worked away at his exposed flesh. He didn't have far to walk, with only two blocks to the cafe, but he had to wonder what Laura wanted -- and why she instead of Bailey had sent the text. Really, he only assumed the other part of the \"we\" in the text message referred to Bailey. That seemed reasonable, under the circumstances.\n\nSure enough, even before he entered the cafe, he saw Bailey and Laura sitting side by side on high bar stools at the table nearest the door, their backs to him. Both wore their fall jackets and Bailey wore her standard pair of blue jeans while Laura sported a pair of beige dress pants.\n\nNo skirt today, I suppose, he thought, cursing the weather. But she's got a pretty tall pair of boots on.\n\nKent pulled the door open and felt the welcome rush of warm air hitting him, warming up his face and especially his ears. He exhaled heavily to expel the coldness in his lungs before taking a long, sweet draught of the coffee and cocoa infused air of the cafe.\n\nLaura saw him first and smiled. Bailey turned to him next and he caught a slightly pained expression hiding behind her smile. The awkwardness of the moment struck him hard and, as he didn't like coffee and rarely went to the sorts of places where you could sit around and not buy anything, the awkwardness of the empty table hit him even harder. A part of him seized on this and insisted that they ought to purchase something to deserve to sit in a restaurant and take up space.\n\n\"Hello,\" he said, quickly adding, \"Hot chocolate? Coffee?\"\n\n\"Ooh,\" Laura jumped on it quickly, \"Hot chocolate.\"\n\n\"Mocha?\" Bailey asked.\n\n\"Sure,\" Kent walked past their table, \"Be just a sec.\"\n\nThe girls watched quietly as he went by them before returning to their conversation. Kent barely heard Laura whispering something about, \"...got a good thing going here...\" but lost the rest of her sentence in the general hubbub of the population.\n\nWith no one in line, he made the order for two hot chocolates and a mocha.\n\n\"Whipping cream?\" the barista asked.\n\n\"Sure.\"\n\n\"Cinnamon on any of them?\"\n\nThat seemed obvious on a hot chocolate, and Kent was pretty certain Bailey put cinnamon on her mocha when she made one at home.\n\n\"Yes.\"\n\n\"Do you want any of them with pumpkin spice?\"\n\n\"I, uh,\" Kent turned around to look at the girls huddled together conspiratorially. \"Do you want pumpkin -\"\n\n\"No!\" they chorused back in unison, Bailey adding, \"Christ, no.\"\n\n\"Why is that even a thing?\" Laura asked.\n\n\"October is stupid,\" Bailey put in.\n\nThis threatened to turn into a cafe-wide discussion of religious proportions, but most of the patrons participated only satirically.\n\nKent paid for the order and came to the table to wait for it to show up.\n\n\"So... how are things?\"\n\n\"Good,\" Bailey said. \"Good. You?\"\n\n\"Fine.\"\n\nLaura watched this awkward back and forth between them for a moment.\n\n\"So, Kent,\" she said.\n\n\"Yes.\"\n\n\"Bailey is a little upset,\" Laura's voice lilted as if she didn't quite take Bailey seriously.\n\n\"I see,\" Kent glanced at Bailey, worried that he had perhaps gone too hard on some previous occasion, but Bailey didn't meet his eyes.\n\n\"She's worried that, when I helped her out, I was feeling sorry for her,\" Laura turned to look at Bailey, who twisted her lips in partial agreement.\n\n\"Ah,\" Kent said, looking at Bailey carefully. \"Even though you let Laura, uh, 'help out' before?\"\n\nBailey nodded, biting the left side of her lip. \"She owed me, then.\"\n\nThe drinks showed up, interrupting their conversation. Laura remarked, \"Ooh, with whipped cream and cinnamon. Thank you.\"\n\nThey sipped their drinks and breathed in the fresh scents to cover their clumsy conversation.\n\n\"Were you?\" Kent eventually asked Laura.\n\n\"Was I what?\"\n\n\"Feeling sorry for Bailey?\"\n\nLaura tilted her head back and forth.\n\n\"Well, it did seem like she bit off a lot,\" Laura turned to look at Bailey, \"But I never thought she couldn't handle it. Really.\"\n\n\"So why did you help?\" Kent asked.\n\n\"To be honest,\" Laura shrugged. \"I like helping. I owed her a huge favour. Plus, it seemed kinky.\"\n\nThey stared at her for a moment, expecting her to say something further.\n\nLaura shrugged again, more defensively this time. \"That's all.\"\n\nThey sipped their drinks for a while longer, absorbing that. The sky grew dark outside and the wind bent at the floor to ceiling window panes. October had decided to come in hard.\n\n\"And how do you feel now?\" Kent asked Bailey.\n\n\"Alright,\" Bailey's voice came on firm and confident. \"I can take care of myself and pay my own debts.\"\n\nLaura's hand patted Bailey's over her cup. \"No one ever said you couldn't.\"\n\nKent smiled at the patronizing tone and sipped his hot chocolate.\n\n\"We should get going before it gets too cold,\" Bailey remarked suddenly, meeting no one's eyes.\n\nKent recognized that particular variety of shyness, though, and the fact their half-finished drinks had arrived in disposable containers came in handy. No way they'd leave partial beverages behind, after all -- not in their respective financial states.\n\nHugging their paper cups close to their bodies, they slipped out of the cafe into the cold autumn air. Kent felt a pang of envy for the girls' long, ear covering hair. He didn't grow his that long and he hadn't thought to wear a hat.\n\nWell, good for them.\n\n\"Were you busy when I texted?\" Laura asked Kent.\n\n\"Not too busy.\"\n\n\"I mean,\" she clarified. \"Do you need to do anything right away?\"\n\n\"Nothing left that's due Tuesday,\" he replied, walking between them. \"But there's always some damn thing to do next.\"\n\n\"I'll be glad when school is done,\" Laura's voice turned mopey. \"Years left yet, though.\"\n\nLaura and Bailey turned the conversation to their classes, sipping their hot drinks down, making them last all the way back to the residential side entrance that led to Kent and Bailey's basement apartment. Bailey got to the door first and unlocked it, waving first Laura and then Kent in before she closed the door behind all three of them.\n\nA moment of awkwardness occurred in the hallway as they stopped outside Kent's open bedroom door.\n\n\"Are we all okay now?\" Laura asked, mostly talking to Bailey who had stopped to lean against the wall just past the doorway.\n\nShe turned back to look at Kent, her expression serving to repeat the question to him.\n\n\"I don't think I ever had a problem,\" Kent pointed out. He slipped past Laura and turned on the light in his bedroom as he entered. He kicked off his shoes and left them along the wall under the whiteboard.\n\nLaura followed him in, Bailey immediately on her heels. The girls removed their jackets at the same time Kent did, throwing them over the back of his chair. Bailey slid out of her shoes but Laura, inconvenienced by the size of her boots, kept them on.\n\n\"So,\" Laura turned to the white board, \"I'm not supposed to help out. But you also didn't kick me out.\"\n\n\"That's not why-\" Bailey started, but choked when Laura took the marker up in her hand. \"Hey, you shouldn't-\"\n\nBailey stopped again as Laura did something unexpected. Instead of making a tick mark in the little box where tick marks belonged, she drew another box next to it and wrote, \"$3\" in it.\n\n\"What is that?\" Kent's voice sounded both suspicious and upset.\n\n\"It's the price of a cup of hot chocolate,\" Laura announced, mostly directing the statement at Bailey rather than Kent. \"That's not yours-\"\n\n\"No,\" Kent said firmly, moving forward and interrupting the exchange between the girls.\n\n\"What?\" Laura turned to him.\n\n\"That was my treat,\" he reiterated, his tone lightening only a little as he faced her from inches away. \"I don't take payment for gifts.\"\n\nSlightly taller than she, Kent reached over her shoulder to take the brush and wipe away her hastily made box.\n\n\"Not happening,\" he told her and backed away.\n\nLaura's shoulders fell and both Kent and Bailey could see her shaking with some uncontrollable emotion. She turned to face away from both of them, staring at the empty place on the board, and since neither of them could see her expression, they didn't know what emotion gripped her.\n\n\"Fine,\" she announced, her voice trembling. She flipped the lights down to their lowest setting and turned on Kent. \"If you can give a gift, so can I. And you'd better not turn it down, because that's rude, too, isn't it?\"\n\n\"I-\", Kent stammered, seeing the look on her reddened face and her trembling chin. Wondering if he had somehow managed to hurt her feelings, he replied, \"Alright.\"\n\n\"Hm,\" Laura emphasized as she turned back to the whiteboard and made a tick mark in the empty space where her recently drawn box should have lain.\n\n\"A gift?\" Bailey asked, her mouth hanging open.\n\n\"Just so,\" Laura turned her nose up. \"It's Thanksgiving for you Canadian people this weekend, isn't it?\"\n\nWhile they might have moved to Canada, Laura's family clearly hadn't adapted to the Canadian idea of celebrating Thanksgiving in October.\n\n\"Yes,\" Bailey replied.\n\n\"So I'm giving thanks to a Canadian,\" Laura intoned.\n\nIf I didn't know any better, Kent thought, I'd think Laura decided much earlier tonight that she wanted me to spank her and is getting there come hell or high water.\n\n\"Dammit,\" Bailey muttered under her breath.\n\n\"What?\" Laura asked.\n\nBailey seemed to roll her eyes but managed to turn away from Kent before he could make certain of her expression. She snatched the marker from Laura and made a second mark, right next to hers, outside of the box.\n\n\"My mocha was at least as good as your hot chocolate,\" Bailey pointed out. \"I can be as.. generous as you are.\"\n\nKent stood silent, having drifted away to lean up against his bed, watching the interplay between the two girls in disbelief. He had -- wisely by his figuring -- decided not to interfere in the slightest.\n\nThey glared at each other a moment, Laura feigning innocence and Bailey's expression so loaded with conflicting emotions Kent couldn't dare take a guess what she felt, before the two of them turned as one to face him.\n\n\"I'd say 'Merry Christmas',\" Bailey put her signature snark into her voice, \"But we're nowhere near.\"\n\n\"How do you want us?\" Laura smiled.\n\n\"Oh no,\" Kent waved her off with a finger. \"This is your gift. You decide.\"\n\nLaura looked at Kent carefully, peering at him as she tried to decide what to do.\n\n\"We're doing it together,\" Bailey cut in and gently nudged Laura toward the bed, jerking her head to indicate Kent should move.\n\nObligingly, Kent shifted away to make room. Bailey pushed Laura up against the bed and, with a shove none too polite, leaned her over the bed.\n\n\"Oh!\" Laura chirped in surprise, catching herself on her hands.\n\nBailey took a spot to her left, leaning over until her elbows touched the mattress. Laying as low as the bed did, it left her upper body horizontal, much farther than she'd bent over even by the washing machine. Laura assumed the same pose, pushing her hips right up next to Bailey's, but as she still wore her boots, bending over that far left her cheeks angled higher in the air.\n\n\"So what are we doing?\" Kent asked as he stood behind them.\n\n\"Over top,\" Laura said. \"So ten, right?\"\n\n\"It's a gift,\" Kent pointed out. \"I didn't want to assume.\"\n\n\"Ten each,\" Bailey stated, firming the matter up. \"Get on it.\"\n\n\"Back and forth?\" he asked, placing his hand on Bailey's left cheek.\n\n\"You spank,\" Bailey retorted swiftly, \"we'll count.\"\n\nWith all reservations discarded by the tone of her voice, he let her have a quick shot on her left cheek, shaking the entire bed against which she'd braced herself.\n\n\"One,\" she said.\n\nKent switched immediately to Laura's slightly elevated cheeks, noting the girl was actually standing up on the toes of her boots. He gave her a shot on the right side.\n\n\"One,\" Laura said.\n\n\"It's two actually,\" Bailey said. \"We count them all together.\"\n\n\"Oh,\" Laura giggled. \"Two.\"\n\nWith the intention of keeping them guessing, Kent stayed on Laura and slapped her left cheek.\n\n\"Three!\" she called out.\n\nFeeling the thickness of her pants, he slapped her left cheek again, low and hard.\n\n\"Oh! Four!\"\n\nHe switched over to Bailey, striking three times at her right cheek, the one nearest Laura.\n\n\"Five,\" she said placidly, \"Six. Ah, seven.\"\n\nBack to Laura, he gave her two shots on the left cheek.\n\n\"Eight, nine,\" Laura winced. \"Does he just hammer the same spot like that?\"",
        "\"Yeah,\" Bailey sighed. \"Pretty much. Oof!\"\n\nKent had just nailed her lower on the right. \"Ten,\" she announced.\n\nHe then decided he ought to go one set straight across, starting with Bailey's left, then right, then Laura's\n\n\"Eleven, Twelve,\" Bailey called out.\n\n\"Thirteen, Fourteen,\" Laura added.\n\nKent added three more shots straight to Bailey's lower left cheek, which she counted off.\n\n\"The last three are mine then,\" Laura said, rising up higher on her toes.\n\nHe put his hand on her back, then slowly moved it down and around both her cheeks.\n\n\"Any spots you want me to cover?\"\n\nShe sniffed hastily while Bailey pulled herself up on the bed and sat cross-legged to watch.\n\n\"Wherever you like,\" she said. \"But you haven't done the right very much.\"\n\n\"I can fix that,\" Kent's hand moved to the right cheek and squeezed, feeling Laura shiver in the tightness of his grip.\n\nBailey harrumphed and leaned forward to rest her chin in her hands.\n\n\"Ready?\"\n\n\"Mm-hm.\"\n\nHe spanked her on the lowest part of her right side and, the moment she said, \"Eighteen,\" struck her again higher.\n\n\"Nineteen,\" she cried out, raising herself up even higher on her toes as if trying to escape his onslaught.\n\nHe struck her again, hard on the side of her cheek, a good angle for his right hand.\n\n\"Twenty!\" Laura's voice carried a heavy sigh of relief.\n\nShe stood up slowly rubbing her ass with both hands.\n\n\"Thank you for your very kind gift,\" Kent said, laying it on as thickly as he could, while taking a seat on his chair.\n\n\"You're welcome,\" Laura said, still facing away from him and squeezing herself. \"Maybe I'll see you at Christmas. Or at proper Thanksgiving.\"\n\nKent had the vague idea that Laura didn't have the willpower to wait two and a half months, but said nothing.\n\nBailey remained on the bed, her chin still in her hands.\n\n\"Gifts having been delivered,\" she intoned. \"I still have a debt to pay off.\"\n\nShe hopped out the bed, landing cat-like on her toes, and walked past Kent to the whiteboard.\n\n\"So I get to stand here and watch?\" Laura asked, a dismal sadness in her voice. \"Awk-ward.\"\n\nBailey paused with the uncapped marker in her hand and let out a sigh. She made her mark and reluctantly -- stiffly -- held the marker in the air. Laura jumped over to grab it and quickly made a mark of her own.\n\n\"Last time,\" Bailey warned.\n\n\"Fine,\" Laura's high pitched voice answered instantly.\n\n\"And,\" Bailey turned to Kent on his chair, \"I'm doing it without my pants.\"\n\n\"Five, then,\" he replied, waving a hand at her pants.\n\nA paused ensued, in which Kent waited for Bailey and Bailey glared back at Kent. Without moving her eyes, Bailey said, \"Laura.\"\n\n\"Hm?\"\n\n\"My jeans, please,\" she said, still looking at Kent.\n\n\"Oh,\" Laura giggled.\n\nShe started fiddling with Bailey's exceedingly tight button, but found she had to kneel down to fight with it properly. From that position, she finally threaded the button backwards through the eyelet and popped Bailey's waistband loose. The zipper went next and Kent immediately saw that Bailey wore the white pair of panties, the ones he'd once chosen for her -- the ones slightly transparent at the front.\n\n\"How far down?\"\n\n\"All the way,\" Bailey spoke softly, tilting her right knee in to her left. \"He's already seen this much of me.\"\n\n\"Ri-ight,\" Laura said, pushing the jeans over Bailey's narrow hips, down over her thighs, through the bottleneck of her squeezing knees and finally down to her floor.\n\nBailey lifted her feet out of her jeans and pushed them to the side.\n\n\"You're not going to ask me to take your thong off, too, are you?\" Laura's voice warbled.\n\n\"No,\" Bailey smirked. \"Not today.\"\n\n\"Oh, good,\" Laura stood up. \"Do me, then.\"\n\nBailey raised an eyebrow.\n\n\"Well, it's weird if you're like that and I'm like this,\" Laura pointed at Bailey's and her own clothes in turn.\n\nBailey shrugged and unbuckled the black belt Laura wore around her waist. Though there was no need to do so, Bailey unthreaded the entire length of the belt and dropped it on the ground.\n\n\"Am I taking your pants all the way off?\" Bailey asked. \"'cause then you need to lose the boots.\"\n\n\"Right,\" Laura replied with a twitch and bent over to unclasp the boots, a complicated procedure involved three buckles on each ankle. She did this directly in front of Kent, who casually watched the way the fabric of her pants stretched across her round rear.\n\nShe slipped out of the boots and pushed them just to side, where Bailey had dropped her belt.\n\nLaura didn't wear her pants as tight as Bailey did, so the procedure for undoing her pants -- hidden from Kent's eyes -- went much more quickly. In a single flash of motion, Laura's pants hit the floor and Kent stared at the flesh he'd just spanked, barely clothed by a black pair of panties that narrowed into a thong, its fabric tightly buried between her cheeks.\n\nThe warm autumn pants, he decided, had protected Laura even better than Bailey's denim protected her. Her cheeks carried a warm taste of redness, but nowhere near what he had expected from the ten slaps he'd delivered.\n\nKent almost spoke, just to get things moving. But a little voice inside his head barely held him in check, telling him the joy of anticipation outweighed the urgency. Instead, he just watched the two girls staring at each other.\n\nLaura moved first, stepping back into her boots and then bending over to buckle them back together. Bailey stared at her, mouth open, until she finished.\n\n\"You first or me?\" Laura asked Bailey when she stood up again.\n\n\"Oh, please, after you,\" Bailey insisted, pushing her voice a little over the top.\n\nLaura turned to look at Kent and asked, \"Is my way okay?\"\n\n\"Your ass,\" he said.\n\n\"Yes, it is.\"\n\nShe turned her back on him, stuck her hips out and put her hands on her knees. Bailey walked around her and leaned her bare butt up against the desk, crossing her long, thin legs at the ankles. Kent caught a smirk on her face out of the corner of his eye.\n\n\"Ready?\"\n\n\"Yeah. Oh, wait,\" Laura looked over her shoulder, \"should I start over or keep counting.\"\n\n\"Keep counting,\" Bailey said.\n\n\"Alright.\"\n\nLaura took a quick breath and set herself in position again. Kent stood beside her and put his hand on her left cheek. Without warning, he struck her low and hard.\n\n\"Mm,\" she let out a groan. \"It's so different naked.\"\n\n\"Uh-huh.\"\n\n\"Right. Twenty-one.\"\n\nHe struck her again.\n\n\"Twenty-two,\" she sang out. \"You're very focused all of a sudden.\"\n\n\"You did complain about the left cheek.\"\n\nLaura nodded, \"Yes, I did.\"\n\nAgain he struck.\n\n\"Twenty-three,\" she groaned.\n\nA fourth time.\n\n\"Oh, god,\" Laura's voice came out like moan. \"Twenty-four.\"\n\nHe struck the spot a fifth and final time, turning the flesh an angry red.\n\n\"Twenty-five!\"\n\nOnly then did Laura move, both hands going to her swollen rear. \"Ow. Ooh. Son of a -\"\n\n\"My turn,\" Bailey stepped forward instantly, even as Laura straightened and found herself brushed aside.\n\n\"How do you want it?\" Kent asked.\n\n\"I kind of wanted to do it over your lap,\" she said, \"But I guess that won't work for what I have in mind.\"\n\n\"Oh?\"\n\n\"Yes,\" Bailey said. \"I'll have to do it Laura's way.\"\n\nThe tone of her voice, if only Kent knew how to understand what had really bothered her about Laura's interference, should have told him volumes. But he didn't catch it and only shook his head as Bailey stuck her hips out at him and put her hands on her knees.\n\n\"I want you to spank me with both hands,\" she said. \"Two spankings at a time.\"\n\nHe had not seen that coming.\n\n\"Well,\" he said. \"Two double spankings and then one more for five?\"\n\n\"No,\" Bailey said. \"Just four.\"\n\nShe reached back with one hand, hooked her fingers under the waistband of her and pushed the thong down off her cheeks. Almost as an afterthought, she pushed the fabric a little farther down and let it hit the floor.\n\n\"Wow,\" Laura gasped.\n\nFrom their vantage, and with the light still fairly bright in the room, they could see a lot more of Bailey than Kent had seen the night she'd done this over the washing machine. With such thin legs, her lips and the thin layer of fuzzy hair she maintained over them became marginally visible to Kent.\n\n\"What are you waiting for?\" Bailey's voice snapped. \"An engraved invitation?\"\n\n\"Just enjoying the view,\" Kent remarked.\n\n\"Enough of that,\" she said. \"Get on with the spankings.\"\n\nShaking slightly, Kent sat down in his chair and slid it up behind Bailey. Standing, he figured he wouldn't get the best angle. But sitting down, he could slap her pretty hard in the middle of her cheeks. His only regret lay in the fact that she wouldn't be sore in her seat tomorrow.\n\nHe put his hands on her cheeks.\n\nBailey wiggled anxiously.\n\nKent laid his first double spanking on her, perfectly synchronized to shake her body and let the loudest ever slap echo in the tiny, dim basement room.\n\nBailey groaned, \"Twenty six, twenty seven.\"\n\nFiguring for his last shot of the night, Kent laid his last double on her extra hard.\n\n\"Ha!\" she cried out. \"Twenty eight and twenty nine. Christ.\"\n\nBailey reached down and immediately pulled her panties back up. Casually, she sauntered over to Kent's bed and leaned against it, extending her legs straight out and crossing her ankles as she leaned back. Laura, to Kent's surprise, braced her own butt against his desk.\n\n\"So that's how they do it in Utah?\" Bailey chided her friend.\n\nLaura's eyebrows rose, \"That's how they did it my house. But we never took our pants off. And they never spanked us with both hands.\"\n\nBailey blew air up into her hair dismissively.\n\nKent looked at them both: Bailey in her white underwear and bare feet, Laura in her black underwear and ridiculously high boots.\n\nWhy, he wondered, aren't they getting dressed?\n\nBailey had gone well ahead in the count, all things considered, and it didn't look likely they planned to do any more. They could just go about whatever they needed to do with the rest of the evening, but he had no intention of complaining if the semi-naked girls wanted to hang out.\n\n\"Have you -\" Laura stammered, \"Have you taken your panties off for him before?\"\n\n\"Yeah,\" Bailey said. She nodded toward the door, \"Out in the hallway.\"\n\nLaura's eyebrows went up again.\n\nBut still, neither girl moved to leave.\n\nI feel like they expect me to do something, Kent thought, but another possibility entered his mind, or maybe this has absolutely fuck all to do with me.\n\nHe scratched an itch on the side of his head as innocuously as possible, not wanting to disrupt whatever spell held them enthralled while he tried to find someway to contribute to the conversation.\n\nOr you could just listen, his brain whispered to him, you might learn something important.\n\nWhat could he learn?\n\nLaura felt indebted to Bailey, but Laura also just wanted to be spanked. Put that down, for now, to the fact that she came from Utah and that sort of religious background made people weird. Bailey had her pride, she said, and didn't like Laura stepping in. But Laura, already feeling like part of the team, didn't want to find herself on the outside.\n\nWas that all? What else is going on here?\n\n\"I did it your way, over his lap,\" Laura said, \"on Monday, I mean.\"\n\n\"Yeah,\" Bailey replied. \"He told me.\"\n\nKent knew that he had, in point of fact, not told Bailey that detail. So he stood there, listening to them comparing notes on how he'd spanked them, and tried to figure out what they had inside their heads.\n\nLaura looked at Kent, not quite meeting his eyes, almost as if she didn't see him.\n\n\"Don't know if I could do the 'no panties' thing, though.\"\n\n\"Hm,\" Bailey acknowledged. \"You could try it in the dark first. I did.\"\n\nShe caught herself then and literally bit her lip.\n\n\"You mean 'next time'?\" Laura asked, her eyes widening slightly.\n\nBailey sighed and closed her eyes. \"Yes. Next time.\"\n\nLaura smiled in relief then and started unbuckling her boots.\n\n\"But if it's too dark,\" Kent pointed out, getting the sense the enchantment had broken and he couldn't make it worse by speaking up. \"It's still five.\"\n\nLaura looked up at him without pausing. \"Because the discount is for seeing us. I get it. And we definitely saw Bailey.\"\n\nBailey had enough modesty, despite her state of undress, to blush at this.\n\nLaura had her boots off by then and started putting her pants back on. More casually, Bailey came over and fetched her jeans.\n\nKent quietly watched the two girls redress themselves.\n\n\"At least things are fixed now,\" Laura said, finishing up her belt and returning to work on her boots.\n\n\"Quite,\" Bailey agreed. \"Good night, Kent.\"\n\n\"Good night.\"\n\nThe girls unlocked the door and slipped out into the hallway.\n\n=============================\n\nWhen they got back into Bailey's room, Bailey closed the door. Laura turned and put her hands around the back of Bailey's head to pull her in close until their foreheads touched.\n\n\"Are you sure you're okay?\" she asked her friend.\n\n\"Yes,\" Bailey replied, and meant it.\n\n\"And you're really okay with me coming back again?\"\n\n\"When I'm here, though,\" Bailey warned, placing her hands where Laura's neck met her shoulders. \"Okay?\"\n\n\"Okay, okay,\" Laura's grip on Bailey's skull softened.\n\n\"Promise,\" Bailey firmed up.\n\nLaura took Bailey's right hand from her shoulder and placed it over her own heart. \"Your hand on my heart. Promise.\"\n\nBailey put the weird gesture down to a Utah thing and nodded her acceptance.\n\n\"Besides,\" Laura added softly. \"I don't need it as often as you do.\"\n\nBailey looked at her. \"You don't need it at all,\" she pointed out. \"And I only need to do it about once a day to pay off the debt.\"\n\nThis resulted in a tilted head and a sarcastic look from Laura. \"That's not what I mean.\"\n\nBailey leaned back a bit, separating herself from her friend. \"What?\"\n\n\"Really?\" Laura asked. \"Seriously?\"\n\n\"What?\"\n\n\"Alright, fine,\" Laura waved her hands. \"You'll either figure it out or you won't. That part's not my problem. Just let me know the next time you, ah, need some help. Okay?\"\n\nBailey watched her friend leave before she unbuckled her jeans again. A moment later and she was on her pillow, humping away as hard and fast as she could, while the memory stayed fresh and her cheeks still stung. She judged it worth the wait, that breathless anticipation she got from sitting on the edge of Kent's bed with her pants across the room, letting him look at her transparent underwear like she didn't care.\n\nShe heard Laura opening and then closing the outside door.\n\nAnd I owned you, Bailey thought, I took your pose. I took it and dropped my panties and let him do a two handed spanking.\n\nA low, purring moan came out of her throat at that thought, knowing what Kent could see because she'd tried it in front of a mirror, and knowing that Laura had watched her, too.\n\nYou watched me own your ass. It's me he'll remember tonight.\n\nThe orgasm struck then, thundering through her with the power of her victory, and she held her body clenched together as hard as she could, riding her little pillow into oblivion.\n\n=============================\n\nMonday morning, after a long sleep in, Bailey faced another problem of epic proportions. She lay on her stomach in her bed, still wearing her panties and her faded nightgown, and stared glumly at her little notebook.\n\n\"2018-10-07 Su,\" she'd written in the left column. She'd found herself stuck there for several minutes.\n\nThe question nagged at her: did those 'gift' spankings count?\n\nShe could only answer that with another question: count for what, precisely?\n\nWhat is the point of keeping these notes?\n\nBailey remained certain she'd started taking the notes to make sure Kent didn't rip her off. They had proved valuable once already, when she'd conclusively determined that two dollars had gone missing. Admittedly, the bank error had worked in her favour in that case, but she still regarded the detection of the discrepancy as a point in the notebook's favour.\n\nAfter several erasures and restarts, she realized a simple solution.\n\nOn every previous spanking, she'd first noted the dollar value, then the number of spankings with details in brackets. She simply had to write the line in a way that recorded the spankings but kept them off the accounting.\n\n\"gift,\" she wrote, followed by \"10sp.\"\n\nContinuing on the same line, she added, \"$1 4sp (bare, double)\"\n\nThe word 'double' made her smile, because she'd never written it before.\n\nOn the next line, she noted Laura's gift and her much inferior, \"$1, 5sp (pd)\"\n\nAs Laura had merely done \"pants down\" instead of \"bare\", Bailey had outdone her friend.\n\nShe breathed a sigh of relief, tucked the pencil back into the notebook's spiral, and put it back in her dresser drawer between her other pairs of pyjamas and her underwear."
    ],
    "authorname": "xtorch",
    "tags": [
        "spank",
        "spanking",
        "panties",
        "thong",
        "naked",
        "masturbation",
        "contest",
        "rival",
        "competition",
        "exhibition"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-04"
}