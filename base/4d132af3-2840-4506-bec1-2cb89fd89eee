{
    "title": "How to Sell your Smut.",
    "pages": [
        "Writing is personally very fulfilling. It is such a relief and a rush to finish a story or a poem and know that it is done. I don't know about you, but I write for my own enjoyment first but I have become a big fan of receiving monetary reimbursement for my creative efforts, too. \n\nSo, how do I go about it and more to the point, how do you squeeze some pennies from your words of art? The first step is possibly the hardest and this involves practising your writing 'til you're at a stage when you're confident your stories are worth something. There's no time limit on this, it could be years, months or decades worth of work before you feel the time is right. Once the confidence is in place there are a few different avenues you can pursue. \n\n1, Enter Competitions. \n\nJust like this one. Now, I'm not going to promise you a small fortune from this avenue but you get so much more out of writing for competitions, the Literotica ones in particular, than just money. \n\nFor a start you get a theme to write on. Sometimes when the ideas are backed up and the words just aren't flowing a theme can be the kick-start you need to get writing again. \n\nAlso, you get to join in with the banter and laughter in the official discussion threads started in the AH by the gracious and glorious Oggbashan. You'll make new friends, you'll have a shoulder to cry on when your characters just won't get it on no matter how hard you try and you'll get a chance at winning the coveted last place \u2122 award. \n\nAnd that's before you win yourself a prize. Now I know some of you are doing the maths, counting up the number of entries into this competition and some of you are wondering if it's really worth the effort. Well, if you don't join in you definitely won't win the prize but if you do? Well, you never know your luck.\n\n2, Personalised stories. \n\nThere are people who would like a story written for them for their own private use and they are willing to pay an author to write these tales for them. You can sell your services on the online auction sites, though you may have to be careful about the way you word your adverts. I have done this in the past but I did not just write erotica, I found myself writing romance, adventure and even children's stories one Christmas and I thoroughly enjoyed it and made a good chunk of money for my efforts, too. \n\nHow do you find the people willing to pay? This is a bit hit and miss, I'm afraid but having your stories accessible on Literotica is a great way to advertise your wares. I have had several enquiries for my writing services in my time submitting here at this site. \n\n3, E-Publishing. \n\nSome people will tell you that it's easy to get published online, that e-books are insignificant and it's not worth your time to submit to E-Publishers. I'd like to respectfully disagree. \n\nThe E-book business is growing massively, in fact it's the fastest growing part of the books industry. It's a great way to make money and is a way into print publishing, if that is what you desire. E-books have a lot to offer and there are a lot of reputable publishers out there. \n\nThe first challenge is finding out who to submit to. You can find lists of E-publishers online and calls for submissions with a simple google. I suggest you always check out the predators & editors website to check the status of your chosen publisher. It's a great website which posts warnings on bad publishers and let's you know who to trust with your work. \n\nOnce you know who you want to submit to, check out their submission guidelines and follow them down to the very last letter. I cannot emphasise this point enough. You need to get your document to look just how they specify or you run the risk of your story not being read at all. \n\nPublishers will expect you to write a cover letter with a brief introduction of yourself and your story. Don't be afraid to sing your own praises, mention prizes won, praise given of your work but keep things relevant. \n\nThe hardest part is often the synopsis of your story, it's hard to sum up your work of art in just a paragraph. Remember this is not a blurb for advertising purposes, this is to give the editor a flavour of your story so you need to say how the story ends and what the plot twists are. Keep it brief, write a bare bones outline of your story and that should do the trick nicely. \n\nAnd when you receive a rejection letter (it will happen, it's happened to me a few times) don't let it destroy your hopes and aspirations. It is just an indication that you need to either: \n\na) Work on your story some more. \n\nb) Send your story to a different publisher.\n\nIt is certainly not the end of the world. \n\nAlso, just a note about pen names. If you do not want your erotica published under your real name then you need to come up with a convincing Pen Name. You will not be able to use your Literotica nickname, you need to come up with a first name and a last name that works for you. \n\n4, Print Publishing\n\nThis is by far the hardest nut to crack, but will be the shortest of all my points. All the points about E-publishing are valid for print, too. \n\nA lot of the big publishing houses do not accept unsolicited stories, but again you should check online and see what is out there. If you are serious about print, you can look into finding an agent who will help you get your work out there (for a fee) but that isn't terribly easy I'm afraid. \n\nAs Victoria Blisse (my pen name) I am an author in print and I came to that via my E-publisher. A lot of them now offer Print on Demand (POD) options and I do believe this is the best way to go if you want to smell your own book. (Yes, we all do it. New book smell is addictive.) \n\nSo in conclusion, with a little faith, some hard work and plenty of wonderful words you should be able to make money from your hobby, no problem. Please remember me when you make your first million, okay? \n\nGood Luck! "
    ],
    "authorname": "English Lady",
    "tags": [
        "sell",
        "smut",
        "publishing",
        "how to",
        "erotica",
        "e-books"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-sell-your-smut"
}