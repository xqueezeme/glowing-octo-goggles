{
    "title": "No Monkey Business: Week 02",
    "pages": [
        "When I woke up on Saturday morning the house was silent and mom was nowhere to be found.\n\nIt was a week since she had called me into her room and asked me for a little favor. I was heading to college imminently and mom was scared. For eighteen years I had been her closest and, as far as I knew, her only friend. Now I would be leaving. There would be a son-shaped hole in her life, one she intended to fill by having a second child.\n\nThe flaw in mom's plan was that it was a minor miracle that any man had gotten close enough to get her pregnant the first time, a second miracle seemed unlikely. Below clothes that the Founding Fathers would have called frumpy was the body of an angel. But mom's face, the only part of her that she ever showed the outside world, was, well, not so angelic. Although you might see something like it if you went to church, most likely on those gargoyles they have up near the roof.\n\nGiven that, it was no surprise to me that mom's online pleas for a man to impregnate her went unanswered. And so she turned to me. My mom had asked me to be involved in the process, if you catch my drift. She wanted me to help her get pregnant, if you see what I mean. She wanted to fill that son-shaped hole in her life by having her son fill her hole, if you grasp my meaning.\n\nI had agreed, albeit reluctantly, to donate my sperm to mom twice a day for the two weeks before I left for college. Obviously we couldn't have sex. That would be incest, which is just plain terrible. Instead, mom wanted me to masturbate to the point of no return, guide my cock inside of her with the precision of a bored gynecologist, wait a few seconds to finish, then withdraw and go back to whatever it was I was doing before the minor inconvenience of cumming inside my mother. That would totally not be incest. Everyone's a winner.\n\nProblems had arisen almost from the start. One of the cardinal rules of our arrangement was There Shalt Be No Thrusting. Thrusting was tantamount to sex in mom's eyes, and like I said, we totally weren't having sex. Now, mom's pussy was the first that my cock ever had the pleasure of being inside. It was warm, it was tight, it was oh so very wet. But simply chilling out inside it wasn't quite enough to cause my orgasm to spontaneously burst forth, no matter how close I was when I entered. We came up with various work-arounds to this: jerking into my hand with just the head inside mom, thrusting myself against mom's heavenly ass or over her pussy, or even using her panties as a barrier to stop my cock going more than a few inches inside her. As the saying goes: if it's only a few inches, then you can't call it incest! At least, I think that's a saying.\n\nThe previous morning mom had decided that thrusting your penis inside a woman's vagina really isn't the same as sex, when you get right down to it. At least, not if you only thrust a few times. In the interests of maximizing her chance of conception she had decided to allow just a handful of thrusts inside her when I was about to cum. How many thrusts constitute a handful was a question we had strived to answer the previous night inside the stall of a gas station's public bathroom. Then outside the stall. Then in the back of my car. We didn't seem to have a definitive answer yet, and I was looking forward to studying the problem in greater detail today. Except, as I said way up there, mom was nowhere to be found.\n\nOur house was comfortable but not exactly huge. There were two bedrooms upstairs; mom's had an attached bathroom and there was a separate bathroom that I used. Downstairs there was a large kitchen, a medium lounge, and a small laundry room with a door leading to our modest back yard. With so few rooms to search it didn't take me long to check them all and confirm that I was indeed alone in the house.\n\nIt wasn't even eight o'clock yet, so I couldn't fathom where mom would be. I returned to my room to don a t-shirt and some shorts that were more respectable than the boxers I had been wandering the house in, then went back downstairs and headed out of the front door. Mom wasn't in our front yard, but her car was. I wandered over to the road and looked up and down it. Still there was no sight of mom, though I did see our neighbor Mr Brownling mowing his lawn across the way. I raised my hand in greeting but he ignored me. The houses down our road were carefully spaced so no two were directly opposite each other, as if they were all embarrassed about the prospect of making eye contact with another house.\n\nI hung around in the yard for another minute, but there was a chill in the air at this time in the morning in early fall, so I soon headed back inside and sat myself down at the kitchen table. To be honest I didn't know whether to be worried or not. I'd never known mom to go on early morning walks, but then I wasn't exactly an early morning person. Maybe this was normal for her and I'd just managed to miss it until now. But part of me worried that it was something more serious. Our session the previous night had been intense. Far more intense than earlier ones, in fact. I felt like we had started to cross some line. This wasn't just a son harmlessly jerking off to cum inside his mom anymore, it was in danger of getting weird.\n\nWhat if mom thought we'd gone too far and hated me for it? What if she hated herself for it? What if she'd woken up and fled the house never to return? What if she hated herself so much she was going to take her own life? What if she hated me so much that she was just out there finding some sharp implement in order to come back and take my life? What if-\n\n\"Steven! You up yet, honey? I'm home!\"\n\nI heard the front door click shut then mom walked into the kitchen, acting as if nothing at all was the matter.\n\n\"Mom!\" I said, my emotions feeling like someone had taken all the characters from Inside Out and thrown them in a blender. \"What's the matter?\"\n\nMom just frowned at me. \"Nothing at all,\" she said. \"We were out of milk. I just walked over to the store to get some.\" She held up her hand to show me the half gallon jug of milk she was holding. I felt tension ebb from my body and rubbed my face to restore some sanity to the brain behind it. Mom was busy getting out breakfast supplies and didn't seem to notice my reaction as she continued talking. \"I saw Mr Brownling on my way home, mowing his lawn. I stopped to have a chat but he didn't seem interested.\"\n\nGiven how introverted mom normally was I was impressed that she'd tried to talk to our curmudgeonly neighbor. \"Isn't there some law against using a lawnmower at this time in the morning at the weekend?\" I asked. Mr Brownling's house was far enough away to make the sound of his mowing too quiet to be really annoying, but also too loud to ignore completely.\n\nMom turned to face me and tapped her chin as if pondering this deeply. \"No,\" she said at last, \"not quite. I think the closest thing in this state is one of those weird old laws that's never been replaced. You know, you can mow your lawn first thing in the morning as long as you're not riding on the back of a bear.\"\n\nI laughed. \"Ah, one of those. You can only eat three slices of pizza at one sitting unless you have written permission from the Pope.\"\n\nNow mom laughed. \"You can only buy a toothbrush on Sunday if you don't buy toothpaste at the same time.\"\n\nI tried to think of another one but mom beat me to it. \"No sex in the back of the car unless both people are wearing a seatbelt.\" Mom cast her eyes down slightly and a pink tinge appeared in her cheeks. \"Whoops,\" she added softly.\n\nI felt my own cheeks heating up. I didn't know what was weirder: the fact that I was now having amazingly erotic sessions with my mom twice a day and loosing enough cum inside her to fill the milk jug on the table, or the fact that when we weren't in the throes of one of these sessions I became embarrassed talking about them.\n\nMom clearly had the same issue as her cheeks were in no rush to lose their color. She turned on her heel and took the milk to the fridge and resumed getting breakfast ready. I stood up and helped, partly because I wanted to distract myself and partly because I was famished.\n\nWith two of us working on it, breakfast soon materialised and we dug into it with gusto. The food vanished from our plates in a fraction of the time it had taken to appear, leaving mom and me to nurse our glasses of orange juice. \"So,\" said mom after a few minutes, \"it's been a week.\"\n\nThis had been on my mind since the previous night, but it hadn't occurred to me that mom would be as aware of the time as I was. In a week I'd be leaving for college, and either mom would be pregnant or... well, I didn't really know if she had a backup plan. Maybe she would follow me to college and continue our sessions until she had a child in her belly. But no, mom had made it clear that she wanted me to live my life. It would be difficult to enjoy a normal college life if my mom was loitering nearby, constantly trying to squeeze in a clandestine session of me cumming inside her. Pleasurable? Absolutely. Normal? Alas not. Lost in these thoughts I almost didn't hear mom carry on.\n\n\"One more week to go,\" she said. \"You still happy to help me out?\"\n\nI nodded enthusiastically, eliciting a smile from mom. \"Of course, mom! I love you, you know I'd do anything to help you.\" That made mom smile even more and look down shyly. On more than one occasion mom had seemed to get even more pleasure from our sessions than I had. In terms of number of orgasms we'd had I figured we were probably drawn level. And yet seeing her face light up and knowing that I made mom happy felt good in a whole different way to all those orgasms.\n\n\"Well then,\" she said, looking back at me. \"Wanna come to my room and do me a favor?\"\n\nThe reference wasn't lost on me. Nor was it lost on my cock, which stiffened in my shorts. I drained my orange juice and stood up before holding my hand out for mom. She took it and stood, and together we walked upstairs to mom's room.\n\nOnce there mom slowly started pulling down her jeans, revealing the light blue bikini briefs underneath. \"The thing is, Steven,\" she said, \"I want a baby. And I want you to help me get pregnant.\"\n\nI pushed my shorts down my legs, trying to match mom's pace in disrobing despite feeling like tearing off both our clothes there and then. \"So,\" I said, trying to remember my lines, \"you want me to have sex with you?\"\n\n\"Oh god, no, Steven!\" she said, even as she pulled her panties down. I couldn't help but notice a dark patch on her underwear where they had been against her pussy. \"Nothing like that.\" I pushed my own boxers off then, my cock being pulled downwards with them until it twanged free and pointed up and outwards. Mom licked her lips then continued. \"No, obviously we can't have sex.\" Mom tore her gaze from my cock in order to open her bedside drawer and grabbed the bottle of lube she kept there. She then sat on the edge of her bed, her glistening pussy level with its edge and her legs spread. I wasted no time in positioning myself between her legs, my cock jumping in time with my pulse as if it was trying to get away from me and go where it really wanted to be. \"I figure you could just...\" she poured some lube into her hand as she said this then tossed the bottle to one side and grabbed my cock in its place. As soon as she finished talking she began making long strokes up and down my engorged cock, pausing at the top of each stroke to rub her thumb over the tip. I let out a long, shaky breath at this, then remembered I was supposed to say something.\n\n\"Masturbate?\" I said.\n\n\"Right,\" she said, and stroked a little more vigorously. \"Until you're ready to...\"\n\n\"Cum?\" I supplied.\n\n\"Mmm,\" moaned mom, something of a variation from the script as I recalled it. \"Then you can just stick it in, fill me up with this big, beautiful cock, give me your cum, make me yours.\"\n\n\"Oh fuck,\" I whispered. If mom was going to diverge from the previous Saturday's dialogue then so was I. Besides, the feelings of pleasure welling up from my cock were deserving of an oh fuck or two.\n\nMom brought her other hand up to gently caress my balls. A week's worth of orgasms had done wonders for my stamina, but mom seemed to be on a mission to make me cum. I was starting to think I wouldn't long at all when mom suddenly slowed her strokes down to a crawl.\n\n\"It must be hard,\" she said, rubbing her thumb agonizingly slowly over my cock head on the last word, \"getting close enough to cum before sticking it inside me.\" I nodded. Something was definitely hard all right. Mom hadn't really teased me before this, our sessions had been almost frantic, the point being for me to cum inside mom and our horniness making that happen as quickly as possible. \"Maybe if you just rub the tip against me,\" she said, then let out a low moan as she pulled me closer and rubbed the head of my cock up and down between the folds of her pussy, pressing against her clitoris with the tip as she did so. Every few strokes she would push her hips forward at the right moment to let the head of my cock slide between her folds and into her pussy. It was slow, heavenly torture, and it was working. I felt a glowing tingle deep in my abdomen as a slow burning orgasm started to build. I already knew it was going to feel incredible, but I didn't want to get there alone.\n\n\"It's not working, is it?\" I said. Mom looked at me, confused. We both knew it was very much working. I pulled my hips back slightly. Mom never let go of my cock but it did slip away from her pussy. She looked down at my cock in surprise, then pouted up at me. I carried on before she got too upset. \"I suppose I could touch you if it's not a sexual thing,\" I said. \"What if I put my hand here while I masturbate?\" As I said this I moved my hand down to mom's pussy and located her clit with my middle fingertip. Mom let out an appreciative little coo.\n\n\"Okay,\" she managed to say in a breathy voice, then started stroking my cock again, picking up the pace as my own finger started to move back and forth over her clit. Avoiding each other's arms was a little awkward but the pleasure we were both feeling made it hard to worry about such details. Mom tried to keep up her trick of running a thumb over my cock's head periodically, but the distraction of my finger on her clit soon made her forget about that and she stuck to just frantically jerking my cock. She soon closed her eyes and tilted her head back, a grimace of pleasure on her features. I regarded her face and, not for the first time in the past week, I reflected on how, to me, it had transformed without changing. Mom hadn't magically become beautiful, not objectively and not subjectively. But with each of our sessions she had become ever more sexy, and somewhere along the line that had become much more important to me.\n\n\"Oh god, mom,\" I managed to say. \"Are you close?\"\n\n\"Yes, Steven,\" she groaned, even as I felt the cum rising in me.\n\n\"Oh fuck, mom! Put it inside!\"\n\nIn the event mom merely released my cock and I was the one who moved my hand from her clit in order to grab my cock and guide it into mom's waiting pussy. I slammed my hips forward as soon as my hand was clear, and mom tensed up as my cock filled her, crying out a series of little 'ooh's.\n\nI could have stayed perfectly still and cum just then. Mom hadn't brought me to the edge with her hand, she'd tossed me right over it. But what was the point of having new rules if I wasn't going to test their boundaries?\n\nEven as mom started to experience her orgasm I pulled my cock back and then sank it once more into her. Mom's little 'ooh's became somewhat bigger 'ahh's as I repeated the maneuver a couple more times. That was all I could manage though as at that point my own orgasm hit. I'd heard of toe curling orgasms before - the good kind not the embarrassing kind - and thought it was a quaint figure of speech. Not so any more. My toes curled down into mom's carpet as the rest of my body started to tremble with the pleasure emanating from the base of my cock. Maybe I should have roared or bellowed, but at that precise moment I was silent, the breath catching in my throat and rendering me quieter than I had been since we started. The pleasure built and yet, weirdly, the cum didn't follow. For a second, some part of me wondered what would happen if I orgasmed inside mom without actually cumming. Would we repeat our morning session, affording me three glorious orgasms with mom today?\n\nThe question became academic even as these half formed thoughts dashed through my mind. The intense feeling of pleasure in my cock grew until it felt like a physical pressure trying to escape. And then whatever dam had been holding back my cum burst. It felt almost like an explosion in my cock. Without any conscious thought from me my hips jerked so hard that I almost pulled my cock clean out of mom. Luckily I didn't as the next thing I knew, cum was jetting straight out of my cock and into mom. I could feel it rushing down the length of my cock, each burst like a new, smaller orgasm.\n\nClearly mom wasn't too far gone to be aware of what was going on. She raised her legs as I came, wrapping them around my waist and keeping our bodies locked together, and making encouraging noises.\n\nI don't know how long my orgasm lasted. Probably longer than it felt like at the time, but shorter than it seems in retrospect. All I know is that all too soon the last dribble of cum seeped out of my cock. My legs were shaking and little grey dots floated before my eyes. I didn't trust my limbs to walk me out of there nor my vision to guide the way. So I pulled my cock out of mom, stepped to the side, and crashed down onto the bed beside her. She turned her head to look at me and smiled.\n\n\"You did good, hon,\" she said softly, and stroked my hair. \"Why don't you have a nap now. I think you need one.\"\n\nIt was sweet of mom to suggest that, but my whole body was still coming down from that orgasm and I knew sleep wouldn't be possible any time soon.\n\nThat turned out not to be entirely accurate. A few seconds later I felt mom's weight shift on the bed and her lips press gently against my cheek. That's the last thing I remember before sleep took me once more.\n\n---\n\nI awoke feeling groggy and thirsty. I was still laid on mom's bed, but I had shifted around a bit. At some point while I'd slept either I'd pulled some of mom's comforter over me or mom had covered me up a bit. Whoever had done it, I felt nice and cozy. I also felt lazy. Mom's digital clock told me it was afternoon already, and my stomach confirmed it was about time for lunch. Tempting though it was to stay there wrapped up in the warm covers, I forced myself to roll out of bed.\n\nI pulled my boxers and shorts back on and headed downstairs. Mom was in the kitchen, fully dressed once again. \"Hey there, sleepy head,\" she said when she saw me walk in. \"I'm rustling up some sandwiches for lunch. That okay?\"\n\n\"Great, mom,\" I said, shuffling over to the coffee machine and pouring myself a large helping. I sipped at the scalding liquid, risking a burnt tongue in order to get that sweet, sweet caffeine inside my system. It seemed to work at once, and I started feeling like a human being again. When the sandwiches were ready I ate my fill, fully restoring my humanity in the process.\n\n\"Mm mm mmm,\" I said as I swallowed the last of my lunch. \"That was delicious. Thanks, mom.\"\n\nMom looked down at the last bit of sandwich on her own plate then raised her eyebrow at me, probably wondering if I was being sarcastic. \"Erm, thanks?\" she said. \"They were just sandwiches...\"\n\n\"More like grandwiches!\" I said, too enthusiastically. Mom looked skeptical. \"More like sandwowches!\" I tried. Mom just gave her head a little shake to warn me off any more attempts. I gave up. \"Any plans for today, mom?\"",
        "Mom swallowed the last of her lunch and nodded. \"Yep. Seeing Mr Brownling mowing his lawn reminded me that our back yard needs a bit of work. I got started on it this morning, I'm going to head back out there when we're done here.\"\n\nI felt a little embarrassed about that. I usually helped mom out with gardening, but had managed to sleep through her work that morning. \"I'll help, then,\" I said.\n\nMom shook her head. \"Not so fast, mister. You're leaving for college in a week, right?\" I nodded. \"And how is packing going?\"\n\n\"Oh you know,\" I said, taking a sudden interest in a breadcrumb on my plate. \"I know what I'm taking to college.\" That was sort of true. \"And I've got some boxes ready.\" It was certainly true I owned boxes, albeit ones that were full of other stuff at the moment. \"I just have to put the stuff in the boxes.\" That last sentence was one hundred per cent true. Except for the word 'just'.\n\nMom knew me too well to believe me, but also knew I would get my packing done before the last minute. \"How very organized,\" she said. \"In that case I'll carry on in the garden while you just put those carefully itemized things in those handily prepared boxes of yours.\" She smiled at me sweetly. I knew when I was beat and so, once the dishes from lunch had been washed, I slunk upstairs to my room while mom returned to our back yard.\n\nPacking a few boxes for college somehow managed to simultaneously take both more and less time than I'd expected it to. Finding a couple of boxes was easy. Emptying their contents into a Jenga-esque heap in the bottom of my closet was the work of a moment. Tidying up those same contents when that Jenga-esque heap inevitably collapsed and spilled stuff all over my bedroom floor took rather more time. And figuring out what I actually wanted to take with me to college took most of the afternoon.\n\nI didn't consider myself to be someone who owned a lot of stuff. There was the crappy computer that my grandparents had bought for me years ago but that still worked well enough. There was the modest collection of second hand books. The even more modest collection of films and music. A few childhood toys that I wasn't going to throw away but also wasn't going to take to college with me. I had a small but varied collection of clothes. And not much else. By the time it started to get dark in the early evening I'd filled a couple of boxes, emptied them again, then refilled one of them. I figured the other box could be used for food supplies and some kitchen stuff. I had a separate bag for my clothes. I was pretty pleased with myself.\n\nSince I'd been successful in my day's work, I knelt on my bed to peer out of the window and see how mom was getting on with hers. Our back yard wasn't huge but, as mom had said, it needed some work. In the ever-decreasing light I could see that she had raked up all the leaves into a couple of piles, and made a pretty decent job of weeding the flower beds around the edge of the yard. At present she was pottering about near our garden shed, though I couldn't see what she was up to.\n\nPacking my stuff for college had tired me out pretty effectively, but I suspected mom would be even more tired. She was the one doing the more physical labor. Also she hadn't had a nap in the morning. I decided to be a good son and go help her out. It also may have occurred to me that it was nearly dark and mom would have to stop soon, so I could get brownie points for helping mom while not actually having to work for too long. I slipped on a sweater and some old jeans - clothes more suited for gardening in the chilly evening air - and headed downstairs. We had a light outside that, in theory, would illuminate the back yard pretty well. In practice the bulb had broken years ago and neither mom nor I had replaced it. Instead I flicked on the kitchen light. The kitchen window looked out onto the back yard so the light would provide some modicum of illumination. That done I passed through our small laundry room and out through the back door.\n\n\"Hey, mom\" I said once I emerged. In the few minutes it had taken me to get changed and get outside, the darkness had really swept in. Mom was kneeling by the side of the shed, attacking some creeping plants with a short tool, but I could only see her because she was illuminated by the light spilling out from the kitchen. Mom's eyes must have adjusted better to the dark. Or maybe she was just determined to finish whatever it was she was doing before wrapping things up.\n\n\"Heya,\" said mom, looking up at me. \"Finish putting those things in those boxes?\"\n\nI nodded, \"Sure have. I thought I'd come out here and help you now.\"\n\n\"Thanks,\" she said. \"Why don't you get down here and hack at this creepy green thing, and I'll start putting stuff away?\" She got to her feet as she said this, stretching her arms up and arching her back in the process. She was wearing some torn old jeans and a light cardigan over one of her baggy jumpers, but now I knew what was hiding under her clothes it was hard not to see the slight hints of curves that her stretch showed off. All too soon she lowered her arms and held the garden tool in her hand out to me then passed over the garden gloves she had been wearing.\n\n\"Right you are,\" I said, taking the items from her and getting down on my knees by the shed where she had been. The offending plant had been trying to burrow down between the shed and the ground. It was not the world's greatest shed to begin with and really didn't need its structural integrity being compromised by an overly curious plant. The shed was narrow but quite long, and the plant seemed to be growing along its entire length. Fortunately for me mom had hacked most of the plant away from the shed, leaving only a couple of feet left to disengage. It would be but a moment's work, I figured.\n\nI don't know how many moments there are in a minute, but there are definitely enough to make a mockery of my estimate of how long getting rid of the plant would take. Mom had finished putting everything away and was clearly loitering while I built up a sweat trying to disengage the plant from the old wooden shed. There had to be a knack to it, I thought, but no approach seemed to work better than any other, which is to say not very well at all.\n\nFinally, after what felt like an eternity but was probably more like twenty minutes, I yanked the last bit of greenery off the shed's side and tossed it on the minuscule pile behind me. I stood then and stretched out, half way through the motion before realizing I was precisely copying mom's motion from earlier. As that thought occurred to me I lowered my arms and glanced around. Mom was nowhere to be seen in the back yard, but nor had I noticed her go back into the house. It was, admittedly, possible that she'd gone back inside without me noticing. I'd been a little distracted during my battle with nature. Mostly I'd been distracted by trying to come up with ever more inventive insults to use against the plant. I'd heard that some people said nice things to their plants to make them grow better. It stood to reason that hurling obscenities at the thing growing on the shed might make it easier to destroy. It didn't seem to work, but more to the point I had no idea where mom was.\n\n\"Mom?\" I called out to the back yard, not really expecting a response.\n\n\"In here,\" came the muffled reply from inside the shed. With hindsight that was obviously where mom was. I walked around to the front of the shed and peeked in. The light spilling out of the kitchen fell at an oblique angle through the shed's doorway, only just taking the edge off the pitch blackness within. I couldn't see mom inside the embarrassingly cluttered shed, but then I couldn't see much of anything in there.\n\n\"Mom?\" I tried again, taking a few tentative steps into the shed. There were various garden tools and boxes of who-knows-what scattered around the shed, making it a minefield in the dark. I let my eyes adjust a little then took a few more steps inside. I was about to call out again when a slow creak sounded behind me, and the little light that had been spilling into the interior of the shed was cut off. Someone had closed the shed's door.\n\nI only had a moment to come to that realization before I felt that someone press themselves up against my back. A pair of hands encircled my chest and then slid down my front before making quick work of the buttons on my jeans. I let out a soft gasp as my jeans and underwear were pushed down to my thighs then mom's cool hand wrapped around my cock, slowly pumping it.\n\nI sighed as my cock responded to the treatment, stiffening under mom's ministrations. Mom let out a quiet \"Mmm\" as she felt it happen.\n\nMuch as I was enjoying mom's hand on my cock, I did feel like her luring me into the shed then closing the door had been a cheap prank to scare me. I decided it was only fair to get my own back a little bit.\n\n\"Oh, god,\" I whispered softly. Mom let out another little moan and sped up her hand on my cock. \"Oh that feels so good... Mr Brownling,\" I said, grinning to myself. Mom's hand froze on my cock as I said our neighbor's name, and I delighted in what I assumed to be mom's discomfiture, although mom stopping her handjob was less delightful. I pressed on with my advantage. \"But we have to be quiet, Mr Brownling. My mom's around here somewhere and she must never know about our forbidden love.\"\n\nThere are some things about myself that I think must have come from my dad, whoever he was. But my sense of humor? That's all mom. Just as I was basking in my success at freaking out mom she resumed her handjob on my cock with gusto. \"Don't worry, kid,\" she said in a gravelly voice that was impressive in how little it sounded like our neighbor. \"I won't tell her if you don't.\" She gave my cock a little squeeze then carried on jerking me off. \"After all, you've got such a lovely cock, and old man Brownling needs it in his old man butt.\"\n\n\"Jesus Christ, mom!\" I said, hoisted by my own petard. The mental image was so mortifying that my cock actually flagged a bit despite mom's handiwork\n\n\"There is no mom. Only Brownling,\" said mom in her gravelly voice. It was an impression somewhat ruined by her breaking into giggles as soon as she'd said it.\n\nI spun around to face mom, her hand losing its grip on my cock in the process. Once I'd turned around I realised that it wasn't as pitch black in the shed as I'd thought. Mom hadn't fully shut the shed door, so a trickle of light was coming in. Not enough to see anything clearly, but enough to make out silhouettes and glints here and there. I could see, for example, mom gently shaking with mirth. \"Alright, I give up,\" I said. This didn't seem to stop mom's amusement so I reached around her and grabbed her ass to pull her against me. I was delighted to find that mom's jeans and underwear had vanished, and my hands rested on the cool skin of her behind. My erection sprung back into action, brushing against the soft curls of mom's pubic hair as it rose.\n\n\"Ooh, hello,\" said mom, breaking into a fresh burst of giggles as she felt my cock against her. I pulled her against me by her ass, the bottom of my cock now resting in her pubic hair while its tip nudged against her jumper-clad stomach. I leant my head forward, intending to capture mom's tongue with my own and stop her giggles. Unfortunately I misjudged just where her mouth was and instead of initiating an erotic make out session I just kind of slobbered on mom's cheek. Suffice to say she found this hilarious.\n\n\"Anywhere else you wanna lick?\" she asked between laughs.\n\nInspired, I responded \"Not yet.\" I then put my hands on her shoulders and gently pressed downwards. \"But you could.\"\n\nMom got the hint and finally stopped giggling, even letting out a little coo as she sunk to her knees in front of me. As soon as she was down she cupped my balls with one hand and took my cock in her other hand, before slowly starting to lick the head. I ran my fingers into mom's hair but let her dictate the pace.\n\nThe pace she opted for would probably best be described as 'leisurely'. She worked her tongue around the tip of my cock for some time before finally encircling the head with her lips. Even then she kept her mouth still, only giving soft little strokes to my cock with her tongue. Slow it may have been, but that didn't stop it feeling astonishingly good. I groaned at the pleasure mom was giving me before murmuring \"You're so fucking good at that, mom.\"\n\nI could feel mom smiling around the end of my cock. And then, as if to prove that she wasn't a one-trick pony, she thrust her head forward and started bobbing her mouth up and down the length of my cock, her tongue pressing up against the underside as she did so. My hips twitched at the new sensations she was conjuring and my fingers tightened their grip on her head. I knew it would only take a few minutes for mom to elicit an orgasm from me at this rate. Part of me wanted to ignore our agreement, to keep fucking mom's face until the cum exploded into her mouth. A different part of me wanted something slightly different. The latter part of me won out.\n\nI let her carry on for another half minute or so, then leant down and put my hands under mom's armpits and pulled her up. She seemed a bit put out to have her toy taken away, but stood up willingly enough. I then bent my knees just a little and maneuvered my cock in between mom's legs. Even with my cock coated in mom's warm saliva I could feel the warmth and wetness of mom's pussy as I slid my cock head over the folds around her opening. I tried to push upwards and enter her, but the angle was far too awkward. Luckily mom realised what I was trying to do and came to the rescue. Putting an arm around my neck for support she lifted one leg and grabbed my cock from me then guided it into her waiting pussy. We both let out lust-filled groans as we pushed our hips towards one another and the length of my cock vanished inside mom.\n\nIt was an awkward position, but mom threw her other arm around my neck and I grabbed her ass, which helped us avoid a potentially fatal and incredibly embarrassing fall onto some pointy garden equipment. We both then started making little thrusts with our hips which, between us, managed to actually generate some traction. For the first time since our arrangement had started, I really did feel like I was fucking my mom. My head spun at how good it felt. Up until then I'd only really been inside mom when I was about to cum, which obviously felt good in a whole different way. Having mom's tight wetness engulf me when I wasn't on the brink of an orgasm was something new, and something incredible.\n\nI only had a few seconds to enjoy it, though. That was when mom breathlessly said, \"You're gonna cum already?\" The question was punctuated by the noise of our bodies slapping against one another with every thrust we made. Partly because of some vague sense of pride at my stamina and partly because I'm an idiot I responded honestly.\n\n\"No, not yet,\" I said. Mom groaned and raised herself up on the toes of the foot she still had on the ground. My cock slipped from her pussy and a shiver ran through my hips as the cool night air in the shed hit my thoroughly soaked manhood.\n\n\"Mom!\" I gasped, and jerked my hips up, only to be rewarded by the feeling of my cock's head sliding fruitlessly against my mom's skin.\n\nMom dropped her other leg to the floor and took a small step back. Her arms dropped from my shoulders as she did so, then one of her hands took my cock. \"Sorry, Steven, you know the rules,\" she said.\n\n\"Fuck the rules,\" I said, taking a small step towards mom. I was all too aware that the shed was dark and full of terrors, and a misstep in my exposed state of dress could be a disaster. That's the only reason I didn't immediately charge at mom. \"I want you,\" I added.\n\nMom let out a frustrated little growl and started walking slowly backwards, pumping my cock just as slowly as she did so. \"We can't,\" she said. \"It wouldn't be right.\"\n\n\"Why wouldn't it?\" I asked. Mom was making a beeline backwards for the shed door, to escape and freedom. \n\n\"It just wouldn't,\" she said. I don't think either of us was convinced by that particular argument. \"I'm sorry, Steven,\" she said, \"but I won't let you fuck me.\"\n\nI was taken aback by that particular statement. Mom made it sound like I would try to force myself on her. Horny though I was, she knew I would never do that.\n\nEven as I thought that, mom's path backwards curved away from the door, and she started leading me by the cock over to the side wall of the old wooden shed. How she was navigating past all the hazards while walking backwards in the dark I'll never know.\n\n\"I mean,\" she went on, \"I might not be able to stop you. You are bigger and stronger than me.\" That was overstating matters somewhat. I was only a few inches taller than mom and in a fist fight I feel like she would have held her own. \"I guess if you absolutely had to have me, there wouldn't be much I could do,\" she went on, sounding equal parts resigned and horny. She shuffled another half step backwards towards the shed wall. \"If you just grabbed me and shoved me against the wall, what could I do?\" she asked, rhetorically. \"If you took your big cock and rammed it into my pussy, how could I stop you?\" she wondered aloud. \"If you fucked me right here, right now, until I came all over your dick then what would- AGH!\" she said. I'd been preparing to help her answer all those rhetorical questions when mom bumped into the shed wall. And that was when she dropped my cock and gave the squeal.\n\n\"Mom?\" I asked, concerned. \"What happened?\"\n\nMom moved away from the wall of the shed, forcing me back a step. \"Fucking fuck fuck fuckity fuck,\" she said. It was a sentiment that, I felt, didn't entirely answer my question. In the almost non-existent light I could just make out her fiddling with something behind her. \"There's a god-fucking-damned splinter,\" she finally said after a few moments of fiddling, \"in my god-damned-fucking ass!\" At the final word she wrenched something away from her ass and flung it into the deepest darkest corner of the shed. I never saw the splinter, but I gather it was a beast.\n\nI stood there, hard cock pointing at my mom and mom muttering about the splinter's questionable parentage. I couldn't help it. I laughed.\n\nMom's glare was mercifully invisible in the gloom, but I could feel it. I should have wilted under it. Instead I laughed harder.\n\n\"Oh, think it's funny do you?\" asked mom. I could hear the amusement in her voice now that the splinter had been vanquished.\n\n\"No,\" I managed to say just before emitting another snort of laughter.\n\n\"Uh huh,\" mom said. I could just make out her arms crossed over her chest.\n\n\"S-sorry, mom,\" I managed to get out once I'd regained my composure. \"How can I make it up to you?\"\n\n\"Too late now, kiddo,\" replied mom. \"The damage is done.\" I could just about see mom moving one hand behind her and rubbing her presumably sore ass.\n\n\"Want me to kiss it better?\" I asked, more to be cheeky than anything.\n\nTo my surprise mom seemed to consider it a moment, then said \"Okay!\" and span around so her back was facing me. I mean, I say her back was facing me. But it wasn't her back I was interested in.\n\nI sunk to my knees just as mom had not so many minutes ago, and with a similar goal in mind. I ran my hands up the backs of mom's long, smooth legs until they reached the end of the line and I was cupping one of her glorious ass cheeks in each hand. The skin was cool and soft and just begging to be kissed. So kiss it I did.\n\nI raised myself up a bit so I was face-to-ass with my mom and planted a long, gentle kiss on one of her butt cheeks.\n\n\"Better?\" I asked when my lips were no longer occupied.\n\n\"Mmm\", moaned mom softly. \"No.\"\n\n\"Yeah, I thought s- wait what?\" I said, taken aback.",
        "\"Wrong cheek,\" explained mom.\n\n\"Oh, right.\" I moved my head all the way to mom's other ass cheek and gave it the same treatment as its neighbor. \"Better now?\" I asked once I'd finished.\n\n\"Much,\" said mom.\n\n\"Anywhere else I need to kiss better?\" I asked, trying to waggle my eyebrows suggestively. The gesture was doubly lost on mom since she did not have eyes in her ass and even if she did it was all but pitch black in that shed.\n\nMom chose not to respond with words but instead bent forward at the waist, using the shed's wall for support, and so presented me with her pussy. Even in the barely-existent light I could see it glistening with wetness. I tried to think of something witty to say about me not realizing that she had got a splinter there as well. Given that I'd had my cock inside her a few moments earlier I wasn't sure I wanted to go for 'Did you get a little prick there too?'\n\nAs it was I didn't get to say anything at all. Perhaps sensing my intent, mom reached behind her, grabbed my head, and pulled me face first into her pussy.\n\nThis was my first time going down on mom and I really did want to make a good impression. I knew I wasn't bad at oral. My ex-girlfriend Cassie had certainly enjoyed my ministrations. Sometimes I'd felt like she enjoyed it a little too much. A technique I'd hit on early was spelling out letters with my tongue over her clit. The stimulation on her most sensitive spot was of course welcomed, but the slight unpredictably of my tongue's motion that came with the various letters was also an important part. An added bonus for me was that when my tongue was getting sore and I'd been eating out Cassie for so long that boredom was starting to strike, I could amuse myself by spelling out little hidden messages.\n\nFaced with mom's pussy I may have been a little too eager to impress. I dove tongue first at mom's clit and started licking out letters like a journalist on a deadline. Within a few seconds I'd spelled out a novella. Given a couple of minutes I probably could have licked out half of War and Peace.\n\nFortunately for both of us mom stepped in. She reached behind her again and slid her fingers into my hair. \"Easy,\" she murmured. \"It's not a race.\"\n\nI realised she was right and stopped my frantic tongue action. I took a deep breath, breathing in the heady aroma of mom's arousal, and then started again.\n\nI stuck to my initial plan and started flicking my tongue over mom's clit once more, but this time I took my time about it. Mom sighed and then let out ever more aroused sounding moans as I varied the pace and pressure, but never let up.\n\n\"Oh shit,\" mom muttered after a few minutes of attention from my tongue. I took this as a good sign and kept it up, running my hands slowly up and down mom's legs as my tongue danced over her clit. \"Oooh shit,\" was mom's reply and then she emitted an adorable little squeak. I felt her legs tense up and then tremble as an orgasm took her.\n\nI knew Cassie had always needed a minute after the first orgasm before I could go down on her again. She was simply too sensitive for a while. Assuming that mom would be the same, I lightened the touch of my tongue and slowly started to move my head away.\n\nMom was not Cassie.\n\n\"Don't you dare stop,\" she said in a rush, reaching behind herself to grab my head and push it back between her legs. \"Do it like earlier,\" she went on. \"Make like it's a race!\"\n\nFar be it for me to disobey my mom. I went to town on her clit, lapping out the alphabet forwards and backwards, right side up and upside down. My tongue was a blur, and mom was loving it. Her hips rocked around, no longer under her complete control, and she let out a constant stream of sexy little moans, groans, and colorful language.\n\nI wrapped one arm around the front of mom's thighs, not so much to hold her still as to help me move in time with her. The other arm I needed for myself. Mom's sound effects were getting to me, and my cock was begging for attention. As mom vocalized her way to a second orgasm I wrapped my hand around my dick and started pumping. If I'd been paying more attention I might have been surprised at how close I was to my own orgasm, but at that moment my focus was more on mom.\n\n\"Steven!\" she managed to squeak out. \"I'm gonna...\" she said before her breath caught in her throat. \"You're gonna make me...\" she tried again, without any more success. At that point she stopped trying to talk. Actually it sounded like she'd stopped trying to breathe for a moment, and the only sounds in that shed were the obscene wet noises of tongue on clit and fist on cock.\n\nAlmost unheard, mom whispered out, \"Gonna.\" And then go she did. I felt it in her legs first, a tremble that built to a shake, which in turn built up to something that I'd need to be a seismologist to describe. She made a noise somewhere between a stifled scream and an unstifled grunt as she came in earnest. My tongue was still a blur upon her clit, and my hand was working just as fast on my dick. I still had my other arm wrapped around mom's legs, keeping her close as she shook through her orgasm.\n\nFinally mom's legs started to settle, and I loosened my grip on them. At the same time I slowed down my lapping at mom's clit, giving it a few gentle kisses before moving my head back. No longer distracted by mom's mighty orgasm I realised my own was imminent. I let go of my cock, not sure if I'd already passed the point of no return. Just as I was about to stand up in order to impale mom on my cock and perform my son-ly duty, mom decided to come to the mountain instead. She took a small, shaky step back, bumping ass first into my face and knocking me onto my ass. Then her legs seemed to give up altogether. Like a tree slowly falling in the forest, mom fell back onto me. I had enough support to stay sitting upright, so mom's ass slid down my front tugging at my jumper the whole way, until she settled in my lap, my pulsating cock tight between her legs.\n\n\"Mom,\" I said through gritted teeth, \"you need to get it inside.\"\n\nI wasn't entirely sure if mom had heard me. But then she reached between her legs and located my cock with her fingertips. Using her other hand on the floor for support, she lifted her hips a few inches, pushing my cock head towards her pussy. Just as it was about to slide inside, mom collapsed back down onto my lap. My cock head slid between her pussy lips but didn't quite manage to enter her.\n\n\"Oh god,\" I muttered as my cock twitched. Mom must have realised how close I was as she repeated the maneuver, lifting up her hips and trying to shove my cock inside her.\n\n\"Unggh\", I said, or words to that effect, as the same thing happened, and my cock didn't quite penetrate mom. I wasn't just close anymore. I could feel my orgasm starting. A few more seconds and I'd be cumming, whether I was inside mom or not.\n\nIf we'd been on a nice big bed I could have rolled mom over and taken matters into my own hands. But we weren't on a bed, we were sat on a nearly pitch-black shed floor. There was probably an open can of paint stripper to one side of us and a chainsaw with a hair trigger to the other side. Not that we owned a chainsaw, but you get the point.\n\nI clenched my jaw and my fists, willing my orgasm to hold on just a few more seconds. Mom used those seconds wisely, lifting up for a third and final time and finally shoving my cock head inside her waiting pussy.\n\nThe cum started jetting out of me even as mom slid down my cock and back onto my lap. I wrapped my arms around her midriff, holding on tight and jerking my hips up in sporadic little bursts as the pleasure spread through me. Mom just leant back into me, making little pleased sounding murmurs as the flow of cum slowed and then stopped.\n\nWe sat there like that for a minute, each of us getting our breath back and enjoying the come down from our orgasms. I'd like to say we stayed like that for longer, me holding mom and her feeling good in my arms. But not every situation can be quite as romantic as that.\n\n\"Fuck it's cold,\" I said after the aforementioned sixty seconds. Distracted by mom's pussy and warmed up by our activities, I hadn't noticed this fact before. But sat on the shed floor with my jeans around my knees, I was noticing it now. I felt mom's legs starting to shake against mine and this time I was pretty sure she was shivering from the cold and not some very belated orgasm.\n\n\"Yep,\" said mom. I waited for something else. A pithy observation or witty comment. Instead mom shifted on my lap, then said, \"Lock the shed.\"\n\nWith that she got her feet under her, slowly lifted herself off my cock, then walked apace out of the shed. I heard the back door to the house open then click shut through the open shed door.\n\n\"Huh,\" I said to myself. And then I realized I was sat on a freezing shed floor with my cock out, late on a Saturday night \"huh\"ing to myself. \"Fuck this,\" I muttered, and leapt up. I managed to get out of the shed without incident and high tailed it back to the warmth of the house. After locking the shed, of course.\n\n---\n\nCome Sunday morning I made my way to church, just like always.\n\nNah, I'm just kidding. I'd spent the past week basically fucking my mom. Do you really think I go to church?\n\nNo, come Sunday morning I got up late and went downstairs for breakfast. Just like always.\n\nMom wasn't in the kitchen so I took my bowl of cereal through to the living room. Mom wasn't there either. After her disappearing act the previous morning I wasn't too worried that I couldn't immediately find her. Instead I finished my breakfast, washed up, then headed upstairs to see if mom was in her room.\n\nSurprisingly, mom was not only still in her room, she was still in her bed. I couldn't remember the last time I'd gotten up before her.\n\n\"Are you okay, mom?\" I asked from her doorway. Mom was laying on her front under the bedcovers. Only the back of her head was visible.\n\n\"Ugh,\" she responded. \"Too much gardening yesterday. Everything hurts.\"\n\nI nodded at the back of mom's head. She had been out there on her hands and knees for most of the day. With hindsight she had somewhat overdone it.\n\n\"That sucks, mom,\" I said. \"Do you want anything? Some breakfast? Coffee? Massage?\" I turned, ready to head downstairs and grab the coffee that mom would definitely ask for.\n\n\"Ooh yeah,\" said mom, audibly perking up. \"A massage sounds decadent. Do that one.\"\n\n\"Oh,\" I said, taken aback. I hadn't been serious and had no real clue how to give a massage. Still, how difficult could it be?\n\n\"There's some massage oil in the top drawer,\" said mom. The bedcovers flapped slightly and I assumed she was pointing at her bedside chest of drawers.\n\nI walked over to the drawers and pulled the top one open. I have to admit I was a little bit curious about what would be in there. Lingerie? Sex toys? My birth certificate revealing that I was in fact the bastard son of the King of Norway? More sex toys?\n\nIn the end the drawer was disappointing. There was no lingerie, no sex toys, no birth certificates. Just some pills, a half-read thriller novel, a small selection of bookmarks, and a couple of small plastic bottles. I grabbed one of the bottles and saw it was indeed massage oil. The bottle looked full, which wasn't that much of a surprise. I'm not sure who mom thought would be massaging her when she bought it, or who she would be massaging. Either way it looked like this would be the oil's maiden voyage.\n\nI picked up the second bottle, which was noticeably less full, and realized that it was the lube that mom had been using occasionally in our escapades.\n\n\"Found it?\" asked mom from the bed, breaking me out of my reverie.\n\n\"Yep!\" I said, keeping both bottles in hand. I turned to the bed and folded the covers over to the side, revealing mom in all her pyjama-clad glory.\n\n\"Nice jim jams,\" I said, even though I had seen them before. In fact whenever I'd seen them recently mom's pyjama bottoms seemed to end up on the floor while I ended up balls deep inside mom. The thought of that had my cock stirring in my boxer shorts. I was only wearing them and a t-shirt since breakfast wasn't really a black tie event in our household.\n\n\"Oh, shush,\" said mom. \"Do my back first, it's killing me.\"\n\nI placed the two bottles on the bed next to mom then got up on the bed, straddling the backs of mom's thighs. A little bit of skin was peeking out from the gap between mom's pyjama bottoms and the top half, so I dribbled a little bit of oil there then gently placed my hands on it and started to push upwards. Mom's pyjama top bunched up as I pushed, but she was laying on her front, stopping the fabric from moving far. I'd exposed about half of mom's back when the fabric grew taut and I couldn't push my hands any higher.\n\n\"Uh, mom,\" I said. \"Your top.\"\n\n\"What about it?\" she asked innocently.\n\n\"It's in the way. You need to take it off.\"\n\n\"But I'm not wearing anything underneath it,\" she said, though I had in fact figured that out for myself.\n\n\"And?\" I said, not sure when mom had gotten shy.\n\n\"It's not the kind of thing a son should see,\" she went on. \"I wouldn't want you to feel uncomfortable.\"\n\nI realised belatedly that mom was indulging in a little role play. Although the role she was playing was my mom, so I'm not sure if it really counts. \"I'll be alright, mom,\" I said, sounding as put upon as I could. \"I won't peek.\"\n\n\"Well okay then,\" she said. I scooted back and lifted myself onto my knees as mom raised herself up into what I could only describe as the doggy position. Entirely by accident on my part, but perhaps not on mom's part, she ended up with her ass bumping against my boxer shorts directly over my ever more interested cock.\n\n\"Whoops,\" said mom as she tried to undo the buttons on her pyjama top. She was in just about the worst position possible for doing it. She needed one hand on the bed to support her weight, leaving her only one hand to undo the buttons. Moreover she seemed to be having trouble keeping her balance. As she wrestled with the buttons on her top she kept wiggling around, grinding against my cock until it was fully erect inside my shorts.\n\n\"Here, let me help,\" I said, before putting my hands on mom's waist and holding her tightly.\n\n\"Thanks, sweetie,\" mom said. \"That's much better.\" It wasn't clear whether she was talking about the extra stability she had now I was holding her, or the fact that as soon as I had hold of her hips I started rocking my hips, pushing the bulge in my boxer shorts against where her pussy was hiding within her pyjamas.\n\nAll too soon the last button gave up and mom flopped back down onto the bed leaving my cock tenting my boxers obscenely. She stuck her arms out behind her, the material of her pyjama top hanging loosely now it wasn't buttoned up. I pulled the top off and tossed it aside, leaving mom to fold her arms on the bed and rest her head on them.\n\nDespite everything we'd done together, it wasn't lost on me that I'd yet to see mom naked. Or even topless. Since our first innocent session I'd become intimately familiar with her bottom half. Her shapely legs, round ass, and heavenly pussy were like old friends that I'd recognise anywhere. But while I'd groped her tits a few times and even slid my cock between them on one glorious, albeit dark, occasion, I hadn't actually seen them in the flesh. Nor had I seen the rest of her top half, for that matter.\n\nNow, with her top off and her back facing me, I at least got a tease. Mom's breasts were squashed on the bed by her weight and their sides peeked out tanatalizingly. Below them her torso narrowed to a trim waist before flaring out again, widening as it vanished down into her pyjama bottoms. There, I knew, mom's body kept on widening, turning into that bottom that my dreams were made of.\n\nI took all this in, but what I really wanted to do with mom's body was touch it. Luckily that's why I was there.\n\nFor a while I did actually give mom an honest to goodness massage. Since this was my first ever attempt I was hesitant at first. But mom guided me through it, telling me when to apply more pressure, where to touch, when to use more oil, the works. After twenty minutes she had stopped giving advice and was just letting out occasional moans of delight as I worked on her back. I knew these were innocent noises of appreciation at the massage, but having elicited similar noises from her in far from innocent scenarios, it was difficult not to remain rather aroused throughout the massage.\n\nAfter about half an hour I sat back on my haunches over mom's legs, pleased with my work. \"Anywhere else need massaging?\" I said. For once I was being innocent, but having said it I did realise how it sounded. I just hoped mom would take it the wrong way too.\n\n\"Well,\" replied mom, sounding hesitant. \"My legs are sore too. But...\"\n\n\"I can do them as well,\" I said quickly. \"I'll just need to take these off.\" I gave her pyjama bottoms a gentle tug.\n\n\"Oh I don't know, Steven,\" said mom, back in her character of mom-who-isn't-almost-fucking-her-son. \"I'm, er, I'm not wearing much underneath. I wouldn't want you to get grossed out.\"\n\n\"I'll be fine, mom. I-\"\n\n\"Well okay,\" said mom before I could even come up with a nonsensical reason. She wiggled her bum, which I took to mean 'Pull off my pants'. I shuffled backwards a bit and lifted myself up onto my knees so I wasn't pinning mom's legs anymore. In return she lifted her hips up from the bed, raising her ass up in the air before me. I tucked my fingers into the waistband of her pyjama bottoms and slowly started to pull them down.\n\nHer ass appeared first. I mean, you probably could have predicted that. It still took my breath away, and I had to focus on what I was doing or I would have just knelt there with mom's pyjama bottoms around the bottom of her ass for the immediate future. As they peeled down her thighs her pyjamas revealed her pussy lips, glistening in the bedroom light. It occurred to me that when mom had said she wasn't wearing much underneath she hadn't been kidding. Unless she was wearing some kneepads she was bare beneath her pants.\n\nEager to find out if I was right, I made short work of tugging mom's pyjama bottoms off the rest of the way. I had to hop off the end of the bed in the process to pull the bottoms over mom's feet. Once they were off I tossed them aside. Then I took in the sight of mom before me: naked, wet, and wanting my hands on her. I stepped up to the plate.\n\nOr rather I shuffled onto the bed and resumed my massage, starting with mom's feet.\n\nMy first few touches provoked squeals from mom, who was more than a little ticklish when it came to her feet. But she started giving me tips again and before long mom was back to making her delighted little coos. I took my time over it, massaging mom's left leg from the tips of her toes and working upwards. I knew where I was headed of course. Mom's pussy was visibly soaked with arousal. As I moved up from her foot to her ankle, then from her ankle to her knee, mom was clearly struggling to contain herself. She was fidgeting ever more and her little noises of pleasure were increasingly interspersed with noises that definitely weren't so innocent.\n\nThat's not to say I wasn't properly massaging her still. Mom had been working hard the previous day and needed her muscles soothing. But that may not have been my main concern anymore as I reached her upper thighs and dug my fingers into the flesh there, letting the fingertips slide around each side of her leg.\n\nI repeated the maneuver, letting my fingers roam higher each time. The hair around mom's pussy was trimmed short, yet the index finger on my right hand still managed to skim it without touching her pussy as I went round her thigh one last time.\n\n\"Oh god,\" mom whispered, perhaps readying herself for my next touch which, if I kept up the pattern, would finally bring my fingers into contact with her pussy.",
        "I didn't keep up the pattern, and instead sat back. Mom wiggled her ass and let out a strangled sounding groan, then glanced back over her shoulder at me.\n\n\"You're stopping?\" she asked. Although the look on her face suggested that what she meant was: \"If you stop I will literally murder you.\"\n\n\"I'm just taking a break,\" I said. \"It's a bit warm.\" I flapped the bottom of my t-shirt theatrically. It was true that I'd built up a bit of a sweat from massaging mom for the best part of an hour, but mostly I was just teasing her.\n\n\"Take your clothes off,\" said mom matter of factly. \"I mean,\" she added, \"you can take your top off if you're too hot. I won't be able to see.\"\n\n\"Thanks, mom\" I said, before peeling my t-shirt off and tossing it aside.\n\n\"And your shorts too, if you're uncomfortable,\" said mom. \"I won't peek.\"\n\n\"Well if you're sure,\" I said, and quickly pulled them off too, leaving me as naked as mom. Her promise not to peek was somewhat undermined by the way she was staring shamelessly at my erect cock, biting her lip. I pretended not to notice.\n\n\"Right,\" I said. \"Where was I?\"\n\n\"Oh god yes,\" said mom in a rush, before putting her head back down and spreading her legs slightly more. I'm no expert on body language, but I felt like she wanted something. I moved back up to where I'd been before stopping, between her thighs.\n\nAnd then I wrapped my fingers around her right thigh, and resumed my massage. Mom let out a long moan as my fingers skimmed her pussy hair again, then a disappointed groan as I moved my hand down her leg slightly and continued.\n\n\"What're you doing?\" she asked, sounding dangerously close to petulant.\n\n\"Massaging your leg,\" I responded, as I massaged her leg. \"I've done the left one, now I'm doing the right one. I assume you used them both.\"\n\n\"Smart ass,\" muttered mom.\n\nI grinned and kept up what I was doing, working my way down mom's right leg just as slowly as I'd worked up her left one. Mom's fidgeting didn't grow any less intense, if anything she became more restless beneath me. As I finally reached her right foot she was almost panting and a dark patch was growing on the bed beneath her pussy from her leaking juices. As I reached her toes she started to tense up, no doubt expecting this to be the end of the leg massage and the part where I touched her somewhere more important.\n\nIt was not the end of the leg massage. Once I'd finished with her right leg I knelt down between mom's outstretched feet. Mom murmured something too quiet to hear, though the note of desperation in her voice was still audible. I placed a hand on each of her calves and started to slowly work my way back up again. I wasn't quite so leisurely in my pace this time. An hour of running my hands over mom's naked body combined with her increasingly erotic sound effects and the sight of her dripping wet pussy had my own cock rock hard and crying out for attention.\n\nI shuffled forwards on my knees up betweeen mom's legs as my fingers gave her muscles one last going over. Once my knees drew level with hers, I stopped shuffling forwards and leant forward slightly, pressing my palms into the backs of mom's legs and rubbing my thumbs up her inner thighs. Mom's stream of little noises became ever more wanton as my hands inched closer to the tops of her legs, until finally they arrived. I gripped her legs at the point where they started giving way to her ass, and slowly ran the tips of my thumb up along the skin either side of her pussy.\n\n\"Ohh god, yes, there,\" said mom.\n\n\"Here?\" I asked, running my thumbs back down, never quite touching her pussy. Mom trembled and wiggled her ass, trying to get my thumbs to make contact with her more sensitive spots, but I held firm and her efforts were in vain.\n\nI repeated the motion a few more times, until I could feel the frustration emanating from mom just as plainly as I could feel the heat from her pussy. I decided to put mom out of her misery and, without warning, slid two of my fingers all the way inside her.\n\nThe effect was electric. Mom let out a cry and started thrusting her hips backwards against my fingers, fucking herself with all the traction she could muster in her position. I grabbed her ass with my free hand, using it for support while I fucked mom for all I was worth with my digits. My fingers were a wet blur as they slid in and out of mom. Apparently they hadn't come a moment too soon as within seconds of penetrating her, mom cried out \"I'm cumming!\" and her hips went from thrusting back against my fingers to spasming uncontrollably.\n\nI didn't slow my digital assault on mom's pussy, and clearly she didn't want me to as even as her orgasm rippled through her she sent reinforcements. Shifting on the bed slightly, she shoved one of her hands down between her legs and started strumming her clit feverishly. \"Cumming\" she said again, stretching the word out in a long strangled voice. Whether she was announcing a second orgasm or just still enjoying the first one I couldn't tell. I don't think it really mattered.\n\n\"Oh god, I'm cumming,\" she said one last time, raising her hips up and shoving them back to bury my fingers in her up to the knuckle. With one final tremble she stopped playing with her clit and then collapsed back down onto the bed. I took the hint and drew my fingers out of her pussy, a copious volume of her juices coming out with them.\n\nAs mom slowly got her breath back I reached for the bottle of lube.\n\nDespite all its uses the bottle was still over half full, so I used it to coat my dick liberally before popping the lid back on and tossing the bottle aside. Mom was still oblivious so I scooted forward until my cock was lined up with her pussy lips.\n\nI put my hands on mom's waist, pushing her down into the bed and using her for support as I lowered my cock to her pussy. Mom finally seemed to rouse somewhat and started to glance back.\n\n\"Ohh fuck,\" we both whispered as I ever so carefully let the head of my cock slide between the folds of her pussy lips and enter her. And then I stopped.\n\n\"Is that your cock?\" mom asked. I wasn't sure whether she thought it might be someone else's cock or whether she thought it was my fingers again. Both were evidently not true.\n\n\"It is,\" I responded.\n\n\"Are you close?\" she asked, sounding horny and hopeful in equal measure.\n\n\"Not yet,\" I said, though truth be told I didn't know how much longer I was going to last.\n\n\"You know we can't fuck until you say you're close,\" she said. My cock twitched at her words. It was the first time either of us had called what we were doing fucking rather than 'a few thrusts to help me cum'.\n\n\"I know,\" I said. \"It's just the tip.\"\n\n\"Just the tip is okay,\" said mom, lowering her head back onto her arms.\n\nTaking that as permission to continue I started to rock my hips. I had to go slowly to stop myself penetrating mom with more than just the head of my cock. It was slow, delicious torture. Mom thought so too apparently as after a few minutes she returned her fingers to her clit and started to rub it, lazily at first but with ever more gusto.\n\nAs mom's arousal increased, so did her hip movements. They wiggled and gyrated beneath me, making it ever more difficult to slip just the tip of my cock inside her. I moved my hands from her waist and put one on her ass and one on her upper back, leaning forward slightly in the process in an effort to keep mom pinned to the bed and hold her still. It didn't go exactly as planned, as mom seemed to get more excited by my pinning her down and her hips started to gyrate even more.\n\n\"Careful,\" she gasped after a moment. I was too intent on my ever increasing arousal to wonder what she was warning me about. \"If you lose balance,\" she went on between gasps and moans, \"you might end up impaling me on that cock of yours.\"\n\n\"I'll be careful,\" I grunted out, exasperated at mom's lack of faith in me.\n\nMom's only reply was a little growl and then her hips hit new heights of movement. I pulled back automatically, lest her movements accidentally pull me too deep inside her, and the tip of my cock fell with a wet noise from mom's pussy. She responded immediately, reaching up with the hand that had been toying with her clit and grabbing my cock, she then yanked it back towards the opening to her pussy. She slammed her hips back against me as she did so, drawing out a groan from me as my sensitive cock head rammed inside of mom. Her hand was still wrapped around the rest of my lube-coated cock, and without missing a beat she started sliding her hand back and forth over it, the lube reducing friction to an afterthought.\n\n\"Oh god, mom,\" I groaned as my orgasm finally approached. I put my hands back on mom's waist and held her as she jacked me off with the tip of my cock inside her. \"You're gonna make me cum,\" I said.\n\n\"You're close?\" she asked again, only seeming to speed up her hand as she asked.\n\n\"Close!\" I managed to say, that being about as coherent as I could manage.\n\nWithout warning, mom took her hand away from my cock and slammed her hips back, engulfing the whole length of my cock inside her. We both let out loud moans but only paused for a moment. Like a man possessed I started hammering my hips forward. With each thrust came a noisy slap of skin on skin, a beautiful ripple across mom's ass, and an ever decreasing countdown to my long overdue orgasm.\n\n\"Mom!\" I managed to say after just a few moments. I was going to say more but that was when my orgasm hit. I bent over as the pleasure struck me, almost too intense. My powerful thrusts became sporadic trembles as waves of pleasure swept through my cock and waves of cum spurted into mom's pussy. I was vaguely aware of mom's fingers being back on her clit, of her mewling through her own little orgasm, and then I shakily lowered myself down and laid on top of her, gasping for air.\n\nWe both just lay there for a few minutes, getting our breath back. When I felt like I could move again I pushed myself back onto my knees, my soaking cock slipping from mom in the process. \n\n\"Good massage,\" said mom, still sounding out of breath. \"Would recommend,\" she added, giving a thumbs up.\n\n\"Any time,\" I said back, meaning it.\n\n\"So,\" said mom after another minute of gasping. \"You mentioned coffee and breakfast?\"\n\nI rolled my eyes and off the bed, clumsily, like a bad writer using syllepses. \"Coming right up,\" I said, and grabbed my clothes before heading back down to the kitchen.\n\n---\n\nHaving fed and hydrated my mother I took a much needed shower to scrape off the residues of massage oil, sweat, lube and cum that coated various parts of me. By the time I felt clean and had thrown on a new t-shirt and some shorts it was lunch time. I crafted a sandwich using various items from the fridge then sat at the kitchen table to eat it, and to think about what to do with the rest of my day.\n\nHaving mostly packed the previous night and sorted out all the paperwork and administrative stuff in the previous weeks, I didn't have any college-related preparation to get on with. All my school friends that I had much interest in seeing had already left town. I decided to ask mom if she wanted to hang out today, I figured she'd be delighted by the prospect.\n\n---\n\n\"Hey, mom, fancy hanging out with your dear old son this afternoon?\" I asked when mom appeared in the kitchen a few minutes later.\n\n\"No,\" she said, smiling sweetly at me.\n\n\"Oh,\" I said, a little put out. \"Thanks.\"\n\nMom came over and ruffled my hair. \"I'm heading to the shops for a bit. Nothing you'd be interested in, I dare say,\" she explained. \"You can amuse yourself for a few hours, right?\"\n\nI shrugged then nodded, back to square one with my day's plans. \"Sure mom,\" I said, \"I'll think of something.\" To be honest I was glad mom was heading out. Not because I was sick of her company: I wasn't. But mom's self-consciousness about her looks had made her painfully shy around people she didn't know. Sometimes she seemed to live an almost hermit-like lifestyle. Aside from her weekly visits to the supermarket to buy groceries, she hardly ever went out by herself. \"Have fun!\" I said, then added \"Be good.\"\n\n\"I'll do my best,\" said mom and gave me a chaste kiss on the cheek before she headed off. I heard the front door open then shut a moment later, followed by the sound of mom's car driving off. I was left by myself in the silent house.\n\n\"Ahh, boredom, my ancient enemy,\" I muttered to myself. \"So we meet again.\"\n\n---\n\nIn the end boredom was vanquished in the same way that people have been vanquishing it since time immemorial: I tried to do some housework then realized that literally anything would be fun compared to that. The alternative to cleaning that I opted for was sitting down in the living room with a few of my favorite but not-recently-watched DVDs and having a lazy Sunday film marathon.\n\nI was just starting on the third film when the front door clicked open and I heard mom shuffle in through the front door.\n\n\"Hey mom,\" I said, glancing over the back of the couch to see her. She had a few nondescript bags in her hands and a pleased expression on her face. \"Get everything you wanted?\"\n\n\"I sure did,\" she said. \"I see you found something to do too,\" she said, indicating the television.\n\nI nodded. \"I did, but this one's only just started. I can stop it if you want to do anything.\"\n\nMom shook her head. \"No it's okay, hun. I'm going to take these up to my room. I'll come down in a little while, okay?\"\n\n\"Sure thing, mom,\" I said, and returned my attention to the snowy scene on the television.\n\n---\n\nIt was about another hour before mom came back downstairs. I didn't hear her arrive, engrossed as I was in the film. I only realized she was in the room when she spoke.\n\n\"Wha'cha watching?\" she asked.\n\n\"Thing,\" I said, without looking over.\n\n\"Gee, real descriptive,\" said mom. I could almost hear her eyes roll.\n\n\"The Thing,\" I corrected myself. \"As in John Carpenter's. It's a classic mom, we should watch it together some time. It's... oh, my god.\"\n\nAs I spoke I turned towards where mom was stood. Except it wasn't my mom stood there, it was a vision of erotic beauty.\n\nI should probably remind you that my mom's usual dress code would be considered frumpy by seventeenth century Puritans. I now knew better what bodily charms lay beneath her uniform of thick, ill fitting jumpers and jeans, but our escapades hadn't stopped her wearing them. Except when I had my dick in her. She tended not to be wearing jeans at that precise moment.\n\nWhile I'm explaining things unnecessarily I should also point out that when I said it wasn't my mom stood there, I was being metaphorical. This isn't the bit of the story where my hitherto unmentioned but incredibly hot nymphomaniac aunt turns up. My mom's an only child. Sorry.\n\nWhere was I?\n\nRight. Mom. Mom was not wearing a bulky jumper. Nor was she wearing jeans. I could tell this because I could see her skin. Almost all of it, in fact, since the only two items of clothing she was wearing were a dark, faintly sheer, purple bra, and matching panties. They were both made of some lacey material, but sexy as the lingerie was, it was mom's body that really took my breath away.\n\nI already knew that from the waist down she had a killer body, but for the first time I got a good look at her top half too. Mom had an incredible hourglass figure, the curves of her hips narrowing on the way up to her waist, then above that widening again, though at that point my eyes were more interested in her large, pale tits, being gently cupped and lifted by her bra.\n\n\"You look... amazing,\" I breathed, unable to tear my gaze from mom's body. As if to confirm my story my cock was, without even being touched, straining visibly inside my shorts.\n\nMom smiled, looking extremely pleased with herself, and even blushing a little. \"Thanks, Steven,\" she said quietly. Then, more loudly, \"Flattery will get you everywhere.\"\n\nBefore I had a chance to ask what she meant, mom closed the distance to the couch and straddled me, her knees on the couch either side of me and her panty-clad pussy coming down on my frustratingly restrained cock. I couldn't help myself and immediately ran my hands up her bare legs, savoring their smoothness. I didn't stop with her legs though. Having reached the top of her legs, my hands curved around mom, grabbing her ass and pulling her against my cock, earning a pleased sound from mom and a gasp from myself. But I couldn't keep my hands still when so much of mom was exposed to me. I ran my fingers up mom's back, past her bra strap and then back down again. Then up her sides, my thumbs grazing the sides of her breasts as my hands went up to mom's armpits then back down. Finally I brought my hands around to mom's front and slowly traced my way upwards, over her tummy and towards her heaving breasts.\n\nJust as I was about to make first contact and grab a handful of mom's beautiful tits, she reached her own hands up and interlaced her fingers with mine.\n\n\"Sorry, sir,\" she said softly, placing my hands on the couch either side of me. \"No touching; them's the rules of this establishment.\"\n\nI opened my mouth to protest but mom placed a shushing finger over my mouth, then placed her hands on my shoulders. I gazed hungrily at her, clenching my fists to keep them by my side. Mom responded with a sly wink, then went to work.\n\nI suspect mom had never given anyone a lap dance before. And I'd certainly never received one from anyone. What she lacked in experience, though, she made up for in enthusiasm. Her hips were a blur from the moment she started moving, first back and forth, then in small circles, then various combinations of the two.\n\nShe varied the pressure too, sometimes pushing down so hard on my cock that I was sure I could feel the shape of her pussy lips through our layers of clothes, and sometimes giving my cock light little kisses with her hips. My instinct was to grab her, hold her, touch her everywhere I could reach. But I stuck to her rule, my fingers digging into the couch rather than into mom.\n\n\"So good,\" I managed to gasp out, making mom beam with delight. She moved her head forwards, her lips making a beeline for my own. I moved my head forward, intending to meet the kiss half way, but just as our lips brushed against each other mom darted her head back. I stared at her, nothing but lust in my eyes and she stared back, biting her bottom lip to disguise an amused grin. Up until now I'd been loath to kiss mom in anything but the pitch black, her face not being one that exactly draws lips to it. But now I wanted nothing more.\n\nI moved my head forward again, and this time rather than eluding me mom went on the offensive. She pushed her lips to mine, so hard that I was pressed back into the couch. Our tongues entwined and tangled and she moaned with pleasure into my mouth. I couldn't stand my hand's impotence any more and reached around to grab mom's ass, squeezing her as I pulled her harder against my throbbing cock.\n\n\"Oh god,\" mom whispered in response, and buried her head in my neck. Based on the way her hips started shuddering I surmised one of her lesser orgasms had arrived. Mine wasn't quite ready to make an appearance, so when mom looked me pointedly in the eye and asked if I was close yet I shook my head.\n\n\"Hmm,\" she said, staring at me for a few long seconds. Then she hopped off me and back onto her feet. \"Maybe this will help,\" she said.\n\nShe turned and grabbed something from the coffee table then knelt down between my legs. She dipped her fingers into the waistband of my shorts and pulled them and my boxers down until I could shuffle them off my feet. While she was pulling my shorts down I yanked my t-shirt up and off, so that in a few moments I was buck naked, my cock pointing accusingly at mom and a bead of pre-cum building up at its tip.",
        "Mom seemed to be momentarily distracted by the appearance of my cock. She leant forward, dipping her head so that she was coming at my cock from underneath, and then ever so slowly licked in one continuous sweep from the base of my cock all the way to the head. I exhaled shakily and had to restrain myself from grabbing mom's head and fucking her face there and then, a temptation that was doubly hard to resist since I seriously doubted that mom would mind.\n\nBefore I could get side tracked, mom knelt back on her calves and lifted her hands, revealing that the item she'd grabbed from the coffee table was our old friend the bottle of lube.\n\nOne generous portion of lube on my cock later, she rolled the bottle to one side and then used her hand to smear the goop all over my erection. Having done that she raised herself back up onto her knees again.\n\n\"Ready?\" she asked. I nodded. Not that I had any idea what I was supposed to be ready for, but at this point unless mom walked in with an Ass Destroyer 3000\u2122 strap-on around her waist, I was inclined to agree to anything she wanted to do to me.\n\nAs it turned out, what she wanted to do to me was this: she leant forward slightly so that her tits lightly bumped against my stomach. I gazed hungrily down at the heaving cleavage her bra was showcasing, almost drooling at how good it looked. Mom then reached up and pulled the center of her bra away from her chest. For a moment I thought she was going to whip off her bra, affording me my first real view of her naked tits. Instead she reached up with her other hand and grasped my cock, maneuvering it so it was pointing straight up. And then she slowly lowered her body until the head of my cock made first contact with the underside of her tits.\n\nMom had not held back when it came to lubricating my cock. But then nature had not held back when it came to endowing my mom with tits. And her bra didn't just look like it fitted her, it looked like it had been sculpted around her breasts by an artist of old. It gently compressed and lifted her ample tits, squeezing them into a mouthwatering display. Unfortunately it also meant that as mom pushed down against the head of my cock, my cock struggled to penetrate up into the space between her tits.\n\nFor a long moment I could feel the gaze of philosophers through the ages upon me as the unstoppable force that was my cock met the immovable objects that were my mom's bra-encased tits.\n\nIt turned out the that the unstoppable force wins, as long as it has enough lube on it. Mom pushed down more firmly and my cock finally slipped up between her tits. I let out a long groan as she lowered her body until, finally, the head of my cock peeked out from the cleavage on show before me.\n\nOnce I was buried, mom let the front of her bra snap back into place and started moving her body rhythmically up and down. My cock head vanished down into the mysterious depths before resurfacing a moment later. Soon it was leaking copious amounts of precum, adding to the lube that let it glide up and down inside mom's bra.\n\nMom soon got the motion down to an artform, and then started leaning forward, giving light feather kisses to my chest as she bobbed up and down. I couldn't believe how good it felt, the warmth of her chest and the wetness of the lube making the experience feel incredible, while the sight of my cock rocking up and down between her beautiful tits was erotic enough to leave my whole body trembling.\n\n\"Oh my god, mom,\" I gasped as my arousal started to come to a peak. \"If you keep doing that I'm gonna...\" I said.\n\nMom let out a low moan and pushed her tits together before bobbing up and down even faster. I let out a yelp, certain I was about to blow my load all over mom's new bra.\n\nA few strokes before I did, though, mom rose up extra high on her upstroke so that my cock fell out from between her tits and pointed at her. Before I could complain she got to her feet and pushed my knees together, then she span around and sat down on my lap, her legs straddling my own.\n\n\"Not yet,\" she whispered, pushing herself back on my lap until her back pressed into my chest and her ass snuggled against my erection. I started to wrap my arms around her midriff, but she grabbed my right hand before I got the chance and unceremoniously crammed it down the front of her panties. \"Do me,\" she said, a bit unnecessarily.\n\nThe inside of mom's underwear was a damp, sticky, hot mess. I ran my index finger down over her clit and across her slit until I came to the entrance to her pussy. She let out a shaky breath and raised her hips just slightly, giving me some pretty clear signals as well as room to maneuver. I curled my finger, sliding it up into mom's pussy.\n\nMom let out a whimpered \"Oh\" as my finger entered her, which turned into a low moan as I slid in a second finger. I wrapped my left arm around her stomach to hold her steady as I started to rock my hand, causing my two fingers to jerk up and down inside mom's pussy.\n\n\"Oh... god!\" yelped mom, flapping her hands around at her sides like she was going to take off. She then shoved one hand down behind her and grabbed my cock with it. I was still lubed up so she had no trouble sliding her hand up and down, though her style was noticeably distracted by my fingers inside her. I started giving my hips little thrusts upwards to help her out, and mom must have decided to let me do the work. Giving up on her handjob, she instead lifted her hips slightly, then pulled the back of her panties to one side and crammed my cock up inside them so that it lay along her ass crack. She then let the panties go and put her hands on my knees, using them for support as she raised and lowered her hips.\n\nThe living room was filled with the sounds of sex and violence as mom raised and dropped her body onto my lap all while my fingers sloshed noisily inside her; mom had started to let out an ever louder series of grunts and curse words that I'd learnt to associate with the imminent arrival of one of her orgasms, and with mom's ass wrapped around my cock my own orgasm was hot on her heels; and all of this to the backdrop of Kurt Russell angrily flame-throwering a screaming alien. That last bit was from the television. You didn't accidentally skip a paragraph where Kurt Russell showed up in our living room.\n\n\"Fuck!\" yelled mom, hunching forward and slowing the bounce of her hips as she became engrossed in her own pleasure. I leant forward with her, moving my free hand up from her stomach to grab one of her breasts. I kneaded it roughly and tweaked the nipple which was hard enough to find even through the material of the bra. I started giving bigger thrusts against mom too, my well lubricated cock sliding snugly between mom's ass cheeks. Just as I was thinking I should lift mom up and replace my fingers with my cock so we could cum together, mom beat me to it.\n\n\"Shitshitshit cum agh!\" would probably best describe the noise that exploded from mom's mouth as her whole body shook. She leant back against me and grabbed each of my hands in one of her own, squeezing the one on her breast and cupping the one in her panties through the material. I stilled both my hands but kept trying to give little upward thrusts with my hips, desperate now for my own orgasm.\n\nMom, breathing hard, took my wrist and slowly lifted my hand out of her panties, then slid forward off my lap. With all the grace of a newborn foal she fell onto her knees on the floor in front of me, then dropped down onto her hands, panting.\n\nA good son probably would have let his mom get her breath back. But then a good son probably would not have just given his mom an orgasm either. Clearly I am not a good son.\n\nNot wasting any time I dropped down onto the floor behind mom. It was a tight squeeze between her and the couch, but there was room enough. With my cock leading the way, I yanked the back of mom's panties to one side, exposing her pussy and ass. Mom didn't even look up, she just let out a groan as I moved the head of my cock to the entrance to her pussy, grabbed her hips, then slammed forward.\n\nI had no interest in teasing mom, no interest even in her pleasure at that point. It sounds selfish with hindsight, but then again my entire role in our arrangement was to cum inside mom. I was literally a man on a mission.\n\nI started slamming my hips forwards, pulling mom back against me by her hips as I did so. The sheer force I was using was more than mom could hold up against, and with each thrust forward mom's hands slipped on the carpet, lowering her body to the floor. I followed, not missing a beat, and as she moved into a lower and lower position my hands slid higher and higher up her back, until, after a few moments, mom was laying prone on her front with my hands on her shoulder blades, pushing her down into the ground.\n\n\"Oh fuck, mom\" I groaned as my hips went crazy. I couldn't have held back any longer even if I'd wanted to. With a noise not too dissimilar to the death cries of the Thing on the television, I came, pulling mom back by her shoulders and pushing myself forward to keep my dick as deep inside mom's pussy as possible until the waves of pleasure subsided.\n\nMy breath had gone for a wander during this, and it took me half a minute to get it back. When the post-orgasmic haze finally lifted I realised I was still in the same position as I'd cum in: pressing my prone mom down into the carpet as my slowly deflating cock retreated from her pussy.\n\n\"Oh, god,\" I said, aghast. \"I'm sorry, mom.\" I sat back, releasing mom and mortified that I might have hurt her in my horniness. \"Are you okay?\"\n\n\"Mmm,\" moaned mom in a tone that positively oozed okayness. \"So good,\" she added.\n\nI relaxed now I knew that I hadn't gone too far with mom. \"That really was,\" I agreed. I sat back on the floor leaning against the couch and drank in the sight of mom laying before me. Even though I'd just cum she still looked incredibly sexy, her long legs and pert ass just begging to be touched. I resisted, though, and after a minute she pushed herself up onto her hands and knees then crawled over to sit beside me. We both looked up at the television as she settled, like it was just another film night. We were treated to a solid five seconds of Antarctic scenery before the screen faded and the end credits began to roll.\n\n\"Well,\" said mom. \"Good film. We should definitely watch it again some time.\"\n\n\"Oh I would absolutely like a repeat of that,\" I said, nodding earnestly.\n\nMom gave me a knowing smile then got to her feet. \"I need a shower,\" she said, absently running her fingers across the drying streak of lube and precum on her cleavage. \"Order us a pizza, will you, sweetheart?\"\n\nAs if on cue my stomach gave a low grumble and I realized that it was starting to get late. \"Sure thing, mom,\" I said, then sat there and watched as mom's ass and its attached mother left the room and headed upstairs. Giving my head a quick shake before I got sidetracked, I pulled on my shorts then dragged myself into the kitchen, found a recent flyer for the nearest pizza place, and picked up the phone.\n\n---\n\nMom came into the kitchen about twenty minutes later. I'd already changed into a light jumper and some jeans. Mom had gone in the opposite direction and was wearing a white silk dressing gown that her long, smooth legs vanished into high on her thighs. It wasn't anything I'd seen before and was, I assumed, one of the day's purchases. She'd also tied her hair back in a loose pony tail, a radical departure from her usual hairstyle of whatever gravity decided.\n\n\"I like your hair, mom,\" I said. \"It suits you.\"\n\n\"Um, thanks,\" she said, touching her hair self-consciously. \"I just kind of... did it.\" She gestured vaguely at my clothes. \"Going somewhere?\"\n\nI nodded. \"The delivery guy's sick so the pizza place is doing collection only,\" I explained. \"I figured I'd walk over and grab it. Should be ready in...\" I looked at the clock. \"About thirty-five minutes.\"\n\nMom nodded. The pizza place was about a mile away, not far from the end of the street we lived on, and it was a pleasant enough walk in the Summer. In the Fall, with the sun preparing to dip below the horizon it probably wouldn't be as pleasant, but the place did amazing pizzas. Also, walking there and back instead of driving made me feel less bad about ordering the Beast-sized meat feast pizza, which in all honesty would feed a family of four for a week. Mom and I usually polished it off in an evening, with a token slice each saved for the next day's lunch.\n\nMom seemed to be deep in thought for a moment, then glanced at the clock herself. \"Give me five minutes to throw some clothes on,\" she said, \"and I'll come too. It'll be nice to get some fresh air.\"\n\nBefore I could respond she turned back from where she came and jogged up the stairs. I sat down at the kitchen table, checking my phone periodically and hoping mom didn't take too long.\n\nI needn't have worried, as after only a couple of minutes mom bounded back down the stairs. I was weirdly disappointed to see that she had reverted to her old uniform of a baggy jumper and a long skirt, though the skirt was better than the unflattering jeans she usually wore. At least picking her usual clothes had sped up the process, I told myself.\n\n\"Ready?\" mom asked.\n\n\"Let's hit the road,\" I said, heading to the front door.\n\nThe walk down our street was quaint, though chilly at that time of day in the Fall. So mom and I kept our pace up as we chatted about my imminent college classes and my dorms and what I thought my roommate might be like. Our prodigious pace meant we hit the end of our street after only about fifteen minutes. The pizza place was only another five minutes walk from there, but our pizza wasn't likely to be ready for another fifteen minutes. We could have just gone there anyway. At worst we'd have to sit in the warm pizza shop for a bit, and at best our pizza would already be finished and we would have pizza.\n\nMom vetoed that plan, though, and gestured at the small park on the corner of our street. \"How about we sit in there for a few?\" she asked. \"We can watch the sun go down rather than watch Giuseppe sweat into the tomato sauce.\"\n\nMom had a point, the pizza place had amazing food, but less amazing hygiene. \"Park it is,\" I agreed.\n\nThe park was not a large space, more of a token bit of green on the corner where a house wouldn't fit. Low metal railings ran around its perimeter, and a line of trees lay just inside that, so once you were inside you were basically closed off from the rest of the world. The only way in was a gate in one corner of the park. A gate that no one liked for very good reason.\n\n\"Maybe someone's oiled it?\" said mom hopefully as we both stood by the gate, staring at it like it was some deadly snake.\n\n\"Sure,\" I replied in a tone of voice that people reserved for saying things like \"That is not true\" and \"You are clearly incorrect\" and other sick burns.\n\nAs we surveilled the gate a noise made us look up. An elderly bearded man with an elderly bearded dog was approaching the gate from inside the park.\n\n\"Evenin',\" said the man (not the dog).\n\n\"Evening,\" mom and I started to say in unison. But that was when the man pulled open the gate and the sounds of our mere human world ceased to matter.\n\nA cacophony straight out of some Lovecraftian hell assaulted our ears. I cringed. Mom cringed. The old man cringed. Even the dog cringed, and dog's faces don't have the necessary musculature to cringe. That's how bad the sound was.\n\n\"I'll hold it open for you,\" said the dog walker (not the dog walkee) after he'd passed through the gate.\n\n\"Thanks,\" I said too loudly as my ears slowly recovered from the trauma.\n\nMom and I shuffled through the gate and I took it from the man, nodding thanks again. The gate swung shut by itself if unattended, which would mean a repeat performance of that noise. But backwards. Rumor had it that in reverse there were hidden messages from Satan.\n\n\"You go on ahead, mom,\" I said. \"There's no point us both getting it.\"\n\n\"Oh but Steven!\" cried mom theatrically, clutching her hands to her chest. \"What will I do without you?\"\n\n\"But don't you see?\" I said, hamming it up to match. \"I'll always be with you, right here.\" I reached out as I said this and poked mom in her tummy.\n\nMom looked perplexed for a moment. \"I don't...\" she said.\n\nI nodded sadly. \"That's right,\" I said. \"If I don't make it, I want you to know one thing.\" I paused for dramatic effect. \"You can have my half of the pizza,\" I concluded, amateurly dramatically.\n\n\"Oh!\" said mom. \"Well, in that case.\" She turned and jogged off, making a bee line for the opposite corner of the park where a solitary bench was set up.\n\nI gave her a five count then released the gate and ran after her. If I'd been in a Roland Emmerich film I could probably have outrun the demonic noise, but real world physics were less forgiving and the unholy screech was with me the whole way.\n\nWhen I arrived at the bench mom was already sat down. \"Oh,\" she said sullenly. \"Looks like you made it.\"\n\n\"Sorry, mom,\" I said. \"Looks like you'll have to share the pizza.\"\n\nMom gave a theatrical sigh then patted the bench next to her. \"Well since you're here you may as well be useful and keep me warm,\" she said.\n\nI plonked myself down beside her and she shuffled over to lean against me. I lifted an arm around her shoulders as she nestled in.\n\n\"We missed the sunset,\" she pointed out. And indeed we had. The sky was an ever deepening purple. Only an orange glow over the trees on the west side of the park hinted at what we'd missed.\n\n\"Still nice though,\" I said, gazing up at the few stars that were already twinkling overhead.\n\n\"Mmm,\" responded mom. \"It is.\"\n\nWe sat there for a few minutes, the sky and the park darkening, and the constellations forming one star at a time. I was just about to suggest we head to the pizza place when mom spoke first.\n\n\"I'm gonna miss you,\" she said, out of the blue.\n\n\"I'll miss you too,\" I replied. Then I added: \"Really,\" since I knew how it sounded like an automatic response.\n\nShe reached up to her shoulder where my hand was resting and interlaced her fingers between my own. \"I've been so lucky to have you,\" she went on.\n\nI didn't really know what to say to that, but before I said anything mom nuzzled into the crick of my neck. With her free hand she reached up to tug the neck of her jumper away from her, and with her other she tugged at my own hand, pulling it down into her top.\n\n\"I'm going to miss having you,\" she whispered into my neck, before starting to gently kiss it.\n\nA shiver ran straight down my spine, and I glanced around to double check we were alone in the park, although in the growing gloom it'd be hard to make us out anyway.\n\n\"Mom,\" I gasped softly in what I hoped was a warning tone. \"We can't, not here.\" My sentiment was somewhat betrayed by my hand which slid down into mom's jumper until it reached her bra-less breasts. I started to squeeze and caress her tits even as her kisses on my neck became more urgent.\n\n\"Please,\" she whispered, kissing up to my jawline, then taking my head in her hands and starting to kiss my face frantically.\n\n\"Please,\" she whispered again, almost like a mantra, as she shuffled awkwardly around on the bench until she was sat sideways and facing me. My hand slipped up and out of her jumper in the process, so I shuffled around too so I was facing mom as well as I could on the confines of the bench.\n\nMom wrapped her arms around my neck and started to lean back into a laying position on the bench, pulling me on top of her as she went, all the while kissing me desperately and murmuring \"Please\" to herself. As she descended I slipped one hand up the front of her jumper, resuming my ministrations on her tits. My other hand I put on the bench to steady my descent. ",
        "The bench really wasn't big enough for this, but mom didn't seem to care about that. Her long skirt limited the movement of her legs, so she let go of me for a moment to pull it up into a bunch around her waist. That done she was able to wrap her arms back around my neck and her legs around my waist and pull me against her.\n\nWe settled into a roughly missionary position, mom with her limbs wrapped around me, and me with one leg on the bench and one on the floor. It was awkward and not particularly comfortable, but it left my jeans covered crotch roughly level with mom's naked pussy, which seemed to be her main criterion for success at that moment.\n\n\"Oh, god. Please, Steven\" she whimpered, moving one of her arms around and sliding her palm down my front until her hand dipped inside the waistband of my boxers, moving down until she grasped my cock.\n\nMy cock was, predictably for those keeping track, not very hard at all. It had been less than an hour since I'd last pumped mom full of my cum. And that had been my second big orgasm of the day. My eighteen year old cock had some impressive stamina, if I do say so myself. But there were limits.\n\nI don't doubt that mom could have gotten me hard, she had certainly demonstrated a knack for it. Could she have made me cum there on that cold, uncomfortable bench? I don't doubt that either. Could she have done it quickly? That there was the problem. Even mom would have struggled to draw any more cum from me in the immediate future.\n\nI was just about to slide down on the bench and go to town on mom's pussy with my tongue (which had no problem staying hard), when a banshee screamed in the night.\n\nNo, wait, it was the gate.\n\nMom and I both froze, our limbs tangled around each other's bodies and inside each other's clothes. But we recovered fast, and untangled the knot we'd become with the kind of speed that would make Alexander the Great blush.\n\nWe hopped off the bench - or rather mom hopped off the bench and I kind of half stumbled, half fell off the bench. And then we stood there, striving to look innocent. Which was a waste of effort because there was absolutely no one to be seen.\n\n\"God dammit,\" muttered mom with a scowl. I thought for a moment she was going to shove me back on the bench and pick up where she'd left off, but we both knew that noise had to come from somewhere. So, instead, she grabbed my hand and started dragging me across the park, back towards the exit.\n\nAs we neared the demonic gate we came across the source of the noise. Another dog walker had come in while we'd been on the bench, though this one seemed happy waiting near the park's exit until her dog had finished its evening toilet-related business. The dog owner seemed slightly startled as mom and I came charging hand-in-hand out of the darkness.\n\n\"Evening,\" I said in what I hoped was a friendly tone as we sped past. Mom was giving the dog owner dirty looks, while the dog owner merely looked a bit confused.\n\n\"Uh, hi. Evening,\" she managed to say before we were past her. I was delighted to see that she had propped the gate open so not only could we avoid opening it, we didn't have to hear it shut either. That was a win in my book. Mom still looked sub-impressed with life in general.\n\nIn fact mom kept up her fast pace and silent demeanor all the way to the pizza place. Even the discovery that our pizza was ready and waiting when we arrived didn't seem to cheer her. Fortunately Giuseppe the owner loved two things: making pizza and flirting with customers. And he only hated one thing: people leaving his store in a bad mood.\n\nI'm exaggerating obviously. Giuseppe no doubt has a rich and fulfilling personal life and has many loves and hates, just like the rest of us. But, for the purpose of a pithy narrative, let's make him a bit more one-dimensional.\n\nSuffice to say that the grey cloud hovering over mom was not lost on Giuseppe. He vaguely recognized us as occasional customers and so turned on the old Italian charm as we paid for our order. Five minutes later and both thoroughly flirted with, mom and I left the pizza place with pizza and smiles to go.\n\nThe walk home was not quite as speedy as the walk from the park had been, but between the cool night air and the promise of pizza, we were both eager to get back inside. I initiated a bit of small talk, mostly just amused observations about Giuseppe, and mom responded, warming to the subject as we chatted. By the time we were back in our kitchen and placing obscene amounts of pizza on our plates mom seemed to have gotten over her disappointment and frustration from the park. We ate the pizza at the kitchen table, chatting about this and that long after the last slice had vanished. \n\n\"...so then I phoned Giuseppe and he just tells me to keep the pizzas. But I say 'What am I supposed to do with six twenty-four-inch pizzas?' And he says... he says...\"\n\n\"What did he say?\" prompted mom as my story faltered somewhat.\n\n\"He said: 'Eat them.'\" I finished, frowning slightly. \"Huh, I thought that story had a punchline. Sorry, mom.\"\n\nMom just shook her head, no doubt despairing at the comic genius that she had failed to raise. She opened her mouth to say something that I assume would have been intelligent, amusing, and cutting all at once. But all that was lost as she instead yawned with gusto.\n\nThat set me off, and I looked at the clock on the wall as I yawned, surprised at how late it was. \"Wow, bed time, I think,\" I said, suddenly feeling tired. I hadn't been a moment earlier, but like cartoon gravity, now my body knew how late it was it had decided to react accordingly.\n\n\"Yep,\" said mom, getting to her feet. \"After we wash up.\"\n\nI gave a little groan, but it was half hearted. After we put the remaining slices of pizza in the fridge there was almost no washing up to do and it was done before I could muster the energy to complain about it.\n\nThat done we trudged up the stairs. \"Night, mom,\" I said as I reached the summit.\n\n\"Good night, sweetheart,\" she said, giving me a lingering kiss on the cheek.\n\nWith that we headed our separate ways. Mom to her bedroom, me to the bathroom and from there to the warm comfort of my bed.\n\n---\n\n\"What seems to be the problem?\" asked the man in the computer store.\n\n\"It's the motherboard,\" I said, gesturing vaguely at my computer. \"I think it needs replacing.\"\n\n\"That much is obvious,\" he said, nodding in a knowing kind of way. He walked over to the side of the store where the wall was covered with labeled plastic drawers. \"What kind of computer is it?\" he asked, placing his hand on a drawer labeled \"Not a PC\".\n\n\"Uh, I think it's a PC,\" I said.\n\n\"I thought so,\" he said, moving to the neighboring drawer labeled \"PC\". He pulled it open and took out a small green circuit board, then came back over and handed it to me.\n\n\"Thanks. How do I install it?\" I asked, being something of a novice when it comes to computers.\n\nHis response was simply to sigh then press the eject button of my computer's CD drive. Once the tray had slid out he gestured to it.\n\nI popped the circuit board onto the tray then pushed it shut again. My computer started making deeply unimpressed noises.\n\n\"It'll take a minute to install,\" said the salesman over the noise. \"It's got to find a chauffeur.\"\n\n\"You mean a driver, right?\" I asked. But the salesman had pulled out a heavy looking tablecloth and was throwing it over the table in front of me. I looked around at the restaurant I was in. A gorilla stared back from the table next to me. I tried to remember if you were supposed to climb trees or pretend to be dead if a gorilla attacked you. Or was that pandas?\n\nMy musings were interrupted by the waiter pulling the tablecloth off the table and onto my lap.\n\n\"Steven,\" he said in a soft voice that most certainly didn't belong to him. He then started dragging the table cloth across my lap.\n\n\"Wha?\" I asked, my brain scrambling to keep up with events.\n\nI opened my eyes, my vision almost as bleary as my thoughts. I was in bed, my room dimly lit by the small lamp on my desk. The duvet I'd been lying under was being dragged off me by my mom, who was stood by my bed in just her pyjama top.\n\n\"Oh you're awake,\" she said quietly. \"That's lucky.\"\n\n\"Mom?\" I said groggily. \"What time is it?\"\n\nMom seemed to ignore my question and instead yanked my boxer shorts down my legs and tossed them aside. Then she looked back at me. \"It's I'm-unbelievably-horny-so-shut-up-and-give-me-your-cock,\" she said. Then added: \"O'clock.\"\n\nI had just enough time to focus on the clock by my bed and see that this translated to about 2:30am before mom clambered onto the bed, dropping her noticeably wet pussy onto my noticeably soft cock.\n\n\"C'mon,\" she muttered either to herself or to my cock. Whoever it was she was speaking to, they didn't have a chance to respond before she started sliding her hips rapidly back and forth, rubbing her pussy over the currently unimpressive length of my cock.\n\nI may have been half asleep but my cock seemed to be half awake, and slowly started to stiffen under mom's assault. As far as mom was concerned the operative word was 'slowly'. Losing patience, she maneuvered herself around on the bed until she was kneeling with her pussy hovering above my head and her head hovering above my cock. I'd seen enough porn to know where this was going, and, sure enough, before I could say 'what's twenty-three times three?' mom dropped her pussy down onto my face and, simultaneously, engulfed my cock in her mouth.\n\nI started lapping at mom's pussy, savoring the taste of her juices, before I encircled her clit with my lips and started teasing it with the tip of my tongue.\n\nMom's approach was less teasing and more like full on harassment. She didn't move her head at all initially, simply holding my whole cock in her mouth and sucking it furiously as her tongue slipped and slid around it. As my cock grew she started to bob her head, starting fast and only getting faster.\n\nI tried to reciprocate as best I could but mom's assault on my cock was seriously distracting me from my own oral efforts. In the time it took mom to bring my cock to something resembling a proper erection I'd barely managed a few licks of her clit. I redoubled my efforts, trying to recapture the skills I'd shown in the shed on Saturday evening.\n\nMy efforts were almost certainly in vain. Mom wasn't kidding about being horny already, and seemed almost oblivious to my oral ministrations. She was far too focused on my cock, which within a couple of minutes she had brought to full attention.\n\nAfter bobbing up and down along its length for another minute or so, mom released my cock from her mouth and started stroking it rapidly with her hand. \"Close?\" she asked, as if she was asking my cock directly.\n\nI was fully hard, that was true, but saying I was close to cumming would be pushing it. It still hadn't been that long since our previous session after all. \"I'm getting there,\" I responded, figuring that had the benefit of being true.\n\nMom carried on stroking for a few seconds then seemed to give a little shrug - though it was hard to tell what her shoulders were doing with my face buried between her legs. \"Close enough,\" she said, and crawled down the bed, removing her pussy from my face.\n\nI only had a moment to interpret what that comment meant, for then mom span around on the bed so that she was facing me whilst knelt over my stiff cock. With practiced ease she grabbed it and lined it up, before sinking her waiting pussy onto it.\n\nWe both groaned as she made first contact. Her groan deepened into a husky growl of pleasure as she pushed her weight down in order to force my cock up and inside her. My groan evolved slightly differently, becoming a pained grunt. Wet or not, mom was incredibly tight inside and her pussy squeezed hard enough around me to cause some discomfort.\n\nEither she was oblivious to my response or she chose to ignore it - which was fair given my occasionally blas\u00e9 approach to mom's comfort. It didn't really matter; mom lifted and sank back down her hips a few times, building a rhythm, and as she did so her pussy clearly got used to its intruder and relaxed in order to accommodate me. Soon only an ever building feeling of pleasure was emanating from my cock.\n\n\"Yes,\" mom hissed, riding me more vigorously with every thrust. She put her hands on my torso - using me for leverage as she humped, and pressing me down into the bed. She had her eyes closed, a look somewhere between intense pleasure and intense determination on her face. I felt like an oversized sex toy as I lay there with my hands on her knees, not that I was complaining.\n\n\"Oh God, mom,\" I murmured, \"that feels so mpff.\"\n\nI hadn't meant to say mpff of course, which I don't think is even a real word. No, that's just the noise that I managed to make with one of mom's hands clamped over my mouth.\n\n\"Shh, sweetie,\" she murmured back, her eyes still closed. \"Mommy's busy right now.\"\n\nIt was a little off putting to have mom treat me like this, but it felt too good to bother me. This was easily the longest amount of time I'd spent with my cock inside mom. I came to the realization that at this point we were, quite simply, having sex. That epiphany made my cock lurch inside mom and my hitherto distant orgasm felt like a suddenly imminent possibility. Mom was clearly coming to the same conclusion. Her hips bounced up and down over me, every time a little harder than the previous one, and each downstroke ending with a lewd slap of skin on skin.\n\nI tried to hump my hips up to meet mom's downstrokes, but struggled to get any real motion with her weight pressing me down. So instead I opted for Plan B. I began to slowly lift my knees. My intention was to tilt mom forward and down against me. Once she was low enough I'd be able to wrap my arms around her and hold her in place while I hammered my hips into her.\n\nMom initiated her Counterplan C. She removed her hands from my mouth and chest, then leaned back slightly and put them on my thighs, forcing my legs back down again. I couldn't tilt her forward any more, but as compensation, mom's arched back pushed her breasts forward, forming a mouth watering outline inside her pyjama top. Her new position had also caused her top to ride up slightly so I could now see her pussy as it rose and fell on my cock.\n\nActing on impulse I moved my hand to mom's crotch, placing my palm flat to her body and sliding my thumb down to rub over her clit. I'd barely touched it when mom let out a sudden squeal and started shaking.\n\n\"Fuck!\" she yelped, hunching forward and grabbing my wrist with one of her hands, then she arched back again and grabbed one of her tits with her other hand. After that she forced her hips down, crushing my thumb between us as she ground herself against me, trembling all the while.\n\nI had no desire to ruin mom's orgasm, close though mine was, so I let her shake her way through it. As soon as she calmed down I would be becoming more active in this encounter. No more mister nice son. She'd be on her back before she knew what happened. She'd be my sex toy, just like I'd been hers. She'd be crying out my name as I filled her with cock and cum alike.\n\nShe'd be... hopping off me and the bed and stepping away, apparently. \"Thanks, hon,\" she said. \"I needed that.\"\n\nI made a noise in response, a noise that somehow conveyed that I was glad I'd helped mom with her horniness, and that she could always count on me, but that I was now hard to the point of bursting and really really needed to finish. The last week had bestowed upon me an almost Pavlovian aversion to cumming outside of mom. So, hard though I was, I couldn't just jack off. That last bit wasn't communicated by the noise I made, that would be silly.\n\n\"Sorry, Steven,\" was mom's reply, as she looked at my throbbing dick. \"I'm too sensitive now after that, and it's late. I should head to bed.\" She came over and gave me a kiss on the forehead. \"I'll see you in the morning,\" she said, before exiting stage left.\n\nI thought about pursuing her like a bear, but it was nearly 3am and my body was unsure whether sleep or cumming was the real priority right now. If mom really was too sensitive to take my cock then that only left the sleep option. So I pulled the duvet back over me and waited for sleep to pull me under.\n\n---\n\nSleep didn't exactly draw me into its sweet embrace. Rather than a cozy hug it went for an awkward high five, which it missed, followed by a second one that ended with a dull thud rather than a satisfying clap. In a last gasp attempt to save the situation, I went for a fist bump. You can't mess up a fist bump, right? Well you can if you're going for some classic fist-to-fist bumpy action, whereas the metaphorical personification of sleep tries to shake your hand.\n\nI slept like shit, is what I'm trying to say.\n\nInitially I was just too horny to get to sleep. Mom had left my balls so blue that they were practically ultraviolet. But jacking off wasn't an option. I would've been within my rights to do so, I know, and soon enough I'd have to get used to masturbating again, but for now my cum belonged to mom. That left me waiting for my erection to go down, which took its sweet time. And then once I had calmed down from the state mom had left me in I started thinking about the next morning. About storming into mom's room the moment I woke up, ripping her bottoms off, and dumping what felt like a gallon of backed up cum inside her. If she was in the kitchen I'd fuck her over the table. In the living room? The couch would do. I couldn't help but fantasize about how I'd give her my cock in every room of the house - the ones we'd already done stuff in and the ones we hadn't. \n\nBy the time my dirty thoughts gave way to sleep it was already starting to lighten outside. My last waking thought was of the possibility that I wouldn't have to go anywhere to impale mom. If the night had proved anything it was that mom was seriously addicted to our sessions. Chances are I'd wake up to the sweet, sweet feeling of mom lowering her pussy straight onto my waiting hardon.\n\n---\n\nI woke with a start, some vague remnants of a dream about being a toy train driver already fading from memory. I looked around my room blearily. It was not a vast room and I could say unequivocally that mom was definitely not in there. My hardon was, but my bladder assured me that was normal morning wood rather than the remnants of a nocturnal visit from mom.\n\nOnce I'd popped to the bathroom I threw on some clothes and headed downstairs. In the kitchen I glanced at the clock and realized that 'morning wood' might have been a misnomer since it was the early afternoon already. For a moment I wondered why mom hadn't dragged me out of bed, but then I saw a note on the kitchen table.\n\n\"Gone out, back later. Mom x\" it said. Not the most informative of notes. There was no way of knowing whether she'd gone out a few minutes ago and would be back in several hours, or whether she'd gone out several hours ago and would be back in a few minutes. I picked up the note and stared at it from several angles, wondering if I could figure out how long it'd been there.\n\nBut no, CSI: Steven was a failure and I still had no clue. I made myself a vast lunch to make up for missing breakfast, devoured it, and washed up, all with no sign of mom. Five minutes passed by with me sat at the kitchen table twiddling my thumbs, then five more. After fifteen minutes I decided I was being ridiculous. Mom would be back when she was back and I wasn't going to magically summon her no matter how well twiddled my thumbs were.\n\nIf mom was going to vanish then I could too. I added a postscript to her note to tell her that I had headed out as well, then tossed the book I was reading in a bag and left the house."
    ],
    "authorname": "henryking",
    "tags": [
        "mother son sex",
        "mother son incest",
        "mom",
        "son",
        "humor"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/no-monkey-business-week-02"
}