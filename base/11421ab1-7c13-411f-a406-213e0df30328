{
    "title": "Succubus Summoning 202",
    "pages": [
        "As much as Phil disliked the Scrote, being a student in his Advanced Studies classes had some benefits. The first year room he'd shared with Jake Pulman had been little more than a cupboard with two beds. Compared to that, his new room was enormous. It even had its own toilet.\n\nAnd it was all Phil's. Even though the room contained an extra bed, Phil didn't have to share with any other student. He guessed the spare bed was supposed to be for his daemon, which presented a slight problem as currently Phil had two.\n\nOr maybe more, he wasn't exactly sure on that.\n\nHe doubted the lack of beds would be a problem. Rosa and Verd\u00e9 were succubi, daemonic sexual vampires. Most likely they'd see it as an excuse for one of them to share a bed with him, or with each other. As both of them looked as ravishing as extra-hot porn stars, this might have sounded fantastic if it wasn't for the tiny drawback that sex with a succubus was invariably fatal.\n\nHe'd somehow managed to survive so far. Barely. Currently they called him master.\n\nPhil didn't think that word meant what he thought it meant. \n\n\"Yeuch!\" Rosa said, horrified. \"They actually expect us to sleep here?\"\n\n\"It is a little pokey,\" Verd\u00e9 said.\n\nPokey? This was enormous compared to his last room.\n\n\"This is good for a student's room,\" he mumbled. He noticed someone had brought down his belongings and left them on the right hand bed in a little bundle.\n\nRosa walked over to the other bed and pressed a hand down on the mattress with a disapproving expression.\n\n\"Do these people know what comfort is?\" she complained.\n\n\"Very spartan,\" Verd\u00e9 said, entering the room and looking around.\n\n\"This won't do at all,\" Rosa said.\n\n\"All the rooms are like this,\" Phil said.\n\n\"How are we supposed to seduce yummy students on beds as hard as rocks with blankets that stink of old mould?\" Rosa said.\n\n\"Wait, what do you mean, seduce yummy students?\" Phil asked.\n\nRosa and Verd\u00e9 ignored him. They moved over to the door to the en-suite bathroom. They seemed less interested in what lay beyond it than the door itself. They opened it up a fraction and examined the jamb.\n\n\"Wood's a little old, but it should be okay,\" Verd\u00e9 said.\n\n\"Easier to hide than out in the main corridor,\" Rosa said.\n\nPhil didn't have the faintest idea what they were up to. He stood in the centre of the room and felt almost invisible. In a way it made a pleasant relief from one of the succubi jumping him for sex every five minutes.\n\n\"I'll call C\u03adr\u03bcl\u0259a,\" Verd\u00e9 said.\n\nShe produced a dainty little mobile phone and put it to her ear.\n\nRosa saw Phil's look of surprise and sniffed. \"Just because you Luddites still choose to dress up in medieval robes doesn't mean we have to ignore the latest advances in technology as well.\"\n\n\"Medieval robes have their uses.\" Verd\u00e9 flashed her green eyes at Phil and smiled as she slipped a hand into his warlock's robe and groped his privates.\n\n\"Hello C\u03adr\u03bcl\u0259a,\" Verd\u00e9 said, her attention drawn back to the phone.\n\n\"Yes, we're here. Can you see us?\" She continued the one-sided conversation.\n\n\"Good. Now perform the Aper-Portoirre ritual.\"\n\n\"Yes, then you can come to Earth too.\"\n\n\"No, not tonight.\"\n\n\"Aww, I know you're excited. You'll have to be patient. The stars will be right soon.\"\n\n\"Yes, then we'll have fun. Lots and lots of fun.\"\n\n\"Master's doing fine,\" Verd\u00e9 turned and smiled at Phil. \"Now go and start the ritual.\"\n\nVerd\u00e9 closed her little clamshell phone and put it away. She flashed Phil another bright smile.\n\nWhat was going on here? Rosa and Verd\u00e9 were in no mood to elaborate. They sat on the edge of the bed facing the en-suite door and shared a passionate kiss.\n\nPhil jumped as bright blue light flared above the old black hinges of the bathroom door. The light crackled and hissed as it extended in a line along the jam of the door. It looked like someone was using a welding torch on the other side of the door, or was cutting through with a high powered laser.\n\nFrom where?\n\nPhil wasn't sure he wanted to know the answer to that question.\n\nThe line of light continued to burn its way around the door until it came back up and reached the lower hinge. It flared brightly, as if a blue star was burning behind the door so brightly the light burst out through the cracks. Then it flared out. Puffs of black smoke smelling of sulphur welled up from the crack between the bottom of the door and the floor.\n\nThere was an expectant hush as the smoke dissipated.\n\nRosa nodded Phil on to open the door. \"Go on, open it,\" she said.\n\nPhil wasn't exactly eager to do this. A few minutes earlier the door had opened into a tiny little bathroom. He very much doubted this was the case now.\n\nRosa nodded again. \"Go on.\"\n\nIt wasn't a request. Phil walked up to what had been a plain wooden door leading to a plain little toilet. It still looked plain and woodeny. Utterly unremarkable.\n\nHe looked back at his two succubi. For some reason they'd got off the bed and were standing on the other side of it.\n\n\"Why are you standing so far back?\" he asked.\n\n\"Oh, no reason,\" Verd\u00e9 said, smiling sweetly.\n\nPhil looked back at the door, thinking about what might be on the other side of it and wondering if thinking about what might be on the other side of it was a sensible thing to be thinking about. He reached, slowly, for the handle.\n\nAn object popped into existence on the side of the door with a flash of blue light, nearly causing Phil's heart to jump up out of his mouth. It looked like a brightly coloured Fisher-Price toy designed for the children of megalomaniac scientists. It could be a dial. His eyes watered from looking at it. The lines and curves of the dial intersected in ways that should be topologically impossible.\n\nPhil didn't know what he was supposed to do with it\u2014if anything\u2014so he left it, turned the door handle and gave the door an experimental prod. The door swung open with a drawn out creak. Phil closed his eyes and braced himself for...what...\n\nA familiar perfumed fragrance greeted his nostrils. Phil opened his eyes and saw the main hallway of the succubi's castle. Ornate stairs lined with statues of lewd nymphs curved up to the second floor.\n\n\"Ah, perfect,\" Rosa said. She'd snuck up to Phil's shoulder without him noticing.\n\nThe gaudy dial next to the door caught her attention.\n\n\"Hmm, I wonder,\" she mused.\n\nShe pulled the door to and twiddled the dial. At least Phil thought she twiddled the dial. It hurt his brain to look at it.\n\n\"Now let's see...\"\n\nShe pushed the door open and this time Phil was looking into the gigantic bathroom with black marble walls and a huge circular pool with gold taps cast in the shape of buxom mermaids.\n\n\"Interesting, now what if...\"\n\nRosa pulled the door to, turned the dial and opened the door onto a different room. Phil recognised this one as well. It was the large pentagonal room with the enormous red bed. The walls were lined with skulls and the skeletons of the succubi's previous victims lay on top of the silk sheets.\n\n\"Clever girl,\" Verd\u00e9 said.\n\n\"This gives me an idea,\" Rosa said. She shared a smile with Verd\u00e9 as she manipulated the dial.\n\nThe door opened onto a room Phil hadn't seen before. Well, not a room exactly, it looked more like a cave. Even though it looked like they were underground, the cave was lit with a soft yellow glow. This glow came from the cave walls. Bright streams of molten lava flowed slowly through veins of clear crystal in the walls.\n\nThere were two naked girls with lush, gorgeous bodies lounging on a glossy black bed in the centre of the room. Both had long, lithe legs and flat, trim stomachs. Despite their athletic-looking frames, they also had large round breasts that looked like soft pillows.\n\nThey were not human.\n\nTheir skin was slate grey, almost verging on black, aside from mottled patterns of speckles running down their spine and along the front of their arms and legs. This was one area where the girls differed in appearance. The girl on the left had orange speckles whereas they were yellow for the girl on the right. The differences in colouration extended to their hair. Both had long jet-black braids with either strands of orange or yellow running through them.\n\nTheir tails were their most recognisably non-human feature, but unlike the other succubi, whose tails were slender like whips, their tails were broader and thicker and emerged above the otherwise ripe and inviting curves of their asses. To Phil they looked more like the tails of therapod dinosaurs. Come to think of it, they didn't seem to have horns or wings either.\n\nThe bed beneath them was large and shaped somewhere between a lozenge and a tear drop. The black surface shone like polished latex. The two girls lounged on it like bored aristocrats in exotic climes. A haze of smoke swirled in the air. Before the interruption they'd been lazily sucking on the pipes of tall, elaborate hookahs standing on either side of the bed. They turned and regarded the intruders with heavy-lidded eyes. Plush, kissable lips pouted in curious insouciance.\n\n\"Ah, Puff and Pfaffle,\" Rosa said. \"Just the pair of lazy lizards I was looking for. Take care of this human while Verd\u00e9 and I have some fun in the human world.\"\n\n\"Hey!\" Phil protested to no avail as Rosa grabbed his neck and hurled him bodily into the room.\n\nHe landed on his back on the bed right between the two girls. The bed rocked and swayed with his impact and continued to ebb and flow afterwards. It was filled with some kind of fluid, but it was too viscous to be water.\n\n\"Sorry,\" Phil said, looking up at the girl on his left with yellow speckles.\n\nThe girls didn't seem fazed by his intrusion. They responded by turning their bodies into him, pressing their large soft boobs against his shoulders, placing an arm across his chest and rolling a leg over each of Phil's. It didn't escape Phil's notice he was now pinned to the bed between them and that their bodies felt warm, bordering on hot, against him.\n\nHe looked back at the door only to see Rosa close it with a knowing wink. Blue light flashed along the outline of the door and when that faded there was no indication there had ever been a door there at all. Phil was looking at the same crystal-veined stone as the rest of the walls around him. The only exit he could see was a wide chimney in the roof leading up into darkness, but to reach that he'd need either wings or suction cups for hands and feet.\n\nThe two girls murmured in pleasure as they pulled Phil's robes aside and stroked his chest.\n\n\"I'm...um...Phil,\" Phil said, rather feebly. What had Rosa had thrown him into?\n\nThe girls said nothing. The girl with yellow speckles put a golden hookah pipe in her mouth and her soft plush lips bunched up as she took a long suck. She pursed those same kissable lips and exhaled a cloud of white smoke in Phil's face.\n\nThe effect was instantaneous. Phil sank back on the soft black bed. The perfumed smoke, languid and soporific, enveloped his mind in a numbing fog. His limbs felt like sacks of concrete, too heavy to move. In contrast, his blood started to race, like hot magma roaring through hard volcanic stone.\n\nThe corners of the girl's exquisite lips turned up in a smile that might have concerned Phil more were his senses not currently clouded. He was entranced as she squeezed the luscious hemisphere of her left breast and toyed with its erect nipple. The smooth skin of her tits was a lighter grey than the rest of her body. Through the haze he noticed yellow speckles clustered around the areole.\n\nThe other girl leaned close, her body pressing against him, and breathed warm air into his ear.\n\n\"She's Puff and I'm Pfaffle,\" she whispered. \"Now lie back and relax. You don't have to do a thing.\"\n\nDoing something was low down on Phil's list of priorities. The bed felt soft beneath him; their bodies felt soft against him. He didn't think he'd be able move if he wanted to anyway. His skull felt like it had been replaced with lead or some other equally dense metal. It was far too much effort to lift his head.\n\nInstead he relaxed as a warm hand with dexterous fingers fondled his balls and caressed his cock. A hot tongue, too slender and nimble to belong to a human, flickered teasingly in his ear.\n\nThe girl with yellow speckles, Puff, took another long pull on her hookah pipe. She propped herself up on her elbow and leaned over Phil, those sumptuous soft lips descending closer and closer until they pressed against Phil's. She exhaled again, this time directly into Phil's lungs and he felt the hot smoke surge through his body. The heat rushed through his body like a sirocco, collecting in his balls and driving his cock upwards in a throbbing erection. Puff murmured appreciatively as she stroked a hand up and down his rigid cock and fondled his balls.\n\nThey might not look the same, but Puff and Pfaffle were succubi just like Rosa and Verd\u00e9, Phil realised dully. His body felt heavy and lethargic in direct contrast to the twitchy eagerness of his cock and balls because they were concentrating all his energy into his sex organs.\n\nPreparing to suck it from him. Preparing to feed.\n\nAnd there was nothing he could do to stop them, undone by a simple puff of perfumed smoke.\n\nPfaffle lifted him high enough so she could pull his warlock robes off his unresisting body. He lay fully naked on the bed now and the glossy black surface felt warm and slightly tacky against his back and buttocks.\n\nPuff reversed her position on the bed, turning her body around until her cushiony lips hovered above his bobbing erection. A soft breast rested on his midriff and her hot body\u2014in this case literally as well as figuratively\u2014lay against his. Pfaffle leaned over his upper body, squashing a soft boob against his nipple.\n\n\"Relax. You ours now.\" Her own sumptuous lips curled up in a smile before puckering up as she took a long pull from her own hookah pipe.\n\nTheir bodies were more than warm and that heat was transferring to Phil. His temperature was rising. Perspiration welled up across his body and made the strange glossy covering of the bed beneath him feel sticky.\n\nPuff pursed her lips above the bulging head of Phil's cock and blew a series of white smoke rings that settled over his erection like hooplas. He squirmed in helpless pleasure. It was only hot air and smoke, but it felt like a tangible tunnel settling over his cock. He fancied he could feel each smoke ring lightly stroking down his shaft.\n\nTeased by the stimulation, his hips twitched and bucked, eager to thrust his manhood up into a more tactile sheath. The corner of Puff's fulsome lips turned up in a smile as she kept them tantalisingly out of reach of Phil's eager cock. Her warm fingers straddled his base and she toyed with his testicles.\n\nHe didn't see more as Pfaffle leant over him and crushed her soft lips against his. She exhaled and fire roared through his body. Phil felt light-headed and giddy. His temperature shot upwards into uncharted territories. Blood raced through Phil's temples and hot flushes flashed across his skin.\n\nHis bones were dry tinder, waiting for the spark to ignite them. A stab of fear clutched at his heart as he realised he was on the verge of burning up, literally.\n\nThankfully, at that moment a door lined with blue light opened in the cave wall and a sheepish looking Rosa appeared. Puff and Pfaffle paused what they were doing.\n\n\"Um, you know when I said, 'take care of him',\" Rosa said, flashing them a broad smile, \"you know I didn't mean 'take care of him' as in 'take care of him'.\"\n\nPuff and Pfaffle said nothing. They blinked heavy-lidded eyes.\n\n\"Good. Glad we're all clear on that,\" Rosa smiled. \"Look after him nicely and I'll be back to get him in the morning.\"\n\nShe withdrew behind the door, closing it behind her.\n\n\"So we don't get to smoke him,\" Puff said in a lilting voice. She sounded disappointed.\n\n\"No, not this time,\" Pfaffle replied. \"But he is ours until morning.\"\n\nShe selected a different hookah pipe and puffed another cloud of smoke\u2014bluish-white this time\u2014into Phil's face. A heavier lethargy settled over him, but his temperature thankfully climbed down from combustible levels. His arousal was not lessened in the slightest and Puff stoked it further as she blew more smoke rings around his throbbing erection.\n\n\"That's plenty of time,\" Puff said, \"and we can still puff on him a little.\"\n\nShe bobbed down, her plush lips parting around the bulging tip of Phil's cock and he shuddered in pleasure as she slowly drew him into her hot mouth. Those lips felt moist and lusciously soft as they brushed down his shaft. She took his whole length inside her mouth. A little puff of smoke escaped her lips as they finally met and smooched against the root of Phil's manhood.\n\nThen she began to suck.\n\nIf the soporific effects of the smoke hadn't made Phil lethargic and helpless, right now he'd be thrashing wildly in the throes of ecstasy. Puff didn't move her head. She didn't bob up and down. She didn't need to. Her lips and mouth puffed and sucked on Phil's cock as if it was a thicker version of her hookah pipe and the sensation was mind-blowing.\n\nPfaffle wasn't to be left out. She took a pull on her hookah and then crushed her lips down on Phil's in another blowback kiss. The weight, and heat, of her upper body pressed him down into the soft bed. As her lips moved against his, his body responded of its own volition\u2014lips working against hers, tongues dancing together. Another flood of heat surged into Phil, but this time it was balmy and languorous\u2014like lazing on a hot summer day\u2014rather than the intense, inflammatory heat of before. That heat sank into his balls and they bubbled and churned like mud springs, needing only gentle coaxing to erupt like Old Faithful.\n\nWhat the other girl was doing to Phil's cock was far more than gentle coaxing.\n\nPhil closed his eyes and exhaled a hot gasp back into Pfaffle's moist mouth as his orgasm boiled over and erupted up his shaft. Puff wrapped her luscious lips around his cock and guzzled it down. Her mouth puffed and sucked on his cock, eagerly wanting more and taking more until she'd sucked out the last dregs of Phil's ejaculate. She continued to suck, longingly, on his spent cock as she raised her head up off it.\n\nPfaffle rolled off Phil and let him breathe. He basked in the post-orgasmic glow of fulfilment, knowing\u2014if Puff and Pfaffle were anything like the other succubi\u2014it would only be a temporary respite.\n\nPuff sat up and wiped the back of her hand across her full lips. \"The young warlock tastes good,\" she said.\n\nShe lay back against him and exhaled another cloud of perfumed smoke into his face. Phil felt like he was sinking deeper into the soft, comfortable bed. His limbs felt like lead, but it was a pleasant, relaxed sensation, doubly so with the soft, warm bodies of Puff and Pfaffle sandwiching him.\n\n\"I think we should smoke him anyway,\" she said.\n\n\"Rosa would not like that,\" Pfaffle said.\n\nPuff paused, blinking her elegant, heavy-lidded eyes.\n\n\"The young warlock is master. If it his desire she cannot oppose it,\" she said.\n\nFogged and contented as he felt, Phil wasn't sure he liked where this conversation was heading.\n\n\"Mmm, yes,\" Pfaffle said, the 's' tailing off in a sibilant hiss. \"How about it, young warlock, would you like us to smoke you?\"\n\nShe took Phil's hand and placed it on the intimate mound between her legs. He felt her heat and her moistness beneath his fingers.\n\n\"It'll feel real nice,\" Puff murmured, her lips close enough to brush his cheek. Her warm hand went back to playing between Phil's legs.\n\nBefuddled by the smoke and their heat, Phil ran a finger along the folds of Pfaffle's sex. He marvelled at the feel. So warm. So silky smooth. His fingers slipped inside her. So moist. So tight.\n\nWhat was he doing?",
        "\"Do you want to experience ultimate pleasure?\" Pfaffle breathed in his ear.\n\nHot steam swirled through Phil's brain. He felt the heat of their bodies pressing against him. The folds of Pfaffle's pussy, as mobile as a mouth, tightened around his fingers and drew them deeper into her intimate warmth. Her sex sucked on his fingers, hinting of greater pleasures to come.\n\nDanger, his mind warned.\n\n\"I'd rather the experience was one I could look back upon and still enjoy many years from now,\" Phil answered after a deliberate moment of thought. \"Sorry,\" he added.\n\nPuff and Pfaffle exchanged glances and smiled.\n\n\"No need to be sorry,\" Pfaffle said.\n\n\"Tis a wise answer,\" Puff added.\n\nPfaffle's vagina released Phil's fingers as she moved in search of tastier prey. She slid across and straddled his body. Her fingers took his erection\u2014that hadn't gone away, no surprises there\u2014and steered it to the dripping folds of her womanhood. He felt her heat pouring over him. Looking up he marvelled at the perfect hemispheres of her breasts looming over him. Each erect nipple was surrounded by a spray of orange speckles.\n\n\"Now lie back and we'll give you a memory that will still feel as fresh as yesterday ninety years from now,\" she said.\n\nShe placed a hand over his erection, pressing it against her hot flesh. Her eyes closed and she sighed in pleasure as she sank down on him. Phil groaned as he entered her. The pleasure, that hot tightness, so good around his fingers, was magnified and even more intense around his throbbing cock. Her weight, her heat, settled on his groin. He watched as puffs of more smoke welled up out of her vagina as he entered her, as if fires were burning within her. He felt that same heat all around him as she took him all the way inside her, but it was a comfortable, erotic heat, not one that burnt and consumed.\n\nShe straddled him, his cock buried within the heat of her sex. He looked up at her and watched as she closed her eyes and toyed with her nipples. Those gorgeous breasts looked so ripe and inviting, so squeezable. He waited for her to start, to begin the up and down motions of her voluptuous body and create the friction that would ignite flames of ecstasy within him.\n\nShe didn't move. She didn't need to. Her pussy was motion enough, as he'd felt already with his fingers. It alternated between puffing on his cock as if it was a cigar and taking long drawn out sucks, like savouring an exotically flavoured lollipop. Phil lay back, writhing in helpless pleasure as her silken walls rubbed and squeezed against him.\n\n\"Other beings are so wasteful with sex,\" Puff said, turning his head so he was staring into her large amber eyes. \"So much frantic, needless motion; they tire themselves out far too soon.\"\n\nPhil knew then he was going to be in for an extremely long night.\n\nHe continued to squirm as Pfaffle's pulsing pussy sent waves of bliss rolling through his body. Puff smiled at his obvious loss of control. She took a long pull on her hookah pipe and exhaled a thick cloud of pink perfume into Phil's face. Phil's mind sailed away even as his body sank into what felt like a warm, comfortable womb. Puff pressed her lips against him and Phil lost himself in the pleasures of her kiss; lost himself in the pleasures of Pfaffle's pussy, puffing and sucking on his cock with delicate finesse.\n\nWhen he came, it was less an explosive eruption than a slow, steady river, pulsing up into the warm cave within her. He couldn't even tell how long it lasted. Time had become stuck between two ticks of a clock hand. Pfaffle lay down on him, the heat from her body joining with Puff's as they sandwiched him between their warm bodies. Her vagina continued to squeeze and suck on his manhood. Both kissed him and blew more perfumed smoke into his face. Phil drifted away on a cloud of purest bliss, feeling the slow, steady pulses of his semen flowing into Pfaffle's accepting body.\n\nAt some point they switched, Phil's erection sliding into Puff's equally luscious warmth. It was only a brief pause before her pussy was milking a gentle flow of seed from his cock. Squeezed within their warmth, Phil drifted off into a contented, satiated sleep, semen still oozing from his cock in blissful, languid pulses.\n\n* * * *\n\n\"Oi, lazy! Wake up!\"\n\nWhaa?\n\nPhil's eyelids sprang open at Rosa's voice. It took him a moment to remember where he was until he realised he was lying on Puff and Pfaffle's big black bed. The two girls were cuddled up on either side of him.\n\n\"Come on. Time to go. It's morning.\"\n\nDid he have to? His head was wedged between the soft pillows of their breasts. He felt contented and extremely relaxed.\n\n\"Gimme a minute,\" Phil said.\n\nOr a day.\n\nOr more.\n\nHe could lie here forever, wrapped between Puff and Pfaffle's bodies.\n\nOkay, so not forever, but a little while longer at least. Puff and Pfaffle's eyes said they were okay with that.\n\n\"Fine! Stay here if that's what you want.\" Rosa stepped back out of the cave and started to close the door behind her.\n\nAs fogged as Phil's thoughts were, he was struck by a perfect moment of clarity. If that door closed it would never open again. That rocky wall would remain a rocky wall forever and Phil would never leave this cosy little cave.\n\nWas that really so bad?\n\nHe looked up at Puff's languid, beautiful face. Her plush lips parted for the first time and he saw a neat row of pointed, sharp teeth behind them.\n\n\"Wait!\" Phil called out. He struggled to extricate himself from the tangle of Puff and Pfaffle's limbs and the soft, sagging bed beneath him. \"I'm coming.\"\n\nThe door stopped closing. Puff and Pfaffle were reluctant for him to go, but they didn't impede him as he slid off the bottom of the bed. He spotted his robes lying on the floor in a crumpled pile and scooped them up on the way to the exit.\n\n\"Come back again,\" Pfaffle said as he reached the door.\n\nPuff sucked on her pipe and her pussy puffed out a smoke ring that expanded outwards in a shape of a heart.\n\nThen they turned back to each other's embrace. Phil left them to each other and their hookah pipes as he stepped through the doorway and found himself back in his little room at Wargsnouts.\n\n\"Thought I'd lost you there,\" Rosa said. For a queer moment her blue eyes looked far older than the youthful, cheerleader-perfect lines of her face.\n\nIt was only a brief moment, almost too fast for Phil to catch.\n\n\"Who were they?\" Phil asked, looking back at the closed door.\n\n\"Those two? Just a pair of lazy lizards,\" Rosa answered.\n\nShe returned to the dial by the side of the door and turned it to another location. This time she banged loudly on the door before pushing it open. Phil realised then Verd\u00e9 wasn't in the room with them.\n\nVerd\u00e9 wasn't in the room with them because she was on the other side of the door, straddling a man on top of a lavish four-poster bed. They arrived in time to see the climax. Verd\u00e9 stretched her wings, tilted her head back and came down with a loud, orgasmic sigh. Beneath her the man moaned and shuddered. As Phil looked on it seemed like all the life and vitality of the man poured upwards out of him and into Verd\u00e9. His eyes rolled back even as his skin stretched taut around the sockets. His muscle and flesh melted away until only skin and bones remained. Then he was still.\n\n\"Always taking her time,\" Rosa tutted. \"She's as bad as those two sluggards.\"\n\nVerd\u00e9 leaned over and tenderly kissed the husk on the forehead. She got off and bounced towards them, broad smile on her face and her naked body glowing with fresh vitality.\n\n\"Wait! Wasn't that one of the...\" Phil said.\n\n\"Mmm, yes,\" Rosa said, rubbing her stomach and smiling.\n\n\"You can't go around eating the other students,\" Phil said, panic clutching at his chest. \"What if someone notices they're missing?\"\n\nRosa flashed him a wolfish grin that showed off her fangs. \"It's a school for Daemonology, silly. I bet students go missing all the time.\""
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "magic",
        "summoning",
        "warlock",
        "smoking",
        "hookah"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-202"
}