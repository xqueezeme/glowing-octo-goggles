{
    "title": "Two Hundred Dollars Ch. 02",
    "pages": [
        "189 Dollars\n\nTuesday rolled through Kent's life and his classes began to eat up more time. His Physics professor had created one of those \"group\" projects which always resulted with Kent doing a whole lot of work while a bunch of other people tagged along. The debates about how to start the project had extended well through dinner time and he didn't want to waste money eating on campus, so he got back to the apartment ravenously hungry.\n\nI should probably get a bicycle, he thought, but knew he wouldn't spend the money and, besides, he couldn't ride it through the winter anyway.\n\nVibrating between angry frustration at the idiots assigned to his project group and a lightheaded dizziness from his hunger, Kent stomped down the stairs, ignored the small living room at the bottom of the stairs and turned down the long hallway. He passed the small cove where the landlords had squeezed in a washer and dryer, went down the long hallway to the kitchen at the back of the apartment. Kent rushed to the fridge, breathing a sigh of relief when he found the glass container of leftover spaghetti, covered in a thick layer of meat-laden tomato sauce. Kent popped the plastic top off it and shoved it quickly into the microwave.\n\n\"Hey,\" Bailey called out softly from behind him.\n\nKent closed the door and punched up two minutes.\n\n\"Hey,\" he turned to her with a heavy sigh.\n\n\"You okay?\"\n\n\"Hungry,\" he replied blearily. \"Long day.\"\n\n\"Oh, cool,\" Bailey spoke curtly.\n\nShe paused on the threshold of the hallway and kitchen, before stumbling forward. \"I'm just getting some water.\"\n\n\"Right,\" Kent said as he slipped past her toward the small table.\n\nAfter she left, he sat down heavily at the table and wolfed down his meal. He considered a beer, but knew he had work to do, including a whole group project to carry on his shoulders, and summoned just enough willpower to leave the beer where it stood, taking water instead. Besides, beer deserved saving for the weekend.\n\n=============================\n\nFour hours later, having laid out the ground work for the \"group\" project, prepped for his Friday chem lab and taken a good hack at a math assignment, Kent began to relax a little and took a moment to breathe.\n\nHe could, if he wanted, just call up Netflix on his computer and watch something from his room, but he decided he needed to get out of his little box of a bedroom. Stepping into the hallway, he felt a great relief and his shoulders dropped about fifty pounds of tension. He turned to the living room where he'd hooked up his thirty five inch screen and stereo to the apartment's Internet connection.\n\nTaking a seat on the room's sole couch, he turned his back to the apartment and faced the television.\n\n\"Hey, Kent,\" Bailey called from behind him.\n\n\"Hey, Bailey,\" he replied.\n\n\"Looking better?\"\n\n\"Things aren't as shitty as they were four hours ago,\" he smiled. \"Assholes, y'know?\"\n\nBailey perked up and disappeared back into the hallway while Kent searched for something he hadn't watched yet. Moments later, Bailey returned, hopped over the back of the couch and sat on his right.\n\n\"What are ya gonna watch?\" she asked as he flipped through movie listings.\n\n\"Not sure,\" he replied.\n\nA long pause ensued.\n\n\"I, uh, just put a mark on the board,\" she said, looking straight ahead at the screen.\n\nKent thought about it for a moment.\n\n\"Not sure about that,\" he warned her. \"I've had a day and a half, here.\"\n\n\"So...?\"\n\nKent looked at her sideways. \"I might still be a bit frustrated.\"\n\n\"I think you're fine now,\" Bailey placed her hand on the inside of his thigh. \"Maybe it'll take your mind off things?\"\n\nKent became conscious of how closely she watched him as he inhaled, exhaled and forced himself to relax. Kent wondered if she could feel the bulge she'd started in his pants.\n\n\"Go back to my room?\" he asked and started to stand.\n\n\"No, it's okay,\" she said. \"Right here is fine.\"\n\n\"In the living room? What if someone -\"\n\n\"Carson's out,\" she said quickly. \"And we'll hear the door open if someone comes down.\"\n\nKent looked over his shoulder. Through the living room's doorway, which didn't have an actual door, he could see up the stairway to the exterior door. Bailey turned and looked up that way at the same time.\n\n\"I'll keep my jeans on,\" she said, \"Don't worry. The couch is facing away, right? Besides, the first place you spanked me was a living room, wasn't it?\"\n\nHe nodded in acknowledgement of her last point. A different living room had started this journey a great many months ago. She reached across to his left thigh, grazing the front of his jeans as she padded over and laid herself across his lap.\n\n\"Just like the first time,\" Bailey soothed, and Kent tasted a bit of desperation in her voice.\n\n\"Are you worried about having to do two tomorrow?\"\n\n\"No,\" Bailey pushed her hips down into his groin, his erection poking through uncomfortably. \"Doesn't matter to me.\"\n\nKent shrugged. \"Alright. How you want it?\"\n\n\"Um. Left and right. Back and forth.\"\n\nHe squeezed her left cheek and she lifted her hips, pushing back against his hand and shifting her body away from him.\n\n\"Ready?\"\n\n\"Yeah.\"\n\nHe slapped at her denim-clad rear with some hesitation, aiming for a spot dead centre of her protruding form. Kent moved his hand to the right and struck again, a little lower this time.\n\nWhen he came back to the left, he laid a third slap on her.\n\n\"Oh,\" she said in response to that. \"I forgot to count.\"\n\nShe dropped her hips down into his groin again and sighed. \"You'll have to start over. I'll remember to count.\"\n\nWith that, Bailey lifted her hips again. \"Go ahead.\"\n\nPerplexed by her behaviour, Kent lost focus, relaxed a little and struck her left cheek good and hard, nice and low where she sat.\n\nThis time, Bailey groaned out, \"One.\"\n\nHe went to the right cheek and slapped her low there, too.\n\n\"Two,\" she moaned. \"Going after my seat again.\"\n\n\"Should I pick a different spot?\"\n\nBailey sniffed a little. \"They're yours to do.\"\n\n\"Even though you're picking which side?\"\n\n\"If you want to do them all on one cheek, do it,\" she snapped. \"If you want it so I can't sit down, do it. It's your money.\"\n\nKent exhaled hard and laid a hard slap on the lowest part of her right cheek.\n\n\"Oh!\" she exclaimed. \"Three.\"\n\nHe came at her right cheek again and again, striking the same spot in rapid succession.\n\n\"Four! Five! Six!\"\n\n\"That better for you?\" he asked, a little harshness in his voice.\n\n\"At least you're not whining about your day like a goddamn sissy,\" Bailey pointed out.\n\n\"I still have you over my lap,\" he pointed out coldly.\n\nHe slapped her right cheek again.\n\n\"Seven!\"\n\nAnd again.\n\n\"Eight! Jesus!\"\n\nThe screen door clicked open, far up the stairway, and someone starting turning the door knob. Bailey sat bolt upright next to him and the two of them stared at each other in panic, but the door didn't open.\n\n\"I, uh, locked the door after you came in,\" Bailey said while they listened to Carson fiddling with the lock.\n\n\"When?\"\n\n\"When you were all hungry and cranky.\"\n\n\"Oh.\"\n\nCarson got the door open and came down the stairs. \"Hey guys.\"\n\n\"Hey,\" they answered.\n\n\"Whatcha watching?\"\n\n\"Haven't decided yet,\" Kent replied over his shoulder and pretended he cared about navigating through the menu.\n\nCarson looked thoughtful for a moment. \"Nah. Too late for me anyway. I'm going to bed.\"\n\nHe sauntered off down the hallway and into the washroom.\n\nBailey threw herself over Kent's lap the moment she heard the door close. \"Two more quick ones,\" she whispered impatiently.\n\n\"Now?\"\n\nShe ground herself into his lap. \"Now. Wherever you want, just do it.\"\n\nWith a smirk, Kent laid two more slaps on that low spot again.\n\n\"Nine, ten,\" she hissed. \"Goddammit.\"\n\n\"You said 'wherever'.\"\n\n\"Yes,\" Bailey hissed, but still lay across his lap.\n\nShe pushed his hand down off her ass, onto her thigh, so she could rub the sore spot.\n\n\"As long as your hand is still there,\" she snarked, \"why don't you do something useful?\"\n\n\"Pardon?\"\n\n\"It's sore?\" she offered. \"You could... rub it?\"\n\n\"Oh. Uh, sure.\"\n\nHe slid his hand up her thigh to the lower part of her cheek and started making gentle circles where he'd spanked her hardest.\n\nBailey winced as he did so.\n\n\"The jeans chafe too much,\" she said.\n\nKent took his hand away as Bailey lifted her hips up and undid her jeans from underneath. He heard her unzip as well.\n\n\"There,\" she said, \"Try now.\"\n\nHe put his right hand back on her rear.\n\n\"No,\" she chided as she folded her arms under her head and faced toward the television. \"Underneath, or you'll skin me alive with the denim.\"\n\n\"Oh,\" Kent replied.\n\nWith the jeans undone, he could see the waistband of the red, lacy panties she had once lent to Laura. With her upper body on his left, he had to slide his left hand between the panties and her snug jeans, just managing to reach down to the sore part of her right cheek. It felt hot to his fingertips.\n\nBailey let out a soft, \"Ah\" as his cool fingers sunk into her flesh and started massaging the rough spot.\n\n\"Nice,\" she remarked, wiggling her hips a little, which both ground into his manhood and also moved against his grip on her ass cheek.\n\nOut in the hallway, Carson opened the door of the washroom, eliciting a twitch from Bailey. Her attempt to rise served to let him know his time inside her pants had come to an end. Kent withdrew his hand and Bailey sat up. For just a moment as she knelt next to him, he saw the entire front of her panties, in all their translucent, pubic hair revealing glory. She kept herself trim too, with a neat little line of hair along the cleavage of her lips.\n\nBailey, her eyes on the hallway, only gave him a moment to look -- and probably didn't even see his gaze -- before she zipped and buttoned up her pants.\n\n\"You'll fix the white board?\" she reminded him.\n\n\"Of course,\" he replied, \"Or you can.\"\n\n\"Naw,\" Bailey said, inhaling as she adjusted her pants. Then she recited, \"I make the tick marks. Then the spankings. You fix the numbers. Right?\"\n\nKent tilted his head side to side, acknowledging that he had established that rule. \"Sure.\"\n\n\"Okay. Later.\"\n\nBailey threw a leg over the back of the couch, straddling it rather roughly in Kent's opinion, before she scissored her legs over it and left the room.\n\nKent adjusted the crotch of his pants as he stood and turned off the TV. He returned to his room, knowing he wouldn't find the right kind of movies on Netflix.\n\n=============================\n\nBailey had already unbuttoned her jeans before she'd even closed her bedroom door. She leaned her back against the door and locked it behind her back, panting uncontrollably as she dropped her pants to the floor.\n\nGoddammit, Kent, she thought, making me work so hard for this.\n\nShe'd wanted her spanking the moment he had come home, but she'd read his body language in the kitchen and decided against it. Something hadn't rung quite right in his attitude. Kent had worried, even hours later, that he might have too much anger in him, but that hadn't concerned Bailey. With the jeans on, an extra hard slap or two wouldn't have bothered her too much.\n\nNo, something else in his demeanour had blocked her desire.\n\nSo she'd waited.\n\nBailey reached back with her right hand and gently traced her fingertips over her sore cheek. Even her own fingers felt cool against the harshly treated flesh, despite the heat now washing over her entire body.\n\nAnd then, she thought, he laid those weak-ass spankings on me. Too scared he might still be too angry.\n\nShe sighed in frustration, and plopped herself down in her chair, hard and fast so she felt it against her bare skin.\n\nBut I made him start over, and insulted him for being such a whiner.\n\nThe insult had come out sharp and honest because Bailey had meant it. She'd let her sexual frustration boil over because his grumpiness had initially prevented her from getting a proper spanking from him.\n\nBut, then, finally, he did it right.\n\nBailey savoured the soreness in her one cheek, so unbalanced, as she slouched in the chair and reached for her pillow. When she pushed the stiff corner of it against her clitoris, it occurred to her that she didn't play with herself this way very often, but felt confident it would work today.\n\nShe remembered Kent taking charge then, making her earn her dollar for the day, going after that one spot again and again. Following that, when she undid her pants, his timid hand sliding under jeans -- not even trying to get under her panties like she'd expected.\n\nBailey inhaled a stuttering breath as she slumped farther down in the chair, using her hands to force the pillow corner into her genitals.\n\nShe thought about his cool fingers, squeezing and sinking deep into her reddened flesh as a moan escaped her lips.\n\nHe's probably jerking off now, too.<br >His erection had poked her multiple times through the whole sessions, and she'd repeatedly prodded him so she could feel it, especially while he was rubbing her ass.\n\nAnother juddering breath entered her lungs as the pillow pushed her panties between her lips into her vagina.\n\nAnd you looked, she thought, a sense of delicious exhibitionism seizing her. I know you looked when I got up on my knees. You saw me through my underwear.\n\nThe pillow didn't do the trick anymore. She didn't much like touching herself, preferring the slight emotional distance of the pillow, but she threw her shyness aside and slid her fingers under her panties as she closed her eyes.\n\nIt took only a few seconds of pushing down on her clit before her body starting shaking and she exhaled.\n\nHaaaa!\n\nHer body seized up so hard that her lungs emptied of air. Her body had assigned every bit of energy available to the pulsations inside her vagina, twitching away, expelling minute amounts of fluid that wet her panties and fingertips.\n\nThe orgasm tapered off and she felt her hand trembling as the muscles in the rest of her body relaxed. Bailey drew in a desperate, gasping breath as she recovered from oxygen deprivation.\n\nHow much longer, she wondered, could this go on? I can't even masturbate without -\n\nShe shook it off and went to look for a pair of pyjamas to put on, thinking she ought to at least brush her teeth before bed and maybe shouldn't be flashing her butt around. But when she opened the drawer, she saw the little spiral bound notebook first and took it out.\n\nSliding the pencil out of its place in the metal spiral, Bailey opened to the first page. She could have tracked everything on her laptop, but that seemed so much less personal. She kept track in this little book instead.\n\n\"2018 09 25 Tu,\" she wrote on a new line.\n\nOn the other side of the margin line, she wrote \"$1\" and, not quite daring enough to scribe the word \"spanking\", instead added, \"10sp\", followed by a short note, \"living room\".\n\nIt wouldn't let anyone else figure out what she and Kent had done, but she could easily recount what had transpired by reading down the few lines on the first page.\n\nBailey looked back at the ledger for the night Laura had come over. That whole affair had almost made her throw the page out and re-do everything to add a new column for who got spanked. Instead, she'd just put Laura's name in the date column, on the next row, and marked down her spankings there. Looking at it now, she felt contented with the format.\n\nIn her head, naturally, Bailey told herself that she needed to keep track like this so Kent couldn't cheat her out of her money.\n\n=============================\n\nWednesday evening, while the sun hung low and orange in the sky outside his window, Bailey came to Kent again, casually walking into his room and making her mark under the \"$188\". She closed the door behind her and waited for him to turn around, admiring in the meantime the way the oranges and reds in the sky lit the space in the absence of artificial lighting.\n\n\"How do you want it this time?\" he asked.\n\n\"Your way,\" Bailey looked him in the eye and nodded at his chair, currently blocking the place she needed to stand.\n\nKent pushed his chair aside as he stood and waved her into place. She put her hands on the desk and bent over, maybe just a little more than the forty-five degrees she'd done before.\n\nHis hand, somewhat charitably, came to rest on her left cheek, instead of the beleaguered right.\n\n\"Ready?\" he asked.\n\n\"Not yet,\" she said. \"I want it underneath.\"\n\n\"Alright,\" Kent removed his hand, waiting.\n\nBailey waited, too.\n\nAfter a moment, Kent said, \"Soooo?\"\n\n\"My... fingers are stiff,\" she said. \"Can you... do my pants?\"\n\nBailey took a deep breath, waiting for his hands to come around her waist and undo the button on the front of her jeans.\n\n\"Is your wardrobe entirely tight denim?\" he asked, fighting with the button until it popped open.\n\nA gasp came from her as he undid the topmost part of her zipper, releasing the pressure around her waist. She felt the rear of the waistband come away from her body.\n\nAny moment now, he'll realize.\n\nKent placed his hands on her hips and pushed her jeans down. She heard him suck in his breath suddenly.\n\nHe knows, she felt a delicious thrill go up her spine.\n\n\"No underwear?\" his surprise made it sound like a question.\n\n\"Oh, yeah,\" Bailey tried to make it sound natural, but had to face the wall, knowing her eyes couldn't carry off the pretenese.\n\nOnce her jeans passed her cheeks, nothing could really stop them from falling. She squeezed her knees together just enough to catch the waistband there, but knew he could see a lot of her.\n\nKent let out a low whistle. \"Have you seen how red your cheek is?\"\n\n\"It's nothing,\" she denied airily.\n\nHe murmured a slight disagreement and his hand came to rest, once again, on her left cheek.\n\n\"Ready?\" he asked.\n\n\"Four,\" she said. \"Bare ass, right?\"\n\n\"Right. All on the left side.\"\n\n\"Wherever you like,\" she pointed out, willing him to take more charge, \"But if you want to... even things up, go ahead.\n\nHis hand moved lower on her cheek and she shivered, because she already knew what her right cheek looked like and she wanted him to make the left match.\n\nThe first slap came in low and hard, a high-pitched snap echoing in the little room.\n\n\"One,\" she moaned, thinking, please do this right.\n\nThe second one hit the same spot.\n\nOh, yes.\n\n\"Two.\"\n\nThe third one came in higher, harder and shook her body. Her knees trembled, lost their grip and Bailey let her jeans fall to her ankles.\n\n\"Mm,\" Bailey's voice stayed light. \"Three.\"\n\nHis hand swept back, striking her directly on the lowest part of her cheek.\n\n\"Four,\" she groaned low and hard.\n\nShe exhaled softly, imagining Kent still standing there, looking at her body, knowing how red her right cheek looked, wondering if the left matched.\n\nDelicately, aware of his gaze, she reached down with only a slight bend in her knees and pulled up her jeans. She kept the waistband tight to her skin, feeling his gaze the whole time, right up until she covered herself again and zipped up.\n\n\"One eighty seven,\" Kent breathed softly.\n\n\"Yeah,\" she said as she turned around. \"Long way to go.\"\n\nShe didn't let the smirk reach her face until she slipped out of the room.\n\n=============================\n\nEarly the next day, the sun barely risen and the smell of coffee permeating the apartment, Kent passed Bailey as she left the kitchen for her first class.\n\n\"Oh, uh,\" she stammered. \"I might be out late tonight. I have a bunch of stuff to do.\"\n\nBailey nodded at Carson's door, just a step or two away, and Kent understood her need to speak in a slightly obtuse fashion.",
        "\"Okay,\" Kent shrugged. \"Can always catch you tomorrow.\"\n\n\"Right,\" Bailey nodded, satisfied he'd received the intent of her communication.\n\nKent started toward the kitchen but turned around to look down the hallway as Bailey bent over to pick up her backpack. When she stood up, she turned and looked back over her shoulder, letting a smirk come to her face as their eyes met.\n\n=============================\n\nThe late night on Wednesday, almost getting caught with Bailey in his lap on Tuesday, and then feeling her up under her jeans, had taken a lot out of Kent and kept him up late with the tension -- masturbation or not.\n\nOperating on the perfectly reasonable supposition that she wouldn't visit on Thursday, Kent called it a night by ten o'clock, cleaned up for bed and went promptly to sleep.\n\nIn the communication gap between men and women, there exist a great number of differences that are known to neither. What is commonplace for one seems odd to the other. Women generally expect their communal showers to have privacy curtains, for instance, while men are expected to shower in one giant room with a bunch of spigots on the wall.\n\nAnother crucial difference came into play this warm Thursday night, as Kent lay sleeping on top of his covers, with a light breeze coming in the window, slipping its way over his prone, boxer-short clad form, through his room and under his bedroom door.\n\nKent had not locked his door. He had closed it, only because he knew that Bailey and Carson might come home late and make a bit of noise or turn on the hall light on their way past, and he wanted to sleep through that. But he saw no reason, since he was in the apartment, to go to the absurd length of locking the door.\n\nBailey, naturally, would always lock her door, because prudent, sensible girls received thorough training from their mothers to do that sort of thing.\n\nBut Bailey, having a fairly shrewd sense of 19 year old boys, had long ago figured out that boys did not receive mandatory training on this subject the moment they hit puberty, and most didn't regularly lock the doors of the places in which they lived.\n\nThe appreciation of this simple difference allowed Bailey, tiptoeing through the darkened hallway in an old, threadbare pink nightgown, to slip into Kent's room without him even waking up. She had already made certain that Carson had fallen asleep, because the nightgown was years old, long since outgrown, and really didn't cover her very far. Such pieces of clothing only kept themselves out of the trash through nostalgia and sentimentalism. But tonight, it generated for Bailey just the right amount of daring.\n\nShe paused after gently closing the door, listening carefully to the pattern of his breathing, noting how the calm, unconcerned inhale and exhale didn't alter in the slightest.\n\nI could be a thief, Bailey shook her head. I could be here to stab him and he didn't even hear me coming in.\n\nThe tiniest amount of light filtered in through the high window from a distant streetlight and Bailey gave her eyes time to adjust. Everything seemed grey and indistinct, despite the time spent in the dark hallway. Most of the time, a student's room had a digital clock, or a few blue LEDs shining away from some electronic device, but Kent evidently liked his room dark.\n\nBailey took a breath and decided she'd have to fake it. She'd paced the room off once before, when Kent had suggested her drunkenness ought to disqualify her for the night.\n\nWith her hands out in front of her, she quietly paced off, toe to heel, toward the light of the window. She felt herself getting closer, the breathing getting louder. Her knee bumped the side of the mattress. Now she just had to find him.\n\nLooking carefully, she made him out, lying on his stomach with his head toward her right side. He slept facing the door, with his right knee curled up just a little.\n\nWhen she realized how perfectly she'd imagined this, her chest rose with an involuntary breath.\n\nEver so gently, she sat on the bed and laid herself down with her back to him\n\nFinally, groggily, he woke up.\n\n\"I -- whuh -- Bailey?\"\n\n\"Who else?\" she whispered as she backed up into his hip.\n\n\"I thought -- you said -\"\n\n\"I had some time after all,\" she whispered. \"If you're up for it.\"\n\nHis right hand, having lain somewhere above his head, gently found the top of her head. Bailey felt the softest touch Kent had ever laid on her as his fingers slid down over her hair to her bare shoulder. Bailey shivered as she felt him slowly moving his hand down the entire length of her arm, raising frail little hairs the entire way.\n\nShe spread her fingertips, stretching them down past the hem of her nightgown, so when Kent's fingers reached the end, his touch slid right onto her thigh. Bailey felt his breath on the back of her neck.\n\n\"Lift up the gown,\" she said. \"Underneath.\"\n\nKent pushed the gown up.\n\n\"No panties,\" she pointed out as he hand cupped her right cheek. \"Four?\"\n\n\"Mm,\" Kent squeezed her cheek in a strange way that hinted of defiance. \"The discount was for seeing you. I can't see anything at all right now.\"\n\n\"Oh,\" she breathed in sharply when she heard his tone, \"So... five?\"\n\n\"Yeah, five.\"\n\nIt did mean one more spanking, but he'd sounded definitive. Bailey could have turned on the lights, demanded it just be four, but this particular evening she wanted it very, very dark.\n\nShe turned over slowly onto her stomach, letting Kent's hand keep up with her turn, holding its grip on her cheek, and lifted her hips up in the air.\n\nWith the darkness protecting her, she let the nightgown fall up her body, leaving most of her back bare too. Further relying on the shield of obscurity, her right hand, the one farthest from Kent, slid down her body and pushed at her genitals.\n\nI hope he doesn't notice, she thought, although she couldn't even explain to herself why she felt the need to keep her secret. Maybe because he'll stop taking spankings for money if he finds out.\n\nShe knew, though, that she needed to get the timing just right. She slid a finger between her lips, making her body tingle, just as Kent spoke.\n\n\"Ready?\"\n\nBailey wiggled her hips a little, bracing against his hand. \"Yes.\"\n\nGiven their position, he wouldn't be able to spank her very low, but she didn't mind. She'd already had a good two days of awkward sitting to keep their nightly sessions in mind. She felt completely at ease with him spanking some other part of her ass.\n\nThe first slap came down on her bare flesh right in the centre. She hadn't realized, before hand, how much harder the pain would come with her hips bent more than ninety degrees. Bailey had stretched her muscles and tendons so far that the impact vibrated her body instead of shaking her flesh. The collision cracked through the silence of the room, echoing high and sharp, so contrary to the surreptitious whispering of their encounter thus far.\n\n\"One,\" she moaned, and pushed her finger hard against her clitoris, feeling the wetness that had started building before she'd even entered the room.\n\nKent moved his hand to her left cheek and she turned her hips away. He squeezed first, then pulled back and let her have it.\n\n\"Two,\" Bailey cried softly, telling herself that she'd have to take her spankings this way every time from now on.\n\nBack to the right, she flexed her thighs as she masturbated, letting him feel her muscles when he gripped her cheek. His hand came down, so hard this time, Bailey imagined they could hear it upstairs.\n\n\"Three.\"\n\nShe increased the vigour of her stroking, her fluids keeping her three fingers slippery as they powered away at her inner lips.\n\nBailey knew Kent could hear her panting, but she hoped he couldn't feel the undulations from her masturbation.\n\nDarkness is my shield.\n\nShe wiggled her hips back and forth, hoping that would hide her actions. It also greatly improved the sensation her fingers made, wiggling between her lips and her clit.\n\nKent went to strike her left cheek, but she'd moved herself so much between grope and spank, only his fingers caught her.\n\n\"Sorry. Just do it again,\" she panted, and held still while he cupped her left cheek and let her have her fourth one.\n\n\"Four,\" she whimpered softly, and plunged her face into the pillow, knowing what was about to happen, thanking all the gods she knew by name that she hadn't argued against taking five.\n\nShe just needed one more...\n\nKent's hand came down hard on her right cheek and Bailey's muffled screech drained itself into his pillow. Shaking madly, her fingers jammed against her genitals, she curled up in a ball and fell sideways, trembling as she tried to regain her breath.\n\n\"Five,\" Bailey whispered, her voice soft and content.\n\n\"You...okay?\" Kent asked, not entirely sure about the shriek, but casually resting his hand on her bare hip, starting to rub the spot he'd spanked hardest in slow circles.\n\nShe became aware, having rolled sideways toward him, that her left cheek had come to lay against his erection. Only the thin layer of his boxer shorts separated them.\n\nBut you can't do anything, something whispered inside her head. Can you? No. It won't work that way. We have to leave. You do you and he'll do him. Don't break it, now.\n\n\"I'm fine,\" she heaved. \"You'll, ah, mark the board?\"\n\nStanding up, she felt the nightgown shift, sweat making it cling in an ungainly fashion so she had to force it down. God, I can smell myself. Dripping so badly.\n\n\"Yeah, no problem.\"\n\n\"Perfect,\" she whispered, and tiptoed out of the room.\n\n=============================\n\nJesus, Kent thought, jerking madly the moment she left the room. He took off his shorts and pointed the head of his cock into them.\n\nNot only was her ass up against my cock, her skin was hot.\n\nBailey had been sweating hard, taking that spanking. She'd even screamed into his pillow. Laying on his side, he could smell her hair in the pillow -- the scent of her shampoo, conditioner and a kind of perfume. A faint orange and strawberry scent lingered in the air, mixing together with... one of those floral scents. Kent couldn't tell lilac from lavender, but he'd never noticed any of those things before. But in the dark, what else did he have?\n\nOn top of all that, he could still feel the curve of her cheek in his hand, tight because of the way she'd lifted her hips up so high.\n\nHe felt his groin spasm as it began expelling semen into his shorts, imagining loosing himself all over her spanking-reddened cheeks.\n\nChrist, woman.\n\nKent's breathing calmed down once he'd emptied himself and discarded the shorts on the basement floor.\n\nCan I get back to sleep now?\n\nHe doubted it, and so he lay on his back, thinking and catching his breath while he wondered about Bailey. Had she intended to skip tonight because she'd taken too much damage? Had she then changed her mind, panicked about falling behind in the count?\n\nKent liked spanking her and he could acknowledge that without shame. And not once had he had slapped her butt so hard that she'd stopped coming back. She'd bantered about it, sure, and whined a bit, maybe, to cover up her embarrassment. But Bailey always came back and never once had she tried to pay him any of the money she owed.\n\nAnd he started thinking about that shriek in the pillow.\n\nVery odd, he decided.\n\n=============================\n\nWhen he rose Friday morning, he went straight to the shower to properly wash himself. Despite it all, he'd slept well and good. The scent of coffee throughout the basement had faded and grown old, from which Kent deduced Bailey had left very early for her first lecture. He took his time in the shower, unable to shake images of her from his mind.\n\nThe clearest pictures came from the very first night: Bailey leaning against the door frame; Bailey crawling over his lap. He had grown accustomed to the feeling of her denim jeans, both the texture when he touched her and the distinct stinging sensation when he spanked her.\n\nLast night, though, had evoked different sensations.\n\nWith his eyes denied, he smelled her. Even as the soap and shampoo ran every real odour off his body, Kent could still remember the orange and strawberry, and the floral scents from her hair. He'd slept on the same pillow where her head had lain for a few brief moments and the smell of her stayed in his nose the whole night.\n\nHe'd probably smell it all day long.\n\nAnd without his eyes, he'd had to feel for her legs, grope around her cheeks to get the right spot, feel the little hollows in the sides of her cheeks. Every goose bump and curve drew his attention anew.\n\nKent cranked the shower off and towelled himself dry in a hurry. He could still take down an emergency breakfast and make it to class.\n\n=============================\n\nWhen he came home for a nap, he half expected to find her waiting, but she didn't show up for the entire afternoon, so he slept well and arrived refreshed for his lab. He didn't see her Friday night either, and that didn't bother him. Kent had hit the point at which the intensity of his experiences had overwhelmed him, left him wanting to savour all the emotions his last encounter had peppered his mind with.\n\nHe didn't even play any games or watch any TV. He filled out his lab report without an idle thought in his brain.\n\nSometime around 11pm, Kent went to sleep, content that Bailey would either drop by or not, and he could take it either way.\n\nNo one disturbed him.\n\n=============================\n\nKent and Bailey didn't run into each other until Saturday morning when she joined him for breakfast.\n\n\"How ya feeling?\" he asked.\n\n\"Good,\" she smiled. \"Missed yesterday though.\"\n\n\"S'alright,\" Kent shrugged it off.\n\nBailey smiled again and they sat across from each other, talking about school and classes, as if nothing strange ever happened between them. Kent had idiots for project partners. Bailey had a T.A. so smart, no one in the class could understand the woman. Kent had too many midterms coming up at once while Bailey had three assignments due Monday.\n\nThey washed the dishes when they finished eating and went down the hallway, ostensibly toward their heavy loads of school work.\n\n\"Just one thing,\" she called out as they passed her door.\n\n\"Hm?\"\n\nShe stood with her back to the door, holding it ajar.\n\n\"For, uh, next time,\" she jerked her head toward her room.\n\n\"What?\"\n\n\"You can pick,\" her eyes went to the ceiling. \"For the next time.\"\n\nShe pushed the door open with her backside and waved him in with another jerk of her head.\n\nHe saw her little desk -- a real one with drawers and everything -- and her four-drawer, golden-stained dresser covered with a collection of framed pictures. In the far corner of the room sat a single bed, neatly made up with clean white sheets.\n\nUpon that bed, she had laid half a dozen pairs of panties, none of which he had seen before.\n\n\"Oh,\" he said.\n\n\"Choose,\" she said, eyeing the hallway warily.\n\nThree of the pairs were simple black with varying cuts. Bailey had laid them out with their fronts facing upward, so he could see that none had any sheer or transparent parts. The fourth and fifth tended into the dark blue area, one with a delicate lace edge, the other seemingly designed for athletics. The sixth, on the end of the bed, was a white thong with a sheer, translucent front, woven with a strange floral design despite its transparency.\n\n\"The white one,\" he said, as if he really had a choice.\n\n\"That's what I figured,\" Bailey replied. \"But I thought you could have a look.\"\n\n\"Thanks,\" he smiled.\n\nKent and Bailey looked at each other awkwardly, at which point Bailey -- still standing at the door -- pursed her lips and looked up at the ceiling. Kent gave a half-shrug and walked past her out of the room.\n\n\"Later,\" she said lightly.\n\n\"Later.\"\n\n=============================\n\nDarkness came and Kent kept himself busy to keep his mind off Bailey. He heard footsteps come by his door late at night, booted and masculine; Carson on his way out. A moment later, Bailey's bare feet whispered past as well, not stopping. Where did she go without shoes? He heard the lock click at the top of the stairs and, walking more heavily this time, almost if she wanted him to hear her coming.\n\nA rapping came at his chamber door.\n\nBailey slipped into his room, wearing her black jeans accompanied by a mid-riff baring black halter top, and stood next to the whiteboard.\n\nKent only raised his eyebrows, waiting for her.\n\nWith a deep breath, she took the marker and made two tick marks in the corner and turned back to face him.\n\n\"I missed yesterday,\" Bailey defended herself.\n\n\"Yes, you did,\" he said. \"How do you want it?\"\n\nInstead of answering, she took one step over to him and took his hand, pulling him out of his chair. Facing him, she unbuckled her jeans and slowly unzipped them. With her right knee tucked into her left knee, the denim held fast, revealing only the very top of her white panties.\n\nShe turned her knee just enough to let the jeans slip past and, in one fell swoop, they hit the ground around her ankles.\n\n\"Oh,\" Kent breathed.\n\nBailey took his hand again and, before he'd quite recovered from the sight of her transparent underwear, pulled him toward the door. Helplessly, he allowed her to lead him into the darkened hallway, his eyes entirely captured by her bare cheeks. The only light in the dim hallway came from his room and the small light bulb around the corner at the top of the stairway. As a result, Bailey mostly disappeared into darkness the moment she crossed the threshold of his room.\n\nShe didn't take him far, just to the little nook under the stairs where the washer and drier lived.\n\n\"This will do,\" she said as she released his hand.\n\nAlready panting nervously, Bailey put her hands on the washing machine and leaned over, keeping her thighs tightly together.\n\nKent regained his senses, barely, and placed his hand on the small of her back. She had bared herself from her toes all the way up to the elastic underside of her halter top -- excepting the thong underwear that covered her not at all from where he stood.\n\n\"If Carson -\"\n\n\"He'll be at least fifteen minutes getting groceries,\" she glanced over her shoulder at him, her eyes twinkling in the darkness.\n\n\"Alright,\" Kent's voice trembled.\n\n\"Don't take forever, though,\" Bailey chided him as she arched her back and pushed her hips out.\n\n\"Right, right,\" Kent took a breath and slid his hand down to her left cheek.\n\n\"Where ya gonna go?\" Bailey's voice picked up a tremor as his fingertips moved over her skin. \"High or low?\"\n\n\"I was thinking,\" Kent moved his hand in slow circles, \"getting all around.\"\n\nBailey shivered, whispering, \"'kay.\"\n\nThe first spanking came low and sudden, echoing back to their ears along the length of the hallway.\n\n\"One,\" she puffed out with a short breath.\n\nKent wasted no time working his way up her left cheek, delivering three more slaps to her rear at slightly different spots.\n\n\"Two. Three. Four!\" Bailey managed to shout and whisper at the same time, while trying to control the shaking in her body.\n\nKent paused, his hand hovering in the air, not touching her, not giving her any idea when or where the next strike would come. Bailey didn't turn around or even say anything. She just waited, shivering, not knowing anything.\n\nSeconds ticked by.\n\nBailey took in a breath, opened her mouth as if to speak, and his hand came down at the same moment, striking at the so far untouched side of her left cheek, forcing a surprised breath out of her lungs. The breath she'd meant to use for words came out as a shocked groan.\n\n\"Five.\"\n\n\"Should I do these five on the other side now?\" Kent asked, cupping and caressing her right cheek.",
        "\"Other four,\" she corrected impulsively.\n\nBailey reached behind her and hooked the waistband of her thong with two fingers, one on either side the little strip of material embedded between her cheeks. Without spreading her legs, she pulled the thong away from her body, prying it out of position, and pushed it down just low enough to count as baring her ass to him.\n\n\"Four,\" she repeated without looking at him. \"And they're yours to do.\"\n\nKent looked a the little bit of frilly material now dangling between her legs, inhaled deeply, and laid his hand on her right cheek.\n\n\"Evening up, then?\" she asked.\n\n\"So you'll look nice when you check yourself in the mirror,\" Kent worked hard to steady his voice.\n\nBailey hummed in response.\n\n\"Ready?\"\n\n\"Mm-hm.\"\n\nHe knew he only had four spankings, which meant covering a little more area with each one. He started on the outside, which worked easily with his right hand on her right cheek.\n\n\"Oh,\" Bailey sounded surprised when he struck. \"One!\"\n\nAs he moved his hand around her rear, Bailey spoke again, \"Or should I be saying 'six'?\"\n\nKent paused, \"That does seem... better.\"\n\n\"Better?\" she looked over her shoulder at him for the first time.\n\n\"Yeah,\" he looked up at the ceiling so he could clear his head. \"'Higher numbers' equals 'better'.\"\n\n\"Fine,\" she faced away from him again, \"Six.\"\n\nKent slapped her ass again the moment she spoke, hitting her right cheek low.\n\n\"Seven.\"\n\nHe struck the middle.\n\n\"Eight,\" Bailey's voice went to a high whisper.\n\nKent struck high and hard.\n\n\"Nine,\" Bailey sighed and visibly tried to regain control of her breathing.\n\nShe did not, however, move from her position. Instead, she reached her hand back and rubbed at her rear. Kent watched her do this, noticing how it didn't look therapeutic but almost diagnostic, as if she tested herself.\n\nSure enough, she spoke a moment later. \"Do another one.\"\n\n\"What?\" he asked.\n\n\"Another dollar,\" Bailey qualified nervously. \"It'll be a while before we can do this again. I want to get ahead.\"\n\nKent shook his head, wondering what her upcoming week looked like that would take up so much time. He realized, though, that the rules they'd made gave her control of the schedule.\n\n\"Sure,\" Kent said, \"but you have to make a mark.\"\n\n\"What?\" Bailey looked over her shoulder again.\n\n\"That's the rule,\" he clarified. He then recited, trying to match the tone he remembered her using, \"You make the mark. Then the spankings. I change the number.\"\n\n\"But I'm already -- here,\" she stammered, \"I have to go and make another mark?\"\n\n\"Yep,\" he smiled innocently.\n\nBailey sighed, pulled her thong back into place between her cheeks, and straightened. With a cynical glare at Kent, she marched the few paces across the hall to his room. Kent watched as her pale cheeks glowed bright white, flaring suddenly as she crossed into the direct light of his room. He heard a dull thump and a rattle as she made a mark on the white board.\n\nComing back, he had a good look at the front of her panties, translucently displaying the little line of hair covering her lips.\n\n\"Satisfied?\" she asked and then placed her hands on the washing machine again.\n\n\"Rule's a rule,\" Kent defended himself amicably. \"Four or five\"\n\n\"Five,\" Bailey replied.\n\nThat meant keeping the thong in place, which perplexed Kent. It didn't protect her in any real way, not from his hand or his eyes. With her legs so close together, he couldn't see any more of her whether she wore it or not. But, for some reason, she kept it on and accepted she'd have to endure an extra spanking, even thought she'd already pulled her panties down once, which meant he'd already seen -\n\nWhatever.\n\nHe placed his hand on her left cheek, then her right, then back on her left again.\n\n\"Make up your mind,\" she snapped, \"Stop groping me.\"\n\nKent slapped her left cheek, hard, before she'd even completed her sentence.\n\n\"Ha!\" she shouted. \"One.\"\n\n\"You mean, 'ten'?\"\n\n\"Right. Ten.\"\n\nHe took the left cheek again.\n\n\"Eleven.\"\n\nAnd again.\n\n\"Twelve. Not letting up, huh?\"\n\n\"My spankings, you said.\"\n\n\"Right,\" she acknowledged.\n\nHe let her have two more slaps, low on her left cheek.\n\n\"Thirteen! Fourteen!\" she cried out. \"Okay, I think that's enough.\"\n\nBailey stood up and faced him in the darkened hallway. She stepped up to him until their bodies touched, a defiant look in her eyes as she glared up into his. Kent became extremely aware of where she pressed against him. His erection, hard but currently pointed downwards due to the tightness of his boxers, pressed right up against the centre of her translucent panties.\n\n\"Don't forget to mark the board,\" she said, gave him a little push with her hips to force him back half a step, then walked past him.\n\n\"Huh,\" Kent exhaled.\n\nHe expected to see her go in and out of his room, but by the time he turned around, he only caught a glimpse of her bare butt before she disappeared into her own room farther down the hall.\n\n\"But your -\" he called out as the door closed \"-pants.\"\n\nWith a mental shrug, Kent adjusted his shorts and went back to his bedroom. He picked up Bailey's jeans off the floor where they'd fallen, folded them neatly and put them on the corner of his dresser. He supposed she could come and pick them up when she felt like it. For now, he had to take care of himself.\n\n=============================\n\nBailey collapsed on her bed the moment she reached it and jammed the her favourite pillow into her crotch immediately after. Her left cheek felt hot and raw, so she didn't even try to touch herself back there.\n\nKent, she thought, only Kent can do this.\n\nShe had tried going to a bar, last Saturday, looking for someone else, anyone else, but no one fit the bill. The bar had a number of guys who didn't qualify. It offered up creeps she didn't want to go near. It hosted big lugs that might spank her too hard, and douchey guys she couldn't even stand talking to.\n\nUgh.\n\nBut Kent, calmly, patiently, slapped away at her cheeks. Kent would follow her wherever she wanted to be taken and spank her whenever she liked.\n\nBesides, I owe him money. And that settles that.\n\nShe moaned, driving her hips down hard on the edge of the pillow, remembering when he'd made her walk back to his room, mostly naked, and put one more mark on his board.\n\nBecause that's the rule.\n\nKent had made her follow the rule. Kent understood about rules. They had that between them, the thing with rules.\n\nBailey reached under her body to grip the pillow so it couldn't slide out of the way while she spread her legs and pushed down hard on it. She lifted away and came down hard again, remembering the feeling when she'd pushed herself against his erect penis, using her anger as an excuse to get right up in his face.\n\nI turned you on. I know I did and I felt it.\n\nShe slammed herself down on the pillow and a mewling cry forced itself from her lips as her muscles seized up and her orgasm shuddered through her body.\n\nWith a sigh, she fell on her side.\n\nA stark realization hit her regarding the location of her jeans. With a soft, fading look in her eyes, she imagined creeping into his bedroom in the morning to retrieve them, quietly dressing in front of him while he woke up.\n\nThe imagining of that moment coasted her softly off to sleep."
    ],
    "authorname": "xtorch",
    "tags": [
        "spank",
        "spanking",
        "debt",
        "money",
        "strip",
        "stripping",
        "masturbation",
        "rules",
        "games"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-02"
}