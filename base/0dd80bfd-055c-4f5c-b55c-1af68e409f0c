{
    "title": "The Braidwood Affair",
    "pages": [
        "All Hallows' Eve at the Braidwood House\n\nAuthor's note: This is my first attempt in the Erotic Horror category, although admittedly I might have put it in Humor &amp; Satire, Group or Nonhuman. In any case, it is also my first entry in a contest, specifically Halloween 2016. As with most of my stories, this one starts out slow, building the background and characters necessary to set up the sexy stuff. I hope you enjoy it and I hope you will give me feedback through comments and voting, especially voting. It gives me a decent idea about how well I am entertaining you, the reader.\n\n* * * * *\n\nI shouldn't be here, he thought. This was a big mistake...\n\nIt was bad enough that the old Vicky stood next to the village's original graveyard and that on Halloween the cops would be on the lookout for Juvies out larking. Plus, trespassing -- even on abandoned property -- was still a crime with very few exceptions. Breaking and entering to retrieve proof of his daring wasn't one of the exceptions. But that was exactly what he had to do if he wanted to be accepted.\n\nAccepted into the club, that is. The Norcross Paranormal Mystery and Romance Writers Guild. NPMRWG didn't make a very good acronym, so mostly it was just called The Guild. And he wanted in. Badly.\n\nStewart Chamblee had dreamed of being a writer since the day they first put a crayon in his hand. He had frustrated parents and teachers alike with his \"overactive imagination,\" as they liked to call it. When he was being honest with himself, he'd admit that he had a hard time seeing the mundane world that the others called \"reality.\" He was always seeing beyond it, seeing innumerable worlds just off in the shadows a bit, full of excitement and adventure. Sometimes there would be a glowing portal and he could walk through it and actually go there, though he always got pulled back somehow. He loved to visit those worlds and see what there was to see.\n\nSometimes, it scared the shit out of him.\n\nOthers might scoff at him, but he believed... he knew... that ghosts and angels and evil spirits existed and couldn't resist the temptation to screw with people's lives. Just like he knew that Klingons and Romulans actually lived outside the imagination of Gene Rodenberry, and that Bram Stoker, Guy Endore and Clemence Housman were chronicling history. He wanted to write the stories of the worlds he knew. To have them accepted, he had to make them seem like paranormal fiction.\n\nSo he'd applied for membership in the Guild, because they sponsored up-and-coming writers and helped the greenhorns get connected with legitimate publishers. Their requirements were simple: to submit three examples of his writing for critical review, to submit an essay of not less than 750 words detailing why he wanted to join, and to venture into the heart of the local paranormal hell -- the Braidwood House -- and return with an item proving he'd been there. And not get caught, of course.\n\nThis last requirement was intended to weed out the faint of heart and the dispassionate wannabe's who weren't serious about the paranormal. Which is why he was here, scaling the wrought iron fence that surrounded the Braidwood House, scared stiff. To those who believed in the paranormal, trespassing on these grounds was potentially fatal.\n\nAnd who the hell thought sharp, pointy spikes on the top of the fence would be a good idea, anyway?\n\nSporting freshly ripped pants and shirt, he lowered himself to the ground, crouched, and looked around.\n\nSuck it up, Stew, he thought to himself. You can do this. You've got to do this. You want in the Guild.\n\nFocusing on that thought, he eased across the spacious grounds toward the three story Victorian mansion looming out of the dark, illuminated by the full moon.\n\nWhy did the full moon have to be on Halloween? he thought to himself, annoyed at the implications.\n\nHe had come over the fence at the back of the house, away from the cemetery. Less chance of getting noticed. Now, as he moved forward, he realized the outbuilding he was using to cover his approach wasn't the tool shed. It was an ornate mausoleum in the best Gothic tradition.\n\nShit! was his primary thought. Don't walk on any kind of hallowed ground or anything, Stew! Idiot...\n\nHe gave up on hiding and made his way quickly and circuitously to the back porch. The house's foundation was stone. The rest of the house was wood, but not the cheap 2-by-4 construction of today's houses. No, this one had been built to last forever, out of thick timbers and heavy shake siding. Rumor was, Charles F. Braidwood Esq. had the house built for his second wife and had made the frivolous promise that his love for her would last longer than the house did.\n\nIt's in pretty good shape for being over a hundred and fifty, he thought. Wonder if he still loves his wife... or wives...\n\nBraidwood had been a railroad tycoon, a robber baron of the mid- to late-1800's, and had built this estate as a retreat, well away from any nearby city, after his first wife died under mysterious circumstances and he had married his second. Apparently, she too had died and he had abandoned the house. It was supposed to be haunted and hence shunned by the locals. It was rumored that some who had entered had never returned.\n\nAnd I'm standing here like an id... what the fuck was that??? The sound of a rusty hinge echoed across the yard as if amplified by the night. He quickly looked around and saw nothing. Until...\n\nUntil he noticed a dark, man-sized shape moving back near the mausoleum. He scrambled to hunker down next to the porch steps and to try and be as invisible as he could.\n\nHis heart was going into overdrive as he watched the figure glide... not walk, glide... up the gentle slope from the stone building, directly towards his hiding place.\n\nStairs. Porch. Bad, he thought as he tried to inch away, back along the stone foundation, hopefully hidden by the globe arborvitae growing there. He lay as flat as possible and watched as the figure approached the stairs. Despite being scared witless, he was stunned to see that the figure was actually a woman, incredibly beautiful, with very pale skin and flowing silver-white hair. The cloak she was wearing suddenly shifted in the night breeze and he received two more shocking realizations.\n\nOkay, she isn't a ghost, he thought as the very real cloak moved in the wind. And my God! What a rack!\n\nNot the most elegant way of thinking it, but he wasn't thinking very clearly anyway. She was, indeed, very well endowed and the form-fitting shimmery dress she wore only emphasized it. Stewart found himself disappointed that the cloak blocked his view of the rest of her. He watched in complete fascination as she mounted the stairs, crossed the porch and approached the back door. On reaching it, she withdrew a key affixed to a chain around her neck and fit it to the lock.\n\nMoments later, he heard the lock click and watched as she opened the latch and stepped in, closing the door behind her.\n\nOh, my God... who was that??? His mind raced as he tried to bring his heart rate under control. Or what was that? There's somebody living here? How come nobody knows about it?\n\nMany more questions surged through his brain but the uppermost was how the hell do I get in there? I've got to meet that lady!\n\nNot the most brilliant of ideas, given the circumstances, but certainly the one that eighteen-plus years of testosterone poisoning made the most insistent. And the one that got him slowly and carefully creeping out from the bushes and up on to the porch.\n\nThe porch wrapped around the back of the house, passing a number of windows on its way to a broad veranda on the left. The back entrance was directly in front of him, and to his right the sweep of the porch was interrupted by what had to be the summer kitchen, extending out on the right. He knew from researching the place in the daytime that the front of the house had a huge wraparound porch with ornate double-doors and a smaller covered entryway to the side that had served the coaches. There was a small coach house in the back, near the cemetery.\n\nThere really wasn't any good way to sneak into the house. He started to check the windows facing the porch, to see if they were unlocked, when a loud creak! made him freeze. Fearfully looking towards the door, he saw that it had sprung open a bit.\n\nProbably didn't latch completely when she went in, he thought. Lucky break for me...\n\nSomehow, he didn't hear the more rational and paranoid part of his brain that screamed It's A Trap, You Idiot!!!\n\nStewart eased over to the door as quietly as he could. Ever so slowly, he pushed the door farther ajar. When it was wide enough open that he could slip in, he did, fishing his penlight from his pocket.\n\nAll I have to do is find something that says 'Braidwood' on it and get the fuck out, he thought. His body was still jacked up on adrenaline, but at least his mind started out thinking clearly. So what the hell says 'Braidwood'? Silverware? It'd be locked up somewhere, or gone... what else?\n\nHe looked around furtively, and by the feeble illumination of his penlight, found himself in a sort of scullery, with doors leading farther into the house and into the summer kitchen, and also a servants' stairwell leading up and down the back of the house.\n\nThis is all too utilitarian, he thought. Anything personalized would be farther into the house. So with his heart pounding in his ears, he eased into the hallway leading towards the front of the house. He realized that he was moving down a long hall and that farther up, there was portraiture on the walls.\n\nDamn! One of those pictures would be perfect! he thought as he started to figure out which one would be the easiest to get out of the house without getting noticed. He had just about decided when he also realized that he was hearing voices. That stopped his plan to nick one of the pictures dead in its tracks.\n\n\"I'm sorry I'm late,\" a decidedly feminine voice was saying. \"Without Bruno around to wake me, I overslept.\"\n\n\"That's okay, Victoria,\" another feminine voice replied. \"Next time, if you want, I can come get you.\"\n\n\"Thank you, Marianne,\" the first voice -- now Victoria -- answered. \"I may very well take you up on that. Is Julianna going to make it?\"\n\n\"I am not sure,\" a third voice chimed in, with a bit of an accent. \"She has said she may be late, or maybe she will not make it at all. We are to go ahead without her.\" Stewart decide the accent was French, or maybe Cajun.\n\n\"Okay, then, Margeaux,\" Victoria told her. \"As soon as we've got our drinks, we can start.\"\n\n\"Very funny,\" Margeaux answered in a tone that indicated it wasn't. \"You know I don't drink.\"\n\n\"Sorry... just teasing,\" Victoria apologized. \"What is tonight?\"\n\n\"Texas Hold 'Em,\" Marianne informed her. \"Small Blind 5, Big Blind 10, minimum raise 10. Chip in, ladies.\"\n\nWhat??? Stewart was dumbfounded. Three women playing poker in a haunted house on Halloween? Whiskey Tango Foxtrot, over? He decided to ignore the part about curiosity and what it did to the cat, and eased on down the hall. He really wanted to see this with his own two eyes. Or at least, he thought he did. He wasn't so sure after he stuck his cell phone around the edge of the door jamb so he could see without being seen.\n\nThere were three women, alright. Sitting around a table with piles of betting chips and a deck of cards. One was the shimmery lady with the white hair he'd seen going in. There was another shimmery one, except she seemed transparent. And naked. And there was a third one dressed in head-to-toe fur. Other than how weird they looked, they were all decidedly female. Very female. The make-the-trousers-swell kind of very female.\n\nThey didn't seem to notice him and kept right on talking while they played.\n\n\"The trick-or-treaters don't come to the door anymore,\" the white lady, Victoria, complained. \"Pity...\"\n\n\"Well, maybe not so much,\" the furry Marianne observed. \"This house was getting a reputation for eating people up. It did make us realize we had to take our hunting elsewhere.\"\n\n\"I told you two a long time ago, you should not eat where you sleep,\" the transparent Margeaux commented.\n\n\"Lucky you,\" Victoria rejoined. \"You don't need to eat. Just metaphysical sustenance.\"\n\n\"Lucky you,\" Marianne told Victoria. \"You only need to drink once every three or four months. I have to eat at least once a month, and sometimes more often.\"\n\n\"That's only because you let yourself get too horny,\" Victoria told her. \"If we kept a couple of donors around, we wouldn't need to go out hunting.\"\n\n\"For that, we would need Julianna,\" Margeaux interjected. \"Our feeding ages our donors much too quickly. She is the only one with the ability to reverse the damage. And she won't stay here.\"\n\nStewart Chamblee was as confused, and as excited, and as terrified, as he had ever been in his life. There were certain conclusions about who... or what... these three were that he was trying very hard not to jump to.\n\n\"Julianna's time magic is perfect, agreed,\" Victoria told the others. \"But you know she's afraid of staying any one place too long. Call it inherited behaviour. None of the Salem witch descendants are comfortable staying still. They keep moving because they believe it will save their lives. And it doesn't matter that the victims of the Trials weren't actually the witches... just innocent people caught up in the hysteria. Julianna and her folk won't ever settle down again.\"\n\n\"Well, she could stay here more than one night a month,\" Margeaux complained. \"You two can go get fed elsewhere. I have to live off this house's trespassers and the visitors to the cemetery.\"\n\n\"True,\" Victoria agreed. \"You do know, of course, that the human male has been eavesdropping on us?\"\n\n\"Oh, yes,\" Margeaux replied brightly. \"I'll be inviting him in, in a minute.\"\n\nLike hell! Stewart thought, turning to grab the portrait and run... and pissing himself.\n\nMostly because immediately before him a terrifying apparition materialized, the visage of an old crone, twisted and tortured and grotesque, opening it's jaws wide, showing huge fangs, half-bellowing/half-screaming in his face.\n\nHe screamed as well, and stumbled backward into the parlor, falling to the floor in front of a settee.\n\n\"Hello, boy,\" Marianne turned her lupine face towards him. \"What's your name?\"\n\nStewart couldn't answer. Stewart couldn't move. Stewart could barely breathe while his blood pressure and pulse skyrocketed.\n\nMarianne sniffed the air. \"I think he wet himself.\"\n\n\"Probably,\" Victoria agreed while Margeaux floated over to him.\n\nHoly shit, holy shit, HOLY SHIT! is what Stewart would have been thinking, if he were thinking at all, which he wasn't.\n\n\"Young. Reasonably healthy. Above average package. Libido off the charts. Scared shitless,\" Margeaux cataloged as she hovered over him. His wide-eyed stare and labored breathing were his only response.\n\n\"Hmmm...\" Margeaux went on. \"Came looking for proof he'd been here. Must be that writers' club. Wants to... oh!\" She paused in her musings.\n\n\"What?\" Victoria asked. \"What is 'oh!'?\"\n\n\"This one is gifted,\" Margeaux told her. \"Not an adept, yet, but definitely better than a mundane. He is actually sensitive to paranormal metaphysics. He wants to write about what he knows, but must present it as fiction if it is to sell. He believes we exist.\"\n\n\"Of course we exist!\" Marianne jumped in. \"Very real, very hungry and very horny! Not a good night to be food!\"\n\n\"Now, now, Marianne...\" Victoria tried to calm her down. \"We don't need to be hasty. Let us see what he has to offer us, first.\"\n\n\"Not much, without Julianna here,\" Marianne groused, but settled down.\n\n\"That would imply he'd be very tasty, Margeaux?\" Victoria asked, turning to her.\n\n\"Mais oui! Yes,\" she agreed. \"And very filling.\"\n\nI'm dead, I'm dead, I'm dead... Stewart's brain had finally come back online. What the fuck are they?\n\n\"What the fuck are we?\" Margeaux echoed and Stewart had the sickening realization that she could read his mind. \"We are three, usually four, good friends who could very much use your services.\"\n\nStewart's brain was spinning. No way! It wanted to insist. No way was there a vampire and a werewolf and a ghost hanging out together, pretty as you please, playing cards in an old Victorian mansion. And no way was there a Salem witch, too.\n\n\"Yes, way...\" Margeaux commented, leaving him even more confused.\n\n\"You ought to take those pants off, boy,\" Marianne told him with a slight growl. \"And wash up. You stink.\"\n\n\"I'll take care of it,\" Victoria told her calmly as she rose from the table and now, sans cloak, had Stewart's complete and undivided attention. Well, divided, maybe. Between her rather bountiful assets.\n\nShe had a classic hourglass figure with huge boobs, a tiny waist and well-rounded hips and ass, all barely covered by a thin sheet of shimmery, silk-like fabric which clung to her every curve and accentuated all of her positives. The dress plunged front and back, revealing massive cleavage and baring her midriff almost to her pubes. Her long white hair hung down to her knees and swirled about her as she now walked over to where Stewart was on the floor by the settee.\n\n\"What is your name, young man?\" she asked, squatting down in front of him and damn near putting him into cardiac arrest as her cleavage became his primary focus. He tried to make his mouth work, but it wouldn't. Victoria sighed, stood up, bent over (exacerbating the cardiac problem), put a finger under his chin and lifted him to his feet.\n\nHe was still staring at her boobs.\n\nShe sighed again, leaned in and kissed him. To an outside observer, it would appear that he melted.\n\nActually, to an inside observer it would have seemed the same. A highly charged tingle of sexual excitement spread from his lips throughout his body and every cell came alive with it. Overloaded with it. The eyes that had been bugged out moments before slowly closed, his breathing evened though still ragged, his knees got weak and his cock got hard. All pretty much at the same time.\n\nAs Victoria broke the kiss, Margeaux started, \"his name is...\" but Victoria interrupted her.\n\n\"Ah, ah, ah!\" she wagged her finger at Margeaux. \"Let him answer for himself.\"\n\n\"But you've tranced him!\" the ghostly girl objected, then actually seemed to pout. \"Oh, alright...\"\n\n\"We would like to know your name, young man,\" Victoria repeated. Somehow, Stewart found his voice.\n\n\"Stewart, ma'am,\" he managed to say in a dreamlike way. \"Stewart Morgan Chamblee, at your service.\"\n\n\"At my service...\" Victoria echoed with a thin smile playing on her face. \"I'll bet. Why are you here, Stewart Morgan Chamblee?\"\n\n\"To serve you,\" he answered, his eyes still closed and his voice still dreamy.\n\n\"Before you were fascinated by us,\" Victoria corrected herself. \"Why did you come here tonight?\"\n\n\"To prove I'm worthy,\" he answered simply.\n\n\"Hmmm... the writers' group?\" she asked.\n\n\"The Norcross Paranormal Mystery and Romance Writers Guild, ma'am,\" he answered slowly and steadily.\n\n\"Victoria,\" Margeaux interrupted, still pouting, \"I can tell you all of this...\"\n\n\"Hush,\" Victoria suggested softly. \"It's more fun if he tells us himself.\"\n\n\"Oh, foutaise!...\" the ghost mumbled and drifted away.",
        "\"Find out if we can eat him,\" Marianne asked, then amended it. \"No, wait! Find out if we can fuck him, then eat him.\"\n\nVictoria waved a slightly dismissive hand towards her friend, the she-Were.\n\n\"Stewart Morgan Chamblee, I think that Marianne is right,\" she addressed him softly. \"You stink. Take off your pants.\" Stewart moved to comply with no idea what he was doing. Just that it was somehow very important he do exactly what this gorgeous woman was telling him to do.\n\n\"Fine,\" Marianne grumbled and got up from the table. \"I'll go get some washcloths.\" As she walked into the hall towards the kitchen, Stewart was marginally aware of an almost 6-foot, fully furry bipedal wolf with human hands, six big tits, glowing yellow eyes and a tail that swished behind her as she walked.\n\nHis immediate focus, though, was this sexy-as-hell woman before him. He kicked off his sneakers and dropped his pants, stepping out of them.\n\n\"Now your briefs,\" Victoria directed softly. They came off in short order.\n\n\"In fact, how about the rest of your clothes?\" Victoria asked and Stewart didn't hesitate. Off came the down vest, the flannel shirt and the socks. He stood there naked while Victoria ran her eyes over his body. Then she reached out and took his throbbing erection in her hand.\n\n\"This is rather nice for a... um... Stewart? How old are you?\" she asked.\n\n\"Eighteen, ma'am,\" he answered evenly, apparently undisturbed by her handling of him.\n\n\"For an eighteen-year-old,\" Victoria went on. She began long, languorous stroking of his cock. \"Are you a virgin?\"\n\n\"Yes, ma'am,\" he answered, still dreamlike. \"Technically.\"\n\n\"What do you mean 'technically', Stewart?\" she asked as she continued to stroke him.\n\n\"Well, a couple of dryads had their way with me when I was fourteen, but I don't think that counts,\" he told her. \"Everyone told me it was all just in my imagination anyway.\"\n\nVictoria nodded. Those oversexed wood nymphs didn't care whose lives they messed up, even children. Especially children, not yet jaded and cynical, not yet living in the \"real world.\"\n\nMarianne returned with the warm, wet washcloths. \"You know,\" she observed as she watched Victoria controlling Stewart's emotions, \"when he comes out of that trance, we're going to have to clean the parlor all over again. Regardless of whether or not you get him off.\"\n\nVictoria sighed. \"I'm aware of that,\" she told her friend. \"I just wish Julianna had made it. This young man is overflowing with libido and he's a virgin, for all practical purposes. He'd make a fine feast for the three of us. Unfortunately, we would drain him and he'd never see the light of day.\"\n\n\"He's a virgin?\" Marianne's eyebrows shot up. \"Really? I thought I smelled something funny.\"\n\n\"Wash him up, please?\" Victoria asked and got out of the way as Marianne went about bathing Stewart, first where he had soiled himself and then the rest, on general principles. He simply stood there and let her. When she had finished, she stepped back and Victoria moved back in front of him.\n\n\"I'm going to leave him tranced for a bit,\" she told the she-Were. \"We... all three of us... need to talk.\"\n\nMarianne nodded and returned to the card table while Victoria suggested that Stewart sit on the settee, relax and get comfortable for awhile. Then she and Margeaux joined Marianne at the table.\n\n* * * * *\n\n\"So our choices are,\" Victoria was summing up their discussion, \"we can consume him and each of us get what we need... his libido, his energy, his flesh and blood... then dispose of the body and let him become a missing person. Or we can wipe his mind and dump him over in the cemetery for the local constabulary to find...\"\n\n\"Or we wipe his mind, dump him in the cemetery and leave him with that portrait of Charles he was going to nick,\" Marianne interrupted. \"I never did like that one, anyway.\" Victoria held up her finger.\n\n\"Or, if we can get hold of Julianna, we see if we can convince him to become a donor, until we have to dispose of him due to old age. I really wish...\"\n\n\"HEY! HELLO!!! ANYBODY STILL HERE?\" a very loud feminine voice called from the front hallway.\n\n\"In here!\" Victoria called back, visibly brightening. \"Finally!...\" she smiled to her friends.\n\nMoments later, a biker chick in black leather and looking like Rhiannon-From-Hell blew into the room, her mane of bright red hair flowing out behind her, framing her alabaster skin and emerald eyes.\n\n\"Sorry I'm late!\" she breezed, moving towards the women. \"I got caught behind a... what the fuck???\"\n\nShe'd caught sight of Stewart, sitting docilely on the settee.\n\n\"A trespasser,\" Victoria told her. \"Possibly dinner. Possibly more. Come join us, please!\"\n\n\"Sure...\" the newcomer drawled as she moved slowly to the table, studying the naked guy on the couch as she went. \"Kinda young,\" was her observation as she sat down.\n\n\"Very,\" Victoria nodded. \"Eighteen. And gifted. Not trained. Wants to get into that writers' group.\"\n\n\"They sent someone to rip us off again?!?!\" Flaming red hair chick was not happy.\n\n\"Easy, Julianna,\" Victoria told her. \"This one has potential. But only if you're on board.\"\n\n\"Because you want me to keep fixing him,\" she stated as she looked at the card table. \"Where's the food?\"\n\n\"Get what you want from the kitchen, then come on back and help us decide what we're going to do with Stewart Morgan Chamblee.\"\n\n\"That's his name?\" she asked as she headed for the kitchen, getting confirming nods from the others.\n\n* * * * *\n\n\"Okay, so he's loaded with libido... I can read that.\" Julianna was kneeling in front of Stewart in her bikini, or what might as well have been. She'd peeled off her leathers, leaving her in a skimpy halter top and tight leather boy shorts that zipped up both sides. \"And he's sensitive to the alternate worlds... they've left their mark on him. Especially a couple of nymphs. He's got brains and not bad in the body department. Actually, pretty cute. Probably a poster child for the Boy Scouts.\"\n\n\"So,\" she went on, turning to face her friends, \"what do you want me to do?\"\n\n\"Come back here every full moon,\" Victoria told her. \"Feast with us. At the end, put him back like he was before we started. If you do that, I can make a deal with him he'll never want to refuse.\"\n\n\"Every full moon, huh?\" Julianna ran her fingers through her mane as she thought about it. \"He does seem rather tasty...\"\n\n\"That's my girl!\" Victoria exclaimed. \"Take a good read on him now, and after I release him from the trance. We're going to want him functional after tonight. Let us know when you're done.\"\n\nJulianna nodded and concentrated on Stewart's life essence, memorizing the patterns and energy levels, gathering that information she would need to restore his timeline and heal the damage.\n\n* * * * *\n\nStewart became painfully aware that his penis was stretched to epic proportions and that he was sitting on a couch instead of lying on the floor. He also became aware that he had no clothes on. Lastly, he became aware that four very scary women were standing over him, leering.\n\nHe remembered three of them: the ones he'd classified as a ghost and a werewolf and probably a vampire. The awesome chick in the flaming red hair and black leather nothing was new. Probably the witch. And he was still breathing.\n\nThe panic gradually rose as he realized he was looking at four knife-and-fork expressions. As in, he was the roast and they were getting ready to...\n\nThat was the point where abject fear took over and he began shaking violently while pissing himself. And the couch. And the floor.\n\n\"I told you...\" Marianne muttered.\n\n\"Not a problem,\" Julianna told her, then gestured and muttered something and suddenly, Stewart was dry. Still shaking, but dry.\n\n\"You're going to need to calm down, Stewart,\" Victoria told him softly, putting a hand on his shoulder. \"We want to talk to you, not harm you.\"\n\nSomething in her physical contact did calm him down, or at least reduced the shaking quite a bit. She waited until his eyes weren't quite so buggy and his pulse and respiration were within normal -- for an excited young man.\n\n\"You want to be a writer, correct?\" she asked. He managed to nod.\n\n\"And you have a ton of stories you'd like to write, about creatures like us?\" He nodded again.\n\n\"Then maybe we can make a deal,\" she smiled, and unfortunately her canines were a bit overextended and had a counterproductive effect on Stewart.\n\n\"Aieee!\" he squealed and curled up into a ball on the couch, throwing his hands to his neck.\n\n\"Nuts!\" Victoria muttered and turned her face away.\n\n\"Hey! Dude! Chill...\" Julianna reached out and grabbed his cock in one hand and his balls in the other.\n\nStewart squealed again, threw his hands from his neck to his groin to try and protect himself, and got stopped by Julianna's hands already there. He tried to scramble backwards, but he wasn't going far while she had hold of his favorite body parts.\n\nLike the old saying says, \"when you've got 'em by the short hairs, their hearts and minds will follow.\"\n\n\"Guess you don't understand the word 'chill',\" she told him, then leaned forward and put his straining hard-on in her mouth. That changed a number of things.\n\nFor one, he held absolutely still. This flaming-haired vixen had teeth.\n\nFor another, he suddenly felt his fear and panic give way to his hormones. He had never had a girl put her mouth on him. And he liked it. A lot.\n\nAnd for a third, he felt an acute rush of embarrassment as he realized that despite being scared out of his gourd, he had no control. He was going to cum. In her mouth. Now.\n\nWith a loud moan, he threw his head back and tried to pray that he'd survive, intact, as he went over the edge, pulsing so hard he was almost cramping. He had never cum this hard in his entire life, and it simply took him over, close to passing out.\n\nJulianna, for her part, just kept sucking and swallowing until he had no more seed to give. And then some. He actually tasted pretty damned good and there was lots of it...\n\n\"You greedy cunt,\" Marianne growled in a low voice. \"You could have shared...\"\n\n\"Mmm, fuck he's thick...\" Julianna came off his cock smacking her lips. \"There's a lot more where that came from,\" she smiled over her shoulder. \"You'll get your turn.\"\n\n\"When he gets back from La-la-land, you mean,\" Marianne groused.\n\n\"Relax, Marianne. It will work out,\" Victoria told her. \"Julianna seems to have gotten one of our points across already. And rather well.\"\n\nOn the couch, Stewart was struggling to focus.\n\nWhat the fuck just happened? he thought through his daze. I mean, I know what happened... but what the hell happened? He tried to sit up and Julianna let him.\n\n\"Feeling better, Stud?\" she asked and he nodded.\n\n\"Willing to listen to us and not freak out?\" He nodded again.\n\n\"Good. Take it away, Vicky.\" Julianna stood and move away, and the movement of her long ginger hair as it dragged across his skin sent shivers and aftershocks through Stewart's entire body.\n\n\"We want to make you a deal,\" Victoria told him, making sure she had his attention. \"We're willing to give you information about us, about our world, and help you write your stories in exchange for letting us feed on you once a month or so.\"\n\n\"Ah, ah, ah! Wait a minute! Wait a minute!\" she had to exclaim as his eyes went buggy again and he started to pull his legs up. \"Don't freak out! 'Feed' isn't exactly what you think it means. You need to learn a bunch of things so you don't have a panic attack every time the subject comes up.\"\n\n\"Maybe, Victoria,\" Margeaux spoke up, \"we should tell him about us. How we got where we are?\"\n\n\"Maybe,\" Victoria agreed. \"Maybe, Stewart, when you know our history, you won't be as frightened. Would you like to know how we became who we are?\"\n\n\"Abso-fucking-lutely yes!\" It was the first intelligent sentence that had come out of his mouth. On its own, that is.\n\nVictoria smiled, making sure to keep her fangs hidden. \"Then relax and listen. Nobody's going to harm you.\"\n\n* * * * *\n\n\"Charles Braidwood built this house, for Marianne,\" Victoria started as she settled into one of the overstuffed chairs facing the settee. \"He built the mausoleum for me. You see, he was my husband before I changed. Actually, I suppose afterwards as well. Regardless, he was a business magnate, a railroad tycoon back east. Part of the Second Industrial Revolution in this country. He could be magnanimous when he wanted and ruthless when needed. He was one of the men that became known as the Robber Barons of the 19<sup>th</sup> Century.\"\n\n\"He and I lived in Boston, originally. In fact, he built us a home in Dorchester. It was there I had my fateful encounter with Tynian, an old Roman vampire who had emigrated to the New World to escape persecution at home. Tynian was quite the Gallant and turned many heads, mine included. No one knew his true nature. Until it was too late, that is. He seduced me with some of the most amazing sex I have ever experienced. It was he who turned me.\"\n\n\"Charles discovered my 'condition' as I was changing and was beside himself with grief and anger. He managed to lock me away while he expended a significant part of his fortune to have Tynian hunted down and destroyed. Oddly enough, with Tynian gone, I did not succumb, but rather, grew stronger. I also retained a very strong sense of self. In fact, I realized I still loved Charles. He, however, had grown cold towards me.\"\n\n\"Perhaps tending to my feeding is what put him off. Tricking unimportant and useless human chattel into becoming my victims. He arranged to have a 'funeral' for me, and to have me 'buried'. In fact, he was having a new home built, complete with mausoleum, outside of Erie. Stevedores and sailors became my food supply... men who would not be missed. It took a long time to build up a level of trust between us, but eventually we did. He would allow me to roam at night on the promise that I would not hunt humans. Deer and other game were fine. Just not humans. Only those that were provided.\"\n\n\"Understand, you are getting the short version here, Stewart.\"\n\n\"In my travels through the forests southeast of the city, I happened to pick up a pet -- a male Werewolf named Bruno. He had been living alone in the woods and hills, trying to evade capture. Apparently, some of his more uncontrolled moments had resulted in several people and quite a bit of livestock getting mauled. There was a large bounty out on him, although they thought they were hunting a large black wolf.\"\n\n\"I decided to bring him home and thereby won his undying loyalty. My husband was less than pleased with my decision. He was not, however, about to argue with me.\"\n\n\"About this time, Charles grew tired of sneaking around and having illicit affairs, which were about the only way he was going to get laid. Safely. Although my coffin, with good Boston dirt, was firmly entrenched in the mausoleum, he decided to take another wife. Personally, I didn't care. Having sex with him without being able to feed was becoming tiresome.\"\n\n\"Which is where I come in,\" Marianne spoke up. \"I was wife number two.\"\n\n\"I had no idea about Victoria, of course. Charles was a handsome -- and very wealthy -- widower who was traveling in similar social circles as my father. We met at a party and I was smitten. After a brief courtship, he proposed and I accepted. I was told, of course, about the death of his previous wife and that he kept her remains in the mausoleum in remembrance of her. I thought that a little weird, but chalked it up to an exaggerated sense of loyalty and put it out of my mind. I was too busy having the time of my life.\"\n\n\"Until the night, several years later, that I caught sight of Victoria and Bruno leaving the mausoleum. I would normally have been in bed, but Charles was out of town and I was bored. So I was wandering the house. I happened to gaze out over the backyard and saw them. I thought perhaps they were trespassers, so I armed myself with one of Charles' pistols and went to investigate. They were well gone by the time I arrived.\"\n\n\"I determined to see if anything had been stolen from the mausoleum. The door was unlocked, which was unusual but I didn't realize it at the time. I entered and looked around, and the only odd thing was the fact that the lid was up on the casket which dominated the center of the room. Being curious, I went to take a closer look.\"\n\n\"What I discovered was an empty coffin about a third full of dirt and a large fur cot, or nest, in one corner. I was very confused. However, something tickled my mind about the dead that walked, and I closed up the mausoleum and went in, to Charles' library, and began digging. I found what I was looking for in the writings of Voltaire, specifically his Philosophical Dictionary. In it, he wrote about blood sucking corpses that went out at night to feed. Vampires, if you will.\"\n\n\"I stayed away from the mausoleum and inside the house until Charles returned a few days later. I told him about the weird things I had seen and asked if he knew what was going on. He seemed shocked that I would have investigated the mausoleum, but assured me that yes, Victoria had been buried with some of her beloved Boston earth, but that the casket was sealed and it was beyond him how I knew such an intimate detail about his first wife's burial.\"\n\n\"He told me he did not want to open her casket to prove it, but that I should simply believe him that she was, in fact, there. And very, very dead. I chose to listen to him, but something in my mind would not let go of what I had seen. I was not mad, I was sure of it. I decided I needed to learn how to destroy a vampire. What I managed to read wasn't very encouraging.\"\n\n\"Exposure to direct sunlight, a wooden stake in the heart and beheading seemed to be about the only sure ways. Or at least, the ways most authors agreed upon. Allegedly, wounding them with silver or fire would slow down their regenerative abilities and weaken them long enough to use one of the other methods. I hadn't read anything about vampire dogs, but I presumed the same would work for them.\"\n\n\"The idea of a vampire living, as it were, in our home really began to eat at me. Eventually I decided to fix the problem, regardless of Charles' reassurances. I fashioned a couple of very sharp wooden stakes out of ash and yew, as some of the authors suggested. I figured that one day, when Charles was off at work, I would simply go out to the mausoleum, stab the dog, open the coffin and stab the vampire.\"\n\n\"I was, as you can imagine, rather ingenuous.\"\n\n\"The day came when Charles gave me a kiss goodbye and headed in to his office. I waited half an hour, to be sure the sun was well up in case I needed to run, and went to the crypt. The door seemed stuck, but I got it open and armed with my anti-vampire stakes, I crept in. I knew nothing about werewolves.\"\n\n\"Or that wooden stakes are useless against them, even if you could hold the brute still long enough to drive it in.\"\n\n\"The moment I cleared the doorway and was in the shadow of the crypt, Bruno erupted from his nest in the corner and I was on my back having my neck gnawed. I did manage to scream and fend him off for a little bit. What I did not know was that my screaming woke Victoria. She saw Bruno attacking me and ordered him to stop. He didn't. I guess he thought he was protecting her.\"\n\n\"In any case, Victoria got mad when he wouldn't listen and came over to us, grabbing Bruno by the head and basically breaking his neck. Then she reached in his chest, pulled out his heart and tossed it in the corner. That is when I passed out.\"\n\n\"I, of course, was in a quandary,\" Victoria resumed. \"I had to kill Bruno because he didn't obey. I certainly regretted that. But more to the point, I was standing over the unconscious form of Charles' current wife and she had been mauled by a Were. We had three, maybe four days before the full moon and it was going to be very unpleasant for her. It was going to be even more unpleasant for Charles when he found out. So I improvised.\"",
        "\"I took Marianne to the house, to the scullery, and cleaned her up. Oh, that thing about exposure to direct sunlight? Easily avoided with a hooded cloak. Just so you know. Anyway, I took her to the house and cleaned her up, then took her to the basement, to the root cellar. I retrieved the silver collar and chains from the bedroom -- and yes, Charles had to secure and weaken me when we had sex, or I would have killed him -- and I used them to secure Marianne. I then bolted the bin door and went upstairs to await Charles.\"\n\n\"To say that he was surprised to see me out of my casket during daylight hours and in the house would be a severe understatement. I believe his exact word, when he found out I'd had to kill Bruno and that Marianne was infected, was, 'NOOOOOOOooo!!!!!...' Followed, I believe by 'Oh, God, no!...' He sat down at the table and put his head in his hands, and muttered, 'Oh, God... now what do I do?' I let him think about it for a bit.\"\n\n\"Eventually I told him, 'Well, if she survives the change in a few days, I guess we find out whether I can control her and whether we're moving again.' He didn't seem terribly heartened by that. He insisted I take him to see her, and after I did, he realized I was right. She would either survive or she wouldn't, but either way, she wasn't going to be human again.\"\n\n\"To make a long story shorter,\" Marianne spoke up, \"I did survive. And I'm actually rather well-mannered, even during a full moon. The first couple of moon cycles were horrible. I could feel the change, I was fully aware, and there was nothing I could do to stop it. Even in this form, which is sort of a halfway form, I knew who I was and had memory of my former self. Victoria's presence did provide a calming influence and it became usual for her to stay with me for the 72 hours around the full.\"\n\n\"When I wasn't like this, I appeared to the outside world to be the same old me. When I shifted, there was quite a lot of concern about what I might do if I 'got loose' and started roaming the neighborhood. Charles finally decided he had enough money and property accumulated to retire. That way he could deal with his two 'female problems.' He chose this property, out in the middle of nowhere, to build a house for me, and coincidentally, for Victoria.\"\n\n\"Please realize, at the time, the town wasn't here. Just a stagecoach station a mile and a half away, the remains of a frontier fort and settlement that had been abandoned, the cemetery and plenty of room to roam unnoticed. The three of us moved in and nobody bothered us. For awhile.\"\n\n\"Charles had a reputation for not being able to keep it in his pants,\" Victoria picked up. \"And although non-human sex was wearing him out, trying to keep up with us, it did not meet some need of his for human touch. He was starting to look gaunt and turn grey from sexual exhaustion, but still he went looking.\"\n\n\"And found me,\" Margeaux spoke up. \"I was his mistress. I had worked my way up the Mississippi from New Orleans on the riverboats, then changed direction at Cairo to head on up the Ohio. I met Charles in Owensboro and fell in love. A mature and cultured man of means, he swept me off my feet. He did not mention that he was married until we were almost here. He certainly did not mention that he had two wives, one a vampire and one a werewolf.\"\n\n\"I did not meet Victoria while I was alive,\" she went on, \"but I did meet Marianne, in her human form. She took an instant and resigned dislike to me... an attitude I did not understand. Charles gave me my own room and explained to her that I was his Personal Assistant and should be treated with respect. He explained to me that acting as his Assistant would markedly improve my quality of life. I am not stupid. I grew up in the brothels and gambling halls. I decided that being his Personal Assistant sounded just fine.\"\n\n\"The three of us lived with that arrangement... remember, I did not know about Victoria... for about three years. He certainly seemed to favor my attentions, although I was sleeping alone about half the time. I should have known that Marianne knew all about us before I threatened Charles. I had decided I wanted all of his attentions and I gave him an ultimatum: leave Marianne and marry me, or I would reveal our affair and ruin his reputation, just as he would be ruining mine if he did not.\"\n\n\"I was stupid and I soon found myself poisoned. And it wasn't even the best of the Clarets.\"\n\n\"Instead of going wherever it was that I was supposed to go, though, I found that the metaphysical draw to this house and especially its strange occupants, coupled with my extreme love and hatred for Charles, caused my essence to remain here. That is when I found out about Victoria, as well as Marianne's true story. The first time I materialized for Charles, after he had quietly buried my remains in an unmarked grave next door in the cemetery, the poor man had a nervous breakdown.\"\n\n\"By all accounts, he was seen driving his carriage hell-bent-for-leather past the stagecoach station and on into the night, never to be seen again.\"\n\n\"The Braidwood Trust which owns this estate,\" Victoria decided to add, \"is more than ample to sustain it, as the trust instrument requires. The few times that the trustees have sought to sell it off, they have been... um... discouraged, shall we say? The three of us are quite happy here, especially when we were joined by Julianna.\"\n\n\"Which is a whole different story, because I'm mortal, unlike these other three critters,\" Julianna piped up. \"But trust me... I can be just as voracious.\"\n\nStewart had been listening with rapt attention as the tale was laid out for him. Not that he understood it all, but he did start to see how they'd all come into being.\n\n\"So... y-y-you're n-not going t-t-to eat me?\" he managed to venture, stammering through his fear, but persisting. \"Y-y-you're n-n-not evil?\"\n\nAll four females grinned. Which wasn't terribly reassuring.\n\n\"Oh, I wouldn't say that,\" Victoria smiled and this time, didn't try to hide her fangs. \"Eating you is very much what we have in mind. Evil, on the other hand, is relative. We don't intend to kill you, if that's what you mean.\"\n\nStewart thought he was confused before. That was nothing compared to this. Some kind of self-control fought its way to the surface and he wanted to understand... after all, that was one hell of a blowjob.\n\n\"You're going to eat me but not kill me?\" he asked, the stammer falling away as he got used to talking to them and staying in one piece. \"I don't get it...\"\n\n\"Look, Romeo,\" Marianne told him bluntly. \"It's the full moon, I'm way horny and way hungry and I want my pound of flesh... which, from the looks of it, is hanging between your legs. You fuck me good enough and I get sated. I get sated and the hunger dies down. The hunger goes away and you live to do it again. Got it?\"\n\n\"You want to have sex with me?\" he asked in astonishment. For some reason, the others laughed.\n\n\"Not just her, Stud,\" Julianna told him. \"All of us. We're all starving in one way or another. You do us, you die happy. Usually. But that's why they want me here... I can fix that.\"\n\n\"You can resurrect people?\" he asked, even more astounded. More chuckles from the others.\n\n\"Not resurrect,\" Julianna explained. \"Restore your health before you die. Tempore Magicis. Time magic.\"\n\n\"I don't understand,\" he told them, seriously wanting to.\n\n\"You don't need to, Stewart,\" Victoria told him. \"Let me explain what we're offering. Starting tonight and continuing every full moon until you decide to quit or get too old, you will experience sex with us, or what is best described as sex, in various ways depending on the partner. We will feed on your life energy and you will have your mind blown, to use the vernacular. Having sex with us will age and weaken you. When we are done, and you are still alive, Julianna will restore you to where you started, minus about a month or so of your life, to feed her restorative magic.\"\n\n\"In addition to the best sex you will ever have, we will also share tales of the Otherworlds, which you can write up as your own and get published. For tonight, we will also throw in that portrait of Charles you wanted to take as proof you'd been here. To help with your writing.\"\n\n\"Here's the catch. You have to participate voluntarily. If we simply take your energy, we will kill you. If you give it, there is a sort of feedback that gets created so that you enjoy it. Plus the wear and tear, of course. So you need to take a few moments and collect yourself, and really think about how you want to answer. By the way... would you like something to drink?\"\n\n\"Y-yes, ma'am,\" Stewart nodded, his mind racing at the import of her words. He tried to smile a bit as he tried for some sophistication and added, \"what have you got?\"\n\n\"Most mundane human beverages,\" Julianna answered. \"Coffee, tea, soft drinks, lemonade... or blood or bitch's milk, if you want it. You're probably too young for alcohol.\"\n\nStewart shook his head. He wasn't sure he heard right. And if he did, he wasn't sure he wanted to know. \"Um... lemonade?\" he asked tentatively.\n\n\"Oui, bien s\u00fbr,\" Margeaux said and floated out of the room. Stewart stared after her.\n\n\"Is there something wrong, Stewart?\" Victoria asked, as she watched him watching Margeaux.\n\n\"Um... nothing, really,\" he answered hesitantly. \"Just a stupid question...\"\n\n\"No question is stupid,\" Victoria told him, settling down on the settee next to him. \"Sometimes answers are. What is your question?\"\n\n\"Um... okay, so you're all incredibly beautiful. Including Marianne. But it's weird. You have on that sprayed-on dress which emphasizes your natural beauty. Marianne has that luxurious looking fur. Julianna looks really hot, like the Biker Chick From Hell. But Margeaux isn't wearing any clothes. She seems a little bit corporeal... transparent, maybe, yet tangible. Kind of like she's at least partly real.\"\n\n\"So why isn't she dressed? And if that isn't a stupid question, then how come you can scare the shit out of me and yet turn me on like crazy?\"\n\n\"Because I was naked when I was poisoned,\" Margeaux answered from the doorway as she and a very real glass of lemonade floated into the room. \"A drawback of being a ghost... to exist as you were when you died.\"\n\n\"Oh, I don't think it's a drawback at all!\" Stewart blurted out. \"I think you're damned...\" then suddenly he shut up, wondering where the hell he got the balls to say what he started to say.\n\n\"Oh, I would definitely agree that I am damned,\" Margeaux smiled as she handed him the glass. Stewart was uncomfortably aware that the gorgeous naked ghost in front of him was getting him hard again.\n\n\"You're thinking she's damned sexy,\" Julianna told him. \"I agree. Right now, though, I think we women should go back to our card game and let you make up your mind without additional distractions.\"\n\n\"Um... what happens if I decide I don't want to take you up on the offer?\" Stewart managed to ask.\n\n\"We wipe your mind and dump you, naked and alone, in the cemetery, clutching the portrait of Charles,\" Marianne told him.\n\n\"And if I agree?\"\n\n\"We don't wipe your mind and still dump you, naked and alone, in the cemetery, clutching the portrait of Charles, after we've had our way with you,\" Victoria answered. \"Now you just think about that for awhile...\"\n\nShe and the others arose and moved to the card table, taking their places. Stewart watched in fascination as Julianna was dealt in and their friendly game of Texas Hold 'Em resumed.\n\nWhat the fuck have I gotten myself into? he wondered, not for the last time.\n\n* * * * *\n\n\"So, Buddy,\" Julianna addressed Stewart. \"Just what kind of sexual experience, if any, do you have?\"\n\nHe was standing in a weird dungeon in the basement of the house, with chains and manacles hanging from three of the walls, a blazing fire burning in a massive stone fireplace on the fourth and a huge bed in the middle. He was surrounded, essentially, by his hostesses after having agreed to their terms.\n\nIn truth, it had taken him a lot longer to make up his mind that he thought it would, and he had actually considered a lot more than how badly he wanted to get laid by these insanely sexy women.\n\nHe had, for instance, considered his career as an author. A very calculating side of him had realized that paranormal romance stories with a lot of sex in them were very popular these days. As well, he remembered H. P. Lovecraft's Pickman's Model. Awesome results from live experience. If he survived, he could have material for a hundred Best Sellers. If he survived...\n\nThey had said they didn't want to kill him. They said they wanted to eat him. He hoped that meant his libido and not his flesh. In the end, his twin desires for success as an author and experiencing these four powerful sex goddesses won out over his abject fear. He had agreed, and he was now standing naked in the middle of what looked like a medieval dungeon. With a bed. Where they intended to have their way with him.\n\n\"Um... well, I'm a virgin. Intercourse, that is. Vaginal. If you don't count the Dryads, and even they... um, never mind...\" He knew he was stumbling around. He really hadn't thought about it much.\n\n\"I had a girlfriend,\" he admitted. \"She was saving herself for marriage. But she did just about everything else. It was pretty much one way. She liked kissing and petting and getting fingered. And she taught me how to go down on her. She even taught me how to sodomize her. Just, no cock in her pussy. But she wouldn't do oral on me. Something about tasting weird.\"\n\n\"I'm pretty good at oral?\" he offered hopefully. \"Or at least, she told me I was.\"\n\nThe four women smirked at each other.\n\n\"He'll do,\" Julianna nodded. \"Who's first? And no Abbot and Costello cracks...\"\n\n\"It should be Marianne first,\" Victoria suggested. \"Aided as usual by Margeaux. They'll tire him out, certainly, but I will age him severely. So then me and Margeaux. You need to be last, to put him back together.\"\n\n\"The first shall be last and the last shall be first,\" Julianna smiled. \"Looks like I get first and last, since I got the blowjob cum before. Okay, Marianne, you're up.\"\n\nStewart would have had a severe laundry problem, if he were wearing any clothes, and if he weren't fascinated as he watched the six-foot humanoid wolf walk over to him, take him by the wrist and drag him towards the bed. She propelled him onto it, then followed, laying down on her back and spreading her legs.\n\n\"How about you show me just how good you are at oral, Stud?\" she demanded.\n\nStewart almost froze. Almost. Before him was an amazing sight and he was trying to take it all in with the same sight he used for the alternate worlds he visited. The \"Otherworlds\", Victoria had called them.\n\nOn her back, in the middle of the bed, was a large, black-haired she-Were with arms and legs that looked pretty human and a head that reminded him of a statue of Anubis. Her skin was a pelt... all very fine fur except where her six nipples erupted from her huge breasts, and between her legs where the swollen red and pink labia pushed through the fur. And she was staring at him with those hellacious yellow eyes that seemed to bore a hole right through him.\n\nHe was getting hard just looking at her, and he figured that right then, that was probably a very good thing. He eased forward, trying to decide what to do -- go after her nipples first, or her cunt. \"Pussy\" just didn't seem right, describing a wolf. Her cunt won.\n\nHe eased between her muscular, furry thighs and gently spread her nether lips. Her scent wafting up was amazing. Every cell in his body tingled. He looked up over her six large breasts to see her looking down at him with those intense yellow eyes and what could best be described as a smirk.\n\n\"Admiring the view?\" she asked in a low almost-growl. \"Or are you going to do something with it?\"\n\nThat derisive tone stung, so he did something. He spread her lips and took a long lick, from near her anus all the way to her mons. He felt himself come painfully erect as her taste plus her scent became overwhelming. The fur was weird... Susan, his previous girlfriend and mentor had shaved... but not at all unpleasant. What did throw him was the apparent lack of a clitoris. He went back to taking several licks, looking for it.\n\nMarianne was moaning softly, obviously in pleasure, but it wasn't there. Not that he could find. Since a lot of what Susan had taught him involved the clit, he was starting to panic.\n\n<br> Wolves are mammals, he thought as he kept exploring her lush labia with his tongue. They have clits, don't they? Where the hell is a wolf's clit? He didn't remember high school biology covering that.\n\n\"Try inside, Stewart,\" Margeaux suddenly spoke aloud.\n\nOh, yeah... she reads minds, he thought, then began gently probing Marianne's opening, looking for something bumpy. He found it. The throaty rumble that he heard and felt as his finger stroked over it confirmed it for him. And it wasn't too far in. He could probably reach it with his tongue. So he tried.\n\n\"Oh, fuck, yeah!\" Marianne growled at him. \"Right there, fucker. Damn you give good tongue!\"\n\nStewart redoubled his efforts, licking and sucking her labia while first one and then two fingers massaged her hot tunnel. He had the most success when he \"walked\" his fingers over the very swollen bump, alternating his fingers back and forth, rapidly flicking her clit. He was rewarded by the she-Were grinding her hips into him and growling louder, then suddenly beginning to gyrate wildly, moaning \"Yes! Yes! Yes!\" while she arched her back. He held on for dear life and kept going.\n\nThe weirdest thing happened. As every muscle in Marianne's body tensed up and Stewart hoped that it meant she was going to cum, Margeaux suddenly flowed into them. Both. Together.\n\nA feeling like icy cold with a million burning needles shot through him and he felt his own climax hit, just as Marianne went over with a howl into the night. He literally came out of nowhere, the pounding rush overwhelming him. And the feeling of energy that was Margeaux suddenly flared like a white hot nova and then blew through him again, taking him right back to the edge of orgasm.\n\nHe became aware that while he was holding on to Marianne in desperation, more than his two fingers had slipped inside her. He looked down, dumbfounded, as he realized her cunt was enveloping his wrist. The rest of his hand was buried in the she-Were and she was humping up and down on it.\n\nAs he lay there panting in his self-generated wet spot and trying to recover his breath, he decided to see what would happen if he moved his hand. Susan had taught him about a thing called the G-spot. She'd joked that if you got it right, you'd get a \"G-zus!\" out of her. Maybe Marianne had one.\n\nShe did. And he found it. With the knuckle of his thumb as he made a sort of fist inside her.\n\nI wonder how big a wolf's knot is? he wondered, then was immediately interrupted by Marianne cumming again. Loud and long and hard. So hard, he felt her clenching around his hand and pulsing as if to crush it. Well, she seems to like this fis... OH MY GOD!!!\n\nA very brightly glowing Margeaux had erupted from him, and from Marianne, taking with her another huge rush of energy, slamming every cell in Stewart's body with pure pleasure. She had a huge smile on her face as she drifted a little ways away, over by Victoria, who he realized had been standing nearby, watching with a bemused smile. He didn't get much time to think about that before Marianne growled.\n\n\"Oh, fuck...\" she moaned in that throaty tone that sent shivers through Stewart. \"Okay, the bitch is fed... give me your cock, Stud.\" Stewart was confused and hesitated. At minimum, he'd already cum and that meant he should be losing his erection. But he wasn't. He was just as hard as before.",
        "\"Take your fucking fist out of my cunt and stick your goddamn cock in there instead,\" Marianne clarified, none too gently.\n\nThe lamp lit and Stewart began to withdraw his hand... then had a wicked epiphany. Instead of pulling out, he began pumping her, making sure to run his thumb over her G-spot. It didn't take long.\n\n\"OH FUCK! OH FU-OOOOOooooo...\" The she-Were impaled the mattress with her fingertips, clutching it as she went right back over, howling another crashing orgasm. The unintelligible grunts and groans and moans that followed her howl were music to Stewart's ears. He'd gotten it right. She wanted mind-numbing sex? He was going to do his best.\n\nHe kept it up and she came again. He would have grinned, but this time her thighs slammed shut on his head and he felt like a balloon that was going to pop. She was unbelievably strong. Plus, she was shaking so hard, he felt like somebody had stuck his head in a paint mixer.\n\n\"Nkntbrthhh!\" he managed to mumble from between her quivering thighs.\n\n\"Excuse me?\" Marianne asked as she grabbed his hair and lifted his head.\n\n\"I said, I can't breathe!\" Stewart iterated, gasping.\n\n\"You're being naughty, boy,\" Marianne growled at him as she calmed down and the shaking stopped. \"I love it, but you're still being naughty. Do what you're told and stick that cock of yours in me!\"\n\n\"Yes, ma'am...\" he answered meekly, suddenly aware that she could easily rip his throat out if she didn't like what he was doing. He eased himself on up the bed, covering her, in order to comply.\n\nGod, I hope an \"above average package\" is enough, he thought as he moved. How big do you have to be to fuck a wolf? Or she-Were? Or whatever...\n\nIn the world of high school comparative anatomy, Stewart had always felt adequate. Not in experience, maybe, but certainly in equipment. Somewhere between 7\u00bd to 8 inches long and a full 2 in diameter, he'd been a bit bigger than most of the rest of the guys. Not Bradley Samuelson, though. Stewart was convinced Bradley held the World's Record after seeing him jerking off into the urinal. Damn thing was almost down to his knees. Now, he was sort of wishing he were Brad.\n\nHe positioned himself between her thighs, catching her oddly shaped knees with his forearms as he leaned forward, trying to aim his straining cock for her swollen slit. Marianne expedited it by grabbing his throbbing hard-on and guiding it into her. With the target acquired, Stewart thrust forward and sank completely into her blast-furnace quim.\n\n\"Oh! Fuck! Yeah!...\" Marianne moaned in her throaty voice as Stewart filled her up. \"Fuck, kid, that is pretty fucking good! Man, you fucking stretch me out good!\"\n\n\"She likes to say 'fuck' a lot,\" Julianna commented drily and Victoria chuckled.\n\n\"Yeah?\" Marianne retorted. \"I like getting fucked, too!\" To Stewart, that seemed to be his cue. He started rocking into her.\n\nAnd was surprised when she folded her legs in behind him, tickling his balls with her toes as she pulled him down onto her six cushy tits.\n\n\"Oh, fuck...\" he mumbled as he tried to pay attention to what he was supposed to be doing. Pulling back until he was almost out and pushing all the way back in again, hard, seemed to be having a good effect. One in which he was going to lose it any moment. The she-Were's intense heat was pulsing through him, setting him on fire and making everything pull up until he felt like his balls were in his throat. And it was certainly a hell of a lot more intense than his marathon jerk-off sessions.\n\nThe feel of her furry tits pressing into his chest, her furry feet pressing on his balls, her immensely strong furry arms clutching him, her very hot pulsing cunt milking him... it was all too much. He tried not to cum. He really did. He wanted to make her cum instead. And he almost succeeded.\n\nHe did succeed, insofar as making her cum with his long, deep thrusting. The problem was, when she went over with his cock in her, that was all she wrote. He went right over with her and with a cry that echoed off the stone walls and mixed with hers, he blasted his seed deep inside her. Which is when Margeaux decided to take another dive through their libidos.\n\n\"OHMYGOD!!!\" he cried out as Margeaux's energy spike sent him right over into back-to-back orgasms... something he was pretty sure had never happened in his life. But again he was pumping his hot spunk into the were-bitch and she was moaning as if she was continuing to cum. It sure felt like it to him. Stewart couldn't tell if her cunt pulsing had let up at all.\n\nMargeaux's brilliant white light drifted up from them again as her image smacked its lips and she smiled.\n\n\"Eighteen is such of lovely vintage!\" she commented dreamily as she drifted towards the other women. \"Such a full bouquet and powerful body...\"\n\n\"Nineteen-eighteen?\" Julianna asked, not sure to which vintage she was referring.\n\n\"No,\" Victoria smiled beside her. \"Eighteen years of age...\"\n\n\"Ah,\" Julianna smiled and nodded her head. \"That kind of vintage!\"\n\nBack at the Were, Stewart wasn't going down. Of course, nobody had told him he was supposed to go down. Not when he was losing his virginity to a wolf. Never having had his cock in a woman, he had no idea what was supposed to happen. What he figured out now was, if he wanted to keep the woman happy, he needed to keep fucking her. So he did.\n\nHe grabbed beneath her massive shoulders for purchase and resumed thrusting, his head spinning and his whole body feeling like it was plugged into the wall. But it was good! Very good. Very, very, very good! All he knew right then was, he wanted this feeling to go on, and on, and on, and on...\n\nHe must have been doing something right, because about every thirty seconds or so, Marianne would give an exceptionally loud moan, or growl, or groan as another wave of orgasmic bliss shot through her, making her spasm and clench, forcing her fluids and Stewart's out into a puddle beneath them, until the next amazing thing happened.\n\nHer teats began to leak, then spurt, then become small continuous fountains, soaking Stewart in her milk.\n\n\"Damn! We shouldn't waste that,\" Julianna muttered as she watched. \"Hey! Marianne! Roll him over!\" she called out, completely confusing Stewart. More than he already was, that is. With a groan, Marianne lifted Stewart and bodily put him on his back, now astride him, without letting him withdraw from her hot, pulsing, swollen cunt. She was now spraying his face and chest liberally with her milk.\n\nJulianna ran to the kitchen and came back dragging a strange looking machine. It might have looked like a milking machine intended for a cow, but the teat cups weren't elongated properly. Instead, they were shaped more like a human breast and Stewart suddenly realized what was going to happen as Julianna plugged in the machine and its vacuum pump whined to life.\n\nHe lay there in amazement as One) he remained buried to the hilt in this fantastic creature that had him damn near passing out from pleasure; Two) he watched Julianna affix the breast cups to the were-bitch; Three) said were-bitch's milk began rapidly filling up the collector jar; and Four) said were-bitch was lolling around in some other state of existence as she straddled him and continued to cum. Her body seemed to be running on autopilot as she rocked against his painfully swollen manhood, her eyes closed and her tongue drooping alongside her jaw\n\nHe felt another cum arise and just gave in. He was too exhausted to fight it, and besides, it felt too good to pass up. With a loud moan, he once more pulsed his seed into the she-Were's sex-furnace, just as the black velvet of blessed unconsciousness descended on him.\n\n* * * * *\n\n\"Is he awake, yet?\"\n\nStewart heard Victoria's voice in the darkness and for a moment was very confused. He didn't remember where he was, or why he was there. He barely remembered who he was.\n\n\"He will be shortly,\" he heard Julianna answer. \"Thank Meph he's got quite a bit of stamina to work with. Marianne damned near drained him all by herself.\"\n\n\"With help from Margeaux,\" Victoria pointed out.\n\n\"Yes, with help from Margeaux,\" Julianna agreed. \"You're looking pretty bloated, girlfriend. How much libido did you suck out, anyway?\"\n\n\"Less than half, I swear!\" the ghost lady answered very defensively. \"He has quite a lot! More than I have encountered in a very long time. Perhaps he doesn't masturbate?\"\n\n\"Maybe,\" Julianna concurred. \"If you'd been raped by a couple of Dryads, maybe you wouldn't, either.\"\n\nStewart moaned and tried to open his eyes. Everything hurt, but the pain was rapidly diminishing.\n\n\"Welcome back, Champ,\" Julianna told him as his eyes fluttered open, only to be blinded by the dazzling red mane floating above him. That, and the beautiful green eyes peering down at him from the gorgeous pale-skinned face. \"Scratch one Bitch. You did her in.\"\n\n\"I did her in?\" he managed to croak, his mouth dry from so much moaning and gasping.\n\n\"Here.\" Julianna offered him a small crystal goblet. \"Or would you rather have this?\" She bared one of her massive breasts and Stewart thought he was going to pass out again. She was perfect.\n\n\"Huh?\" he managed to get out.\n\n\"Bitch's milk or Witch's milk,\" Julianna told him. \"They both have regenerative properties you need. Marianne is too out of it for you to drink from her at the moment. So the cup is her milk and obviously the tit is mine.\"\n\n\"Both?\" he asked tentatively. He had no idea where the wild hair had come from.\n\n\"That's the spirit!\" she smiled and dazzled him again. He thought he might be falling in love.\n\n\"It's just a spell effect,\" Margeaux's voice commented from somewhere. He couldn't see past the flaming mane.\n\n\"What is?\" Julianna asked and Margeaux told her, \"he thinks he's falling in love with you.\"\n\n\"Of course he does,\" Julianna smiled. \"Come here, Stud...\" She put her arm behind him and raised him a bit so he could drink from the offered cup. The warm, thick, sweet liquid poured over his tongue and parched mouth, trickling down his throat as he tried to swallow, instantly feeling soothing and clearing his head. When the cup was empty, Julianna set it aside.\n\n\"Thank you,\" he managed to say, clearly this time.\n\n\"Okay, now this,\" Julianna went on, pressing her nipple against his mouth. \"I assure you, this Witch's Milk has nothing to do with the neonatal kind.\" Stewart reflexively sucked her teat into his mouth and came very wide awake, very fast. It certainly wasn't like neonatal milk, or even human mother's milk. It was like a Pi\u00f1a Colada on steroids. Cold, sweet with an edge, heady and maybe half amphetamines. Or at least, that's what it felt like. Maybe just caffeine. It was also instantly addictive. He started sucking like the milking machine they'd used on the Were.\n\n\"Easy there, Bud,\" Julianna admonished him. \"Take your time. There's plenty there, you don't have to suck it all out at... oh, my God, that feels good!...\" The letdown hit her and those pretty emerald eyes started to glaze over.\n\nStewart let go of her tit and looked up at her. \"Are you okay?\" he asked, concerned.\n\nIn answer, she pulled him back onto her tit so he would resume nursing, then cradled him as her other hand descended to her leather shorts and unzipped one side, then the other. Pulling them away, she guided one of his free hands to her groin.\n\n\"What do you think?\" she asked as she pushed him against her pussy.\n\nShe was soaking wet. So he did what was becoming natural. He ran a finger down her slit, probing her pussy lips and feeling for her clit. He found it.\n\n\"Oh, yeah...\" she moaned dreamily as he began running slow circles around it with his forefinger. \"Damn, you're good!\"\n\nStewart smiled into the tit he was suckling. Then he decided to go for the gold. He slid his finger down to her vestibule and gently inserted it, seeing if he could feel a swollen G-spot. Her moan told him he was on the right track. He found it, but it wasn't very swollen. Yet. He started massaging it.\n\n\"Oh, FUCK!\" Julianna started grinding her hips against his hand. When he moved to take a look, though, she grabbed his head and kept it on her tit. \"Drink!\" she ordered him, and he tried to. He was back to feeling like he was plugged into a socket and every mouthful just cranked up the voltage.\n\n\"OH! FUCK! YESSSS!!!...\" Julianna cried out as she finally went over, and Stewart was feeling pretty good about himself. He kept fingering her as she pulsed on him, until she finally eased his hand away.\n\n\"Look at me,\" she told him and he obeyed without hesitation. What he saw surprised and excited him. Her emerald eyes were now glowing like brilliant LED's. What she saw pleased her no end.\n\nStewart's previously pale blue eyes were now almost cobalt with the energy consuming him. She was sure he didn't know it, but he didn't look eighteen anymore, either. More like his mid-30's and buff.\n\nMan! If this is what he's going to grow into, she thought, it'll be fun hanging around to see it. Might even make a good mate...\n\nStop it, Julie-girl, she suddenly chided herself. Don't go getting sappy on this kid!\n\n\"I think he's ready for you, Vicky,\" she told Victoria. \"I may have topped him off a bit much. You might need to drink deep.\"\n\nThe exquisitely pale Victoria glided over to where Stewart was lying on the mattress. She gazed down at him with a look that absolutely mesmerized him. She was Erotic personified and he wanted nothing more than to get lost in her crimson eyes.\n\nCrimson??? Stewart had forgotten. Oh my God! I forgot... she's a Vampire!!! He was already trembling. Now it became much more pronounced.\n\nHe watched in awe and fear as she slowly undid the bodice of her dress, slipping it off her shoulders and freeing her massive breasts to swing unrestrained. Stewart damn near came right there. But she didn't stop. In slow motion (to him, anyway), she continued to unbutton the outer skirts and let them fall away. Each layer peeled away revealed an even more alluring and curvaceous creature. As the last petticoats fell away and revealed her in all her naked glory, Stewart started to go into convulsions.\n\nHis body simply could not reconcile the inconceivable lust and the abject terror which were warring it out inside him. Victoria seemed to realize this and gently knelt beside him, reaching her hand out and soothingly stroking his cheek. As before, something in her touch seemed to calm him down, at least a little.\n\n\"Stewart?\" she asked, gazing into his eyes (and pretty much my soul, he thought). \"How many times would you like to reach orgasm with me?\"\n\nHuh? The question completely derailed him. How many times?... How am I supposed to know?...\n\n\"You see, Stewart,\" she went on to explain, \"I can get everything I need from you in one bite...\"\n\n\"I mean kiss,\" she hastily added as he began to shudder even more. \"One kiss. But it would be so intense, it would be like raping you. And that isn't something I think you want.\"\n\n\"I want whatever you want, ma'am,\" he managed to utter, without a clue where the balls came from.\n\n\"Ma'am! Hmmph...\" Victoria didn't seem particularly happy. \"Don't call me ma'am. It makes me feel old...\"\n\n\"But,\" Stewart stumbled, \"aren't you over...\"\n\n\"Yes, I am!\" she interrupted. \"But I don't like to feel like it. Call me Victoria. Or Vicky.\"\n\n\"Yes, ma'am,\" he answered then hastily corrected himself. \"I mean Victoria! Yes, Victoria!\"\n\n\"And I really am asking what you would prefer,\" she went on, still gazing into his eyes.\n\n\"I think making love with you would be absolutely awesome.\" He decided the truth was probably a good idea. \"Whether I lived through it or not. Don't get me wrong... Marianne was awesome. Just, in an animalistic way. Which was really good!\" He felt like he was stumbling over himself.\n\n\"But I think you're probably more the finesse type, like pleasuring Susan was, if you get what I mean,\" he went on, hoping he wasn't sounding like an idiot. \"You know... gentle touch and technique, find all the right places, maybe a lot of kissing...\" He shuddered as the image of her teeth and his neck flitted through his mind. \"Something more... romantic?\" he ended hopefully.\n\n\"I like the way you think, Stewart Morgan Chamblee,\" she told him in a soft, silky voice that thrilled him to his core. \"I think cuddling and kissing is a very good way to start. I will tell you, though, that at some point Margeaux will join with us, as she did with you and Marianne. It is her way of feeding. And in our case, her presence will keep you from being turned. She will absorb it. It cannot hurt her.\"\n\n\"Turned?\" He suddenly felt his mouth go dry. \"Like, turned-into-a-vampire turned?\"\n\n\"Pretty much,\" she smiled, \"yes.\" She felt the surge of panic and willed him to calm down. \"But you needn't worry about that because Margeaux will protect you.\"\n\n\"I'm going to be protected by a ghost???\" Regardless of Victoria's vampiric charms, he wasn't taking this well.\n\n\"I am very good at what I do,\" Margeaux smiled at him and her thick accent distracted him. \"Did you not enjoy the thrill when I joined with you and Marianne?\"\n\n\"Oh, I enjoyed it! I enjoyed it!\" he hurried to reassure her. \"Not sure what the fuck happened, but I enjoyed it!\"\n\n\"Ditto!\" Marianne's groan came from somewhere else in the room. Stewart struggled to see and when Julianna moved out of the way, he realized the fur rug by the fireplace was the she-Were, looking very, very wiped out.\n\n\"Is she okay?\" he asked, true concern in his voice.\n\n\"She is fine,\" Victoria smiled. \"She is, for once, completely sated. You did an admirable job.\"\n\nStewart liked the sound of that. Admirable. From an awesome woman. Creature. Whatever... it was cool and he felt good. \"So, Victoria... how may I service you?\" He thought he was being clever.\n\n\"I like your attitude,\" she smiled as she moved gracefully to the center of the bed. \"How about you come here and we cuddle a bit?\" She didn't have to ask him twice. As she moved to a comfortable position near the center of the bed, he moved to join her, putting his arm around her and letting her snuggle in next to him.\n\nAt once, he felt an exhilarating and refreshing coolness spread over his skin, apparently from her. She extended her slender arm and softly ran a single fingernail in a figure-8 across his pecs and around his nipples, then let it drift down his abdomen to the small fat pad above his cock. He was rock hard and feeling electrified. Even his anus was tightly puckered from the thrill of her touch.\n\nHe decided he needed to do something more than just lay there like an idiot, so he returned the gesture... sort of. He began by tracing her cheek, starting at her temple, and following it down to the curve of her neck. Her breasts were pushed into his side, so he decided to follow the curve of her shoulder, out and around to her back and then down her arm until he reached her wrist, now hovering near his straining manhood.\n\nShe smiled and suddenly that was all he wanted. To make her smile. To touch her in ways she wanted. He took a chance and retraced her arm until he got to her shoulder, then down, tracing the curve of her breast where it squished against him. With a soft sigh and another wave of tingling chill that ran through and excited him, she eased back a little, exposing her nipple. Stewart was not slow on the uptake. He ran his fingertip around the pale areola, smiling to himself as it swelled to a turgid button, only slightly darker than her skin. He wanted to suckle it, but he wasn't in a good position. Then he got severely distracted.\n\nVictoria slowly and deliberately began to trace a line from his abdomen, over to his hip and down the inside of his thigh and as she did, he felt a pounding swell in his ears... a steady and strong thump-Thump, thump-Thump, thump-Thump, as if listening to a heartbeat. The drumbeat increased as he realized he was listening to his own heartbeat, following along where Victoria touched him, following what he knew was the femoral artery in his leg.",
        "When she reached his knee, she paused and then began retracing her path, the drumming of his heartbeat still echoing in his ears. When she reached the top of his thigh, she gently moved her hand across to his perineum and then using only her nails, moved up to his sack.\n\nThe chill tingling of her touch as she lightly scraped his scrotum made everything clench, including his already impossibly hard erection. He felt the pulse of his cock resounding in his ears as she paused to play with him for several seconds before moving on to the other thigh and beginning to trace the artery in that leg, down to the knee. As she did, Stewart became aware of a second heartbeat, overlaid with his own, yet faint and much, much slower.\n\nCompared to Marianne, everything was slower. Victoria was being very deliberate in her touch and Stewart fell the chill pull of every part of him to this most sensuous creature. He felt his blood course after her, the focus being that of her exquisite touch. Everything in him simply wanted to melt into this woman, become one with her.\n\nShe reached his other knee and paused, then began the return journey as she had before, pausing again to tickle his balls with her nails and drive him absolutely batty. He began to worry that he wasn't doing anything to please her, that he needed to do something, be a giver, not just a taker, but his body and mind felt overwhelmed by her provocative touch. As he struggled to think, to decide what he could do, she lazily traced the ventral side of his phallus from his testicles to his glans and as she did, he felt a swelling of his blood follow her finger, as if a bulge were traveling up his cock. He looked down in time to see her reach his frenulum and tickle it as she moved onto his swollen purple head.\n\nThat was it. He came. Hard. All over his chest and hers.\n\nIt wasn't that he wanted to. It wasn't that he didn't want to. She simply drew it from him and he kept spurting rope after rope over both of them while he watched his engorged manhood pulse with the rhythm of their heartbeats as the orgasm engulfed him.\n\nHe was thrilled by Victoria's soft sigh and slight smile as she watched him cum, lying snuggled up against him. He was surprised as he saw his seed seeping into her skin and even more surprised when she ran her hand over the cum on his belly and it, too, seeped into her as if she were absorbing it. She smiled at his look of confusion.\n\n\"The second most powerful source of Life Energy, Stewart Morgan Chamblee, and you have it in abundance,\" she told him. \"I relish it, and there is quite a bit more where that came from...\"\n\nHe sighed and closed his eyes, confused and delighted, then froze as he felt her breath on his lips.\n\nOh, God, she's going to bite me and make me a bloody mess and turn me into a vampire and oh, fuck, I'm lost... His mind raced and fear shot through him as he held absolutely still.\n\n\"You were not listening carefully, Stewart,\" Victoria's soft words push the air against his lips. They were literally a hairsbreadth apart now. \"Besides...\"\n\nHer lips barely brushed his and yet he felt like another orgasm had ripped through him, except without the ejaculation. The shock and tingle and feeling of explosive pleasure were all there.\n\n\"We have more cuddling and kissing to do,\" she finished, still staying close. He was afraid to open his eyes. \"I particularly like kissing.\" And then she did, in earnest. She pressed her lips against his and he felt the rush of exquisite agony as every cell in his body wanted to burst with pleasure. He finally got moving and slid his arms up around her smooth, cool back and began to trace light circles down to the base of her spine where two small dimples caught the attention of his fingers.\n\nThere was a small patch of ultrafine hair just where her spine and pelvis met and he began running his fingers over it as lightly as he could while he returned her kiss. He felt another rush that left him dizzy as he got lost in her scent and taste and feel, and the sounds of her whimpers as he stroked that very sensitive spot. He took a chance and tentatively opened his mouth slightly and pushed against her lips with his tongue. She responded in kind.\n\nHe hesitantly probed her mouth with his tongue, afraid that at any moment sharp fangs would impale it. That turned out to be the least of his concerns. Her soft mouth and sweet, exciting taste were taking him to levels of pleasure he didn't know existed. When she pushed back with her tongue and started running it around his, he had the first inkling he was in trouble.\n\nMostly because she wrapped both of hers around his and began sucking and stroking him with them.\n\nYes, them. To Stewart, it felt as if there were two tongues in her mouth, not just one. And not including his. She seemed able to twine about his own tongue and gently lick and suck on it while an entirely different tongue probed his palate and went uvula spelunking. She pressed so deep into his throat that he was afraid he was going to gag, while his tongue was being held captive by the most sensuous of pliable, wet muscles.\n\nHe felt the excitement tinged with fear getting him erect again.\n\n\"Mmm-hmmm...\" Victoria moaned in pleasure as their mouths probed and tasted each other. She ran her cool fingers over the side of his face and down his chest, teasing his cock and balls for a few moments before returning, along his side or up his arm. The tingles he was getting from her touch were excruciatingly wonderful. He wanted to pet her breasts and belly, but she was lying on him in a way that made it difficult.\n\nApparently sensing that, Victoria slid a leg across his and raised up slightly, giving him access and all the while keeping up the most intense make-out session Stewart had ever imagined possible. He was ecstatic to find that he could run his hands down her smooth, cool skin, following her luscious curves and exploring her intimate recesses. His thumbs felt the diamond-hard points of her nipples press back against him as they swelled at his touch while Victoria softly moaned her approval.\n\nHer abdomen was like sculpted glass, yet gave gently to his stroking. He was delighted to discover, using the Braille Method, that she had no pubic hair but rather the curves of her thighs and mons led to pouty inner labia pushing out like a fluted orchid. She was moist... a cool wetness that was somehow tingly and refreshing. He wanted to taste her, but her entrancing lips were keeping his mouth occupied. So wetting a finger with her essence, he began making small circles around her swelling nub and was gratified to again get moans of pleasure from her.\n\nHer clit swelled up so much he could roll it between his thumb and forefinger, and he discovered that was exactly the right thing to do. She tensed up, almost crushing him with her strength, then cried her cum out into his mouth as she spasmed violently, thrusting into his hand, hard.\n\nNot one to waste an opportunity, Stewart slipped two fingers into her cunny and began massaging, keeping his palm on her mons and pressure on her clit, drawing his fingers up and hoping to find her G-spot. He did.\n\n\"Ohhhh, Stewaaarrrrt...\" she voiced in a long moan, coming off the kiss and retracting her tongue. \"That is so good! Please... please fuck me with your fingers... please make me cum again!\"\n\nReleased from the kiss and able to move down her body, he tried to comply. He kept two fingers buried deeply within her cool, wet tunnel, still stroking for the G-spot, and began kissing his way down the side of her neck, to her collarbone, to her chest and finally to her nipples, now standing out like two-inch-high diamond pyramids. He sucked the first one into his mouth and it was like sucking on a popsicle... cold, wet, an incredible sweet taste... and it seemed to bring her G-spot erect, for now he could feel the silver dollar sized mound of much harder, yet pliable, cunt beneath his fingers. Moving to her other nipple, he paid close attention to stroking her \"sweet spot\" deep within.\n\nWith confusing results. He got what he wanted... she came, and she came hard. His hand, though, felt like it was being sucked into her pussy and it was throbbing so hard with his own blood that he thought it might rupture. Deciding to save his hand and risk everything else, he slowly withdrew his fingers as he began licking, sucking and kissing his way down her torso, her marvelous hips, her irresistible mons.\n\nSomehow, every time he touched her, with whatever he touched her, he felt his blood pounding and being drawn to the point of contact. It was like having rolling pressure points in his body that disoriented him. But he wasn't about to stop. She felt so ungodly wonderful! He finally moved so he could descend to her clit with his tongue.\n\nAnd he thought her nipples were like sweet popsicles! Just licking her essence made shudders rip through him, shudders of pure pleasure, shudders he'd only felt before when he was fourteen and two tree nymphs were tag-teaming him incessantly as they used him for a flesh-dildo. But Victoria... holy hell, Victoria was the epitome of seductive paradox. Her skin and breasts and kiss and cunt were cool, bordering on cold, but the excitement she created in him was hot! Even more so that with Marianne. One way or another, he was going to give this woman all the sexual pleasure she craved, even if he wasn't very clear on exactly how he was going to do that at the moment.\n\nRemembering Susan, he decided what the hell? It worked for her... and he added a third finger to the two penetrating her depths, stroking her sensitive well, while he did that clit trick Susan had taught him. He used his lower lip, supported by his teeth, to lift Victoria's clit from underneath, forcing it out of its hood. It was already standing proud, but this just ensured that he could suck it into his mouth like a blowjob and flick his tongue across it, side to side. It had always driven Susan over the edge, and he had no less success with the vampiress.\n\nShe went ballistic. She was so strong when she thrust her hips towards the ceiling while she cried out her orgasms that he had to lay his body across her as best he could just to anchor her and keep her from throwing him off. Her mewls and moans and groans and cries were awesome! And yet, he wanted to do something more. So he tried slipping in a fourth finger and she accommodated him easily.\n\nWell, what the fuck? he thought. Marianne liked getting fisted. Maybe Victoria does, too.\n\nShe did. And when she clenched down on his wrist and he fist-fucked her, it really did feel like she was going to sever it.\n\nGuess they'll just have to call me Stumpy, he thought, then realized the irony. He was using his right hand. The one he wrote with. Guess I'll have to learn to write left-handed.\n\n\"In the name of Hecate, Stewart!\" she finally cried out. \"I can take no more of your marvelous hand and mouth. Please ease up!\" He sure didn't want to piss her off, so he did... slowing down and easing his hand out, as her chest heaved to catch her breath. He moved up next to her to hold her and help her calm down, but he wasn't there long before she rolled him on to his back and straddled him.\n\n\"My turn,\" she smiled and her canines were definitely out. The raw pleasure coursing through him was not enough to overcome the rush of fear, though, once he saw her fangs. His cock, on the other hand, didn't give a rat's ass about the fear. He was massively swollen, skin taught to the point of rupture and his glans a deep purple. Victoria rubbed his hard-on against her leaking lips, slathering him with her lube, before guiding him to her entrance and sheathing him completely.\n\nWhich pretty much blew Stewart's mind. She was so icy cold, she felt hot. It was like fucking a melting ice cube, but one that didn't hurt. He couldn't hold back as she rocked on him. Three or four strokes and he came, flooding her cool cunt with his hot seed.\n\n\"Mmmm...\" Victoria moaned as she felt his cum wash through her. \"Very good, Stewart. Three or four more like that and I will be ready.\"\n\nThree or four? How the fuck does she expect me to be able to do that? he thought wildly, on the edge of panic. How am I supposed to... OH, FUCK! He'd gotten his answer.\n\nSomehow, her energy, her vampiric magic, was keeping him hard and although painfully sensitive, it gradually gave way to another feeling of an impending ball-draining cum. He knew he was going over again as she steadily milked him with her pussy as she sat across him and rode him. And from where he was looking, she was exquisite art. Like a Rodin sculpture or an Avril painting. Just plain old perfect beauty.\n\n\"Whatever you wish, Mistress,\" he managed to whisper as she had her way with him. She grinned broadly.\n\n\"I like your attitude, good Sir,\" she smiled in return. \"Let's try for another, shall we?\" She didn't wait for his response. She steadily increased her rocking until he had no choice.\n\n\"Oh, God, Vicky!\" he cried out, abandoning any pretense of control. \"I'm going to cum!!!\"\n\n\"Mmm-hmmm,\" she agreed and pushed him deep inside as he started to pulse. \"My cervix and womb will happily drink all that you have to give.\"\n\nStewart lost track after that. She did the same magic to him three more times before he was aware again. He felt himself building up to another and just couldn't believe she could do this to him. Victoria sensed his state of mind and decided to be proactive.\n\n\"This time, my consummate lover,\" she told him and he definitely perked up at that, \"Margeaux will be joining us. If you pass out, do not worry. I can have a rather... intense... effect on my lovers. You will be fine.\"\n\nFine. Fearful, Insecure, Neurotic, Emotional. F-I-N-E, fine, he thought. Oh, yeah... that fits. And Margeaux. The ghost. The one that keeps me from being turned. Great...\n\nOnce more, Victoria began her rhythmic stroking, drawing his libido to one spot... one very specific and very important spot. From Stewart's point of view, everything from his cock to his anus was one solid mass of Oh-my-God-I-need-to-get-off! He felt himself building up, but this time she was teasing him, bringing him to the edge and keeping him there until he felt like he was going to have a Galaxy-class orgasm backed by about twenty gallons of Life Energy, as she had called it.\n\nHe gave up. He gave up trying to keep track of it, of trying to remember, of trying to have any conscious part of it. He lay back and closed his eyes and muttered, \"thy will be done...\" as he danced on the excruciating edge of the Universe. He didn't see it as she leaned forward, pressing her massive breasts into his chest. He didn't feel it when Margeaux flowed into the two of them. He wasn't aware of Victoria's sharp fangs piercing his neck and drawing forth his precious blood, the sustenance she craved, the food she needed and which was so incredibly charged by this willing, delicious, fulfilling partner.\n\nHe was not aware that his skin was being drawn taut, shriveling up as he aged beneath her. His body felt weak and he didn't care. His breath became labored and he didn't care. His heart fluttered and his pulse grew weak and he didn't care. All he cared about was the enormous rush of pure ecstasy pounding through him like a violent surf on a rocky shore as he reached his peak and came.\n\nAnd came, and came, and came... pulsing hot jets of his life into the hungry vamp, feeding her with his life essence. Margeaux could stop the venom but she couldn't stop the aging. That was up to Victoria and Julianna, and right then Victoria couldn't have been bothered. She was too high on feeling alive.\n\n\"Vicky! Stop!\" Julianna suddenly interrupted. \"You've gone far enough! He's fading, fast!\"\n\nVictoria didn't seem to hear.\n\n\"VICKY!!! STOP IT OR YOU'LL KILL HIM!!!\" Julianna shouted to her and she put her hands on the vamp's shoulders, to try to dislodge her. The murderous glare she got from the flaming red eyes was only momentary, but enough to remind the witch just who she was dealing with.\n\n\"Vicky, let up, please...\" Julianna implored. \"I need something alive to work with...\"\n\nA glimmer of recognition and then full awareness returned to the vampire's expression as she slowed, then stopped and eased off of the withered remains of the boy.\n\n\"I'm sorry, Julianna,\" she apologized softly. \"Really, I am. I have not tasted one so delicious, so virile, in a very long time. He is exquisite... I hope you can fix him.\"\n\n\" Only mostly dead,\" the witch muttered as she checked for Stewart's vitals. \"Not all dead.\"\n\n\"Yeah, 'mostly dead is slightly alive', I got it,\" Victoria rejoined. \"Very funny, Princess.\"\n\n\"Hey, it was a good movie,\" Julianna answered as she pulled a small stiletto from her bodice and sliced her finger. \"As you wish,\" she added with a smile as she smeared some of her blood on his wrinkled lips and yellowed teeth. Pulling some hair from her mane, she asked \"candle?\"\n\nVictoria brought her one and lit it, passing it to Julianna who used it to reduce the strands of hair to ash, carefully catching the same on her palm. She handed the candle back to Victoria while she bared her breast and expressed some milk into the same palm, mixing it with the ash. She used the mixture to draw an inverted triangle on Stewart's paper-thin forehead.\n\n\"They always get it wrong,\" she complained offhandedly. \"All this shit about a pentagram, or runic summoning circle. All it does is complicate things. There's a much nicer way to restore his timeline. You left his cock alone, I see. Good.\"\n\nIndeed, Stewart's erection was the only thing on him that didn't look like a corpse. He was still massively swollen and discolored and it was that which Julianna held as she muttered some arcane verse and slowly stroked. After a few moments, she seemed satisfied with whatever the results were and stripped off the rest of her leathers, straddling him as Victoria had done.\n\n\"At least you left me something decent to work with this time,\" she told Victoria as she lowered herself onto Stewarts' straining manhood. \"Not like the first couple of these, where you left me virtually nothing.\"\n\n\"I've paid attention,\" Victoria told her. \"I hope I've learned.\"\n\n\"Oh, God, that's good!\" Julianna exhaled as she completely engulfed him. \"And yes, you've learned. Now, let's see if I can reset his clock.\"\n\nMarianne stirred over by the fire and moved to join Victoria as they watched Julianna work her magic. It was less than a minute before Margeaux's form could be seen arising from the body.\n\n\"It's working,\" she commented to nobody in particular. \"I'm getting kicked out.\" She, too, went to join the she-Were and the Vampire and watch the witch work.\n\nTo them, it looked like Stewart's body was beginning to swell, as if someone were inflating it with a tire pump. Each time Julianna muttered something and sat all the way down on him, more and more of his skin filled out and he began looking younger and younger.\n\n\"Don't forget to stop at eighteen!\" Victoria teased Julianna. \"Don't want any legal troubles!\"\n\n\"He'll be back where he was before the feast,\" Julianna answered, not breaking rhythm, \"minus about a month. But I've got to tell you... OH, FUCK!!!\" It was obvious that she'd stopped talking because she was cumming her brains out. \"Oh, fuck, this is good! Fuck this is good! Oh, fuck!...\" were the only intelligible things coming from her mouth as she shuddered and convulsed over and over, and all the while Stewart seemed to be growing backwards into the eighteen-year-old that had invaded the mansion originally.\n\nHe still had his eyes closed and seemed to be unconscious as Julianna both took her pleasure and restored their victim to his previous self simultaneously. His eyelids began to flutter and he seemed to be coming around as Victoria prompted Julianna.",
        "\"You've got to tell us what?\" she asked quietly, watching Stewart intently.\n\nStewart, to his mind, was just coming back to Reality to see a redheaded goddess astride him, fucking him with an abandon that made him feel compelled to be alive.\n\n\"Julianna?\" he managed to moan. \"Are you really a goddess?\"\n\n\"That this may be the one,\" she answered Victoria, ignoring Stewart's question.\n\n\"Which one?\" Victoria asked, puzzled.\n\n\"The one to have children with,\" Julianna told her while smiling into Stewarts uncomprehending eyes. \"He is young and strong, excellent biological donor material, metaphysical sensitivity, some untapped powers... he'd make a good sire for my daughter. I just need to get some of his baby batter at the right time.\"\n\n\"What do you mean, baby... OHMYFUCKINGGOD!!!\" Stewart came for the first time in his renewed body and it was like being thirteen all over again. He was cumming so hard, he was seeing stars.\n\n\"That,\" Julianna told him as she milked every last drop of his seed from him. \"Your semen. Your half of the Star Stuff that makes us all. And since I'm phase inverted to the moon, you could be making a baby right now.\" She grinned down on him and kept up her steady rocking.\n\n\"Making a baby???\" He wanted desperately to believe he didn't hear her right.\n\n\"Uh-huh!\" she continued to smile and rock. \"I've been meaning to get around to it, and if you're going to be hanging around this crew, you'd be perfect.\"\n\nStewart's mind fizzled. It just sort of shut down on him. This whole thing was a dream and he'd wake up timid and alone, at home, in his own bed. His body went on autopilot while his brain took a vacation.\n\nAn autopilot that let him get off twice more under Julianna's tender ministrations. After the last one, he finally managed to wrest some of his self-control back.\n\nHe reached up to grab Julianna's pendulous tits and was rewarded by getting sprayed. Deciding that wasn't the best option, he moved to her shoulders and with a supreme effort of will, managed to lift her up and turn her over so that they were now missionary.\n\n\"If I'm going to make a baby, I'm goddamned well going to do it right!\" he growled and got appreciative smiled and chuckles from the women. He wasn't paying attention to them, though. He was paying attention to giving Julianna the best fucking he knew how, a testament to his experiences with Marianne, Victoria, Margeaux and his abilities as a quick study.\n\n\"Oh, Goddess, fuck, yes!\" Julianna moaned from beneath him. \"You feel so fucking good, Stewart! Come on... fill me up... I want all your hot cum soaking my pussy!\" He did his best to comply.\n\nHe felt her build as he did, matching him all the way, until they reached their climax together and with a chorus of raw animal cries, mewls and moans, he emptied himself into her once more as she pulsed on him, sheathing him with her hot wet love. Together, they collapsed, still coupled, still in each other's arms, lying side-by-side, panting and unable to talk. Finally, though, Julianna found her voice.\n\n\"Perfect.\" She didn't need to say more. She just held the young man to her and reveled in the feelings.\n\n\"I'll second that,\" Marianne grinned, enjoying the feeling of complete satisfaction.\n\n\"Third,\" Victoria smiled, a rare flood of romance and affection rushing through her.\n\n\"Quatri\u00e8me,\" a brightly glowing Margeaux added. \"Pardonez... 'fourth' I mean.\"\n\n* * * * *\n\nIt took a good half hour before either Stewart or Julianna felt like moving, much less talking. But eventually they had to, so the five of them ended up sitting, or hovering, around the bed after Margeaux fetched drinks so they could rehydrate.\n\n\"So what happens now?\" Stewart asked, surveying the four awesome creatures before him. \"Did I pass?\"\n\n\"Oh, yeah, you passed!\" Julianna told him. \"Aced the course, my friend.\"\n\n\"Yes, Stewart Morgan Chamblee,\" Victoria added, \"you have proven most satisfactory.\"\n\n\"Hey, you got my vote!\" Marianne told him, licking her muzzle.\n\n\"Oui! Tu es tres magnifique!\" Margeaux beamed. Literally.\n\n\"Then what happens to me?\" He thought it was a reasonable question.\n\n\"Ladies?\" Julianna looked at the others.\n\n\"You pick up that portrait you wanted,\" Victoria told him. \"I touch you, and you wake up naked and alone, in the cemetery, clutching the painting. You will remember everything, you will know it has not been a dream, you will not be believed, and you will proceed with your plans to become a successful writer. On each full moon you will return here and enjoy a night of unbridled passion. More often, if you wish, but certainly every full moon.\"\n\n\"And, you'll get a hell of a lot to write about,\" Julianna added with a smile.\n\n\"And if you want, I'll go chase down those Dryads with you and impress upon them the inconsiderate wrongfulness of their ways,\" Marianne offered.\n\n\"This is absolutely amazing!\" Stewart gushed. He suddenly felt overwhelmed in their presence.\n\n\"We hope so,\" Victoria smiled. \"Now go nick your painting and I'll meet you in the parlor.\"\n\n\"Yes, ma'am!\" Stewart agreed, then caught himself. \"Um, I mean, yes, Vicky!\" After another pause and looking around, he added, \"um... how do I get out of here?\"\n\n* * * * *\n\nWaking up naked, cold and alone in the cemetery he expected.\n\nExplaining to the cop that he'd been mugged and didn't know his attackers... a bunch of guys in Halloween costumes... but that he'd saved the painting, was a bit more difficult.\n\nExplaining to his mother why he was walking in the door at 4am with a painting and no clothes was the hardest part.\n\nIt was worth it, he decided, lying in his own bed. It was definitely worth it. And I am definitely going back.\n\nEpilogue\n\nThat was nineteen years ago, on Wednesday October 31<sup>st</sup>, 2001. Since then, there have been thirty novels, uncounted short stories, four anthologies and eight best-sellers, all telling the truth of the worlds I see around me. As fiction. Tonight, I'm going back to the Braidwood House to see the gang. Victoria, Marianne, Margeaux, Julianna... and Lidia, our daughter. Julianna didn't get pregnant right away. It took a couple of tries. After all, it is October 31<sup>st</sup>, 2020, it is Lidia's 18<sup>th</sup> birthday... and it is a full moon.\n\nPerfect. "
    ],
    "authorname": "eidetic",
    "tags": [
        "vampire",
        "ghost",
        "werewolf",
        "young male",
        "humor",
        "nonhuman"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-braidwood-affair"
}