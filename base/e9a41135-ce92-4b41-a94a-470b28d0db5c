{
    "title": "Hard to Stop Myself",
    "pages": [
        "I think I know when it started. I had just gotten home, I got myself a glass of milk out of the fridge when I heard the noise.\n\nIt sounded like someone was hurt and crying, so I set the glass down and went down the hallway. The noise was coming from my sister Sandy's room, she was home from College for a week. Thinking something was wrong I pushed the door open and went in.\n\nShe was on her back, naked as a jaybird, both hands shoved in her pussy. Her face was all screwed up and she was groaning. \n\nDang! I had always wondered what her titties looked like and there they were, one flopped over each side of her chest. I had always seen them with her clothes on before and they were shoved up high on her chest that way. It took her a moment to realize I was standing there, then she came off the bed like a shot yelling at the top of her lungs. Her big titties were flopping, there was a few big rolls of fat at her waist. She reached for her blouse that was laying on the bed, then she came at me.\n\nSandy was 4 years older than me and she beat me up a lot of times so I ran for the door and then out of the house.\n\nSandy could beat me up but she sure as hell couldn't catch me if I got just a step or two head start.\n\nI was halfway down the block when I realized she wasn't chasing me. \n\nOf course not! I grinned to myself, she was stark naked. I hid behind the brick wall at the 7-11 on the corner and peeked out to be sure, though. Then I waited a solid two hours before I went back, I knew Mom and Dad would be home by then and Sandy couldn't go smacking me around or Dad would take his belt to her, 24 years old be damned. Mom and Dad were very strict with the two of us, so even with me being barely out of High School they still had all these rules and I had to follow them or else.\n\nI walked into the house and instantly got it from Mom for being late. Sandy was sitting on the couch and she had a look on her face I hadn't seen before, I realized she was terrified that I would tell.\n\nI really had no plans to tell on her but I also knew that now I had the upper hand for the first time I could ever remember. I was also thinking about her great big titties and what they looked like, that was the first ones I had ever seen in the flesh and it got me all excited, even if they were just Sandy's.\n\nI was thinking I wanted to see her snatch, too, but her hand had been in the way and even when she jumped up all I saw was hair. Besides, I was beating feet, like I said, Sandy liked to smack me around sometimes.\n\nI made some lame excuse about having gotten sidetracked playing catch and forgetting about the time, grinning at Sandy. She looked down and blushed.\n\nI had her cold and I knew it. She knew it too.\n\nThat night I was laying in my bed, I was rubbing my dick under the covers thinking about her big titties right out there in plain view when there was a knock at my door. It was a very quiet knock.\n\n\"What?\" I whispered, yanking the covers up higher. The door cracked open a tiny amount.\n\n\"Danny? Can I come in and talk?\"\n\n\"Yea, but you better not hit me.\" I said.\n\n\"I won't.\" She pushed the door open, looked in at me. It was pretty late and I knew Mom and Dad would be asleep. There was just enough light from outside that I could see that she was wearing that ugly fuzzy blue robe she usually wore around the house.\n\nShe carefully closed the door, then came over and sat on the edge of my bed, sinking the side down far enough that I had to scoot over away from her to keep from rolling right into her.\n\nSandy really was a bit of a chunk.\n\n\"I didn't mean for you to see that.\" She blurted right out.\n\n\"I just thought you were hurt, maybe had fallen down or something.\"\n\n\"It's just..I was..you know, taking care of things.\"\n\n\"I guess so.\" I answered. Now I was blushing.\n\n\"I know you do it too.\" She said.\n\n\"No I don't!\" I lied.\n\n\"Yes, you do. I saw you...in the bathroom.\"\n\n\"You spied on me?\" \n\n\"No it was an accident. It's OK, everybody does it.\"\n\nI didn't know that everybody did it, to be honest. Hell, if that was the case why did I have to go hide in the bathroom with the fan on?\n\nThere was a lot of things I didn't know, I guessed. I never would have dreamed that my sister would actually do....that? I giggled at the thought, Sandy glared at me for a second but then her face softened.\n\n\"So what did you think?\" She asked.\n\n\"About what?\"\n\n\"You saw me, my...boobs..and everything.\"\n\n\"Yea, so what? I have seen lots of girls.\" I lied.\n\n\"Maybe in pictures, don't lie. But what did you think?\" She asked again.\n\n\"Well, you have nice big ones.\" I was starting to feel confident now.\n\n\"Did you like them?\"\n\n\"Yea, I guess.\"\n\n\"Do you want to see them again?\" Her voice had changed to a purr.\n\n\"I guess so.\"\n\n\"OK. But don't tell Mom and Dad.\" She opened her robe and there they were. They really were big. My cock jumped instantly to erect.\n\n\"Go ahead and feel them if you want to.\"\n\nI reached out and felt first one, then the other. Then I rubbed her nipple on the one closest to me, it was hard and covered with tiny little bumps. She let out a little sigh.\n\n\"That feels good.\"\n\nI pulled my hand back.\n\n\"Don't stop. You can touch me here, too. If you want to.\" She scooted over a bit closer on the bed and brought one knee up. I knew what she meant, I reached out and touched her. She was soft and rubbery feeling, and all wet.\n\n\"Yuk! You are all wet, did you pee?\"\n\n\"No, that's just the way it works, it gets slippery.\"\n\n\"Oh.\" I was still rubbing her.\n\n\"Put your finger in.\" She was gasping now.\n\n\"I don't want to, I might catch something.\"\n\n\"Oh bullshit! I don't have anything, besides, Mom and Dad are full of shit.\"\n\n\"Oh. Ok.\"\n\nI pushed with my finger, it took several pokes but I found her opening and my finger slid inside a little ways. She moaned and I thought it hurt so I pulled my finger back out.\n\n\"Put it back in!\" She said.\n\n\"Shhhhh! You will wake Mom and Dad!\" I told her as I slid my finger back in there. I was getting my confidence back up now.\n\nShe stifled the moan this time, turned her body so that both legs were on the bed and one knee was laid over to the side. I had to brace myself to keep from slipping.\n\nSandy really is quite a chunk.\n\nThere was enough light from outside that I could see her hairy bush and some gobs of flesh sticking out, nothing at all like the bare little slits I saw in the magazines I had hidden where Mom couldn't find them. She had a lot of hair down there, too. Way more than me in fact. I felt around, there were ridges on the upper side of her pussy that felt rough, I rubbed those several times and her hips started to buck. That made the bedsprings squeak.\n\n\"Shhhhh!\" I said again.\n\n\"Let's get down on the floor, Danny.\" She whispered. She slid off the bed quietly and lay down on her back on the carpet.\n\n\"I can't, I don't have anything on.\" I told her.\n\n\"Neither do I, it's OK.\"\n\nI slid out from under the covers, still bashful about my boner sticking straight up and lay down beside her, reaching out to put my finger back inside.\n\nHer hand reached over and grabbed my cock, I jumped at that.\n\n\"It got bigger since the last time I saw it.\" She smiled. Then her head went back as I pushed my finger in and out, bumping up against her with my palm each time. I figured that if I liked it rubbed real fast she would too so I pressed my hand against the gob of flesh and rubbed her really fast. Her hand was wrapped around me, she just held it, then she squeezed down on me. My hips moved back and forth with a mind of their own, in seconds I let loose into her hand. She choked off a moan at the same time. We lay there like that for quite awhile.\n\n\"I better get back to my room now, you won't tell, will you?\"\n\n\"No.\"\n\n\"OK. Good.\" She kissed me on the forehead, then got up and quietly left. I lay there on the floor, then as I started to feel cold I got up and went to bed.\n\nThe next morning I woke up to the Sun shining in my window. I rolled out of bed and looked down, there was a wet looking spot on the carpet. Mom was going to kill me for that, so I went and got some water and paper towels and wiped it up. I used my hair brush to brush out the carpet, it didn't show very bad when I got done, but I threw a towel over top of it anyway.\n\nThen I got dressed and went down to breakfast. Sandy was sitting there, she gave me a sly look when I walked in. Mom and Dad didn't notice. Dad always had his face buried in a newspaper, and Mom was over by the sink cleaning stuff.\n\n\"Her Danny, would you like to come down to the park with me later?\" Sandy asked through a mouthful of pancakes.\n\n\"Sure, sounds like fun.\" I smiled at her. Mom looked at each of us strangely, normally we were griping at each other about something. Then she happily packed us a picnic basket. \n\n\"It sure is nice to see our kids getting along better.\" Mom said to Dad as we were going out the door. Dad mumbled something and shuffled his newspaper.\n\nOnce away from the house, Sandy started right in.\n\n\"We need to be sure and get off by ourselves before we do that again.\" She told me.\n\n\"Yea, probably.\"\n\n\"We can't actually...you know...do it, though, since you are my brother.\"\n\n\"Yea, I guess not.\"\n\n\"Besides, there are diseases and I could even get pregnant.\"\n\n\"I don't have any diseases.\"\n\n\"Neither do I, it's just that...you know.\"\n\n\"Hey, we could get some rubbers?\"\n\n\"Maybe.\" She grinned at me. \"We would need to be really careful. But we better not, besides, we can always....\" Her voice trailed off, a little catch in it.\n\nI just nodded, I had heard all about things like that from Mom and Dad both. So much in fact that I was actually a bit afraid of girls anyway and I knew that Sandy had also suffered the lectures. But the only reason I was afraid of Sandy was because up until now she was always shoving me around, since she outweighed me by 50 pounds.\n\nThings had sure changed all of a sudden.\n\nWe were getting close to the park and there were lots of other kids around now. We spent the day just sitting around, I got into a frisbee game with some guys I knew for awhile. I looked over at Sandy a couple of times, now there were two girls sitting there chatting with her. I knew the one girl, her name was Marilee Miller. She had been one of the hotties in high school, on the cheerleading squad, into everything. She ignored me of course. The other girl I didn't know, she was older. They kept looking at me and grinning for some reason, I noticed that enough that I wiped my nose and checked my fly.\n\nLater I went and sat down, grabbed a bottle of juice and a sandwich out of the basket. Marilee introduced the older girl as Kate. They both took turns grinning at me, Sandy too.\n\nIt actually made me a little nervous.\n\nI was just getting ready to go join the game again when Marilee asked me if I wanted to come with them and play some music. I decided why not, it might be cool to be with three girls.\n\nBesides, Marilee had mostly ignored me up until now. They were giggling as we got up, I didn't know why.\n\nWe all walked over there, it was just a few blocks. The older girl was named Kate, she put on some music and we sat around. Kate had a bottle of wine and she sipped it regularly, I took a taste but didn't like it. Then the three of them started passing it back and forth. They were yapping away about girl stuff and it didn't take long and I was ready to go someplace else. I got up to go use the bathroom and when I came out the three of them were huddled together giggling about something.\n\n\"Hey, Danny! Sandy says you know some things.\" Kate said, a trace of slur in her voice.\n\n\"Things? What things?\"\n\n\"About girls.\" She grinned at me.\n\n\"What did you tell them?\" I asked Sandy, blushing.\n\n\"It's OK. We tell each other everything. We just thought maybe you would like to...do some stuff?\"\n\n\"Yea, some stuff!\" Kate said, laughing loudly. She was getting pretty buzzed on the wine, I could tell.\n\nI looked back and forth at them, not completely sure.\n\n\"Let's pants him!\" Kate said, suddenly lunging at me.\n\nKate was tugging at my pants, I tried to reach down and stop her but Sandy grabbed my arm. I was pushing at Sandy trying to get her loose but then Marilee grabbed my free arm and I was down on my back. I felt my pants go down my legs, gave some kicks and tried to sit up but Sandy swung her leg over my chest and sat on me and that was it.\n\nMy pants were off, I felt Kate's hands tugging at my briefs and then they were gone too. I was stuck, pinned to the floor by my sister while Marilee held one arm. Kate reached out and grabbed me in the crotch.\n\nI quit struggling.\n\n\"You weren't kidding, he has a big one!\" She laughed. Then she started stroking me, in no time I got hard, no way could I stop that.\n\nThen she reached up to the tip and slowly rolled my foreskin back. Lord that felt good! At this point I no longer even wanted to struggle, then she pulled a little too hard and it hurt.\n\n\"OW!!\" I yelled.\n\n\"That doesn't hurt.\" She said, but she eased up a little, then began pumping me.\n\n\"Oh, look! It's getting even bigger!\" Marilee leaned out to take a look, her eyes huge. Sandy had her hands on my shoulders, sitting on my chest. There was nothing I could do.\n\nI felt Kate's hand working my length, then Sandy let go of my shoulders.\n\n\"I am going to get off now, OK?\"\n\nI nodded, just lay there. Sandy stood up off of me. I felt Marilee let go of my arm. I looked down at Kate who was still busy jerking on my cock. She was sitting crosslegged, her skirt above her knees. I could see her white panties, they were snugged up tight to her. I could see the bulge of her pubic hair and make out the crease where they pulled up slightly inside of her.\n\nMarilee had scooted down to my side, and Sandy was now sitting on the other side. Both of them were staring at Kate's hands.\n\n\"Don't make him blow too quick, Kate! We want him to do us too.\" Sandy said, giggling. I realized that she was buzzed now too. Then she stood up and slid her jeans down. There was nothing underneath, I got my first look at her in the full light. Her pussy lips hung down, swollen, sticking out of the mass of hair.\n\n\"God, Sandy!\" Marilee said with a giggle.\n\n\"Come on, let's have some fun.\" Sandy said, squatting down beside me. She reached out for my left hand and put it on her, my middle finger went right inside as she pushed down with a sigh. Kate stood up and pulled her top over her head, her bare breasts swung free. They were much smaller than Sandy's but they didn't sag at all. Then she reached under her skirt and her panties came down and off too. She sat back down with her legs spread again, reached for me. Her pussy was bare around the lips with a mass of hair above them. I stared at it, she just sat there wide open knowing I was looking, a silly grin on her face. She wrapped both hands around my erection, then began to slowly stroke it.\n\n\"Rub his nuts, Marilee!\" Kate said. I looked over at her, she was still fully dressed. She reached out and felt my balls, lifted them a couple of times and then let go. \n\n\"Come on Marilee, show him your stuff!\" Kate giggled. Just then Sandy pulled her top off too, reaching behind herself to trip the catch on her huge bra. Her big breasts swung down, they were the size of cantaloupe, her nipples were light colored and as big as a silver dollar.\n\nMarilee stood up, hesitated for a second, then slipped off her T-shirt. She had no bra on either, her breasts were about the same size as Kate's but her nipples were much smaller and darker. I looked at her as she smiled at me and slid her jeans down and off. She was totally hairless, her clit peeked out the top of her slit and there was a little outward fold halfway down. She squatted down beside me just like Sandy was, I reached out with my right hand and slipped my middle finger inside her, too. She had ridges inside, too, I remembered how Sandy had acted the night before so I began to reach way inside and draw my middle finger back across the ridges. Marilee let out a gasp and shoved her hips forward.\n\nThe whole thing turned into a mayhem orgy after that, I rubbed and poked and probed all of them. At one point I had several of my fingers inside Kate as her hips bucked up and down. They each took turns grabbing me, stroking me for awhile, then one of the others.\n\nI must have exploded at least three times. Finally were were all exhausted, laying there resting.\n\nThen the front door opened and an older woman stood there in shock, a grocery sack in each arm. The girls took off in all directions grabbing frantically at their clothing. I jumped up and wrapped both hands around my crotch, since that was what the woman was staring at.\n\n\"What in the hell is going on, Marilee?\" The woman demanded.\n\n\"It's not what it looks like.\" Kate whimpered, struggling with her shirt. Marilee didn't say anything as she was trying to pull on a pair of jeans, then she realized they were mine and she had to pull them back off and grab her own. Sandy managed to get dressed first, I got my jeans back from Marilee and pulled them up as the woman stood there and stared at us.\n\nWe all stood there shamefaced.\n\n\"You kids, good lord!\" The woman said finally, then she walked by us into the kitchen and set down the sacks she was carrying.\n\nThen she walked back into the room. She looked me up and down, smiled. \n\n\"I bet you had fun, huh?\" She asked me.\n\n\"Uhhh.....\" Was all I could manage. I was eyeing the doorway, but she was closer to it than I was.\n\n\"Girls, next time you want to do something crazy, find a place other than my living room?\" Then she smiled again and went back into the kitchen.\n\nI got the hell out of there.\n\nSandy went back to her school the next day, things returned to normal for awhile. I was sitting in the chair in our living room a week later watching a ball game on TV when the phone rang. Dad answered it.\n\n\"Just a minute.\" He handed the phone to me.\n\n\"Who is it?\" I asked.\n\n\"Mrs. Miller from down the street\" He looked at me and turned back to the game. I knew Mrs. Miller was Marilee's Mom.\n\nI froze for a second, then reluctantly took the phone.\n\n\"Hello?\"\n\n\"Hello, Danny. Can you come over?\"\n\n\"What's up?\"\n\n\"Oh, I just wanted to talk.\" She had a funny tone in her voice.\n\n\"OK. In a few minutes.\" I hung up. I was pretty sure she wanted to chew me out.\n\n\"What does she want?\" Dad asked.\n\n\"Something about me mowing her lawn.\" I said lamely.\n\n\"Be nice if you mowed ours once in awhile.\" Dad said.\n\n\"Maybe when I get back.\" I answered.\n\nI was humming to myself when I walked down the street. I should have been scared but she didn't sound mad at all. Besides, I knew there was no Mr. Miller and at the worst I could always run.\n\nI knocked on her door.\n\n\"Come on in.\"\n\nI opened the door, Mrs. Miller was sitting on her couch. All she had on was a T-shirt and it was very short. Her big breasts poked right out through the front of it. I stood there taking that in, a little bit surprised.\n\n\"Marilee and I talked about you, Danny.\"\n\n\"Oh. I'm sorry. Well, we were just...having fun. We didn't....\" I was still a little bit uncomfortable.\n\n\"You won't try to fuck me, will you? I just want you to..take care of me.\" She smiled and stretched, the T-shirt came up revealing the wisp of hair between her legs. Then she got up and stepped towards me.\n\nShe looked....hot?\n\nNow I was sure.\n\nI reached down and lifted the sides of the T-shirt, she lifted her arms to help me. Like I had thought, she was naked underneath. Her body was solid, mature, with freckles all over her breasts.  They sagged slightly, pulling her nipples into an oval shape. I reached down and lifted each one, one at a time, then rolled each nipple between my fingers, getting a sigh from her.\n\nI stood up, dropped my jeans. I hadn't bothered with briefs. She looked down as I sprang free, smiled.",
        "\"See, Mom! I told you so!\" Marilee's voice came from the doorway. She was standing there naked.\n\nI really liked looking at Marilee naked, she was a hottie in school and now here I was with her.\n\nI was feeling a bit proud of myself to be honest and her Mom looked pretty good, too. Just a bonus.\n\nWe ended up on the bed, I lay there with my fingers in each of them, making those gentle strokes women seemed to like so much. Then I started rubbing them really fast, it was a bit hard to do because I was lying naked on my stomach with one hand on each of them. Thankfully it didn't take too long, both of them orgasmed at about the same time, with lots of moans. Then I sat on the edge of the bed, with both of them curled up at my feet. They used their hands to tug and play until I had a powerful climax. Mrs. Miller even touched some of my cum to her lips, tasting it but Marilee didn't.\n\nMan. In the space of a week I had had my fingers in four different women and had my cock jacked off no less than half a dozen times.\n\nI was liking this.\n\n\"Will you come see us again...soon?\" Kate's Mom asked me as she gave me a kiss on the lips. She was still naked, it flashed in my mind that she had just had some of my stuff on her lips but I figured what the hell. Then she actually handed me a paper plate with chocolate chip cookies.\n\nNookies and cookies, I giggled at myself for that one.\n\n\"Glad to!\" I said, and headed home, munching on one of the cookies as I walked. I got home and set the cookies down on our end table, Dad reached out and grabbed some instantly.\n\n\"MMMM...good!\" He said, sniffing it before biting in.\n\nI realized too late that I hadn't washed my hands, he never even blinked or seemed to notice.\n\n\"Oh, by the way, a Mrs. Johnson called, she wants you to call her. Grass again, huh?\" Dad said, grabbing some more cookies and looking at me oddly. I knew Mrs. Johnson barely, I had actually cut her grass a couple of times the Summer before. I had little cards I made handed out all over, made a few dollars that way every summer.\n\n\"You sure are cutting a lot of grass lately.\" He reached for the TV remote.\n\nYep. I sure was.\n\nI grinned at him. Mrs. Johnson was about 50, she was a little on the heavy side but I didn't mind.\n\n\"What's so funny?\" He asked me.\n\n\"Nothing, I see you like the cookies.\"\n\n\"Yea, they are really good! You should cut her grass more often!\" He stuffed another one in his mouth.\n\nI wandered off to my room.\n\nI figured that Mrs. Miller had said something to old lady Johnson since they lived not too far apart, and I was thinking maybe she wanted to play, too? \n\nI went back out and picked up the phone and dialed.\n\n\"Hi, Dan, can you find time to mow for me?\" She asked.\n\n\"Sure.\" I knew what she wanted, I told her I would be over the next afternoon. I even took our mower along, just so Dad wouldn't get suspicious.\n\nI knocked on her door, Mrs. Johnson answered wearing a simple housedress. She asked me to be sure and mow in the back, too. I stood there mildly confused for a second, maybe she did just want her grass cut?\n\nI fired up the mower, it didn't take long. Actually, it did need mowed, too. I was finishing up in the back when Mrs. Johnson came out. She had changed to a pair of white shorts and a blouse that was tied in a knot at the front, her tummy bare. There was a hint of her breasts at the top. She was carrying a pitcher of iced tea and some glasses.\n\nI got the picture, grinned to myself.\n\n\"Here, Dan, sit down and have a drink, it's hot out.\" She bent over the tiny little outside table, her top fell open giving me a good look at an expanse of snow white breasts.\n\nThen she sat down, I sat in the chair right beside her. There was a little roll of flesh over the top of her shorts, but not bad. She looked pretty good for an older gal, and I had it figured out what she really wanted. I looked around, the bushes made the back yard nice and private.\n\nShe made some small talk, asked me if I planned to go on to college, things like that. I told her I was going to a community college locally for a couple of years, then I would figure out what was next.\n\nAs she leaned over to pick up the pitcher of iced tea, her blouse gapped open again. So I reached out and put my hand on the bare part of her breast.\n\nShe came to a stop and looked at me in surprise.\n\n\"What are you doing?\"\n\n\"I just want to take care of you.\" I answered with a smile.\n\n\"Stop that!\" She slapped my hand, surprising me. I jerked my hand back.\n\n\"I thought...Didn't Mrs. Miller tell you....?\"\n\n\"Who? Tell me what?\" She had a mad look on her face.\n\nOh shit.\n\nThen she got up, headed for the house. She opened the door and stopped, turned back to me.\n\n\"Dan, why would a nice looking young man like you be interested in an old woman like me?\", she asked.\n\n\"I'm sorry, I just...thought....you looked...so pretty.\" I didn't know what else to say, that sounded like maybe it was right. I barely managed to not just cut and run for it but sure as hell she would call my house and tell Dad.\n\nI wasn't in the mood for his damned belt again.\n\nShe blinked a couple of times, then smiled and went inside. I decided to get the hell out of there, I made it to the mower when she came back out.\n\n\"Come on in, Dan. I have your pay.\" She called from the doorway.\n\nI didn't care about the 5 bucks to be honest, I was still flushed from making a mistake. But I went inside, stood there. She reached into her purse, walked over and handed me the money. I realized she had unbuttoned her top more than before. Her fanny seemed to sway back and forth more, too.\n\n\"Do you really think I am attractive?\" She asked.\n\n\"Uhhh...yes. Hey I am sorry about doing that.\" I was flustered.\n\n\"It's all right. It's been a long time since anyone....\" Then she leaned forward and kissed me. Now I was surprised. I had my hands to my sides, she reached down and took ahold of my wrists and lifted them up, placed my hands on her breasts.\n\n\"Go ahead, I know you want to.\"\n\nI began to feel her, there was a bra under the blouse and it was soft. Then I slid my hands up her back, found the catch and tripped it. My hands came around and cradled her bare breasts under the bra and loose halter, she stood there and let me, amusement on her face.\n\n\"OK.\" Was all she said. Taking my hand, she led me into her bedroom. She shrugged the blouse and bra off her shoulders, her big heavy breasts hung way down.\n\n\"Well?\" She asked, reaching for the button on her shorts. I stripped off my shirt and slid my pants down, I was half erect and pointing straight out.\n\n\"Oh my God! You sure are not a little boy any more!\" She said, stepping out of her shorts and dropping to her knees. She had a huge mass of curly hair there too, just like Sandy did. Her mouth engulfed me, I felt my erection grow as she sucked firmly. No one had done that before, they had just stroked me and played with it.\n\nMy head began to swim, then she pulled me back onto the bed. I reached down and felt her, she was sloppy wet. I slid a finger inside, she felt softer and much hotter inside than the other women had. Her head was back and her mouth open, I slid my finger in and out, then put in two and did it some more. She pressed her legs against the bed to slide up a bit further, then opened her legs wide. Her hands came up and pulled on my shoulders, urgently.\n\nI knew what she wanted.\n\n\"I can't, I don't want you to get.....\"\n\n\"You can't get me pregnant.\" She answered. Then she pushed me back on the bed, slid one leg up and over me and sat down on me. I was inside her all the way in one smooth motion. My very first time, the sensation was incredible. Her big hips came up and back down as she pounded away at me, her arms holding her upper body off of me. Her huge breasts swayed back and forth wildly, I reached up and fondled them as she dripped sweat onto my chest.\n\nThen I felt her body begin to spasm, I let loose and flooded her at the same time.\n\n\"It's been so looooong!\" She cried out. She actually did look pretty right at that instant.\n\nThen she collapsed on top of me. After a few minutes she began to feel heavy, I rolled her over onto her side, feeling my now limp cock slip out in the process.\n\n\"I haven't had sex since my husband died 4 years ago.\" She told me, laying there stroking my side with her fingers.\n\n\"That was my first time.\" I blurted out.\n\nShe sat upright, looked at me in surprise.\n\n\"But you...you seemed to know exactly, you made a pass....?\" \n\n\"Well, I have done some things, but not...that.\"\n\n\"Like what?\"\n\nI told her about the situation with Kate and Marilee, and then Marilee's Mom. I left out the part about my sister Sandy.\n\n\"So you thought they were...spreading the word?\"\n\n\"Yea.\"\n\n\"Well, they didn't, I don't even know her. I stay close to the house now, I only have a few women in my sewing club that I really ever see. But I am glad you tried with me.\" She leaned down and licked me, I started to harden again. Then she sucked me into her mouth, I reached down and massaged her pussy as she did. It felt really wet now, she lifted one leg to make it easier for me. In just a few minutes I felt myself starting to blast off, so I warned her.\n\nShe just kept on, and even increased the pace. I let go and she swallowed it all. Another first.\n\nI headed home, Dad looked up as I walked in. All of the cookies were gone, I noticed.\n\n\"Well, did you get'er done?\" He laughed at his joke.\n\n\"Yea, it didn't take long. We talked quite a bit, she asked me about college.\"\n\nHe nodded, not looking up from the TV. I went to bed, sleeping the sleep of the dead. The Sun was shining in when I woke up. Mom knocked on my door, asking if I was all right.\n\n\"Time to get up honey, it's almost noon.\"\n\nI got up and dressed, then I went outside and mowed Dad's lawn. Anything to shut him up. I was just putting the mower away when Mom yelled out that there was a call for me. I went in and picked up, it was Mrs. Johnson again.\n\n\"Hi, Mrs. Johnson!\" I said.\n\n\"Call me Mildred, Dan. I was thinking, my sewing club meets this afternoon. Would you like to come over?\"\n\n\"Sewing club? I don't know anything about.....\"\n\n\"I doubt we will do much of that.\" She actually giggled.\n\n\"Oh. I don't know, what is it all about?\" I was thinking I knew.\n\n\"Just some ladies that will appreciate a nice big strong man. I told them about you, I hope you won't mind.\" \n\nI didn't have to think very long. \n\n\"OK, what time?\"\n\n\"Right now.\" She answered.\n\n\"OK, see you in a bit.\" I hung up.\n\n\"Who was that, honey?\" Mom asked.\n\n\"Oh, we are having a meeting...on options for college.\" I lied.\n\n\"OK. I have a meeting this afternoon, too. Try not to be too late, I put dinner in the fridge, I will be back about 6.\"\n\nThen Mom gave me a hug, kissed me on the cheek.\n\n\"It's so nice to see you getting your act together, Danny.\" She said with a big smile.\n\nYep, I sure was. I was humming to myself as I headed off down the street.\n\nI knocked on the door, Mildred opened it with a smile. She ushered me in, there was three other ladies sitting there. All of them looked to be about 50 or so. She introduced Janet, a slender lady with lots of blonde hair and makeup, Susan was a grey haired woman and on the heavy side. The other woman was Margeret, she was older than the rest and skinny with snow white hair.\n\nThey were all strangers to me. \n\n\"This is the young man I was telling you girls about!\" Mildred said. They all grinned at me.\n\n\"What would you like me to do?\" I asked, just a little bit nervous.\n\n\"We girls have talked about maybe having some entertainment.\" Mildred said.\n\n\"So we thought maybe you would...put on a little..show for us?\" She giggled at that.\n\n\"I never have done anything like that...\"\n\n\"Oh, it's easy, just....dance and maybe a little strip tease? You are so cute.\"\n\nI started to say no but then changed my mind. What the hell, I was over being bashful.\n\n\"OK, why not? It might be fun.\"\n\n\"Oh, good!\" Mildred went and turned on some music, I looked around at them. They all sat there expectantly. I didn't have a clue what to do really but I started to dance like I had done at school sometimes. \n\nHalfway through the first song Janet yelled out, \"Take it off!\" She was grinning ear to ear.\n\nI reached up and undid the buttons on my shirt, turned my back and wiggled my fanny at them. Margeret clapped her hands, Susan sat there with her hands in her lap but her eyes were big as silver dollars.\n\nI was getting confident now, I kicked off my shoes. Then another tune came on, I slowly began to undo the buttons on my pants. I took my time because I had nothing on underneath. I got a round of cheers when the top of my pubic hair appeared. That song ended and another much slower one came on. The blonde one had undone her blouse and had her tits out, she was rubbing them while staring at my crotch. Mildred was grinning ear to ear, the other three were all leaning forward in their seats. Even Margeret, the older one had one hand in her lap.  I noticed they all had wine glasses and were taking sips regularly.\n\nThis was a kick in the ass, I had four little old ladies all hot and bothered, and the truth was it was exciting me too, I was hard as a rock. I lay down on the floor, letting my jeans slip lower and lower until the head of my cock stuck out. Then I pulled them down and off my legs, taking my socks off in the process.\n\nNow I was completely and gloriously naked in front of four happy older ladies, this was fun! I went and stood right in front of each one in turn, swinging my hips, making my erection slap off first one thigh, then the other. They all were staring, I was getting them all fussed up. They took turns reaching out and touching me, I let them for a second or two and then pulled back to go stand in front of the next one. I got to Margeret and even bent way over, my cock and balls hanging down. I reached back and spread my buttcheeks, she clapped her hands in glee, grinning.\n\nI was getting really hot, what a bunch of nasty ladies! I knew that in short order I would probably be fucking them all. Even Susan, the heavy one had her top pulled up and was rolling one nipple with her fingers.\n\nI knew what they wanted to see so I reached down and began to slowly slide my foreskin back. My face was flushed, I was close to blasting off all over them. I saw Margeret reach down between her legs and grab herself, clamping her big legs together. Then I heard something, it sounded like a chime but in the heat of the moment I ignored it.\n\nMildred got up and went to the door, I had my hand on my cock, foreskin rolled back, squatted down in front of the couch with my knees spread out. Janet had just reached out to grab the end of my cock.\n\n\"Oh..my..God..!\" I heard.\n\nI looked over my shoulder.\n\n\"Mom?....\""
    ],
    "authorname": "magmaman",
    "tags": [
        "incest",
        "brother",
        "sister",
        "friends",
        "neighbor",
        "older women",
        "younger man"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/hard-to-stop-myself"
}