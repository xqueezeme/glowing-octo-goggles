{
    "title": "Boston to Birmingham Ch. 03",
    "pages": [
        "\"DADDY!?\"\n\nYes, there he stood, Greg Canaday, member of the Boston elite, bastion of conservatism, respected member of the bar. Staring at his, muddy, bedraggled daughter, clad only in an oversized tee shirt.\n\n\"What are you doing here?\"\n\n\"I was invited. Someone named Hildy called, told me how well you were doing, how proud I should be of you, how much you missed me. So. I thought I would come down, visit, maybe get my fill of Southern cooking and hospitality.\"\n\n\"Daddy, it's not what it looks like. I...\"\n\n\"How would you know what I think it looks like?\n\nIt looks like my daughter attacked one of my employees. A true cat fight, over a man.\"\n\n\"It really wasn't that bad. I just...\"\n\n\"Not that bad? You two were rolling around in the water and mud in front of at least a hundred people, without the benefit of many clothes. It looked like a Jerry Springer episode.\"\n\n\"Daddy, I'm so sorry.\"\n\n\"SORRY? Is that how..snort...a well brought up...snort...member of Boston society...snort...oh hell!\"\n\nHe burst out laughing, shaking his whole body in mirth, unable to contain it any longer. Hildy had reentered the room, smiling at first but soon laughing along with him.\n\n\"Damn child, I send you down here and[another fit of laughing]you go native on me. Your grandmother would be proud.\"\n\nShe was very, very confused.\n\n\"What would my grandmother have to do with it?\"\n\n\"Your esteemed grandmother is from here, Jefferson County . You're one fourth Alabamian. Virginia Howe of the Birmingham Howes, to be exact. Your grandfather did his required work in our office here and fell head over heels in love with her. Her parents were not amused. 'A Yankee! How dare her!'\"\n\n\"But they loved each other until the day he died, twenty seven years later. And she was never the same after he passed.\"\n\nThat's where your trust fund comes from, old steel money. She would have been proud of you today, no doubt.\"\n\n\"Why would she be proud? I made a spectacle of myself, drove Hardy even farther away. I've made a bad situation worse.\"\n\n\"Maybe not, girl\" interjected Hildy. \"Hardy just called to make sure you're all right. And to send word if any video shows up anywhere someone will pay, dearly. I would imagine there's a lot of cells being erased as we speak.\"\n\nGwens' hand flew to her mouth. Her shining moment, immortalized forever. It just couldn't get anymore complicated.\n\nWrong, wrong, wrong.\n\n.................................................\n\nHer dad spent four days with her, watching her in court, taking her to lunch and dinner. He spent a few hours with his old friend Paul, talking about things neither would discuss with anyone else.\n\nPrivately, he had to admit she had grown up some.\n\nIt was very gratifying. The only sore spot between them was Hardy. He couldn't understand why she wanted him back, in his eyes she had betrayed him twice, regardless of the circumstances.\n\n\"Look at it like this, baby. Have you ever heard the old African parable about the woman and the snake?\"\n\nShe shook her head no.\n\n\"In the parable, the woman finds a snake fallen from a wall. It's cold, and the snake can't survive, so he begs the woman to take him in.\n\nHe talks so eloquently, and is so beautiful she picks him up and takes him home. She puts him by the fire for warmth. She feeds him. She holds and pets him, telling him how beautiful he is.\"\n\n\"Finally, summer comes. The sun is shining, it's warm, and the snake no longer needs her. One day as she holds him he bites her neck. As she lies on the ground dying she looks at the snake, and says 'Why? I saved you. I kept you alive. Why would you bite me?'\"\n\n\"The snake just looks at her before he slithers off.\"\n\n\"Woman, you knew damn well I was a snake before you picked me up.\"\n\nHe paused.\n\n\"Do you understand? You knew Allan was a snake, but you still did coke with him in Paris. You still let him in your house, even as you tried to get Hardy back. What happened to you was wrong, but you knew how he was before you let him in. So please, bear a little responsibility.\"\n\n\"And, that's exactly how Hardy views it. You let a snake in your home, knowing what he was.\"\n\nShe sighed.\n\n\"Am I going to get him back?\"\n\nHe hated to tell her, but she needed the truth.\n\n\"I don't think so, baby. You hurt him in the worst way possible. True, you didn't know his background and how badly he would react, but you still cheated on him. And be honest, your treatment of him for the time before the 'incident' wasn't exactly that of a loving wife. Tell me, when did you stop respecting him?\"\n\n\"I never stopped respecting him!\" she flared out,\n\n\"but I did take him for granted. I guess I felt the love he had for me would see us through anything.\"\n\n\"Including cheating on him?\"\n\n\"NO! You know I didn't mean for that to happen. You know that. And, I was never going to let him find out.\"\n\n\"Regardless, it DID happen, and he did find out. Tell the truth, you had to think, somewhere in the back of your mind, that even if he found out you could convince him to forgive you.\"\n\nShe couldn't look him in the eye. That told him all he needed to know.\n\nHe sighed.\n\n\"There's more news. Hardy has finally had enough of dragging the divorce out. He made it clear to his attorney if things didn't start happening, he was fired. Ivan is doing all he can, but he can't delay much longer.\"\n\nShe felt like fainting. It was finally about to be over. She just hung her head and cried.\n\nGreg left the next day. He stopped by to see Hardy on the way out.\n\n\"How are you?\"\n\nHardy more or less grunted.\n\n\"As well as can be expected. Lots of cases to look over, lot of people needing help.\"\n\n\"That's not what I meant and you know it. Are you still going to divorce her?\"\n\n\"You know I am.\"\n\n\"Nothing anyone can do to change that? She's grown up a lot this last eight months. I really believe she loves you.\"\n\n\"I still love her, maybe I always will. But you know as well as I love is not enough sometimes. I have to be able to trust her, and that'll never happen again. And I'm not talking about just the cheating. I really feel she was lying from the day we wed. She never wanted what I wanted, even after we discussed it at length and she agreed.\"\n\n\"She never wanted to settle down, and I really feel now she never wanted children. No, the best thing I can do is move on. I still want a family, and time is wasting.\"\n\n\"I understand. But tell me, son, was all you really wanted a brood sow? In my opinion, you both started the marriage based on lies and half truths. You should have told her about you, your upbringing and history. She should have told you how she felt about a family and her history of drug use and infidelity. She did wrong, really wrong, but you need to shoulder some of the responsibility. If you had both been honest you most likely would never have married, and wouldn't be where you are now.\"\n\nHardy started to speak but he waved him off.\n\n\"Stop. I shouldn't have said what I did, but you're both family to me. You're the son I never had, and I regret losing you. But enough about that, I should never had brought it up. What I really wanted to talk to you about was the new case Gwen is on.\"\n\nHe described the Escobar case in detail, stressing the danger she may be in.\n\n\"Paul promised me protection, but you know as well as I how stretched law enforcement is these days. As a personal favor to me, will you keep an eye on her? I know now you have resources they can never equal. Gwen told me about your little discussion with your cousin Roy.\"\n\nHardy actually smiled, remembering.\n\n................................................\n\nHe did call the following week, and little June nearly talked his ear off. Her mother promised him an unending string of pies in gratitude for making Roy see the importance of a happy home life.\n\n\"I'm not an idiot, and I grew up on stories about you. All I have to say when he's getting a little neglectful is it's time to bake you a pie, and he perks right up. Thank you. Now, do you like peaches?\"\n\nCousin Ronnie was another matter. He had heard his brags, and caught him in one of those sawdust on the floor, no air conditioning, coolers run on ice instead of electricity type of juke joints you can still find scattered throughout the state.\n\nRonnie saw him and made a huge mistake. He started bragging about how hard he was going to kick his ass. Hardy responded by slapping him, hard. Then he turned his back on him and went outside, calling out behind him.\n\n\"Come on out you loudmouth cunt! I won't hit you, but I will slap you like the little bitch you are until you cry. I may just spank your ass like a young'un before I'm done. You might even piss your panties.\"\n\nRonnie had just enough beer in him to cloud his judgement. He rushed Hardy screaming at the top of his lungs.\n\n\"I'm gonna kill you, asshole!\"\n\nHardy actually looked bored as he stepped aside and slapped him on his way past, pushing him with his other hand. He went down face first in the gravel parking lot. He sprang up with a roar, angered beyond reason. Hardy didn't dodge, but stepped in and gave him a wicked 'Liverpool kiss', a head butt with all his momentum behind it. Ronnie's nose immediately flattened and blood flew. Stunned he stood with his arms hanging and Hardy took full advantage, raking slaps back and forth across his face. His body's natural reaction to the pain caused tears to fall.\n\n\"Lord almighty\" one onlooker yelled, \"he is crying like a bitch.\"\n\nThat only enraged Ronnie more. He was skilled, you didn't do what he did without them, but he just wasn't up to Hardys' level. He did manage to get a few good blows in. Hardy paid no more attention to them than he would a fly buzzing round him.\n\nInstead, he started raining blows just above the groin in front and the kidneys in back. No body could absorb that much pain, and his bladder released. He fell to the gravel, semiconscious.\n\nHardy pulled him up by his collar, making it look effortless, and pushed him against a truck.\n\n\"Well, you've cried and pissed yourself, do I have to spank you now, or do we have an understanding?\"\n\nRonnie shook his head yes in submission.\n\n\"Seems we're about done here. Before I go, remember what I promised you if you touched my woman?\"\n\nRonnie's eyes flew open and he attempted to speak through bruised lips.\n\nHardy cut him off.\n\n\"Shut up, you little bitch. Time to pay the piper.\"\n\nHis hand twitched and a three inch blade snicked open and locked into place. The tears were real now, not pain induced.\n\nHardy held the blade to a little finger and smiled. Ronnie heard a snap followed by terrible pain, but when he looked down his finger was still there, just hanging at an odd angle.\n\nHardy put the knife back in his pocket.\n\n\"If I hear you're even in the same room with her again, I'll come back, and it'll be ever finger on both hands. Understand?\"\n\nHe nodded. Hardy looked over the crowd.\n\n\"Anybody feel the need to say anything?\"\n\nSuddenly people were finding interesting things to look at in any direction except where he was standing. \n\n\"All right then. One of you could do me a kindness and take him to see Doc Thomas. He's used to this sort of thing and won't say a word. I'd appreciate it. Tell him to send me the bill.\n\nYa'll have a good evenin'.\"\n\nHe got into the big truck he had bought when he came back and slung gravel all over Ronnie as he pulled out.\n\nIt destroyed Ronnie. No one feared him anymore, his effectiveness as an enforcer gone forever. Roy replaced him with one of the younger cousins, freshly back from Iraq. Ronnie became a runner, doing odd jobs for the group.\n\nHe planned, he brooded, dedicating his life to looking for ways to hurt Hardy Wilkes.\n\nDoc Thomas turned out to be the grandfather of Karen Thomas, a.d.a. He told her in confidence that \"Hardass Wilkes\" was back and meaner than ever, which meant more business for him.\n\nShe asked Gwen later if she had ever met Ronnie Wilkes. Gwen made a face.\n\n\"Yes, he and another man named Roy came to visit me not long ago, wanting to make a family connection, I guess. Can't say I cared much for either of them. I don't think they'll visit again.\"\n\nKaren grinned.\n\n\"You probably won't see Ronnie again, ever. Someone that resembles your husband stomped a mud hole in his ass the other day. He's bruised, contused, and has a broken finger. They said the guy that beat him just slapped him until he cried, and then gave him a few groin shots, making him piss himself.\"\n\n\"Too bad he didn't kill him. That's a useless waste of humanity if there ever was one.\"\n\nGwen smiled when she said it, and the look in her eyes made Karen nervous.\n\n.................................................\n\nHardy assured Greg he would watch over her.\n\n\"I got a few cousins who are unemployed. They'll look after her.\"\n\nGreg offered to pay for the services of the cousins, but Hardy brushed it off.\n\n\"You can't charge family for something you would do for them anyway. It's just not done, not in my family anyway.\"\n\nGreg countered.\n\n\"Don't call it pay, say it's for expenses. I want their full attention on her, not wondering how their bills will get paid.\"\n\nHardy reluctantly agreed, saying he would take care of it.\n\nGreg brought another subject up.\n\n\"Since we're talking about money, I've got some papers for you to sign. The prenup you fought so hard against? It's in full force now, remember it's in effect even if you don't divorce. You have proof she cheated, she has admitted it. Thirty eight million, she was faithful for most of two years. Now before you start, it's legal, and the money is yours. If you don't want it give it away, you just can't give it back to Gwen.\"\n\nHardy ranted, but Greg just smiled.\n\n\"You don't have a choice. You're rich now, welcome to the club.\"\n\nThey had a quiet dinner, each lost in their own thoughts, and Hardy drove him to the airport.\n\n..................................................\n\nThe first meeting with Raul Escobar and his team of lawyers went as well as could be expected. They claimed everything from entrapment to improper police procedure to police brutality, insisting that all charges be dropped and their client be released forthwith. Raul sat with a smug smile on his face.\n\nShe just regarded them quietly while they laid out their demands, then actually laughed.\n\n\"He got caught, driving while impaired. It's all on tape, including his rant and threats to the arresting officer. It's his first U.S. offense, but it's a class A felony. He's going away for at least five to seven years, if he takes a deal. Fight it in court and I'll go for the max, twenty five to life. His choice. Let me know your decision. Soon.\"\n\nShe got up and left them with their mouths hanging open.\n\n'Don' Vincente was furious when he heard. Who did this gringa bitch think she was? He'd destroy her.\n\nCalling up his private jet, he flew into Birmingham.\n\nHe did nothing half way, doing research on anyone he considered an enemy or who could cost him time or money. Nothing he read pleased him. The puta was already rich, money wouldn't work as a persuasion. Neither would threats to her family. The mother was in France, married to a French judge, and the father was even richer than his daughter, well respected and even more well connected. The soon to be ex husband was a thug himself in earlier times, and was now a lawyer with dubious ties to his old crime partners, regarded by all as extremely dangerous in and out of court.\n\nHe asked for and received a meeting with the woman and her boss. At first he tried to reason with her.\n\n\"Please\" he said, turning on his considerable charm, \"he was just in the wrong place at the wrong time. He didn't even know the drugs were in the vehicle, which he borrowed from a friend. Release him into my custody and reduce the charges so he can get probation. I'll make sure he leads a life of righteousness and good works. I'll even send you monthly drug tests. You should be familiar with those.\"\n\nGwen went bright red. How did he know about the drug tests?\n\n\"First, he rented the car, he didn't borrow it. His name is on the rental agreement. His fingerprints are all over the bags, and his DNA, in the form of saliva, is even in one of them. He resisted arrest, then tried to bribe the arresting officers, then threatened them in your name.\"\n\n\"Even if we were inclined to let it drop, the arresting deputy is cross trained and certified by Homeland Security as a local liaison, and he has federal powers. If we were to let it drop, the feds would snatch him up faster than lightning. Cut your losses, Mr. Escobar. All the lawyers in the universe can't help him. Let him plead out.\"\n\nVincente Escobar was used to almost god like power. Everyone south of the border walked in fear of his wrath. Even the other cartels left him alone. And now this woman, barely more than a child, was telling him he was powerless to help his nephew, his blood. She needed an education, and he had just the teachers.\n\n..................................................\n\nPaul was beside himself after the meeting.\n\n\"That arrogant bastard. How dare he dictate to us, or make hints about consequences? He needs a reality check.\"\n\nGwen was calm.\n\n\"Relax, Paul. I've seen his type many times in contract negotiations. Totally convinced that whatever he wants is the best course for all concerned. He'll soon realize this won't be like below the border.\"\n\n\"However, none of the people I went up against in contract law had a history of killing those who opposed them, so we all need to be careful.\"\n\nThings were quite somber around the office for a few days. Raul had appeared before a judge, been denied bail once again, and was bound over for trial in three months.\n\n.................................................\n\nGwen went back to her regular routine. Drug dealers, thieves, prostitutes, killers all needed her attention. She plead out where she could, set trial appearances where she couldn't. Paul had started letting her handle the simpler ones for the experience. She lost one early on because of a procedural error, and it embarrassed her so badly she became fanatical in research. If an arresting officer was the least bit sloppy she ate him up. Her reputation for being a frosty Yankee bitch grew exponentially, but no one argued about her results.\n\nOne of her lighter moments came when she had to interview a pimp who had beat up one of his girls.\n\nHomer 'Big Daddy' Johnson was arrogant, fat, and dirty. Easily weighing four hundred pounds, his casual approach to personal hygiene was legendary.\n\nShe almost gagged when she went into the interview room.\n\nHe was too cheap to hire a lawyer, so the least junior public defender was assigned to him. She looked positively green when Gwen entered.\n\nHe grinned at her, showing off his three gold teeth no doubt.\n\nNot wanting to stay in the room a second longer than necessary, she cut right to the chase.\n\n\"We have three witnesses, all willing to testify. The woman involved has signed the complaint. You've got priors, Mr Johnson, all for assault on females. Take a deal, serve six months, and go back to your glamorous life. Give me the least amount of shit, and you're looking at eighteen months to three years. And I would hazard a guess, Mr. Johnson, that prison cuisine wouldn't meet your approval, much less the stringent sanitary practices they adhere too.\"\n\nThe public defender actually laughed, pissing 'Big Daddy' off greatly. He glared at her.\n\n\"Bitch, you supposed to be on my side. Get me out of this shit.\"\n\nThe young woman recoiled violently. He turned to Gwen.\n\n\"And you, I know who you are. Me and your old man bumped heads back in the day, he cost me a couple of good girls, real moneymakers. I always said I'd pay him back.\"\n\nHe leered at her, his foul breath almost making her gag.",
        "\"Maybe I'll turn you out. Good looking bitch like you would probably last three or four years before you got used up. I could make some real money before you were done. How would hubby like that?\"\n\nHe leaned back, quite pleased with himself.\n\nGwen's sweet smile almost scared him.\n\n\"If you bumped heads with my husband, he probably kicked your ass and made you like it. I'm betting you haven't seen him lately. He's a lot bigger than he was, according to people who knew him then, and it's not fat. And thanks to me, he's not as friendly as he used to be. Maybe I'll tell him what you said.\"\n\n\"Or maybe, I'll just say fuck the deal, handle you myself, and put you away for a few years. You probably can't even find your fat ass with both hands, but they'll be guys there who'll be glad to find it for you. Who knows, when you get out you could maybe give your girls pointers on how to give a really good blow job or the proper way to take it up the ass. Good day, Mr. Johnson. Hope you learn to enjoy your new life.\"\n\nThe public defender scurried after her.\n\n\"He wants the deal, and said to tell you he was just kidding about all he said.\"\n\n\"Tell him it's a year now, take it or leave it.\"\n\nShe hadn't stopped walking.\n\n\"He'll take it.\"\n\nShe pulled Gwen into a hug, surprising her.\n\n\"Thanks, Aunt Gwen. I learned a lot back there.\"\n\nGwen was shocked.\n\n\"You're name is Chapman, right?\"\n\n\"Yes Ma'am. Grandpa Hardy was my great aunts' brother in law. And my grandmother on my father's side is a Howe. You're related to most Chapmans, Grants, and Wilsons around here in one way or another. It's not all Wilkes, you know.\"\n\n\"Shit\" Gwen thought as she walked back to her office, \"I'm probably related to everybody in the state, one way or another.\"\n\nPaul caught up with her as she walked.\n\n\"Got a minute?\"\n\nShe grinned. \n\n\"You're my boss, think I'm gonna tell you to fuck off?\"\n\nHe didn't know whether to laugh or not, but followed her into her office.\n\n\"Gwen, we got another case we need you to handle while we wait for the Escobar trial. This one gets a little tricky. Karen and I both are on murder trials, so you get this one.\"\n\n\"Come on, you're not telling me something. What's so special about this one?\"\n\nShe didn't like the way he was skirting the subject.\n\n\"It involves the three strike law. And the accused is Sam Wilkes.\"\n\n\"Surely you know I'll do my best even if I'm sure somehow he's related to my husband, right?\"\n\nPaul hastened to assure her.\n\n\"We know. The thing is, his defense attorney is going to push this as a referendum on the three strike law. He kinds of specializing in hopeless cases like this, often with surprising results.\"\n\n\"I don't care, it'll make it more interesting. What's his name? Maybe I heard of him.\"\n\n\"Oh, you have, child, you have. His name is Hardy Wilkes.\"\n\nThe color drained from her face. Hardy. Her. Different sides in the same case. Could she handle her emotions? Could she sit at the table beside his for days without breaking down?\n\nCould she do her job effectively for the state?\n\nA calm settled over her.\n\n\"Can you handle this? Sarah has five more weeks of maternity leave, and Jimmy is still in traction from the softball accident. I just don't have anyone else.\"\n\n\"Don't worry Paul. I'm on it. One way or another, now he has to talk to me.\"\n\nHe was relieved.\n\n\"Good, here's the file. The kid doesn't deserve it, but the law is clear. Good luck.\"\n\n................................................. \n\nThe file read like a Greek tragedy.\n\nSam Wilkes, twenty three years old. First felony at eighteen, caught joyriding with his cousins.\n\nHe wasn't driving, he wasn't in the car when they took it, all the others agreed, but he was still in the car when they pulled them over. Class D felony, probation.\n\nSecond felony at twenty, again because of his cousins. Caught in the middle of a bar fight. He hit a guy with a beer bottle, giving him a concussion and a fractured skull. Assault with a deadly weapon resulting in serious bodily injury. She read the transcripts.\n\n\"I didn't know a beer bottle was that strong, I see guys get hit in the head all the time in the movies, it breaks and they don't even slow down. I was just trying to get him off my cousin, I didn't mean to hurt him, really. I'm truly sorry.\"\n\nThe jury felt pity, but he still did six months.\n\nClass B felony.\n\nTwo months ago he got popped for grand theft auto. He boosted a car from his employer, a vintage gull wing Mercedes. Got caught the next day, said he was bringing it back. The value on the car was over a hundred grand, Class A felony.\n\nThree strikes. Life in prison, no negotiation. The thought made her physically ill. But the law was the law, and she was sworn to uphold it.\n\nHe was out on bond, since it was a nonviolent crime, bailed out by and currently living with Hardy.\n\n.................................................\n\nHardy sat in deep thought. He didn't see much of a way out for Sammy. The three strike law was the result of a backlash against a wave of lawlessness by a previous administration. Wildly popular for awhile, lately support had been eroding. The cost of decades of imprisonment, the spike of inmate on inmate violence, and examples of cases like Sammy's had left the legal system frustrated. There was talk of a partial repeal, exempting nonviolent offenders, but nothing had actually been done.\n\nA lot depended on jury selection. He knew if he could get enough working class people, people who distrusted the system, he may have a chance. There was an outside chance he could get him out from under life. \n\nHe hoped the a.d.a., Jimmy Richards, would be cooperative. A long trial would benefit no one.\n\nThat may or may not play into his favor.\n\nMonday morning was ugly. The weather was giving way to the cold, rainy days of winter in central Alabama. A perfect day to fight for a life, Hardy thought as he, Sammy, Crystal Anne, and an assistant hired specifically to do juror analysis entered the court house. Entering the courtroom, they proceeded to their table and set up their equipment.\n\nOddly, the a.d.a. hadn't appeared yet. Generally the opposing attorneys chatted for a few moments before the judge entered, but today there would be no chance.\n\nJudge Harlin was a surprise. Seventy four, he had been retired for a few years, filling in once in a while for a day or so on minor trials for a sick or vacationing judge. He enjoyed it, said it kept him from getting senile while making him appreciate retirement. He had been pressed into service rather suddenly when the judge originally slated to hear the case got caught in chambers with a defendant, working out a plea deal that included oral sex. Unfortunately, he was performing it on a young man who wasn't happy.\n\nThe judge was allowed to quietly retire, pleading guilty to coercion and crimes against nature. A plea bargain that kept him out of jail, but unfortunately not civil court. He would soon be divorced, broke, and shunned.\n\nHe strode in quickly, catching everyone by surprise. The bailiff hastily called the court to session.\n\n\"Don't bother rising, I'm a little early. Let's get down to business shall we? Please call the first case, bailiff.\"\n\n\"In the matter of the state versus Samuel Jerome Wilkes, grand theft auto. Is the defendant and counsel present?\"\n\nHardy stood.\n\n\"We are, Wilkes for the defense. Good morning, your Honor.\"\n\nThere was a twinkle in the judges' eye. He and Hardy went back a long way. He was the judge that offered Hardy a chance to go into the military and avoid a criminal record all those years ago.\n\n\"I'm fine. It's good to see you again, Mr. Wilkes. I'm glad to see you gainfully employed, even if it is as a defense lawyer.\"\n\nThe judge was widely known for his intolerance of defense lawyer antics, and general low opinion of the profession.\n\nThe judge frowned, noting the empty table normally used by the prosecution.\n\n\"Is the prosecution present?\"\n\n\"No your honor.\" The bailiff looked over his paperwork.\n\n\"It's supposed to be Jimmy Richards, but he recently was involved in an accident. Representing the state will be....\"\n\nHe paused, about to say the name, when a voice spoke up from the back of the courtroom.\n\n\"Gwen Canaday for the state your honor. I apologize for being late, but in my defense you seemed to have started a little early.\"\n\nTime seemed to stand still for Hardy. There she stood, crisp, professional, and just as beautiful as he remembered. He had only seen her once after the picnic, from a distance. He was still surprised how much it hurt.\n\nHe moved quickly.\n\n\"In light of this substitution your honor, may I approach the bench?\"\n\nThe judge was a shrewd old man and had noticed Hardys' face when the prosecutor entered. He motioned them both to the bench.\n\nIt almost took his breath away to stand so near her, the familiar smell of her perfume in his nostrils.\n\nHe didn't know where to start. The judge grew impatient.\n\n\"You asked for this boy, spit it out. What am I missing here?\"\n\n\"Judge, I would like to ask for another prosecutor assigned to this case. It may be a little awkward.\"\n\n\"Why would it be awkward? Somebody better start makin' sense in a hurry.\"\n\nGwen actually smirked.\n\n\"What Mr. Wilkes isn't telling you, sir, is that we are man and wife. Estranged, but still legally married. Please tell Mr. Wilkes that I will do my best to be professional and adhere to the guidelines of these proceedings. If he's afraid of me, he is encouraged to withdraw so his client can be adequately served.\"\n\nThe judge spoke.\n\n\"Mr. Wilkes, the words out of your mouth next better be respectful and calm. You're swelled up like a bullfrog choking on a horsefly. I'm probably the only one here who remembers your inability to control your temper. This is my court, by God, and you two will behave or I'll throw you into the same cell. Do we understand each other? Mr Wilkes?\"\n\n\"Yes, sir.\" He managed to grate out.\n\nMs 'Canaday' is it, do you understand?\"\n\nShe smiled sweetly.\n\n\"Yes sir. And, you're wrong. I'm quite familiar with his temper, intimately, in fact.\"\n\n\"Hot Damn!\" the judge thought, \"we haven't started yet and it's already getting hot. This might just be a lot of fun.\"\n\nMaking a little note to himself to research the couple in front of him, he banged his gavel and jury selection began.\n\n................................................\n\nGwen caught on pretty quick when it came to his juror selection. She fought, got a couple law and order types past him, and he ran a few unrepentant liberals in, but the bulk were just average folks, which may help Hardy. A hung jury can often be as good as an acquittal.\n\nThe first day of the actual trial set the tone. There was a lot of attention being given by the media and legal watch groups on both sides of the spectrum. When word got out it was wife versus husband, it added another dimension.\n\nIt started when the Plea was entered.\n\n\"Not guilty\" resonated through the room. No surprise there. It was a bit surprising when he pushed to have the charges dismissed, saying the defendant had permission to drive the vehicle, so it couldn't possibly be stolen.\n\nSam won the hearts of the spectators, if not the jurors.\n\nBumbling, shy, almost in tears a lot, he was a difficult witness for both sides.\n\n\"Yes, ma'am\" he answered when she asked if he took the car.\n\n\"Did the owner of the car know you had it?\"\n\n\"No ma'am.\"\n\n\"So if he didn't know you took it, it means you stole it, right?\"\n\nHardy was on his feet instantly.\n\n\"Objection! Leading in the worst way, your honor.\"\n\n\"Sustained. Careful Mrs. Wil... I mean Ms. Canaday.\"\n\n\"Noted, your honor.\"\n\nShe turned to the jurors.\n\n\"He admitted he took the car. He admitted that the owner didn't know he had the car. Think about it.\"\n\nTurning to the judge, she said she had no more questions at the time.\n\nShe looked over at Hardy.\n\n\"You're witness hon...Mr. Wilkes.\"\n\nGlowing, Hardy rose.\n\n\"Thank you MISS Canaday.\"\n\nHe looked at Sammy. He hung his head in fear and shame.\n\n\"Sammy, look at me son.\"\n\nHe raised his head.\n\n\"Sammy, did you take the car?\"\n\n\"Yes sir, I did.\"\n\n\"Why?\"\n\n\"Because it was dirty! It was filthy. A beautiful car, a classic. It should have been pampered, stored carefully and cleaned with a loving touch.\"\n\n\"What did you do when you took it besides spending most of the night cleaning it? Did you joyride, strip the gears, blow the engine? Where were you going when they caught you?\"\n\nJimmy looked horrified.\n\n\"I never even hit the speed limit. They knew I had it. I called and told Will, the owners son, that I had detailed it and was bringing it back. He chewed me out, told me they didn't know who had it and his dad had called the cops. He promised he was going to call them back and tell them it wasn't stolen.\"\n\nHe looked over at the judge. \n\n\"I'd like to enter the following phone call as evidence.\"\n\nHe looked at Gwen and she nodded, she had already heard it.\n\n\"Hello, Jefferson County Sheriff Department.\"\n\n\"Hey, this is Will Landis. My father reported his Mercedes stolen yesterday. I just found out it wasn't stolen, Jimmy, the guy who does odd jobs on our farm took it home and detailed it. He kept after me to let him clean it, and I joked and told him when he thought it was dirty enough he could do it. I didn't know he meant to take it away to do it. Anyway, he's on his way back to our house with it now.\"\n\n\"Sir, are you withdrawing the stolen car complaint?\"\n\n\"Yeah, I guess I am. Sammy wouldn't steal a dime, he just ain't real smart sometimes.\"\n\n\"all right sir, I'll withdraw the compliant. Have a nice day.\"\n\n\"Thanks, bye.\"\n\nHe let the silence hang for awhile before he turned back to Sammy.\n\n\"Tell me, how did you get charged if they knew you were bringing it back?\"\n\n\"I got pulled over right after I talked to Will. Nobody knew it wasn't stole, and they locked me up. I tried again and again to explain but they wouldn't listen. Finally they told me to hush and call my lawyer. So as soon as I got to jail I called you.\"\n\n\"Why did you call me?\"\n\nHe seemed surprised by the question.\n\n\"Cause you're my cousin and I trust you. And, you're the only lawyer I know.\"\n\nThis brought a few smiles and snickers from the crowd.\n\n\"No more questions, your honor.\"\n\nThe judge looked at his watch.\n\n\"It's three thirty. Want to adjourn early and prepare closing arguments?\"\n\nGwen asked that she present closing arguments before they adjourn.\n\n\"I promise it'll be short. We might even get in both sides before five. May I proceed?\"\n\nThe judge gave his assent. She rose and paced in front of the jurors.\n\n\"Ladies and gentlemen, Sammy seems like a nice, gentle person. I'm sure he wouldn't harm a soul intentionally. No offense to the defendant, but he isn't the brightest individual. I'm sure he meant well. I'm sure he never meant to keep the car. If he had been a little smarter I'm sure he would have realized his friend Will was joking when he said he could clean the car when it got really dirty.\"\n\nShe paused, the jurors could see the sadness in her face.\n\n\"But the fact is he did take it. Will is only sixteen, he had no legal right to make decisions about the vehicle. It belonged to his father, an adult, and he insisted we prosecute. So we did.\"\n\n\"Sammy has without a doubt lived a hard life. No guidance, bad personal decisions, bad company, and circumstances beyond his control in some cases has resulted in him being before us today.\"\n\n\"All that being said, his mistakes, intentional or otherwise, brought him here. He does have felony convictions, this is his third if convicted, and the law says three strikes and you're out, or rather in this case in, for life.\"\n\n\"The law was made before I came to live in this great state, but ladies and gentlemen, IT IS the law, and as an officer of the court I am honor bound to see it enforced.\"\n\n\"If you can, be merciful. I have a lot of sympathy for him. You see, I myself have a life sentence hanging over me.\"\n\nShe paused and the judge frowned. Both he and Hardy weren't following her line of thought.\n\n\"Most of you know by now counsel for the defense is my husband. We're estranged, but still married. I committed a crime against him, a mortal one, one that has no forgiveness. I cheated on him, disrespecting everything he holds dear. It's been almost a year, and he refuses to speak to me.\n\n\"I've tried every legal way I can to let me talk to him, beg him for another chance. I've almost given up hope. So by my own actions I've condemned myself to a life without hope or happiness. Though it's not the same, I have a lot of empathy for this young man.\"\n\n\"I've done my job. I've presented the facts as they are. I've told the general outlines of the punishment, the judge will address the details in his instructions to you. All I can ask is you find some way to have a little mercy on a young man who doesn't deserve to die in prison.\"\n\nThank you for your service, and may God be with you in your decisions.\"\n\nShe looked at the judge as tears flowed down her cheeks.\n\n\"Thank you, your honor. Prosecution rests.\"\n\nThere was an uncomfortable silence before the judge crashed his gavel down.\n\n\"Ms. Canaday, I don't know whether to praise you or censure you. Don't think I'm ignoring your cute little trick at the end. That was your one chance. Try something like that in front of me again and I'll fry your little Yankee butt, do you understand?\"\n\n\"Yes your honor, my apologies.\"\n\n\"All right then.\" He looked at his watch. \"Court is hereby adjourned until nine tomorrow morning.\"\n\nGwen left, not daring to look at Hardy. If she had, she would have seen him sitting with his head in his hands, trying to hold back tears.\n\n................................................\n\n\"Good morning, your honor, counselor, members of the jury.\"\n\n\"Yesterday you heard my opposition wax elegantly in her closing argument, citing facts and pulling heart strings.\"\n\n\"I agree with her on a lot of the key issues. The three strike law isn't justice, it fits the very description of cruel and unusual punishment. I can see it being applied to a small element of very dangerous offenders, but to send a twenty three year old away for life for cleaning a car is just wrong.\"\n\n\"Look at him, ladies and gentlemen, he's scared to death. Twelve people he's never even seen before this began literally have the power of life or death over him.\"\n\n\"If he goes to prison, he'll expect and pray for miracles the first two or three years. By the fifth year the light will start to go out of his eyes, and by the tenth he'll be a soulless lump that wouldn't even know how to survive in the real world. By then he would be thirty three, with at least forty more years to go.\"\n\n\"Yes he took the car, but he thought he had permission. The teenage son was willing to testify he led him to believe that he could clean the car. He was almost back with it when he got pulled over. If the dad hadn't been so angry at someone driving his pride and joy, charges would have been dropped.\"\n\nHe's a good kid, not emotionally ready to be a man. He took the car, he admitted it willingly, this is just a simple incident blown way out of hand. Find him guilty of something, but don't destroy a person who is innately good.\"\n\n\"Think about in economic terms. It costs a nationwide average of $30,000 per year to house, feed, and provide health care to a prisoner. The health care costs go up as the prisoner gets older. Sammy will probably live at least fifty more years, it will cost this state between 1.2 to 1.6 million to punish him for cleaning a car without permission. Think of the good you could do with that money, the road improvements, the new schools, the rehab and prevention programs that could be funded. Does this law make sense to you now?\"",
        "He started back to his table, when he turned and addressed the judge and jury one more time.\n\n\"With your indulgence, your honor, My learned opponent made some valid points. She may feel she's serving a life sentence, but she's a young vibrant woman, beautiful, rich beyond the wildest dreams of most of us in this room. She could fly in her fathers' jet to Paris for lunch, and be home in time for dinner. The cost would be about the same to her as it would be for one of us to walk down to The Hash House for their daily specials.\"\n\n\"Sammy won't have that luxury, when those bars slam shut he's done forever. While she worries about which designer should make a new creation for her, he'll be worrying about getting gang raped in the shower. Quite a difference, wouldn't you say?\" \n\n\"And if by chance Sammy doesn't go to prison for life, he'll be a lot like me. He and I are serving life sentences of our own. In his case it was a car, in mine a woman. We knew they were far above anything we could hope to possess, but we had to keep them for a little while, even if they destroyed us.\"\n\n\"That's our life sentence, remembering for a brief, fleeting second how good it felt to touch them, knowing in your heart they would never be yours. \"\n\n\"Thank you, jury, for your time and service. I don't envy you your task.\"\n\n\"Defense rests, your honor.\"\n\n\"Damn you, Hardy Wilkes,\" she thought, \"if I had a dollar for every tear I shed for you I'd have another fortune to my name.\"\n\nNo one mentioned her tears as the jury listened to their instructions and filed out.\n\nFive hours later the verdict was in. Sammy was convicted of unlawful use of a vehicle, a misdemeanor. He was sentenced to six months in a minimum security prison, one that maintained and cleaned state vehicles. The judge thought it fitting.\n\nHardy had Sammy shake everyone's hand and thank them. The jurors, the judge, even Gwen, who surprised everyone by hugging him.\n\nThe whole courtroom watched silently as she approached Hardy with her hand out. He took it without hesitation.\n\n\"Good job, counselor, justice was served here today. And just so you know, I've decided to stop fighting the divorce. Take your freedom, I won't hold you back. Just know, if I could see any hope of us being together again, I'd beg you on my knees on the courthouse steps to just talk to me. Goodbye, Hardy. I love you.\"\n\nThe judge watched and listened. This was just wrong. Everybody but the stubborn jerk Hardy could see it. He had a little research to do on these two, didn't need to put it off any longer.\n\n...............................................\n\nGreg wondered what the judge from Alabama wanted. He had left a message that a return phone call was urgently needed. He knew it was about Hardy or Gwen. He wasn't worried much about Hardy, but had real concerns about Gwen.\n\nShe had called him, told him to tell Ivan to just let it go, it was finally over. He could hear the despair in her voice, and the resignation.\n\n\"Are you sure, honey? I know he still loves you, but he won't admit to it.\"\n\n\"It doesn't matter if he loves me anymore, daddy. He'll never forgive me, every time he looks at me I know he sees Allan and I together. He can't forgive me, and I can't live a half life anymore.\"\n\nHe felt a profound sadness for Hardy, Gwen, even for himself. He had really hoped they would get back together.\n\nHe dialed the number, and the voice of an old man answered.\n\n\"Good evening, this is Greg Canaday, returning a phone ca......\"\n\n\"Damn boy, I was about to give up on you.\"\n\nThe judge sounded impatient.\n\n\"You don't know me, but I know your daughter, and I know your soon to be ex son in law quite well.\n\nI presided over her last case, I was glad to see she was actually happy she lost. Did you follow it?\"\n\nGreg had, there were already articles calling for the modification of the three strike law appearing in newspapers throughout Alabama. Even the most conservative ones were grudgingly admitting modification had some merit. There were several photos of Hardy and Gwen in the hometown papers.\n\n\"Yes I did. I was proud of them both.\"\n\n\"Good. Listen son, I'm seventy four, I ain't gonna walk this earth much longer. Before I go I want one last chance to do something good. Those kids need to stay together, I don't give a damn how much they fight it. I got an idea. You willing to help me?\"\n\nGreg considered the idea. Did they really need to stay together? Did he really have any right to meddle anymore than he already had in their lives?\n\nYes. And no. But it wasn't going to stop him.\n\n\"I'm in, judge. What do you have in mind?\"\n\nHe listened and his smile grew wider. He couldn't wait to meet the judge in person. his plan may not work, but it would sure be fun to watch.\n\nHe flew down Friday, and spent the weekend with the judge. After discussion, Hildy and Joshua were brought in. Scenarios were proposed, discussed, abandoned, or modified until the finally had a plan they could live with.\n\nHildy summed it up best.\n\n\"Well, I expect things will be apoppin' come next week.\"\n\nGreg stopped by to see Gwen, surprising her by taking her to the best restaurant in Birmingham.\n\n\"Honey, I can't begin to tell you how proud I am of you. I had serious doubts when I sent you down here, but you have proven me wrong on many different levels. You're not a spoiled little rich girl anymore, you're a mature woman and an excellent attorney.\"\n\nHe had no idea what his praise meant to her. It was a validation of her efforts, her determination to be a better person.\n\n\"Thank you, daddy. It means the world to me to hear you say that.\"\n\nHe looked uncomfortable, surprised his approval meant that much to her.\n\n\"That being said, Gwen, I'm releasing you from your promise. Come back to Boston any time you're ready, the partners and I agree you'll be even more of an asset than you were before you left. And I've freed up your trust fund, you can draw on it whenever you like.\"\n\nShe sat there, tears flowing and conflicting emotions raging across her face. With determination, she gave him a reply that swelled his heart with pride.\n\n\"Thanks, dad, but I owe Paul another ten weeks, and truth be told I kind of like it here. Release the trust fund when I get back, I don't need the money right now. Can I give you a decision after the Escobar trial?\"\n\n\"Gwen, you're an adult now, do what you want. If you decide to stay here for the rest of your life, I would be sad but support you. I love you, baby.\"\n\nShe started sniffling again.\n\n\"Damn it! I've cried so much the last year everyone down here thinks I'm related to Tammy Faye Baker.\"\n\nHe gave her time to recover.\n\n\"Gwen, you don't know how many times I've regretted meddling in your marriage, but I've got something to present to you. It will be entirely up to you to proceed or not. You don't realize how many friends you have down here. I've been called Uncle Greg by so many people I can't keep up with them. Nice to have a big family, huh?\"\n\nShe nodded, two people had already come up to her in the restaurant, greeting her as Aunt Gwen. She had long ago stopped trying to remember them all.\n\n\"Spill, daddy, what nefarious plan have you hatched to complicate your poor daughters life even farther?\"\n\nHe told her. She was shocked at first, but then her lawyer side took over and she recognized the merits of the plan.\n\nMonday she set the plans in motion. By Friday it was a done deal.\n\n..............................................\n\n\"Hellsfire and damnation!\" Hardy burst out.\n\nHe had been served on the courthouse steps. For divorce. Seems Gwen had gotten a local judge to change the venue from Boston to Birmingham, as they were both legal residents of the state.\n\nThere was even a court date, and grounds were listed as adultery.\n\nHe called his lawyer in Boston, ranting.\n\n\"I thought this was a done deal! The final decree was due in two weeks. What happened?\"\n\n\"You got me. All I can tell you is I was served with a petition to change venue, and the judge signed off on it. Truthfully, he seemed to be relieved to be rid of the whole mess. I heard of a divorce in Florida that took over a year, two lawyers in that one also, but this one will set a new record. Then, after all that, they remarried. I wish you luck, Hardy. You'll get my bill in the mail.\"\n\nThey were back to square one. He had no choice. Retaining a new lawyer, he started the whole process all over.\n\nThe first court date approached, and his lawyer insisted he be there. In fact, the judge wanted them both to be present.\n\nHe fought the idea but lost.\n\n\"I don't know what to tell you, he's pretty insistent about it. He's not the usual judge in these matters, she's on a medical leave of absence. Hear he's a crusty old coot. Best not to piss him off.\"\n\nThat should have tipped him off, but he had too much going on to pay close attention.\n\n.................................................\n\nHe was on the court steps with his lawyer, waiting to enter.\n\nGwen and her lawyer arrived, and they stood on the steps, together but apart. She nodded but made no effort to speak.\n\nHardy was completely taken aback when the judge entered the courtroom, then he got a sinking feeling in his stomach. Judge J.T. Harlin, in the flesh.\n\nPreliminaries out of the way, he had the first case called.\n\n\"Wilkes v Wilkes, your honor.\"\n\n\"All right kids, who wants to go first?\"\n\nGwen and her lawyer were a little faster in responding.\n\n\"We will your honor.\"\n\n\"In lieu of opening comments, I'd like you to allow Mrs. Wilkes to make a statement.\"\n\nJudge Harlin looked over his reading glasses, staring at Gwen.\n\n\"Proceed.\"\n\n\"Your honor, I wish to withdraw my petition.\"\n\nHis lawyer had to practically wrestle him back into his seat. Judge Harlin stared him down.\n\n\"Boy, if you cause the least little disturbance, I'll postpone these proceedings for six months. You hear me?\"\n\nHardy nodded.\n\n\"I'm sorry, I expect a verbal response.\"\n\nIt was almost a growl.\n\n\"Yes, your honor, I hear you.\"\n\n\"Good. Now Mrs. Wilkes, you were saying?\"\n\n\"I wish to withdraw my petition, your honor.\"\n\n\"Why?\"\n\n\"Because I still wish to be married to Mr. Wilkes.\"\n\n\"You're going to have to do a little better than that. It's my understanding you're separated due to infidelity on your part. Why try to hang on to him?\"\n\n\"I can't stop loving him, your honor. I tried, really really tried. I even agreed to the divorce, felt like I owed it to him. But the separation and other factors have forced me to grow up and see the world as it really exists. The more I learn the more determined I am to try to hold onto my marriage.\"\n\n\"Except for my career, I've pretty much failed at everything. I wasn't a good daughter, and even worse wife. I lied about my expectations of the marriage to get him, then tried to manipulate him to keep him.\"\n\n\"I had no idea the type of man he was. In that sense, he was as guilty as I at lying and manipulation. Had I known his history, I may not have even pursued him. I thought he was a mild mannered softy, even a bit of a wimp. So I started disrespecting him, in many ways. The cheating was the final insult.\"\n\n\"Only under great stress did I learn his true nature. Even then, when he had every opportunity to kill me, he seemed genuinely sorry for the one blow he gave me.\"\n\nJudge Harlin, watching her closely, believed her.\n\n\"Tell me, Mrs. Wilkes, do you think he's capable of returning your love? You hurt him pretty bad.\n\nAnd I've heard through sources that need not be mentioned he did a little more than slap you when he found out. Can you live with a man capable of doing something like that?\"\n\nShe had no hesitation.\n\n\"Yes, your honor. For one thing, I think he's ashamed of what he did, and for another I'll never give him cause like that again.\"\n\n\"Thank you, Mrs. Wilkes.\"\n\nHe turned to Hardy.\n\n\"Would you like to make a statement, Mr. Wilkes.\"\n\nHis lawyer stood.\n\n\"Your honor, my client does not want to make a statement. He desires the divorce to go forward, but be altered from grounds of adultery to irreconcilable differences.\"\n\nThe judge raised an eyebrow.\n\n\"That so?\"\n\n\"Yes, your honor.\"\n\n\"Mr. Wilkes, please stand.\"\n\nWhat now? he thought as he stood.\n\n\"Mr Wilkes, did you love your wife before this 'incident'?\"\n\n\"Very much, your honor. But that doesn't mean I...\"\n\n\"Don't add nothin' boy. Yes or no will do.\"\n\n\"Do you hate her now?\"\n\n\"No, your honor, but...\"\n\n\"Son, you are trying my patience. Yes or no, DO YOU UNDERSTAND?\"\n\n\"Yes, your honor.\"\n\n\"Good, now is your life better without her? Remember, yes or no.\"\n\n\"No.\"\n\n\"Do you miss her and what you had?\"\n\n\"Yes.\"\n\n\"Now, this one will be real simple, and you can actually talk. Walk up to her, go on. Miss Gwen, meet him halfway. Stand in front of me.\"\n\nThey met before the bench.\n\n\"Now Hardy, all you have to do to get your divorce is look her in the eye and tell her you don't love her anymore. Go on now, it ought to be easy if it's over between you. You can speak now.\"\n\nThirty seconds went by, a minute. The judge got impatient.\n\nHardy finally spoke.\n\n\"What's love got to do with it? I had a dog when I was a kid, a pit bull, one of the blue ones, the Warlock line. It was the most beautiful dog I had ever seen. I raised it from a pup, spent every second I could spare with it. One day, out of the blue, it bit me, hard enough to need stitches. I still have the scars. It went right back to the way it was before, never offered to bite me the rest of its' life. I still loved it, but I never trusted it again, never let my guard down around it. I still want the divorce, love is irrelevant. Trust is the thing. I'm afraid she'll bite me again.\"\n\nThe judge tried his best to stare him down.\n\n\"This ain't the time for you to channel Tina Turner or the Dog Whisperer. Tell her you don't love her and it'll all be over\"\n\nHardy stood, silently. The judge grew impatient.\n\n\"Go on, boy, do it. We got other people waiting to ruin their lives. Make it simple. TELL HER!\"\n\nHardy started to speak, drew a breath, couldn't get a word out. For the first time Gwen saw tears from him. It was the sweetest, most terrible thing she ever saw.\n\nThe judge grunted.\n\n\"Thought so. In my legal opinion, this marriage is savable. That being settled, it is my order you should seek a marriage counselor for a minimum of five visits, result to be reviewed by me. If after that...\"\n\nHardy finally found his voice. \n\n\"Now just a damn minute, J.T., I won't...\"\n\n\"That'll be a five hundred dollar fine for interrupting me and swearing in my court. We got kids present, doggone it! Now, as I was saying, a minimum of ten sessions to be...\"\n\nHardy was practically jumping up and down.\n\n\"If you think for one minute I'm going through with this mickey mouse...\"\n\nThe judge actually broke his gavel.\n\n\"Last warning. Shut up or get locked up. Your fine just went up to a grand. Where was I, oh, yeah, a minimum of twenty sessions with a counselor of your choice.\"\n\nHardy turned on his heel and started out of the courtroom.\n\n\"MR. WILKES! GET YOUR BUTT BACK HERE THIS INSTANT!\"\n\nHe didn't slow down until he reached the door, only to find it blocked by two bailiffs and a deputy sheriff.\n\nThe old bailiff tried to reason with him.\n\n\"Back off, Hardy. You could probably whip us, we're old and out of shape. That's why we got court duty. But we got these handy dandy taser thingys, and I don't think you can whip all three of them. Now go on back before J.T. has a conniption fit. He already looks like he's mad enough to bite the head off a snake, and aggravation ain't good for his blood pressure. We're asking nice, boy, go on back.\"\n\nHardy looked at them and felt his anger evaporate.\n\nHe turned and approached the bench.\n\nJ.T. waved his broken gavel at him.\n\n\"One more word, one more anything and you're in jail, contempt of court. Do you understand? Good. Now, get a counselor, set up appointments, and Hardy, so help me, blow one off and you'll be in jail before the night's out. You got it?\"\n\nHardy nodded, went back to the table, and whispered to his lawyer. The man shook his head no violently, but after a few seconds hung his head.\n\n\"Uh, judge, Mr. Wilkes wishes me to repeat what he just told me, verbatim. Remember sir, his words, not mine. May I proceed?\"\n\nJ.T. nodded, what could he be up to now?\"\n\n\"Sir, he wishes you to know he has lost all respect for you as a jurist. This engineered, distorted misuse of the legal system makes him ashamed to be a lawyer. Kangaroos would cringe at the goings on today. He is adamant in his refusal to attend such an exorbitant amount of counseling sessions, preferring to surrender himself to the jail at your convenience to begin his incarceration for contempt.\"\n\nThe lawyer seemed to cringe, waiting for the explosion.\n\nFor a minute, Gwen really thought the judge was going to have a heart attack. He went, pale, red, then purple. He couldn't form words for a few seconds. He was practically screaming when he finally did speak.\n\n\"Sir! Your client is an idiot. By God, right now is convenient. Bailiff! Escort Mr. Wilkes to the county jail, immediately.\"\n\n\"Mr. Wilkes, without doubt you are the stubbornest\n\nindividual I've ever met. Stew for awhile, I'll be down to see you in a couple of days, see if your attitude has changed. If not, you will remain a guest of the county. Want to apologize now?\"\n\nHardy grinned.\n\n\"I apologize J.T., for nearly giving you a heart attack. You really need to take it easy. You might die before you come to see me. Then where would I be?\"\n\nThe judge was so mad he was beating on his desk with his shoe.\n\n\"Get him outta here! And get me another gavel! Court is recess for twenty minutes. Miz Wilkes, could I have a moment of your time in chambers? You won't need your lawyer.\"\n\nGwen helped him into his chambers. He was still fuming.\n\n\"Try to help a fellow out and this is what you get. Stubborn, arrogant,....\" The judge rambled on for a few minutes.\n\nHe looked up.\n\n\"Sorry, darlin'. I didn't think he would get this mad.\"\n\n\"Well, judge, you did kind of push him, and he has a reputation of not liking to be pushed. Are you really gonna leave him in jail?\"\n\n\"Nah. I'll let him stew for a few hours, then go talk to him. Maybe we'll both be calm enough to reach an understanding. Still wanna go through with it?\"\n\n\"Yes sir. Offer him ten sessions to start, but make sure he knows there may be more. Tell him he can pick the counselor, that might help.\"\n\nShe turned to go. Looking back over her shoulder she gave a parting comment.\n\n\"I don't know what's in this for you, sir, but thank you. And judge, tell him I still love him, no matter how angry he gets.\"\n\n.................................................\n\nWill Rob Williams, the high sheriff of Jefferson County, was about to go to lunch. A county sheriff in most Southern states is practically the right hand of God, with an amazing amount of discretionary power. They know the good guys, the bad guys, and the idiots. They know who can be dangerous, who the really serious players are, who the rank amateurs are. Pretty much nothing moves in their jurisdiction that they're not aware of, sooner or later. \n\nAs he was leaving his office he saw a prisoner being escorted to the cells. He noted the man wasn't restrained, a violation of procedure.\n\nHe strode over to find out who was escorting him, and make a note to chew his ass when the time was right. Something about the man seemed familiar.\n\n\"Well, Lord almighty, if it isn't the notorious outlaw Hardass Wilkes! I heard you were back, kept meaning to look you up, but you know how it is. Protecting and serving and everything to go with it. Somebody finally get the goods on you?\"\n\nHis grin was a mile wide as he reached out to shake his hand.\n\n\"Good to see you Will Rob, How's Myrtle, still too good for you?\"",
        "\"Yeah, but after thirty years, marrying down don't seem to bother her as much as it used to. I'll tell her you asked about her, it'll tickle her no end. Here to see a prisoner?\"\n\nHardy's grin got even wider.\n\n\"Not exactly. I am the prisoner. Shouldn't have smarted off at your daddy in law, I reckon.\"\n\n\"You pissed J.T. off bad enough to land you in jail? This I got to hear. Deputy, I'm relieving you of your prisoner. I'll handle it from here.\n\nCome on, let's go eat while you tell me what you're up to. Don't worry about J.T., he'll be tied up the rest of the day in court. I'll have you back in time for him to come by and gloat.\"\n\nThey spent an hour and a half at lunch, catching up. The first hour was light, full of remembrances of times gone by and people who had passed. The last half hour had a decidedly darker tone. They talked briefly about his marriage.\n\n\"Damn shame there. I know her through work of course. Great lawyer, she has the best win percentage in the office. \"Bout everybody knows you're her husband, they call her 'Mrs. Hardass' behind her back, because she's so tough. Most would rather plead out than take a chance in court with her. Plus, she's one fine looking woman. You know she took the Escobar case, right? We'll watch over her when the trial starts next month, but you know how it is.\"\n\n\"Don't worry, Will Rob. I got it handled.\"\n\nThe sheriff frowned.\n\n\"Far be it from me to tell a man not to look out for his wife. I ain't asking, so don't tell me anything, okay? Just be careful. You carryin'?\"\n\n\"Not yet, I got my carry conceal permit a month ago. By next week I'll have my Smith .40 on me.\"\n\nWhat Will Rob told him next was totally unexpected.\n\n\"You know she carries? A .380, in her purse. She's a damn good shot too, I've seen her at the range.\"\n\nGwen? Guns? He had never heard her express an opinion one way or another but always assumed she was against them. Another thing he never knew about his wife.\n\nThey reluctantly went back to the jail. Hardy seemed stoic as the doors clanged shut. He was in a common holding cell with six other inmates.\n\nJ.T. came by around six, fully prepared to accept an apology and take him out to dinner. What he found was Hardy sitting on one side of the cell, four inmates sitting on the other side, and one lying on the floor, out cold.\n\n\"What the hell happened here?\"\n\nHardy tried to grin though the swollen, split lip. His left eye was rapidly swelling closed, and a definite lump on his jaw.\n\n\"You know how it is, J.T. We had a difference of opinion over football. They were Auburn fans, and I yelled out 'Roll Tide!'. But in the end, I had to admit they had a hell of a season. To top it off, did you know the jailer went to Ole Miss? He called us all a bunch of assholes and made us talk politics. After he sprayed a whole bottle of pepper spray on us.\"\n\nThe judge shook his head.\n\n\"Hardy, that mouth is gonna get you killed one of these days. You calmed down yet? Willing to listen to reason, maybe do a little trading?\"\n\nHis eyes instantly became hooded, his guard rising, before he managed to grunt in the affirmative.\n\n\"J.T., as much as I enjoy the company here, and I have to say the macaroni and cheese was really spectacular tonight, I'd like to sleep in my bed. That being said, you spout off to me again about twenty sessions and I'll ask what's on the dessert menu.\"\n\n\"Don't piss me off again, boy. That little speech this morning really got my goat. I don't remember you being all concerned about misusing the system when I pulled in favors to keep you out of jail when you were younger. If the recruiter hadn't been the son of one of my fishing buddies, you'd have done three to five in Huntsville instead of four for Uncle Sam.\"\n\nHardy was big enough to admit he was wrong.\n\n\"Sorry, J.T., I know how much I owe you and Will Rob. But, it still pisses me off to have her rammed down my throat. I just want it to be over.\"\n\n\"I promise you'll get it, one way or another. But you need to talk to her, get 'closure' as the shrinks say. Here's the deal. Ten sessions, you pick the counselor. After that, I'll go by their recommendation. If they say it's over, it's over. If they say you need to keep going, we'll talk it out before I make a decision. Best you're gonna get, take it or enjoy your breakfast tomorrow. I hear powdered eggs ain't that bad.\"\n\nHardy took the deal. J.T. drove him back to his truck, telling him not to dick around, have the name of the counselor on his desk by next Friday.\n\n..................................................\n\nGwen was walking on air! Hardy agreed to ten sessions. He had a counselor in mind, if he could get him. Someone from his past. That was good, he would be more comfortable, more open, she hoped. He promised in an email to let her know the time of the first appointment. Seems he still didn't want to talk face to face. She could live with that, for now.\n\nShe noticed the car when she pulled into her apartment complex lot. Vintage Cadillac convertible, maybe early seventies, completely restored. It was almost blinding it was so shiny.\n\nMore interesting though, were the occupants. A black man in his early twenties, dressed impeccably in a suit, behind the wheel. A diminutive white woman, obviously of advanced age, was in the passenger seat, equally well dressed. When Gwen got out of her car the man was standing beside her. She couldn't help but admire his grace and good looks.\n\n\"Excuse me for the intrusion, ma'am. Would you be Mrs. Wilkes?\"\n\nImmediately on her guard, she nodded.\n\n\"Please, would you mind speaking to the lady in the car? She has mobility problems and is a little vain about it. We won't take much of your time, I assure you. She's been beside herself with anticipation when she found out who you were.\n\nJust for a second, please?\"\n\nThe man seemed so earnest and straight forward she agreed. The woman peered anxiously at her as she approached, finally pulling a thick pair of glasses on. She broke out into a huge smile.\n\n\"It's her, Marcus! I declare, if you had auburn hair you would be her made over. Don't you think so?\"\n\n\"I agree. The resemblance is uncanny.\"\n\nGwen was lost.\n\n\"With all due respect ma'am, what are you talking about?\"\n\nShe gave her a look that reminded her of displeased grade school teachers.\n\n\"You, of course! Anyone ever tell you that you look just like your grandmother?\"\n\n\"You knew my grandmother? Virginia Howe?\"\n\n\"Child, I'm her baby sister. Your great aunt. Aren't you going to be polite and invite us in? I know you were raised by Yankees, but my goodness! Leaving an old lady out in the sun? Marcus, help me.\"\n\nHe looked at her with love.\n\n\"Yes'm, Miss Daisy. I be fetching your cane now.\"\n\n\"Marcus! Behave! That stopped being funny years ago.\"\n\nHe was immediately contrite.\n\n\"Sorry, Aunt Daisy. Sometimes I can't help myself. It sure is fun doing it to strangers. You should see the face you're making, Aunt Gwen.\"\n\nShe was slowly making her way, leaning on his arm and the cane.\n\nAfter they were seated and tea was poured[fully sweetened, she was getting used to it], she couldn't contain her interest.\n\n\"My great aunt! Please forgive me, but I didn't know you existed or I would have looked you up.\"\n\nDaisy waved her hand dismissively.\n\n\"Not to worry, child, I'm here now. I blame your mother, she wouldn't let your father have a thing to do with us. Here, look at this.\"\n\nShe handed her an old photo, the date on the back said nineteen sixty seven. It was a young girl, maybe still in her teens. Big smile, poofy hairdo, nice dress. Gwen held it up to a mirror, she was right, the resemblance was remarkable.\n\n\"I wish I could have known her.\"\n\nDaisy handed her another photo, showing a mature woman in her late forties to early fifties, holding a child of four or five.\n\n\"That's you, with her, when she came down for a family reunion. You were a handful, but you weren't mean. You followed her like a puppy, getting nervous if you couldn't see you 'gamgam', that was as close to saying grandma as you could get. She loved you with all her heart and soul.\"\n\nShe sighed.\n\n\"I wish I could remember her.\"\n\n\"You can, child, in your heart. She was very worried about how you would turn out, your mama and her never got along well. She never trusted her.\"\n\nReflecting on how her mother turned out to be, she thought her grandmother was right.\n\n\"Marcus, will you please get the books?\"\n\nHe rose and went to the car, returning later with three large volumes and a Bible.\n\n\"What are those?\"\n\nDaisy beamed.\n\nThis is the end results of fifty years of research. It's your family history. You can't keep them, but Marcus has them on computer, when you access it it will tell you more than you ever wanted to know about your ancestors. Here, let me show you this.\"\n\nIt was a family portrait. Mother, father, son, two daughters.\n\n\"That's your great grandmother and father, with your grandma, me, and Wilkes, our brother.\"\n\n\"I have a great uncle?\"\n\n\"Sadly child, he died young. A nasty place called Korea. He never married. You are the only grandchild in the family left.\"\n\n\"What about your family?\" She could see the large diamond and band on her finger.\"\n\nThe old face showed infinite sadness. \n\n\"Sadly, we never had children. They didn't have the sophisticated tests back then they have now, so we never learned why. We adopted a boy, a child of a distant cousin. Here, this is a picture of him and his family.\"\n\nA young couple with an infant, faces shining with love and hopes for the future.\n\n\"He was our life, our light. I do believe my husband loved him more than I did. He and his family were killed on an interstate highway, a twenty three car pileup in a dense fog. My husband never got over it.\"\n\nThe old lady wiped her eyes, the memory painful still.\n\n\"So you see, child, you're the last of the Howes.\n\nIt's sad, to see a line end, especially one as illustrious as ours.\"\n\nGwen felt an infinite sadness for this old lady. She knelt in front of her chair and hugged her, gently. The thin shoulders shook for a bit. Daisy pushed her back gently.\n\n\"Look at me! I must look like a senile, sentimental old fool. But I'm so glad to meet you.\"\n\nThey spent three hours, talking. Daisy delighted in showing her the heritage she was the result of.\n\nShe showed her a picture of a young man In a Confederate uniform.\n\n\"This is your four times great grandfather, Alexander Howe. He was a major, and survived the siege of Vicksburg. I have his journal, it was an awful time. There are tear stains on the page where he described having to kill his horse for food. People starved. He was commended for bravery twice before the surrender.\"\n\nShe held up another picture, of a Union soldier.\n\n\"This is the man who took his surrender. His name is Gregory Stowe Canaday. And yes, you're related. He's your four time great grandfather also, your daddy is his namesake. Even though he was from Boston, He was assigned to the Army of the West because they needed engineers. They struck up a friendship after the war, that's what led to your family opening a law office down here. He was sick of using his skills to destroy men, and turned to law.\" \n\nGwen felt her head reeling. \n\n\"Wow! I went from being an only child to being related to everyone I've ever heard of. It's a wonder I'm not related to my husband.\"\n\nMiss Daisy smiled.\n\n\"Well, actually, Alexanders' sister married Francis Wesley Wilkes, your husbands' four time great grandfather. I'll have to add it up, but that makes you something like a fourteenth cousin, once removed.\"\n\nGwen sat with her mouth hanging open, then she burst out laughing. When she recovered, she apologized.\n\n\"Sorry, Aunt Daisy, but I just realized I'm a true stereotype of the South, I married my cousin!\"\n\nThat set Marcus and Daisy off, and Gwen joined them in another round of laughter. When she recovered she asked how they had amassed so much information.\n\n\"I was a history major at 'Bama, taught high school history for forty years. Most of the older stuff I got from visits, court house records, family Bibles, and local folk lore. When Marcus came along he used his computer skills, that helped tremendously. Here, let me show you this.\"\n\nIt was an old family Bible.\n\n\"See the pages in the back filled with writing?\n\nOld time Bibles were sold with empty pages so births, deaths, and major events could be recorded. They're still valid legally as proof of birth and age. Look here.\"\n\nShe had turned to the last page. It recorded the birth of her grandmother, her father, and her. It was the last entry in the book.\n\n\"This is the family Bible, from my father. When I pass it becomes yours. There are a few pages empty, I hope you fill them with the names of the next generation.\"\n\nGwen started crying. With a little prompting, she told them her sad story, and how she was afraid there may never be another entry.\n\nDaisy surprised her.\n\n\"Snap out of it, girl! Not judging, but you've made some horrible mistakes. Fix it if you can, if not move on. If you want your man back, go after him with everything you have at your disposal, you need help, ask for it. Look how much family you have to call on.\"\n\nShe was pointing at the books.\n\nGwen smiled. \"Thanks, I may hold you to that. Am I related to everybody in Birmingham?\"\n\n\"Child, you could shut your eyes and fling a rock, and hit someone your related to.\"\n\nShe grinned that wicked grin only old people could get away with.\n\n\"And I'm not talking about white people either. Your cousin Marcus here could be right handy.\"\n\nShe looked back and forth between them.\n\n\"All right, I need to know. How did this happen?\"\n\n\"It seems Alexander had a relationship with the woman who turned out to be his great great grandmother. And by relationship, I mean in the way one owns the other, and saying 'no' just isn't viable.\"\n\nGwen covered her mouth in horror.\n\n\"It wasn't that bad. Apparently he was fond enough of her when his wife died to never remarry, preferring her company. She stayed with him after the war voluntarily. She gave birth to three of his children, one died in childbirth, another of cholera. But one, his great grandfather, survived and raised seven children.\n\nThis all came to light after Marcus came to me, doing research on his own family.\"\n\n\"I had the journals of both Alexander and Beth.\n\nWe found an entry where she seemed to condone the relationship saying she was grateful for 'the Nigra Jess, for relieving her of her need to perform her wifely duties, which her delicate constitution couldn't handle'. We had DNA done, and it proves we're related.\"\n\nShe looked with pride at Marcus.\n\n\"He's half way through achieving his masters in History. I've made him my heir, for following in my footsteps, for forgiving our ancestors, and generally being a loving person to an old, lonely lady. He deserves it, and after years of fighting me, he finally gave up.\"\n\nGwen was greatly moved, reflecting how you can find love in the oddest places. They left, after extracting a promise from her to visit regularly.\n\nShe helped Daisy to the car, listening to her grumble as she went.\n\n\"I think I made a mistake when I gave Marcus this car. It was the first new car my husband ever bought. I hated it then. It hadn't run in twenty years, I didn't think he could do anything with it. It took him six years, but it looks like brand new. I'd much rather ride in my Mercedes, but if he's driving this is all he'll take.\"\n\nGwen snuggled into bed that night, thinking what a good thing family was.\n\nShe wasn't thinking about all the people she had managed to put in jail over the last ten months, Vincente Escobar, Ronnie Wilkes, or Allan Hovis, the snake. But they all were thinking of her. "
    ],
    "authorname": "qhml1",
    "tags": [
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/boston-to-birmingham-ch-03"
}