{
    "title": "Awakening the Beast Pt. 05: Ghosts and Demons",
    "pages": [
        "Author's note: This story starts where Pt. 4 left off. While not required, Pts 1-4 are strongly recommended first, to follow the story, get to know the characters, and understand what's really happening in this chapter. Do enjoy, rate the story on the final page, and keep the comments coming, positive and negative. More story to come soon. I very much appreciate every read, every comment, and every ranking. All copyrights reserved to the original author. - TIB\n\n*****\n\n\"RETURN FIRE!!\"\n\nKelly woke with a start, eyes wide, not understanding where she was or what was going on. She was drunk with sleep, waking from a deep, vivid dream. She was in her own bed... wasn't she?\n\n\"WE GOTTA GET OUTTA HERE, MAN!\"\n\nWhat the hell??? ... Something, somebody shoved her side, hard. Kelly slid sideways on the bed. She turned her head, heart pounding in fright, trying to clear her brain, figure out what was going on.\n\nSomeone was in bed with her, something she wasn't used to. \n\n...Caelin. The previous night came back to her, at first just remembering a highlight, momentary flashes.\n\nHe was next to her, eyes closed, head twisting back and forth, drenched in sweat, moving fitfully as if having a nightmare. Kelly rolled towards him, scared of was what she was seeing. Of what was happening.\n\nHis whole body startled and he woke suddenly. Moving at hyper speed, he turned to her with dead eyes, pushed his palm onto her chest and drove her down onto the bed, jumping on top of her with his heavy weight. He pinned her down by her chest and snarled with bloodlust.\n\n\"CAELIN!' She yelled. He froze, shaking.\n\nHis eyes were wide, nostrils flaring, audibly seething. Then a flicker came into his dead eyes. Slowly, he started tracking on her. His brow furrowed in confusion.\n\nThen he recognized her. His eyes opened wider. Caelin's mouth opened in shock, drawing in a sharp gasp. He sprang up from the bed, naked, reeling backwards, slamming his back against her closet door with a crash of his large frame. Caelin spread his arms to his sides, pressing backwards, terrified, seeking safety with the wall behind him. He looked at her with shock, slowly shaking his head in disbelief, then sank to the floor, sliding his back down the door. He buried his face in his hands, trembling.\n\nKelly sat up in stunned silence, looking at him, trying to process what the hell just happened. At least a minute passed in the darkness without a word, only secondary light from the kitchen glowing through the bedroom door. Then Kelly got up from the bed and walked to him.\n\n\"No!\" He spoke loudly, holding up a hand to her, palm out, not looking up. \"Stay away from me.\" Kelly froze. Then she sat down on the floor in front of him, crossing her legs. He kept his head down.\n\nMinutes passed, only the faint ticking of a clock coming from the living room and the soft humming sound of the air conditioning. Kelly's heart curtailed its rapid assault in her chest. Caelin's breathing slowed.\n\n\"Are you ok?\" He asked, his hand still covering his face.\n\n\"Yes, of course. I'm fine,\" she replied honestly.\n\n\"I... I'm so sorry,\" he spoke with some embarrassment, then looked up at her. \"I've never laid a hand on a woman in my life.\" He paused again. \"I would never hurt you. I'm pretty fucked up, through. I don't ever want to lose control.\"\n\nKelly thought for a second, still somewhat scared, trying to judge what her heart really told her about this man. \"I know that.\" She deliberated, feeling unsure how to proceed. It was awkward, sitting naked on the floor. She pulled a white terrycloth robe off a side chair and draped it around herself. \"You want to tell me what's going on? We can talk if you want.\"\n\nCaelin drew in a deep breath, blowing it out pursed lips. Lots of delay. Kelly tried an appeasement.\n\n\"Would you like a drink?\" \n\nAnother pause. \"Yeah, ok.\"\n\nKelly twisted her body, reached under the bed behind her, and pulled out a thin grey blanket. She stood, held the blanket out towards Caelin, and waited. After several seconds, Caelin stood as well, taking the blanket and wrapped it around his shoulders, covering most of his large frame. They walked to the living room, where Caelin sat on the couch, grabbing the whiskey tumbler off the coffee table that Kelly had set down the night prior. He took a large gulp, gritted his teeth at the strong liquor, and exhaled, holding the tumbler in his lap with both hands. Kelly turned the armchair towards him and sat, waiting patiently, letting him take the lead. Eventually, he spoke.\n\n\"There's a lot to tell. Are you sure you want to hear this?\" Kelly nodded. Caelin sighed again. Clearly, this was very difficult for him. \"I... haven't ever told this to anyone else. Not a single soul. ... well... I guess parts of it to a counselor.\" He spoke as if debating whether to speak each and every sentence. \"But... given what just happened, perhaps you deserve to know some of it.\n\nI'm fucked up, Kelly. Damned. \n\nI was in the Army, a combat aviator. Retired last year.\" Not exactly a big surprise there. Most of that was pretty obvious at this point. \"Lots of crap happened over the years, mostly during my combat time. I guess it all came to a head on my sixth deployment several years ago. I was in Afghanistan for that one. There was this girl...\"\n\nYeah, there always was a girl. \"Her name was Betty. I knew her for years, but things had never allowed us to really be together and make a life. She actually was my first...\" His voice trailed off. \"I loved her, very, very much, with all my heart. We got together every chance we could, and had an amazing relationship. Then, before I deployed, she didn't want to see me. Just stopped talking to me, no explanation. I went off to war again, doing what needed to be done. That year was pure hell. I lost several buddies that year. ... so many...\n\nToo many.\"\n\nHe looked at Kelly, deep pain in his eyes, then back down to his hands and the glass as he spoke. \"About a month in, we had our first big firefight at our FOB. We were taking all sorts of fire. I watched my best friend bleed to death in front of me, just a few yards away, as close as me and you right now. Shot hit him in just the wrong spot. I couldn't even get to him to hold him, so he could be with a human being as he died, because we were pinned down under fire. Tom stared at me as he bled out, terror on his face, mouthing words to me I couldn't make out. I watched the life evaporate from his eyes, helpless to do anything to stop it. I failed him. I failed my brother. He had a wife and two kids, one of them just one year old. Afterwards, I asked to take his body back home and attend his funeral. I got denied.\n\nThe next week, my boss was assassinated. One afternoon, we were in a meeting together, planning out an operation. The next morning, he was gone. Just like that. I started thinking I was cursed. Death followed me, striking over and over. But he wouldn't take me. He took those all around me, but wouldn't take me.\" Caelin looked down at his two big, powerful hands, turned palmed upwards towards himself, as if they and the whiskey glass were covered in dark crimson guilty blood. \"I've lost more people, than I can count on these damned hands.\"\n\nCaelin started tapping his foot as he spoke, leg bouncing, clearly agitated. He spoke as if brutishly scraping open a crusted, scabbed wound, restarting the pain. His voice dripped with guilt. \"It should have been me. I wanted it to be me. \n\nI... I needed it to be me.\"\n\nHe paused, tapping his thumb on his leg now. \"Other crap happened. I got injured, got sick, had arguments with some people I worked with. Towards the end, we were getting shot at every... damned... day. I was so alone. My friends were dead. The other guys and I would talk about some things, but I was an officer, so it just wasn't the same thing, talking with the guys, if that makes sense. I had to lead them, and even though we could talk about very personal things, there were some things I just couldn't talk with them about. I sent a few messages to Betty, but she wouldn't talk to me. There was nobody else back home that would even come close to understanding. I had nobody to turn to, and held it all inside, trying to handle all of it, this aching, wrenching pain, way down in my gut. I cried out to God, from my seat in hell.\"\n\nKelly sat, staring at Caelin with rapt attention as he spoke, truly in awe, not believing what she was hearing. The dam broke now, words pouring out of Caelin, letting it all out.\n\n\"I was grieving, but not able to take steps to work through it. All these people gone from my life, these people I led, had trained, had taught, had fought with, flew with, gave my life to. I wasn't there for them. I was failing, but felt powerless to change any of it. So I kept it all inside, and God helped me grow stronger by myself. More self dependent. For that, I'm grateful. Nobody can truly handle all that, all alone, though, and later on had to have help.\"\n\nCaelin was quivering now as he spoke.\n\n\"That was the darkest time of my life. When I got back from that deployment, things didn't get better, if anything they got worse. Everything was different. The world was so different. I can't explain this so you really understand, but I felt so broken, so defective. I missed my friends so terribly, it physically hurt. I missed Betty. And everything around me just seemed so damned petty, that it didn't really matter, whether it was people fighting over parking spots, or buying crappy junk in the store. Nothing had the same importance anymore. Thankfully, I found a group of other vets and met with them regularly, and we've been able to work on things. \n\nBut... then there was Betty. Just when I thought I was putting things back together, she sent me a message, like nothing had ever happened, and we started talking again. And then she dropped the bomb. Just after the last time I saw her, she had met this 'hot Italian' accountant at her work, who helped her carry boxes to her office when she hurt her foot. She took him as her lover and made him her fuck buddy, for two years, every chance they could be together. The whole time I was gone off to war, and more.\"\n\nKelly's eye widened.\n\n\"She told me there was nothing emotional about it, no love. She just needed sex, that it was no big deal, and it was easy for her. She said the thought of me never crossed her mind the whole time I was off at war and she was fucking him-she convinced herself I was back home, happy, and had a perfect life, probably so she wouldn't feel guilty. Not a single thought whether I was alive or dead, even though I thought of her every damned day.\n\nShe told me she had been too busy even to send an E-mail, all while spending hundreds of hours fucking this other guy. Then for some reason she went on, telling me how great the sex was, that they taught each other things, and helped each other grow sexually. That they had little code words with each other when she wanted to go fuck. She told me she had no regrets, and was proud that she had taken care of herself. Even went so far as to claim that she had never stopped loving me, the whole time. She couldn't comprehend why I would possibly care about it. To her, the problem wasn't what happened, the problem was only that she decided to tell me about it, and that I wasn't cool with it.\n\nShe did what she had to do, and took care of her own needs. It's such a cliche, a soldier going off to war, and the girl he loves that stays behind gets bored and fucks the bad boy down the street. But she didn't even have the courtesy to send me a 'Dear John letter', letting me know, or let me move on with my life. Even when she started fucking him before I ever deployed. Nothing. She just left.\n\nThe thought that kills me, more than anything else, is all those times I was crouched in those bunkers, under fire, wondering if that day would be my last. I thought about dying. Even... thought about doing it myself sometimes.\" His shoulders drooped in resignation, clearly so difficult to admit. \"I would try to think of reasons not to do it, and she would come to my mind. She was my world.\" Caelin's voice quieted a little, as he brought himself to the crux. His voice shook, trying desperately not to lose it.\n\n\"In those blackest of times, she was the reason I didn't blow my brains out. But right at those same moments, she was fucking his brains out.\"\n\nHis words hung heavy in the quiet night air like death itself, a thick black cloud.\n\n\"It was a lie. It was all a lie. What I was relying on to draw strength, and keep going, stay alive, wasn't real. And I didn't even know it.\" Caelin sighed, pursed his lips, and shook his head slowly in disgusted thought. \"But you know what? ...and I don't expect you to understand this. But as fucked up as I am, even with everything that happened, all the pain, all the death, if today I could go back over there, back into combat, I'd go in a heartbeat. What we did over there, was real. We had a purpose. And my guys and I, we had each other. Everything else was secondary.\n\nBetty... well, she just... broke my heart. Crushed me to pieces and destroyed me, while I was burning in hell. I refuse to be a victim, so I'm taking the pain and moving on.\" He looked down, sighing deeply, blowing out his breath through puffed cheeks, jaw quivering. Then there was prolonged silence. Kelly wanted to make sure he was finished.\n\nHer turn. Kelly spoke loudly, forceful and angry. Her eyes flashed with lightning, her cheeks flushed with a fiery redheaded temper.\n\n\"FUCK.\n\nHER!\" \n\nCaelin looked up in surprise, as she continued, furious. \"SCREW THAT. She can go fuck herself. There will always be women who will claim to respect and support people in the military, but then when it comes to crunch time, when they're really needed, they run off and show what they're really made of. You can't claim to love someone if you aren't able to show respect.\" \n\nKelly moved to him with a purpose, kneeling in front of him, lifting his head with her hand to look him in the eye. \"Caelin, you don't need her, or any cunt that like in your life. You, sir, of all people, deserve so much better than that. A real woman doesn't abandon a man like that, no matter how she feels or what's going on.\"\n\nMoving deliberately, Kelly took the glass out of Caelin's hands and set it back down on the coffee table behind her. She then leaned forward, holding his hands, looking into his hazel brown eyes. She took on a sultry, slutty voice, tantalizingly raising one eyebrow and speaking with a purpose. \"Let me show you how a real woman takes care of a man when he's in need.\"\n\nKelly sat back onto her heels, and traced her fingers along the lapels of her robe. She pulled it apart ever so slightly, so it fell open down the middle in front, showing her ample freckled cleavage, her soft, pale stomach. As her fingers ran across the edge of the material, it opened further, revealing her navel, her trimmed bush. Kelly slowly leaned back against the coffee table, placing the palm of her right hand on her chest. She then turned her hand so her fingers pointed downwards, and smoothly slid her palm south, through her cleavage, pushing the exposed edges of her breasts apart, over her stomach and navel. Kelly's fingers glided over her exposed sex, and then inside her thigh, putting on a show for Caelin.\n\nYou had to give the girl credit. She sure knew how to change the mood. Kelly slowly gyrated her body while kneeling, as if dancing for him. She turned her head to the side, grabbed her robe lapels, and pulled them off her shoulders. Her robe fully opened, revealing her pale, nude body. She let the robe slide down her arms and back, still only on her forearms, the robe dropping behind her onto the coffee table and her heels. Kelly flipped her hair with a flick of her head, letting her long red hair fall on her right shoulder. She tilted her face downwards, to look at her body, and began to rub her own large breasts. Then she lifted only her eyes, to peek at Caelin from below her brow, biting her lower lip in a slutty tease. She was transforming into the object of desire for him.\n\nKelly arched her back, confidently displaying her naked figure, fondling and squeezing handfuls of fair tit flesh. Her hands explored her own body, caressing and skimming her palms over her fair skin. Her left hand grabbed one breast and pulled it up to her own mouth, where she stuck out her tongue and swirled it around her pert nipple, becoming hard and erect. Then she took the nipple into her mouth, sucking and pulling on it with her red lips. At the same time, her right hand pushed between her knelt and somewhat spread legs, drifting up her thighs and touching herself.\n\nAt that moment, she became the most beautiful woman in the world, a confident goddess, seducing with erotic allurement. She moaned, getting wet. Kelly leaned, bending her back over the coffee table to rest her upper body on it, naked tits pointed at the sky, having Caelin watch as she stroked herself, fingers wet with her own lubrication, rubbing over and through her pussy. She swirled her moist fingertips over her clit in circles, pushing through her red pubic hair. Her other delicate fingers pinched a hard nipple. But this was only the introductory warm-up act for him. The full show would have to wait for another time. \n\nHaving gotten both of them started, Kelly sat up again on her heels, dropping the robe the rest of the way from her forearms behind her so she was entirely naked, kneeling before Caelin. She used her body as a presented gift, knowing that he would love seeing her like this, no matter what she looked like. She not only felt more self-confident in this knowledge, with her own body image, but enjoyed the insight she saw in his beautiful eyes, that the sight of her pleased him. That she turned him on. The more she gave to him, the better she felt, and the more confident she became, which pleased him even more along with her own bettered state, in a continuous uplifting cycle. This wasn't necessarily typically like her, but with him, she was learning and growing as a person, understanding herself and who she wanted to be.\n\nKelly reached up and opened the blanket he had wrapped around his body, resting it on his outer arms. Then, as she had done with her own body, she slid her palms down his torso, touching him and caressing him. This was her man, and she was going to show him how a woman truly took care of her master. She felt his chest hair under her hands, his muscles, as she touched and connected with him, giving copious human contact. She could feel his obvious inner pain under her fingers, even if it hadn't been so obviously displayed. Kelly's large, juicy breasts skimmed his knees as he sat still, letting her explore and lavish his body.\n\nKelly tipped her head to the side, her long red hair falling on her shoulder, and rubbed his upper legs thoughtfully. Then she hooked her hands behind his knees and tugged a bit, for him to slide forward and slouch backwards against the couch, putting his butt closer to the edge. She gently pushed his knees apart, moving her body seductively between his legs and leaned in, noting that he was quite erect. She kissed up his legs, his inner thighs, his stomach, her lips lingering sensuously on his body, worshiping him.\n\nKelly took his penis into her hands, lovingly stroking him. With one hand, she pulled his cock against her soft tits and slowly stroked him, while she caressed his leg and torso with her other, looking deeply into his eyes with longing. She was so soft and gentle, adoring him as only a woman can. \n\nHis tip glistened with precum now, and she tilted his cock to rub the tip on her nipple, moving it slightly to spread his clear cream around her areola, lubricating her breast. Her hand glided up over the tip, feeling the slippery liquid on him and her nipple, the softness of his skin and her breast together.",
        "She couldn't wait any longer, and had to have a taste. Kelly leaned down and lightly licked his tip, tasting his precum again. Then she did it again. And again. Kelly kissed his tip, then placed several kisses all along his beautiful cock. She kissed all around his pelvis while stroking him, adoring her man. Caelin responded to her, relaxing a bit, the tension starting to disappear. \n\nKelly pressed the flat of her tongue against the base of his cock, looked up into his eyes, and slowly dragged her tongue up the full length of his shaft. She watched his face as her tongue slid over him, taste buds gliding over his ridges, taking gratification in watching the pleasure wash over his face, exhaling deeply. She maintained eye contact and repeated the same thing, feeling his shaft glide under her tongue, watching her every ministration connect directly to his enjoyment, as if she were hardwired to his nervous system. \n\nKnowing he was watching her every move, as she reached his tip again with her outstretched tongue, she tilted her head downwards, and took him into her mouth, slowly bobbing her head. Caelin groaned and balled up his hands on the couch cushions, arching his back. Kelly pushed down over him slowly, pressing her palms flat onto his upper legs, fingers spread. Then she sucked hard, coming back up, creating alternating sensations.\n\nCaelin pushed her hair back from her face with his hands, wanting a better view of her as she sucked his dick. He grabbed a handful of hair behind her head and let her shower him with attention. Kelly bobbed her head on him, smoothly gliding her mouth on his prick. She massaged his balls gently, then wrapped her hand around his cock in front of her mouth and stroked him as she sucked him. She coaxed him with her touch, leading him on his path to climax.\n\n\"Damn, you're so good, \" Caelin groaned, \"such a dirty girl.\"\n\nKelly smiled on his cock and redoubled her efforts, loving his encouragement. She reached down again between her legs and dipped her fingers into her wetness, rubbing her clit as she sucked on him. Holy hell, this was turning her on, having his hard cock in her mouth, feeling him in ecstasy under her touch, masturbating herself as well.\n\nCaelin's grip tightened on her hair, and his muscles clenched. He groaned, and Kelly could tell he was about to come. She looked up at him, wanting to watch his orgasm, knowing that she was the one that had made it happen. She loved it, that she could pleasure this man so much. Seeing him look down at her, she wrapped her mouth around the end of his cock, sucking with moderate force, and stroked his shaft with her hand, her thumb rubbing along the sensitive underside of his shaft. His cock twitched in her mouth and hand, Caelin groaned, and she felt his first load shoot under her touch, through her lips, and spurt into her mouth. That glorious cum.\n\nKelly pulled her mouth off him and sat up, keeping her eyes on him. She wrapped her free arm under her naked tits, holding them up with her forearm, offering them up to her master. As she continued to stroke him, he continued to come, shooting copious loads onto her tits. Oh fuck, that felt good, having his hot seed spray onto her collarbone, her shoulders, her cleavage, all over her abundant freckles. One spurt shot onto her left cheek, catching the corner of her red lips. Another went wide right, spraying into her hair. She loved watching him come, watching his spunk shoot out of him, knowing that it was all her doing.\n\nKelly rubbed the underside of his shaft as he came, milking him, and smiled. Then she thrust her chin forward a bit and dribbled his cum out of her mouth, letting it run down her chin and onto her tits. The gooey liquid ran over her nipples and pooled on her arm underneath her breasts.\n\nCaelin raised his eyebrows. \"Oh, you're going to let my cum run out of your mouth, are you? You're going to get some punishment for that, pet.\"\n\nKelly pursed her lips with a slight smile, raising her eyebrows back at him, then wiggled them a bit, playfully.\n\n\"As you wish, sir.\"\n\nShe milked the last of his come with her thumb, rubbing it onto her already covered tits. Damn, she was a mess-it was fucking awesome. Kelly loved it, feeling sexy and slutty, his seed all over her. She let go of him and sat back, using her discarded robe to deliberately wipe off her body, having him watch her do it, the knowledge making her happy that he loved seeing her naked form. When she was finished, she set the robe back on the floor, gave him a gentle kiss on his cock, cleaning him off, and then cleaned off her fingers with a sucking motion one by one, staring into his hazel eyes with a smirk on her face. She continued.\n\n\"...and that's just for starters, baby. There's more to come.\"\n\nCaelin raised his eyebrows questioningly. Kelly smiled. She got up on her feet, offered her hand, and helped him stand as well, the blanket falling off his back onto the couch. She gave him a peck on the cheek, pressing her naked body against his, and led him back into the dimly lit bedroom. She laid him down on the bed, lying supine and naked with his head on a pillow.\n\nKelly walked to the foot of the bed, with Caelin watching, then raised one knee onto the mattress. She could feel her own excited wetness as she moved, needing to fuck. Kelly bent forward, supporting her body with her forearms, and crawled up from the foot of the bed like a tigress, looking into his eyes. She smirked, feeling slutty, and crawled up his body, her hips and ass swaying in exaggerated, sexy oscillations. Her dangling breasts brushed over his feet, his hairy legs. \n\nKelly's body flowed like cleansing water over him, touching and caressing him with her breasts and her torso. Once more, she sought to assuage every bit of torment and pain, using her sexuality as the starting point, then lovingly and patiently willing the anguish from his inner depths.\n\nShe dragged her cascading long hair up his body, and then back down, doting on him. Kelly planted a plethora of kisses as she rubbed over him, kissing his thighs, his penis, his beautiful stomach, his hairy chest. She gently lowered her body onto him, her breasts smushing into his abdomen, feeling his growing cock press into her belly. She rested her head on his rib cage, kissing his collarbone, and stroked his chest with her right hand, running her fingers through his chest hair, adoring his body. Caelin's right hand came up to stroke her bare back, running down the valley of her backbone and coming to rest just above her ass. The two of them were starting to become familiar as lovers.\n\nShe was starting to have feelings for this man who had dominated her, brought her to paradise through pleasure and even a bit of pain, knowing that even so much more was possible, and wanting to care for him. Her thoughts were still on the story he had shared with her, feeling so angry and needing to help him. She kept her body pressed against him, and slid up until her face was even with his.\n\n\"Caelin...\"\n\nKelly rocked her body, rubbing against him as she spoke, straddling his hips. She could feel him now fully erect from the warmth and friction. As she rocked downwards, she felt her wet pussy lips open and come in contact with the head of his penis, his member just dabbing at her opening. The anticipation was maddeningly heavenly. Kelly continued, speaking in a deep, husky, breathy voice dripping with sex.\n\n\"Here's how a real woman shows respect.\"\n\nShe kissed him passionately, and rocked her body down again slightly, dabbing the head of him against her pussy lips. Then she pushed off with her hands planted on either side of his shoulders, and smoothly pushed her body down over him. She felt his cock push her lips apart and penetrate her. Kelly groaned into his kiss as she sheathed him with her vagina, pushing him full length up inside her. Mounting him, her eyes rolled back in her head with ecstasy. Caelin moaned back.\n\nOh fuck, that felt wonderful. Pure perfection, like that's exactly where he belonged.\n\nShe felt so sexy, straddling his big, burly body, riding him. She stayed still for a moment, savoring the sensation of him deep inside her once again. Then she gave into the animal instinct buried inside her DNA, and began to rock over him, bucking her hips. Fucking him. Loving the feeling of his cock inside her as she slid her pussy up and down him slowly, doing all the work. Her breasts smushed up and down against his chest hair as she rocked against him, her nipples hardening from the friction.\n\nAfter a minute, Kelly sat up and continued to ride her stallion. The sensation of him inside her changed with the altered position. Caelin grabbed her hips, guiding her as she continued to work him. Damn, she loved his hands on her body.\n\nCaelin looked to his left, seeing the reflection of the two of them in the glass window, the dark bedroom reflecting the dim light inside back at them. He watched her gyrate her body on him, her dewdrop breasts bared, as if watching a couple have sex as a third person voyeur. It was fucking erotic.\n\nShe rode him a minute, resting her hands on his hairy chest, then threw her head back, feeling her hair fall down her bare backside. Her hands came up, running over her own body. She caressed and squeezed her breasts, putting on a show for Caelin, who joined her with his own hands. All four of their palms mixed together on her tits, squeezing and kneading, then Kelly rubbed her full body, enjoying all the touching by both herself and Caelin. She reached down between her legs with one hand, and used her fingers to pull her pussy lips apart, feeling Caelin's cock slide in and out of her as she bounced up and down on him and ground her hips.\n\nKelly's ass bounced slightly every time she fully sat down on him. She continued to lean back, arching her back, supporting herself by reaching back and propping herself up on his knees. Kelly ground her pussy on him, and the internal sensation changed again. Oh, God...\n\nThen Kelly leaned forward a bit, swishing her head to the side so her hair dropped over one shoulder. She looked down at him with a loving, mothering look. It was time to take this to the next level, remind him of the man he was. She leaned down and spoke quietly into his ear as she continued to fuck him.\n\n\"I'll take that punishment now, sir,\" Kelly sat back up with her hands on his chest and looked into his eyes, pleading and submissive, \"Please.\"\n\nCaelin's fondling touches on her large breasts grew more intense. Rougher. He squeezed hard. Pinched her nipples. Kelly whimpered as he tweaked her nipples, moderately pulling and twisting. She bit her lip, half from the pain, half from the pleasure that shot through her body.\n\nHis hands slid down to her hips again, this time raking his fingernails down her sides. He increased their sexual pace, grinding her pussy on him, grabbing her hips tightly in his large, powerful paws. She watched his face as his expression began to change, that look of intensity and ferocity coming back.\n\nSmack! \n\nHe gave her a firm stinging spank on her ass. Kelly whimpered again. He massaged her ass cheek he had just spanked, ameliorating the light pain and stimulating capillary blood flow, then roughly grabbed a handful of her ass flesh in his hand.\n\nSMACK!\n\nAnother one, a little harder. Oh, fuck... Kelly felt an orgasm approach. No, no... she wanted to wait. She wanted him to come. Not yet. Not yet!\n\nSMACK!\n\nThe sting of his palm on her ass shot through her body. She was losing it, but couldn't stop. She couldn't stop her animalistic desire, her hips instinctually grinding on his cock, needing that sex. And Caelin kept pushing her. Harder. Faster. More. He reached up and grabbed a handful of her dangling red hair, pulling her head to the side.\n\nFuuuuuuck...\n\nKelly cried out, no longer in control. Not able to stop, now a captive of both Caelin and her own sexual needs. Her arms began to quiver. Her hands involuntarily balled up, fingernails dug into his chest, grabbing handfuls of his chest hair. Her body tightened, muscles clenched. Her legs squeezed together, clutching Caelin between her thighs.\n\nNo, no... she wanted him to come, not her. But even though she was on top, she was no longer in charge. The first wave of her orgasm hit her.\n\n\"UNNNHHHH!!\" Kelly uttered, not even able to control what came out of her mouth. Her body convulsed in a spasm. Then the second wave hit. Caelin pulled harder on her hair, pulling her head to the side, and swatted her ass again. Her whole midsection clenched, ass to hips to pussy to abdomen, clamping on his cock. She lost all strength and collapsed on his torso, a smaller third orgasmic wave hitting her, making her spasm again.\n\nShe laid on his chest, head to the side, gasping for breath, breasts and cheek smashed against him, unable to move. \n\nNo... he was supposed to come first. Why did he drive her to that? Why did that punishment turn her on like that? This wasn't turning out the way she expected.\n\nBut Caelin didn't give her any respite. Apparently he wasn't finished. He roughly grabbed her hips and pulled her up his cock until only the tip was still inside her gooey pussy. He grabbed a handful of each of her ass cheeks, shifted his legs to get leverage, and then began to drive up inside her, thrusting his hips. He kept her body motionless and began pounding her from underneath. \n\nOh fuck... she couldn't move. Couldn't take much more of this. She was already raw, sensitive. But he pushed her beyond her limits, not caring, using her body. Caelin grabbed her forearms and gruffly pushed them behind her, crossing her wrists behind the small of her back. He held her with the tightest of grips, squeezing her wrists and arms in his big hands, fucking her from underneath. \n\nWith no way to hold herself up, she laid heavy on his chest, tits smashed into him. Their groins made wet, slapping sounds with each of his thrusting impacts, his balls smacking against her ass. Each impact sent ripples through her whole body. Kelly cried out again, mouth over his shoulder, her cry wavering and accentuated with each impact.\n\nKelly felt completely helpless, totally at his mercy. Whatever he wanted to do with her, he could. And... God forgive her... THAT totally turned her on.\n\n\"Oh shit oh shit oh shit oh shit...\" she cried. It was just all too much, overwhelming her senses.\n\nAnd then, he completely changed the pace, letting go of her arms and grabbing her hips. Kelly's arms flopped limply onto the bed beside them as lifeless limbs of meat. Caelin pulled her body onto him over, and over, and over, using her pussy to gratify himself, she already having been pushed into the abyss.\n\nAfter a minute, she regained some strength, and struggled up to her elbows and glanced into his face with a look of exhaustion as he continued. He sneered.\n\n\"You like that, you dirty girl?\"\n\nShe was only half tracking him, but nodded, trying to find the words. Fuck it. She decided to go all out, wanting everything from him and to encourage him to take his rightful place. She took one of his hands and brought it up to her neck, placing his fingers around her throat. He leered with dominance and pleasure, and went with it, allowing the aggression to come out. He began to squeeze her throat, as he continued to pull her pussy down over his hard cock. Then he also brought his other hand to her neck and started to squeeze. She gasped.\n\nHolding her neck tight, he controlled her whole body like a puppet, pulling her down onto him in large, undulating waves. He established a slow, but grandiose pace, thrusting up deep inside her pussy as he rowed her onto him, over and over. Once again, she was a rag doll, limp and compliant, completely at his mercy, her entire body for his wanton use.\n\nIt was sheer heaven.\n\nKelly struggled to breathe, her neck enveloped by his big hands, just as her pussy fully enveloped his cock. \n\nThe world started to go grey. She flopped and flailed under his control. \n\nShe began to lose her peripheral vision. Kelly's head lolled above his grip, the choking eliciting a light constricted cough.\n\nKelly's field of view narrowed in tunnel vision. \n\nShe began to shake.\n\nOnly semi-aware, another orgasm rumbled through her body like an earthquake. Steadily increasing in intensity, it consumed the remainder of her consciousness, and all reality vanished. The last thing she was aware of, was his cock pulsing inside her, unleashing his cum deep in her womb. Pure perfection, being a vessel for him, in whatever manner he chose. Kelly succumbed to the inevitable.\n\nDarkness began to envelop her, warm and deafeningly silent.\n\nThe world stopped.\n\nThen suddenly she was free, gasping for air, her neck now unrestrained, throat tingling. She became aware that she was lying collapsed on his chest, tits smashed into him, head turned to the side. His chest heaved with hers, both of them grasping for oxygen in the torrid aftermath. Kelly couldn't move a single muscle. She had never been fucked like that, particularly when she was on top and in a position of supposed control. This guy really was a champ.\n\nHe moved first, their bodies hot and slick together, reaching up to stroke her crimson hair. She could feel both of their juices seeping out of her vagina, his cock still inside her. She laid still, trying to navigate her way back to planet Earth.\n\nHoly shit. Did that really just happen? Any of it? This was no middle of the night dream. And this wasn't exactly the lazy Sunday morning she had anticipated, that's for sure. Kelly opened her eyes, seeing her bedside alarm clock on the nightstand. \n\n3:06 AM.\n\nWow. Well, so be it. Middle of the night sex is often the hottest kind. She just hadn't ever heard of an encounter quite like this, particularly the way it had started. She continued to lay still, listening to his heartbeat. His slowing breaths. He continued to idly stroke her hair. She felt his body relax.\n\nBut something remained. She could feel it in him, their flesh pressed together. Those ghosts and demons would not yet relent, still battling for ownership. She waited, liking the skin on skin contact, his penis staying inside her.\n\nThen he spoke. With her ear pressed against his chest, his voice was amplified, the deep tones accentuated as if she was inside an oil drum.\n\n\"Kelly...\n\nYou should think seriously. Obviously I've got some... um... 'things'... I'm dealing with. I'm pretty fucked up. I've made some decisions, that I accept for my life and the consequences that come with it. But nobody else needs to deal with it. You don't need to deal with it. Nobody else needs to live in my little empire of dirt. For one thing, I told you death seems to follow me as a curse. I don't want anybody else to get hurt.\"\n\nKelly thought for a minute, formulating her response. Certainly, her own demons were more than enough to handle, and they had been simmering on the back burner for some time. This was no romantic princess fairytale. Real life could be a bitch. She lifted her head to look at him, lightly touching the chest hair at his clavicle.\n\n\"Caelin. I started telling you some things earlier. That a real woman respects a man, particularly when he cares and provides for her.\n\nMost of all, sir, you need to know that a real woman doesn't run off on a man when things get tough. Some things take work. You may think you're messed up, and maybe that I should stay away. But that's just not going to happen. I make my own choices too,\" Kelly took a deep breath and sighed.\n\n\"I'm here for you,\" she paused, looking down at his chest. She touched his greying hair, then looked back into his hazel eyes. \"...in any way you please.\"\n\nHe reached up to her face, and drew his thumb across her chin. Caelin brought her face to his and kissed her lips, then looked in her eyes, thumb stroking her cheek.",
        "Kelly pursed her lips in a strained smile, choked up. There was nothing more to say at this point. She kissed him again, her eyes wet. Then she rolled to his side, feeling his softened penis slide out of her. She wiped her glistening eyes on his shoulder and rested her hand on his chest.\n\nIn their fatigue, sleep again claimed them both.\n\nThe next chapter had begun."
    ],
    "authorname": "TheInnerBeast",
    "tags": [
        "redhead",
        "big tits",
        "ptsd",
        "military",
        "pulling hair",
        "bondage",
        "domination",
        "spanking",
        "submission",
        "choking"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/awakening-the-beast-pt-05-ghosts-and-demons"
}