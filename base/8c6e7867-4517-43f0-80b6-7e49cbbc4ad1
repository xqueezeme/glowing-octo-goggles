{
    "title": "Christmas in Zonei Pt. 10",
    "pages": [
        "\u00a9 Copyright jvaughn, 2014, 2015. All rights reserved. Copyright violators will be prosecuted to the fullest extent of the law. \n\nAuthor's Note: I am so sorry for the long delay between postings. Life got pretty crazy for a while. I'll post the rest of this first novel by Christmas. However, it's clear to me now that there will need to be a sequel. LOL! Everything ends up longer than I expect. \n\nHope you enjoy it. Please leave a comment, and don't forget to vote. \n\n--Jay \n\n***** \n\nChapter Seventeen \n\nSomething was buzzing around in Kim's belly and he wasn't sure why. They were out of danger\u2014at least immediate danger. Who knew what the future would hold, but they had an entire eleven days to themselves before they were due back at CorpSci headquarters for more questions and testing. He should be happy, excited, and starting to relax now, but his mind was a blur of scary images and memories from the past several days. His body was still on high alert and he couldn't identify the source of his anxiety. \n\nChristmas was on Friday this year. CorpSci always shut down the entire week between Christmas and New Years and was closed on Monday this year too. Kim had never had so much time off in his life: eleven glorious days to spend with Raeden in an apartment in Zonesee! \n\nAnd then they would discover that he could read minds and who knew what would happen to him? \n\nHe glanced up at Raeden. The big man was grinning ear-to-ear as he met Kim's eye. \"It's Christmas Eve, Kim. You have plenty of time to worry about the future later. Let it go.\" \n\nKim smiled back. You're right. I ... just ... there is so much to take in. \n\nRaeden's huge hand was wrapped around his, warm and comforting. Kim hurried to keep up with the giant's long strides. The pace seemed a leisurely stroll for Raeden. \n\nRaeden pulled him to a stop in front of a store window. Stylish men's clothing was on display. Kim did a double take before he realized the mannequins weren't real, just extremely lifelike. They were wearing cashmere sweaters in red or cream and dark wool slacks. One of them had a tie loosened about his neck that featured reindeer. They were posed in such a way that they looked like they were at a party ... relaxed, laughing, chatting. Myriad candles glowed on the mantle of what appeared to be a brick fireplace, complete with logs and real flames. An elegantly decorated tree added to the holiday motif. \n\n\"Too bad they're not still open,\" Raeden said, \"We need to go shopping soon and buy you some new clothes.\" \n\n\"Me?\" Kim teased, eyeing the flip-flops and sweatpants that Raeden still wore. \"What about you?\" \n\n\"I wouldn't mind buying a few things for myself, but Michelle said Randy had my stuff moved from storage into our new unit, so hopefully I'll have a change of clothes waiting for me when we get there.\" \n\n\"It's a damn good thing that this is all enclosed,\" Kim said, \"otherwise you'd be freezing running around outside without shoes.\" \n\nRaeden shrugged. \"The cold doesn't bother me. But I suppose it would attract attention.\" \n\nKim scoffed. \"It's well below zero out there and you just barely got over frostbite.\" \n\nRaeden grinned at him. Thanks for worrying about me. They started moving down the street again. \n\nIt wasn't a street as such, more like a very wide hallway. Raeden had told him that in Zonesee you didn't need to go outside unless you wanted to. There was an enormous network of internal passages that connected all of the buildings. They had already crossed two sky bridges\u2014glass-enclosed pedestrian walkways that ran between skyscrapers. Scooters and personal mobility devices (PMDs) were allowed on the pedestrian \"streets.\" Raeden had told him that taxi services were available at street level and flyers could also be hired on many of the rooftops to take you anywhere you wanted to go. \n\nThe stark difference between Zonesee and Zonei had Kim goggling at everything he saw. He had thought Zonee, where he'd worked, was luxurious. It wasn't even close to the opulence of Zonesee. \n\nThe street they were on was relatively empty, most of the shops having closed early for Christmas. The passageway was as wide as a two-lane street, with thirty-foot ceilings\u2014appearing to be a cloudy, slate-gray sky\u2014overhead. Kim noticed that the light, which appeared to come from the ceiling, had dimmed slightly as they walked, and now the old-fashioned street lamps came on, glowing with what looked like real gas-fueled flames. The area had a fairytale feel to it. It appeared as if they were walking through one of London's wealthiest shopping districts, circa 1750. Modern clothing and the occasional scooter or PMD zipping by were the only hints that they hadn't stepped through a time machine. \n\nThe amount of high-quality goods in the window displays was staggering. The street had been tastefully decorated for the season, with garlands of holly wrapping each of the street lamps and baskets full of poinsettias and other seasonal flowers that Kim didn't recognize hanging at regular intervals along the brick walls. \n\nKim paused to stare through a shop window at a miniature train that was chugging merrily along a track. An entire tiny village had been set up, complete with people and dogs. \n\n\"Oh, Raeden, look! There's even a miniature manger scene.\" \n\nRaeden smiled. The warm glow from the lights in the window illuminated the masculine planes of his face and seemed to bring out a twinkle in his eye. \n\nIt's magical, isn't it? \n\nBut Kim wasn't watching the train anymore. He was transfixed by Raeden's beauty. It certainly is. \n\nRaeden must have caught some of his thought, because his eyes shifted from the little train to Kim and widened slightly. The gleam in his eye became predatory and Kim felt lust roll off of him. \n\nHe thinks I'm sexy? Kim was startled by that idea. He'd never thought of himself as sexy. He was too small and too thin to be sexy. But clearly Raeden was attracted to him. He could feel it. \n\nHe didn't have time for any more thoughts, because Raeden cupped his chin, leaned over, and took his mouth in a possessive and passionate kiss. The world around them dropped away and there was only Raeden, warm and strong and dominating. Raeden's tongue invaded, tasting of pizza and beer and mountain spring water\u2014or like Kim imagined mountain spring water would taste, clean and slightly mineral. \n\nRaeden's tongue pushed past all of Kim's defenses, pulling a deep groan from his throat. Kim's tongue seemed to have a mind of it's own, dueling deliciously with Raeden's. Kim's hands tangled in Raeden's hair as he sought to get closer even; they were already somehow chest-to-chest. Kim was helpless to stop the moan of desire that came out of his mouth. Raeden took a quick gasping breath and plunged back in, ravishing him with a fierce hunger. \n\nJust when Kim thought he was about to pass out, Raeden pulled his mouth away, but kept his face close, resting his forehead against Kim's. They both panted for air. Kim realized that Raeden had picked him up at some point during the kiss. His back was against a brick wall, his legs were wrapped around Raeden's toned torso, and his arms had entwined themselves around Raeden's neck. \n\nGod, Little One, what you do to me! Raeden opened his mind to Kim and he felt the other man's insane desire. Raeden's cock felt too tight\u2014hot and heavy and ready to burst. Shivers of blazing need thrummed through his body every few seconds. Kim felt Raeden trembling slightly under his hands and realized how hard the big man was fighting to maintain control. Kim himself had never experienced such intense cravings. \n\nHe suddenly became aware of his own cock, pressing urgently against the zipper of his slacks. His underwear was already soaked with drool. He bit his lip to keep a whimper from escaping as his cock throbbed with yearning. \n\nI guess we'd better take this home, huh? Raeden chuckled into his hair. \n\nKim pulled his face away from Raeden's, glancing apprehensively up and down the street. It was nearly deserted. A couple walked along the other side, laden with packages, chatting happily with each other, ignoring them. A young man zipped by on a hover board. The scene was so different from Zonei, Kim felt like he'd been transported to another world. Even if Raeden hadn't been with him, he might have felt almost safe. There were no quents or derelicts or crazies. He supposed they must have crime, even in the upper zones. \n\n\"Is there even any crime here?\" he asked. \n\n\"It's rare,\" Raeden said. \"Crimes of passion, sometimes.\" Grinning, he waggled his eyebrows at Kim. \n\n\"I'm serious,\" Kim said, smiling. \"It just seems so peaceful.\" \n\n\"It's usually busier here, but most of the stores are closed now. Speaking of which, there's a little deli around the corner that I'm hoping is still open. Maybe we can pick up something for dinner.\" Raeden gave Kim one more quick peck before he swung him down and set him on his feet. \n\nKim looked down at himself. His cock was still a half-hard bulge\u2014not too visible in his loose slacks\u2014but a growing wetness on the fabric near the head gave him away. He quickly shifted his coat that he was carrying in front of himself to conceal his indiscretion. \n\nRaeden smiled sheepishly down at his own crotch. His cock was still tenting his sweats and they were also wet with precum. \"Not much I can do about myself,\" he said with a grin. Michelle\u2014or more like, Randy\u2014had not provided Raeden with underwear. The T-shirt that had been found for him was too small, hugging his chest and arms, showing off every exquisitely-defined muscle and riding up when Raeden moved to show a small strip of smooth skin at his waist. Kim had noticed that Raeden's scale pattern was no longer visible and assumed he was hiding it. \n\n\"Actually,\" Raeden continued on the topic of crime as they started walking down the street once more, \"there are cameras everywhere here.\" He gestured upward toward the ceiling. \"If anyone so much as puts a toe out of line, CorpSec is here immediately to haul them away.\" \n\n\"Really?\" Kim looked apprehensively up at the fake-sky ceiling which now showed the last vestiges of a pink \"sunset\" in what Kim assumed was the west. A shudder ran through him. \"I think I'd rather have the dangers and anonymity of living in Zonei than be watched all the time.\" \n\nRaeden shrugged. \"As long as you don't do anything illegal, there's nothing to worry about.\" \n\n\"I wouldn't be too sure about that,\" Kim said. He had the feeling that CorpSec didn't pay too much attention to the strict letter of the law when it came to detaining citizens that they deemed to be inconvenient. The presence of those cameras and the possibility that there were microphones around too to pick up their conversation kept him from voicing that thought. \n\n\"Oh, good! It's still open,\" Raeden said. He led the way to the door of a small store that had a staggering display of meats, cheeses, and wines in the window. \"They have great stuff here.\" \n\nA chime tinkled as they stepped through the doorway. Raeden grabbed a wicker shopping basket from a stack and held it in front of his crotch. \n\nThe proprietor of the store looked up from where he was wiping down the counter. His smile froze on his face as he took them in, replaced by a look of dark suspicion. With no effort on his part to read the man, Kim felt wariness and distrust emanating from him. \n\nKim glanced up at Raeden and saw him from the shopkeeper's viewpoint. The giant appeared unkempt. His blonde hair was too short to be disheveled, but it was dirty. He had several days' growth of beard shadowing his chin and dark circles under his eyes. Together with his ridiculously small clothes and flip-flops, Kim was sure he was way below the normal standard for patrons of that store. \n\nKim glanced ruefully down at himself. His clothes were of poor quality and starting to show their wear. His boots in particular were disgraceful: he had duct-taped one of the toes a few days earlier because the sole was separating from the faux-leather and he couldn't afford a new pair yet. His beard didn't grow at the rate that Raeden's did, but he imagined, with his messy hair flying around his face, he looked just as scruffy. \n\nRaeden gave the shopkeeper a dazzling smile. \"Hi Mr. Sanders. I'm really glad you're still open. \" \n\nThe shopkeeper's dark looked was replaced by one of shock. \"Mr. Dearborn! I haven't seen you since...\" His surprised expression changed abruptly to one of discomfort. \"I heard about your wife. I'm so sorry.\" \n\nKim was hit with a wave of sadness that rolled off of Raeden and just about knocked him off his feet. He drew in a deep, gasping breath. The emptiness and the grief that Raeden felt was unbearable. \n\nSuch pain! How could he live with such pain? Instinctively, he reached out and ran a comforting hand down Raeden's arm. \n\nRaeden was looking at the floor, his expression unreadable. Now he glanced up at him and Kim felt his loneliness fade a bit. Kim smiled at him, a small, supportive smile. \n\nThe corners of Raeden's mouth pulled up a bit. He looked up at the shop owner and simply said, \"Thank you.\" \n\nThe shopkeeper looked between the two of them, still obviously uncomfortable. \"Well, it's great to have you back. What can I help you with today?\" \n\nRaeden set the proprietor to work slicing prosciutto and coppa while he and Kim browsed through the rest of the store. Kim had never seen the likes of most of the food there. He'd had no idea that all of this stuff even existed. \n\nWhen they stopped in front of a shelf of fine chocolates, Kim picked up a bar and caught his breath. Oh my God, Raeden! You're not seriously going to buy one of these chocolate bars are you? The price is outrageous. It was more than Kim usually spent on a whole day's worth of food. \n\nRaeden shrugged. We have money, Kim. \"Have you ever tried one of those with the coconut in them?\" He nodded at the bar Kim still held in his hand. \n\nOf course not. I've never tried anything like any of these. \"No.\" \n\n\"Well then, we have to get it, of course.\" Raeden took the bar out of Kim's hand and tossed it into the basket. \n\nBy the time they were ready to checkout, Kim was having a difficult time keeping the incredulity off his face. He was sure his eyes were huge. The basket was filled with chocolates, fresh exotic fruits, a huge gourmet frozen lasagna, a large fresh salad, an assortment of odds and ends that Raeden had plucked off the shelves, several bottles of fine Italian wine and a bottle of something called prosecco. \n\nMeanwhile, the shopkeeper had assembled a vast array of Italian meats and cheeses, pickled vegetables, olives, and several loaves of fresh bread. As he was ringing them up Raeden placed a beautifully wrapped package onto the pile. It was labeled \"Panettone.\" \n\nIn spite of the fact that everything in the store, with the exception of some of the packaging on the foodstuffs, looked authentic to 1750's London, the checkout system was state-of-the-art. Kim watched with interest as the shopkeeper pressed a hidden button and a sleek panel slid out of a recess in the polished wooden counter. He waved a small device over each item and its price registered on the panel. \n\nKim steeled himself for the cost but couldn't help the gasp that came out of his mouth when the shopkeeper stated it. The total was more than he normally made in two weeks of work. Raeden! We ... we can't spend this much money! He protested, glad for the ability to communicate without speaking aloud. \n\nRaeden smirked. Watch me. \n\nHe moved his intel over the panel and nothing happened. Frowning he repeated the movement, with like results. After several tries he pulled his wrist up to his face to inspect the device. \n\n\"It's a temporary intel,\" he explained to the shopkeeper. \"I ran into some trouble and my old one was destroyed. Because it's Christmas Eve, I was unable to obtain a new one. I hope this loaner one's not defective.\" The temporary intel was attached to his wrist with a thick elastic strap. It was most unusual, but because of Raeden's shifting abilities, he needed a device that could expand to accommodate his growth. He had told Kim that his old intel was built to shift in size when he did. He was unable to use a standard-issue intel and thus the need for a loaner device until CorpSci was back from vacation and able to fit him with a new specialized unit. \n\nNow he polished the sensor plate with a corner of his t-shirt, adjusted the positioning of the device on his wrist, and tried again. After several more passes a chime sounded indicating that the charge had gone through. Kim sighed in relief and the shopkeeper's smile returned. \n\nSeveral minutes later, laden with sturdy cloth bags containing their purchases, they continued on their way down the street. Raeden seemed buoyant, happiness radiating off of him. Kim couldn't help but feel some of Raeden's joy, although there was still an undercurrent of unease running through him. Unwilling to examine the source too closely, he put it down to being unfamiliar with his surroundings. \n\nPresently they left the shopping district behind, taking a cleverly hidden elevator up to a higher floor. When the doors opened, Kim felt as if he'd stepped into the future. The hallway was as wide and tall as the one they'd just left, but there the similarities ended. The street was made out of some sleek, shiny material that reflected the lights around them. Purple and blue neon outlined the edges of the street as well as the doorways and windows of the buildings on either side. The ceiling overhead was black as pitch. The buildings appeared to be made of newsteel in shades of lilac and periwinkle, but Kim thought perhaps the steel was just picking up the colors from the lighting. \n\nNeon signs proclaimed the businesses that lined the street. They passed a drugstore, an insurance agency, a law firm, a bar, and some sort of office center before Raeden stopped in front of a set of doublewide doors. \n\nThey were imposing: solid, dull black and with no handles of any kind. Raeden ran his intel in front a panel several times, muttering under his breath when nothing happened. He adjusted the strap and held it in place while he tried again and the doors slid silently open. After they stepped through, the doors immediately closed behind them and they were in a small room with another set of doors before them. \n\nA female voice with an Australian accent welcomed them politely and requested that they look at the flatscreen display above the door in front of them. It appeared to be showing a typical government propaganda video. As they watched, it changed abruptly to a live feed of the two of them taken from the front. Kim had a deer-in-the-headlights expression and Raeden displayed his typical cocky grin. \n\nThey are doing a retinal scan as well as picking up the signals from our intels. Their computer system will also compare our images, heat signatures, heart rates, and so on with the ones on file for us. It will only take a few seconds, Raeden explained. \n\nHeavy security, Kim commented. \n\nIt's because we are entering the mod area. Once we're on the other side, I won't have to hide my abilities. \n\n\"Welcome back, Mr. Dearborn. Welcome, Mr. Takemoto. We at CorpSec wish you a pleasant and relaxing holiday season,\" the female voice intoned dispassionately as the doors in front of them slid open. \n\nYeah, right, Kim thought sarcastically. CorpSec doesn't give a shit about our holiday. \n\nRaeden led the way through the doors into a large, modern lobby. Colorful abstract art adorned the walls. There were several seating areas and what looked to be a coffee bar that was currently closed. A huge Christmas tree, decorated in silver, blue, and turquoise, took up one end of the lobby. Raeden led the way to a bank of elevators and pressed the button. ",
        "A few minutes later they stepped from the elevators into a yet another endless hallway. This one was of standard size, with doors spaced evenly on either side that presumably led to apartment units. Kim let out a mental sigh. He was so ready to be somewhere where he could sit down and relax. \n\nRaeden had started off down the hall, leading Kim by the hand, and now he paused and looked back at him. We don't have much further to go, but you can jump on my back for a ride if you want. Kim noticed that Raeden's scale patterns had returned. \n\nKim was about to say no, when he heard the sound of feet running up behind him. Heart rate skyrocketing, he whirled around, taking a step backwards. Coming down the hallway toward them at a fast pace was a giant man. Kim gasped involuntarily. The man was almost as big as Raeden. \n\nRaeden's big hands wrapped around him, pulling him back against his warm frame. It's okay, Little One. These are my friends Derek and Jeni. \n\nAt that moment Kim noticed a tiny woman riding on the large man's back, her long blonde hair flying out behind her. They were moving fast and were upon them in no time, skidding to a halt. \n\n\"Raeden!\" the man exclaimed, looking him up and down. Shock emanated from both of them. \n\nThe big man was wearing gym shorts and a tank top that showed off an impressive array of muscles and smooth bronzed skin with a faint scale pattern. His brown hair was damp and the chest and underarm areas of his tank were dark with sweat. The girl on his back was similarly attired, with a white sweatband holding her hair back from her delicately featured face. Her pale skin looked flushed and Kim detected faint tracings of scales on her bare arms and legs as well. Her huge blue eyes widened as she took Kim in, her gaze fastening on the possessive arm that Raeden had around his chest. \n\n\"I never thought we'd see you again, Rae,\" Derek said. \"I mean ... it's been since March...\" He trailed off, the implications of his words clear. \n\nOnce again Kim felt the sharp agony of the gaping wound that had been torn through Raeden's heart. But when he spoke, his voice was steady, sounding almost lighthearted, \"You mean, why am I still alive?\" \n\n\"Uh ... I didn't mean it exactly like that ... and I don't even want to ask how you are. I can't imagine\u2014\" \n\nRaeden cut him off. There was an edge to his voice that Kim was pretty sure he didn't intend. \"I'm doing much better, thank you. And I did almost die. Kim here rescued me, took me into his home, and cared for me. I've rebonded.\" \n\n\"Kim?\" the big man said, seeming to notice Kim for the first time. His jaw dropped slightly as he looked at him. \"Rebonded? With a man?\" He sounded horrified and Kim winced internally. \n\nA tinkling laugh broke out from the small woman on his back. Derek does it really matter whether man or woman? You should be happy for Raeden. \n\nBut a man? I can't imagine being with a man. \n\n\"But he's a beautiful man, isn't he?\" Jeni said aloud. \n\nKim realized with a mild shock that he was hearing them converse with each other through their bond. It felt wrong to listen in to such an intimate conversation, but he didn't know how to keep from hearing it. To him it was as if they were speaking aloud. \n\nBesides, you can't even imagine being with another woman either, can you? Jeni asked. \n\nWell ... no ... but... \n\nWhatever else Derek was going to say was lost to introductions. In spite of Derek's initial reaction, Kim did not sense any animosity from him, only surprise and a bit of discomfort. He thought maybe the discomfort was just from being aware of the huge loss Raeden had suffered and not wanting to think about it. \n\n\"We just got done working out at the gym,\" Jeni said, her words tumbling out quickly and her voice full of exuberance. \"We were running home to shower and change. Tanya and Eddie are having a party tonight. You should come, Raeden, and introduce your new bondmate to everyone.\" \n\n\"Thanks. I'd like to see everyone again, but we are just now getting home after being ... uh ... detained for three days at CorpSec headquarters. We need to clean up, eat, and rest. We haven't even seen our new home yet.\" \n\n\"Oh?\" Jeni eyed Raeden curiously and Kim felt that she had lots of questions. \"Which unit are you in?\" \n\n\"Fifty-six fifteen.\" \n\n\"Ooh! That's a nice one. Corner unit. How did you rate that?\" \n\nEven though Raeden was still behind him, Kim felt him smirk through their mindlink. \"We haven't even signed a contract yet, but Dr. Granger pulled out all the stops\u2014trying to make up for cutting me adrift to my own devices, I guess.\" \n\n\"I had no idea rebonding was even possible,\" Derek murmured, his mind obviously still wrestling with the concept. \n\n\"Nobody thought it was possible. It surprised the heck out of me too when I started having partial morfs.\" \n\n\"Wow! I can't wait to hear your story,\" Jeni jumped in. \"But we're running late. Can we call you in a day or two? Maybe we can get together for a meal and catch up.\" \n\n\"I'd like that,\" Raeden said. \n\nKim smiled at them, but was afraid that it didn't look sincere. He wasn't comfortable around strangers and the warrior pair was definitely intimidating. Kim wondered if they were going to start comparing him with Lyzel and he really didn't want to overhear any of those comments. \n\nJeni caught his eye and the smile she gave him was warm. \"I'm so glad you rescued Raeden, Kim. I'm looking forward to getting to know you.\" \n\nKim felt his smile slide into a real one. \"You too,\" he managed to say, and then they were off, running ahead of them down the hall. \n\nDo we still have time for shower sex before the party? Kim heard Derek ask over their mindlink. \n\nWe can be a little late, Jeni replied, reaching around to tweak one of Derek's nipples. \n\nKim's face flushed. Some things were best not overheard. \n\n\"It's strange being back. It will be odd seeing all of my old friends...\" Raeden trailed off and Kim heard him finish the sentence in his mind, without Lyzel. The sharp pang of loss was right there on the surface, making it hard to breathe again, and Kim felt Raeden wrestling to get his emotions under control and bury his pain. Raeden shifted his focus to Kim and the big man's hand, which had been around his waist, moved to palm one of his glutes. Kim felt a wave of desire wash over Raeden as heat flushed his own body from the mod's intimate touch. \n\nCan't wait to get you home, Raeden murmured, bending slightly to kiss the top of Kim's head. \n\nThey passed one other person going the opposite direction as they traversed the long hallway. He was tall, 6'3 or so Kim guessed, and was so obscenely muscled his head appeared to sit on his chest\u2014the muscles of his neck bulging off to either side of his chin. His biceps were as big around as his narrow waist and the muscles in his thighs were so big that his walk was bow-legged to accommodate them. He nodded to them politely as he passed, his eyes widening slightly when he noticed Kim, but he didn't say anything. \n\nThat's Bob. He's a Battle Boy. I don't really know him. We don't hang with them much. They all seem a bit pompous and not particularly bright, Raeden explained over their mindlink. Kim felt a wave of guilt wash over Raeden then. I'm sorry. I should probably try to get to know some of them better before I judge them, he added. They may be perfectly nice. \n\n\"Here we are,\" Raeden said a moment later, pulling to a stop in front of a door labeled 5615. He passed his intel over the state-of-the-art reader that was mounted next to the door. Nothing happened. \n\nFucking loaner intel. Why don't you try, Kim? \n\nKim was startled for a second. The whole afternoon had seemed unreal to him. It didn't seem possible that he had access to a luxury apartment in Zonesee\u2014that it was actually his own ... well, his to share with Raeden. He passed his intel over the reader and was pleasantly surprised when he heard the click of the lock releasing. \n\nRaeden opened the door and ushered Kim inside in front of him. \n\nKim barely got a glance at a huge room with picture windows all along two walls and a night cityscape spread out beyond that. Raeden slammed the door shut, swept Kim up into his arms, and deposited him onto the nearest flat surface\u2014the kitchen counter. He caught site of Raeden's eyes, wild with lust, just before warm lips crashed down on his and a strong tongue invaded his mouth. \n\nAll thought flew out of Kim's mind. His world became Raeden's slick tongue thrusting into his mouth, big hands touching his body everywhere, moving at lightning speed, stroking his arms, his sides, his legs. Raeden untucked his shirt with an impatient yank and one of his hands snaked underneath, rubbing across his stomach and chest. Kim shuddered with the sensation, electricity arcing through his body. \n\nRaeden's tongue explored, licking and tasting Kim's mouth, hot and furious. Raeden tweaked his nipple, and a whimper came out of the back of Kim's throat. He clutched Raeden's head, running his hand through the short-cropped hair, tracing the shell of his ear and then feeling the stubble along his jawline. His other hand drifted to Raeden's stomach, touching the smooth skin between his low-slung sweats and the too-small t-shirt. His senses were filled with the big man's scent, the sounds of his quick pants between kisses, the feel of his huge, muscular form pressed against him, possessing him, wanting him, taking him. \n\nHe felt hot all over, burning with a desire so intense he almost couldn't bear it. He could feel Raeden's hunger too, overwhelming in its urgency. The big man growled and shifted him so that their crotches were flush. Kim wrapped his legs around Raeden's torso as the bigger man began to grind against him, holding him close with a firm hand around Kim's waist as his hips started a fast rhythm. \n\nKim's cock was fully engorged, straining against his slacks. The friction Raeden was creating was too much. He felt the warning shocks of impeding orgasm racing through him, and then he felt something that stopped it cold. \n\nRaeden's cock was enormous. He could feel the massive, iron-hard shaft thrusting against his own cock, and what should have been ecstasy turned into terror as a vision of Raeden forcing his monstrous cock into his own small channel suddenly overwhelmed him. \n\nOh my god! He wants to have sex with me and I can't ... I can't! Kim swallowed back a whimper of terror as cold fear spread over him, extinguishing the flames of his passion like a bucket of cold water. \n\nChapter Eighteen \n\nRaeden felt terror ripple through Kim and it pulled him quickly out of lust-fugue. His senses automatically went on high alert, trying to detect the cause of his mate's fear, even as he stopped his hip movements and pulled out of the kiss. Sensing no immediate danger, he kept his face close to Kim's, panting into his delicate ear as he tried to beat down his raging libido. \n\nKim's fear eased a notch, although his anxiety level was still through the roof. That's when it hit Raeden that Kim was afraid of him. With that realization came a deluge of hurt. Raeden knew that, prior to meeting him, Kim's only sexual experiences had been terrifying and painful; it was perfectly natural for him to be afraid. But Raeden couldn't help his emotions. He was crushed that Kim didn't trust him. \n\nHe doesn't know you well. You've only been together six weeks. Lyzel and you had spent most of your lives together before you even started having sex. This is all new for Kim and he doesn't trust easily. \n\nIn spite of his internal pep talk, he was flooded with a deep sense of loss. He had lost the close bond that he'd had with Lyzel. It felt as if a critical part of him\u2014an arm or a leg or an eye\u2014had been cut off. He wasn't sure he'd ever be able to reach the same level of intimacy with Kim. He closed his eyes against the burning that signaled oncoming tears as gut-wrenching pain tore through his heart. He heard Kim gasp and, realizing that his new mate was feeling his emotions, he tried to focus on Kim instead of himself. \n\nHe licked slowly along the shell of Kim's ear, taking in his comforting scent, slowing his breathing and his heart rate. Kim stroked the side of his face, his anxiety now almost completely replaced by concern. He cares deeply for me. That thought eased his hurt and sorrow more than his mind's monologue had. \n\nHe pulled away enough to look Kim in the eye. The beautiful dark eyes met his, full of worry for him and guilt. \n\nHe feels guilty for not wanting sex with me? Raeden didn't know how to fix that. He had already told Kim he wouldn't hurt him, but words didn't seem to be enough. He would have to convince him with his actions. He would take it slowly, seduce Kim gently\u2014even if it was a year before they had intercourse, he wouldn't take him when he was afraid. His libido whimpered pitifully at that thought. \n\nIt's Christmas Eve. We shouldn't have all this angst. So rather than bringing up and talking about their feelings, Raeden danced around the subject. \n\n\"I'm sorry I attacked you, Kim.\" He forced a grin. \"You smell so damn good and ... it's been a very long time for me.\" \n\nKim smiled at him sweetly and ran his finger across Raeden's lips. \"I can't imagine I could possibly smell good at this point. I really need a bath.\" \n\n\"Or a shower,\" Raeden said. \"I'm sure there's a shower here somewhere.\" \n\nAs if suddenly realizing where they were, Kim looked around and his jaw dropped open. He sat up abruptly, his head swiveling back and forth to take everything in. \n\nThe apartment was definitely impressive even by Raeden's standards. The main room was large enough for three distinct areas: kitchen, dining, and living. Two walls of the great room were taken up by windows, and a glass door opened onto a sizable balcony that wrapped around the corner. On the fifty-sixth floor, they were higher than most of the buildings around them and the night cityscape view was spectacular. \n\nThe apartment was furnished with a white fabric couch and chairs, and matching glass and steel coffee and end tables that Raeden didn't really care for. They looked fine, but would be difficult to keep clean; he much preferred faux leather and real wood. And the d\u00e9cor\u2014a few paintings on the walls, lamps, assorted knick-knacks, and rugs\u2014while tasteful, was non-descript. \"We can get our own furniture. This is all probably rental stuff,\" he said. \n\nKim, still agog, taking it all in, did not reply. \n\nThe bones of the apartment were beautiful. The floor looked like a grey stone of some sort, polished and veined with white. There was a white brick fireplace along one wall. The kitchen countertops were pale gray, made of some modern material, the appliances shiny black and state-of-the-art. The fixtures were modern and sleek, and all the basics appeared to be there: coffee maker, microwave, toaster, dishtowels and so on. Raeden was sure the cupboards held dishes and pots and pans. \n\nThe dinning room table seated six but Raeden observed that there was room for a much larger table. The center was graced with a large vase of fresh flowers in Christmas reds and whites. Reluctant to leave Kim's side but curious about the tag hanging off of the flowers, Raeden stepped over to read it. \n\n\"CorpSci sent us flowers and wishes us Merry Christmas\u2014probably Michelle's doing.\" A full-sized, real-pine Christmas tree had been set up in the corner where the window walls met and Raeden noticed there were a few wrapped packages under it. Now he wandered over and checked these out too. \n\n\"They're from Randy and Michelle,\" he said. \"That's awfully sweet of them. I wonder when they had time to do all this. Michelle probably had Randy running around all day. We'll have to do something nice for them in return. Randy probably expected to have the day off and Michelle came back from her vacation to rescue us.\" \n\n\"Wow! I can't believe this is all ours!\" Kim said. His voice held a hushed awe that reflected the expression on his face. \n\n\"All ours, Little One, except...\" Raeden frowned as he glanced around. Surely they wouldn't have ... but of course they did. He looked at Kim. \"Do you mind if I switch to lizard form for a few minutes? I want to clean the bugs out of this place. It'll be in our contract that they can't do that, but we haven't actually signed a contract yet and I wouldn't put it past them to try.\" \n\n\"Bugs?\" Kim echoed, and then his eyes widened. \"Oh, you think they're spying on us?\" A visible shudder ran through him. \"No, I don't mind\u2014please do. But why lizard form?\" \n\n\"I'll be able to smell whatever electronics they might have hidden here, no matter how tiny or discreet. It'll only take a minute.\" \n\nKim, still sitting on the kitchen counter, nodded. \"Okay.\" \n\nRaeden lost no time in slipping off his clothes, shifting to lizard form, and rampaging through the unit. By the time he was done, his anger was barely in check. He shifted quickly back to human form, where he had better control. \n\n\"Fucking goons!\" he grumbled as he dumped the last of the of electronics onto the pile that he'd made on the kitchen counter next to Kim, who had stayed put and watched him with wide eyes. \"I can't believe they thought they could get away with this. Fucking pervs even had cameras set up in the bedrooms and bathrooms.\" \n\nHe looked around, opening cupboards and drawers until he found a box of plastic garbage bags. Sweeping the pile of expensive electronics into the bag, he went to the disposal unit built under the kitchen counter, pressed the button for recycle, and dropped the bag inside. With a swish it was swept away to the recycling center somewhere in the depths of the high rise. \n\nKim's eyes were wide. \"You won't get in trouble for removing those?\" \n\nRaeden let out a low growl. \"I will not live with someone spying on me in my own home. If they don't like it, they can kiss my ass. I'm sure regular citizens end up with hidden bugs or whatnot in their units, but none of the mods will put up with it. Most of us can detect them easily.\" \n\nHe slid his arms around Kim and kissed his forehead. \"The shower in the master bath is big enough for two.\" He couldn't help waggling his eyebrows. \n\nFortunately Kim's reaction was to let out a small laugh. So he's not afraid of the idea of being intimate with me, Raeden guessed. He's just afraid of the act itself. I can work with that. \n\nKim pulled slightly away and glanced down at Raeden's cock, which was half hard, lying gently against his thigh. \"Umm ... you don't have a cock when you're in lizard form?\" \n\nRaeden laughed. \"Yes, I do. But most of the time they are retracted, like a lizard's. Unlike a lizard, I actually have control over when they emerge.\" \n\nKim's eyebrows flew up. \"They?\" \n\n\"When I'm in lizard form, I have hemipenes. I can show you sometime if you're curious. They are rather ... bizarre-looking.\" \n\nRaeden didn't know if Kim knew what hemipenes were but he obviously got the concept. His emotions were an odd mix of curiosity and trepidation. \n\n\"Did you ... did you and Lyzel ever make love in lizard form?\" Kim asked. Raeden could sense another strong emotion, but couldn't quite identify what it was. \n\n\"We tried it, of course. I wouldn't call it making love, though. For lizards, it really is just fucking. We do retain some of our human mind while in lizard form, but unfortunately, lizards don't really enjoy sex. It's just an instinctual act for them. So we only tried it once\u2014it really wasn't fun\u2014not the way it should be.\" \n\n\"Oh,\" Kim said. Raeden sensed his relief. He's comparing himself with Lyzel and worried that he won't measure up. ",
        "\"Don't worry, Little One. You have everything I need and more.\" He smiled into Kim's eyes and was relieved when Kim's worry eased. Needing to be close to his mate, he nuzzled Kim's cheek. This led to kissing down his lovely long neck. When he got to the hollow of his collarbone, his fingers sought the buttons on Kim's shirt. He took his time, undoing them one by one and tasting the luscious skin on his mate's chest as he went. The young man shivered under his touch. \n\nWhen he finished with the last button he straightened and slid the shirt off of Kim's shoulders. \"I'm naked. It's only fair that you get naked too,\" he teased. Kim smiled at him shyly and Raeden feasted on the sight of his slender, toned arms and torso. He didn't have a classic six-pack but his narrow hips seemed to V toward his groin, enticing Raeden to want see what his slacks were hiding. His smooth skin was lovely and pale, his nipples rosy temptations, stiff and erect. \n\nRaeden ran a light hand down Kim's chest, loving how the younger man's skin pebbled with goose bumps from his touch. He circled an areola and Kim's head dropped back, his full lips parting with a low gasp. Raeden gently brushed the nub with his thumb and Kim pulled his bottom lip between his teeth, biting. \n\nHow can I resist such a responsive lover? \n\nRubbing his thumb over one hardening point, he bent to lick its twin, pausing to enjoy the slightly herbal scent that wafted from Kim's skin. \"Kim ... love,\" he murmured in awe, then took the nipple into his mouth, sucking gently. \n\nKim responded with a loud whimper and a thrust of his narrow hips. Raeden could tell that he was trying not to react, fighting to hold himself still and quiet, but the wave of want that crashed over him swept away his control. Raeden loved making Kim lose control. He continued to suckle one nipple while he pinched the other gently. As all of Kim's defenses broke down, the tiny man began humping into Raeden's stomach, his legs wrapping around his torso, and his mouth letting out a string of piteous moans and whimpers. \n\nThe heat of desire swept through Raeden's body like a tsunami, urged on by his lover's impassioned cries. His cock rose to full stiffness, butting up against Kim's ass cheek. As Kim rocked his hips, rubbing his balls and the base of this cock wantonly against Raeden's taut stomach, the big mod's cock was treated to the resulting friction of Kim's still-clothed butt moving against the head of his cock. Precum spewed forth, making a sticky trail across Kim's slacks. \n\nAs wild as Raeden was with desire, he was still conscious of his lover's fragility. He didn't want to scare Kim again, so he took things down a notch, kissing up Kim's chest to suck at the hollow of his throat again, while the hand that had been teasing the younger man's nipple slid around to rub the small of his back in a gentle rhythm. \n\nKim let out a long low groan. Raeden smiled into his neck as he heard the other man panting, obviously fighting for control. \n\n\"Oh my God, Raeden,\" Kim said with a gasping breath. \"I ... I had no idea my nipples were so ... fuck!\" \n\n\"Erogenous?\" Raeden suggested, pulling away enough to look at his lover. Kim's eyelids were heavy with lust, his eyes black as black, his pupils blown with lust. His skin was flushed and dewy with desire. Raeden almost groaned aloud as he fought to keep himself from pushing for more. He had never seen Kim looking so sexy. \n\n\"Shall we check out the shower?\" he asked, his voice rough with need. How on earth am I going to restrain myself? \n\nKim nodded dreamily, as if not quite awake. \n\nRaeden swept him off the counter into his arms and whisked him down the short hallway and into the master bedroom where he set him down gently. This room was also furnished and decorated with mostly standard furnishings. One full wall was taken up with windows and there was a small balcony off of it as well. \n\nKim stared at the bed. \"It's huge!\" \n\nRaeden grinned. \"It's mod-sized.\" \n\n\"My little unit must have seemed so dingy to you.\" \n\nRaeden slid his arms around the small man's chest, pulling him gently back against him. He kissed the top of Kim's head. \"You had everything you really needed, and I was in no condition to even notice.\" He chuckled ruefully. \"The only thing that drove me crazy was the lack of drugs, alcohol, and meat. I'm sorry I was such an ass when we first met.\" \n\n\"You really were,\" Kim agreed. \n\n\"Hey!\" Raeden protested, running his fingers down to Kim's taut stomach, tickling. \n\nKim squealed and tried to squirm away. Raeden boxed him in with his arms, still tickling lightly. Kim retaliated in kind and they both dissolved into fits of laughter, eventually ending up tangled together on the bed, breathless. \n\nWith Kim on top of him, squirming and laughing, Raeden's cock immediately took notice. Raeden's laugh was replaced by small groan as he wrapped his hand in Kim's hair and pulled the other man's face close for a scorching kiss. His whole body was instantly on fire as white-hot need coursed through his veins. He could sense Kim's emotions. There was a small bit of anxiety there, but the younger man was burning with lust as well. \n\nDetermined to take things slowly, Raeden pulled out the kiss before he began humping into Kim. He gazed into Kim's lust-heavy eyes, admiring the planes of his face and his plump, kissable lips. Reaching up, he tugged the tie out of Kim's hair and combed through the plait with his fingers until the ink-black hair spilled over Kim's shoulders and teased Raeden's chest. \n\n\"You're the prettiest man I've ever seen,\" he whispered. \n\nKim looked startled and maybe even a bit confused, but Raeden felt the other man's pleasure at his words. A gorgeous blush spread across Kim's face. He opened his mouth to say something, but Raeden put a finger on his lips. \n\n\"Don't deny it. Just accept it.\" He moved his finger so he could capture the perfect lips again in another heavenly kiss. Kim's hair fell about them like a black silk curtain, sheltering them from the outside world, from the painful past and from the uncertain future. There was only this place and this time and the sweetest, smartest, most beautiful man in the world in his arms. Raeden sighed blissfully into Kim's mouth. \n\n***** \n\nKim felt like he was dreaming. Things like this did not happen to him. He would surely wake up soon, alone in his old unit in Zonei. Meanwhile, he should enjoy the dream, because the most gorgeous man he'd ever seen was naked, lying partially on top of him, and gazing at him with undisguised lust. \n\n\"Shall we go check out the shower?\" Raeden asked. \n\nKim shifted to sit up. \"Yes, I definitely need a shower ... yesterday.\" \n\nRaeden stood up, a seven-foot tall god of perfection. He held out his hand for Kim and helped him out of bed. How can someone so big and fierce be so gentle? Kim wondered. As Raeden led the way into the bathroom, Kim's eyes were drawn to the twin globes of his ass, which looked soft and hard at the same time. His hand seemed to have a mind of its own and it reached out to touch, to feel whether that enticing butt was as firm as it looked. It was warm and pliant under Kim's hand and he couldn't help but squeeze it, reveling in the feel of those massive muscles. \n\nRaeden grinned at him as they entered the bathroom. \"You're a butt-man?\" \n\n\"Most definitely,\" Kim replied and then caught sight of Raeden's thick cock. It wasn't fully hard, but it was rapidly getting there. Unlike Kim, Raeden was cut, showing off a ruddy mushroom tip. Prominent veins ran down the front of his cock, leading the way to a set of heavy balls. His cock unfurled to stand proud, leaning slightly to the left. Once again, Kim's hands seemed to have a mind of their own. He reached out and grabbed the obelisk, wrapping his fingers around the hot shaft and realizing that his hand was barely big enough to go halfway around it. \n\nThe thread of unease this caused was derailed by the sound that Raeden made. Kim looked up at him and was enraptured by his face. His eyes were at half-mast, his lips parted, and the sound of pure need that came from his mouth flipped Kim's insides over. \n\n\"Kim...\" Raeden groaned. He looked like he wanted to say more, but he swallowed instead. Kim watched his Adam's apple bob as he drew his hand slowly up Raeden's fat cock. \n\n\"Uunnhhg!\" Raeden said. \n\nKim glanced down at the huge member in his hand and saw precum pooling at the slit. He slid his hand up and ran his thumb over the tip, rubbing the warm viscous liquid around the head. Raeden let out another primal sound. \n\n\"Kim!\" Raeden cried out. \"I ... stop!\" Kim had started moving his hand rhythmically up and down Raeden's shaft, and now he stilled, looking up at the big man, wondering if he'd done something wrong. \n\n\"I'm gonna...\" Raeden panted a few times and took a deep breath, pulling himself together. \"It's been so long ... I almost came. I don't want to come quite so quickly.\" \n\n\"Oh,\" Kim said, a smile pulling at his lips. He pulled his hand away from Raeden's cock and licked the precum off of his thumb. It was salty and bitter and oh so delicious. \n\nRaeden let out another low groan as he watched Kim. \"Oh my God! You are so hot!\" \n\nKim felt warmth creep into his cheeks. Biting back the protest that came to his lips, he smiled affectionately up at the big mod. At that moment, he realized that his pants were uncomfortably tight. Feeling self-conscious of his tiny thin body next to Raeden's huge muscle-bound one, he nevertheless toed off his shoes. Pulling off his dirty socks, he tossed them aside and then noticed that the stone floor was warm under his feet. \n\nFor the first time, he looked around at the bathroom. It was huge\u2014almost as big as his main room at the Shangri La. There was a Jacuzzi tub in the corner that could easily hold four\u2014well maybe only two if they were Raeden's size. The glass-enclosed shower was like a room of its own, with multiple showerheads, a hand-held sprayer, and a control panel that looked complex enough to run a small ship. \n\nThe floor was white stone and the tub looked like it was made out of black granite, polished and flecked with gray. The floor of the shower was out of the same material. Along one wall was a long black counter with two deep sinks in teal porcelain. The toilet was also teal. Sets of fluffy teal and black towels were neatly stacked on a shelf above the toilet and there were teal bath mats in front of the shower and tub. \n\n\"Wow!\" Kim said. He felt too overwhelmed with the space and the fixtures to come up with anything more intelligent to say. \n\nRaeden chuckled low. \"It is nice, isn't it?\" \n\n\"The floor is warm.\" \n\n\"Yep.\" Raeden's grin became predatory and he reached for Kim, sliding an arm around his waist as the other went to the snap on his slacks and undid it with practiced ease. His voice was deep and husky when he said, \"These need to come off.\" He tore open the tab closure, a twenty-second century invention that had all but replaced zippers, and slid his long fingers inside. \n\nKim's cock jumped eagerly toward Raeden's fingers, which stroked up and down it, outside his cotton briefs. The touch was exquisite, sending waves of pleasure through Kim's body. Raeden's thumb found and circled the head, causing fresh spurts of precum to further drench Kim's already soiled briefs. \n\nKim found himself panting. He felt dizzy. Suddenly he needed his slacks off! He grabbed the waistband and yanked both his pants and his briefs down to his knees in one quick move. His cock bobbed out in greeting, a fleck of precum flying off of it. \n\nRaeden took a step back and stared at him. Kim didn't look at Raeden as he self-consciously stepped out of his clothes. Once he was standing there naked next to the giant, he felt his face flushing again in embarrassment. He looked at the floor, hoping that his long fall of hair would hide his reddening cheeks. \n\n\"Kim...\" Raeden said softly as he reached out and, putting his fingers under Kim's chin, tilted his face up. Kim looked into Raeden's wide blue eyes which were smiling at him with affection. Kim's discomfort faded as he felt the very real emotion of love radiating from Raeden. The big mod's gaze slid away from his eyes to peruse down his chest and torso, pausing to take a long look at his groin. Kim thought he should have felt self-conscious again, except the expression on Raeden's face and the emotions he was emanating were pure appreciation and desire. \n\n\"You are exquisite,\" Raeden said. \n\nStill not comfortable with praise and with the intensity of Raeden's gaze, Kim stepped past him into the shower. \"And dirty,\" he said. He paused in front of the panel. \n\nRaeden stepped up behind him and pointed out buttons, each of which had a unique icon on it. \"This one turns the left showerhead on.\" He demonstrated and cool water began to pour out of the fixture, splashing on Kim's lower leg. \"This controls the positioning of the nozzle. This sets the temperature\u2014press this to switch the temperature setting between the two showerheads and the sprayer. How warm do you like it?\" Raeden pressed the up arrow and the digital readout began to climb even as Kim felt the water on his leg grow warmer. \n\n\"I don't know. I've never taken a warm shower before.\" \n\n\"Never\u2014?\" Raeden looked at him aghast. \n\nKim shrugged. \"We didn't have hot water at the Shangri La and I've never showered anywhere else.\" \n\n\"Oh...\" Raeden ruminated on this for a second. \"You took cold showers?\" \n\n\"Only when it really hot outside\u2014once or twice a year maybe. Otherwise it was always baths, which were usually lukewarm because of the expense and time involved in heating up teakettles full of water.\" \n\n\"I've always appreciated a warm shower, but I never realized what a luxury it was,\" Raeden said. \n\n\"Yeah, probably most of the population doesn't get to take hot showers.\" \n\n\"You're right.\" Raeden's brows had furrowed into a frown and Kim felt his dark thoughts. \n\n\"But that doesn't mean I'm not going to enjoy taking one right now,\" Kim said, stepping under the spray and groaning with pleasure as the hot water hit his skin. \"Wow!\" His mind immediately seemed to slip into a dreamlike state. \"Better than I imagined.\" Kim closed his eyes. \n\nHe heard Raeden chuckle. \"I'm going to go put the food away\u2014I left it lying on the floor by the front door\u2014and then I'll be back to join you. Enjoy yourself.\" \n\n\"Oh, I will,\" Kim said with a smile. He still hadn't opened his eyes so was startled when Raeden's big hand slid behind him, pulling him close to his massive body. One of Raeden's hands went to his butt and squeezed; his other went to his hair and pulled, not hard enough to hurt but hard enough for Kim's face to snap up. His lips were taken in a fierce kiss, with a hot tongue thrusting down his throat in an aggressive, possessive move that almost had Kim swooning. \n\nAll too soon Raeden let him go and stepped out of the shower. \"I'll be back as soon as I can.\" \n\nKim couldn't wait."
    ],
    "authorname": "roughboy18",
    "tags": [
        "shifter",
        "dystopia",
        "scifi",
        "big blonde",
        "small asian"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/christmas-in-zonei-pt-10"
}