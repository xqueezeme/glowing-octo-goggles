{
    "title": "A Almost Perfect Awakening Ch. 25",
    "pages": [
        "FOREWORD\n\nLiterotica.com issued a challenge to its volunteer writer's to create stories for as many categories as possible. The following chapter is part of a single novel length story relating a journey of awakenings, discovery and growth involving a small group of people. For your entertainment, and mine, I'll be submitting chapters into at least 17 different story categories. I don't believe anything like this has been tried here before.\n\nNew chapter(s) will be submitted almost daily. By clicking on a blue Wm_Sexspear, you'll be taken to my Profile; at the bottom of the page you'll find a list of all the currently available chapters. THIS SHOULD MAKE IT EASY TO READ THEM ALL, IN SEQUENCE, WHICH IS HEARTILY SUGGESTED so the reader can follow the story line, character development, and catch the inside jokes.\n\nI can promise those readers who are familiar with my work that you'll find a ton of erotic reading that should appeal a wide variety of tastes, even though I intentionally attempted to have at least one turn on for almost anyone. This saga features mostly caring, even romantic sex, but it'll occasionally flirts mildly with a \"fetish\" so a given chapter will genuinely qualify for that category.\n\nMany of these chapters could go into many different categories. For example, in Chapter 1 there's a small amount of male-male sex because a number of ladies have said it turns them on to picture two guys, just like the idea of girl-girl sex is arousing to many males. Yet Chapter 1's purpose is to supply important background regarding the heterosexual development of 2 young men, so I'd hope a totally hetero or gay reader could to relate to and enjoy this chapter.\n\nChapters 2~4 features voyeurism by 2 inexperienced young males and exhibitionism by a female, but also includes experimental lesbianism between lonely sisters. So, don't judge my book by its multitude of covers. If you enjoy sex, there should be something [actually a lot of somethings] in it for everyone. ;-)\n\nFinal example, Chapter 50 will be under Mind Control. Unlike many entries in this category, it fits in there because circumstances allow a female to have her every sexual whim acted out by 4 other people. \n\nFan mail, well-intentioned questions, and constructive criticism are welcome; I do my best to respond when an e-mail address is supplied. Hate mail is deleted without being read - life is too short. \n\nThank you. W_S\n\n\nThis story is protected by (c) copyright and may not be duplicated, reprinted, copied or placed on any Internet Website without permission of the author. All rights reserved.\n\n* * * * * \n\n\nChapter 25: Four New Lovers Share A Little Fun\n\nSunlight flooded the room. Even through my eyelids I could tell it was mighty bright, so I kept them closed. Gradually my mind got with it enough to piece together all the W's. Where was I? What time is it? Who was in bed with me?  When can I nail her again?\n\nChoosing to lie still, I enjoyed the feel of Lynn's fingertips drifting across my torso, face, and through my hair. When I finally opened my sleepy peepers, Lynn was gazing into them. I began to melt. Life was good.\n\nThe house seemed pretty quiet, so I gathered Beth and Jim weren't up and about yet. Lynn bent to kiss me, her breath smelled soooo fresh. She must've just been to the bathroom to brush her teeth. Afraid about my breath now, I turned partially away, mumbling through pursed lips about needing to pee ever so badly. Scooting off the mattress, I said I'd be right back. Before I could get around the bed, Lynn was on her feet, arm extended, ready to hold my hand.\n\nTaking my paw, Lynn led me to the bathroom grinning like a fool. Closing the door behind us, she turned, flashed a wicked grin, then informed me she planned to aim my gun while I peed.\n\nImmediately I tried to object, feeling terribly shy about this proposed bit of business. Persistent, Lynn reminded me that I'd watched Beth pee. I countered that I hadn't asked to aim her pussy at the bowl. Since I made her laugh, I hoped I'd won the argument.\n\nI lost. Of course I lost. When a fox seriously intends to put her hand on your penis, how long would any guy resist? Suppose there was never a doubt Lynn was going to win, especially since the longer I didn't give in, the worse I had to go. Running up an emotional white flag up my desperate pole, Lynn wrapped herself around my side becoming my 'right hand' girl.\n\nAs badly as I needed to tinkle, it was still tricky relaxing enough to let the flow go. It was almost as good as sex when the long held, warm urine finally began to trickle through me. My not so subtle groan of relief made Lynn giggle, which made her aim wiggle, which made me laugh, which made her giggling wiggling all the worse. Amazingly, I pretty much hit the water, but each near piss miss rekindled our tittering.\n\nSince I had taken a leak around 3AM, I could tell Lynn was beginning to wonder when I'd ever stop. Trickle, trickle, trickle... trickle... trickle, drip... drip. At long last I finished, but warned her if she wanted to help a guy take a leak, she had to learn how to squeeze out the last drops then shake my cock. A number of giggles latter I was well shaken, and maybe a bit stirred.\n\nI asked Lynn if she wanted to brush my teeth for me as well. Pinching my butt, Lynn turned to wiggle hers at me, then told me over her shoulder that I'd know where to find her if I was feeling sexy. My teeth got brushed, my face got washed, along with my dick and armpits. Ten seconds after my hair was combed, I was in Lynn's bedroom again, maybe two minutes from the time she'd left the bathroom.\n\nFlying back onto Lynn's bed, I scooped her into my arms; we kissed and fondled each other for several minutes. Even though we were both fairly aroused, Lynn begged off going further so we could talk alone before Beth and Jim got up. We'd heard Beth let out a yelp, so it might be soon.\n\nLynn reminded me there were animals and morning chores to do. It wouldn't take long, but farm animals don't like their routines ignored. Twiddling my fingers, Lynn watched my eyes closely while she explained how they'd planned today to be Foursome Fun Day. \n\nHer voice took on more serious tone. \"To follow the plan, I need to spend tonight with Jim. Beth wants very much to spend the night with you.\"\n\nI tried to act like 'hey, no big deal', but I hadn't really thought that far ahead. Lynn saw through my brave front. She gave me a very deep, very loving, very special kiss.\n\nEnding our kiss, Lynn moved so we were cheek to cheek. Every word was laden with affection when she spoke again.\n\n\"Larry, it's too soon for us to pair off. We all four need to get to know each other. You won't really get to know Beth if you and I are joined at the hip. I think it's important for Jim and I to spend time together, especially now. Having sex is so much fun; it's going to be a while before we really have any idea what we're feeling. I think we have something wonderful here. Still, I worry that if we don't share everything for long enough to know what we want, that someone will feel cheated or jealous, then we'll lose it all.\"\n\nDigesting her thoughts, I grew quiet. After a few moments I took her hand, kissed her palm. Giving her hand a squeeze, I said \"There's a brain I greatly respect in your very pretty head.\" \n\nGiving me a look that made my dick twitch, Lynn demurred, \"We'll have a lot of fun today. And I promise I'll give you something extra special before we say good night.\"\n\nI damned near fainted.\n\n\"Another thing to think about lover,\" Lynn continued \"If I know Beth, she's already planning how to make your toes curl tonight.\"\n\nFalling on my back I groaned. Lynn giggled, all the while covering my face and neck with little kisses.\n\n\"Animals are hungry, so am I, let's eat.\" Standing, Lynn took a couple tiny steps towards the door, but waited until she knew I was looking her way. The instant my eyes locked onto her tush, she made her butt do a serious tick-tock sway as she actually walked out.\n\nShouting \"Mongo want women!!\" I ran after her. Lynn shrieked as she tried to escape my onrush. Beth screamed as she stepped into the hallway only to be run over by her sister. Lying in a heap on the hall floor, the naked girls were soon making each other laugh hysterically.\n\nAs he reached the doorway, Jim and I made eye contact. Moving a couple steps ahead, we shouted, \"Last ones downstairs have to make breakfast.\" We took off. \n\nSure, they called us little shits, and a few other names, but they constantly smiled as they served up toast, cereal, and juice. Foolishly I offered to give both girls a really big tip later. They promptly kept me humble.\n\n\"It's not that big a tip is it Beth?\"\"\n\nNay, it OK, but I'm sure a girl could get a bigger tip somewhere.\"\n\nI noticed Jim grinning. \"What are you smiling about?\" I mockingly threatened.\n\n\"Easy, pal. It's not what you think. I was actually thinking about how much I like dining at a topless restaurant.\"\n\nTo which I shot back \"Oh, I don't know. I'm sure a guy could find bigger teats somewhere.\"\n\nI successfully ducked one piece of toast; the other one caught me between the eyes.\n\nBefore I got killed, or literally found an egg or more jam on my face, I offered \"But you'd never find better looking teats than here I'm sure.\"\n\nApparently I redeemed myself. After whispering to each other, the girls stood up, announcing it was time for dessert. Beth moved beside me, Lynn got cozy with Jim. Beth ran her tongue down my throat, and joy of joys, her hand up my penis. Abruptly they switched; Lynn served me another order of the same. The moment we both had boners, Beth quipped \"Well those animals are done, time to take care of the rest of the farm.\" The girls left us dangling as they flew upstairs.\n\nJim and I slowly headed up the stairs after them. Already dressed, the girls intentionally rubbed by us on the landing. In passing, Lynn teased us with \"The sooner the chores are done, the sooner we might be able to help you poor boys with your 'little' problems.\"\n\nI reached the barn a minute ahead of Jim.\n\nHow arousing do you think it was looking at Beth and Lynn that morning? They had on T-shirts and jeans. I'd stare at Beth's tush as she bent over, or Lynn's braless breasts as they rolled around inside her shirt. I kept thinking to myself, \"Wow, I know what she looks like naked. I know what her butt looks like under that material. I've seen and sucked on those breasts. My penis was inside her body not long ago.\" Heady, heady stuff. I was lucky I didn't hurt myself by being so totally distracted. \n\nChores got done quickly, in spite of me I suspected. Twice I'd walked into things that were hard to miss.\n\nThe girls held hands walking back to the house. Beth taunted us with \"Anyone one willing to wash my back.\" as she headed upstairs.\n\nOnce in the bathroom, I reached to remove my T-shirt. \"Let me help you with that.\" offered Beth. I leaned forward so she could pull my hay covered T over my head. Whoosh, it was gone.\n\nPlanting herself in front of me, she lifted her arms inviting me to bare her to the waist. Gladly I accepted the invitation to see her long nipples; up, off, and swish into the hamper flew her shirt.\n\nStepping towards me, Beth smiled as she undid my snap, then slowly pulled the zipper down. Pushing her bared breasts into my chest, Beth tauntingly slid her hands up my front all the way to my shoulders, over them, then all the way down my back onto my butt checks. She ran her hands around inside my pants until they fell to my knees. Keeping her palms on my cheeks, Beth slid her breasts down my front until my penis was in her cleavage.\n\nLooking up so I couldn't miss her intensely wicked grin, she squeezed her breasts around my stiffening penis. More or less keeping me there, she helped me step out of my pants. Never breaking eye contact, Beth dragged just her nipples over my front as she moved back to a standing position.\n\nFor my turn, I unsnapped, then unzipped her jeans. I followed her lead by slipping my hands into her pants under the waistband until I was cupping her smaller cheeks with my larger hands. This being my first chance to really explore her shapely, muscular butt, I spent a couple minutes kneading her ass. Sinking to my knees so I could stare at her groin, I lowered her pants. Managing to drop her pants, but leave her panties, I had Beth step out of her jeans.\n\nFeeling extremely aroused now, I lowered her panties. I was eye level with her slit as it came into view. Beth truly had a beautiful pussy. Her pubic hairs were so fine that her folds were perfectly visible. The hint of dampness I saw made her look oh so delicious. Released, her panties dropped to the floor.\n\nWhen I helped her step out of them, I guided her feet back down so her legs were spread extra far apart. Putting both my hands on her sexy buns, I slid my tongue into her slit, worming it slowing from bottom to top. She gave a loud sigh as I snaked across her clitoris.\n\nBeth grabbed my head. \"I so want you to finish what you've started, but I desperately want a shower first so I feel clean and don't itch in twelve places.\"\n\nGuess I was really getting into it. Only as Beth was helping me to my feet did I notice Lynn and Jim standing with a hand on each other's butt, grinning at us from within the shower stall. I followed Beth into the shower; my cock kept trying to catch up to her cute, wiggling butt.\n\nThere was soaping and groping until the hot water gave out. I especially enjoyed the way Beth washed my chest; she'd lather up her boobies, then scrub my chest with them! The more I groaned, the more Beth grinned.\n\nNot to be outdone, Lynn used her newfound understanding of my tush turn on to torture me also. She used her lathered butt crack to clean my shower-long erection. I was moaning uncontrollably from the start to the finish of her crack attack. Being that over-stimulated, I might've come the next time either naked girl brushed my cock if the water hadn't suddenly gone ice cold.\n\nThat dose of reality took Jim and me from 'ready to ride' back to 'need woman kinda soon'. My right ear was ringing from two freezing females shrieking until they escaped the stall. Jim bailed as well; leaving me to frantically fumble with a fancy new spigot that needed a push to turn off the freezing water while I kept trying to turn it.\n\nEven drying each other off is a lot of fun when you feel breasts and butt through a fluffy towel, it also 'warmed me up' nicely I might add. Certainly Lynn and Beth seemed to spend extra time making sure my penis and balls were dry as could be.\n\nFinishing, Lynn dropped her towel onto my raging erection, then announced \"I've hung up my towel, be sure to hang up yours.\"\n\nI cracked mine an inch behind her butt, which earned me a feisty grin, a wagging finger, and a \"Don't you dare!\" from Lynn.\n\n\n\"It's OK,\" I assured her, \"I'd kiss it and make it better.\"\n\n\"Animal, no way. You'd enjoy that too much!\" Lynn bantered on her way out the door.\n\nBeth literally took matters into her own hands. Grabbing a cock in each fist she said, \"Follow me guys, it's play time.\" Needless to say, it was awkward as hell getting out of the door, then down the stairs, but Beth never let go. And since neither of us wanted her to, she got considerable cooperation from Jim and me.\n\nFinally we made it downstairs. Lynn had returned to the bottom of the stairway to see what the giggling and thumping of walls was all about. \"Dear God, I wish I dared to take a picture of this,\" she managed between laughs.\n\n* * * * *\n\nPlease vote if you enjoyed my story. This journey continues with Chapter 26.\n\n"
    ],
    "authorname": "Wm_Sexspear",
    "tags": [
        "helped step",
        "jim beth",
        "beth jim",
        "big tip",
        "categories chapter",
        "made laugh",
        "hand penis",
        "brush teeth",
        "wicked grin",
        "lot fun"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/a-almost-perfect-awakening-ch-25"
}