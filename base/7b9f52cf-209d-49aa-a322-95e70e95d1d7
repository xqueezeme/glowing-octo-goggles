{
    "title": "Me Time",
    "pages": [
        "My heart was thumping in my chest.\n\nMy breathing was ragged and uneven, I was almost panting.\n\n\"What if I get caught?\" raced through my mind. Like it did every time I gave in to my desires.\n\nI told myself I was alone, the house was empty, and most of my neighbours would be at work.\n\n\"This is me time,\" I told myself.\n\nMy eyes closed and I shivered slightly in the cool morning air.\n\nIt hurt a little bit as I tried to relax and loosen my body.\n\nMy hand was trembling as I continued to maintain an even pressure.\n\nThere was resistance, but slowly, as I wiggled my hips; inch by inch, it was going in. I was being stretched as it penetrated me and the pleasure was almost too much for me to stand.\n\nThe intensity, the pressure, and the knowledge that what I was doing was so naughty, it was like a drug and I knew I was addicted.\n\nI felt then pain again and wondered if I should stop. Naked, lying on the couch and with my legs spread wide apart, I wondered again if it was going to fit, but I knew I could not stop, I gritted my teeth. I applied a little more pressure and I was rewarded as a chill of electricity ran throughout my nervous system as it moved even deeper into my body.\n\nMy heartrate spiked as a rumbling tremor ran through my body, not yet an orgasm, but a precursor of one and that was the reason I could not stop. I smiled; I knew there was no way I was going to stop.\n\nI had begun giving into my desires months ago out of frustration and to reward myself for putting up with \"martial sex.\" Those desires had grown far past simple rewards; my desires for release seemed to increase with each session and with each passing day.\n\nLooking back, I had to smile at how far I had progressed, from just using my fingers, through leaning on the washing machine and lawnmower, to searching for household items to masturbate myself. How many orgasms, dozens, hundreds, whatever the number was, was not enough; I laughed. I used to be happy with once or twice a week, now I needed to cum, at least that many times every day. Another little bit of pain drew me back to the present and reminded me, I had never tried anything this large before.\n\nI knew at some level that what I was doing was bad. \n\nI knew that if someone caught me right now that I could never explain myself. My husband would not understand, my kids might, I had tried to shelter them from the almost fundamentalist views that their father had developed so unexpectedly in the last few years. He had become very religious and if he knew that, his wife was a closest slut, who knew how he might react. Knowing that myself, however just made everything just that much more thrilling.\n\nI imagined my husband bursting through the front door, seeing me spread-eagled on the couch, with this between my thighs. I imagined his anger and him calling me a slut and a whore. That thought triggered another stronger tremor to ripple through my body and this time I moaned aloud. Part of me wanted to get caught.\n\nApplying a little more pressure, I used my other hand to slowly stroke and massage my naked chest. My finger tips lightly gliding over my boobs, raising goose bumps and sending still more electric feelings through my body. My fingers made circles over my skin, I felt so exposed, so sexy, and I was wishing my finger tips belonged to other people, I imagined two, three, four men and dare I even imagine, women stroking and caressing my little body. \n\nMy back arched and I whimpered and moaned louder than before. My breathing became even more laboured. My fingertips grazed the tips of my pinkish brown nipples; each was the size of an eraser and rock hard. My eyes rolled back into my head and I barely recognized my voice as an even louder moan echoed through the room.\n\nIt was my day off, my husband was at work, the kids were in school, and I had hours of \"me time\" to savour.\n\nI pulled back on my homemade toy, backing off maybe an inch or so, feeling the tightness of my own pussy, then pushed back even harder, this time with a little less resistance, and actually more pleasure as well. Each time I pushed it a little deeper and then backed off and then repeated. I felt so wet. Always practical, I was lying on a towel to protect the sofa, the thick terrycloth feeling rough on my ass.\n\nI had barely waved good-bye to the kids; the bus was hardly at the corner before my clothes were in a heap just inside the door. There were dishes in the sink, the beds needed to be made, groceries needed to be done, but I needed this more.\n\nMy plans and my needs were basic, almost animalistic; but having long been ignored, my sexuality had burst from dormancy during these months. Each day, it was like my body took over and my desires had become all encompassing and I desperately needed to be satisfied before anything else.\n\nCompletely nude, I had walked to the fridge and found what I was looking for. When I had last done groceries, subconsciously I purchased them. I had never bought anything like these before, but no one questioned it. Thinking back, I was sure I was not the only woman to have bought these for something other than eating. \n\nIn a house where I had no space or time for secrets, a vibrator or dildo would have been unthinkable to my conservative husband and ever-present kids. I would have loved to order some real toys on-line, but I never was the one who got the mail, my husband did. Smiling to myself, I knew no one would question these extra long and thick carrots. \n\nThey were huge, twice the size of normal carrots, I had bought a half dozen. I almost hid them in the shopping cart, guiltily feeling embarrassed that people would know why I bought them. All through the store, I had glanced at them, thinking of what I had planned and feeling the wetness growing between my legs. I thought about the delicious feeling of the seam in my jeans tight against my pussy. The friction making my knees weak with each step, wondering if everyone could see my wetness and smell my arousal.\n\nMy husband had not noticed that I had stopped wearing panties during the day months ago and I loved the feeling of the rough denim against my skin. I had started buying jeans a size too small just because of the extra tightness. Around my husband I was careful to wear long tops and sweaters to hide how increasingly visible my pussy was becoming to people. I loved the feeling of showing off and even more I loved that men and even some women were stealing glances at my sex.\n\nEven, Mrs. Reid, I mean Molly, noticed. Molly was my neighbour. Although retired, thinking about her right now, Molly was still a very attractive and very sexy woman, even though she must be in her late sixties. Molly and I ran a few times each week and did yoga together when we could. Molly was married but I would catch her looking at my ass or my crotch every once in a while. She was always discreet, but each time it made me wet. An affair with an older married woman, that was something to fantasize about.\n\nAt night, I had begun sleeping nude, often playing with myself while my husband snored. Using my fingers to explore my body, I had grown accustomed to moaning into my pillow as I made myself cum over and over again. In the morning, I would be awake and out of bed before he had a chance to see me naked or to detect the sweet aroma of my still damp pussy.\n\nThe day I bought the carrots, I remember how wet I felt in the store and how I wondered if anyone would be able to tell how turned on I was. Nobody seemed to pay attention but when I got to my car, I rubbed the wet crotch of my jeans. I sat in the busy parking lot and let my fingers slowly rub myself to a small orgasm, thrilled and frightened at the same time because I had done something like that in public.\n\nThis morning I carefully washed one of the large carrots and one normal size. Feeling the morning breeze on my smooth skin, I sensed the goose bumps rise on my naked body while I worked. Feeling deliciously alive and naughty, I peeled and smoothed the almost 12-inch over-sized orange vegetable and then the another smaller one. Finishing, I checked that I had locked the door, stepping over the clothes I had hurriedly put on this morning; I walked over to the couch. \n\nI suddenly remembered something and ran to the bathroom and grabbed a towel and found the Vaseline. Never wanting to make a mess, I returned to the couch and spread out the towel. Sitting on the edge of the sofa, I took some lube and coated both carrots. \n\nI laid back on the couch and placed the the carrots within easy reach. I was a little nervous about what I was going to do; it was so naughty and so wantonly slutty. I could hardly believe that I was doing this. I told myself, \"I need this.\"\n\nLaying back, I tried to relax.\n\nI thought about my last attempt at sex with my husband two nights ago. I wanted my husband so badly to take his time and make sex as enjoyable for me as I tried to do for him. I had come home from work early and made supper for the kids and paid them to go to the movies. He was working a little late so I had time to shower and get ready. I had shaved my legs and decided to surprise him and do my pussy as well. I was so turned on by the prospect of being hairless for him that I could hardly keep my hands from shaking.\n\nI stood in front of the bathroom mirror and slowly spread the shaving cream on my pussy. Watching myself, I slowly ran the sharp razor along my pale skin. My formerly neatly trimmed box disappeared as the razor revealed my pussy in all its smoothness. Taking care, it was not long before that I was totally bare; I ran my fingers over my skin and shivered from the feeling and the appearance of myself. Even if my husband did not like it, I did, being bare made me feel so incredibly sexy. \n\nI let my fingertips explore my body, radiating out from my now shaved pussy. My fingers lightly stroked my flat stomach, the gentle rise of my breasts and they made circles around my rock-hard nipples. Whimpering and moaning, it was all I could do not to make myself cum, but I wanted to wait until my husband was home, I wanted to cum for him. I forced myself to stop, but I wanted to continue so much.\n\nI reached for my baby doll nightie. The sheer white material was really like wearing nothing at all. It came with a G-string pair of panties that framed my little pussy so nicely. I pulled the top on first, feeling the soft netting-like material brush over my body. My nipples poked hard against the soft fabric. \n\nNext, I pulled the panties snuggly into place, the thin white material turning transparent as it form-fit against my increasingly wet pussy, clearly revealing the outline of my opening and hard little clitty. The thin string of material that formed the back, making me inhale as it pulled tight against my little asshole and disappeared between my cheeks.\n\nI am 5.1 and 105 pounds and I work hard to stay in shape. I have a nice figure with perky little breasts and a nice ass. I dried my hair but left it in a tousled way that made it look like I had already been fucked, which made me feel naughty but ever so sexy too.\n\nA little makeup, some more self-caressing in front of the mirror, and I decided I was ready. Then I made supper for him, careful not to spill or burn myself. When he arrived home, I anxiously greeted him at the door with a big kiss and hug. I was desperately hoping for a reaction, wanting nothing more for him to forget about supper and just ravish me then and there. It didn't happen, or at least not the way I wanted. \n\n\"Mary, can we eat first, I've had a rough day,\" he said in a tired way. Not even commenting or seeming to notice my sexy outfit or semi-nudeness.\n\nI wasn't going to be discouraged that easily, I served up supper and kissed him as sexily as I could, I got a little reaction but when I tried to French kiss him but he told me again, \"After supper, I need to eat something.\"\n\nAt that point, I wanted to climb up on the table and let him eat me, I had even fantasized about that. I had imagined lying suggestively on the table, and even to have him spread food over my naughty bits, I could almost feel his tongue on my body. I was so horny that it was all I could do not to attack him.\n\nHe further killed the moment by asking me, \"What's gotten into you, why are you acting so slutty?\" \n\nThen he noticed my pussy, \"Did you shave your pussy?\"\n\n\"Yes, it feels so smooth and wet, do you like it?\" I purred and rubbed myself in front of him suggestively.\n\n\"Why did you do that, it makes you look even more like a slut, on display for anyone to see,\" he lectured.\n\nI wished I was on display for everyone to see, maybe someone would realize how sexy I was and would want to fuck me. I decided to give it one more try.\n\n\"Slutty,\" I said, \"I'll show you slutty,\" and I knelt in front of him and before he could even react, I unzipped his pants and pulled out his cock. He might not have seemed interested, but another part of him was paying attention. I was pulled his cock out of his underwear and more mad than turned on, I finally got a reaction out of him, with his cock hardening in my hands.\n\nKneeling, my G-string was pulling deliciously up against my pussy and into my ass. My lips closed over the tip of his cock and he inhaled sharply as my tongue probed his opening and covered the tip in my salvia. I wiggled my ass to enjoy the sensation of the G-string even more as I licked and sucked his cock.\n\nShifting around he spread his legs wider and I made tried to make eye contact, but his eyes were closed as I bobbed up and down the length of his shaft.\n\nHe was sweaty and dirty, but I did not let it bother me, I kissed and licked his cock with my lips, teeth and tongue. My hands explored his body and cupped his ass and balls. My mouth and tongue worked their magic on his cock and balls; several times, I released his cock and took his balls completely into my mouth.\n\nI felt his hands on the back of my head and he pulled me towards him. I gagged as he forced me to take his cock deeper into my mouth. I was just happy to have a reaction from him and I happily accepted his dominance, and I kept sucking and licking him. I was happy playing the submissive on my knees in front of him, just like I had fantasized in so many masturbation sessions.\n\nAfter only a few minutes, I could feel him stiffen and then he groaned and spurted cum into my mouth, I felt and tasted his bitter salty taste. Hoping this was the start of a night of fun, I swallowed it all. I used my tongue to lick up the cum that had dripped down my face. Confident that I had gotten it all, I straightened up and moved closer to kiss him.\n\n\"Gross, I don't want a kiss from you after you just sucked on my cock, yuck,\" he actually pushed me away. \n\nI couldn't believe it, it was okay for him to fill my mouth with his cum, all of my thoughts of doing more tonight evaporated with that comment.\n\n\"What's gotten into you, what if the kids come home and see you like this?\"\n\n\"You look like a whore, coming onto me like you are a prostitute, sucking my cock and then wanting to kiss me,\" he said, killing me with his words.\n\n\"They are out at the movies, they won't be home for at least another hour or two,\" I said defensively, part of me, the horny part, still hoping to salvage a bit of together time.\n\n\"I don't know what's gotten into you Mary,\" he said as he quickly buttoned up his pants, and added, \"I'm beat and I'm going to bed.\n\nStunned, I sat there; he hadn't even eaten the supper.\n\nThat had been two nights ago, I hadn't been able to find any \"Me time\" since. I needed an outlet other than just fingering myself in bed. My husband seemed to have forgotten that it had even happened. This morning was the first time that I had been alone and I was looking forward to it.\n\nMy body flexed as the makeshift dildo was as deep as possible in me, which drew me back to the present. I felt so full; I enjoyed the feeling for several seconds, my pulse racing and my body sweating. I slowly eased it back out of me almost all of the way, charging my body with another powerful jolt of electricity and then pushed it back all the way again.\n\nI could hear someone moaning incredibly loud as I continued to thrust the carrot in and out of me, over and over again. The sound just got louder and louder and it took me several moments before I realized the voice was mine.\n\nThe feeling between my legs built higher and higher, and I could feel the stirring of orgasm starting. I knew that if I just kept doing this, that I could make myself cum from just continuing this. Today though I wanted more though much more.\n\nUsing my right hand, I continued to move the first carrot in and out of me, pausing every thrust just to catch my breath, this was so much bigger than my husband and it had already been inside me much longer than he ever lasted.\n\nWith my left hand and reached over and grasped the second carrot. Lying on the couch, my one leg was stretched on the back of the sofa. The first carrot moved deliciously in and out of my cunt, such a nasty word, but considering what I was planning on, I smiled to myself and thought it was appropriate.\n\nForcing myself to relax, I took the second carrot with my other hand and made sure it was still coated in the lube. I reached down and moved the rounded tip of the second carrot against the tiny pucker of my rosebud. Slowly moving the cold tip around the rim of my asshole, I teased and caressed my ass. Inhaling I moved the tip until I could feel it centred on my asshole. I had to stop what I was doing with the first carrot and I held it inside me while I pushed the second against my tight ass. I hoped the lube would do its job as the knub pushed slightly against the resistance.\n\nNothing happened at first, I pushed harder, still nothing, and then with a jolt of pain that brought tears to my eyes, the rounded end of the carrot entered me. \n\nEven though this carrot was much smaller than the first one, I thought that even this one might be too big. I forced myself to breath deeply and relax, I could feel the first carrot inside me and I loved the feeling on penetrating myself twice. I let my ass adjust to the second carrot for a moment and the pain subsided.\n\nPushing a little more, about an inch of the well-lubed carrot stretched more of my ass. If I went slowly, I found that the pain was bearable if I went slowly. I closed my eyes and pulled it almost all of the way out and eased it back into me. It felt amazing moving out and twice as good pushing back in. Deeper this time and then back out, each time pushing it deeper into me. I started again fucking myself with the carrot in my cunt, I felt dizzy with the pleasure. I was going slow enough there wasn't any pain anymore, just an incredible sense of fullness, it felt like my nerve endings were all on fire at the same time.\n\nI imagined that this was what it must be liked to be fucked by two men at the same time, both my pussy and ass full at the same time. I thought about how much of a slut I must be to even think about having two men using me at the same time. It did not stop there, letting my mind wild; I wondered how it would feel with a third man's cock filling my mouth. \n\nThinking about having my mouth filled with cock, balls slapping against my face, hot thick cum flooding my mouth and dripping across my face. It was too much, I had hoped to keep from cumming for a while yet, but it was too much.\n\nMy body was wracked by pleasure, my hips twisted and flexed, my scream felt like it started in my feet and roared up through my body and erupted from my throat. The intensity of my orgasm gripped me like someone had somehow plugged my body into an electric socket and I lay shivering and shaking for several minutes afterwards.\n\n\"OMG,\" I thought myself with both carrots still inside my body, splayed on my couch like the kind of whore my husband thought I was. Like the kind of whore, I wanted to be in my fantasies. The thought of selling myself for sex and of being a prostitute took over my imagination as I let my fingers glide over my body.",
        "I imagined being dressed all in black leather, leather pants hugging every curve of my legs and hips. The flare of my tight ass and the indentation of my shaved pussy. A push-up bodice showing off my little 34B's. My blonde hair up with plenty of styling gel. Blood-red lipstick and makeup accenting my features. A black leather collar around my neck with silver metal studs completing the look.\n\nI imagined walking down the street wearing stiletto heels that scream, \"Fuck me\". My hips swaying as cars move slowly up and down the busy street. It is early evening and the clubs are just starting to get busy. Without thinking about it, one of my hands starts to move the large carrot in and out of my pussy slowly.\n\nI imagine a group of young guys standing on the side of the street, waiting to go into a club. There are four of five of them, one of them notices me walking towards them, and I see their heads all swivel towards me at the same time. I smile at them.\n\n\"Hi boys,\" I say in a soft, barely audible but sultry voice.\n\n\"Hey sweetie,\" a blonde guy says, I notice that they are all in their early twenties, and all of them are good looking.\n\nAnother looks at me and says, \"What are you doing tonight, beautiful?\" looking at me like a tiger looks at a lamb.\n\nI surprise them with my response, \"It depends on how much money you have honey?\"\n\nSurprised glances and much whispering results among them. I just keep on walking, their heads devouring me as I pass them. I feel their eyes on my ass.\n\nAnother calls out, \"How much would be enough?\" I turn and notice a couple of them have their mouths open and I see bulges stirring in each of their pants.\n\n\"For all of you?\" I ask.\n\nThey all answer at the same time, almost as if they shared a voice. \"Yes.\"\n\nI told them and they never hesitated, the blonde answered for them, \"We can do the club later, it looks like you are coming with us.\"\n\nBefore I knew it, I was sitting on the blonde's lap in the back seat as we drove to their motel. I could feel his breathing on the back of my neck and his hands were slowly stroking my thighs. On either side of me, two other guys were using their hands to rub my back and my arms.\n\nI was slowly using the carrot to fuck myself as my imagined the scene inside their vehicle. The carrot moved smoothly in and out of my pussy, still very tight but with only amazing sensations now and no pain.\n\nThe blonde guy's hands moved inside my thighs and he was massaging my pussy through the tight leather pants, my breathing was becoming more ragged, and my eyes were rolling back into my head. Each of the other guys in the back seat had a hand cupping a breast and were using their fingers to pinch and pull on my nipples. From the front seat, only the driver stayed looking at the road, the other two guys were completely entranced by my show in the backseat.\n\nWe were stopped at a stoplight when another car pulled up beside us and the driver stared openly at the guys molesting me, my head was arched back and my eyes closed in pleasure. The light turned green and the other car tried to keep pace until the lane ended and then he just honked his horn.\n\nI imagined the leather straps being undone on my top and with my eyes closed, I felt the bodice being pulled away from my breasts and I felt their rough fingers on my tits. Now naked from the waist up both men on either side of me competed for more real estate on my body.\n\nThe blonde, not to be denied was trying to undo my leather pants, he had succeeded in getting the button loose, and I wiggled my hips as he used both hands to peel the leather from my white thighs. I stretched a little and he was able to pull my pants down past my ass and pushed them down past my knees and I felt him using his foot to push them down to my ankles.\n\nAll the while, this was playing out; all of the guys were encouraging each other to take more liberties with me. Now naked except for my heels, I felt the blonde guy moving beneath me and could feel his hard cock poking me, he struggled a little and then I could feel more of his naked skin on mine. He had pulled his shorts down to free his cock.\n\nA course of, \"Fuck her, stick it in her, fuck that sweet pussy,\" echoed through the car as I felt his cock at the entrance of my pussy.\n\nThe large carrot was now furiously moving in and out of me, I moaned aloud, feeling several tremors shake my body, I could feel a wave building with each response, my breathing was coming in short pants and in my mind, the carrot was the blonde guy's cock.\n\nI could feel the wide head stretching me, the feel of his circumcised cock entering me, the thrusting of him pushing deeper into my anxious pussy. The two guys on either side of me each were bumping heads together as they both sucked on my tits at the same time. Their lips, tongues and teeth pulled and sucked on me; my nerve-endings felt alive with electricity. \n\nMy breathing was increasingly laboured as I imagined being manhandled by the three men in the backseat. I imagined the car now stopped in a rest area; suddenly there were more than just the original guys, now several rough looking truckers were watching from outside the car. My mind raced with the thoughts of being fucked by all of them.\n\nTheir voices, all encouraging each other to fuck me hard, I could feel myself being pulled from the car onto the grass. I imagined being on all fours, a cock in front of me as I took its smoothness into my mouth. I felt someone positioned beneath me and a cock moving roughly in and out of my cunt. Then I felt something pushing against my ass.\n\nI had started using the other carrot and with one hand masturbating my pussy, I was now using the other hand to move the second carrot in my ass back and forth as well.\n\nI imagined a second cock in my ass; I could feel them both inside me at the same time. The cock in my mouth erupted with hot streams of white cum as my own body flexed and twisted, lost in the pleasure being produced by my mind and the carrots.\n\n\"Oh my god,\" I screamed, louder than any time I had ever orgasmed, and my body convulsed as an orgasm pushed me over the edge, once then then once more again.\n\nFor several moments, I just laid there, my entire body to sensitive to the touch, covered in sweat and exhausted. I just luxuriated in the feeling, not ashamed of fucking myself with two carrots, of dreaming of being gang-banged, of masturbating myself silly when there was work to be done. All that I felt was fulfilled, the more I did this, the more I wanted to feel this way. \n\nI knew I should get up and get more chores done, but I didn't want this feeling to disappear.\n\nI closed my eyes for a moment savoring the aftereffects of that last orgasm. Sprawled on my couch, naked, sweaty, my puffy and inflamed pussy raw and still filled by the very large orange carrot, and my ass plugged with another one. For the first time in days, I felt satisfied, that last fantasy was incredible.\n\nMy breathing was starting to come back to normal, my body temperature was also returning to normal. For the first time I noticed that my windows were all open and I wondered just how loud I might have been. \n\nThe delicious throbbing between my thighs felt so wonderful, I just wanted to keep doing this to myself all day. My conscious told me that I needed to get my chores done but my body and mind just wanted more.\n\nMy internal struggle was interrupted by an unexpected knock on my door. My heart just about stopped, I wondered if I had imagined the first knock, but it was followed by a second one.\n\nI froze, maybe whoever it was would just go away. Seconds ticked away with agonizing slowness. They knocked again and a female voice called out.\n\n\"Mary, are you alright, I heard screaming?\" \n\nIt was Mrs. Reid. Mrs. Reid or Molly as she constantly begged me to call her was a retired lawyer. Molly was about seventy and was not your typically retired lady. I closed my eyes for a second and imagined her. Active and very fit, Molly was very attractive, unfortunately sometimes she seemed as prim and proper as my husband. Other times, when I caught her staring at me, I wondered. Regardless, there was no way I could let her see me like this.\n\nI looked around the room for something to put on and then remembered the towel.\n\n\"Just hang on Mrs. Reid, I mean Molly,\" I said loud enough that I hoped she would hear me.\n\nI wrapped the towel around me, as she knocked again.\n\nI opened the door just a little and said, \"Molly, how are you?\"\n\n\"Are you okay sweetie, I was gardening and I heard you screaming and moaning and I was worried, I almost called the police,\" she said with real concern in her voice.\n\n\"I'm okay Molly,\" I said, knowing that she would be able to see how sweaty I was. Although mostly hidden from her, I wondered what I must look like to her. I could feel the large carrot starting to slide out of me, my pussy was so sensitive and tender that I closed my eyes for a moment and lightly moaned.\n\nThe moan was out of my mouth before I could stop it and my face turned bright red.\n\nRealization came over Molly's face in a mixture of surprise and something else.\n\nMolly took in the towel, my sweaty body, the lingering scent of my orgasms, and now the screaming made sense. Embarrassed she added, \"I didn't mean to interrupt you two, I am sorry,\" and she started to back away.\n\nBefore I could think, I said, \"Molly, it's okay, I'm alone, you didn't interrupt anyone,\" I knew that I should have just stayed quiet, but I didn't want any rumours to start.\n\nEven more confused, Molly, looked at me, and said, \"But the screaming and the moaning\"\n\n\"It was just me,\" and then Molly suddenly smiled as she realized what I had been doing and said, \"You naughty girl, Mary.\"\n\nMolly took a step closer to the door and before I knew what was happening, she kissed me on the lips. \n\nShe said, \"I don't have time today because my husband isn't far away, but next time you are alone, call me, I will tell him that I am helping you exercise.\"\n\nShe wrapped her arms around my body and kissed me even longer, her tongue exploring my lips and mouth. As she ran her hands over my ass, I knew she could feel the end of the carrot.\n\n\"Oh, Mary, no wonder you were screaming so loud,\" as she wrapped her fingers around the end of it and slowly pulled it from my ass.\n\nI moaned and my knees got wobbly as she withdrew it.\n\n\"Mary, you really are naughty, you should get spanked for using vegetables this way,\" she said as she kissed me again. \n\n\"What other surprises do you have hidden, you naughty girl,\" she said as her hands moved to the front of me. \n\n\"Oh, you little slut,\" she whispered again as she discovered the fat carrot, now protruding a few inches out of me.\n\nShe worked it in and out of me a few times and then we heard her husband call her.\n\n\"I have go sweetie, but we will have to take care of you,\" she said as she kissed me again, \"Soon.\"\n\nI almost fell over as she pulled the carrot all of the way out of me. She helped to steady me.\n\n\"Ok, no more playing with yourself until I get too,\" Molly ordered and kissed me again.\n\nShe left me standing in my doorway and as I watched her leave, she turned around and took the big carrot and bit the end off.\n\n\"See you soon Mary,\" she called.\n\nMy head was spinning with everything that had happened, but I knew I wouldn't be able to wait very long."
    ],
    "authorname": "ghost12_spirit",
    "tags": [
        "group sex",
        "anal",
        "cocksucking",
        "older woman",
        "caught",
        "double penetration",
        "submissive female",
        "slut wife",
        "prostitute",
        "fantasy"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/me-time-6"
}