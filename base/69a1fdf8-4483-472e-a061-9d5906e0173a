{
    "title": "Room Wanted Ch. 01",
    "pages": [
        "Room wanted: Recently qualified teacher looking for room/s for short term let...\n\n\"Is that Naomi?\" said the voice.\n\n\"Yes,\" she said brightly.\n\n\"Hello Naomi, my name's Rob Stanley, I understand you are looking for a room to rent?\"\n\n\"Yes,\" she said hopefully, \"Yes I am.\"\n\n\"Dave Darnell speaks extremely highly of you,\" he said positively, \"you've taught special needs he says.\"\n\n\"Yes, I was a TA in a special school for five years, but I graduated last year and of course now I work for Dave.\"\n\n\"Excellent,\" said the voice, \"I have a large loft room for rent, fully furnished, on-suite, \u00a3100 a week if you'll babysit for me.\"\n\nNaomi Williams punched the air with a silent 'YES!' Today was just getting better and better. Her job was now secure and the hunt for new digs was over in days! While she was now ready to hit the ground running, she knew she had to build up the financial reserves a bit, and renting just a room was the most sensible. She'd just started to pay off her student loan and had rented a series of rooms for the last few years and while she survived she had begun to eat into her already small financial reserves which she would need for the five or ten percent that would make her mortgage a surety, and to cover the legal fees, and pay for the paint and furniture and other things she would need for 'her place'. \n\nThe bedsit she currently paid '\u00a3600 PCM' for was really unpleasant, damp, in need of decoration, had a shared bathroom with two other bedsits, had no WiFi and she knew too much about her pervy landlord.\n\nThe hint from her boss that a mate of his had a room he wanted to let had come at the perfect time and she said a silent thank-you to him for suggesting her. \n\nDave Darnell was the head of the school she taught history at. He'd said that his friend had a number of young children and needed the occasional childminder, two of them had 'special needs'. He knew through her interview and CV that she had worked at a special needs schools before completing her degree and qualified teacher status.\n\nAs a poor underpaid, over-worked Teaching Assistant she'd done tonnes of childminding, chaperoning, caring and trips out for the extra cash that had made life more comfortable. Now she was a full-fledged secondary school teacher she thought she'd left all that behind her, but the chance to rent a nice room in a nice house where she wouldn't have to walk along the corridor to the bathroom, AND keep more of her savings was too good to miss.\n\nSo straight after her last day work for the whole summer, a Friday, she headed for the house in question on her motorbike. As she followed the Satnav on her clamped on phone she just felt better and better as the terraced houses ran out being replaced with some bungalows, with the spacing between each property growing larger until there were more fields and there was a village she really hadn't heard off before. Looking at the electronic map she saw that the school she worked at was way closer than her current bedsit and if she got this place, she reckoned she could walk in each morning through this pretty village and still shave about twenty minutes off of her commute.\n\nShe arrived and was pleased to see it was a large house by the far the biggest in the village and surrounded by fields, the one MPV and lack of bicycles suggested that this was a family home rather than a series of flats.\n\nIt was a large detached double fronted red brick place surrounded by old flint walls with a gravelly drive and she walked across it. Her motorbike was safely across the road with her helmet strapped to it and out of sight of the house, at least for now.\n\nShe had a warm feeling about this; Dave her boss didn't seem the sort of bloke that would be mates with the kind of pervy old landlord that would hang around the bathroom trying to catch glimpses of her in her underwear and would listen at her bedroom door.\n\nShe knocked the large red painted Georgian front door and it was answered by a teenage girl still in the teenage girl uniform of blue jeans and a pastel shade T-shirt. She looked Naomi up and down in a fraction of a second and smiled.\n\n\"You must be Naomi, come in!\" she said ebulliently, \"Dad's just had to run to the shop but he'll be back in two minutes. Can I get you a coffee?\" \n\nThe house was brightly and well decorated and the smell of good quality coffee pervaded the downstairs.\n\nNaomi stepped inside, \"I'd love one, thank you.\" The girl trotted away leading Naomi to the kitchen.\n\n\"I'm Lizzie,\" said the girl getting a large mug from the cupboard, \"Elizabeth - it's shortened to Liz, Eliza, Li-Li; but it's mostly Lizzie,\" the girl chatted, \"but on no account is it ever Beth,\" the teen poured coffee into the mug, \"cream?\"\n\n\"Yes please,\" giggled Naomi, she had taken to this spirited kid the moment she saw her.\n\n\"Good,\" said Lizzie, \"We've run out of milk, Dad's just run out to get some more; he says you're a teacher,\" said Lizzie with a smile, \"where do you teach?\" Lizzie handed the mug over and Naomi took a sip at the edge, it was excellent coffee.\n\n\"I teach at Prior's Park,\" said Naomi.\n\nLizzie became animated, \"Cool!\" she buzzed, \"My friend Amy goes to Priors, she's going to be a year 10 in September.\"\n\n\"Amy Collins?\"\n\n\"Yes!\" said Lizzie, \"You know her?\"\n\n\"She was in my classroom yesterday!\"\n\n\"Cooool,\" said Lizzie reaching for her smartphone.\n\n\"If you're going to text her and tell her I'm here, could you add that I haven't forgotten that she still owes me the homework!\" She grinned, and sipped more of her coffee. \n\nLizzie chuckled, \"What do you teach?\"\n\n\"History.\"\n\n\"My favourite subject! Just after Christmas we went to Berlin, it was BRILLIANT!\" she cooed.\n\n\"Did you stay at the large hostel?\"\n\n\"Yes,\" said Lizzie, \"have you been!\" \n\n\"Yep, first time this year.\"\n\nNaomi and Lizzie entered in an animated discussion about all of the delights of the German capital. Naomi laughed and sipped her coffee, and the discussion moved onto World War 2, the subject of the GCSE.\n\nLizzie stopped, pointed at Naomi, adding a, \"Stay there! Gotta check!\" and disappeared.\n\n\"Well, you seem to be getting along fine,\" said a masculine voice behind her, and she turned round to see an equally masculine looking man, \"that's the first part of the interview anyway!\" Coming in at the 6 foot plus range, his dark wavy hair was greying slightly at the temples. He extended a hand, \"Rob,\" he said with a genuine smile. She took it and shook firmly. He had big blue heart-breaker eyes and broad shoulders she just wanted to rest her head on! He was wearing blue jeans just starting to fade and a T-shirt that announced he was a Star Wars fan.\n\nIt was obvious that he was checking her out in a similar fashion. She was wearing similar blue jeans that while faded where her absolute best pair, and she wore a long sleeve T-shirt that showed off her great shape without making anything too obvious.\n\n\"Naomi,\" \n\n\"So, Dave tells me you're newly qualified,\" he said helping himself to coffee and pouring the newly acquired milk into it and perching on the next high counter stool to Naomi's.\n\n\"Yes,\" she replied, \"I was a TA at a special school in London, but I finally finished my degree and QTS in May last year, just established at Priors down the road. This is such a fantastic location for me -- if it's OK.\"\n\n\"Judging by how you were getting on with Lizzie I'd say you are well on your way.\" He smiled, \"If you have worked in special needs you should go get your stuff and move right in.\" he grinned.\n\n\"Oh yeah,\" said the little ball of fire back at the kitchen door with a couple of books, \"can I ask a question about German preparations for war?\"\n\n\"Your door is here,\" said Rob standing at the end of the first floor hallway, \"The combination is currently 1-2-3-4, I'll give you the instructions on how to reset it.\" They walked up the flight of stairs and he opened the door at the top. \"It's kind of a bedsitter sort of thing,\" he said, \"basically the floor plan of the whole house, just a little low at the edges. There's a bit of a kitchen with a sink, it has built in hot plates, electric kettle, toaster and microwave. If you want to cook anything more technical come down and use the main kitchen. You have a WC and wash hand basin in there,\" he pointed at the door to one side of what must have been a chimney breast, \"and a small shower that side. There is a bath downstairs if you want a proper soak. Actually there are several bathrooms downstairs but I'd recommend you book them well in advance with my three girls. Washing machine, dryer and all that is in the little utility room off of the kitchen, help yourself, dustbin day on Tuesday.\"\n\n\"It's wonderful, thank you!\" beamed Naomi, \"do you need references?\" she desperately hoped he wouldn't want one from the current landlord!\n\n\"David Darnell recommended you,\" he said, \"that's good enough for me. Can you stretch to a month in advance?\"\n\n\"Give me bank details and I'll do a direct debit.\"\n\n\"Perfect, how long are you looking to stay?\"\n\n\"I don't know,\" she said, \"trying to save up for the mortgage you understand, and renting furnished makes for such an easier life.\"\n\n\"No problem,\" he said, \"Bit of notice would be good so I can get the place re-let, but don't worry too much about it. You have a car?\"\n\n\"Motorbike, but I'll probably walk to school from here.\"\n\n\"Motorbike?\" he looked intrigued, \"What kind?\" \n\n\"BMW G650,\" she said.\n\n\"Nice,\" he said, \"you can keep it in the in the garage next to my K100,\"\n\n\"RS or RT?\" A kindred spirit and BMW rider, this was getting better.\n\n\"RT,\" he said, \"It's for my male menopause moments,\" he grinned, \"and I do actually tour on it... occasionally... when I'm not at work... or babysitting.\"\n\n\"My G6 is just enough power without weighing a ton. I'll let you have a go.\"\n\n\"Likewise,\" he said, and leaned forward and took her hand again, \"welcome to the house. When do you want to move in?\"\n\n\"Tonight?\"\n\n\"Good for me.\"\n\n\"I'll get my stuff.\"\n\nAs she followed him down the stairs, she checked out his bottom and reflected on her thoughts about the landlord hanging around the bathroom and catching her half naked. This time she wouldn't mind! Mrs Stanley might have something to say about that though, and this was far too nice a pad to screw it up by having designs on the master of the house.\n\nShe had already arranged to borrow a friend's people carrier to move her already packed gear, and was back in hours. She turned down the offer of Lizzie's assistance to carry her things up stairs. She was slightly disappointed that her property took so few trips to carry up the two flights. She had a small fridge, but Rob said there was one there already, so they stowed that in the garage. She had some few items of furniture, bags of clothes, bedding, pillows, several boxes of books from her college course, CD's, DVD's, shoes and her laptop. Not a massive amount to show for her thirty three years on the planet earth.\n\nAfter the second of her adopted parents passed away, she discovered that she'd been left out of the will and everything had gone to her two brothers and sister. It soon became apparent that the will was only a few years old and included a section should either of her parents die before her twenty-first birthday then there was a section about caring for her up until that date. There it was in harsh handwritten script, the perfect, almost printed copperplate writing of her 'Dad'.\n\n\"...to Naomi Carmichael Williams,\" Naomi had all but forgotten what her previous surname had been, \"we send our regards and the regards of the family who shared their house and their lives with her, and made her who she is today. \n\nAll of our worldly goods and any financial holdings are to be divided equally between our three children John, Ruth and Peter. Naomi was brought into their loving family by us and it is not fair that they should be burdened with her care. If at the time of the reading of this will Naomi is under the age of 21 she should remain in the care of our benefactors until that time. After that date it is not fair that her brothers and sister, who had already done so much to care for her during their lives, should carry on our burden. The house should be disposed of and Naomi given back to the world we have striven so hard to prepare her for, ready to face life and its challenges.\" \n\nThat was it, nothing else. No suggestion of how she, the 'burden', should survive. To make it worse there was more discussion of what was happening to Paddy, Mum's Elderly but still healthy Golden Retriever that was still mourning the loss of his owner than there was of her. Aunt Edith was to take him, and as she sat on the wall outside of the solicitors' office she could hear John whispering to Edith still in the foyer about money for its food and vet's bills -- he saw the crying Naomi and turned his back so she couldn't pick up on the conversation. Sadly for him lovely batty old Auntie Edith was deaf as a post and shouted her replies to him.\n\nWithin minutes of the reading of the will she noticed that her eldest brother and sister suddenly started to refer to her as their 'adopted sister' -- they had never done that in the twenty or so years they'd shared a house, holidays, bedrooms and lives. They had already started to ease her out of their conscience, much as they had done with Paddy the dog.\n\nHer youngest 'adopted brother' Pete was disgusted and argued with the solicitor and his 'real' brother and sister that Naomi was as much their sister as he was their brother and it was ridiculous that she was left out of the will and said it should be split four ways. \n\nJohn said that if he wished to split his third with Naomi he was welcome to, but both he and Ruth would not go against Mummy and Daddy's dying wishes. He hadn't called them 'Mummy and Daddy' in thirty years either. That was it, the embarrassing weeping girl in front of the solicitors' office, 'persona non grata', didn't even have the decency to know when she had outstayed her welcome and to go and go quietly.\n\n'Mum and Dad' had been wonderful -- no question, and fostered then adopted Naomi after finding out she lived in a children's home when she wasn't allowed to come round to play with Peter after their first week at Infant school. The feisty little blonde fireball of girl was loved by everyone from the start.\n\nShe had some faint memories of her birth mother, and less of her father, and family legend had it she was the illegitimate child of a married man and his mistress. He'd kept two homes right up to the point his wife found out and the money stopped. \n\nWhen the relationship ended her mother put her up for adoption, as if she was not wanted after the split. Here it was happening for a second time.\n\nThey'd shared \"their house, their lives\", Mum and Dad sent 'their regards' - how frightfully splendid, how awfully fucking nice of the dear old things. John, Ruth and Pete were \"beloved children\", she was just \"Naomi Carmichael\", 'the burden', and between them they had \"made her who she is today,\" as if she was a DIY project.\n\nShe had been a task, a job; job done, there's the door, byeeeee.\n\nIt wasn't about the money for Naomi; it was almost brutal discovery that after more than twenty years of love, affection, kisses and cuddles that she wasn't really one of 'them', and it was like she never really had been. The will called her Naomi Carmichael Williams. \n\nWhen she'd been adopted her name had changed and Carmichael had never been mentioned again, her Dad was specific. All of her school certificates, her national insurance number, her driving licences, all said Naomi Williams. After all those years of being one of a close loving family, she had only ever been a lodger and even had an 'expiry date' of her 21st birthday.\n\nAt the age of 22 and half way through her degree course, and with the only home she'd ever known being sold around her she'd had to find other accommodation. \n\nShe'd collected the first of her belongings and taken them to the horrible bedsitter she'd had to rent, conscious that her eldest brother John was watching everything she took from the house in case it might be of value and could be sold. That even included her bedroom furniture that she'd gone to the shop to pick with Mum and Dad not ten years ago, all on their inventory. \n\n\"It's in the will,\" said John, taking the bedside table from the hall way next to her, on the pretence of checking underneath, but then placing it into the half empty lounge away from her. His previous warmness and affection of the last twenty years gone replaced by any amount of pique having realised that she'd already moved the bed, \"we have to take everything into account.\"\n\n\"But it's my bedroom furniture,\" she said, \"Dad bought it for me.\"\n\n\"He might have bought it 'with you',\" said John, \"but it's in the will,\" he whined with a pretend warmth but a real annoyance that she was arguing with him, \"they said everything,\" if that made everything right.\n\n\"What about my clothes John,\" she'd said, fat tears running down her face, \"do they count as 'a thing'?\"\n\nHe thought about it for too long and she could see the inner struggle he had with the chance she might have something valuable within her wardrobe and drawers. Dad had bought her a Barbour jacket on her eighteenth birthday which had set him back \u00a3200, and she had visions of having to buy it back from her 'family'.\n\n\"Don't be stupid Naomi!\" he snapped.\n\nShe hated him from that point on. From her fifth birthday onwards 'Big John' had been her big brother - protector, mentor, homework advisor, lifestyle advisor and hero and she'd worshipped him -- she'd even been a bridesmaid at his wedding; now it seemed like he was her landlord and was checking everything in case he could charge her for damages.\n\n\"I'm so sorry to ask you to do this Naomi,\" he said, ticking off more items on his clipboard with soulless efficiency and not making eye contact with her, \"but... well Ruth, Peter and I need the money. Our purchaser is chain free and wants to move ASAP.\"\n\nIt was rubbish, Pete told her. They didn't 'need' the money, they 'wanted' it. OK, for John it was the end of his mortgage and an easier life for his wife Sally who, without a mortgage to pay, could stop working. Ruth had used it to buy a bigger house further out into the country and increased her mortgage. There was no offer for their sister to move in with them of course, there were lots of affordable rented places in the town they'd said. It was a University town and at that time of year there were NO affordable places to rent in town, but that never bothered her eldest brother and sister; Pete lived in a one bedroom flat with his girlfriend and had offered the sofa until she got somewhere.\n\nPete had sat in a pub with her some months later and said how much the will sounded out of character for Dad, he even suggested that the old man might have been in the early stages of dementia hence his turn against his adopted child in his last years. But Mum hadn't been, she was mentally sharp until the end. Brother John and Sister Ruth were just as cold and, in Pete's words, fucking obnoxious.\n\nRuth had even stopped her taking some of 'their' family photos for old times' sake, promising to get them copied and send them on to her new address; she had sat on the bottom of the stairs and cried at that. A twenty two year old woman, half way through her teacher training course, weeping like a five year old. \n\nRuth had stood by her at the bottom of the stair with a hand on her shoulder, with an emotionless 'there there, Naomi,' it lasted only a few moments and led to her pushing Naomi to one side so the removal men could come down the stairs with a piece of furniture from Mum's room. It was a piece that Naomi had loved and had rummaged through when Mum was going out 'helping her' pick costume jewellery and make up. Here it was going out the door to she knew not where; she doubted it would be to Ruth's house as she had was in an Ikea phase. ",
        "It was going to the 'antique' shop; she asked John if she could have it seeing as Mum had promised it to her. He replied that Mum hadn't put it in the will. She said that he was in the room two or three times when Mum had said it; he grinned and just pointed to the list. \n\nHe said that as soon as he got a price from the dealer, a couple of prices actually, she could have it for the lowest one. He'd smiled like he was doing her such a favour, but she knew that he'd taken Dad's lovely old rocking chair whatever the list said.\n\nShe said that after the deposit on the room she had rented she had about twenty quid to her name, and would that cover it. He shook his head in great disappointment and said perhaps she could buy it from the dealer on terms or something.\n\n\"We're letting you keep the bed Naomi...\" he said with an admonishing tone at her apparent theft of it, as if that made it all worth it.\n\nBut Pete, the youngest, cheekiest and always the closest of her 'brothers and sisters' had at least taken the photos from Ruth and put them in his car. Insisting to Ruth that he wanted to take some out for copying, he'd slipped them into a box with Naomi's things whispering,\n\n\"Take what you want Hun, that snooty bitch will never look at them ever again, you know that. I'll get Mum's dresser for you.\"\n\nShe wiped her face, \"Thanks Pete,\" she said, \"but you know what, I don't think I want it anymore.\"\n\nAs if to drive home her reduced status, at the funeral she rode in the car with Ruth's husband and John's wife, not in the car with her two brothers and sisters even though there was room. At the crematorium, she was put two rows back, nudged further and further from her 'family' by those with a better claim. She could see Pete arguing with the Funeral Director who just pointed at John and then Ruth who just dabbed her eyes and smiled that false smile of hers. In the end she sat bleary eyed, being held by Pete's fianc\u00e9e Julie as her former brother and sister, and former aunts and uncles systematically removed her from the heart of her happy family.\n\nAt the end of the service Julie smuggled a heartbroken soon-to-be sister in law out of the main entrance through the next funeral party waiting to enter so she wouldn't have to face the hypocrisy of the rest of the handshaking, headshaking, 'sad day, very sad day' conclusions that always occur at funerals. She sat in Julie's Ford Fiesta with Julie snarling, \"Fuck 'em Naomi, fuck the lot of 'em.\" She drove out of the car park mouthing foul words to Pete. She had nothing to do with John and Ruth for a further five years. The strange thing was they were the ones who resented her for it.\n\nPete had been good to his word though, and when his share of the money arrived he'd split it in half, not worrying that it wasn't what Mum and Dad would have wanted. It was the right thing to do, end of story.\n\nNaomi used it wisely; she held off from her last year of her teacher training, and got a job as a teaching assistant. She rented bedsitters, using only the interest from her nest egg and her wages to live on. She was promised support from the school she was in to finish her course but it was never forthcoming -- always next year, next year, when newer girls without her qualifications took the limited training places over her. Eventually two years ago, she got back into Uni' full time and with a student loan and some caring jobs evenings and weekends she had enough to keep her on the straight and narrow and be more than enough to get her the mortgage she would need for her new flat in her new life.\n\nPete stayed in weekly touch and phoned, emailed, texted and invited her for dinner, Sunday lunches and Christmas. His lovely wife Julie slagged 'that snooty, two faced so called God fearing bitch Ruth and that spineless twat of an elder brother John.\n\nJohn had arrived at Pete's place one Christmas morning with some forgotten gifts and there was a bit of a family reconciliation. She came to the large New Year's Eve party thinking that with the passage of time things might have changed but as soon as she saw Ruth, there was one of those over energetic cheek to cheek m'wah kisses that didn't touch and within minutes Ruth introduced Naomi to some 'new people' as 'an old friend that lived with us for a time'.\n\nShe shivered a bit thinking back on that. She refocussed and started to think about which chest of drawers to start on first there was a knock on the door, \"Naomi? Dad says come down for some tea,\" it was Lizzie.\n\n\"OK Honey, I'll be there in a second,\" Lizzie put her head around the door.\n\n\"Do you need a hand with anything?\"\n\n\"No thank you sweetheart,\" Naomi grinned at her new friend, \"I need to get my head straight before I get the room straight.\"\n\n\"Right,\" said Lizzie, \"Tea is getting cold, and I hate cold mash.\"\n\n\"Mash?\" Naomi had figured that 'tea' was going to be in a mug with a splash of milk.\n\n\"Yeah, pie and mash -- Dad's pies are the best.\"\n\n\"Oh... OK,\" she was pleasantly surprised, \"I'll come down then Lizzie, show me the way,\" and gave Lizzie her hand.\n\nAs she came into the kitchen she saw that the huge table she'd admired was now surrounded by a clutch of other young people and she grinned at them all.\n\n\"Aaaah Naomi,\" said Rob, \"Now the gang's all here; guys, this is Naomi who's renting the flat; Naomi, this is Paul, Matt, Carla and Carolyn -- Lizzie you already know.\"\n\nAs he listed the names it was obvious that this was a 'different' family, Paul was early teens, glasses, skinny, breaking out in acne, with dark hair; Matt sat in a wheelchair, his cerebral palsy obvious to Naomi's trained eye. Carla was the youngest by a few years, short, very slight, with faintly dusky skin and deeply soulful brown eyes while the rest of the family had blue, and Carolyn was a late teen's/early twenties redhead college student that didn't yet realise quite how stunningly attractive she was.\n\nShe paused, \"Right,\" she said with her pointer finger paused, \"Paul, Matt, Carla, Carolyn -- and of course Lizzie,\"\n\nCarla put a hand to Matt's, \"What's up Matt?\"\n\nThe boy took a deep breath and after some concentration said, \"No-mee,\" and smiled.\n\n\"Yeah!\" everyone around the table smiled and clapped. It was all Naomi could do not to cry, the boy's smile was infectious and she took the empty seat across from him taking his hand and giving it a squeeze. She knew from the start that she would, in that particular household at least, forever be No'mee.\n\nAfter tea Carla and Carolyn had made Naomi's bed, and were perched on the end as they watched Naomi unpack her bags of clothes making comments on what they thought stylish and what they wanted to borrow, while Lizzie sat on the swivel office chair Naomi had brought with her looking through the collection of books she was unpacking from boxes and loading onto shelves. Naomi had a sudden fear as Lizzie hit the 'Fifty Shades' trilogy. Carolyn saw her look and grinned.\n\n\"You'll have to change the combination Naomi,\" she said.\n\n\"Reckon I will, I saw you making eyes at my little black dress.\" Carolyn giggled again.\n\n\"No way,\" said Lizzie, \"She'd have to grow some boobs first.\" That was a terrible slander, while bordering on the Junoesque side, Carolyn would easily have fitted in the thing. Carolyn smiled and stuck her tongue out at her... sister?\n\nNaomi giggled and didn't for a second want to over-analyse this strange family that had made her so welcome.\n\nShe slept late; the morning sun came through the dormer windows and she woke gently. It was a real pleasure to realise where she was, and that appalling damp flat with the appalling landlord was a thing of the past. She made herself a cup of tea, listening to the radio and realised with all of yesterday's move she had almost no food in the place. She thought about going downstairs and asking if she could pinch a bowl of breakfast cereal, but decided instead to use the last of her sliced bread and make some toast.\n\nShe had enough marmalade to scrape across both slices and decided that after a shower, she'd go grocery shopping. The shower was just the right size for her and she enjoyed an extremely pleasant twenty minutes under it, a hangover from the last place when she only had half an hour on the bathroom rota between 6 and half past in the morning.\n\nThe nicest thing was that she didn't have to try and get dressed on a wet floor or take the risk of walk along the corridor to get back to her room in a dressing gown being letched at by the pervy landlord who always seemed to be around at six thirty. \n\nWrapped in just a towel she sat in her warm living room watching her TV drinking more tea and thinking how fantastic it all was.\n\nA few minutes before 12 she padded downstairs in her jeans and a bright T-shirt. She had gone with a nice lilac shirt instead of the tailored yellow one she liked so much that clung to her every curve, but the last thing she wanted to do was upset Mrs Rob and spoil things. \n\nShe assumed there was a Mrs Rob; the house was huge and there were all of these children to consider. He didn't look like he managed it all himself.\n\nAt the bottom of the stairs he found that the entire family was at the door ready to pile into the large people carrier on the drive.\n\n\"We're going shopping,\" said Carolyn, \"do you need anything?\"\n\n\"Yeah, virtually everything,\" she giggled. The six week school summer holidays had just started and she wouldn't be able to take advantage of the variety and availability of school catering as she had for the last three months.\n\n\"Room for one more,\" said Rob appearing with an arm load of empty shopping bags.\n\n\"What? No... I...\" stuttered Naomi, \"I don't want to kick anyone out.\"\n\n\"Seven seats honey,\" he said, \"enough room, jump in.\"\n\nCarolyn was sat in the back next to Matt with Paul on the other side, with Lizzie and Carla right at the back, so she took the empty front passenger seat. They drove to the out of town supermarket, and at the shop she found herself with Carla and Lizzie each side of her trolley and she followed Rob with his trolley and Matt's chair. Paul was perusing the shopping list.\n\nLizzie and Carla tried to convince her to buy all sorts of things that she absolutely didn't want or need. She purchased the essentials and a few niceties and barely filled the small trolley. They made one big noisy group all around Matt's wheelchair with Rob and Naomi trying to keep control of the whole thing. \n\n\"Doughnuts!\" shouted Carla, pointing at the Krispy-Kreme booth and dragging both Carolyn and Naomi towards them.\n\n\"Easy Carla,\" warned Rob.\n\n\"Oh come on Daddy, you promised last time,\" she threw in with just a touch of girlish petulance and an extended bottom lip.\n\n\"Oh yeah,\" Rob said, \"I do believe I did; OK Lizzie, find a big table...\" his sigh was lost to the cackle of young people all excitedly looking forward to the delights held within.\n\nFor Naomi it was like when she was little. Mum and Dad weren't poor not by any means, but the occasional treat was made all the more special by its rarity.\n\nRob had bought a mixed box but no one seemed to complain when Paul was given first choice; Naomi noticed he seemed to take a long time in choosing. His sisters looked on kindly. As soon as he'd picked the noise continued as before and the coffees and hot chocolates arrived.\n\nNaomi just sat among them and watched them laughing at the banter between them all. Once finished, they all made their way back out to the car and returned home. Seeing Rob and Carolyn unpacking the mountains of food for this huge family she helped Matt into the stair lift and helped him into bed for an afternoon nap. She went to her own room and slipping off her shoes and jeans did the same thing.\n\nShe woke at around six, wondering where she was again. She put her jeans back on and made herself a coffee and switched on her TV. It was an old fat cathode ray tube style television that had been replaced by a sleek 50\" plasma model that the family sat around downstairs. It got the standard collection of channels and even a video and DVD player. She sat and watched it stretching her feet out on the large comfy sofa that was there also.\n\nShe switched over to the BBC and found one her favourite TV shows, and from the laughter she heard from her open window, she knew that the family downstairs were watching it. Since she moved out of her 'home' those years ago, other than a short period when she lived with her then boyfriend, the thing she missed most of all was 'family'.\n\nHer boyfriend Steve had been another teaching assistant at her school. They'd started off as mates and after a particularly good night out, they'd ended up dancing and smooching each other late into the night. He'd asked her out on a date, and after a few months they were living together. This had lasted for almost two years up until Steve found her yearly bank statement and saw the money she had there. He demanded to know why they were going without holidays and living from pay day to pay day, when she had all that money. His bitching insistence that he'd shared everything he'd had, (which was bugger all) was seriously pissing her off. Brother Pete had always said it was so she could go back to Uni and finish off her teaching degree and she felt bound by it, after all, it was a lot of money and could have bought Pete and Julie's small house outright when added to his share.\n\nShe learned that money and relationships were difficult bedfellows and his eventual bad tempered departure had been one of the things that led to her going back to University. She'd guarded the money closely and after Uni' it would still just about enough to make up five percent of her mortgage and enough furniture to make it liveable.\n\nShe had decided that she would try and bank a bit more, seeing as house prices were constantly rising, and was going to find a decent cheap flat, so she could build up her funds and this was perfect. This flat was the best value, most comfortable, best equipped, poshest digs she'd ever had; yet she felt sadder than she had two months back when she found out that Mr Bastable her creepy landlord was going through her room when she left it and routing through her clothes drawers. Even though he'd kept her two weeks rent in lieu of notice, the old bastard had tried to screw her out of her \u00a3300 deposit for 'damage'. \n\nAn expert at this kind of thing now, she'd run through the photographs she'd taken of the place showing that in fact she'd actually improved it in the two years she'd lived here. In the end he'd argued that the bolt she'd screwed into the door to secure the room when she was asleep had significantly damaged the door, which was an original fixture. She was starting to lose her temper and said that the bolt was because he, Mr Bastable, had a key to her room and used to walk in.\n\nHe argued that this was just because he kept it in case she lost hers; he'd said that it was written into the contract that he'd come in every now and again and check his property. \n\nShe pointed out that it didn't include going through her underwear drawer -- he flustered that he'd done no such thing, she 'couldn't prove anything!' he'd snarled pointing his pudgy, nicotine stained, dirty nailed finger at her.\n\n\"Oh really,\" she'd said pulling the four A4 still photographs out of her handbag showing him with his face buried in her panties and clutching his crotch. A friend at university had loaned her a 'nannycam' she'd bought to check on her dog when she was away. It had a motion sensor on it, and fitted nicely into an innocent picture frame.\n\nShe noticed that her things in her room were being disturbed. She'd stuck one of her long hairs on her bedroom door and would find it broken in two when she got home. Once she realised that her intruder wasn't going to any other room she spoke to her tutor.\n\nThe nannycam came home the next day and she set it on her bedside table and checked it when she got home. It caught nothing until the third day when she got two side-on shots of him and it became evident that he was going through her clothes drawer. That night she moved the photo frame and two days later felt like she would vomit as he went through her underwear drawer moving with delight to her laundry basket, sniffing at the crotches of the panties she'd put in there. She binned her favourite dildo having seen him licking it with his eyes closed -- her only delight was it had used it anally last time!\n\nShe suggested he gave her the \u00a3300 he owed her on the understanding she didn't contact the police and worse, the university housing office and give them a copy of the photographs. He growled at her, and she growled back telling him that she had emailed the pictures to her best friend, and should anything happen it wouldn't take Sherlock Holmes to put two and two together.\n\nWith extremely bad grace his pulled a roll of notes from inside his stinking overall jacket and peeled off twenty pound notes, Naomi counting them so she could even tell him it was \u00a320 short.\n\nHe snarled and called her a bitch.\n\nShe snarled back, \"Bitch I may be, but they won't arrest me for being a bitch and put me in prison. They do that to perverted old men that sneak into young women's rooms and go through their underwear drawers. They'd love a stinking old fuck like you in prison,\" she grinned and moved as close as his rank body odour would allow, \"they'd beat shit out of you, and drop what's left down the stairs.\"\n\n\"Get out...\" he hissed, \"get out of my house you cow.\"\n\n\"Try and stop me you stinking fucking perv...\"\n\nAs she sat in the car out front of the house she saw him stick two fingers up to her. In pure revenge she pulled out her smartphone and emailed the pictures to the University Housing Team anyway suggesting they don't send any more females there, and if they wanted to contact the police she was more than willing to give a statement. That was yesterday and what seemed like a whole lifetime ago.\n\nThe sounds of happy family life two floors down, made her almost wish that she was back in that void; OK it was a void made bearable by visits to Pete and his wife and kids and her few mates, most of whom had now moved on seeing as they had all graduated.\n\nThis was her second night here and there was no sign of Mrs Stanley; tonnes of girls clothes but no 'ladies' things. Lizzie and Carla had shown her round the house and it was huge. During her tour she only saw one photo of a woman with Lizzie, evidently her mother, they had the same wild blonde hair, but that picture featured nowhere else. In the living room there were dozens of photos, but only of this 'family'.\n\nShe sipped her coffee and thought about getting up and getting herself one of the biscuits she'd bought. There was a knock at the door, \"It's open!\" she said, and was delighted to see Carolyn.\n\n\"Hi Carolyn,\" she said moving over on the sofa to make room, \"the kettle's just boiled Darling, would you like a coffee?\"\n\n\"Yeah,\" said Carolyn, \"I'd love one.\" Naomi sprung up and made for her tiny kitchen, digging out the jar of Nescafe. \n\n\"It's not the good stuff like you've got,\" said Naomi.\n\n\"Oh that's once a day a coffee and twice at weekends,\" giggled Carolyn. \"It's Dad's favourite but dead expensive, and it's leaping with caffeine so no one gets to sleep if we have too much.\"\n\nNaomi sat back on the sofa and reached for the chocolate biscuits she been snacking on. It was proper girlie.\n\n\"Here,\" said Naomi handing over the packet, \"don't tell your Dad I've been feeding you between meals.\"\n\nCarolyn took one and scrunched hungrily. \"Don't worry,\" she said, \"Dad's as guilty as anyone; we're all downstairs eating bread pudding, you should come get some.\"\n\n\"THAT'S what I could smell all afternoon,\" said Naomi, \"it smelled wonderful, my Mum...\" she paused, \"my Mum used to make bread pudding.\"\n",
        "\"Dad sent me to come and get you,\" she said, \"once we've finished your coffee of course.\"\n\nThey drank their coffee and chatted about University. Carolyn was fourteen months into an art and design degree specialising in fashion. Naomi suggested she should look at her wardrobe and give her some advice before they padded downstairs giggling, the smell of baking getting stronger and stronger.\n\n\"I'll do that Nomes,\" said Carolyn, \"I'll bring my drawings.\"\n\n\"I'll bring the wine,\" said Naomi; after all Carolyn was almost twenty.\n\nIn the large kitchen diner the whole family was back around the table chatting good-naturedly and tucking into large slabs of the solid pudding rich in mixed spice and various fruits. \n\n\"Aah Nomes!\" said Rob obviously in a good mood and 'at home', and cutting off a large piece and placing it on a paper serviette.\n\nShe bit into it, moist, fruity, sweet and spicy -- even better than the stuff Mum made.\n\n\"Mmmmmmm,\" she cooed, \"this is fantastic!\"\n\n\"Better than your Mums?\" said Carolyn.\n\n\"Ooh you can't ask those kinds of questions Carolyn,\" said Rob, \"it's not fair.\"\n\n\"No problem on that score Rob,\" said Naomi, \"It's head and shoulders over hers.\" Rob smiled and bowed slightly.\n\n\"Old family recipe,\" he said, \"all I did was double the sugar, double the mixed spice, double the fruit and add Amaretto and cherries.\" \n\n\"You make your own pies, bread pudding, excellent coffee...\"\n\n\"You should try his Sunday Roasts No'mee,\" said Carla excitedly, \"Daddy's a fantastic chef; he worked in a real kitchen, in a proper hotel.\"\n\n\"Really?\" Naomi said, impressed.\n\n\"Worked my way through college as a Sous-chef and Commis-chef, and old habits die hard. He poured her more coffee, \"you must come to lunch tomorrow,\" he said.\n\n\"Yay!\" shouted Lizzie and Carla together making Paul put fingers in his ears. Naomi noticed; the teaching assistant in her watched and smiled at him. Rob noticed too, and raised his cup to her, one professional to another -- a thought that had struck her their first meeting, he had special needs as well as his wheelchair bound brother, not tiny Carla.\n\n\"Well whatever you did to that pudding, it worked brilliantly,\" said Naomi and she was just about to wax lyrical about how good it was when there was a single shout from Carla and the kitchen emptied, leaving just her and Rob behind as the gentle whir of Matt's electric wheelchair carried him into the living room and the TV.\n\n\"Second half of X factor, BGT, or Strictly, or some other crap like that,\" he said, taking himself a further skinny slice of the pudding.\n\n\"They're a fantastic bunch,\" said Naomi watching after them fondly.\n\n\"Best thing I've ever done.\" He said looking wistfully and strolling to the work top and pouring more coffee.\n\n\"Not all yours though?\" She handed across her mug for a refill.\n\n\"Not as such,\" he said with a lift in his voice, \"Lizzie is mine, Matt is my nephew and the others are all waifs and strays I've picked up over the years somehow.\"\n\n\"Fostering or adoption?\" she asked finishing the last of her pudding and watching his fine bottom as he turned to the sink.\n\n\"Both,\" he said, \"Matt's Dad was my brother, we lost him about six years ago to a brain tumour. Terrible thing to watch, he made me promise that I'd look after Mattie once he'd gone,\" Rob's face lost some of his constant smile, \"saddest thing I've ever watched.\"\n\nTom's wife Anna had lost interest in both her husband and her son once Matt's cerebral palsy was diagnosed. She'd wept herself into misery, had tried to blame everyone for something that was just misfortune and the arguments started. She left citing irreconcilable differences, saying that Tom could keep the house and by implication Matt. She would have Matt one weekend in four to give Tom a rest, and argued that one evening a week wouldn't be convenient as she wanted to start her life over.\n\nThings were going well and Anna had even started to house sit every third Wednesday so Tom could go to the pictures. His employer allowed him to run his part of the international accountancy firm from home, and Tom put the headaches down to his strange new working hours.\n\nTom fought his brain tumour with all of his might; the even more aloof Anna said she couldn't take Matt more than she did already. After the tumour stopped responding to the treatment, Tom was given months to live. Anna was in tears, not for the loss of her ex-husband but the thought that she'd be left responsible for her son. Again, Rob watched as his former sister-in-law tried to hold her husband responsible for the latest problem to befall her life. Recently divorced Rob and his parents were looking after Matthew most of the time and Anna seemed terrified that the care might come to her now. She asked why Rob and his parents couldn't look after Matthew seeing as... as... \n\nRob's Mum, added the last words, \"Because you can't be bothered, because that Darling boy is too much trouble for such an important fucking woman like you...\"\n\nAnna's mouth flapped like a landed fish, and faced with the outright animosity of her former mother-in-law, she stormed out of the hospital never to be seen again. She had already sold the lease on her flat some weeks before and had moved, leaving no forwarding address, cancelling her email address and changing her mobile phone number. Rob could almost hear her complaining about having to tell her friends her new number while banning anyone but social services from having it. Social services had it on the understanding that the Data Protection Act banned them from telling the number to Tom or his family. They seemed singularly unable or unwilling to make her take any kind of responsibility for her son.\n\nTom's last bed was in a hospice side room, and he had dubbed it 'the dying room' from the first moment he went to there for some respite for his mother and Rob. \n\n\"That's the room Robbo,\" he'd said to his brother, \"I've seen three friends go in there and not come out. When they wheel me in there, you know it's time to dig out the coffin catalogues and book the hearse.\"\n\nTom had been to the hospice for several weeks at a time. The doctor and hospice staff had tried to help him towards 'closure' for him and his family suggesting that he should go home for his final days.\n\n\"Fuck that,\" he'd said, \"No way do I want my family forever associating any room in my house with me dying in it. No, you whizz me in there, put Lord of the Rings on the DVD player, turn down the lights and let me get on with it.\"\n\nAnd that was what they'd done. Matt had been wheeled in for what was to be his final visit, and had wept big tears, along with everyone else in the room, pained at the bravery of both father and son.\n\nRob was with Matt in the small waiting area and was about to take him along to the small creche.\n\n\"Mr Stanley?\" said the nurse, \"Tom has asked for you. I'll see to Matt.\"\n\nTom's tumour had increased to a size that the pressure on his brain was almost unbearable. He was heavily sedated and brought round once or twice a day when he had visitors, he was able to stay conscious for shorter and shorter periods until the pain had him crying out.\n\nRob knew that Tom was at that stage already.\n\n\"Rob,\" gasped Tom, \"promise... me...\" he panted against the agony in his head, \"promise... me... Matt...\" he gasped, \"My boy,\" he suppressed some great emotion, \"my baby boy,\" fat tears started to run down his brother's cheeks and Rob knew for once that they weren't about the pain. Tom reached out and grasped Rob's hand, \"Please... look after my boy... don't let them... send him to a home... they'll leave him in... a corner...\" Tom gasped, \"covered in his own dribble... in nappies... seen it...\" he screwed up his eyes against the image, \"don't let them... send him... don't... let... her...\" his voice turned to a faint growl, \"bitch...Anna...\" then a desperate gasp, \"please!\"\n\n\"It's OK mate, it's OK,\" said Rob, his eyes brimming as his dying brother held his hand in a vice-like grip, \"he's coming with me.\"\n\n\"I've... left it... all to you Rob,\" Tom was fighting the agony and the desire for the drugs that would end it, \"Please, take my boy... take him... home.\"\n\n\"OK mate,\" said Rob now holding his brother by the shoulders, \"he's already got his own room Tom, he'll live with me and Lizzie and Carolyn, I swear I'll raise him like you would have done, he'll be fine, trust me, you don't have to worry, not ever, I've got your back mate,\" Rob whispered barely in control, \"You can be on your way Tommo,\" he hissed using his boyhood nickname, \"I'll always be there for him, and he'll always remember you.\" The red-eyed nurse in the background was blinking through tears and preparing a syringe of clear liquid, and looking at Rob.\n\n\"Thanks... Rob,\" Tom's face was red, his eyes closed, his face had just the faintest hint of a smile and his shoulders eased into the bed again.\n\n\"Drugs,\" said Rob turning his tear stained face to the nurse, \"for Christ's sake give him his drugs.\"\n\nRob held Tom's hand until he started to slip into unconsciousness.\n\n\"Night... Rob...\" whispered Tom as the opening titles to 'The Return of the King' began to play.\n\nTom passed during the night, as he'd wanted; peacefully, without fuss, in his sleep, on his own, with Frodo bravely marching towards Mordor. His son Matt had slept in his own bedroom at his Uncle Rob's house, carried upstairs until a stair lift could be fitted.\n\nThe hospice rang Rob the following morning as instructed. Tom had arranged his own funeral and with some final signatures from Rob, the funeral took place.\n\nTrue to his word, Tom had left everything to his brother Rob, including his large house on the outskirts of a small village, the mortgage already paid by the insurance. Rob sold his house, moved his family into the big house, and that was that.\n\nA year later, being a legal expert Rob was able to legally adopt Matt because of his mother's outright refusal to contact anyone outside of the social services department, contact Rob, care for Matt or make any kind of decision that might mean she was responsible. \n\nHe was even able to raise a writ for costs against his missing ex-sister-in-law that he left with the social worker, as his Mum put it, \"just in case that spineless bitch puts her snotty nose out of the mire for more than twenty minutes.\"\n\nThe social worker knew better than even thinking of saying anything in Anna's defence.\n\n\"So this was Tom's house and we moved in. That's him there,\" said Rob pointing up to the photo of Matt and a good looking man the image of Rob. \n\n\"So you had Carolyn before Matt?\" said Naomi.\n\n\"Carolyn was the start of the whole thing; she was being fostered by my neighbours, and was all over my Lizzie and after a few months they were like sisters. Carolyn spent as much time in my house as she did in my neighbours; sleep-overs, lunch, tea, supper, everything.\" He took a deep breath, \"What I didn't know was my wife was spending a lot of time at her house, having an affair with my neighbour's husband as it turned out, and left me for him. After the divorce I got custody of Lizzie and the house, and one evening Lizzie and Carolyn both came in from the garden in tears and asked if Carolyn could be in our family because her foster family was breaking up and she had to go to a new one. I had to say yes didn't I...\"\n\nSo that's what had happened to Mrs Stanley; silly bitch. Love is blind they say, well the other bloke must have been fucking wonderful to walk out on Rob.\n\nThere was a shout from the front room, high pitched and passionate about whatever had been on the TV.\n\n\"Carla came to me via Matt's social worker a few years after we moved here. She was a proper grubby Dickensian street urchin complete with nits, lice and malnutrition; I think that's why she's a bit little for her age.\" Rob sipped from his coffee, \"her Mum was a drug addicted alcoholic occasional prostitute that left Carla to run wild.\" He dropped his voice, \"died in her sleep locked in her bedroom, choked on her own vomit or an overdose by all accounts, still had the needle in her arm. \n\nBecause of the area they lived in no one found Mum for a month. Carla had to feed and fend for herself, and she would wander into food shops and sweet shops and just take stuff off of the shelves and eat it in the middle of the shop. For the first week people said 'Aw how sweet, look at the tiny kid taking stuff off of the shelf, how funny'. After a while the shopkeepers didn't think it was funny and recognised her as being the addict whore's kid and the bitch should look after her better and kicked the poor little sod out. \n\nAfter a while she was starting to smell rather and was pushed out of all the shops and there was no where she could eat. This was followed by reports of the ghost kid trotting around the flats whining for food at all hours but because her Mum was such a scary cow no one would take her in or want to do more than pass her a sandwich. The bloke most people took to be her Dad was the big crack dealer on the estate and again, no one wanted to suggest he couldn't look after his own kid.\n\nThe lock on the front door was wrecked so Carla came and went as she wanted, sleeping on the couch as the flat was a one bed and Mum was locked in there, dead of course. She'd had a bit of a record with the social workers and they kind of left her alone because of it. Add to that, there was a suggestion on the estate that the Mother had done a runner because of unpaid drug bills.\n\nFinally it got to the point when the local police would catch a fleeting glimpse of Carla, and the school was getting reports from all the classes of this phantom kid walking around the estate trying to get stuff to eat from the other kids, stealing it from open windows when she had to. Got so that even the social workers couldn't just keep putting it on the waiting list.\n\nThey set several traps for her but she was too small and too quick and had too many escape routes, which culminated in the duty social worker actually deciding to go and visit; with the local Bobby she went up to the door and knocked, it swung open and both were knocked off of their feet by the smell of the decomposing mother. \n\nWe reckon that with the blue lights of the police and the ambulance and all the people around the front door, she just ran. Of course to make it worse, the council housing department insisted they clean the flat so they could re-let it. Not just the druggie's house but the two either side and one above that no one would live in because of the visitors. So some mindless jobsworth ordered the door repaired on a Friday and then locked it, ignoring the police and social worker request that it should be left open on a latch that was high up so she couldn't unlock it.\n\nWhen social services finally caught up with her she was so far over the wrong side of the tracks she was in the engine shed, probably nicking Thomas the tank engine's coal. No one seems to have heard of her Dad since.\"\n\nNaomi sipped her coffee, suddenly her life didn't seem so bad after all. \"How did they catch her?\"\n\nHe smiled and sipped at his, \"Poor little sod snuck on a bus, it was pissing down apparently, and fell asleep because it was so warm and cosy. She must have hidden under seats or something because she was found at four in the morning by a lady cleaner, sound asleep on one of the long seats.\n\nThey picked her up, and carried her, still asleep, into the crew room and called the police who contacted social services, she went to hospital where she was a bit of a star. A malnourished one, but a star none the less. The nurses would take it in turns to hold her at night so she would sleep.\"\n\n\"Oh how awful for her, the poor kid,\" Naomi sighed, \"I guess that Carolyn and Lizzie put her straight.\"\n\n\"Yep,\" he grinned proudly and finished his coffee, swirling the cup, \"and then some. Carolyn had been in care and just knew what she was going through and what she needed. Carla came to us as a four year old, virtually feral. She hardly spoke, trusted no one, couldn't use a knife and fork, ate really quickly with her hands then looked at everyone else's plate to see what they had left. The social worker had told me so of course so I worked out just what she needed then added some because the poor little bugger never knew what it was to be full up and would have eaten until the was sick. \n\nSo I showed her the cupboard where the crisps and biscuits were; don't worry I introduced her to the concept of fruit,\" she chuckled, \"yeah I know. I put a glass of milk by HER bed, left the night light and the radio on in HER room, and left the door open for her. An hour later I went up to find that she'd gone; I found her asleep in Carolyn's bed. Carolyn was fifteen at the time and I don't think she let go of her hand for the first three months.\"\n\n\"Wow,\" said Naomi trying not to look shocked.\n\n\"While I was trying to get her just to use the loo and not the garden, Carolyn and Lizzie got her to use the bath and shower; my two girlies see? They both knew what it was to be a littler girlie and they just played games with her, she had never learned to play you see, poor little sod. One of the games they played was splashing with water. They moved that from the garden into the bath and the shower, they all love that bloody bathroom!\" He grinned. \"They still spend loads of time in there together, I must have spent hundreds of pounds on bubble bath. \n\nThey started to brush each other's hair, make plats, tease out the knots, comb in the conditioner and comb out the remaining head lice. Again, they still play with each other's hair; they're all good at hairdressing!\"\n\nHe looked proudly towards the front room and the sound of them agreeing or disagreeing with what one of the judges had said, \"By the end of the second week she was saying please and thank you and washing her hands after going to the bathroom, she never used the bathroom before.\n\nHere we are four years on, she's top of the class in English and maths, speaks like she's been to Roedean and never shuts up, and the school think I should put her down for the local grammar because she'd piss the scholarship just on exam results. Carla is a tribute to Carolyn and Lizzie, nothing to do with me.\"\n\n\"Yeah, well who raised Carolyn and Lizzie, the tooth fairy?\"\n\n\"OK,\" he grinned, \"I'll give you that. Aaah, here's my boy!\" Paul appeared at the kitchen door peering through his glasses.\"\n\n\"Now then Daddy,\" said the boy in the most words Naomi had ever heard from him.\n\n\"What you after buddy?\" said Rob.\n\n\"Carolyn has sent me out for snacks while the adverts are on,\" Paul gave a slight twitch and pushed his glasses up his nose.\n\n\"Take the biscuit tin,\" said Rob and Paul carefully opened the cupboard and removed a tin, \"and tell your sister to come and get them herself next time!\"\n\nPaul put his head around the corner, \"She's helping Mattie in the bathroom,\" he said, \"with... with... with Lizzie.\" He walked away very business-like.\n\n\"OK mate,\" said Rob, now picking at the crumbs and currants left on the plate on the table. \"Paul now,\" he said nodding towards the boy.\n\n\"He's on the spectrum isn't he,\" said Naomi. Rob raised his mug in appreciation of her abilities and spotting that Paul was on the autistic spectrum.\n\n\"I guessed that you'd spotted it,\" he grinned again, \"He has an IQ in the one-fifties... and Asperger's Syndrome. He can talk higher maths, introductory particle physics, at fourteen he has fourteen GCSE's, half way through four A' levels targeted to get 'A-star' for all of them but I have to buy him shoes with Velcro because he can't figure out laces. If I put one of my or Matt's T-shirts in his room by mistake he has to take everything out of every drawer in his room just to check that nothing else is in there.\"\n\n\"I'll be careful with my laundry,\" said Naomi.",
        "\"He can also name every Star Trek episode and name the director, don't ask him about the films though, he gets rather cross.\" He grinned, \"His mother couldn't handle his temper, so he came to me for respite, two and a half years back, never seemed to leave. He goes back to see his seven brothers and sisters once a month and comes back all fired up and cross,\" he jerked his thumb back towards the living room, \"takes my girls five minutes to bring him back down though. \n\nStrange family; I think the general busy-ness and chaos of their place drives him insane; his mum got married for the third or fourth time and Paul struggled getting on with new Dad -- classic Asperger's. Change, he doesn't get it. New Dad didn't get it either and what's more didn't try. As far as he was concerned Paul 'should' like him because he was such a great bloke and such a comedian especially when it came to making jokes out of Paul's strange habits' and calling him a retard -- a word he must have learned off of the TV.\" \n\nRob couldn't hold in his contempt, \"So he was here for respite almost daily. His mum rather snottily suggested I adopt him as he liked my house so much more than hers...\" he grinned, \"So I did, just to annoy her, bitch.\" Naomi giggled at his humour. \"So just to really piss her off, I arranged for her so-called retard son to sit his exams early - with his GCSE's and A levels now he has twice as many qualifications as the rest of her 'normal' household put together - his mother included, the fat dumb bitch can barely write her name, in his tutor's words, if you put his Mum and new Dad together, you'd just about make a half-wit.\" \n\nNaomi spluttered the last of her coffee, \"When I was a teaching assistant my first job was with an autistic boy.\"\n\n\"You said you were a TA,\" he seemed pleased to be talking about something else.\n\n\"Yes, I was half way through my degree when my parents passed away and it all got a bit messed up; I took a few years out to get my head straight, then couldn't get back into uni'. I got a job as a TA and the head teacher kept promising to sponsor me through the rest of my course. Never happened of course; when I got bumped down the list for the third time, I left and signed up at Uni' again.\"\n\n\"Good,\" said Rob, \"I teach at the FE College,\" he said, \"Law, English, English Lit, history and politics. Other than that my time's pretty much my own. That's why I wanted someone that can keep an eye on the gang for me, I seem to spend every evening at that bloody college these days.\"\n\n\"No problem, you have a fantastic family, you have every right to be proud of each and every one of them.\"\n\n\"Oh I am,\" Rob grinned. She was desperate to tell Rob that she too was adopted, she too wanted to be part of this wonderful family. \n\nHe stood and walked to the fridge and took out a large film-wrapped mound of freshly made dough.\n\n\"I'm going to make pizza,\" he said, \"fancy some?\"\n\n\"Yes, can I help?\"\n\nHe asked her to get out various items from the fridge and she did so. She grated some cheese and pinched a few errant pieces, delighting in the flavour. \n\n\"Try this one,\" said Rob, handing across a small piece of another cheese. She bit into it and purred.\n\n\"Hmmmmmmmm,\" her face lit up, and Rob smiled back; she thought of better days at her parents' house, and grinned, \"This needs port!\"\n\nRob pursed his lips, rubbed his chin, and pulled out a large sliding cupboard, and he looked in as if deciding which bottle he wanted. He reached to the back and found a dark bottle, and withdrew it, reading the label and smiling.\n\n\"Half a bottle I bought some months back, never had someone else to drink it with me before.\" He handed it across.\n\nAs the pizzas sizzled in the oven, Rob and Naomi sat staring across the table, picking at squares of various cheeses, the occasional wheat or cream cracker and sipping luxuriously at the port, which was a particularly good one. At one point, he hand-fed her a piece, and the moment was as yummy as the crumbly Wensleydale she took from his fingers with her lips. \n\nThey suddenly remembered the pizzas in the oven and she delivered them to the front room, wanting only to sit in the kitchen with Rob and chat. They did so, eventually dragged into the front room with what was left of the bottle shared between them. They all sat in front of the TV watching a Harry Potter film until bed time when cookies and hot chocolate were handed around.\n\nAs she slept that night her dreams were disturbed, but in a quite nice way, by visions of Rob and that moment when his fingers touched her lips and they stared across the kitchen at each other.\n\nAs promised she arrived for Sunday lunch and sat across from Matt again, he was delightful. She found that Carla was next to her and had taken the seat that Lizzie had the last time. Again, the thing she was most concerned about was Paul and whether he'd be OK with this change in arrangements. She talked to him about it and he was fine.\n\nRob's lunch was spectacular - the large rolled brisket he'd bought the day before melted in the mouth and was flavoured beyond any other beef joint she'd ever tried. The roast potatoes where crispy enough to die for and the usual collection of roasted vegetables where cooked and arranged in a way she'd never tried before. \n\nTo add the final perfection, if that was possible, he took the lid from a pot that had been simmering on the hob the whole time and lifted a large Pyrex bowl from it. The bubbling yellow colouring told her this was golden syrup sponge, handmade and he'd even made real custard to go with it.\n\nThe years just rolled back, yet again.\n\nAt a little after three and following the most fantastic time they all rose, and started to load the dishwasher. Carolyn made tea and asked Naomi to take a seat in the front room. In a few moments the rest of the family arrived and sat, flopped and generally spread themselves around the living room and the TV. Carla was first to the remote and one of the Star Wars films was on. Carla flipped to the 'plus1' version of the channel and they were able to watch it from the start.\n\nCarla slid closer to Naomi and she could feel her flinch at some of the action bits. Hoping it was OK she raised an arm to allow her even closer and Carla responded pulling her arm around her and occasionally whispering into her ear bits about the film.\n\nWhen the film finished, Rob said that everyone needed to get their stuff sorted for the early start that many of them had for the next morning. Rob was at the college, Matt to a day trip with the local support group, Lizzie was off on a bike ride with friends, while Carolyn would be sitting Carla, not Paul of course; at least not directly or with his knowledge.\n\n\"Thanks Rob,\" she said as everyone peeled away in different directions, \"That was the most wonderful afternoon, thanks again.\"\n\n\"Anytime,\" he said, \"you're hereby officially invited to Sunday lunch whenever you feel like it, although a few hours' notice would be good, just for veggies prep you understand.\"\n\nShe laughed. \"You're on; next Sunday.\"\n\n\"Is there anything you don't eat?\" said Rob, \"Paul doesn't eat swede or parsnips unless they're mashed together, Carolyn hates marrow but not corgettes, Lizzie vomits over broad beans, at least she always threatens to -- Carla eats everything.\"\n\n\"So do I,\" she grinned, thinking about the little girl and her start in life, \"I was brought up to it.\"\n\n\"Great,\" he looked pensive, \"will have to do something impressive next week.\" He tapped his cheek.\n\n\"And that wasn't?\" she said.\n\n\"Not really,\" he said, \"no 'je ne sais qua' if you ask me.\"\n\n\"What!?!\" Naomi almost shrieked, \"The brisket was perfect,\" she stopped, thought for a few seconds and took a risk; she placed a hand on his shoulder, leaned in and whispered in his ear, \"I'd kill for another piece of that syrup sponge.\"\n\nHe grinned, placed his other hand over hers and said, with the smile of the satisfied professional, \"I'll take that as half compliment -- half hint.\"\n\n\"Thank you,\" she whispered back, then moved back a bit, realising how close she was to him and seeing Carolyn watching them. She smiled to Carolyn, \"I'll tell you what, I'll keep an eye on Carla tomorrow, its Carolyn's holiday as well.\"\n\n\"Aww thanks Nomes!\" said Carolyn digging out her mobile, and beginning to text some friends as she walked away.\n\nThe next day, the noise from downstairs woke her and she headed into her bathroom and had another shower; it was electric so no worry about an empty tank after a certain time of the day.\n\nShe dressed in jeans again, and was pulling on her blouse when her door flew open and in came Carla at 100 miles an hour.\n\n\"Are we going out today No'mee?\"\n\n\"I expect so Darling,\" chuckled Naomi as she buttoned her blouse over her full bosom, \"we'll have to see what Paul wants to do...\"\n\n\"Carla?\" it was Rob his running feet on the stairs, \"Carla, leave Naomi alone look, she's probably...\"\n\nSuddenly Naomi had a thought, and hastily tucked her thin cotton blouse into her jeans, and rather than buttoning the last two buttons, she undid one.\n\nThere was a tap at the door.\n\n\"Come in Rob, it's fine,\" she waited for him to come in before she resumed dressing. Carla was in her bed lightly bouncing and Naomi turned her smiling face to Rob, her fingers pausing at her just exposed bra and cleavage.\n\n\"Sorry Nomes,\" said Rob, she noticed him dropping his eyes to check out her display then looking quickly back up into her face, \"as soon as we told her that she was spending the day with you we couldn't hold her back.\"\n\n\"No problem Rob,\" said Naomi leaving the last button undone to expose more flesh than she normally did. Rob didn't seem to mind, and she figured that it was no more than many women did.\n\nShe came down and made breakfast for herself, Carla and Paul, and was joined by Lizzie, dressed brightly and well for her cycle ride and picnic and she helped her prepare her snack food.\n\nCarolyn appeared, said goodbye and disappeared. Then there was a thump at the door, and half a dozen girls all Lizzie's age all with same classic city bikes with flowers on the baskets loaded with sandwiches and drinks just as Lizzie's one now was.\n\n\"Miss Williams!\" There was a few shouts from some Lizzie's friends that went to Priors Park and knew her, she waved and went out to meet them. She made sure that Lizzie had everything she needed, including sunscreen, and slipped her a five pound note to get herself 'something yummy' when she was out and brushed a few of her madly errant hairs back behind her ear. Lizzie gave her a hug and kiss and was on her way, with nice smiles from her friends and another addition to the 'Lovely Miss Williams' story.\n\nNaomi waved them all off, telling them to take care on the roads and to have a great time. Lizzie looked very pleased about the whole thing.\n\nBack in the kitchen she decided that she, Carla and Paul would eat out that day. However, Paul announced that he was going to stay in and he would make himself a sandwich at lunchtime. She sent Rob a text and he said that this was fine and he would phone Paul a couple of times and check he was OK.\n\nSo she plastered Carla with sunscreen and putting on some herself -- with Carla's assistance of course -- they walked to the bus stop and hopped on the very next one and went into the nearby town and the castle, somewhere that despite living within a bus ride distance Carla had never seen before.\n\nCarla was intrigued by the history she saw around her and asked questions of the history teacher she was with. The re-enactors helped to bring the place to life even more and Carla was a tiny bit upset by one of them, a very tall man dressed in black.\n\n\"Into the cage little girl,\" said the man in his best performance artist method acting, and Carla clung to Naomi's leg. The man took a step closer.\n\n\"She doesn't want to,\" said Naomi, putting her hands protectively onto Carla's shoulder.\n\n\"We don't care if she wants to or not, the people will decide!\" He roared and Naomi felt Carla freeze as the rest of the crowd laughed.\n\nNaomi grinned sweetly and indicated that the actor she lean in closer. \"I said she doesn't want to play...\"\n\n\"There was a notice on the way in that clearly stated that...\"\n\nNaomi rested a hand on his plastic chain mail and pulled him close, \"Yeah, she's eight and I don't think it's appropriate...\"\n\n\"I'm a fully trained actor and this has been worked out very carefully...\"\n\n\"Yeah?\" she snarled quietly into his ear, \"I'm a fully trained history teacher and unless you want me to point out the twenty two flaws in your presentation at the top of my voice and the half a dozen in your costume that I've counted so far then you carry on my friend -- because Trip Advisor is just SCREAMING out my name right now!\"\n\nShe felt Carla relax again, happy that Naomi was there to protect her.\n\nThe actor, slightly more deflated than he had been before continued and picked on a willing teenage girl to go into the cage and for him to describe the myriad tortures and agonies that would have been dealt out to the poor unfortunate occupiers 700 years before.\n\nWord must have spread as Carla was not picked out again, and they continued their tour and it was great fun. Much as it stuck in her throat to admit it, Naomi did consider bringing her year eights here next year for part of a lesson on the middle ages!\n\nThey sat on the grass before the huge castle keep eating hotdogs and fries and drinking chilled cola.\n\nCarla spoke, \"I didn't like that man,\" she said.\n\nNaomi could guess which man, \"I know sweetheart, I'm sorry, I didn't know they would be that nasty and scary.\"\n\n\"Yeah, but you scared him off No'mee!\" said the tiny girl popping on to her knees, \"You told him, you made the scary man go away.\"\n\n\"Yeah,\" said Naomi with a grin behind her sunglasses, \"we showed him!\" She held up her hand and Carla high-fived her and gave her a quick hug, quick as if she was testing it out.\n\nThey got the bus home and Naomi was on hand to welcome all of the excursionists back, and was happy that Paul had taken care of himself extremely well, and while she knew he'd had a sandwich and a packet of crisps, everything was back in its place in the kitchen, exactly the same place they'd been before she left.\n\nLizzie came in hot and with just the hint of redness on the tops of her arms and unpacked her bag of the few remaining items from her picnic. Mattie was next and she welcomed him from his bus, shouting in delight when she recognised one of the carers on the trip from her time as a TA two years before.\n\nShe waved the bus off and held the door while he drove his chair into the front of the house.\n\nFinally at a little after six there was Carolyn, full of smiles and relaxed.\n\nRob was still at a drop in session at the college for prospective students and for those that were concerned they hadn't quite got the results they wanted. Even though she knew that her charges had all had long days and would probably disappear to their own rooms she still brought her lesson plans down with her and sat up to the kitchen table that had a view of the living room. \n\nRob had left tea with instructions and Carolyn and Lizzie naturally prepared a plate for her, and she joined them again. As the dishwasher chuntered away to itself she was working on some year eight assignments for the next term when she felt a nudge next to her. It was Matt in his wheelchair.\n\n\"Hello Darling,\" she beamed.\n\n\"H'lo No-mee,\" he beamed back.\n\n\"How are you?\" she asked brightly putting down her pen.\n\n\"Fi' thang you,\" he replied. She reached out and squeezed his hand. Next one in was Carla, evidently looking for her big brother. She perched on the chair next to Naomi watching what she was doing.\n\n\"Watcha' dooooin'?\" she pined, sidling closer to Naomi.\n\n\"Lesson plans for year eight history darling,\" she said.\n\n\"What was the question?\" she asked stretching up and trying to look down on the notes she was writing.\n\n\"I want everyone to write about what caused the Black Deeeeeeeath!\" she wriggled her fingers in her face and cackled. Carla giggled and flinched back. Matt laughed too.\n\n\"Bu-bo playee,\" said Matt very matter-of-factly.\n\n\"Yes!\" said Naomi pointing at him, \"Exactly! You remember what caused it though Mattie?\" Carla thrust a hand in the air.\n\n\"I read that it Horrible Histories!\"\n\n\"Yeah, but Matt is talking isn't he Princess,\"\n\n\"Flee' hon rah-sss.\" He beamed, \"Gee Cee Hess HEEE!\" he burst out and tapped his chest with his thumb, still proud of his General Certificates of Secondary Education that he had gained despite what others thought him capable of.\n\n\"Woohoo!\" cheered Naomi, \"what others do you have honey?\"\n\n\"He's got....\"\n\n\"Matt's going to tell me,\" she took in the slightly crestfallen look from Carla, so moved next to her and put an arm around her looking straight at Matt.\n\n\"Ingli', Sci' ann, Hih-dory,\" he paused and looked up as if thinking about his qualifications, \"Ma'hss foun...\", he looked to Carla for support, almost as if Naomi wouldn't know what the word was.\n\n\"Foundation maths,\" whispered Carla in her ear.\n\n\"Wow! Get you!!\" she said genuinely impressed, \"Which science did you get?\"\n\n\"Huuuu-ma bi--oh gee.\"\n\n\"I failed that one,\" said Naomi with her eyes down, then grimaced back, \"Had to re-sit at college,\" she whispered.\n\nMatt looked triumphant, \"Eee-hee!\" he said and waved his hand.\n\n\"Easy?\" she stood, \"EASY?\" she came round behind him in his chair and tickled him as lightly as she could, knowing how easily a swift movements could irritate or upset his condition. He giggled, and Carla put her hand to her mouth laughing at this grown-up she had only known a short while playing with her brother.\n\nCarolyn appeared in the doorway, as she so often did when there could be a problem \"And what's all this racket?\" she grinned.\n\n\"Mattie is larging it about his GCSE's,\" laughed Carla.\n\n\"He got human biology, I didn't,\" Naomi stopped tickling to put her arms around Matt's shoulders and hugged him, their faces touching. He rubbed his cheek against hers.\n\nCuddles; a warm body against hers, simple human contact. She'd missed it so much. She squeezed him softly and kissed his cheek, \"Right, who's for a cup of tea?\" She looked at Matt.\n\n\"Peees!\" grinned Matt.\n\n\"Mee! Shouted Carla, and the noise had Lizzie putting her head around the door. \n\n\"What's going down?\" she said.\n\n\"Tea,\" said Carolyn, \"Nomes is in the chair.\"\n\n\"One sugar pleeeease,\" said Lizzie.\n\n\"Hang on,\" she said seeing all the faces, even Paul was there now.\n\nShe looked across the kitchen and saw the big red tea pot, and a mug tree. The evening sun was falling across it and it looked perfect.\n\n\"My shout then,\" said Naomi affecting disappointment, \"but someone will have to show me where it all is.\"\n\n\"Suddenly the entire family, Mattie included were huddled round her showing her tea bags and how the kettle worked and she was carried along by it all. Paul stood and watched, and Naomi made sure that she included him at whatever distance he wished to maintain.\n\nMatt's special cup was put with the rest and he too had a cup of tea. A while after, the cry 'SIMPSONS!' went up and she was dragged away from the kitchen table and her lesson planning to the long sofas and she found that tonight she had Carla under one arm and Lizzie under the other. She stayed there for the hour that the Simpsons was on. They all laughed and sipped tea; the warmth of the two girls was wonderful and she could easily have stayed there all evening. But her planning was calling her (she wanted it done early so she could enjoy the summer) and at the end of the Simpsons she grudgingly stood, leaving her warm spot for the kitchen table. \n\nAs she carried on with the planning, Carolyn appeared with a second mug of tea. \"Thanks Darling,\" said Naomi taking the cup gratefully, \"I've nearly finished.\"",
        "\"Dad's another mega-planner,\" she said, \"he sits in the study surrounded by books and folders and he'll spend whole evenings doing it.\"\n\n\"I have enough to be getting on with,\" she smiled, \"but not too bad.\"\n\n\"Dad leaves his to the last minute,\" she said then looked at down the corridor, \"If you want to escape, I'm sure he wouldn't mind you using the study.\"\n\n\"No, that's fine, thanks for the offer though Darling,\" she sipped her tea, \"I said I'd keep an eye on things down here.\"\n\n\"Cool,\" said Carolyn looking relieved, \"I'll leave you to it then, I've got dissertation stuff that I need to start looking at to be honest.\"\n\n\"No problem,\" said Naomi, \"it's never too early to start and if you want me to proof read anything, just let me know.\"\n\nCarolyn paused, \"That would be good,\" she grinned, \"I can't ask Dad because he has so much else to do.\"\n\n\"Just tell me when Darling.\"\n\n\"Thanks Nomes!\" said Carolyn with a genuine smile of gratitude.\n\nNaomi finished one particular work stream and loaded all of the paperwork into her rucksack. Carla appeared rubbing her eyes and finally admitting defeat after her long day.\n\n\"Can you put me to bed please No'mee,\" said Carla.\n\n\"Of course I can Darling,\" she said holding out her hand, \"come and show me where everything is.\"\n\nCarla took her hand and led her to the first floor and the bathroom and with much hesitance admitted that she normally washed her hands and face and cleaned her teeth before putting on her pyjamas. This she did and ran back to her bedroom and pulled on her PJ's and rolled into bed.\n\nNaomi knelt on the floor by the bed, and taking a book from the shelf read a few pages to Carla, watching until her tiny eyes started to droop. She pulled the duvet up to her cheek, and without even thinking pecked a kiss on her cheek, wishing her a 'night-night, God Bless' just as Mum always had with her.\n\nShe put on her own T-shirt nightdress and carried out a final inspection of the downstairs. It was evident that Rob had returned and had put Mattie to bed. Despite her own kitchen in her room she still found herself in the main kitchen getting a glass of water.\n\nRob appeared, and although he looked tired, he looked really pleased to see her. She hoped it was because the nightdress was quite fitting and she was wearing nothing beneath it!\n\n\"Thank you so much Nomes,\" he said with a huge grin, \"everyone has said what a great day they've had.\"\n\n\"I had a great day too! Went to the castle, got a few ideas for a lesson and day trip combined for the year eights next year.\"\n\n\"Yeah, so Lizzie tells me; AND,\" he said with a slightly raised voice, \"You're Carla's new knight in shining armour!\"\n\nShe had a brief moment of panic, she hadn't even figured that Rob might not want his eight year old daughter taken to the scary castle.\n\n\"Well...\" she said, \"It was there and so were we...\"\n\n\"Carla loved it,\" he said with a smile, \"She's told Carolyn how brilliant you were and how you scared the nasty man away.\" He looked her up and down, especially her long brown legs exposed by the nightdress.\n\nShe felt a bit exposed but smiled through it. \"Yeah, Tosser of a performance artist thought he'd try it on, soon put him straight.\"\n\n\"Thanks Nomes,\" he said, \"really, thank you; the kids, they've all...\"\n\n\"Aww, your welcome Rob,\" she said and wished him a good night, stopping at the foot of the stairs to see if she had the nerve to go back in and talk to him some more or whether he might come after her. Neither happened, but they had all summer.\n\nAfter a week or so, she felt that familiar tingle in her loins that let her know she was due on. Oh shit, something else she might have to explain.\n\nEver since her first period nearly eighteen years ago, she'd had a particular reaction -- tears. On the first or second day she'd have a huge burst of hormones and everything from a baby rabbit to a nice sunset would have her blubbing. God forbid someone put on a weepy film.\n\nShe decided that chances are she could go out for the day and at least she had the chance shut the door and lock herself away in the flat. \n\nThe second thing was the raging horniness that followed two days after she finished. She'd thrown away her last vibrator as she knew that Mr Bastable had messed around with it. She thought about going into town to buy a new one at the Anne Summers shop. Terrible thing was that she just knew that she would be bound to meet any number of her pupils amongst the throngs of people flooding the town centre and an Anne Summers bag would be bound to raise some discussion among them. Even a quick 'Just saw Miss Williams walk into/out of Anne Summers' would be Facebooked and tweeted within seconds of it happening by any one of the 900+ young adults all on summer holiday.\n\nShe growled; that bastard of a landlord; fucking nuisance. Internet? No, it would be delivered here and trying to explain to the gorgeous little Carla why she couldn't open the parcel for her wasn't a discussion she wanted to have either!\n\nFuck it; or not as the case may be.\n\nShe put on a pad a let nature take its course. She managed to get through the day with only feeling a slight twinge towards tears. The family were all out at various places for the day and she left her loft room for the space and light of the kitchen and living room of the main house, conscious that it wouldn't be long now. She fought off the tears, she knew that if she just cried for the sake of it, the hormones would still jump out on her and make her cry and it was just a case of waiting. She knew that there would be plenty of things to set her off in this lovely house.\n\nMatt, she just knew one look at his ever cheerful face would have her brimming with tears; dear little Carla, sweet and probably a couple of years away from puberty herself. Lovely Lizzie, a living embodiment of Joie de vivre if there ever was one; she felt her eyes fill with tears then wiped them. Another five minutes, ten minutes, perhaps an hour and she could run upstairs lay on the bed and get it out of her system for another 28 days.\n\nMany of her friends knew about it and even joked, talking about sad things, or cute things just to make her cry and get it out the way. Her brother Pete had known and when he saw it coming, he'd just hug her until she cried and that was that. Bless him, she should ring him and tell him about this fantastic place she got herself into. That would do it, a tearful chat with her big brother, all done.\n\nShe heard the rattle of the front door, conscious of the family noise going on around the rest of the house meant that they were all back and she ran upstairs. Rob was in the kitchen and cooking something delicious into the bargain. Shit, what a night to have to lock herself away from everyone. Whatever he was cooking smelt wonderfully of chicken and she thought it was probably a curry or the like. Her mouth watered, but she lay on her bed like some kind of werewolf not wanting the world to see this tear stained monster she became every month.\n\nShe was congratulating herself it when her unlocked door opened and she was greeted with, \"Surprise!\"\n\nIt was Carla; who leapt on her bed with huge grin and what looked like some art work she done at the club she'd gone to, it had a gold sticker on it.\n\n\"Look No'mee!\" burst out Carla, \"It's a castle like the one we went to!\" It was a lovely picture and Carla was over the moon. It was too much.\n\n\"That's wonderful Darling,\" was what she wanted to say, but she barely got 'That's...' out of her mouth before she started to cry.\n\nCarla, a bit shocked, looked like she might cry as well and jumped from the bed and tore down the stairs leaving her homework on the bed. Naomi tried to go after her but slumped exhausted onto her bed and wept.\n\nAbout five minutes later she heard a light tap at the door. \"Naomi?\" it was Rob, \"Is everything OK honey?\" \n\nShe wiped her face with a tissue and called him to come in.\n\n\"Carla said...\" he saw her red eyes and walked to where she was, and just put an arm around her, no explanations necessary. It was enough. She blubbed all over again, weeping into the strong wonderful shoulder she'd already so admired.\n\n\"Sorry Rob,\" she said catching her breath, \"nothing to worry about, it's...\" she sniffed, best thing was just to spit it out, \"it's just my time of the month,\" she panted and tried to smile, \"my PMT is this. Anyone else wants to tear off the head of the next nearest person; me, I cry my heart out for an hour.\"\n\n\"You're sure you're OK?\"\n\n\"Positive,\" she said, \"once a month every month, like it or not. Sometimes more sometimes less but always some tears.\"\n\n\"Carla was really worried, she thought she'd done something terrible.\"\n\n\"Oh no,\" her tears had subsided but this made her start over again, \"please, send her back up, I'll have a chat with her and explain.\"\n\n\"OK,\" he grinned, looking happier himself, his arm stayed around her shoulder.\n\n\"Thank you for your concern though,\" she said, \"the arm around the shoulder is normally the best treatment for it.\"\n\n\"You are most welcome,\" he said giving her a slight squeeze, \"I'll send Carla up with a coffee; dinner tonight is chicken curry, one of my signature dishes - won't you join us?\"\n\n\"Oh I don't know,\" she said thinking about the five faces downstairs that would all need some explanation.\n\n\"Look,\" he said, \"my ex would go chocoholic psychotic, Carolyn becomes snappy and Lizzie get paranoid. Me and my boys just put up with it; it's nothing new and nothing to be ashamed of, honest. Put a tick on the calendar in your favourite colour if you want -- just so the males know when to shut up, Carolyn and Lizzie both do; Carla's even picked out the colour she wants when it's her turn.\" He gave her a huge smile.\n\n\"Oh; well I...\"\n\n\"I'm sending up my Carla,\" he said with a shrug, \"argue with her if you can.\" He squeezed her shoulder once more, kissed her cheek and stood and headed downstairs. She smiled and rubbed her cheek where he'd kissed her.\n\nFive minutes later another red eyed face appeared at her door, \"Is everything OK No'mee?\" she said, as if still not sure if she'd done anything wrong.\n\n\"Of course Darling,\" she braced up, \"it's just my 'time of the month' thing, not your fault at all. You just caught me when I was ready to burst honey, that's all.\"\n\nShe came into the room carrying a thermal mug which she proudly handed across to Naomi.\n\n\"That's OK then, I was a bit worried...\"\n\n\"You don't have to be Darling,\" she threw in quickly, \"so tell me about this great picture!\" she brightened her voice.\n\n\"The helper said it was just like the castle in town, and I said you'd taken me there last week. She said it was the best she'd had all summer.\"\n\n\"Not surprised,\" Naomi whispered back, \"come here and give me a hug.\"\n\nCarla leapt onto the bed and squeezed Naomi as hard as she could, and without doubt it was the best medicine. Carla even went so far as to kiss her on lips.\n\n\"Daddy says you've got to come down for tea,\" she added.\n\n\"OK Princess, just for you.\" She gave her cup to Carla, picked her up from the bed and carried her down to the kitchen. Her tiny figure weighed almost nothing, and she thought Carla weighed the same as a five year old not eight pushing nine.\n\n\"Sorry for all the upset guys,\" said Naomi.\n\n\"Oh that's nothing,\" said Lizzie, \"if you want PMT you should speak to the incredible hulk over there.\"\n\nCarolyn stuck out her tongue but couldn't stop herself grinning, \"Yeah well, with a drama queen like you in the house, how can I stop myself getting a little angry.\"\n\nThe stuck out tongue was greeted by another one and they both smiled.\n\n\"Research suggests that they're all going to coincide after a while,\" said a male voice in that most female of discussions, it was Paul.\n\n\"Oh shit yeah, sorry Rob,\" she put a hand to her mouth, \"pardon my language guys.\"\n\n\"My thoughts exactly,\" said Rob, \"we'll suffer won't we fella's?\" He looked at Paul and Matt. Matt shrugged the matter off, while Paul looked a little concerned.\n\n\"It doesn't matter though Daddy,\" said Paul, \"there's nothing the girls can do about it, it's only natural hormone imbalance.\"\n\nIf any other fourteen year old had said it, Naomi would have laughed.\n\n\"Thank you Paul,\" she said, \"we need our men to be understanding - don't we ladies.\"\n\n\"First time for everything,\" said Lizzie with a grin.\n\nPerfectly normal, like Paul had said. She looked at the large calendar with the two coloured ticks a day or so apart. \"OK if I take green girls?\"\n\nHis curry was fantastic, and she had seconds, and for the first time she sat in the living room with the whole family all evening, first with a glass of wine then a second, and then finally a hot chocolate before she followed the children upstairs at bedtime. It was one of the first of the many lovely nights she had with them all. \n\nShe would never know what made her stand outside the bathroom that particular evening. She was conscious that tonight Carla, Lizzie and Carolyn would be out until later and she knew she might get a few more precious moments with just her and Rob. Despite her period, she'd dressed for the occasion even, wearing skinny jeans and low cut but most of all pretty top.\n\nThere was something wonderful between Rob and Matt, a male bonding thing that was sweet yet serious, good natured yet witty and it was fun to hear the banter that went on between Uncle and Nephew, even though they had been much more for many years now. Matt was almost nineteen so she couldn't just intrude but she was still enchanted by them and would listen at the door to the same discussion each night, as she slipped further and further under this strange family's spell.\n\nMatt would describe his day either at college or the day centre or hospital. It was this way that she learned that while Matt struggled with his speech he had lots to say. He was learning to use a machine that would talk for him, and he could programme in certain sentences already.\n\nShe had been sitting on her sofa sipping tea, when she heard the familiar whine of the stair lift bringing Matt and his chair up the stairs. She padded down to listen to today's discussion thinking that this time she would offer Rob a cup of tea as Matt sat in the bath, because tonight was a bath rather than shower night. She sat on the bottom step listening to the gentle ribbing that each gave the other waiting for a suitable time to knock the door.\n\nThere was a high pitched whine and an almighty splash and a thump and as she stood Rob's shout of 'Matt!' had her opening the door.\n\nRob was on the floor pinned between bath and toilet pedestal trying to stand, his hand glued to his bleeding forehead. In the bath it was evident that Matt was in trouble and splashing around in the shallow water. Gently pushing Rob aside she knelt over the bath and with a gentle 'Hey Mattie, No'mee's here Darling,' she grabbed him around the shoulders and pulled him into a sitting position bracing one knee against the other side of the bath oblivious to the water. She unclipped the hoist used to lower him into the water.\n\n\"Shit,\" said Rob.\n\n\"You OK Rob?\" said Naomi her knee sliding down into the water.\n\n\"Yeah,\" he said, \"How's Matt,\"\n\n\"We're fine darling, aren't we?\" she said hugging the boy, knowing that right now all he needed was a warm shoulder and a pair of arms.\n\n\"No-mee,\" Matt managed to say.\n\n\"I'm so sorry about that,\" said Rob, \"the ratchet that controls the strapping must have completely stripped out. It's so lucky you were here,\" he made to stand up, \"Oh shit, bit blurry still.\"\n\n\"No problem,\" said Naomi, \"glad I was here to help.\" She realised that Matt was very slight and bracing herself lifted him into her arms, and stepped out of the bath onto the vinyl flooring with water running down her leg and sat Matt on the seat by Rob, and wrapping him in the towel that was already there. She stood, \"CAROLYN! LIZZIE! Bathroom, now!\" She knew they were out on this night but figured she try anyway. She took the small hand towel and pressed it to Rob's forehead.\n\n\"They're not back from picking up Carla from dance class,\" said Rob, placing a warm wet hand over hers. \n\n\"Let me have a look,\" she said, leaving Matt for a second and pulling the towel away from the cut, \"Not too bad,\" she said, \"An A&E job though I think,\"\n\nShe looked in the bathroom mirror and realised that her blouse was all but translucent from picking a very wet Matt out of the bath, and showed every curve of her quite brief lacy brassiere and her fantastic bosom it contained, not worried for a second that Rob had a great view of her breasts, in fact she figured she didn't mind at all.\n\n\"Go and get dried off Naomi, I've got him, it's fine really.\"\n\n\"Don't be daft Rob,\" she said, \"you've got a head wound.\" Matt had stopped trembling and Naomi figured that her arm around his shoulder and her big smile was doing him as much good as the towel she was rubbing across his chest and arms. \"Anyway, I think my mate Mattie should be the judge.\"\n\n\"No... mee... stay,\" said Matt shaking the tiniest bit with the shock and a touch of cold.\n\n\"There, see?\" said Naomi with a smile.\n\n\"Democracy in action,\" said Rob, \"the people have spoken.\"\n\nNaomi looked down at her hips noticing that her 'pulling jeans', the really tight low-riders that showed off her curves to the best advantage, seemed to be more tight fitting than before. She turned to make sure her bottom was at its best. For one crazy moment she tried to think of a way she could get her trousers off -- she was wearing white high cut shorts that matched the bra and hid the sanitary pad she was wearing. The towel he had pressed to his forehead was virtually covering his eyes anyway.\n\nShe dried Matt and lifted him from the chair and into his wheel chair, still wrapped in towels and kissed his cheek, \"you sit quiet for one minute darling boy, I've got to see to Daddy.\" A thought struck her and she decided to go with it.\n\n\"Sorry about this boys,\" she said, and without preamble peeled off her jeans, \"look fantastic but they're wet and have shrunk three sizes, and I still need to breathe.\" She took a deep breath and undid the button and fly, working hard to make sure her panties didn't come down, well, not to far at least.\n\nOne of the things about being an impoverished student was that you rarely put on a lot of weight, and what she had stayed where she wanted it, and kept her a very curvaceous 36-24-36. Some running and some gentle exercise at the school had kept her toned.\n\nShe came back to Rob pressing the towel to his head, she looked to her right and saw Paul, eyes wide open.\n\n\"Hello Paulie,\" said Naomi in a very day to day voice, and throwing another towel over Rob's head to cover the bloody one. \"You'd think we were all a bit too old for having water fights.\"\n\n\"You've... you've no trousers.\" He looked confused and slightly worried. Matt grinned.\n\nShe bent to pick them up, \"Yes I have,\" she said matter of factly and in her best school teacher voice, \"they're here look.\"\n\n\"Oh,\" said Paul wiping his glasses with his T-shirt, \"So they are; when are the girls back?\"\n\n\"About half an hour honey, getting Carla from dancing; it's Tuesday don't forget,\" said Naomi. \n\n\"Oh yes,\" said Paul, a look of resolution across his face and his faith in the surety of the goings on in his big strange house partially restored at least, and he headed back to his room.\n\n\"That was fucking genius,\" said Rob, reappearing from under the second towel.\n\nNaomi smiled, then thinking of her strange dress, bowed slightly to check his head wound and happy that he'd get to see straight down her cleavage and breasts. \"It's all in the presentation Rob,\" she said, straightening and giving him a big smile.\n\nMatt looked crossly at Rob, \"Dadd, Bad wor',\" he said.\n\n\"Dad didn't mean it mate,\" said Naomi turning on her knees and putting an arm around him, happy that her bottom was on perfect display to Rob.",
        "He gulped and tried not to look, which Naomi though absolutely captivating!\n\nShe got Rob's phone from him and was busy texting Carolyn to get her to come straight home. She'd wrapped the second towel around her for decency's sake as the panic was now over and it was just as easy to go get dry trousers. Carolyn arrived, and Lizzie and Carla dispatched to their rooms to change, while Rob was sneaked out to the car, his slowly developing bruise unmistakeable.\n\nNaomi took over the childminding again and once Matt was in dry PJ's and napping in his chair, she'd gone with a T-shirt and tight mid-thigh denim skirt and was at the big TV in the downstairs living room talking about dance steps with Lizzie and cuddling both her and Carla as they watched a TV programme about cars.\n\nTwo hours later Rob reappeared at the front door, with a large sticking plaster over his stitched scar, a whole collection of fish and chips and a bunch of flowers.\n\n\"Nomes,\" said Rob coming toward her holding out the flowers, \"you are an honest to God marvel, thank you soooo much,\" and handed her the flowers.\n\n\"Wow! Thank you,\" she said, leaning forward and giving him a peck on the cheek, she felt her cheeks flush; she had never been given flowers before.\n\n\"Bloody hell,\" said Rob with a grin, \"with a smile like that I must buy you flowers again some time.\" He looked her up and down taking in the tailored yellow T-shirt and short dress and brown thighs.\n\n\"Chips!\" growled Carla as Carolyn got plates from the cupboard, and they all headed for the huge table and the late evening feast.\n\nAs the meal continued, Carla looked at Rob and then at Naomi. She whispered in Lizzie's ear behind a shielding hand. Lizzie seemed to ponder what ever had been said, and turned to Carolyn, talking some kind of mischief behind her hand as well. Carolyn grinned, her mouth full of chips and nodded. She finished her mouthful and looked at Rob.\n\n\"You should take No'mee Dad!\" said Carolyn.\n\n\"What?\" said Naomi, \"take Naomi where?\"\n\n\"It's the awards dinner at Dad's college,\" said Lizzie grinning, \"On Saturday. They've had a great OFSTED report and because Dad's department did so well, he's been invited to the college ball and his ticket says 'plus one' and Daddy doesn't have a 'one'.\"\n\n\"Thank you Lizzie,\" said Rob in a voice trying really hard to be stern but failing miserably.\n\n\"Yeah,\" said Lizzie, \"Naomi would be brilliant, she could wear her little black dress that Carolyn wants to pinch all the time. HOUSE VOTE!\" shouted Lizzie with her right hand high in the air.\n\n\"No-mee!\" shouted Carla, closely followed by Carolyn.\n\n\"I think you should take Naomi Dad,\" said Paul with an extremely rare grin. He leaned on the back of Matt's chair.\n\n\"Noo-meeee!\" said Matt pointing at Naomi.\n\n\"Doesn't Naomi have a vote?\" said Rob.\n\n\"Of course Rob,\" she said, \"sadly girls I don't have a thing to wear, I think my little black dress would be a little tooooo little for a black tie dinner.\"\n\n\"What about that dark blue silk gown!\" said Carla, remembering all of the clothes that Naomi had unpacked.\n\n\"Oh heavens no,\" said Naomi, blushing slightly. \"That's a hand-me-down from my sister...\" she thought about Ruth handing her the dress she'd had specially made allegedly for a church function, but Naomi actually knew it was for her husband's raising to the next level in his masonic lodge. She stood so airily with it on the hanger telling her she could wear it to her 'graduation ball -- whenever THAT was'. Naomi had tried it once and it hung from her with a high lace neckline that wouldn't have disgraced a nun's habit.\n\nCarolyn stood, looked at her watch, counted on her finger, smiled at Lizzie and Carla, and like a sergeant instructing her troops said, \"with me... Naomi? The dress, your room.\" and left the room.\n\nNaomi looked at Rob, Paul and Matt for advice, it was a bit before nine.\n\n\"Carolyn is a fantastic seamstress,\" said Rob coolly and Matt gave both thumbs up. \"She made her own Prom dress and has made another one for Lizzie, even though she's a few months shy of it,\" added Rob.\n\n\"I'll err... get my dress,\" said Naomi, after all -- what harm, she had thought about cutting it up in an orgy of vengeful zeal many times anyway.\n\nBy the time Naomi had reached her wardrobe she heard the thunder of three pairs of feet on her staircase. Carolyn was first in with a notebook, behind her came Lizzie with a box while Carla had her phone and was evidently setting up the camera.\n\n\"This is it,\" said Naomi lacking enthusiasm, \"my sister was... is a bit bigger than me, so... something I can help you with Carolyn?!\" she giggled as Carolyn dipped into the box and withdrew a tape and started to measure her friend's waist, hips, chest and eventually her bust with a tape.\n\n\"Oh don't mind me,\" said Carolyn, with the driven look of an artist taking the final measurement from Naomi's waist to the floor, \"shoes?\"\n\n\"What?\"\n\n\"What shoes do you have?\"\n\n\"Errrr... in the wardrobe?\" Naomi pointed to the tall cupboard that held her slim collection of shoes. Carolyn swung the door opened and dropped to her knees and picking through the collection.\n\n\"Aaaaaaaaah, a black pump, perfect for dancing -- one inch heel, should go with this dress... if there's nothing else.\" she held it up to the material, \"Check. Three inch heel in blue would have been dynamite but needs must.\" Carolyn stood, lifted the cellophane wrapped dress and held it up against Naomi, who could only stand stunned by the total focus that Carolyn had. She perched on the edge of Naomi's bed then started to scribble on her notepad, the pencil flying in flowing strokes, the rubber on the end scrubbing at something she didn't like when necessary. At one point she raised the cellophane, pulled the skirt of the dress wide getting Naomi to hold it across her.\n\nAfter five or six minutes Carolyn had smiled a devilish smile, took the dress from Naomi then stepped back to take one more look at her. Naomi responding to the smile, dropped one hip and posed, hands on hips.\n\nCarolyn looked, was struck by a thought, handed the dress back to Naomi, \"you definitely don't have a pair of blue slingbacks?\" she asked. Naomi shook her head, and Carolyn made a change to her drawing, held it out in front of her, took the dress back and disappeared down the stairs.\n\n\"I've never seen Carolyn that wild!\" said Carla with a grin cutting across her face.\n\n\"What?\" said Naomi.\n\n\"I get a feeling that something wonderful is going to happen with our big sister,\" Lizzie added, \n\n\"She makes THE best dresses, you should see the drawings for my prom dress.\" Carla stood and twirled giving her the view of how stunning Carla would look in something like that, even though she was still in primary school and at least six years shy of her prom.\n\nNaomi thought nothing of it, and started to think about whether she should lash out a buy or rent a long gown and actually go with Rob to the ball, after all it was already Tuesday night and the event was only four nights away.\n\nCarolyn had started to play with clothes and material as a child. She'd started to make dresses for her various dollies and started to pick clothes from her huge baskets of Barbie and Cindy dolls and make outfits out of them. It wasn't until she arranged a fashion show and then filmed it that people began to realise that she had a real talent. \n\nHer grandmother, no mean seamstress herself, presented her with a second hand sowing machine and by her thirteenth birthday she was buying patterns and making clothes for her and for her sister Lizzie. By fourteen she realised that that patterns weren't all that they could be and, with Nanny's assistance was making her own patterns and buying large dresses and blouses from charity shops and cutting them up. At sixteen she made her own prom dress, and two more for friends. \n\nThe following year, while she was studying her A Levels she made 6 prom dresses for friends, and friends of friends. More so the following year and her huge collection of photographs and drawings were enough to get her into the degree course she wanted. She had stopped the Saturday job she'd had at a local fabric shop to concentrate on the dozens of requests she had for custom made dresses. Full length evening gowns, frocks, cocktail dresses, wedding dresses, suits, little black dresses, whatever anyone asked for with her own original style. It seemed that Naomi was to be the next beneficiary of her extraordinary talent.\n\nCarolyn appeared only for meals, choosing to spend time in her bedroom, accompanied by the sounds of her sewing machine. She appeared at about half four one afternoon and without preamble measured Naomi from mid-thigh to the floor.\n\nTwo nights later, at a shade after ten, Naomi was in her night dress and thinking about climbing into bed. There was a tap at the door.\n\n\"Yes?\"\n\n\"Nomes, it's me.\" It was Carolyn.\n\n\"Come in honey,\" she said; she never had changed the door combination or for that matter locked the door. The door swung open and in Carolyn came, carrying a dress -- a dress that appeared to be the same colour as the one she'd left with two nights before, but with no other similarity.\n\n\"Try,\" said Carolyn looking nervous, \"if it's not right I still have tomorrow and Saturday morning to mess around with it, as you can see, I've loads of material left.\"\n\nNaomi lifted the cellophane cover from the hanger and looked at the fantastic creation before her. The high ruffed collar and the high capped padded shoulders, replaced by a shaped bodice with a plunging neck-line.\n\n\"Wow Carolyn Darling, it looks fantastic!\"\n\n\"Try it on,\" she said biting her lower lip.\n\n\"Can't I...\" The look on Carolyn's face let her know that no, she couldn't try it on tomorrow.\n\nShe removed the hanger and handed it to Carolyn, and stepped into the dress conscious that she wasn't wearing any underwear -- mum had never held with knickers in bed unless it was time of the month, certain things needed to air she'd said, and she had finished that day. \n\nNaomi tried to hold up the dress and take off her T-shirt nightie at the same time and failed. As the T-shirt came off the dress slipped down leaving Naomi in her naked glory. \n\n\"Wow!\" said Carolyn sitting up, \"gorgeous!\" Naomi blushed and quickly ducked down and grabbed the dress pulling it up to her chest.\n\nCarolyn was behind her and pulling the thing to shape, as Naomi rearranged her bust to fit into the dress, and she felt the zip go up from the small of her back.\n\n\"The halter neck is optional,\" said Carolyn, \"but I think you'll like what it does.\" \n\nNaomi reached back with the two strips of blue material behind her neck and felt Carolyn take them and clip them around her the tops of her shoulders.\n\n\"Mirror,\" said Carolyn, running round to open the wardrobe doors exposing a large mirror the full length of the door.\n\nNaomi looked into the mirror and looked at fashion model therein. Carolyn had tailored the shapeless sack of silk into every single curve, even to the point of giving her the most wonderfully shaped and satisfactory cleavage she'd ever had, emphasised by the two straps going around her neck. She looked down and saw that most of the voluminous dress had gone and was cut into an almost pencil shape with tight layers that emphasised her hips, and a slash from the floor ending halfway up her right thigh.\n\nNaomi looked at the amount of flesh she was exposing, even her little black dress had shoulders. \"What about something here,\" said Naomi in a panic, \"if there's enough material perhaps a... wrap?\"\n\n\"Fuck off,\" said Carolyn matter of factly, \"you'll be the only woman in the room if you wear that, here,\" she put her arms around Naomi from behind and to her shock, reached into the dress and pulled her tits into a better shape, \"there, that'll do it.\"\n\nDespite her shock at Carolyn's grabbing of her tits Naomi had to agree. The thing was wonderful, and topped even her little black dress for style.\n\n\"If Dad doesn't take you out looking like that Naomi,\" said Carolyn, her head to one side crossed by a very satisfied smile, \"He needs his fucking head examined.\"\n\n\"Carolyn,\" said Naomi running her hands across her flat stomach and down her thighs, \"It's wonderful... I don't know what to say.\"\n\n\"Say you'll wear it and go with Dad to the ball,\" she said, \"he could do with a beautiful woman on his arm after all this time.\" \n\n\"He has three beautiful women already,\" said Naomi grinning at Carolyn.\n\n\"OK, a beautiful woman that's over 21 and doesn't call him Dad,\" added Carolyn. She grinned, \"we'll get a picture and put it on the shelf with all the others,\" she looked mischievous, \"that will soooooooo piss off Hilary when she comes round!\"\n\n\"Hilary?\" \n\n\"Lizzie's Mum, she comes round once a month to pick her up,\" Carolyn had a look that suggested emotional uncertainty, \"it used to be once a week but she works more now that her partner was made redundant. She's a teacher too -- at St Swithun's School.\" Carolyn laughed. \"She used to teach at the St Thomas A'Beckett - the Catholic school - until she got divorced. We've never had it confirmed whether she went of her own accord or was pushed. She's always seemed to lord it a bit over Dad because he hasn't dated, since her like.\" Carolyn inspected her fingers, \"she has another child and everything.\"\n\nNaomi took the chance and sat on the bed next to Carolyn and put an arm around her shoulders. \"Your Dad has the most wonderful family I've ever come across, including my own, and I don't think for a second that he's missing anything,\" Naomi took a deep breath, \"I know he's the proudest man in the world when he looks at all of you.\"\n\n\"Yeah,\" said Carolyn, \"I suppose, but I sometimes wonder if he never went looking for love... because of us... because it was too complicated here.\"\n\n\"Darling, anyone that didn't want the whole package wouldn't be worth the looking.\"\n\n\"Thanks Nomes,\" Carolyn turned and hugged Naomi. \"So, you going to be Cinderella and escort the handsome daddy to the ball?\"\n\n\"What? With you as the fairy Godmother? Don't tell me you're going to pull something off with a pumpkin and some mice.\" Carolyn laughed, \"Of course I'll go Darling, like a shot,\" Naomi stood and walked back to the mirror, nervously looking at the beautiful woman looking back at her, \"shit, Carolyn Darling, you have such a talent!\" Naomi started to pose in the mirror for effect.\n\n\"Yeah, well it helps when you've got good material and a really hot looking girl to dress.\"\n\n\"Hot?\" said Naomi in shock.\n\n\"Haven't you noticed?\" said Carolyn, \"you're gorgeous, I'd kill for an hourglass figure like yours. I've only seen you with clothes before but shit... how the fuck, with tits and arse like yours, are you still single girl?\" she giggled at herself and Naomi's shocked face.\n\n\"Carolyn!?!\"\n\n\"Well?\" Carolyn sat back on Naomi's bed and grinned.\n\n\"Well... what?\"\n\n\"Well how come you are still single, No,\" said Carolyn with a finger in the air, \"let me.\"\n\nShe stretched her arms back behind her and looked at Naomi in her figure hugging dress, who was still posing in the wardrobe mirror.\n\n\"Go on then,\" Naomi folded her arms making her boobs look even better.\n\n\"There isn't a man around or a hint of one. No photo or even a suggestion that you are turning on the jaaaaaazz,\" Carolyn grinned.\n\n\"Really?\"\n\n\"Really,\" said Carolyn, \"well, right up until a couple of weeks back when you made pizza with Dad. When he bought you the flowers I thought you would melt, took him ages to pick the right ones.\"\n\n\"What?\" said Naomi snapping back to look at Carolyn.\n\n\"Oh please,\" said Carolyn, \"even Paul's noticed your big smile when Dad's around.\"\n\n\"Carolyn...\"\n\n\"Tell me you don't fancy him then,\" said Carolyn.\n\n\"Well, he is very attractive,\" said Naomi.\n\n\"And?\"\n\n\"And I fancy the hell out of him,\" said Naomi admitting defeat.\n\n\"Aaaah!\" sighed Carolyn, \"the prosecution rests. And Dad's never invited any of the previous occupants of the flat to tea, least not every night. 'Get Naomi to come down for some cake Carolyn,' 'Get Naomi to come down for some coffee,' 'Tell Naomi that the film she wanted to see is on'.\" Carolyn smiled at Naomi's shocked face. \"I get the idea that the feeling is mutual?\" \n\n\"With you as my fashion advisor it shouldn't take long to find out!\" Naomi noticed that Carolyn was looking at her with a smile. \"What?\" said Naomi with a giggle.\n\n\"You and Dad,\" said Carolyn, \"challenge accepted.\"\n\n\"What?\" spluttered Naomi.\n\n\"Nothing, Nomes,\" she beamed back at her friend, \"just leave it all to me.\"\n\nNaomi blushed and laughed and turned to check out her bottom with the lined silk caressing it's every curve.\n\n\"Panty hose,\" said Carolyn turning from Cupid back to the dress designer and looking at Naomi's bottom, \"knickers, even a thong, would be sacrilege with a dress and, I might say, an arse like that.\"\n\n\"Yes Miss,\" grinned Naomi. \n\n\"Stand on tiptoe,\" said Carolyn, watching the silhouette in front of her, \"down a bit... down a bit... there,\" she took a deep breath, \"now look at what it's done for your bottom.\"\n\n\"Oh yeah,\" said Naomi, \"what size heel do I have to buy?\"\n\n\"I'll come with you,\" said Carolyn. \n\nShe did, and the next evening with her outfit complete, Naomi opened a bottle of Prosecco she'd bought and that night they drank most of it going through the rest of Naomi's wardrobe and making up outfits and taking notes on what extra stuff Naomi should get. It was the first of many girlie nights they had. Just them, no Lizzie or Carla, no boys, not even Rob.\n\nThat Saturday Naomi felt a buzz of excitement and was nervously applying make-up wearing her dressing gown with Carolyn and two equally excited girls watching her. They had all four spent the afternoon working up and on a style for Naomi's shoulder length hair, and it looked great.\n\n\"You're beautiful No'mee,\" said Carla watching her apply her make up, \"will you teach me to do that?\" \n\n\"Aww, thank you Darling; yes of course I will,\" she turned and brushed Carla's nose with her make-up brush, \"You are all beautiful already though princess.\" Carla giggled, and for once Naomi saw the little girl not trying to be so grown up like her sisters. She inspected her eyes one final time, before standing. \"OK you two, give me a couple of minutes while I dress.\"\n\n\"Ooooh!\" Lizzie and Carla whined as one, but Carolyn pulled them both to the door smiling and promising they'd be back in two minutes.\n\nFor a moment she thought back to the days when she'd sit with Mum while she sorted out her make-up for a night out. Mum had taught her what to do with the foundations, powders and various brushes and pencils she kept in that dresser. She smiled.\n\nNaomi had gone with a string, but with panty hose as Carolyn had suggested. She pulled on the dress and didn't even bother with the zip, instead holding the bodice to her boobs. She did feel that familiar desire though, the one she could almost set her watch by and she knew that if Rob looked too good tonight he'd been in with an exceedingly good chance of getting some from her. \n\nShe had already slipped a thin pantie shield in, she was starting to get damp, and knew that it would only get worse as she dressed in this hot looking dress.\n\n\"OK, you can come back in now,\" she called and the three girls reappeared from the stairs where they had obviously been waiting.\n\nShe turned her back to Carolyn who raised the zip slowly and carefully, and reached around taking the two straps and clipping them around her neck. \n\n\"Shoes,\" said Carolyn, stepping back to look at her creation. Carolyn put the matching blue heels on the carpet and Naomi stepped into them, while the two younger girls fastened the thin straps around her ankles. Carolyn reached down into the small paper bag on the table, withdrew a three layer pearl choker, and popped it over Naomi's carefully groomed head and clipped it around her beautifully sculpted neck. She grinned taking in the overall effect, \"Ladies, my work here is done.\"",
        "They were all silent for a moment, and Naomi felt her eyes fill with tears.\n\n\"Don't cry Nomes,\" blubbed Carolyn who was also getting wrapped up in the moment, \"You'll wreck your make up. One last thing,\" she said wiping her face and took a carrier bag from the door. \"You know that wrap you asked about?\" Naomi looked quizzically at her, and nodded. \"Here it is; it's for the big reveal.\"\n\n\"What...\" stuttered Naomi, \"What big reveal?\"\n\n\"Dad,\" she said, \"downstairs. You'll knock his eyes out.\"\n\nShe took the blue silk wrap and draped it around her shoulders, fastening the single button that held it in place. \n\n\"It must have taken you ages,\" said Naomi, \"it's lined and... everything.\"\n\n\"Couple of hours,\" said Carolyn, \"did it last night once I'd seen the shoes.\"\n\n\"Hours?\" said Naomi, \"but...\" Carolyn waved her away with grin.\n\nPicking up the small clutch bag she had bought with the shoes, she nervously put her lipstick and compact into it and on second thoughts her slim smartphone and a few coins. It didn't ruin the line of it at all. Then, after taking a final look in the mirror and closing the wardrobe door, she turned to her advisor and her assistants and, with a hand on her hip and a smile on her glossed lips used one of her favourite lines from the most apt song and said, \"Let's go girls...\"\n\nShe hadn't walked in such high heels for years, and it took a few moments to get the moves. After two sets of stairs, she eventually found herself in the hall, and headed through to the kitchen where Rob was giving final instructions to Chrissie, a teaching assistant from Matt's old school and occasional babysitter. Although Carolyn was more than capable, Rob insisted that there should be someone else in the house as Paul might be disturbed with Rob AND Naomi both going out. \n\nRob looked hot, she didn't realise he wore glasses and had obviously dumped the contact lenses for the night. They were dark designer frames that improved the lines of his already handsome face, and he'd shaved off his usual designer stubble. He was also wearing Davidoff 'Cool water' -- her all-time favourite male fragrance, an aftershave that one of her college crushes had worn, and her insides started to bubble.\n\n\"Dad!\" said Lizzie, \"Naomi's ready if you are.\" Rob turned and his face glowed as he took in the beautiful woman in front of him. Much as she tried it was impossible for Naomi not to meet his wonderful smile with one of her own.\n\n\"Do you know what Nomes,\" said Carolyn, \"You're right, you'll be way to hot with that wrap on, I'll take it.\"\n\nReaching up with one hand, she unbuttoned the small flap and raised her arms allowing Carolyn to take it from her shoulders.\n\nThe reaction was more than she could have hoped for. Rob was lost for words and Naomi flushed bright red as he took in the entire vision in blue silk. She could see Carolyn stood behind her Dad and miming how she should stand to be most impressive. Naomi did so.\n\n\"Wow!\" he said, the look on his face an absolute picture, \"Naomi...\" he was obviously lost for words and could only stare, before he turned away embarrassed and looked across at his daughter who was trying not, somewhat unsuccessfully, to look totally triumphant. \"Carolyn...\" Carla turned to Lizzie both of them holding hands and bouncing up and down like they were fit to burst and they hugged each other.\n\nCarolyn just looked Naomi up and down and turned casually, \"It's not turned out too bad, has it.\" She folded her arms in triumph.\n\nPaul stood looking the vision of Naomi up and down, and for once and despite his 150+ IQ he had nothing to say and just grinned, nodding his head.\n\nRob's face lost its shocked look, and he pointed a finger at his eldest daughter and crossed to her taking her face in his hands and kissing her. \"You, sweetheart, are a bloody genius!\"\n\n\"All to do with the model,\" said Carolyn brushing her finger nails absent-mindedly on her T-shirt, but still grinning and returning his kiss, \"All I did was wrap some nice material round a fantastic body.\" Naomi opened her mouth in shock.\n\nWith perfect timing to save Naomi's blushes, Chrissie the childminder came into the kitchen with Matt in his wheelchair,\n\n\"There Mattie, I told you we had a real live princess in the house didn't I?\" Matt's face was almost split in two by the biggest, most genuine grin Naomi had ever seen from him, and again she was in danger of bursting into tears and ruining her make up.\n\nHe held up both thumbs, \"No-mee... luv-lee!\" he said with a shy grin. Naomi crossed to him and kissed him on the lips and hugging him.\n\n\"You're lovely,\" she burst out, the tears streaming down her face, \"You're all lovely.\" She went round in turn kissing and hugging everyone in the room, even Chrissie.\n\nCarolyn held up the cape, as if checking the stitching, \"Totally worth it,\" she said.\n\nOnce Naomi had repaired her make-up and final goodnight's were said, Rob offered her his arm, \"This way Mam,\" he said.\n\n\"Miss,\" said Carolyn with a smile, correcting him. \"Nomes, Wait,\" she ran forward, \"go with the wrap again, I'd love for those snooty bleeders on the board of governors to get the same view that Dad did. Knock 'em dead Nomes!\"\n\nNaomi took the wrap and drapped it around her shoulders, she winked, \"Just for you Darling; I'll make notes.\"\n\nIt turned out that Rob had two cars. There was the large people carrier that had a special seat for Mattie, and seats for the rest of the gang. But today he was in a small Ford Focus but there was more than enough room for her to slide in.\n\nShe wanted desperately to make conversation, but she felt that both of them were way too excited for that. On arrival at the venue, he parked and opened the door for her taking her hand.\n\n\"Are you ready for this Nomes?\"\n\n\"I think so,\" she grinned and stood. She did a small twirl for him. \"Am I OK?\" she said.\n\n\"You're perfect Nomes,\" he said, \"You know you are.\"\n\n\"Yeah but I'm a woman, I still have to be told occasionally.\"\n\n\"Don't worry, I don't think people telling you that you look gorgeous is going to be a problem tonight.\"\n\n\"Thank you,\" she said with faintest tremble in her voice.\n\n\"Let's go then,\" he smiled, with a look that said he couldn't wait anymore to show of this perfect woman on his arm.\n\nAs they entered, she straightened the wrap, knowing that it would have to come off in a moment or two. The climbed up the marble stairs of the large municipal building and into a walnut panelled grand entrance. \n\nShe smiled at Rob excited almost out of her mind. A waitress smiled at her and the evident joy she was feeling, and with an understanding nod indicated that they should go into the small anteroom that led into the function room\n\n\"Rob!\" said a loud voice from beside them, \"Good evening my friend!\"\n\nAdept at reading body language she could see that the last thing these two men were, were friends.\n\n\"David,\" said Rob extending a well-mannered hand, \"good evening.\"\n\nThe other man's dinner jacket didn't seem to fit anywhere near as well as Rob's and she could see an older woman in a dress that was a bit too small for her.\n\n\"Good evening Doctor Stanley,\" she said talking to Rob but looking at Naomi.\n\n\"Doctor Harvey, this is my very good friend Naomi Williams, Naomi, this is Doctor Jen Harvey -- Principal of the college.\"\n\n\"Miss Williams,\" said the other woman shaking her hand and checking the other for rings.\n\n\"Naomi teaches at Priors Park Jen, another history teacher.\"\n\n\"Oh really,\" she shook Naomi's hand without much lustre, \"one of our finest secondary's, and David Darnell is doing wonders with it.\" She looked Naomi up and down for a moment, starting at the pearl choker around her neck and down her hourglass figure. \"I shall be sure to mention you to him,\" she said with just a hint of acidity in her voice, \"he's just arrived with his wife.\"\n\n\"Oh lovely,\" beamed Naomi, \"he said he was coming, I've only met his wife a couple of times.\"\n\nThe older lady looked crestfallen for some reason.\n\nShe saw a devilish look in Rob's eye,\n\n\"Would you like to leave your wrap here, Naomi?\" She hid her own grin. It was obviously time.\n\n\"Yes please,\" she backed up to Rob, \"would you Rob?\" she undid the single button and he took the wrap from her shoulders. It was as if the room took a breath, and Naomi tried desperately hard not to react to it.\n\nRob smiled attentively and lifted the wrap from her back and shoulders, folding it over one arm. \n\nShe wanted to take his arm, but in a perfect moment she settled for taking his hand, and they walked to the booth where she handed over the wrap, Rob taking the small ticket and putting in his jacket pocket. \n\n\"We'll see you inside,\" he grinned to his still opened mouthed colleagues. Naomi was standing straight, and trying to remember the poses she had practiced with Carolyn like a 21st century Eliza Doolittle, while part of her wanted to punch the air and shout \"YES!!\"\n\nShe saw the photographer with all of the equipment set up, and Naomi pulled Rob towards it.\n\n\"I have to get a photograph for Carolyn,\" she said, and walked under the bright lights. She spoke to the photographer, \"I need a good one for my dressmaker,\" she beamed.\n\n\"I can see why,\" grinned the photographer, a tall girl, looking appreciatively at the dress and the gorgeous hourglass figure beneath it, \"Right,\" said the photographer and Naomi felt herself being positioned to show the dress to its best, and the girl moved the silk around exposing just a hint of bare thigh and a hand on her hip. She smiled at the camera, and it flashed a few times.\n\n\"One more Miss,\" said the photographer and moved her position. She thought about the other photo Carolyn wanted.\n\n\"Come on Rob, you too,\" said Naomi staring at him, \"Carolyn's orders!\" she whispered. He somewhat nervously moved in, and she felt his hand slip around her waist, and she placed hers over it and pushed against him. Another quick flash and they stepped to one side to look at the digital representation on the laptop computer. It looked great.\n\nWalking through the large double doors they stopped at the top of another grand staircase that swept down to the floor of the extremely grand function suite. At the top was the master of ceremonies.\n\nHe took the card and read it loudly, \"Doctor Robert Stanley and Miss Naomi Williams.\"\n\nShe took his hand as they slowly walked down the stairs into the main room and the lights were bright but not overly so. As Carolyn had predicted everyone looked at her; Rob gently squeezed her hand. She noticed a few smiles which she figured were as much about her being with Rob as being the belle of the ball, she squeezed his hand back just so he could get the full effect. \n\nOn the room plan they found the table they were on and headed over to it. The smiles they'd encountered crossing the room were doubled as they got to his department table. There was a collection of dinner jackets and long frocks and they all stood to greet them.\n\n\"Gang, this is Naomi, Naomi, these are the educational marvel that is the English department,\" he smiled proudly, and she was soon shaking hands with all of them and trying to remember names.\n\nThe woman directly opposite her, Barbara another English teacher, leant across.\n\n\"This has to be the dress Rob's told us about,\" she beamed, \"it's fantastic.\"\n\n\"Isn't it,\" Naomi returned the smile, hoping to make this all about the dressmaker rather than the model, \"It was made by Rob's daughter.\"\n\n\"Carolyn?\" said Barbara.\n\n\"Yes.\"\n\n\"So is this one,\" said Barbara standing up to show yet another splendid bodice, but this time tailored with a flowing gown, \"another Carolyn Stanley original, that girl is a genuine genius.\"\n\n\"Tell me about it,\" said Naomi with a hand lightly to her chest, \"I've never worn anything this posh before. She made it in two days out of some appalling thing my... an old family friend gave me.\"\n\n\"Well, don't let her see it or she'll demand it back!\"\n\n\"No chance,\" said Naomi thinking of how her sister would be if she could see...\n\nAs she took her seat, careful pushed forward by Rob, another devilish thought struck her and she took her smartphone from her clutch bag.\n\n\"Barbara, could you possible get a picture of me? Well me and Rob actually, there's someone that absolutely has to be emailed a photo.\"\n\nBarbara laughed and reached for the phone, and looked at Naomi's grin. \"Revenge picture?\"\n\n\"Like you'd never believe...\"\n\n\"Lean forward Darling,\" she said, \"little bit more; oh yeees...\"\n\nNot only was Barbara an English teacher she was an extremely good photographer, and managed to include enough of the dress, the cleavage, Rob's impressive physique, and the pair's obvious happiness at being with each other, while still adding the pomp and circumstance of the evening and the location.\n\nAs the lights went down, Naomi sent an email to Pete,\n\n\"Hiya BB, Remember that blue dress that Ruth gave me out of pity, what do you think of it now? It's been cut down and tailored by a rising young designer of my acquaint. Out to dinner with a friend at the Guildhall, will phone soon promise and tell you about the new digs. Luv you LS'\n\n'BB' was 'Big bro', her pet name for her brother Pete, while she was 'Lil Sis'.\n\nPete, she knew, would stick the picture straight onto Facebook where the entire family would see it, recognise the colour of the dress and be annoyed if not by how fantastic their 'adopted' sister looked, but by the glamour of the surroundings she was in. Barbara had included all of the silverware, a Champagne bottle and had arranged the embossed printed place card that read 'Miss Naomi Williams BA (Hons) QTS.' next to the man she was almost touching heads with, a beaming 'Dr Robert Stanley BA (hons). MA. PhD.'\n\nNaomi switched the phone off and the dinner commenced.\n\n\"...and the Governors Special award this year goes to the English faculty for yet another fantastic OFSTED report and as announced only yesterday 100 per cent of students gaining A-B passes on all courses, to accept the award is Dr Rob Stanley!\" The table stood as Rob headed to the top table to collect the large silver cup from a group that included the pair they'd met on the way in.\n\n\"Two faced bastards,\" said Barbara still clapping.\n\n\"What?\" said Naomi.\n\n\"That shower of shit on the high table there, they give us a hard time all the time about anything they can and then fawn over us just because we made into the Times Education Supplement this year.\"\n\n\"You see that fat bitch muffin-topping her boobs out of the dress? She set her sights on young Rob there a few years back and was most pissed off when he turned her down.\" They all sat and Barbara moved closer to Naomi while photographs were taken. \"She knows that he's single and has that huge family but every year she and the fucking sexual deviant sat next to her put 'plus one' on his invite just to wind it in, ignorant bastards. I'm a widow, they never put 'plus one' on mine, and you see this?\" She picked up Rob's place card, \"His first name is ROBIN!\" She threw the card down but had to speak up as the applause started that saw Rob back to the table.\n\nNaomi saw at once what the kids had against this place and the people.\n\nAfter the awards a few of the tables were cleared to make a small dance floor and a band set up on the high table rostrum.\n\nNaomi excused herself and headed for the ladies. Once inside she switched on her phone and checked her emails.\n\n\"HEY LS! Get you, gorgeous! Never seen that dress look so good on anyone, BS-i-L sends luv and hugs and wants to know if you had two dresses made out of it seeing as there was so much material. Hope you don't mind but I've stuck the picture on FB so everyone can see what a classy and clever bird you became once you escaped the Williams clan!\n\nBS-i-L wants to know all about Doctor Robert -- don't keep her waiting too long honey, it's me that'll suffer. LuvU2 BB\"\n\nNaomi grinned and was about to start on a reply but thought that she honestly didn't have anything to tell -- yet.\n\nShe got back to their table and stood behind Rob's chair, chatting with Barbara with a general outline of her picture and what a success it had been. She also made a point of occasionally placing a single hand on Rob's shoulder to send out just enough of a message to the rest of the room, with what she hoped was 'hands off!'\n\n\"Rob! NAOMI! Look at you!\" Coming across the room was none other than Naomi's boss Dave Darnell with his wife. \"Congratulations Rob and Barbs, well deserved, and bloody hell, look at Miss Williams!\"\n\n\"Good evening Dave!\" she grinned blushing, putting both hands on Rob's shoulders, as Dave leant in for a congratulatory handshake for Rob who stood to meet his friend, and a kiss for Barbara and Naomi. Next was Dave's wife Sue who seemed almost as happy to see Naomi there as everyone else did.\n\n\"Good evening Naomi,\" beamed the boss's wife kissing her cheek, \"So glad you could make it, I understand all is well at Stanley Towers?\"\n\nNaomi returned the smile, \"It's great, Rob's family are all so lovely!\"\n\n\"And that's one of Carolyn's dresses isn't it.\" Sue took a pace back to show off her very fine evening gown, \"So's this...\" she whispered, \"I'm good mates with Carolyn.\"\n\nSue stepped across and spoke with Barbara, and they both looked at Naomi's dress and spoke quietly to each other.\n\n\"I complimented Rob for his choice of partner this evening,\" said Dave, happy that his wife was occupied, \"and bloody hell I was right to do so. You see Rob, you can always rely on Priors to come up with the truly talented and beautiful people.\"\n\n\"Thank you Mr Darnell, so grateful,\" said Rob.\n\nNaomi thought about what the task given to her by Carolyn this evening and stepped closer to Rob and slipped an arm through his. She looked across the room to where the governors were now seated and saw that a few faces were looking at them.\n\n\"Delores Fudge is giving you the evil eye again, Naomi,\" said Barbara.\n\n\"Who?\"\n\n\"That Jennie Harvey, college principal and cow about town, the one I told you about.\"\n\nRob sighed, \"Barbs is standing up for my slighted honour again, is she?\" \n\n\"And quite rightly I think,\" said Naomi pulling him a little tighter.\n\n\"Oh yes,\" said Dave sipping at a long glass, \"cow Jennie gave me a proper grilling about you Naomi -- I get the vaguest suspicion that she didn't think you were really a teacher. Asked how a teacher on the lowest grade could afford a designer frock like that.\" He turned back to Naomi, \"Of course we all know that's another Carolyn Stanley original, but she don't; I think she was really hoping that you were something far more suspicious and untrustworthy, and paid for.\"\n\n\"What!?\" almost the entire group screeched.\n\n\"Straight up Naomi,\" said Sue, \"heard the cow talking in the bathroom. Needs to learn to shut up when she's pissed.\"\n\n\"Yeah,\" said Rob again, \"Most upset when I told her you had a first from University College and came top of the class with your QTS. Didn't mention you were the lodger of course, she'd have loved that.\"\n\n\"Rob,\" said Barbara softly, seeing how Naomi hadn't let go of him or taken her eyes off of him all night, \"go dance with Naomi, just for me.\"\n\nRob grinned, \"Miss Williams, would you like to dance.\"\n\n\"Why Robin,\" she beamed, and he raised his eyebrows, \"I'd love to.\"\n\nHe took her hand and moved out onto the dance floor and they moved gently to the strings.\n\n\"Thanks so much Nomes,\" said Rob, \"this has been just the best night ever.\" \n\n\"I've had a lovely time Rob, thanks for inviting me,\" she looked across the room at Doctor Harvey who seemed to be drinking more than was good for her. \n\n\"What did Barbara want us to do?\"\n\n\"She wants us to annoy Jenny Harvey by dancing together.\" He breathed, his face close to hers.\n\n\"How's this,\" she whispered back, and held him close, closed her eyes and put her cheek to his.",
        "\"Mmmm, that's nice,\" he said, \"Are they watching?\"\n\n\"I don't know, I'd have to open my eyes and it would spoil the effect.\"\n\n\"OK, we'll work on the fact that they are.\" He moved a hand from the small of her back to rest gently on her hip. Close, warm and border line intimate, and made Naomi blush to her boots, and she didn't mind at all. She breathed in his aftershave and felt wonderful.\n\nThe evening was beginning to draw to a close, and she was amazed how much of the time she spent either dancing with Rob or sat staring into his eyes, often with someone narrating what was going on at the board of governors table. At one point, David the vice-principal came over and asked Naomi if she would like to dance with him. His was clearly pissed, and Naomi had to politely demur, saying that she was tired out from dancing with Rob.\n\n\"The dirty perv would have touched you up Nomes,\" said Barb, \"fuck him.\"\n\n\"I'd rather not Barb,\" she said with a smile, but making eye contact with Rob.\n\nAs a group they got to their feet and headed for the exit pausing to collect her wrap. She settled for leaving it over her arm and they slowly walked to the car. Seeing she had not drunk anything other than a single glass of Champagne she was the designated driver. They dropped Barbara at her house in town and then stopped at a set of lights. \n\n\"I don't know about you,\" said Rob, \"I'm starving.\"\n\n\"Thank God you said that,\" grinned Naomi, \"I could eat a horse!\"\n\n\"I'm pleased the meal was free,\" he said, \"Because if not I'd want my money back.\"\n\nShe looked at her watch, it was almost eleven, but somehow she didn't want the evening to end either.\n\n\"What do you fancy,\" he said, \"our choices could be a bit limited.\"\n\n\"Nothing... ethnic,\" she said, not fancying curry, Chinese or Italian, \"Rob, where would we find Frenchie's?\"\n\nShe'd over heard one of the kids talking about the place a few weeks back -- it wasn't posh enough to be a 'posh' restaurant but way too posh to be a burger bar. It was a 'retro Diner experience' and once she told Rob in which part of town it was in, he was able to tell her which direction she should drive.\n\nAlthough he was in a dinner jacket and she in a long dress, neither felt out of place. In fact there were several other couples in the same attire, and the staff didn't turn a hair, and a table was found instantly for them, in far the nicest part of the restaurant where customers and passers-by would see these beautiful couples.\n\nShe had a huge burger, fries and of all things a tall milkshake and feeling like a character out of fifties 'rite of passage' movie she settled to enjoy the delicious food and Rob's company. \n\nAll night she had noticed that her dress was getting her noticed by all and sundry, and not just the men.\n\n\"I think we're going to have to score that dress as Carolyn's masterpiece,\" said Rob, dipping a fat chip into some relish, \"It's perfect.\"\n\n\"I know,\" said Naomi, \"being the object of so much attention takes a bit of getting used to but...\" she wrinkled her nose, \"I'm actually getting to like it!\"\n\n\"And so you should,\" said Rob, \"you were the belle of the ball, no one else came close.\" He dabbed his lips. \"Thank you for coming out with me tonight Nomes,\" he grinned, \"I've really enjoyed it, I'd quite forgotten how nice it is to go out with a beautiful woman.\"\n\n\"Awwww thank you Rob!\" she stood and leaned over the table and pecked him on the cheek, \"I'd forgotten how nice it was just to go out on a date, let alone with a handsome man.\"\n\nHis smile was infectious. She looked across the table at him, wondering what she could say and do to end up back in this man's arms tonight. It didn't HAVE to be his bed, not yet, but she was feeling that she needed to get to know him much better and if it wasn't tonight it would have be soon.\n\n\"MISS! MISS!\" she heard a few screams. Looking to her left she saw three girls descending on her table.\n\n\"Sorry Rob,\" she said smiling and shaking her head as they got closer. Evidently their parents were not far behind.\n\n\"Hello Miss Williams!\" two of the girls burst out.\n\n\"I told you didn't I? Wow Miss, you look fantastic!\" said the third.\n\n\"You're all looking very smart as well, been somewhere nice?\"\n\n\"Alice's birthday party,\" the shortest was nodding, and pointing at the giant '15' badge hanging from her blouse, \"what about you?\"\n\n\"Di...\" she stopped herself short of saying 'dinner date' instead adding, \"doing an awards ceremony with Doctor Stanley from the college,\" she indicated Rob sat across from her, \"you want to do English and history at A' level Megan, well Doctor Stanley is the man you'll need to impress.\"\n\nRob grinned; it was only when she saw the faces of the other two girls she realised how their brains were working. Tonight 'Miss' was looking like a fashion model with her curves on display. They looked at him and he stopped grinning, it didn't have to be that evident that Doctor Stanley was impressed already this evening.\n\n\"I'm looking for at least two B's and three C's at GCSE ladies,\" he said, trying to make the chat about the subject rather Miss Williams.\n\n\"Come on girls it's...\" said a voice from behind them.\n\n\"Mum, this is Miss Williams from school,\" said Alice.\n\n\"Well Miss Williams doesn't want to be bothered by you lot does she,\" said Mum taking in the situation with the school teacher, \"Hello Miss Williams, I'm so sorry, I hope they haven't been bothering you on your evening out.\"\n\n\"No, they're fine,\" she said, folding her arms and screening her cleavage from the parents. She was so unused to looking this good and having someone this good sat next to her. \n\nThe three children were dragged away by the mother. She looked at Rob, Rob looked at her and they laughed. Long, loud and heartily, after all the stresses and strains of the evening, they let it all go. His look melted her heart and she just wanted him, however it transpired.\n\nRob handed over a card and paid, the costumed waitress commenting on how fantastic Naomi's dress was, thanking them both for their custom. Walking slowly back to the car, she tried to get to where she wanted; he made this easier for her as he stretched out and took her hand. He looked at her, and she smiled back at him, he squeezed her hand gently, she moved closer to him and held his arm. Finally they reached the car and she stood against the door that he had to get in smiling at him cheekily. He came close.\n\n\"Are you ever going to kiss me?\" she said grinning.\n\n\"OK,\" he said, moving closer. She put arms around his neck and pulled him close, feeling his hands on her waist. He pinned her against the car as their tongues met, it was warm and wonderful. His hands slid down her sides, pulling her hips into his.\n\n\"Let's go home Rob,\" she said. They pulled apart a few times, coming back to each other again and resuming the kissing.\n\nIn the car they said little, choosing instead to grin and giggle at the other. She did watch the speed dial but figured she might have broken the speed limit a couple of times.\n\nShe crunched onto the drive, suddenly looking at the time on the clock on the dash. It was after one in the morning.\n\nShe tried to shut the car door quietly and pretty much managed it -- the last thing she wanted tonight was a selection of the kids coming down to see them. Tonight she wanted Rob all to herself.\n\nHe opened the front door and didn't switch on the lights, \n\n\"Rob,\" she said keeping him in the hallway, \"I've a favour to ask of you, it's going to make me sound terrible I know, but... you see...\"\n\n\"Nothing about you could say could ever sound terrible to me,\" he smiled.\n\n\"You remember when I told you about my weepy PMT?\" he nodded and grinned, \"Well the other side of it, when I've come out the other side, about two days after I've finished, I get... well...\"\n\n\"Horny?\"\n\n\"Yes,\" she said taken short, \"how did...\"\n\n\"Perfectly natural, you ovulate a few days after your last period and you're whole body is saying 'Woohoo! Bring it on! Nothing you can do about it.\"\n\n\"Yes well,\" she said, dropping her eyes, \"if only it was that simple, I get HORNY\" she said, \"I don't mean a little bit frisky horny, I mean anything with a penis and a heartbeat horny.\"\n\nHe smiled but not in an unkind way. \"And you want me because I have a penis and a heartbeat?\"\n\n\"No!\" she said, \"Well, yes and no, but I'll haven't made love to someone in over four years, being so close to you after such a wonderful night, and being this horny well... Look if you don't want to I'd quite understand.\" She dropped her eyes, \"and as Carolyn has already noticed, you're all I've been able to think about since I moved in.\"\n\n\"Naomi, I'd love to,\" he said, \"I'm afraid I don't have any contraception though, it's not something that I've had much of experience of -- BUT - I'll see your four years and raise you three.\"\n\n\"Seven years?\"\n\n\"Yep,\"\n\n\"We need to start shagging each other a bit sharpish,\" said Naomi flushing at the thought of finally making love to this man. He put a hand to her face and kissed her. She put a hand on his chest and he eased back a little, which gave her the chance to dip into her clutch bag and produce the tiny box she'd bought with the three pound coins she'd hidden in the clutch bag just for this reason.\n\n\"Naomi, you just think of everything,\" he smiled and took her hand.\n\nThey tiptoed up the stairs and stopped at his bedroom door. She shook her head and pulled him towards the staircase that led to the loft room. At the top of the stairs she paused, put a finger to her lips and crept into her room, fearing that little Carla could be sleeping on her bed or on her sofa. She wasn't and she pulled him into the room, throwing her clutch bag and the condoms on her bed.\n\n\"Would you like a coffee or something?\" she asked.\n\n\"What?\" he said, his face breaking into a grin and slipping off his jacket.\n\n\"Sorry,\" she said shaking her head, \"I'm still not used to having a flat I can invite someone into,\" she draped her arms around his neck and opened her mouth, \"It'll take me a while to get used to it.\" She clamped her mouth over his, and their tongues danced together again.\n\nShe felt his hands on her back, running down across her bottom, the first male hands to do so since she broke up with Steve her last boyfriend. Steve had been quite fit but nothing like Rob!\n\nAt last she felt his hands take the tiny zip that held her into this fantastic dress. She felt her breasts drop slightly and took her arms from around his neck to undo the halter neck that meant the dress was free to fall to the floor as it had once before in this room. That time she'd been naked and with his daughter, and really embarrassed. This time, she was wearing pantyhose. \n\nShe knew from experience there was no way to remove pantyhose that looked sexy, so she excused herself and stepped out of the dress hooped around her legs and walked to her tiny bathroom, dropping her tights and sitting down to remove them and taking advantage of where she was, and slipping the pantie shield into the small bin by the door.\n\nShe washed her hands and headed back into her room to find that, to her delight, he was still dressed and with his bow tie around his neck. He looked her up and down, and she felt amazingly naked and pulled him to the bed.\n\nShe leaned over him; her lack of sex was tangible. She could almost feel her muscles vibrate as he ran soft gentle hands across her back, before sifting them through her blonde hair.\n\nShe set to stripping him now, kissing his chest as she pushed his shirt off of his shoulders. She felt his hands touch her breasts for the first time, gently caressing them and squeezing towards her sensitive nipples and pinching them just enough for her to feel the intensity. His trousers went next, until finally he was just wearing underwear. Finally as they pulled their mouths apart long enough to take a breath, she removed his underwear rolling naked together. She didn't remember him putting on the condom, but the moment he climbed over her and pushed his hard cock against her swollen and flushed sex would stay in her mind for ever. \n\nShe hadn't had anything in her pussy for months, having dumped her dildo and vibrator having seen that bastard Bastable licking them both. The difference of the phallus pushing into her being warm and attached to a gorgeous man made her wonder how she'd ever thought it could be a substitute for this!\n\nSpringing from his knees and elbows, she was able to put one arm around his neck and the other on his hip, smiling into his lovely face as they got into the rhythm after such along period of abstinence. They made love passionately and considering that neither of them had done it in so long it was quite amazing, and to her intense delight and pleasure she came crying into his neck and he screwed her through her orgasm.\n\n\"Oh Rob, you're wonderful,\" she gasped, \"fuck me Rob, your turn to come.\"\n\nThat was enough and he powered into her happy that it was his time now; for Naomi she couldn't lose because what was good for him was fantastic for her and his bashing away at her brought her to her second orgasm as he reached his first.\n\nThey lay together getting their breath back, and she looked into his face. \"Wow! Rob!\" she gasped, face to his face, \"That's so much better,\" she whispered, \"I'd quite forgotten how fantastic making love is.\"\n\n\"So had I,\" he grinned, stroking her sweat dampened hair from her face, \"you are so fucking sexy; Carolyn was right, your body is perfect; especially now I've seen it in much more detail.\" He pulled the duvet up to cover them as the heating switched off and the room cooled. He kissed her again. \"It looked great in that dress but it looks much better from here.\" He lifted the duvet and made like he was looking down at her.\n\nEven though they had shared such a passionate moment, she still blushed and pushed the duvet down and made to slap his hand.\n\n\"Praise like that will get you everywhere,\" she grinned kissing him back.\n\n\"Look, whenever you feel the need Naomi, you have only to ask.\" He kissed her again. \"This is rapidly turning into one of the best nights of my life. Can we do it again sometime?\"\n\n\"What...\" she said erupting in a cheeky grin, \"what we've...\"\n\n\"No!\" he gasped trying to keep his voice down, \"I mean go out for dinner and a dance, I've got a real liking for being cheek to cheek with a beautiful woman.\" She pulled him close, so they were cheek to cheek again. She fell asleep in moments.\n\nThe next morning, she woke feeling bright, warm and more relaxed than she could remember in years -- four to be exact. She heard the slight squeal of the top hinge of her bedroom door and threw her hand across to the other side of the bed where Rob had been sleeping. It was still warm but there was no one there.\n\nThe bed dropped slightly as someone sat on it. She dragged her eyes open to see who it was. The sound of a full mug being put on her bedside table made her open her eyes fully. She stretched, hoping it would be Rob, but dropped her arms and pulled the duvet to cover her naked breasts still tingling from his attention last night. It was Carolyn!"
    ],
    "authorname": "Androgynousother",
    "tags": [
        "romance",
        "straight sex"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/room-wanted-ch-01"
}