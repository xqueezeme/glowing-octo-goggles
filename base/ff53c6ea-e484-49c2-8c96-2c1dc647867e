{
    "title": "The Twelve Vitali Ch. 23",
    "pages": [
        "Authors note: Hello everyone. Thank to everyone who takes the time to vote and comment, I appreciate all of the people who read this series. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*\n\nThe week flew by for Cat, who seemed to rush from one thing to the next and seemed to always be running late. Her hunt team was rapidly making their way through the list with only a small amount of help from her, or so she thought, until Tate laughingly told her that both her and Logan's siblings had been dropping hints about the hard and impossible cryptic clues during one of their team meetings. Determined to pull her own weight in some way, she asked Matteo and Ricco for help on the Wednesday night. The last night they could guarantee they would all be home together for the remainder of the Gathering.\n\n\"It's been forever since I did the hunt,\" Matteo frowned as he looked at the list. \"Your team has done pretty well so far,\" he said, noting all the crossed off items. \"Are you sure you need to put so much time and effort into this?\" He asked, feigning disinterest. He and Ricco had been looking at the list since she had first got it.\n\n\"Have you met Kalum and Logan?\" she asked with an exaggerated eye roll. \"They're already carrying me through most of it; I'd really like to accomplish a couple, or hard, or maybe even impossible ones, just so I didn't feel like I was holding them back.\"\n\n\"The first points update went up today. Where are you on that?\" Ricco asked.\n\n\"That doesn't matter, the idea is to crush this hunt and then retire our team undefeated, much like you did with Chase,\" she teased Matteo.\n\n\"What you need to do is pull that poor sweet little newbie persona on Lucca or the little genius's,\" Ricco chuckled, also studying the list. \"It looks like you've solved a few of the cryptic clues already.\"\n\n\"Not me, the others have, and they don't do me much good, one of those people is dead, apparently,\" she sighed.\n\n\"Then the clue must be wrong,\" Ricco said. \"Or there must be a way to get it. Which one are we talking about? Come on, Matt, you used to be better at this stuff than Lucca, you know that's why he's always trying to find a puzzle you can't solve.\" He chuckled, adding to the perception that they had no interest in the hunt.\n\n\"Yeah, okay, give me more than a minute to look at it,\" he tore the final page with the impossible puzzles on it from the list and got up, walking to his office. \"Give me thirty minutes and I'll get you what I can. But the answers will cost, you realise,\" he grumbled. \"Both of you!\" Cat and Ricco looked at each other and grinned.\n\n\"He really was king of this game before Nik did a number on him,\" Ricco said quietly. \"He stopped doing anything fun with the family a few years ago. Lucca has been trying ever since to get him back into playing games with the family. He took it the hardest when Matt withdrew from the world and sunk himself into work. Maybe you should do something to motivate him,\" he suggested with a waggle of his eyebrows.\n\n\"Well, if he can help me, I don't mind making it motivational and worth his while,\" Cat said, standing from the table and walking into the bedroom. Half an hour later, and much to Ricco's delight, she had dressed in the midnight blue corset Matteo had bought for her on their first shopping trip together, as well as a dress he particularly liked, along with thigh-high stockings and stilettos. Then she picked up a basket and went into the red room to gather several lengths of rope, with Ricco's help, some nipple clamps and a few other toys before she walked back toward his office. As a last thought, she donned her robe and left her room to go and see if he had made any progress.\n\n\"Wait,\" Ricco held her back and went to the wet bar to grab a bottle of wine and three glasses. \"This is going to be fun, and I plan to sit back and enjoy the show properly. Lisa?\" he raised his voice slightly and smiled as she instantly appeared. \"Could you make us one of your awesome platters with cheese and fruit, and those little truffles you make, if you have any, please?\"\n\n\"Of course, Master Ricco. Would you like it on the deck?\" she asked.\n\n\"No, in Matteo's office, please,\" he smiled widely. Then he turned to lead the way into Matteo's office. He said nothing as he placed the glasses on Matteo's desk and poured three drinks. \"Let me just grab a chair and then you can tell him the deal you're willing to make.\" Ricco dragged a chair to Matteo's side of his desk and sat back, glass of wine in hand as Matteo raised an eyebrow, first at him and then at Cat.\n\n\"I was worried that you might need some motivation, so for every clue you solve and help me to work out how to get the item, I will take off one piece of clothing. Just to get you started,\" Cat took off the robe, revealing the dress Matteo liked which highlighted the hourglass shape of the corset beneath it. \"If you manage to solve more than necessary to find me naked, or near naked, if you prefer, then you can choose an item from the basket for me to put on,\" she stepped towards him and leant over, giving him a clear view of her cleavage and the top of the corset before unveiling the basket and its contents.\n\n\"Sounds very... motivational,\" he chuckled.\n\n\"We have all night, no rush,\" Ricco said. \"Lisa is bringing snacks for the show, and I'll even help, if you like. My favourite rope is in that basket.\"\n\n\"Alright, Mr. Helpful, call Hilary and ask her to clear my morning, and yours, I suppose,\" he chuckled. \"We're going on a road trip.\" He picked up a glass of wine and took a sip.\n\n\"We are?\" Ricco asked sceptically.\n\n\"You can't complain now. You're the one who forced me into becoming part of this hunt. Now there are consequences,\" he said. \"Cat, text Tate and Logan and have them meet us here for breakfast, leave Kalum out of it for now, because you can guarantee he is sharing with Mia.\"\n\n\"I don't mind sharing with Mia,\" Cat said easily.\n\n\"You mightn't, but I do, and this will come down to a race at the finish, because some of these are pretty easy and, with the right motivation, I could probably help you get most of them. If you seriously want to crush the hunt, then we do it my way, and Kalum would agree, what he doesn't know he can't divulge. I'll call him myself and explain, if you like.\"\n\n\"What have I done?\" she asked, marvelling at his ruthlessness where his sister was concerned and the intensity of his gaze.\n\n\"I did tell you he used to be the king of the hunt,\" Ricco shrugged, enjoying the small glimpse of the old Matteo helping Cat was affording him.\n\n\"Weren't you making a call?\" Matteo turned his gaze to his brother as he picked up his phone.\n\nLisa came in with the platter of food and Ricco laughed, telling her that they would need a second bottle of wine. Cat had never actually seen Matteo, the businessman, who was totally in control and managed the people and resources around him to the best advantage, before. He made several phone calls after speaking with Kalum and looking at the schedule Ricco showed him, and at the same time was emailing people. When he finally sat back after organising at least half a dozen people and his schedule for the morning, he gave her a small smile and raised his eyebrows, and she knew she would be disrobing fairly quickly from this point on.\n\n\"Here you go,\" Matteo slid his laptop to Ricco, \"Make yourself useful and make notes on the master list Kalum just sent me.\" He picked up the list he had been writing all over and eyed Cat in a predatory way.\n\n\"Breakfast at seven,\" she confirmed. \"I should let Lisa know.\" As if on cue Lisa returned with another bottle of wine.\n\n\"Breakfast at seven, Miss Leone?\" she smiled. \"For how many guests?\"\n\n\"Two, but don't go to any trouble, just something simple would be great,\" Cat smiled. She didn't think she would ever get used to having the super-efficient Lisa cater to their needs.\n\n\"Certainly, Miss Leone,\" she smiled and left the room as quietly as she had entered.\n\n\"Any more distractions?\" Matteo smirked. \"Or shall we begin with the deal you offered me?\"\n\n\"The deal,\" Cat stood straighter, \"But I need not only the answers, but a way to get the items as well. Impossible means not just impossible to solve the clues, but also impossible to get.\"\n\n\"True, and I think I can do that. Shall we start from the beginning of the section?\" he said as if it was a business meeting and he was negotiating a deal.\n\n\"That sounds logical,\" she said, licking her lips nervously.\n\n\"Number one is a matchbook from Uncle Sal's club. They don't use them or make them anymore since going smoke-free at the club. My guess would be that they still have some floating around, or it wouldn't make the list, so that will be up to Logan to find.\"\n\n\"That's not helping me contribute to the team,\" she said with a smile.\n\n\"Number two,\" Matteo said carefully. Then explained the answer and assigned it to one of the other team members who were in a better position to get the needed item. As Cat listened to each, she understood why they were labelled impossible. It seemed like the clues were hard enough on the cryptic ones, and then they were almost as impossible to obtain than the ones with the straightforward clues. Cat sat, as none of the early clues were items she could obtain, and unless it was something she could do she wasn't taking off one item of clothing for him.\n\n\"Number nine means you will have to go and sweet talk Frankie into letting you wear one of his autographed Carlton jerseys. It'll be tough, but, out of your hunt team, you're probably the only one who has a chance of pulling it off,\" he said and looked up at her. \"Dress, please,\" he grinned.\n\n\"I was going to start with the shoes,\" she frowned at him.\n\n\"I like the shoes, leave them on. Dress, please,\" he gave her a look that said he wasn't going to negotiate.\n\n\"I thought you liked this dress?\" she said, getting to her feet.\n\n\"I do, just not as much as the shoes right at this moment,\" he chuckled. \"You're the one who came in here with the deal.\"\n\n\"I thought you might need motivation, I didn't realise you'd solve most of the list in thirty minutes,\" she shook her head.\n\n\"I've been looking at the impossible ones since you got the list days ago in case you asked for help,\" he grinned. \"Still, you're the one who came in here with a deal, so time to make good on it.\"\n\n\"So, people who were trying to manoeuvre onto my team weren't doing it to help me? They were trying to get to you?\" she asked, a little disappointed by the thought.\n\n\"I wouldn't help Lucca or most of them, and they know it. You, on the other hand, only have to ask,\" he smiled. \"Now, if you don't mind, the dress?\" He grinned again. \"I'm about to tell you how to get the next one, too, so you may as well get rid of the panties while you're on your feet too. A deal's a deal.\"\n\n\"Don't look at me for help, that was all your idea,\" Ricco couldn't contain his laughter anymore and chuckled loudly watching the banter between them. \"I am just reaping the benefits along with Matt.\"\n\nCat took a gulp of her wine and slowly drew the zip down her back before shrugging the straps from her shoulders and letting the dress slide down her body to reveal the corset and stockings. She took her time folding and draping it over the arm of the sofa she had been sitting on, then she turned her back to the two men who watched her and bent at the waist, taking her panties slowly down her long legs and stepping out of them. Then she turned back to him with a smile.\n\n\"Motivational?\" She asked with a whispering purr as she stepped forward and leaned over his desk.\n\n\"I could look at you like that for hours,\" he reached up and ran his fingertips down her throat and over her chest, scooting along the top of the corset.\n\n\"Let's hope this doesn't take that long,\" she raised one eyebrow at him.\n\nMatteo looked down at the list, and the clues got increasingly harder, and, while he could solve the first ten easily, there were only a few others he'd been able to nut out. He explained the next answer and the reason for the loss of her panties.\n\n\"Do I get a bonus reward for solving the first ten?\" he asked hopefully. When Cat pursed her lips and shook her head, he sighed and jumped ahead to the next one he knew. \"Number seventeen...\"\n\n\"Wait,\" Ricco stopped him. \"The view is pretty good from where I'm sitting, and before you get completely distracted, why don't we see if I can add to your thinking on some of the unsolved ones. We've only got tomorrow to help her, because Friday all your friends are flying in, Saturday is the wedding, and Sunday we have that big meeting. I imagine next week will be a write-off after that.\"\n\n\"My friends are flying in on Friday?\" Matteo turned to look at his brother.\n\n\"You didn't think I would let you get married without a buck's party, even a quiet one?\" Ricco gave him the same stunned look back.\n\n\"I thought we talked about this,\" Matteo said.\n\n\"We did, but I didn't agree with you,\" Ricco shrugged.\n\nIt was Cat's turn to laugh as the two brothers bantered and teased each other. She had an overwhelming rush of love for both of them as they bent over the clues, and she picked up her wine and went to sit back down, enjoying just being with them and listening to them. It had been such a long and exhausting five days. She felt the wine making her relaxed and sleepy. In the end, after fighting to stay awake, she put her wine glass down and stretched out comfortably on the sofa to at least rest for a little while.\n\nCat woke to the smell of coffee and fluttered her eyes open. She was in bed and naked, though she couldn't remember getting there or how she'd lost her clothes.\n\n\"Good morning, Kitten,\" Matteo said softly. \"Time to wake up,\" he smiled and waved the coffee in front of her.\n\n\"What time is it? I'm sorry I fell asleep while you were trying to help me,\" she struggled to sit up, pulling pillows behind her and taking the coffee from him.\n\n\"You obviously needed the rest. You've been so busy this week, and Ricco and I have been keeping you up late every night, it's no wonder you're exhausted. But you need to get up now, shower and change and meet us in the dining room,\" he leaned forward and kissed her forehead.\n\n\"I don't even remember you putting me to bed. How much wine did I drink?\" she shook her head.\n\n\"Enough to put you into a deep exhausted sleep. I hope you're feeling better for it, because we have a big day planned, and Logan and Tate will be here in an hour,\" he chuckled.\n\n\"You know, it's really unfair that you look so good at this time of the morning,\" Cat grumbled, taking a sip of her coffee.\n\n\"We can't all be bohemian artists who sleep until noon,\" he teased. \"Up and at 'em!\" he smacked her thigh lightly. \"We're doing this for you, don't forget.\"\n\n\"Fine, I'm getting up,\" she grumbled half-heartedly.\n\n\"Just so you know, the deal still applies, and I intend to revisit where we were up to when we get home tonight,\" he grinned and left the room as she stared at him speechlessly.\n\n*****\n\n\"I forgot how much fun this stuff was,\" Matteo stared at the still unanswered clues on his list. \"We covered a few today; I hope Logan and Tate have been as successful.\"\n\nCat had a great deal of fun during the morning with the men she loved racing from one adventure to the next. They had stayed out hunting longer than expected and were arriving back at the HQ building for a meeting Matteo couldn't delay or defer to Lucca. Ricco, too, had plans to spend time with Jacobi, and, given the strain on their close bond recently, he wasn't keen to delay that date either. She felt she couldn't complain, and she had a lot of work to do herself, but she'd had so much fun she had wanted to keep hunting, because tomorrow their friends would arrive for the wedding and she would be needed for all of the small last-minute details.\n\nCat also knew that next week would be busy for both men once the table was announced to all of its members. So she contented herself that she may have time to hunt again once the majority of their friends had left the city and only the Gathering events had to be attended, which was by no means an arduous schedule.\n\nOnce back in the penthouse, Cat called Logan, eager to tell him of her success and have him come pick up the evidence from her to be handed in with their daily packet. He said he would come by just before dinner, and Cat sighed heavily as she ended the call.\n\n\"Miss Leone?\" Lisa said quietly as she stood at the edge of the living room. \"May I speak to you, please?\"\n\n\"Of course, Lisa, please come in and have a seat,\" Cat invited warmly.\n\n\"Thank you, but perhaps we could go to your studio or office, or somewhere not quite so...\" Lisa seemed uncomfortable with the open invitation to join her master's fianc\u00e9. She didn't quite understand Catriona Leonne. Lisa was a well-trained servant, and she had been thrilled to maintain her long-term contract with Matteo Vitali, but the situation was changing, and she was unsure of her place in this new arrangement.\n\n\"We could,\" Cat frowned, \"If it would make you more comfortable. Why don't you come into my studio? It's less formal than either of the offices.\" Cat was uncomfortable being in a position of authority over Lisa; it still seemed so odd to have a housekeeper. Perhaps, as always, honesty was the best way forward. She had been in the Battaglia hospital with some women who truly wanted the type of life Lisa had. They had told her their reasons, and she understood they came to this life for many reasons, she wondered what had brought Lisa to a life of serving this family rather than having one of her own. She imagined the life of a servant would be a lonely one, regardless of the rewards at the end of their contracts.\n\nCat dragged a chair closer to the one already at her adjustable tilt-desk and took a seat in the other. She rearranged some of the supplies she hadn't found a home for yet and smiled softly, hoping Lisa would take the offered seat before they talked. She let the silence stretch out as Lisa looked around as if she had never seen the room before and reluctantly sat down opposite her.\n\n\"If I could have found a time to interrupt Master Matteo's busy schedule, I would have tried to talk with him, but since his return from Brisbane after the New Year he has not been home alone. When he has been home, with yourself and Master Ricco, there has been no opportunity where I could ask...\" she seemed to be struggling and looked as if she wanted nothing more than to run away from the studio, Cat, and the whole conversation she had started.\n\n\"We've never had the opportunity to talk, and I am so glad you came and asked for this chat. I just have no idea about the right way to do things properly in this family. How about I tell you who I am and what I need, and then you can tell what it is you need?\" Cat could see there was something that Lisa needed or wanted, she just couldn't work out what. \"Would that make it easier?\"\n\n\"If you like, Miss Leonne,\" Lisa said differentially.\n\n\"I don't belong to any table. In fact, I never even knew about the tables until a few months ago,\" Cat admitted. \"I grew up in a council flat with a mother who was rarely home and a younger brother who looked to me to scrounge up food and anything else we could find to get us through each day. My life, up until this year, has been the furthest thing from this family and the way they do things that a person could get,\" she smiled self-depreciatingly. \"I was just like the girls and women I met at the Battaglia facility who were training for roles like yours, as well as others. If I had have known that was an option for my life, I might well have taken it to support my brother without having to rely on the generosity of a true bastard like my ex.\"\n\nLisa said nothing, but had trouble hiding her surprise when Cat spoke about being at a training facility.",
        "\"The thing is, you are always so efficient, almost like you can read our minds, and I guess I have never stopped to think about how all of these changes must be affecting you. I'm not sure I understand enough about the contract you have with Matteo to think about it, to tell you the truth. So, as someone said to me recently, subtlety probably won't work if you need something or want something, because I'm not a mind reader, and they are men,\" she rolled her eyes dramatically towards the heavens. \"Please be honest with me and talk freely, I promise nothing you say to me will go beyond this studio if you don't want it to,\" she said with as much sincerity as she could muster.\n\n\"I would never complain. Master Matteo has always been very generous and kind toward me,\" she began, but twisted her hands in her lap. \"My life was very easy in the years preceeding this, he was not home often, he worked long hours, caring for Matteo was a joy. This year I have enjoyed having both Master Ricco and yourself to look after as well,\" she qualified. \"I am finding it difficult, however, to cater to the three needs completely, as well as all the guests that have been visiting this week at various times of the day which stop me from the normal duties I would perform. I am afraid that I am letting you all down by not meeting all your expectations of me.\"\n\n\"Oh my God, you need help! Of course you need help, why hadn't I thought of that!\" Cat was aghast. \"I'm so sorry, you always seem to be one step of head of us in your efficiency. if you have lapsed in any way, trust me, we haven't seen it.\"\n\n\"I believe Masters' Ricco and Matteo are planning on having friends here tomorrow night, and I have concerns that I may not be able to handle the occasion on my own. I would hate to let them down, and I have been torn between what will be needed and admitting that I am not up to the task. Perhaps, just for the night, you could speak to someone about some added assistance so that the Masters are not embarrassed by the service during the evening.\"\n\n\"You are worried about them being embarrassed because they overworked you?\" Cat asked in utter amazement. She knew that even though Theresa had a cook and a housekeeper, as well as maids, she organised everything that went on in that house herself down to the minutest detail, and, as Matteo's wife, she could be expected to do the same. This was her job, she thought, and she needed to look after Lisa, who was worth her weight in gold. Why hadn't the additional work and stress on the woman even occurred to her before?\n\n\"I would never knowingly or wantonly let the Masters down by not fulfilling my duties to the best of my ability. However, I believe there will be close to twenty-five men or more here tomorrow night, and I am only one woman,\" Lisa looked miserable as she made her confession.\n\n\"Can you leave this with me for an hour or two? I promise I won't say a word about our conversation to anyone. I will say I need more help because I am already asking so much of you. This conversation will not come back to you. I am so sorry, Lisa. I should have realised what was happening. You go and carry on with your duties and let me get you that help you need,\" Cat said adamantly, and she exactly how to go about it. When Lisa had left the studio, Cat picked up her phone and called Theresa.\n\n\"Mama? It's Cat... Yes, I mean, no, really.... Oh no, I feel quite fine, it's just I need your help and advice. I don't suppose you're at the HQ building already?... Oh, you wouldn't mind coming up to see me? That would be perfect. I don't know what I would do without you, honestly... Yes... I can do that... of course.\" Cat smiled and got to her feet and went down to the first floor where Theresa was supervising Stefano and Roberto, who were enjoying adjudicating the hunt items before points were added to team totals.\n\nSince their conversation regarding Cat's enjoyment at having a mother figure who cared enough to argue with her and do all the work she had for her perfect wedding, Theresa had been only too happy to come to Cat's aid whenever she asked, and even when she didn't, on many occasions. It was a relationship Cat treasured now, and she had no qualms about admitting she was way out of her depth where household staff were concerned to the woman. She also had no problem rescuing Theresa from a terminally boring afternoon of supervising the collection of hunt items and tallying points, which her husband and his brothers seemed to be enjoying so much.\n\nLess than twenty minutes later they walked back into the penthouse and took a seat in the comfortable living room. Lisa appeared almost immediately after they had gotten settled to offer refreshments, which made the segue-way Cat needed into the conversation she had to have easy.\n\n\"Lisa is amazing. It's like she can read our minds most of the time. I just love her,\" Cat said unashamedly.\n\n\"Good staff make life easy for busy women like us, I couldn't do half of what I needed to do without the people we have working for us,\" Theresa admitted, surprising Cat, who had never heard the woman praise her staff before.\n\n\"The thing is, I was hoping Lisa could do a few things for me tomorrow before the wedding, but Matteo, or I should say Ricco, is having twenty-five friends here. She is just one woman and would never ask for help or say no to anything we asked of her,\" Cat sighed. \"She had one man to look after before I came along, now there are three of us living here. On top of that, we have a steady stream of visitors and guests, and I'm amazed that she still keeps on top of everything. I'd like to get her some help now that not only has the home doubled in size, but her duties seemed to have been tripled, and I don't want to worry Matteo with it because he is so busy. This should be something I can do, isn't it?\"\n\n\"It probably hasn't even occurred to him that he is working one of his best assets to the bone,\" Theresa said disapprovingly. \"Men don't think about things like that as long as their needs are being met.\" She seemed to consider Cat. \"After this weekend you will have a lot more duties yourself, and a lot more visitors here. The older women, particularly, will judge you on how you run your household. This was an oversight on my part, I'm afraid, I should be preparing you better for your future role as Matteo's wife and the mother of the next generation of Vitali.\"\n\n\"There is so much happening with the gathering and the wedding and ....\" She lowered her voice to a whisper, \"The table.\"\n\n\"We are living in a momentous time,\" Theresa agreed. \"Still, I pride myself on being on top of every little thing, and this has been a gross lapse on my behalf.\" She seemed to be thinking through the situation. \"I found Lisa for Matteo, and I will find her some help. I expect Ricco has left his housekeeper with Jacobi, and Maryanne will have need of both of them, I have been interviewing for Lucca recently, I wouldn't like to leave him without the woman I chose. Let's go into Matteo's office and I will go through some of the applicants again.\"\n\nCat was in awe of how fast Theresa's mind could work when she bent it to a task, and she wondered if she could ever be that knowledgeable and efficient. She followed silently and asked questions now and then to try and understand what Theresa's thought process was. They would need a steward and added security, which could come from the watchmen and at least two other women, a decent cook, and, as well, a maid who could work under Lisa, who would continue to run their household and liaise with Cat on a daily basis. Once they chose a home for their family and to raise the children they would need additional staff, but they were not urgent additions and could be dealt with over time.\n\nCosimo and his wife, Angela, had arrived, along with Salvatore and Sonya, at the summons from Theresa, and within an hour several candidates for each position sat in the kitchen with Lisa, who was overwhelmed with the speed at which Cat had begun to fill her request for additional help in light of the Gathering and wedding events. By the time Matteo and Ricco arrived to change for dinner their penthouse was full of people.\n\n\"We only left you alone for a few hours, what happened?\" Matteo looked around incredulously.\n\n\"I'd love to explain, but I need to speak to Logan,\" she looked toward the foyer where the young cousin had just appeared. \"Theresa is using your office, I hope you don't mind, maybe if you go and see her, she can explain,\" Cat laughed and shook her head before gathering Logan and taking him to her studio, shutting the door on the chaos she had created.\n\n\"You know, I should have learned by now that if I ask for help, with what I think is a small problem, the Vitali family make it a production with a cast of hundreds,\" Cat laughed as Logan looked at her questioningly.\n\n\"Is that how you ended up with Matteo solving so many of the impossible clues?\" Logan laughed.\n\n\"Yeah, I just wanted help with one or two so I could contribute more to our team, and suddenly he's calling breakfast meetings and we are racing around the city to get as many as we could this morning. Did you find many of the ones he left for you to do?\" she asked.\n\n\"A few,\" he nodded. \"Tate let me know she did too, we're going for a drink after dinner to talk about it.\"\n\n\"I'm sorry Matteo took over this morning, he can be pretty bossy at times,\" she smiled crookedly.\n\n\"Don't be, that was awesome. You have no idea how many people are trying to find out everyone's team number so they can narrow down ours and where we are in the standings. I've been holding back some of our items and tasks so that we don't jump too far ahead too early. That way, if anyone does work it out, we still won't be a threat. Then, with a few days to go, we'll just fly past them all. So what did you get today?\"\n\nCat spread out her list that she'd been using that day and listed off items as she pulled them from the envelope folder she'd been using. Most were from the end of the list and worth a lot of points. When she was done, she put them all back into the envelope and pushed it toward him, explaining that Matteo had also solved a few other clues during the morning they had been hunting. But she wouldn't have time to try and get them until next week.\n\n\"Who's trying to find out what number we are?\" she asked, tilting her head.\n\n\"The competitive ones like Kalum. Mostly Lucca, Sebastian and Chase are working as much on working out everyone's number to see who the real competition is as they are on the real clues. It's a good distraction for them, really. They are all used to being the best at what they do, especially since Matteo hasn't been playing for a few years. He always beat everyone at stuff like this,\" Logan laughed, \"and this year he will again.\"\n\n\"I don't think he wants people to know how much he helped me,\" she chewed her lip thoughtfully. \"Only you and Tate know, and I guess Kalum, from their phone call last night. Next week is going to be so busy for everyone, so it won't hurt to show them what we've got points-wise,\" she grinned.\n\n\"You're not leaving for your honeymoon?\" Logan asked.\n\n\"We have to stay for the gathering, and there are so many events that Matteo and I will have to attend next week, along with all the cousins as well. I doubt any of us will have much time for hunting,\" she admitted.\n\n\"If this is what your place looks like on an average day, it is a wonder you and Matteo have time to get anything done,\" he chuckled.\n\n\"It's not always so bad,\" she laughed good-naturedly. There was a tap on the door, and Ricco opened it and stepped inside, giving Cat a look that was part amused and part annoyed.\n\n\"Such a brat,\" he shook his head at her, making Logan look between the two of them.\n\n\"I highly doubt that,\" Logan said, immediately coming to Cat's defence.\n\n\"That mess out there is her doing, and she is hiding in here with you while Matteo cleans it up,\" Ricco raised his eyebrow at his cousin.\n\n\"Sounds like she made a smart move to me,\" Logan smirked. \"Besides, Matteo signed up for this sort of stuff when he convinced her to marry him.\"\n\n\"What he said,\" Cat gave a soft laugh.\n\n\"I dare you to say that to him,\" Ricco challenged them both.\n\n\"Perhaps not tonight, he seems a little busy right now,\" Logan said easily, making Ricco chuckle.\n\n\"You think?\" Ricco shook his head. \"Go help him, please, Cat. You got him into this situation.\"\n\n\"You realise that I'm not the one who invited twenty-five men here tomorrow night and expected one poor woman to cater for them all?\" Cat asked, unsure if either Ricco or Matteo had been told why she had caused the kerfuffle in the next room. \"If either of you breaks my Lisa, I will never forgive you! Speaking of which, I should go and check that she is coping with this influx of people.\"\n\n\"Shit, it's all my fault then,\" Ricco admitted, suddenly feeling guilty that he hadn't been clear that he had caterers coming to service the evening and help with what he'd asked Lisa to do for him. \"Fine, I'll go save him. Your parents are out there,\" he said to Logan, \"you should come and help me.\"\n\n\"You're not using me as a shield!\" Logan held up his hands.\n\n\"Want to bet?\" Ricco chuckled. \"Come on, you're stuck in this mess too, now, because Matteo wants to see you about a project he wants you to manage.\"\n\nSurprisingly, most of the people who had been milling around in the living room had left by the time Cat emerged from her art studio with Ricco and Logan. Cat went into the kitchen to apologise to Lisa, not having realised how quickly her request would escalate, while Ricco and Logan walked into the offices to see Matteo.\n\nHalf an hour later Cat left Lisa with several candidates, telling her in confidence that honesty was beyond important in her appraisal of the women because of her lack of experience. When she found Matteo and Ricco, she found herself faced with several men all sitting in his office and seeming to be waiting for her, and she entered the office nervously.\n\n\"We should go down for dinner,\" she said quietly.\n\n\"You're right, again,\" Matteo said gruffly. \"Gentlemen, could you come back at nine?\" he asked the men who stood in his office, including Logan in his invitation.\n\n*****\n\nMatteo invited Logan and Tate to sit with them and talk about the hunt and if they'd managed to find any of the missing items from the list.\n\n\"This doesn't look good,\" Lucca said, pulling up a seat at their table.\n\n\"Why? Is there a new rule that you can't discuss the list with non-competitors I didn't know about?\" Matteo asked with a smirk.\n\n\"I thought you said you were retiring from being a hunter?\" he accused.\n\n\"I have,\" Matteo shrugged. \"That doesn't mean I'm not interested in seeing the list, especially as my wife's wedding underwear is on it.\"\n\n\"So, you're not going to help them?\" Lucca asked.\n\n\"Well, I don't really think I'll have any time after tonight with the wedding this weekend, but, now that you have pointed out how much you would love a real challenge, I might see what I can do after the wedding,\" he chuckled. \"Unless, of course, you want to answer Cat's questions yourself and save me from weighing in. Some of these seem pretty hard.\" He baited his brother, deliberately not lying.\n\n\"Alright, you stay out of it, and she can ask me for three hints to the impossible clues,\" Lucca negotiated.\n\n\"If you can get the same deal from Sebastian for Logan, and Chase for Tate, I will give these back and pretend I never saw them,\" Matteo countered.\n\n\"Hints, not answers,\" Lucca reiterated.\n\n\"Sure, but they get to pick their questions, I don't want you all giving the same hints to the same questions, or I might have to help Cat out next week after all,\" he said as if this would be a hardship to him. \"With Dopey, Grumpy and Happy, here, you know Kalum could use the help, and he won't be getting much from Mia. She's more competitive than I am.\"\n\n\"Wait! Am I Dopey or Happy?\" Tate questioned.\n\n\"Cat did something incredibly silly today, so she gets the honour of being Dopey,\" he smirked.\n\n\"Aww, isn't he just so romantic? You can see how I fell in love with him when he uses such cute names for me,\" Cat said dryly.\n\n\"Aww, Dopey, you know I love you,\" Matteo kissed her cheek and wrapped an arm around her.\n\n\"Good job, Lucca,\" Ricco chuckled. \"Only you could cause the sickeningly in love to fight two days before the wedding.\"\n\n\"Deflecting there, Ricco?\" Cat pierced him with a narrow gaze.\n\n\"It was worth a shot,\" he continued to chuckle. \"I think I'll go see Chase about helping out Tate. Coming, Lucca?\"\n\n\"I am,\" Tate said. \"I have no idea what's going on here, but that's not unusual,\" she laughed. \"Logan just texted me what I need to do. You're our captain, after all.\"\n\n\"I think I'll leave you to talk as well,\" Logan excused himself. \"I'll come up at nine; I'm assuming you would have told her by then?\" He raised an eyebrow at Matteo.\n\n\"Tell me what?\" Cat asked.\n\n\"Shit! Thanks, Logan,\" Matteo shook his head. \"Let's take this argument upstairs,\" he grumbled.\n\n\"We aren't arguing,\" Cat frowned.\n\n\"Not yet, but I am pretty sure it's coming. Do you want me to grab the great arbitrator?\" He asked.\n\n\"Scared to tell me whatever it is alone?\" Cat asked.\n\n\"Kinda, maybe,\" he admitted. \"I don't what to fight about this, Cat. I was hoping to do it Monday, but plans change.\"\n\n\"This, what? What did you want to do on Monday when it was too late for me to run away and save myself from marrying you and inheriting your crazy family?\" she said in a teasing way and narrowed her eyes.\n\n\"Let's go,\" Matteo said, standing and holding out his hand to her. \"Before you really insult someone other than Logan, who we all know is crazy.\"\n\n\"I'll let your arbitrator know you've gone upstairs and that I fear only one of you will come back down,\" Logan chuckled.\n\n\"Thanks, but I'm tougher than I look,\" Cat laughed.\n\n\"I'm not worried about you,\" Logan winked and chuckled as he walked away.\n\n\"This must be bad,\" Cat said, starting to worry as they walked toward the elevators.\n\n\"Not at all, but you did open a can of worms today, and there are expectations and consequences that come along with that,\" Matteo said in a calm voice as he bent to kiss her reassuringly.\n\n\"Can of worms?\" she asked.\n\n\"A can of worms,\" he nodded, guiding her onto to the elevator.\n\n\"If you're talking about Lisa, could we talk about it where she can't hear us, please? I think I might have already upset her,\" Cat said quietly. \"I did try to apologise for interfering, but she didn't say anything, and I feel just awful.\"\n\n\"Good, you should feel bad, that will make what I have to say easier,\" Matteo said, considering her. Cat seemed more concerned about facing Lisa than any consequence he could come up with, and the pieces of why this had happened today began to fall together. Stepping off the elevator, he waited for a beat, and, on cue, Lisa appeared to offer her service. \"Follow me, Lisa,\" Matteo said, and placed a hand on Cat's back, walking her toward his office.\n\n\"My future wife decided to take a hand in the running of our household today without consulting you, I understand, and I would like to apologise on her behalf. I want to assure you that her actions in no way reflect my opinion of you, which, as always, is nothing but of the highest order,\" he said formally. \"I have no idea why she couldn't just wait two days until she was officially Mrs. Vitali and then talked to both of us. Once we were married, I had plans to bring in the extra staff needed and expected of a family of our standing with yours and Knox's assistance. There will be consequences, I assure you,\" Matteo said with a perfectly straight face.\n\n\"I'm so sorry, Lisa, I was just trying to help, and it all escalated so quickly. Please forgive me for interfering,\" Cat said, willing Lisa not to say anything about their earlier conversation. \"I'm so inexperienced, I couldn't have known he, Knox, and yourself had plans to handle all of this, and I sincerely apologise.\" Lisa seemed to consider the situation for a long moment and visibly straightened before speaking in response.",
        "\"I asked Miss Leonne for some assistance because I didn't want you to think badly when I let you down tomorrow night,\" Lisa said in a strong, confident voice. Once she had decided to speak in defence of Cat and take the consequences, she wouldn't cower like a small mouse.\n\n\"Tomorrow night?\" Matteo asked.\n\n\"Yes, there will be quite a lot of people here, and, without help, I am not sure I could cater to your needs appropriately or successfully,\" she said, keeping her responses as formal as he had originally.\n\n\"Shit, so all this drama was Ricco's fault!\" Matteo raged to himself. \"Thank you, Lisa, you may go.\" He waited until she left the room before turning back to Cat. \"I'm afraid you still have to face the consequences of seeking help from Mama, despite your good intentions,\" he spoke to Cat. \"You should have spoken to us when you knew there was an issue.\"\n\n\"You were so busy, and I'd already messed up your day with the hunt, and...\" she hesitated. \"I had no idea that it would escalate so quickly.\"\n\n\"You have no idea what you have done, but you are about to find out,\" he sighed in frustration. It was no good wishing Cat hadn't pre-empted this, it was what it was now. \"Once we are married, the table will be announced. You, as my wife, will become the most important figure in our family. Not just our household, the entire family. You will be the mother of the next generation to lead this family, and it will fall to you, like it falls to Theresa now, to be the glue that holds the family together. Without the mother to bring us all together on special occasions and at this annual gathering, the men who sit on the table to make the decisions that help our family flourish would just be executives of a big company. Instead, because of the mother and the love we feel for each other, we are a family.\" He tried to explain using the analogy his friends had used when he was in Kuala Lumpur.\n\nCat had known some of this, and, while she realised that she still didn't grasp the full ramifications of the position, she had known becoming Matteo's wife would mean a lot more than simply looking after her own household and the men she loved. Every single man from the Donati table loved Peri and spoke of her with the utmost respect. Cat also knew that all Peri had to do was make a simple request and they would all bend over backwards to fulfil it. She had marvelled at how the super busy Peri Donati managed everything she did so well and fit so much into her days. Her mind went to Theresa. She didn't feel like Theresa commanded the same amount of love and devotion from her family as Peri did, but she imagined it would be difficult to step into another woman's shoes and carry on without any pomp or ceremony.\n\n\"I did understand that being the wife of the future leader of this family would entail more than the average woman would expect when getting married,\" she said cautiously. \"I spent a lot of time with Peri, a little bit with Marina, and I have gotten to know Theresa quite well, as you know.\"\n\n\"Then you know there are certain expectations placed on us and our lives. We will need personal and household staff to help us keep our increasingly busy lives in order and coordinated. Theresa is a highly organised and efficient woman, but she doesn't do it alone, nor is it as effortless as she portrays,\" he said, making his way to his point. \"A lot has happened in the last few months for both of us, and if we are to survive the madness and be stronger, happier, and more in love, then we have to put the supports in place early.\"\n\n\"Okay,\" she said hesitantly, not sure where this was going.\n\n\"To start with, Lisa will become the household manager, and there will be a cook and two maids directly under her management,\" he stated, knowing that this would come as no surprise, since she had pre-empted it. \"In addition to that, Knox, who will remain my driver, will head a security team that will include a driver for you,\" he held up his hand to forestall her protest. \"You can keep your car and use it for small errands, but, for safety reasons, you will have a driver and a town car. That isn't negotiable, even if Ricco were here.\"\n\n\"I see,\" Cat said, trying to understand the need for such security measures.\n\n\"Each time a new table is announced there has been an attack on that family, the most devastating was that on the Donati family,\" he said, watching her to see if she understood what he was saying. \"Do you know what happened to their family a few years ago?\"\n\n\"Yes,\" she nodded, unsure of how to take that information.\n\n\"You will also have a personal assistant who will not be a contracted employee but, rather, a loyal family member of our extended family who knows our laws and traditions. This person will coordinate between Lisa, Knox, Hilary, and everyone else who you deal with on a frequent basis, including any work you do for any of the families, including the Donatis', if you take on more commission work,\" he said.\n\n\"What if I don't get along with them?\" she asked.\n\n\"Then we find one you do get along with, because you will have these people to support you,\" he said adamantly. \"There is one last thing for now,\" he took a breath. \"Logan.\"\n\n\"Logan?\" she tilted her head.\n\n\"Since finding out that our future would be... this way, I have been considering your request to renovate the house on the hill. Logan is one of the best project managers we have at the company, and he has agreed to manage that project for you. He will put together an architectural design team to sit down with you and discuss our needs with the understanding of what someone in my position also needs from a home. It's only an hour or so's commute from the city, and there is no reason we couldn't maintain both houses so that our children have a home with a yard as well as a good city experience.\"\n\n\"Like Peri and Josh have?\" she asked, also considering the possibility. She had been so busy since he had given her the house to do with as she wanted that she hadn't had time to even think about what she wanted, but she had loved the Donati country house, and wondered whether she could incorporate some of their design into her own. The major difference was the view of the Southern Ocean. Her whole world view had changed since her original thoughts to renovate it, and she had trouble picturing the details of the house in her mind.\n\n\"Something like that, only better, because it will be ours,\" he smiled, believing she was taking her loss of independence better than he had thought she would.\n\n\"And I need all of these people in my life to make it possible to do all the things I need to do as well as the few I want to do?\" She asked to clarify. \"I can still take commissions, and keep the house on the hill and see my brother whenever I want to?\" she asked, knowing she hadn't spent nearly enough time with David recently.\n\n\"Yes, all of those things,\" Matteo nodded.\n\n\"Okay,\" she agreed. \"I assume you and Ricco will have the same supports in place, so it would be a bit childish of me not to agree. Why would you think we would fight about this?\"\n\n\"You usually aren't so accommodating about your independence, we argued over your car,\" he said.\n\n\"That was a discussion, and you made an arbitrary decision without explaining why. This time you told me why, so I understand why you want me to have these people in my life. As long as I can get along with them and still do the things I need to do, I am happy,\" she said to reassure him as he continued to look at her sceptically. \"I like the idea of working with Logan. He's so serious, but he has a wicked sense of humour that comes out when you least expect it. Remind me again; Household staff and driver will be contracted, and Logan and my assistant will be family?\"\n\n\"Yeah, I guess your driver is distantly related too, in a roundabout way, but he still took the contract,\" Matteo admitted.\n\n\"So, about these consequences,\" she smiled softly and moved towards him.\n\n\"Those were your consequences, your punishment for not coming directly to Ricco or me will be long and difficult,\" he murmured deeply and pulled her into his arms.\n\n\"So just an average night in the red room of pain then,\" she teased.\n\n\"You're playing a dangerous game, Kitten,\" he warned.\n\n\"I thought you liked playing games,\" she brushed her lips over his, \"It is our last night together before the big day when you are officially no longer one of the country's most eligible bachelors.\"\n\n\"So that went well, then?\" Ricco said coming into the room. \"I don't see any tears or bloodshed.\"\n\n\"He almost cried once, if that counts,\" Cat laughed, making Matteo growl.\n\n\"We were just discussing her punishment for going to Mama rather than us,\" Matteo said, his voice deep and husky.\n\n\"I have an idea,\" Ricco flashed a look of dark desire at Cat and tilted his head at Matteo.\n\n\"I'm open to suggestions,\" Matteo chuckled.\n\nThey led her into the Red room where they helped her out of her clothes but didn't take the time they usually would have with teasing touches and kisses. Ricco worked quickly, as if on a time clock, while Matteo helped her undress.\n\nRicco then placed a long rope that hung like an odd necklace around her neck. Knots were made in several places and then pulled between her legs. Cat could feel the knots that would once again caress her clit and ass, and she wiggled, eager to feel them again.\n\n\"Don't go too deep into that headspace, beautiful. We are going to need you lucid and able to hold a conversation!\" Ricco warned, despite the heavy arousal evident in his own voice. He attached ropes to the back of the necklace like structure and then under the arms to the ropes in front. These were then looped through and back; and the process repeated, creating diamond shapes with the rope against her pale skin. The sweet caress of the ropes over her skin had her making soft purring moans, and Ricco considered if they should allow her some respite before the meeting. He had purposely not bound her tightly so that this harness of rope could be worn for a long period of time.\n\n\"I found it!\" Matteo announced, walking back into the room with a dark high necked dress be had never particularly liked but was grateful that she had kept it now. He helped her dress, seeing the heated look in her eyes and the soft whimpering purrs, and grinned. \"I guess you're wondering how this is punishment for you, Kitten?\"\n\nShe tilted her head and looked at him questioningly, and then at Ricco, who also grinned.\n\n\"Did you forget we have a meeting at nine?\" Ricco asked with a smirk.\n\n\"No, you wouldn't!\" she gasped.\n\n\"Wouldn't we?\" Ricco asked with a grin.\n\n\"Red!\" she said, becoming immovable. Ricco reacted first, stepping forward to remove the dress and rope. Matteo was stunned and relieved that she had safe-worded.\n\n\"Why would you want to do this to me in front of people I am supposed to work with as equals, if not more?\" She asked as the ropes were removed quickly and easily. \"What we do in here is private and...\" she bit back the word special.\n\n\"We wouldn't have let anything happen to you,\" Matteo immediately said. \"We had no intention of leaving the teaser knots in place when we went to meet the guys. No one would have known but us.\"\n\n\"How could you have stopped it?\" she asked incredulously. \"How could I, with the constant stimulation from the Karada, even without the knots? I'm supposed to be the woman you love and want to marry! I'm not a Kept! Why would you think it was okay to treat me like one?\"\n\n\"You are the woman I love, and we are getting married!\" Matteo squared his shoulders, realising what he had done too late and preparing to fight with her until he won back her trust. They had never planned to expose her or her submission in any way, but he could see how she wouldn't like to be put in that position, despite being open on occasion about their unconventional sex life.\n\n\"Why would anyone respect me if I let you parade me around in a rope collar and harness like a Kept? The rope would have been visible at some point, especially around my neck!\" She asked and pushed past them to leave the room, picking up her clothes as she went, and slammed the bathroom door so she could get dressed and think for a minute.\n\n\"Cat, please come out. Just come and meet with the three men and then we will grovel for forgiveness however you see fit,\" Ricco said. \"We would never have left the leg ropes in place; no one would have known anything, I swear! We wouldn't put you in that position.\"\n\n\"Fine, I will meet with them because they have come here for my benefit,\" she said, emerging from the bathroom looking as she had earlier that evening. She didn't believe they wouldn't have purposely humiliated her, but the threat had seemed so real. Real enough to make her feel sick at the thought of a family member realising that this had all been a mistake and she wasn't good enough for Matteo or Ricco as anything other than a Kept. She didn't belong here, and she'd been faking it for weeks now, had let herself believe that maybe she could get away with pretending to fit in with these people. She never would though, Ned was right, and Matteo and Ricco knew it, she thought sadly.\n\n*****\n\n\"It's fine,\" Cat said again, as Matteo and Ricco continued to apologise after Logan and the others had left. \"I'm just tired, it's been a long day,\" she smiled. \"I think I'll go to bed early tonight.\" She kissed both their cheeks and walked toward the bedroom.\n\nMatteo had seen the mask of the happy bride-to-be go on as she met with the three men who would make up the beginnings of her support team. He knew she wasn't fine, but, while Cat continued to insist that she had over-reacted and knew they never would have gone through with the threat, he couldn't do much to make her take off the mask and talk to him properly.\n\n\"Do you believe her?\" Ricco asked as he watched Cat walk into the bedroom.\n\n\"No, but I need to believe that she will be,\" Matteo said. \"Give me a few minutes, would you?\" He asked and turned to follow her to the bedroom. She was in the bathroom, and he walked in and shut the door behind him, watching her as she brushed her teeth.\n\n\"It's okay, Matteo, you don't have to look so worried,\" she said, wiping her mouth with a small towel.\n\n\"From the beginning, we promised each other honesty, I'm trying to work out why you aren't being honest with me now. Tell me, Kitten. Tell me why you are so upset about what happened. I can't fix it if I don't understand what's really going on, and I don't want to make another mistake like that again,\" he said honestly. \"I know it's more than just the ropes, tell me what happened.\"\n\n\"When did you realise?\" she asked with a sigh.\n\n\"After the third time you said you were fine,\" Matteo shrugged. \"Fine is a word no man wants to hear from the woman he loves.\"\n\n\"That's not what I meant,\" Cat turned to look at him and leaned against the bench. \"When did you realise you'd made a mistake asking me to marry you?\"\n\n\"I didn't make a mistake. It's what I want more than anything!\" Matteo took a step toward her, but she held up her hands in front of her and stepped back.\n\n\"I've been trying so hard to fit in and pretend I belonged here, with you. I don't though, not as anything more than a Kept. You and Ricco spend more time with me in that room every night than you do talking to me on a typical day. Now I need babysitters for every moment of my day so that I don't do anything to embarrass you or your family. Ned was right after all, and now it's too late for either of us to back out of the wedding without a lot of drama,\" she said sadly.\n\n\"Ned was wrong, so very wrong! You are everything I ever wanted or needed!\" Matteo was horrified by what she was saying. The threat they had made had obviously triggered some unpleasant memories. Everything they had done in the red room and before the empty threat of punishment had been by her consent, never as punishment. Using sex as punishment rather than pleasure had to have been what had triggered the dark spectre that was Ned and made her compare him to the cruel bastard.\n\n\"You don't have to pretend anymore, it's okay, honestly,\" she gave a sad smile. \"I won't call off the wedding, and I will not be a problem for my babysitters. I understand now.\"\n\n\"No, it's me that understands, finally,\" Matteo said, wanting nothing more than to pull her into his arms, and stepped towards her again.\n\n\"Ricco told you, didn't he?\" Cat asked, moving away from Matteo again. \"He told you that I didn't want to go to the hospital or press charges against Ned. He told you I would just accept whatever happened if it meant keeping the people I loved safe. He's right, you know, I won't hurt your parents or my friends by throwing away everything they've done for me, not to mention the expense of this wedding by calling it off, so you have nothing to worry about. I'm not running away.\"\n\n\"Ricco didn't tell me anything. I only know what was in the report and the little you told me,\" he said, backing her into a corner but refraining from touching her as she looked up at him with questioning eyes. \"I told you that your past doesn't matter to me, only our future. I am asking far more of you than you have ever asked of me. The crazy family, the trial, the big wedding when you would have rather eloped. I want all those things because I am proud you chose me and I want to show the world how lucky I am. I would have left this family to be with you if you had asked, refused the trial, or any of this.\"\n\nCat said nothing, trying to think about what he was saying. At least he had stopped apologising. She'd never had cause to doubt his words until tonight, but now it seemed so obvious to her, she wondered how she had let herself believe it all for so long.\n\n\"I shouldn't have threatened to punish you. You were so playful when you asked about consequences. I never knew that Ned used sex as a punishment for you. If I'd known he did that...\" Matteo's voice turned gravelly with anger.\n\n\"I get it. You didn't know, and it was a playful threat and I over-reacted,\" Cat sounded resigned as she spoke.\n\n\"I love you, and I can't believe I hurt you so badly that all the trust we have built between us has just evaporated. I will call off the wedding, if that is what you want. I'll do it so no blame will be placed on you. You can go home to David or to the Donati, wherever you like, and I will take you there myself, if that's truly what you want. I won't force you to stay if you don't trust me anymore,\" he said sadly, backing off from her. \"It doesn't matter how much I love you if you can't love and trust me in return.\"\n\n\"I already said that I wouldn't call off the wedding,\" she sighed.\n\n\"I want to marry you because we love each other, not because you feel you have no choice. I'm giving you that choice right here, right now. Can you trust me to never do anything like that again now that I know how it affects you? Do you still love me?\" He asked, looking at her intently with his heart in his eyes.\n\nCat felt the shock of knowing how hurt Matteo was; he looked as if she had wounded him so badly he was in severe pain. He was giving her a choice to walk away from this life, from him. It had been easy to believe that she'd build her own cage yet again, albeit a prettier one than the caged life she had with Ned. Yet here he was opening the door for her to step through and leave him if she wanted. No babysitters, no having to pretend she could fit into this family, she would be free, but she would also have lost the man she loved.\n\n\"You're not being babysat anymore than I am,\" he said as if reading her mind. \"I have an assistant, a driver, and more project managers than I need working for me. They are necessary to keep on top of everything in our lives. I knew you wouldn't like the idea, but I explained why, especially the driver. I would die rather than let anything happen to you that I could prevent.\"",
        "\"I've always loved you,\" she said quietly. \"Why else would I have done all of this? Why would I have accepted your family's bizarre laws and traditions and found myself marrying, not just you, but your brother as well? It doesn't change the fact that I don't belong in your world, with all of these people. I'm... damaged, broken, used, and putting me in a submission position and headspace when you wanted me to meet with people who would be working for me just proves that you don't think I can take on the role needed to help you lead this family. Why would they bother respecting me when you obviously don't? You mightn't have planned to follow through, but even the threat to do it showed how you feel about me and my place here with you.\"\n\n\"Fuck! That's not how it was, nothing like that even entered my head!\" Matteo's emotions warred within him. \"Believe me, I love you. I want to spend the rest of my life with you, and only you. Your submission stays in the red room, I understand that now, and I won't cross that line again... Not ever. I wasn't thinking, things had been so unbelievably good since moving in here that my brain went south. I have no other excuse, aside from the fact that my desire and need for you made me do something unbelievably dumb, and I guarantee you it will never happen again. You are not that girl anymore, Cat. You do not have to battle every day just to survive, and, if I made you feel that way, I can't apologise enough.\"\n\n\"I do love you, I always have. There is no need to call off the wedding, but...\" Cat paused. \"You're wrong. That girl who survived rather than lived for so long is a part of me, and she will always be a voice inside my head reminding me that I'm different to the rest of you. That I don't belong here.\"\n\n\"Without you I would have married a woman I didn't love, and Jacobi or Ricco would be getting the chair, maybe even Lucca. Without you I would still be obsessed with work and shutting everyone out of my life, including my brothers. You made me a better man. You brought me back to my family in a real way again. You belong with me, never ever doubt that,\" Matteo said. \"You have been told by enough people that you are the reason I have started acting like part of this family again.\"\n\n\"I guess we both have psycho ex's,\" Cat sighed.\n\n\"Last I checked, yours hadn't murdered anyone,\" he shrugged, making her smile crookedly.\n\n\"I'm tired. I'm not going anywhere. I do love you, but that doesn't mean I'm not going to lose my mind now and then. It's a lot to take on, you know? What happened almost undid everything I have tried to do to convince myself that I could be the woman you want me to be, instead of just a whore,\" she finally used the word Ned had labelled her with.\n\n\"You are the woman I want you to be, you don't have to try and convince yourself, or me, or anyone of that. You are!\" Matteo said.\n\n\"And Ricco?\" she asked. \"He knows what I was, what I put up with. Does he honestly believe I could be the woman you need?\"\n\n\"More than anyone, Ricco knows what my love for you has done to bring me back to the family and the life I was destined for, he loves you too,\" Matteo said. \"Not in spite of your past, but because of how strong and compassionate it has made you. He feels worse than I do about what happened tonight. It was his idea, and he blames himself for how upset you got.\" Everything was calming down, and she was talking like she normally would now. The mask had dropped, and Matteo knew they would be okay, although he would find some way to make this up to her and show her how much she was loved, not just by him, but by his family.\n\n\"Then you should probably go and reassure him that I am not going to run away or do anything more drastic than get some sleep,\" she sighed. \"Because, even though I love you, I'm not using the bathroom in front of you, and I will have an accident if you don't leave me alone for a few minutes.\"\n\n\"Okay, but I love you, and we will be getting married because we love each other, not for my family or the expense or anybody's hurt feelings,\" he took her in his arms and kissed her lightly. \"Marry me, Kitten. Be mine forever because you love me.\"\n\n\"Yes,\" she whispered, and wondered how she had ever doubted his feelings for her. He wasn't Ned, she knew he would never treat her that way, but it had all come crashing back down on her at that moment. Ned never would have released her so quickly at a single word or fought so long to bring her back from her dark thoughts. \"Yes, because I love you that much.\" She kissed him again and then pushed him out of the bathroom with a small smile.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "ropes",
        "menage-a-trois",
        "staff",
        "family",
        "brothers"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-23"
}