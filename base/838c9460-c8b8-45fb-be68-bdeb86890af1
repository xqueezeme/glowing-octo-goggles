{
    "title": "TRC - Searching for the Sky Ch. 29",
    "pages": [
        "Welcome back!\n\nFor those of you reading The Runesmith Chronicles for the first time I recommend going back and starting with the first book The Runesmith Chronicles (it's actually Oni and the Farmer but it's too late to change it here :P). Mostly so you have a better understanding of how things like the magic system works and what's going on as I often reference earlier chapters.\n\nI update my Bio with the latest Chapters and projects I'm working on each time I put up a new post.\n\nAs always votes and feedback are greatly appreciated!\n\nEnjoy!\n\nBlu\n\n---\n\nEdited/Proofread by: oldfart and 2muchdiggity\n\n---\n\nChapter 29\n\n\"What the hell do you mean, 'Survive?' What did you do to me?!\"\n\n\"Your body will fill with magic, if you can't get rid of it quickly enough then it will kill you,\" said Kithana.\n\nStill staring at the sprite, Kal remembered Ikuno getting drunk on magic after she gave herself to him and how she said humans went 'POP!' if they did the same. That aligned with Kelthor's stories of the apprentices who couldn't resist the urge to fill themselves with magic beyond what their bodies could handle.\n\nThe glowing tendrils began appearing beneath where he was holding his arm. Glancing over at the girls, he saw looks of horror on their faces as the blue glow made its way inexorably toward his elbow.\n\nKal jerked his head toward the forest, \"You three need to get away from me.\"\n\n\"What? No!\" said Sera, shaking her head. \"I'm not leaving.\"\n\nGrowling in annoyance, he looked over their head, \"Senshu, take them a safe distance away and keep them away from me.\"\n\nThe six-armed lamia nodded as she grew in size, her hair turning silver again. Using the two top sets of arms she wrapped them around Sera on one side and Velt on the other then used the bottom set to pick up Graff. Turning around, she made her way back to the path they just came from with her unhappy passengers.\n\nKithana stared after the retreating lamia before looking over at Molo who was watching from a distance. \"Did she just do what he told her without question?\"\n\nEqually surprised by the Senshu's actions, the frog-girl just shrugged in response.\n\n\"Let me go!\" screamed Sera as she and Velt tried to escape the sword maiden. Graff just drew in her arms and legs while trying to not look utterly terrified.\n\nSenshu shook her head. \"I'm only taking you out of harm's way. But I suggest you don't watch. If he fails, you don't want to see what happens,\" she said in her larger form's deeper voice.\n\nThe gorgon stopped struggling, caught off guard by the sadness in the big woman's tone. \"You think he's already dead,\" she said accusingly.\n\nThe sword maiden nodded. \"Father managed to survive one drop and it took hours for him to succeed. I don't know if it is even possible for a human to survive three,\" she said, putting them down.\n\n\"You want him to live,\" stated Velt from her other side as Graff came over and hugged the vixen for comfort. The doe didn't mind the large snake-woman as long as there was some distance between them. Being picked up and carried by the silver lamia left her shivering in fear.\n\n\"Yes. Though many of my sisters may feel differently.\"\n\n\"Why?\" asked Sera while looking toward Kal with a worried expression.\n\nSenshu turned to watch the mage as well. \"It has been said that you can tell a lot about a person by fighting them. I think how they act after defeating you is more telling of a person's character. I have only been defeated a handful of times in a thousand years and your man was the first to be worried about me afterward.\" The sword maiden chuckled, \"And over something so silly too. Those cuts were little more than scratches.\" She glanced down at the gorgon, \"I would very much like to see him live.\"\n\n\"What is he doing?\" asked Velt.\n\n\"I am unsure, but he needs to start doing something soon or Kit's magic will end him.\"\n\n\"I think he is recharging his crystals,\" said Sera, seeing where his hand was resting on the pouch.\n\n\"'Crystals'...? He has more than one?\" asked Senshu.\n\nSera nodded, \"He has four in that pouch,\" she held up a finger, \"about that big.\"\n\n\"Four crystals... did he say what quality they were?\"\n\n\"Near-flawless I think.\"\n\nThe sword maiden's eyes widened. \"Molo! Get away from there!\" she yelled to the frog girl. \"He has four high-quality crystals and he's charging them all!\"\n\nThe Molo's eyes widened and she turned to run when Kal called out, \"I'm not going to take anyone with me if I fail!\" More quietly he said, \"but these have given me precious time to think.\"\n\nKithana seethed as she watched the mage pull the pouch with the mana crystals from his belt and throw it toward his companions. The man should be dead already. Instead, he was watching calmly as her magic slowly spread across his body.\n\nInside Kal's head, his mind was anything but calm as it searched furiously for options to expend as much magic power as possible. This might be a lot easier if...\n\n\"Ria!\"\n\n\"Yes?\" said the avatar, flying towards him.\n\n\"I know I said I didn't want to do this, but I need some of the energy you got from the will o' wisp.\"\n\n\"It's about time,\" she said. Waving her hand, a stream of tiny lights floated out of her bag and came toward them. The sprite grew a little in size as each one touched her body.\n\nIn a voice that was surprisingly soft and calm considering the fear welling up within him, he told the avatar, \"If I'm wrong about this then tell the girls I love them and keep an eye on Perra and Talin for me.\"\n\n\"Then don't be wrong,\" she said before floating forward and kissing him.\n\nSeconds later she pulled back in surprise, \"You were nearly back to full, that wasn't much at all.\"\n\n\"Good to hear, now go back to Sera.\" His internal stores were filling fast despite doing his best to resist Kithana's magic. \"Please don't be wrong,\" he whispered as he allowed the magic to fill him.\n\nThe floodgates holding back the fae's power crumbled.\n\nKal's eyes glowed bright blue for the first time in months.\n\nDropping to one knee, he punched the ground and let out a pulse of magic that hit the onlookers like a blow to the chest. Energy popped and crackled as Prentas's tower appeared to one side of the black sphere, the blast of energy disrupting the invisibility spell hiding it. Smirking at his confirmed suspicions and ignoring the surprise of those watching, he stood and spun around, looking at the earth beneath him. Finding his target, he drew the rune for the Strength spell in the air. Grabbing the glowing sigil, he turned it back toward himself before activating it. Except he didn't just activate it, he dumped the sprite's power into the rune. Pushed far beyond what it could handle, the spell shattered in a spray of sparks leaving a glowing afterimage in its wake. The healing rune on his back lit up as he repaired the fingers damaged from holding the small explosion.\n\n\"What?!\" screeched Kithana but Kal paid her no mind as the fae's magic quickly replaced what he used.\n\nReaching out with geomancy, he wrapped a large boulder deep below him in the magic tendrils and heaved it up to the surface in a spray of dirt, rocks, and a couple of trees that were unfortunate enough to be growing above it. Moving it to the side, he let the stone drop with a loud thump that he felt as much as heard. He was surprised at how big it turned out to be. The rock was half the size of his house but the overcharged strength spell made it feel much smaller. \n\nDarting over to the boulder, he drew the telekinesis spell in the air then immediately began adding a second set of runes around the first, turning it into the more powerful version Ikuno showed him the night he had the vision about the flight rune. The spell itself was nearly worthless because of how stupidly inefficient it was. But along with his other extremely inefficient spell, featherfall, it might just be what saved him today.\n\nGrabbing the spell floating in the air, he pointed it at the stone and activated it. It was one of the few drawn spells that a mage could feed more power into, and Kal was going to take advantage of that.\n\nPlacing his other hand on the stone, he activated the featherfall rune on his vambrace and pushed the magic into the large rock. The Greater Telekinesis spell became blinding as he poured magic into it. The mage was honestly surprised when the huge stone began rising into the air, but more importantly, the two spells were leaking magic badly, which was exactly what he wanted.\n\nShattering the strength spell and activating Greater Telekinesis put a dent in his natural reserves. But even with the massive amounts of mana he was using, he could feel the fae's power continuing to fill him. Across his vambraces, the runes began to light up, strength, speed, stamina, haste, fire resistance, they all came to life along with his shield as Kal pushed them to their upper limit before needing to worry about burning the ink. He could sacrifice a rune by dumping power into it but after that, the leather beneath would be ruined and he would lose access to that spell. More importantly, he would lose access to that outlet for the Fae's magic.\n\nHe couldn't tell how many minutes had passed when he noticed the glow beneath his skin begin crawling up his other wrist. Kal stared at the blue streaks. With as slowly as he was absorbing Kithana's magic, he had hoped to simply outlast the effects of the sprite's fluids. But once it reached the tips of his fingers the only place left to go would be his head. Using his ability to control the flows of magic, he had been directing Kithana's power away from his neck since he didn't know what might happen if it got into his mind.\n\nLooking at his vambraces, he realized there was one spell that he could afford to burn as it was the only one of his runes not made to be sustained in any way. Gathering all the excess power he could, Kal shoved it into the acclimation rune. With a flash and a loud crack, the corner of the leather arm guard with the small rune popped in a shower of leather fibers. Kal winced and immediately began healing where destroying the spell damaged his arm. The healing was complete sooner than he wanted, but that didn't stop him from smiling as he looked at his hand. It was now clear of the blue glow.\n\nTaking a chance, he pushed the haste and fire resistance runes a little harder then increased the size of the shield slightly until he found an equilibrium with the influx of fae magic. His smile got a bit wider as a purple arrow formed by his arm and slammed into the boulder he was holding. It was soon followed by another and another as quickly as he could cast them. Alone, each one didn't use much magic, but with everything else, it was enough to start getting ahead of the power flowing into him.\n\nSenshu glided up beside Kithana. \"How?\"\n\n\"I don't know. Ikuno must have done something to him,\" the sprite looked up at the silver lamia. \"The power he is using right now would be enough to kill even you. A normal human would be spread all over the clearing or burnt to cinders already. I have no idea what that oni managed to do but I'd bet my left tit she is the reason behind this.\" Kithana sniffed the air, \"He isn't even struggling.\"\n\n\"That means...\"\n\nThe sprite scowled up at the sword maiden, \"Yes, it does. I'm putting an end to it, there's no sense in dragging this out.\" Her shoulders slumping in defeat, the sprite made her way toward the mage.\n\nSenshu waited until the fae was halfway to the human before allowing a large grin to spread across her face.\n\n\"I don't know if I would be doing that, Senny,\" said Molo as she stepped up next to the sword maiden. \"Kit is going to be pissed if she finds out you gave him hints.\"\n\n\"She had the drops ready before we arrived, I'm guessing she already knows.\"\n\nKal frowned as Kithana flitted into his field of vision. \"I'm passing your test,\" he stated, his voice strong with determination.\n\nThe sprite looked over at the Greater Telekinesis rune, \"What an awful spell, but perfect for something like this. I find it curious that you and Prentas both used a variant of the same spell to shed your excess magic.\" She looked over at the place where the large rock burst out of the ground, \"Though I think he killed more trees.\" Turning back to him she said, \"I know you are passing my test, so I'm ending it here.\" She held out her arms \"Grab ahold of me and push the power back into my body. You've won.\" \n\n\"If I don't, how long will this last?\"\n\nHer wings flickering in the sunlight, she flew down and sniffed the hand he cut for the trial. \"Not much longer.\"\n\n\"Then I'll wait,\" he said, his eyes going back to the huge stone he was holding.\n\nKithana's brow furrowed, \"Why?\"\n\n\"If I stop now there will always be the thought that maybe I would have failed if the challenge ran its course instead of letting you stop it early. That doubt will haunt me in the eyes of you and the other girls still here. I won't let that happen.\"\n\nThe sprite regarded him thoughtfully, \"I can respect that, I'll be back when my magic starts to wane.\"\n\nAs Kithana returned to Senshu and sat down on the six-armed woman's shoulder, the lamia asked, \"I thought you were putting a stop to it?\"\n\n\"He refused,\" she answered, waving the mage's companions over since there didn't appear to be any danger of the human exploding anymore. \"He thinks ending it early would hurt his legitimacy in our eyes.\"\n\n\"He may have a point there,\" said Molo. \"I just mentioned to Senshu that some of our sisters are going to be very unhappy.\"\n\n\"Hmph... I'm unhappy,\" said Kithana.\n\n\"We know,\" the sword maiden replied, \"but maybe this is a sign it's time to move forward. Time to take our place in the world instead of hiding from it.\" She looked up at the tower beside them, it had been years since something had disrupted the invisibility spell cast upon it. \"I know Father wanted to protect this place but what good is a legacy if stays buried?\"\n\n\"It's a legacy that stays alive, even if unseen,\" grumped the sprite.\n\nSenshu's expression hardened, \"That's a lie, Kit, and you know it. How many centuries has it been since we lost Rayla?\"\n\nThe sprite frowned at the memory of the normally happy sheep girl running up to the top of the tower and launching herself off the parapet to land head-first on the large black sphere next to them. Even harder for the remaining monster girls was the note she left telling them that she had enough of this world and to not attempt to save her. Because of their nature, Kithana could repair damage to Prentas's creations that would quickly kill a mortal. But once the mind was destroyed there was no coming back.\n\nRayla was the first, but hadn't been the last.\n\n\"What are you saying?\"\n\n\"That after a millennium of guarding Father's tower we need a new reason to keep going.\"\n\n\"Senny is right, Kit,\" said Molo, refusing to meet their eyes. \"I've thought about ending it a few times myself.\" She looked up, \"I'm going to trust Senshu about his character, these three seem to like him,\" she said waving toward the gorgon, fox, and rabbit standing quietly nearby. \"This could be good for us.\"\n\n\"Love,\" corrected Sera.\n\n\"You love him?\" asked the sprite.\n\n\"And he loves me,\" said the gorgon.\n\nKithana snorted in derision.\n\n\"I don't think I would doubt that,\" said Graff.\n\n\"If you think she's lying then you should watch those two fuck,\" said Ria.\n\n\"Ria,\" Sera growled in warning.\n\n\"I'm just sayin'.\"\n\n\"What of you two?\" Molo asked Graff and Velt. \"Does he love you too?\"\n\nVelt shook her head, \"It's not like that with us. Although I think he enjoys our company, in the bedroom and out.\"\n\nRia flew up and hovered in front of the three immortals. \"Before you start making judgments about Kal, I think you should learn a little more about him and how he got here. Kal and Ikuno found me deep in a cave...\"\n\n---\n\nAn immortal's version of \"not much longer\" was very different from his. By the time the glow retreated to the hand where it started the sun was just resting on the treetops. Kal was dripping with sweat and ready for a nice long nap when it faded from the back of his hand. A second later the boulder hit the ground with a blast of air as the spell holding it vanished and his runes went dark. Turning around, the mage leaned against the rock where impacts from his arrows had cleaned its surface. Looking up at the now-visible tower then over the clearing, he noted that a few more of the original monster girls had arrived while he was preoccupied.\n\nAfter a moment standing there, he slid to the ground with tears in his eyes.\n\nSera ran over and knelt next to him, \"Are you okay, Kal?\"\n\nHe waved off her concern, \"I'm fine, it's just that I can hear Perra and the others again.\" At the gorgon's surprised look he corrected himself, \"Well... not really hear... but I can feel them again. I hadn't realized how much I missed that.\" Kal took a couple of deep breaths. \"I'm just gonna... rest for a minute,\" he said before slumping to one side, unconscious.\n\n\"Kal? Kal!\"\n\n\"Settle down,\" said Kithana. \"Human bodies aren't made to withstand that much magic for that long. He will probably need a good rest after this. Bring him inside and take him upstairs to one of the guest bedrooms.\"\n\nAfter a moment's hesitation Sera reached down and picked Kal up in her arms. Two steps toward the tower entrance she nearly dropped him.\n\n\"Sorry! Sorry!\" she said, getting him situated as the others stared. With a sheepish smile, she explained, \"The last time I carried him he wasn't this floppy.\"\n\n---\n\nKal lay in the bed, awake but hesitant to open his eyes. He expected once the trial was over that Senshu and the others would want to have some time with him, but he wished they had at least waited until he woke up. Admittedly, there were worse ways to wake up than with his prick in a woman's mouth. He started opening his eyes expecting to see Sera since this was her favorite way of waking him and also because she was just holding him in her mouth and not sucking.\n\nAs his eyes adjusted to the room's light, he thought momentarily that he was correct but quickly realized the woman in the room with him was most definitely not the gorgon despite their hair looking vaguely similar. Her skin was tinted green and the hair coming from the top of her head was made of finger- to wrist-thick vines. One of which disappeared under the bedcovers. Completely nude, she sat in a chair at the foot of the bed with her legs crossed, casually reading a book.\n\n\"Um... hello?\"\n\nThe woman looked up then flipped a ribbon attached to the book's spine over to mark her place. \"Kal, correct? It's a pleasure to meet you. My name is Oona.\"\n\n\"Where are Sera and the others?\"\n\n\"Downstairs somewhere, I'll call them in a moment. How are you feeling?\" she asked, moving the chair closer and picking up a small journal on the nightstand near his bed.\n\n\"Surprisingly good, I expected more of a backlash from Kithana's test. Umm... is that you?\" he said pointing toward his groin.\n\nOona smiled, \"Yes, I'm the reason you didn't wake up in a puddle. You've been asleep for five days\"\n\nHis eyes widened, \"I'm so sorry! Wait, five days?!\"\n\n\"Yes, Kithana and I believe that channeling that much magic damaged your body in a way that healing spells couldn't fix. She was confident you just needed time to recover. I believe your bag of holding said you had an alarune as a lover?\"\n\n\"Maybe I need to talk with her again about how much she tells people,\" he grumbled. Shaking his head in bewilderment he whispered, \"Five days... it only feels like a few hours at most.\"\n\n\"Don't be too hard on her, the tales of her time with you have been quite stimulating for the mood around here and done a lot to soothe some of those upset about your victory. Regardless, I was wondering about your lover because we plant-types see that,\" she nodded toward his crotch, \"as just another source of water. I know from speaking with some of our daughters that they often offer something similar to their lovers if they are feeling particularly amorous and don't want to let him go.\"",
        "\"Actually, yes. Aradelle did do something like that the nights I stayed with her in her bulb. You're sure it's okay?\"\n\n\"I'm positive. Now, before I get the others I want to ask you some questions about your experience outside,\" she said, opening the journal and grabbing a bottle of ink and quill from a lower shelf. \"You are only the second human to survive Kithana's trial, though Father's was an accident, not a trial. Any information you can give me about what you saw, heard, felt, or thought will be extremely useful.\"\n\nKal shook his head, \"Girls first. After five days Sera will never forgive me if I sit up here and answer questions before seeing her, then I'll give you answers.\"\n\n\"I'll need to remember we are dealing with mortal timescales again. As you wish,\" said Oona before standing and going over to the door.\n\n\"Do you all talk like that?\"\n\n\"Like what?\"\n\n\"So prim and proper. You sound more like a scholar than what people would expect from a monster girl.\"\n\n\"Father prized intelligence. The first of us were so bent on sex they could barely talk, much less read. After that generation, we each needed to pick something to study when we weren't taking a turn in the forest. A millennia later, it's fair to say that we are all extremely well-read.\" The vine sheathing his prick gave him a small squeeze before releasing him and shrinking to the size of the other strands on her head. \"I'll go get your companions.\"\n\n---\n\nWhen they arrived, Sera and Graff curled up with him in bed as he answered Oona's questions. Since both of his sides were occupied, Velt settled for a quick kiss and promise for some intimate time later before heading back out into the tower. Once she was done grilling the mage, Oona left them alone so he could get dressed for the big official announcement downstairs. After five days asleep he was only slightly weaker than usual but the faint glow from his strength rune had him back to moving normally.\n\nSera solemnly handed him Ria's bag, \"She lasted two and a half days before she had to go back. She wanted to be there when you woke up. We can get things out of her but found out you are the only one who can summon her.\"\n\nKal took the bag and tied it onto his belt. He was pretty sure Ikuno could call the sprite but the scope of the oni's ability to use Ria was much broader than Sera's.\n\nRia immediately grew to her human size and threw her arms around Kal after he called her. Once she had settled down they made their way out to the tower's long spiral staircase.\n\n\"It's surprising how much the layout matches Kelthor's tower but I suppose there are only a few ways to set up a circular structure like this,\" mused Kal as he followed Sera and Graff down the steps.\n\nThe large bottom floor was set up as a receiving area for guests with lavish decorations, comfortable furniture, and a couple of bookshelves. Besides Velt, Senshu, Molo, Oona, and Kithana, nine other monster girls were situated in an arc with Kithana in the middle. As they reached the bottom stair, Graff went to stand next to the vixen while Sera took up a spot left for her next to Senshu.\n\n\"This looks a lot more official than I was expecting,\" said Kal.\n\n\"I can't do this,\" snapped a harpy with jet black feathers before storming out of the room.\n\n\"Veir, come back!\" Molo yelled after the woman.\n\n\"Let her be,\" said Senshu, \"we knew this would be harder on some of us than others.\"\n\nThe mage was starting to get nervous, \"What would be harder? What's going on?\"\n\nKithana held up a hand for silence before speaking.\n\n\"After Prentas cast the spell that created your companion's ancestors, we came up with the three challenges to make sure that whoever entered the tower was worthy of the honor. Of those who made it past Senshu and Molo, none managed to live through my test. Which was exactly how I wanted it.\n\n\"You passed a test that would have killed Prentas.\" There were gasps and looks of incredulity from some of the newer women around the room. \"Do not think that makes you better than him!\" the sprite snapped while glaring at Kal. \"Prentas was a genius, while you, most definitely, are not.\" Kithana sighed, \"But you survived all three trials,\" she flew down and picked up a ring off one of the nearby tables before holding it out to him. \"Which means you are now the master of the tower.\"\n\nA shorter woman with gray fur covering her body, mouse-like large rounded ears, and naked tail sobbed and turned around, unable to watch. Oona stepped over to console her.\n\n\"But... I didn't come here to take over the tower,\" Kal stammered, taking a step back. \"I just wanted to finish my flight rune. I have a farm, and a family, and plans... and I have to meet Ikuno. I can't stay here to look after this place.\"\n\nMolo looked up at Senshu. \"Did he just turn down Father's tower for a farm?\"\n\n\"From Ria's stories, there's more to it than that. But yes, I think he did,\" the lamia answered.\n\n\"No! Wait! I'm not turning it down,\" he said hurriedly. \"You may be giving it to me, but I won't be able to be here to keep an eye on it. You may not see me for years at a time.\"\n\n\"How is that any different from what you told Perra and Kuto and all your other monster girl lovers?\" Ria chimed in.\n\nKal was at a loss for words, \"Not much I suppose.\" He got the impression the avatar chose her words carefully from the way some of the women were looking among each other in surprise. One of those was the mouse who had turned around and was looking to the three mortal women for verification.\n\nKal stepped up to Kithana. \"Just so everyone understands that not much is going to change around here.\" He picked up the ring and gave all the original monster girls a stern look, saying, \"I may be master of the tower, but that doesn't mean that I'm the master of you.\"\n\nThe women stared at him for a moment before Senshu threw her head back and guffawed. Many of the others tried to stifle their titters and giggles.\n\n\"I appreciate what you are trying to do, as do the others,\" said the sword maiden while glancing at those around her. \"But if a king conquers a new castle then he gets the wall around it and whatever catapults or ballistae were left behind. We were made to be the defenders of Father's property, owning it includes owning us.\"\n\n\"I don't like this... I had to take control of some dog girls for a rescue and I hated being their master, even though it was only for a few hours.\"\n\n\"I've heard enough,\" came a voice from the door.\n\n\"Veir? I thought you left,\" said Oona.\n\n\"I did, but I knew this was happening with or without me,\" snapped the harpy, striding over to Kal. Using the three fingers situated at the joints of her wing, she snatched the ring out of his hand with one and grabbed his wrist with the other. Without any fanfare, she jammed the ring onto one of his fingers. By the feel of it, the ring nearly took the top layer of skin along with.\n\nSpinning around. she made her way to the door followed by the stunned gaze of everyone in the room. Lifting a wing she said, \"Be sure to come back once a year at least so we don't have to wait for ages between getting some dick.\" Stepping outside, she slammed the door behind her.\n\nA moment later the crystals embedded in the ceiling came to life, brightening the room as the lock on the door clicked.\n\n\"Well!\" said Ria, loud enough to make a few of them jump. \"Now that that is all taken care of, which of you ladies is going to be the first to bounce on Kal's dick?\"\n\nThe mage covered his face and groaned.\n\n---\n\n\"No, Kal, you have to walk before you can run. You aren't Prentas,\" snapped Kithana. The beginnings of the mage's flight rune were laid out on the library's large central table and surrounded by open tomes and grimoires.\n\nPrentas's library looked much like Kelthor's except for being bigger and not having the handy search globe in the middle. Were it not for the fact that Kelthor commissioned his tower himself and Prentas's was built over a thousand years ago Kal would have sworn the same people designed it.\n\n\"I know damn well I'm not Prentas. You remind me of that fact at least three times a day,\" replied the mage through gritted teeth.\n\n\"If you do not learn these spells, runes, and glyphs then you will be flitting over some mountaintop when your magic runs out and all your work will be for nothing when you end up a smear on the ground. Now quit arguing with me and study the damn spells!\" said the sprite, pointing at the book in front of him.\n\n\"How do you know so much about this rune anyway? You can already fly, what reason would you have to even look at something like this?\n\n\"Because I gave it to you, you ignorant twit! Specifically, I gave it to Ikuno. It was embedded into the compatibility enchantment she put on your cock. She must have seen quite some potential in you to cast that spell.\"\n\n\"Actually, no,\" he mumbled.\n\n\"What was that?\"\n\n\"It was only the second time I went to see her and offered my services as her 'servant.' At the time, I think she just wanted a man more suited to her size. I understand she had been making do with the occasional bandit and I can't see her wasting the spell in a man condemned to die.\"\n\n\"So... you didn't even know magic yet?\"\n\n\"It was the day I asked her to teach me. It wasn't until a while later that I had the vision of the flight rune.\" The mage scowled at the parchment laid out in front of him, \"I knew it wasn't mine... dammit.\"\n\n\"How did you know?\" asked Kithana.\n\nKal tapped a spot in the rune, \"I've never seen these glyphs before.\"\n\nThe sprite hovered over the parchment, looking down where he was pointing. \"Ah, those are important, they will let you fly during winter and fly higher. The higher you go the colder it gets, and those runes keep you from freezing.\"\n\n\"'There is no cold, only an absence of heat,'\" quoted Kal.\n\n\"That didn't sound like you.\"\n\n\"It wasn't, it was from a cryomancer. She and I did some work for the same man but at separate times. She told it to him, and he told it to me.\" Kal looked away for a moment, \"At least I think it was a 'she.' Now I can't remember if he called them a man or woman. Anyway, it felt like there was something important in what they said but I've been having a hell of a time figuring it out.\"\n\nKithana grabbed a small piece of parchment and began scrawling a rune onto it which was quite comical the first time Kal saw it since the quill was nearly as tall as she was. \"Summon a flame in one hand,\" she said as she put the final touches on the spell. As Kal held a small ball of fire she put the parchment in his other hand. \"That's just regular ink so try not to pop it. Use those eyes of yours and see if you can figure out what is going on.\"\n\nKal carefully charged and activated the rune but the paper around the low-quality ink began turning brown immediately. Kal continued staring at the spot above the paper long after the rune crumbled to ash and the bright blue glow of the spell vanished.\n\n\"How...?\" he asked Kithana, glancing between his hand holding the flame and where the sprite's spell had taken effect. For the flame, air was constantly drawn into the place where the ball of fire formed before becoming excited enough to create the flame. Above the sprite's spell, the magic flowed in and just... stopped, there was no movement at all that he could see. A small ring formed around the area that appeared to maintain the shape but magic always did something when he used it, whether creating a shield of healing a wound, he had never seen magic do nothing before.\n\nKithana pointed down at the book in front of him, \"Walk first.\"\n\n---\n\nKal met Velt by the door to the guest quarters, she was looking a bit haggard with small sticks and bits of leaves stuck in her coat. She must have just come in because she normally didn't keep her fur while inside.\n\n\"Hi there, stranger,\" said the vixen.\n\n\"Hi yourself,\" he said holding the door for her. \"I apologize that I haven't seen much of you since we got here. How are you Graff doing?\"\n\n\"After a week, the wonder of all this is starting to wear off. We are planning on going back and opening up our new home in the next few days. There will still be some cleaning that needs to be done before you and Ria can unload all our stuff. Also, one of the girls has offered to help reinforce the shell we made and make it waterproof,\" she explained as they entered the guest rooms' large communal bathroom at the end of the hall. \"Isn't that right Cyrene?\"\n\nA female head that looked like it was made of light-blue tinted water popped up out of the large, polished granite bath taking up the back wall. \"What was that?\" asked the slime.\n\n\"That you offered to help make our home waterproof.\"\n\n\"Yes,\" she said cheerfully. The water level inside the bath sank as she rose to her full height, forming into a voluptuous naked woman with eyes, nipples, and sex slightly darker than the rest of her body. \"I can take all of the stuff for her cement below ground and add a thin layer over what you made,\" she explained to Kal, \"Did you two want to take turns or go together?\"\n\nVelt cast a sidelong glance at Kal, \"Together?\"\n\n\"Sounds good to me,\" said the mage before starting to strip. While waiting, Velt brushed a few of the larger twigs and leaves out of her coat.\n\n\"You can leave those, I don't mind,\" said the slime.\n\nThe vixen stepped over the lip of the bath, her feet sinking into the portion of the slime's body she wasn't using to make her human shape. \"But I do, there is something I want to try.\"\n\nKal joined her a minute later, the vixen reaching out and beginning to stroke him to full hardness as soon as he entered the tub. \"Pick me up,\" she asked. As soon as her feet left the ground the slime's body deformed and flowed behind her back to offer support. Velt closed her eyes in concentration as she reached down and guided Kal to her entrance. \"Down,\" she whispered.\n\nKal did as asked, slowly lowering the fox-girl onto his cock until he was fully sheathed inside her. He looked down at the vixen, \"This is certainly different,\" he said. She still had all her fur.\n\n\"After we killed the boar, I think I would have frozen to death before we finished if you hadn't cast that spell you always use on Sera. I wanted to see if it was even possible to keep my fur.\" Opening her eyes she smirked at him, \"Just in case it happens again.\"\n\n\"So, this is a success?\"\n\n\"Sort of.\" Putting her arms around his neck, she started moving up and down. After only a few strokes, Kal felt the vixen's hair vanish, leaving only her ears, tail, and the hair on her head. Sighing, she relaxed against him. \"It takes a lot of concentration,\" she said pulling back. The fox glanced down, frowning. \"That's why I was coming here,\" she said, seeing the dirt and dust on her skin left behind by her fur.\n\n\"Let me take care of that,\" said Cyrene. The slime's body flowed up and around both of them leaving only their heads uncovered.\n\nKal had a bath and shower in the master's chambers but he hadn't used it since the slime's arrival a few days ago. Cyrene was the original monster girls' preferred method of bathing and they were all extremely excited when she showed up after getting the news about Kal.\n\nOnce he had seen some of the others go through her 'cleaning' process, he decided to take the plunge. The slime quickly proved it was as pleasurable as it had looked with the women.\n\n\"Hold your breath,\" said Cyrene. Kal and Velt both did as asked and the woman's fluid body quickly covered their heads. It then gradually peeled back starting at their mouth, taking any dirt or grime with it until their heads were free again. The sticks and leaves pulled away from Velt's body quickly dissolved while the sand, dirt, and dust moved through the slime's body toward the drain.\n\nWhen they were done with the cleaning process Velt started moving her hips while Kal tried to help but there wasn't much leverage within Cyrene's body for thrusting.\n\n\"You two relax and let me do the work. Velt? In the back?\"\n\nThe vixen though for a moment before nodding.\n\n\"Kal?\"\n\n\"Thanks, but I'll pass.\"\n\n\"You really need to try it one of these days. Other men have said it feels amazing, especially with how slippery I can be.\"\n\nKal smiled, \"Maybe I will someday, but not now.\"\n\n\"As you wish, now just close your eyes and let your bodies go limp,\" she requested, tilting Kal back a little then coaxing Velt to lean back as well. The vixen gasped as Kal felt something slip into Velt's rear and expand slightly. A moment later he was enjoying the wonderful tightness of the fox-girl's sex as the slime started moving them back and forth.\n\n\"This is certainly different,\" said Kal. Plenty of times he had just laid in bed and relaxed as one of the women did all the work, but the lack of straining muscles on Velt's part seemed strange to him.\n\n\"Uh-huh,\" agreed the vixen, already starting to breathe heavily. \"I wouldn't mind doing this for the next hour or so, but you are rubbing a good spot with her in the back too.\"\n\n\"Do I need to take it out?\" Cyrene asked\n\n\"Don't you dare,\" she said with a smile. \"I'll let you know if I can't take anymore.\"\n\nThey continued like that until Velt shuddered through her third orgasm. Even with as tight as the fox-girl was, Cyrene's pace was just a little too slow for Kal's liking. Once the vixen stopped shaking, he asked the slime to put them down outside the bath.\n\nVelt leaned over in front of him, placing her hands on the edge of the tub and widening her stance a little. Looking over her shoulder with a flirty smile, she flicked her tail in his face, \"I think she stretched me out enough, it's your choice which one you want.\"\n\nHe was tempted at the offer of her ass but stepped up and slid back into her sex, \"I'm good here.\" Before he started moving, Cyrene leaned out over the vixen's back and reached out, her hand losing its definition and taking on a more phallic shape as it snaked towards Velt's bottom.\n\nThe vixen moaned loudly as her backside was filled again before saying, \"I may learn to enjoy this as much as Graff if you keep that up.\"\n\nKal chuckled as he grabbed ahold of her hips and began thrusting hard and fast. The fox-girl's cries of pleasure bounced around the room as he quickly built up to his own release. Slamming into Velt's pussy, he felt a watery hand caress his balls while he proceeded to empty their contents into the panting vixen.\n\nPulling out, there was a sound of rushing water as the slime's color darkened to a deep blue and her surface became more skin-like. Snaking beneath the recovering fox, Cyrene positioned herself so her head was right beneath Velt's sex.\n\n\"Can I have some too, Velt?\" asked the slime-girl, though she was looking up at Kal with a mischievious smile.\n\nKal watched as the vixen strained slightly, pushing out some of his seed. It slid down to hang briefly on the fox-girl's clit before dripping into Cyrene's open and waiting mouth.\n\n\"I think he liked that, Velt,\" said the slime while staring at Kal's cock. It was valiantly trying to come back to life after the women's little display.\n\n\"I most definitely did, and I would love to act on it, but I've already spent a lot more time here than expected. I need to get back to the library,\" he explained with disappointment.\n\n\"Aww...\" her body flowing out from beneath the vixen, she returned to the bath. \"Velt?\"\n\nThe fox had sunk to her knees, resting her arms on the side of the tub before laying her head on them. \"Four is enough for me, I think I'm going to go back to my room and take a nap.\"\n\nKal stepped over and kissed the slime girl on the cheek, \"you seem to have been forgotten in all the fun. I'll be back later to take care of you,\" he said before stepping away from the bath and starting to dress.\n\nAs he left the slime-girl sighed, \"I could get to like him.\" Her only answer was soft snoring coming from the vixen. Shaking her head, the slime flowed out of the tub, taking on her darker and more solid form, people didn't like it when you left wet spots with every step. Shaping her arms carefully around the sleeping fox-girl to not disturb her, the slime-girl picked her up and followed Kal out the door.",
        "---\n\nKal quickly discovered the benefits of a nice hot soak in the large master bath after a frustrating day of research and study. This was made more enjoyable by the slime-girl often joining him as she could move through the tower's plumbing and was able to tell when he was drawing a bath. Though she could move around the tower freely, Cyrene frequently stayed in the tubs since they could be magically warmed.\n\nHe was enjoying a soak and thinking about his flight rune when he reached out with the telekinesis cantrip and summoned a square of leather sitting with his clothes. It held the spell Kithana showed him yesterday, and while not a perfect copy it was close enough for the spell to work.\n\nSetting it on the edge of the tub, he placed a finger on it and powered the rune. The sphere formed and hovered above the leather. Well... it was mostly spherical, more egg-shaped from where he didn't copy it perfectly.\n\n\"What is it you are supposed to do?\" he asked the spell. It wouldn't be so frustrating if he didn't feel like the answer was on the tip of his tongue.\n\nSighing heavily, he was about to cut power to the rune when he noticed something odd. Water had collected on the piece of leather. Even as he watched, two droplets joined to form one larger one. While it was quite warm in the room the leather shouldn't have been cold enough to form condensation on it. Confused, he dipped his head down and saw the air shimmered slightly between the rune and the active spell, but that was normal. What wasn't normal were the tiny flecks of light he saw every so often. Whatever made the flashes and was extremely tiny, probably smaller than a speck of dust, and happened in rhythmic bursts, moving downward as they flickered.\n\nKal yawned, the long day was catching up with him. As he opened his eyes he saw a flurry of the little flashes.\n\n\"Wait...\" he said aloud. A second later, another brief, shimmering rain fell from the 'sphere'.\n\nLeaning forward, he gently blew on the spell and a shower of noticeably bigger sparkles followed. Meanwhile, the droplets on the leather continued to get bigger.\n\n\"It's my breath?\" With his other hand he dipped a finger in the water that had collected. It was cold. It was very, very cold.\n\n\"Cyrena!\" he called out, looking at the bathwater.\n\nA watery head popped up on the other side of the large tub. \"Yes, Kal?\"\n\n\"I need to do an experiment and I need some pure water. I don't want to hurt you.\"\n\nHe thought she gave him a confused look, but it was hard to tell when her face was mostly transparent. A second later the water level in the tub dropped as her body became darker and denser. By the time she was done he was shocked at how much of his bath was actually her.\n\nTaking the leather strip from the side of the bath, he flipped it over and held it face down above the water before activating it. A slight crackling noise came from below the rune and Kal quickly pulled it away. An egg-shaped piece of ice gently bobbed where the spell had taken effect.\n\n\"I'm guessing from the look on your face that bath time is over?\" asked Cyrene.\n\nKal nodded and stood up. As he went to step out the slime said, \"Wait a moment,\" before her body flowed forward, crashing into him like a wave and enveloping him. When Cyrene's body receded he was standing outside the tub, his body completely dry.\n\nTaking a moment to get his bearings, he yelled, \"Thanks!\" before throwing a robe on for his quick run down to the library. Bursting through the door to the bedroom, he skidded to a halt at the surprised looks of Sera and Senshu, both of whom were naked and lying on the master bedroom's extremely large bed.\n\n\"Both of you tonight?\" he asked, momentarily distracted. Before they could answer, he held up his hands and started carefully circling the room while facing the women as though they were vicious predators. \"Hold that thought, there's something I need to go check. I'll be right back,\" he said as he made his way around to the door then dashed out without waiting for a response.\n\nThe serpents on Sera's head hissed quietly in annoyance as the mage disappeared out the door. \"Two women naked and waiting for him and he has something else that's more important,\" she growled.\n\nSenshu gently pushed the gorgon onto her back, \"This just gives us more time to get ready for him,\" said the six-armed lamia laying down next to her. One hand lightly brushed its fingers along Sera's inner thigh as another traced rings around a breast, spiraling up toward the gorgon's nipple. The top arm on that side reached out and turned the Sera's face toward her before leaning down and kissing her lightly on the lips. \"I'll make sure you don't get bored.\"\n\n---\n\nKithana was waiting for him at the door to the library. \"Cyrene told me you discovered something important,\" she said, moving off to the side to give him access.\n\n\"It's not anything you don't already know, why are you here?\"\n\n\"To make sure you are on the right path. If you aren't, then I'm here to nudge you in the right direction.\"\n\n\"That's hardly what it's felt like.\" He said tossing the leather on the table and getting another similar sized piece off a stack by the magical ink.\n\n\"I'm being a teacher, I can be a friend once you've learned this spell,\" she said with a wave toward the flight rune laid out in the middle of the table.\n\nKal chuckled as he sat down, \"Friend? From Ikuno and Ria's description, I'm surprised you haven't demanded a turn in bed with me.\" A drop of ink floated from the well and he began forming it into the rune before setting it into the leather.\n\n\"Not for lack of wanting, the taste of human cum is exquisite.\" Kal looked up and stared at the bluntness of her statement. \"Where do you think Sera and the rest get it from. Their lust and love of human seed were patterned after me,\" she said holding her arms out.\n\n\"But... how?\"\n\n\"I may show you later, but I want to wait and see if Sapphire comes back to the tower to meet you. Having her here will make explaining much easier.\"\n\n\"Why is this 'Sapphire' so important?\"\n\n\"She's the first of the earth golems.\"\n\nHe was about to power both the runes when Kithana stopped him and quickly fixed the one he was messing around with in the bath.\n\n\"They are the same spell,\" he quietly mused, looking at the flows of magic. \"But this one is adding heat into the ball while this one makes it cold. But it doesn't make it cold as much as stops everything inside.\"\n\nKithana watched quietly as Kal talked through his thoughts. The human was catching on quickly, but he certainly wasn't Prentas. The sprite frowned for a moment. Maybe she wasn't being fair. Prentas had over a decade of experience with magic before they met at the tower while the man in front of her had been tilling fields up until a few years ago. He wasn't nearly as sharp as the tower's former owner and she doubted that he would ever master the magic of magnetism. But now that he knew what the spell was for, Kal was finding a path to the solution faster than she expected.\n\nKal's eyes flicked between the two spells. \"'There is no cold, only the absence of heat.'\" He sat there for a few long minutes contemplating the phrase. \"This one doesn't make it cold, it just takes away the heat.\" Looking down at the two runes, the mage frowned, \"Then why is this one so much more complicated if they are just doing opposite things? This one, I add magic and it gets bigger and hotter. But this one, I add magic and it does... more nothing? It would make more sense if it stripped the heat away; instead, it just stops everything.\" He stared closely at the ring around the sphere where the spell took effect, \"What am I missing?\"\n\n\"Magic, by its very nature, does something,\" said the sprite. \"You take the energy from the world around you and make it do something based upon the spell you choose.\"\n\n\"But to freeze something I need the magic to do nothing? No, that doesn't make sense.\" He thought for a moment, \"When I excite water it turns to steam, when I slow it down it turns to ice, so I need the magic to slow the water to a stop.\"\n\n\"Which is much more complicated than it sounds,\" said Kithana.\n\nKal looked at the two runes. \"I can see it now. The glyphs in the flame rune are in this one too but it's hard to tell what is going on. Wait... there are two glyphs here. That's even more confusing.\"\n\n\"There is a rock in your hand. Another one is flying toward your head and will kill you if it hits. What do you do?\"\n\n\"Throw the rock in my hand at the one coming towards me.\"\n\n\"Your aim is true. What happens?\"\n\n\"They hit then both of them stop and fall to the ground.\"\n\n\"Falling to the ground is irrelevant.\"\n\n\"The magic acts to stop the air by pushing against whatever air is in the opposite direction while on the flame side it pushed with the direction.\"\n\nKithana nodded, \"Prentas called it constructive and destructive interactions.\"\n\n\"But why all the complexity? If I'm reading this right it warms everything to a specific point then uses a second spell to counteract the first. No... this can't be right. There must be a simpler way to do this.\"\n\n\"There is, but we can talk about that tomorrow, you have two women waiting for you in bed. They've gotten close with all the time you've spent up here since you arrived, and I know tonight is important to them.\n\nKal took his fingers off the pieces of leather and both spells vanished. \"That's just mean,\" he said, glaring at the sprite.\n\n\"Priorities. Now get going, we have a lot more to discuss than I expected tomorrow. Also, what I said earlier got me all worked up so if you don't get going Senshu and Sera will be out of luck because I'm going to fuck you instead.\"\n\n\"Fair enough,\" he said rising from his seat. \"I'll see you tomorrow.\"\n\nAs the door closed behind him and left Kithana by herself, the sprite growled, \"You could have at least acted like you wanted to stay for a second.\""
    ],
    "authorname": "BluDraygn",
    "tags": [
        "action",
        "fantasy",
        "magic",
        "monstergirl",
        "trc",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/trc-searching-for-the-sky-ch-29"
}