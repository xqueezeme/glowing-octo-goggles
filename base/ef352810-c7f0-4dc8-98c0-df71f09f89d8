{
    "title": "14 Months 05: New Year",
    "pages": [
        "For the men of the Alliance brotherhoods, New Year's Eve was a time of reflection. While most of the western world celebrated, the brothers took time to remember mistakes made and vow never to make them again.\n\n\"It's time,\" Zander lifted his head, indicating the large clock above the mantle which showed one o'clock. \"I've given it some thought this week and...\" Zander said once he and his brothers were finally alone in the unoccupied seventh house in their gated community that they used as neutral ground for meeting guests and each other in a group like this.\n\n\"I don't think I have heard him utter as many words in the last year as he has this week,\" Connor said interrupting the usually silent and brooding Zander.\n\n\"Then let him speak,\" Jayce retorted and leaned back in his chair swirling an ice cube around in the amber liquid of the one-hundred-year-old scotch they had opened for their group reflection.\n\n\"Yeah well, better listen up because I've got more to say, and it's important,\" Zander looked at them all in turn and finally let his eyes come to rest on Darius. \"We may not be the oldest and wisest of the brotherhoods, but we are neither the youngest and dumbest. We are, however, the strongest of them all. We earned that right because no matter how much we may hate one another at any given time when the shit hits the fan, we all stand together. No one brother would take the fall alone even if it were his fuck up. Agreed?\"\n\n\"Agreed,\" the five other men toasted his words.\n\n\"Then, it's time to talk about the biggest fuck up of the year and how we are going to manage it, don't you think?\" Zander transferred his gaze back to Darius. \"First, though, I'll confess my big fuck up, and you can all add your own to the heap so you can see the monumental fuck up that happened when we weren't watching and questioning carefully enough?\"\n\n\"What are you talking about?\" Darius leant forward in his chair wondering if Zander had betrayed his confidence about Sophie and feeling his temper rise.\n\n\"Sometimes, coincidences are more than mere happenstance. Sometimes, coincidences are caused by outside factors that we don't see influencing us. I have a feeling we've all been manipulated, so let's compare some basic details to start with, and everything will become clear. I got the lead on Mimi's whereabouts and background from Henry, Darius?\"\n\n\"I intercepted a call meant for Byron, and he encouraged me to look into it,\" Darius admitted.\n\n\"Michael introduced me to a man who used Stella's services occasionally,\" David offered.\n\n\"Daniel,\" Connor acknowledged that he too had found his girl through one of their mentors.\n\n\"Coincidence or manipulation? If Manipulation, for what reason? Why these girls?\" Zander asked needing to drop the big bomb he had discovered on his brothers. \"Moreover, why didn't one of us think that the girl's links, no matter how tenuous, to the criminal underbelly and one family in particular, important enough to discuss with each other. Could it be that we were cautioned somewhere along the line to hide this fact?\" He let the questions hang in the air for each of his brothers to consider. He knew Henry had guided him pretty hard in his pursuit of Mimi.\n\n\"Alright, I'll take the bait and admit something smells fishy about this. So I'll talk,\" Connor said and took a sip of his drink. \"I took Layla from a family-owned club. She was used as currency to appease her father's debt when he died. The father had many addictions, the debt was insurmountable for anyone, drugs, gambling,\" he spread his arms. \"The family used him as a runner until a deal went bad and when Layla went to the police about his disappearance, she was taken by the family and told her father made her collateral for his debt, and she had to work for them until she repaid that debt. I believe she fought what was happening to her, and they broke her spirit along with her body in the club where I found her.\"\n\n\"Similar story to Stella's,\" David agreed. \"Except that Stella accepted her fate rather than have them break her the way they probably did Layla. Stella is a survivor, and she works with what she has to make her place in the world one she can live in as comfortably as possible. She's adaptable and seems to be enjoying the game so far. She signed the contract without hesitation once she knew she would be safe with us. She's taken a real liking to Sophie, and they jog together in the mornings,\" David said as if he had no concerns about Stella or her spurious links to the underworld family.\n\n\"Mimi is a family princess. Her branch of the family tree, which was tenuous at best was annexed after a leadership coup about five years ago. You all remember when that went down. It was a busy time for the Alliance when we scrambled to make sense of who was left standing. She was the proverbial bird in a gilded cage, placed in a private club used by high ranking members and immediate family only. She also used her looks and sex appeal to get what she wanted from her favoured clientele.\" Zander explained. \"She is used to being spoilt and getting her own way even when in captivity.\"\n\n\"Same for the little witch?\" David asked Darius, who shook his head slowly.\n\n\"No. The links to the family are there, but they are so obscured and buried so deeply that you would only find them if you were digging further than deep into her past,\" Darius admitted. \"On the surface, it looks like she had a normal childhood, the oldest of three daughters to two loving parents in a small country town. When she was twelve, she went to the coast with family friends and their children, but when she returned, her family was dead, a house fire that no one escaped. It was deemed suspicious and remained an unsolved case. There was some confusion at the time because all three girls were assumed to have died, and it appears the official documentation around her death wasn't changed when she appeared after her holiday. She was put into the foster care system and forgotten. That was a fairly horrific five years for her, and while she mightn't be broken as such, she has triggers, and panic attacks when restrained or caged in any way. She lived on the streets after her foster father raped and beat her so badly that she was hospitalised and ran away. I believe it had been going on for some time before she left. Michelle Lowry found her in a homeless refuge and recruited her to her strip club then she called Byron hoping to sell the little orphan to us for the game.\"\n\n\"And the link?\" Asher asked surprising everyone by how seriously he was taking this information.\n\n\"Her birth certificate had no father named, so I delved into the history of her mother, Isabell White,\" Darius explained. \"The problem is my digging sent up several red flags to the family when I looked into some declassified files that the name came up in, witness protection files.\" Darius let the words hang in the air.\n\n\"Wait, how old is she?\" Asher asked.\n\n\"Twenty,\" Darius said, knowing what they were all thinking. \"Isabella White was Frankie Calabrese which given the timing of events and the lack of her father's name on her birth certificate means that Sophie is...\" he left it hanging for them to fill in the gaps.\n\n\"Fucking royalty in the underworld. That's what she is,\" Asher swore. \"Okay, the red flags, what does that mean exactly?\"\n\n\"It means alarms went off to anyone watching those files when they were declassified after Frankie's death,\" Darius said. \"The night I took her, someone had already been there and tried to take her but didn't get past the club security. I don't think it was planned, but more of a fishing trip that surprised the fisherman and he panicked and tried to grab her on the spot. We erased her presence from the club and covered our tracks. Even if someone else had managed to find her, they have lost her again.\"\n\n\"What the real issue is,\" Asher leaned forward to pour himself another drink, \"Is that no one knew Angelo Calabrese had a possible legitimate heir until now.\"\n\n\"That's not the real issue,\" Zander corrected him. \"The real issue is why each of us was directed to a girl who has suffered under the new family regime and has blood ties to the original families. Is the Alliance trying to direct a new coup from the originals?\"\n\n\"Either way, I think we all need to look at our girl's family trees a little deeper,\" Connor spoke for the first time since telling his story. He'd only done the research necessary to make Layla eligible. He hadn't dug anywhere near the depth of his brothers, though.\n\n\"You still have Mimi?\" Asher asked. Zander hadn't mentioned the girl since she was taken into rehabilitation by the council.\n\n\"She was going to be given a second chance as some of you know. However, her rehabilitation did not go well, and she is now in the care of Aaron Parker in his facility, I believe the diagnosis will be schizophrenia or bipolar at the very least,\" Zander explained. \"That's not to say she is out exactly; the council are still deliberating and waiting for Aaron's diagnosis and treatment plan. Either way, she will remain within the alliance as I imagine all the girls will now no matter what we set up for them at the end of the year.\"\n\n\"Do you think Rob is being played, too?\" David asked. He was placed with us at the Jazz club and had no brothers in the game this year.\"\n\n\"I guess we'll find out,\" Zander said. \"The point is Sophie could be being targeted by the new family. Regime. The other girls were just being held as collateral, or they would have married them off to a lesser member in the family to keep the bloodlines for themselves. Or maybe they didn't know about the bloodlines; we can't be sure. Still, it's Sophie we need to protect, from within and without. She's the one no one knew existed until Darius unearthed her secrets. Unless,\" He looked at his brothers, \"We are all being manipulated by people who know exactly who she and the other girls are. We know our mentors well enough not to put it past them to be playing a dangerous game of their own.\"\n\n\"Well, shit!\" Asher laughed. \"Who knew Zander was genius at intrigue and secrets. Happy fucking New Year! This year is going to be a shit show with us as the stars!\"\n\n\"Not necessarily,\" Jayce spoke for the first time, not being in the game himself, he had held back listening, and when he finally spoke, his voice was quiet and thoughtful. \"Angelo started the last family war that changed the playing field dramatically and dragged on with skirmishes and battles over the last twenty years. Frankie disappeared in the middle of all the mayhem of that first year of the war but never showed again, just disappeared into the ether so to speak,\" he was stating facts as if trying to tease out something they were all missing. \"If it was witness protection who did she testify against and why wasn't there some sort of accident or murder that would explain her disappearance like everyone else who takes on a new life in the program. It doesn't make sense. Just disappearing like that meant that the whole freaking country was looking for her.\"\n\n\"You think the file is bogus?\" Darius asked.\n\n\"At this point, I don't know what to think, but I do know that something is off about this whole thing. The girl's, the way you were directed to them, Connors late inclusion even though he didn't make the first thirteen and Mimi being kept within the Alliance rather than being kicked out for an assault on another contestant. Girls have been kicked to the curb for less in previous years,\" Jayce pointed out. \"I think we need to be very careful about what we do from this point on. It would be an easy bet to make that each of you with a girl is being monitored pretty closely.\"\n\n\"Probably worth looking into who I replaced and why,\" Connor frowned. \"If I weren't in the game, they wouldn't be able to monitor Layla so easily.\"\n\n\"Also a good idea to have a look at why Rob was put at our table rather than Connor and Layla at the Jazz Club. His girl may have links too, and they are trying to force us together,\" Jayce said still appearing to think through all the angles. \"With Asher and me being out of the game this year, if there were more girls with family links being collected it would stand to reason that Rob's brotherhood would pick up the slack, they are closer to our brotherhood than most.\"\n\n\"He's the only one of his brothers to be in the game this year, and it's better to have at least one ally. The game is hard going in alone because of the group challenges. That in itself is unusual, especially when we have all four of us in,\" David said. \"I'll reach out to Rob. We have a decent friendship and level of trust happening.\"\n\n\"I'd rather we kept this information between our brotherhood for now. You could maybe feel out how Rob found his girl or if she had links to the family, but don't give away any of our suspicions,\" Jayce said taking the lead as he always had since they were boys. He had been singled out that first day at the Academy as being the oldest by their mentors, and he had taken on the leadership role from that point on. Not that it was ever discussed or agreed upon, nor had he ever demanded the role of leader, it had happened organically, as if it was meant to be. Strong, dependable and willing to back any of them up even if he knew they were wrong, he led by example, and they all respected his decisions not that he forced his will on them very often.\n\n\"Thanks, Zan,\" Darius kicked out, nudging his brother's foot as he relaxed back into the chair. He knew he didn't have to say why but the fact that Zander had taken the heat off him by pointing out that they had all withheld the information that their girls had ties to the family made him feel grateful. It was a small thing that could have been overlooked if not for the fact that he knew someone else had tried to take Sophie once he had accessed her mother's police files.\n\n\"As you said, she's different to most of the women who enter the challenge,\" Zander murmured. \"But I have a good idea of how you can repay me for helping you disclose your monumental fuck up, so you weren't alone in admitting you'd been played,\" he chuckled.\n\n\"I just bet you do,\" Darius groaned. \"Let me guess; it has something to do with a sexy little Jazz singer returning to the club to prove a point and win an argument.\"\n\n\"It wasn't an argument per se. Besides, they were all there for the first performance of the substitute song they should be there to hear the original and then we can take a vote as to which was the better choice. Majority rules and I won't even argue the outcome,\" Zander gave one of his rare smiles as the others began asking questions and Darius knew he would have to convince Sophie to perform again as he groaned in defeat.\n\n*****\n\nDarius made his way to the bedroom he shared with Sophie as the sun rose. The reflection time with his brothers had given him more questions than answers about the gorgeous girl who he cared for deeply. It was surprising how in just two months, she had become even more of an obsession to him. He had hoped his initial attraction and obsession with the girl would have cooled once he had her, but instead, he only craved more. The information and links between the girls that Zander had uncovered were not just surprising but intriguing, and he knew he would have to step up security around his girl until they knew exactly what they were dealing with this year.\n\nHe needed a shower and sleep but having Sophie front and centre in his mind all night gave him other idea's, and he went into the bathroom to fill up the large tub and ensured the spa jets arranged around the circumference of it were working, then he undressed and went to wake her with an eagerness that belied the fact that he had been awake for thirty-six hours. He bent his head to kiss his sleeping Angel awake, starting gentle and slow but deepening the kiss as she came awake until she moaned deliciously into his mouth and his cock was rock hard.\n\nDarius picked her up and walked through to the sumptuous bathroom. With a flick of a switch, the jets in the tub burst into life again, spurting forth bubbles and the floral smell of his Angel. Turning to face her, he slowly peeled Sophie's clothing from her body, revealing all of her delicious curves until they were standing naked before each other. Darius took her gently by the hand and manoeuvred her into the warm, frothy water. He stepped in after her and pulled Sophie down towards him.\n\n\"Sit astride me, Angel. Facing me,\" Darius instructed and was pleased when Sophie did as she was asked, opening her legs wide, to sit on his lap. Utterly lost in her newly awakened and aroused state, she gazed deeply into his eyes, unable to ignore the rapid waters, speeding across her most intimate area which was now fully open to the flow of the water and the heat of his body.\n\n\"Fuck, you are so delicious in the mornings,\" he growled his need for her, dropping his lips to Sophie's, kissing her hard and possessively. As their kiss became less and less controlled, Darius pulled her body close against his and began to slide her body along the length of his cock. As Sophie's clit was nudged and stroked along his swollen length, she gasped in surprise.\n\n\"The first time I slide my cock into you, this year,\" Darius murmured, kissing along her neck and whispering into her ear. \"I will let you decide just this once. Tell me how you want me. Decide quickly, or I will choose for you.\"\n\n\"I don't know,\" Sophie whispered back. \"I'm not sure I care at this point. I just know I want you.\"\n\n\"My choice then. I want to watch your face as you take me deep inside that delectable body of yours,\" Darius breathed the words, his hot breath crawling over her ear and throat. \"I want to watch your expression as I slide myself into you. I want to see the shock registering when you realise yet again that your tight little pussy is stretched to capacity and yet there is still more to come to take all of me. I want to see your beautiful face when I drive you through that first orgasm of the New Year.\"\n\n\"Oh, fuck, yes!\" Sophie whimpered at his words, knowing they were all true and all for her. \"Please, Darius. Fuck me.\"\n\n\"I intend to do just that my demanding, little Angel,\" smiled Darius, tracing his fingers down her spine and along the cleft of her ass. \"Eventually,\" he grinned, opening his legs slightly, Sophie's legs were opened wider with his movement, her pussy effectively suspended in the swirling waters. Placing his hand beneath her, he ran his fingers across her body, delicately touching and tickling her sensitive asshole, swollen lips and eventually her throbbing clit. \n\nGasping at the intense feelings, she clenched her internal muscles, desperate to be gripping Darius's cock. She moved her hips to increase the pressure and ride his fingers into the orgasm she felt building inside her, but he pulled back slightly unwilling to cede control to her even though he had asked how she wanted him only moments ago. Regret at her uncaring words tinged her disappointment as he teased her body with such sweet sensations without taking her over the edge.\n\n\"We have so much to do today but this morning, is all about you and me and this,\" he said in a low husky voice as he pulled her back and forth along the length of his cock again. Then he picked up a washcloth, and they spent the next few minutes teasing and touching as they washed each other thoroughly. When unable to take much more and knowing by the exquisite little sounds she made that Sophie was on edge yet again, Darius stood from the bath and pulled Sophie to her feet.\n\nDarius dropped his head to her lips and drew Sophie into the most sensual kiss pulling her body close to meld with his as rivulets of water dropped to the ground. Feeling her shaking with desire against him, he didn't bother with towels choosing to pick her up and take her to the bedroom, falling into the centre of the enormous bed with her still wrapped in his arms. He continued to kiss her very thoroughly, their lips and tongues fucking when their bodies weren't. Yet.",
        "\"Close your eyes,\" he murmured and watched her try to relax as she allowed her eyes to slide shut. Moments later, Darius's warm, slippery hands were massaging her legs in long, slow strokes. The initial sensation caused Sophie to gasp, but she quickly relaxed into the amazing feelings he was causing to her body. She didn't understand how, but his fingers sliding across her feet and legs seemed to be shooting corresponding flashes of pleasure directly to her pussy, as each stroke he made turned her body on a little more. It wasn't long before all Sophie could hear were her own mewls of pleasure. Eventually, Darius's voice permeated her consciousness once again.\n\n\"Turn over, Angel,\" he instructed. In a super-relaxed state, Sophie fought with her limbs so that she could turn over onto her tummy. Once she had done so, she felt Darius straddle her and sit on her ass, astride her, then he began a deep muscle massage of her back and shoulders.\n\nSighing even more deeply than before, she all but collapsed into the pillow and entered another world. Darius's touch was amazingly capable as he kneaded her muscles into willing submission and manipulated the ligaments in her shoulders and neck like a professional masseur. By the time he'd also completed a massage of her ass and legs, concentrating on key pressure points which made her tingle with pleasure, Sophie was in such a state of relaxation she was like a rag doll for him.\n\n\"Fuck Darius,\" she breathed, unable to even find the right word to describe her experience.\n\n\"Not yet, Angel,\" Darius grinned enjoying the feel of the quivers that ran through her body and the smell of her arousal permeating the air between them. \"I haven't finished yet. Rollover again for me,\" he murmured, placing a couple of pillows beside Sophie and helping her to lay on her back, where the pillows ended up under her ass, raising her hips.\n\nWhat are you doing?' she groaned in her unbelievably aroused yet relaxed state.\n\n\"I gave you the choice of how I would take you when we began this remember. You said you didn't care so be quiet, keep your eyes shut for me and relax,\" Darius commanded in a low husky tone that sent a thrill up Sophie's spine. When she felt Darius placing incredibly light, butterfly kisses over her stomach and down her thighs, she couldn't help but squirm a little and whimper her appreciation. Feeling his warm breath on her legs, she couldn't help remembering the last time he had blown on her inner thighs. Mewling in willing submission, Sophie slowly opened herself up to him, allowing complete access to Darius's mouth, the movement making her aware of how incredibly he could control her body and her reactions to his touch, his mouth, his words and commands.\n\nPlacing his body between Sophie's legs, Darius leant up and gently sucked one of her nipples into his mouth, biting down to feel its hardness beneath his tongue as he whipped it back and forth. Sophie's head rolled to the other side of her pillow, unable to process all of the feelings racing around her body. Slowly, he kissed across to her other nipple and repeated the biting whip of his tongue. Zigzagging his tongue down her rib cage and stomach, he came to rest over Sophie's wide-open pussy lips. With her hips raised and her legs stretched, Darius had the luxury of full and easy access. Using the flat side of his tongue, with incredibly light touches, he delicately lapped at Sophie's soft velvety folds until she was bubbling over with anticipation and begging him for more with her sounds of arousal and the oh so sexy rolling of her hips.\n\nDarius worked her over, edging her over and over again, until with three fingers buried inside her stretching her to the point of pain and his teeth clamped on her clit as he tongue whipped it she skyrocketed through the stratosphere with an exquisitely painful, intense orgasm she wasn't sure she could come down from as her body jerked and twisted in his tight hold. The fingers of his free hand dug into her hip in an effort to contain her. Sucking in the cum and tasting the sweetness of her on his tongue for the last time, he began to crawl up her body.\n\n\"Fuck! Darius! Please!\" she breathed the words raggedly, eyes still closed in ecstasy as she rode the highest of highs.\n\n\"Yes, Angel. I'm going to give you what we both want desperately because you are mine and I will always give you what you need.\" Darius breathed the words, punctuating them with kisses up her delectable little body to her mouth. \"What I need just as much as you.\"\n\nWrapping a hand tightly around each of her wrists, he raised Sophie's hands above her head, holding them down firmly on the bed. Her eyes immediately snapped open in anticipation of what was going to happen. With his eyes never leaving her wide, disbelieving ones, Darius then adjusted his grip so that one of his hands held down both of Sophie's without pressure or force understanding her momentary panic for what it was. With his spare hand, he guided his hefty erection through her sensitive folds, distracting her again and placing himself carefully in position. Aware that with one thrust, Darius could sink deep inside her body and with no idea how he would proceed, Sophie started to shake with anticipation, need and desire.\n\n\"Fuck,\" she whispered, as Darius ever so carefully leant forwards and Sophie's body began to open up for him. Darius was like no man she had ever experienced before and every time he took her, she could feel that difference emanating from him. He claimed her, owned her in these moments, and she couldn't deny him what he took as his right to her everything. His passion for her hadn't waned since that first day back in his country house, and the more time she spent with him, the more she gave of herself to him. The barriers around her heart and mind breaking down ever more under the intensity of his desire and care for her.\n\nAs he continued to enter her, still incredibly slowly, Sophie knew he could be an incredibly tender, giving and gifted lover; but she had also seen that he could also be harsh and possessive when he wanted. Somehow this first fuck of the year seemed to be an amalgamation of the two sides of Darius she had seen so far. Darius returned his hand to her wrists but his eyes, full of lust, never broke contact with hers. Darius sank still deeper, already feeling stretched to her limits, Sophie began to clench tightly around him, her eyes beginning to flutter closed and she groaned deeply.\n\n\"Keep your eyes open,\" Darius barked the command startling her to open her eyes widely and look up at him, as he continued to slide into her.\n\nSophie tried to keep her eyes open, but unbelievably, Darius's very slow initial entry still hadn't come to an end. Eventually, a panting Sophie felt his body push fully against hers and she knew that he was finally completely buried inside her. The knowledge gave her a thrill of power that she could take this big, strong controlling man completely and elicit a desperate growling groan from him at the same moment.\n\nReleasing Sophie's wrists, Darius threaded his fingers through hers but continued to clamp her hands above her head. Her legs were wrapped tightly around Darius's hips in delicious anticipation, hips tilted up by the pillows he had placed beneath her, which caused delicious friction when he slowly began to rock his hips, sliding within her.\n\n\"Mine. Angel. You. Are. Mine,\" Darius hissed the words through clenched teeth. It was clearly taking every ounce of concentration not to give way to his body's natural reaction and slam himself uncontrollably into Sophie until they both came violently. \"You. Fucking. Amazing. Angel! You. Are. Mine!\" He continued to hiss, keeping his eyes locked to hers as the words spilt out in staccato whispers of breath.\n\nSophie was beyond communication at this point, capable only of moaning and rasping in response, as the feeling of Darius filling her lifted her towards the heights of her first orgasm with a speed she hadn't expected. As her muscles became progressively tighter, Darius was aware of what was about to happen too.\n\n\"Don't come yet,\" he ordered, \"Breathe for me. Control it. For me.\"\n\n\"I can't,\" Sophie cried out. \"Don't make me, Please Darius. Fuck, Please!\"\n\n\"Try Angel. Do it for me. Show me you can do it for me,\" Darius commanded his eyes boring into hers hotly with the intensity of sensation he was feeling and staving off his climax by trying to control hers. Sophie took a deep, calming breath and her bodies firm grip around his cock relaxed slightly.\n\n\"Good girl,\" Darius breathed, bowing his head to suck one of her nipples and whip his tongue over it. He wasn't sure she could do it, but she had tried and succeeded for him. The thought of it made him nearly giddy with the pleasure that little bit by little bit she was becoming his in all ways. It was beyond measure that she would try her best to please him no matter what impossible task he gave her.\n\n\"Fuck!\" Sophie inhaled sharply at the feel of his lips and tongue on her tender nipple again. \n\n\"Breathe,\" Darius grinned between moving from one nipple to the other, where he gently sucked it into his mouth and allowed his teeth to clamp down. At the same time, Darius began to circle his rocking hips more deliberately, causing friction against Sophie's clit which he anticipated would push her over the edge and ramp up the desired release she had just pushed down for him. Releasing her nipple, Darius moved his head back to watch Sophie's ascent into the stratosphere again.\n\n\"Cum for me, Angel,\" he murmured, as Sophie mewled with every thrust made inside her. Quickly her mewls became cries as Sophie's body became awash with pure exquisite sensation. While her internal muscles clenched with incredible strength, Sophie surrendered to her overpowering orgasm. Her entire body spasmed with pleasure over and over again as Darius continued to grind himself inside her gently. As Sophie eventually but slowly descended back down to earth, she was amazed to find Darius still rock hard and sliding within her. She had assumed he would have been unable to resist coming with her and she found it both exciting and slightly intimidating that he was still very much in control and this fuck wasn't done yet.\n\nSophie knew of course that Darius had impressive staying power but, having given Sophie several very intense orgasms over the last month he had generally come with her when they were that strong, pulling his climax from his cock. \n\nDarius changed position by pulling her to the edge of the bed, where he stood on the floor and enjoyed making long, hard thrusts as the final tremors of her body began to subside. Pulling out, Darius then kissed Sophie, picked her up, and rolled her to her belly, pulling her hips up so that she was leaning on her forearms and knees.\n\nHer stomach clenched in anticipation as she sensed Darius position himself behind her. Then, with a couple of smooth thrusts, he was inside her once again, feeling bigger than ever as he seemed to go impossibly deep within her. She mewled loudly as she felt the familiar sensations of her exhausted body, beginning to ramp up towards yet another orgasm. \n\nMoving one of his hands forward, Darius placed a finger either side of her clit, allowing his fingers to slide against her. Immediately, her internal muscles clamped down on him, and she cried out with the release, slamming herself back against his cock.\n\n\"Yes, Angel,\" grunted Darius, his thrusts becoming increasingly varied and less controlled. \"One more, Angel. I need you to come with me,\" His voice took on a slightly pleading tone under the command as if this meant more to him that every other command, he had issued and she had obeyed that morning. \n\nSophie wasn't sure whether it was his words or the knowledge that he was about to come inside her and give her exactly what she wanted, but her shattered body scaled its way back up to the heights of another powerful climax. As her body clenched around his cock for one last time, he came violently, roaring with desire and relief. Darius's hips continued to rock for a short time afterwards, ensuring that every last drop of his cum was pumped into Sophie's exhausted body.\n\nHolding her tightly, Darius slumped onto his side, Sophie next to him. They both lay there speechless, breathless and utterly drained. After some time, he eased himself out and rolled from the bed onto shaky legs. He bent to pick up her languid form, thankful that she was so small and easy to carry. He walked back into the bathroom and stepped into the shower with her placing her on the bench seat against the wall before turning on the water to wash them both and prepare for the ball tonight. \n\nHe would need to make sure they both rested on the flight this afternoon or the ball would be a nightmare for them as they struggled with lack of sleep and exhaustion.\n\n*****\n\nIt was mid-afternoon when Sophie boarded a private jet with Darius, his brothers and the two other women in the challenge along with Trent and two other minders who worked with the other girls. She felt a mixture of relief and disappointment that Mimi had not joined them and felt the inexplicable need to apologise to Zander still feeling that Mimi had only done it because Sophie had embarrassed her at the club.\n\nThe two-hour flight was not the time to do that as Trent went over the program for the ball she was to attend and how the grading of dancers would occur. Qualified judges would be there rather than leaving to the council to decide. At certain times during the night, the thirteen women would be required to dance with whoever asked them. The spotlight would be on the woman, not the brother who had brought her into the challenge, and she would be judged accordingly. The point was to see how the ladies went in mixed social circumstances while remaining poised and elegant.\n\n\"You won't have to worry about dancing with strangers,\" Darius said quietly. \"My brothers will ask you to dance at the times where it will matter.\" He had everything element of the night tightly control and had to trust in his team that his Angel would be ready to meet the challenge in the things he couldn't control.\n\n\"Asher came to practise with me, and Zander had planned to come but was called away at the last moment. They explained the procedure to me,\" Sophie let him know she was aware of how the evening would work. Her dress was carefully stored in a travel bag, and she had a case with makeup and hair supplies to be able to get herself ready with minimal help once they got to the apartment they had for the night. She wasn't sure why they had needed an apartment because they had plans to fly back later tonight, but she was grateful not to have to wear the revealing dress on the plane or have to dress in the small bathroom.\n\nThe flight seemed to Sophie more like half an hour rather than the two hours they had been in the air, and she didn't get a chance to talk to Zander and apologise for his loss of a partner for the game. They rode to the apartment in four different cars, but all managed to arrive at the same time heading up to the suite which had three bedrooms as well as the usual amenities of an apartment. The three women took the bedrooms to get ready, and Sophie worried about the lack of space for the men but realised they would have already decided on a plan for this and dismissed it from her mind as she came face to face with her revealing dress again.\n\nThe skin tone covering that went from just above her nipples and covered her torso riding high on the hips down into a leotard bottom with only a thin skin-toned strap across her back to hold it in place matched her skin tone exactly, and at first glance, she knew she would appear nude under the sheer, diaphanous pale blue material that fell from the right shoulder covering her right breast before being gathered to her left hip and cascading down to the floor in layers of the soft translucent fabric. The back mirrored the front leaving her back appearing bare right down to the low attachment at her left hip. Her left breast was barely covered by a pearl and sequin applique that ran down to the gathered fabric at her hip. Even though she was covered, and should remain so even if she fell, she still felt very exposed by the dress. \n\nHer makeup was subtle and although her hair was down at the back giving her some disguise for the almost invisible strap of her dress across her back, the front of her hair was pulled back in a soft style held together with a pearl comb matching the design of the applique. She felt a little like a mermaid until she put on the five-inch pearl coloured heels that she had been practising in. As the last pieces of her costume came into place, she considered which of the sassy starlets she thought she could pull on as her persona for the evening.\n\nTaking a deep breath, she danced around the room checking that none of the body tapes she had used to keep the bodysuit and dress in place would come undone and that the gathered material low on the small of her back wouldn't drop any lower to expose more of her ass than she wanted. The bodysuit only covered her front, and aside of the strap under her shoulder blades and arms, there was only a small triangle of material covering her ass sitting low under the sheer fabric to allow the voyeur a peek at as much skin as possible on her back.\n\nShe may as well be nude. She sighed but with a big breath and a straightening of her posture she pulled on Natalie Wood's version of Gypsy at the end of the old movie and placed a lipstick and her phone into the small pearl beaded clutch she had been given to go with the dress. Sophie took one last deep breath and stepped from her room with Trent right behind her. He had been almost useless in assisting her dress and truthfully, she was surprised Darius had allowed him to stay with her. Darius had showered, shaved and changed into his tux, then left her to finish dressing alone so that he didn't ruin the look she had been preparing with her hair and makeup before they even left the apartment. Silence greeted her as the six men in the living room turned to look at her with several pairs of eyes going wide in surprise.\n\n\"You're a braver man than me, D.\" Asher clapped him on the back with a chuckle. \"That is some dress she is almost wearing! Not that I'm going to complain when I am dancing with her.\"\n\n\"Don't you listen to Ash, Sophie,\" Stella said, seeing Sophie's panic-stricken face and went to embrace her. \"You look amazing! I wish my stylist had half the talent yours does. I look like a reject from Strictly Ballroom.\" She laughed self-depreciatingly. \n\n\"Pfft, you're a supermodel, you could wear a sack and look gorgeous. You look like you are meant to be going to a ball. I look like a stripper halfway through their act. I told Sylvia this was all wrong for a ball, but she said Darius approved it and...\" she shrugged. \"It is what it is, and I can pull it off. I think. Hopefully, I'll be lost in the crowd because I am so short.\" She took a deep breath, ready to soldier on regardless. She looked up at Darius and crossed the room to him as he seemed stuck where he was, transfixed by what he saw. \"Darius? You did approve this dress, right?\" He'd been pretty much absent the whole way through her dancing lessons, and she had just taken Trent and Sylvia's at the word when they had said he had approved the design.\n\n\"I probably should have paid more attention when it was shown to me. I thought there would be more to it than,\" Darius reached out and pulled Sophie close running his hand down her back, \"This,\" he murmured in her ear and kissed her neck feeling the need to mark her and let everyone at the ball tonight know she was his. \"You look unbelievably delicious, Angel.\"\n\n\"Don't bite her again,\" Trent grumbled beside them as if reading Darius's mind.",
        "\"Have some self-control, man,\" Asher intervened. \"I think we need to separate these two if we want to get Cinderella here to the ball so she can dance with Prince charming all night, namely me.\" He waggled his eyebrows at Sophie and received a hard one-handed shove from Darius making everyone laugh.\n\n\"I'll get Layla, and we can go down for the cocktail hour,\" Connor said, disappearing into one of the bedrooms.\n\nThere was a sharp knock on the door, and each man looked at the other with a raised eyebrow until Jayce went to answer it. There was a low murmur of voices, and then Jayce pulled the door open wide admitting one of the men from the council and to Sophie's surprise Mimi. She looked at Zander who seemed just as surprised as she was to see the woman here dressed for the ball. \n\n\"Ah, you're all still here,\" Henry began. \"I'm sure you won't mind going on ahead while Zander, and I iron out a few details regarding the challenge. He and Mimi won't be far behind you all.\"\n\nThe shock of Henry's arrival with Mimi had overshadowed Layla's entrance into the room, and Sophie made a point of catching up to her to tell her how beautiful she looked and how gorgeous her dress was. The shy, sad girl gave a small smile but said nothing as Connor ushered her from the room, and they rode the elevator down to the third floor. Sophie hadn't realised the Ball was being held in the same building where their apartment was but was glad not to have to walk very far in the heels she was wearing. While she had gotten used to them over the last few weeks, she still felt like she could topple at any moment if she put a foot wrong.\n\nThe Ballroom doors remained closed, but a deck to the outside had opened with a bar set up and waiters and waitresses walking around offering canapes and cocktails from silver trays. Most of the men assembled had dates with them, and there were far more than the thirteen girls from the game present unlike when they had gone to the Jazz Club to introduce the game and the competitors. Sophie realised that more than a few of the patrons of this ball would not even be aware of the challenge being undertaken by the thirteen women and therefore she wouldn't know who to accept if anyone other than Darius's brothers asked her to dance.\n\nThey were still mingling when Zander arrived with Mimi at his side, and although anyone who wasn't close to the brothers wouldn't have noticed the change in their focus, Sophie did and followed Darius's gaze. To her surprise, the brothers did not gather together to work out how they would support Mimi through the dances. Instead, they continued to mingle as if nothing was amiss. Sophie was wary of seeing Mimi again, but rather than appearing as the sulky pouting princess she had been at the Jazz club, Mimi appeared subdued and relaxed as she stood quietly beside Zander and smiled as people greeted her. It was as if the woman had undergone a complete personality change.\n\nFor her part, Sophie wasn't as chatty as she had been at the Jazz club and taking her cue from the other women she recognised as being in the game she tried to become demure arm candy for Darius as he spoke with his friends and acquaintances introducing her sometimes and at other times hurrying past the person who had stopped him to chat. By the time they had entered the ballroom for dinner and dancing Sophie's head was swimming with new names, concerns about Mimi's reappearance and her change in attitude as well as the dances she would be expected to perform at given times throughout the night.\n\nThe ballroom was huge with a large official-looking dance floor in the centre of the room with barricades separating it from the tables which sat two deep surrounding the parqueted oval space on higher levels almost like stadium seating. Sophie felt herself get nervous as they took their seats and she realised that Stella, Layla and even Mimi were at other tables and the only vaguely familiar face at a table nearby was Rob and his partner Chloe. She was introduced to the other couples at their table as Andre parker who seemed significantly older than his partner, Elise and Bart Roberts with his partner Victoria.\n\nThe Band sat at one end of the oval-shaped dance floor, and Sophie was pleased that there was a live band rather than music piped throughout the huge room. As the final guests took their seats the Master of Ceremonies took his place at the small podium in front of the band and spoke about the cause the charity the ball was in aide this year and pointed out the mounted digital tablet available at each table for interested parties to bid on the silent auction.\n\n\"Nervous?\" Darius asked, running a hand down her bare back as he felt her tremble slightly beside him. \n\n\"A little,\" she admitted. \"But as long as you remember that you approved this dress knowing you wouldn't be dancing with me tonight it will be fine,\" she gave Darius a teasing smile and sat up straighter arching her back slightly knowing the effect the position had on her dress. Hearing Darius groan, she relented her teasing pose and withdrew within herself to try and find the bravado she was attempting to exude and failing badly.\n\nShe was trying without much success to channel Gypsy Rose Lee and was realising it was totally the wrong persona for the night and fell back into the sassy and graceful Rita Hayworth once again. She needed the maneater bravado of Gilda tonight, and she closed her eyes drawing a deep breath through her nose as she mentally readied herself for the contest to begin and prayed that Darius's brothers would come to her rescue as promised.\n\n\"Darius,\" a deep voice sounded from behind where Sophie sat, her eyes popped open, and she turned to see one of the members of the council standing there.\n\n\"Byron,\" Darius turned coming slowly to his feet, shaking hands before putting his hand out to steady Sophie as she followed his lead and came to her feet beside him.\n\n\"Economic downturn affecting the transport sector?\" Byron asked curiously.\n\n\"Not at all,\" Darius answered a small frown marring his features at the comment.\n\n\"I was concerned after seeing that you only provided half a dress for your date,\" Byron smirked.\n\n\"Don't remind me,\" Darius groaned. \"It looked far more substantial on the mannequin trust me,\" he murmured almost under his breath.\n\n\"I am here to save you from fighting off all the interested dance partners for the first dance of the evening,\" Byron said urbanely. \"If you remember your manners and introduce me to your date.\"\n\n\"Oh, Byron Blade, Sophie White,\" he introduced remembering that the two had not officially met before even though they knew of each other.\n\n\"It is a pleasure, Sophie, dear,\" Byron grinned and held out his hand to take hers and caught it up, bringing his lips to her knuckles. \"Shall we dance as we get to know each other?\" He asked politely.\n\n\"I, um,\" she glanced at Darius for direction but remembered who she needed to be to pull off this dress and do well in the contest. \"Of course,\" she gave Byron a wide smile and stepped toward him as he guided her, by the hand, he still held, toward the dance floor. She was Gilda. She could sing, dance and eat men for dessert! She could own this dress and this night if she wanted to and she knew she absolutely wanted to!\n\n\"How are you finding your time with Darius?\" Byron asked as he halted her before she could step onto the polished wood parquet floor.\n\n\"Darius is wonderful,\" she said with a cheeky grin not intending to extrapolate on that, allowing Byron to make up his own mind about their relationship such as it was.\n\n\"Wonderful how?\" Byron pressed.\n\n\"He listens to me and provides what I like as well as I what need and between you and me, Byron,\" she placed a hand on his arm closing the space between them and whispered softly close to his ear. \"The man knows how to fuck. I only signed on for the great sex, but don't tell him I am just using him for his body. He thinks he is the one in control\" she stepped back and winked at the man who gave a short soft chuckle.\n\n\"Ladies and Gentlemen,\" an official-sounding voice came over the speaker. \"Our first formal dance of the night is about to commence, take your places please for the Fox Trot.\"\n\n\"Shall we, little one?\" Byron asked, then waved his arm toward the dancefloor for her to go first to take their places. Byron took her in his arms as others also took their places quickly, and the music began.\n\nSophie's mind whirled with her dance lessons, counting and trying to feel her partners arms leading her and letting her legs follow with the steps required. In the end, she found it easier just to feel the beat of the music rather than count, and when she did, she realised Byron moved her to that beat, and the dance became much easier, and she relaxed into the swirling and strutting that made up the dance. By the end, she thought she had nailed it and hoped her dance teacher would be proud.\n\nAt the end of the dance, Byron gave a half bow and kissed the knuckles of her hand again before handing her over to a man she didn't know as the next dance was announced immediately. Again, she relaxed into the music letting her partner, who had introduced himself as Derek, and the beat carry her through the Paso Doble. A third dance was announced before the second had completely finished and Derek twirled her around and into the arms of another man she didn't know but who took her in his arms and pulled her close as a tango began. \n\n\"This is your dancing with the stars moment, love,\" the man said in a crisp British accent. \"Just go with it I will cue you for any special moves I plan to make.\"\n\n\"Okay,\" Sophie whispered back. \"And your name is?\"\n\n\"Joe,\" he grinned, \"Now trust me. Lift your left knee to my thigh and let the right foot trail behind us,\" he instructed, lifted her slightly and began to step back when the music began, dragging her with him. The dance was close and sultry as he led her around the dancefloor whispering instructions as they went and what was already a slow and sexy dance turned hot and almost erotic as the man she was with put on a show for the judge's benefit, and he claimed both of their boyfriends.\n\nSophie began to worry that she hadn't seen Darius or his brothers on the floor at all, but she couldn't break her concentration on Joe's instructions long enough to look at where their table sat and see if Darius was watching her as closely as she thought he might be, knowing she was in a stranger's arms and becoming angry with her as she let this man stroke his hands over her legs and body as she danced seeming to take advantage of all her exposed skin.\n\nWhen the music finally ended, and the band announced a break during the serving of the main course, Joe walked her back to her table where Byron sat talking with Darius. When she got close to the table, Darius immediately got to his feet and pulled Sophie to him bending his head to kiss her deeply uncaring of what the people around him may think. Then he sat pulling her into his lap, needing to hold her and claim her back from the men she had danced with. He didn't acknowledge her last partner before Joe melted back into the crowded ballroom.\n\n\"You danced beautifully, little one,\" Byron stated watching the couple as Darius held the girl to him possessively. \"Darius, you will have to let her take a seat to eat,\" Byron chuckled and stood. \"I'm excited to see how you perform in the next round of dances, Little one. It is a shame the council will not be awarding the points tonight, but it allows us a little leeway in being able to dance ourselves which I can hardly complain about,\" he said with a sly grin. \"You only have yourself to blame for how you feel right now, Darius,\" Byron chuckled and stood to leave the table allowing Sophie to retake her chair that he had occupied. He placed a hand on Darius's shoulder in a paternal way and patted it twice before walking away.\n\n\"What was that about?\" Sophie asked, attempting to wriggle from his arms and his lap but finding his hold tighten as she did so. \"You know you will have to let me sit in my chair at some stage so we can eat, don't you?\" she asked teasingly.\n\n\"Eat fast,\" he growled low into her ear as he released her to take her chair. The need to mark her and show the room that she was his rode him hard. He should have paid more attention to the dress and how she would look in it when in another man's arms for the dances, but he hadn't thought she would be dancing with anyone but him and his brothers who he trusted implicitly. Fucking Byron and his manipulations had taken away his control of the night and his girl. He needed to find Asher and Zander and make sure they were the ones to dance the next set with her which would include more Latin dances. He also needed to reclaim his Angel and make sure she knew who she belonged to, and whose hands she should want caressing her delicious body. Fuck the food he needed action, not a meal.\n\n\"Darius, it's okay, you know,\" she said, leaning into him and talking softly. \"Everyone knows I am here with you and it is you I will go home with. You don't have to worry about a silly little dance with some stranger.\" She tilted her face up to kiss him feeling anger radiating from him and trying hard not to be frightened and apologise as if she had done something wrong. \"This is the challenge, and we will win or at least come close. I worked hard to be able to do the dances, and I think the first few went well. Don't you?\"\n\n\"Too well,\" he muttered darkly. Although his Angel had been returned to him, he was still furious that Byron had superseded his plans. \"That last guy was all over you and...\" Sophie reached a hand up to stroke his cheek and brought him to her for a kiss stopping his words. \n\n\"Joe is gay. He has that very effeminate affectation to his voice that he has to be,\" she laughed. \"I wouldn't be surprised if his boyfriend is here somewhere pouting just like you.\"\n\n\"I do not pout,\" Darius growled, but he couldn't help the tilt to his mouth as he looked into her eyes and felt her calming manner wash over him the way it usually did when he was about to lose it. His Angel was like nothing and no one else he had ever known and she was his. His alone! \"I still don't like seeing you like that.\"\n\n\"Like what?\" she asked, genuinely surprised. \"Dancing?\"\n\n\"That last display wasn't dancing it was dry humping in public, were you trying to make a porno out there?\" His temper flared back to life, and he shrugged off her hand that had been stroking his shoulder and neck after their kiss.\n\n\"Don't watch then,\" she bit back at his temper trying to cling to the small amount of bravado she still held to tightly. \"You want to win, don't you?\" she asked, trying to channel pure Gilda and hold her own in the face of his anger. \"I'm pretty sure Joe made me look far better than I am out there, so did Derek and if they ask me to dance again I'll say yes happily because they know what they're doing, they make me look good, and they,\" she paused for effect as she leaned away from him before delivering her last blow, \"They actually want to dance with me unlike you!\"\n\n\"The fuck you will,\" Darius growled his eyes blazing now and struggling to keep his voice low.\n\n\"I didn't see any of your brothers or friends coming to claim me on the dance floor,\" she argued back. \"It's not like you ever had any intention of dancing with me. This is the challenge Darius, and we are in it to win it. We have a contract to participate and win, and yes you are playing the role of my boyfriend for the entirety of that contract, but this childish jealous pouting act is beyond the limits of that contract. All of this, including the boyfriend clause, is a game, Darius. It's your game, with your rules, so stop acting like I am cheating on you when you put me in this position, to begin with.\" She threw her napkin on the table and got up intending to go to the ladies' room to cool off. She was tired of pandering to his tantrum, and if she had to stay with him a moment longer, she would lose it and revert back to the frightened little girl who was so easily cowed by bigger stronger people.\n\n\"Where the fuck are you going?\" Darius grabbed her wrist roughly making her cry out as it twisted in his grip.\n\n\"To the bathroom. I'm still allowed to pee, aren't I?\" Sophie hissed at Darius. Fear coursing through her body now with the pain from her wrist. She had to run. She had to get away from this angry man. This was wrong, all wrong. She couldn't stay there. She had to go. She looked around, trying to breathe slowly and stave off the panic attack that was threatening her sanity. She couldn't have a meltdown here in the ballroom. She tried to wrench her wrist away from him without success.\n\n\"You don't remember what happened the last time you went to the bathroom at one of these things?\" Darius also rose to his feet. \"I'll take you up to the apartment.\"\n\n\"No! I'm not going anywhere with you! You're being ridiculous!\" Sophie couldn't believe what was happening. She had never seen Darius like this. He was possessive, but this was extreme, especially in terms of their contract, and she had to get away from him not go somewhere isolated with him. \"Let me go, Darius, you're hurting me,\" her voice quavered, and tears threatened to leak from her eyes.\n\n\"Let her go D,\" Asher said, appearing beside them. \"Rob or David can take the girls. She'll be safe. No one will try anything after the last time.\" His voice was deceptively mild, but there was none of the usual joking banter as he stood taking on Darius's furious stare. \"Let her go D,\" he repeated calmly. \"You are scaring her.\"\n\nAs if the red haze of his fury dropped from his eyes, he blinked slowly and saw the pain and fear on Sophie's face. He let go of her wrist watching as she pulled it away with a huff and moved behind Asher using him a shield.\n\nUnsure of what Darius would do next, Sophie looked to where Chloe stood with Stella and David staring at Darius and turned to walk away while Asher spoke in a hushed voice to Darius. She felt self-conscious now as she walked ahead of the others towards the main entrance looking for any way to escape the ballroom and get a few minutes in the fresh air even if it was only on the balcony she had been on earlier. She spotted the entrance to the ballroom and walked rapidly towards it, hoping to outpace the people she had left behind at her table. She wasn't na\u00efve enough to believe someone hadn't followed her, but she had to get out of this place away from these people. She couldn't catch her breath and tears continued to prickle at the backs of her eyes.\n\n\"Slow down, Sophie,\" David said, catching up to her but having witnessed her last panic attack on the side of the road he refrained from touching her. \"The security guards won't let you leave alone. Tell me what you need, and I will help you,\" he offered as gently as he could before noticing that she was fighting for breath and unable to speak to him.\n\n\"Let her go, I will stay with her,\" David informed the security team at the doors and walked with her to the elevators. \"Fresh air, Sophie? The street is not safe, especially in that dress, come to the apartment with me, we have a balcony, and you can stand out there as long as you need to.\"\n\nSophie shook her head no and jabbed at the ground floor button once the elevator opened and she stepped in. She could do nothing but glare at the panel as the button refused to light up. She was trapped. He had promised he would never trap her anywhere, and here she was trapped and unable to escape. Tears started to roll down her cheeks as David leaned in and swiped his card, and the ground floor button lit up for her jabbing finger. She managed a deep shuddering breath as the elevator finally started to move, but she stood at the door, waiting for it to open so she could escape. ",
        "\"Sophie, it's dangerous out here alone, you're not dressed to be out here! Please stay where I can see you,\" David said following close behind her but letting her do what she needed to do to get through this. She had paced the side of the road when she had panicked in the truck so he reasoned she just needed to walk for a few minutes before she could talk to him again. \"Sophie, Darius only wants to keep you safe; he didn't know those men you danced with, and it worried him. He could have expressed it better, but he was worried about you, he would never deliberately hurt you or trap you. We all know not to do that to you.\"\n\n\"He wouldn't hurt me?\" she let out in a loud sob through ragged breaths and held up her arm where the red imprints of his big fingers still showed around the swelling wrist which threatened to bruise badly.\n\n\"Fuck!\" David said and lowered his head. He was out of his depth here without knowing exactly what had gone on before he arrived at their table. \"Can I see your wrist, please? Do you need some ice for it?\" he asked sincerely concerned that Darius had inadvertently hurt her. He couldn't believe Darius had done it on purpose. He wouldn't have.\n\n\"Frankie?\" A man's voice called as Sophie paced further away from David. \"Frankie!\" he called again closing the distance between them. \n\n\"You're mistaken man,\" David moved quickly, getting to Sophie before the man and placing an arm around her to turn and guide her back to the hotel entrance.\n\n\"Stop!\" The man said, moving into a light jog to get to them. \"Frankie, I know it's you. Just stop for a minute!\"\n\n\"I don't know who this Frankie is or what she is to you, but this is my girlfriend, and her name is not Frankie,\" David said menacingly. \"If you don't stop hassling her, I'll make sure security hassles you.\" He could have handled the man himself, but he didn't want to do that in front of Sophie when she was already looking so vulnerable and upset.\n\n\"Oh,\" the man looked properly at Sophie now that she had turned around. \"You look just like her, but I can see that you're much too young to actually be her. My apologies,\" the man frowned as if he was sure she was this other woman. Just like the man at the club had been the night her whole world had changed.\n\n\"You're not the first person to think I resembled someone else, what was her name again?\" Sophie asked, digging her feet in when David tried to move her away back toward the entrance.\n\n\"You look just like Frankie Calabrese did at your age, but she would have to be around forty by now. It's uncanny though,\" he said and reached a hand out toward her as if to touch her and be sure she was real. \n\n\"Sorry,\" she said, stepping back, having gotten what she wanted, a name. \"I've never heard the name before. I thought maybe you knew one of my sisters, people say I look like them, peas in a pod, which isn't really surprising. I hope you find the woman you're looking for.\" She turned then and went with David docilely. \"Can we go up to the apartment so I can fix my make up? Will we have time before the next dance?\" she asked as if she hadn't just had a breakdown and run away from the ballroom.\n\n\"You'll have to be quick,\" David said, checking his watch. \"I'll call and see if Michael can stall the proceedings somehow.\"\n\n\"Michael?\" she questioned. She could breathe normally now and felt some of her bravado returning. If she wanted the bonus money before she left Darius, she needed to win the dancing contest. The more money she had before she pulled the pin on the whole game and used the out clause, the better off she would be. She wouldn't have to be alone with Darius until they returned home later that night and if she called and told Susan about her wrist before they left on their flight. She would be there when they got home and separate her from Darius if that was what she wanted. Susan was the only person on her team that she had seen stand up to Darius in any way.\n\n\"Michel Mace. He is part of the ruling council and my mentor,\" David explained. \"He will know what is happening and how long you might have to fix your makeup. It won't be more than a few minutes, though. Now that they were inside and he could see her wrist better in the light, he could see the red marks and the way she favoured it and winced when she did. \"We should probably get Andrew to look at your wrist too. I'm not sure if Reed is here tonight, he would be the better option. Dancing with a damaged wrist probably won't be fun unless you get it wrapped to protect it.\"\n\nDavid sent out rapid-fire texts to Michael and his brothers asking who was in charge of the first aid for the night and reassuring them that Sophie was fine, but her wrist had been damaged before they left the ballroom. He also let them know that a stranger had approached her on the street, thinking she was Frankie Calabrese. His phone pinged incessantly with responses, and by the time they returned to the ballroom, Reed along with all of his brothers were waiting for them at the door.\n\n\"A little overkill, don't you think?\" Sophie asked, looking at the serious faces who greeted her entrance and pulled on the fake mask and persona she needed to get through the night.\n\n\"I'm just going to look at your wrist,\" Reed said, leading her over to a couch on the back wall. Sophie looked over her shoulder to see the six brothers all huddled together and talking quietly until Darius peeled off and came to sit beside her.\n\n\"I'm sorry, Angel. I don't know what happened. I would never intentionally hurt you,\" Darius murmured looking crushed as Reed wound a soft cotton bandage around her wrist and a small splint to support it as she danced the final dances. \n\n\"It's fine. I've had worse,\" Sophie dismissed his apology with a wave of her hand. \"How long have I got to find a partner?\" she asked surprising Darius by how shuttered she was in her dismissal of him and his apology. \n\nAll of the work he had done getting past her barriers so that she trusted him and cared for him as he cared for her was gone in that moment and as Byron said he only had himself to blame. He was devastated not by her attitude but that he had let her down in the worst way by hurting her and making her frightened of him. Something he had sworn he would never do. It didn't mean he would give her up or let her go. He would fight her every step of the way if she thought she could use the loophole to leave him over this. He would give her space this evening as the dancing went on, but when they got home, she would be his completely once again, he would make sure of it.\n\n\"Are you good to dance?\" Asher asked, holding out his hand. \"It's time.\"\n\n\"I am,\" she said determinedly and looked up at Asher, then looked past his shoulder to where Joe approached her with another man. \"But I think I already have a dance partner if you will excuse me.\" She stood, noticing the shocked face of Asher and feeling Darius bristle behind her, as she smiled at Joe.\n\n\"Miss Ginger this is my partner Alexi, he noticed us when we tangoed and asked for an introduction,\" Joe introduced the man beside him in the same effeminate voice he had used with her earlier.\n\n\"Dance with me, and I will be the Fred to your Ginger,\" Alexi winked. \"See if we can make Joe as jealous as he made me,\" he grinned. \n\n\"My boyfriend didn't much enjoy my dance with Joe either,\" she laughed knowing Darius was listening to everything she said. \"I would love to dance with you, Fred!\"\n\n\"Fred and Ginger coming through,\" Alexi called. \"What's the Latin version of Fred and Ginger, I wonder?\" he giggled, making Sophie laugh all the more. \n\n\"If my dance instructor can be believed its Riccardo and Yulia, but that doesn't have the same snappiness of Fred and Ginger,\" Sophie laughed as Alexi swept her onto the dance floor for a very sensual display of the Rumba. She found the freedom of no longer caring about Darius reaction freeing, and she made the most of Alexi's flirtations, knowing she was safe from any real advances from him.\n\nFeeling hot and bothered from the sexiness of the Rumba Alexi had led her through Sophie was spun into another strangers' hands and the faster music of a Cha Cha Cha set the room alight with movement and spinning hip-shaking men and women. She barely caught her partner's name and by the end of the dance couldn't remember it as once again she didn't have time to think before another set of hands had pulled her to him for a Mambo. \n\nPerspiring heavily, Sophie was happy to be walked back to her table despite her misgivings about how Darius would feel after the sensual version of the Rumba Alexi had danced with her. Even though he was gay and his partner was here, his moves had even made her hot and bothered by the end of the dance. She thanked her partner, not remembering his name and not wanting to admit it she turned to the table tentatively taking her seat beside Darius. Ignoring him as best she could, she picked up her glass of water and drank deeply.\n\nDarius watched her silently. He had been determined not to react to her dancing as he had done and to give her the accolades she deserved. She was beautiful out there, and she was right. Her partners had only enhanced her beauty and desirability. She was head and shoulders above the other dancers in his eyes, and he was beyond devasted that he had caused her to put these walls up between them again. Gone was the cajoling little tease who had tried to soothe his anger earlier and in her place was an unemotional shell of the woman he knew. He scooted forward in his seat, leaning into her personal space and cursing as he saw her stiffen.\n\n\"Angel, you are amazing, and I should have listened to you and trusted you. I know you need actions rather than words,\" he picked up her hand and cradled her bruised wrist. \"I can't tell you how sorry I am that I did this. It wasn't you that I was mad at but the situation. Byron blindsided me, and I lost control of the evening. I don't do well with that, and that's not an excuse, I shouldn't have acted the way I did regardless. I can't apologise enough. Please look at me.\" He watched as she turned her face to him; her expression unreadable for the first time since they had signed the contract and sealed their fate.\n\n\"Can you just let me concentrate on the dancing and deal with this later, please Darius?\" she said quietly. \"I just need to get through the final dances.\" Sophie turned away from him again and picked up her water to take another large drink. She could understand how out of control he would have felt having the rug pulled out from under him by someone he trusted, his mentor and father figure. He was a control freak and being out of control like that while she was arguing with him would have exacerbated the situation. It didn't change that fact that he had that side to his nature, and she wasn't sure she could trust him as completely as she had anymore.\n\n\"You are beautiful and so very sexy when you dance, you have nothing to worry about,\" he praised her. \"I could never have danced with you like that.\" He said sadly thankful that she had not withdrawn her damaged wrist from him as he rubbed his thumb gently over her knuckles as they spoke. \"I'm so proud of you and how you have handled yourself tonight. I want you to know one thing, and then I will leave it alone so you can concentrate,\" he said, drawing her eyes back to him with a gentle finger on her chin. \"You are so much more to me than a contract or a game.\" He leaned forward, taking the chance she wouldn't shy away from him and gently brushed his lips over hers.\n\n\"So, things are looking better over there,\" David smirked across the table as he and Stella approached again. \"How are you feeling, little witch?\"\n\n\"I'm fine. Thank you, David. For everything,\" Sophie smiled softly at him. She was so grateful he had gone with her and allowed her just those few moments of fresh air even if the strange man who thought she looked like Frankie Calabrese accosted her.\n\n\"Everything?\" Asher asked, swooping over her shoulder to pick her up and deposit her into his lap as he took her seat. \"Tell me more, cookie,\" he chuckled. \"You and Dave were gone for a while together.\"\n\nSophie quickly glanced at Darius, who had failed to let go of her hand during Asher's interruption and taking her chair. Not wanting to make matters worse before the end of the night she moved from Asher's lap to Darius feeling his whole body relax underneath her as she slid into place. She believed that he wouldn't do anything else to hurt her or make her uncomfortable within the ballroom in front of his friends.\n\n\"You don't think either David or I are going to answer that in front of Stella and Darius, do you?\" Sophie raised an eyebrow at Asher, playing along with his teasing now that Darius seemed calmer and more at ease with his friends close by.\n\n\"Oh, we've already heard David's version of events,\" Asher grinned. \"Somehow it didn't include 'everything'.\"\n\n\"Living vicariously through your brothers, Ash?\" Sophie tilted her head and gave him a strange look as Darius attempted to muffle a chuckle behind her back. \"My suggestion would be to find out what the story is with Zander and Mimi instead. I bet there is a lot more gossip in that partnership.\"\n\n\"I don't think Zander knows what's going on himself, but I have some theories. We'll discuss them on the flight home,\" he gave her a wink. \"Best not to do it here with ears everywhere. Speaking of which have you found the time to talk to Rob, Dave?\" Asher asked.\n\n\"What are you talking about?\" Andre asked, staring at the large party all pulling up extra chairs to crowd the table he sat at with his partner Elise.\n\n\"Asher is trying to appear mysterious because he has a crush on Darius's girl,\" David chuckled lightly. \"She's oblivious though so it is just a game to see who can confuse who the most.\"\n\n\"Well shit,\" Asher sighed. \"Just because my kidnapping of her didn't quite work out as planned doesn't mean I have given up entirely.\"\n\n\"You kidnapped your brother's girl?\" Andre asked curiosity warring with the mirth in his tone.\n\n\"Well yes, I mean look at the little Cookie, and did you see her dance that Mambo? Lucky the guy she was dancing with was gay, or I might have had to challenge him to a duel halfway through that dance if Darius hadn't kicked his ass first,\" Asher said seriously shaking his head and his hand as if it was too hot to touch.\n\n\"The little cookie, or little witch, or little angel, is Sophie, right? Just to be clear?\" Samuel asked, joining in the conversation for the first time with a perfectly straight face. \n\n\"That depends on who you ask,\" Jayce who had just arrived at the growing gathering chuckled. \"I believe Zander calls her Beautiful and I have heard Connor call her Princess.\"\n\n\"And you? What do you call her?\" Rob asked.\n\n\"I haven't found a suitable nickname yet. I'm sure one will come to me eventually,\" Jayce said as if it was not important.\n\n\"Gentlemen, Ladies,\" Byron spoke as he entered the ever-growing circle of friends. \"Please excuse Darius and Sophie for a few minutes, the council require them,\" he indicated the direction they should go and waited patiently for them to rise and follow him.\n\nDarius placed a hand on Sophie's lower back as he guided her through the ballroom to a backstage area where performers at other events would change or stay during a performance. Sophie imagined if a singer were with the band, this would be where they would hang out between sets. Sophie wasn't surprised to see Zander and Mimi within the room with Henry and another man who looked just like the man who had been sitting at their table all night except that his clothes were different, less formal.\n\n\"Sophie, this is Aaron Parker, and I believe you met Henry earlier this evening?\" Byron started by introducing the two other men in the room. \n\n\"I think I am sitting with your twin brother tonight,\" Sophie said directly to Aaron still surprised by the likeness between the two men.\n\n\"Really? I have a twin somewhere out there? How interesting,\" he chuckled.\n\n\"He might be a fraction more attractive now that you mention it, but that is the power of a tuxedo on women such as myself. I'm sure you have a good personality, though,\" Sophie laughed at his look of chagrin and turned her attention to Mimi. \"Hello again,\" she said. \n\n\"Hello, Sophie. I'm sorry for pushing you the last time we met,\" Mimi said oozing fake sincerity and looking carefully contrite as she gazed down at Sophie's shoes and then at Henry.\n\n\"Are you?\" Sophie tilted her head, willing the woman to look her in the eyes rather than at her feet or Henry. \"Seems to me you are apologising to Henry rather than me. It doesn't matter either way. I forgave you the night it happened and moved on. I'm sorry if you thought I was holding a grudge, truthfully I haven't given you a seconds thought,\" Sophie shrugged as if it was no big deal. \"Honestly, I'd be happier if you apologised to Zander, he was the one you embarrassed and left high and dry.\" Mimi finally looked at her gaping like a goldfish pulled out of its bowl.\n\n\"So, you would have no issue with Mimi returning to the challenge?\" Henry asked.\n\n\"She already has returned. She was here tonight with her partner, Zander, wasn't she? Why ask me now when the decision was already made?\" Sophie asked. She had been through a lot tonight, and she was damned if she was going to show weakness in front of Mimi who thought she was an easy target already. So, she channelled Rita Hayworth and encased herself in the character of Gilda.\n\n\"Mimi has requested a handicap much like golfers are given in their game because she wasn't able to spend the time she needed with Zander before the ball tonight,\" Henry explained. \"Should Darius allow her this boon, we would like to know if you are comfortable competing in challenges with Mimi again.\"\n\n\"I don't understand,\" Sophie frowned.\n\n\"My answer is no regardless. Mimi had access to a dance instructor during her treatment, didn't she?\" Darius said interrupting Sophie's conversation with Henry and looked between the men. He found it was Aaron who nodded in answer to his question. \"Then, she is at no disadvantage. All of the girls are still getting used to their new living arrangements and making the best of their individual situations without the help of a personal counsellor. If anything, Mimi was in a better position than the other women in the challenge, and if she didn't take advantage of that, then she is a bigger fool than I already thought her to be.\"\n\n\"Zander?\" Sophie said softly. \"Do you want her back? Darius will compromise if it is something you want. You know that, don't you?\" She asked the big barbarian of a man still feeling bad that she had caused all of this drama by embarrassing Mimi at the Jazz club. \n\n\"Even with a handicap I don't believe she would accrue enough points to move from the bottom of the point tally ladder,\" Zander sighed hating that with everything else going on tonight Darius and his little Angel had been brought into his drama. Henry had spoken to him about the dangers of sending Mimi back to where she came from and needing her to be safe for a little longer, and he had agreed to take her back under the condition that Darius and Sophie agreed to the reinstatement. \"It wouldn't be fair to the other women including Sophie, to give Mimi points she hasn't earned the same way they did and what of the girl who is removed in her place, if you give her this second chance?\"\n\nA glass flew across the room when he finished speaking and shattered against the wall behind his head. All heads swivelled to where Mimi stood seething and unrepentant. Picking up another glass, she readied to throw it, but the men had all moved to grab her as she howled like a banshee.\n\n\"Do you even know who I am? I am not some street corner prostitute! I am Mimi Venetta, and I am better than any of those stupid bitches out there,\" she screeched her arms flailing breaking the glass in her hand as she was subdued. Seeing the blood in her hand, the men backed off slightly and Aaron moved in speaking softly to her in a calming voice.",
        "\"Open your hand Mimi, let the glass go, you're bleeding,\" he explained, causing her to look down at the jagged stem of the wineglass embedded in her hand. With a loud shriek, she wrenched her arm free and embedded the stem in Darius's neck before pulling it out and swiping at Aaron before he disarmed her.\n\n\"You think I don't know who she is! You send me back to them, and I will tell the world where to find Frankie Calabrese's kid. She'll be as dead as her bitch of a mother within a week!\" she threatened as her screaming was muffled by a napkin shoved into her mouth by Byron now that she was restrained, face down on the floor with Zanders knee in her back. He'd taken off his belt to restrain her arms and looked over to where Aaron and Henry barked out orders to call triple zero and get an ambulance there and to collect Andrew and Reed from the ballroom as they worked to staunch the flow of blood from Darius's throat where the stem of glass had ripped a jagged line into his flesh.\n\nSophie watched it all in a state of shock, unable to move or speak as men flowed into the room from outside. It seemed as if everything was going in slow motion as Mimi was sedated and taken away. The ambulance paramedics arrived through the back entrance and taking one look at Darius's injuries wasted no time before loading him onto a gurney and racing out of the back entrance again. She felt hands grab her, and her face was pressed into a broad chest as giant arms surrounded her. Those gentle arms moved so that a hand stroked her hair and tried to soothe her. The room emptied and when she finally looked up, she found Zander watching her warily.\n\n\"Darius,\" she whispered her voice choked. \n\n\"Ash and Jayce have gone with him to the hospital. They will keep us updated. Come with me, and I will get you a drink,\" Zander spoke softly to her as if afraid she would break at any minute. \"The only thing we can do for Darius now is to make sure you win this thing and will be there when he gets home, do you understand?\" he said trying to pull her from her fugue even if only to argue with him. \n\n\"What? Dance when he is...\" her words caught on a half sob as they went to another private room. \n\n\"If you don't complete the required dances, you will be disqualified and out of the challenge and Mimi will stay in by default. Darius would kill us both if that happened and you weren't there when he got home. So, we will have a stiff drink and go and win this thing then get our asses to the hospital and make sure he is alright and can fly home with us,\" Zander said in a no-nonsense tone of voice. \"You don't have a choice unless you want to go back to a club like the one he found you in.\" There was no way he or any of his brothers would let that happen to this girl or Darius, but he had to try what he could to get her angry enough to fight for her place in this challenge.\n\n\"No, but, Darius...\" Sophie said.\n\n\"Darius will be good as new tomorrow. He is the strongest guy I know. I bet he is already trying to discharge himself,\" Zander chuckled. \"He always hated being injured, grumpiest arsehole in the world when he was restricted to bed rest after an injury.\" He tried for levity unsure of how to get her out of the state she was in and listening to him enough to want to fight for what was hers to win. \n\nSophie accepted the drink he gave her and downed it in one swallow regretting that move immediately as it lit her throat and chest on fire and made her cough. \n\n\"Medicinal brandy,\" Zander grinned and rubbed her back. \"Now we have to be the strong ones in Darius's place and go out there and win this thing so he can keep you around for a while longer. No disqualifications because of Mimi, do you understand me? I won't let Darius down like that, and I won't let you disappoint him either. Are you ready?\" He asked as a knock sounded on the door.\n\n\"You good?\" David asked.\n\n\"We're just fucking dandy,\" Zander drawled and pulled Sophie from her chair and guided her from the room determined to make her finish this stupid challenge so they could get out of here and check on Darius who had taken the brunt of what Mimi had intended for Zander himself. They walked from the room back into the ballroom when a man rushed over as soon as he saw them. \n\n\"Good grief, Ginger! I thought you went MIA on me. I have this friend who is dying to take you for a spin. He's not as good as me, of course, but he'll make you look good while doing it,\" Alexi gushed and signalled to another man. \"This is James.\"\n\n\"It's okay Zander. I heard you and understand what I have to do. I can do this. You check on Darius for me,\" she said sadly and took the hand being offered to her and walked out onto the dance floor with another stranger. Letting the cadence and beat of the music fill her she followed her new partner around the dancefloor without much thought beyond following the instructions he whispered in her ear and allowing him to pass her off to yet another friend as she moved from the waltz into the quickstep and again into the final Viennese waltz.\n\n\"When the dancing was finally done, she made her way back to her table and found Zander waiting for her his phone in his hand.\n\n\"He is stable and going into surgery. He couldn't talk, but he texted one word before they took him,\" Zander swiped his phone, bringing the screen alive and showing it to her. \"Win\" was printed on the screen next to Darius's name, then he drew up another text from Asher. \"All essentials intact but the rest is a mess, he's going to be okay, but surgery will tell how long it will take him to recover. Tell Sophie he said she has to dance and win.\"\n\n\"I should be there,\" Sophie whispered, not trusting her voice.\n\n\"No, you are exactly where you need to be as am I. This is what he wants and what will put his mind at rest while he deals with his injuries,\" Zander said gently pulling her into a tight embrace letting her rest her head against his chest again. He understood what Darius had seen in the girl right from the beginning, she was sweet and beautiful, but holding her in his arms like this. Nothing could have prepared him for how she would feel, and smell and sound as she sought comfort in his arms.\n\n\"I have an idea, you probably won't like it, but I guarantee Darius will and it will help him recover a lot faster,\" Zander said, leaning his head down close to hers. \n\nShe tilted her face up to his curiosity in her eyes, and their faces were so close it would have taken hardly any movement at all to close the distance and kiss her. He groaned straightening up determined not to cross that line while Darius was undergoing surgery to save his life. He'd shown Sophie only the texts meant for her. The truth of Darius's condition was far more precarious than what they had told her. Leaving the hotel, however, would put her in danger of being recognised again and there was no way he was allowing that. Darius would kill him if anything happened to her now.\n\n\"Come with me, we are going to make him a video he won't forget and win me a bet that will motivate him to recover fast so he can kick my ass,\" Zander chuckled and led her to the bandstand.\n\n*****\n\nNB: Thank you once again to LocoHerb who continues to support me with editing and his friendship. You're tops!"
    ],
    "authorname": "Helleon",
    "tags": [
        "attack",
        "ball",
        "ballroom",
        "bath",
        "dance",
        "new year",
        "watlz",
        "panic attack",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/14-months-05-new-year"
}