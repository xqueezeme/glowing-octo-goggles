{
    "title": "Camel Toe",
    "pages": [
        "\u00a9 2018 Chloe Tzang. All rights reserved. The author asserts a moral right to be identified as the author of this story. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the author except for the use of brief quotations in a review. \n\nOkay, this is my third story for the 2018 Valentines Competition and I do hope you enjoy this one too. (The other two are \"Hanky Panky\" and \"Screw Your Roses, Asshole.\" If you haven't read them yet, please do. I'm sure you'll enjoy). The other one I was writing, \"Fields of Gold\" was a bit too long and involved and it's not going to be finished for a while ... so in the meantime, enjoy ..... Chloe\n\n<center>* * * </center>\n\nIt's February 14th. It's my first Valentine's Day in America and I've been here six months and I don't have a boyfriend. Not because I haven't been asked out on a date, la! But the only guys that've asked me out on dates are guys from Hong Kong or China or Taiwan and it's not fair. I didn't come all the way here to go to College to date Hong Kong and China guys. I want to date a big blonde blue-eyed American guy like you see in the movies, la! It's kind of sad really and my housemates are all laughing at me coz they're dating Hong Kong guys and they think I'm being silly.\n\n\"Gweilo guys, they all got big cocks la! Split you in half, la!\" That'd been Cindy. So crude. She'd probably know though. She's so slutty. Reputation, la!\n\n\"Those gweilo guys, aiiyaaah, think because we're Chinese, we're so easy!\" Mandy. Mandy, she should know. Six boyfriends. Six months. So easy. So noisy too. Cindy and Shelley joke about her. Mandy's not even embarrassed. Not even worried if anyone sees her. Walked in once and she was doing it on the couch with her date. Not even stopping for a second. So shameless, la!\n\nShelley? \"No family here, I'm having fun, okay la!\" No need for me to say anything else. \n\nCindy. Mandy. Shelley. All have flowers and cards and chocolates and dates for Valentine's Day.\n\n\"I can set you up with a guy, Kinky. That Godfrey, he's so hot for you.\" That was Cindy, last night.\n\n\"No thanks,\" I'd smiled. Godfrey? No way. I'm not dating some guy from Shenzhen. Even if he does drive a Porsche. No way, forget it, la! I am not lowering standards. I came to America to go to college with my heart set on an American guy. Want my first guy to be so special. \n\n\"You got a date for tonight, Kinky?\" That was Mandy, this morning. \"Alistair interested.\"\n\n\"No thanks, I have to study,\" I'd told her. She knew I was lying. She smiled. Something for her to smile about, I guess. Seventh boyfriend.\n\nMandy is on Number Seven and me, not even number one. Maybe I am too picky. Maybe I have to do something but still, so sad. Wanting to date a gweilo guy so bad and no idea why I'm not being asked. So disappointing. Of course I am not going to bars and clubs. So easy to get picked up like that but I'm not that sort of girl. Romance. Flowers. Holding hands in the rain. Romantic dates. That's me.\n\n\"You'll never get laid if you wait for Mr. Perfect, Kinky.\" Shelley was so blunt.\n\n\"I don't think she's ever done it.\" I heard Shelley and Mandy talking about me a few days ago too. So rude of them.\n\nSo okay, I'm a virgin. I admit it. Of course I know what cocks are for. Virgin, but not stupid, la! I was giving my boyfriend back in Hong Kong blowjobs. That was so much fun, so enjoyable. Not having sex with him though. Saving myself for a blue-eyed blonde guy with a big cock. Must've read too many of my Mom's Mills and Boon. Ever since I am a little girl, I've dreamed about blue-eyed blonde guys. Not dreaming of big cocks of course, that is only recently.\n\nLast blowjob was back in Hong Kong. September, before I come here. Last sight of cock was six months ago on last morning in Hong Kong and no replacement in sight, la! Valentine's Day and I know what I'd like for a Valentine's Day present but I am so not lucky. No luck for six months now. So disappointing, la! But I am positive about not lowering standards. Gweilo guy or nothing. Blue eyes? Blonde hair? Those are nice to haves. Big gweilo is what is wanted. I'll take my chances on size of cock. \n\nMaybe look at feet though. Article I read said foot size and cock size correlated. I have no idea if this is true but I may as well take a chance. Only, so far, no chances to take. Anyhow, so pointless to think about this. So far, no gweilo guy has asked me out on a date so pointless to over think. I am just about saying yes to any gweilo guy who asks me out. If asked.\n\nOh Jesus, too much time thinking. I am late for class. Valentine's Day and no boyfriend. I am so sad, la! Walking so slow to class, la! Getting there almost late, la! At least I look so hot, I know that la! Dress to attract guys. This is not working so far, though. I know I am so attractive. Question is, why are gweilo guys not asking me out for date. My English is maybe not so good, maybe they just don't like Chinese girls. That's what my housemates say. So bitchy, la!\n\nToday I am ignoring winter weather. Wearing long coat and winter boots but leaving them in locker. Inside is heated and warm. Dressing to show off tight butt. My most attractive feature. Tight butt and long legs and short shorts. Tight shorts. Okay, I know my boobs are small. Small? Okay, I am being honest. Tiny. Maybe some American guy who likes butts and long legs and almost no boobs sees me and asks me on date. I'm hoping so much this works. Six months! \n\nWhat do they feed these American guys? Surely must be one that likes nice butt and doesn't mind small boobs and has courage to ask a foreign chinese girl out on a date. I have been reading all about Yellow Fever and liking this idea. White guys with Yellow Fever? Please. Ask me. I give you all the yellow fever you want. But nobody has asked. Except that white girl with buzz cut and nose ring and weird eye shadow. No lip gloss either. So scary.\n\nWalking into lecture hall, nobody even looks. I am so sad. Valentine's Day and no guy looking at my butt and okay, I know my boobs are way too small for an American girl, but still, such a hot looking butt. Somebody look, please.\n\n\"Check out that camel toe, dude.\" The two big guys I'm squeezing past to get to the only empty seat left are grinning at each other.\n\nHuh? I look down at the guy who's in my way. The empty seat's right beside him. I'm almost there. \"Sorry ... so sorry.\" My butt bangs the shoulders of the guy in the row in front of us. Aiiyaaah. \"Sorry ... sorry ... excuse me.\"\n\nCamel toe? That's so weird. Am I in the wrong class? I take the empty seat anyway, just about squeaking out loud at the cold vinyl against my skin. Last time I'm wearing short shorts to this class in winter. Heating or not, it's freezing in here and I'm dressed for central heating. Short tight shorts, So tight I am wearing a g-string so there is no VPL. Shorts and a tank top, with a bra of course and I wish now I keep my coat because this lecture hall is cold. \n\nThose shorts are so fashionable back home right now. Make your legs look so good when they're like mine, long and slender. Make your butt look so good when it's like mine too. Not so good when they've got the heating turned down and it's mid-winter. \n\nI look at the screen at the front of the lecture theatre, puzzled. There's no camel toe on the screen. Not even a camel's hoof. Or a camel. Besides, this is my biodiversity class. I hope it is anyhow. I didn't sign up for animal biology. I hope they haven't swapped classrooms and I didn't see the notice. \n\nI turn to the guy that'd made the comment, talking to the guy next to him. \"Excuse me, please.\" \n\n\"Yeah?\" He grins. Ohhhh, nice white teeth. Nice smile. Really nice smile. A smile that sends little shivers up and down my spine and has me tingling.\n\n\"This is Biology one zero seven zero, right? Discovering Biodiversity?\" I'd made that mistake before, missed one whole class a month ago coz I was in the wrong room. Also, I can't help noticing the girl on the other side is looking at a Valentine's Day card and smiling so for a moment I'm feeling rather sad. \n\n\"You got it, babe, that's what I'm here for,\" he says, holding out his hand. \"Discovering Biodiversity. Hi, I'm Zeke. Zeke Harris. Haven't seen you here before.\" He's still smiling and it's doing things to me. Nice things. \n\n\"I'm Kinky,\" I say, taking his hand, shaking. \"Kinky Ho.\" Nice hand too. Nice looking guy. Dateable in fact. This guy, he looks like he's got potential. Does he have a girlfriend? I know, at the start of the school year, a girl needs to move fast or the good guys get snapped up. Back home anyhow. I know it's the same here. Guys are guys after all. And I know I didn't move fast enough. \n\nHe's hunky. Totally this guy has potential. Nice muscles. Nice muscle definition and I wonder if he has six pack abs. Ooooh. And that nice white skin. Biodiversity is good right? I want to try it for myself. I'm definitely in the right class. I'm smiling at him. My nipples are all perky too and maybe it's not all the heating being turned way down coz somewhere else is feeling hot.\n\n\"Kinky Ho? I hope so,\" he says, smiling. Grinning. \"Where're you from?\"\n\n\"Hong Kong,\" I say, so puzzled. Why does everyone here say something like that when I introduce myself? Is this some kind of American in-joke or something? \"This is my first year at College here.\"\n\n\"When did you get here?\" He's really looking at me. Cool. Does he have a girlfriend? Eason and I broke up when I left to come here. That was okay, I hadn't been too serious about Eason anyway. But I do miss making out. Eason was my first guy like that, my only guy, making out, but I wasn't hung up on him enough to miss him. Missing the making out though, that was something else. I'd liked the making out with Eason. Very much, lah! Replacement needed, lah! No making out for six months. So sad, la! I'm just about wriggling on my seat now.\n\n\"Six months ago,\" I smile. My most flirtatious encouraging smile. Hmmmm. Definitely he looks good and he's smiling back. The lights fade.\n\n\"No boyfriend?\" My heart jumps. Maybe he's interested?\n\n\"No.\" I want to smile but I can't. So sad.\n\n\"Hey, Kinky, would you like to go for a coffee after class?\" he whispers. \n\n\"Sure,\" I whisper back just before the lecturer starts talking. Heart pounding now. The first time gweilo has asked me, maybe not for a date but coffee? On Valentine's Day. I hope he doesn't have a girlfriend. I'll ask him about that camel toe thing then too. I must have missed something somewhere. I better find out in case it comes up in the exam.\n\n<center>* * * </center>\n\nZeke's a nice guy. Really nice. I can't believe he shares so many interests with me. It's like I've met my soul mate, which is weird coz he's a gweilo and I've never thought of a gweilo like that before at all. He doesn't know a thing about Chinese people or food or anything Chinese at all except Bruce Lee and Jet Li. He asks all sorts of questions though and we talk and talk and talk. We spend about three hours in the caf\u00e9 just talking and I drank far too much coffee then he ends up taking me out dinner. \n\nI'm not exactly dressed for a romantic dinner date and neither is he but he takes me to a really nice bar and grill and we eat steak except he eats most of mine as well as his because it's huge and I drink a glass of wine and giggle a lot and we keep talking the entire time. When he asks me out on a date, I smile and say sure. Friday night. He's going to take me out to dinner. We settle on Italian coz I've never tried Italian food and I'm curious about it. I came here to try different things as well as to study. \n\nSpeaking of different things, so now I finally have a date with a hunky gweilo guy and I'm going to get to try Italian food and I'm totally smiling. Score one for Kinky Ho. And it's not just those shared interests. He's hunky in a way I've never imagined a guy being hunky. I mean, there are gweilo guys in movies and things but until I came here I'd never actually talked to any and he seems perfectly normal. \n\nBetter than normal actually and I'm finding him rather attractive. It's weird him not having black hair and there's that pale skin of course and that hair all over his arms but it's kind of nice. I wonder if he's hairy like that everywhere. I'd kind of like to find out. I checked his feet as well and, well, they're big but so is he and I can't help wondering about his cock and I know, I just know I'm going to give him a blowjob on Friday night and dinner tastes even more delicious.\n\nWhen his hand reaches across the table and holds mine, I can't help looking at it. Pale white skin against my ivory. The contrast sends little tremors of excitement through me. Nothing like when Eason used to hold my hand. Zeke's hand's so big and strong as well. Like him. He's so big. I ask him and he tells me he's two hundred and twenty. I'm one ten and I'm nine inches shorter than he is. I like it that he's so big, Eason was only an inch taller than me and he only weighed ten pounds more than me.\n\nIt's weird. I look at Zeke and with every glance, he becomes more attractive. Although maybe that's the glass of white wine. It was a big glass and I don't usually drink. I see little features I hadn't noticed before every time I look at him. The blonde hairs on his arms and peeking out the neck of his shirt. Freckles scattered across that white skin. His eyes, so big and round and that strange blue color. That nose, not a cute snub nose like mine. Aquiline. Prominent. Everything about him is big.\n\nI like that. I like everything about Zeke. I can't wait for that date on Friday, I'm so excited. The way he's looking at me, holding my hand, I just know he likes me. And okay, I'm not stupid. I asked. He doesn't have a girlfriend. So okay, la! I've already decided that if he wants to kiss me tonight, he's got the green light. Hook is in, not letting this one go.\n\n<center>* * * </center>\n\nHalf the evening's gone, it's getting late and it's time to go. Back to the apartment I'm sharing with my three housemates. We're all of us from Hong Kong, all of us in our first year. We hadn't know each other before we arrived, it was all networking back in Hong Kong. Social Media. It's the best! Zeke walks me all the way home and by the time we're half way back he's holding my hand. \n\nTurns out he lives two blocks over and I'm happy he lives so close. He comes up the stairs with me. He comes inside for a cup of tea when I ask him if he'd like to. Great! None of my housemates are in which is even better because, well, it's not that big an apartment. Three bedrooms but at least I have one of them to myself. Once he's inside the door, I ask the question that's been bugging me. The question that I've been meaning to ask him right from the start.\n\n\"Zeke, what's a camel toe?\"\n\nHe looks at me and he laughs. \"Kinky Ho,\" he says, smiling, kissing my nose. Aiiyaah, so cute thing to do. He kissed me. Well, my nose. It's a start. I'd definitely like him to kiss me properly. Okay, honestly? More than a kiss. He's a hunk and I'm really kind of curious about gweilo guys. I'm definitely missing those things Eason and I used to do together and honestly, I want to do more than Eason and I did. Not right away, of course, I'm not easy, but soon and Zeke has potential. So I give him that hopeful kiss me look that always worked on Eason.\n\n\"I love that name.\" He smiles. \n\nI giggle, smile back. I'm not backing away at all, I really want him to kiss me and I'm kind of looking up at him hopefully. What more do I have to do to encourage this guy? Doesn't he understand the look? Do I have to throw myself at him? I'm just about doing that now? Ask him? Maybe he thinks Chinese girls are too conservative or something and he's about to leave and he still hasn't answered my question or kissed me.\n\n\"Zeke?\" I say.\n\n\"Yeah?\" He's just looking at me and I know he likes me. He's got that look.\n\n\"Uh, you're taking me out on a date Friday night, right?\"\n\nHe smiles. \"Oh, yeah!\"\n\nOh god, I'm going to have to. I can't let him leave without kissing me. Bite the bullet, Kinky, okay la! Go for it, girl. He likes you or he wouldn't have asked you out. So I do. I say it out loud. I'm so shameless but I'm not letting this one slip off the hook. \"You can kiss me if you want to. I don't bite.\" I giggle. \"Well, I do, but that's later...\" Oh, so naughty of me.\n\nHe laughs and then I'm in his arms and he's kissing me and aiiiyaaaah, he's such a good kisser. I hadn't been sure what a gweilo guy would kiss like, but you have to start somewhere and this one is good. Like magic, la! For a big guy, so delicate, so gentle, his lips on mine, his tongue sliding into my mouth, gently probing, exploring, tasting, sucking my tongue into his mouth and my arms are around his neck. I'm pressed up hard against him and his muscles are so hard. Something else is so hard too and his hands are on my butt, pulling me hard against him and I'm moaning and shivering with excitement.\n\nEason never made me feel like this with one kiss. Eason never felt as big as the big thing that's pressing against me either and when Zeke's hands move me against him, I just about scream with the sheer excitement of it. But I need that question answered before I forget. It might be something important from class. What if it comes up in a test? \n\nBut oh my god, la! His kisses. Best ever, I tell you. I should have tried being kissed by a gweilo years ago. Maybe it's just that he's good but I don't care. If he kisses like this, he can kiss me anytime. Anyplace. Anywhere and I blush. So shameless to think that.\n\n\"Zeke,\" I moan, as his hands hold me tight. \"Zeke, what's a camel toe? You said something in class about a camel toe in class and I missed it.\" \n\nHe looks down at me and he smiles and his hands are on my butt and he's pulling me hard up against him. \"Camel toe? Well, you gotta look in the mirror, Kinky.\" \n\nHis hands turn me round to look at the full length mirror in our little foyer. His hands are on my hips. He's pressing against my butt now. So hard. My knees are jelly. For a moment I think of Eason and what we used to do together not so very long ago and how much I miss that already and I half close my eyes and just concentrate on what he feels like where he's hard against me. Just like Eason used to be except he feels bigger than Eason. A lot bigger. Split me in half big? My heart pounds.\n\n\"Look in the mirror, Kinky,\" he repeats, and I do, looking at his face above mine, looking at myself. Black tank top, tight little white short shorts, so figure hugging. Very sporty and brief, showing off my legs. And my nipples. So visible.\n\n\"Mmmmm,\" I smile. I look so good. Zeke's so hard that he's obviously liking what he's looking at too. I lean back against him as his hands slide up from my hips to my waist before doing what I've been imagining him doing for a while now and cupping my breasts. I shiver, half close my eyes as his hands gently hold me, his thumbs brushing my nipples. Thank god I'm wearing a bra. My housemates aren't home. Maybe we could make out for a while...? I think he wants to.\n\nHis hands run back down to my hips, my shorts. \"You want to know about camel toes, Kinky?\"\n\n\"Yes,\" I gasp, shivering, that hardness pressing against my butt. Oh, his hands are so good and I'm not thinking of camel toes at all. \"Yes, I do.\"\n\nOne of his hands leaves my breast, slides down. My eyes follow his hand in the mirror as it moves downwards. Over my stomach, down to my hip, inwards onto my thigh, his fingertips almost touching me where I'm already so wet. Wet the way I was when Eason touched me there.\n\n\"Camel toe?\" Zeke's smiling and I want to take his hand and move it to where I want him to touch me but I don't. I stand there and shiver instead, just looking at his hand as it rests on me and I'm melting inside. I can't believe how wet I am. ",
        "\"Camel toe? Well, it's a slang expression, Kinky.\" He kisses my head. \"You're, uh, wearing really tightly fitting shorts.\"\n\n\"Mmmm.\" I smile. Very fashionable shorts. Stretch material. Definitely tight. They're supposed to be very tight. Supposed to show off a girl's assets. Like my butt. And my legs. But what's that got to do with a camel toe and I'm losing my mind here.\n\nZeke's fingers move on me, a gentle caress that has me twitching. Reminding me of how much I liked Eason touching me right there. \"Very tight,\" he repeats. \"And if you look at where my fingers are touching you...\" I do and they're moving on me, touching me where I want him to touch me so much and my breath comes in a sudden gasp along with a flooding liquid excitement that almost buckles my knees. \"... you can see they fit so tightly I can see your pussy.\" His fingers brush over me and I'm so wet, so excited.\n\n\"Ohhhh.\" My face burns. I never noticed that before. You can. Oh god, that's just so embarrassing. And those guys in that class were looking at me. Right there. Zeke. He was too. \n\n\"And, well, those shorts are stretch fabric and they're tight and they're white so it's really easy to see the outline of your, speaking technically here, Kinky, your labia majora.\"\n\n\"Oh,\" I gasp. His fingertips are caressing my labia majora through my shorts as he speaks and I'm helpless. Quivering. Wet. So hot and wet. Wetter than I've ever been, even making out with Eason when he touched me and looked at me there. There's going to be a wet patch there soon. \n\n\"Ohhhh,\" I gasp again as one finger presses hard, pushes my shorts inwards and oh my god, I'm so wet and there is a wet patch where he's touching me and I'm sure he knows. I'm sure he can feel how wet I am and I just want to sink back and lie there while he does whatever he wants to do to me.\n\n\"Oh,\" he smiles. \"And as you may not realize, Kinky, the outline of your pussy under those shorts due to a combination of anatomical factors and the tight fabric, displays a shape that closely resembles the forefoot of a camel, for which the slang term commonly used here in North America is Camel Toe.\"\n\nHis hand cups me there, right between my legs. Right where I've been wanting him to touch me and I just melt all over again. \"And you, Kinky, are displaying a truly fucking gorgeous Camel Toe,\" he adds.\n\nOh. My. God.\n\nThat's what a camel toe is? Those gweilo guys. That's so terrible of them. Such bad thoughts to look at a girl and think that but I know guys in Hong Kong. Guys are the same everywhere. So exciting to think they were all looking at me there. Like Zeke now except he's not just looking, he's touching. I look at his fingers on me there and I just know he can feel how wet and excited I am and his fingers are pressing against me, moving against me. There. Oh yes, there. I look at his face and somehow he looks so good. So masculine. So attractive.\n\nI should stop him. We're going out on a date on Friday. We only met a few hours ago. I shouldn't let him do anything like this, not touching me like this, not until we've actually gone out together on a real date but oh my god his fingers are just so exciting and I can't resist just standing there and letting him touch me. He doesn't say a word. His breath is hot against the back of my head as he teases me, featherlight brushes of his fingers and I'm hotter and wetter with every touch and I can't stop looking at where he's touching me.\n\nHe's right. I'm not sure what a real camel toe looks like but my shorts are so tight and they cling to me and when I look, everything is outlined. You can see the shape of my sex so clearly through the thin stretch fabric and just looking at his fingertips tracing me there, I'm shivering with excitement. \n\n\"Didn't you know guys love it when you girls wear shorts like this?\" he says.\n\n\"Nooo,\" I gasp and it's hard to speak because his thumb is doing unspeakable things brushing across the fabric of my shorts where my clitoris is so swollen and sensitive and I'm just dying and how does he know to make me feel so good.\n\n\"They do,\" he says. \"You gave me a real eyeful when you slid past me in class.\"\n\nOh god, I did, I remember now and I was facing them because I know how short and tight my shorts are and I didn't want them getting a close up of half my butt. Because it's also obvious I'm wearing g-string panties because I didn't want to mar that perfect clinging whiteness with any visible pantie lines. So instead I gave them all a good long look at my camel toe and my face flames. \n\nMy sex. \n\nHow embarrassing.\n\n\"Ohhhh,\" I shudder, half closing my eyes.\n\n\"It's a very pretty camel toe,\" he adds, kissing the top of my head. Touching me. Cupping one breast, still brushing that nipple, which is so swollen and full that it wants to burst. My nipples. Oh my god. They're so swollen and full. They're enormous and they're pushing out against my cotton sports bra and my tank top and he's teasing one so he knows.\n\n\"It is?\" I gasp, looking down at his hand on me again. His cock is big and hard against my butt. \n\n\"It is,\" he says, \"and I want a good look at it.\" His hands turn me around to face him, ease me back against the hall stand and he's sinking to his knees in front of me.\n\nI half sit on the hall stand, my hands gripping the marble top as he kneels and looks at me there. Looks at my camel toe and my face is on fire. His fingers trace my sex through my shorts. His fingertips continue to brush like feathers over me. Ripples of pleasure wash through me and I'm so wet. So wet and so sensitive and Eason never touched me like this. Never had me so excited and on edge. Tingling and burning everywhere.\n\nZeke's fingertips trace me, both hands on me now, his thumbs slide over me, press and under that pressure, I shiver, acutely aware of how wet I am. Wet and slippery and so ready and I look down and watch him looking at me there. He's looking at my sex. My camel toe. That's just such a guy thing and so embarrassing but it's also so wildly exciting and I'm half sitting on the hall-stand shivering as he touches me. One of my hands lifts, reaches out, ruffles his short blonde hair which is so soft and fine and almost silky. He looks up, he smiles and then he leans forward and he kisses my sex through my shorts and panties. He kisses me right there.\n\nHis mouth presses against me where his fingers have been touching me and somehow he seems to know exactly where his tongue should press because it does, his tongue presses on my clitoris, moves against me and I can't help it. I clutch at his head with both hands and my hips jerk, I push myself against him as my heart pounds like a drum and my hands pull his head against me.\n\nMy mouth opens wide. I want to squeal and sob and cry out but my lungs aren't working and it's so hard even to breath. Eason never did anything like this. I've fantasized about a guy doing this to me but I never dared ask Eason and I'm just melting now and I know my panties must be soaked through. My shorts too and I'm shuddering with embarrassment but I can't tear my hands away from his head as his mouth moves against me, presses against me through my shorts.\n\nMy shorts move. His hands are on my hips and he's pulling my shorts down and neither of us says a word. I can't talk. It's all I can do to breathe. My hands won't release his head and he's kissing me there as he tugs my shorts downwards. Any second now he's going to expose my sex to his eyes. To his mouth. I should stop him. I should. I really should. We've just met for goodness sake.\n\nHis breath puffs against my skin. His hands continue to peel my shorts down. Further. My heart threatens to choke me as his lips touch my skin at the base of my belly. My heart threatens to choke me but my hands rest on his head, unresisting, as his hands hook my panties down together with my shorts and I know what comes next. \n\n\"Ohhhh.\" I look down and I sob as his hands do exactly what I know they will. \n\nThey tug my shorts and my panties down and expose my sex to his eyes. I do nothing to stop him and I'm so easy for him, I know. We haven't even actually dated yet and I'm letting him do this to me. I know that as his hands pull my shorts and panties all the way down to my knees and he's looking at me there. Looking at my sex and I'm so wet I can feel little wet trails running down the insides of my thighs and my labia are all swollen and sensitive and I'm so so wet and I know I'm not going to stop him. I don't want to stop him.\n\nI should stop him.\n\n\"You're beautiful,\" he breathes, his breath puffing against my sex. Just the air moving across my skin there where I'm so sensitive sends shivers and ripples through me. His hands work my shorts and panties down to my ankles, he lifts my feet one at a time, eases them completely off me and I'm naked from the waist down. Naked and my sex is exposed to his eyes. Completely exposed because my sex is depilated. Completely. Eason liked that so I did it for him, not that there was much to remove. I like it myself so I've kept doing it.\n\n\"Ohhhhh.\" My hands clutch at his head as he kisses me there. His mouth. On my sex. Where I'm so wet and slippery and excited and so acutely sensitive. My heart is beating so fast it's threatening to explode as his mouth seals itself to my sex. His tongue probes my slit and he's tasting me there and I'm dying. Dying of excitement and embarrassment and humiliation and pleasure and I'm helpless, looking down, my hands holding his head, shuddering as he does what I've always fantasized about a guy doing to me.\n\n\"Ohhhhh.\" Jello. My legs are turning to jello as his hands take control and move my feet wider apart, exposing more of me to his mouth and my face is flushed bright red. \n\nI'm gasping for breath, I'm so ashamed of not stopping him, of exposing myself to him like this but I can't resist his mouth on me. His hands. I move willingly for them. My hands stroke his hair as his tongue slides across my sensitive membranes, as I shiver and melt against his mouth. On his tongue where it slides in me. Oh my god, he's licking me, he's tasting me and I can see his tongue when he lifts his mouth from me and licks his way along my slit instead and I can see my labia separated by his tongue. See and feel simultaneously and it takes all my self-control not to push myself at his mouth.\n\n\"You're delicious,\" he says, his mouth lifting from my sex long enough to speak. Only just long enough and then my hips are jerking as he sucks on me and licks me at one and the same time. I want to scream as his tongue finds my clitoris and flickers over it, a rush of pleasure overwhelming me and then he's standing and somehow he's worked his jeans and his underwear off and his cock juts upwards and outwards, brushing against me where I'm so wet and ready for him and as soon as I see him I know I want him. I want his cock.\n\nI look down at him and there's that sudden shock at his nakedness and the sight of his erection but oh my god. It's big. It's so big. It's huge. Long and thick. I mean, I thought Eason's cock was big when I first saw it and it was big when I gave him those blowjobs, but then I'd found myself wondering what a bigger cock would be like. Looking down at Zeke's cock, it kind of dawns on me that I'm about to find out. Dawns on me the way an avalanche does. A sudden rush of awareness that he really is intending to take me. With that ... that ... that monster.\n\nHe reaches out, he takes one of my hands, he places it very gently on his shaft. His fingers curl mine around his rigid thickness and the feel of his girth almost has me sagging to the floor. Silky skin over steely hardness, so thick my fingers won't encompass him. Long, so long. How could this possibly go inside me? My fears and my trepidation mean nothing to Zeke. He moves in my hand, his hips drawing back, pushing towards me so that he moves under my fingers and instinctively I guide him towards where he seeks admittance.\n\nMy hand guides him to where I'm so wet and ready, my labia swollen, parted, waiting for him. I watch, I hold him, I guide him to me, shivering with excitement as his cockhead brushes against me. It's huge. Swollen. Filling the gap at the juncture of my thighs where it presses lightly against me and my wetness coats his tip. I can't take my eyes from his cock. So long, the head swollen and dark, the blue veins along the length of him and I'm a little scared to let go of him. It's going to split me in half.\n\nHe's so hard. For a moment, just a moment, I stroke his length with my fingers, moving my hand on his shaft the way Eason liked me to do. I can tell from Zeke's breathing that he likes it just as much as Eason did. Zeke's cockhead moves where he touches me, slides against my labia and the sudden pleasure as he brushes against me holds me enthralled. I want him, I know that. I'm scared of his size but I want him so much and I know I'm ready for him. I can't tear my eyes from his cock through.\n\nIt's a gweilo's cock. It's a strange pale white with a reddish-purply head. It's huge. Looking at him, I'm shivering. Trembling. Limp. A finger under my chin tilts my face up so that I'm looking up at him, looking up into his eyes instead of at his cock. His mouth finds mine, he's kissing me. Kissing me softly, gently, tenderly and I know I want him. He looks into my eyes as he kisses me. His mouth lifts from mine, his lips brush my cheek and my noses as my hand slowly strokes his length.\n\nIt's huge. I'm scared of it. I want it. Will it fit inside me? Will it hurt me? It's so much bigger than Eason's. Thicker and longer and it's like a warm steel bar covered in soft velvet.\n\n\"I want you, Kinky,\" he says.\n\n\"Ohhhhh,\" I moan, my hand stroking him. Take me then, I'm not sitting here saying no. Eason would have already been inside me. Any Chinese guy would've. What's keeping him? I'm scared, I'm excited. I'm terrified. I want it. I want him.\n\n\"Kinky,\" he breathes, \"I really want you.\"\n\n\"Ohhhhh.\" I know he does. Why isn't he doing it to me? I want him to take me.\n\n\"Ohhhh,\" I moan again. And this time I get it. That Campus Clarity course we all had to do back when College started. Sexual Consent. That was it. He's asking me? He wants me to say yes? God, that's just so embarrassing. Any Chinese guy would be doing it to me by now. A girl in my position? Obviously she's consenting. Any Chinese guy would know that. He's a gweilo though. He doesn't know that. And I want him. I want it.\n\nI stroke his cock, urge him wordlessly to take me. His cock, it feels so good there. Huge, but good and my labia are parting for him, sliding on him and I'm shivering as he brushes me there. He's so big and I look so small but I can't help myself. I want to feel him inside me. I want him to do it to me.\n\n\"Ohhhh...\" Moaning.\n\nHe still doesn't push it into me. I'm going to have to say yes. Oh god. This is so embarrassing. I'm excited, I can't wait. I need it. I need it so much. \"Zeke,\" I moan. \"Zeke.\"\n\n\"Kinky,\" he breathes.\n\n\"Please,\" I moan. I can't look him in the eye. I can't say it. A good girl doesn't ask for sex. She doesn't say yes. Eason would just do it to me. I wouldn't have had to embarrass myself with Eason. A good girl doesn't say yes, ever. Not the first time, anyhow. But I want Zeke so much. \n\n\"You want this, Kinky?\" he breathes and he pushes. Pushes himself against me and I feel myself part for him. I'm opening for him where he pushes against me, where my hand guides him to me and oh god, his cockhead is so big but my fingers hold him to where I'm so ready for him. \n\n\"Yes,\" I sob, acquiescing to the inevitable. Embarrassing myself. My cheeks flame and I want to close my eyes with the shame of it but I also want to look down and see where he's pushing against me. I do want this. I want this enough to tell him so. \n\n\"Yes, Zeke .... Yes....\" He's pushing, he's easing himself into me and I'm opening. I'm like a flower, my petals opening to the sun but his cockhead is so big. It feels twice the size of Eason's. I'm stretching for him and oh god, this my first time and it's with a big gweilo guy and it's like a dream. He's looking down at me where he's entering me and so am I. Both of us, and I let go of his cock, I reach down with the fingers of both hands and part myself for him.\n\nHe pushes, his cockhead brushing my fingers, pushing against me as he slides one arm under one of my legs, behind my knee. He repeats the movement with his other arm, his arms lift my knees, opening me at the same time has his hands slide behind me to support my back and he pushes. Pushes hard.\n\n\"Uuuughhhh.\" My head jerks back, bumping the wall behind me, my hands clutch at his arms. My legs lose all their strength, hanging on his arms as his cockhead stretches me wide and oh god oh god oh god it's big. It's really big, stretching me and then stretching me some more and how can it fit? How?\n\n\"Nnnnnughhhh.\" It fits but it's like someone's taken a large firm plum and somehow jammed it inside my sex except that the plum's attached to rigid shaft of male flesh that's jutting into me and stretching me around its thickness where he enters me. I close my eyes, shivering, trembling, panting for breath. My hearts doing about two hundred a minute and I know he wants to get all of him into me but how will it fit? How?\n\n\"Hhhuuuuggghhh.\" I half-groan, half-grunt, jerking up, my back arching against his hands as he pushes. \n\n\"Owwwwwww.\" Something inside me hurts, a sharp pain and I know that must be it.\n\n\"Kinky?\" He pauses, breathing hard, looking down at me and he's looking so concerned. \"Is this ...?\"\n\n\"Yes,\" I moan. \"Don't stop. Don't stop.\"\n\nHe doesn't and inside me, I stretch around him as his cockhead thrusts into me a little further and it hurts but I want it and I like that hurt. Excitement ripples through me. His cock, it's big. It's huge actually, it's stretching me inside and I want more. I want all of him in me and I'm so hot and wet and excited where I clasp him inside me.\n\n\"Oh yeah, Kinky,\" Zeke groans. \"You like that? You want more?\"\n\n\"Uhhhh,\" I huff as he doesn't wait for an answer. As he gives me more. His cockhead stretched my inner walls around his girth when he moves in me. I'm so wet, so slippery, his cockhead slides in me, stretching me and sliding up in me. He eases out, pushes inwards, consummate friction within me. His cockshaft moves through my entrance where I'm spread around him, clasping him where he enters me so that I shudder again with the pleasure of what he's doing to me.\n\n\"Kinky,\" he groans and as he moves in me, his mouth searches for mine and I offer it to him and he takes possession of me, takes possession of my mouth with his as his cock eases inwards, outwards, inwards, outwards, never ceasing, ravishing me with pleasure. \n\n\"Zeke,\" I moan when his mouth lifts from mine at last and he gasps for breath. \"Zeke... Zeke\" and I try to squeeze him inside but I can't because he's just so big and my sex just spasms wildly on him.\n\n\"Fuck,\" he groans as I clamp down on him inside me and even though I do, he doesn't stop moving. He pushes inwards against the tight resistance of my channel and now it's my turn to groan helplessly as he forces himself higher inside me. Oh my god, a lot higher and he's stretching me as he moves into me and I'm sagging limply back against his hands, helpless as half his cock disappears inside me in that long forceful thrust. I'm transfixed. Helpless. Hanging on his arms and hands as he holds me on the edge of the hallstand.\n\n\"Nnnnuuhhhhh.\" I can't move. I can't do anything except hang in his arms as he pauses with half of his cock inside me. I can't tear my eyes away from the sight of him going in to me either. I never imagined I'd be able to watch a guy's cock go into me, not like this. Now I can see it and feel it at the same time and I can't stop looking and he's huge there.",
        "\"Uuuuhhhhhhh.\" I can hear myself groaning as well. I can't seem to stop. It's how it feels inside me. Enormous. Pressing against me everywhere inside and I can even feel the shape of him in me where he forces my channel to expand around his thickness and I can't believe what it feels like. I want all of him in me and I'm scared but I'm so excited as well.\n\n\"Nnnnnuhhhh.\" It's all I can do to breathe and his cock, it's joining him to me. So thick where he enters me, his girth filling the juncture of my thighs and I can see myself stretched around him and so can he. We're both looking down, our eyes catch each other's and he smiles at me. A flicker of his lips as I groan again.\n\n\"So pretty,\" he breathes, looking down at me again. \"You're so pretty.\" Then, breathing hard, \"are you okay, Kinky?\"\n\n\"Yes,\" I half-sob, half-moan. I'd be breathing hard myself if I could breathe properly. As it is, I'm just panting. \"I'm okay ... don't stop ... don't stop .... I want it.\" I do. I want it very much but I can't do anything. I couldn't if I wanted to, I'm limp. Limp, helpless, there for him to take. I want him to take me. I want ... \"All of it,\" I sob, scared a little at my own words. \"Give me all of it ...\"\n\n\"You're so tight,\" he groans as he eases back a little, pushes into me a little more and now he's moving, again and again. Small movements that're driving me insane and we're both watching, both looking down as his cock eases in a little, pulls back, eases in. Again and again and I can't help it, I'm squeezing down on him inside me as his cock edges infinitesimally higher in my channel with every movement and it's so good.\n\n\"Uhhh,\" I groan. \"Uhhh.\" I'd like to say more but the words won't come. Only the little groans and moans that escape my mouth without any conscious thought as my body responds. I reach down with one hand, my fingertips touch him where he enters. I touch myself where I'm stretched around him, shivering. My fingertips explore as he eases into me, sliding in my wetness on his shaft as he emerges from me, just a little, before he goes into me again.\n\n\"Jesus, Kinky.\" He gasps as my fingers brush his shaft, caressing him where he isn't inside me. \"I have to ... I have to.\" He thrusts into me more forcefully as I brush him again and again.\n\n\"Uhh ... uuuhhh ...uuhhhh.\" I hang in his arms and hands, taking more and more of him inside me and my fingerstips are on his shaft as he pushed into me, feeling him move, feeling my own wetness on him as he emerges. Shuddering limply, panting for breathe, slippery tight around him as he thrusts and thrusts and thrusts. Higher and higher inside me, more and more of him entering me and I'm stretching inside, stretching and his cock is touching me so high inside now, touching me where I've never imagined being reached and Zeke's cock is forcing me, filling me, there's only an inch of him left and I can't help wondering if it will all fit inside me.\n\n\"I have to, Kinky,\" he groans, \"I have to\" and he's moving faster as well as pushing into me.\n\n\"Uhhh ... uhhh ... uhhh,\" I groan. Of course he has to. Just like I have to give him what he wanted and I want to tell him that but I can't. I can't speak. There's no words to describe what I'm feeling, what I want. I want to tell him I'm there for him to take, that I want him to take me, to use me, to do what he has to do to me, to fuck me any way he wants but all I can do is hang in his arms and look at him and groan as he thrusts himself into me.\n\n\"All of my cock,\" he grunts. \"Take all of my cock, Kinky,\" and he's really working to make sure I do and oh god, it's like he's inside me and reaching for my heart or something. I know what's happening to me. I'm being impaled by his cock and now I know what that means and he forces himself all the way into me. His cockhead so high inside me and I hang their, quivering. Fucked. I'm so fucked.\n\nCompletely fucked.\n\n\"Aaaahhhh ... uugghh ... oooohhhh.\" I can't say anything else, I'm just shuddering and groaning. My mind is a complete blank. All I can do is exactly what I'm doing. Lean back against the wall shuddering as I look down at where he's pressed up against me and hang in his arms. He's so strong. His hands are behind my back, supporting me. His arms are under my knees, holding them up so that they're drawn up almost to my shoulders.\n\nI can see where he's pressed up against me. He's inside me. All of that huge cock is inside me. Big and thick and long and hard and he's filling me inside and I can feel him in me. Stretching me around him and it's impossible that it's all in me but it is. Every inch of it and all I can do is hang limply in his arms and experience the sensations that ripple through my body.\n\n\"Are you okay, Kinky?\" His face looks down at mine, he breathes the question.\n\n\"It's big,\" I gasp, squeezing him inside me, an involuntary muscle spasm that brings a gasp from him. \"It's so big in me.\" Oh Jesus Jesus Jesus it's not big, it's huge. That flared cockhead stretches me inside and I can feel myself stretched around him everywhere he's inside me and I can't move, I can't do anything except wait for whatever he wants to do to me next. I do nothing, I hang limply in his arms, impaled. Eason's cock had noting on Zeke's. Now I know what feeling completely fucked really means. \n\nI'm fucked. I completely fucked and now I know what that feels like.\n\nI love it.\n\n\"Ooohhh.\" He does it. He moves inside me, a gentle easing back an inch or so. Nothing more, but I see his shaft emerge from me, drawing back, glistening wetly, my labia clinging pinkly to him as he eases himself outwards.\n\n\"Uuuhhh.\" I watch his cock slide back up inside me. I feel it. That thick intrusion thrusting up inside me, sweet friction against the walls of my passage as he fills me again. \n\n\"Ohhh ... uhhhh ... oohhh ... uhhhh.\" Slow steady movements, again and again, his cock sliding thickly in and out of my body. I watch. I can't tear my eyes away from his cock as it moves in and out of me. Now, now I'm seeing and the sight is hypnotic, his thick white cockshaft sliding in and out of me. White skin contrasting with the pale ivory of my skin where he joins me. Solid hardness penetrating up inside me and I want to see more of him. I want to see all of him.\n\nI reach out with my hands, moaning, running my hands over his shoulders, his arms, those solid muscles, unbuttoning his shirt with fumbling fingers as he moves in me. I want to touch his skin, see his skin, run my fingers over his body and I do. I manage to get his shirt undone and I touch his chest, run my fingers through that thick curly hair as he fucks me slowly.\n\nA key in the lock. Zeke stops moving, his cock all the way up inside and I'm shivering as I cling to him, my legs held up by his arms. His hands are under my butt. Without any hesitation he lifts me easily. Effortlessly. Turns to walk with me and I want to cry out with the pleasure of his cock inside me as he moves with me.\n\n\"Kinky,\" Zeke breathes in my ear. He nibbles on my ear, sending exquisite little shivers racing through me. \"Where's your bedroom?\" He's not worried at all. I am though. I'm not Mandy. I'd be totally embarrassed if my housemates saw me like this.\n\n\"The one at the end,\" I gasp, watching the lock turn, heart pounding. Jesus, it really must be one of my housemates and I don't want them seeing me like this. \n\nThank god the lock sticks. Zeke moves fast. I'm looking over his shoulder as he carries me down the hallway. I see my shorts and panties lying on the floor along with those shorts he was wearing. And his boxers. The door's opening but before I see anyone we're in my bedroom and he's kicked the door closed behind us and he's walking me two steps across the room to my bed before he lowers me down and moves with me. All with his cock still impaling me and I don't want it any other way.\n\nNeither of us says a word as he adjusts himself on my bed. On me. His thighs move, pushing mine back and I draw my knees back. Draw them back as far as I can until they brush his ribs, my heels resting against his hips. His body's big and muscular and heavy but he's supporting his weight above me, touching me but not crushing me and his cock's so big inside me. I feel every inch of him within me and he's stretching me everywhere.\n\n\"Hhhhuughhhh,\" I half-groan, half-gasp, my hands resting on his sides as my thighs cradle him.\n\n\"Are you okay, Kinky?\" he breathes, one of his hands brushing my hair back from my forehead. His lips brush mine, he's holding himself still inside me and I'm rippling around him where I clasp him within my body, my sex doing a desperate little dance on his cockshaft. His huge hard cockshaft and I can feel him high inside me, deeper within my body than I ever imagined anything could go.\n\n\"Uuuughhhh,\" I groan, my back arching upwards just a little in that desperate need to accommodate him. To adjust to him. To take all his cock. \"Nnngguuhhh ... Zeke ... Zeke,\" I gasp. \"You're so big ... it's so big in me ... I can feel it all the way up inside me ...\"\n\nHe smiles. He smiles and he pushes a little and oh god, I feel his cock push even deeper, push another half inch into me and now he's pressed up hard against me where we join.\n\n\"Too much?\" he breathes, kissing my nose, my lips, his lips brushing gently across me.\n\n\"Uuughhhh,\" I groan, and my toes want to curl. My feet rise higher into the air as I somehow draw my knees back even more than they already are and now my feet are pointing upwards at the ceiling and I can see them over his shoulders. I reach up with my hands, clasp my ankles, pull my ankles back, stretching myself, forcing my own exposure to him, giving him more. Giving him everything.\n\n\"Fuck,\" he groans and his cock seems to edge even further up inside me and now he's pushing against something far up inside me. Pressure. It doesn't hurt but his cockhead pushes against me inside and it must be my cervix and I can't believe how big his cock is. How big he is inside me. Long and thick and filling me completely.\n\n\"Oh fuck,\" he groans again and his big blue eyes are wide and as blue as a cloudless summer sky as he begins to move inside me again. His cock eases outwards, eases back into me and my hands cling to my ankles as his length moves thickly through my entrance. Exquisite friction as he eases out, exquisite friction as he eases in and then that pressure again as his cockhead butts against me deep inside.\n\n\"Nnnughhh.\" I've never felt so full, so stretched. His cock fills me hugely, fucks me thickly. A long slow sliding spear of steely male hardness that thrusts into me and groaning with the exquisite pleasure of my surrender, I take it all. I take it willingly. Eagerly. I take it as his thrusts become harder, more rapid, more demanding. \n\n\"Give me your hands,\" he grunts, continuing to fuck me.\n\nI release my ankles. They fall gratefully to rest on the small of his back as he rides me, as he takes my hands in his and pins them to my bed above my head. He's fucking me harder and harder and it's so unbearably good and I revel in what he's doing to me. Revel in his cock and those long thick slides so far up inside me, his massive cockhead stretching me inside with every sliding thrust and his body heavy on me, moving on me, against me, in me.\n\n\"Yes,\" I sob. \"Yes ... yes ... yes...\" Whatever he wants. There's only one thought in my head and that's to be so good for Zeke. He's riding me, he's fucking me and I want to be so good for him. His face fills my vision, his body dominates me, controls me and I've only just met him today but I know I'm his. I'm his to fuck and he's fucking me so good. This is so much better than I dreamed of and I want it.\n\n\"Kinky,\" he groans, his hands pinning mine to the bed above my head. He's heavy, his body pins mine. His cock impales me. Again and again he impales me. Faster and harder.\n\n\"Kinky.\" He's hammering his cock into me, his body slapping up against mine with every thrust. I'm groaning and sobbing and crying out and I can't help it. My bed's groaning and creaking and banging the wall. Zeke's grunting with every thrust and I don't care if all my housemates as well as the neighbors can hear us. I just want him to keep doing it to me.\n\n\"Uhhh,\" I groan. \"Uhh ... uhhh ... uhhh.\" I want to scream, I want to sob and cry out and beg him to fuck me harder but I can't. I can't do anything except huff out little groans as he hammers the breath from my lungs with every pile-driving thrust of his cock deep up inside me. All I can think as I stare up at his face over mine is that he's fucking me, he's fucking me, he's fucking me so hard, he's fucking me so good and I want it, I want it, I want it.\n\nI thought my first time would be making love. It's not. It's fucking. I'm being fucked. Zeke is fucking me and I'm not thinking of anything except Zeke on me and his cock thrusting up inside me, thick, hard, deep. Everything is sensation and a rising tide of excitement and pleasure that's sweeping me up and carrying me as he fucks me on and on and on. Long hard hammer-thrusts that fill me again and again.\n\nHis cock penetrates me at the juncture of my thighs, endlessly repeated hard wet thrusts that fill me thickly, stretching my sex around his length, that flared cockhead shaping the inner walls of my channel to his contours as he touches me inside where I've never been touched before. So deep, so hard, so thick. So much enjoyment to be had from his big white cock fucking me. Taking me. Using me.\n\n\"Kinky,\" he groans again, his eyes looking down into mine. \"Oh fuck ... fuck ... Kinky...\"\n\n\"Yes,\" I want to moan, \"fuck me ... fuck me...\" But I can't moan anything. All I can do is huff \"ughh ... ughh ... ughh\" as he fucks me and it's so good that my heels are beating against the small of his back as I urge him on with helpless excitement, wanting what I know I will eventually get but wanting this to continue on and on for as long as possible before it happens.\n\nIt does. On and on and on and I welcome his thrusts, surrendering myself to him. Zeke's eyes bore down into mine, his mouth sizes mine, his tongue dominates and fills my mouth, making me his just as his cock bores into me, drills into me, hammers into me, pile-driving thrusts hammering me into total submission to his desires, to his body, to his taking of me and I've submitted. I've surrendered. I'm his. \n\nOn my bed, his body rides me. I'm mounted. I'm taken. I'm used. I'm fucked. I'm so completely fucked and used, naked beneath him, my mind now empty of everything except those sensations as he has me. His cock thrusting up inside me, that thick length ramming in through my entrance where I'm clasped around his girth, stretched like a rubber band. His cockhead forcing the resistance of my channel with every thrust because I'm so tight in him.\n\nEvery vein, every curve, every inch of his cockshaft presses against my inner walls, shaping me to him as he moves inside me. Shaping my slippery sheath for the use of his cock. Taking me, his muscular thighs hard where he spreads me wide for his taking. His chest crushes down on my small breasts, his mouth crushes down on mine as his hammer-thrusts jolt my body, crush me down onto my mattress, causing my bed to groan and creak.\n\n\"I'm close ...\" he grunts, his mouth lifting from mine. His body straining, muscles so tense as he moves in me more slowly. \"I'm close, Kinky... do you want me to...\" \n\nI know what he's asking. He's not using a condom but it's kind of okay. I should have, he should have but it was all so sudden and I'm using contraceptives. I started when I came here thinking about a boyfriend and I didn't stop taking them coz I thought maybe I'd get lucky because, well, I was planning on a gweilo guy doing me, just not anticipating so long but I've been taking them. But I don't think of any of that, I just know it and I know what I want.\n\n\"It's okay,\" I sob, desperation forcing the words out, thick and clumsy on my tongue because all I want to do is sob and moan and cry out my pleasure in wordless excitement. \"It's okay ... don't stop.\" Because I don't want him to. I want to experience everything, I want to feel him cumming inside me. I want that so much and somehow I cross my ankles behind his back and I tighten myself on him as he fucks his cock up inside me.\n\n\"Oh fuck,\" he groans, stiffening and I could swear his cock grows larger and harder inside me. He's a steel bar inside me now, spearing me remorselessly and now he's groaning with every thrust and so am I. Wordless noises of pleasure and excitement and desire and I know he's close. So close and I want him too and I want me too as well and I pull myself into him.\n\n\"Nnnnnnggghhhhh,\" I groan, my head arching back as that pressure inside me builds. His cock drives into me again and \"Nnnnnnghhhhhhh,\" it's so good and \"nnnghhhhhhh\" I want it and he gives his length to me hard and that wave crests and breaks and I scream out loud as I'm swept away.\n\nIt's too much, far too much, a wave of white hot light that explodes from somewhere inside me where his cock frictions against the walls of my channel and I'm consumed and swept up in a wave of pleasure that obliterates all thought. I'm a helpless little toy swept up in that wave and his cock is pulsing and throbbing inside me, his cum spurts into me, flooding my channel with his semen and even in the midst of my own climax and share his excitement, his mindless pleasure as his culmination takes him and he empties himself into me in long juddering spurts that at the last leave him spent on me even as my own orgasm goes on and on and on before slowly fading away.\n\n<center>* * * </center>\n\n\"I've never done anything like that before,\" I say at last, more than a little stunned at both the intensity of that orgasm and that I'm in bed with a gweilo that I met this afternoon for the first time. In bed and we've made love and we're going on a date on Friday. It's supposed to be the opposite way round but I'm not sorry at all. I'm just glowing.\n\n\"Mmmm,\" he says, finally propping himself up on one elbow beside me and smiling down at me. \"Like what? Making love?\"\n\nI giggle. Stretch. Enjoy the way his eyes look over me even though I'm so sweaty and, uh, I do need that shower. Badly. I need some tissues even more and he knows that without being asked and passes me a handful from the box on the bedside stand. That's so thoughtful of him and I take them gratefully. \n\nSmile up at him as he watches me. \"Silly. I had a boyfriend back in Hong Kong. Just, I never met a guy and went to bed with him all in one afternoon.\"\n\n\"You don't still have a boyfriend do you?\" His expression is comically anxious.\n\nI have to giggle again. I can't help it. \"No, of course not. Not after I came here.\"\n\n\"I was hoping there was an opening.\"\n\n\"Do you want the position?\" I'm smiling now. I mean, this is all in the wrong sequence and I'm kind of shocked at myself and at how easy I've been for him but what can a girl do? I'm just wrapped up in that afterglow, happy, contented, golden. He's such a hunk. It's all I can do not to roll him on his back and climb on top of him. In fact... that's definitely a thought.\n\n\"If it's open,\" he says, taking me in his arms, kissing me thoroughly. Very thoroughly. \"I'm available for the position.\" My arms slide round his neck and I do, I push him onto his back and he understands what I want and he goes easily, his hands holding me as he moves so that I end up lying on top of him, looking down into his big blue eyes. I'm kind of wet and his stuff, I can feel it trickling down my inner thighs, tickling me a little and it's icky and I hope he doesn't mind. He doesn't seem to.\n\n\"It's all yours,\" I say, and now it's my turn to kiss him. Very happily. \"No further applications will now be considered.\"\n\n\"Consider the position accepted,\" he says between kisses. \"Girlfriend.\"",
        "\"Boyfriend,\" I say, smiling, happy. This is so cool. Finally. Finally I have a hunky blonde haired blue-eyed gweilo boyfriend who knows how to drive me out of my mind. There's something to be said for a test run. No disappointment here, that's for sure. Altho my Mom and Dad might not be too happy that I'm dating a gweilo guy. But hey, it's not like I'm going to tell them we're getting married. Anyhow, who knows how long he's going to last. It's not like I'm in love with him. At least, I don't think I am.\n\nAnd, uh, maybe I should get to know him a bit better before I start thinking silly thoughts. Who knows how serious he is about me. I have no idea. I'm overthinking all of this, I know. But the way he's touching me, I just know he wants to do it with me again. And really, I'm not opposed to that at all. \n\nI wonder if he'd like to stay the night. Sometime, I'll have to go out and get our clothes. That's going to be a bit embarrassing, but on the other hand, my housemates are going to be so jealous that I'm hooked up with a hunky blonde one too. And on Valentine's Day too. \n\nHow romantic! Yaaaaaay for Kinky.\n\n\"Want to have a shower with me?\" I gasp as his fingers touch me where I'm all excited. And messy. Definitely messy.\n\n\"Sure,\" he says, kissing me again. And again. His fingers are doing terribly exciting things to me.\n\n\"Okay,\" I gasp, sliding of him, standing up, cupping myself with those tissues again as gravity does its work and there's a sudden flow of wetness there.\n\n\"Aiiyyaaaahhh.\" I make a mad dash to the shower. Zeke follows me in as I turn the water on. He's very quick with the soap, washing me everywhere. Absolutely everywhere. His hands are to die for. When I wash him, he gets hard really quickly. So big and hard. Wonderfully hard. My soapy hand strokes him, my other hand soaps his balls, enjoying the expression on his face.\n\n\"I want to do you again,\" Zeke says, hands turning me to face the shower wall. \"Put your hands here, Kinky.\"\n\nI do. I'm eager to do what he wants me to do. He does what I know he wants to do to me. It's exactly what I want him to do.\n\n\"Uuugghhhhhh.\" I jerk upwards on my toes as his cock presses up into me but his hands hold me, irresistibly pull me back down onto him as his cock surges up inside me. God, he's so strong. His cock's so big. So deep inside me. Filling me full. Splitting me in half? Not quite and I love it. I love it. I love what he's doing to me.\n\n\"Happy Valentine's Day, Kinky,\" he grunts as his cock fucks me hard and I can't say anything because I'm too busy moaning but it is. It's the happiest Valentine's Day ever and my last coherent thought is that if this is what those short tight shorts do to Zeke, well, I'll wear those shorts for him again whenever he wants me too. I'll take them off for him any time he wants me too as well.\n\nCamel toe? I want Zeke to see mine as often as he wants.\n\nNow that I know what a Camel Toe is.\n\n<center>* * * </center>"
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "asian",
        "chinese",
        "first time",
        "college student",
        "virgin",
        "chloe tzang",
        "valentine's day",
        "camel toe",
        "hong kong student"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/camel-toe-1"
}