{
    "title": "Summer Awakenings",
    "pages": [
        "\"I wanted to ask you\u2014do you like girls?\" \n\n\"Yes. Is there some reason you thought I didn't?\"\n\nKelly laughed, and it was her usual, infectious, full-throated laugh, where she threw her head back in glee. Whenever she did that, I couldn't help but admire her long, tanned neck. She was an olive-toned beauty, the woman every man in the neighborhood of this small town admired, flirted with, fantasized about, or all of the above. \n\nI'd watch her son Raymond two days a week, who had become like a surrogate little brother to me from the early days of him coming to my mom's old day care, and I genuinely adored him, but it was still a nice side benefit to get to hang out with Kelly, who was such a classic stunner, you'd have been unsurprised to see her as the leading lady in a romantic film. I'd often thought she slightly resembled Natalie Wood, although her gigantic eyes were a jade green, and her hair was a wavy mop, a very light brunette with some sun-kissed blonde highlights. Her figure was a slim but incredibly toned one, with a flat stomach she loved to show off, smallish breasts, and a very toned butt. \n\nStill, while I had no intentions of putting a move on her since she was significantly older than me and, I figured, way out of my league, I did love these moments with her. Her husband had succumbed to his depression about two years prior and taken his own life, and after that, we had gotten closer, where it became almost a custom for us to chat at her kitchen table after she got back from work and Raymond retreated to his room to play Nintendo or do whatever. I sometimes thought it was almost like having a girlfriend, intimate and friendly at the same time. \n\n\"I just...I guess I was confused since I never really see you with a girlfriend,\" she countered.\n\n\"Oh, I've had them. Just nothing really that long lasting or serious,\" I offered with a shrug.\n\nShe got up to go to the fridge, pulled out a bottle of beer, then paused and turned around, pointing and inquiring wordlessly if I wanted one. \"Uh, sure...\" I slightly stammered. \n\nShe grabbed two, twisting off the top and smiling at me as she brought them to the table. \"I figured if we were going to have an adult conversation, maybe I should treat you like an adult,\" and with that, she lifted the bottle and inclined the neck my way. \n\n\"Thanks,\" I said, clinking the neck of my bottle against hers and taking a swig.\n\n\"Don't mention it,\" she replied. \"I...I guess I asked because I was thinking I've never heard you mention a girl you really liked, and when I talked to your mom she basically said 'Alex isn't dating until he's older' and just dismissed it.\"\n\n\"You know as well as I do that my mom would put a lojack on me if she thought it was socially acceptable. I don't think she's had a single date since the divorce, and she seems to have a moral or religious objection to anything that's fun. I'm pretty sure that when I wanted to play basketball she thought I was going to be inducted into some kind of gang involving orgies and criminal behavior.\"\n\nShe laughed again, and I took another swig. \"True. I love Theresa, but she is wound ridiculously tight.\"\n\n\"So very...\" I trailed off. We sat in silent for a few pregnant moments.\n\n\"So, does that...does that mean you're not a virgin?\" she asked with a mischievous grin.\n\nI felt myself blush, and she giggled at me, although I didn't mind. \"Well, um...\"\n\n\"This stays between us, obviously. You're my friend, and you're technically an adult, so I've no business discussing this with anyone else.\"\n\n\"Hey, more than technically. I could get drafted right now.\"\n\n\"Fine. Fair. But you still didn't answer my question.\" She stared at me and let the silence build for a moment, giving me a look I knew too well meant that she wasn't going to give up on this one.\n\n\"Well, technically, yes, I am.\"\n\n\"Technically?\"\n\n\"Technically, I've not had sex, but I have done...other stuff.\"\n\n\"Oral?\" she asked.\n\n\"Uh, yeah, oral a few times.\"\n\n\"Giving or receiving?\"\n\n\"Well, both. The couple of girls I've been with weren't really ready to do more than that.\"\n\n\"Okay, that's good. I mean, you don't need to rush into anything. But good that you're giving as well. Some guys your age get so selfish sometimes. They want to get off but they don't want to make sure the girl does, too.\"\n\n\"Is the dating pool that small here? Cruising the High School parking lot nowadays?\" I joked at her.\n\n\"No! I mean, yeah, it is, but I'm not talking about currently, I'm saying when I was your age. Can you really imagine me trolling there?\" She tipped back her beer, finished it, and got up to the fridge for a replacement. She looked back at me questioningly, and I nodded an indication that I'd like another. \"Last one for you. I don't want you coming home smelling like a brewery to your mom and her calling to complain.\"\n\n\"Don't worry, I'll pop some mints or something. Besides, she'll likely be deep into the TV by this time of night. She pretty much spends all night in front of it after work.\" \n\n\"I'm sorry,\" she said, handing me another beer. \"Must be a little bit frustrating.\" \n\n\"Sometimes. I just don't think she ever really handled the divorce very well. I'm hoping me going away to college will let her have permission to focus on something else.\"\n\n\"You still going to Berkeley?\" she asked.\n\n\"Yeah. My scholarship got approved so I'll be on my way end of the summer.\"\n\n\"Mister Valedictorian. So very proud of you.\"\n\n\"Well, it's not official for six more weeks, but I'd really need to blow it badly to not reach it.\"\n\n\"What are you going to do all summer?\"\n\n\"Well, I'm going to my dad's for a week or two. His brother-in-law has a Honda in his shop that needs some work, and they've promised to buy the parts and help me fix it. So then at least I'll have a car to drive down there. Other than that, not much. I got a part time job with the forest service lined up again, and I'm going to try and bank as much as I can.\"\n\n\"Maybe you could finally find a girlfriend?\"\n\n\"Maybe. I...I don't know.\"\n\n\"Why so uncertain?\"\n\n\"Look...I don't have to tell you how small this town is.\"\n\n\"Yeah, yeah, I know,\" she nodded.\n\n\"There's only two types of girls I know from school. Either they're itching to get out, and there isn't anything that'll hold them back, or they want to stay here, get married, and have a litter. I'm not staying here under any circumstances. I want to travel the world and see everything I've never gotten the chance to see. What are my options if I stay?\" I said, spreading my arms for emphasis.\n\n\"Fisherman. Logger. Mill worker. Prison guard. Manager of the local bank branch,\" she added with a grin.\n\n\"No thanks, I hear the current one is a bit of a bitch,\" I bantered back.\n\n\"Hey, my employees love me, I'll have you know.\"\n\n\"No, your female employees love you. Your male employees are in love with you.\"\n\n\"Maybe, but I'm not responsible for them having a crush. It's not like I walk around flirting and wearing slutty clothes.\"\n\n\"No, you're extremely professional. Probably a big part of why I came to see you for my first account.\"\n\nShe laughed again and added \"And I'm sure that's the only reason!\" I said nothing in reply, just nodded and inclined my bottle at her slightly, to which she clinked hers again. We finished them with a few more pleasantries and banter, and as I excused myself to leave, she gave me her customary very close hug, along with a kiss on the cheek that always seemed to come dangerously close to the corner of my mouth, and as she pulled away, she grabbed my chin and looked at me, saying \"When the hell did you get so handsome?!\" I muttered a thank you, quickly adjusting my jeans so my lengthening member wasn't too obvious, and she smirked and told me to get home safe. I was pretty much positive she knew I had a crush on her, and thus enjoyed teasing me a bit, but the truth was, I really didn't mind.\n\nI chuckled, exited the door, walked around her fence, and through the several hundred yards of undeveloped woods to my own back gate. As I entered the house, I called out to my mom, who was was, as I predicted, engrossed in a rerun of Cheers. \"I ordered pizza,\" she indicated, and I thanked her and told her I had to get a paper done. \n\nI grabbed a few slices, and then went into my room and started working on one of my final papers for my American Government class. It took me a few hours, and I came back out just in time to see my mom dozed off in her recliner, with the 11pm news on. I gently shook her awake and sent her off to bed, let the dog out one last time, put the pizza away, and then went back into my room and flopped down on the bed.\n\nWe'd moved up to the very northern coast of California when my parents got divorced, and my mom took a job with the local TV station she still had to this day, where they did dramatic pieces on things like the fair and the new Burger King when it opened up. When people used to ask me years later what the best part of Crescent City was, I'd say that we were only about 7 hours from San Francisco on the 101 highway. \n\nThe whole town was sleepy, gossipy, and \"things to do\" basically included drinking, smoking weed, and fucking. I could barely tolerate weed, and wasn't getting laid, so to say I was bored was an understatement. Dad had never moved from L.A., and I craved any time I could get to visit him, mainly because it got me out of here. Periodically, friends who've stayed more connected to the area have told me excited tales about new businesses or whatever that moved in, but in 1994, we barely had dial up internet.\n\nI had grown a bit in the last couple of years of High School to 6'2\", and summer construction jobs helped me put on muscle, but while I was well liked, I was never once part of the \"cool kids\" clique. I thought I was decent looking, it seemed women older than me loved to tell me how good looking I was, and I knew I was possessed of a decent cock, but I seemed to have only sporadic luck with girls my age. I'd pretty much just channeled all of my energy into keeping my grades up so that I could get out, and was hoping college was different. \n\nThis night, like so many others, I did what I usually did before bed, which was to read a bit, then eventually gave in and started pleasuring myself. I had a couple of nudie mags buried in my closet, but not wanting to get up and dig for them, I gave up and thought of Kelly, which always worked, unlike some of the girls in my class I had a thing for. I flashed back to her in the two piece suit she favored when she sunned herself, and within a few minutes, I was groaning my release into the tissues I had grabbed from my nightstand. I wiped myself down, went to the restroom, peed, and flushed them away before I crashed back into my bed, falling asleep almost instantly.\n\n*Two Weeks Later*\n\nProm had gone by relatively decently. I'd asked Mary Sue Adams several weeks ago, who was a friend but also a girl I'd occasionally made out with, since we were both not in a relationship at the moment, and we'd actually had a great time. Three days before she'd asked me point blank if I wanted to lose my virginity with her that night, since we were still both in that \"technical virgin\" category. I'd agreed, and tried to procure a hotel room, but in some weird morality play, the police had cracked down on the four hotels that weekend and no one was renting to anyone younger than 21, which was new. So we just danced, drank bad fruity wine, made out a bit on the dance floor, and danced some more. We literally closed down the party at about 1am. \n\nWith us both a bit too drunk to drive, she suggested we just walk it off, since my place and hers were both less than a mile away. We'd brought a change of clothes, so we quickly swapped out of our formal wear, stuck it in the back of her VW Bug, and slowly made our way down the hill, chatting and holding hands. \"I had a great time tonight,\" she said, slightly swaying but still rather alert.\n\n\"Me too,\" I responded. Her house was just in view, and that meant mine was just around the corner. She leaned in and kissed me, slipping in a small amount of tongue. She pulled back a bit. \n\n\"I'd invite you in, but my parents are home, and I'm pretty sure my dad wouldn't be cool with it, even though he knows you.\" I smiled to indicate I understood, her dad was one of those macho 'don't touch my daughters' types who made it a point to remind everyone with a penis that he was a prison guard with a lot of guns. \"Could we go to your place?\"\n\n\"I wish,\" I replied. \"My mom is the lightest sleeper imaginable.\"\n\nShe looked down, furrowing her brow in thought. Suddenly, she broke into a beaming smile and said \"You want to take a walk into those woods?\"\n\nI nodded vigorously, liking where this was going. She grinned even bigger, grabbed my hand, and pulled me as we began running into the woods. Fortunately, between the residual streetlights and the moon, it wasn't pitch black, and we quickly found a spot to throw down our sweatshirts. We began making out almost immediately, and within a few minutes, I had my hand under her miniskirt, panties pushed to the side as I was lightly toying with her clit. \n\nShe began working on my belt, and had her hand down my pants, slowly stroking my shaft. \"Put your finger inside me,\" she groaned huskily, and I obliged, pulling forward just like I'd learned from the Penthouse advice articles. She started to lose concentration on what she was doing, and before too long, I had my head between her legs, eagerly lapping at her clit, trying to get her turned on. I'd discovered this year that I really liked eating pussy, and I wanted to make sure she came just in case I wasn't that great the first time. Within a few minutes, I had her wailing her first release, and she quickly bit down on her sleeve to try and stifle her moans. \n\nI wrapped my arms around her to let her recover, but she quickly kissed me and reached down to manipulate my still turgid cock. \"Goddamn,\" she said simply. I went to kiss her again, unsure what she'd want to do next, and she pulled back slightly and said \"Still got those condoms?\" I nodded and produced a string of them. \"Planning on a big night, were we?\" she said with a giggle. I just shrugged, and she quickly tore one open, and sheathed me as she bent down over my rod. \"Let me be on top first, so I can control the depth. You're...uh...not small.\"\n\nI just nodded and put my weight on my hands behind me, as she climbed up into my lap and positioned her entrance over me. She lowered herself down agonizingly slowly, and I clenched my butt in an attempt not to get too excited, but inside I was whooping, because this was finally happening! Whether I ever slept with her again, or what happened tomorrow, I was finally losing my stupid virginity! \n\nAfter what seemed like an eternity, I felt Mary Sue's pubes touch mine, and she gave me an electric kiss. \"Let me set the tempo,\" she whispered, and she started slowly pistoling up and down. Getting a bit more comfortable, she giggled and pushed me down, and I quickly reached up and grabbed her wonderfully round butt, squeezing and caressing it gently. She hummed appreciatively, then bent down and kissed me, her long blonde hair falling around my face and shutting out the world. We kissed and kept pushing into each other for what felt like an eternity, both lost in the moment.\n\nWhich is probably why we never heard the noise. As she lifted up off of me, I felt the flashlight hit both of our faces, followed by a voice saying \"What the hell?!\" What happened next was a jumbled blur. She quickly got up off of me, barking \"Run!\" at me as she took off like a bolt. I tried to get up, stumbled a bit due to my pants being around my ankles, and by the time I had pulled my pants up enough to run, the light had gotten a bit closer. I shielded my face and was taking my first stride when I heard a female voice call out \"Alex?!\" Knowing I was caught, I stopped and turned, and was rather surprised to see Kelly with Rowdy, her little dachshund, on a leash.\n\n\"What are you doing here?\" she asked, then quickly gave me a dismissive wave as she realized how silly the question was. \"Never mind. Come with me,\" she commanded in her best mom voice, and as I automatically began to follow her, she quickly interjected and said \"You should grab the rest of your clothes. I'm sure your lady friend will want her sweater back, too.\" I quickly balled all our stuff up, then followed her, partially relieved that she was leading me back towards her house. Still, I wondered if there was any way I was going to talk my way out of this one. By the time we'd reached the door, I realized there was no way I could come up with any good story, and decided to just be honest.\n\nWe got in the door, and she pointed at me and said \"You're covered in mud, stay here and take your shoes off. I'm going to take care of a couple of things real quick.\" I glanced down as I pulled my sneakers off and realized she was right, I was filthy. She marched off and came back with a towel and a pair of baggy gym shorts. \"You can take a shower and wear these while I wash your clothes. I'm going to make a quick phone call.\"\n\n\"Who are you going to...\" I trailed off as she strode into the kitchen, and I heard her pick up the handset and hit speed dial. \"Hi Theresa, it's Kelly.\" My heart sank. \"Yes, look, I'm sorry to wake you up, everything's fine...no, really, it's fine.\" She came into the living room with her cordless handset, looking right at me and pressing her finger over her lips to indicate to me that I should be quiet. \n\n\"No, I've got Alex at my house right now. He's fine. Listen, something happened with his prom date. I ran into them on the block as he was trying to drive her home. I guess she had a bit too much to drink and he pulled over because she was going to be sick, and she threw up on her car and him...yeah, I know...I was walking the dog and I saw her car and him trying to help her...No, he got her home safe to her mom. Pretty sure he hasn't been drinking tonight. We parked her car and she's home sleeping it off...yeah, teenagers, ya know...no, anyway, I'm letting him wash his clothes here and I'll probably just let him crash in the spare bedroom tonight...no don't worry about it...oh, that's right, I forgot about your trip! When do you leave again?...No, it's no problem, I'll keep half an eye on him and make sure he doesn't get into any trouble...yeah, just come by in the morning before you take off...it's fine, Raymond is at his grandparents, remember?...listen, I just wanted you to know he was safe in case you work up and he wasn't there...will do...yeah, he's a good kid for sure...\" and she paused to smile and wink at me. \n\nI breathed an internal sigh of relief. \"No, not at all, don't mention it. I'll have him do some chores for me or something...you got it. Love you, talk soon.\" She disconnected the call, and smiled at me. \"Did you think I was going to get you in trouble or something?\"\n\n\"I didn't know what to think,\" I replied, honestly.\n\n\"Well, it's okay. You do need a shower, though, so go into the bathroom and clean up. We can talk more when you get out.\" And with that, she gave me a sweet peck on the cheek, and indicated I should go toward the bathroom. I trudged in, turned on the water, and quickly began shucking my clothes. As I took off my clothes, I saw the condom still hanging off of my dick, so I roughly yanked it off and threw it in the toilet. I heard a knock, so I quickly covered myself with the towel and answered the door.\n\n\"Yeah?\"\n\n\"Hand me your clothes, please.\" \n\nI nodded at her and quickly gathered them, handing them over. She paused as she turned to go and said \"Don't flush that, it'll be bad for my septic tank. Just throw it in the trash, you can take it out later.\" I nodded again, shut the door, did as I was told, and then got in the shower. My brain was spinning as I lathered off, I was upset and a tick angry, because having my first time interrupted so unceremoniously was really messing me up. At least I could be grateful, though, if it had been literally anyone else to catch us, it could have been really, really bad. I got out, dried off, threw the shorts on, and went out to the kitchen, where I saw her waiting at the table in her robe with a couple of glasses and a bottle of liquor. ",
        "\"Your stuff is right there on the counter,\" she indicated, and I saw my wallet, keys, and the remaining string of condoms, to my chagrin. \"You ever drink whiskey before?\" I shook my head no. \"Well, I figured we might need something stronger than beer for this conversation.\" I nodded my assent, and she went into the fridge, retrieving some ice cubes and a bottle of Coke. She filled each glass, then poured in a couple of generous splashes of the whiskey. She took a healthy slug, and I picked up mine and sipped it. It was strong but not bad.\n\n\"I'm sorry,\" she finally began.\n\n\"It's okay. I mean, it's weird and awkward, but at least it was you and not...\"\n\n\"Retired Marine Staff Sergeant Adams, Peace Officer,\" she growled, imitating Mary Sue's dad.\n\n\"Yeah,\" I nodded.\n\n\"Was that your first time?\"\n\n\"It was,\" I admitted, avoiding her gaze.\n\n\"Why were you two back there?\"\n\n\"We couldn't get a hotel room. I tried.\"\n\n\"Oh yeah. Last year some kids did some damage to one.\"\n\n\"I never heard about that?\"\n\n\"The police kept it out of the paper. Thought it would look bad. I only knew because Raymond's uncle is on the force. Asked me to keep quiet about it.\"\n\nI just nodded. Sounded like how things ran in this town. \"We went there because we were worked up and horny, and we couldn't go back to her place or mine,\" I offered.\n\nShe nodded her understanding, taking another drink. \"I'm sorry.\"\n\n\"You didn't know. I'm not mad at you, just a bit...\"\n\n\"Frustrated?\"\n\n\"Yeah.\"\n\n\"I can imagine. I guess I forget how much it sucked being a teenager and trying to get laid sometimes. It's been about 20 years, after all.\"\n\n\"Goddamn does it suck.\"\n\nShe giggled. \"Well, your next time can only be better.\"\n\nI looked up. \"Somehow I think Mary Sue might not want to talk to me again after that.\"\n\n\"You might be surprised. She seemed like she was enjoying herself a lot. Call her tomorrow and see where she's at emotionally. And if you really can't find a place, I'll make you a deal. Call me and if I can, I'll get out of the house for an hour or two, bring her to my guest room, and just make sure you strip the sheets afterwards. Okay?\"\n\n\"Seriously?\"\n\n\"Absolutely.\"\n\n\"Uh...thank you.\"\n\n\"Of course.\"\n\n\"How do you feel about her?\"\n\n\"Huh?\"\n\n\"Do you think you might love her?\"\n\n\"Uh, no. We're just...we're friends, and we've fooled around a bit before. We went to prom together because neither of us are in a relationship right now. We basically said we should lose our virginity to each other since we get along well and we're comfortable with each other.\"\n\n\"Okay. That's not the greatest scenario, but I suppose it's better than nothing. So you made do with what you had and I interrupted, basically. Sorry again about that.\"\n\nI waved dismissively. \"I guess it happens. Hopefully the next time a girl lets me touch her will be better.\"\n\n\"It will be, I'm sure of that.\" She drained her glass. I still had an inch left, but she ignored that, adding more whiskey and a splash more Coke to both glasses, emptying the bottle.\n\n\"You okay?\" I inquired.\n\n\"Yes,\" she replied. \"I'm just a bit...off, I guess. I've known you since you were 9, and I know you're not a kid anymore, but it was a bit unsettling seeing Mary Sue riding your big hard cock.\" She took another healthy swig.\n\n\"I'm sorry again that you had to see that.\" I sipped mine. This one was way stronger overall. It burned, but I took two healthy swallows anyway.\n\n\"It's okay. Like I said, just not what I expected to see. I knew you were, um, mature, because I've seen you occasionally have to adjust your package when you get a bit turned on and don't want to be rude, but I didn't realize that...\" she trailed off.\n\n\"What?\"\n\n\"Nothing. Forget it. Not important.\" She drained her glass, and this time, grabbed three ice cubes and just poured the whiskey in straight. Seeing her uncomfortable made me feel more so, and I quickly drained my glass. She looked at me questioningly. I shrugged and nodded. \n\nShe poured again, then turned around and grabbed more cubes, dumping them in my glass roughly. I sipped again. This was even more harsh, and I tried not to cough, barely stifling it. She smiled warmly. \"It's a bit of an acquired taste. Sorry. The ice will melt a bit, or I could grab some more Coke out of the cupboard?\" I waved her off. I was starting to feel the liquor anyway.\n\nI looked at her, and she looked, well, pale and a bit shaken. \"Are you going to be okay,\" I asked. \"Is there anything I can do?\" \n\nShe looked up and smiled again. \"My sweet, sweet boy. I just ruined your first time, and you're worried about me.\"\n\n\"Well, yeah, we're friends, and...\"\n\n\"I need to ask you something,\" she interrupted. \"Did you...well, uh...did you...cum?\"\n\nI shook my head no.\n\nShe covered her face with her hands and groaned, then added \"I'm so sorry.\"\n\n\"It's okay.\"\n\n\"No, it isn't. That's really horrible.\"\n\n\"There's nothing to do about it now. Like you said, I'll call her tomorrow. If I'm really lucky I'll get another chance at some point.\"\n\nShe nodded, and resumed staring at the table. I nervously took a small sip, and it was less harsh this time. Finally, I spoke. \"What's got you so messed up right now?\"\n\n\"Nothing you can fix, believe me,\" she said with a haughty laugh. Not knowing what to say, I just nodded and looked at her. We held our gaze for a few moments. Finally, she spoke again. \"I...look, I've got several feelings here. I feel guilty for messing you up like this. Making your first time so shitty. Possibly giving you some emotional scars. Really cockblocking you way too well, unintentionally, just because my stupid dog had to take a shit in the middle of the night and I can't just let him into the yard because he digs holes under the fence.\" \n\nShe paused for several uncomfortable moments, looking down, then continued, \"And also, because you...you've grown up, and I'm sitting her having not had sex in over two years, and well, you're a hot young man who I just found out is packing a really big cock, and frankly, part of me really wants to drag you into my bedroom and suck on it and fuck you until the end of the weekend and drain that big tool and your balls dry, and I don't know if I can do that, but right now I feel guilty and a little drunk and so turned on my panties are soaked, and it's a really weird combo I've never felt before, you know?\"\n\nI felt my jaw drop. I had literally no idea what to say, and I just stared at her. \n\n\"Not what you were expecting to hear?\"\n\nI shook my head vigorously. \"I..I'm sorry?\"\n\n\"You have nothing to apologize for.\"\n\n\"I...I guess not but...look, I...\"\n\nShe smiled at my stumbling delivery, putting me at ease. \"Alex, I've known you had a crush on me for years.\"\n\n\"Well, yeah, but I never wanted to make you uncomfor...\"\n\n\"You never did,\" she interjected. \"But watching you grow up has definitely been a little bit of a push and pull. Because you've grown into an impressive young man. And I've had a couple of fleeting thoughts the last year about you, but it was never anything I was going to act on because you're...well, you're so much younger than me, and you're Theresa's son, and...\"\n\nI reached across the table and grabbed her hand to comfort her. It was a small something I'd done a bit in the past, but I noticed her touch seemed a bit different, almost electric. I looked up, and as our eyes met, I noticed a look of intensity I'd never seen before on her face.\n\n\"Come with me,\" she said lowly. I just nodded. \"Grab those,\" she indicated to the condoms. I did, and she held out hand, which I took. We walked back into her bedroom, and she turned on her bedside light, then turned to face me. She undid her robe and let if fall to the floor, leaving her only in some cute skimpy pink panties and a little white half-shirt/tank top thing. Her body was long and slender, all wonderful tanned tone due to her biking obsession. The top hugged her smallish breasts, her nipples protruding prominently, and when I glanced down, I noticed that her panties were indeed quite soaked. \n\nShe advanced forward, caressed my face, and then pulled me in for a kiss. It was tentative at first, but quickly became much more sure, her tongue advancing into my mouth, and she pressed into me a bit with her upper body, her nipples grazing my chest through her silky top. I reached out to put my hand around her waist, and she pulled back slightly. I gave her a quizzical look, and she put her finger on my lip to hold me in place.\n\n\"I have a couple of rules if we're going to do this,\" she began.\n\n\"Of course...\" she pressed her finger down to silence me.\n\n\"This is temporary. Okay?\" I nodded. \"You do everything I say. I'm not easy to get off, so if I ask you to do something in bed, you need to do it. And if I ever say this is over, we stop immediately. If you need to stop, same. You're leaving in a few months anyway, so this can just be a thing we do for a bit, and then kiss it goodbye down the road.\" \n\nI nodded again. \"Good. And finally, that means this is not going to be a revisited thing. This is just sex. I won't ever be your girlfriend, and if you come home in the future, you just visit us, and my bedroom is off limits to you then. Got all that?\" I nodded once. She cracked a very sexy smile. \"Okay, good. I've really been wanting a boy toy for a while now.\"\n\nShe leaned in and kissed me again, but this time she pressed her hips into me. I snaked my hand around her waist and pulled her in. She ran her hand over my back, lightly caressing my ass, and our kissed increased in intensity, I reached down and grabbed a handful of her wonderfully firm ass. She hummed appreciatively into my mouth, reaching down and caressing my rapidly hardening cock. Pulling on my shorts, she fished it out, and I noticed that her delicate hands made it look positively huge. \"Mmm, that looks so good,\" she muttered, and in one motion she got down on her knees, pulling my shorts down and quickly engulfing the head and the first few inches.\n\nI thought I had experienced good head, as the two girls who had given it to me before weren't exactly slouches, but this woman...holy shit. Within probably a two minutes, I felt myself rising. She steadily worked her head up and down, twisting and jacking me off with purpose. She'd be engrossed in her task, using one hand to jerk me steadily and strongly, the other to play with my base and balls, and then she'd let off a bit and stare up at me with those gigantic green eyes and my breath would completely stop. I was starting to wonder if she wanted me to empty into her mouth, so intent was she on her mission, but then, she abruptly popped off with a hard suck and stood up, removing her top, shucking her panties, and lying back on the bed. \n\nShe beckoned with her finger. \"Come here,\" she said, tapping her clit for emphasis. I crawled up to her pussy, taking it in\u2014it was easily the prettiest one I'd ever seen, a beautiful pink flower with smaller lips and a rather recessed clit topped by a very small triangle of light pubes. I caressed her inner thighs lightly, barely brushing over her opening, then moved up to kiss her again, which she hungrily received. I quickly peppered down her neck and body, pausing briefly for a quick tongue flick on one of her nipples, then I quickly settled in between her legs, and went to work. I used every trick I knew on her, but I needn't have worried, as soon as I started working side to side on her clit, she groaned and said \"Just like that. Don't stop doing that.\" \n\nSo I kept it up, but I really wanted to get her to climb harder and faster, so I surreptitiously slipped a finger into her, curling it up and feeling for the rough patch. I smiled to myself thinking about how a lot of my friends had made fun of me for spending so much time in the library, but they didn't realize 'The Joy of Sex' was readily available there, and I had read the whole thing and other books secretly over the course of my days in there, committing as much to memory as I could. Now, while I might have been a rookie at this whole sex thing, the knowledge was sure coming in handy. Score one for the geek!\n\nMy efforts paid off, as her breathing quickly increased to pants, and she groaned at me to add a second finger. Within a few minutes of me having done so, she groaned out a powerful wail, her cavern contracting tightly around my digits, and I felt a heavy release of fluid. \"Holy shit...\" she moaned as she slowly untensed her body.\n\n\"Thanks, I think,\" I said, grinning.\n\n\"No, it was definitely a compliment. Your pussy eating game is definitely on point. You're a natural.\"\n\n\"I really like doing it. A lot.\"\n\n\"Good,\" she replied, reaching up and kissing me again. \"That'll score you a lot of points.\" She reached over and grabbed a condom, and quickly sheathed me up. \"Now come here and fuck me,\" she said, laying back again. I positioned myself over her, and she wasted no time guiding me into her opening and pulling me in, wrapping her legs around me. \"Start slow, get me opened up.\" I followed her lead, letting her set the pace, and it was probably a full minute of slower, gentler strokes before I felt my pubic bone touch hers. \n\nAs I bottomed out, she clamped her legs firm and held me, groaning a low sound of satisfaction as she closed her eyes and threw her head back. \"So big, so thick. Goddamn that's nice.\" Then she quickly snapped her head forward and bucked her hips with force. \"Fuck me,\" she spat with emphasis. I pulled back and pushed in solidly. \"Yeah...just like that...\" she said as we started to get a solid rhythm.\n\nWe kept our movements up for a bit, and I busied myself with trying to please her. I kissed her neck, then grabbed one of her breasts, sucking on the small pinkish-brown nipple, enjoying the groan it elicited from her. As I came up, she put a hand up and said \"I want to be on top. Lay down.\"\n\nI complied, and she quickly scaled on top of me, sinking down in one fluid motion as she put her muscular thighs on either side of my hips. I watched her her muscles lightly ripple as she moved up and down, and she seemed locked in, like when I'd seen her in that bike race several years ago, methodically pulling from behind to eventually take the lead. She threw her head back, shaking her hair out of her face, then reached down and began massaging her clit with one of her hands as she used the other one to steady herself. \n\nI was in total rapture, and I felt myself starting to climb towards my orgasm again. I tried to breathe through it, but before I could say anything, she looked at my face, and then abruptly stopped. Moving slowly, she pulled almost completely off of me, grabbing the base of my prick and pinching on the front and underside very pointedly. She shook her head once and said \"That won't do just yet, no no...\" and then started to move up and down again on me. As the surprise wore off, I realized I'd lost all urge to cum.\n\n\"How did you...\" I started to ask, but she just bent down and kissed me.\n\n\"Later...\" was all she said.\n\nWe kept going, and after a few minutes, she began playing with her clit desperately again. She hadn't been very vocal, but suddenly, she started moaning steadily. I noticed a shift in her movements and her behavior, and realized she was climbing. She started to really push down on me and her hand became a blur, so I started pushing back up and her even harder, grabbing onto her hips and trying to get as deep into her as I could. \n\nHer groans increased, slowly becoming much more pronounced, and as she emitted some high staccato barks, I took the opportunity to slam her down onto my prick, which made her convulse and scream at what seemed like the top of her lungs. Her pussy spasmed around me, sending waves up and down my cock, and I quickly followed her in orgasm, screaming out my release with her.\n\nShe swayed on top of me a bit, seeming almost unsteady even though she was on her shins and knees. Slowly she regained her equilibrium and smiled a woozy smile down on me. \"Mmmm...\" she intoned.\n\n\"I feel like I should be thanking you,\" I smirked.\n\n\"No need. The pleasure was definitely mine,\" she purred, bending down to kiss me. She fluidly disengaged from me, then gently unrolled the condom, stopping to look at the contents. \"Ah, youth and boundless cum,\" she mused, tossing it into the waste bin. I sat up, and she came over and kissed me again. \"I'm going to fuck you a lot this weekend. A whole lot. By the time you leave, you're going to know exactly what to do to make any woman cum. And we'll keep up your lessons this summer. You're going to walk into the halls of college a different man. A stud. Thanks to being my little boy toy this summer. You good with that?\" \n\nI nodded a bit too vigorously, which made her laugh. \"Scoot over,\" she nudged me, and she crawled beside me, draping a leg over me and kissing me again. I reached around and lightly ran my nails over her back. \"That feels good...\" she purred. We stayed in that position for a few minutes, her humming appreciatively, and she shifted a bit so she could run her fingertips lightly over my chest, slowly playing down toward my stomach.\n\n\"I always kind of wondered what it'd be like to corrupt a virginal boy,\" she said with a grin.\n\n\"I'm not that innocent,\" I countered.\n\n\"No, I know. But you need to realize that while that was good, I didn't bring my A game by any means. I'm gonna drain those balls dry, stud,\" she said, caressing my sack lightly while she locked her eyes on mine, and I had no doubt that she wasn't exaggerating.\n\n\"Good, I'm looking forward to it,\" I shot back. I was a bit nervous, truthfully, but I wasn't about to turn down this incredible turn of events.\n\nShe giggled lowly and started caressing my balls gently. \"How long have you fantasized about this? About me?\"\n\n\"Probably since I knew what sex was,\" I quipped.\n\nShe giggled. \"I've only thought about you for a few months, but to be fair, you weren't exactly hot yet.\" She started to lightly manipulate my hardening rod. \"Short recovery, gotta love youth,\" she observed.\n\n\"How did you do that earlier?\"\n\n\"What, keep you from coming?\"\n\n\"Yeah.\"\n\nShe pinched my base again, demonstrating. \"Pinch and hold, like that. Works on most men like clockwork.\"\n\n\"Damn.\"\n\n\"Your little girlfriend didn't know that?\"\n\nI shook my head, \"I doubt it.\"\n\n\"Well cutie, I probably know a bunch of things she doesn't,\" and she snaked her hand against my stomach, pushing her finger against the base of my prick right where it met my pelvis. I felt and watched myself grow to full hardness almost instantly, and inhaled sharply. \"Like that spot there.\" She got up, and went to her bathroom. I heard the water run briefly, and she came back with a wet washcloth. \"I hate the taste of latex,\" she explained flatly as she quickly wiped me off, then she tossed it onto the nightstand and gave my prick a few long licks before engulfing it greedily. \n\n\"You're really good at that,\" I groaned.\n\n\"Thank you,\" she replied. \"I love doing it. Later on I may have to have you give me a protein shake. But for now, it's gonna be all practice with you stretching my pussy and learning how to make me cum.\" She resumed her ministrations, and I closed my eyes in pleasure. No sooner had that happened than I felt cool air on my turgid member. I opened my eyes, and saw her moving up. \"I'm gonna sit on your face, and you're gonna eat me until I cum. Then I'm gonna ride this big beautiful cock and you're gonna make me pop again.\"\n\n\"Okay,\" I said. I realized I was slightly enjoying being bossed around, even if it was a tiny bit intimidating.\n\nShe moved up and straddled my face, running her slender fingers through my hair gently. I started licking her lips, moving in progressively closer to her clit as she hummed her appreciation. After a few preliminaries, I gently moved to her clit. She ground down and began slowly moving her hips back and forth, as I moved back to the side to side pattern she seemed to love so much before. I alternated the intensity of my tongue strokes, and as she began to grind down hard, I began running my tongue firmly over her button. ",
        "She was flowing liberally into my mouth, forcing me to swallow regularly in order to not aspirate from her sweet secretions, and I was in heaven. As she began to really buck, I took a chance and sucked her clit into my mouth hard, which paid off within a few quick moments. She screamed hard, clamping her powerful thighs around my head so hard my head ached. I rode it out, until finally she rocked backwards, and I gasped for air. \n\n\"Sorry,\" she panted, giggling slightly.\n\n\"I didn't mind,\" I panted out.\n\nShe moved down against me, stroking me slowly but rough, then scooted down and gave me several hard sucks. \"You really are a naturally gifted pussy licker,\" she said, grinning.\n\n\"Thanks.\"\n\nShe stared up at me with those gorgeous eyes, grinning evilly. She grabbed another condom, unrolled it, and then mounted me abruptly. She started riding me with purpose, grabbing onto my pecs as she began pistoning hard. \"Godamn you have a nice cock. It's so nice and thick.\"\n\n\"Thank you,\" I gasped, pushing back up at her.\n\n\"You learn how to use it and you'll have a line of girls at your dorm all through college,\" she grunted.\n\n\"Then I better listen to my tutor,\" I groaned back.\n\n\"Oh fuck keep it up...\" she replied.\n\nWe kept going for a bit, her absolutely slamming down on me, with her moaning steadily, but midway through, I started to get impatient. Reaching down, I pushed her knee back and flipped her over fluidly, putting me on top. She was surprised but then quickly grinned and her eyes sparkled with intensity. I pushed down into her, kissing her deeply and then moving down to suck her right nipple into my mouth. She groaned deeply, and I quickly switched off to the other one. She started in on a string of dirty talk that was unlike anything I'd ever heard, especially because in that day, porn usually meant a magazine you stole from a friend's dad.\n\n\"Yeah, you like being on top of me, pounding my pussy, being in control like that, baby?\"\n\n\"Uh-huh.\"\n\n\"Good. I like a man in control. It's easier for me to cum on top, but if you fuck me really well, you can make me go off hard. Just keep fucking me hard just like that, pushing that big long thick cock deep into me, just like that, slam that fucking cock home hard deep into me. You like fucking that pussy? That older experienced pussy? I could have been your mom, Alex, but instead I'm fucking you, and I'm gonna keep on fucking you. I'm gonna fuck you all day tomorrow, I'm gonna wear you out and leave you so sore you're hobbling around school on Monday. I'm gonna fuck you all summer. You're gonna come over every day you can and work on my house and I'm gonna reward you by sucking that big hard beautiful cock and fucking you over and over and over again. You like that idea? Cause I'm gonna make it happen. This cock is mine this summer. You can fuck anyone else you want to, but you're not gonna have the energy to because I'm going to fuck you till you're sore and then fuck you some more!\"\n\nHer talk was raising my temperature, but instead of just exciting me, it made me feel challenged. I starting pumping into her harder and harder, our hips clapping together and a sheen of sweat forming on us both, our bodies surely sticking together. I pulled my torso up and got up to my knees, staying inside her as I grabbed her hips and started really giving her as much impact as I was physically capable of. My muscles strained and she grabbed onto my triceps as her moans started to crescendo into screams. Finally, as she arched her body back and then quickly hunched forward, I felt her ripple around me again, and as her body tensed, I tipped over the edge and filled the condom.\n\nWe stayed like that for a bit, me cradling her with one arm around her hips and one around her back, as her breathing slowed down. I softened a bit, and leaned forward to kiss her. As we broke, she disengaged and I grabbed my prick to pull out of her. I pulled off the condom and threw it away, then stretched out on the bed beside her on my side. She turned to face me, then draped a leg over me and leaned in to kiss me again. We languished into the kiss for a bit, and she pulled away and said \"Congratulations.\"\n\n\"For what?\"\n\n\"You just fucked a woman. And you did quite well.\"\n\n\"Yeah, uh...wait, what about the first time?\"\n\n\"That was me fucking you. Which was fun, don't get me wrong. But this time was you taking the initiative.\"\n\n\"Okay...which do you prefer?\"\n\n\"I like both, but I definitely prefer the second,\" she replied, leaning in to kiss me.\n\nWe stayed like that for a few moments, touching each other lightly. It was peaceful and fun, and I didn't want it to end. She pulled back for and craned to look at her clock. \"Listen, your mom is coming by tomorrow morning before she leaves for her conference. So as much as I want to mount you for another round, it's not in the cards. You should hit the shower and crash out in the spare room. I'll see you in the morning, lover.\" And with that, she gave me one final searing kiss, grabbing my tool lovingly for good measure. I reluctantly pulled myself up, got in the shower, and then crashed out on the spare bed, falling asleep almost instantly.\n\nIn the morning, I awoke to the smell of bacon cooking. I quickly threw on my clothes and came out to Kelly moving around the kitchen, and as she heard me, she turned around and smiled broadly. \"Have a seat at the table, lover.\" I sat down as she moved around the room. \"You like your eggs over medium, right?\"\n\n\"Uh, yeah...\" I was flattered she remembered.\n\n\"Coffee with cream, right?\"\n\n\"Yeah, and a little bit of sugar.\"\n\nThe toaster popped, and within moments, she set two plates down in front of us, reaching down to give me a kiss and a quick hand run over my chest. \n\n\"Do I get this every morning after?\" I asked.\n\n\"If you fuck me as well as you did, absolutely. Dig in.\"\n\nI grabbed my fork and piled in, I was starving and I knew from many dinners at her place that Kelly was a great cook. We ate relatively in silence, occasionally grinning at each other. I was about to reach out to her when the front door opened. My mother breezed in with a loud \"Hi!\"\n\n\"Hey,\" Kelly answered, getting up to give my mom a hug.\n\n\"Hi mom,\" I added, rising up as she went to me, hugging her.\n\n\"Thank you for keeping half an eye on him while I'm away, again.\"\n\n\"No problem, Teresa,\" she replied. \"He's a good young man,\" she added with a bit of emphasis on man and a sly smile my way.\n\n\"Yeah, I know,\" she replied, setting her hand lightly on my shoulder. \"I'm just happy that you'll be taking care of him.\"\n\n\"Oh, my pleasure, believe me,\" Kelly added.\n\n\"You're too good to us,\" mom responded.\n\n\"You're both family, it's really no trouble. Besides, I'm going to put him to work around here a bit this summer.\"\n\n\"Okay,\" mom said with a giggle. \"Just don't wear him out too much.\"\n\n\"Oh, I promise to take good care of him,\" she replied with a grin.\n\nThey chatted for a few more minutes about her trip as I wolfed down the rest of my food, and then mom gave her and me a quick hug goodbye. I was sipping my coffee when Kelly shut the door behind me, sitting down and raising her mug to her lips. \"Get enough to eat?\"\n\n\"Definitely.\" \n\n\"Good. You definitely expended some energy last night. Gotta keep your strength up.\"\n\n\"I'm good for now.\"\n\n\"Good,\" she replied with a smirk. \"Now, get to my bedroom and get naked.\"\n\n\"Yes Ma'am!\" I replied enthusiastically, getting up and making a beeline as she laughed. As soon as I crossed the threshold of the bedroom, I began rapidly stripping, and when I turned around, she was standing in front of me, already completely nude, walking over towards me. \"How did you get undressed so...\" she kissed me, interrupting me. She wrapped one hand around my back, and reached the other one between us as she stroked my cock. \n\nI started to reach down to play with her slit, but she scooted my hand away. \"We're gonna do an advanced course today,\" she said, sitting down on the bed in front of me, pulling me toward her by my rod.\n\n\"Oh yeah?\" I asked. \"What did you have in mind?\"\n\nShe bent down and gave my length a lick and then several sucks. \"A big cock is definitely a gift and an advantage, but if you're not that great in bed, it's not the end all be all,\" she said. \"Licking pussy will get you a head start, but sometimes a woman just wants to get fucked. And right now, that's really what I want, more than anything.\" She leaned back and spread her legs pulling me forward and in for a kiss. As we made out, she surprised me by taking me in abruptly, and started bucking at me rhythmically. \"Should I put on a...\"\n\n\"No need. IUD.\" she said breathily.\n\n\"So why did you make me wear one last night? I asked.\n\n\"Training wheels,\" she replied, kissing me deeply.\n\nFeeling her bare was beyond anything I'd ever dreamed about. She was so very wet and her pussy was tight to the point of articulate, rippling around me. For a few moments, I felt like I was positively paralyzed with the waves of pleasure shooting through me, and as she kissed me again, I wrapped my hand around her neck and pulled her against me. \n\n\"Don't fuck me like I'm a sweet little girl, I'm not,\" she said, pushing up on my chest. \"Fuck me like you want to dominate me. Fuck me like you're trying to split me in two with your cock. Fuck me like a goddamn man!\" she yelled.\n\nHer words hurt\u2014for a couple tenths of a second. Then they lit a fire in me. She wanted to be fucked hard? I could do that. I would fuck her hard. I pulled almost all the way back and slammed into her so hard our colliding flesh made a cracking sound. \"YES!! Do that again!\" she yelled. I did. And again. And again. And again. She wrapped her legs around me loosely, and I took the hint, pulling back not quite as far, but picking up my pace. \"Yes, just like that, keep fucking me just like that you fucking stud!\" she yelled. \n\nI started breathing like I did when I sprinted, measured breaths I was concentrating on as I kept up my rhythm. Our slapping sounds and the squelching of her wet slit were the only thing in the room save for her grunts and occasional exhortations to keep fucking her for all I was worth. We kept pushing back at each other, and I grabbed onto her hips, pulling her towards me on every single stroke in. We were both pouring sweat as we kept going, but I couldn't slow down until I got her over the edge. \n\nHer moans built steadily, and as she got even louder, she abruptly clamped her legs around me and threw her body forward into me. I wrapped her up tightly in my arms and pushed every millimeter of my cock into her that she could take, and her body began to tremor as her pussy clamped so tightly it almost hurt, rippling around me as I was forced to stop moving inside of her. As her channel clenched and unclenched, her wetness flowed abundantly, flooding my balls and crotch, and leaking down my legs. \n\nI came suddenly and almost violently, my head getting light, and I was forced to rest my knees against the edge of the bed to keep from falling over or dropping her. I held her in my arms, cradling her as her body slowly stopped quaking and came back to earth. She relaxed back a bit, opening her eyes and staring into mine. \"Holy fucking shit...\" she muttered, as I gently set her ass back on the edge of the bed, kissing her gently.\n\n\"Yeah, well said,\" I replied. \n\nShe kissed me gently, then a bit more insistently. \"Goddamn.\"\n\nI loosened my grip on her, and slowly pulled my prick out of her. \"Do uh...do you need a towel,\" I asked.\n\n\"I'm good. It's way up there, probably going to take a minute to work its way out.\" She slid up on the bed onto her side, patting the spot beside her. I laid down facing her, brushing her hair out of her face and giving her another kiss. \"I knew you had something wild inside you, I just never knew it'd be that...damn.\"\n\n\"I guess you inspired me.\"\n\n\"I'm sure I helped, and I always figured you'd be good, but damn...I never knew you'd be that good!\"\n\n\"You're pretty goddamn amazing yourself.\"\n\n\"Thanks. I'm just glad you can keep up with me,\" she said with a wicked grin, reaching down and grabbing at my still sticky cock.\n\n\"Well, I'll try,\" I replied. \"But I'm definitely going to need a quick breather after that.\"\n\n\"Let me worry about that,\" she replied. She scooted down and put her head between my legs, then sweetly licked my softened length. She repeated this again, and again, slowly bathing my rod clean, gently licking my balls, then down under to my taint, back up to my length again. \n\n\"Isn't that...\" I asked, hesitating.\n\n\"It's amazing. Tasting me and you mixed together is so fucking hot,\" she interjected, as she went back to cleaning every bit of me off.\n\nI sat back in amazement and watched. Slowly, I felt myself rising again, and even though I had assumed I'd be useless for an hour or two, I inflated again rather quickly. Within a few minutes, she was vigorously sucking me, and I was hard as a rock. \"God yes...\" she muttered, as she crawled up and mounted me again. \"Cum is the best lube,\" she said as I bottomed out on the first stroke.\n\nWe went again, not exactly as frenetic as the first time, but just as intense in feeling. I flipped her over again, but this time, feeling a bit more sure of myself, I pulled out and told her to bend over. I pounded her hard in doggy, spanking her ass as I got braver, which she loved even more than I thought she would, demanding I do it again and again, until literally her whole ass was red. As I fucked her hard, I reached around and played with her clit vigorously. That set her off, and she collapsed forward, but this time as she rippled I didn't follow. I gave her a few moments to calm down, and then began fucking hard back at her again. She pushed back on me, and said \"Sit down on the bed.\"\n\nI did as I was told, and she quickly got on her knees and swallowed most of my length. She pulled back, then sucked me all in again and again. Finally, slowing down, she stared up at me as she unhinged her jaw even more and then popped the last several inches of me into her throat. She started working her throat muscles and tongue against me, and as I threw my head back with pleasure, she grabbed my hand and placed it on the back of her head. \n\nI took the hint and started fucking her face, gently at first and then increasing my thrusts as she hummed appreciatively around my length. She was drooling profusely, obviously enjoying this, and I began plunging in for all I was worth, and as I began groaning another powerful release, she pulled partially off, wrapping her hand around my length as she continued to suck on the end. I shot several hard spurts into her mouth, and her eyes partially rolled backwards as I filled her mouth with jizz. As my cum subsided, she gave me a couple more strokes with her hand, then pulled off. She locked eyes with me, then opened her mouth to show off my spunk coating her tongue. She closed her mouth, swallowing and then smiling again. A small rivulet ran down her lip towards her chin, but she quickly scooped it up with her finger, sucking it off as she closed her eyes and half-smiled. \"It's rude to waste,\" she finally said.\n\nI shook my head in amazement and admiration. She smiled at me as she laid back down. \"Why don't you come cuddle with me for a bit?\"\n\nI laid down, and she threw her leg over me and leaned her torso against mine. I gently tickled her back for a couple of minutes, and was about to say something as I realized she was drooling on me\u2014she'd fallen asleep. I laid there, not wanting to disturb her, and even though I didn't feel tired at all, I dropped off right after.\n\nI woke a bit later to her gently kissing my chest. I groaned in appreciation. \"How long was I out?\"\n\n\"A couple hours. It's almost 1pm.\"\n\nI reached down and kissed her. She hummed into my mouth, then broke away and said \"If we're gonna do that again, we should probably eat something first. And we both definitely need a shower.\"\n\n\"Fair.\" \n\n\"And before that, you should call your girlfriend.\"\n\n\"She's not my girlfriend, she's just a friend.\"\n\n\"Fine, the other girl you're going to be fucking soon,\" she quipped, handing me the cordless handset.\n\n\"You seem to have a lot of confidence in me,\" I said, dialing the number.\n\n\"I just know that marvelous member of yours needs to be shared and spread around,\" she purred, settling her head dangerously close to my prick, but not making any designs towards it. \"Put it on speaker.\" I complied as it started ringing.\n\nMary Sue's number mom answered the phone, and I chatted with her for a few seconds pleasantly before she went to get her. So far, so good, she didn't say anything mean to her folks. \n\n\"Hey,\" she said.\n\n\"Hey yourself,\" I answered.\n\n\"So what happened after I took off?\"\n\n\"Well the bad part is I got caught,\" I replied as she gasped. \"The good part is it was my neighbor Kelly, and since we're friends she's promised not to say anything.\"\n\n\"Oh thank god!\"\n\n\"Yeah, it's all fine.\"\n\n\"That's a relief.\"\n\n\"How are you?\"\n\n\"A tiny bit hungover. I woke up and told my parents that I'd drank too much and you walked me home. They were totally cool about it, said they'd rather that than I drove drunk.\"\n\n\"That's good. I was worried you'd get in some shit.\"\n\n\"Nah, I'm good. Listen...uh...I'm really sorry we got interrupted in the middle of...well...I was wondering if you wanted to get together and try again?\" she asked.\n\n\"Yes, I'd love to,\" I replied. \"My mom's going to be out of town all week.\"\n\n\"Really?\" she replied enthusiastically. \"Then I might have to drop by a couple nights after school.\"\n\n\"I look forward to it.\"\n\n\"Good. I think we have some business to finish.\"\n\n\"Agreed. Oh, and by the way, Kelly said in the future that if we ever needed a place to be alone, we could borrow her place for a couple hours.\"\n\n\"Seriously?!\"\n\n\"Yeah.\"\n\n\"You are seriously the best...\" she paused, and lowered her voice, \"fuck buddy any girl could ask for.\"\n\n\"Well thank you.\"\n\n\"I think I'll be thanking you soon. Doing anything after school tomorrow?\"\n\n\"Track practice for an hour. Then I'm free.\"\n\n\"Meet you at your place at about 5?\"\n\n\"It's a date. See you then.\"\n\n\"A lot more than see, cutie,\" she said, and disconnected the call.\n\n\"Well well well, look who's becoming a stud before my very eyes,\" she said with a cheshire-cat grin.\n\n\"My luck does seem to be turning with the ladies.\"\n\n\"Oh, it's only just beginning, trust me. Now, get your ass in the shower, and let's refuel so we can have more fun today.\" She reached down and kissed me, and as I stood up, she pushed me playfully and smacked my ass."
    ],
    "authorname": "silverisgold",
    "tags": [
        "creampie",
        "first time",
        "older woman",
        "oral",
        "younger man",
        "oral sex",
        "mature"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/summer-awakenings"
}