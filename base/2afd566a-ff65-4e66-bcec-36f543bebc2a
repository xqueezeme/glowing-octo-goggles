{
    "title": "Modern Jane Meets Tarzan Ch. 06",
    "pages": [
        "The adventure continues with Tarzan showing Jane a special cave while doing some exploring of their own. Please try the earlier chapters for more of the story and how Jane ended up in the arms of a wild man.\n\nChapter Six\n\nThe morning sun streamed through the opening in the cave ceiling illuminating the pool and sending sparking reflections onto the walls. Jane's eyes fluttered open, confused at first then taking in the beauty of the cave around her. Black walls, mostly smooth with jagged outcrops scattered farther up, held sparkling minerals making it look like a disco ball had been set up in the night.\n\nTarzan wasn't by her side. Memories of last night washed over her, and she smiled up at the ceiling. She still felt Tarzan's shape inside her, pressing into her walls, rubbing against her lips... She laughed, reaching down between her legs to feel wetness and dried cum on her thighs. \"Time for a rinse off.\"\n\nJane stretched on the soft leather skin, watching the brilliant light display on the cave walls from the reflections, so different from the near total darkness of last night. She stood and waded toward the pool, the lights glowed on her skin, bathing her in twinkling stars and sparkles from the water. There was indeed a small feeder waterfall at the back of the pool, so Jane swam twenty feet to it and washed her hair in the cool stream. She could see her feet on the bottom of the pool which couldn't be much deeper than her height at the center. What a wonderful place, she thought.\n\nThe crystal clear water held no visible signs of snakes or long-toothed fish swimming near her feet, so Jane felt comfortable floating, watching the light show on the ceiling and the bright circle of sunlight in the opening far above her. Several vines hung down from the ceiling around the opening, but it could not have been more than a few feet wide in diameter. She floated, her mind drifting to the whirlwind this trip had become, from the long arduous trip overseas, to the guides abandoning her in the jungle, and now to Tarzan finding her and showing her pleasures and treasures like this cave. All of this stemming from a desire to both separate herself from her parents legacy in America and ending up here where it all ended for them years ago.\n\nDrifting in the memories, both painful and sensual, she heard Tarzan call out. She stood, chest deep in the water and saw him entering the cave in the same location they had last night with another skin type pouch on his shoulder. She called back, swimming closer to shore. He dropped the pouch on their bed area, hurrying to help her out of the water. Jane drifted toward the edge and walked to him, her nude figure dripping water and leaving small footprints in the shallow sand. He was still naked as well and covered in a light sheen of sweat from the time he'd spent outside the cave. He glistened in the light show, Jane leaning in to kiss him and whispering, \"Good morning, Tarzan.\" He kissed her back, then stooped to splash water on his face and hands.\n\nThey walked together back to the leather mat, \"Sit, Jane.\"\n\nHe opened the pouch, spreading out an assortment of strange looking fruits and several small fish he must have cooked somewhere outside. She couldn't recognize any of the fruits, but Tarzan slipped the knife out of the sheath on his neck and split several of them, offering her pieces of the juicy insides. They were delicious, if nothing short of strange looking. One tasted like a mango mixed with lemon, while another was sweet, peppered with thick black seeds, but indistinguishable from anything she could recall having eaten before. The fish were different than before, thin and long with a sweeter flavor and a delicate flesh.\n\nThey ate in silence, exchanging looks, nods and smiles with Tarzan watching to see what she thought of the foods he'd brought to her. Soon, she again played word games with Tarzan, and he continued to pick up words and short phrases, adding in a few more verbs - do, eat, come, like. He seemed to enjoy learning and hearing her speak. He was smart, obviously, she thought, and had a definite familiarity with English. They finished every bite of breakfast.\n\nThey washed their hands in the pool and sat beside it, watching the last of the light show as the sun moved out of direct line with the opening in the ceiling. It left the cave lit, but the sparkles had dissolved. Tarzan washed the knife, and Jane could see it was very sharp, while he carefully traced the blade to remove juices from the food. It gave Jane an idea.\n\nShe reached for the knife, \"Could I see that, Tarzan? I think I could use that for something.\" He looked up, puzzled but carefully handed her the knife.\n\nJane stroked the blade gently, sensing it was indeed quite sharp and lightly slid it over the downy fine golden hairs on her forearm. It shaved them off cleanly, and she smiled looking up to Tarzan. \"Let's try something, wild man.\"\n\nSpreading water over his bushy beard, Jane repeated his name a couple times and slowly approached him making shaving motions on her own cheeks and then pointing to his, \"Can I try this with you?\"\n\nTarzan waited and she drew closer, sliding the blade high up on his cheek and drawing it down. Not a perfect razor, but surely sharp enough, and she shaved several strips off of his beard, revealing his bare cheeks. She did the other side of his face and pointed to the water, urging Tarzan to look at his reflection. He leaned over, saw his bare cheeks and touched them, running his fingers over them and looking back to her, then the knife. A darker tanline traced his upper cheek where the beard had covered, but otherwise she thought he looked great. She reached again for him, wetting the remainder of his beard, then trimming it off to reveal a real man's face beneath all the scruff.\n\nTarzan made faces in the refection in the water, again feeling his face, apparently having not had a shave his whole life.\n\n\"You look great, Tarzan, it shows off your beautiful face, and I can see those lips better.\"\n\nShe leaned forward, kissed him deeply and smiled when she pulled away, reaching up to caress his smooth face. \"I like it... a lot.\"\n\nTarzan nodded, feeling his face again and leaned in for another kiss. He clearly could tell the difference and kissed her harder, pressing his lips to hers and letting her trace his tongue with hers as they touched.\n\n\"What do you think? Will it pass for the latest jungle look this fall?\"\n\nTarzan again ran his hand over his jaws, moved his lips and nodded back to her. \"Tarzan like.\"\n\nHer eyes lit up, \"Yes, yes!\" She hugged him closer and kissed him again. Her hands ran through his hair and this time, she traced his smooth jawline around his cleft chin and up to his ear. Gentle touches that brought his eyes to hers as her other hand slipped over his shoulders. His lips found hers, more gentle this time and their tongues touched in a sensual, moist dance. He pulled her closer, clearly desiring her like never before, and she loved the feeling of him tugging her to him, his body pressed against her.\n\nShe could feel his penis, taught and pressing at her abdomen, then his hands caressed her shoulders, her neck and she felt the gentle press of him pushing her downward. Electric current fired through her when she realized he was urging her down to his hard manhood. Her knees buckled and she fell quickly to them in the sand, her hands and lips drawn to him and burying his engorged tip in her mouth. She'd been the aggressor before and now Tarzan wanted her, needed her; she could feel it and it made her warm all over.\n\nHe stood before her, his hands sliding through her damp hair as she worked on his cock, slurping, kissing, tickling every inch of him. She traced his tip, flared it open gently and slid her tongue over the hardened opening. She tasted his precum, salty on her lips and wanted him more, yet bobbed again relishing his feel in her mouth. Tarzan groaned above her and she saw his eyes on her as she glanced up, grinning and enjoying him.\n\nShe pressed harder, swallowing as much of him as possible into her mouth, feeling his shape working over her tongue. Moisture dripped form her pussy and she slid a hand to her open lips to stroke them. Moments later, she looked up again, pulling her mouth off of him, tasting his early nectar on her tongue and stood as well. Then, she reached up and pressed him down, drawing him to her wet opening and leaning in as he understood, it was her turn.\n\nHis smooth face pressed against her bare pussy and his tongue found her soaked. She heard moist lapping, felt electric torrents drive through her channel and spark her walls. God, this felt wonderful, and she held his shoulders. pulling him tight against her wetness. His tongue found her hardened bud and worked it, lapped at her and drove her to the edge. He wrapped his arms around her thighs, drawing her closer, closer and plunging that tongue into her, over her, and harder.\n\nJane shrieked, the orgasm washing over her as her head lolled upwards with the bright light of the opening flashing in her eyes. Tarzan held her, still battering her pussy as her knees went rubbery and she slumped. She rested against him, her head on his strong back and his arms still supporting her. She took deep breaths, recovered her senses and stood, pulling away from him but still not finished with this man.\n\nTwo steps away, she knelt on all fours on the leather bed they'd used, pushing the food pouch into the sand and motioning for him to come to her. He followed his hard cock, kneeling behind her as she opened her legs, touching her wet lips and imploring him to enter her from behind. He fumbled a bit, but figured out what they both wanted. He filled her in a rush, pressing deeply into her, this angle providing intense stimulation to her insides.\n\nJane's breath caught, his hard, hot cock driving in her with his hands were on her hips, and he thrust forward, burying himself deeper, then sliding nearly out to do it again. She reached under and rubbed her clit, still hard from his tongue lashing earlier. She rocked back and he thrust forward, creating a pistoning effect that drove her over the edge again. She screamed out as his heavy testicles slapped against her hand grinding on her clit. She came hard, intense, and loud.\n\nTarzan's pace never slowed, still thrusting in her, but with more speed as she felt him swell in her walls. With a loud scream, he came. Long thrusts emptying his cum into her wet cavern. Pounding her and filling her with her ass raised high in the air, as she fell to her shoulders panting. He panted also, the last of his seed spurting into her and gripped her hips. She cooed, reached for his hands and pulled him to her side, rolling one way as he fell beside her. They were breathless and satiated.\n\nThey kissed, both now grinning in the post-coital glow. She stroked his face, whispering again, \"Jane likes,\" and kissed him.\n\nTarzan touched his cheeks, then hers and nodded. Her lips covered his smooth face in light kisses.\n\n\"Jesus, Tarzan, it's early morning, what more do you have in store for me today?\""
    ],
    "authorname": "slickbox2010",
    "tags": [
        "couple",
        "africa",
        "nude",
        "cave",
        "oral",
        "doggy",
        "cum",
        "wet",
        "erotic"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/modern-jane-meets-tarzan-ch-06"
}