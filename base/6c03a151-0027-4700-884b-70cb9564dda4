{
    "title": "Elizabeth Bennet Considers",
    "pages": [
        "It is the praiseworthy custom of authors on this site, when presenting to the public a literary endeavour which depends on a previous work, to direct the reader to that first writing. This humble offering cannot be understood without some knowledge of Miss Jane Austen's classic novel, Pride & Prejudice. \n\nIf you have not read that novel, why are you wasting time here? Pride & Prejudice is not just a romance; it is the romance in the English language. On the Literotica five star scale, it scores two hundred... at least. Go read it forthwith! It's available online, if you so desire.\n\nIf reading gently paced early 19th century prose, even of the very highest quality, is not an attractive prospect to you, you may wish to watch the magnificent film adaptation starring Colin Firth and Jennifer Ehle. The Bollywood adaptation of the classic, Bride & Prejudice, is great fun too, with dancing that Miss Austen herself, who delighted in the pastime, would doubtless enjoy. The Keira Knightley version is Jane Austen lite. Another, rather different film, loosely based on an episode in Jane Austen's life, that you may enjoy is Becoming Jane Austen.\n\nIf you find anything witty or well written in this tale, it is probably stolen from Miss Austen. The story will also be gently paced. To quote Jane Austen herself from the preface to an unpublished and, for that matter, undiscovered novel, though there is some sex here, \"this is not a stroke story.\"\n\nIt is a truth universally acknowledged that a single young woman in possession of a good offer of marriage must be in want of instruction. It was the universal opinion of the four and twenty families of the neighbourhood who visited at Longbourn, that the two eldest Bennet daughters had received very good offers of marriage indeed.  It was whispered in every corner of every ball, assembly or dinner, without fear of contradiction, that these offers were beyond any reasonable expectations for the sisters, who could anticipate, at most, a hundred a year from their father upon his death, as a consequence of the inconvenient fact that their father's estate was entailed upon a distant cousin, Mr. Collins, presently Rector of Rosings, in Kent. \n\nIf this were true for Miss Jane Bennet, first alike in seniority and in beauty, now the betrothed of Mr, Bingley, with five thousand a year, how much more was it true for Elizabeth, the second daughter of the family.  She had been so fortunate as win the affection of Mr. Darcy, he of the reputation for pride and disagreeableness of disposition, but also, it was well known, the command of an income of ten thousand a year. The last characteristic, thought Elizabeth, outworked the former two in procuring approval of her match, even before the neighbours came to know the true sweetness and generosity of character of Mr. Darcy. \n\nFor a second daughter of a gentleman of middling fortune to become mistress of so notable and extensive an estate as Mr. Darcy's house and park at Pemberley, was a marvel to be canvassed in amazement by the gentlemen of the neighbourhood and with envy by the mothers of young women of marriageable age, or even those who might be counted as that age in their maternal imaginations. Still, both the elder Miss Bennets, were held in such esteem, Jane for her sweetness and good nature, Elizabeth for her charm and lively wit, that the envy was but little voiced and the instruction flowed with goodwill from every lady of a certain age among their acquaintance.\n\nSo it was that their Aunt Phillips directed her nieces in the correct management of parlour maids and the proper method of dismissal of the same, should they prove dilatory in their duties. Mrs. Goulding of Haye Park offered advice on a French manner of serving any delicate white fish in a sauce certain to make guests suppose they were dining upon lobster. Elizabeth was of the opinion that to discipline parlour maids in her future life would be to trespass upon the responsibilities of the housekeeper of Pemberley, of whose abilities Mr. Darcy spoke so highly. She was also quite sure that, as the wife of Mr. Darcy, surely the wealthiest private gentleman in Derbyshire, she need not present imitation lobster at her table but could afford the delicacies themselves, always supposing that they were in season. \n\nWhile these offerings were received with courtesy by the sisters, they were more deeply touched by the gifts of the poor of Longbourn. Old Mrs. Brockthwaite, widow of the baker of the village, presented each of the sisters with a crockery pot of preserve of quince, together with a receipt of instruction in how to prepare that delicacy. So excellent was the preserve that Elizabeth thought it might be proper to pass on the receipt even to so august a person as the housekeeper of Pemberley.\n\nThe sisters had visited the widow regularly in the last winter season, supplying her with little delicacies from the table at Longbourn to ease her sufferings from rheumatism. Elizabeth was humbled by the remembrance that she had visited so frequently largely out of duty and a desire to keep company with her sister, whose care for the poor sprang from more admirable qualities. \n\nShe considered what power for good would lie within her situation as Mistress of Pemberley and resolved that a disinterested and active care for the poor would stand among her duties behind only her responsibility to Mr. Darcy and the care of any children with whom they might be blessed.\n\nSo the season of engagement passed on for Elizabeth with general satisfaction. She strove always, and with tolerable success, to keep Mr. Darcy to herself or to her more presentable connections. She was pleased that her father was coming gradually to know and value Mr. Darcy as he ought and that her mother was so awed by his wealth and his height that she was at least quiet, if never sensible, in his presence. \n\nElizabeth acknowledged to herself, if to no one else, however, that she was indeed wanting further information and instruction in areas which none of the ladies of the surrounding country seemed able or willing to discuss. In the first place, she was anxious to know more of the person and history of the man she was about to marry. One could be engaged, she came to realize with surprise, knowing very little of the gentleman with whom one would share a future, not to mention the matrimonial bed. \n\nIt occurred to her, to consider but one small example of this lack, that she had become engaged without even knowing the full Christian names of her betrothed. She knew she must call him by those names in that place where N takes M for better or for worse, but she did not know what she would say. Elizabeth feared that this was but one area of ignorance in which she required enlightenment.\n\nAs it happened, the matter was resolved with extraordinarily little trouble on her part. One day as she and Mr. Darcy were walking towards Oakmount, he himself raised the matter.\n\n\"My dearest Elizabeth, I have noted that though I address you by your Christian name, you still call me Mr. Darcy. From long use, it has not so very formal an air, but it would please me if you could do otherwise in our private moments.\"\n\n\"Shall I call you 'Mr. D.' in imitation of the elegant terseness of the Rector's wife at Hartfield, where dwells my cousin Emma?\" teased Elizabeth.\n\n\"Pray do not!\" exclaimed Mr. Darcy in amused astonishment.\n\nWith a more serious air Elizabeth continued, \"Your kind letter of explanation that you wrote me at Rosings...\"\n\n\"Oh, do not mention it, I pray you. I am convinced that it was written in dreadful bitterness of spirit and, as I have told you, I recall it only with abhorrence.\"\n\n\"It is precious to me as a token of your generosity of spirit to a foolish and prejudiced girl. But it was signed, as I remember, 'Fitzwilliam Darcy.' If I were to address you as 'Fitzwilliam,' I should think I was speaking to your cousin, 'the dear Colonel,' as your aunt calls him.\"\n\n\"That is indeed a problem. Fitzwilliam is the name my mother used, as a constant reminder of her noble connections, but my full name is Thomas Henry Fitzwilliam Darcy. My excellent father, when alone with me, would call me Tom. It has a very loving ring in my ears from those memories. Can you not use that name in private moments?\" \n\nMr. Darcy's eyes darkened with some strong emotion, even as he spoke, and he seized her hand. Elizabeth thought he was about to embrace her and perhaps even to salute her with his lips, when a ploughman driving his brace of oxen came in sight. Mr. Darcy stepped away from her and the pair continued on their walk.\n\nElizabeth wondered whether it would have been required of her, as a young woman of character, to repel her beloved's advances, had he pressed them, or whether such tokens of love were permitted between those shortly to be wed. When she examined her feelings, Elizabeth, asked herself if she would have wished to repel them or even if she would have been able to do so, whatever the proprieties might be.\n\nIn any case, deeply touched by these signs of the depth of his affection, she promised to think on these things. As they continued with their walk, she found herself experiencing those pleasant yet disturbing sensations of moisture between her legs which had been occurring with such marked frequency since her engagement to Mr. Darcy.  She had noticed that these feelings seemed connected to any particular manifestation of Mr. Darcy's care for her and she supposed that they had something to do with anticipation of full marital closeness.  \n\nThe thought of full marital closeness raised the other matter of concern for Elizabeth. Of those intimate duties which pertain to the matrimonial bed Elizabeth knew very little and longed to know more She knew not where to turn for that instruction, however.\n\nAs a young woman raised in the countryside, Elizabeth had seen from a respectable distance the bull on the home farm covering the cows and the stallion the mares and one could scarcely walk to Meryton without witnessing dogs coupling in the road. Consequently, she had some notion of the act that unites men and women. A memory from her childhood made her wonder, however, if the coupling of farm animals was a safe and complete guide to matrimonial relations among humans. \n\nAs a very little girl, she had been suffering one night from an affliction of the stomach and, her sister Jane being, for some reason unavailable, had sought comfort in her mother's room. She had found her father in her mother's bed, nightgown drawn up over his bare bottom, lying between her mother's legs which, likewise entirely bare, were extended straight upwards into the air. Mr. Bennet was thrusting fiercely with his bottom and grunting in a manner she had never heard before from him. Becoming aware of her presence, he had ceased his movements, and had shouted at her to go away. \n\nElizabeth could recall no other time when her father had been so audibly angry with his favourite daughter and consequently had never forgotten the incident. Upon reflection, she was convinced that she had surprised her parents in the marital act. That her sister Lydia had been born later that year, as she recalled, confirmed to Elizabeth that her understanding of the incident was a correct one, From behind or on top for the man? From beneath or on all fours for the woman? How was the act to be carried out? \n\nElizabeth was of the opinion that most young women in her condition would consult their mothers in these delicate matters, but she was not sanguine about the possibility of gaining helpful or sensible information from Mrs. Bennet. She commenced her inquiries, therefore, as was her custom, by speaking with her sister Jane.\n\n\"My dearest sister, \"she began. \"May I consult you on a matter pertaining to our future duties as wives?\"\n\nJane put down her embroidery and, with an inclination of her head, signified her willingness to listen. Elizabeth decided, nevertheless, to approach the subject indirectly.\n\n\"Years ago, when I began the first of my monthly courses, you explained to me what was happening and with your customary kindness held a warm cloth against my lower parts to ease my discomfort. I can never thank you enough for your kindness.\"\n\nJane blushed and shook her head slightly, as if to dismiss the subject.\n\n\"Then you and I did the same for Mary and the younger girls when their times came.\"\n\nJane nodded.\n\n\"But I am ashamed to say that I had never considered who carried out those valuable duties for you. Was it our mother?\"\n\n\"No,\" said Jane. \"It was left to Hill.\"\n\n\"Mrs. Hill, the housekeeper?\" exclaimed Elizabeth.\n\nElizabeth considered that in better regulated families, such intimate responsibilities would normally be the province of a girl's mother, rather than that of a servant, no matter how long serving. Once again, she was aware of the disadvantages that necessarily were the lot of children raised in a family such as her own.\n\n\"It may be, my dear sister, that we are in a like situation as we contemplate our approaching marriages. I would wish to know more of the interesting secrets of the marriage bed, in order to make Mr. Darcy a good wife... But I confess that I should not like to receive this instruction from our housekeeper.\"\n\nThe elder Miss Bennet, frowned as she considered the problem.\n\n\"My dear Lizzy,\" she replied. \"I consider that we may be deficient in respect towards our mother if we do not at least afford her the opportunity to speak with us on these matters.\" \n\n\"You are doubtless right, dearest Jane,\" Elizabeth replied with both a blush and an arch smile, \"With five children our mother must have some familiarity with the marital act!\"\n\nAccordingly, the two sisters sought out their mother, who was lying back on a chaise in her dressing room. After ascertaining that their mother's nerves were in no agitated or elevated state, Jane commenced the discussion. \"Mama, Elizabeth and I wish to consult you about that which will take place on our wedding night,\" \n\n\"Well, my young misses! I was wondering when you would deign to consult with your own mother. There are matters about which you know very little that must be considered at these times and it is very proper that you should speak with me. Who better than your mother to advise you?\"\n\nElizabeth was vastly encouraged by this reply and the two sisters settled in to listen to their mother.\n\n\"You will recall that Mr. Bennet was very tiresome about your sister Lydia's wedding and made no gift to her to mark her marriage to dear Wickham, as a token of his regard. She was married, with no new clothes whatever to mark the occasion.\"\n\n\"But...\" interjected Elizabeth.\n\n\"But he is disposed to be generous with you both, I am glad to say. Poor Lydia, married in a year old dress! A very ill managed affair indeed!\" Mrs. Bennet shook her head in remembered shame.\n\n\"But, mother, we have not come to speak of wedding dresses!\" exclaimed Jane.\n\n\"And very wise, you are, my dears!\" Mrs. Bennet. \"So many young women, and, I am ashamed to say, their mothers, think only of the church and the wedding breakfast, and do not considered the needs of the wedding night!\"\n\nElizabeth considered that this was proceeding much better than she had expected.\n\n\"Yes, there is a warehouse in London, near your Uncle's home in Cheapside, where nightgowns and shifts of the finest French silk can be found at the best price. I intend to travel to London with you and we shall see what we may find there. What say you to that?\"\n\n\"But mother,\" remonstrated Jane with her customary gentleness. \"We had been considering more what is beneath a nightgown.\"\n\n\"Oh my poor sweet innocents! I should have thought you would have known. There is nothing beneath a nightgown, especially on a wedding night!\"\n\n\"Exactly,\" said Elizabeth.\n\n\"Exactly, what?\" replied Mrs. Bennet, with puzzlement.\n\n\"What is beneath the nightgown. We wish to know what will happen in the marriage bed and how we may please our husbands.\"\n\nMrs. Bennet began to grow agitated and to raise her voice. \"Wear a French silk nightgown and your husbands will be pleased!\"\n\nElizabeth and Jane looked at one another. \"Very true, Mama,\" replied Jane, \"But we imagine they may be more interested in what is under the nightgown.\"\n\nMrs. Bennet grew more agitated still. \"Well, I never heard of such bold talk. Why do you girls ask me such things? Dearest Lydia, never troubled me with these questions before she married Wickham!\"\n\nThis was quite true, thought Elizabeth, since Lydia had eloped and lived with Wickham several weeks before the wedding. Lydia must surely already have learned the secrets of the marriage bed well before she entered it legally.\n\n\"But Mama,\" remonstrated Elizabeth. \"No one has instructed us in the proper comportment of a bride on her wedding night so that we may please our husbands.\"\n\n\"Proper comportment of a bride?  Oh, just lie back and think of England!\" shouted Mrs. Bennet. \"You have no consideration for my poor nerves!  Hill! Hill! Where is Hill?\"\n\nJudging that nothing further of value would come from continuing the interview, Jane and Elizabeth left their mother to the ministrations of Hill. They slipped into the hallway and there encountered their father. Mr. Bennet was gazing in the direction of his wife's dressing room and looked grave.\n\n\"Jane, Elizabeth, pray come into my library.\"\n\nMr. Bennet led his two eldest daughters to his sanctuary, closed the door firmly and, with an air of apology said, \"I fear that your mother and I have not given provided you with a model of marital felicity to imitate.'\n\nNothing could be said in response to such an admission by their father so nothing was what they said.\n\nMr. Bennet continued. \"You appear to be in want of instruction which a man, and particularly a father, cannot rightly give to young women. Your mother has a carrying voice. She is, I gather, unwilling to relieve your uncertainties and teach you what you wish to know.'\n\nElizabeth nodded.\n\n\"With your permission, I will write to your Aunt Gardiner to ask her to take up this office for you. She is a wise woman and her marriage with your uncle is more to be imitated, I fear, than my own with your mother. They will be in Longbourn several days before the wedding and your aunt will doubtless answer any questions you may wish to put to her. Will that assist you?\"\n\nJane and Elizabeth thought this a capital plan and signified their glad assent. Receiving that approval, Mr. Bennet, who seemed reluctant to continue the subject, indicated they could go about their business and picked up a worn copy of an old favourite volume, Tristram Shandy, as a signal that the interview was over. Jane and Elizabeth slipped away in silence.\n\n_________________\n\nThe flow of information as to her proper conduct in the married state, in all matters except the one that interested her most, increased as the wedding date of the sisters drew near. Elizabeth was gratified, however, that with one exception the male gender denied themselves the pleasure of instruction. To her distress, the one exception was the egregious Mr. Collins, and the unwanted advice was proffered in the most public manner imaginable, namely, from the pulpit of the parish church. \n\nMr. Collins, at the instigation of his wife Charlotte, Elizabeth's dear friend, had brought his wife to Meryton, in anticipation of her forthcoming confinement. Having engaged a curate to read the services at Rosings Park, Mr. Collins proposed to remain in the vicinity of his in-laws' home at Lucas Lodge until the forthcoming \"olive branch,\" as he described his anticipated offspring, should be delivered. \n\nThis was a development highly satisfactory to all. Lady Catherine de Bourgh, with what Mr. Collins described as her usual gracious condescension, had let it be known that she blamed Charlotte for bringing Elizabeth into Kent. This, in her view, had led directly to the disgraceful engagement of her nephew, Mr. Darcy, to such a girl as Elizabeth. ",
        "Charlotte, truly rejoicing in the match, was glad to be able to plead the desirability of a mother's assistance in a first confinement as an excuse for returning to Meryton. Mr. Collins, too, confessed to a pleasant anticipation of release from the weekly labour of composing a sermon. He found it tedious, he said, always to be consulting the homiletical works of the great divines of the previous century. The labour of copying their sermons in longhand before preaching them, he informed his listeners, was quite dreadful. \n\nMr. Bennet, upon hearing this complaint of tedium, privately shared with his second daughter, his opinion that the ennui of Mr. Collins was likely considerably exceeded by that of his listeners.\n\nIt was with some surprise, therefore, when at dinner in Longbourn, that Mr. Collins intimated to his fellow guests, that he had accepted an invitation from the Rector of the parish to preach in Longbourn church the following Sunday.\n\n\"For,\" he said, I thought it my duty as a clergyman of the Church of England, and a man blessed with domestic happiness, soon to be symbolized by the gift of a young olive branch, to offer my advice to those about to enter the halls of highest human happiness. I mean marriage,\" he explained to Mrs. Bennet, who looked puzzled as to his intent.\n\n\"It would be wrong, I consider, to withhold the fruits of my experience from my fair cousins and their noble admirers at such a time. Therefore I have agreed to take on this task for you.\"\n\nBingley merely looked appalled but Mr. Darcy smoothly said, \"I value your goodwill on this occasion, sir, and would doubtless profit from your instruction. But a friend from Cambridge days has just been presented to a valuable living in Huntingdonshire. I promised him that I would come to hear him preach on Sunday.\"\n\nElizabeth was of the opinion that this engagement, of which she was now hearing for the first time, had been formed so suddenly for the sole purpose of avoiding the doubtfully edifying pleasure of attending to Mr. Collins' sermon. She greatly envied this example of the freedom of the male gender to come and to go as it wished. No similar excuse would be available to her, she feared.\n\nSpeaking as much to Elizabeth as to Mr. Collins, Mr. Darcy continued apologetically. \"My friend works very hard on his sermons, labouring over every word, and has told me he would value my comment on one of his addresses.\"\n\nMr. Collins looked surprised, \"He writes his own sermons? Not in the best traditions of the Church of England, surely?\"\n\n\"Ahh,\" said Mr. Bennet soothingly, \"but you must remember he is a Cambridge graduate and as such must need more effort. As an Oxford man, you are spared the necessity of such labours. It is well known that Oxford men are able to discourse at length with little thought and no preliminary preparation.\"\n\nMr. Collins was visibly pleased by this compliment, but Elizabeth who knew that her father, like Mr. Darcy, was a Cambridge man, doubted that he had caught the full meaning of Mr. Bennet's words.\n\nAs the dinner party passed into the drawing room after dinner, Elizabeth took the opportunity to whisper in Mr. Darcy's ear. \"Coward!\" she said, with an arch smile. Mr. Darcy looked as if he were trying not to smile in return and, upon being addressed by Mrs. Bennet, succeeded without difficulty.\n\nAs it happened, Mr. Collins' sermon was harder to endure than even Elizabeth had expected. He spoke at length of a wife's duty of submission to her husband, particularly where the husband was of higher rank than the wife. \n\n\"Unlike my own dear wife, some young women,\" declaimed Mr. Collins, \"are not fully cognizant of the condescension of a high ranked gentleman in offering to share his life with her. Such women may even exhibit a shameful levity in their relations with their husbands, thinking that a false charm and easy wit excuse their lack of proper submission to their husbands.\"\n\nElizabeth, who knew full well where this shot was aimed, thought it a great pity that Mr. Collins had departed in this instance from his stated practice of depending on the sermons of others. This address, she knew, was Mr. Collins' own composing. \n\nCharlotte had been invited to share the Rectory pew and Elizabeth could see that she sat rigid and unmoving through this display by her husband, only a faint redness on the back of her neck beneath her bonnet betraying her emotions. Elizabeth's father merely squeezed her hand gently and raised his left eyebrow in amusement at some of Mr. Collins' more turgid sentences.\n\n\"A very fine effort indeed, Mr. Collins!\" declared Mr. Bennet, at the church door. \"If there are any bold young women in this neighbourhood of the character you are hinting at, I am sure they will know exactly how they should value your words.\" And, shaking Mr. Collins hand warmly, he passed out into the sunshine, followed by Elizabeth and Jane, who spoke not a word but only nodded their heads in acknowledgment of the preacher.\n\nThe sermon and indeed Mr. Darcy's absence from Longbourn, had one unexpected benefit, however. On Monday morning, as soon as visiting by ladies could be considered proper, Charlotte walked to Longbourn and invited Elizabeth to stroll with her alone in a quiet part of the garden. It was the very spot, Elizabeth recalled, of the memorable interview with Lady Catherine de Bourgh. Charlotte immediately, though haltingly, explained that she wished to apologize to Elizabeth for yesterday's sermon, which, she declared, had filled her with shame.\n\nElizabeth was privately of the opinion that her friend Charlotte had worse things to endure in marriage than an embarrassing sermon but that very thought reminded her that Charlotte might be a valuable source of information with respect to those questions which preoccupied her. Charlotte did, after all, share a marriage bed, no matter how unappetizing her partner might be, and surely she would answer Elizabeth's questions. Elizabeth made her best effort to lessen her friend's mortification and, as soon as politely possible, began to question her friend on the subject of her true interest.\n\nWhatever might have been Charlotte's reluctance to reply on another occasion, to Elizabeth's request for instruction, she could refuse her friend nothing after such a display by her husband.\n\n\"On my back,\" said Charlotte in response to Elizabeth's first question. \"Mr. Collins lies between my legs and inserts his member into me. It does not take long for him to finish, especially if I have prepared him properly, and then he leaves me alone.\"\n\nUpon Elizabeth's inquiry as to the nature of this preparation, Charlotte informed her that her mother had been fully aware that Mr. Collins was not a man whose embraces would be willingly sought by many women. Lady Lucas had therefore instructed her daughter always to take her husband's member into her mouth and liberally to lubricate it there.\n\n\"In your mouth?\" gasped Elizabeth, noting once again the moisture that was pooling between her thighs.\n\n\"Yes, it is quite clean and not unpleasant in itself,\" said her friend. \"And the moisture I leave there makes the entry into my female passage easy and swift. Sometimes, Mr. Collins even spends while I kiss and lick his member.  That makes him vastly happy and he falls almost immediately to sleep, which is very desirable to me.\"\n\nIn reply to another query, Charlotte continued, \"Though it grows and becomes firm when he is about to enter me, Mr. Collins' member is about four inches long when it is at its largest. It has always entered me with very little discomfort or, indeed, feeling of any sort, even the first time. If well moistened, there is no discomfort at all.\"\n\nCharlotte looked embarrassed, paused and then seemed to steel herself to speak further. \"I am aware, Elizabeth, that marital relations with another sort of man may be very different than with Mr. Collins. It happened that I once saw the blacksmith at Rosings cleaning himself after work. He is a large, well muscled man and his member, even when relaxed, was as large as Mr. Collins', fully erect. It may be, indeed I think it must be, that some men are larger than Mr. Collins.\"\n\nElizabeth considered privately that whether other men were larger than Mr. Collins, there were surely many who were more desirable. She said nothing aloud, however.\n\nCharlotte averted her eyes from Elizabeth and blushed deeply, but continued. \"I sometimes think of the blacksmith and imagine his member fully erect, while Mr. Collins thrusts into me. It creates a moisture that makes his entry more easy and... and it causes warm shakings in my lower belly that are pleasant to me. It may be that marital relations with a different sort of man would be very pleasant indeed, Elizabeth.\"\n\n\"You think of the blacksmith while....\"\n\n\"Elizabeth, pray do not think ill of me. I have made my bed and must lie in it. Do not scorn what I must do in that bed to lie there in tolerable peace.\"\n\nElizabeth assured her friend that in no way did she scorn her. Indeed, she was grateful the Charlotte had spoken so truthfully, as no one else had, of the secrets of the marriage bed. Privately, she considered again that anything is to be preferred or endured rather than marrying without affection\n\n__________________________\n\nMr. Darcy returned in due course. Upon his coming again to Longbourn, it was agreed between Mr. Darcy and Elizabeth that, after the wedding breakfast, the newly married couple would join Bingley and Jane, likewise to be married that same day, at Netherfield. There, in Mr. Bingley's house, they would pass the first night of marriage.\n\n\"For,\" said Mr. Darcy, \"the days grow very short at this time of year and it were well to rise early for the journey by coach to Derbyshire and our home at Pemberley.\" That this was an admirable suggestion was agreed to by all and the matter was thus settled. Jane, in particular, was delighted that her first act as Mrs. Bingley would be to welcome Mr. and Mrs. Darcy into her new home.\n\nAt the promised time, Elizabeth's Aunt and Uncle Gardiner arrived at Longbourn. Elizabeth took great pleasure in welcoming them, both because their coming was a tangible reminder that her wedding day was growing very near indeed, and because they were her most valued relations, beyond her father and Jane. Their invitation to Elizabeth to accompany them into Derbyshire was, she always recalled, the means by which she and Mr. Darcy had been reunited. That Mrs. Gardiner would instruct the sisters in the intimate duties of marriage was but a further reason to rejoice in their presence.\n\nThat evening Mrs. Bennet and the younger girls retired to their rooms. Mr. Bennet declared that nothing would give him greater pleasure than to entertain Mr. Gardiner to a leisurely glass of port in his library. Mrs. Gardiner invited her two eldest nieces to join her in her chamber.\n\nThe door firmly closed behind them, the two sisters sat on the small chairs that had been placed in the room by Mrs. Gardiner's foresight. Their aunt took her seat in a French fauteuil which formed part of the rooms normal furnishing.\n\n\"So, my dear nieces, your father has written to ask me to give you instruction in the duties of the marriage bed, something for which you both are eager.\" She looked a question at the sisters who nodded their assent in response.\n\n\"I fear I cannot accede to his request for I know nothing of such duties.\"\n\nNever had Elizabeth been so disappointed. She had been so sure that their aunt would enlighten their ignorance!\n\n\"But I should be very glad, \" continued their aunt, \"to speak with you of the joys of the marriage bed. Your uncle and I have done nothing out of duty in our bed, but much that gives joy. Do not think of duty, I beg you. Think first of joy and delight. This is the main thing I must tell you.\"\n\nElizabeth sighed in relief.\n\n\"Picture a dance, if you will. You both love to dance and do not do so because it is a duty. You dance because your bodies long to do so. It is true that you must learn the movements of each dance but you do not need to learn the delight of dance. The desire is implanted within you. Have you not become aware that another desire is likewise there within you?\"\n\nThe sisters pondered the truth of Mrs. Gardiner's words.\n\n\"The joys of the marriage bed are like a dance,\" said their aunt.\n\n\"But not done in company, dear aunt!\" laughed Elizabeth\n\n\"Surely, not done in company,\" agreed their aunt, with a smile.\n\nMore seriously, she continued, \"You should know, and then cast from your minds, that it is very possible that your husbands... already know some of the steps of the dance.\"\n\nJane and Elizabeth coloured with astonishment. Jane voice their surprise, \"But neither has been married. Surely you are not saying that they frequent women of ill repute, aunt!\"\n\n\"I trust not, girls. But men, particularly wealthy men, have ways of supplying their needs and it is not uncommon for young men to receive instruction. A helpful widow, perhaps, is arranged for a young man.\"\n\n\"But all the world is so hard on us, if there is even a suspicion of...\" cried Elizabeth in indignation. \"All society scorns us if we should fall but this is accepted?\"\n\n\"That punishment, the public punishment of disgrace, should in just measure attend the man's share of offence is, we know, not one of the barriers which society gives to virtue. In this world the penalty is less equal than could be wished. Perhaps there is a juster appointment hereafter.\"\n\nElizabeth lowered her eyes to the floor. This was not a welcome subject for contemplation.\n\n\"There is little we women can do about this. But there is this to consider, dear nieces, and then, as I say, to forget. This experience may assist in giving you pleasure.\"\n\nMrs. Gardiner then spoke of the ways in which a man pleases a woman and a woman her man. Half the night was passed in this most fascinating conversation. \n\nAs the candles guttered at last, and it was time for what little rest could remain in the night, Jane slipped away to her own room. Elizabeth tarried a moment, embraced her aunt and said:\n\n\"I love you dearly, aunt, for all your kindness to me. And I am certain Mr. Darcy will come to love you too.\"\n\n\"Do what I have told you and, later, tell him I instructed you. Then he will love me indeed!\" Mrs. Gardiner declared with a laugh.\n\n\"Now, off to bed with you!\"\n\n_____________________\n\nThe wedding day at last came. Dresses, so anxiously examined and approved by their mother. were donned and fine French silk nightgowns packed for the short journey to Netherfield. As the appointed hour approached, Jane and Elizabeth were escorted to church by their unwontedly solemn father.\n\nWhen asked, \"Who giveth these women...\" Mr Bennet's voice was so choked that he could barely speak the appointed response.\n\nJane, as older sister, was married first and then it was Elizabeth's turn. She heard, as in a dream the solemn pledge of Mr. Darcy.\n\nAnd then, Elizabeth spoke after the clergyman, \"I, Elizabeth Cassandra,. take thee, Thomas Henry Fitzwilliam, to my wedded husband, to have and to hold from this day forward, for better for worse, for richer for poorer, in sickness and in health, to love, cherish, and to obey, till death us do part, according to God's holy ordinance; and thereto I give thee my troth.\"\n\nMr. Darcy took her by the hand, pressed a gold band onto the fourth finger of her left hand and said in his most solemn voice, \"With this ring I thee wed, with my body I thee worship, and with all my worldly goods I thee endow: In the Name of the Father, and of the Son, and of the Holy Ghost. Amen.\"\n\nThe clergyman declared, \"What God hath joined together, let no man put asunder.\" And very soon, it was over. Elizabeth chiefly remembered later how brief was the ceremony, so eagerly anticipated and so long in preparation.\n\nWhat remained of the service, the wedding breakfast and the round of embraces and congratulations passed swiftly, as a dream fades at the break of day. Very soon, it seemed to her, Elizabeth was handed into Mr. Darcy's stately landau by her husband. The liveried coachman, jiggled his reins, whistled to his horses, and the carriage rolled with a smoothness Elizabeth had never experienced, towards Netherfield House.  They were welcomed on the steps of that house by Mr. and Mrs. Bingley, who had preceded them. \n\nThe newly married couples stepped into the drawing room and, after a period of conversation broken from time to time by a mutual consciousness of what was yet to come, sat down in the dining room to a light supper. The late autumn day faded into dusk and table silver glistened in the wavering light of the finest beeswax candles. Elizabeth was conscious of how vastly different were her feelings today than upon her first meal in that room, when Jane lay ill, and she knew how unwelcome she had been to Bingley's sisters and even, she recalled, to Mr. Darcy herself.\n\nUnwontedly early, Jane suppressed a dainty yawn, and spoke formally to her husband, \"My dear Mr. Bingley, I am somewhat fatigued by the excitements of the day. With family we need not stand on ceremony. Perhaps Elizabeth and Mr. Darcy will pardon us if we retire early.\"\n\nBingley, who was a gentleman of social habits and who normally enjoyed nothing better than an evening of port and conversation, hastened to agree. \n\n\"Forgive us if we leave you. Do not feel rushed. Linger as long as you wish and the servants will care for you,\" he declared. And the couple disappeared in the direction of Bingley's rooms.\n\nMr. Darcy and Elizabeth, thus precipitately abandoned, looked at one another in silence.\n\nAt last Mr. Darcy spoke, \"My dear wife, you appear anxious. Would a glass of wine ease your present discomfort?\"\n\nElizabeth nodded her acceptance of this kind offer and Mr. Darcy called for a servant to supply her need. He himself refused further drink and sat watching Elizabeth sipping her wine. He said little but gazed at her as she sipped her wine with a fixity of expression that would have been discourteous on a social occasion. \n\nFrom time to time the fingers on his left hand drummed lightly on the polished mahogany of the table top. Once when a drop of the rich claret pooled on the outer rim of Elizabeth's wine glass and she extended her tongue to lick it clean, she heard him sharply draw in his breath with a quick hiss. Elizabeth, in embarrassment looked down and noted that, though Mr. Darcy, was not drinking and had long concluded his meal, his linen napkin still lay bunched in his lap. She wondered if Mr. Darcy was expecting another course.\n\nAfter yet another silence, Mr. Darcy rose, extended his arm to Elizabeth in her chair and said, \"My dear, it would be kindness to the servants after this long day to allow them to begin their work of clearing the table. Will you not join me in our rooms?\"\n\nThough the wine was still moist on Elizabeth's lips, her throat was too dry to allow speech. She nodded, laid her hand on his arm and accompanied Mr. Darcy as he climbed the stair to the rooms in which he had been staying. These rooms were next to those of Mr. Bingley and his bride.\n\nThough Elizabeth, like all great ladies of the land, would have her own rooms at Pemberley, the sisters had agreed that she would pass the night in Mr. Darcy's bedroom at Netherfield. Elizabeth stepped into the chamber and saw the large bed, the rich linens turned down in preparation. It was her turn to draw in her breath sharply.\n\nMr. Darcy turned to her and spoke in an unwontedly gentle voice, \"My sweetest Elizabeth. There are doubtless preparations you would wish to make. I will step into my dressing room so that you may... so that you may... do what is necessary. Call on me, I pray you when you are ready. He stepped into the next room where, she knew, his manservant awaited to assist him with his disrobing.",
        "Elizabeth had insisted, by contrast, that for this night, great lady though she now was, she could spare the assistance of her newly engaged lady's maid, whom she yet barely knew. With an ease taught by relative poverty, she herself let down her long hair which pooled in dark waves over her shoulders. Then she removed her own garments, laid them on a chest for the maid to attend to in the morning and, for the moment, stood naked in the cold air. She caught sight of her bosom in Mr. Darcy's mirror. Her breasts stood proudly on her chest, the nipples, usually a light pink but now deepened in colour to the shade of an autumn rose, hardened in the cool air and perhaps, she thought, by something else.\n\nElizabeth pulled over her head and laced at her bosom the fine French silk nightgown brought down from London by her aunt at her mother's behest. \"It is beautiful,\" she thought. \"My mother was right; my husband will be pleased.\"\n\n\"Mr. Darcy!\" she began to call and then, remembering his request, \"Thomas!\" And more loudly still, \"Tom!\"\n\n\"Yes, my dear?\" He stepped through the door, pulling it shut behind him, and beheld Elizabeth, standing with one hand resting on the foot of the bed. Darcy was wearing only a shirt, held together by one button low on his chest.\n\nElizabeth recalled her aunt's instructions to undress slowly, always gazing into her husband's eyes. Difficult as it was to prevent her eyes from dropping to the floor in modesty, Elizabeth fixed her gaze upon her husband as she undid the knots that held the silken garment together above her bosom. When the ties were loosened, Elizabeth reached up and slowly, painstakingly slowly, lowered the nightgown over her bosom, hoping as she did so, that Mr. Darcy would find her breasts pleasing.\n\nShe need not have feared. As the white slopes of her maiden breasts were exposed to his gaze and at last the rose tips revealed, Mr. Darcy sighed in evident admiration and reached towards her.\n\nAt that moment, the lovers heard a faint scream from the direction of Bingley's rooms.\n\n\"Jane! My sister may need me,\" she exclaimed and turned sharply as if to go to her.\n\nMr. Darcy stretched out an arm to stay her.\n\n\"Elizabeth, Jane does not need you now,\" said Mr. Darcy with gentle firmness. \"She would not welcome you at this moment.\"\n\n\"Oh!\" said Elizabeth blushing as she took in his meaning. Persuaded instantly of the truth of his words, she turned back to Mr. Darcy. Her movements had had shifted her hair so that it lay in luxurious waves, partly hiding her bosom. On the other hand, the act of reaching out to stay Elizabeth had disarranged Mr. Darcy's sole garment so that his erect member was extending through its parted lower reaches. Elizabeth gazed at in grateful astonishment.\n\nUpon thus seeing Mr. Darcy's member for the first time, Elizabeth perceived that the male organ of her new husband was, like his estate, large and splendid. It was, she was sure, well beyond the six inches described by her aunt and perhaps nearing double the four inches of which Charlotte had spoken. It was magnificent. There would be no need of imagining a naked blacksmith when being bedded by Mr. Darcy!\n\nThe moisture between her legs had now grown so great that it actually began to drip down the inside of her thigh. Without thinking what she was doing, Elizabeth brushed the fine French silk of her nightgown against her mound to catch the flowing liquid. This drew Mr. Darcy's eyes, which flared and seemed to grow larger.\n\n\"Elizabeth, my dearest one, lift your shift above your waist I pray you.\"\n\nKnowing that her husband had the right to this favour, and indeed wishing it herself, Elizabeth grasped the hem of her gown in her almost nerveless fingers and raised the hem slowly until it passed above her waist. \n\nFor the first time, her triangle of dark brown hair, more curled, she knew, than the hair of her head, was visible to a man. Perhaps, she thought, the heat from her loins, now almost overpowering in its intensity, caused that lower hair to curl so. \n\nMr Darcy was seemingly stricken into immobility and could only stare in wonder at his bride. Elizabeth, discomfited by his gaze, could not stay still and, without conscious thought, swayed her loins with gentle movements from side to side. \n\nThen, still unconscious of anything but her need to come closer to Mr. Darcy, she ceased to move from side to side and thrust her hips slowly towards her husband, clenching the muscles around her female passage. That internal motion almost caused Elizabeth to swoon with delight and she threw back her head, shaking loose her long locks and exposing again her breasts to her husband's gaze.\n\nAs if that movement broke a spell of immobility, Mr. Darcy threw aside his linen shirt, stepped forward, seized Elizabeth in his arms and buried his head between her breasts. They fell together onto the bed, the sheets warmed and pulled back earlier by the Netherfield servants. Mr. Darcy nuzzled Elizabeth's breasts and, then shifting his weight slightly, he saluted her left nipple, sucking and then nipping lightly with his strong, even teeth. Elizabeth gasped and arched her back to press her bosom towards his waiting lips. Mr. Darcy, a man of eminent fairness and equity, then shifted his attention to her hitherto neglected right nipple, filling Elizabeth with continuing delight.\n\nThe same movements had caused Elizabeth's legs to part and Mr. Darcy introduced one strong thigh between them. No instruction was necessary for Elizabeth who, from instinct alone, began to grind her groin against the welcome intruder. The pressure on the button of which her Aunt Gardiner had spoken, filled her with increasing delight.\n\n\"Lie back and think of England indeed!\" she remembered, and a laugh gurgled with delight from her lips. Mr. Darcy lifted his head for a moment and smiled down at her.\n\n\"Pleased?\" he asked.\n\n\"No, overjoyed!\" Elizabeth replied.\n\nThe change in position brought Mr. Darcy's member against her left thigh. Elizabeth rubbed that thigh against it, eliciting murmurs of delight from both husband and wife. Greatly daring, even shameless, Elizabeth reached down and grasped the male column of her husband firmly in her hand. Mr. Darcy's murmurs became a gasp.\n\nElizabeth was conscious, so moist was her female passage, that there was no need to imitate Charlotte and kiss the penis as a preparation for full marital union. But swiftly it came to her that she was vastly eager to do so, as an act of love and desire. Gently pushing Mr. Darcy aside, she lowered her lips to his organ and licked its length.\n\nMr. Darcy gasped again.\n\nShe pushed down the sliding skin that surrounded her love's organ and gently took the crown between her lips.\n\nMr. Darcy moaned.\n\nElizabeth sucked on the head while sliding her fingers gently up and down the shaft.\n\nMr. Darcy cried out with joy.\n\nAfter but a moment, he pushed Elizabeth's head away. \"My dear, if you continue, I will surely spend and I must tell you, there is but one place I wish to do so, my first time with you.'\n\nGently pressing back on her shoulders, he laid Elizabeth's head on the pillow. He lowered his right hand and his fingers slipped into the curls of his wife's triangle. Continuing, he touched gently the button between her thighs. Elizabeth shuddered at his touch and spread her thighs wider still, exposing her center to his caress. Mr. Darcy lowered his lips to her female passage, extended his tongue and raising his head, licked the precious area from bottom to top.\n\nElizabeth feared she would swoon in ecstasy. This delicate entertainment by Mr. Darcy's lips, tongue and even, at one point, his teeth continued for several moments. Elizabeth was conscious of a rising tension in her bottom and in the muscles of her thighs and lower belly, Waves of pleasure, like those of a North Sea storm, swept over her. She arched her back and pressed her loins towards Mr. Darcy's loving lips.\n\n\"I can tarry no longer, my Elizabeth. I am desperate with need of you.\"\n\nElizabeth opened her eyes and gazed into her husband's blood darkened face. \"Please, my love, continue,\" was all she could say.\n\nMr. Darcy shifted his position again, placed on hand beside her shoulder and advanced his knees between Elizabeth's parted lower limbs. In his other hand, he took his member and placed it at the entry to her female passage. He paused for a but a moment and pushed forward. \n\nHe repeated a word from the marriage service, \"With my body I thee worship.\" The head of his organ pressed into Elizabeth and she began to experience a gentle fullness.\n\nHe pushed forward and Elizabeth lifted her hips towards him. There was but a moment's resistance, a slight nipping feeling and Mr. Darcy's already beloved member extended fully into her.  He paused for a moment but Elizabeth lowered her hands to his hips and pulled them towards her as if to bury him within her. Mr. Darcy began to push and thrust. It was like the rhythm of a country dance, moving from stately minuet to schottische to wildest of jigs, in and out, male and female, apart and joining again together. \n\n\"My Tom!\" \n\nThe tension rose in waves within Elizabeth and when Mr. Darcy held his thrust at its deepest point within her, calling out her name, she thrust back towards him. The pleasure, the joy was so great in her belly that it was almost, pain, joy or pain... pain.\n\nShe cried out, \"Tom! Tom! Oh my Tom!\"\n\n___________________\n\nFrom above the came the beloved voice, calling her name,\n\n\"Jane! Jane, Jane!\"\n\nAnd again, \"Jane!\"\n\nThe strong hands on her shoulders continued to shake her gently. \"Jane! Sister! Wake up!\"\n\nMiss Jane Austen struggled to wakefulness and looked up into the worn face of her older sister Cassandra. Jane was lying on a makeshift arrangement of three chairs from the dining room. Her mother was lying on the couch in the small parlour of the rented house in Winchester, apparently sound asleep and snoring softly. \n\nLying on her side as she was, Jane could feel the swollen mass in her belly which had come with her illness. Thankfully, though in constant pain and fatigued as always, the nausea which so often overcame her had lessened for the moment. She looked up into the anxious face of her sister.\n\n\"I hesitated to wake you, my dear sister, but you were calling out quite loudly. I feared you would rouse our mother. You were... moving your hips in an... unusual manner and I knew you would be mortified if our mother witnessed this.\"\n\nCassandra hesitated for a moment, as if steeling her courage to speak. \"My dearest Jane, you were calling for Tom, repeatedly. I am very sorry that your old sorrow about Tom Lefroy has come back to you, so very near the end, when I would dearly wish for you only peace and release from the cares and disappointments of this world. I wonder if the tincture of laudanum the apothecary has mixed for you is causing these vivid dreams that so disturb you.\"\n\nCassandra's eyes brimmed with tears as she looked down at Jane's worn face. Jane could not bear the sorrow she saw there, sorrow upon sorrow, with one more sorrow about to descend fully upon her.\n\n\"Oh Cassandra, here I am at the end and I look back at it all. Tell me, why did it happen so? Your Tom, young Mr, Fowle, dead of Yellow Fever in the navy. My Tom, and I know I ought not call him that, gone to Ireland, prospering in the law... married, children. He called his first daughter 'Jane,' I hear. Why did they separate us and take him away from me?\"\n\n\"My dearest Jane, you know why. Neither of you had a penny to live on and so they sent him away. Why trouble yourself again with such memories?\"\n\n\"I know it is so, Cassandra, but now that life draws near its close, I wonder what I have missed, marriage, love, the closeness of a man, children. I have known so little, done so little and now I lie here useless.\"\n\n\"I missed it also, Jane.\"\n\n'Forgive me, Cassandra. I should not have spoken so, to remind you. Lay it to the charge of my illness, I pray you. When I consider what I owe to you, and to the anxious affection of all my beloved family on this occasion, I can only cry over it, and pray to God to bless you more and more.\"\n\n\"No, no, do not trouble yourself in this manner. I would have you speak the truth, now above all. But Jane, there is this...\"\n\n\"Yes, my dearest sister?\"\n\n\"Forgive me, Jane, but consider this: Imagine if you had married Tom Lefroy and lived in some Dublin garret while he scraped a living, unable ever to see your parents, unable to speak with your, your sister again... Imagine further that you had borne him children, struggling every day even for common decency for them, knowing that nothing but poverty awaited them in later life. Imagine all that is so, and you know that this would have been your fate, had you both defied family and wed. If all that were so, could you have written your books?\"\n\n\"But few ever read them, sister.\"\n\n\"They will, Jane. They will. Sister, you do have children, Elizabeth and Mr. Darcy, Emma and Mr Knightley, and all the rest, even poor Mr. Collins!\"\n\n\"Mr Collins!\"\n\n\"Yes, Mr. Collins indeed. Your children will live longer and be better known than any you would have shared with Tom Lefroy. And Jane...\"\n\n\"Yes, sister?\"\n\n\"I will remember with pride all the days of my life that you were my sister and that you have made me a sort of honorary aunt to all your characters.\"\n\nAlmost beyond words for once in her life, Jane was silent. She considered her sister's words. Then...\n\n\"Do you truly think they will read my books?\"\n\n\"I know they will.\"\n\n\"But I don't want them to read my letters... not the ones about Tom. And I don't want him to know how much he hurt me. Burn my letters, the ones about Tom.\"\n\n\"Yes, sister. Is there anything more you want now?\"\n\nJane Austen could scarcely draw breath.\n\n\"Nothing but death.\"\n\nThomas Langlois Lefroy lived until 1869. He served as a Member of Parliament and became Chief Justice of Ireland. Despite that brilliant career, he is remembered only as Jane Austen's youthful love. Jane Austen died on July 18, 1817, in the presence of her beloved sister Cassandra, praying for patience and saying she wanted \"nothing but death.\" She is buried in Winchester Cathedral. Her creations are loved by millions. There is more than one kind of love."
    ],
    "authorname": "Oldlockguy",
    "tags": [
        "jane austen",
        "elizabeth bennet",
        "mr. darcy",
        "pride & prejudice"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/elizabeth-bennet-considers"
}