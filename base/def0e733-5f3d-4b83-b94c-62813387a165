{
    "title": "Stray Cats Ch. 02",
    "pages": [
        "This is chapter 2 of a reprint, of a story that I posted in 2015 on this site. I was rereading it lately and correcting some of the typos when it dawned on me that perhaps I should repost this story (in the original chapter format) for readers today. It's still relevant, well most of it is. I hope you enjoy it. \n\nOh, as a reminder, you might consider going back to read the opening chapter as much of who these characters are, and why they're together is established in chapter one, But, as always, it's your choice. \n\nPlease leave a comment when you've finished, feedback is the lifeblood of a writer. \n\n--Dreamweaver594 \n\nShopping \n\n=ONE= \n\nIt was Thursday and Alex drove home from his afternoon class. He walked up to the apartment house and paused before the bottom step. He smiled briefly as he looked up to his third floor window, squinting into the afternoon sun that reflected off the glass. He tried to imagine what was going to happen once he crossed the threshold into the apartment house. He knew that two beautiful women were about to change his life forever. \n\nHell, they had already changed his life; it was what came next that made him anxious. Alex drew in a big breath, and then let it out slowly. He walked up the front porch stairs and opened the door. It was going to be an interesting day, he thought, with those two around there was no telling where they'd end up. \n\nAlex started up the stairs towards his third floor apartment when Tom Reilly poked his head out of the manager's apartment. \n\n\"Hey Wells,\" Reilly mumbled his mouth still stuffed with a chicken leg from an apparent late lunch. \"You got some time this weekend to help me with the firepit? The city building inspector has a wild hair up his ass and I need to move it further away from the tree.\" \n\n\"Sure, no need to burn the neighborhood down,\" Alex replied watching Tom pick a piece of chicken meat from a crevice in his teeth. \"I should be around Saturday morning before I need to go to work.\" \n\n\"Saturday's no good, do you have time on Friday?\" \n\n\"I'll look and see,\" Alex replied as he started to climb the stairs. \"I have a paper due online on Saturday. I'll let you know, okay?\" \n\n\"Sure thing, thanks.\" Tom ducked back inside and closed his door. Alex heard a ball game blaring on the television in the background. \n\nAs he turned the corner on the third floor landing he looked up to see Amanda and Rachel sitting together at the top of the stairs. \n\n\"Uh-Oh, you're both waiting for me aren't you? This can't be good,\" he said, grinning and shaking his head. \"So, what's up?\" He added, trying to look innocent. \n\n\"You know full well what's up, babe,\" Rachel replied. \"Get your little tushy up here now and take a quick shower. We have work to do before we go shopping.\" \n\n\"Aw, do I have too?\" He asked, in a mock whine as he slowly ascended the last flight of stairs. \n\nAmanda stood up as he passed by her and she swatted his butt with a big grin. She shouted, \"scoot!\" to propel him to his door. He opened his apartment door and dropped his book bag near his desk. Then he pulled off his coat and shoes and started undressing as he moved towards the bathroom. \n\n\"And don't forget to shave babe,\" Rachel shouted into the room as he closed the bathroom door. \"Real close too!\" \n\nA couple of minutes later Rachel entered his bathroom and set a robe on the hook on the bathroom door. Alex was lathering up his hair as Rachel peeked behind the shower curtain. \"Hey cutie,\" she said, \"I hung your robe on the door. Don't put on anything else, okay?\" \n\n\"Okay, thanks.\" He leaned forward; his eyes were still filled with shampoo, and kissed Rachel on the cheek. \"I'll be out in a minute.\" Then he paused a moment and thought about what she just said. \"Wait a minute! Why?\" \n\nAlex squinted as he peered around the shower curtain with soap dripping into his eyes. Rachel was already out the door. \n\n=TWO= \n\nWhen he stepped out of his shower Amanda stood waiting with another towel to wrap around his hair. Alex has had long hair since high school when he tried his hand at playing in a rock and roll band. \n\n\"What teenager doesn't?\" He pleaded with his mom who eventually relented. \n\nIt was a short-lived moment; it was mostly because the girl he was currently infatuated with played the keyboard in a local garage band. But his talent and interest in rock and roll faded along with his interest in the keyboardist. \n\nHe did like the long hair though; it made him feel like a rebel, even if he really wasn't one. After that he just sort of stuck with the look...it was easier. \n\nAfter Amanda wrapped the towel around his hair she wrapped her arms around his neck and planted a deep kiss on his lips. \"That's because I've been missing you all day today,\" she said with an impish smile. \"Now come on, we're going over to Rachel's. That girl has more makeup than Walgreens!\" \n\nAmanda took his hand and led him across the hallway into Rachel's apartment. She brought him over to a small stool placed in front of a dressing table and he sat down. \"Here you go Sis, he's all clean and dry.\" She turned around and started to rummage around in a makeup kit on Rachel's dressing table, looking for a foundation that might work on his skin. \n\nRachel removed the towel and stood behind Alex with a hair dryer combing his hair. Once most of the dampness was gone, she began to pin it back so that it wouldn't get in the way of the makeup Amanda was going to apply. She looked at him in the mirror. \"Before we go we have to get you ready, babe.\" Her eyes were twinkling mischievously. \n\n\"What do you mean?\" \n\n\"Do you want to go shopping for girl stuff dressed like a girl or like a guy?\" Rachel leaned down and kissed him on the cheek with a wicked grin. \n\n\"Oh, I see. A girl, I guess. But won't everyone know?\" \n\n\"Not when we are through with you they won't,\" Amanda replied. \"Now pay attention because there will be a test at the end of the lesson.\" \n\nAlex blinked a bit shocked. \n\nAmanda had a huge grin on her face as she leaned in and kissed him on the cheek. \"Just kidding sweetie. But you should pay attention so you'll know how it's done and you can eventually do it yourself.\" \n\nRachel laughed as she reached down and pushed Alex's knees together. \"And don't forget to keep your knees together when you're wearing a skirt.\" \n\n\"Rachel, I don't have a bra that will fit him, do you?\" Amanda asked as she rummaged through Rachel's makeup tray again. \n\n\"I'll look in my dresser but I know the full cups will all be too big,\" she replied. \"Maybe I can find a push-up.\" Rachel's size 'D' plus chest was considerably larger than Alex's 'C' cup but she looked anyway. \n\nPerhaps a demi cup would offer just enough support, she thought as she searched through her drawers. \"I think I have an old one in here somewhere that just might fit.\" \n\nWhile Rachel dug through her dresser, Amanda started on Alex's eye makeup. A few minutes later, and at the bottom of her bottom drawer, Rachel found a matching set that looked like they might fit him. \n\nShe slipped Alex's arms through the straps while Amanda finished with the mascara and eyeliner. After she closed the clasp on the bra Rachel leaned forward and kissed Amanda on the cheek. \n\n\"You guys make a good team,\" Alex remarked watching the two of them working together so closely. \n\n\"Yeah, we do,\" Rachel replied, as Amanda tilted her head and smiled sweetly. \n\nWhile Rachel adjusted the bra straps Amanda finished with the foundation and blush. The bra seemed to fit nicely. Alex leaned forward and adjusted his breasts into the cups like Rachel told him to. Then she walked into her bathroom and returned shortly with a long piece of adhesive tape. She had cut a hole in one end and she split the other end up a little more than halfway. \n\n\"Here, stand up a second,\" she said. \"Sorry Amanda, this will only take a second.\" \n\nRachel reached around Alex and tried to slip the head of his cock into the hole on one end of the tape. But he was beginning to grow hard with all this attention and it didn't help that Rachel's mouth was only inches from his crotch. \n\n\"I'd love to help you with that babe, but if I do, the rest of the afternoon will be shot,\" she grinned. \n\nAlex sat down as he tried to control his heart and keep his cock from overheating. Amanda stood back and giggled at his predicament. Eventually, trying to do a series of math problems in his head, things began to calm down. He nodded to Rachel that he was doing better. \n\n\"Okay, stand up babe, and let me slip this over the head.\" Rachel pushed his cock head into the hole she created on the end of the tape. \n\n\"Now reach under and push your balls into the hollow in your crotch,\" she said watching him closely. \"Good, now pull the tape underneath and lay your cock against your perineum. Not too tight, just enough to flatten your front.\" \n\nAs Alex's cock pushed against his balls to hold them in place, Rachel pulled the two pieces of tape snuggly against his ass cheeks, on either side of his crack. \n\n\"This will keep you from standing up in the ladies room but it will still allow you to pee. Neat huh?\" Rachel grinned as she admired her handiwork while Alex stood there blushing. She got up and walked over to her dresser. \n\n\"Here babe,\" Rachel said, tossing Alex a pair of her high rise lace panties that matched the bra, \"put these on.\" \n\nAlex stepped into the panties and looked down at his crotch. The bulge that had been there since he was old enough to notice was gone. It was a bit unnerving at first. He looked up at the girls and smiled awkwardly. \n\n\"Now those panties fit you better,\" she said with a grin and Amanda stood admiring Rachel's handiwork with a smirk. \"We'll look for a gaff online tomorrow that will make it easier, tape irritates after a while,\" she said, with a knowing smile. \n\nAlex turned bright crimson as he sat back down. He wiggled a bit to test how well the tape held. So this is how she does it, he thought, a bit amazed. Cool. \n\nHe was glad, for once, that the girls had taken so much care to remove all the hair from his body. Otherwise removing that tape would have been brutal. He looked up and turned his attention back to Amanda with a sheepish grin. \n\n\"Okay sweetie, the trick here is to just put on enough to enhance not embarrass,\" she said, concentrating on her brushwork. \"You're not doing a drag show.\" \n\nAlex glanced over at the mirror and tried to watch what she was doing. \n\n\"You already have beautiful features so all I'm doing is giving them a little highlight.\" \n\nHe tried to keep an eye on what she was doing with his makeup but it was hard to watch every step, especially when the makeup was being applied to his own face. \n\nRachel pulled some of the hairpins out using a hairdryer. She began to finish drying and straightening his hair. Once that was done she walked back over to her dresser. \n\n\"Where are the shoes that you bought?\" she asked. She was busy rifling through another drawer looking for clothes that might fit him. \n\n\"They're in my closet across the hall,\" he replied, pointing towards her door. \n\n\"I'll go get them, I'm through with his makeup now anyway,\" Amanda said, setting down a tray of blush and walking towards Rachel's front door. \n\n\"They're in the back on the left behind a box of papers.\" \n\n\"Okay, I'll find them,\" Amanda shouted, as she opened Alex's apartment door across the hall. \n\nRachel pulled a brightly striped scooped-neck tank top out from another drawer and handed it to Alex. \n\n\"Here, put this on,\" she said, as she turned back to her dresser. \n\n\"Doesn't this reveal too much?\" he asked, nervously. \n\n\"Nope, it'll be just right. Those girls are lovely, babe, you shouldn't hide them. You just want to tease, not advertise. If you know what I mean.\" \n\n\"Do all girls think like this?\" \n\n\"Not all, but a lot of them do. You've heard the phrase 'if you got them, flaunt them' haven't you?\" \n\nAlex nodded as Rachel turned to find him a pair of pants. \n\n\"I've got a pair of capris that you can probably fit into but we'll have to use a belt because your waist is narrower than mine, which makes me totally jealous.\" \n\nShe opened up her bottom drawer again and dug to the back. \"Found them,\" she said as she pulled out a pair of peach colored capris and handed them to Alex. \n\nBy the time, Amanda returned with Alex's new heels, Rachel was back to his hair. She combed it carefully then pulled it back and up into a high ponytail. She used a curling iron to give the ends a bit of a curl and twist. \n\n\"It looks more feminine this way,\" she said, as she brushed his hair and shaped the curl. \n\nAmanda set his new three-inch heels by his feet and dropped a pair of knee-high sheer stockings next to them. Alex reached down and pulled on the knee-high stockings then he stood up to pull on the Capri pants. Next he stepped into his new shoes.  \n\nAmanda and Rachel both stood back and watched as Alex slowly turned towards them. He was a bit wobbly at first. But he had a good sense of balance and within minutes he was standing tall in his new heels. \n\n\"Whoa,\" Amanda said, gawking at Alex. \"I can't believe it's you, sweetie. Rachel those clothes look great on him. \n\nAmanda turned to Rachel and asked, \"Do you think the heels are too much for shopping?\" \n\n\"Nah,\" she replied, shaking her head. \"Besides, they make his butt even cuter.\" \n\nAlex blushed brightly and rolled his eyes, which made both women giggle. \n\n\"You look good enough to eat, babe,\" grinned Rachel with a gleam in her eyes. \"Your makeup is perfect, nice job, Amanda.\" \n\n\"Thanks, Rachel,\" she replied. \"Now lets go shopping!\" \n\n=THREE= \n\nThey all piled into Alex's car and headed out to the local discount strip. Amanda drove, as it was too much to expect Alex to drive in heels, especially for the first time. \n\n\"I think Alex needs a new name,\" Rachel said, looking across the front seat. \"What do you think Amanda?\" \n\n\"I agree,\" she replied. \"Hmm,\" she paused a moment in thought. \"How about April? It's the month in which she was born,\" Amanda replied with a sweet smile. \n\n\"I like that, very springy,\" Rachel nodded her approval as she looked at Alex in the back seat. \n\n\"April, we're going to Target first to get all the basic stuff and then we'll head for the mall,\" said Amanda looking at Alex in the rearview mirror. \"This is going to be so much fun!\" \n\n\"Girls, are you sure about this?\" Alex's voice had a bit of a quaver to it. The girls could hear the tension in his voice. \"This isn't some sort of hazing to get into the 'all girls club' is it?\" Alex's anxiety levels were continuing to climb. \n\n\"April, you'll do fine, sweetheart, the only thing anyone will notice is how beautiful you are,\" cooed Amanda. \n\n\"She's right, babe. Come on, we're here,\" Rachel said, \"I call dibs on dressing room assistant.\" \n\n\"Not fair!\" Amanda shouted as they scampered arm in arm into the store laughing and giggling all the way to the women's section. Alex followed behind them walking a little less sure of himself with every step. \n\nHe blushed slightly as he looked at everyone he passed fully expecting each one of them to point and laugh. But no one seemed to notice. Still, his heart was racing. As he walked down the main aisle he passed the women's accessory section on the right. Alex glanced over and noticed a saleswoman behind the counter watching him. He smiled at her coyly and she smiled back. Not knowing what else to do, Alex raised his hand and meekly waved at her then he nodded at her at the same time. \n\nAmanda came back over to Alex and grabbed his hand then she leaned up and whispered in his ear. \n\n\"What are you doing?\" \n\n\"Nothing. The woman smiled at me and I smiled back. I think she knows!\" \n\n\"Knows what?\" \n\n\"That I'm not a woman!\" he whispered through his teeth. \n\n\"Oh my God,\" Amanda replied in a forced whisper. \"The way you were looking at her she probably thinks you're a lesbian!\" \n\nAlex blanched at the thought. \n\n\"Just act like you would if you were wearing jeans and a t-shirt,\" murmured Amanda. \"Now stop being all weird and come on, sweetie.\" \n\nA moment later they caught up with Rachel in the women's section. She was browsing through the clearance rack and Amanda joined her while Alex stood awkwardly fingering the texture of a blouse. \n\n\"Here,\" said Amanda handing Alex a couple of Capri pants and some camisole tops, \"put these into the cart. You can try them on in a minute.\" \n\nRachel found a nice cotton sundress and one made out of a jersey knit and dropped them into the cart as well. \"You won't need to try these on because I already know that they'll fit from what you are wearing,\" Rachel said, continuing to dig through another rack. Amanda found a long black knit dress that dropped daringly low in the back and had a simple scooped neck front. She held it up against Alex to check the fit. Then she tossed it and a similar one in red into the cart. \n\nWhile the girls continued to rummage through the racks, Alex wandered over to the underwear section. He began to sort through the demi-cups for something that might fit. \n\n\"Hey sweetie,\" whispered Amanda, \"we're going to Victoria's Secret after this, you don't need anything here.\" \n\n\"I know, but this would be for everyday wear,\" he replied. \"Besides, they have cute matched sets.\" \n\nAmanda's eyes began to sparkle. \"That's the spirit!\" She helped him pick out a few more sets. Then she tossed his choices into the basket. \n\n\"Come on,\" Amanda said tugging him away from the bra sets, \"let's go to the fitting room.\" \n\n\"April, I've already got you set up in room three,\" Rachel said, with a wink towards Amanda. \n\n\"You can have Victoria's Secret,\" she whispered to Amanda as Alex entered the fitting room area. Amanda's eyes began to gleam with anticipation. \n\nAlex glanced at the fitting room employee who stood near the front counter rehanging clothes on a restock rack. He wondered if the girl noticed anything odd about the woman who just walked past her. If she did, she didn't show it. Alex walked quickly back to fitting room three and ducked behind the door. \n\nAs Alex slipped off his pants and began to pull on the new ones. Rachel, wearing a wicked grin, couldn't resist the temptation. She reached inside his panties and touched him. Alex squirmed beneath her fingers. \n\n\"Oh God Rachel, you're killing me,\" Alex whispered hoarsely. \"That strap is a torture device. It works all too well.\" \n\n\"I'll be happy to take care of it once we get home, babe,\" she replied, with a grin as she continued to massage his crotch. \"I'm just checking to see if everything is still nice an snug. And it is,\" she giggled. \n\n\"You are a terrible tease!\" His whisper was stressed by the tension in his panties. \n\n\"Of course,\" replied Rachel coyly. \"But that doesn't mean you can't help me with my problem.\" \n\n\"What problem?\" \n\nAlex looked down and saw her cock begin to emerge. It tented her skirt as it continued to rise. \n\n\"How did you...\" Alex whispered frantically. \n\n\"I brought the tape,\" she said, coyly. \"There wasn't time before we left.\" \n\n\"But in a dressing room?\" Alex listened frantically for any sounds that might suggest that the dressing room attendant was nearby. \n\n\"Don't worry babe, it happens all the time in here,\" she replied nonchalantly. \n\n\"It does?\" \n\nShe kissed him hard on the lips then smirked as she pushed down on his shoulders, lowering him towards her 'problem'. \n\nAlex peeled Rachel's panties down and looked at the cock that was pointed towards his mouth. All his former worries seemed to fade as he parted his lips and kissed the head softly. It was amazing to him that in such a short time the very thought of sucking Rachel's cock had become so natural for him. It seemed to be an act that now felt so completely normal, at least with Rachel. He could never imagine doing this with anyone else. He wasn't gay. He wasn't even bisexual, that he knew of. He just wanted to be with Rachel and Amanda, to please them as much as he could. If sucking her cock was how he did that, then so be it. ",
        "Alex began to run his tongue along the underside of Rachel's rigid cock, licking and sucking her slowly. Then he moved his lips to let her begin to fuck his mouth. She moved her hands behind his head and guided him to take more of her and deeper. She was moving rhythmically in and out of his mouth, feeling him suck and lick her length. \n\n\"Ohh, you learn fast, babe,\" she sighed more a moan than a whisper. \"Oh God, I'm close.\" \n\nRachel began to pick up the pace, moving quickly in and out of Alex's mouth. He brought his hand up to stroke her base as he concentrated on her cock head. Suddenly she erupted in his mouth, plunging deeper into him as she squirted her cum down his throat. She held him gently as he hugged her waist, feeling her slowly soften in his mouth. \n\n\"I'm so glad I met you April,\" she murmured as her heart rate slowed down. \"You and Amanda are simply the best thing that has ever happened to me.\" \n\nAlex let her fall out of his mouth and he leaned up to kiss her on the small patch of hair above her cock. \"The feeling is mutual Rachel,\" he said with a sweet smile as he kissed her again. \"Now pull your panties up and help me with these bras.\" \n\nRachel adjusted herself quickly and helped Alex try on several bras. Then he put on one of the dresses that Amanda picked out and looked in the mirror. It was a nice floral print that clung to him in all the right places. \n\n\"What do you think?\" He asked twisting from side to side to glimpse the back. \n\n\"I think it looks great but you'd better show Amanda. She picked it out.\" \n\nAlex padded softly out of the dressing room and stood in the entryway looking for Amanda. She waved from the shoe section and walked briskly back to the dressing room area. \n\n\"Oooh, very nice. Turn around sweetie,\" she cooed. \"Perfect for brunch on Sunday.\" \n\n\"Brunch? Where?\" \n\n\"At my office downtown. Didn't I mention it too you?\" Amanda asked, coyly. \"It's an annual thing apparently, something to do with when the firm was established. It's business casual. This will be perfect.\" \n\n\"But...\" \n\n\"Don't worry, Rachel will be there, too,\" Amanda said, softly. \"Now hurry up and finish we have one more place to go to before we're done.\" \n\nAlex turned slowly looking a bit overwhelmed. He padded, in bare feet, back to the dressing room and closed the door softly. \n\n\"Did you know about a brunch on Sunday?\" He asked, looking shocked. \n\n\"Amanda did mention something to me about it this afternoon before you came back from class. Why?\" \n\n\"She...\" \n\n\"Oh don't worry, you'll do fine,\" Rachel assured him as she held up a pair of pants to try on. \"Here, try these on.\" \n\n\"Rachel,\" said Alex pointing at the bulge in her skirt with a smirk, \"where's your tape?\" \n\nRachel blushed crimson and smiled sheepishly. \n\n\"Math problems worked for me,\" he said with a chuckle. \n\n\"I don't know how you do it, Alex Wells, but in only a couple of days you've managed to turn me into a blushing school girl.\" Rachel reached under her crotch and secured her penis with the tape. \n\nAlex smiled and helped her adjust her skirt. \n\n\"Thanks,\" Rachel grinned and blushed again. \"Here,\" she said handing Alex several pair of pants, \"try these on next.\" \n\nRachel helped Alex try on a few more dresses, blouses and skirts. Some of them fit and a few were discarded. By the time they were finished Alex was beginning to amass quite a wardrobe. \n\n\"Amanda,\" he said walking back to his car, \"what if I don't want to wear anything like this ever again?\" \n\n\"The way you went through the bra section sweetheart, I'm not worried,\" she said, with a big grin, \"it's money well spent. Besides, I want you to look good this Sunday.\" \n\n\"Amanda, about this Sunday...\" \n\n\"I'm sorry April, I should have mentioned it earlier. I guess in the rush to get you ready it just slipped my mind. Would you please join Rachel and me at my office this Sunday? I've told everyone about you and they really want to meet you.\" Amanda stood in the middle of the Target parking lot with a girlish pout on her face. \n\n\"How am I supposed to say no when you ask me like that?\" \n\nAmanda squealed and hugged Alex then she kissed him on the cheek. \n\n\"Come on, Victoria's Secret is calling your name,\" she murmured. \n\nVictoria's Secret was truly a different experience altogether. The prices were outrageous and Alex found it difficult to accept Amanda's generosity but she would have none of it. She found three delicious looking nightgowns and an absolutely stunning teddy for Alex to try on plus three different types of bra and panty sets. \n\n\"This black lace one is uber-sexy,\" murmured Amanda as she watched Rachel feel the fine soft lace. \"I'm going to enjoy peeling this one off of you,\" she whispered to Alex and he blushed a deep crimson. \n\nAmanda found two more bra sets that were totally decadent and tossed them in a pile near the register. \n\n\"My turn to be dressing room assistant,\" Amanda said, melodically. And she wiggled her butt suggestively as she waltzed into the farthest dressing room with Alex in tow. \n\nOnce inside, Amanda quickly helped Alex pull off his tank top and bra. Then she buried her face between his breasts and inhaled. \n\n\"God you smell good,\" she murmured. She moved her lips over and took a nipple into her mouth. She bit and sucked on the nipple pulling it out and making it swell up. While she worked one breast with her mouth she lifted her hand to the other breast and began to massage it gently then she trailed kissed across his chest and up his neck. \n\n\"I am so going to fuck your brains out tonight, darling. God, you make me horny,\" she whispered wantonly into his ear as she continued to fondle his breasts. \n\nAll in all Alex was aghast when the final bill was added up. \n\n\"Amanda,\" he whispered, \"this is way too much. Please let me pay you back for all of this.\" \n\n\"April darling, you've got it all wrong,\" Amanda replied, as she swiped her credit card in the machine. \"I'm paying you back for all you've done for me. Besides,\" she whispered in his ear, \"tonight we get to play dress up and that will more than compensate.\" \n\nAlex looked up at the store clerk ringing up their sale and blushed as he saw a knowing smirk trace across the young girl's face. \n\n\"Come on. We have one more stop,\" Rachel said. \"The Discount Shoe Warehouse. I'm going to buy you at least one more pair of heels and a pair of flats.\" \n\nThey piled all the bags in the trunk of Alex's car and drove across town to the shoe store. \n\n\"I'm glad the shoes I have on aren't that high or I wouldn't have made it this far,\" said Alex softly as he followed Amanda and Rachel into the store. \n\nA pimpled-faced clerk stood at the register and watched the girls walk past him towards the back of the store. \n\n\"I think he knows,\" whispered Alex to Rachel. \n\n\"Who cares?\" Rachel replied. \"You'll make his day if he ever finds out, but he won't.\" \n\n\"Hey, let's have some fun,\" Amanda whispered to Rachel. \n\n\"What kind of fun?\" \n\n\"Just follow my lead when we get to checkouts,\" quipped Amanda with a wicked gleam in her eye. \n\nThey wandered down several aisles before Amanda stopped suddenly. \n\n\"April, look at these,\" she gasped. \"They're just naughty.\" And they were; all five inches of those black stiletto heels with a black lace vamp and high ankle straps looked totally dangerous. \n\n\"They simply scream 'fuck me',\" murmured Amanda, with a twinkle in her eye. \n\n\"You got the dresses and the bras, Amanda,\" said Rachel flourishing her wallet, \"I get to buy the shoes and those are definitely on the list. Plus he wears the same size as I do so we can share!\" \n\nOnce they finished roaming the aisles the girls headed back to the front of the store. Amanda asked the store clerk to help April with her shoes. \n\n\"She's having such a hard time with the strap,\" Amanda said coyly. \n\nThe clerk walked around the counter towards April. His face was flushed as he knelt down next to April's shoes. He lifted her right leg and checked the fit of the shoe. As she lowered her leg the clerk bent further down and adjusted the ankle straps on each of the shoes. \n\n\"I just need to make sure the fit is correct,\" he muttered as he placed his hands on her ankles. But his movement was less like he was checking the fit and more like he was fondling her ankles. Alex, who now stood several inches taller in the five-inch heels, blushed crimson red. The clerk smiled as he made an attempt at a final adjustment then slowly stood up in front of Alex. \n\n\"How's the fit?\" The clerk asked softly with a squeak and a catch in his throat. \n\n\"They feel fine,\" Alex said shyly. \n\n\"She'll wear them out,\" said Rachel with a smirk. \n\nThe clerk nodded and returned to his register to check them out. \n\nAs they walked out of the store Alex leaned close to Amanda. \n\n\"You are simply too dangerous to shop with,\" Alex whispered through clenched teeth. \"I was so incredibly embarrassed when that clerk fondled my ankles.\" \n\n\"Oh pooh,\" Amanda replied with a smirk. \"Tell me you didn't enjoy all that attention. You probably made that poor boy's week.\" \n\n=FOUR= \n\nAlex, Amanda, and Rachel walked back to his car for the drive home. They dropped the shoeboxes along side of the clothing bags in Alex's trunk then Alex pulled the new set of ballet flats out of one of the boxes and brought them with him as he slipped into the backseat. He handed Amanda the keys to the car and grinned sheepishly. \"My feet are killing me,\" he replied. \n\n\"You've gotten a lot better at doing that without flashing the world,\" Rachel said watching Alex sit into the backseat. \"But it's tougher to do with a short skirt so keep practicing.\" \n\nThey drove out of the parking lot and headed towards their home as Alex took off the new pair of high heels and slipped on a pair of flats. \n\n\"Thank you...both of you,\" he said as he leaned forward and wrapped his arms around both girls' shoulders. \"You made me feel very special today and I can't tell you both how much this has meant to me.\" \n\n\"You're welcome, April,\" Rachel replied. \n\n\"The same from me,\" said Amanda. \n\n\"Hey, I don't know about you two but I'm starving. There's a place on the corner that's good, let's stop there. And no argument, I'm buying.\" \n\nThe three girls walked into the restaurant and a hostess led them towards a booth by the windows. The hostess continued to glance at Alex as they walked back to their booth. She had a coy smile on her face and after she placed the menus on the table she brushed against Alex's arm and glanced back at him as she left. \n\n\"Did you see that Rachel?\" Amanda asked. \n\nRachel nodded and smirked at Alex. \n\n\"That hostess totally stroked April as she left. I think we've created a monster,\" Amanda said with a wicked grin. \n\n\"Hush, both of you,\" Alex whispered blushing bright pink. \n\nA few minutes later their food was ordered and they sat sipping on a glass of wine while they waited. \n\n\"This has been quite a day,\" said Alex with a sigh. \n\n\"Hey,\" whispered Rachel, \"don't look yet but those guys over there are totally checking us out.\" \n\n\"Where?\" asked Amanda looking up at Rachel. \n\n\"Don't look,\" said Rachel quickly. \"Three booths down on the opposite side, the redhead is mine I could totally do him,\" she murmured softly. \"Okay, now look.\" \n\nAmanda and Alex slowly turned around and glanced back several booths to see three guys sitting in a booth all leaning forward and whispering to one another. \n\n\"You think they'll come over?\" Amanda asked. \n\n\"God, I hope not,\" replied Alex quickly turning back to look at Rachel. \n\nAbout then all three of the young men got up and walked towards the girls. They stopped in the aisle in front of their booth. \n\n\"Hey,\" said the older looking of the three. He was tall and lanky with a shock of unkempt red hair that fell across blue eyes. His eyes sparkled with a mischievous twinkle. \"My name is Ted, this is Bryan, and Taylor,\" he said pointing to the other two as he named them. \"You girls want some company?\" \n\n\"We'd love to but not tonight, Ted,\" Rachel replied. \"I'm Rachel, and this is April and Amanda. We've just spent the day shopping and we're exhausted. Perhaps some other time?\" \n\n\"Sure,\" said Ted holding out a business card to Rachel, \"our numbers are on the back. Call us, okay?\" The three boys walked back to their table, turned and waved as they sat in their booth. \n\n\"You are one cool chic,\" Amanda murmured, as she waved back to the boys. \"You handled that so well. You brushed them off and still gave them hope. You are a goddess.\" \n\n\"You have much to learn, grasshopper,\" Rachel replied with a grin then she turned to April. \"Taylor was totally checking you out, April, I think you could have wrapped him around your little finger if you wanted to.\" \n\n\"Shush,\" she whispered, blushing again. \"He's not my type.\" \n\n\"Oh, and who is your type?\" Asked Amanda with a wicked grin. \n\n\"You two,\" said April softly. \n\nAfter dinner, they drove home and walked back in the rear door of the apartment house. As they crossed the foyer and began to climb the stairs Tom Reilly, popped his head out of his apartment. \n\n\"Hey you guys,\" he said with a grin, \"have you seen Wells?\" \n\nApril began to edge behind Rachel hoping that Reilly wouldn't make any connection. Amanda bit her lip to keep from giggling. \n\n\"He promised me that he'd help me this weekend with the firepit in the backyard,\" Reilly continued. \"Something came up and I need to see if he can help me Sunday instead of tomorrow.\" \n\n\"Sorry, Tom,\" replied Amanda. \"If we see him, we'll tell him you're looking for him.\" \n\n\"Thanks,\" replied Reilly. He stood a moment and surveyed the three lovely ladies standing before him. \"You girls are sure looking foxy today,\" he growled suggestively with a foolish grin and a thumbs-up gesture. \n\n\"Foxy?\" Rachel grinned broadly. \"Thanks Tom,\" she said shaking her head as she continued to climb the stairs. Amanda and Alex followed her as Tom shrugged and closed his apartment door. Alex could hear Tom's television blaring in the background. \n\n\"If Nancy ever heard that she'd skin him alive,\" muttered Alex looking back at the foyer. \n\n\"Whose Nancy,\" Amanda asked? \n\n\"Tom's wife,\" Alex replied with a grin. \n\n=FIVE= \n\nAlex collapsed on his couch and the bags he and the girls were carrying were piled around him. \n\n\"Damn, I simply don't know how you girls do it,\" he sighed. \"I'm exhausted.\" \n\nAmanda and Rachel pushed the bags out of the way and flopped down on either side of him. \n\n\"That was fun,\" sighed Amanda. \"Thank you for being such a good sport about it. I haven't had a day out shopping like that in ages.\" \n\n\"I have to agree with April,\" Rachel murmured, \"it was exhausting but I loved every minute of it.\" Rachel stood up and began to empty the contents of all the bags they carried onto Alex. In a matter of moments he was buried in bras, panties and dresses. \n\n\"How about we freshen up and meet back up at Rachel's in a half hour?\" Amanda suggested. \"I'll bring the wine,\" she said standing up slowly. \n\n\"Sounds great,\" Rachel replied. \"I need a shower anyway. April, put on something cute from your new wardrobe when you come over, okay babe?\" \n\n\"Hmm, I can't wait to see what she picks out first,\" Amanda said, with a broad grin. \n\nAmanda and Rachel walked out of Alex's door and left him sitting alone buried in a pile of new clothes with a silly grin on his face. \n\nAfter a shower and a touch up of his makeup, Alex decided to go for the black dress that Rachel picked out at Target. He added the black lace bra and matching panties, plus the black five-inch stilettos, and black stay up hose to complete the look. \n\nHe opened his door, paused a moment, then took a breath and slowly let it out. When he was ready he walked out into the hallway. The click of his heels against the aging wood floors echoed along the corridor. It was as if he had discovered a whole new part of himself and that part had now become complete. For the first time in his life he felt...beautiful. It wasn't so much dressing as a woman, but dressing for himself that transformed him. And it felt good. It wasn't going to change who he was, but he was finally going to be true to himself. In the final analysis, that's all that matters. \n\nAlex knocked softly on Rachel's door and waited. A moment later the door opened. Rachel and Amanda stood beaming with grins from ear to ear as they looked at Alex standing in the doorway. \n\n\"Oh my God, April,\" squealed Amanda. \"You look gorgeous!\" \n\n\"Come in, come in,\" repeated Rachel. \n\nAs April, walked into the center of the room he stopped and turned towards the two girls. He tilted his head in a coquettish manner and smiled coyly. \n\n\"You're right Amanda, she looks delicious. Would you like a glass of wine, babe?\" Asked Rachel with a sly grin. \n\n\"I would love one,\" she replied, who then turned to Amanda. \"Won't you join me?\" April asked extending her hand towards Amanda as they both followed Rachel into her kitchen. \n\nThe three of them stood a moment holding their wine glasses aloft. \n\n\"I propose a toast,\" she said, looking at the two beautiful women standing before her with glistening eyes. \"To family.\" \n\nThey clinked their glasses and downed the wine in one gulp then set them on the counter. April opened her arms and everyone came together in one big hug. \n\n\"Okay babe, I want to see you strut your stuff in that outfit,\" Rachel growled, provocatively. \n\nApril walked around the counter and paused a moment. She looked back at the two girls and winked. Then she slowly strutted across the living room floor, paused, and then turned to walk back to the center of the room. \"What do you think?\" \n\n\"I think I want to peel that dress off of you and make love to the gorgeous woman underneath,\" growled Amanda. \"Want to help, Sis?\" \n\n\"Let's take this to the bedroom,\" Rachel murmured, as she took April's hand and pulled her to the bedroom door. \n\nRachel and Amanda quickly let their dresses crumple on the floor around their feet as they stepped towards April to help her with her dress. \n\nA moment later they all fell into Rachel's bed, kissing and giggling. April leaned over and kissed Amanda's nipples while she reached over to touch Rachel's cock. \n\nThen she moved over to draw Rachel's cock into her mouth while Rachel reached over to finger April's ass. While pulling more of Rachel's cock into her mouth April began to rub Amanda's pussy. \n\n\"Oh yes-s-s,\" she hissed, as she writhed under the touch of April's fingers. \n\nShe maneuvered around to lick Amanda's pussy while Rachel continued to open her back passage up. \"I want to take your cherry, babe, is that okay?\" \n\nShe hesitated a moment and then nodded, concentrating on Amanda's pussy. A moment or two later Amanda moved to sit on April's face while she began to lower her mouth onto her swelling cock. \n\nOnce Rachel felt she was opened enough to take her girth, she opened a condom wrapper and slipped it over the head of her cock. She maneuvered around between April's legs while she reached over to finger Amanda's butt she whispered to April. \"Are you ready for me babe?\" \n\nApril was pulling gently on Amanda's clit sending her into orbit and could only moan while she felt Rachel slowly press her cock into her button. Although she managed to open her up quite a bit, she had heard that the first time was always the most intense. And this was certainly intense. Rachel paused so that April could adjust to the fullness of her inside of her then she slowly began to move in and out of her ass. \n\n\"Holy mother of God, I feel so full with you inside me,\" April moaned as Rachel began to thrust harder. \n\nShe moved her fingers up to massage Amanda's g-spot while Amanda leaned forward and sucked on Rachel's nipples while stroking April's cock. All of this while Rachel continued to pound her ass, thrusting in and out with vigor. ",
        "April drew her fingers across Amanda's g-spot once again and she started to soar as Rachel felt her orgasm build and begin to travel up her cock. She reached down and joined her hand with Amanda's to stroke April as the three of them climaxed as one. \n\nLater that night, April walked out of Rachel's bedroom, having donned one of her silk bathrobes as she crossed the living room floor. She gathered the robe close after she opened the front door and walked across the hallway softly. Inside her apartment she pulled together what she needed to make a pot of coffee and walked back to Rachel's place. \n\nSeveral minutes later, lured by the aroma of freshly brewed coffee, Amanda emerged from the bedroom and joined April on Rachel's couch. April got up and poured Amanda a cup then returned to sit next to her as Amanda snuggled up against her arm. \n\n\"Do you think we're going too fast?\" She asked, looking up into her face serenely. \n\n\"Maybe, sometimes yes, and sometimes no,\" she replied in a whisper. \"I've waited a long time for love to come into life...one that could make me feel as complete as you two do.\" \n\nRachel, wearing a soft and flowing nightgown, walked softly across the living room floor and knelt down in front of Amanda and Alex. She leaned forward and laid her head into Amanda's lap as Amanda gently brushed Rachel's hair out of her eyes. \n\n\"I wish it could always be like this moment,\" murmured Rachel sweetly. \n\n\"So do I love,\" Amanda whispered, \"so do I.\" \n\nA NOTE FROM THE AUTHOR: \n\nThe author copyrights Stray Cats and all of its parts. The reproduction of any part of Stray Cats without the written permission of the author is expressly prohibited. \n\nThis story is a work of fiction. All of the characters, their names and the places they visit, are purely from the imagination of the author. Any resemblance to persons, places, or things is not intentional and purely coincidental. \n\n\u00a9 2015/ Dreamweaver594"
    ],
    "authorname": "Dreamweaver594",
    "tags": [
        "menage e trois",
        "romance",
        "transgender",
        "trans",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/stray-cats-ch-02"
}