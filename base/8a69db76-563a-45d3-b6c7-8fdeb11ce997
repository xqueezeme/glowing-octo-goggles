{
    "title": "Kelsey's World Ch. 30",
    "pages": [
        "Barbara hadn't seen Wendy at the gym since before the holidays. The falling out of their friendship was unavoidable \u2014 finding Barbara naked and trussed with leather straps on Ritchie's bed was something a mother doesn't get over very quickly. Wendy had to come to grips with a number of things on that day two months ago \u2014 her son was enjoying himself living away from her, he had a thing for older women, he enjoyed having sex with women who were tied up, and her best friend Barb was the woman in question. It was more than a little overwhelming, so Wendy had steered clear of the gym when she thought Barbara would be there.\n\nIt wasn't an exact science, though. On more than one occasion Wendy had pulled into the gym parking lot and noticed Barbara's car there. Wendy drove home on those days with mixed feelings, still angry at Barb and still angry at herself for holding a grudge.\n\nThe opposite was going on in Barbara's mind. She just wanted everybody to get along, so when she saw Wendy's car at the gym one evening in early January, she veered across the path of an oncoming car and hurried inside, hoping to 'casually' run into Wendy and break the long frozen ice.\n\n\"Oh, hi!\" Barbara said, when she saw Wendy was just arriving too, putting her things in a locker. \"Gosh, you look terrific! Have you been coming a lot?\"\n\nWendy was shocked by the unintended double entendre. Not as much as you are, with my son! she wanted to scream. \"Yeah, I finally got on a three times a week schedule,\" she said, trying to sound calm. \"Can you really see a difference?\"\n\n\"Oh, yeah!\" Barb said, looking her over. \"All that worry about your ass? You can kiss that goodbye! I'll bet Matt's kissin' it hello!\"\n\nWendy laughed. It felt so good she almost cried. She really loved Barb, and had missed her.\n\n\"He has been more into things lately. And, as mad as I've been at you, I have to admit it's all because of you.\"\n\n\"It is not.\"\n\n\"It is. Think back. I befriended you because I wanted to be sexy like you.\"\n\n\"Well,\" Barbara said, \"you got it in you naturally. That's all I'm saying.\"\n\nBarbara opened a locker and put her handbag inside. She opened up the gym bag that she carried with her in the car and started changing her clothes. \"So, how mad at me are you?\" she asked, avoiding eye contact.\n\n\"Honestly? If I didn't sort of love you I would have killed you.\"\n\n\"That bad, huh?\" Barbara said, turning her sad, pretty eyes toward Wendy.\n\n\"Yup,\" Wendy said. \"But...time marches on, right? It's a new year. I've had a lot of time to think.\"\n\n\"And?\"\n\n\"Richie's a good kid. You're not dangerous. I kinda hate to say it, but...I feel like he's in good hands. I'm actually kinda glad you're over there sometimes. I have a feeling that house is nothing but wild. I mean, I like the girls, but I feel better knowing you're kind of keeping an eye on things.\"\n\n\"I feel like I need to be honest with you,\" Barbara said. \"I'm not exactly Mother Teresa when I'm over there.\"\n\n\"I know that. I'm pretty sure Mother Teresa didn't like bondage. But, you know what I mean. You're a mother. You're not gonna let it turn into a crack house or something.\"\n\n\"I do know what you mean. I'm glad I'm there too. But honestly, those girls are kind of remarkable. I don't think any one of them has missed a day of work. Brie and Charity love teaching. They're always grading papers or working on something for school. Apart from the nudity and the sex, it's a perfectly normal house.\"\n\n\"We'll talk more later,\" Wendy said when another woman entered the locker room.\n\nBarbara hugged Wendy. \"I feel like a huge weight's been lifted off of me,\" she said quietly in Wendy's ear.\n\n\"Me too,\" Wendy said. She squeezed Barb tight before the two of them went out to conquer the exercise machines.\n\nAn hour later, they were sitting on stools at a high table in the bar of the fancy restaurant across the street, the same table where they'd first gotten to know each other, months ago. An open bottle of Shiraz and two half-full glasses sat on the tabletop.\n\n\"That's good wine,\" Barbara said, after too big of a gulp. \"So how often do you visit Ritchie?\"\n\nI could ask you the same question, Wendy said to herself. \"At his place? I try and see him once a week, but he comes home to us most of the time. I go out there once every three weeks or so. I always get the feeling I'm interrupting something. The girls are barely dressed, and...\"\n\n\"You're just interrupting their normal. You know they don't wear clothes, right?\"\n\nWendy sat stone-faced, trying to process what Barb had said.\n\n\"You didn't know that?\" Barbara asked.\n\n\"No. That...makes sense, though, now that I think about it. What they're wearing always looks thrown on. Just the girls, you mean, right?\"\n\n\"No. All of them.\"\n\n\"You mean...Richie walks around there with no clothes on?\"\n\n\"Yup. Austin, too. All of 'em.\"\n\n\"I need more wine,\" Wendy said. She gulped down most of what was in her glass. There was an odd look on her face when she refilled it. She filled Barbara's, too.\n\n\"And...when you're there?\" Wendy asked. She wasn't sure she wanted to know the answer.\n\nBarbara nodded. \"Me too.\"\n\nWendy was stone-faced again. Her mind was spinning all kinds of directions.\n\n\"Barb!\" Wendy said quietly, her eyes growing big. \"Naked? In front of Austin?\"\n\n\"Like I said, not Mother Teresa. It sort of snuck up on me. You know Kelsey's family are naturist, right? She sort of...guided me into it. She's got a way about her.\"\n\n\"But...what's that like?\" Wendy asked. \"Was Austin...okay with it?\"\n\n\"Yeah, he's very mature about it. About a lot of things, really,\" Barbara said, gulping more wine. \"It's odd, Wendy. It's almost like were not mother and son sometimes, and yet the mother/son bond is stronger than ever. Do you remember when you and I went shopping for lingerie and you said Richie saw you in the bathroom the next day in that black see-through lace babydoll you bought, and you said you just stood there and it didn't feel all that strange? It's kind of like that.\"\n\n\"Yeah, but, Barb...everyone naked?\"\n\n\"You and Matt have the house to yourself now. You should try it at home. It's really kind of amazing how good it feels.\"\n\n\"Barb, I don't think I'm understanding. What about the boys? Don't they get...hard?\"\n\nBarbara blushed a little and took another big sip of wine. She hadn't expected the conversation to get deep into her new relationship with her son, but she'd backed herself into a corner.\n\n\"Sometimes. Wendy, maybe we shouldn't talk about this.\"\n\nWendy didn't know what to say. The house was nudist, and the boys walked around with hard-ons? And Barb was there, looking at her own son's boner? That seemed to be what Barb was saying, but it all seemed crazy to Wendy, like she was dreaming it.\n\n\"Yeah, maybe...we shouldn't. I mean...\"\n\nBarbara seized the moment to get away from the awkwardness. \"So,\" she said, \"things are better with Matt?\"\n\nWendy knew just what Barb was getting at. \"Oh. Yeah. I don't know why I'm gonna tell you this, the wine's getting to me I guess. After I...found you...in Richie's room...all tied up, I...we...Matt and me, we tried it.\"\n\nBarbara smiled brightly. \"Wendy! Who tied up who?\"\n\n\"Me. I mean, I let him. It wasn't, like, fancy, like that thing you were in. Just scarves around my wrists and ankles. God, I'm getting all tingly just thinking about it.\"\n\n\"Isn't it fun? God, I love it. I think it's awesome that you tried it. So? Did you like it?\"\n\n\"Oh, yeah!\" Wendy said, smiling shyly. \"It's...kinda great. Matt was like a new man.\"\n\n\"Really?\" \n\n\"Yup. I closed my eyes and it wasn't him. I swear to God.\"\n\n\"Yeah! You go girl!\" Barbara said. She clinked glasses with Wendy and they both took another big sip of the nice wine. It was going down easy.\n\n\"So, get this,\" Wendy said. \"I found a picture in Richie's room. I swear to God I wasn't snooping. He left it out by mistake.\"\n\nBarbara's heart raced. Was it one of her, she wondered? \n\n\"Richie and Abby and Kelsey, all naked with my neighbor Koop and his mechanic partner. They're all standing together, posing, with smiles no less, in Koop's shop. All of them are covered in dirt.\"\n\n\"Really?\" Barbara said, trying to act like she didn't know about it. Wendy sensed that Barb knew something.\n\n\"Do you know about it?\" she asked, looking confused.\n\n\"I'd forgotten Koop's your neighbor. Do you talk to him?\"\n\n\"Let's just say he's who Matt turned into, when I closed my eyes.\"\n\n\"Really!\" Barbara smiled. \"God, I've missed talking to you.\" She filled both the glasses again, emptying the bottle. \"So where does he live? Can you look in his windows?\"\n\n\"I wish! He's sort of kitty-corner, across the street. But we missed something here. How do you know him?\"\n\nBarbara wondered if she should just come clean, and admit that Koop and Happy had given her dozens of orgasms, and that Richie and Austin's cum had mixed with Koop and Happy's deep in her pussy at the Christmas party. Probably deep in her ass, too, but she was so thrillingly out of her mind that night she couldn't be certain who was in what hole.\n\n\"He sold Kelsey her Jeep,\" Barbara said.\n\n\"Yeah, I know that. That's how Richie met her, remember? But you've...met him?\"\n\n\"This gets into delicate territory. I can't tell you the details without getting some people's permission first, but...let's just say I've been to some parties that Koop was at.\"\n\n\"Parties?\" Wendy asked. She was smiling, but looked confused.\n\n\"That's really alI can say. I'm sorry, Wendy.\"\n\n\"What is it, like some secret society or something?\" Wendy said, half kiddingly. \"Oh, is there a mansion? There's always a mansion in those stories, right?\"\n\nBarbara didn't answer, but yes, Kay and Bobbie's big old Victorian house definitely fit the bill.\n\n\"Barb, come on. Really? You can't tell me how you know Koop? Does it involve Richie?\"\n\nBarbara sighed. \"Believe me, Wendy, I'd love to tell you all about it, but...you wouldn't want me talking about your private life with other people, would you? Let's just say I know Koop, and I think he's a great guy.\"\n\n\"Parties? Jesus, Barb, are the kids having orgies? What the fuck's going on? Should I be telling Abby's parents about this?\"\n\n\"No! Don't do that! God, she'd never forgive either of us! I'll tell you what, can you give me a day to run this by someone? I just don't feel right telling certain things.\"\n\n\"God, Barb, this is nuts. I guess I need to respect that you're not a blabbermouth. Okay, you're off the hook for today. But don't forget me. I won't sleep until I know what Richie's in the middle of.\"\n\n\"I promise. The last thing I want to do is lose this again,\" Barbara said, waging her finger between Wendy and herself. \"I'm so glad we've reconnected.\"\n\n\"Me to. But Jesus, Barb, you got my head messed up. That wine's got a kick, doesn't it?\"\n\n\"Is Matt home? You need to dangle those scarves in front of him. Have him tie you up face down. I love it that way.\"\n\n\"Fuck! Now I'm messed up and horny,\" Wendy smiled. \"I missed you Barb. I really missed you.\"\n\n\u2014\n\n\"Wow, you look like you had fun,\" Matt said when he saw Wendy's wine-buzz smile. \"Were you out with a boyfriend?\"\n\n\"No!\" Wendy said. \"I...had a drink with Barb.\"\n\n\"Really? How'd it go?\"\n\n\"Really good. We're friends again. I didn't realize how much I'd missed her.\"\n\n\"I did. You've been moping around here for months. Did you see her at the gym?\n\n\"Yup. Hey, mister! What's that look in your eye?\"\n\n\"Oh, nothing,\" Matt smiled. \"Just picturing you two all sweaty together.\"\n\n\"Oh you are, are you,\" Wendy said as her wine-soaked adrenaline started to flow. \"I suppose you'd like to tie me up again and think about it some more.\"\n\nMatt's smile brightened, the way a light bulb does when you turn up the rheostat. Wendy's wine buzz kicked in again, almost like she'd drank another bottle. In no time at all she was naked, face down on the bed, with all four of her limbs tied securely out at the corners. Matt's cock was in her pussy, feeling like nothing less than God's Golden Tool. Her back was arched up and her head was turned, so Matt could get his hands on her tits and his mouth on hers. It was a burning kiss, wet and sloppy, barely holding together as the fucking rose in intensity. Their moaning mouths separated when they both closed in on the big moment. The big bed was rocking, knock knock knocking against the wall. It was a feverish, primal fuck, and the climax was fitting, with crying grunts that were worthy of the Neanderthal. \n\nWhen it slowed to a stop, with all of Matt's weight feeling gloriously comforting on her back, Wendy realized that, in the heat of the moment, she'd thought of Richie fucking Barb the exact same way. Instead of freaking her out, it made her proud that she'd created a young man who wasn't nervous about sex, the way so many men are. She was glad that he seemed to love it all, and knew how to satisfy a woman. It was an odd revelation to have in her post orgasmic state. Must be the wine, she said to herself. Must be the wine.\n\n\"So what is it about two sweaty girls that makes a man do that?\" Wendy asked the deep breathing lover on her back.\n\n\"Ha!\" Matt laughed. \"Are you a mind reader now?\"\n\n\"I hope it's two sweaty girls, and not just Barb you're thinking about.\"\n\n\"Oh, you're in there. You're in there good. Have I told you how good you look lately? All that angst you were trying to sort out at the gym really paid off.\"\n\n\"You noticed?\"\n\n\"Of course! I also noticed your clothes are getting a little loose. You deserve a shopping spree. I'm picturing nice tight pants.\"\n\nWendy smiled. \"Don't tell me my ass...is that what inspired you just now? Untie me. I wanna hug you.\"\n\nA few minutes later, after a nice kissy hug, Wendy was up on Matt's hard cock, riding cowgirl.\n\n\"I don't mind, you know,\" she said breathlessly as she bounced. \"I think about her, too.\"\n\nA look of happy surprise overtook Matt's face as he watched his energetic wife. \"Barb, you mean?\"\n\n\"Yeah,\" Wendy said. Sweat was starting to glisten on her body as her thighs propelled her up and down. \"When you and I are...doing stuff. I can't seem to get her out of my mind.\"\n\n\"Because of Richie?\"\n\n\"I don't think so,\" Wendy said, her breathless voice getting even more breathy as she fucked every centimeter of Matt's length. \"Maybe.\"\n\nIt was the first time their son's relationship with Barb had been discussed during sex. It seemed like a breakthrough, to both of them. It certainly triggered them both \u2014 Wendy had a slow-burn orgasm that left her limp, and Matt, with visions in his mind of his son fucking Barb, had a similar melt down. His cock, deep inside his wife's pussy, had never felt so magically electric.\n\nThe afterglow was cuddly and warm. They both wondered what the other was thinking \u2014 should they bring up Richie again at such a moment, or Barb?\n\n\"If you ever feel like experimenting...I'd be okay with it,\" Matt said.\n\n\"What do you mean?\"\n\n\"With...Barb. It's something women are curious about sometimes, right?\"\n\nWendy could hardly believe her ears, but she couldn't help smiling. \"Sexually? Is that what you mean?\"\n\n\"Yeah,\" Matt said, embarrassed that his cock was plumping. \"She seems like the kind of person who might be into that.\"\n\n\"Oh, my God! You're turned on by this, aren't you?\"\n\n\"Well, if you're not, that's plenty fine, too,\" Matt said. \"I'm just glad she gets you in the mood, for whatever reason.\"\n\n\"Oh you are are you? That explains this?\" Wendy smiled, scooping up Matt's growing cock in her hand. \"You're a dirty boy. Why didn't I ever know that?\"\n\n\"You never asked,\" Matt smiled.\n\n\"So you want me to have sex with Barb. And your son already is. What do you get out of it? I'm not lettin' you in there, if that's what you're angling for. Not with the way Richie's involved.\"\n\n\"No. No. I just thought maybe you girls were...I don't know. Forget it if you want. Or don't. It's okay with me, that's all.\"\n\nWendy was astonished. Her husband had just given her permission to fuck a woman. It sure seemed that way anyway. She wasn't about to ask the details.\n\n\u2014\n\nThe next day, Barbara called, as she'd promised to do. Wendy's heart raced when she heard her soothing voice...\n\n\"Wendy? Hi, it's Barb. I don't know about you, but I got a headache from that wine. We drank it so fast!\"\n\n\"Hi Barb. No headache for me, but it was a nice buzz, that was for sure. Maybe the exercise helped with my head.\"\n\n\"At the gym, you mean?\"\n\n\"No. I took your advice. You're so right. Tied up face down is amazing.\"\n\nBarb giggled. \"Nice! Now I'm jealous. You with your nice sexy man to go home to. So listen, I talked to who I needed to talk to, about what I couldn't tell you. Gosh, it sounds like espionage or something,\" Barb giggled. \"Are you free for lunch? I know it's Sunday and Matt's probably home. I think it might be easier to talk about if it's just the girls, though.\"\n\n\"Yes, I'm free.\"\n\nTwo hours later Barbara turned onto Kay and Bobby's driveway. The bright sun glistened off the white snow blanketing the ground under the craggy old apple trees.\n\n\"So this is where Kelsey grew up?\"\n\n\"Yup. Like I said, Kay's super nice. You know how nice Kelsey is \u2014 she's a chip of the old block, that's for sure.\"\n\n\"You know, I've driven past here,\" Wendy said. \"In the wintertime you can see a little bit of the house, but wow, this is such a cool place!\"\n\n\"I know, isn't it?\"\n\nBarb parked and they got out the car onto the fresh snow.\n\n\"Welcome!\" Kay yelled from the front porch.\n\nInside the living room, coats were hung on hooks and the heat from the big woodstove warmed Wendy and Barb.\n\n\"It's so nice to meet you, Wendy,\" Kay said. \"Richie's such a nice young man. You did a marvelous job raising him.\"\n\n\"Oh, thank you,\" Wendy said. \"Barb told me he was here with her. I'm still getting used to the idea.\"\n\n\"I didn't actually bring him with me,\" Barbara said. \"He came with Abby. Kelsey invited them.\"\n\n\"Shall we have lunch in the kitchen?\" Kay asked. \"We'll see if Barb and I can help to answer some of your questions.\"\n\nThe three of them went into the kitchen, where another woodstove was making soft ticking noises as its cast iron sides radiated warmth. Sunlight streamed in through french doors that lead out to the snowy pool patio. The kitchen table was set for three places, with a nice looking sandwich on each plate \u2014 chicken salad and green lettuce leaves between slices of rustic looking bread. A plate of cottage cheese and homemade pickles was ready to pass. Chocolate chip cookies on a bright yellow platter waited their turn for dessert. \n\n\"I've got some nice Riesling wine if you'd like, or something non-alcoholic,\" Kay said.\n\n\"Wine would be nice,\" Wendy said.\n\nThe three women talked about the house and the old orchard, the neighborhood where Wendy lived, and common experiences raising kids in the same school system. Wendy was having a nice time and really enjoyed Kay's company, but she was still curious why she'd been summoned to the big old house. She took a big sip of wine for courage and blurted her curiosity out into the open...\n\n\"So tell me about these mysterious parties.\"\n\n\"Yes, Barbara told me that came up the other day,\" Kay said. \"I hope it doesn't seem like we're trying to keep secrets from you, it's just that...it's a bit of a delicate subject in a town the size of ours. If I asked you to keep this just between us for now, would that be all right?\"\n\n\"Of course. I hate gossip. I don't generally get involved in all that.\"\n\n\"My husband Bobby and I are swingers. And, seemingly through osmosis or something, Kelsey's embraced the lifestyle, too,\" Kay said. She looked as deeply into Wendy's eyes as she could, and all seemed relatively calm. \"Now, Bobby and I have always had a policy, informal, you know, about not getting involved with the college-aged kids in town. It's just always seemed better to avoid that. But Kelsey, she's sort of set off this chain of events with her friends, and, well, our old rules seem to be going by the wayside. That's why Richie and Abby were here for our Christmas party.\"",
        "\"You were here?\" Wendy asked Barb. \"And Koop? Is that how he fits into all of this? Did he bring the kids here?\"\n\nKay jumped in, before Barbara could answer. \"I'm really not comfortable giving out names of our fiends,\" she said. \"I hope you understand, Wendy.\"\n\n\"I called him last night,\" Barbara said to Wendy. \"He was worried at first, said he figured it would come out sooner or later. He said I could tell you, though. He wasn't sure he wanted Matt to know, but he said I could tell you. I think he's a little sweet on you.\"\n\n\"He's not!\" Wendy said, with happy surprise in her eyes. \"Is he?\"\n\nBarbara smiled.\n\n\"To answer your question a little better,\" Barb said, \"it was Kelsey that brought everyone together. Koop was just...along for the ride, I guess you could say. If you're wondering whether to be mad at him, I...personally I wouldn't. I mean I know he's the reason Kelsey met Richie, but...\"\n\n\"No, I'm not mad at him. Maybe I should be, but I'm not. He's not the kind of guy that would push things.\"\n\n\"No, he's not,\" Kay said. \"I'm afraid Kelsey swept him off his feet. She tends to do that.\"\n\n\"Yes she does!\" Barbara laughed. \"Good lord, I'd barely met her and she was already shaving my pussy!\"\n\n\"Oh, I know, Honey!\" Kay laughed. \"She told me about that!\"\n\n\"You let her...do that?\" Wendy asked.\n\n\"Don't ask me why,\" Barbara said. \"We had a glass of wine and before I knew it she'd convinced me sitting around naked was the way to be, and then we were in the bathroom and she was shaving me, and then...\"\n\nA pregnant pause suddenly changed the atmosphere. \n\n\"Don't stop on my account,\" Wendy said, eager to here what happened next.\n\n\"She gave me four of the best orgasms of my life.\"\n\nWendy was astonished. Four! Just one would have been an extraordinary thing, but four!\n\n\"Good Lord!\" Wendy said in a near whisper. She let all the crazy information settle into her brain for a moment. \"What about the other girls?\" she asked. \"Have you...?\"\n\nBarb nodded.\n\n\"Brie?\"\n\nBarb nodded.\n\n\"Charity?\"\n\nBarb nodded.\n\n\"Not Abby!\"\n\nBarb nodded.\n\nWendy's face had blushed bright red. She knew it was visible and it just added to her embarrassment. Her mind spun nearly out of control, wondering about all the things that weren't being said. She could only assume that Brie and Charity were at Kay's Christmas party, too. And God knows who else. She took another big sip of wine.\n\n\"So, I'm not sure I really understand the swinger thing. You said no college age kids, so...are there adults?\n\n\"Yes, we have quite a nice group,\" Kay said. \"It's surprising really, for a town this size. Barbara's one of our favorite newcomers. She's added such a spark to everything.\"\n\nWendy's eyes gave away her surprise. \"So you're...a swinger?\"\n\nBarbara nodded. \"I won't really feel like one until I have a man to share, but yeah, I guess I am.\"\n\n\"You share your Austin,\" Kay said. \"He's certainly a man.\"\n\nBarbara blushed.\n\n\"I'm sorry, Honey,\" Kay said. \"I shouldn't have said that.\"\n\n\"No, it's okay,\" Barbara said. \"If I'm into all this I need to be proud of it, right?\"\n\n\"That's the spirit, Honey.\"\n\n\"I guess it all makes sense now,\" Wendy said, trying to stay as calm as she could. \"For months I've had a feeling there was something going on that I couldn't figure out. Matt kept telling me I was imagining things.\"\n\n\"Well, now that you know, do you think you and Matt would ever be interested in anything?\" Kay asked.\n\n\"You mean...swinging?\" Wendy asked. \"Oh, no, I don't think so.\"\n\n\"Have you ever fantasized about it?\" Kay asked. \n\n\"You mean being with other men? Sure, I guess. What girl doesn't?\"\n\n\"Fantasies about threeways, maybe?\" Kay asked. \"Matt and another man taking care of you, or you and another woman taking care of him?\"\n\n\"I guess so. Yeah,\" Wendy said. Her head was spinning again. She felt like things were getting out of control, but she didn't want to stop it.\n\n\"It can be as simple as that to start,\" Kay said. \"A nice threeway, with a friend you're comfortable with, perhaps.\"\n\nBarbara blushed again when she realized Kay was talking about her.\n\n\"Jesus, Kay,\" she said, giggling nervously. \"Nothin' like weaving your dirty spell.\"\n\nKay smiled. \"You're right. I shouldn't. Sometimes I can't help myself.\"\n\n\"You and Kelsey, both,\" Barbara said. \"You two are cosmic twins, I think.\"\n\nThe thought of sharing Matt with Barb was making Wendy uncomfortable, so she made a feeble attempt at changing the subject.\n\n\"I never knew cookies and wine went so good together,\" she said.\n\n\"I'll say one more thing about threeways and then I'll let it rest,\" Kay said. \"Barbara tells me Koop lives right across the street from you.\" \n\nWhen Kay punctuated the statement with a wink, it hit Wendy like a shot. Good Lord, she thought to herself, was such a thing really possible? Koop and Matt and me, together in my own bed. Or in Koop's bed? Why is that even hotter? Yes, we'll definitely do it in Koop's bed!\n\n\"Jeez, Wendy, are you all right?\" Barbara asked, smiling mischievously.\n\n\"I'm fine!\" she said, trying to smile away the horny look on her face. \"Jesus, what are you guys trying to do to me? It's hard enough trying to hold a good marriage together these days, isn't it?\"\n\n\"The divorce rate in our group is ridiculously low,\" Kay said.\n\nAll Wendy could do was laugh. It was a nervous laugh, but it felt good.\n\n\u2014\n\nBy some strange twist of fate, Koop was dragging his trash can down his driveway to the curb for Monday morning pickup just as Wendy rounded the corner in her car, on her way home from the fascinating, scary, tittilating lunch at Kay's. She knew she should have just waved, but the car seemed to stop on its own.\n\n\"Hi Koop. How's Jeeps?\"\n\nShe blushed and her blood seemed to boil as soon as the goofy words left her lips.\n\n\"Jeep's are good. We should put you in one. You'd look good.\"\n\nHer stupid comment, and Koop's flattering one, locked up her already stupefied brain. \"Bye\" was all she could manage, lurching away like a kid just learning to drive. She was glad she had a remote controlled garage door opener, so she didn't have to face her handsome swinger neighbor again that day. Her husband Matt was another story.\n\n\"How was lunch? Lots of girl talk?\"\n\n\"Yeah. Clothes, boys, who's takin' who to the prom. Barb says hi.\"\n\nMatt could tell something was off. Everything about Wendy sped up when she was nervous. Her quick little giggle was the first clue.\n\n\"Wanna tie me up?\" she said, the words popping out like toy machine-gun bullets.\n\n\"Are you serious?\" Matt asked. The look in Wendy's eyes gave him his answer. \"You know I'm never sayin' no to that question,\" he said.\n\nIn the bedroom Wendy discarded her clothes like they were on fire. She climbed onto the bed face down.\n\nMatt shook his head. \"Oh no,\" he said, pulling her arm to flip her over. \"I'm the guy doing to tying. I say what goes. I wanna see that face when I interrogate you.\"\n\n\"Oh, God,\" Wendy said. \"Maybe we shouldn't do this now.\"\n\nMatt took the four scarves out of the bedside drawer. He put Wendy's hand on his crotch to show her how hard he was. \"You don't get me this way without following through,\" he said as he tied her wrist.\n\nMatt worked his way around the bed, tying wrists and ankles, pulling them out toward the four corners of the bed and securing them tightly. It was a more thorough job than he'd done before, with no slack left for movement. The only sound as he worked was the breath huffing out of Wendy's flaring nostrils.\n\n\"Did your girlfriend make you horny today?\" Matt asked, smiling a wicked looking smile. \"Did you kiss her.\"\n\n\"No.\"\n\nHe dragged the big white feather that they play with up her leg, lingering as he flicked it back and forth on the upper part of her inner thighs. \"Do you want to kiss her?\"\n\nWendy hadn't thought about it before, but it didn't take long for her to answer.\n\n\"Yes.\"\n\n\"Does Barb know how? Does she kiss women?\"\n\n\"Yes.\"\n\n\"Really!\" Matt smiled. \"So why, my sexy wife, haven't you kissed her?\"\n\n\"I don't know,\" Wendy said. Her skin was covered in goosebumps from the tickling feather, which was flicking across her hard nipples. \"Why do you want me to?\" she asked.\n\nMatt dropped the feather and opened his pants. His hard cock sprang out, ready for action. \"This is why,\" he said. He pulled off the pants, climbed onto the bed and guided the fleshy shaft into Wendy's mouth.\n\n\"Ohhh yeah!\" he groaned. \"Fffuuckk!\"\n\nOver the last few months Wendy had gotten to like giving her husband blowjobs. It made her feel like a dirty girl, and she liked that feeling when they were naked together. What was happening on the bed with her tied up was different though. Rawer, more visceral. Matt was straddling her and held her head in his hands. His hips were thrusting. He was in complete control, fucking Wendy's mouth, making her gag. She loved it. When he slipped out by mistake she breathlessly begged for more.\n\n\"Put it back! Put it back!\"\n\n\"Your girlfriend doesn't have a cock for you,\" he said when he stuffed her mouth full again. He reached back and slipped two fingers into her wet pussy. \"I'll bet she knows how to make you cum, though. Are you gonna let her? Are you gonna let her make you cum?\"\n\nWendy nodded excitedly, just as a quick orgasm made her buck and moan, pulling hard against her restraints. She gagged on the hard cock again as her writhing body pressed against Matt's clit tickling fingers. The normally quiet bedroom was alive with squishy pussy noises and Wendy's gurgley, gagging moans.\n\n\"Fuck yeah!\" Matt said as he worked his wife to a frenzy. He came with a gush in her mouth, trying to control his thrusting hips so he didn't choke his sweet wife half to death. \"Fuck Yeah!\"\n\n\"Jesus\" was all he could say when it was over. He lowered Wendy's head to the bed. Her eyes looked stunned, in a good way, as she lay there with cum leaking out of the corner of her mouth, dripping down her cheek. It was the most intense sexual experience either of them had ever had, and they were both hoping for more.\n\n\u2014\n\n\"Wanna hit the gym with me after work?\"\n\n\"Sure,\" Barbara said into her phone. \"I was gonna meet the guys there tomorrow, but I can use the extra. I put on four pounds over the holidays.\"\n\nWendy wore the sexy sports bra that she'd bought with Barb at Victoria's Secret, and some skin-tight leggings that she hadn't had the courage to wear yet. Barb looked plenty good too, in a similar outfit. It was a slow night at the gym, with just a few men scattered about. Every one of them took notice of the newly arrived women in their tight workout clothes.\n\n\"Anybody ever ask you out when you're here?\" Wendy asked, glancing around at the men.\n\nBarbara wondered if she should tell Wendy about the threeways she'd had with Rick and Donna, and how they'd started when he propositioned her in the parking lot after a workout.\n\n\"Yup. And I said yes.\"\n\n\"Anybody I know?\"\n\n\"I don't think so, but you may have seen him here. His name's Rick. Shaved head, looks like he could beat you to a pulp...\"\n\n\"Rick Welch?\"\n\nBarbara gulped. She hadn't expected Wendy to know him that well.\n\n\"Barb, he's married.\"\n\n\"I know,\" Barb said sheepishly.\n\n\"You're okay with that?\" Wendy said, looking surprised.\n\n\"Do you know Donna?\"\n\n\"Yes.\"\n\n\"Okay, well then...this is awkward. I really shouldn't say anything more.\"\n\nWendy's eyes opened wide. \"Oh my God, are they...\" Her voice dropped to an excited whisper. \"...are they swingers?\"\n\n\"Sorry, Honey, until you join the club you're just gonna be guessing.\"\n\n\"Fuck! I never would have dreamed all this was going on around here!\"\n\nThe sparsely populated gym was the perfect place for the quiet talk Barb and Wendy were having. By the time they got to their last machines they were deep into discussing Matt's performance the night before.\n\n\"I've never had a man go so wild on me. Look...\" Wendy said, holding out her red wrists for inspection.\n\n\"I noticed as soon as we started,\" Barb smiled.\n\n\"He kept me tied up the whole time!\" Wendy said. \"Usually it's just for one thing and then he unties me and we do something different. Last night he was like a wildman!\"\n\n\"So what set him off?\"\n\n\"You.\"\n\n\"Me?\" Barb said, looking a bit bewildered.\n\n\"You know how guys are. He thinks about you and me...together.\"\n\n\"Really? Wow!\" Barb said. \"Is he like that with your other friends?\"\n\n\"Nope. Just you.\"\n\nBarbara had a feeling it was because of Richie. A father living vicariously through his son, or something like that. \"So, I gotta ask,\" she said. \"Do you?\"\n\n\"Think about it, you mean?\"\n\n\"Yeah. Have you ever? Been with a woman? Or a girl?\"\n\n\"Wow. That's a whole lot of different questions. Yes, I've thought about it. And no, never with a woman. Once with a girl, when I was a girl. Just kissy feely. Nothing too intense.\" Wendy grimaced when the leg press machine won the battle against her tired legs. \"I'm whipped,\" she said as she gave up. \"No more. Matt took it all out of me last night.\"\n\n\"Wine across the street?\" Barbara asked.\n\n\"Sure,\" Wendy smiled.\n\nBoth the women smiled shyly when they got undressed in the locker room for a shower. With so many new secrets out in the open \u2014 Barbara's swinging and Wendy's impure thoughts about her were the two biggies \u2014 both of them felt a bit awkward sharing a shower. There were two showers in the women's locker room, each with a curtain for privacy, but each stall big enough for four women, with a shower head for each person. In the past they'd showered together, and it would have been odd to not do it again, so they walked into one of the stalls with their soaps and shampoos and pulled the curtain. One thing the gym didn't lack was hot water. Billows of steam rose up from the tiled floor, surrounding them in a misty haze as they wet their hair and let the heat pour over them.\n\n\"God that feels good,\" Wendy said, eyes closed with her head tipped back as hot water cascaded down her body.\n\n\"You should try this soap,\" Barb said, startling Wendy with her nearness. \"You wouldn't believe all the toxic stuff in the one you use. Can I...wash you?\"\n\nWendy nodded. Her body tensed up but she knew she wanted it. She knew swinging and joining into the orgies wasn't something she could do, but some alone time with Barb, yeah, she could do that. Her husband had even given her permission for goodness sake.\n\nBarb started slow. She stood behind Wendy and massaged her shoulders with warm, soapy hands.\n\n\"You're tight. You need a real massage. I've always wanted to learn how to do that.\"\n\n\"That feels plenty good to me,\" Wendy said. The hot water was pelting the front of her while Barb worked the back.\n\n\"Do you ever do massages with Matt?\"\n\n\"We used to, years ago. He always got hung up on my...\"\n\n\"Here?\" Barb asked, as her soapy hands swept around onto Wendy's tits. She massaged them gently, letting her fingers flick across the hard nipples. \"Guys always get stuck there,\" Barb purred. \"Some girls do, too...\"\n\nWendy tipped her head back and Barb leaned in for the kiss they'd both been waiting for. Their bodies came together, wet and warm. One of Barb's hands went lower, across Wendy's water splashed belly, down to her womanly heat. She moaned into Barb's mouth, loud and low.\n\nWendy pressed her ass against Barb's smoothly shaved pussy, moving it in a circular motion, propelled by the slender fingers moving the same way in her pussy. It went on for a few glorious minutes, until it was all too much for Wendy's excited mind. Her lips broke from Barb's and a mighty groan echoed off the tiled walls. The orgasm was so mind altering Barb had to hold her up.\n\nAfter a few silent moments, with Barb still embracing her from behind, Wendy spoke, her voice not much more than a breathless sigh. \"That's some good soap.\"\n\nIt brought on a case of the giggles. Barb and Wendy were both lost in the lighter-than-air feeling. As they laughed it felt as if they could float away on the thick steam rising from the spattering water. Wendy tipped her head back and another deep kiss quieted the giggles. She turned and their bodies were together, soft wet tits against soft wet tits. Wendy's hand found the thing she'd been so curious about \u2014 a bare pussy that was as soft as a baby's bottom.\n\n\"God, it's so soft,\" Wendy said.\n\n\"Kelsey told me to put baby oil on it every day. She calls it \"girlie maintenance.\"\"\n\nWendy giggled again, right into Barb's kissing mouth.\n\nWendy looked into Barbs happy eyes. \"Is it alright if I...\" \n\n\"I'll be disappointed if you don't,\" Barb said.\n\n\"I've never...done it.\"\n\n\"I know,\" Barb said, swooning from Wendy's clit tickling fingers. \"That'll make it even better.\"\n\n\"Should we...go to your place or something?\" Wendy asked.\n\n\"Yup. But not 'till you do what you wanna do. Right here.\"\n\nWendy's blood heated up with adrenaline again. She glanced at the shower curtain, billowing from the rising steam. If someone walked into the locker room and looked hard enough, they'd be able to catch glimpses of the forbidden activity, but Wendy didn't care. She bent and took a soft tit into her mouth. Barb's moan thrilled her, but she wished she could taste Barb's flesh instead of the chlorine in the hot water. When she slipped down to a squat she got her wish \u2014 the baby soft pussy tasted like woman. It was startling to Wendy \u2014 she hadn't expected the flavor. It was brand new and exciting. Even watered down it was earthy and rich, and it made Wendy's mouth salivate.\n\n\"Tell me,\" she breathed into the juicy wetness. \"Tell me what to do.\"\n\nBarb didn't say a word. Wendy already knew what was where, and what needed what. Barb left her alone with her quiet instincts, and reveled in the thrilling pleasure of having her pussy licked at the gym.\n\n\"Ohhh yeahhh!\" she moaned.\n\nFeeling Barb's hips start to thrust really got Wendy going. She was moaning just as much as Barb, the two of them locked together as one as the momentum built. Barb clutched Wendy's head, holding it tight against her, and tipped her own head back under the stream of hot water. The sweet orgasm felt like a dream \u2014 warm and wet, like swimming naked in a balmy sea. \n\nWendy was astonished at how it all happened, and at the womanly beauty of Barb's orgasm. Barb pulled her to her feet, gave her a quick, deep tongue kiss and dropped to her knees, pulling Wendy's dripping crotch to her mouth.\n\n\"Ffuuckk!\" Wendy chirped. She didn't know what to do. It seemed like they'd already dodged a bullet doing as much as they'd done, and she was pretty sure she wasn't going to be able to keep quiet. She watched the billowing curtain, but that's not where her mind wanted to be. Barb's skilled tongue massaged her clit like nothing Wendy had ever felt. It was so different from the way Matt did it. She loved his oral ministrations, and often got off on it, but Barb was lifting her to a higher place.\n\n\"Oh good God!\" she huffed, wide eyed and flying. \"Fffuckk!\"\n\nThe loud exclamation scared her, so she clenched her jaw and whimpered through tightly sealed lips. \n\nBarb was relentless. She wanted Wendy's first time to be special, so she went at her the way Kelsey went at a woman \u2014 with gusto and attention to detail. Time and place went away in Barb's mind \u2014 there was only sex, only beautiful whimpers, only pussy. By the time Wendy launched there was only tongue molecules and clit molecules, and the glorious friction between them.\n\nWendy cried. Tears rolled down her wet face. She was embarrassed by it and hoped Barb didn't notice, but of course Barb did.\n\n\"Did I hurt you?\" Barb said, looking worried as she hurried to her feet to embrace her friend.\n\n\"Oh, God no!\" Wendy said. \"It's just all so...wonderful....\"\n\n\"It was too much,\" she said, kissing Wendy's tears. \"I get carried away sometimes.\"",
        "\"No,\" Wendy said. \"I want more, too.\"\n\nBarb smiled at her new lover and pulled her under the streaming water. \"We better wash and get outta here,\" she said. \"You made quite a racket.\"\n\nWendy looked horrified. \"I did? I though I was...quiet.\"\n\n\"I think that sometimes, too. Richie and Austin think it's funny.\"\n\nBarb suddenly realized her blunder. \"Sorry,\" she said. \"That wasn't very thoughtful of me to mention Richie right now.\"\n\n\"No...that's okay,\" Wendy said. It wasn't Richie's name that grabbed her attention. It was Austin's. Why would Barb say that about him, Wendy wondered, when the subject was noisy orgasms? \"I must have heard you wrong anyway. Do you think...is there anybody here?\" she asked, peering out through the billowing curtain.\n\n\"No, we're good. I'm sure it's not the first time this kind of thing has happened in here,\" Barb said when she turned off the water.\n\n\"Do you think?\" Wendy asked, looking intrigued.\n\n\"I wonder how many times a woman has snuck into the men's shower for a quicky,\" Barb said.\n\n\"God, do you think so?\" Wendy asked.\n\n\"Maybe we should give it a try sometime. With Matt's permission, of course,\" Barb winked.\n\nThe two women toweled off and dressed without much chit-chat, but Wendy's mind was reeling. The orgasmic afterglow made Barb's offhand comment seem almost plausible \u2014 the two of them sneaking into the men's locker room for a wet fuck in the steamy shower with some of the muscly gym men. Maybe there'd be a whole shower full of men and she and Barb would get passed around...\n\nWendy tried to calm her fast beating heart, breathing deep as she stepped into her panties and strapped on her bra. Watching Barb get dressed didn't help much \u2014 Wendy had always thought she was sexy, and after what they'd just been through in the shower everything felt new and different.\n\nAfter two glasses of wine across the street, Barb invited Wendy back to her house, presumably for more lovemaking, but Wendy chickened out and went home. In the car, on the drive to her house, she came up with a nice way of telling Matt about what had happened at the gym. She wondered how he'd react, but then, at the last minute, when she walked in and saw his face...she couldn't do it. It just seemed so...out there, so crazy. \n\nShe kissed him hello, wondering why she'd let herself go like that with Barb, and in public no less, or close to it anyway. It was reckless, and wrong in so many ways.\n\n\"I did it,\" she blurted out, looking confused and concerned. \"Are you happy?\"\n\n\"Happy about what? What did you do?\"\n\n\"With Barb. The shower. At the gym. Oh, come on, you must know, don't you?\"\n\n\"I won't know anything until you calm down and tell me.\"\n\n\"You know. God, are you gonna make me explain it all? We...did stuff.\"\n\nMatt's eyes opened wide and a surprised smile grew on his face. \"Oh my God! You really did? Wait a minute, let me get this picture in my head...you and Barb...in the shower at the gym...alone?\"\n\n\"Of course!\" Wendy almost whined. \"You don't think we'd...do anything with other people in there, do you.\"\n\n\"Just trying to get a clear picture,\" Matt smiled. \"So, hot water, soap...did you wash each other?\"\n\n\"A little. God, I can't believe I'm telling you this. I can't believe I did it! And that look on your face! Matt! Is this healthy for us? I mean, would I be looking at you that way if you'd just given a guy a blowjob? This just feels wrong.\"\n\n\"Hey, it's only as wrong as you wanna make it. I think it's hot. Not the me givin' a blowjob thing. That's just gross. But the you and Barb thing is crazy hot.\"\n\n\"Is it because of Richie? Oh my God, I'm having sex with my son's lover,\" Wendy said, holding her face in her hands, shaking her head in disbelief. \"How am I going to look at him next time I see him? And Abby. What about his dear, sweet Abby? What's happened to our nice little family?\"\n\n\"Wendy, I'm pretty sure Richie's involved in things we don't know about. I have a feeling Abby knows all about Barb, and If I had to guess I'd say Kelsey's in on things, too. I'm pretty sure you and Barb experimenting a little isn't going to bother those kids.\"\n\n\"How do you know all that?\" Wendy asked.\n\n\"I don't. But it's an easy conclusion to come to. Maybe it's just my horny mind playing tricks on me.\"\n\n\"No, you're right,\" Wendy said. She sat down and told Matt what she didn't think she'd tell him. \"They're all fucking, Matt, and I just don't know what to think about it. It's like a fucking Roman orgy over there from what I've heard.\"\n\n\"No way! So...all the girls at the house, you mean? And Abby, and Barb?\"\n\n\"Should we have a talk with Richie?\" Wendy asked, looking worried. \"He's only eighteen, and...I mean there's older women involved...\"\n\n\"Who else?\" Matt asked, wide-eyed and curious.\n\n\"Oh fuck!\" Wendy said. \"Why are you dragging all of this out of me? It was going to be hard enough telling you about the shower.\"\n\n\"What other women, Wendy? He's my son, too. If you know I should know.\"\n\n\"Oh, God. You gotta keep this quiet, okay. Promise you won't tell anyone? We don't want a scandal involving Richie.\"\n\n\"No, yeah, absolutely.\"\n\nKelsey's mother, and her father, and...there's others. Did you ever hear anything about swingers living in this town?\n\n\"Oh my God, they're swingers? I remember them. What's their names?\"\n\n\"Kay and Bobby Jonston.\"\n\n\"Right!\" Matt said, his eyes glinting with a happy memory. \"She's the little redhead, right?\"\n\nWendy's head dropped into her hand again. \"Oh, God. Yes, the one with the big tits, blah blah blah. Can we not go there please? Our son's involved in immoral things. What should we do?\"\n\n\"Wendy, having fun sex isn't immoral. If we thought it was you wouldn't have those red marks on your wrists.\"\n\n\"Fuck! I feel like everything's going completely out of control.\"\n\n\"Take a deep breath, sweetheart. Everything's fine. I don't know about you, but I'm happier ever since you met Barb, and I think you are, too. Think about it that way. The glass is more than half full.\"\n\n\"Fucking optimists. I'll never understand people like you. So it's just okay? Your son's hanging out at orgies with fifty year-old women, and your wife just had sex in the gym locker room, and you're just okay with it all?\"\n\n\"Don't ask me to explain it, but yeah. As long as you don't tell me you're too tired to take care of this...\" \n\nMatt took Wendy's hand and let her feel the warm lump that was growing in his pants.\n\n\"I don't get it, but...maybe I shouldn't think so much. I'll warn you though, it took all my will power to keep from going home with Barb, to her bedroom. That woman is seductive as hell.\"\n\n\"Stand up, woman,\" Matt said. \"Drop those pants. Hands up against the wall...\"\n\n\"Matt! The windows!\"\n\n\"Do it!\" Matt said, with a forceful glint in his eye. \n\nWendy stood up and unzipped, wondering if Matt was going to spank her. He'd never done it before, but everything was confusing all of the sudden. Matt spun her around, arranged her hands on the wall above her head, and pulled down her pants.\n\n\"Matt! We're in the living room! The neighbors!\"\n\nMatt was silent. He dropped down on one knee, took off one of Wendy's sneakers, and slipped that leg out of her pants. Her panties came down and off that leg, too. \n\n\"Matt! Can you at least close the curtains?\"\n\nHe stood, pulled Wendy's hips toward him, pressed on her lower back to arch it and started fucking her. His cock was hard and long and ready, slipping in to her wetness with firm strokes. There was no messing around, no foreplay, no soft and gentle to get things started. They were fucking right off the bat, and Wendy was soon flying. It was as if Barb had primed her, in the most perfect of ways, and Matt was finishing the job with the skill of a journeyman. Wendy snapped off a quick orgasm, just from the thrill of it all, but the big one \u2014 the money shot \u2014 just built, and built, and built. With Matt's cock warming her insides with glorious friction, Wendy wondered if anyone was watching from the street. Could Koop see, from his house? She was pretty sure he could. That really fueled her fire, because she was pretty sure he was involved in the orgies in one way or another.\n\n\"Oh, God, Wendy!\" Matt said, gasping as his body slapped against his sexy wife. He watched her buttocks jiggle with each thudding blow. \"Are you squeezing me? God, you feel tight!\"\n\nWendy wasn't able to answer. Too far gone. But she loved the news. Still a good lay, she thought to herself, right before her fuse burned down and the sparklers started going off in her brain.\n\n\u2014\n\nWendy's phone rang when she was at the supermarket.\n\n\"Hi Wenn, how are ya?\" Barb said. \n\n\"Good, Barb. Just shopping.\"\n\n\"I just wanted to check in, to, you know, make sure I didn't fuck everything up yesterday.\"\n\n\"Oh. You're sweet,\" Wendy said. \"No, everything's good. I...had fun.\"\n\nBarb was relived and loved hearing Wendy's smile through the phone.\n\n\"What'd you tell Matt? Anything?\"\n\n\"Way more than I thought. I short of blurted everything out \u2014 about Kay and Bobbie, and what goes on at Kelsey's house. I know I shouldn't have. He promised me he wouldn't tell anyone. Kay'd probably have a fit if she knew I told anyone.\"\n\n\"No, that's okay,\" Barb said. \"Just threaten to cut off his nuts if he blabs. Really though, I got the feeling maybe Kay wants you guys in on things. Did you mention that to Matt?\"\n\n\"No! Oh my God, no! We could never...you mean...be swingers?\"\n\nBarb laughed. \"Just keep it in mind. You guys don't have to jump right into anything.\"\n\n\"We're not going to!\" Wendy said, working her way slowly down the pasta isle. \"So what's it like?\"\n\n\"What part of it? The parties, you mean?\"\n\n\"Yeah. That's what I was thinking, but...what else is there?\"\n\n\"You really should talk to someone with more experience than me. I'm just hanging on for dear life, bouncing from one wild experience to another. Being with you yesterday, that's...what it's like. Exciting. Daring. A little scary. I think back to a year ago and how boring my life was. It's just the opposite now.\"\n\n\"So how often do they have the parties? Are they always at Kay's?\"\n\n\"They've had a bunch since Kelsey got home from college last summer. Where are you?\"\n\n\"Gettin' groceries. There's a cute guy heading my way.\"\n\nBarb laughed. \n\n\"So, it's just the parties, then?\" Wendy asked. \"I mean, not that that's not enough.\"\n\n\"God, you're gonna think I'm a total slut,\" Barb said. \"You want the whole rundown?\"\n\n\"Jesus that guys got a cute ass!\" Wendy said quietly. \"And he's like fifty!\"\n\n\"Girlfriend, I could tell you stories about older guys,\" Barb said.\n\n\"Of course I want the whole rundown. Give it up.\"\n\n'Oh, God,\" Barb said. \"Wouldn't you rather talk about this in person?\"\n\n\"Nope. You got me all wound up now. Give it to me in the produce section.\"\n\n\"I hooked up with one of the couples and we do threeways at their house. There's like some magical chemistry between us. It's totally awesome. We can't seem to get enough.\"\n\n\"Let me guess \u2014 Rick and Donna Welch.\"\n\n\"No comment,\" Barb said. She wondered if Wendy could tell she was smiling.\n\n\"God, I'm becoming more and more jealous of your life. I hope this isn't dangerous for me.\"\n\n\"I'll tell you what makes it work for all the couples,\" Barb said. \"Total and complete honesty.\"\n\n\"Yeah, I figured that. Uh oh, cute ass guy is heading this way. Do you think he's looking for some melons?\" Wendy said. \"So, wild parties, threeways, what else?\"\n\n\"Well, you know how Kay told you about Kelsey bringing the younger generation in? She brought in a couple of older single guys, too. One of them already hooked up with a friend of Kay's, but the other one is often at loose ends, shall we say? He stops by my house once in a while.\"\n\n\"If you tell me it's Koop Kooper I'm gonna have to jump this guy and do him right here in the tomato section.\"\n\n\"No...comment?\"\n\n\"Oh, Jesus,\" Wendy said. \"I'm literally sitting down on the edge of the vegetable display. You're killin' me Barb! Rick Welch and Koop, both just too sexy for words. My freakin'son, you fucker, who's adorable. Kay's husband, who I sort of remember as being super hot...you're literally killin' me, Barb.\"\n\n\"I'm sorry, Wenn. If we'd talked about all this in person I coulda made you feel better. But what you need to do is turn it all around in your head. Stop thinking about me doing all that, and think about you doing it. You know how guys are. I bet you could talk Matt into it easily. I could help if you want.\"\n\n\"You could help? No offense Barb, but I'm just not sure I'm ready to share my husband at an orgy. I feel like this is getting way out of control,\" Wendy said. \"Oh shit. Cute Ass just smiled at me. I think he heard something. God, you are just gettin' me in trouble every which-way, aren't you. I'm startin' to feel it, though. My life's definitely not boring anymore.\"\n\n\u2014\n\nWhen Wendy got home she put away her groceries and went to her dresser drawer. There, down under her undies, was the eight-by-ten photo of the naked aftermath of whatever had happened at Koop's shop. Richie and Happy and the girls seemed to fade away into a blur as Wendy looked it over, leaving Koop crisp and clear in her mind, wearing nothing but his open work shirt and a thin coat of shiny, dirty grease.\n\n\"Good Lord,\" she said quietly to herself as her eyes drank in the reddish hue of his plump cock. \"They were absolutely fucking,\" she said, glancing at all the quietly blissful faces. She held the photo closer to her face and let out a quick breath when she saw the subtle shine on Koop's cock, and the way it hung so perfectly between his dirty legs.\n\nShe was wishing he was home and it was trash day so she could walk across the street and talk to him, but she didn't know what she would say. \"I hear you're you a swinger now. How's that going?\" or some such ridiculous sounding thing. \"Have you fucked my friend Barb lately?\"\n\nHer phone rang and it was Barb, calling from work again.\n\n\"Saved by the bell,\" Wendy said as she tucked the photo away in her drawer.\n\n\"What's that mean?\" Barb asked. \n\n\"Oh, nothing. What's up?\"\n\n\"I just talked to Kay. Since you have permission from your hubby to do, like, girl stuff, I thought maybe we could have a little get together. Just the girls. Kay's really excited about it.\"\n\n\"You mean...a sex party?!\"\n\n\"Ha!\" Barb laughed. \"Yes. A sex party. No men. Just you and me and Kay, and Kelsey and the girls. Just six of us would be a fun start for you.\"\n\n\"Just six! Shit, Barb!\"\n\n\"Just think about it. She already checked with the girls and we're all free Saturday. Day or night, your choice. Day might be fun, with all the sun comin' in those old windows. It'd be like one of those romance novels.\"\n\n\"So Kelsey and the girls know...about me?\"\n\n\"Don't worry. She told them not to tell Richie. It'll be just Kelsey, Brie and Charity. We thought having Abby there might be too uncomfortable for you, until you get used to things.\"\n\n\"Well...thank you, but...no, I can't possibly do that.\"\n\n\"What if you ask Matt? If it's all copacetic with him you'll do it, right?\"\n\n\"Barb, you're crazy. You're literally insane. Orgasms have killed your brain.\"\n\n\"Oh, Wendy, but what a way to go, huh? Come on, you know you want to. Give Matt the benefit of the doubt and see what he says. Oops, I've got a patient. Gotta go, Honey. Bye...\"\n\nWendy hung up the phone, but she didn't let go of it. She looked at it like it was some sort of alien communicator and the Queen of the Sex Planet had just whispered a hypnotic command through it...\"Come with us...come with us...come with us...\"\n\nWendy thought about how magical Barb's touch had felt in the shower at the gym, and how meltingly beautiful the orgasms were. Sex with Matt was better than ever, though, and she didn't want to derail that, or worse, derail her marriage. There hadn't been to many conundrums in Wendy's quiet life in the last decade or so, but she was solidly in the middle of one.\n\nThat evening, after a dinner of strip steaks and boiled new potatoes washed down with wine, Wendy fucked Matt on the living room couch.\n\n\"I like the new you,\" he said, his voice soft and breathy as he watched Wendy rise and fall on him.\n\n\"A girl could take offense at that,\" Wendy said, smiling coyly. \"Was something wrong with the old me?\"\n\n\"Not a thing,\" Matt smiled. \"But I like the new you even better.\"\n\nWendy smiled. Matt's hips started moving faster, urging Wendy to pick up the pace.\n\n\"Oh, yeah baby,\" she said. \"That feels nice.\"\n\nShe looked back at Matt's pants, rumpled up below his knees, and smiled at how easy it was to get him interested. Just pull down his pants, pull up your skirt and hop on. Were all men so easy? Could she walk across the street and do the same to Koop? Could she walk into Barb's house, pull down her pants and lick her pussy, just like that?\n\n\"Shit, baby, I'm cumming!\" Matt said, his voice strained but forthright. \"I'm cumming!\"\n\nWendy let his pulsing cock relax and lifted herself off, pulling up her panties quickly to contain the messy ooze. She dropped to her knees between Matt's legs and cleaned up all his stickiness with her mouth.\n\n\"Have you been thinking about me and Barb?\" Wendy asked, still licking gently at the scene of the crime.\n\n\"Sure. What guy wouldn't? Does it bother you?\"\n\n\"Bother me?\"\n\n\"Yeah. You and Barb, that's...you and...Barb.\"\n\n\"You know...it doesn't bother me a bit,\" Wendy said. \"I think about her, too.\"\n\nMatt smiled warmly. \"Yeah? Tell me.\" His cock started to grow again in Wendy's hand as her tongue tickled his balls.\n\n\"She's just so sexy. She...she took me to meet Kay Jonston. For lunch. Kay had us to her nice house.\"\n\n\"She had you?\" Matt smiled.\n\n\"No! For lunch! God, Matt! You wouldn't have been...okay with that would you?\"\n\n\"Hey, I happen to remember what Kay Jonston looks like. And I'm very up to date on what Barb looks like. If you enjoyed being with Barb I just assumed you'd probably enjoy Kay, too. So what did you guys talk about?\"\n\n\"The kids. Girl stuff.\"\n\n\"Okay. That sounds nice. Should I have lunch with her husband sometime? His name's Bobby, right? If Richie's involved over there, maybe we should know what's going on. Or did you cover all that?\"\n\n\"Yeah, we did. You shouldn't...I mean, you don't want to, do you?\"\n\n\"Talk to Bobby Jonston? I don't know. It'd be a little awkward I'm sure. Unless you want to be a swinger.\"\n\n\"Me?\" Wendy said. She looked surprised, but it was a look Matt hadn't seen before. She was still nestled between his legs, with his mostly hard cock in her hand, but her body language changed suddenly. \"It's crazy, isn't it? Swinging?\"\n\n\"Most people think so, I guess. So just how involved is Barb?\"\n\n\"Very,\" Wendy said. \"She called me, said Kay invited me to a girls thing. Just women, but, I know it's like a sex party. It's just crazy. I never knew those kinds of things went on.\"\n\n\"They invited you?\" Matt said, smiling, his eyes widening with intrigue. \"Do you want to go?\"\n\n\"Matt! I couldn't! I shouldn't! I'm your wife!\"\n\n\"Hey, I said it before, if you wanna have fun with your girlfriends I find it nothing but hot, so...\"\n\n\"I can tell! Jesus you're hard!\" Wendy said. She shook her head and smiled. \"What is it with men?\"\n\n\"It's one of life's great mysteries. Bend over the chair, baby,\" he said, taking his cock in his hand. \"Let's put this to good use.\"\n\nA few minutes into some solid fucking, Wendy was bent over with her back arched up, held that way by Matt's hand pulling her hair tight. His other hand held both her wrists tight on her back. She was his for the taking, and she loved it.\n\n\"Oh, God yeah!\" she moaned.\n\n\"You like the way I fuck you, baby? Hmm? You're gonna have to earn it next time. Will you earn it?\"",
        "\"Yes!\" Wendy huffed as Matt thudded into her rhythmically.\n\n\"Good. Go to the girls party with Barb. And tell me all about it when you get home. Everything. Every detail.\"\n\n\"Yes!...Yes!...I will! I'll tell you everything!\"\n\nWendy launched into a beautifully spastic orgasm. It was a release more powerful than she'd expected, but all the crazy sex talk and her experience with Barb had loosened up something inside her. She felt more sexual than she ever had, and the 'sweet mother of God' orgasm let Matt see it, too.\n\n\"Fuck, baby!\" he said as she writhed. He came deep inside her again, milked by Wendy's contractions to a mind expanding finish. They both knew their sex life was better than ever. Neither one wanted to stop the trajectory, but neither one knew quite where it was leading.\n\n\u2014\n\n\"You know, you and Richie look a lot alike,\" Charity said, drawing a quick kick from Kelsey.\n\nWendy smiled when she saw it. \"What was that for?\" she asked.\n\n\"I forgot. We're not supposed to talk about Richie tonight,\" Charity said.\n\n\"We can talk about anything,\" Wendy said, glancing at Barb. \"If I was worried about anything I wouldn't be here I guess.\"\n\nWendy had a sip of her wine and looked around at the girls. Kelsey, Charity and Brie, and Barb and Kay, all with wine glasses in their hands, and all without a stitch of clothing on. It was a strange, almost dreamlike sight. She glanced down at her own naked body, sitting in a chair the way she would at any party. That part didn't compute. \n\n\"Does he pull his weight at the house?\" Wendy asked. \"Doing dishes and cleaning?\"\n\n\"Oh, yeah!\" Kelsey said. \"Austin, too. You guys trained 'em good.\"\n\n\"Good,\" Wendy said. \"Well, he seems happy. I still don't know why he needed to move out, though. I guess a mother just has to get used to it.\"\n\n\"If you can't figure out why he wants to live with those three,\" Barb said, glancing at Kelsey, Brie and Charity, \"then you've got some kind of a problem.\"\n\nWendy blushed when she thought about what her boy was up to. Maybe it was best to not talk about him after all.\n\n\"So Wendy,\" Kelsey said, \"Barb said you're sorta new to the bi-sexual thing.\"\n\n\"Bi-sexual? Jesus, I never thought about it being that!\"\n\nBarb laughed. \"I know. Us old fogeys are amazed by such things.\"\n\n\"Girls did it when you were younger, though, right?\" Kelsey asked.\n\n\"Of course they did, Honey!\" Kay said. \"That's a silly thing to ask.\"\n\n\"No, I meant, like, friends of theirs.\"\n\n\"It may have been going on, but no one ever told me about it,\" Wendy said. \"I had a pretty sheltered life.\"\n\n\"So now you can bust out,\" Kelsey said. \"That's hot.\"\n\nWendy looked down at her naked body. \"It looks like I busted out already.\"\n\n\"You're beautiful, Wendy,\" Kay said. \"Your Matt's a lucky guy.\"\n\n\"You should see her when she wears her sexy workout clothes at the gym,\" Barb said. \"She's turnin' some heads.\" \n\n\"Do you know my Bobby?\" Kay asked Wendy. \"And Albert, and the others that go there?\"\n\n\"I did back in the middle of last year. I saw them a few times. But then I got on another schedule.\"\n\n\"She knows Rick and Donna,\" Barb said.\n\n\"Oh, they're lots of fun,\" Kay said. \"They were here for our Christmas open house this year.\"\n\n\"Oh my God,\" Kelsey said. \"Hang on tight when he get's a hold of you.\"\n\n\"He is energetic,\" Kay giggled. \"Wendy, I should mention, we sort of talked about this before, but now that you're part of our group, we all try to be discrete about everything when we're on the outside.\"\n\n\"Oh, yeah, absolutely,\" Wendy said. \"My lips are sealed.\"\n\n\"Not when Ricky's around,\" Kay giggled. \"He'll ram it right in there. Barb, Honey, are you still having fun with them?\"\n\n\"Oh, God yes!\" Barb said. \"They're both just...lots of fun.\"\n\n\"Rick fucked me in the ass on Christmas day,\" Charity said.\n\nWendy tried to stifle a giggle. She was embarrassed that her goofy noise was heard, but she couldn't help it. Charity's matter-of-fact statement was so far out of the norm it seemed absurd.\n\n\"There's not a man alive who wouldn't want to fuck that ass,\" Kelsey said. \"Did you get a good look at it, Wendy? I don't know about you guys, but I think it's the hottest thing in the world. Show her, Char.\"\n\nCharity smiled mischievously and repositioned herself on the couch, on her knees, with her ass facing Wendy. It was a porn-worthy pose.\n\nKelsey giggled. \"She didn't even like it when I first met her last summer, and now she loves showin' it off.\"\n\nWendy was speechless. The stunning pussy splitting the perfectly curved ass was unlike anything she'd ever seen.\n\n\"Isn't that fucking awesome?\" Kelsey asked. She smiled when she saw Wendy was dumbstruck. \"Come here, Wen,\" she said. \"Help me.\"\n\nKelsey slithered off the couch onto the rug. She inhaled Charity's scent and extended her tongue, using the tip of it to tickle the puffiness that made Charity's pussy so prominent.\n\n\"Go on, girlfriend,\" Barb said to Wendy. \"You're in the big time now.\"\n\n\"Brie, come and kiss Mama Kay's pussy, Honey,\" Kay said.\n\nWendy was still tongue-tied. She looked at Barb again, and Barb nodded, egging her on. It still wasn't enough, so Barb went to her, kissing her and landing her hand on Wendy's pussy at the same time. \n\nJust six feet away, Charity was huffing out giggles as Kelsey continued to tease her with tongue tickles.\n\n\"She's adorable, isn't she?\" Barb whispered in Wendy's ear. \"An elementary school teacher who went to Bible school. Tell me you don't want to make her cum.\" Barb had two fingers curled up inside Wendy's pussy. It was just the thing to switch her on. \"Come on,\" Barb said. \"Lets play with her.\"\n\nThe next thing Wendy knew, she had her face buried between Charity's ass cheeks, lapping her tongue hungrily through the steamy heat of the extraordinary pussy. Wendy was amazed at how different it was than Barb's. Definitely juicier, and different tasting, too, and a completely different shape. From the angle she was attacking it, it seemed almost animal.\n\nWendy got a little lost in things, listening to the quiet moans nearby as she lifted Charity higher. It was all so wonderful Wendy just rolled with it when she felt hands on her own hips, pulling them up into a more accessible position. A mouth was next, nuzzling itself between her as cheeks the way hers was between Charity's.\n\n\"Oh ffuuckk!\" she whispered into Charity's softest flesh. It's happening, she thought to herself. It's a real live orgy, and I'm in the middle of it!\n\nThe next sensation shocked her. A cock! Her head spun around to see, and there was Kelsey, with a smile on her face and a monstrous looking strap-on attached to her hips, inching it in. Wendy was at the mercy of instinct at that point \u2014 she arched her back and spread her knees a little, welcoming the huge cock in.\n\n\"Fuck yeah!\" Kelsey said. \"You got a sweet pussy, Wendy. It's the kind that likes cocks, I can tell. Barb, look at how good that looks slidin' in there. Fuck...!\"\n\nPretty soon Wendy was flying as high as Charity. It was like an out of body experience, devouring the young teacher's pussy with devilish abandon while she rose to a high-flying orgasm on Kelsey's relentless fucking. Barb was right there at her side, caressing Wendy's tits as flew into the stratosphere, thrilled that her friend had taken the plunge. Wendy hadn't just jumped into the kiddie pool, it was an Olympic-worthy swan dive off an Acapulco cliff.\n\n\u2014\n\n\"Wow, that's an interesting look,\" Matt said when Wendy arrived home. \"Have fun?\"\n\nWendy shook her head at the smirk on his face. What the fuck do I tell this man, she asked herself? I promised to tell him everything. Okay, here goes...\n\n\"Fun? Let's see, six naked women, five of them porn worthy, all of them hornier than I knew was possible. Yeah, I had fun.\" Wendy smirked, too. She couldn't help it.\n\n\"Jesus!\" Matt said. \"Did you take video?\"\n\n\"No! You're...just gonna have to use your imagination.\"\n\n\"Oh, I'm using it,\" Matt said. \"Tell me. Start at the beginning.\"\n\nWendy exhaled loudly. Matt could tell she was excited but worried. \"Want some wine?\" he asked.\n\n\"God yes! Am I really about to tell you everything?\"\n\n\"You are,\" Matt said, scurrying off to the kitchen. He was back in a flash with two oversized glasses of fruity Beaujolais. \n\n\"This is a bit shocking, telling my husband about other women's bodies and...practices.\"\n\n\"Practices?\" Matt smiled. \"I was hoping for something a little less clinical.\"\n\nWendy took a big gulp of wine. \"You want less clinical? Charity's got a pussy on her designed by Michelangelo. I swear to God, Matt, it's the most amazing thing I've ever seen. Would you have guessed that?\"\n\n\"Well, yeah, she's got a killer ass. What's so amazing about it?\"\n\n\"Oh, Jesus, I don't know. I spent the whole night sort of obsessed with it. I'm warnin' ya, she sort of taught me \u2014 all of them did, really \u2014 how to let myself go more than I used to. I've never thought women had the kind of orgasms they do. They just let every fiber of their being resonate. It's so extraordinary. So beautiful. They taught me, and I sorta got there, too. Not quite like them, but...I think I might be a slut at heart.\"\n\nMatt smiled. \"That's my girl. Holy shit, I think I just fell in love with you all over again.\"\n\nWendy smiled sweetly. Her twinkly eyes were drinking in Matt's. All seemed right with the world.\n\n\"Describe each one of them to me,\" Matt said. \"Charity.\"\n\n\"A goddess's pussy. An ass that stops traffic. An innocent mind that's unbelievably dirty.\"\n\nMatt giggled. He loved how serious Wendy looked. \"Brie.\"\n\n\"Perfect proportions. You've seen her in jeans and a tight t-shirt, right? Eyes that hypnotized me. You know her cute little smile? She deep-throated this soft rubber dildo they have. The whole fuckin' thing. I swear to God it's ten inches long.\"\n\n\"Brie? Oh my God!\" Matt said, his eyes wide with delight. \"Fuck! All right, all right. Kelsey.\"\n\n\"You've seen her porn. You don't need me...\"\n\n\"Kelsey!\" he insisted.\n\n\"A body Michelangelo only dreamed of, when he had a hard-on after work,\" Wendy giggled. \"She could pull an orgasm out of a dead girl. She learned it from her mother.\"\n\n\"Kay.\"\n\n\"Hard to believe she's the same age as us. Maybe it's the freckles and the red hair that makes her look young. She never lost her youthful spirit. I've never met anyone like her. You'd think after walking around naked for forty years her tits would sag, but, I mean they're not quite Kelsey's, but good lord she's just stunning. Effervescent. She bubbles like a thousand dollar bottle of champagne.\"\n\n\"Barb.\"\n\n\"You dirty man. Look at how hard you are. Open your pants. You planned it this way, didn't you? You want me to suck you when I tell you about Barb.\"\n\nMatt's eyes twinkled. He was amazed at how freely Wendy was talking about everything. It was more than he expected, and ridiculously exciting. He opened his pants and eased out his hard cock.\n\n\"Dirty man,\" Wendy said. She had the devil in her eyes and let out a sweet, breathy moan when she filled her mouth with her husband's hard flesh.\n\n\"I fucked her,\" she said, nuzzling on the explosive looking tip. \"Kelsey put a strap-on on me and I fucked Barb. Just like a man would. I made her cum, Matt. I made her cum.\"\n\nMatt's cock throbbed in Wendy's hand as a creamy white spurt shot out of the tip. It landed in her hair, and another flew, landing on her arm.\n\n\"Fuck!\" Wendy sighed. She watched the rest of Matt's stuff ooze over her fingers, all warm and slippery. Barb had made it happen, and Kelsey had made Barb happen, and Kay had made Kelsey happen. Wendy had learned the whole, slutty family tree, and it was the best lesson of her life. Matt was glad he'd sent her to school. "
    ],
    "authorname": "riverboy",
    "tags": [
        "orgy",
        "swingers",
        "bisexual",
        "girl girl",
        "mother",
        "girlfriends",
        "husband wife",
        "learning",
        "gym"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/kelseys-world-ch-30"
}