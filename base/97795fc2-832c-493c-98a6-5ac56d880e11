{
    "title": "Davy's On The Road Again Ch. 14",
    "pages": [
        "\"Oh, freedom land, Can you let this go,<br> Down to the streets where the numbers grow, <br> Respect Mother Earth and her giving ways, <br> Or trade away our children's days, <br> Or trade away our children's days. <br>\n\nRespect Mother Earth and her giving ways, <br> Or trade away our children's days.\"\n\nYosemite. Say the words \"breathtaking\", \"spectacular\", \"cosmic\", or any descriptive adjective and you say nothing. It is something to experience, to absorb and to wallow into otherwise it is just pictures. Oh, but what pictures! Ordinarily, the mind goes to Ansel Adams and his monumental images. But not me. Do you remember your old Viewmaster, you know, the plastic binocular viewer with the wheels of tiny pictures. You clicked the side lever and the picture advanced in the viewer, right? We all had one. Among the reels of images was one of Yosemite. Those reels were pretty indestructible under normal usage and why mine didn't fall apart is a mystery of the ages because that one was my favorite. To me, it evoked the western wilderness of the nineteenth century, it was explorers, pioneers, adventurers and seekers - all people I yearned to be. Now, standing in Yosemite Valley and in the presence of El Capitan, I was inside the Viewmaster and I was hyperventilating.\n\nWe awoke at dawn and drove south to Route 140 into the High Sierras. As the park opened up to us, a silence pervaded Big Chocolate. Our final destination was Camp Curry where Amy had reserved their largest cabin weeks ago. And while it wasn't far up the road, it took us nearly all day to get there. It was impossible not to stop and walk around within sight of majestic Sequoias or Half Dome or Bridalveil Falls or the amazing Yosemite Falls or El Capitan. See what I mean? We intended to stop at The Ahwahnee for lunch and maybe a horseback tour but we never did make it, stopping instead for galley-made focaccia sandwiches under the Royal Arches.\n\nBy the time we reached the cabin, we were exhausted from the sheer volume of being dazed, or maybe it was the other way around. As the sun set and the clean air surrounded us, the stars emerged in a mystical light. We sat on porch rockers as the sounds of other campers drifted through the forest. Mark got out his violin and I my Martin and we began to improvise on all sorts of Americana themes, from country to cowboy and all sorts of sounds between. Unbeknownst to us, we attracted other campers who sat under the mighty trees. They quietly listened to our music. I only realized they were there when I saw the lit tips of cigarettes appear in little flashes. I understood that we were casting a spell and weaving magic in this holy place. Amy surprised me when she pulled out a harmonica and ably added another texture to the sound. As Santo lay stretched out beneath her feet, I closed my eyes and let my guitar express my feelings. We played for almost an hour before a Park Ranger arrived. He was very hospitable and he thanked us for our impromptu concert but asked that we end it as it was bedtime for humans but not for bears and other sorts of unwanted visitors. We stopped playing and listened as people drifted off. The Ranger asked for our autographs before he, too, walked into the night.\n\nOur cabin was homey and rustic. We stayed up for a while playing whist and getting a buzz before we snuggled into our cozy beds. Sometime in the night, we heard the calls of animals (perhaps coyotes?) and I had to settle Santo down. He decided to hop on the bed and sleep at our feet. In the morning, we rose early and had a good breakfast before hiking down toward the Misty Isles. First, we took the trail to the Ulilouette arriving at an amazing panoramic point which opened up the vast wilderness to us. As we were alone, I passed the peace pipe. Mark found a bear loping through a meadow in his binoculars. We then followed down along the river on the John Muir Trail to Vernal Falls, past rapids and boulder-strewn streams to Emerald Pool, Nevada Falls and Mirror Lake. By this time, we were pretty exhausted and were stopping more often to rest and have pleasant conversation with other hikers. Somehow we dragged ourselves all the way back to our cabin. I walked Santo, showered and collapsed for another good night's sleep. The others actually ate some dinner and stayed up but I was down for the count.\n\nThe next morning, we pulled up stakes and drove back west toward 49 North. We stopped for some chachkas and momentos in Yosemite Village and took some group pictures. Heading west through the park was nearly as exciting as driving in. Waterfalls, deep verdant valleys, grand meadows, ancient giant sequoias, all exposed this vast wilderness park as the marvel it truly is - a national treasure. We spoke about the place a lot and I noticed that since we arrived, we'd spoken in hushed tones so as not to invade the tranquility.\n\nI'd wanted to take Route 120 through the Sierras but the road was closed due to rockslides and rain damage. Given the high elevation of this road and the perils of driving it in our bus, it was just as well to travel a safer route further north to 108. Passing through little cowboy villages, you could almost imagine Conastoga Wagons passing by. Good God, this was beautiful land. We took the long drive into Sonora Pass through the mountains (and this was another spectacular passage) to Sonora Junction and Route 395 North. We passed into Nevada at Topaz Lake. Night was falling by the time we reached the Zephyr Cove RV Resort on the southeastern shore of Lake Tahoe but we made it just in time for the last moments of a glorious sunset. By the time we set up, the reflection of the moon upon the water had the makings of a very romantic night. We walked along the shore hand in hand and dog on leash. Several times, I had to stop and take Amy into my arms. Back in the bus, we settled into our beds and made some mad passion. Listening to Mark and Deb in their bed made for a very stimulating soundtrack.\n\nThe next morning was a disappointment. We had intended to take a touristy boat tour of the Lake but rain showers rolled in and a mist rose off the lake. Instead, we decided to keep heading north to Carson City, then to Reno and I-80. We considered stopping on the way to visit the Cartwright's Bonanza Ranch out side Virginia City but passed because we could always see them on nostalgia channel reruns. And anyway, they're all up on Boot Hill these days.\n\nMuch of this trip progressed slowly since the road was a route of steep inclines followed by riding the breaks down. South of Reno, we stopped to check out Indian ruins and to pick up the vibe. Reno, \"The Biggest Little City In The World\" seemed like a big honky-tonk. We liked Sparks better because it looked more Victorian and and like the set of a TV western.\n\nWe talked about stopping a casino for a very short break and while no one was really wild for the idea, I remembered my previous luck and agreed, Aw, what the hell. What the fuck, it's only a buck, right? We decided to walk in the $100 each and see what happens. After walking Santo and stretching my legs, I joined the others inside. Mark had won $75 and he was done. Amy and Deb pooled their money and were playing different games and they were losing. Finally, they decided to kill their last few bucks at Roulette. This was a good choice. After four spins, they were up about $300 and chose to quit. Walking past the Big Six Wheel, they put twenty dollars down and won another $400 just like that.\n\nNow it was my turn so I did what I usually do to see where I might be sitting on the bell curve at that moment. I hit three Blackjack tables in a row losing at each. At the fourth table, I won back my losses. I figured I was on a twenty-five percent roll so I decided to push one more time. I won two hands in a row and folded. I was $40 ahead and we could all walk out winners. So we did.\n\nAs soon as we got into the bus, I asked if anyone would write something down for me. As we tolled back onto I-80 I recited:\n\n\"The earth quakes when they walk through the door, <br> Dealers shake when they strut cross the floor. <br> Johns ache because they know the score, <br> Tell the tellers to start counting the greens and make way for the Casino Queens, <br> Stay out of the way of the Casino Queens.\"\n\n\"That's all I got!\" Light applause followed and the ladies went to work on it. Mark said that he had something rolling around his head, too. He pulled out my guitar and started to play a rolling lick that ran in time to the engine and the wheels of the bus. When he had it going in a progression, he began to sing the words of \"Big Chocolate\" And it worked. It worked great. Soon we were singing along and I knew we had a good one, one that would just freak out Begley. We went on like this for a while. The girls soon tired of leafing through the Rhyming Dictionary and put their notebook down.\n\nI was driving steady under dramatically cloudy skies. I-80 was cowboy country. We sang \"Wild Horses\" and \"Mustang Sally\" playing a contest of who could come up with the next song in the series. Poor Deb, she can't sing a lick. She has absolutely no musical talent al all except exquisite taste and intelligent ears. But she did come up with some good songs like \"Chestnut Mare\", \"Cowgirl In The Sand\" and \"I Want A Horse\" although she did get booed for \"A Horse With No Name.\" Amy pulled out \"Which Way Does That Old Pony Run\" and \"Dig A Pony.\" Mark came through with \"Ride Your Pony and \"Space Cowboy.\" We all agreed that it was a better car game than License Bingo.\n\nThe Nevada desert was bare and lifeless. Boring, too. It was nice and flat though and I was making great mileage. With a few stops for fuel, dog walks and stretches, it was just a haul, even snow-capped mountains began to seem ordinary. Things turned green around Lovelock but it was short-lived. I drove and drove. Amy had selected a couple of RV parks near Elko but after checking them out we moved on. One was a dustbowl, one didn't have a big enough pull-in for us and one was just a dump. We drove on deciding to head into Idaho rather that head toward the Bonneville Salt Flats and Salt Lake City. Route 93 was a more scenic route anyway. We finally ended up at a KOA near Twin Falls and I was punchy. Fortunately, the camp was relatively deserted and we found a large pull-through, working hook-ups and good wi-fi.\n\nAs we settled in for dinner in our screened patio, George called to tell us he'd meet us at Yellowstone in two days. Immediately after, Annie called and said that she'd be there also in two days. We told them both that we'd be parking the RV at the Wagon Wheel in West Yellowstone, Montana and they agreed to meet us there. From there, we would all enter the park together. We'd made two RV reservations at Fishing Bridge. Amy had also thought ahead to purchase full passes for all National Parks. Annie said that she'd already cleared all the permissions for photographs within the park wherever we wanted to set up. It looked as though our preparation for Yellowstone was complete. We now had two full days to wander through Idaho and Montana.\n\nIt was a cool and quiet evening. Halfway through dinner, we decided to move back into the bus as the evening chill intensified. Maybe it wasn't that cold but we'd become used to warmer climes. I turned up the heat and in a few minutes, as the floor heated up, the rest of the bus followed. Santo really liked that floor; he was rolled up in a ball snuggling his 'nice blanket.' We'd been dressed in our UC Berkeley sweats but we slowly began to remove layers. Maybe it was the good Rutherford Ranch wine we were going that raised our body heat. We were smoking some of Larry's weed which was mighty snappy and we were feeling no pain. Still, it was pretty warm in there.\n\n\"Ok, I have something important to announce. It's very important!\"\n\n\"Ok, Davy, we all ears.\"\n\n\"What I have to say is that my balls are itching me. Been like that all day.\"\n\n\"Oh, I understand. The short and curlies are returning. Well, we'll have to take care of this immediately. spread 'em!\"\n\nI dropped my sweats and sat back on the recliner. Amy put a towel under me and then poured Eucerin all over me. Mark and Deb just sat and watched as she lathered my balls with the lotion.\n\n\"Does that feel any better?\"\n\n\"Yes and no. Yes, my balls feel better and don't itch. But now, what I do with this woody?\"\n\nAmy stroked my greasy cock while she rubbed more lotion onto my balls and ass. Several times, her index finger popped into me and that made me feel even better. She slowly stroked me until I began to flex and then her speed picked up. She was working me with one hand in a ring around my shaft and the other pulling at my crown. Her fingers tightened until I could hold out no longer. The rocket was about to launch and the countdown was nearing its climax. She opened her mouth a few inches from the crown and I started shooting ropes which spattered her face. The second and third ropes made it into her mouth and she licked her lips. I was done. Happy but done...at least for a few minutes.\n\n\"Mark, you're next!\"\n\nDeb placed a towel under Mark's butt and proceeded to lotion him up and jerk him off. She squeezed his dick which not only slowed him down but also increased the size of his crown, now fat and bulbous and about to launch itself. Mark began to shoot onto Deb's face. Instead of swallowing any of it, she enjoyed the facial.\n\nWe bantered for a while until we wearily passed out. In the morning, we awoke a bit startled as Mark was sprawled out on the couch and I was in the recliner The girls were asleep in the bedroom. I walked Santo, made coffee and took my shower before Mark. We let the girls snore away. They didn't awaken until we were already on the road heading east along I-84. I stopped to fuel up and commented to the station attendant that Idaho was strange country. He said that Craters of the Moon Park was the strangest place in all of Idaho let alone the rest of the country. Back on the road, I checked the GPS and asked Amy to make reservations for the night near Arco. When I saw the turn-off for Craters of the Moon National Park, I turned in.\n\nWhile we'd all heard of this place, we were not prepared for the adventure ahead. This place turned out to be one of our most memorable stops. A huge dry basalt plain off the Snake River, the terrain and the environment was eerie and weird, like really being on another planet or maybe even the moon. Amy read to us that the Astronauts make trips here during their training and that NASA tests space rovers on the dry sandy hills and flatlands. After lunch, we took a hike into the craters. It was a lonely and desolate place. With a warm wind blowing under a clear and cloudless sky coupled with the utter silence, we were on some distant planet. I reminded everyone of the Twilight Zone episode entitled \"I Shot An Arrow\" and how similar it felt.\n\nThe park was hardly busy but we saw some hikers off in distance places. We saw little animals scamper into holes. We finally took a break on the rim of a crater where there was a small lookout pavilion. We broke out our water and were discussing how out of body and disoriented we all felt when a pair of hikers came up the ridge. They, too, seemed a little disjointed and we had a strange kind of stoned conversation with them. It turned out that they were long-time RV travelers who had ventured up from Salt Lake City deep into Montana and were now heading back. Alan was a stock broker and Anna was a hospital administrator, both in their late thirties and into their second and third marriages. They both looked a little too hip for Salt Lake City and sure enough, when he pulled out a joint, we all became better friends.\n\nAlan kept looking at me strangely and finally blurted out, \"I know you but I can't place you. You're what's-his-name...\"\n\n\"Yeah, you right! That's me!\"\n\n\"No...I mean you're a singer...Danny...Davy...\"\n\nI introduced myself and his eyes opened wide. He apologized to me and I told him it was quite okay. After we introduced ourselves around, he recognized Mark, too. We all spent the next couple of hours stoned, laughing together on the moon and having a great time with these people. We came across a small group of building and tents surrounded by barbed wire with a \"Keep Out - Area Under Armed Guard - Federal Property\" sign and we wondered what kind of 'Area 51' stuff went on inside. At half past three, we headed back to our RVs as the park was soon to close. Their RV was a small affair similar to the rental I'd first started out in. They simply freaked out when they saw ours. They asked where we were spending the night and it turned out that they would be at the same place, Mountain View, in Arco. We chose to meet there and make a pot luck dinner. As I drove out of the park, the wackiness of driving Big Chocolate across the moon was apparent. Arco's sudden greenery only made the feeling more peculiar.\n\nThe RV camp was empty. Our RVs were the only ones in the area where they provided 50amp hook-ups. Toward the other end of the camp, about 150 yards away, were a bunch of smaller camper/tent combos and, except for a couple of Coleman lamps lit within them, it was a pretty dark, quiet space and we were all alone. The evening chill wasn't bad under our screened porch. Alan brought over their outdoor firepit and it heated the space well. Amy and Deb prepared veal parmesan and broccoli. Anna made Pasta and Vegetables. With flowing wine and warm garlic baguettes, it was a tasty dinner. They were a very loose and open couple. They were also warm and funny. We got along very well. They couldn't believe all the amenities we had and they were both fascinated by the green aspects of the bus. It was a subject they had been discussing for weeks; how to make the RV trips more eco-friendly. As the sun set, we took turns climbing the ladder to the terrace. Not surprisingly, the sunset across this odd land made for an interesting vista.\n\nAnna was fascinated by the fact that we had a portable hot tub so after dinner, a clearly whacked out bunch set it up. It was an easy job since the inflation valves had compressed air tanks attached. I took the water hook-up and filled the tub while we drank some more vino with our dessert of ice cream and angel-food cake. When the tub was about half-filled, I followed the instructions and added some chemicals and then turned on the small heater. It didn't seem too long before it was filled and the water was at 102 degrees raising a mist into the air. I turned on the jet switch and with a low hum, the tub began to flow and bubble.\n\n\"Let's put on our suits,\" said Anna pulling Alan to their camper.\n\n\"Um...how do you feel about no suits,\" asked Amy, \"we prefer it that way.\"\n\n\"Great, me too,\" Anna said happily, \"I wasn't sure where you all were coming from. What's the point of bathing suits in a hot tub! We'll just get our robes and some towels.\"\n\nWhen they returned, we were just getting into the tub which was just big enough for six to sit on the built-in seats with the water just up to our chests. Anna dropped her robe and hopped in. Her slim body was cute with small breasts and pert nipples. You could describe her athletic body as boyish except for her lightly tufted vagina. Her legs were nice and long. Alan was also in runner's shape with a well-defined hairless chest. His cock was very long and thin and I guessed about nine inches. \n\nDeb, whose nipples floated on the water, broke the ice. \"Alan, your cock looks a lot like my favorite vibrator.\"\n\n\"Thanks, Deb. I modeled for it. And your body looks like my favorite inflatable doll.\"\n\n\"You mean, our favorite inflatable doll. Don't you, dear.\"\n\nBetween laughter and innuendo, we learned that they first met at a group sex party thrown by mutual friends. From what they were telling us, it seemed like Salt Lake City had a lot of group sex parties.",
        "\"My partner and I were in the midst of a fight and we weren't having a good time. It was our first time going to this kind of party and we thought it would help us both. But it didn't. She went off to another room and I found myself with Alan, who couldn't stop staring at me. The woman who brought him to the party was into the group scene and it was Alan's first time; she left him alone so she could join an orgy in another room. We left a little while later and went to his place. We haven't been apart since.\"\n\n\"Have you had any group scenes since?\" asked Deb.\n\n\"Yes, a couple of times. We had threesomes with a few women...and we talk a lot about our fantasies. And what about you four? It must get pretty close in that bus.\"\n\n\"Actually, there's lots of room. It's really very well designed,\" said Amy, \"but as long as you asked, we're all bisexual and we have lots of fun together. This is our first vacation together and we're on our way to Yellowstone for some business and pleasure.\"\n\nThe hot tub was soothing and we melted into the warm bubbling water, our bodies closely attached. We were all playful with each other as feet found their way into laps and crotches. I wondered whose toes were playing with my balls. As there was so much subtle movement, it could have been anyone's and might have been, at different times, everyone's. Mark was the first to get up and out of the tub.\n\n\"Ooh,\" squealed Anna, \"your balls are shaved. That looks so cool.\"\n\n\"Yes, and so are Davy's. As I said, we have lots of fun together.\"\n\n\"Can I see?\"\n\nMark approached her and I got up and stood next to him. She reached out and felt them saying how nice they felt. She leaned over and whispered something into Alan's ear. He slowly lifted his hands to our balls and felt them. Anna smiled at him.\n\n\"Alan has some bisexual fantasies. I've been encouraging him to indulge but so far we haven't done anything...I mean with another man, just with my vibrator. Maybe tonight's the night.\" She looked at him and smiled again.\n\n\"Ahem...I think maybe we should take this inside. What do you all say?\"\n\nI knew they would all agree and after they all toweled off in the cool night air and put on their robes, I let the water drain from the tub. The tub, by the way, came with a hose to drain the chemical-treated water into the waste tank. Nice feature.\n\nI entered the bus and poured a glass of wine. Alan handed me a joint. Amy had just finished the tour and asked everyone to join her in the bedroom.\n\n\"I need an orgasm. Who wants me?\"\n\nAmy sat down on the bed and tilted the top up a little. She spread her legs apart and Anna dove right in. The rest of us crawled around her and kissed, sucked and played with different parts. The six of us moved around the bed randomly touching and feeling each other. Deb began to laugh and scurried out to her bed and suitcase. We were curious to see what was so funny. She returned with her glass dildo and holding it in one hand and holding Alan's dick in the other, she was right. They did look alike. We all cracked up. I lit another joint and sipped my wine as I watched them get into it again. Meanwhile I got hard from watching this hot scene.\n\nAnna lifted her face from Deb's puss and looked at Alan. \"Come on, honey, now's your chance.\"\n\nShe held Mark's cock in front of his face. He stared at it. \"I've never been this close to another cock before.\" She took his hand and placed it on Mark's testicles. We all watched him as he felt them and then moved up his cock to slowly stroke it. Anna whispered encouraging words to him and he move closer. His tongue snaked out and licked the head. Mark's cock bounced at the tentative lick. Alan seemed intrigued with his first taste and very slowly took it into his mouth. Anna leaned down and whispered more and kissed him. She reached in and held Mark's cock at the base and fed it to Alan. Alan seemed to take to it like a duck to water and he became more demonstrative. Mark groaned his approval as we sat and watched, absorbed by the scene before us.\n\n\"Will you take his come?\" whispered Anna, \"Will you do that for me? Will you share his cum with me?\" Alan pulled away from Mark and shared some tongue with his wife. \"I can taste him.\"\n\nI'd set the mood lighting into a soft red and it made it gave us a faint glow of badness, like a classic New Orleans bordello. I set the music to The Rolling Stones to add a touch of hedonism. I got up from the bed to make it a touch louder and when I returned, Amy and Deb had made a space for me between them. I made a quick short stop before getting between them in that as I passed Anna's upturned ass, I stuck my tongue between her cheeks and lapped her ass.\n\n\"Oh, Cherry, oh Cherry, oh baby, <br> Doncha know I'm in need of thee, <br> You don't believe it true, <br> Why don't you love me, too, <br> It's so long I been waiting, <br> For you to come right in, <br> Now that we are together, <br> Is make my joy run over.\"\n\n\"Alan, Davy is rimming my ass right now.\" Alan was now enjoying his first cock and could only moan at the news.\n\nI got between the girls and they rolled onto my sides, humping their snatches against my legs. The three of us got into a three-way kiss, more like a face fuck as they devoured me. Their hands stroked my cock as I put my arms around them. Feeling their dampness as they rode my thighs made me throb very quickly as the room filled with the scent of pussy. Amy and Debby leaned away from me and began to kiss each other as I rubbed their backs.\n\nMark moved Alan onto the bed so he could lie back, His head was between my legs and in a great position to lick some pussy as Amy shifted over to him. \"Hey, make some room for me,\" said Anna as she pulled him lower on the bed and sat down on his face so she could watch Alan. Leaning forward, she was getting a close up look as well as holding Mark's stem.\n\n\"I'm going to cum soon, Alan, so get ready.\" Alan increased his sucking on Mark's crown while he pumped the stem. \"Oh, shit. Here it comes. Here it comes. Yeah, man. Drink my cum.\" His cock erupted in the rising cum that flowed into Alan's mouth. Alan was keen on swallowing it all but Anna pulled him up to get Mark's final spurt. She then frenched Alan and cum passed between them.\n\nAs we had stopped our lovemaking to watch, we broke into applause. Alan smiled and remarked, \"That was cool. Your cock felt good in my mouth and I liked the power of making you cum...of giving you pleasure. Now I see why sucking cock is so good...from the other end.\"\n\nWe sat around and shared some wine and some pot. Hands caressed body parts and wandered aimlessly. Amy suggested that Alan deserved a treat so she and Deb scooted onto him. Amy lay on her back as he penetrated her while Deb licked his stem and Amy's clit. His eyes closed and he was in heaven. Mark went to work - if you can call it that - on his wife's damp honeypot.\n\nI turned Anna onto her knees and leaning into her ass, began to lick it down to her taint. I got up behind her and pushed my hardness into her butt. At first, she seemed to fight me but soon I felt her loosen up and accept me. As her ring relaxed, I slid in and made easy strokes. Her pussy was close to Amy's head and I pushed her closer so Amy could have a taste. Amy's hand reached up and caressed my balls as Anna leaned onto her gifted mouth.\n\nThe bed was shaking with all the movement going on and the shaking only increased as the intensity rose. I reached around and played with Anna's nipples while she thrust back against my cock. I knew that this would end soon with my cum in her bowels. Alan beat me to it as he began to moan and push himself into Amy. \"I can't...I'm going to...aaaaaahhhhh.\" He humped her as he emptied his balls and then quickly slipped out with a pop. Anna immediately leaned down and proceed to drink his cum from Amy. They were in a hot sixty-nine with me up Anna's ass. Mark watched with his eyes popping out as I drove my cock into her. I couldn't hold out any longer and began to pump my cum into her. She was loving this as she arched up and pushed back against me. Deb gave out a squeal as she came soaking Mark's face. It squirted onto him and dripped down his grinning face.\n\nMy soft cock slipped out and I took that moment to take a leak. While I was peeing, I could hear Amy and Anna in the throes of orgasm. Anna was apparently doing a great job because I heard Amy's guttural, deep down growl followed by those great hiccups. I walked back in to watch Deb's fingers diddling Anna and she followed with shouts, giggles and a few high-pitched piercing yells...talk about being vocal! This woman let it all out and then proceeded to collapse atop Amy.\n\n\"Gee,\" I observed, \"This place look like a tornado hit it...and it smells like the cheerleader's locker room after the big game, too! Did everyone have a good time?\"\n\n\"When did you become the emcee?\" smiled Amy.\n\n\"Yeah, Mr. Big Shot, the last I knew you were a performer!\" said Deb.\n\n\"Ouch!\" added Mark, \"Sounds to me like a 'gotcha'!\"\n\nI raised my arms and shrugged. \"Ok, ok. I get no respect.\" I lit a jay.\n\n\"Well I think that was great,\" said Anna. \"Alan got some cock and I got a little of it,too. I got some 'gina, Davy nailed my ass, Amy got my puss and Deb got a piece of it, too. Mark filled Alan and there we go.\"\n\n\"Are we done already,\" asked Alan.\n\n\"No, baby. We're done here but we're not done. I want to go back to our bed, fuck you silly and then pass out. Does that work for you?\"\n\n\"It certainly does.\" Alan rose from the bed and headed for the john. Soon, their robed bodies were down the steps. \"If our RV's a-rockin', come a-knockin!\" We wished them well.\n\nAmy and Deb made a little snack of cheese and crackers as we sat around in a mellow, post-orgasmic glow. Agreeing that it was great fun, we settled in to watch some TV. Fortunately, we found some old Twilight Zones, the half-hour ones, on a nostalgia channel. It was the classic Burgess Meredith episode, \"All The Time In The World\".\n\nIn the morning, Anna and Alan stopped by for kisses and thanks before they pulled out towards Utah. We had a day to ramble around. After walking Santo, packing away the hot tub and cleaning up the bus, we looked over the map. We chose not to take the more direct route which would take us around the nuclear testing area. Instead, we'd head north on 33 to 22 to Dubois, under I-15 and then north on 22 to 20 ending up in West Yellowstone in the evening. Idaho was dreary country until we got up to Targhee National Forest. Here, the terrain became more colorful and dramatic. The hills had a reddish tinge and seemed more towering. Against the green of the trees, it was a fascinating sight, if not beautiful. We stopped to take some pictures of a box canyon in Harriman State Park and had a little lunch. Santo liked it here, or at least I think he did after marking the place about twenty times. Along the Montana border, the terrain changed dramatically again. Suddenly, we were in 'Big Sky Country', 'Marlboro Country', cowboy country. We stopped to take in Henry's Lake and to admire the snow-capped peaks off in the distance. The lake shimmered in the late afternoon sun. We watched a couple of fishermen unload their catch and some of those fish were huge. We crossed the border into Montana and headed for West Yellowstone.\n\nAs I checked in, the manager seemed awestruck and stuttering. I asked her if she was alright.\n\n\"I can't believe I'm meeting you. I love your music. I'm Rosie. Your song, \"Rosie and Meadowlark\" was my wedding song.\" She was blushing. \"I have a pull-through next to Mr. Clooney, who arrived about a half-hour ago. Golly, he's so handsome. I can't believe what a day this has turned out to be! Now, if you will sign here...and could I take a picture with you, Mr. Harper?\"\n\n\"Certainly, Rosie. I'm honored that you liked my song enough to...\"\n\n\"Actually, I used it twice. My first husband skipped out on me not long after the wedding. When I married Wolf, I used it again. I just love that song. Now, if you'll just pull in and set up, I'll come over in a few minutes, if that's alright with you. Oh, and Ms. Liebovitz left a message for you.\"\n\nAnnie said that she'd be down in the morning driving in from her place near Bozeman. I pulled Big Chocolate into the space and we set about opening it up. George's RV was an over-the-cab rental with plenty of space between us. He and Sarah came over while we were setting up.\n\n\"Welcome, pilgrims.\" he greeted us. Amy and Sarah looked at each other for a moment and then burst out laughing and huggling each other. \"You know each other?\"\n\n\"We sure as hell do! Sarah worked as a waitress for me in Aspen. When I left to get married, she took over as the Seating Hostess. How ya' been, girlfriend? Small World! Look's like we caught ourselves some big fish!\" They hugged and quickly jumped into Big Chocolate to chat and catch up. George, Mark and I took a walk around the grounds with Santo and talked about our trip.\n\n\"I'm sorry I missed Yosemite.\"\n\n\"Oh, you have to make the trip. What an amazing place. You'll get there.\"\n\nAs we returned to the RV, we could hear squeals of laughter coming from within. We agreed that it was fortunate that they knew each other and got along as it would make our Yellowstone adventure even more fun. Rosie was approaching too. I called into the bus and asked if one of them could help us with a photograph. Deb, our 'staff photographer' took a nice shot of Rosie between George, Mark and me. I took out my Martin and on the steps of Big Chocolate, played for her.\n\n\"Rosie and Meadowlark had something special, <br> They hiked the green mountains and swam in blue lakes, <br> They laughed at the same things and shared little secrets, <br> With a feeling of friendship all covered in love.\n\nRosie and Meadowlark were bonded together<br> Rosie and Meadowlark were birds of a feather<br> Rosie and Meadowlark were like hands in kid leather<br> Meadowlark sang songs to his Rosie in heather.\"\n\nI'd forgotten the words as it had been so many years since I sang that song. Rosie, in a soft little voice, picked up the lyrics and finished the song. Her cheeks were covered in tears.\n\n\"I never thought I'd ever sing that song with you, of all people. I'll never forget this...and I'm gonna tell everyone in town! I can't wait!\"\n\nAmy popped a bottle of wine and passed around glasses. Everyone thought the scene was so beautiful. I promised Rosie I'd relearn the song and rerecord it, dedicated to her. George asked her for a good place to eat and she suggested Sydney's Mountain Bistro. Before she returned to the office, she said she'd call ahead and let them know we were coming. We showered and dressed and drove over in George's trailer. It was considerably cozier than Big Chocolate and I considered just how spoiled I'd become.\n\nSydney's was a delightful place although our welcome was a bit overdone. I realized that they were not used to celebrities in their midst and we posed for pictures with the owner and all his staff. When we finally sat down to eat, the owner brought over a bottle of wine on the house. I had their specialty, Salmon in Chili Sauce, and it was superb. Everyone at the table had to taste it but that was fine with me because I got to taste all of their entrees and I will tell you - all the food was delicious.\n\nAfter dinner, we returned to Big Chocolate for a nightcap. I noticed that George seemed to be observing me and occasionally asking me questions. Nothing heavy, mind you, but certain intimate thoughts about my career and about the music.\n\n\"Don't be so preoccupied with me, George. Relax. Don't be afraid to ask me anything, I'll tell you. But let me make it clear, the music is everything, George. It's the beginning and the end. It lives inside me like another organ. I think in music, I just can't help it, it's always been that way. Until Amy, I never felt that I could share that part of me so naturally but we are music and together a duetto. It's all about the music to me all the time. It's how I express my inner thoughts, it's how I expose myself. For a long time, things were tough for me but never the music, even when it was hiding within. It's my blood. When I make music with Mark or other musicians, I stop thinking and I become part of the river we all flow in and it takes me places. Maybe someone else can describe it better, maybe in a more linear fashion, but to me, music is not an abstraction. It's just me and it's a big part of who I am.\"\n\n\"Davy's right,\" said Mark. \"I'd forgotten how natural and right the music was until we hooked up. Playing with him allows me to close my eyes and flow in the big river. We talk to each other in some deep statements. I listen to him and I trust that we're communicating. I know we are...and it makes the creativity in me grow and easier to express. It's all about the music. He has that affect on everyone who makes music with him. His music says, \"It's alright. I understand. I hear. I know...and this is what I have to say to that...\" I don't know how else to explain it.\"\n\n\"So, what you're telling me is that even when times are bad, the music never is?\"\n\n\"Right, George. When I was burying my dad - and let me tell you, I really miss him - and everyone around his grave was crying, and my mom was crying and my sisters were crying, I heard his symphony in my head and I knew he was listening. When my wife left me and I was left penniless and I found myself on line in the soup kitchen, I heard music in the pain of those around me and it helped mec live through the pain. I wished they could hear it, too, so maybe it could help them. Whenever I play now, I look to make the audience understand the conversation I am having with the other musicians or between me and the audience...those who are listening, who can hear. Does any of this make any sense to you?\"\n\n\"Yes it does. More than you can imagine. One of the aspects of the character I'm developing is that he exists in a sort of cosmic soup of music. While people and things can be tumbling around him, he hears something that carries him through - and makes him stronger. You know an actor goes within himself to pull material to create a character. When he finds a good group of collaborators, together, as individuals, they can tell a good story. An artist paints his canvas to express his feelings but he's by himself, in his own world. A musician does this, too, but when he finds kindred collaborators who all speak in a unified theme, they create a sound...a blend of sounds...that stir the emotions of people...like that Rosie. All of these creative people need to connect to the audience to complete the circle. Your song spoke to Rosie in ways you never could imagine when you wrote it and it stirs emotions in different ways to different people. Do you see what I'm getting at? My character can be desperate but he can touch and uplift people with his gift...or at least he's desperately trying to communicate with them. My character's crisis is that be believes he speaks in his own language and therefore can't communicate through the babble. He's desperate to cross over.\"\n\n\"Too heavy. Too intellectual. The music is not intellectual. It's spiritual. At it's very core, it's spiritual. It flows out of you. It just happens. You don't think about it. It just flows like an always open tap. Your character should take comfort in the knowledge that someone somwhere understands.\"\n\n\"Now, that's an interesting concept! And with that thought, Sarah and I will bid you a good night. Tomorrow is here already and we need our energy.\"\n\nWe bid them a good night after offering our amenities to them come morning. I knew that after trying out their shower, ours would be oh, so inviting. Amy and I sat down at the computer to check our email before we turned in. Susan, from Tesla, emailed us asking for the latest logs and readouts so we uploaded them. Annie wrote that she'd pull in by nine am. She mentioned that she was picking up a Vanity Fair writer, Laura, who was flying into Bozeman to join us. Annie also said that she and Graydon had made some special arrangements with the Parks Service and she'd fill me in. It sounded good to me. I then emailed my daughter asking if she'd like to fly out with her family for an Aspen vacation. YouTube had some clips from Sebastian's Berkeley show and we all watched a few clips. Man, \"Life Is A Carnival\" sure did start out shaky but as it went on, it got tighter and really fun. The Amys were excellent and I commented that there just might be a tour in the future. But the clips were from a ways back in the theater and difficult to watch. With our eyes starting to hurt, we shut it down and headed for bed, where Santo was already sprawled.",
        "We were up at eight. We were already showered and working on coffee when George and Sarah knocked.\n\n\"I have to ask a favor,\" he said. \"I'm having a problem with our shower. I wonder if you could maybe take a look at it. I'm not real good with this stuff.\"\n\n\"Not now, George, maybe later. For now, use ours. Coffee and English muffins and jam are on the galley counter. We're about to walk Santo so please, make yourself comfortable.\"\n\nWe took Santo out and I commented to Mark, \"Somehow, I knew they'd be over to shower.\" We laughed. It was quiet and clear outside. The sun was out but the air was crisp due to the higher elevation. Off in the distance, the sharp arretes of the mountains cut the sky like razors. We were heading back when a beat up Land Rover towing a small Airstream pulled in. It was Annie Liebovitz at the wheel, her long blond hair flying wildly from the open window.\n\n\"Annie, welcome, you're just in time for coffee.\"\n\n\"First the bathroom, thank you.\"\n\nWe showed Annie and Laura into Big Chocolate which immediately brought a big wow. \"Graydon was right. This is the way to go.\" Laura asked about our travels thus far and how much longer we intended to roam.\n\n\"After Yellowstone, we're heading back down to Aspen for a while. We have much to do and while we can do most of it remotely and through the web, Amy and I want to settle in for a while and focus on some recording projects as well as some other businesses we're in. TEventually, we'll get back on the road heading east.\"\n\n\"Davy, I've been meaning to ask you about this but it keeps slipping my mind. What exactly do you have to do back east?\"\n\n\"You know, Amy, I'm not sure anymore. I did want to tend to my stuff in storage but that's no biggie. I want to see my kids but that can happen anywhere. I've been thinking that I'm no longer in any sort of rush. When I started this trip, I thought that Long Island was home but that was then. Now, I feel like anywhere I'm with you, I'm home.\"\n\n\"Uh-oh. I hear another song there,\" gibed Mark.\n\n\"He so romantic. I just love him,\" cooed Amy.\n\n\"Yeah, maybe. 'Don't matter where we go or where we roam...I'm with you and that feels like home.' Could be something there.\"\n\n\"What there is is a sloppy kiss for my big lug.\"\n\nWe sat around and talked about Yellowstone. Annie said that once we get into the park, we were to head for the Park Ranger's office in Mammoth first. \"They arranged for us to stay in a more private area of well-stocked guest cabins designed for visiting dignitaries. They also want to take us on a helicopter tour of the park (this news brought gasps). They want to know if you'd be interested in a horseback tour. They're also wondering if you might be interested in doing a free outdoor concert in the amphitheater.\"\n\n\"Yeah, I think we can do that. It's the least we can do for a helicopter ride.\"\n\n\"Good. It will make for a good photo op. Also, I think the helicopter and the horses will take us to some other unique settings.\"\n\n\"I'd love to take that horseback tour,\" said George. Sarah and Deb weren't so amenable to that idea.\n\n\"I've been to Yellowstone before but I've never had the cook's tour. I'm excited...and I can't wait to start shooting. This is a great gig.\"\n\n\"Well then, let's get a move on. We'll head into the park and take 89 up to Mammoth. Let's do it!\"\n\nLaura asked if she could drive with us and pick up some of our vibe. We loaded up and stopped to give Rosie a kiss goodbye. Within a few short minutes, we were in Wyoming and had already spotted several bald eagles and a lone elk standing in a meadow. Madison River and the Rockies seemed to be our guides along the road. As we approached 89N, traffic came to a halt to allow some bison to cross over the road. My immediate sensation was that we humans were only temporary visitors in this special place. As we inched our way north, we passed through ravines and stony passes, we passed alongside some bubbling geothermal springs, we viewed falls raining down mist from their high ledges, pools of clear blue water and geysers rising in smoky puffs, land colored yellow with sulphur. Amy suggested that we were back in time, in some prehistoric world and she was right, it sure felt that way.\n\nLaura sat next to me and asked me all sorts of questions about my past, about the bus, about my music and mostly my responses were rambling and like us, meandering.\n\n\"When did you first know that music was important to you?\"\n\n\"I can remember listening to Broadway cast albums in large albums of 78s. Stuff like \"South Pacific\" and \"Carousel.\" My folks liked that stuff and had a big collection. Then my older sister started to play Pat Boone 45s and I remember my friend Paul turning me on to the Fats Domino and Little Richard originals and I stopped listening to Pat Boone. Paul and I put cords on a couple of baseball bats and pretended we were The Everly Brothers. I think the first song I remember really learning to sing was \"Wake Up Little Susie.\" I think the first 45 I ever bought was \"Little Star\" by The Elegants. I think I still have it. But it really took off for me when my dad gave me a small Motorola transistor radio. It was a black plastic rectangle you could hold in your hand and most of it was a big round speaker. I ran a wire out my window and up the chimney to the TV antenna. At night, when I went to bed, I'd plug in the wire and listen to the WMCA Good Guys or Symphony Sid. I was hearing rock and roll, rhythm and blues and jazz for the first time. I remember one cold winter's night when I began to pick up stations from along the Canadian border...WLS from Chicago...and then stations from down south out of Memphis and Nashville. \n\n\"That's when my head exploded. This was around 1960. Suddenly, I became very popular in school because I knew all these songs that no one else knew and my tastes were becoming very broad and eclectic. I could talk about Elvis, Jackie Wilson, Miles Davis and Leonard Bernstein. About that time, I picked up the guitar. I was playing the trumpet in the school band and watching my older sister take piano lessons. I was very fortunate to have an excellent music teacher, too. He was very progressive and I was an eager student. My older sister had a little Stella that she would play folk songs on and one day, she fell on it and cracked it. I rescued it from the trash and glued the crack up. I took her Mel Bay #1 and began to teach myself how to play. Every night, after I'd done my homework, I'd sit and learn more chords. I did this for about a year and it drove my family crazy but soon I'd gone from \"Red River Valley\" to \"Be-Bop-A-Lula.\" My uncle bought me a big hardcover of \"Folk Songs of North America\" by Alan Lomax and I absorbed every song in it. In no time, I was popular with all the girls and I was leading hootenannies. Next thing I remember was The Beatles. I learned their songs overnight and was playing them in the school lunchroom the next day.\"\n\nVisually, the park was a kaleidoscope of changes and sometimes my thoughts drifted as I became mesmerized. It took only a couple of hours to get up to Mammoth Hot Springs and we pulled up in front of the Park Headquarters. The Park Rangers couldn't have been nicer to us. They led us to a small enclave of four cabins run by the Mammoth Hot Springs Hotel and we settled in quickly because they wanted to give us an introductory lecture, have some lunch and then take us on a helicopter tour. We asked them to cancel our reservations at the Fishing Village. The cabin was well appointed and Santo made himself comfortable although he frequently hopped up on a chair to look out the window and bark at grazing elks or passing bison.\n\nThe lecture was fascinating. Ranger Williams explained that we were sitting atop an immense lava flow that vented from the geysers and geothermal pools. He explained that the balance of nature in the park was based upon the heat of the lava flow, the water flowing through the park, the fires that continually modified the ecology and the wildlife that roamed freely. He advised us to keep Santo on a short leash at all times because the bison could become cantankerous and the wolves hungry, not to mention the bears. He narrated over a short film and we hung on his every word.\n\nWe walked into the restaurant and had a good basic meal before we were whisked to the heliport where we boarded three choppers normally used for fire patrols. Amy, Annie and Laura joined me as we swept into the park. Williams pointed out amazing things as we flew over the backcountry. He explained that much of the park has yet to be explored and while there were over three hundred falls identified, there were many more yet to be discovered. Each fall we flew over was more spectacular than the last. He pointed out smoky fires off in the distance and explained that the fire was important to the park as it regenerated growth and renewal. We flew over herds of grazing bison and running elk. We watched as a herd of wolves brought down an elk and he explained that since reintroducing wolves back into the park in the 1990s, they had brought back a balance to the herd sizes, allowing the wildlife to flourish and become healthier. We also spotted several grizzly bears dining on a carcass. We flew over rapids and racing rivers, sharp cliffs and deep gorges. He pointed out areas where previous fires had left charred land and standing dead trees and he showed us where the forest was in renewal, now filling again with greenery. We circled down over Old Faithful and Yellowstone Lake before heading back north. Old Faithful was shooting high as we passed over it and I was quite amazed at the large number of tourists who sat around it. It was some sight. Occasionally, I could hear Annie clicking away.\n\nWe flew back over bubbling hot springs and geysers, over yellow rock and mud pools. Mountain goats with large curved horns held vigil from atop craggy hills. I was in a National Geographic magazine, I swear. Finally, we landed in Mammoth and I was disappointed, as we all were, because we didn't want the tour to end. It was late afternoon and the Rangers had to complete their daily reports. As we left the choppers, we were all filled with smiles and babbling about what we had seen.\n\nWilliams suggested that the next day would be a good one for a horseback tour and suggested that we take a trip up to Gardiner to buy some riding clothes and hats. He also suggested that he and his wife would be glad to take us up there and have some dinner, too. We agreed to meet him at the cabins in an hour and I'd drive the bus.\n\nWe were all quick to prepare and soon Big Chocolate was on the road north. Santo was in his glory getting scratches from all the large group. We passed Roosevelt Arch and got out to take a group picture. I stopped and gassed up while also checking the tanks. In Gardiner, we had a ball buying chaps at Kellem's Saddle and cowboy hats (mine was cream colored). As the ladies (except for Annie) would not be joining us on the horseback tour, the boys had great fun buying up cowboy outfits and modeling them. The ladies had a good time buying up jewelry at Wapiti Silver. We also bought a guide book, Fishbein's \"Yellowstone Country\" at Tumbleweed Bookstore. Finally, we found our way to The Silvertip where we scarfed down food like a ravenous herd. Throughout the trip, Williams and his wife, Mary, filled us in on facts and stories. It was a great evening and we made for a good unit as we headed back to the park. On the way back, we stopped to let some Bighorn sheep pass alongside Boiling River. We boys took some ribbing over our hats but I thought we looked pretty good.\n\n\"If I came from Texas, you'd call me 'Tex', right? Well, would would you call me if I came from Shomokin?\"\n\nBack at the cabins, we were a weary bunch as we sat around having nightcaps and toking up. Mark and I played for a while and Amy worked on her harmonica chops. We had a little sing-along around the fireplace and Annie was snapping away catching the moment. George actually has a pretty good voice, a nice baritone. We played \"Man of Constant Sorrow\" and made him sing lead a la \"Oh Brother, Where Art Thou.\"\n\n\"I am the man of constant sorrow, <br> I've seen trouble all my days, <br> I bid farewell to ol' Kentucky, <br> The place where I was born and raised.\n\nFor six long years I've been in trouble, <br> no pleasure here on earth I've found, <br> For in this world, I'm bound to ramble, <br> I have no friends to help me now.\n\nIt's fair thee well, my old true lover, <br> I never expect to see you again. <br> For I'm bound to ride that Northern Railroad, <br> perhaps I'll die upon this train\n\nYou can bury me in some deep valley, <br> For many years where I may lay. <br> And you may learn to love another<br> while I am sleeping in my grave.\n\nMaybe your friends think I'm just a stranger<br> My face you never will see no more<br> But there is one promise that is given, <br> I'll meet you on God's golden shore.\"\n\nWe bid goodnight and settled in for a good night's sleep. Amy and I snuggled under the down covers and made soft quiet love, our favorite kind. Feeling her pubic bone push up against me and the shiver that follows is the complete it, as far as I'm concerned. As most of you can tell, I love sex in all its variations but I will tell you this, and it is a fact, I love sex with my Amy more than I have ever loved sex before. We react so well with each other, her curves fit into me, our minds and our senses connect and damn, I fit so well into her vagina, it's custom made.\n\n\"I love you, Amy.\"\n\n\"Say it again.\"\n\n\"I love you, Amy.\"\n\n\"Mmmm, never stop telling me.\"\n\nUp with the morning light, I was dressed in my Marlboro Man outfit and walking Santo. Tex and Waco met me outside their cabins and we waited for our Ranger/Guide.\n\n\"While we're roundin' up all the little dogies, the hussies are goin' on a guided hike up in the hills. We'll all meet up later at the chuck wagon.\"\n\n\"Yep.\"\n\nA off-road GMC pulled up. The driver, Ranger Wilson, was amazed. \"It looks like you guys are dressed up for a movie shoot. Where's the other rider?\"\n\nAnnie came racing up to the truck and jumped in. She looked at us and burst out laughing.\n\n\"Ok. Get it out of your system, Annie,\" smiled George. \"At least, you look like a serious rider. Your outfit is broken in.\"\n\n\"I don't ride as much as I used to but yeah, I ride.\"\n\nWe drove a little while until we got to the stables. At least, no one there laughed at us. I think they were more surprised that we were all accomplished riders. And while I hadn't been horseback in many years, it's a skill you never forget. All the horses were beautiful animals. My horse was named \"Nippier\" and he was all muscle and deep chestnut.\n\nOur leader was an older weatherbeaten gentleman who slightly resembled Sam Elliot named Rusty. I joked to the boys that they should all refer to me as \"The Dude\" or \"His Dudeness.\" Even Wilson laughed at that.\n\n\"Now, men, I've been ordered to show you a good look at the backcountry today. I've also been ordered to make sure none of you get hurt or incur any form of discomfort or injury, so the rule of the day is to follow every order I give because I love my job. This is wild country and lots of things can happen at the blink of an eye. When we come across wildlife, we observe them at a distance. We don't trespass into their invisible line of territory. Ever. If we approach bubbling springs, we observe at a distance. There can be poisonous fumes so again, we keep our distance. Now, I understand that the purty lady here has a pack horse with photography gear and so we'll be stopping sometimes for some pictures. When we stop, we stay together in a group and never wander off. Wilson here is an accomplished guide and so he'll be picking up the caboose. We'll stop once at a ranger station for some lunch. Now since you all seem on good terms with these animals, let's go and break in your new clothes, all right?\"\n\nWe headed off along a well-groomed trail into the hills. Within a few minutes, we seemed far from civilization. We were climbing and the air was crisp. Through a pine forest and down a gully, we crossed a small stream and followed along the side for a while until we came to a spectacular falls of about a hundred feet. Annie was snapping pictures but soon her presence became invisible to me. I was so into the views around me, I hardly paid attention to Rusty's constant commentary. We climbed a hill that opened onto a large meadow. Rusty pulled us up and pointed to an elk about 200 yards away. He pointed away from the elk and we cantered into the meadow where we found a dusty trail. We followed that into a dead-tree forest and then out toward the edge of a steep drop-off. Traveling along the edge, we came to a winding path leading to the base. Before we made our way down, Annie stopped for some posed pictures with the basin and the mountains behind me.\n\nWe slowly made our way down and the temperature picked up as we neared the bottom. A few hundred yards away were mud flats and belching pools of yellow-brown mud. We followed along the base of the ridge until we came upon another stream. This one was a fast one with rocky rapids. As we began to follow alongside, Rusty pointed up at the ridge where two bighorn sheep were watching us.\n\n\"How fucking cool is this?\" asked Mark as I pulled alongside. We came upon a series of cool-water pools and we dismounted to let the horses drink. Nearby, was a rugged log lean-to. Rusty pointed out that this was a place were Teddy Roosevelt and his party stopped to camp. It looked like it hadn't changed in the hundred years since he'd been there. After a few minutes, the horses started to get skittish and Rusty told us to mount up. As we moved quickly away from the pond, he pointed to a grizzly observing us from a ledge. We didn't need any encouragement to move on.\n\n\"I've seen that feller before. He's a curious one...but you never know.\"\n\nWe followed a path up through the forest and emerged on a large flat table. We trotted past formations of petrified trees and Wilson told us they were thousands of years old. Off in the distance stood the Ranger Station. We headed in that direction while below us were flatlands filled with spouting geysers. A herd of bison grazed beyond that. I had no idea time had gone so quickly but as we pulled up to the station, Rusty and Wilson were talking about lunch already. There was a Ranger in the station and Wilson delivered some mail and some supplies mentioning that he'd been stationed there for over a month. Rusty called in to headquarters to tell them that we were okay. Off in the distance, beyond several hills, smoke billowed up from a forest fire. Mark, George and I took a little walk to stretch our legs and when we were a decent distance from the cabin, we lit a joint and marveled at the vista below and around us.\n\nWhen we returned, Annie had set up her cameras. I let her pose me with a guitar that belonged to the Ranger. After a while, we were called in for a lunch of roast beef sandwiches, potato chips and soda. It was a strange vibe in that while we were in awe of these remarkable Rangers, they were in awe of us celebrities. Rusty broke the ice by asking me if I had a song in me. I picked up the guitar and tuned it up. I don't know where it came from but \"Sweet Betsy From Pike\" poured out while Annie snapped away. \n\n\"Did you ever hear tell of sweet Betsy from Pike<br> Who crossed the wide prairies with her lover Ike, <br> With two yoke of cattle and one spotted hog, <br> A tall shanghai rooster, and old yaller dog?\"\n\nThere must be fifty verses to that song but I only played a few. Rusty was all teary and I asked him why.\n\n\"My late wife was named Betsy and I used to sing her that song, It brought back some nice memories and thank you for that. But let's not dwell in the past, it's time for us to move on. You get to learn that Yellowstone is the past, the present and the future all rolled up in one.\"",
        "We followed the tablelands west as it gradually lowered into a valley. The horses seemed to enjoy this trail. We enjoyed it as well since it was scenic and beautiful, mellow and very gradual. I don't know about the others but my ass was starting to hurt. We followed the valley floor until it started to rise up into a large flat grazing plain. A herd of bison was racing across the plain being followed by a pack of wolves. We watched as the chase ensued until one bison began to straggle. Rusty commented that the wolves would pounce at any moment. Sure enough, they began to attack the bison who turned to face them and kick.\n\n\"Wolves are better at running down a bison than facing one head on. See how the bison is butting at them and kicking them with his hind legs? But that buffalo was a weak one, a straggler, maybe old or sick...still he'll put up a good fight.\"\n\nThe wolves backed off and seemed to be reconsidering their attack plan. Rusty told us that this could go on for hours as they wore the beast down. We continued on as we climbed several small ridges and then down again along a small stream. Off aways, we could see the falls that fed the stream. It was a fine necklace that streamed down off a ledge. We continued to follow the stream until we found a trail that led through a wonderfully scented pine forest. As we emerged from the forest, we were back at the stables. We dismounted and watered the horses. Then we brushed them down and brought them into their stalls to be fed. Nippier seemed to enjoy the ride and he nuzzled me before we left.\n\nThe Rangers thanked us for the care we took with their horses and for our good ride and we likewise thanked them. They asked for autographs and said they'd heard we'd be playing a little concert in the amphitheater by Yellowstone Lake. We told them that we would in a couple of days and they all said they'd try to make it. Wilson then drove us back to the cabins. We were all in fine moods but a bit achy, to put it mildly.\n\nThe girls were in the same shape. Amy, ever the resourceful one, had inflated the hot tub and filled it. They were all sprawled around the porch of our cabin now, clad in robes, smoking a joint, drinking wine and looking limp.\n\n\"Hey, the cowboys are back from the south forty!\" yelled Sarah. \"Come-a-tie-yie-yippie-yippie-o!\" It was kind of a weak yell.\n\n\"You guys look nice and relaxed.\"\n\n\"Relaxed! We're fucking crippled! We hiked our asses off! Our guide was a sadist! We even called the hotel to book massages but they're all booked up today...but first thing in the morning, our bodies belong to them! And how are you guys feeling?\"\n\n\"My nuts are killing me,\" said Annie and that broke us up. We couldn't help but agree.\n\n\"I'm feeling places I didn't know I had!\" added George.\n\n\"Well, I have to tell you something,\" said Amy, \"You guys stink. I can smell you wafting over here. Go shower and then hit the tub.\"\n\n\"Yup,\" I said, \"that's my next move.\"\n\nWe each hit our cabins and showered off. As we came out of our cabins, we dropped our robes and streaked over to the tub, Annie included, whooping as we ran or rather quickly hobbled. Thank goodness the tub was hot. The bubbling water was very soothing and all of us groaned in pleasure. The girls brought over glasses of wine and lit up another spliff for us.\n\n\"I have to take a picture of this,\" said Annie. \"But not yet, I'm too comfortable...soon. I'll say this - in all my years, I've never met campers who brought along their own hot tub. Talk about 'roughing it'. Ha!\"\n\nThe girls pulled chairs over and we talked about the amazing day we'd experienced. Talking over each other and babbling away, we all agreed that it was worth it but it's true - you got to pay to play.\n\nAmy filled us in that they had ordered a bunch of pizzas and salad to be delivered in about an hour. Also, she'd tied Santo to a long rope and he was happily rolling around in the grass in front of the cabin, that is until a couple of deer walked out of the woods onto the edge of the large lawn. He began to bark at them and all he wanted to do was chase them but they paid him no mind and obliviously grazed.\n\nEventually, Annie got out of the tub and dried off. Clad in her cotton robe, she set up her tripod and posed all of us around the tub. She also took some shots of the three guys in the tub sipping wine. For one picture, we mooned her. Finally, we all got out of the tub and slowly dried off, too. I drained the tub while Amy, Mark and Deb set up the screened tent as a dining room. By the time the pizza arrived, we were starving. Even the crusts disappeared (although I did provide Santo with a \"pizza bone\" that he happily munched). Happily fed but still aching, we decided that it was too late to nap and too early to go to bed, so we considered what to do next. Someone suggested that maybe Mark and I might play a bit but we shook our heads. Someone else suggested cards or board games and that went over well. Laura and George asked if I wouldn't mind some interview time and while I really wasn't up to doing anything, I realized that I'd promised them some quality time and this seemed to be it. It was getting chilly so we repaired to my cabin which seemed to have the largest living room area.\n\nScrabble seemed to be the popular choice and they set up the board around the table. Laura, George and I set up by the fireplace. I smiled as they both set up little digital recorders. \"Okay, shoot!\"\n\nLaura asked me about the fallow years, after I was dropped from the label. \"It was a tough time. I was confused. Whereas they had treated me like a valuable asset before, suddenly I'm dropped, and in a very insulting way. My friend and manager, Danny, called to tell me that my contract had not been renewed and that I no longer had a label to distribute my music. I'd known that my sales were down but I assumed that was due to changing tastes and the national addiction to disco. But I still had a loyal core audience and I felt that the niche I was in would continue to sell records and fill halls. Unfortunately, the label didn't see it that way. Suddenly, it was more difficult to get booked, too, without label support. A lot of the concert halls were disappearing and being replaced by arenas - and since my music was less show-bizzy and more intimate, arenas were not good venues for me, not that they were calling me. I started to play smaller gigs and outdoor festivals. My audience showed up and they were great gigs. I still owe George Wein and Quint Davis for booking me into Newport and Jazzfest but gigs like that became fewer and further between. I was spending a lot of my own money just to stay on the road. Finally, I began to book myself into smaller rooms and I found somewhat of a home there. Places like The Main Point, My Father's Place, Stephen Talkhouse, The Cellar Door kept me working and kept me out there but it also broke me with all the traveling and the low payouts.\"\n\n\"But you still had royalties coming in, didn't you?\"\n\n\"Royalties and mechanicals were the devil's tool used by the labels and the publishers to keep their shady accountants working. My checks were negligible and rare. Occasionally, one of my songs would be used in a film or a television program and it was like found money. Also, you have to remember that my family was growing up and my costs were increasing as my income declined. College was looming and I took work wherever I could find it. I was losing my dignity and self-esteem but I had no choice, I needed an income. My wife never worked except in low-paying hobby jobs so after a few years of frustration, I was seduced into a job selling liquor figuring that my musical career was over. I worked mostly nights selling to clubs filled with rummies and addicts. It was humiliating and humbling. Selling booze, I began to feel like I was being punished. I couldn't find my muse and my music began to sound stale to me. Still, every time I was offered a gig, whether it was a benefit or a festival, I jumped at it and gave the audience my best. While my heart was in it, I found my chops failing. People began to treat me discourteously, like a has-been. Even my wife, who I'd always considered my best friend and partner, began to act rudely to me. I was lost, surrounded in a world of drunks and addicts, losers...and I began to feel like one, too.\"\n\n\"Did anyone offer you any help or advice?\"\n\nOh, sure and God bless them. I will always love them for that. Some like James Taylor, Bonnie Raitt, Loudon Wainwright, Jackson Browne, Judy Collins, Jimmy Buffett and others asked me to open shows for them and those were some of my best times. Playing with those who appreciated me and my music kept me alive. Eventually, the liquor company asked me to leave because I couldn't - I wouldn't put in the time. And I was really glad because it was not something I wanted to do, it was forced upon me and it didn't help my mind one bit plus my heart wasn't in it. Those gigs with my friends kept me going. I found a way to make a living and to maintain my dignity, as well as my credibility to myself.\"\n\n\"When did things really go south for you...really turn sour?\" asked George.\n\n\"About 1990, my relationship with my wife began to fall apart. She began to be abusive to me and I could not understand why. I tried to repair and salvage my marriage...we went to counseling and therapy but nothing seemed to work. She didn't want it to work and wouldn't put in the effort required, but I couldn't see that. I wanted things to improve so badly I was blind to what was obvious. She began to lie to me and that really broke my heart. I couldn't figure out what was really going on with her. Various therapists told me that she was hiding something and that there was no way to repair the damage until she came clean. Her response was that they were charlatans and frauds and things just got worse. It all came apart in '93. I'd just returned from a small four-city tour that went very well. I shared a bill with Leon Russell. I mean I played well and the audiences were enthusiastic and responsive and I had some money in my pocket. I returned home feeling full of hope and confidence. As I walked through the door, she said to me, \"I need my space and you have to go.\" Go where? What space? I turned into Homer Simpson overnight. I found that I was locked out of my house and then started receiving nasty phone calls...lots of her screaming at me. Over what? Why was this happening? \n\n\"I was utterly bereft. I crashed wherever I could find a bed or a couch or the back seat of me car and I cried a lot. What had happened? Where did I go wrong? What did I do?Well, eventually, through the divorce proceedings, I discovered that she'd been having an affair with my estate lawyer and that all my physical assets had disappeared. My name had been forged on all sorts of documents - from deeds to portfolios, even going so far as a forged document giving him power of attorney. I had nothing except my guitars. Even my car wasn't mine anymore. I went through all my money fighting the divorce and it looked like I might win some of my stuff back but then some kind of deal went down and the Judge issued a summary decree, giving her all my assets and granting the divorce. On one day, I had several million dollars in assets and on the next, I had $250,000 dollars and debts. Danny tried to help me but there was little he could do as the Judge ignored his testimony. Somehow, the Judge and her divorce lawyer had something going but I never found out what. I wanted to go after the boyfriend but was told it would cost me a million dollars and ten years of my life. And there was no guarantee I'd win or get anything back. I was told to just move on with my life. But inside, I was devastated and destroyed. In a fit of pique, I punched a wall and broke my hand...now I couldn't even play. I became depressed and suicidal. I wanted to die...and I tried to...really.\"\n\nThere was a long silence before Laura asked, \"What happened with the wife?\"\n\n\"Of course, six months after the divorce, she and the lawyer/boyfriend broke up. They were two whores out for a scam and I was it. I've never spoken to her since. My children send me messages but I pay no attention. She lives in Florida now and spends her time buying designer shoes and pocketbooks. Whatever. Fuck her. See? I don't think about her anymore until you ask me questions and, honest as I am, I dredge all this bitterness back up...but I suppose the bitterness will never disappear.\"\n\n\"So now, you're broke, you're out of work, you're divorced...what happened next?\"\n\n\"They say you have to hit rock bottom first before you can climb back up, right? I lived in my East Hampton home for a few years until I had to turn it over to her. She promptly sold it against the wishes of my kids, who loved that house as much as I. During that time, I worked wherever someone needed a hand. Some days, I was carrying a wheelbarrow filled with bricks around a construction site. The next day, I was digging mosquito trenches in the salt marshes. I worked as a clerk in the hardware store. I worked on fishing boats and crewed up whever I could...tough work but good pay, you know. I kept busy doing a lot of volunteer work for Big Brothers Big Sisters, Make-A-Wish and the Food Pantries. I did anything to keep from being idle. I was alone and I was lonely so I got Santo from a local shelter when he was just a pup. I was making enough to survive but just enough. I didn't go to the movies or out to dinner or out on dates. I even stole newspapers off front yards, that's how broke I was. Sometimes, for fun, I'd sing back-up behind groups at The Talkhouse or The Wild Rose as my hand wasn't healing well. But mostly, these were ways to cover my sadness, loneliness and depression. I was so dispirited. You know, when you are a performer and an outgoing person, it's a difficult transition to make - like suddenly being stranded on a desert island. I was very alone. Fortunately, some friends and neighbors introduced me into yoga and meditation and that helped me a lot. They brought me back out into the world and able to meet people again. They brought me back to my music. They saved me, really.\"\n\n\"After I moved out, I rented a small place. It was just big enough for me, for Santo, for my computer...and not much more. But it was near the ocean and it had a hot tub, so it certainly wasn't a horror. I became social again and started playing again...mostly benefits for war veterans and worthy causes like that. Things seemed to be turning around for me. I played a few private parties for big muckimucks and I had a few bucks in my pocket. I was dating again, getting laid and even, for a while, in a relationship with a young yoga instructor. I got lucky when a few friends put on a big benefit for the Wounded Warriors in Montauk. I was asked to play a set so I put together a band of local players and opened the show. It was a hell of a bill with Paul Simon, Jimmy Buffett, Garland Jeffreys, Phoebe Snow and Suzanne Vega. I sat in with Jimmy on a few songs, too. It was a euphoric gig and I was sky high. I attended a party afterwards in an oceanfront mansion and listened to all the talk about how I should hit the road again. \n\n\"What they all didn't know was that I was on Food Stamps and eating some meals at the shelter. I felt like a fraud that night. The next morning, I checked my email and surfed the web. I checked my Lotto numbers and discovered I'd won the lottery. It was a huge prize and after taxes, I had well over one hundred million dollars. I spent the next year putting things right again. I took care of my mother, my sisters, my kids and some friends who had helped me when I needed it, even though they didn't have much themselves. I made donations to lots of organizations who were also there for me. A few months later, my ex contacted me through a lawyer saying I still owed her money. Can you believe that? Here I am eight years after the divorce and she wants to steal more? Unfuckingreal. I had a lawyer contact her lawyer stating that I now intended to revisit the divorce, to press criminal charges against her and the estate lawyer and to litigate until she was broke. She caved as I knew she would. But now, after I'd settled up my accounts and made a lot of things right again, I started to consider what I intended to do with my life. My heart was telling me to travel and to learn from the road, so after some research, I rented an RV and left Long Island, intending to return in a month. That was seven or eight months ago and here I am in Yellowstone...full of music and my muse, surrounded by friends I love and living it up every day...and I've never been happier. And with that encapsulated history, I'm done for the night. Save your follow-ups for tomorrow, okay?\"\n\nI finished off my glass of wine and topped up a roach in the ashtray. The room was very quiet. I looked around and saw that everyone had been listening to me and not playing their game. I felt naked. Amy came over to me and took me by the hand.\n\n\"Shit! Why is everyone looking so glum? I didn't even talk about the really bad stuff, the dark stuff...some things are not for publication! Come on, dammit, light up a spliff and let's dance!\" Still, they looked upset. \"Listen, everybody, there's eight million stories in the Naked City, right? This is just another one of them, that's all. It even has a happy ending. Look, it was a positive ordeal for me in that I gained a depth and appreciation of my art that ran deeper than my talents. It's why I'm here...right now...today. So take the blues and shove it. Lighten up!\"\n\n\"Ok. On a another subject, my friend, we left the tent and the tub out,\" said Mark, \"you want to stow them?\"\n\n\"Good idea. Let's get a couple of flashlights in case there are feral beasties lurking.\"\n\nWe went outside and sure enough, the flashlight picked up the eyes of an elk at the edge of the field. We went about stowing the tub and the tent and whatever else we left outside. We stopped to toke up and dig the darkness when George asked me a question.\n\n\"Davy, in your lowest days, what kept you from suicide? Were you afraid? Could you have done it?\"\n\n\"George, I wasn't afraid. There were times when I was planning it out. I could have done it. Something in me said 'wait' - 'wait for tomorrow'. I wasn't ready to see how the story ends. I believed that something could happen. Lightning could strike. And it turns out it did. I got lucky, that's all.\"\n\nAs we walked back, everybody was leaving to their cabins. We wanted an early start on the day and we were all so beat, it was the right time to hit the sack. Santo was snoring away on the couch as Amy led me to bed. We snuggled up and quietly talked.\n\n\"I had no idea that times were so tough for you, baby. It hurt me to visualize what you went through. I felt so bad listening to you tell it but, as you said, you're here and you're here with me and that's the real story. Hallelujah.\"\n\n\"Yup. It took me all that to get next to you. It was worth it, every second.\"\n\n\"I want to make love to you, but gently. We're both mighty sore after today's workout but I have to feel you cum inside me.\"\n\nShe stroked me gently and I could feel her love in her touch. I rolled onto my side to face her and we softly kissed letting our tongues slide along our lips. There's a kiss that fits, if you understand my drift. It's a kiss that is for you and you alone, like two puzzle pieces that link. She added soft kisses around my face and especially on my eyelids. I nibbled on her ear and felt her breathing rate increase.\n\nYou ever have that feeling that you really, really want to fuck but your body feels like it just got off a horse? Believe me, it's not a thrill. I nuzzled Amy and whispered in her ear, \"I love you, Amy, but my body is telling me that it loves sleep, too. I can hardly move.\"",
        "\"Good. I hurt like hell, too, but my mouth wants cock so you just lay back and enjoy it.\"\n\nShe kissed me as she slid down my chest. Burrowing her face into my chest, she nibbled on my nipple. Sucking it and licking it, her hand went down to my crotch and, sonovabitch, waddya know, I was stiff and hard and filling her hand. Honest, I didn't know I had it in me! Amy worked me like a lollipop as my mind began to drift off into somewhere I can't remember. And the reason why I can't remember is because I fell asleep, sound asleep, like snoring asleep. Believe me when I tell you that I heard about it the next morning.\n\nWe got up early to catch the sun peeking over Mount Sheridan's 10,000 foot summit. We caught a ride from our Ranger pals down to Lake Yellowstone Hotel's Sun Room. As we sipped our coffee and waited, Amy told the tale.\n\n\"Yes we were tired last night but I was frisky. Can you believe that while I was going down on him, he fell asleep! Honest to God! It was like one minute I have this monster in my mouth and then I notice his breathing get deep and he goes soft. Then he's fucking snoring! It's a good thing I don't have an inferiority complex! Damn!\"\n\nI took a good bit of ribbing between the laughter. Fortunately, the sun began to show itself and the attention turned away from me. A mist was above the lake and it looked as though the mountain was floating in the air above the mist. It was so beautiful to behold, the room fell silent.\n\nAfter breakfast, a Ranger was waiting for us. He explained that he was our guide for the day. He first took us over to Old Faithful where we joined the throngs to watch it spout. That was pretty cool. Then he drove us down around Lake Yellowstone where he showed us the Amphitheater near Grant Village. It was a cozy space. He assured us that they would supply a PA system and a couple of amps. We drove up around the West Thumb of the lake all the way up to the Fishing Village. I can't even begin to tell you how scenic the ride was. We took a zillion pictures of trees, of water, of wildlife, you name it. Annie had a field day, too. (I hoped I looked good!) On the way back up to the cabins, we stopped at several falls, the Lower Falls being just the other side of fabulous. Through valleys and over rivers, past gamboling grizzlies and grazing bison, it was a fabulous ride and since we were all still sore from the previous day, it was a blessing.\n\nBack at the cabin, I tended to Santo who seemed to have spent a lazy day. We took a long walk through a field to a rocky stream with several terraced falls. The water was cold and he enjoyed drinking from it. On our way back, I took a wide circle around several elk standing by the creek. We surprised several beaver who raced into the water. Unfortunately, our detour took us up a steep hill and then a good walk back to the cabins. Santo was as out of breath as I.\n\nThey were all sitting on the porch drinking, smoking and listening to Mark play. Santo ran up to the porch and promptly flopped under Amy's feet. I got my guitar and joined him. He asked me to call the tune and I selected \"America, The Beautiful\". We did such a sweet job on it, we said we'd do it at tomorrow's show, although I'd have to look up all the verses on the web. We worked on several American-themed songs and folk songs and developed a little set for the next day, Singing about the beauty of this country - in this place - just seemed so appropriate.\n\nDuring a break, Amy, Annie and Deb began to prepare some dinner while I lubricated my throat with a good Napa cab. Laura asked me about playing and Mark and I responded with comments we'd made prior during the trip; about music being a conversation, about being fun and not work, about music being innate and like a flowing river.\n\n\"Davy, when you're making music, what goes through your head?\"\n\n\"Hmm, interesting question. I really don't know. I mean, I don't have linear thoughts. Maybe it's because I switched to the creative side of my brain but I don't concentrate on anything but the music. I know that my guitar is there with me and all the parts of me are in concert together so I don't have to think about that. I'm just listening is all. Sometimes, when I am distracted by something while I'm playing, I immediately go back to listening to the music and I back into again. And it's hard to distract me. It's kind of like I talk, I think, I play and I sing and it's all in the same voice. I think I progressed past the idea of 'performing' years ago. I suppose you could say that I'm always performing.\"\n\n\"No, no. That's bullshit,\" said Mark. \"That's the thing about you, Davy. You never perform. It's like us sitting around here and playing on the porch only there are people out there listening. They're incidental to the scene. Cooder said that to me after the benefit. He said that playing behind you was like wearing comfortable pajamas and I have to agree. Sebastian said something similar, too. I think that's part of the appeal of musician's wanting to play with you. There's no artifice...it's easy, it reminds us that it's pleasurable...and it's fucking tasty.\"\n\n\"And speaking of tasty, we have dinner ready. But I need some help taking the table outside. We need a table from another cabin, too.\"\n\nWe put the tables together and lined the chairs around them as platters of pasta, sausages and meatballs, garlic bread and salad filled them. It was a wonderful meal, full of warmth and camaraderie. As the sun set and the sky turned vivid, we all decided we were in paradise.\n\n\"Let me tell you,\" said Annie, \"I can think of only a few shoots that were so easy-going and relaxed. It's like Laura and I were welcomed into your group as soon as we met up. I feel like I've known you guys forever and it's only been a few days. Shooting you is maybe like playing music with you. Like Mark said, it's easy and it's mellow and it's fun.\"\n\n\"I agree,\" said Laura, \"you all are so honest and open about everything. It's like we've been together for years, almost like family. Are you like this with everyone?\"\n\n\"I'd say that we're all a pretty welcoming bunch but that's because we have no fear of each other. There's a strong level of trust,\" added Deb.\n\n\"Yeah, you know, there's a wall between us and fans but it's a very thin wall,\" Mark offered.\n\n\"Yeah, I agree. With fans, you want to make them feel comfortable as quickly as you can so you can remove some of that fear. I mean, what do you want? To live in paranoia? Not me! Not ever again!\"\n\nWe passed on coffee and dessert so as not to stay up too late. I wanted to give Amy the fuck she desired the night before but I didn't want to drag it into the wee hours. Also, the air and the entire environment tends to wipe you out. We cleaned up our camp and left the tables for tomorrow.\n\nBack in the cabin, Amy and I squeezed into the shower stall and played with each other.\n\n\"You know, Davy, I'm kind of tired and I just want to go to sleep tonight.\"\n\n\"Yeah, right! I know, payback is a bitch.\"\n\n\"Ok, well - you eat me and let's see if I fall asleep.\"\n\n\"Is there betting? Are there odds? I want to bet the superfecta.\"\n\n\"Stop talking already, will you? I'm nearly asleep!\"\n\n\"We'll see about that.\"\n\nI pulled her legs apart and dove right in. I was hardly surprised to find her very wet and juicy. I slobbered around her labia until she pushed her clit into my face so I concentrated on giving her the maximally efficient orgasm. I sucked the little thing between my lips and moved up and down in it. This made her jump, much to my liking. I put two fingers into her and began to stroke her as I laved her clit. Her response was to bear down on my fingers, pushing them deeper and rubbing her hard g-spot. My fingers were soaking as she pushed against me. \"Fuck me. Get inside me.\" What else could I do but to follow her instructions?\n\n\"Back in the saddle again...\" I began to sing.\n\n\"Fuck me, cowboy. Harder.\"\n\nWe were pumping hard at each other and I felt her tremble. She grunted and I knew that she was close. Hell, I was close, too. We banged each other frantically until I felt her arch up against me. That's when I let loose my torrent of cum, spraying her insides and flooding her. We peaked at the same time and then collapsed with a flop on the bed.\n\n\"Wow,\" she said, \"wham bam, thank you, sir. That was some great economic fuck! I can't recall us ever doing that. I guess we really needed it, huh?\"\n\nI made like I was snoring and she whacked me in the head with her pillow and called me a 'wise-ass.\"\n\n\"Guilty as charged,\" I said. \"Still love me?\"\n\n\"You bet, ya big galoot. Now you can shut up and let me get my beauty sleep.\"\n\nJust for good measure, she whacked me again with her pillow. Five minutes later, I spooned us to sleep.\n\nThe next morning, we all sat around our outdoor picnic table munching blueberry muffins and coffee. There was a good deal of banter as we all teased each other about making too much noise in our beds. The three men made a big deal of showing how virile we were while the women teased us about faking orgasms. George said that he always faked his orgasms but Sarah had none of that claiming that she always got the wet spot afterwards. Annie, being gay, said that the wet spot was hardly a man's domain. Like I said, a lot of funny banter went on.\n\nRanger Williams drove up and asked us if we could play at around 3:30 as it was a good time for the Rangers as well as the park visitors since most were getting weary by then.\n\n\"Sure, why not. It'll be a good way to cap the day.\"\n\n\"Good. Meanwhile, would you all like to go for a swim in a secret pond? It's pretty private and away from the trails. Wilson and his wife have volunteered to take you up there. You can even bring your dog so long as you tie him to a tree.\"\n\nWe were all game for a little adventure so we got our gear together and soon the Wilsons, Tommy and Sandy, drove up.\n\n\"Come on, cowboys, hop in.\" He explained that it was his day off and he'd volunteered to show us a good time. Sandy was delighted to be in our company, or should I say, George's company. We hopped into the back of his truck where there was a large cooler stocked with water, soda and beer. About twenty minutes later, after following a bumpy unmarked dirt trail, we pulled up next to an idyllic pond fed by a twenty foot falls. The pond was a long wide oval that spilled down into a winding, rock-laden stream. The pond was very private and surrounded by tall pine trees. What a spot! Santo's tether was long enough for him to dip, too.\n\n\"This is ours,\" said Tommy, \"we keep visitors and hikers away from here.\" Sure enough, there was a couple of lean-tos and an outhouse off to one side. \"The water may take a little getting used to as it could be cold although, since it's getting late in the season, it may have warmed up a bit.\"\n\nI pulled a joint from my pocket and asked Wilson if he minded and would he like to join us.\n\n\"I'd love to but I can't. They test us randomly ever since they found the pot farm on the sunny side of Snowy's Butte. But thanks anyway. I'm sure Sandy will have a few hits, though.\n\nEverybody tossed of their clothes and, in bathing suits, jumped in as Mark, George and I toked up. Immediately, there were squeals and laughter.\n\n\"This water is cold!\"\n\n\"No, it's not cold, it's refreshing!\"\n\n\"Fuck you, it's fucking cold!\"\n\nMark and I jumped in and swam around. I swam by Amy and pinched her ass. Yeah, the water was cold but it wasn't that bad, especially if you stayed under it. Pretty soon, everyone had adapted to the water and we were frolicking around. You could stand on the slippery rocky bottom, or try to stand without slipping. Annie was on the shore, snapping away and laughing at our antics. She took several shots with us under the falls and one posed shot with Amy and I kissing. (I knew that wouldn't make into print but I wanted it to hang on a wall.) After a couple of hours of this goofy fun, we dried off and headed back. About two hundred yards away from the pond, we drove past several grizzlies in the woods heading toward it. We were all very glad we'd picked that moment to leave. I was also glad that Tommy had his dart gun on him. Also, on the way back, we had to stop and take in the view before us: snow-capped peaks, lush valleys, winding streams and several steamy vents. Paradise.\n\nAbout two, Tommy and Sandy returned in two large Range Rovers to take us to the amphitheater near Grant Village with Santo squeezed under my legs. They took a different loop road down there and we were treated to all new scenery. We had to stop to let the tail end of a bison herd cross the road. Although we were not too close, we were close enough to smell them and you know what, they stink!\n\nWe pulled in around three and were surprised to see that the seats were already filled. There were people on blankets and lots of folding chairs, too. Tommy explained that they had distributed flyers in the hotels and camp grounds around the park. Another ranger told us that some people had been here for several hours already. The amphitheater itself was a nice intimate and rustic facility surrounded by woods and with a view of Yellowstone Lake behind it. We were ushered behind the stage while park staff set it up and tested mics. Williams stopped by to wish us well and Rusty also stopped by. There was a tent set up for us with some snacks from the nearby hotel and we were told that we could have dinner there after the show. Soon it was showtime and I walked onto the stage with my Martin and my dog, who promptly sat at my feet.\n\n\"Hello, fellow visitors to Paradise. My name is Davy Harper and this afternoon, it is my pleasure to sing for you in this wonderful park. Let me introduce my band to you, please give a warm welcome to master fiddler extraordinaire, Mark O'Flannery...(applause as Mark walks out) and the beautiful harmonies and harmonica stylings of Ms. Amy Bieler...(more applause as Amy walks out and waves)...and down here, holding down the bottom is my dog, Santo (even bigger applause). We're going to perform a set today that we hope you enjoy as it was inspired by our visit here. We want to thank all the Yellowstone Park Rangers who have made us feel this place in some deep places, National Park Services, the Department of the Interior and most important, our country, The United States of America.\" I stood at the mic and began to sing a cappella, with the lyrics in my hand.\n\n\"O beautiful for spacious skies, <br> For amber waves of grain, <br> For purple mountain majesties, <br> Above the fruited plain!\n\nAmerica! America! <br> God shed His grace on thee, <br> And crown thy good with brotherhood, <br> From sea to shining sea!\"\n\nMark began to play with a little beat and Amy joined in harmony. I started to pick.\n\n\"O beautiful for pilgrim feet, <br> Whose stern impassion'd stress, <br> A thoroughfare for freedom beat, <br> Across the wilderness.\n\nAmerica! America! <br> God mend thine ev'ry flaw, <br> Confirm thy soul in self-control, <br> Thy liberty in law.\n\nO beautiful for heroes prov'd<br> In liberating strife, <br> Who more than self their country loved, <br> And mercy more than life.\n\nAmerica! America! <br> May God thy gold refine, <br> Till all success be nobleness, <br> And ev'ry gain divine.\n\nO beautiful for patriot dream, <br> That sees beyond the years, <br> Thine alabaster cities gleam, <br> Undimmed by human tears.\"\n\n\"Please feel free to join in.\"\n\n\"America! America! <br> God shed His grace on thee, <br> And crown thy good with brotherhood<br> From sea to shining sea.\"\n\n\"That was so lovely, let me hear it again\"\n\n\"America! America! <br> God shed His grace on thee, <br> And crown thy good with brotherhood<br> From sea to shining sea.\"\n\nBig applause. \"Oh, thank you. That felt great, didn't it? Well, if you liked that, what do you think of this?\" Mark and I began to play as Amy added a haunting harp.\n\n\"Let us be lovers we'll marry our fortunes together<br> I've got some real estate here in my bag<br> So we bought a pack of cigarettes and Mrs. Wagner's pies<br> And we walked off to look for America.\"\n\nI must admit, we did the song justice. Paul Simon, cranky bastard that he is, would have been proud. I once took some lessons from his brother, Eddie, a heluva guitarist and I learned the song from him.\n\n\"Do you all see a theme here?\" We went through a bunch of crowd pleasers, each done in our own way. Several times, Mark, Amy and I went off on breaks that soared in different ways and, as Mark and I have learned, we took off an interesting codas bringing in themes from other songs (like adding a little of \"Born In The U.S.A.\" which we didn't play, to the end of \"Rocky Mountain High\", which we did. We also added a bit of \"Rocky Mountain Way\" into the break. It was neat. On \"City of New Orleans\", Mark added Glenn Miller's \"American Patrol\" into the break. That was very neat.) Our set included Chuck Berry's \"Back In The U.S.A.\", Randy Newman's \"Feels Like Home\", The Band's \"Across The Great Divide\", a bluegrass version of George M. Cohan's \"Yankee Doodle Dandy\", Bob Marley's \"Buffalo Soldier\" (an interesting and peculiar reggae arrangement, but it worked), Dylan's \"Chimes of Freedom\" and Dan Fogelberg's \"Forefathers.\"\n\n\"I want to bring out a friend to join us on a couple of songs...please give it up for \"A Man of Lonesome Sorrow\", Mr. George Clooney.\" (Big roar) We kicked into it as George came onstage doing a little country steppin' with his elbows out. We backed him like The Soggy Bottom Boys. During the break, he and Amy do-si-doed. He got a great applause, bowed and went to run off the stage but I held him as we kicked into \"This Land Is Your Land\" in which I imitated Pete Seeger and had everyone standing and singing. Even Santo barked along.\n\n\"I want to thank you for your hospitality today...and a big tip of the hat to our Rangers (I pointed to each one of them for applause)...and I think it's only fitting that since everyone is standing, we end the show like this...\" We sang a cappella.\n\n\"While the storm clouds gather far across the sea, <br> Let us swear allegiance to a land that's free, <br> Let us all be grateful for a land so fair, <br> As we raise our voices in a solemn prayer. \"\n\nGod Bless America, <br> Land that I love. <br> Stand beside her, and guide her<br> Thru the night with a light from above. <br> From the mountains, to the prairies, <br> To the oceans, white with foam<br> God bless America, My home sweet home. <br> God bless America, My home sweet home.\"\n\n\"Thank you all...clean up after yourselves...kiss a Park Ranger...Thank you...Donate to your local Food Pantry...Thank you.\"\n\nThe applause seemed deafening in that little theater as we stepped off the stage into the audience. Shaking hands and signing autographs under the blue sky capped the show for us. It was a good forty-five minutes until we could break away and go backstage into the tent where we guzzled bottles of water and even poured them over our heads. The Rangers were effusive in their thanks and praise. We posed for a bunch of group pictures with the Rangers (and one with Williams, Wilson and Rusty). Annie told us that she had taken some of the best shots all week. Laura had spent time in the crowd getting sound bytes from members of the audience and she said they would fit well in her article. In short, with a nod to The Beatles, a wonderful time was had by all.\n\nTommy and Sandy drove us over to the Grant Village Inn and we were offered a room to clean ourselves up. We asked the Wilsons to join us for dinner. And what an excellent dinner it was. We all had the local specialty, Fresh Lake Trout, pan-fried and encrusted with toasted pecans and lemon butter. It was lip-smacking good. It was a great way to end the performance and we all felt good about the show. The kitchen staff even took Santo to a side room where they fed him a big bowl of scraps.",
        "Laura, for one, was amazed. \"I can't believe you guys could just get up there and do that. You rehearsed for about an half hour last night, tossing out songs, some of which you didn't even play! You didn't even write up a set list!\"\n\n\"No, these are songs we knew - or at least we could fake. It's more fun to just let it go like this. We let the music take us where it wanted to go.\"\n\n\"Davy's right, Laura. Each song sort of walked into the next,\" added Mark, \"We kind of know the keys Davy sings in so it's really no biggie for us.\"\n\n\"That's easy for you to say,\" said Amy, \"I'm just following along and hanging on for dear life. You may not realize it but when I took the harp break on the Randy Newman song, I was covered in flop sweat. On one hand, I think Davy gives me too much credit but on the other, I'm kinda glad he does because he trusts me to play the right thing and it gives me confidence to know that I can. Still, I'm not at your level but I give it my best shot. You guys make me sound good.\"\n\nMark and I refused to let that last sentence stand telling her that she was terrific, that she was a natural, and other honest compliments but she wouldn't hear it. Finally, I apologized and promised that I would spent more time practicing with her. Deb had the last word on the subject explaining to Amy that she should accept and revel in the fact that she had a bounty of talent and her voice was so good that even Linda Ronstadt enjoyed singing with her. That seemed to take some of the sting away.\n\nThe Wilsons drove us back to camp as the evening fell. George and Sarah would be leaving in the morning and Annie was pulling out around noon. Laura asked if she could get a ride to Jackson Hole to catch a plane. Since we were taking Mark and Deb there to fly out to New Orleans in the late afternoon, we agreed to leave around noon, too. As we got to the cabins, I exchanged emails with Tom and Sandy and asked them to stay in contact.\n\nPacking up took no time. Since it was chilly, we sat around the fireplace in our cabin and shot the shit amid bottles of wine and lit joints.\n\n\"You know, seeing you perform and hanging with you has helped me a lot in developing this character. I see much more nuance and dimension, now. This was a great idea. Sarah and I are heading to Lake Como in a few days and I have a lot to think about. I also have two books of notes to chew on.\"\n\n\"My pleasure, George. Anytime, my friend. And I can't speak for Mark but if you ever want to go on a concert tour...\" That brought laughter and hugs.\n\n\"What shall I do with the photos of your naked butts?\" asked Annie. \"Oh, I know! I'll put them on the web!\" More laughter and veiled threats.\n\nIt was great sitting around our last fire. We were a tight bunch of friends, bonded for life after only a few days. As they drifted out, Deb hung back.\n\n\"We don't want to leave,\" said Deb. \"We want to make love to you tonight. We want to end this wonderful adventure the way we started it. And we have a gift for you!\"\n\n\"We have a gift for you, too,\" squealed Amy. \"I can't believe this!\"\n\nMark returned with a box. Amy handed Deb a box. We opened them together. Inside our box was an authentic antique Indian peace pipe. It was nearly 150 years old and it was made of stone, wood, beads and feathers. It was beautiful and I knew it would be a centerpiece in our house and in our hearts.\n\nDeb opened their box and they gasped. Mark lifted out an antique Gaelic harp, dated 1835. Don't even ask what it cost. Amy saw it in San Francisco and we've been hiding it in Big Chocolate ever since. Mark had tears rolling down his eyes.\n\n\"We figured that this would look great on your wall of instruments.\"\n\nHe plucked it and picked out some beautiful sounds. Meanwhile I put a small screen into the bowl of the peace pipe and passed it around for a ceremonial toke. After the smoke went out, I removed the screen and tossed it away saying that no one would ever smoke from it again. We put our gifts away and solemnly walked into the bedroom. We stripped down and sat on the bed. Suddenly, I was disturbed about this.\n\n\"Listen to me. Let's not be so glum about this. It's not like we won't see each other soon when the Food Pantry tours starts up. We have a really deep friendship. In the last few months, we've been through a lot together, Obviously the bond is deep, I mean, just look at the gifts we gave each other...relics symbolizing peace and harmony. That's who we are, that's what we have. And we also have fun, a lot of it. So if you want to end this adventure the way we started it, let's have fun! Am I right or what?\" \n\n\"Yeah, you right. Let's have fun.\" said Mark. \"There's something I've wanted to do for weeks. May I, Amy.\"\n\n\"Go for it, Mark\"\n\nMark slowly leaned over, took Amy in his arms and began to tickle her. She jumped, shrieking and laughing and began to tickle him back. The four of us wrestled around the bed grabbing and tickling each other until we were laughing hysterically.\n\n\"Okay, okay, okay. Enough!\" yelled Amy. \"Come here, Mark, we gonna have some big fun now! Lay down on your back!\"\n\nHe did as he was told. On her knees, Amy straddled his mouth so that her puss was just above his nose. \"Take a deep whiff!\" She motioned Deb over to her and positioned Deb up against her. Their tits and their vaginas mashed together and they hugged each other close. \"Ok, now lower down slowly!\"\n\n\"Oh, my God!\" At least I think that's what Mark said as he slurped on the two pussies over his mouth.\n\n\"I think he's dead and in heaven,\" I said. \"I want a turn, too!\"\n\nI leaned down and took his cock into my mouth. \"Hmm, somebody shaved himself recently.\" I began to suck on his knob and fondle his nuts. He was squirming in pleasure and panting in delight. The girls had their hands on each other's butts and were kissing. We went like this for about five minutes as the intensity rose.\n\n\"Come on, gimme a chance!\" I said.\n\nAmy and Deb rose up away from Mark as I took his place. Pussy juice was tripping onto me and it smelled oh, so fine. Immediately, Mark swallowed my dick and the girls lowered themselves onto me. \"Oh, wow\" came out muffled but damn, I was licking one long slit from asshole to asshole and back stopping only to swathe two clits. I was like a ravenous man, licking, slurping and sucking at this gourmet cunt feast. Mark was also doing an awesome job as my ass bounced pushing myself deeper as he sucked harder. Suddenly, Deb began to cream all over me, squirting her slippery shower. Her hand slipped down to Amy's clit hood and she diddled her until Amy, too, began to drown me. That was about it for me as I began to shoot my milk into Mark. He didn't swallow it though because as I began to settle down, he moved over to share it with the girls.\n\nAmy moved away and positioned her butt at Mark's cock. He sighted his target and pushed his way in. Deb and I moved around to stroke his ass and his nuts. We were all bouncing hard as he began to thrust deeply into Amy. \"Oh...oh...oh...Godyesssss.\" He shot his load into her bowels and stayed inside until it subsided and fell out followed by gobs of cum from her ass. He leaned down and licked his seed from her, cleaning her up.\n\nWe lay around dripping in sweat and smiling. \"That was amazing\" was the general opinion. We fell asleep on each other for several hours. Sometime in the night, they returned to their cabin but I never heard them as I was out cold.\n\nThe morning coffee was under threatening skies as we bid our farewells to George, Sarah and Annie. We were wearing our cowboy hats and Annie had to take one more shot. Annie promised to send us the proofs as soon as she developed them.\n\n\"Look,\" said George, \"we'll see you again soon. We'll be in Italy for about six weeks. I have a shoot in Berlin, Paris and London that will last a couple of weeks. Then we'll be back in L.A. so I can loop some dialogue for an upcoming Pixar animation. I'll call you when we return and email you in between. Let me know the schedule for the Food Pantry tour so I can join up and help out. Meanwhile, you take care, my friends. We'll see you soon. With hugs and kisses, we watched them drive off.\n\nWe packed up our stuff into Big Chocolate and called Ranger Williams to tell him that his cabins were empty. He wished us well and thanked us again for the concert. telling us that it was the highlight of the season and to look for some video on YouTube that one of the Rangers took.\n\nWe drove out down 191 heading toward Jackson Hole. After passing Yellowstone Lake, we were mesmerized by new vistas. Damn, this place has a lot of waterfalls! Travel was slow as we headed toward the south entrance from all the traffic and stopping for herds to cross but what the hell, it wasn't a very long drive to Jackson Hole and the airport was just off the highway.\n\n\"So what are your plans now, Davy?\"\n\n\"Gee, Laura, we're going to head down to Aspen and take some time off from the road. We have business to take care of and we both want to put down some roots for a while. I don't know how long a while but we kind of take it a day at a time. I know that I want to work on some new tunes and record them for a new collection, I also want to work on the older stuff with Shadow Morton so I imagine that I'll be spending some time in Malibu. And, oh yeah, I want to hook up with Los Lobos in Denver - what a great band...that's in a couple of weeks. I also want to see my daughter and my grandkids. So, we have a full plate before the Food Pantry tour starts up.\"\n\n\"We should be hearing from Graham Nash about that any day now,\" said Mark.\n\n\"Yup. Good. I want to work my schedule so I'm in Montauk in August for Buffett's Wounded Warriors thing. I also want to do some recording there as well.\"\n\n\"Are there any good studios out there?\"\n\n\"There's one place...it's a secret studio where McCartney, Joel, Simon, Sting and Buffett sometimes lay tracks. I know a shitload of great players out there, too.\"\n\n\"Do you have many songs for the new album,\" asked Laura.\n\n\"Oh yeah. I've been writing a lot of stuff in the last few months. I have a few on CD already. Amy? Can you give Laura one of those CDs, please. This stuff is not for publication, Laura. There are only a few copies of them, ok. I'm giving it to you to help you write your article. Do I have your word that you won't circulate them?\"\n\n\"Yes, of course, Davy. You have my word. I'll even sign something if you like.\"\n\n\"No need. To me, a person's word is bond.\"\n\n\"Off the record, I just want to say something to all of you. I've really enjoyed this trip. It was hardly work. I'm only sorry that you guys didn't invite me into your bedroom...I listened to you laughing last night and it sounded like you were all having such fun.\"\n\nWe all broke into laughter. Amy said that she wasn't aware of her desires but had we known, we would have offered an invitation.\n\n\"Well, I like to go both ways and it's easy to assume that you four have a very tight relationship. It kind of made me jealous some nights sleeping alone in the cabin. And, to be honest, it made me very horny. Between writing and masturbating, my fingers are sore!\"\n\nDeb and Amy looked at her and then crooked a finger toward the rear bedroom. Laura's eyes went as wide as saucers and followed them. Mark took the navigator's seat next to me.\n\n\"Go figure, Davy! I'm sure she won't be horny when she leaves that bedroom!\"\n\n\"I'm telling you, Mark. One thing I have learned since I started this trip is that nearly everyone is bisexual. Or maybe it's just something about Big Chocolate...\"\n\nMark smiled and shook his head. He then picked up the iPod and put some music on...New Orleans music...The Meters. Great driving stuff.\n\n\"I feel like a king, <br> 'Cause I just kissed my baby, <br> And money don't mean a thing to me, no, <br> 'Cause I just kissed my baby. <br> Feels so good, ha, <br> That I just kissed my baby. <br> Well, well, well I'm no fool, <br> 'Cause I just kissed by baby.\n\nWell, well, well, ya, <br> I know I can't go wrong, <br> All we ever do, ha, <br> Is decide to get along, yeah.\"\n\nYou could see the Tetons off in the distance and looking majestic. Mark and I shared a doober as we moved down the road, marveling at each new beautiful view before us. I checked my readings and was glad to see that we had plenty of fuel, enough to make it well past Jackson Hole.\n\n\"Little bitty boy, with a heart of steel, <br> You can't boogie now, but your sister sure will, <br> Feel good music, I've been told, <br> Good for your body, and it's good for your soul, <br> Gonna do it now.\n\nHey, hey, hey, hey, <br> Hey, Pocky Way, <br> Hey, hey, hey, <br> Hey, Pocky Way.\"\n\n\"Mark, you've got to do me a favor in New Orleans. I love that place. You've gotta have a Debris Po'Boy or a Ferdie Special at Mother's for me. Man, I can taste that now. Damn, that's good eatin'!\"\n\n\"Okay, I will. And I'll have some beignets, too. Twist my arm, why don't you?.\"\n\nThere was a lot of noise, mostly giggling and laughter, coming from the back bedroom. \"They must be showing off their double dildo to Laura.\"\n\n\"No, I think she's getting the strap-on treatment! She has a nice little body...looks kinda tight...I hope she can handle it.\"\n\n\"Something tells me she can.\"\n\nA rainstorm sprang out of nowhere as we crossed over Crawdad Creek. It slowed us up a bit as it drenched the road but it passed after about twenty minutes. As the Grand Tetons loomed closer, the sun was playing hide-and-seek, casting dramatic shadows across the snow-capped peaks.\n\nI heard the shower going so I knew that the girls had finished their fun. A few minutes later, the three of them walked out naked.\n\n\"Laura is now part of our extended family. We initiated her. And, she has some good news for you, Davy.\"\n\nLaura moved over to me and stroked my dick through my shorts. Her small breasts leaned in against my arm and I looked down at the landing strip that traveled from just below her navel to her sweet looking, puffy vagina. She licked my ear and said, \"I think I'm going to have to hit up Graydon for a trip to Aspen in a few weeks...you know, just to fill in some, uh, blanks.\"\n\nI smiled at the thought. \"That works for me, Laura,\" I cupped her pussy in my right hand. \"But right now, I think you deviates should get some clothes on. We're passing through the Grand Tetons and Jackson Hole is just beyond. But, before you do that, Laura, may I have your panties, please?\"\n\n\"My panties? Sure.\" She brought her panties to me and I raised them to my nose taking in her delectable scent. Then I passed them over to Mark who did the same. Ever polite, we both said \"thank you.\"\n\nThe girls went back to get dressed. Mark passed the joint my way and commented, \"...and you called them deviates?\" and we laughed.\n\nThe Grand Tetons were something awesome and it brought to mind images of The Misty Mountains from \"Lord Of The Rings.\" It seemed more mystical and ethereal than Yellowstone, if that could be possible. The reflection of the Tetons off Jackson Lake gave me shivers. I was surprised at the amount of snow on the cabins by Colter Bay. Each bend of the road brought gasps. We could have easily spend some time here.\n\nIt wasn't long before the exit for the airport came up. We'd made good time and Mark and Deb had about an hour before their flight. Laura had about two hours. We parked Big Chocolate and helped them with their luggage. Since Laura was going back to L.A. for a few days before heading to New York, Mark suggested she stay at their house. He gave her alarm instructions and gave her the harp to take back, too. While they waited, Mark and I took the opportunity to take Santo for a walk and to toke up once more. Mark started getting all soft on me about leaving but I shushed him, reminding him that we'd see each other again soon.\n\n\"Call us and keep us posted. Send us lots of emails.\" Lots of hugs, kisses and tears and they were gone, up the boarding ramp to their plane. We said our goodbyes to Laura and got back on the bus. There was a big truck stop nearby so I fueled up.\n\n\"Where to now, gorgeous?\"\n\n\"Aye, Captain My Captain. Stay on 191 through Rock Springs and then get on 430. We'll cross into Colorado near Dinosaur National Monument and then catch 318 East to 40 south to 64 to 13 into Aspen. Want to spend the night near Dinosaur?\"\n\n\"Sure.\"\n\n\"Good...'cause tomorrow, I want to stop at a magical place before we get to Aspen.\"\n\n\"Cool. I'm game. You can lead me anywhere baby. Listen, while I drive, why don't you practice your harp a little. I put on some good tunes and you can work out a while. How's that?\"\n\nI put on some easy stuff...Eagles, Jackson Browne, Geoff Muldaur, Linda Ronstadt, Bobby Charles and drove off south. Amy played for about a half hour and she was damn good. Like I said, a natural.\n\nAbout a hour later, we pulled into a KOA for the night. Tomorrow, we'd check out Dinosaur and Amy's 'magical place' before we landed in Aspen. We called Stevie and Sally to let them know our plans. Amy called her caretaker and asked him to prepare the house. We relaxed and looked at all the pictures we downloaded. We checked our email and YouTube. But we basically left everything for Aspen. Tonight, as we munched on sandwiches and chips, we snuggled and were very glad to be next to each other. Now this was paradise.\n\n----------------------------------------\n\nIn Chapter 15, Davy and Amy return to Aspen. There's much to do and lots of good music, good friends and good times ahead. Your humble narrator is going to take a break from the saga after the next installment but fear not, there's lots more to tell and I will continue it.\n\nThanks for your nice comments and encouragement to keep the story going. Please vote on how you like it. Any names and persons used in this story are purely coincidental, fictional, nonexistent and utterly intentional. All the lyrics are copyrighted, too. If you want more of the music, listen to \"The Ol' Hippie Show\"."
    ],
    "authorname": "oldhippie1949",
    "tags": [
        "bisexuality",
        "anal",
        "oral",
        "blowjob",
        "cunnilingus",
        "fellatio",
        "group sex",
        "swinging",
        "double penetration",
        "first time"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/davys-on-the-road-again-ch-14"
}