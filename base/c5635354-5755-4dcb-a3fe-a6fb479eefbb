{
    "title": "A Dragon's Tale Ch. 29",
    "pages": [
        "***I self-edit and admit editing isn't my greatest skill. I apologize in advance for anything I missed. ***\n\nCHAPTER 29:...nor iron bars a cage\n\n* * *\n\nLeaning on the Argo's railing and looking out over the verdant green hills lit by the late afternoon sun, Alana smiled as her heart grew lighter. Her husband and fellow wives had escaped and it seemed like they were safe in their escape. She still missed him terribly, but just knowing that he was okay and that she'd be seeing him soon made a huge difference. Her heart ached for him and for her best friend, who thankfully had finally married her husband.\n\nIt was about time.\n\nShe was hoping she might get to be present on the couple's wedding night, but knew that Rachel might not be comfortable with that. Even if she was, Ethan might want her to himself for a night. Every woman deserved a wedding night; she had certainly enjoyed hers. She resolved to fully enjoy the gorgeous Ivernian landscape before her.\n\nShe sighed contentedly as she gazed at it.\n\n\"I know what you mean.\" Beth said walking up to lean on the railing beside her. The lovely blonde was right next to her so they were gently touching; it was an affectionate move that the wood elf appreciated.\n\n\"I can't believe how pretty this land is.\" She said running her hands through her chocolate hair. \"I think I'll ask Ethan if we can all settle down here eventually.\"\n\nBeth frowned. \"I agree, but it's Lord Farbrottan's land.\"\n\nAlana let her shoulders slump. \"What's that expression that Ethan sometimes uses? 'Every paradise has its serpent' or something like that?\"\n\n\"Sounds right.\" The blonde nodded. \"I wouldn't mind moving here, and much of my father's southern border abuts Ivernia's northern one.\"\n\n\"Ivernia.\" The wood elf smiled. \"It's a pretty name for such pretty country.\"\n\n\"Agreed.\"\n\nThe wood elf looked down to see a bubbling brook feeding into a pond in the middle of a clump of trees. Nearby, there were cows grazing in a pasture and chickens running hither and thither foraging for bugs and other things. It was idyllic.\n\n\"You know, it had occurred to me many times that we could turn the Argo around and go back to Nalatia to wait until they've escaped.\" Beth said almost guiltily.\n\n\"It had occurred to me too, but...\" She sighed. \"As much as I want to see Ethan, this is what he asked us to do. He didn't make the suggestion, but he definitely wanted us to go help Selene and investigate why she's here. Until he tells me otherwise, that's what I'm going to do.\"\n\nBeth looked at her. \"How do I get to be like that?\"\n\n\"Like what?\"\n\n\"You're such a strong woman, but you're gentle too.\" The blonde replied. \"You're so competent and you're carrying on without Ethan here; I feel like I'd give anything to just to see him right now.\"\n\n\"I know how you feel.\" The wood elf admitted. \"But I think part of being a good wife is supporting your husband even when there's something else you'd rather do. We'll arrive at the inn in a few minutes, so it makes no sense to turn around now.\"\n\n\"I wish you weren't right; I miss him.\"\n\nAlana gave her an understanding nudge with her shoulder. \"So do I dear girl, so do I.\"\n\n* * *\n\n\"That's disgusting.\" Kendra heard herself say as she looked at the strange half-man, half dragon corpse. She was tempted to add that the sight was less nauseating than seeing Ethan be affectionate with his wives, but resisted.\n\n\"You'll get no argument here.\" Ethan replied as they surveyed the strange corpse before them.\n\n\"There's more.\" The dragon huntress said, nodding to a far corner of the room.\n\nOn the far side of this second room were about a half dozen other specimens similar to the one in the middle of the room. The one they'd seen first was the least draconic. The rest appeared to be in more advanced stages of transformation, but none was complete. They all looked like they had died in excruciating agony though. There was also a general trend. They were clearly getting more like dragon-like with each successive iteration.\n\n\"That shouldn't be possible.\" Rachel said, looking a bit green around the gills. \"Transfiguration is doable, but incredibly hard and no one does it on living creatures because it always kills the creature. Plus it takes a ton of mana. To transform a living being like this, and a man at that...\" She sucked in her breath through her teeth and shook her head.\n\nKendra felt a not insignificant amount of revulsion at the idea that someone was turning men into dragons. It was a perversion of everything that she held sacred, especially the dividing line between dragons and men; that at least should be inviolable.\n\n\"It looks like they were keeping a dragon here too.\" Ethan nodded towards a cage, around which appeared to be a few random scorch marks on the wooden walls.\n\n\"Yeah, 'were' is right.\" Rachel pointed to a rather large bloodstain inside the cage. It didn't look to be that old, but neither was it fresh and wet.\n\nKendra frowned.\n\nFor a long time, her instinctive reaction to seeing evidence of a dragon's demise had been to smile. This time though, she didn't. While she certainly wasn't sad about it, it didn't give her the sense of joy it once had.\n\nHmm.\n\nCurious.\n\n\"Come on, we can't stay here all day.\" Ethan finally said and turned to leave.\n\nKendra followed him out of the room, only realizing after she did that she appeared to have a real problem with following commands given by this particular dragon. That didn't sit well with her, especially since she could see their bond slowly growing in strength. That was despite the additional reinforcements that she'd added to her mental fortress to keep him out of her head.\n\nShe did what little she could to make her defenses even stronger.\n\n\"Okay, one more room.\" He said as he tried to open it. It was locked.\n\n\"Allow me.\" Kendra said while activating her strength enhancing vambraces. A few moments later, the lock gave. The action probably made her look super strong, but the lock was pretty flimsy. It was probably more to stop guards from snooping than to offer any real security.\n\nThe room was quite small and looked like it was used more for storage than anything else. It was nearly empty of contents except for...\n\nKendra's jaw dropped as her eyes widened.\n\nBehind her, Rachel gave a low whistle.\n\nThe dragon huntress couldn't believe her eyes and her mouth curved upwards into her first real smile since... since her last hug from Taloni.\n\nJackpot!\n\n* * *\n\nSelene sighed as she stood where the two roads met at the outpost. As usual, her boss had sent her outside to use her beauty to attract customers. It worked, at least according to Sarah. Apparently they'd had a few more people than normal stay at the inn since the Brazilian woman had started. Most wanted to pass right by without so much as looking at the inn, but the rest didn't take much convincing.\n\nShe sighed again.\n\nShe didn't like being a glorified lawn ornament and using her face and body to attract customers. A part of her felt dirty for doing so -- like she was barely better than a prostitute -- but it worked and she certainly wasn't doing anything sexual. She shook her head as a large shadow crossed the earth nearby. She looked up and her jaw dropped.\n\nIt was an airship.\n\nShe had heard Hailey describe them, but seeing one in person was just incredible. It was about one hundred feet long and sixteen feet wide. It had two masts; one above the hull and one below it. Both had large square sails that were currently being pulled up. There was a large triangular jib forward of the main sails, both top and bottom, and both of those were also being furled. Likewise, the gaff-rigged spanker sails -- both top and bottom -- were also being rolled. There was another set of sails -- top and bottom -- at the back too, but they seemed to function more as a sail-based 'rudder' than anything else.\n\nThe airship was sleek and looked fast too. It drifted over the outpost, eventually letting down an anchor to stop and hover overhead.\n\nAs she watched, she saw a familiar face peek over the railing of the airship; a face framed by chocolate brown hair and complimented by pointed ears.\n\nSelene's jaw dropped.\n\n* * *\n\n\"Uh, what's so surprising?\" Ethan asked, looking at the expression on Kendra and Rachel's faces.\n\n\"That's...\" Rachel glanced at the dragon huntress. \"Is that what I think it is?\"\n\n\"It is.\" Kendra nodded. \"She must've been storing it here while it cured; but it's clearly done.\"\n\n\"What's the big deal?\" Ethan asked. \"It's just an animal skin.\"\n\nIt was indeed just that. Held to a frame clearly intended for this purpose was an animal skin. It was held in many places why what looked like strong clothespins and stretched out on the frame. Just in front of it on the floor was a large leather bag that was filled with medium grey scales of some kind.\n\n\"It's not just any animal skin; that's dragon leather.\" The dragon huntress said confidently.\n\nHe grimaced. \"I guess we know what happened to the dragon that was in the other room then.\" As he looked at the skin, he realized that she was right and it could hardly be anything else; not with the wings and tail.\n\n\"Yeah.\" Kendra said absent-mindedly. \"I'm going to see if I can find a sack or something to carry it in.\"\n\n\"Why?\" He asked.\n\n\"Because this is dragon leather.\" She said like he was being stupid.\n\nShe did that a lot.\n\n\"I think she's right; we shouldn't leave this behind.\" Rachel said. \"Dragon leather is the best leather in existence for enchanting, and it's worth a fortune too.\"\n\n\"I've got no problem relieving Lady Ekthros of it then.\" He grinned. \"So, should we take those dragon scales as well?\"\n\n\"Oh Illuminar, I didn't see...\" Kendra breathed, then she frowned slightly and gave him a strange look.\n\n\"What?\"\n\n\"Finding this can't be...\" She cocked her head to one side. \"Rachel said that Lady Ekthros stored things throughout the Ten Kingdoms, but to find this with so little protection? Do you realize how much all this is worth?\"\n\n\"No idea.\" He shrugged.\n\n\"Master, this is more wealth than I've ever seen in my life, and I grew up in a gold mine.\" Taloni was right behind him, leaning against him for either comfort or closeness; he wasn't sure which.\n\n\"Armor.\" Rachel suddenly interjected, then looked at him. \"Ethan, it looks like this dragon was slightly larger than you are, meaning this is enough dragon leather to make you a full suit of armor.\"\n\n\"I could certainly use some.\" He said, thinking back to the various fights in which he'd been injured, which was nearly all of them. \"What would we do with the scales though?\"\n\n\"Weapons.\" Kendra replied without hesitation. \"Dragon steel is naturally stronger and harder than regular steel, and a bit lighter too. When properly forged, it can make a very potent blade. And then it can be enchanted...\"\n\n\"Okay, I'll carry the scales.\" Ethan said. \"Who wants to get the hide?\"\n\nA minute later, Kendra found a sack, Rachel carefully folded the dragon leather into it, and then the mage slung it over her shoulder. Ethan closed the leather satchel of dragon scales and got a firm grip on it, and they were ready to go.\n\nUnfortunately, he still hadn't seen the remains of his spear.\n\nHe still couldn't feel it when he tried to call it, so he assumed they must have destroyed it, even despite the self-repairing enchantment that Alana had put on it. He supposed that wasn't much of a problem for an arch mage though. He did wonder why they hadn't destroyed his war hammer too, but guessed that maybe it was because he'd used it to channel lightning. If someone wanted to reverse engineer how he did it, it would probably be handy to have around.\n\nNot long after, they found the exit, he activated his disguise gem, and they all walked out onto the streets of Nalatia.\n\nOddly, their prison hadn't been tucked away into a remote corner of the city. They were clearly in a busier region and it looked like a middle-class business district made of sophisticated tree houses. He assumed they must've knocked out the dragon and carried him in inside a crate of some kind, otherwise someone would've seen him.\n\n\"Should we alert the guards?\" He thought aloud as he considered what was in the building.\n\n\"Make sure I'm gone first.\" Kendra rolled her eyes. \"You want to get caught explaining the dead men and half-transfigured dragons?\"\n\nRachel gave Kendra a look, but spoke to Ethan. \"She's probably right.\"\n\n\"Okay, then let's get going.\" He nodded.\n\n\"Well, it's been fun.\" Kendra said dryly. \"See you all later.\"\n\n\"You're leaving?\" Taloni asked looking heartbroken.\n\n\"I came here to apologize, which I did.\" She shrugged looking determinedly casual. \"I do have my own life to live you know.\"\n\nThe Fey frowned, then eyed the dragon huntress in a kind and sympathetic but piercing way. \"Kendra, is that the real reason, or do you just want to get away from Ethan because you feel guilty that you attacked him so many times?\"\n\nThat question was followed by an awkward silence.\n\nVery awkward.\n\n\"You don't have to feel guilty.\" Taloni continued. \"He forgave you, and so he won't make you feel bad. Right master?\" She looked at him.\n\n\"I won't.\" He agreed, not really having room to say anything else.\n\n\"You don't have to go, you can stay with us.\" The Fey continued hopefully.\n\nKendra seemed to mull that over for several seconds before shaking her head. \"No, not now. I...\" She hesitated. \"Well, you have your path and I have mine.\"\n\nTaloni's shoulders slumped, but she nodded. \"Okay.\"\n\n\"Hey, I'll walk with you to your airship.\" Kendra said to the Fey.\n\n\"Um, the Argo isn't here at Nalatia anymore.\" Ethan said.\n\n\"What?\" Rachel and Kendra said at the same time.\n\nHe explained about Selene, and then gave Rachel an apologetic look. \"Sorry, we all talked about it telepathically so the guards wouldn't hear. Now that your collar is off, you should definitely join the group.\"\n\nThe redhead gave him a small smile, and something about her seemed to change just slightly. It was like she glowed all of a sudden. There was a level of calm happiness about her that wasn't a 'jumping for joy' kind, but instead was much deeper. It was almost like the 'newlywed glow' or a newly pregnant mother. All of a sudden something about her seemed happier; more at peace.\n\n\"I'd like that.\" She smiled.\n\nShe had a great smile.\n\n\"Speaking of collars.\" Kendra gave him a suspicious look. \"How in Saidow's lair did you get the mana to enchant your claw to be sharp enough to cut that collar off?\"\n\nHe grinned, slightly relishing the fact that she didn't know and was annoyed about it.\n\n\"Magic.\" He winked.\n\nShe didn't look amused. \"That shouldn't be possible, and Lady Ekthros isn't stupid enough to keep a dragon near any sizeable amount of gold. How'd you do it?\"\n\nHe looked at for a moment, considering if he really trusted her enough to reveal how. After a moment, he shook his head. \"Kendra, you've been very helpful since Lord Delmar attacked, but I still would rather not say. To be blunt, I'm not sure I trust you enough. You wouldn't be willing to reveal your best dragon hunting tips and how to beat them, would you?\"\n\nShe set her jaw, but nodded. \"That's fair.\"\n\n\"When is the Argo coming back?\" Rachel asked.\n\n\"They're about four days away.\" He replied. \"They just found Selene, and will probably say hi after Beth makes sure everything is safe by scouting on the Astral Plane.\"\n\nHe could feel a primal part of him bristling at their distance. He hadn't felt the dragon this strongly is some time, and it seemed to be very upset that his wives were so far away. He was too, but for different reasons. He could feel some primitive, possessive part of him seething at their distance; his property shouldn't travel so far from him. He shook his head slightly, not liking the dragon's thoughts or strong presence coming back. He pushed the dragon away and into the back of his mind.\n\nIt did not like that.\n\n\"Kendra, would you be willing to fly us to the Argo in your airship?\" Taloni asked sweetly.\n\n\"You've seen my airship, there isn't a lot of room for four people.\" She shook her head. \"Besides, I couldn't sleep wink with a dragon nearby.\"\n\nShe wasn't wrong about the size. If Ethan remembered the size of her airship correctly, fitting all four of them on it would be uncomfortably tight. Doable, but tight.\n\n\"What's really wrong Kendra?\" Taloni asked.\n\nThe dragon huntresses glanced at Ethan momentarily and then hesitated for several seconds before replying. When she did, she didn't meet anyone's eye. \"It's not that complicated. I have red in my ledger and I don't know how to wipe it out.\"\n\nRachel gave her a sympathetic smile. \"Speaking as someone who had previously accrued a lot of red in the 'Ethan column' of my ledger, you'll get plenty of chances to clear the red if you hang around him long enough.\"\n\n\"And I'll owe you one if you give us a ride.\" Ethan added. \"I miss my wives and don't want to wait four whole days to see them again; you giving us a lift will cut that time in half.\"\n\n\"You wouldn't owe me anything, I would just owe you one less.\" Kendra corrected, then cocked her head to one side and added. \"You really want to see them that much?\"\n\n\"I do.\"\n\nShe hesitated for several seconds as she considered. \"Okay, I'll give you a ride; but then I'm gone.\"\n\nThe burst of happiness from Taloni was almost palpable.\n\n* * *\n\nSelene had watched the airship hover above the outpost for almost ten minutes before someone started down the rope ladder, which had been hanging down nearly the entire time. It was the chocolate-haired girl in the green dress, followed shortly thereafter by a blonde girl in a royal blue dress. She recognized them both, and simply couldn't believe her eyes.\n\nHow had they found her?\n\nTellingly, she didn't see the dragon man -- Ethan -- around anywhere. For some reason, that struck her as strange. She wasn't sure she wanted to see him again, given how their last encounter had gone. However, she'd be lying if she said that she hadn't thought about it once or twice... and maybe dreamt about it too... and maybe used it as mental fuel for a few 'stress relief' sessions.\n\nThe two women climbed all the way down the ladder and then started walking towards her, both looking slightly nervous.\n\n\"Hi.\" Selene said when they were within earshot.\n\n\"Hi again.\" The one with the pointed ears replied. What was her name again? Ashley? Anna? Aleah? Something like that.\n\n\"What brings you here?\" The ex-FBI agent asked.\n\n\"You actually.\" The blonde replied. \"Do you remember us?\"\n\n\"You're hard to forget. Is that dragon fellow with you?\"\n\nThe brunette shook her head. \"No, he was... waylaid. We're going to meet him next.\" An undeniably happy smile crossed her face at that.\n\n\"So, you're here for me then?\" She said, casually resting her hand on the leather pouch that contained the Glock 26, just in case. She didn't think they would hurt her, but better safe than sorry.\n\nThe blond nodded. \"A little birdie told us you were in trouble and might need some help.\"\n\n\"That was you?\"\n\n\"No, it was a friend.\" The wood elf replied. \"He sent us a letter saying that you might need some help.\"\n\nThe Brazilian woman tapped her finger on her pouch. \"So, do you do this often? Ride to help people you barely know and who have been... adversarial in the past?\"\n\n\"Ethan does yeah.\" The blonde rolled her eyes. \"I love that about him, but I hate when it means we're apart.\"\n\nSelene made a thoughtful sound.\n\n\"Are you in any trouble here?\" The wood elf asked.\n\n\"It depends on what you mean by trouble.\" The Brazilian woman replied evenly, not sure how much to give away.\n\n\"Does stuck on another world with no way home count?\" The wood elf asked with a grin.\n\n\"How did you know?\"\n\n\"Our friend has had someone watching that portal for years; he had some people keep an eye on you using birds.\"",
        "\"Talking birds?\"\n\nThe blonde laughed. \"No silly, birds can't talk. But some mages can see through other animal's eyes.\"\n\n\"Ah.\"\n\nAlana nodded. \"Long story short, Ethan wants to know how people from his world are here, and if they're a threat. He's a bit worried about what that could mean.\"\n\n\"He's not the only one.\" She agreed. \"The men who sent me here aren't exactly good people.\"\n\n\"Let me guess.\" The brunette offered, and she shuddered slightly as she spoke. \"One of them was thin, wiry, creepy, and had black eyes?\"\n\n\"You met him?\"\n\n\"Sort of; he tried to kill my husband.\" She said setting her jaw. \"He's a necromancer, and they are bad news.\"\n\n\"Necromancers are bad news?\" Selene frowned. \"But didn't you use some kind of 'death magic' to open that portal?\"\n\n\"We would never!\" The blonde said vehemently. Honestly, she looked a little offended at the suggestion.\n\n\"Never ever.\" The brunette nodded with conviction.\n\n\"Then how do portals work?\" The ex-FBI agent asked.\n\nBeth and Alana looked at each other for a moment and then the brunette spoke. \"Tell you what, we'll give you the short version of how we came to be on Earth, and then you can give us the short version of how you came to the ten Kingdoms. Deal?\"\n\nShe nodded. \"Deal.\"\n\n* * *\n\nKendra found it very interesting walking behind Ethan, Rachel, and Taloni as they headed towards the Nalatia docks. They weren't being overtly affectionate, but there was something about the way they looked at each other and how they walked closely together that was both endearing and nauseating. Endearing because she wanted that same thing someday; nauseating because she occasionally imagined doing that with him and it made her want to puke.\n\nIt took half the walk for her to realize that she was walking behind him. He had voluntarily turned his back to her and didn't seem concerned at all that she might try something. For some reason, that seemed significant. She wouldn't try anything of course, but mostly because of how Taloni would feel if something happened to him.\n\nBut even as she thought that, she knew it wasn't just because of Taloni.\n\nNot anymore.\n\nShe wouldn't do anything to Ethan because he was a good dragon. Those two words 'good dragon' didn't seem like they belonged together, but apparently they could. Having confirmed his story with everyone she could think of, it seemed like him telling two of his wives to go help someone -- even when he hated being away from them -- was very in character for the dragon. She wasn't sure why, but for some reason she wasn't surprised at all. It was strange that she wasn't surprised by a dragon being selfless though.\n\nShe wasn't sure what to make of that.\n\nShe was so deep in thought that she nearly walked into them when they stopped.\n\nShe looked around and realized that there were a lot more guards around the docks than when she had arrived. When she'd arrived, there were a few scattered throughout just to remind people to behave. Now, that number had at least doubled; possibly tripled. A cluster of three guards had approached their group, barring their way as the men looked back and forth between Taloni and Rachel, as if trying to decide something.\n\nFinally, the lead guard spoke to the redhead, as the Fey was hiding behind her husband slightly. \"Hail, dishonored companion of the honored dragon.\"\n\nGiven the guards' job, it wasn't considered improper for them to address a dishonored person. However, proper wood elven etiquette dictated that the guards didn't confer honor where none was intended, hence him calling Rachel dishonored.\n\nEthan -- whose disguise gem was still active -- growled low in his throat at the word 'dishonored'.\n\n\"It's okay.\" Rachel said gently touching his arm.\n\nThe lead guard eyed the disguised dragon for a moment, then the way Taloni was clinging to him, then the gentle but affectionate way Rachel touched his arm. The lead guard raised one hand and moved through the air as if feeling for something he couldn't see.\n\nMoments later, he addressed Ethan with a low bow. \"I beg your pardon, but would you be the honored dragon altering his appearance with a disguise gem?\"\n\nHis disguise gem clicked off and he rose to his full height, towering over the shorter wood elven guards, his sharp teeth were visible and his claws partially slid from their sheaths. \"Speak to Rachel that way again and I'll have your tongue.\" He growled.\n\nThe guards took an involuntary step back.\n\nSeveral others came running up.\n\n\"Honored dragon.\" One of them said. \"The King requires your presence. He has instructed us to scour this fair city in search of you.\"\n\nEthan didn't looked pleased. In fact, there was more dragon about him than Kendra had usually seen outside of battle. \"He should've instructed you to treat my wives better.\" He growled at the newcomers too, then his face twisted into a mask of devious malevolence. \"When you dishonor my wives, you dishonor me.\"\n\nThat had an effect.\n\nAs one, the guards eye's flicked down just slightly, not meeting his. They hadn't dropped their guard in the slightest, but now they looked at his chest not his eyes.\n\nHe had shamed them.\n\nShe wasn't sure if he was being incredibly clever and had good political instincts, or merely got lucky; but that was a masterstroke. Word of this would spread through the guards like wildfire. By the end of the day, not one guard in Nalatia would dare to speak so much as a disparaging comment about his wives. She imagined it would filter up to the nobles shortly thereafter. That was how this honor cultures worked; everything important was said behind the scenes, so everyone knew what was expected in public...\n\n...but he had called them out publicly.\n\nNo one did that.\n\nWord of his bold, brazen words would spread, ensuring that no one said anything even remotely disparaging about Ethan's wives in his presence again for fear of being called out like the guards had been. The nobles still wouldn't speak to them directly or use their names, but no one would even hint that they were dishonored again. Not in Ethan's presence anyway. Again, she wasn't sure if it was good political instincts or simply dumb luck.\n\n\"Our most humble apologies honored dragon.\" The lead guard said with a deep and remorseful bow. \"It will not happen again.\"\n\n\"I'm not the only one who deserves an apology.\" Ethan pressed, his draconic body language making it clear this this was not optional.\n\nThe guard gulped, then turned to Rachel. \"My deepest apologies, companion of the honored dragon; it shall not happen again.\"\n\nThe dragon let out another low growl before apparently deeming that acceptable, then he stalked forward.\n\nNone impeded his progress.\n\nHowever, half a dozen of them did fall into step behind him, fanning out in what was undeniably a protective fashion around the group, including herself. After several steps, he glanced behind him, apparently noticing this.\n\n\"What are you doing?\" He growled.\n\n\"Apologies honored dragon.\" The lead guard said with a bow. \"The King has instructed us to provide you with a personal guard to protect you once you were found. Where you go, we go. Where you stay, we will stay. Your enemies shall be our enemies, and it would be our honor to lay down our lives for the revered prophet of Illuminar -- blessed be He.\"\n\n\"I'm not...\" Ethan sighed, then stopped.\n\nKendra could tell that Ethan was back. All hint of draconic mannerisms were gone, leaving the man clad in a dragon's body behind. It was strange to see how he could go from one to the other so quickly. She got the distinct impression that his dragon side being so prominent was new. He hadn't seemed to let out his dragon side as much before.\n\n\"Thank you.\" He finally said in response. \"I appreciate it.\"\n\nKendra noticed Rachel give him a little nudge and then whispered something in his ear; apparently she hadn't linked up to him telepathically yet.\n\nEthan nodded then turned to the guards. \"I'm honored to have your protection.\" He said with a respectful bow of his head.\n\nShe could almost see the guards' hearts swell as they stood almost imperceptibly straighter. \"Should we take you to the King?\"\n\n\"No.\" He replied. \"I have a pressing engagement elsewhere.\"\n\nThe dragon huntress resisted the urge to chuckle. The guards didn't seem to know what to do with that statement.\n\n\"Honored dragon--\" The lead guard said, but didn't seem to know how to finish the sentence. \"The King was most distraught by your disappearance and he urgently requires your presence.\"\n\n\"I will be leaving Nalatia, but I can return in less than a week.\" He replied. Taloni gave him a look that Kendra recognized as more telepathic talking, and then he added. \"But I would be honored if you would escort me to the airship.\"\n\nThe guards looked back and forth at each other for several seconds, clearly unsure what to do. Finally the lead guard nodded. \"We shall inform the King of your departure and guard you until you depart.\"\n\n* * *\n\nAlana carefully watched Selene as she told her story, looking for any hint that she was lying. She wasn't an expert at discerning honesty, but her story did seem to have the ring of truth. Nothing about her expression or body language made her seem dishonest either. Unsure and cautious yes, but not dishonest. Beth had run around the inn in spirit form before they had left the Argo and she saw nothing out of place, except perhaps a sword being stored in a tiny bedroom.\n\n\"Ethan will want to hear this story, and from your own lips.\" She said when the ex-FBI agent had finished. \"We came here to offer you a ride; an escape if you need it. Plus, we do have a portal that can return you to Earth if you come with us. It might be some time before we can take you to it though.\"\n\n\"Thank you, but can you wait until later tonight? I hate to quit in the middle of a shift.\" She replied. \"Plus, I'd like to say goodbye to a friend before I leave.\"\n\n\"We understand that.\" Beth replied with a smile.\n\n\"We'll be on the airship.\" Alana said. \"Just climb the ladder when you're ready to leave.\"\n\nSelene nodded thoughtfully, then got a smile. \"Actually, do you want to come into the inn for a bit? I know someone who would be very happy to meet you.\"\n\nIntrigued, Alana and Beth both nodded.\n\n* * *\n\nSarah leaned down to inspect her newest herb plant, hoping to make the smallest possible prune. She'd been hoping it would perk up with the recent rain, but her newest addition to her garden was very small and weak, and was growing faster than was healthy.\n\n\"I'm sorry this will hurt, but it will be best for you in the long run.\" She whispered to the tiny plant as she got closer with her little scissors. She made the smallest possible snip she could and caught the fallen sprig of the plant carefully.\n\n\"There, now you should do better.\" She smiled. She didn't much like pruning, but knew the plant would struggle and might not survive if she didn't.\n\nShe then looked up into the sky. \"Dear Illuminar -- blessed be you -- please help this little plant to grow healthy and strong, and please make me a good caretaker for it.\" She smiled, then her expression fell slightly as she added. \"And please make me good.\"\n\nShe crawled out from under the little cage she'd made to protect her plants from the various animals nearby and then took a short walk to where she knew there was a rabbit hole. She set the newly-pruned sprig of the plant just in front of the rabbit hole and then walked several steps away, waiting.\n\nIt wasn't long before the little rabbit poked her head up.\n\n\"I brought you something for your babies.\" Sarah said.\n\nThe rabbit's ears perked up, but it didn't run. It sniffed the air and took a small step forward to grab the little sprig and then disappeared again. The innkeeper's daughter smiled, happy that her sprig would be feeding the rabbit's very cute babies. She looked down at her own stomach, wondering what it would be like to carry babies of her own.\n\nShe sighed, supposing that it wouldn't be long.\n\nRindrin had been clear that he wanted to have children. She wanted them too, but didn't think he was likely to be a very tender lover. He was a good man and honest. No one had ever accused him of being dishonest and everyone had a high opinion of his character. He might be gruff, and harsh, and a little insensitive, and he was mostly marrying her so she could have his children, but she supposed she would never be able to marry better and should try to be happy with him.\n\nShe stood and started walking back to the inn.\n\nThe sun was getting lower and she'd need to start dinner soon. Her father had sent Selene out to attract new customers, and she wished she was beautiful enough to do that. She'd always wanted to be.\n\nShe retreated into her head as she walked, imagining that she was very beautiful and perhaps the dragon -- a real prophet of Illuminar -- would pass through their little outpost. He would see her, and rescue her from her problem. She daydreamed that he would be so entranced by her beauty that he would want to marry her. He would be such a good man, and she would do everything she could to be a good wife to him. Further, in her fantasy she would get along so perfectly with his other wives that they wouldn't even be mean to her. They might even be nice to her occasionally; even as nice to her as Selene was all the time.\n\nShe sighed.\n\nThat would be a perfect life.\n\nIt was a pleasant fantasy that she often indulged in of late, but she wouldn't be able to after her wedding. Doing so wouldn't be fair to Rindrin.\n\n\"Sarah!\" Selene's pretty voice called loudly from the inn. She was so beautiful and had a pretty voice. \"Sarah, there's some people here I think you'll want to meet!\"\n\n\"Coming!\" She called back, quickening her pace.\n\nAs she cleared the woods, she noticed a sleek airship anchored just over the town. It had happened before, but rarely more than once or twice a year. Mostly it happened because some traveling merchants needed something fixed by the blacksmith.\n\nSelene was standing at the corner of the inn with two women next to her, both of which whom looked slightly confused. One was wood elf with chocolate brown hair and a green dress, the other was a young blonde with fantastically long legs and a pretty royal blue dress.\n\nSarah broke into a smile as she walked closer. \"You're both so pretty.\" She gushed, wishing she could be that pretty.\n\n\"Thank you.\" The elf said, looking pleased but slightly embarrassed.\n\n\"Aww, thanks.\" The blonde said, looking much the same way.\n\n\"Sarah, I thought you'd really like to meet these two women; their names are Alana and Beth...\" Selene indicated each in turn.\n\nIt took a moment for the girl's brain to catch up to what she'd just heard and seen. A wood elf in a green dress... a sleek airship overhead... and the latest rumors from Nalatia said the dragon had a wife who was blonde and wore a royal blue dress...\n\nShe inhaled sharply and covered her mouth.\n\n\"... Alana and Beth Ejder.\" Selene finished her sentence with an anticipatory smile.\n\n\"You... you're...\" Sarah's brain failed her. She would've wanted to kick herself for freezing up so much if her mind was working at normal speed. Right now, it seemed to have frozen slightly. Was she actually meeting... Were they actually... in her outpost...?\n\n\"Wow.\" She finally got out.\n\nSelene chuckled and turned to the dragon's wives. \"She's very careful to keep up on all the local gossip about Ethan.\"\n\n\"There's that much gossip about him?\" Alana asked seeming surprised\n\nSelene nodded. \"I was surprised too, but half the people who come through here either have news about him or ask about news of him. He seems to be a local folk hero.\"\n\n\"Is he...?\" Sarah flicked her eyes up to the airship floating overhead.\n\n\"No, he's... elsewhere.\" Beth replied.\n\n\"Oh.\" Sarah felt her heart sink just a hair, but still couldn't believe she was actually talking to the two of the dragon's wives.\n\n\"So, what do the stories say?\" The blonde asked, and the innkeeper's daughter got the sense she was a curious person.\n\n\"That he's amazing!\" Sarah exclaimed. \"He fought over a hundred men in The Arena and-- well, you must know.\"\n\nThe wood elf nodded, exhaling slowly. \"I won't ever forget. I think I aged fifty years that day.\"\n\n\"Oh, right; he's your husband and I didn't think...\" She said mentally kicking herself.\n\n\"It's okay.\" Beth chuckled.\n\n\"You're both so nice, and so pretty.\" The innkeeper's daughter said. She'd never imagined in her wildest dreams the dragon's wives would be this lovely.\n\nBeth smiled. \"You remind me a certain Fey girl I know; so sweet you'd melt if you got wet.\"\n\n\"She does indeed.\" Alana nodded.\n\nSelene and Sarah looked at them quizzically.\n\n\"His third wife, Taloni.\" Alana explained. \"She's super nice and sweet. You remind me of her.\" She finished nodding to Sarah.\n\n\"I do?\" She beamed.\n\n\"You do.\" The blonde replied.\n\n\"Let me make dinner for you!\" Sarah exclaimed before she could stop herself.\n\n\"Uh...\" Alana hesitated.\n\n\"I mean, you don't have to.\" Sarah said feeling slightly bashful. \"But you've done so much for this land already, please let me say 'thank you' for all the people you've helped, and all the people you've given hope.\"\n\n\"Um, okay.\" The wood elf replied, looking slightly sheepish but very pleased.\n\n\"We would be honored.\" The blonde added, her expression much like the brunette's.\n\n\"I need to stay until after dinner anyway.\" Selene said. I can't quit a job in the middle of a shift.\"\n\n\"And I'll put out the good wine.\" Sarah continued, excited to be able to do something for the dragon's wives. They were so nice; nicer than she had imagined they would be. She was slightly sad that her fantasy now seemed even more impossible though. After all, why would a man ever be interested in her when he had such lovely women already?\n\nBeth nudged Alana at the mention of wine.\n\n\"I'll pass on the wine, but thank you very much.\" The wood elf said.\n\n\"Oh. Okay.\" The girl nodded, not sure why.\n\nAt her expression, the wood elf leaned in and whispered. \"Can you keep a secret?\"\n\nShe nodded vigorously.\n\nThe dragon's lovely first wife put her hand over her stomach. \"There's a good reason I haven't been drinking much wine these days...\"\n\nSarah covered her mouth with her hand and nearly jumped for joy.\n\n* * *\n\n\"This is going to be tight.\" Ethan mused as he looked at Kendra's airship. He'd thought of it as 'canoe-sized' and he wasn't far off. The four of them could fit, but again it would be tight. If two laid down aft of the mast and two fore of the mast, they could probably even sleep laying down. The airship certainly wasn't wide enough to allow anything else.\n\n\"You'll be fine.\" Kendra said hopping in.\n\nHer mood and expression wasn't exactly unfriendly, but he wouldn't call it friendly either. She was aloof, but not biting anymore. He supposed that was something at least. The dragon huntress rearranged several things to make four places to sit and stowed the sack of dragon skin and the satchel of dragon scales. It would be tight, but it would work. By leaning back, those places to sit could be used to sleep in too.\n\nWhen she was done, he, Taloni, and Rachel followed her onto the airship, sitting where she'd made room. His Fey bride of course sat next to Kendra, while the beautiful redhead sat next to him.\n\n\"Honored dragon.\" The lead guard said. \"We shall await your return here.\"\n\n\"Actually, I'll be coming back on the Argo.\"\n\n\"Then we shall inform the dock master and keep your birth open, or open it if it's occupied.\" He said with a bow. \"You may use the same flag of passage so nothing need delay your return.\"\n\n\"Thank you, you... uh, do me great honor.\" He said, not sure exactly how to phrase it.\n\nThe guard bowed low.\n\n\"We're off then.\" Kendra said, and the ship started floating upwards. He imagined it might rise much faster without the three extra people it contained.",
        "The Dragon huntress didn't say a word as she piloted the airship upwards and aimed it towards their destination. He'd done his best to communicate the location based on directions previously relayed from Anthiel through Alana and Beth. Kendra knew the area well enough that she didn't need anything more to get them aimed in the right direction.\n\nBefore long, Kendra had deployed the sails and they were off.\n\nAs they sailed away, Taloni breathed a huge sigh of relief. \"Please, let's never get captured again.\"\n\n\"Hear, hear.\" Ethan agreed. \"Though, it did give us some serious loot. I'm just surprised there wasn't a boss at the end of that dungeon.\"\n\nEveryone stared.\n\n\"It's a video game thing; never mind.\" He said. He sometimes missed Hailey, who would get all his Earth references.\n\nRachel made an amused noise, then gently bumped him with her elbow. \"It's almost like a Sydrusian when you're playing a game of finescharwtz.\"\n\n\"Huh.\" He said as his two wives started laughing. Even Kendra cracked a smile.\n\n\"I have no idea what any of that meant.\" He admitted.\n\n\"That's how we often feel.\" Taloni said through her laughter.\n\n\"Fair point.\" He chuckled.\n\n* * *\n\nBeth thought the food was really quite good. She was half-expecting some kind of gruel that she would have to choke down politely, but quite the opposite was the case. While the stew wasn't the best she'd ever had -- her father's cook was amazing -- it was pretty close. She would've never guessed that such high quality cuisine would be found in a small outpost like this.\n\n\"Is it good?\" The innkeeper's daughter asked a few minutes after they'd been served.\n\n\"It's delicious!\" Alana said. \"The food on the Argo is decent, but this is something else.\"\n\nThe girl beamed.\n\n\"How did you season it?\" Beth asked, her curiosity getting the best of her.\n\nThey talked about spices for a few minutes before the girl's father came up looking grumpy. \"Damnit girl, not only are sitting with guests, but you're serving ones who haven't paid and we can't afford that.\" He turned to Alana and Beth. \"You're freeloading there. So I'm gonna throw you out unless you cough up some coin.\"\n\n\"Father, these are--\" Sarah began, but he cut her off.\n\n\"Two more people who took advantage of you.\" He said shaking his head. \"You can't let people take advantage of you like that.\"\n\n\"Actually, she wanted to offer us a meal to thank us and was being incredibly sweet.\" Alana interjected cooly.\n\n\"Thank you for what?\" The innkeeper scoffed.\n\n\"My name is Alana Ejder, called dragon-bride.\" She said both proudly and icily.\n\nHe blinked. \"What?\"\n\n\"You heard her.\" Beth said, then added. \"And I am Elizabeth Ejder, daughter of Lord Borden and wife of Ethan Ejder; the dragon who's currently known as a prophet of Illuminar.\"\n\nThe innkeeper scoffed and then turned to Sarah. \"You see girl, people will spin all sorts of stories and you can't just believe everything you hear.\"\n\n\"She didn't.\" Selene interjected. \"I've met the dragon before and these two are indeed his wives.\"\n\nThe innkeeper's tone changed instantly. \"I'm so sorry M'ladies; I had no idea. Any Lord's daughter is welcome here, and so are the wives of a prophet. Eat as much as you like; it's on the house.\"\n\n\"Excuse me miss.\" A man said from a nearby table. \"Did you say you are wed to the dragon? Did you mean the dragon who fought in the Arena? Who wielded lightning and raised the dead?\"\n\n\"I did.\"\n\n\"Well met good lady.\" The man stood, a wide smile breaking out as he bowed to her. \"Your husband is... Well, it's good to hear of a prophet of Illuminar in these dark times. I'd like to buy you a drink.\"\n\n\"Wait, did you say those two there are wives of the dragon?\" Someone called from a further table.\n\n\"I did good man.\" The first man replied.\n\nThere were half a dozen men in the inn, and all stood up and came over to them almost immediately. They were then bombarded with questions about everything under the sun that pertained to the dragon. Every single one of them seemed genuinely interested and grateful for the dragon, despite him never having visited Ivernia.\n\nIt was a strange experience, but Beth didn't exactly mind.\n\n* * *\n\nEthan yawned as the night grew darker and the stars came out in full force. It was a beautiful night and not too cold. Rachel had been sitting next to him and just gently leaning up against him. She seemed in an odd mood and wasn't very talkative, but was clearly enjoying being close to him. Every once in a while she would look at him with her big blue eyes. Unlike most of the time he'd known her, there was some vulnerability in her eyes when she did. It seemed like she'd let her walls down a bit around him.\n\nIt was good to see.\n\n\"What's up?\" He asked as she did this again.\n\nShe made a thoughtful sound, then rested her head on his shoulder. \"Nothing much, I just...\" She looked at him again. \"I'm really glad we're bonded.\"\n\n\"Really?\"\n\n\"Yeah.\" She said contentedly, then rested her head on his shoulder again.\n\n\"Me too.\" He touched the top of her head with his own head and sighed contentedly. He checked their bond and he could finally feel her a bit. Not as clearly as his other wives of course because they'd only bonded recently, but he could finally feel her.\n\nHe sighed contentedly.\n\nNot long after he started to get hungry and Kendra pulled out some dried food. Mostly it was some kind of jerky, dried fruit, and nuts. The jerky had a bit of flavor, but everything was a bit bland. It was filling enough though. Everyone mostly ate in silence, which was unusual for them. On the Argo, there was plenty of talking and laughing as they ate. He supposed the relative silence now might be because of Kendra, but wasn't sure that was the real reason.\n\nThey all sat mostly silently after dinner too.\n\n\"Um, Rachel, can I talk to you?\" Taloni finally asked.\n\n\"Sure.\" The redhead replied.\n\nThe Fey turned to Ethan and Kendra. \"Would you mind if I switched places with Ethan?\"\n\nThe dragon huntress frowned; The Fey doing so would put Ethan and Kendra right next to each other.\n\n\"Please?\" Taloni asked again, her wings fluttering slightly as she did so.\n\n\"Okay.\" Kendra nodded.\n\nThe dragon and the Fey switched places, and he found himself standing over the dragon huntress for a moment.\n\n\"Do you mind?\" He indicated the space next to her.\n\nShe casually rested her hand on the pommel of her sword. \"Be my guest.\"\n\nHe sat down as she scooched as far away from him as the limited space would allow.\n\nIt was awkward.\n\nVery awkward.\n\nHe thought back to their last conversation on an airship and figured he shouldn't be surprised. He shrugged and resolved not to let it bother him. On the other side of the airship, Taloni and Rachel were whispering away. He considered asking about what, but figured he'd let them talk. They both glanced over at him occasionally before looking away again.\n\nEventually, he could see Taloni's eyes begin to droop. She laid down and Rachel joined her as they continued their whispered conversation until he heard both of their breathing patterns change as they fell asleep.\n\n\"She did that on purpose.\" He said a few minutes after his wives had dropped off to sleep. He was sitting next to Kendra and would be for the rest of the evening, which no doubt had been the Fey's intention.\n\n\"Yeah, she did.\" Kendra agreed.\n\nHe turned and looked at her. Kendra was a strange woman to classify. She had jet black hair that fell mostly straight with just the barest hint of wave. It was shorter than his other wives, only coming down to maybe her armpit. She often had it tied back in a ponytail, but right now it was loose. If he was honest with himself, she wasn't unattractive.\n\nShe was fit but not super petite, and her body was slender and toned. Her skin was a bit darker, and he guessed part of that was the sun. Her skin tone reminded him of Hailey's Latina friend Melinda. She stood perhaps 5' 5\", only a bit shorter than Rachel, but wasn't quite as well endowed. She sort of had a 'girl next door' look which made her easy to miss at a glance.\n\n\"What?\" Kendra asked with a sigh.\n\nHe took a deep breath and let it out slowly. \"I think I trust you enough to fall asleep here and be reasonably confident I won't wake up with a sword through my heart.\"\n\n\"If I was going to do something, you wouldn't wake up.\" Her tone was serious, but the corner of her mouth twitched upwards ever-so-slightly.\n\n\"Why Kendra, was that a bit of friendly banter?\"\n\nShe shrugged. \"Call it whatever you want.\"\n\nHe nodded and laid back. Her airship really hadn't been designed for comfort and it took a moment find a position where something wasn't poking him in the back. He laid there looking up at the stars, which made him think of a conversation with Alana long ago.\n\n*Hey, I was just looking at the stars.* He thought to her.\n\n*Oh?* She replied, though she sounded distracted.\n\n*Yeah. Are you busy?*\n\n*Sort of. Apparently you're a folk hero around here and everyone wanted to know about you the minute they found out I'm your wife.*\n\n*Interesting.* He laughed.\n\n\"What?\" Kendra asked from beside him.\n\n\"I'm just talking with Alana.\" He explained, then turned his mind towards his first wife. *Everything going well?*\n\n*Yeah. Selene was working at the inn and wanted to finish the evening before leaving. We should be heading out soon.*\n\n*Good; I can't wait to see you.*\n\n*Me either.* She sent him some warm feelings of affection, which he returned.\n\nHe sighed and looked up again, and it took him a moment to notice that Kendra was staring slightly.\n\n\"What?\" He asked.\n\n\"Nothing.\" She shook her head.\n\nHe propped himself up on his elbows. \"As Taloni would probably say: you don't have to tell me what's wrong, but please don't pretend nothing is wrong if something is wrong.\"\n\n\"She would say that.\" Kendra nodded.\n\nThere was a long silence, then she made a noise like she was about to saying something, then didn't.\n\nHe shrugged, laid back down and closed his eyes.\n\nA few minutes later, she finally spoke. It was in a slightly rush tone when she did, like she was forcing herself to say something. \"What's it like?\"\n\nHe opened his eyes and turned his head towards her to ask what she meant, then he caught the look in her eyes. It reminded him of that absolutely soul-crushing loneliness he'd felt from her when they'd bonded. He thought about her question for a moment, trying to figure out a way to describe his incredible marriages to someone who'd never even had a romantic relationship before.\n\nIt was hard.\n\n\"When you were little, did your parents ever tuck you into bed and kiss you good night?\" He finally asked.\n\nShe nodded, and she put on a brave face but he could tell it was painful to think of them.\n\n\"It's like that; that feeling of being perfectly safe, warm, and loved, only all the time.\"\n\n\"Oh.\" She replied, her voice cracking slightly.\n\nShe blinked her eyes a few times and then looked away, followed by a slight long shuddering breath. That was followed by a few deep breaths that he recognized as someone trying to get control of themselves.\n\nHe wanted to kick himself for feeling bad for her. She'd attacked them several times. She'd even attacked Alana right before the fight with Havorleth. He well remembered the panic he'd felt when the wood elf hadn't answered his mental call and the frantic fighting to get to her and make sure she was okay. Kendra had done that and much more. If he had an ounce of sense, he'd harden his heart and let her feel bad...\n\n...and yet.\n\nHe frowned.\n\nAnd yet.\n\n\"Kendra, if there's anything I can do to help, let me know.\" He said softly.\n\nShe turned and looked at him, confusion written all over her face. \"Why? Why would you say that?\"\n\n\"I'm old fashioned I suppose; I don't like to see a woman cry.\"\n\n\"I'm not crying.\" She said a little defensively.\n\n\"And if I can help keep it that way, let me know.\" He said kindly.\n\nShe still looked as confused as hell, but nodded.\n\nHe laid back and closed his eyes, thinking about what life must be like for her. The brief glimpse he'd seen made it seem like she'd spent many months, maybe years, alone on this tiny airship. Before that she hadn't been able to trust anyone, and before that she'd been an orphan.\n\nSeveral minutes later, he felt the boards under him shift.\n\nHe looked over to see that Kendra had laid down next to him. As far away as possible given the small space, but next to him. She had her arms crossed and was determinedly looking in the opposite direction.\n\n\"If you ever hurt any of them, I'll hunt you down, skin you alive, and wear your pelt as trophy.\" She said sulkily, which sort of ruined the effect of the threat. It sounded more comical than like a warning.\n\nHe almost chuckled. \"Do you really think I would?\"\n\nShe hesitated and then shook her head, still looking away from him. \"No.\"\n\n\"You said 'them'. I assumed that means more than just Taloni now?\"\n\nKendra made a thoughtful sound but didn't reply.\n\nA few more minutes passed before either of them spoke again. This time it was the dragon huntress, who seemed pensive. \"I still don't like you very much, but they seem to like you.\"\n\n\"Well, 'don't like' is a step up from 'trying like hell to kill'.\"\n\nShe turned to look at him. \"What's a 'hell'?\"\n\n\"It's... it's just swearing for emphasis.\" He finally said, not feeling like explaining the concept.\n\nShe nodded, made a thoughtful sound, and then turned away from him again.\n\n\"Night.\" He said.\n\n\"You touch me while I'm sleeping and I'll cut your head off.\" She said grumpily, though she didn't seem very angry with him.\n\n\"Sweet dreams Kendra.\"\n\nShe grumbled something in return that didn't sound wholly unpleasant.\n\nHe felt a small smile creep onto his face.\n\nInteresting.\n\n* * *\n\nSelene noticed that it was later than usual when all of the inn's patrons finally headed to bed. They had seemed slightly awed at meeting the wood elf and the blonde because of their connection to the dragon. Many had asked for questions and stories, but it didn't escape Selene's notice that the dragon's wives' answers were light on details. They downplayed things too, but that oddly had the opposite effect of making everyone think they were just being modest about what really happened. Frankly Ethan's legend was more likely to grow than shrink after this.\n\nFinally, Ethan's wives had extricated themselves and headed outside while Selene shooed everyone into the communal sleeping area before going outside herself.\n\n\"Are you ready?\" Alana asked as she closed the door.\n\n\"Not quite.\" The Brazilian woman replied. \"I need to grab something and say good bye to Sarah.\"\n\nThat's when it occurred to the ex-FBI agent that the girl had disappeared midway through the evening, once all her responsibilities were taken care of.\n\n\"Okay, we'll be on the Argo.\" Alana replied.\n\nSelene nodded, having heard their airship's name earlier in the evening. She walked back inside but didn't see Sarah, so she headed through the kitchens to her little room.\n\nShe was inside...\n\n...and she was crying.\n\n\"Hey, what's wrong?\" Selene asked as she slid inside the tiny room and closed the door behind her.\n\n\"I'm okay.\" The girl said as she wiped a few tears from her face.\n\n\"Sarah, you are not okay. What's wrong?\"\n\n\"I'm going to miss you.\" She said, then a torrent of words tumbled out. \"You've been the best friend a girl could ask for, like my best friend. Not that I've had a best friend before, but you were a really good one. I'm really happy you'll get to travel with the dragon and meet him -- I mean, meet him again -- I'm so jealous.\" Her cheeks turned red. \"I mean, I'm not jealous like that. I didn't mean that... I just meant.... um...\"\n\nSelene smiled and wrapped the smaller girl in a hug. \"I'm going to miss you too.\"\n\n\"Could...\" The girl started to say as they hugged each other, but seemed to lose her nerve.\n\n\"What?\"\n\nSarah gave her an extra squeeze and then pulled back slightly. \"Could you come back for my wedding? If you can? I want you to be my maid of honor.\"\n\n\"I would love to!\" Selene beamed, though more at being the maid-of-honor than the wedding itself. \"Do you know when it is yet?\"\n\nSarah shook her head.\n\n\"Well, I try to come back before too long so I know then, okay?\"\n\n\"Okay.\"\n\n\"Thank you for everything.\" The Brazilian woman said. \"You were so nice to me and helped me so much. I don't know what I would've done without you.\"\n\n\"I was happy to help.\" The girl replied, and she looked it despite -- or perhaps especially because of -- the tears she was still wiping away.\n\nSelene gave her another hug and then buckled her sword belt on. She gave Sarah another hug, thanked her again for everything, and then headed out. She'd made it halfway across the kitchen before she stopped, turned and hurried back into Sarah's room to give her another hug.\n\n\"I'm really going to miss you.\" She said as she held the girl, her eyes getting a bit wet. She wasn't usually given to displays of emotion, but...\n\n\"Yeah.\" Sarah nodded as she gave her a tight squeeze. \"You have to go.\"\n\n\"I don't have to go.\" Selene replied, surprising herself. She hadn't realized how fond she'd grown of Sarah until she needed to leave.\n\n\"Yes you do.\" Sarah said kindly but firmly. \"I love that you came here, but I know you want to get home and you can't do that by staying here. Please come back and visit if you can, but don't give up on what you want to do for me. I would feel terrible if you did.\"\n\nSelene swallowed. \"You're really sweet, you know that.\"\n\nSarah looked like she was going to disagree, but then just smiled. \"Thank you.\"\n\nTheir hug finally broke and Selene wiped her now slightly leaking eyes.\n\nSarah likewise was still teary-eyed. \"Please watch everything and let me know what the dragon and his wives are like when you come visit.\"\n\n\"I will.\" The Brazilian woman assured her, but didn't move.\n\n\"You need to go.\" Sarah said gently. \"I'll see you soon. Well, hopefully soon.\"\n\nSelene nodded, took a deep breath, and then left.\n\nIt occurred to her as she walked towards the Argo's rope ladder that she really didn't know the dragon or his wives well at all. She was essentially getting onto a boat full of strangers to go meet another stranger at whom she'd once pointed a gun. She grimaced as she started climbing the ladder; at least he had the ability to open a portal back to Earth. Given everything she'd heard about what he'd done and meeting his wives -- who were delightful and seemed incredibly happy -- he seemed like a good enough fellow to roll the dice on.\n\nAt least, she hoped he was.\n\nShe reached the top to see a woman waiting for her. She was quite tall, at least six feet and very beautiful. Her hair was silver, her skin was incredibly fair, and her features delicate and extremely feminine. She also noticed that the woman's ears were pointed. She was wearing a yellow and red dress that looked like the autumn leaves when they turned colors. The dress came to around mid-calf, but it was fitted enough on top and loose enough below that Selene didn't think it would hinder her movement at all. Under the dress were a pair of pants that clashed magnificently with her dress.\n\n\"Hello Miss Dawson; I am Anthiel, the ship's pilot.\" The woman said, offering a hand to help her onto the ship.\n\nThe Brazilian woman took the offered hand and stepped onto the Argo.\n\n\"It's getting late so I'll show you where your bunk is if you want to turn in.\" The high elf said. \"You're free to roam the ship if you like, just not the captain's cabin.\"\n\n\"Fair enough, and thank you.\"\n\nAnthiel led her down the stairs to the lower deck and through the entire lower deck to reach the very forward section. She saw several hammocks aft of a makeshift curtain, and four more behind the curtain. Judging from the clothes, the forward section was for the women.",
        "\"This one is free.\" She indicated the aft starboard hammock in the ladies section. \"Mine is just forward of it, and Rachel's is kitty-corner.\"\n\n\"Thank you.\" Selene said, but hesitated.\n\n\"If it makes you feel better, you can sleep with your sword on.\" The high elf said with a knowing smile.\n\n\"Am I that obvious?\"\n\nShe shrugged. \"Given what I heard about your encounters on Earth, you know very little of this crew. You'll find you won't need the sword, but a good night's sleep is a wonderful thing. If the sword helps you to relax enough to get one, then be my guest.\"\n\n\"Again, thank you.\"\n\n\"Now if you'll excuse me, I'm going to get this airship under way so two very anxious ladies can see their husband soon as possible.\" She said with a twinkle in her eye.\n\n* * *\n\nRachel felt sleep start to flee from her brain and groaned slightly. Not because she didn't want to wake up, but because this tiny little airship definitely wasn't made for sleeping. She had passed an uncomfortable night, and various parts of her back and one particular point in her shoulder were letting her know about it.\n\nOpening her eyes, she say the vast gray-blue expanse of sky of the pre-dawn hours. Beside her, Taloni was sleeping away, looking incredibly adorable as she dreamed about something that regularly made her wings flutter just slightly. She had a smile on her face, and the expression of happiness on her face did much to cheer the redhead up.\n\nShe sat up to see that Ethan was lying next to Kendra on the opposite side of the tiny airship.\n\nShe wasn't sure how to feel about that.\n\nOf course she knew Ethan had other wives, and she wouldn't dream of trying to come between them. She was just a bit disappointed that she had been the 'new wife' for barely a day; not even a day. She knew that neither of them had wanted to bond, and she would've done exactly what they did if she had been in their situation, but still...\n\nShe sighed.\n\nShe closed her eyes and tried to find Ethan's mental fortress as she had done before they bonded. It took her a moment, but she did. She smiled as she saw it; she had helped to create it so he could talk to all of his wives at once. She almost connected right then, but for some reason felt like she should ask first. She wasn't sure why as everyone had made it clear they didn't mind, but she didn't feel right actually doing it without asking again.\n\nNot long after, Kendra stirred.\n\nA few seconds after that, she sat bolt upright and reached for her sword, almost starting to drawn it when she saw Ethan, but then she stopped herself. Rachel was glad she did; she would've blasted the dragon huntress off the ship before letting her hurt her lord.\n\nWait.\n\nWhat?\n\nDamn, it had already happened. She didn't even know when it had happened, but it had. Something very subtle but powerful had shifted inside of her. Was that the reason she felt reticent to connect the network without his permission?\n\n\"Morning.\" Kendra said with a yawn.\n\n\"Morning.\" Rachel nodded. \"Switch?\"\n\n\"Please?\" The dragon huntress said looking relieved.\n\nThe two women traded places and Rachel lay down next to her husband. Hmm. Her husband. She made a thoughtful sound as she watched him sleep. She was so happy to be his wife, and yet...\n\nAnd yet...\n\nThere was still the issue of their new relationship dynamic and she didn't want to deal with that just yet. She pushed it to the back of her mind and resolved to enjoy the morning.\n\nSeveral minutes later, Ethan stirred, giving a great yawn which showed of every single one of his sharp teeth. The redhead knew she should be scared, or grossed-out, or repulsed by him, but she wasn't. She didn't know why, she didn't understand why she wasn't repulsed by the fact that he was a dragon, but she wasn't.\n\nHe turned his head her way and opened his eyes.\n\nShe smiled at him.\n\nHe smiled back.\n\n\"Good morning beautiful.\" He said as he started another yawn.\n\n\"Good morning ugly.\" She said with a smirk before she could stop herself, and then yawned; her body mirroring his.\n\nHe chuckled. \"Beauty and the Beast huh? I can live with that.\"\n\nThe way he said seemed to have more meaning than the words would ordinarily convey, though she couldn't figure out what.\n\nHer thoughts must've shown on her face, because he said. \"It's a story from my world.\"\n\nShe gave him a contented smile, then turned onto her side of face him, resting her cheek on her hands. \"Can you tell me that story?\"\n\n\"Sure.\" He smiled back and then assumed a slightly strange voice, clearly quoting something. \"Once upon a time, in a faraway land, a young prince lived in a shining castle...\"\n\n* * *\n\nSelene woke feeling a slight sense of sadness that she was alone in her hammock. It had been really nice waking up with someone next to her for the past several days. She had absolutely loved it and found herself feeling a little empty now by comparison. Sarah was a delightful girl and gave the Brazilian woman a chance to see what having a young sister might've been like.\n\nShe really liked it.\n\nShe'd always wanted a younger sister, but after what had happened to her younger brother...\n\nShe put it out of her mind and climbed out of the hammock. She had slept with the sword on, but now kind of felt silly doing so. She set it down next to the hammock and retraced her steps from the previous night to reach the main weather deck. It wasn't until she reached the stairs that she realized how odd it was that she felt comfortable without her sword on, which was odd since she didn't know anyone on the ship. She almost went back for it, but again just didn't feel like she needed it so she headed up to the weather deck.\n\nIt was a still pre-dawn, though the sky was lightening in the east. There were five people sitting around a small pot that was suspended over a metal firepan, which was also suspended over the deck. She recognized Anthiel, Alana, and Beth, but the two men were new to her.\n\n\"Good morning.\" Alana said with a little wave.\n\n\"Morning.\" Selene replied.\n\n\"Pull up a seat.\" Beth said, scooching to make room. \"Anthiel made oatmeal with raisins and walnuts.\"\n\n\"Sounds good.\" The Brazilian woman sat down and the high elf spooned some into a bowl for her. It was good, and she hadn't realized how hungry she was.\n\n\"This is Serif, and that's Raklan.\" Alana said, indicating the two men she didn't know.\n\nThe former was thin and somehow reminded Selene of both a French artist and one of the toughest Brazilian Jiujutsu fighters that she'd ever seen. The second was built like a linebacker and was opening ogling her. Or at least he was until Serif smacked him upside the head; a true NCIS-style Gibbs-smack too. Thereafter, Raklan restricted himself to the occasional furtive glance.\n\n\"Nice to meet you.\" Selene said and then took another bite.\n\n\"Yeah it is.\" Raklan grinned creepily.\n\nSerif cleared his throat and the huge crewman suddenly got very focused on his breakfast.\n\n\"Please forgive my brutish friend.\" Serif said with a respectful nod of his head.\n\nSelene nodded since her mouth was full of food.\n\n\"I noticed you came aboard with a sword.\" He continued. \"How competent are you in its use?\"\n\n\"Honestly, not very.\" She said after she'd swallowed.\n\n\"This ship tends to find itself in peril quite often.\" Serif said. \"I would suggest that we fix that, and we can begin directly after breakfast.\"\n\nSelene grinned.\n\nShe had loved martial arts since she was little thanks to her father. While weapons hadn't come as easily to her as unarmed combat, she loved them dearly. Part of that was spending time with her father, but she loved the weapons training too.\n\n\"Do you have any weapon experience?\" Serif asked.\n\n\"My father taught martial arts, including Eskrima, so I'm pretty familiar with Eskrima sticks. I'm not sure how that would translate to my much longer sword though.\"\n\n\"How long are Eskrima sticks?\" Beth asked.\n\n\"It depends on the user, but usually a bit under two and a half feet.\"\n\n\"Arming sword them.\" The thin crewman said. \"It's always easier to build on previous experience.\"\n\n\"What's an arming sword?\" Selene asked.\n\nEveryone started at her.\n\n\"What?\"\n\n\"Sword basics after breakfast then.\" Serif said.\n\n* * *\n\nKendra listened to Ethan telling the story of 'Beauty and the Beast' to Rachel, not believing what she was seeing. Here they were, sailing in her tiny airship in the middle of nowhere. It was small, uncomfortable, and hardly an idea or romantic setting. However, he was clearly having a moment with the redhead. It seemed like they had tuned the entire world out. They were talking quietly and casually, yet also intimately. She doubted that a candle-lit dinner in a fine restaurant could come close to the level of intimacy they were sharing right now.\n\nIt didn't make sense.\n\n\"He's a really good husband.\" A sleepy voice whispered from beside her; Taloni had apparently just woken up.\n\nKendra just couldn't believe what she was seeing between Ethan and Rachel. \"How is that possible?\"\n\n\"Don't trust listen to me; you can see for yourself.\" The Fey nodded her head towards the couple.\n\nAs she looked, a lock of the redhead's hair slid onto her face. Ethan reached over and tenderly tucked it behind her ear. He did it with such love and tenderness that she wanted to both cry and vomit. She couldn't help but imagine that he was touching her that way. That idea made her heart sing but her stomach roil.\n\nThe idea of a dragon touching her like that make her want to throw herself off the airship.\n\n* * *\n\nSelene had just finished eating when Serif returned from the lower deck with several training swords in his hands. She could tell they were training swords because he was holding them by the blade, and because the tips were flat and blunted.\n\n\"This is an arming sword.\" Serif said, holding up a sword that was about three feet long. The blade was about two and a half feet long and wider at the base than the tip. The hilt only had room for a single hand and was capped by a disc-shaped pommel. \"Arming swords are ideal for use with shields because they are small and light enough to be used in one hand.\"\n\n\"Yeah, that's only a little longer than the Eskrima sticks I'm used to.\"\n\n\"This is a bastard sword.\" Serif continued, holding up another sword that was only a bit larger than the first, at maybe 40 inches. The hilt was large enough to accommodate two hands and the blade was a few inches longer as well. \"It can be used in one or two hands but isn't dedicated to either, hence the name 'bastard' sword. It's the jack-of-all-trades.\"\n\n\"That's about the size of Kendra's sword.\" Beth commented.\n\nHe nodded, and then pulled out a much longer sword that was about four feet long. The blade was about three feet long with nearly a foot of hilt. It looked like it would be hard to use in one hand, but would have a lot of reach.\n\n\"This is a longsword.\" Serif continued. \"It's ideal for personal defense, especially in unarmored combat.\"\n\n\"I think the arming sword would suit me best, especially because of my experience with Eskrima sticks.\" Selene said, then nodded to the last remaining sword. \"What's that?\"\n\nHe pulled out the largest sword, which was larger than the longsword in both blade and hilt. He set the tip on the deck and the pommel came up to his armpit. It was about four and a half feet long.\n\nIt was a big sword.\n\n\"This is a war sword, which is a type of longsword.\" Serif explained. \"It's designed to be as large as possible while still being able to wield it like a longsword.\"\n\nHe gave it a slow spin and she could see that it just cleared the ground in a normal guard position; it would've hit the deck had it been any longer.\n\n\"Any larger and we get into the greatsword class.\"\n\nRaklan scoffed. \"Yeah, and everyone else pretty much just calls them 'swords'.\"\n\n\"Historically, that's not wrong.\" Serif shrugged as he set them down on the deck before turning to Selene. \"The larger greatswords are as long as you are tall, and are more suited for specialized battlefield use than for personal protection.\"\n\nThe Brazilian woman tried to figure out she would even carry something that big around, then said. \"Yeah, I don't think the huge swords are for me.\"\n\nAlana and Beth gave each other a significant look and then both suppressed a giggle.\n\n\"I take it Ethan has a big... sword?\" Selene said before she could stop herself.\n\n\"Huge.\" Alana nodded turning beet red.\n\n\"And he's a brilliant 'swordsman' too.\" Beth added, turning a shade similar to Alana's.\n\nEven the ex-FBI agent blushed a bit at that. After the awkwardness died down, Serif brought out a shield and began to teach her.\n\n* * *\n\nRachel was very content to sit next to Ethan as they ate dried food for breakfast. She had enjoyed being near him for a long time and now finally felt like she didn't need to hide it, so she wasn't. She wasn't all over him, nor even leaning on him all the time. She simply sat next to him and enjoyed -- finally enjoyed -- the simple pleasure of being close to the man she loved.\n\nIt felt good.\n\n\"Ethan, is it okay with you and the others if I join the 'magical group chat' as you call it.\" She asked.\n\n\"Absolutely!\" He said with a toothy smile. \"I'm surprised you haven't already; we tried even before we bonded.\"\n\n\"I almost did, but I wanted to make sure you and the others wouldn't mind.\"\n\n\"I certainly don't, honey?\" He turned to Taloni.\n\nThe Fey beamed. \"Of course I don't mind.\"\n\n\"Hang on.\" His eyes went slightly unfocused for a moment. \"Okay, Beth says she'd love to have you, but Alana said she never wants to hear from you again. Sorry.\"\n\nRachel felt her heart sink for a moment until she caught the twinkle in his eye. She gave him a gentle smack on the arm. \"Brat.\"\n\n\"I never pretended to be anything but.\" He laughed.\n\n\"That's true.\" The redhead sighed.\n\n\"Come on, I can't wait to hear you with the others, though you might not be able to yet.\" He said.\n\n\"No?\"\n\nHe shook his head. \"It was about a week before I heard Taloni, and even then her voice was quite faint. It was even longer for... Hmm.\" He frowned. \"It took a lot longer for me to hear Alana. Actually, it took almost as long for me to feel Alana's emotions as it did for me to hear Taloni's mental voice. I wonder if it's getting faster?\"\n\n\"Maybe?\" The mage replied. \"It seems to hinge on your dragon side and you have been getting more powerful.\"\n\n\"Well, we'll just have to link up and see now won't we.\" He grinned.\n\n\"Yes my lor...\" She stopped and coughed, though not because she needed to.\n\nHe eyed her.\n\n\"Sorry. Yes, my lore training says that's possible; magical lore that is.\" She covered.\n\nHe looked confused, but shrugged. \"Go ahead.\"\n\nShe closed her eyes and searched for his mental fortress again. It was so easy to find it now that she couldn't believe how impossible it had been before bonding to him. It took her only a few moments to build out a tunnel from her own mental fortress to his, plus another one to the antechamber 'below' it that allowed them to all communicate with each other.\n\n\"Done.\" she announced when she was finished.\n\nHe looked at her for a second, then spoke. \"Nothing?\n\nShe shook her head.\n\n\"I'm going to try really loudly then.\" He looked at her for a few seconds.\n\nShe cocked her head to one side. \"Maybe? I think I might've heard something, but it was faint.\"\n\n\"It should get much louder once you and Ethan...\" Taloni started to interject, but faltered. \"...you know.\"\n\nRachel felt her cheeks get really warm.\n\nEthan grinned. \"Yeah, that's a great way to improve communication with a beautiful wife.\"\n\nRachel had two immediate impulses. The first was to hide somewhere, the second was to bask in his praise. She suddenly understood why all of his wives were constantly flirting with him but always embarrassed about it. Her brain locked up a little bit as she'd never done anything remotely like... 'that' before. It took her a moment, but she finally recovered enough to reply.\n\nShe glanced at his hips before saying. \"Great communication requires the proper use of the tongue.\"\n\nHe wolf-whistled. \"My redheaded firecracker.\"\n\nShe felt her cheeks get warm, but was pleased anyway.\n\nThen she noticed Kendra.\n\nThe dragon huntress had her eyes closed and one hand on her stomach the other on her mouth. She looked a bit green; though it wasn't clear if she was green with envy or green with seasickness.\n\n\"Please, not here.\" The dragon huntress said once she'd regained control of herself.\n\nEthan nodded, then whispered in Rachel's ear. \"But definitely later.\"\n\nShe was too embarrassed to do anything except nod, though she did feel a familiar itch in her loins start to return at the thought...\n\n* * *\n\nEthan had passed a rather boring afternoon. There was precious little room on Kendra's airship to do much more than sit, so training and practice was out. Kendra was there, and seemed to get rather green around the gills whenever he flirted with his wives. She also seemed to have a bit of a dampening effect on the conversation. She was a bit of a wet blanket, though he didn't think she was doing it on purpose.\n\nHe'd stretched his wings once or twice, and Taloni had joined him for a short time fly once. However, her wings weren't yet strong enough to hold her full weight for a long time without the weight reduction necklace. Still, she'd flown around with him a little bit. She had a little trouble gaining altitude since her wing muscles weren't full strength yet. However, she could fly level quite well and he'd enjoyed that.\n\nIn the end, he'd spent a lot of time twiddling his thumbs and eventually taken a few short naps.\n\nHe was gently shaken from one of them by Taloni and Rachel.\n\n\"You really need to see this master.\"\n\n\"Yeah, it's pretty great.\" Rachel added.\n\nHe groaned slightly and sat up, rubbing his eyes and yawning.\n\n\"Look master; isn't it beautiful?\"\n\nHe looked out and saw the prettiest countryside he'd ever seen. He wasn't one to gush about scenery, but it was wonderful. It was more than that though. He stood up to look out and something about the land around him just... just seemed to call to him.\n\nIt felt like...\n\nLike...\n\n...like home.\n\nIt was strange, his parents' house had felt like home until he'd moved out after graduating high school. Since then, nothing had felt like home. Not a single place he'd lived since then had ever felt right.\n\nThis place did.\n\n\"Where are we?\" He asked aloud.\n\n\"Ivernia; Lord Farbrottan's territory.\" Kendra replied.\n\n*Alana, I think I get what you were saying a little bit.* He thought to all his wives, figuring that more than just the wood elf would want to hear.\n\n*Oh?* The wood elf replied.\n\n*Yeah, this place -- Ivernia -- something about it seems... I don't know.*\n\n*I know what you mean Dominus. It's so pretty.*\n\n*It's more than that though; something about it just feels... feels right. Anyone object to settling down here when Lord Delmar stops trying to kill us?*\n\n*Not at all sir!*\n\n*Oh, I would love that Dominus!*\n\n*Master, that would be wonderful!*\n\n\"Ethan?\" Rachel said from beside him.\n\n\"Hmm?\"\n\n\"Could you repeat whatever you were saying for me?\" She asked with a slightly embarrassed grimace.\n\n\"Please don't.\" Kendra interjected. \"I just ate.\"\n\n\"It's not flirtatious.\" He rolled his eyes and then repeated what he'd told his other wives. \"So how about you?\"\n\nThe redhead looked out across the rolling hills and verdant fields and nodded. \"I could live here, as long as it was with you and Alana; all your wives really.\"\n\n\"I wouldn't have it any other way.\" He found a smile creeping onto his face as he looked out at the land before him. He was really glad that all his wives agreed. Something about this land just... just felt right to him. Like a puzzle piece that just clicked into place.",
        "\"What about you Kendra?\" Taloni asked.\n\n\"It is a pretty land.\" She admitted. \"And the people are very nice here.\"\n\n\"Are they?\" He asked.\n\nShe nodded. \"Lord Farbrottan is a tyrant, but the people are good.\"\n\n\"Well, maybe we could carve out a little space deep in the woods somewhere.\" He suggested. \"Grow one of those tree houses that Alana liked so much.\"\n\n\"They are pretty cool.\" Taloni said wistfully.\n\n\"As long as you all are there -- plus Alana and Beth of course -- I'm good with that.\" Ethan nodded.\n\n*Even Kendra master?* The Fey thought to him.\n\n*I seriously doubt she'd want that.* He replied.\n\n*But if she did?*\n\nHe shrugged. *Maybe.*\n\n* * *\n\nBeth found herself shaking her head in wonder at Selene's dedication. It had been nearly two full days since the Brazilian woman had come aboard the Argo, and for nearly two full days now she'd been training nearly non-stop with Serif, Raklan, and even occasionally Anthiel to learn the sword and shield. The woman was relentless. Even Ethan didn't train that hard.\n\n\"What makes someone like that?\" She wondered to Alana as they watched from the quarterdeck. They were leaning on the railing and just brushing up against each other. The blonde liked that; the closeness and intimacy.\n\n\"I have no idea.\" The wood elf replied. \"My adoptive father made me train like that for some things, but I was never that self-motivated.\"\n\nBeth nodded, watching as the Brazilian woman got up after being beaten for what must've been the hundredth time that day. She was improving slowly and steadily though. She wasn't going down as fast and was learning to move both sword and shield as an integrated whole.\n\n\"I wonder if I should be more like that.\" The blonde mused.\n\n\"Disciplined?\"\n\nBeth shook her head. \"No, well yes but that's not what I meant. I meant capable with weapons. You have your bow and Rachel has her magic, I just feel like I'm not much good in a fight.\"\n\nAlana chuckled. \"Tell that to Kyrupto's eye.\"\n\nShe laughed. \"I still can't believe I did that.\"\n\n\"You know, it occurs to me that maybe that's more useful than another sword.\" The wood elf mused.\n\n\"Oh?\"\n\nThe brunette turned to her. \"It would be really useful to have someone on a battlefield who can run around immune to being hurt, but who can advise people of incoming threats.\"\n\n\"Like a scout.\" Beth cocked her head to one side. \"Hmm. I could that. Would that really be useful?\"\n\nShe nodded. \"Absolutely. A surprise attack can be devastating and you can mostly prevent them from happening.\"\n\n\"AGGH!\" Selene cried out in pain, dropped her sword and grabbed her finger. Apparently, Raklan's sparing weapon had hit one of her fingers and it was bent at an unnatural angle.\n\nAgain.\n\nAntheil sighed from the ship's wheel and headed down the stairs, shaking her head and muttering. \"That the third time she's broken a bone today.\"\n\n\"Anthiel is going to run out of mana at this rate.\" Alana joked.\n\nBeth laughed.\n\nThe high elf approached Selene, healed the finger, and then walked back up to the quarterdeck shaking her head. After a minute, the ex-FBI agent picked up her sword and signaled to Raklan to begin again.\n\n\"I wonder when we'll see Ethan again.\" Beth sighed. \"It should be soon right? It took us four days to reach Selene and we've been coming back for two days, so if they're also coming towards us...\"\n\n\"Hopefully before dark.\" Alana said, looking out across the bow at the horizon. The sun was low-ish in the sky in front of them and off the port bow, since they were traveling mostly west and a little north. Somewhere just beyond where they could see, their husband was traveling towards him.\n\nThe two women sighed in unison.\n\n* * *\n\nKendra had spent the last few days feeling nearly as confused as she felt conflicted. On the one hand, she was now seeing firsthand how Ethan was with his wives, and it was both endearing and nauseating. He clearly cared deeply for them and they for him. Every time he touched them affectionately, she couldn't help but imagine that he was touching her. That in turn made her feel slightly sick.\n\nYet as warm as his attitude towards his wives was, his approach to herself was somewhat cooler. Not cold, but he seemed to be imitating the distance she was keeping from him. Their talk that night had been strange, especially since he'd asked if he could help her. That didn't make sense.\n\nHe didn't make sense.\n\nHe actually seemed like he wanted to help, even after everything she'd done. She wished she could understand why, but she didn't. She was shaken from her reverie by Ethan giving a start, then leaning forward and squinting at something far away on the horizon. It must be far away indeed if a dragon was squinting to see it.\n\n\"What is it master?\"\n\n\"I think it's the Argo... I think.\" He said.\n\nKendra pulled up her enchanted spyglass, activated the strongest enchantment lens, and then scanned the horizon where he was looking.\n\n\"I think you're right.\" She finally said.\n\nEthan hesitated as he glanced at Rachel and Taloni.\n\n\"Go master, I know you miss them.\" The Fey said with a smile.\n\n\"We'll be fine; see you soon.\" Rachel added.\n\nHe grinned at both of them, then leapt onto the prow of the ship. He crouched, made a great leap into the air and took off flying as fast as Kendra had ever seen a dragon fly.\n\n\"He really does love them, doesn't he?\" Kendra thought aloud as she watched him fade into the distance.\n\n\"He does.\" Rachel replied. \"I realize that it's probably strange for you, having hunted dragons all of your life, but he's different. He's not like other dragons.\"\n\nThe dragon huntress nodded. \"Kind of makes me wish he wasn't a dragon.\"\n\n\"Oh?\"\n\n\"Good men are hard to find.\" She said simply, but didn't elaborate.\n\n* * *\n\nSelene paused to catch her breath. Her muscles ached, but it was a good ache. She could definitely feel the training equivalent of a 'runner's high' as she panted. Serif and Raklan had been great tutors, the former more than the latter, and she'd learned a lot.\n\n\"Again?\" She asked when she'd caught her breath slightly.\n\nSerif nodded and grabbed a training spear. He'd been constantly changing weapons on her so she learned to fight them all. It was hard, but she was getting better and losing less quickly. She silently thanked her father for pushing her to learn the Eskrima sticks, as they translated reasonably well to the one-handed arming sword she was using.\n\nShe raised her shield to cover herself and slowly advanced.\n\nSerif gave a few experiment jabs towards her face with the spear tip, but she didn't raise the shield to block them, preferring to step back instead. She'd learned very quickly that raising the shield high enough to block her vision was a bad idea against a fast weapon like a spear. It nearly always resulted in him scoring a hit to her legs.\n\n\"Wait, stop!\" A voice called from behind her.\n\nShe looked back to see Alana tearing down the stairs to the quarterdeck like a bat out of hell, followed closely by Beth. They charged past the combatants and ran to the prow of the ship, staring into the distance. In the fading light of sunset, Selene could just see a dark figure flying closer. She was just about to get worried when she remembered that their husband was a dragon.\n\nNot long after, he arrived.\n\nHe came in at full speed, pulling up and flapping hard to kill his forward momentum before dropping to the deck and wrapping the two women tightly in his arms like his life depended on it.\n\nShe had never seen a hug like that.\n\nIt was fierce and tender, yet loving and powerful.\n\nThey held each other like they hadn't seen each other in a year, even though it had only been a week. They stayed like that for a long time. Like, a really long time. For the longest time they just held each other like... like... she really couldn't think of a reasonable metaphor. She would've said 'lovers' -- which was accurate -- but that seemed woefully inadequate. It would be like calling the Grand Canyon a valley; it was technically true, but fell far short of the proper scope.\n\nIt was lovely to see, if a bit odd because he was a dragon. Yet strangely, it seemed rather natural too for some reason. She wasn't sure why, but those three looked like they belonged together. It was all over the way they held each other; the affection they displayed. She didn't understand it, but hoped she could have something similar someday, though obviously with a man who wasn't already married.\n\nThey finally parted slightly, though it was only enough for him to kiss the brunette and then the blonde. It was also strange to see a dragon kiss with his long snout, but she supposed if it worked for them, who was she to judge?\n\nAs her father liked to say \"Not my circus, not my monkeys.\"\n\nOn the horizon, she saw a small airship approaching rather quickly and assumed that was the rest of his wives. He did seem to be getting rather a lot of them.\n\nEthan had been on the ship for at least ten minutes before he had eyes for anyone or anything other than his first two wives. He was sitting down on one of the forward structural members that happened to be the right height. Alana and Beth were on his lap, each sitting on one knee and leaning against him, both looking happier than they had since she'd arrived in the Ten Kingdoms.\n\n\"Hi.\" He gave Selene a small wave, and then returned his attention to his wives.\n\n\"Hi.\" She replied, but he didn't respond.\n\nHe was too busy holding his wives.\n\nNight had almost fully fallen by the time the smaller airship had maneuvered into docking position and docked. Selene had of course heard about the Fey girl Taloni, but seeing her and her wings was still quite the shock. They looked like a cross between a dragonfly's wings and a butterfly's wings, and hung down to the bottom of her butt when not in use. In use, they were a blur.\n\nShe remembered meeting the redheaded girl Rachel, but this time the mage looked deliriously happy. Alana, Beth, Taloni, and Rachel all clustered around Ethan, and he enveloped them all in a group hug, using his wings to pull them all closer, which was quite endearing.\n\nThe woman who stepped of the tiny airship last was clearly not endeared.\n\nShe assumed it was Kendra, as her jet black hair gave her away. The dragon huntress walked away from them quickly and seemed to size the Brazilian woman up.\n\n\"I'm Selene, and you are?\"\n\n\"Kendra.\"\n\nThey regarded each other for several seconds. The other woman obviously didn't want to be here and obviously was a capable warrior. For some reason, Selene felt a slight kinship with her.\n\n\"I hear you hunt dragons.\"\n\n\"Usually.\" The other woman glanced at Ethan with his wives, shuddered, and then turned back. \"Apparently not always.\" She eyed the blunt sword and shield Selene was still holding. \"Training?\"\n\nThe ex-FBI agent nodded. \"This world seems pretty dangerous and I like to be prepared.\"\n\nKendra gave her a respectful nod. \"I can respect that.\"\n\n\"Dinner is served!\" Anthiel called from near to the captain's cabin, which was where they usually ate.\n\nBefore long, everyone clustered around the fire to eat. Kendra had hung back a bit from the group, though Taloni had eventually managed to get her to sit with everyone else. Rachel kept herself close to Ethan, but made room for Alana and Beth to be closer, probably because he had been away from them for so long. No one said much and everyone seemed either too tired or too content to do more than simply relax.\n\nOddly, Ethan barely acknowledged her.\n\nIt was strange that for the first time in... maybe her whole life? She wasn't commanding the attention of the men around. Raklan was leering of course, but Serif was purely professional and Ethan only had eyes for his wives. She had no interest in the two crewmen of course, but she couldn't help feeling out of sorts that Ethan barely acknowledged her. He wasn't rude or anything, just seemed completely focused on his wives. She wasn't sure what to do with that because it had never happened before.\n\nAfter dinner, Ethan yawned and then looked around. \"Okay ladies, I'm going to bed.\"\n\nThey all smiled sleepily.\n\nHe looked at Selene, yawned again, and then spoke. \"I've got a bunch of questions, but we'll talk in the morning.\"\n\nShe nodded.\n\nHe stood and offered a hand to Alana and Beth, who each took one and he helped them up.\n\nKendra stood at the same time. \"Thanks for dinner, I'm heading out though.\"\n\n\"Do you have to leave?\" Taloni asked.\n\nThe dragon huntress glanced at Ethan and the affectionate way two of his wives were leaning on him. She looked a little green around the gills. \"Yeah, I think that's best.\"\n\n\"You're more than welcome to stay the night.\" Ethan offered as he stifled another yawn. \"We should have a spare hammock in the ladies area, it'll be more comfortable than your airship, and we'll happily provide a hot meal in the morning.\"\n\nShe looked tempted.\n\n\"Where would you go?\" The Fey asked. Kendra hesitated just a moment too long so Taloni continued. \"You don't really need to go, do you? You just want to get away.\"\n\nKendra smiled. \"Not from you, from that.\"\n\nShe nodded her head toward Ethan and the affectionate way they were leaning on him. Again, she looked a little sick to her stomach. Oddly, there was no disparagement or condescension in her tone. She didn't seem to be upset that they were affectionate, just not happy about seeing it.\n\nAlana and Beth exchanged glances and then stood up straighter; they were still close to Ethan, but not leaning on him.\n\n\"For the woman who saved my husband and returned him to me, I can wait.\" Alana said.\n\n\"Good hospitality demands nothing less.\" Beth added.\n\n\"And I'll give you as many hugs as you want for as long as you stay.\" Taloni added sweetly. \"Just until breakfast. Please?\"\n\n\"Okay.\" Kendra sighed, but Selene could tell she was pleased with the offer of hugs if nothing else.\n\n\"Ladies, come on.\" Ethan said as he turned towards the captain's cabin. \"I promise we'll celebrate so much you won't walk straight for a week after Kendra leaves, but right now I'm beat.\"\n\nAlana, Beth, and Taloni -- the latter after giving Kendra a huge hug -- followed him towards the captain's cabin, but Rachel hesitated.\n\n\"Coming?\" Ethan asked the redhead with a smile.\n\n\"Um... could I...\" She hesitated and looked unsure, both of which didn't seem normal for her. \"I mean, I know we're bonded but we're not technically married.\" She looked at Anthiel.\n\n\"I could do it in two minutes now, but wouldn't you rather do it right tomorrow?\" The high elf replied.\n\nThe redhead nodded.\n\nEthan looked slightly disappointed, but he smiled as he nodded. \"Okay.\" He walked up to her and gave her a tender kiss on the forehead. She closed her eyes as he did so, looking incredibly relaxed and content.\n\n\"Good night beautiful.\" He whispered softly.\n\nShe smiled, then smirked sheepishly. \"Goodnight ugly.\"\n\nThey both chuckled while Alana and Beth looked confused.\n\n\"I'll explain in bed.\" He said as he led his wives into the captain's cabin, closing the door behind him.\n\nRachel sighed wistfully as the door closed.\n\n\"I don't understand.\" Kendra said at the redhead's reaction.\n\nShe took a deep breath as she stared after them, then turned to the dragon huntress. \"That's because you don't know him like I do.\" She said with absolute conviction as a contented smile spread across her cheeks.\n\n* * *\n\nEthan flopped down on the bed and opened his arms for his first two wives. The climbed onto the bed and snuggled up on either side of him, each using one of his pectorals for a pillow as they molded to him.\n\n\"Have I told you that I missed you yet?\" He murmured as he wrapped his arms around them and pulled them close.\n\nThey both sighed.\n\n\"I know what you mean sir.\"\n\n\"We missed you too Dominus.\"\n\n\"I haven't been missing you master, but I really missed this.\" She said as she also climbed onto the bed and snuggled up on Beth's other side.\n\nHe looked up, trying to figure out a way to hold her too.\n\n\"Don't worry master, Beth and Alana need this. I've been by your side non-stop for a week; I'll be okay not being held for a night.\"\n\n\"Damn girl, if you were any sweeter I wouldn't let you go outside in the rain for fear you'd melt.\" Ethan sighed, not quite believing that his wives were this wonderful.\n\n\"Thank you master.\"\n\n\"Yes, thank you Tee.\" Alana nodded.\n\n\"You're wonderful.\" Beth rolled slightly and twisted her head around to give the Fey a tender peck on the cheek and then snuggled back up with Ethan.\n\n\"Sir, I know that we hinted to Kendra that we would cool it, but what if were really quiet?\"\n\n\"Please Dominus, I haven't felt you inside of me for so long.\"\n\nHe looked at Taloni, glancing at her powerful vocal chords before raising an eyebrow.\n\n\"Um, I'll try?\" She winced. The tiny Fey girl was easily the most vocal of his wives in bed. It was a wonder how since she was so small, but she had a powerful set of pipes.\n\n\"Here.\" Alana got up and climbed over the others to one of the two wardrobes on either side of the entrance. She pulled one open, rummaged around for several seconds, and then came back out with a thick handkerchief and offered it to the Fey girl. \"Something to bite down on.\"\n\nThe wood elf paused a second, then got a sly grin. \"Last one undressed goes last.\" She said as she started yanking her dress off without warning.\n\nEthan reached out and put a finger on the hem of the wood elf's dress just as it was about to come over her head, slowing her considerably. The result? Beth and Taloni were gloriously naked before Alana had figured out what had happened.\n\n\"Hey, that's not fair!\" She exclaimed when she figured it out.\n\n\"I didn't set the rules.\" He chuckled, then looked at her pointedly. \"And I didn't try to get an unfair head start.\"\n\n\"Master, I think Alana should go first since you interfered.\" The Fey said. She kneeling with her butt on her heel. Her honey-blond hair cascaded down one side of her shoulders and obscured one of her breasts, leaving the other pointing out at him. Her wings were just visible, and her figure was as pleasing as ever. She was a vision of innocent beauty, made all the more lovely by her charming personality.\n\n\"I'm not sure I could refuse a request from someone so lovely.\" He said. \"You were amazing Tee, you meditated and donated all that mana, and you've been amazing the whole time.\"\n\n\"Actually sir, I think Beth should go first.\" Alana said, biting her lip. His first wife was sitting with her legs together out to the side and was supporting her torso with one hand. Her chocolate brown hair was hanging down covering much of her upper chest. Nothing could disguise her perfect figure though. The only thing more delightful than her body was her personality.\n\n\"Dominus, I think--\" Beth started, but he held up his hand.\n\n\"You know, you might want to get over here before I start thinking none of you is interested.\" He winked at her.\n\n\"Yes Dominus!\" She nearly tackled him.\n\nHe took her tackled and rolled with it, ending up on top of her. Her lovely blonde hair splayed over the pillow and she looked at him with her big blue eyes. She closed them for a moment revealing her long lashes and she sighed. He looked down as she wrapped her long legs around him; she had the longest, most incredible legs he'd ever seen and they felt amazing wrapped around him. Being the youngest of his wives, she had a youthful joy and innocence that made her delightful.\n\nShe wiggled her hips closer to him. \"Please Dominus, I'm ready.\"\n\nHe nodded and pushed his hips forward, sliding all the way inside of her in one long, slow, smooth thrust. The blonde sighed as he did so and so did he. It felt amazing. It felt a bit like coming home. She gripped him with her legs and tried to push him deeper inside of her. She couldn't, as he'd already bottomed out.",
        "\"Oh, thank you Dominus.\" She breathed.\n\n\"No, thank you for being so wonderful.\" He said as he started moving inside of her. He thrust deeply inside of her repeatedly with long deep strokes. \"Is this what you wanted?\"\n\n\"Yes Dominus.\" She breathed.\n\nHe felt an urge from his dragon side and remembered Illuminar's words about trusting his dragon instincts in bed. Oddly, while he was wanting to take his time with her, his dragon side seemed to think that wasn't what she needed right now.\n\nHe stopped thrusting. \"Are you sure it's what you wanted?\"\n\n\"Yes.\" She moaned. Bucking her hips slightly.\n\n\"No angel, what do you really want?\"\n\nHer eyes went wide with an unspoken question.\n\nHe grinned.\n\nFaster than anything, she slid herself off of him, planted her face on the sheets and stuck her butt in the air. \"Please Dominus? Please?\"\n\nA Fey hand appeared, guiding his cock towards her slit as he pushed forward into the blonde. He grabbed her hips firmly and she moaned.\n\nHe again listened to his dragon instincts as he leaned down and whispered into her hear. \"Beg.\"\n\n\"Please Dominus.\" She moaned. \"Please take me.\"\n\nHe waited for a moment burying himself fully inside of her, and then drew himself back and started pounding into her. He could feel her elation as she completely released control and let him use her body completely without regard for her... and she loved it.\n\nShe moaned and sighed, prompting him to reached down and clamp a hand over her mouth. He used that as a handhold to pull her up. She arched her back so much that only her hips and shoulders were touching him as he continued thrusting powerfully into her.\n\n\"Bad girl.\" He whispered into her ear. \"You're supposed to be quiet. What happens to bad girls?\" He released her mouth slightly.\n\n\"They-- --get-- --punished-- --Dominus--\" She managed to get out as he thrust fiercely into her. She arched her back almost more, presenting her butt as much as possible to him.\n\nSmack!\n\nHe slapped her butt harder than he would've ever normally be comfortable with, then was forced to clap his hand over her mouth again as she started trembling as she came, and came hard. She had literally never cum that hard or that quickly before and he let himself unload inside of her. The wave that she was riding seemed to intensify and she started trembling with a second orgasm before the first one had finished.\n\nHe didn't even know that was possible.\n\nBeth went floppy.\n\nShe wasn't unconscious, just 'floppy'. She relaxed completely and he had to let her gown gently.\n\n\"Mmm thank you Dominus.\" She murmured as she let herself puddle onto the bed.\n\nEven before she had fully settled, he glanced at Taloni. He was feeling another urge from his dragon side that he would completely dismissed without even considering it before. Now... He cocked his head to one side. It would've never occurred to him, but his dragon side told him it would be perfect for her.\n\nScrew it.\n\nHe rolled onto his back so his cock was sticking straight up into the air and then looked at her. \"Taloni, serve your master.\" He commanded.\n\nThe tiny Fey girl got a rapturous look on her face as she scrambled over to him. \"Thank you master.\"\n\nShe didn't wait either.\n\nShe used her wings to lift herself up and spread her legs into a sideways split, but with her knees bent to the rear. Then she lowered herself down onto him with no part of her body touching the bed until he had bottomed out inside of her. Then she started riding. Her legs landed on the bed and she started twirling and circling her hips in ways that he didn't know she was capable of. She did this for several minutes, looking like she wanted nothing more in the world that to please him this way.\n\n\"Thank you master.\" She said, and she looked ecstatic.\n\nHe almost wanted to say he should be thanking her, but resisted; his dragon side seemed to think it was a bad idea. Instead, he responded with something he would've never normally said.\n\n\"You serve your master well Taloni.\" He purred in approval as he locked eyes with her, compelling a command for her not to make too much noise. \"I'm very pleased with your service.\"\n\nShe came.\n\nHard.\n\nHe couldn't believe it. He couldn't believe that it took so little and happened so fast. He couldn't believe that this is what she wanted, but the results were undeniable. Illuminar had been right; the dragon was damn good in bed.\n\nThe Fey teen nearly vibrated on top of him until she seemed to lose enough muscle control that she flopped forward on his chest and he wrapped his arms around her and she shook slightly and seemed to randomly spasm against him in the aftershocks of her orgasm. He guessed that the dry spell while they were imprisoned was partially to blame for the intensity, but certainly not the whole reason.\n\n\"Did you really mean that master?\" She whispered when she'd regained muscle control. \"Do I really serve you well?\"\n\n\"Perfectly.\" He whispered into her ear.\n\nShe sighed, closed her eyes, and snuggled up closer to him for several moments. \"I love you master.\"\n\n\"I love you too Tee.\" He whispered back, then gently kissed the top of her head.\n\nShe relaxed completely into him, letting herself be completely supported by him. She seemed like she was completely happy and contented in the world, and he could tell she was through their bond. She laid like that for nearly a minute, then her pretty eyelids fluttered open and she looked at him with her lovely lilac eyes.\n\n\"Master, you need to take care of Alana.\"\n\nThe wood elf bit her lip, eyes hooded in lust.\n\nTaloni rolled off of him, but didn't go far.\n\n\"Come here princess.\" He winked at his wood elven wife.\n\nShe scrambled over and he rolled onto his right side, opening his arms. She fell into them facing him and he enveloped her, hugging her tightly as they faced each other laying on their sides.\n\n\"I know what you want.\" He whispered.\n\nShe sighed contentedly, then made to roll onto her back; he stopped her.\n\n\"Lift your leg.\" He instructed.\n\nShe did, raising her right leg and setting it on his hip. He altered the angle of his hips and pushed himself fully inside of her, but didn't start thrusting. She looked at him quizzically as he lowered her leg back down.\n\n\"Turn-about is fair play.\" He said thinking about the last time he'd been inside of her, the morning before he'd talked to Illuminar. He gazed into her rich hazel eyes, and then listened to his dragon instincts. He let his will flow into her through her eyes and she took a sharp intake of breath. She didn't fight him, but she did seem surprised.\n\n\"Trust me.\" He said, then started pushing her arousal up while sending warm feeling of love towards her. He simply told her how he felt about her without words, sharing his attraction to her through their bond. She threw her defenses open, since she usually had herself shielded enough to not get overwhelmed if his dragon side took over.\n\nNow there was no impediment.\n\nHe held her in his arms as he stared deep into her eyes. They laid like that for several minutes, both unmoving as his first wife was completely overwhelmed by the depth of his affection and love for her. Her arousal went ever higher, driven by Ethan's powerful draconic will. A will that his wife didn't resist in the slightest.\n\nMoments later, he came inside of her as she started to spasm.\n\nHe released the compulsion and let her react naturally, which she did. She quivered on the bed, clearly trying to wrap herself around him and also clearly lacking the muscle control to do so. The orgasm washed over her entire body as she tried in vain to get closer to her husband. He pulled her closer, granting her fondest wish to be held while helping to contain the randomly spasming limbs.\n\nHe did this for nearly a minute, taking several deeps breaths when she'd finally finished.\n\nShe opened her eyes and looked at him, shining in happiness. \"Thank you sir.\"\n\n\"Anything for you.\" He stroked her cheek with the back of his hand.\n\nMoments later, he slipped out of her and rolled onto his back, simultaneously pulling her to his side and also reaching for Beth and pulling her to his other side. His first two wives snuggled up to him and he held them tightly, never wanting to let go.\n\nHis dragon side though...\n\nHis dragon side was seething. It was frustrated and angry. He could feel its annoyance at not having Rachel here, but tolerated it because she would be soon. But Kendra... He could feel his dragon side mentally screaming, roaring, and howling in rage that not only was she not in his bed, but wouldn't be anytime soon. With a monumental force of will, he pushed his dragon side to the back of his mind.\n\nIt didn't like that at all.\n\n\"Are you okay?\" Alana asked.\n\nHe nodded. \"My dragon side is a little antsy.\"\n\n\"Why?\" Beth asked.\n\n\"Kendra and Rachel aren't here.\" He replied.\n\nTaloni beamed.\n\n\"I wouldn't get too happy honey.\" He shook his head. \"It's willing to wait until tomorrow for Rachel, but he's majorly pissed that I'm not likely to bed Kendra anytime soon.\"\n\nThe Fey's face fell slightly. She snuggled up against Beth's side and he touched her cheek. She sighed softly.\n\n\"Master, I can't wait until you do take her to bed. I think it'll help her feel much less lonely.\"\n\n\"Maybe.\" He shrugged. \"But I bet neither of us would enjoy it much.\"\n\n* * *\n\nKendra watched Ethan, Alana, Beth, and Taloni disappear into the captain's cabin after dinner, not sure what to think of it. She could almost picture herself walking in there with them, but her stomach threated to empty itself at that thought, so she tried to clear it out of her mind.\n\n\"You know they're going to... you know, and just keep it down right?\" Rachel said.\n\nKendra eyed the redhead, the thought making her stomach churn in a most unpleasant way. \"Seriously?\"\n\nThe redhead nodded. \"They've never been able to keep their hands off of each other, at least not after marrying him.\" She finished and then seemed contemplative.\n\n\"You actually married a man who already has three wives?\" Selene asked.\n\nRachel nodded. \"I did, happily.\"\n\n\"Why?\"\n\nKendra watched the mage closely, just as she'd done for the last couple days. From everything she could tell, her feelings were absolutely genuine. They didn't make much sense to the dragon huntress, but she couldn't deny what she was seeing.\n\n\"Because I'd rather have part of Ethan than all of another man.\" Rachel said. \"Alana and I talked about that one time and I didn't get it then, but I do now.\"\n\n\"I still don't get it.\" Selene shook her head.\n\nThey sat in silence for several minutes, but it wasn't awkward... at least until they started to hear a slightly rhythmic creaking coming from the captain's cabin.\n\n\"So, someone said something about a spare hammock?\" Kendra said as she put a hand on her stomach. \"Hopefully far from that.\" She nodded towards the creaking sound.\n\n\"Come on, I'll show you.\" Rachel said standing up.\n\nKendra and Selene followed the redhead down the stairs to the lower deck and into the bow of the ship, passing through the men's area to get through the blanket curtain leading to the women's area.\n\n\"That one is Anthiel's, and this one is mine.\" Rachel said, then got a strange sort of smile on her face. \"Well, it's mine for one more night anyway.\"\n\nSelene sat down on the hammock just aft of Anthiel's, so Kendra took the one just aft of Rachel's. They were typical shipboard hammocks; deep and wraparound so they would fit almost any size man and it wasn't easy to fall out of them. She sat down in the middle of it, which was quite comfortable; like a cloth seat without a back.\n\n\"So, you hunt dragons?\" Selene asked her. \"What's that like?\"\n\n\"Hard, and dangerous.\" She replied evasively.\n\n\"Anything else?\" The Brazilian woman pressed\n\n\"Fraught with peril.\" Kendra looked at her.\n\nSelene was easily the most beautiful woman the dragon huntress had ever seen. There was simply no comparison. Her long, caramel-colored hair fell in silky waves and framed her exquisite face perfectly. Her skin was flawless perfection and everything about her was just a cut above. It made Kendra a little jealous, and she wasn't prone to being jealous of another woman's beauty.\n\n\"I heard you were are a constable of some kind on Ethan's world.\" Kendra said. \"How did a woman who looks like you get into that?\"\n\nSelene took a moment to answer. \"Someone has to.\"\n\nHmm.\n\nKendra thought there was a story there. \"And your father allowed that? I'm sure he passed on a lot of generous offers for your hand.\"\n\n\"Women choose who they want to marry on my world; their fathers have no say in the matter.\"\n\n\"Interesting.\" Kendra mused. \"Only orphans and the disowned have that luxury here.\"\n\n\"I'm aware.\" The Brazilian woman set her jaw.\n\n\"Problem?\" Rachel asked.\n\n\"I've just seen where arranged marriages lead, and I don't like it.\"\n\nKendra shrugged. \"They seem mostly happy to me.\"\n\nSelene muttered something under her breath, but Kendra decided not to ask about it.\n\nThe Brazilian woman turned to Rachel a minute later. \"So, I hear you're the resident magic expert on the ship.\"\n\n\"Expert is overstating it, but I've done a lot of studying and have a fair bit of practice.\"\n\n\"Could you teach me?\"\n\nThe three of them spent the next several minutes going over basic magical theory. Selene was clearly bright and picked up the concepts quickly. They had been doing this for several minutes when Kendra realized something.\n\nShe didn't feel alone.\n\nOr at least, not very alone. She was chatting with these two women -- neither of whom she knew well -- but was able to do so in an unreserved, unfeigned way. She'd never really done that before; not like this. With her squad mates it was mostly business with a little banter. No one ever got personal or had unguarded conversation because it went against their training.\n\nBut she was doing it here.\n\nIt was really nice.\n\n\"So, let me recap.\" Selene said. \"Magic is powered by 'mana', which comes from the Ether. There's a barrier between our world and the Ether which is porous so a little mana can leak through the barrier, which you use to power spells. However, that barrier is much thicker on Earth, which is why they never developed mages.\"\n\n\"Correct.\" Rachel nodded.\n\n\"Okay, so how do I collect this 'mana' and how do I use it?\"\n\n\"Did you learn to read in a day?\" Kendra interjected.\n\n\"Big topic?\" Selene asked.\n\nRachel nodded, then suppressed a yawn. \"I'd be happy to start teaching you, but let's save that for tomorrow.\" She smiled. \"Well, that'll be my wedding day so maybe not tomorrow; but I'd be happy to show you what I know.\"\n\n\"Okay, thank you. I think I'll turn in then.\" The Brazilian woman also suppressed a yawn and then laid down in her hammock.\n\n\"Me too.\" The redhead also laid down in her hammock, leaving Kendra awake to think. She laid down also and considered.\n\nThese people were the best people that Kendra had ever met. No exceptions. They were kind, honest, genuine, and truly cared for each other. Heck, they even seemed to care for her a little bit. Taloni especially, but even Ethan's attitude towards her had softened considerably. His other wives had been kind; perhaps not welcoming, but she didn't blame them for that. They certainly were being nicer to her that she deserved.\n\nShe rolled over onto her other side.\n\nWhat was wrong with them? Why were they like this? Why couldn't they be like normal people so she could completely forget them and go her own way? Okay, she didn't really want them to be like normal people, but they still didn't make sense.\n\nShe thought about it for probably fifteen minutes before she heard a slight creaking sound. She poked her head up to see that Rachel was climbing out of her hammock rather clumsily.\n\nHmm.\n\nShe'd never seen Rachel be clumsy before. The redhead was moving in a slightly staggering way, as if she was a bit tipsy.\n\n\"Rachel, are you okay?\" She whispered.\n\nThe teen mage seemingly ignored her and instead wobbled towards the rear of the room, towards the blanket Anthiel had set up to separate the girl's section from the rest of the ship. Kendra slipped out of her hammock and started after her. It didn't take long for the dragon huntress to realize what was happening once she got in front of the redhead.\n\nRachel was sleepwalking.\n\nHer eyes were open, but glassy and she was almost completely unaware of her surroundings. Kendra had always heard that it was a bad idea to wake sleepwalkers, but didn't want to leave the redhead alone for fear she might fall over the side of the Argo. So, she followed her to the rear of the lower deck and up the stairs to the weather deck. Once the mage had opened the door onto the weather deck, Kendra heard a soft melody from the quarterdeck, paired with some sort of stringed instrument.\n\nRachel cocked her head to one side, then took a few steps towards the door of the captain's cabin door. She seemed to hesitate, then opened it and slipped in, closing the door behind her.\n\nHuh.\n\nInteresting.\n\n\"Has our resident mage gone to see her husband?\" Anthiel asked as the music stopped and her head appeared over the quarterdeck's railing.\n\n\"Yup.\" Kendra nodded, and then added with a grimace. \"Seems like she's impatient for her wedding night.\"\n\n\"I doubt it; she probably just wants to sleep next to Ethan.\"\n\n\"You think so?\"\n\n\"I do.\" The high elf nodded. \"I wouldn't be surprised if she woke up fully clothed, something I'd wager is quite rare for Ethan's wives. Or at least, when they sleep next to him.\"\n\nThe dragon huntress suppressed a shudder as an image of her doing that crossed her mind. \"How do you know that?\"\n\n\"I've been married for a long time; several times longer than most people on this ship have been alive.\" Anthiel replied. \"Bonds grow as a relationships lengthen, and there are some predictable side effects.\"\n\n\"Ugh, I'm not sure I wanted to know that.\"\n\nThe high elf shrugged. \"You asked.\"\n\n\"I did.\" Kendra admitted. \"I guess I'll head below then.\"\n\n\"Actually, would you care to join me up here? I have a bottle of mead and two glasses that I just happened to bring up after everyone else went to bed.\"\n\n\"You 'Just happened' to bring them up?\" Kendra raised her eyebrow.\n\nAnthiel smiled. \"Do you want some?\"\n\n\"Please.\"\n\nA minute later the two women were leaning against the Argo's railing, each nursing a small glass of mead. It was the same vintage that she'd previously been offered after she'd rescued Anthiel and Taloni from the ambush at that necromancer's camp. The honey-wine was still good.\n\n\"I noticed that you seem a little sick to your stomach whenever you see Ethan being affectionate with his wives.\" Anthiel said after taking a small sip of her mead. \"Why is that?\"\n\n\"Because every time I see it, I imagine it's happening to me, which makes me want to vomit.\" She took a sip of her mead. \"I actually did vomit after the Arena battle. That 'mouth-to-mouth' resuscitation made me hurl when I realized what Ethan had done.\"\n\n\"Hmm.\" The high elf mused. \"It disturbs you that much?\"\n\n\"He's a dragon.\" She replied as if it was self-explanatory. \"Who wouldn't be grossed out by it?\"\n\nThe other woman got a mischievous smile on her face. \"If it makes you so nauseous, then why do you picture it happening to you whenever you see it?\"\n\nKendra froze.\n\nWhat?\n\nNo, no that wasn't...\n\nIt couldn't be...\n\nHmm...\n\nShe cocked her head to one side.\n\n\"Shit.\" She breathed as she realized it was true ever since they'd bonded, and maybe even a little before. Every single damn time, she had. Whenever she'd seen it, she had subconsciously imagined that she was in Taloni's place, or Alana's, or Beth's, or Rachel's; every single time.\n\n\"I thought it might be something like that.\" Anthiel said with an amused but kind smiled. \"The heart wants what the heart wants, regardless of what the brain -- or stomach -- thinks.\"",
        "Kendra didn't reply, but took another sip of her mead instead. She hated that the Argo's pilot was right. Like, really hated it.\n\nAnd yet...\n\nAnd yet she thought about how Rachel had slipped into the captain's cabin to be near Ethan. She remembered the sight of him spreading his wings around his wives that one night weeks ago. While it made her shudder in revulsion, it also made her yearn for that kind of closeness and intimacy. The sight had nearly brought her to tears before, and if she thought about it too long might now as well. He seemed like such a good man-- err, dragon, and basically everyone that she'd asked had agreed. Well, there was at least one more person she could ask.\n\n\"I've asked everyone else; what's your opinion of him?\"\n\n\"He's among the best men I've ever known, though no one will ever hold a candle to my husband.\" The high replied matter-of-factly. \"If my daughters weren't already wed, I would give them a strong push in his direction.\"\n\n\"That's a strong endorsement, especially with him being hunted by Lord Delmar.\"\n\n\"It is.\" Anthiel replied, again matter-of-factly.\n\nThey stood in companionable silence for almost a minute before the high elf spoke again. \"So, you're planning to leave tomorrow.\"\n\n\"Yeah, after breakfast.\"\n\n\"And a hug?\" She smiled both knowingly and kindly.\n\n\"Yeah.\" Kendra admitted. \"Maybe two.\"\n\n\"Something that's probably not at the forefront of your mind right now, but probably will be soon: how much do you owe Ethan?\"\n\n\"A lot.\" She admitted. \"He saved my life twice and I tried to kill him several times, plus I attacked Alana.\" Her heart sunk. \"Damn, I need to make that up to her too.\"\n\n\"You might want to figure some way to square these debts before you leave; you'll be kicking yourself later if you don't. I know I would be kicking myself.\"\n\n\"Good point.\" Kendra took another sip of her mead, enjoying the subtle flavors of the honey-wine. It was a sweeter tasting on her tongue than the prospect of repaying Ethan, that's for damn sure. Because she owned him so much, she again had the vague feeling of being trapped in a prison without bars; doubly so because she was bonded to Ethan with no possibility of escape.\n\nHow was she ever going to pay him back?\n\nTO BE CONTINUED...\n\n***I hope you all had a Merry Christmas and have a happy New Year. I mentioned a possible slowdown of the schedule last chapter, but thankfully it looks like I should be able to keep my current schedule for the time being, which is a relief. This story is a labor of love and I'd hate to stop. ***\n\n***Speaking of, I don't intend to stop writing when ADT finishes. I have another story planned afterwards which will take place several months after ADT concludes. The main characters will be different, but some of the ADT cast will have cameos. It'll be much shorter, and show how the events in the final chapters of ADT influence a certain part of the Ten Kingdoms. It'll almost certainly go under the 'Romance' category.***\n\nSTORY TAGS: dragon, magic, medieval, elf, teen, romance, virgin, harem, cuckquean"
    ],
    "authorname": "Antiproton",
    "tags": [
        "dragon",
        "magic",
        "medieval",
        "elf",
        "teen",
        "romance",
        "virgin",
        "harem",
        "cuckquean"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-dragons-tale-ch-29"
}