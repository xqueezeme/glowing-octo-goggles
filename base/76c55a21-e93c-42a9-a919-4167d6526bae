{
    "title": "The Twelve Tables Ch. 22",
    "pages": [
        "Authors Note: Thank you to everyone left comments or sent me feedback about previous chapters of this story. Thank you again to Margaret who proofread for me. ~ellie\n\n*****\n\nPei felt bad that she had hardly spent any time with Josh since his arrival that morning and had been relieved that he had gone riding that morning with Dante and Dino. He had then had been pressed into helping with the preparations including trimming the huge Christmas tree that sat as always in the middle of the front yard. He had taken over his possession of BJ again who laughed and wriggled in his arms as they went up in the cherry picker.\n\nShe'd helped Antonia and Rosanna finish off the gift baskets for their guests last night and again this morning after breakfast. She'd also spent quite a bit of time with both Angelo, Rosanna and their brood of children preparing for the concert tonight. She hated being the centre of attention or being on any stage, but she knew now was the time to step up and begin showing herself capable of being a matriarch. Or at least put her best foot forward to support both Josh and Dante. She tried not to dwell on being in the spotlight and prepared for the evening ahead as best she could.\n\nIt was late in the afternoon as the local families and others started arriving that the first of the two planes carrying the current and future table members arrived taking most of the family by surprise. Peri had returned with three small bottles of breast milk for her babies when the first plane touched down and watched for a few minutes from the blanket where her babies sat in rockers beside their nannies.\n\n\"Watch Romey and Carmen tonight,\" Dante murmured moving up close behind her. Peri looked around and saw Carmen hurrying toward Romey. They spoke quietly for a few minutes and then she walked towards where the newcomers were being greeted. \"Now it's our turn, just remember that you have knowledge that she doesn't have. These are people you've met and talked to, greet them like old friends.\"\n\n\"Dante,\" she turned to look at him and smiled. \"I know you're trying to help, but trust me, please. I have it all under control,\" she kissed his cheek and moved away through the crowd without him.\n\n\"I see living with them has only made you even more of a lovesick puppy,\" Lucia said peevishly from beside him. \n\n\"Yep,\" he said turning to smile at his sister. \"I love her, and there isn't much I can do about it.\"\n\n\"It can't be healthy for you D.\" She said worriedly. \"I know without Lio you're feeling lost, but this can't be the answer.\"\n\n\"Lucy look at me. I mean really look at me. Do I seem lost or upset or unhappy in any way?\" he asked softly. \"I miss Lio every single day but my life is good now, and I want you to understand that I am exactly where I want and need to be.\"\n\n\"Okay.\" She said sceptically.\n\n\"You're not stupid, Lucy,\" Dante said in frustration. \"Your husband has brought you here on a night when the Donati table and the seconds are coming together for the first time in our lifetime outside of the gathering. Just think about that for a moment and you'll understand. Then if you truly love me as your most favourite brother, you'll stop trying to interfere with things beyond anyone's control at this point. It also wouldn't hurt you to try and be a better friend to Peri than you have been lately.\" Dante walked away then and headed in the direction of his arriving relatives leaving her staring after him in disbelief.\n\nLucia turned to look at the triplets as their nannies prepared to feed them. It couldn't be true, she told herself, but now the seed had been planted she liked the idea far more than the alternative scenario's she had conjured in her mind. She just hoped he wasn't setting himself up for another broken heart. He may not recover next time, and he was her favourite though she would never admit it out loud.\n\nPeri had greeted the men with kisses on their cheeks. Manuel and his wife had arrived with Vincenzo's family. She had greeted Dominic's wife Finola as an old friend embracing her and bending down to meet her three children who ranged in age from six to ten. \n\n\"Did you know there is going to be a concert tonight before the big countdown?\" Peri whispered. \n\n\"What countdown?\" the oldest child asked.\n\n\"We have a spy cam up at the north pole to see when Santa leaves,\" her eyes went wide as she said it. The little one bounced up and down with excitement as the adults listened in to their conversation. \"It takes a lot of singing to make it work though so do you think you could help us with the concert?\"\n\n\"Can we, Papa?\" Again it was the oldest who look up at his parents and asked.\n\n\"Please?\" the middle child added.\n\n\"It would be bad manners not to help I think,\" Dominic said seriously. \"Look after your brother and sister, and do what Peri asks,\" he tussled the oldest boy's hair.\n\n\"Hi Dom,\" Rosanna came forward from where she had let Peri ask them and was quietly impressed with how she handled the children. \"Why don't you come with them Fin, just 'til they get to know us a bit better. It'll give us a chance to catch up.\"\n\n\"Great, and then I just have to see those triplets I heard so much about,\" she said happily feeling immediately welcome in the large family. She'd met Rosanna and Emily with their husbands several times, but they had seen the size of this little Christmas gathering from the air, and she had worried about finding people she knew.\n\n\"This is your Zia Rosanna and this,\" Peri said having seen her target in the small gathering. \"Is your Zia Carmen, they're gonna find you some great costumes and teach you the song, okay?\" The children all nodded smiling. \"It's gonna be so much fun; I can't wait!\" Peri shook with excitement making them all giggle. She stood and smiled at the men sweetly and turned to walk away with the women and children.\n\nShe had listened to everyone's advice and rather than just accepting it and doing what they asked she had formulated a plan of her own. Her plan had started by getting Rosanna and Angelo on side by helping to make the children's concert more of showcase. They had brought in the small band earlier, and Peri offered to be one of the backup singers for the night, including the first number which would be a re-enactment of the big number from the movie, Love Actually. They had enough children in this family and with all of the extra's arriving it would be great. She had also talked Carlo into rigging up some extra lighting and manning a spotlight during the event.\n\nSo while Carmen had focused her attention on the adult concert as she usually did, Peri had quietly endeared herself to most of the children and in turn their mothers. She had never been as busy as she had been today only taking the time to express milk for her babies rather than spending the time with them that she normally did.\n\nCJ and Pete arrived with Charles, Constantine, and Andie on the last plane. Peri once again gathered the women and children into her merry little band of performers. With so much to do she was able to keep Carmen busy and her thoughts strictly on the concert and each performance. She went to her for help and advice on the most trivial of things letting her be the expert despite being the one who had organised the entire thing with Rosanna and Angelo.\n\nWith much pomp and ceremony people were asked to take their seats and two of the older grandchildren escorted Joseph and Antonia to thrones in the centre of the open space where people sat on blankets and deck chairs. \n\nWith just over twenty-fours to pull this off and spending a good deal of that time falling in love with Dante, Peri was proud of her efforts as the kid's concert went off without a hitch and had everyone smiling, clapping and singing along with the children. As the final number ended, she turned and hugged Rosanna relieved that she could relax and enjoy the remainder of the evening.\n\n\"All right settle down everyone,\" Angelo's voice boomed through the microphone and the spotlight lit his immense form on the stage. \"Let's congratulate the kids. I believe that was more than enough music to power up our Santa cam!\" A huge roar went up from the audience startling sleeping babies that were held by parents and nannies alike. The screen behind him lit up with a snowy landscape and a timer ticking down. \"Seems we have a few minutes to wait so I would like to take this opportunity to let my beautiful daughter Arianna say a few words,\" he said with a smile.\n\nAt sixteen Arianna was the oldest of the grandchildren, and this was her last year performing in the children's concert. She'd been the star of the big opening number and had stolen the show with her amazing voice. She was theatrical and dramatic like her father, and she took the microphone from him with a little pirouette before facing the audience and waiting for the applause to die down.\n\n\"Firstly, I would like to point out my Zio Joshua,\" she smiled and covered her eyes from the spotlight looking for him.\n\nFrowning Josh sat up straighter wondering why she was singling him out. The spotlight illuminated him briefly, and he stood and waved before it swung back to the stage.\n\n\"Don't tell him but I'm pretty mad at him right now,\" she said in a stage whisper. Josh leaned forward wondering what in the hell was going on. \"You see this was my last kids concert for my grandparents,\" her voice turned sad, \"and I've been here every year doing the same thing, listening to the same tired carols that we all learn at school with the same old Christmas karaoke CD playing the background. This year was different I am sure you can agree,\" her voice brightened. \"Let's hear it for the band!\" there was a loud cheer and applause. \"And the lighting guy, my Zio Carlo!\"\n\nEveryone applauded and chuckled as he did a sweeping bow and almost fell from his perch atop the ladder he had been standing on all night.\n\n\"We all have someone to thank for doing all this for the kids and me. The band and the lighting and even the mind-blowing feat of teaching my Papa to be a shoo-wup girl in the chorus line,\" she laughed, and Angelo quickly ran out and did a curtsey to the crowd making them all laugh. \"If everyone could please put their hands together for my Zia Peri,\" she smiled widely and stepped back as two of her brothers dragged Peri onstage after a push from Rosanna. \n\n\"I'm mad at you Zio, that you married her too late for me, the other kids have years of doing this with her but what about me?\" She asked plaintively as the applause died down. \"You owe me a duet next year.\" She grinned hopefully and saw him nod in return before handing the microphone to Peri.\n\n\"Thank you Arianna,\" she smiled and blushed. \"I didn't do anything really. It was all Arianna and her parents who made everything so wonderful along with all of the children themselves. Honestly, It's been so much fun! Right kids?\" She waved them all back onto the stage with her. \"These are the ones who deserve the credit especially the little ones who only arrived tonight and managed to learn a whole song so quickly.\" She picked up Finola's little girl and held her. \"Every single one of your children is amazing and should all be so proud,\" she said with feeling. \"Now let's get ice cream and watch for Santa!\" She led the gaggle of children off stage and up to where the food tents were.\n\n\"Well fuck me,\" Dante said under his breath. \"I didn't see that coming.\"\n\n\"You're the one who said she had a plan,\" Josh chuckled as they walked to the stage to help Angelo change some of the equipment over. \n\n\"Pretty amazing though wasn't it, you couldn't have scripted Arianna's speech,\" Dante chuckled.\n\n\"No but that gives me an idea,\" he said with a grin. He went off in search of Angelo, who had gone to get a drink Josh realised seeing the big man in the crowd.\n\n\"Josh,\" Carlo stopped him as he walked by, \"Got a minute?\"\n\n\"Yeah, good job with the lights, man,\" Josh clapped him on the shoulder. \"Let's grab a drink. I need to see Ang real quick but after that, I'm all yours.\"\n\nCarlo stood by as Josh asked if Arianna could stay and do a duet with him tonight, and then having the father's permission he and Carlo walked away from the guests toward to main house. Carlo said he could wait until Josh had spoken to Arianna, who they found with her cousins still excitedly talking about the concert in the main living room.\n\n\"too big to be watching Santa's lift off?\" he smirked at her.\n\n\"I'm still mad at you. Even though you were smart enough to marry Peri, you left it too late,\" she said trying not to smile.\n\n\"That's a shame because I might have convinced your father to let you stay up and sing with me tonight. If you don't want to though I understand,\" he said dejectedly. \n\n\"Really? Best day evah!\" she squealed and ran to hug him.\n\n\"I sent the song to your phone you can be Mariah, and I will be Whitney,\" he batted his eye lashes at her. \"Oh my God! Oh my God! Oh my God!\" she jumped up and down hugging him looking at her phone. \"I love you Zio!\"\n\n\"You better,\" he warned but returned her embrace. \"Hug your Zio Carlo he helped.\"\n\n\"He knows I love him,\" she smiled widely hugging Carlo. \n\n\"I'm gonna show him what you did to our room,\" Carlo grinned down at her. \n\n\"Awesome can I come?\" she asked.\n\n\"No gorgeous, you have a duet to prepare for, and I may need to punch him a couple of times, and I don't want you to see your two favourite Zios fighting,\" Carlo chuckled.\n\n\"What is it with my big brothers wanting to punch me today, is it pick on Josh day and I wasn't informed?\" He pouted.\n\n\"Poor Zio Wah-wah,\" Arianna said then looked at her phone and up to him in fright. \"Forget I said that. I totally didn't say that. You didn't hear it did you Zio?\" she looked at Carlo.\n\n\"Hear what?\" he chuckled shrugging.\n\n\"Go and do the countdown with your brothers and sisters, Arianna,\" Josh frowned at her trying to keep a straight face. \"You're not so grown up you can't help them believe in a little magic. None of you are.\" He frowned at the girls gathered in the room. All of the girls she had been sitting with Arianna left the room and went back outside rapidly, making the two men laugh. \n\n\"So this minute isn't just a minute is it?\" Josh looked at Carlo. \n\n\"Depends on the interrogation,\" he replied walking up the wide staircase with Josh.\n\n\"So D. tells me you're okay with him fucking your wife,\" he said conversationally as they continued walking making Josh take a misstep and almost fall.\n\n\"It's a bit more complicated than that but for the moment let's just say I am,\" Josh said carefully. \"He's been in love with her for a long time.\"\n\n\"I see, and she feels the same?\" Carlo asked curiously. \n\n\"Yes,\" Josh said knowing she loved him but didn't believe she was in love with him. He followed Carlo into what used to be their shared bedroom noting the new king-sized bed and the pretty but masculine makeover the room had received.\n\n\"So there's a trundle bed under there just in case you ever need it,\" Carlo grinned. \"I'm not gonna spoon you when you sleep over.\"\n\n\"I make a pretty good big spoon,\" Josh said pulling himself up to his full height. \"I'm the taller after all.\" \n\n\"Alright,\" Carlo said running his fingers through his hair. Josh had seen Dante do this often enough lately that he knew something big was coming. \"Here's what I know,\" he sat on the edge of his bed looking up at Josh. \"Or at least what I think I know,\" he grinned. \"Everyone treats me like the family idiot except you so don't start now, deal?\"\n\n\"Deal,\" Josh said without hesitation. He'd shared a room and lifetime of secrets with this man.\n\n\"Tables changing over the holidays. True?\"\n\n\"True\" Josh confirmed.\n\n\"You and Dante will be Chair and Oracle. True?\"\n\n\"True but we expect opposition,\" Josh confirmed.\n\n\"Romey?\" he asked.\n\n\"Romey and Carmen,\" Josh confirmed. \"Though I think my wife has just pulled off the biggest coup this family has ever seen.\" He let himself laugh. \"It was pretty damn amazing, even Romey's kids love her right now. She is poised to be the Mother of all with no help from me or D.\"\n\n\"Yeah, Ang and I talked about it this morning, we love her and her subtle suggestions. We only saw what she was doing when it was too late to stop that train rolling into the station,\" he chuckled, \"Not that we would have, it beats any prank Ang has ever pulled. Carmen didn't know what hit her. The whole afternoon Peri had made her feel like she was the expert in charge. Arianna's speech was Ang's idea. You should thank him when this all goes down.\"\n\n\"I will,\" Josh said, \"So you would support me if Romey challenged?\"\n\n\"Are you fucking kidding me?\" Carlo shook his head. \"I've got your back. I just needed you to tell me. I always had your back do you know how many times Ben and I came to blows over how Nik treated you. You don't get it, do you? I've always been your biggest ally in this family. In all honesty, I'm jealous of D. right now,\" he admitted.\n\n\"Who was it I came to every time I fell apart,\" Josh sad equally seriously. \n\n\"So give me the run down what exactly is going on tomorrow and who knows what?\" Carlo sat back.\n\nJosh gave him a synopsis of everything he knew about the future table and what he believed his siblings knew. He also told him about his trip to Canberra and Nik's involvement in Lio's death and what would happen to her. He realised he needed Carlo to be closer, much closer than he was.\n\n\"Right I need two things,\" Carlo said in a business-like fashion. \"First, I want your house, not the new one you built but the old one you left as a guest house. I'm going to bring Louisa to Papa in the new year, and I would like yours and Peri's support to send her to the Battaglia, so she doesn't have to do the trial with Papa. I can't stomach that, and I don't want hers or my children's authenticity called into question. She can do it I have every faith in her.\"\n\n\"Done,\" Josh said. \n\n\"Second, when Romey challenges, don't fight me when I interject,\" he didn't explain further. \"I need you to trust me.\"\n\n\"Done,\" Josh said. \"You know you and I need to have a conversation with Dante now. I won't keep secrets from him anymore,\" he said carefully.\n\n\"Yeah but if you're smart now, you will stay closer to me than ever and deflect attention away from D. the assumption is that he is traumatised after Lio's death and that you and Peri are looking after him. Keep disappearing with me and you deflect that. I may even kiss that wife of yours more times than is seemly for a brother-in-law.\"\n\n\"Yeah better let me give her a heads-up about that,\" Josh laughed. \"She's already fucking D. I don't want her to think she has to lay on her back for the whole family.\"\n\n\"Fair enough, you let her know, and I'll take it from there. Romey will have noticed we've gone. Let's make a bit of show about returning,\" he grinned. At that moment Josh loved Carlo more than he ever had. They had always had a close and unique relationship, and he felt as if his brother had just lifted a huge weight off his shoulders.\n\n\"Just so you know, Ang feels the same way I do, and we think Ben will feel nothing but relief,\" Carlo said echoing Josh and Dante's thoughts about Ben. They'd missed the Santa countdown and returned as the last of the nannies were leading the bored looking teens and tweens away from the concert area. \n\n\"Better go find your wife because I'm gonna go have a quick chat to D and then hold her on my lap and kiss her a lot tonight,\" Carlo laughed loudly and wandered off into the crowd. \"He's gonna hate that!\"\n\nJosh turned and walked behind the house to his cottage expecting to find both Peri and Dante putting the babies to bed. He filled Dante in briefly on what had occurred with Carlo and asked him to trust them. He sent him to see Carlo to the cottage. Then he took Peri in his arms congratulated her on her success and told her that he had asked Arianna to do the first song that they had planned to sing together.",
        "\"I've barely seen you today, I'm sorry,\" Peri said leaning into his chest as he hugged her close.\n\n\"We both have other obligations right now,\" he held her tightly. \"You may not see us after Christmas lunch tomorrow, but you are amazing,\" he kissed her. \"I love you so much, and I hate to ask this but,\" he proceeded to fill her in on Carlo's plan to flirt with her all night.\n\n\"I'll handle it,\" she said confidently feeling buoyed up by what had happened after the kids concert.\n\n\"I have no doubt that you can handle anything,\" he kissed her. \"I'm so proud of you little Mama.\"\n\nThey were leaving as Carlo arrived and he walked back with them making sure Romey had noticed moving to talk to CJ about the lighting program on his laptop. \n\nThey were moving the tables to the space in front of the stage when Ben approached Josh. \n\n\"BJ won't go to sleep until he's talked to you apparently you have a way to send an apology to Santa?\" He said seriously, but Josh could see a small smile turning up the corners of his lips.\n\n\"I'll go see him,\" Josh said equally seriously. \"It's man's business, you wouldn't understand,\" he patted his brother's shoulder and walked off chuckling.\n\nPeri approached Carlo where he sat with CJ. Looking at the computer that would now control the lighting in a better way than Carlo had originally set up.\n\n\"Do you mind if I sit with you for a minute. Between the triplets and that children's concert I just need a minute in a quiet corner,\" she slid onto Carlo's lap and smiled at CJ. \"If I had known you would be here I would have gotten you to do the whole lighting plan,\" she smiled. \"No offence Carlo, you did an awesome job, but CJ has a knack with all the tech stuff.\"\n\n\"I agree,\" Carlo said easily. \"have you bothered to eat yet?\"\n\n\"I'm not that hungry,\" she said. \"The food smells amazing, though,\" she said looking back over his shoulder. \n\n\"I'll get you a sampler plate,\" Carlo said picking her up as he stood, then putting her back in his seat and kissing her softly. \"CJ will bore you to tears with all his geek speak but stay right here,\" he winked at her and went off to get her some food. She'd met CJ several times over the last eighteen months and felt comfortable with him.\n\n\"Your kids were gorgeous tonight,\" Peri enthused. \"That little Wyatt is going to be a lady killer when he grows up.\"\n\n\"I know,\" CJ chuckled. \"You don't have to convince me that you're the little Mama.\" She did a double take. \"Pete guessed a few weeks ago, and Papa came clean. You don't have to schmooze me.\"\n\n\"Well, that's a relief. I hate lying to Pete. He has this look he gives me, and I end up confessing everything back to what I did in the womb.\" Peri said in relief.\n\n\"I know what you mean,\" CJ laughed heartily. \"You have no idea how annoying that was when we were kids.\"\n\n\"Oh god, poor you,\" she reached out and touched his arm.\n\n\"No, poor you little mama. I am sure this is way more than you signed up for when you married Josh,\" he said softly.\n\n\"You know what? It's moments like this that make me stronger,\" she impulsively hugged him. \"I guess that means I shouldn't bank on running away with Wyatt when he gets older?\"\n\n\"Who knows he might want an affair with a cougar,\" CJ said with a perfectly straight face making her laugh and continue to laugh when Carlo came back lifting her from the chair and plonking her into his lap.\n\n\"What's so funny?\" he asked.\n\n\"We were just talking about the kids. CJ called me a cougar,\" Peri pouted but couldn't hold it for long before giggling.\n\n\"My son's a lady killer, what can I do?\" CJ asked as if it was perfectly reasonable to call her a cougar.\n\n\"Shit,\" Carlo said, \"I can't compete with that.\"\n\n\"But you brought me food, and that counts for something,\" Peri kissed him lightly and picked up the plate he had brought for her. She was still eating while sitting on Carlo's lap when Josh came to squat beside them.\n\n\"Did you do it?\" Josh asked CJ.\n\n\"Is the Pope Catholic?\" CJ asked in return, and as Josh kissed Peri and jogged off toward the stage, CJ turned to Peri. \"Better have a tissue handy this is gonna be a rollercoaster. Some of my best work if I do say so myself.\"\n\n\"That's my cue,\" Carlo said wrapping his arms tightly around Peri as he lifted her and settled her back onto his seat. She watched as he walked purposefully toward the stage knowing that he hated the spotlight more than anyone.\n\n\"Welcome everybody to this most momentous night,\" Angelo walked out on stage looking resplendent in a dark suit. \"For the locals who have stayed whether you have been to our Christmas festivities in the past or even if your newcomers, welcome! Help yourself to the good food and wine provided by your hosts, my parents, Joseph and Antonia Donati.\"\n\n\"While you enjoy their hospitality and while we, their children, rejoice in coming together after a year of trials and tribulations we ask you to bear with us as we look at the year that was,\" Ben stepped onto the stage and walked slowly to stand with Angelo.\n\n\"There have been some incredible highs and incredible lows this year but at the end of the day, we have supported each other because we are family, and that is what family does,\" Ben's voice rang out as he joined his brother on stage. \"You'll find tonight, not all songs will be Christmas Carols,\" he said with a wide smile. \"Some of the songs you will hear tonight will be of personal significance to only some of us,\" Ben smiled at Emily who sat clutching her hands before her.\n\n\"This song was originally going to be performed by the youngest of my brothers and his wife but in light of the children's concert and recent events, may I introduce my baby brother, Joshua Donati and my beautiful niece Arianna to sing, \"When you believe.\" Carlo's voice seemed unusually quiet as he introduced the song.\n\nPeri heard the opening chords of the song she knew so well start and Josh's voice taking on the deeper part of the song. She saw the montage of family events begin in the background of his singing. She saw last Christmas and her time in hospital after Nik's attack. She saw her house and her wedding. All of those images were interspersed with pictures of the rest of family, including the children's triumphs at sport and school. Timo and Alberto's births as well as her triplets. The tragedy was that within the images were the reminders of Nik and Lio and that they would never enjoy another Christmas concert with the family.\"\n\nDante was suddenly there beside her picking Peri up in his arms. \"It's your time to show you are worthy of the mantle. Look at the happy things,\" he advised. \"You got married to the man you love, and you had his children. You aren't that girl that Nik intimidated anymore,\" he said sternly, and she took a shaky breath looking back at the stage keeping her eyes on Josh rather than the pictures.\n\n\"He makes a great Whitney,\" Carlo whispered into her ear as he sat back down with them, \"He was always so much prettier than the rest of us.\" Peri couldn't help but smile at his words. \n\n\"I gotta admit, from this angle, he's a bit of a pretty boy,\" CJ murmured holding back his laughter having overheard Carlo.\n\n\"Diva's more like it. Can you believe that matching cummerbund? When did we skip to the high school formal?\" Peri whispered, internally thanking both men from pulling her from the melancholy hole she threatened to slip into. They both roared with laughter while everyone around them including Peri looked at them with tears in their eyes. Dante had managed not to do more than snigger, and he turned to look at them with everyone else.\n\n\"Fuck!\" CJ regained his composure. \"How am I supposed to explain that to the wife let alone Papa?\"\n\n\"Explain what?\" Peri dabbed at her eyes with a tissue as the song ended. \"Excuse me, gentlemen. I have to hug that young lady who saved me from crying on stage.\" Peri hurried off toward the stage.\n\n\"Your amazing and did it so much better than I ever could,\" Peri embraced Arianna as she came off stage. \"So tell me what I owe you, makeup? Perfume? Covering for you and your boyfriend? I'm not sure Zio would be down for that, though,\" she laughed lightly.\n\n\"Peri, this is the best Christmas ever, do you think I could have some champagne?\" Arianna whispered.\n\n\"Cheap at half the price,\" Peri laughed and wrapped her arm around the girl's waist. \"Josh could you get me a glass of Champers, please. I feel like celebrating after that. Wasn't she wonderful?\" Peri said enthusiastically. They chatted while they waited for his return about school and boys and all the things that consumed Arianna's life.\n\nJosh returned with two glasses, he handed the champagne to Peri and the Ice water to Arianna and turned his back. \"No business of mine what you do with them after they are delivered,\" he said seriously. \"I'm going to find your father and well, distract him.\"\n\n\"One glass won't hurt you,\" Peri laughed and exchanged glasses with Arianna as he walked off.\n\n\"Aiding and abetting a minor?\" Rosanna asked from behind them. \"That's your third glass tonight by my count.\" She frowned. \"Ten O'clock Arianna no later or there will be no Santa do we understand each other?\"\n\n\"But Mama it's my first grown up concert,\" Arianna pleaded. \"Zio said he talked to Papa about it.\"\n\n\"And it will be your last if your father catches you with more champagne,\" Rosanna said meaningfully.\n\n\"Oh my God this is so unfair!\" she whined. \n\n\"I know right, like, 'rents!\" Peri said in a perfect imitation of the girl. \"I promise I will make it up to you,\" she whispered after seeing the girl smile.\n\n\"Fine, ten O'clock,\" Arianna gave in and began to walk back toward the main house a little way. \n\n\"Arianna baby?\" Rosanna called after her. \n\n\"Aw, Mama I promised,\" Arianna whined.\n\n\"A small sip each and if anyone is sick you clean it up not the nanny.\" Rosanna winked at Peri.\n\n\"Thank you, Mama; you're the best!\" Arianna said and rushed off with the glass of champagne before her mother changed her mind.\n\n\"She's sweet,\" Peri said as she and Rosanna walked back into the crowd and Carmen began a solo number on stage. The two women took a seat near the front and applauded loudly when it was done.\n\n\"You gave Arianna your big number didn't you?\" Roseanna asked amid the applause.\n\n\"What? No,\" Peri laughed. \"She did it so much better than I could. My big one includes two of your brothers-in-law. Plus, I am revisiting the Santa Baby song you tricked me into last year. I'll be up on that stage plenty.\"\n\nIt wasn't until later in the evening as she went back to the cottage to relieve the ache in her breasts that Peri realised Dante's earlier words hadn't meant just at that moment but rather during the night. Carmen had walked purposely toward her, and she realised he had meant \"Watch out\" for them.\n\n\"You're a no one from nowhere, you don't belong here, in this family. This is my family! Who asked you to mess with the children's concert? It was perfectly fine the way it had always been,\" Carmen's bitter voice sounded from behind her as she opened the door to the cottage.\n\n\"Do come in, Carmen, I have been expecting your visit,\" Peri said stealing herself for what would follow.\n\n\"I won't stay,\" Carmen said haughtily. \"I'm singing with Josh soon. We have always saved this fiasco of an evening. I'm glad you didn't embarrass him by singing that ballad with him earlier.\"\n\n\"I thought tonight was going better than ever,\" Peri said cheerily. \"It's a shame Romeo doesn't like to sing as much as you do. I don't mind that you have to borrow my husband, though.\" Peri made it clear who had more right to sing with Josh.\n\n\"My husband has other talents,\" Carmen said her anger getting the better of her and following Peri into the cottage. \n\n\"Oh I didn't mean anything by it, all the Donati men are amazingly talented,\" Peri laughed. \"I think they are all missing Lio this year, though,\" she said her laughter coming to an abrupt end. \"Do you want to see the babies?\" She asked softly as she walked into the nursery and started the breast pump. She sat in a rocker and draped a shawl over her shoulder as Carmen went to the nearest cot.\n\n\"Some babies are born to lead, and some are not,\" Carmen said stroking Cruze's cheek.\n\n\"Isn't it good we don't have to worry about that,\" Peri said amiably. \"Ben is second, and his two sons can worry about who populates the table with them,\" she said gently. \"There has never been twelve from the same mother. Even if he had six like you, they would need the others, and as you said, some children are born to lead and others, well their talents lie elsewhere.\"\n\nCarmen turned to look at Peri as if she had never considered this fact. \"With seven brothers the five must come from elsewhere,\" she said quietly as if the thought had only just occurred to her. \n\n\"Ben only has two, there will be far more than five needed to make up the numbers,\" Peri corrected her, \"I just hope maybe one of mine or even both might show enough strength to join Timo's table.\" She paused and let that settle into Carmen's mind. \n\n\"I'm probably thinking too far ahead, but we mothers want the best for our children, don't we?\" She invited Carmen into her confidence as a mother who had the best interest of their children at heart. \"It's not worth fighting Ben for leadership, as you said all are not destined to lead, and Timo will have the best of all of our children to help him.\" She paused again seeing Carmen think about her words.\n\n\"Poor Bianca desperately wanted a girl during this pregnancy but had her sixth boy,\" Carmen said as if sharing a secret. \"She's moving overseas did you know? Her children will never be part of the next table.\n\n\"Back to Italy?\" Peri asked as if she had no clue as to how the tables worked and saw Carmen do the numbers in her head. Her children's future was far more important to her at that moment than the losing battle her husband was fighting. \n\n\"No, and you can stop pretending you don't know,\" Carmen said waspishly. \"You think I am so stupid I couldn't see how you kissed everyone's asses tonight? You don't belong here, you never did. Josh has no chance at the chair because of you and no matter what you do you can't change the fact that you and your mother are white trash who only bring down the good name of the Donati's.\" She turned and looked directly at Peri.\n\n\"Then what are you doing here Carmen? If you are so sure I am not a threat to you why are you here at all?\" Peri asked calmly. \"Did you think you could intimidate me? Is that your plan for being the mother of the table? Intimidating and threatening all of the women of the family into supporting you? How well do you think that's going to work in the long run and what do you think Romey will say when no one is there to support you or help you when you need it.\" \n\n\"You know nothing about how this family works,\" Carmen's voice rose and the babies stirred in their cribs.\n\n\"You're probably right,\" Peri nodded. \"I mean what would I know about supporting my friends and have them support me at these big family gatherings. Just as well I have you around to help me, isn't it? I'm so lucky to have such a kind and caring sister like you to tell me the truth about such things.\"\n\n\"Hello ladies,\" Carlo said in a loud whisper. \"I was sent to find you. You both have final performances coming up. It's getting late.\"\n\n\"You finish,\" Carmen said quickly. \"I'll go back and make your excuses.\"\n\n\"Thank you, Carmen. \"I'm so glad I have a friend like you in the family. I couldn't have managed the kids concert without you.\" Peri said sweetly. \"I'll be sure to mention how very helpful you've been to me all night when I see Josh.\"\n\n\"It's been my pleasure, there's no need to say anything,\" Carmen paled visibly and slipped out of the doorway.\n\n\"Everyone underestimates you, don't they?\" Carlo whispered walking to Eden's cot and looking down on the little fairy. Peri finished quickly thinking she would express again before bed later that night.\n\nThey walked back to the concert area with Carlo lamenting the fact that if she had to fuck one of Josh's brothers she had better options than Dante.\n\n\"I love you, Carlo,\" she laughed, \"The difference is that I am in love with them. Both of them,\" she admitted. \"I know it sounds wrong, it is wrong, but they're okay with it, and it works for us.\" She tried to explain.\n\n\"Lucky them,\" he said sincerely. \"I love him, you know. I mean I love all of my brothers but Josh is, well I love him. You handled Carmen well back there. Knowing her children have a chance at the table even though they can't lead will help when Romey fails tomorrow.\"\n\n\"How do you know he will fail?\" Peri asked and frowned at him suddenly realising that Carlo knew what no one should know.\n\n\"Because I will make sure of it,\" he shrugged and walked her towards where Josh sat with Lucia watching Carmen sing.\n\n\"The babies are all present and accounted for and totally exhausted,\" Peri said softly leaning down to kiss Josh and having him pull her into his lap.\n\n\"She also fired off a torpedo that hit home on a battle-axe,\" Carlo chuckled making Josh raise an eyebrow at her.\n\n\"Lucy it feels like forever since we have spent time together I'm so glad you're here this holiday,\" Peri said happily. \"I've missed you.\"\n\n\"I've been waiting for an invitation to the housewarming, but you'll be having a christening before you get to it I imagine,\" she laughed.\n\n\"Oh gosh, I hadn't even thought of that, my whole world had centred around feedings and diaper changes,\" she said aghast at her rudeness. \"I don't suppose you'd like to help me plan that in the new year?\"\n\n\"I would love that,\" Lucia enthused \"It will give me an excuse to come and play with the babies.\"\n\n\"You don't need an excuse you are welcome anytime,\" Peri smiled.\n\n\"So here's the girl with the pretty pink car,\" a tall, muscular man with a big smile sat down with them. \"Papa tells me you're a cheeky one.\"\n\n\"You're Papa isn't nearly as grumpy as he makes out,\" Peri laughed recognising Manuel's son Lorenzo from media photos.\n\n\"I hear you're giving away the racing leathers Larry,\" Josh commiserated.\n\n\"We all gotta grow up sometime. Carlo and I have been floating the idea of a custom bike shop to keep me busy,\" he shrugged. \"The wife's happy at least. She didn't want to be on the road with a new baby. Happy wife happy life so they say,\" he leant back in his chair and extended his long legs.\n\n\"Do you have a picture? I'd love to see,\" Peri asked. \"Mine are just starting to get little personalities of their own.\"\n\n\"Do I have pictures,\" Lawrence laughed fishing his phone out of his pocket and handing it to her. \"I'm assuming I'll get to meet your trio of little miracles tomorrow.\"\n\n\"Carlo, you're on lighting for the next one,\" Pete patted his shoulder. \"Larry you ready?\"\n\n\"Fuck no,\" he grumbled pushing his chair back and standing. \"I want everyone to know I am so very sorry for the fuck-up that's about to occur.\"\n\n\"I see the family resemblance now,\" Peri grinned at him.\n\n\"Papa was right about you,\" he grumbled shaking a finger at her and walked away toward the stage.\n\n\"It's not often we have extended family here for our Christmas Eve concert, so we threw out the challenge to our cousins to perform with us here tonight for no other reason than to give their fathers more ammunition for the Christmas lunch roasting,\" Angelo laughed heartily. \"Let's see what they came up with, with less than a day to prepare.\"\n\n\"Challenge accepted,\" Pete said as the four Donati cousins and Dino appeared on the stage, and the slow music started. Pete had found a clip of a male group called Collabro singing Stars online and had sent it out to the cousins with instructions. Peri felt goose bumps as the deep, strong voices harmonised so beautifully and the powerful song rang out over the hushed crowd. When they finished people came to their feet clapping and cheering the five men.",
        "\"Yeah, that might have backfired on us,\" Angelo chortled as he took back the microphone clapping the men on the back as they left the stage.\n\n\"That's my cue,\" Josh said standing and kissing Peri's forehead.\n\n\"Dino has an amazing voice,\" Peri said to Lucia as Josh walked away.\n\n\"I'm as surprised as you are,\" Lucia laughed. \"I've never even heard him sing in the shower! I might have to have a word with him about that.\"\n\n\"I think I will go check on my mum,\" Peri said so that Lucia didn't have to feel bad about leaving her sitting at the table alone.\n\n\"It's funny, I tend to forget your mother is almost family now,\" Lucia looked over to where her Aunts and Uncles sat with her parents. \"It must be nice to have her here for the holidays.\"\n\n\"In some ways,\" Peri smiled and began threading her way through the tables to where her mother sat with Charles and Constantine. Peri sat talking with the senior members of the family while Carmen and Josh performed the final song of the evening and then went with Antonia to hand out to final gift baskets for the locals as they headed home. \n\nPeri had worked hard since waking up that morning, and she was exhausted. She'd hoped she made enough of a good impression on all of the family members to help Josh tomorrow, but when Antonia suggested she was ready for bed, Peri couldn't think of anything she wanted more and began saying goodnight to the small crowd that was the extended family.\n\nShe apologised to Josh and Dante for her lack of staying power, and while Josh would rather that she stayed a while longer, Dante looked at her with concern. \"You've been busy today with the kids concert and all, you look exhausted, go to bed, we can take it from here,\" he said gently wrapping an arm around her. \"The morning when all the children drag their parents out of bed will be just as important. Sleep well,\" he kissed her and slapped Josh on the back. \"Let the games begin.\"\n\n\"I'm proud of what you did tonight,\" Josh wrapped an arm around her waist and walked her to the cottage. \"I'm sorry I've been so preoccupied since returning but I don't imagine it will get any better in the next day or two. Stay close to Mama if you can,\" he advised softly. \n\n\"I'm just fine,\" she smiled, \"Go play with your brothers.\" She kissed him again. \"They all know you're the one, including Romey.\" She said. \"I think he and Carmen are hoping that marrying me will keep you from being the leader in the end. If that happens Josh, I'm sorry.\"\n\n\"If anything changes it won't be because of you or anything you have done,\" Josh said softly holding her close. \"If anything you've ensured my place. I tend to believe Arianna when she says that marrying you was the smartest thing I've ever done.\"\n\n*****\n\nPeri woke up in the bed alone and took a moment to orientate herself to her surroundings and remember where she was. She could hear voices murmuring somewhere in the cottage and got out of bed pulling a robe around her body and shivering in the cool air of the early morning. She found them sitting in the small living room and cocked her head surveying their dishevelled appearances.\n\n\"You should sleep,\" she said worriedly making them look up at her in surprise.\n\n\"Some strong coffee and one of Doc Pete natural wonders and we'll be good as new after a shower and shave,\" Dante said relaxing back into his chair. He looked at Josh, \"You look like a horse has dragged backwards through the bush.\"\n\n\"You think you look so pretty right now?\" Josh asked.\n\n\"I'm not the pretty boy of the family, though,\" Dante said meaningfully.\n\n\"Well if you're not going to sleep then tell me how the night went before the babies wake up,\" she said sitting opposite them.\n\n\"Romey went to work on Carlo. He knows he needs an Oracle and without Jules, Carlo was the obvious choice. Dante stayed close to Ben. They were always much closer than the other brothers anyway,\" Josh explained. \"I hung out with the seconds mostly, and let them tell me what a lucky man I was to have you. You made quite an impression on everyone.\"\n\n\"CJ and Pete know, Charles told them,\" she said. \"CJ told me I didn't have to schmooze him because he knew I was the next mother.\"\n\n\"I guessed as much. They were pretty relaxed about any alternative reason we came up with for why they had been invited to the Christmas Eve concert, for the first time in a decade,\" Dante nodded.\n\n\"Jules isn't giving much away. I think he's happy to be going to Prague,\" Josh said thoughtfully.\n\n\"I can see he and Bianca would do well there,\" Dante nodded.\n\n\"When's the meeting?\" Peri asked.\n\n\"I guess after breakfast,\" Josh looked at Dante for confirmation of his guess.\n\n\"That'd be my guess,\" he nodded. \n\n\"You better go shower then,\" Peri said. \"You don't want to be going to that meeting looking the way you do.\"\n\n\"Yeah, alright, I'll go shower,\" Dante chuckled coming to his feet. \"Carlo told us what Carmen said to you and how you handled it,\" Dante looked at her seriously. \"Don't overthink it, she was just lashing out, and I guarantee no one else thinks that way at all.\" He bent and kissed her forehead heading for the bathroom.\n\n\"It's been a big year,\" Josh said quietly. \"I came so close to losing you, and I wouldn't be here on what promises to be the most important day in our family in decades without you.\" He went and knelt down beside her chair. \"I am so grateful that you have accepted everything that marrying me entailed. I'm not sure any other woman would have forgiven me what happen this time last year let alone the weeks that followed.\" He knew he didn't have to detail her time with the Battaglia and what Nik did to her, they both knew what he meant.\n\n\"Mine,\" Peri said softly touching his cheek. \"Forever and always.\"\n\n\"I'm so proud to have you as my wife, never doubt that or my love for you, no matter what happens today or what anyone says to you,\" he said seriously. \"Nothing will ever change that. You are mine forever and always.\" He kissed her deeply and stood walking off to have a shower leaving her with her thoughts. \n\nPeri went to the nursery and looked at her sleeping babies. This was the world they were born into, and she wanted them to have the best opportunities in life. Their lives would be so different from the way she grew up with nannies and housekeepers and two fathers. She closed her eyes and prayed they wouldn't become as spoilt and entitled as some of Josh's nieces and nephews seemed. \n\n\"Peri? Is everything okay?\" Madeline whispered coming into the nursery. It seemed only in these early mornings when she was sure no one would be close to hear that Madeline used Peri's name, and she smiled.\n\n\"I couldn't sleep, it's nice to see them so settled here,\" she smiled. \"I hate to wake them, but I was hoping to feed them early this morning.\"\n\n\"Their routine has been altered because of all the excitement and people last night. It won't hurt to wake them I'm sure today will be just as exciting for them. We will worry about their proper routine when we go home again,\" she said quietly. \"Would you like me to change Eden for you?\"\n\n\"Yes please,\" she smiled. \"I'll change Cruze. Come on my sleepy little man,\" Peri crooned picking the baby up and smiling at his big stretch as she roused him from sleep.\n\n\"She'd almost finished feeding Eden and Cruze when Dante came in looking relaxed and fresh in jeans and a checked shirt. His thick black hair had been brushed back away from his face, and she smiled being used to his longer layers being messier because of his habit of running his hand through his hair. Not that his hair was long it barely touched his collar at the back, but it was longer than Josh's which always seemed neatly styled. \n\n\"Did you miss out on the good stuff this morning, my boy,\" he asked Blaze immediately taking him from Madeline. \"I feel your pain,\" he said seriously ignoring Madeline, who tried to hide her smile.\n\n\"I was about to give him all my attention and feed him,\" Peri protested quietly, lifting Eden and handing her to Madeline. She lifted Cruze to her shoulder and patted his back softly as she cuddled him close.\n\n\"Hear that buddy? Happy days for you at least,\" he chuckled and exchanged babies with Peri taking Cruze from her and sitting him up in his rocker.\n\n\"Don't pout,\" Peri laughed. \"It's Christmas morning, and you never know if Santa is still watching and might bring you the coffee you've always wanted later.\"\n\n\"You'd think on Christmas morning I could have what I want for breakfast, without having to ask Santa\" he grumbled.\n\n\"It's time,\" Josh said coming into the room looking at his phone. \n\n\"Mine's on charge, I'll grab it,\" Dante said with a frown. This isn't what they had expected. \"Nothing on mine he called out from the living room. \"What does it say exactly?\" he walked back into the nursery dropping his voice.\n\n\"Athenaeum by six,\" Josh read the three-word message.\"They'd have to know we were together,\" Josh reasoned.\n\n\"We go then,\" Dante shrugged. \"They'll tell me if I'm not welcome.\" He slid his phone into his pocket. \n\n\"I'll see you at breakfast,\" Josh kissed Peri absently his mind only on the text message and what his father wanted.\n\n\"It'll be fine,\" Dante said softly bending to kiss Peri. \"Don't look so worried. You've done everything you can and more. Now it's up to us. I love you.\" He straightened and followed Josh from the room.\n\nPeri watched them go and worried. She looked up at the big clock and knew breakfast wasn't for another hour and a half but felt she needed to shower now just in case things were changing for everyone today. Looking down at her son she smiled, \"What do you think Blaze? Does Mama need a shower?\" \n\n\"Yes Mama most definitely needs a shower,\" Andie said walking into the room looking fresh and relaxed.\n\n*****\n\n\"Just him,\" Carlo said from where he leaned against a post nursing a large cup of black coffee. \"Seems their dealing with bteh challenge themselves before it becomes a thing.\"\n\n\"I guess I'll go find some coffee too then,\" Dante said easily, but the look he gave Josh was one of concern. \"You want a refill?\" he asked Carlo after hearing the door lock moments after Josh began mounting the steps.\n\n\"I guessed you'd be here, one of the girls is bringing out more and a breakfast sandwich or two,\" Carlo indicated the nearby chairs and table. \n\n\"Who's in there?\" Dante asked wanting his suspicions confirmed.\n\n\"The table, Ben, Romey and now Josh,\" Carlo said. \n\n\"All the main players, why are you here?\" Dante raised an eyebrow.\n\n\"I was with Romey listening to how hard he would fuck my stupid ass if I got into bed with him and his lovely wife,\" he chuckled. \"You all think I am this big, dumb cowboy,\" he shook his head. \"Josh never did, though, and if Peri hadn't told me she loved you, I might have challenged you for Oracle. I knew what was going on months ago during the gathering. I think Lio did too, he spoke to Papa about it,\" he said surprising Dante. \n\n\"How do you know that?\" Dante frowned.\n\n\"People tend to ignore me, I hear all sort of dumb shit cause no one thinks I care enough to do anything about it,\" he shrugged. \"Congrats, by the way, I was hoping to be Josh's Oracle. Not for the reasons you think but because of him. I love him better than the rest of you.\"\n\n\"You're looking pretty this morning,\" Dante chuckled as Jules arrived with a tray bearing a pot of coffee and food. Carlo winked at him, and they went to sit at the makeshift table to wait. \"You think we should let Ang know we're all here?\"\n\n\"You can wake him up if your game,\" Carlo shrugged. Dante decided he wouldn't want to be the only one left out and picked up his phone to call his oldest brother. \n\nThey all looked up as Ben came out of the Athenaeum and walked toward them and Dante put down his phone again. \n\n*****\n\nJosh mounted the stairs confidently and walked into the huge room taking a quick glance around to see who was present. His face softened into a small smile when he saw his mother sitting at the head of the table between Ben and Romey.\n\n\"Good morning,\" he went to kiss his mother. He glanced over her shoulder and saw his father and uncles sitting comfortably with coffee in the lounging area.\"So what's going on this early in the morning?\"\n\n\"You can go, Benedicto, thank you,\" she said softly offering Josh the vacated seat. \n\n\"I will ask you the same question I just asked your brothers, they were here only moments before you and nothing that was said will matter to the outcome of this,\" she said in quiet but commanding voice. \"Who leads the Donati family?\"\n\n\"The easy answer,\" Josh said carefully, \"would be Papa but I have learned that he is only the public face of the family and Donati table.\" He looked at his mother and brother with a serious expression. \"He has great power and influence and he wields that power overtly and is seen to be wealthy and philanthropic. Anyone could be forgiven for believing he leads alone. The Donati family are led by the twelve each position having expertise and accountability. It's been a hard lesson for me over the last year, but it is one I will not soon forget.\" He omitted the part where Dante had driven the lesson home just yesterday with a fist to his stomach.\n\n\"Very nice dear, but you don't have to make a speech of it,\" she patted his hand. \"We're just talking here. There is always a balance of power, and you know as well as I that not all positions on the table hold as much influence as others. If the table as a whole leads the family who leads the table?\"\n\n\"The Oracle I guess though I imagine the Oracle and the chair would share it pretty equally,\" he said honestly.\n\n\"Romeo?\" she asked.\n\n\"I'd agree, but I would put the edge in leadership in the other direction. The chair is after all at the head of the table and the family,\" Romey debated the point.\n\n\"Oh for fuck's sake,\" Manuel cursed and got to his feet. \"You two are missing the point entirely.\" He stalked over to where they sat and stood behind Antonia.\n\n\"Wait,\" Andreas roared stopping him from saying anymore. \"Let Antonia get to her point.\"\n\n\"Okay,\" she said softly turning to look at Manuel. \"I'll hurry it along for you. You're ruining all my fun, though.\"\n\n\"Thank you, Love,\" he bent and kissed her cheek.\n\n\"Romeo, who led the family last night? Who made each and every family member feel welcomed and at home? Who made sure everyone felt included in the family celebrations? Who stood back and let others shine just to make the night more enjoyable for one or two others?\" She asked the series of questions to get just one answer.\n\n\"You always make everyone feel welcome here,\" Romey said. \"You were, as always, the perfect hostess.\"\n\n\"Joshua?\" she smiled and turned toward him. \n\n\"Peri,\" he answered simply not saying anything else. He knew he didn't need to. \n\n\"Now I'll ask you both again who leads the Donati family?\" she smiled widely.\n\n\"The mother you fucking dumbasses,\" Manuel shook his head and walked back to where his brothers sat.\n\n\"Who would inherit the chair has never been about you boys,\" she said. \"Anyone of your brothers can lead with the right support.\" She turned to Romey then and looked at him directly. \"Carmen has a great capacity for love, and she is a wonderful mother and wife, but she doesn't give that love to everyone in the family nor is she accepting of everyone in this family.\"\n\n\"Carmen loves this family as much as I do,\" Romey argued. \n\n\"I don't doubt that, but she would choose to hurt this family if she thought it would further her ambitions for you, and her sons,\" Antonia spoke directly to the heart of the matter. \"The two women argued last night, did you know?\"\n\n\"I knew that Carmen had spoken to her, not the details,\" Romey admitted looking at Josh and narrowing his eyes.\n\n\"I know,\" Josh said. \"In light of what was said, I don't think Peri would have told me if Carlo hadn't interrupted their conversation. She understands why Carmen said those things to her and doesn't want to make a big deal out of it.\"\n\n\"I'm sure if they argued they both said things they regret,\" Romey said carefully in defense of his wife. \n\n\"Carmen stood over one of Peri's children in the nursery and attempted to threaten and intimidate her. Tell me, what would you do if Emily did that to Carmen and your baby? She could see your challenge for what she sees as her husband's rightful place as a reason to act that way,\" Antonia said softly and saw him stiffen. \n\n\"It's not Josh's rightful place though is it?\" Romey said feeling backed into a corner.\n\n\"Nor is it yours or anyone of your brothers,\" Antonia sighed. \"If anyone has a right to be sitting there challenging Josh for the position of the family chair it is Ben, though. Emily could have been a strong and wonderful mother of the table. She knows the power lies in the family. Not her son and children but all of the aunts, uncles, and assorted cousins. She would have had to curb her love of gossip, but it could have played to her strengths for leading this family. All of your brothers love her as do the vast majority of your cousins who she's taken the time to know.\"\n\n\"You think they all love and respect Peri over Carmen?\" Romey asked incredulously.\n\n\"I know they do as do the others who will join your table because she has gone out of her way to befriend them, not because of Josh's ambitions but because they were family. Not just last night but also at your sister's wedding,\" Antonia turned to face him fully then. \"Romeo, you and Josh both, have all of the qualities to lead and be successful, but while Peri was welcoming and making sure everyone including the children enjoyed last night, Carmen barely acknowledged our guests.\"\n\n\"The twelve lead together, and you will be part of that leadership along with your brothers, but Carmen could never be the mother even if she had behaved better this year,\" Antonia said softly. \"Bene would not put aside his wife for her, nor would Angelo. Even with your influence Jules doesn't love her in that way and would balk at the idea. There are two who would treat Peri with the love and respect of a wife alongside Josh and could be his Oracle.\"\n\nRomey said nothing staring at his mother as understanding dawned. \"There has been another Oracle since Christo died, and they have not put aside their wife. Obviously, the relationship between them is flexible enough to counter this,\" he said. \"We have lived most of our lives without a true Oracle.\"\n\n\"No, you haven't. I loved Christo, and no one could replace the love I felt for him, but there has always been an Oracle, and you will realise that if you think about it,\" she smiled. \"You who is so unbelievably clever have been too cold and calculating and not seen the love that holds this family together. You see only the business, and that is your biggest downfall because, without the love to bind us all together, we cease to be a family. Do you understand now, why it must be this way?\"\n\n\"You decided who the next chair would be?\" Romey accused. He could admit that most of what his mother had said were the truth, but his whole life had been based on the strength of the tables and the men who ruled them. To think of his mother as the leader of the table went against everything he knew about his family and to think of Peri as that leader made him feel betrayed.\n\n\"No, dear, I lead the family not the table or the business in anyway,\" Antonia shook her head. \"I can only make recommendations based on your wives. Three of whom could have become the mother.\" Andreas came to stand with her then and placed his hand on her shoulder.\n\n\"We sat down prepared to argue over who was best suited to each position, but we were done within an hour because the choices were obvious. You all have particular strength and weaknesses, and the only issue that arose was over Ben because he is poised well for several positions. From the beginning of deliberations we each chose Josh to take the chair, it was unanimous,\" Andreas explained and took a seat beside Josh. ",
        "Surprised by that disclosure, Josh looked over to where his father sat with the remainder of his uncles. Seeing them all prepare to join them at the table.\n\n\"That little mama, Peri,\" Vincenzo came to the table as he began to speak, \"Was treated badly by this family on numerous occasions and in one instance almost lost her life to one of our own. Yet, she forgives and doesn't hold grudges and loves us all because we are her family now as much as Josh's.\"\n\n\"I wanted to travel and be in Europe and enjoy all the game playing that happens there in the heart of the shadow. I think it's what Jules wants too, would you keep him here to satisfy your need for power?\" Constantino asked.\n\n\"Ben and Emily have always put the family first. They both understand that the outcome here is what is best for the family. You saw his relief when he was told he would not be that chair. That's not you, and it wasn't me,\" Charles joined the conversation. \"It took me some time and a few beatings from Christo to put the family's needs before what I wanted and I did want the chair once.\"\n\n\"They were all fucking morons,\" Manuel said, \"but as long as I was there to piss on their parade how bad could it get? That will be your role amongst your brothers. You will play the devil's advocate and question their integrity.\" \n\n\"Romeo, tell me you understand and will withdraw the challenge. The decision has been made but if you insist we can stay here, and you can debate the leadership with your brothers and cousins. We six will not change our minds, though,\" Joseph said in a conversational tone. \"Or we can bring the others up, and this can be all over before breakfast,\" Joseph said without any recriminations and checking his watch. \"I would very much like to play Santa without this hanging over our heads.\"\n\n\"What role will I have if not chair?\" Romey asked not quite ready to give in.\n\n\"Mine,\" Charles said. \"It takes on a little from each of the other roles but could mostly be described as human resources. It has held many titles, over many tables, Grand Master or High Lord come to mind,\" he chuckled.\n\n\"I guess I could live with that,\" Romey nodded. \"Let's go with High Lord for this table,\" he said to Josh. \"I'll support you. No hard feelings?\" He said held out his hand. The stiff smile he gave didn't translate at all to the rest of his face or features, and Josh could see that this was a hard pill to swallow for his brother.\n\n*****\n\n\"Yeah, I'm right behind you, dumbass,\" Ang said into his phone.\n\n\"Well, you're the dumbass who answered,\" Dante said turning around to see his brother exiting the house and walking towards him. \"Has anyone taken bets yet?\"\n\n\"Nah but I was wondering if we should let the seconds know we're all here and somethings going down upstairs,\" Carlo looked at Ben, who shrugged.\n\n\"You alright mate?\" Ang plonked himself into a chair beside Ben.\n\n\"Relieved more than anything,\" Ben admitted. \"It's weird ya know?\"\n\n\"Yeah, I imagine it would be now that you turned it down,\" Angelo said softly placing a meaty hand on his brother's shoulder. They'd talked about it over the last few months, and Angelo had shared his philosophy about the table being only a small part of their family dynamics and the benefits of being part of that leadership without having all the public drama of being the chair.\n\n\"Alright let's get this show on the road,\" Lorenzo said walking toward them with the four other men who would make up the table. \n\n\"It's a waiting game right now,\" Carlo said looking at them. \"They called you?\" He looked up at the building.\n\n\"Yeah, six-thirty on the dot. We're waiting out here for what?\" Dom asked, they all knew why they were here now just not the details.\n\n\"To see who comes out alive I guess,\" Pete said doing a quick scan of the brothers and noting Josh and Romey absence.\n\n\"So Prague?\" Dante murmured to Jules as they all moved around to make room for their cousins.\n\n\"Sounds good, but I guess we'll see what happens next,\" Jules said. \"I tried talking to him you know, to avoid all this.\"\n\n\"And Ang talked to Ben and Carlo talked to Josh and I just sat and watched you all wishing Lio was here to see everything. He'd have had it all sorted out by the end of the concert, you know he would,\" Dante laughed sadly.\n\n\"So Josh huh?\" Jules said.\n\n\"Surprised?\" Dante countered.\n\n\"Not as much as Romey was when he realised,\" Jules laughed unable to help himself. \"Ang, Arianna was great last night in that duet with Josh,\" Jules said suddenly remembering exactly when it was that Romey had become certain who his competition was.\n\n\"I bawled like a baby with her singing and that bloody family montage thing. Who put that together?\" Ang asked the men sitting around him.\n\n\"Josh gave you all the photos didn't he?\" Carlo asked CJ.\n\n\"Had me almost in tears too,\" Ben admitted. \"Nice job laughing in the middle of it to lighten the mood.\" He looked at Carlo and CJ.\n\n\"Not my fault,\" CJ shook his head beginning to laugh again. Ben looked at Carlo then narrow his eyes.\n\n\"It wasn't me,\" Carlo looked around innocently. \"Tell them it wasn't me,\" he nudged CJ.\n\n\"As if Carlo is ever that funny,\" CJ said still laughing slightly. \"It was one of those moments where you had to be there to find it funny, but Peri is hilarious at times. I laughed most of the time she sat with me. She even commiserated that I had Mr. Perfect here for a brother.\"\n\n\"She called me Mr. Perfect?\" Pete asked raising an eyebrow.\n\n\"Maybe not those words but close enough,\" CJ said. \n\n\"You should get her to tell you the story about how she and Josh met,\" Dante chimed in. \"I've never laughed so hard or seen Ben laugh that much at a family lunch.\"\n\n\"Yeah, she tells a good story,\" Ben joined the laughter. \"She convinced Dante that she only wore boots because she had stumpy legs and everyone knew boots made women's legs look longer like an optical illusion.\"\n\nA young man carrying a large tray of coffee walked toward the Athenaeum followed by a young woman. As if by magic the door opened and they disappeared inside. Minutes later they left again with the young man stopping and nodding to the assembled men in deference. \n\n\"You may go in now, except Dante, could you follow me please, Sir?\" he bowed his head again and walked away. Dante frowned but did as the young man asked looking back over his shoulder as the others all filed inside and up the stairs.\n\n*****\n\n\"Gentlemen welcome if you could take your places on the other side of the table,\" Joseph welcomed them and the nine who entered went to stand beside Josh and Romey facing the six remaining men of the current table.\n\n\"It's a momentous time as we prepare to retire the current table in a few short years and you each have much to learn. We have watched you all of your lives, however, and we know some of you better than you know yourselves. We know your strengths and your weaknesses, and we have deliberated over how the next table should be assembled,\" Joseph said formally. \"More than anything we are family and as such we love each of you and know that in time we will leave the table in capable, loyal and loving hands.\"\n\n\"If now that your suspicions are confirmed any of you don't wish to be here or join this table now is the time to speak,\" Joseph said looking at them all for long minutes.\n\n\"Alright, I'll speak, where's D.?\" Angelo said in a demanding tone. \"Did he opt out? If so why are there only eleven of us?\"\n\n\"Dante will be part of the table but he is attending to something else right now,\" Joseph said sternly. \"We weren't this bad surely?\" he looked at his brothers.\n\n\"Fucking morons,\" Manuel shook his head but winked across the table to his son.\n\n\"Let's get on with this before I hit Manuel. He's getting on my last nerve right now,\" Constantine said.\n\n\"I'll take if from here,\" Andreas said in a deep, resonant voice that commanded everyone's attention. He went and stood behind the chair at the end of the table. \n\n\"Dino welcome to the family. You are our warrior. This will be your seat,\" he said inviting Dino to sit at the tail end of the table. \n\n\"Dominic our Herald,\" he indicated the first seat on the far side and placed his hand on the first seat on the near side. \"Peter our man of Medicine. CJ our technical wizard and Lorenzo our mechanical wizard,\" he began filling the seats two at a time. Carlo will be our Engineer, who will work closely with the two wizards. Jules our ambassador and Romey the High Lord.\" He stopped and smiled at the remaining three men. \"Ben our Watchman and Angelo our Chamberlain, Josh will hold the chair,\" Andreas said looking at them all. \"Questions?\"\n\n\"I've looked at our history in some detail, and I haven't heard of a herald or wizard on any table before,\" it was Dominic who spoke.\n\n\"The men at arms often took on the role Herald when needed. We believe in these days of peace that having a wordsmith position to deal with media and the like was a far better use of resources than simply men at arms, so we changed the title for this, the next table. In the last fifty years, technology has taken on a life of its own and deserves its own magician or wizard don't you think?\" Andreas explained. The table nodded silently all of their eyes looking to the two vacant chairs that sat at the head of the table next to Josh.\n\n\"Between now and the epiphany you will spend time with your mentors, as and when needed, set up your schedules with them sometime before you leave the festivities. CJ, Lorenzo, and Carlo you'll be with Manuel. Pete and Dom, you will join Ben with Vincenzo. Jules and Romeo with Constantino and Charles. Josh with Joseph and Angelo as well as Dante with me. These arrangements will change as time goes on,\" he explained further. \n\nHe stopped talking as Antonia came from the hidden office alcove then and walked toward the table standing beside him. She smiled at her sons and her nephews as they stared at her with differing expressions.\n\n\"They're here,\" she said quietly and continued towards the stairs where Dante and Peri came into view.\n\n\"Dante is our Oracle,\" he held out the chair for him indicating that he should take it and leave Peri with Antonia. \"Christo was our Oracle, and he held us all together in the beginning when egos set to explode in the early days,\" Andreas looked meaningfully at Romey. \"Josh has the chair and will be the public face of our family, but he has no more power than any of you. Not one of you is greater than the other individually except maybe the Oracle and that will become clear as time goes on.\"\n\n\"The power of this table comes from the family. The old ways become lost with second and third cousins, but those that remain loyal do so because they know they are valued members of the Donati family. How do they know this?\" Andreas asked the men at the table.\n\n\"Ben, you've met Darius, the young man who took over Peri's team once the triplets were born, what relation is he to you?\" Andreas asked driving his point home. \"Dante?\" he asked when Ben couldn't answer. \n\n\"Third cousin, the whole team are Donati's. Lio wanted to keep as many family members as he could in the company hiring them over others if they had the skills necessary,\" he explained. \n\n\"It's always been about the family, you all get to watch over them, make life better for them and protect them with your wealth, power and influence but if you and they aren't all held together by a lynchpin, you will have nothing. We do not rule by threats and intimidation we rule because our family allows us that hereditary right, like royalty. We give far more to the family than we ever receive, and we do it without expectation,\" Andreas smiled. \n\n\"The lynchpin for us and currently the most powerful person in this room is the Mother of the table,\" he announced. Antonia walked slowly to the head of the table with Peri as her role was announced and Peri took her seat feeling like she was in the middle of a big prank.\n\nPeri listened as Antonia spoke briefly of her love for each of the men of the table and her love for the family. Peri felt awkward sitting at the head of the table between Dante and Josh facing all these men. She felt them both take one of her hands each and squeeze it. Antonia stopped speaking, and Joseph went and put his arm around his wife lovingly.\n\n\"To anyone outside of this room, you are the table. There is no need to mention anyone else or their roles except Josh, who for better or worse is now the public face of you all and the family. Don't take this lightly we have reasons for secrecy in our family and those reasons will come to light as you begin to work with your mentors,\" Joseph said.\n\n\"Thank fuck for that,\" Manuel said. \"I'm starving, let's go you lot,\" he indicated the men at the end of the table that he would mentor.\n\n\"All that manoeuvring last night and it didn't matter at all,\" Josh said quietly to Dante and Peri. \"I'll explain later. Thank you, you are the most amazing woman,\" he whispered and kissed her.\n\n\"Stay,\" Joseph placed his hands on Josh and Dante's shoulders as the other men left the room. Romey looked as if he was about to stay but Charles wrapped an arm around his shoulder and guided him out talking quietly. \"You may go Perinique,\" Joseph grinned at using her full name. Then he walked his sons into the hidden alcove that served as his office.\n\n\"That shit about the sharing of power was bullshit. You need the others like a general needs his officers. You can't be everywhere at once, and while they will share in all the triumphs and the good times, believe me when the shit hits the fan it will rest on your shoulders. Both of you. That gives you the right to pull rank, its all in how you handle it. Just like Andreas and I chose to let your mother handle your brother's challenge.\" Joseph spoke quickly. \"Be careful, Romey will sting for a while yet especially once he has had to deal with Carmen and her obsession with becoming the mother. Keep Peri close and let Charles handle him as best you can.\"\n\n\"He seemed to take it okay in the end,\" Josh said considering what his father said. \n\n\"Time will tell, but Peri will need a tracker, CJ will get one on her phone, and you can give her this for Christmas,\" he passed a ring box to Dante. Josh watched as the box opened to display three rings set with deep purple amethyst and diamonds. While the male rings had smaller stones that glinted in opposite corners, the ring for Peri was spectacular in its delicate design despite the considerable size of the stones.\n\n\"We'll talk more after lunch, playing with the children on Christmas day is the best gift of all,\" he smiled, and they walked together down to where all of the families had gathered for breakfast in the big dining hall.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "christmas",
        "brothers",
        "secrets",
        "mother",
        "music concert"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-tables-ch-22"
}