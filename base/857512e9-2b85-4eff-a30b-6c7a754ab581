{
    "title": "CvsN 16: Beth's Last Virgin Hole",
    "pages": [
        "================\n\nSisters work it out, Amie plays well in small groups, and Beth's Virgin ass, finally!\n\n================\n\nAny hopes I had of sleeping in were destroyed with the cacophonous pounding. \n\nI looked over at my alarm clock and growled when I saw it was a few minutes past 9. \n\nHeathens.\n\nAs the pounding continued, I knew I'd get no more rest. I struggled through my morning ablutions and a little more ready for the world, headed out to find out what the bloody blue blazes was creating such a racket.\n\nThere was a crowd just outside the house, sawing and hammering away. Exiting through the plastic sheathing in the living room, I found Jim at the center of things, with Joe and his youngest brother Eric working off to one side. Even the girls were hard at it, providing extra hands where required. I saw Beth and Robin hauling wood from the backyard, Debbie and Amie were holding boards in place while the guys looked to be framing the walls. I was a little surprised to see Amie there, after the little escapade we'd had before I left. Even the tykes were at work, tasked with picking up the scraps and even given some holding and measuring jobs. \n\nI'm not much of a craftsman, but fortunately we had Eric's professional help, and I'd worked with both Joe and Jim before, building garages and porches, and this seemed to be pretty much the same. It was a pretty big space, now that I looked it over, and Jim confirmed it was 28' by 20', big enough for our new dining room, and an additional family room. It nearly ran the entire length of the house.\n\n\"It's about time, slacker,\" Jim ragged me. \"Now we can have two teams. You'll work with me; we'll leave the pros the hard stuff,\" he added, nodding toward Joe and his brother, who didn't do much more than give me a nod.\n\n\"Not 'til he's eaten something,\" Debbie announced from behind me, placing a bacon and egg sandwich in my hand. \n\n\"Jesus, Debbie. He's spoiled enough, already,\" Jim said.\n\nI shut up and ate, wondering what this was costing me - in dollars and in favors. Looking around I saw that the sills had already been lined up and drilled and they were laying out the walls on the ground and framing them complete before standing them upright. \n\nBy the time we broke for lunch, we had nearly finished the walls. Karen had showed up, from God knows where, and together with Debbie had setup make-shift tables in the back yard. \n\nOnce again, at lunch, I recounted a bit of my tales of Spain, while we discussed the progress. Joe was seated next to me, and leaned in. \"Who's the new babe with the glasses?\"\n\n\"Amie? She was here when we did the original work,\" I reminded him.\n\n\"I thought so. Any chance of an introduction for Eric? He's smitten.\"\n\nThat would be nice, I thought. And it would help get her sights off of me. \"I'll see what I can do.\"\n\nEric was acting tongue-tied and nervous, bracketed by Beth and Robin, while the girls grilled him. With a couple of sandwiches in me, I drew Beth aside, and got her buy-in. We agreed to push the two together. \n\nIt was fun to watch the interplay, as most of us worked to get the two together, while trying not to be overly obvious. Since they were the only ones not in some kind of relation, it wasn't too hard. And he wasn't a bad looking guy. Hell, none of Joe's siblings were.\n\nBy the time we called it a day, we had done the lion's share of the work. The walls and trusses were up, and the exterior sheathing was in place. An interior wall nearly bisected the space creating a 20' x 13' dining area and a 20' x 15' family room. Still a lot of work to do, but most of the rest could be done a little at a time, with the exterior elements at bay. It had seemed like we'd built a really strange roof on the extension, and I figured they were making attic storage space, but Robin and Eric explained that the idea was to make it easy to extend the upstairs if we ever felt the need. Extend the upstairs? With the new addition we were already looking at over 3000 square feet. Never mind the exterior buildings.\n\nWhen Debbie took a dinner head-count, Joe called home, and instead of abandoning us, convinced Cathy to come by, and bring the kids. By the time we'd cleaned up, covered the windows and the exterior side door, Debbie had our meal ready, and Cathy was hard at work beside her. There was still some light left, and with such a big crowd, we ate outside again, this time a huge spaghetti feast, with what looked like about a hundred meatballs, although Debbie assured me there were only 30 or so. Only. Each one looked like a meal in itself, nearly the size of a baseball. \n\nOur efforts at pushing Amie and Eric together seemed to be paying off, as they sat together and chatted, with Beth seated by Eric on the other side, and playing matchmaker. Debbie and Cathy were bracketing Joe, and the teasing looked relentless. At one point he almost spit out a mouth full of food, and I wished I was close enough to hear more. I was between Beth and Karen, and with Jim and Robin seated a good bit away it seemed like as good a time as any to work on the 'Sisters Issue'.\n\n\"What's the latest on you guys and Robin?\" I asked, innocently enough. \"I know the three of you are together behind closed doors a lot. The \"sharing\" thing working out?\" \n\n\"Jack, I don't want to talk about that here,\" she said softly.\n\nI laughed aloud, \"Look around, nobody even knows we're alive.\" I nodded toward Debbie, on Karen's far side, and at Beth beside me. \"They're too busy giving the Howard boys a hard time. So spill.\"\n\nShe heaved a sigh. \"It's not bad.\"\n\n\"I bet Jim's loving it. Going from nothing to you two wild things.\"\n\n\"Well, we're not quite all the way there yet.\"\n\n\"Not 'all the way'? What does that mean?\"\n\n\"Damn you're nosy! It means that he doesn't get to fuck her,\" she said so softly I could barely hear her. \"She gets to help, but that is it.\"\n\n\"Really. And how long do you think that's going to work?\"\n\nI was surprised to see her blush. \"I don't know. It's just so hard to take that next step. I've come close a couple of times, but I just can't do it.\"\n\n\"Maybe tonight would be a good time. Make it a sort of reward. And make it clear you're in charge,\" I encouraged her.\n\n\"Could you help?\" she asked, unexpectedly.\n\n\"Help?\"\n\n\"Yeah. You know, if you joined us, you could make it happen, and it wouldn't be all on my shoulders.\"\n\n\"Karen, as tempting as that sounds, I don't think Beth or Debbie would look kindly on my adding your sister to my 'friends with benefits' list.\"\n\n\"Why not? She's the only one here over the age of 10 you're not screwing already?\" She pointedly looked around the table, and I realized she was almost right. So far I had been with every woman at the table, at least once. Her sister's little scene the day before was the only one she didn't know about.\n\n\"I still think you'd be better off doing this one on your own.\" \n\n\"Please, Jack. If you were just there, it would be so much easier for me. You know I can't say no to you.\"\n\nI closed my eyes and stopped to ponder the complexity of my life. I turned to her and gave her a hug. \"I'll see what I can do, Ok? No promises yet.\"\n\nShe reached over and put her hand between my legs. \"Thanks Jack. You've always come through for me. As far back as I remember, you've used me, and even abused me, but you've never let me down. Well maybe that civil war thing, but that wasn't your fault.\"\n\nI leaned in to Beth to see how things were going over there. \"Progress?\"\n\nShe leaned toward me and whispered, \"Almost closed the deal. He's a little slow, but he's coming around. I think with a few more beers in him and with a little more work on my part, we can get over that first big step.\"\n\n\"I'm working on the 'Sisters Issue',\" I told her.\n\n\"That's good. If we could just get them to play nice, it would make everything around here a lot better. I mean it's already a lot better, but Robin, well you know.\" \n\nAfter the previous day's shared experience, we both knew. Young Robin was wound tighter than a clock spring.\n\n\"I know. That's what I'm working on. They're playing house together, but Robin only gets to play half the game. Karen's on the brink of letting her sister have a full share.\"\n\n\"Tell me later,\" she murmured, with a quick kiss on the cheek, then turned her wicked intentions back to the nascent couple we were trying to bring together.\n\nAfter dinner, I made an effort to help put things away, but I was told, in no uncertain terms, that my first priority was to get myself cleaned up. The other gentlemen present were given similar edicts, and when Eric made as if he was going to head out, he was encouraged to just take a quick shower here, since we had 4 and a half bathrooms anyway, and I'd loan him a clean t-shirt and shorts. He didn't put up much resistance, and was sent off to use the big bathroom upstairs.\n\nWhile we settled who was going to get cleaned up, and where, Karen and Cathy ushered the kids into bed. They were beat, after the day's events, and even having visitors over wasn't enough to keep them from dreamland.\n\nBeth showed up at the beginning of my shower, giggling. I watched her strip and climb into the shower with me. \"This could be interesting.\" She informed me. \"Whatever you're doing must be working. I saw Jim and Robin head off to shower together.\"\n\n\"And Karen isn't monitoring the situation?\"\n\n\"Nope. She and Cathy are dealing with the little ones, and helping Debbie clean up. Amie's using my room upstairs to shower. Come to think of it, that may be the first time that shower's ever been used.\" She passed me the soap, and I helped lather her up, then she returned the favor. \"So, what's the scoop?\"\n\n\"Karen's letting Robin play around, but she's not allowed to screw Jim.\"\n\n\"That sucks. And?\" \n\n\"And she asked me to help them take the next step.\" It was nice to rinse the soap off of her smooth young body. \n\n\"Help them? How? Don't tell me they don't know how to screw,\" she sounded a little irritated, and her lathering of my 'boys' was a little rougher than I'd prefer.\n\n\"She just wants me there, sort of the directing force behind going all the way. When we're together, she always gives in to me, and she thinks that it'd be easier for her that way. I think she's nuts.\"\n\n\"Don't you dare fuck Robin,\" Beth said.\n\n\"I don't plan on it.\" \n\n\"I know about you and your plans. I don't care what she or Karen wants. Don't do it. If you ever go down that path, it'll be with me there, right?\"\n\nI wondered if that was a hint at the previous day's escapade, and a possible future replay. \"Absolutely.\" I pulled her close and let my hands wander freely. \"It's not like I really want to anyway. Not with you here.\"\n\n\"Don't start, Jack. Everyone's out there waiting for us.\"\n\nMy hand had reached between her legs, and I was rubbing her. \"Let 'em wait a bit.\"\n\n\"Damn, can't you wait a little while?\"\n\n\"I was hoping you'd take care of things, sort of take the edge off before I head up with Karen and Robin. Last thing I need is to be all worked up in a room with those two.\"\n\n\"Jesus, you are so bad.\"\n\n\"And you're so good, beautiful girl.\" She leaned back into me, as my fingers plumbed her depths.\n\n\"At least let's finish up in here, before we use up all the hot water.\"\n\nWith an 80 gallon tank upstairs, and the Master Bedroom using its own tankless heater, that wasn't a likely danger, but I went along rather than argue the point. Who wants to argue with a beautiful naked teenager anyway?\n\nWe dried off together, and I waited in the bedroom while she dried and brushed her hair. She was in such a hurry, but still had 10 minutes to spend on her hair. Eventually she made it to the bedroom, where I was waiting patiently, just as naked as her.\n\nShe walked over and sat beside me, reaching over and caressing my cock which had wilted while waiting.\n\n\"Looks like there's no edge left to take off,\" she teased.\n\nI reached over and pulled her down to the bed, kissing her, and once more letting my hands wander where they would. Her hand didn't do much wandering, staying focused between my legs.\n\nAs I firmed up, I moved between her legs, opening her up and positioned myself to enter her. She reached down and lined me up. With her guidance, I slid inside, ecstatic to be where I was. I kissed her deeply, and thrust home, filling her.\n\n\"I can't believe I'm letting you screw me, with an entire house full of guests just beyond that door.\"\n\n\"Just don't scream too much,\" I teased.\n\n\"You wish, buster. You'd love that, having me screaming out so everyone would know just what you're up to.\"\n\n\"And right now, I'm up to about 8 inches deep in the sexiest girl I know.\"\n\n\"Liar. Debbie's still out there,\" she reminded me.\n\n\"You are just as sexy as her,\" I insisted, thrusting into her hard, reaffirming my feelings.\n\n\"I wish,\" she said softly.\n\nI stopped my motion, lingering above her with my cock head barely buried. \"Don't. You are an absolutely amazing woman. Don't you know by now what you do to me?\"\n\n\"I know. I know you want me. Sometimes I just don't understand why. And if you did want me that much, why do you always go back to Karen and Cathy, and even girls like Amie, Robin and who knows who else?\"\n\n\"Say the word, and I'll never touch another one of them again.\"\n\n\"I don't think you could.\"\n\nI slid my cock deep inside of her. \"Try me.\"\n\nBefore she could answer me, I heard a pounding. \"You guys going to come out and join us?\" I heard Karen call from beyond the door.\n\nBeth started pushing me away, leaving me hard and wanting. \"Damn! I'm so embarrassed. Get dressed; you'll just have to wait a few more minutes to fuck Karen with that thing.\"\n\nI stood beside her, while she climbed off the bed. I took her into my arms. \"The hell with her. The hell with all of them. Let's just lock the door and break the bed.\"\n\nShe hugged me tight. \"It's Ok. I know you love me. I'm just feeling a little insecure right now.\"\n\n\"I'm sorry. You should never feel insecure. I love you madly, and I'm lucky to have you in my life.\"\n\n\"I love you too, but we've put a lot of things in play, and I think we'd better head out there and deal with 'em. I think Amie needs some help landing Eric, and if you can do anything to resolve the sisters thing, it would make all of our lives a little easier.\" She released me, and went to the closet to get dressed. I just threw on some shorts and a t-shirt. \n\nWe were already late for the party going on in the living room. The laughing and ruckus gave every indication we hadn't been missed too much. \n\nThe couch was already full to overflowing, with Joe wedged between Cathy and Debbie, and Karen seated at the end. The love-seat looked to have a bit of room, which was quickly remedied by Beth scooting in on one side of Eric, with Amie already perched on his other side. Her added presence required Eric and Amie to get even closer. Amie had obviously found plenty of time to clean up. She was wearing a long t-shirt that reached halfway down her thighs, and if my guess was right, not a whole lot else. Her hair looked wet, and was tied back. She looked good - really good. Lucky Eric.\n\nMy favorite recliner was still open, but I felt a little lonely sitting there by myself. It did give me a great view of all the interactions, and it was entertaining. When Amie moved, I had a good look up her legs, and strove to see if my guess was right. \n\nI wasn't lonely long. Robin came traipsing down the stairwell, and after a quick survey of the room she bounced over and planted herself in my lap - with a teasing little wiggle.\n\n\"Have a nice shower?\"\n\n\"Not as nice as yours, I imagine,\" she laughed, adding another wriggle.\n\n\"I behaved myself, mostly, I'll have you know.\"\n\n\"Oh, too bad. Mine wasn't completely innocent, but not as naughty as I'd wish. I'm telling you, Jack, Karen's driving me nuts with this deal of hers.\"\n\n\"I'm glad you're sticking with the plan, though.\" Her constant rolling of her hips in my lap was resulting in a perfectly reasonable response. \n\nJim showed up around then, and after a quick glance around the room, seated himself at Karen's feet, getting involved in that conversation.\n\nRobin leaned back, wrapping an arm around my shoulders. Her face was close to mine and she whispered, \"Lots of subplots going on here, where do you thing this is all going?\"\n\nI had to admit I had no idea. \"My guess is that Debbie and Cathy will be taking Joe into the bedroom before too long, and make his day.\" I was a little surprised at the thought. It wasn't like Debbie, even though she'd been with Joe a couple of times already.\n\n\"And what are Beth and Amie up to?\" She asked, bringing my attention to that group, nibbling on my ear at the same time.\n\n\"I don't imagine they'll be going too far, but I imagine before Eric leaves here, he'll be working on a way to be with Amie, let's say, more thoroughly.\"\n\n\"I hope she doesn't let him close the deal too quickly. We could sure use a couple more days of his help,\" Robin chuckled.\n\n\"I guess that Beth will do her best to be the regulator of that relationship. She seemed eager enough to bring them together.\"\n\n\"And that leaves you and me, and Karen and JimBob,\" she observed.\n\n\"I guess it does.\"\n\nDebbie extricated herself from the couch and came over to me. \"Help me out in the kitchen a moment, will ya, Jack?\"\n\nI dislodged Robin, and walked across the room with the incomparable Debbie. Once in the kitchen she turned to me. \"Cathy wants to stay tonight. And she'd like me to stay with her and Joe. What do you think?\"\n\nI smiled and pulled her close. \"You two have been teasing him unmercifully all night,\" I observed.\n\n\"It's too easy.\" She smiled, and I knew she was having fun. \"Would you mind, much?\"\n\n\"If you're Ok with it, I think it'd be a nice thing to do.\"\n\n\"Care to join us?\" she asked, her hands rubbing up and down my sides.\n\n\"If it's alright with you, I thought I'd try to help Karen, Robin and Jim resolve a couple of issues. I'm not going to do Robin, but Karen wants my support while she finally lets the other two get together.\"\n\n\"Jeez. What have they been doing up in that room?\" She asked, surprised.\n\n\"Apparently everything but the real thing. Karen just wants me there to sort of 'encourage' her to let the other two seal the deal. I don't imagine it'll take all that long. I'll join you after.\"\n\n\"Don't take too long,\" she said. She leaned in and gave me a warm kiss. \"I'll be waiting.\" She turned and headed back to the living room.\n\nI sighed, and then followed her back in. I went over to Karen. \"Say your good-nights. I think it's time for us to head up.\"\n\nI took my own advice and thanked Eric and Amie for the help, and gave Beth a quick kiss. \"I'll be back before too long.\"\n\n\"Don't be in too much of a hurry,\" she answered softly.\n\nAs I turned and headed up the stairs, Robin trotted over to my side. \"What's going on Jack?\"\n\n\"That's up to your sister,\" I told her, tugging her up beside me and patting her ass, on the way upstairs.\n\nWith the four of us in Karen's room, I directed my attention to Robin. She seemed surprised when I sat on the edge of the bed, and pulled her close. \"Let's see if that t-shirt is true.\" The words written across it, 'Sleeps Well With Others,' might well be tested.\n\nI peeled the shirt off of her, exposing her breasts, and pulled her close enough for a taste. After a minute or two, I undid her pants and lowered those as well. She was going commando, no surprise there. I stood, picked her up and laid her out on the bed. Within minutes I was between her legs, getting my first taste of her. Feeling a shift on the bed, I looked over to see that Jim was back to his old tricks, playing follow the leader. Still half-dressed, he was going down on Karen.\n\nMy purpose was simple enough, and after a couple of minutes of fun, when I had Robin really worked up, I climbed off of her and got undressed. She bounced off the bed and helped me, then dropped to her knees and I once more had a chance to sample her excellent oral skills.",
        "I wasn't easy on her, and fucked her face pretty aggressively, but couldn't get Beth's admonition out of my mind. I looked around and saw that Jim was seated on the bed behind me, and Karen was hidden from my view. I had a pretty good idea what she was up to. I pulled my cock out of Robin's warm and willing mouth and helped her stand, then took her hand and guided her around the bed.\n\nI sat beside Jim, and encouraged Robin to get back to work. It was fun to watch, the two sisters doing their best to satisfy us. After a minute or two it looked like Jim was getting too close. I leaned over and tapped Karen on the shoulder. \"Ease up sweetheart, and come over here and help your little sister.\"\n\nJim seemed a little surprised, but Karen had a big smile and was soon settled between my legs. This was obviously something new for them, sharing, and they started a little awkwardly. They seemed to compete a bit at first, and then I heard Robin giggle. That had Karen joining her and they took turns a little more easily. They even started working together, and seeing their lips side-by-side, sliding up my cock was a complete turn-on. The girls soon got into it, and were playful and sexy, giving me an amazing dual blow-job. \n\nI teased Jim, who was watching unabashedly. \"You lucky bastard. These two are pretty amazing. You must love this.\"\n\nHe pouted. \"Two at once? That's your specialty. I'm happy enough to get one or the other.\"\n\nGood answer, I thought. \"Well, tonight, that's going to change. Let me have this one, and you're next.\"\n\nThe girls giggled and went at me even more aggressively. A couple of more minutes and they had accomplished their immediate goal. I was ready to pop and let them know it. The sucking sisters backed off and took turns sucking me down, just a few strokes each. I wondered who was going to win this little contest, then decided to settle the issue. When Robin had me in her mouth, I reached forward, thrust into her mouth, and held her head while I brought myself to completion, and filled her talented mouth. \n\nSighing, I leaned back on the bed, closing my eyes and letting the two delicious sisters finish me and clean me up. \"God, that's nice.\"\n\nA few seconds later the two girls had Jim stretched out on the bed, and they were delivering another sexy dual blow-job to my partner in crime. Watching the girls at work, I wondered at what was going on downstairs among the rest of the gang.\n\nI got behind Karen and played with her while she and her sister applied their attention to Jim. It didn't take them long to carry him to the point of no return.\n\n\"Nice, huh?\" I asked him, while I filled Karen's pussy with a couple of fingers.\n\n\"Oh, God!\" he groaned. \n\n\"Finish him Karen,\" I told my plaything. \n\nShe did as directed, thrusting her face down on his cock and receiving his involuntary offering.\n\n\"Robin, come her, you sexy little slut, and get me ready for your sweet sister.\" \n\nThe troublesome little sister eagerly came to me and one more got me ready. She was good, no doubt about it, and it didn't take her long to have me hard and ready. I was even starting to regret not using her mouth more frequently. That wouldn't have really been cheating. With the ice broken, I'd have to see what I could do to follow up on that.\n\nKaren was watching, with Jim cuddled up behind her. When I was good and stiff, I separated myself from Robin's ministrations and lay down on the bed. \"Come here Karen, I need you.\"\n\nShe didn't need to be asked twice. She straddled me, and soon was riding me sweetly, those big breasts of hers above me, begging for attention. Instead, I pulled her down, holding her close. \"Now. Let him have her,\" I whispered to her.\n\nShe gasped while I held her ass tightly, and thrust into her.\n\nShe rose up and looked behind her. \"Jim, don't leave my poor sister hanging.\"\n\nJim lay down beside me, and Robin took a couple of minutes to get him ready for her. Karen sat upright, fucking herself thoroughly, while watching her sister and her lover. When she observed he was fully hard, she made the big step. \"Go ahead, Robin, fuck his brains out.\" \n\nThat was all Robin needed to hear. She quickly climbed aboard, and used him hard. After a few minutes, I eased Karen off. \"Sit on his face.\"\n\nShe was obedient as usual, complaining about my dominant, forceful ways, but settling down over Jim's mouth, facing her sister. \n\nI, on the other hand, stood between the sisters and took turns feeding them my cock. There was something especially naughty about sliding my cock between each of their lips while Jim was buried beneath them.\n\nI watched Karen move as Jim dislodged her from his face. \"I'm getting close,\" he warned her. Robin started to rise up, but Karen pushed her back in place. \n\n\"Finish him,\" she said softly, then leaned forward and hugged her sister, before climbing off and letting the couple finish in peace.\n\nWe watched them get off together, and Robin did not disappoint, riding Jim hard until he cried out and grabbed her hips, thrusting madly into her. \n\nI leaned over and turned Karen's face to mine and kissed her gently. \"You guys have fun.\"\n\nI left the three of them to find out what was happening elsewhere in the house. I felt proud I hadn't come in either one. It showed restraint. Blow-jobs don't count anyway.\n\n===\n\nBeth and Amie were parked on the couch, chatting quietly, with the room to themselves.\n\n\"Eric took off?\" I asked.\n\nBeth giggled, and moved to the side, making room for me between the two of them. I was dressed just in my shorts, and still sporting a hard-on from upstairs.\n\n\"Didn't want to spoil him too much on our first night,\" Amie explained, leaning into me. \"What have you been up to?\"\n\nBeth was curious as well. \"How did the sisters experiment go?\"\n\n\"Much better than anticipated. I don't know if that will settle everything, but it's one more hurdle overcome.\" I said.\n\n\"And you and Robin?\" Beth asked pointedly.\n\n\"No me and Robin,\" I told her.\n\nShe leaned in and grabbed my hard-on. \"I guess that explains this.\"\n\n\"And the others?\" I asked her, while her hand clutched my cock tightly.\n\n\"Tucked away in our room.\" \n\n\"If you listen, you can hear that they're playing well together,\" Amie added, then leaned in and placed her hand over Beth's on my cock. \"You know, I could play well together too.\"\n\nBeth laughed. \"You had your chance, Bimbo! Are you going to go straight from making out with Eric, to this?\"\n\nAmie smiled. \"Why not? It looks like you plan to.\"\n\n\"Oh really?\" I asked.\n\nBeth blushed hard. \"We were just playing. I was just helping things along.\"\n\n\"Oh, PuhhLEASE,\" Amie exclaimed, sliding her hand under Beth's and giving me a delightful squeeze. \"If I can share with you, you could at least do the same.\"\n\nBeth let go of my cock and left it to Amie's attention. \"What do you think, Jack? Should we let her play, just a little?\"\n\n\"Oh no you don't! I'm not going to let you put this on me. You and Debbie make that choice. I'm a two woman man.\" \n\n\"Two? How about Cathy in there, or Karen?\" Beth reminded me.\n\n\"It's your call. You and Debbie are more than enough for me.\" I held firm to my shaky ground.\n\nAmie was anything but idle, and had slid her hand inside the waistband of my shorts and was stroking my hardness with naughty intent. I could grow to really like this girl.\n\n\"I guess a little play wouldn't be too bad,\" Beth finally said, and slid off the couch. She grabbed my shorts and pulled them down, leaving me naked on the couch with Amie holding onto my cock. \n\nThat was all Amie had to hear, and she leaned over and took me in her mouth. It was pretty wonderful. I was becoming more and more surprised by Beth and her willingness to bend her own rules so easily. Especially after the bedroom scene with Robin. Go figure.\n\nBeth stood and undressed quickly, then perched beside me on the couch and guided my mouth to her perky tits, while her friend went down on me.\n\nSome loud cries from the bedroom got the attention of all of us. It also got Amie moving. She lifted the bottom of her shirt, confirming my earlier guess about her underclothing state. Or lack thereof.\n\nShe climbed onto my lap, guiding my hardness between her legs. I felt the pressure of her tight pussy gently ease and let me enter her partially. \"God, you are so big, Jack. I don't know if I can take it all,\" she gasped, slowly settling down.\n\n\"Oh right,\" Beth quipped. \"We all know it's fit at least once before.\"\n\nAmie turned red, and moaned as she settled even further down. \"I don't know how. Fuck, he's big.\"\n\n\"If it's a problem, slut puppy, I'll take over,\" Beth said.\n\n\"Not yet, please,\" Amie begged. \"Just let me get used to it for a bit.\"\n\nI didn't want her to get used to it too much. I was ready to fuck her delightful red-haired brains out.\n\n\"I'll give you a couple of minutes, and then we share,\" Beth warned, then turned my face back into her tits, which I gobbled gratefully.\n\nAmie grabbed my shoulders, raised up and then settled down again. It took a few tries, but she eventually took the whole thing. Once she'd managed that much, she rose up and dropped down quickly taking me to the root, and wriggling her tight little butt, pushing me even deeper. \"God, that's amazing,\" she sighed, then leaned into me and hugged me.\n\nMy cock felt huge inside of her. I turned away from Beth's tits, and pulled Amie's face to mine and kissed her deeply. Pulling away, I told her softly, \"Fuck me, you sexy little beast.\" I looked into her big green eyes, her glasses exaggerating their largeness.\n\nShe smiled then did her best, riding me wonderfully, while my darling Beth watched. Beth got off the couch and reached between my legs, fondling my balls while Amie bounced up and down. I was in heaven. Who was I kidding? I imagined half of heaven would have traded places with me in that moment.\n\nI watched Amie, who had closed her eyes and was ecstatically using me, while I caressed her ass. Beth stood and reached around her friend, reaching up inside her shirt and squeezing her tits. \"Not too much yet, Greedy. It's my turn.\"\n\nAmie took a few more strokes, then slowly climbed off of me. \"Wow.\"\n\nBeth quickly took her place, facing away from me, and soon was riding away as well, letting loose the slut cowgirl inside of her.\n\nAmie cuddled up to me. \"Damn, Jack. You're one lucky man.\"\n\nI leaned back on the couch and pulled Beth with me, with a squeal. I had her by the thighs, and fucked up into her, pounding her as hard as I could from that angle. \"I'd never argue that. I'm the luckiest man in the world.\"\n\nAmie reached forward and caressed Beth where I was entering her. I felt her fingers probing, sliding in around the edge of my cock, wringing a long drawn out moan from our plaything. \"She has the prettiest pussy, I'm so jealous.\"\n\nI slowed down, long-stroking the gorgeous brunette. Amie leaned over and kissed me hard. When she pulled away, she turned toward the couch end, getting on her hands and knees. She flipped the bottom of her shirt up, exposing herself, and asked plaintively, \"My turn?\"\n\nBeth turned and looked at her friend, then reached out fondled her awaiting ass. She languidly sat up then climbed off. \"Go ahead, give it to her.\"\n\nI wasn't one to argue, and took my place behind the oh-so-willing Amie. It didn't take me more than a few seconds to lodge myself inside of her pink tightness, and I started pounding away at her skinny ass. She groaned, and dropped her head to the arm of the couch, moaning almost continuously.\n\nBeth kneeled beside her, reached out and grabbed the red-head's butt cheeks in her hands, spreading them wide open and squeezing tightly. \"Fuck her, Jack. Fuck her hard.\"\n\nI pounded our slut mercilessly, listening to her slowly peak. Beth continued her teasing, sliding a finger inside the pretty red-heads tight little bunghole, making her scream. God, that looked tempting. I was fucking her viciously, completely unmerciful, using her as hard as I could. She moaned continuously, until she cried out, quivering, coming hard on my cock. Then Beth was pulling me off of the pale beauty, pushing me back down on the couch, and riding me again. \n\nShe was an animal, fucking me wildly, her hips almost a blur as she used me for her own selfish pleasure. Gasping, she lowered herself to my body. I reached down and raised her hips up enough for me to fuck up into her powerfully, with long, full strokes. \n\n\"Jesus,\" she moaned. I looked over her shoulder and saw that Amie had recovered and had her hands between Beth's legs.\n\n\"I can feel him inside you,\" Amie told her friend.\n\n\"Oh god, that's so wild,\" Beth gasped. \"How many fingers is that?\"\n\nAmie grinned, \"Two. Your ass is so tight, I'm not sure I could fit another one in there. Want me to try?\"\n\n\"Ok,\" Beth said softly, then moaned again.\n\nI screwed her slowly, still holding her hips, while she trembled.\n\n\"Flip her over, Jack, and we can trade holes.\" Amie suggested, wickedly.\n\nBeth raised her head and looked at me. She looked nervous. And excited.\n\n\"Shall we?\" I asked her.\n\nShe hesitated, then nodded.\n\nI let go of her hips and she sighed. Then she rolled over, still on my chest, and pulled her legs back almost to her full tits. I felt Amie's hands take hold of my cock and gently guide me into Beth's tight ass. She held me firmly and I gave a thrust, pushing hard against the tight opening, feeling resistance before popping through. Beth gasped, and I felt a couple of inches slide into her.\n\n\"Oh shit. Stop, stop!\" She cried out.\n\nI held her still, letting her get accustomed to me.\n\n\"Fuck, that hurts,\" she groaned. She breathed deeply. \"Ok, slowly now.\"\n\nI pulled back a hair, and pushed forward again. \"Stop!\" \n\nI held perfectly still. It was a bit of a strain, because I was holding her up by the hips, and if I let go, she'd be skewered.\n\n\"Amie, get some lube from the bedside,\" Beth asked her friend. \"Hurry.\"\n\nAs Amie made a dash for our bedroom, I tried to calm my sexy, but sore, little teenager. \"We don't have to do this now. Hell, we don't have to do it at all.\"\n\n\"No. I can do this. I'll be damned if you can screw everyone else's ass, and not mine,\" she insisted.\n\n\"This wasn't how it was supposed to be,\" I told her, kissing her cheek.\n\n\"You think? You weren't supposed to tear my ass in half, leaving me a screaming, helpless invalid.\" She teased, giggling, then groaning as she settled just a bit down my cock. She turned her face and looked at me, wide eyed, then gave a little nod.\n\n\"Slowly,\" she whispered urgently.\n\nI lowered her just a bit more, and felt when we'd reached our limit, and her ass was clinging too tight to make any more progress. \n\n\"Is that almost all of it?\" she asked.\n\nHow could I tell her it was less than half? As I was about to break the news, Amie finally showed up with bottle in hand.\n\n\"What the fuck, Ames? That took forever!\" Beth hissed.\n\n\"I'm sorry, but there was an uncovered cock in there I just had to have a little taste of.\" She looked suitable ashamed.\n\n\"You are such a fucking cock slut. Now help me before I'm ruined.\"\n\n\"Lift her up a little,\" Amie told me.\n\nMy arms were really feeling it but I managed. If Beth would just let go of her legs, it would have been a lot easier. \"Should I pull out?\"\n\n\"No!\" Beth growled. \"I don't know if I could ever get it in there again.\"\n\nAmie got the exposed part of my cock well lubed up, and I lowered Beth a bit, feeling the immediate difference. I was able to lift her up more easily the second time, and I felt more of the cool lube just below my buried cock head. Holding Beth still, I pushed up with my hips, gaining more ground, then pulled back even further. I could feel my cock almost come out, the head barely lodged inside of my sweet little roommate. Amie came to the rescue, rubbing even more lube on us, and when I lowered Beth, I sank a good half-way into her.\n\n\"Are you Ok?\" I asked\n\n\"God, that's so much better. It feels tight, but it doesn't hurt. Try some more.\"\n\nI carefully pressed into her, pushing in and out, working my way deeper, inch by inch. Amie continued to help, her hand on my cock, feeding me into her best friend's tight butt-hole. It took a while but I finally felt her ass settle all the way down as the last of my cock filled her.\n\n\"That's it,\" I told her.\n\nBeth groaned. \"God, I can't believe you're in my ass.\"\n\nI held her still, while she got used to me. That was too much a temptation for Amie who leaned down and pressed her lips against Beth's open, exposed pussy. I could feel her chin pressed against my cock.\n\n\"Oh, my God,\" Beth gasped, \"Oh God, Ames, that's it!\"\n\nI nudged my cock in and out of her, as much as I could from where I was, while Amie tamed her. She was driving Beth crazy, and I was happy to be along for the ride. Beth's moans and groans grew more insistent, and her hands reached down to hold Amie's face against her. I could feel Amie's fingers through the thin walls of Beth's pussy, and found I was able to fuck her butt more completely, sliding in and out of her for at least half my length, her tightness and her complete abandon driving me crazy.\n\nI turned her face to mine, and thrust my tongue into her mouth, thrusting harder into her. She was breathing hard, through her nose, and moaning into my mouth. When she came she almost bit off my tongue, screaming into my mouth. Her mouth became slack, and I probed her mouth deeply with my tongue, fucking her even harder.\n\n\"God, that looks so amazing,\" I heard Amie say. \n\nI looked down and saw our friend was sitting up, her hand still working away at Beth's young pussy. I reached out and pulled the back cushion off the couch, making a little more room. I rolled with Beth, staying buried in her virgin ass, until we were both on our sides. I lifted the teenager's top leg to get a little more leverage, and began to fuck her tight ass for real. She gasped on each full stroke, while I pounded her hard. \n\n\"God, that's good Jack, you're fucking my ass so good.\"\n\nI was, and I was feeling the impending undeniable need to come inside of her. \"I'm going to come for you, beautiful,\" I told her softly.\n\n\"Come for me. Come in my ass. Do it,\" she gasped, pushing back on each stroke. I peeked over her shoulder, and watched Amie kneel beside the couch and lean forward to kiss my sweet young roommate.\n\nWith a groan I emptied my load in her ass, feeling a burning fire pulse down the length of my cock, as I sprayed her continuously, burst after burst filling her. I was breathing hard, gasping, as my hips finally slowed and then stopped, still completely sheathed.\n\nAmie smiled. \"That was incredible.\"\n\nBeth giggled. \"You should try it from this side. I won't be able to sit for a week.\"\n\n\"I didn't hurt you, did I?\" I asked, worried that I might have gone a little too far. Even with the lube, it was a thorough ass pounding. Especially for her first time.\n\n\"Of course you hurt me, you jerk. You stuck a fucking baseball bat up my ass and reamed me senseless with it,\" she growled. I eased my cock out of her butt, and she sighed when I finally was out.\n\n\"I'm sorry, baby, but it felt so incredible.\" I explained, nervous that I might have really pushed things too far at the end.\n\n\"God, I'm not. I don't know if I ever came that hard. We are SO going to be doing that again, once I've recovered. Debbie's going to have to see this.\" Then she turned to her friend. \"This was all your idea, you know. Making him rape my ass. I swear I'm going to cheer him on when he splits you open like that.\"\n\nAmie leaned in and kissed her again. \"It may kill me, but when we play again, I'll let him take that cherry, if you'll help.\" Then she leaned over Beth and kissed me. \"Would you like that, Jack? Would you fuck my virgin ass, and make me cry for you? Stick that beast of a cock so far up my butt that I can taste it?\"",
        "\"I'd love to, given half-a-chance,\" I admitted freely.\n\nBeth giggled. \"I guess we'll have to schedule a play date.\" \n\nI watched the two stunning teenagers hug, and already felt myself responding to the idea of burying myself in Amie's butt. I sat up and looked for some napkins on the end-table to clean myself up a bit. I watched Beth waddle off to the bathroom, walking tenderly, while I wiped myself clean. Turning back I saw Amie bending over spreading her ass cheeks for me, the little pink star of her butt-hole calling to me. \"See Jack? Never been used. Not even a finger.\" She giggled when I groaned. \n\nThen she turned around, pulling my hands and the napkins away from my semi-hard cock. She smiled at me. \"I think you'll find that I can be a very naughty girl.\" She lowered her face and took my sticky cock in her mouth, sucking me gently and thoroughly, until she backed away from a clean and nearly fully erect staff. She came to me, straddled my lap and lowered herself down onto my cock. She held my face in her hands and kissed me while she settled all the way down.\n\n\"I'm going to be your little slut, Jack. You and your girls can do whatever you want with me. Fucking my ass raw is just going to be the beginning. I want you to tie me up and use me like a Kleenex.\" She leaned in and kissed me more aggressively, grinding her hips down. She sighed, stood up, leaving me wet and hard. \"But I have to go home now. Think of me when you're pounding that into one of your ladies.\"\n\nI watched her dress, stunned by the turn of events of the evening. God she looked good. Beth came out just as she was finishing and walked her to the door, where they hugged once more. My teen beauty came back to me, raising an eyebrow at the state of my cock.\n\n\"Jesus, Jack. My ass is still burning. That was wild, but I think it's going to have to be a very occasional thing, even with lots of lube. Remind me to go shopping for about a gallon of that stuff.\" She stood and took my hand drawing me off the couch. \"I guess Amie was right. She does play well with others. Shall we see what's going on in our bedroom?\"\n\nI was almost afraid to walk the 10 feet to our bedroom door. Almost.\n\n* * * * \n\nI hope you enjoyed this new chapter. Watch out for that Amie, though, she's trouble. Oh yeah, and as always, if you liked it, please vote. "
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "sisters",
        "anal first time",
        "anal",
        "threesome",
        "beth",
        "virgin",
        "ass",
        "ffm",
        "ffmm"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/cvsn-16-beths-last-virgin-hole"
}