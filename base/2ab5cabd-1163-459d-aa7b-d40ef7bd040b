{
    "title": "The Web Ch. 05",
    "pages": [
        "Fifth part of an eight part series. I wrote this story to develop some themes more along the lines of \"mind-influence\" than \"mind-control.\" The most erotic time in a relationship is often spent exploring the boundaries of trust and sharing. If that turns you on, then this story will have many molten scenes. At the same time, as the writing progressed, the characters grew and influenced each other in interesting ways. Is it better to get what you want, or learn what you want? I still don't know who really was in control. Maybe you will.\n\n*\n\nIt was good to see my parents. With her usual intuition, my mother knew something was up in my love life. I gently dissembled and deflected in response to her questions, getting a raised eyebrow.\n\n\"She must be really special,\" she said when she had me alone. \"You are hiding this much too well.\"\n\n\"She's an heiress, Mom. I just don't want you to be in danger of kidnapping or something.\"\n\n\"When should I expect the bodyguards?\"\n\n\"You'll need them now if you keep bugging me about this.\"\n\n\"Oh, being a wise-ass to your own mother. I hope you treat this mystery woman better.\"\n\nI wondered what Mom would think if she knew exactly how I was \"treating\" Cathy. I banished that idea from my mind and kept up the banter. \"I treat all the ladies well, Mom. That's why I'm such a hot date.\"\n\nI got rolled eyes in response to that, but she must have decided that she'd probed enough\u2014at least for today.\n\nThat evening, I took a walk outside and dialed up Cathy.\n\n\"Hello, Cathy, it's Brad.\"\n\n\"Pretty racy homework, Brad. I'm doing it right now.\"\n\nMy cock lurched, instantly straining against my pants. \"You mean you're...\"\n\n\"Yes, Brad, I've got the small one buried. It feels good. Surprised?\"\n\n\"I've learned to expect surprises from you, Cathy. That's totally hot. If I wasn't on a walk in the neighborhood, I'd ask for a play-by-play.\"\n\n\"Maybe I should do that anyway. Sounds like fun to me. It's pretty lonely here. I've got a free hand that's just itching for something to do.\"\n\n\"Jesus, Cathy, you're killing me.\"\n\nShe laughed. \"It went in pretty easy. I just relaxed and slowly worked it back and forth until it slid home. Did I tell you it felt good? I think you're turning me into a back-door girl.\" Cathy was really turned on to be talking like this.\n\n\"So what's next?\"\n\n\"Oh, I think you know what's next,\" she purred. \"But for tonight, what's next is that you get to listen to me play with myself.\"\n\nAnd that's exactly what she did. I tried to keep from stumbling off the curb as I listened to Cathy get herself off. I could almost feel her shudders when she came. When she finally calmed down, she threw another curve ball.\n\n\"So how are your parents doing?\" It was like I had just called and we were starting the conversation.\n\n\"Uh...they're great.\" I said, scrambling to recover. \"Mom seems to think I'm in deep with some hot girlfriend.\"\n\n\"What did you tell her?\"\n\n\"It's what I didn't tell her that clued her in,\" I replied. \"She's another one of these maddening women in my life that pick up on my vibes more than is good for me.\"\n\n\"Better come up with a good cover story quick.\"\n\n\"Yeah, maybe I'll tell her that I'm helping this really hot friend explore her sexuality, and I'm...\"\n\n\"...and you're...?\"\n\nI decided to just say it. \"...and I'm falling for her.\"\n\nThere was a silence, and then a softer voice. \"Well, it might help to round out your story if you add that your 'hot friend' is falling for you too. That she keeps you on the phone because she likes to hear your voice. That she said you're once in a lifetime.\"\n\nNow it was my turn for silence as my brain tried to comprehend what I just heard.\n\n\"Cat got your tongue?\" Cathy gently asked.\n\n\"Something like that,\" I replied. \"I'm just trying to figure out how this story can get any better.\"\n\n\"Oh, I'm sure we can find a way. Good night, Brad.\"\n\n\"Night, Cathy.\"\n\nI stumbled back home, my mind whirling. I saw the gleam of recognition in her eyes as Mom looked at my face. If she checked any other parts of my body for clues, she was very discreet about it.\n\n\"Good night, son. Sweet dreams.\" I heard a slight emphasis on the last two words, but not enough to call her out on it.\n\nThe next morning at breakfast, I decided to come clean with my parents and get it over with.\n\n\"As you've guessed, Mom, there is a lady friend in my life. Her name's Cathy.\"\n\n\"Can she cook?\" My Dad liked to play the curmudgeon sometimes.\n\n\"As a matter of fact, she can, Dad. She cooks really well. Of course, not as well as you do, Mom.\"\n\n\"Of course, dear. I'm happy to hear that you're dating again. So what's she like?\"\n\n\"Nothing too special, Mom. She's tall, brunette, hair down beneath her shoulders. She's very good looking, classy, well-read, smart, athletic, and good in...the kitchen.\" I laughed when I saw Mom's eye's jump on that last one. \"Now that I think about it, I've got a picture of her on my laptop. Let me go get it.\" I had taken a picture of Cathy and Kelly at the resort on the way to dinner.\n\n\"Cathy's the brunette. Her friend is Kelly.\"\n\n\"Looks like they're really good friends,\" Mom observed. It was true. The ladies' friendship radiated out from their faces, their posture, and the casual arm they draped around each other's waist. \"What's Kelly like?\"\n\n\"A lot like Cathy. Wicked smart, classy, athletic, funny. I don't know so much about her cooking\"\u2014Dad laughed\u2014\"but she appreciates good food. She's more direct in her approach\u2014Cathy's more understated. And you're right, Mom. The two of them are like sisters that really like each other.\" I saw my mother nod to herself. \"Yeah, Mom, I remember what you always say. Judge a person by their friends. On that score, Cathy ranks pretty high.\" I saw Mom smile at that, and then she got a wicked gleam in her eye as she studied the picture a bit more.\n\n\"That's a lovely setting, Brad. I can't remember seeing anything like that around where you live. Where is it?\"\n\nBusted. \"Uh...that's a resort about an hour away. Lovely grounds,\" I said lamely.\n\n\"Must be a great restaurant, to drive all that way for dinner.\"\n\nMy Dad chimed in, unable to resist. \"Was Kelly traveling with anyone?\"\n\n\"Uh, no, Dad. Just the three of us.\"\n\n\"Way to go, son! Two lovely ladies on a getaway! That's my boy!\" Dad whooped and punched me on the arm.\n\n\"I'm trying to remember why I thought it was a good idea to tell you guys anything. Do either one of you remember?\"\n\n\"Because we would have dragged it out of you anyway. Isn't it easier this way?\" my mother asked reasonably.\n\n\"Uh, I guess so. Any more questions or observations before this interrogation is over?\"\n\n\"Just one, Brad. When do your father and I get to meet this mystery woman?\"\n\n\"Oh, I'm sure we'll find a time,\" I evaded, snapping the laptop shut and taking it back before I got any further uncomfortable questions.\n\nLater my mother found me on the deck and came out. \"I hope you know, Brad, that we enjoy giving you a bit of a hard time, especially about your love life. It's one small compensation for all the work of raising you.\"\n\nI laughed. \"I guess on that score, I'm getting off pretty easy here.\"\n\nMom laughed too. \"Cathy sounds like quite a catch.\"\n\n\"She does stack up well on anyone's desirability ledger. However, it goes further. I've never met anyone where the chemistry matched up so completely. We just...understand each other. I guess that's why I'm reluctant to say too much yet. Everything's perfect so far...\"\n\n\"...And you wonder if there's some point where it all falls apart?\"\n\n\"Yeah. Maybe she wants to study nomads in Mongolia or something, where I won't see how it fits in my life. There's a lot to know about her before I know if she's the one.\"\n\nMy mother put her arms around me and gave me a hug. \"That's saying a lot for you, even to mention 'the one.' Now I really want to meet her.\"\n\n\"You'd like her. She likes to keep me on my toes, just like you do.\"\n\n\"I'm sure I will. I've liked most of your girlfriends over the years, at least.\"\n\nI laughed. \"I'll remain discreet and not probe into their names.\"\n\n\"That might be a fun conversation topic with Cathy, now that I think about it. Excellent! I won't have to worry about something to say.\"\n\nI rolled my eyes. \"Whatever, Mom.\"\n\nFor the long weekend, we all enjoyed a great visit, with the light-hearted banter that always characterized our family. On the night before I left, Mom stopped me. \"Brad, would you mind terribly sending me that picture you showed us of Cathy and Kelly?\"\n\n\"Sure, Mom.\"\n\n\"You might wonder why. Whatever happens between you and Cathy, I just like to have a record of significant parts of your life. The two young ladies are stunning\u2014lovely and full of life\u2014and I can see a lot of you reflected in their faces. I can see why she captures your heart, Brad. Whatever happens, savor your time with her.\"\n\n\"Believe me, Mom, I will.\"\n\nOn the way back, I reflected on the conversations I had shared with Cathy. I had called her each evening. She continued to weave her web with me:\n\n\"...I've got another homework session planned for tonight, Brad. I want to get 100% on the test soooooo bad.\"\n\n\"You may give your teacher a heart attack before he has a chance to give the test.\"\n\n\"You don't give him enough credit, Brad. He's always ahead of us students.\"\n\n\"He's definitely got to be working hard to stay that way.\"\n\n\"That's why he's the best. Now, I'd better get started studying. Sweat dreams, Brad.\"\n\nAnd another night:\n\n\"Hi, Brad. It's Kelly.\"\n\n\"Kelly! Good to talk to you.\"\n\n\"We knew you would call, so I carried Cathy's cell. We're out clubbing, Brad. Cathy's trying to get me hooked up.\"\n\n\"I don't think you two need to work very hard, Kelly. It's more whether there's anyone up to your standards.\"\n\n\"Well, I spend time with you, Brad, so I'm not aiming that high.\"\n\n\"Yeah, but I'm a mercy case, remember?\"\n\n\"Oh, I forgot. You're right. These guys are looking better already. Probably what's keeping them away is the intense conversation I'm having with your girlfriend. I'm giving her some pointers, Brad. It's not like she needs them, but I want her to keep your ego stroked.\"\n\n\"Good thinking, Kelly. Us guys really need that.\"\n\n\"Don't you. Now, you've probably figured out that since I'm such a tease, I'm not going to let you speak to your girlfriend tonight Brad. You have to say everything through me.\"\n\n\"So that's how it is, huh? Well, why don't you tell my girlfriend that she's driving me insane with all her homework talk. I have a case of blue balls that you wouldn't believe\u2014my personal efforts only go so far. If she wants me to suffer, she's doing a great job. To top it off, my mother is as wicked as you two, and she suspects everything.\" I heard some whispers and giggles through the phone.\n\n\"I got Cathy to blush, Brad. You two are so easy, it's like taking candy from a baby. Now, what can I tell you without breaking confidences? Well, I think you know how much Cathy wants you to get home. And she is doing a great job with her homework. She started on the easier problem, got good at that, and then moved to the harder problem. In fact, I was thinking of having her show me how well she's doing...\"\n\n\"...You're bad, Kelly.\"\n\n\"If you only knew how much, Brad, you'd have never left me alone with her.\"\n\nI laughed. \"I guess ignorance is bliss. I hope your search goes well.\"\n\nKelly's teasing tone altered a bit. \"I'm getting spoiled by seeing how good it can be, Brad. You know anyone that you think would measure up?\"\n\nI decided to change tone myself. \"That's a tough one, Kelly, really tough. I'll have to work hard to do half as well as you did.\"\n\n\"As I did?\"\n\n\"You can cut the bullshit, Kelly. I'm on to your stuff about me 'helping others.' Someday I'm going to get Cathy to spill on how you put her up to your sexual awakening scheme. I think you're the one screwing with both of our minds.\"\n\n\"And you love it, don't you?\"\n\n\"I'll have to level with you, Kelly, and it's hard. Yes, I do. I really do. And believe me, I'm going to make you pay for that.\"\n\n\"I can't wait.\"\n\n\"Well, be sure to tell my girlfriend to enjoy her evening out and not to listen to her wicked friend. Wouldn't want that rubbing off on her.\"\n\n\"We wouldn't, would we?\"\n\n\"Good night, Kelly.\"<br />\n\n\"Night, Brad.\"\n\nOne other time:\n\n\"...So what story about us did you give your mother?\"\n\n\"I figured that I'd better stick pretty close to the truth to stay out of trouble. So I gave her a...slightly edited...history of our relationship.\"\n\n\"Sounds like you left out all the good parts.\"\n\n\"Well, the good news is that there's enough quality material in the PG-13 version to keep Mom satisfied. I think she has filled in the blanks for the R version, but I would like to keep her guessing about anything beyond that\u2014know what I mean?\"\n\nCathy's rich laugh came through the phone. \"That's probably a wise idea. I'll have to construct a similar story for my parents. It's a good thing that we actually like each other, so there's something to talk about besides sex.\"\n\n\"So you're saying you like me?\"\n\n\"Sometimes. Maybe. Just enough to make a story stick together for my mother...\"\n\nI called Cathy when I got off the plane.\n\n\"Glad to hear you're back, Brad. I'm really looking forward to Tuesday.\"\n\n\"I'm just hoping I can make it two more days.\"\n\n\"I'm sure you'll feel better about your student knowing that she's studying hard.\"\n\n\"You say any more about that, and I'm hanging up! I've got people all around me.\"\n\n\"Poor baby. Make sure you bring a change of clothes for work Wednesday!\"\n\n***************************\n\nI concentrated on work Monday to keep Cathy off my mind as much as possible. That evening, I called some friends for a two-on-two basketball game to keep me busy. Tuesday went well until the end, where I was barely able to pay attention to my design job. Finally, I headed home, changed, and got over to Cathy's. On a hunch, I wore very fine, pleated slacks and no underwear.\n\n\"Brad.\" Cathy pulled me inside the door and embraced me. We let our bodies speak to how we had missed each other. Cathy's lips hungrily sucked on mine until she came up for air.\n\n\"I thought this moment would never come,\" she said breathlessly. \"Welcome back.\"\n\n\"I should leave more often to get a welcome like that,\" I replied.\n\n\"Puh-leeeze. You two are making me sick! Why don't you just fuck and get it over with?\" Of course that was Kelly talking.\n\n\"Normally, I would,\" Cathy said primly. \"However, this is a professional situation, and we must follow the protocol. That means dinner first, a session on the couch, and then the practice of new skills.\"\n\n\"And what might those be this time?\" Kelly challenged.\n\n\"Ah, don't want to get ahead our ourselves,\" Cathy replied smoothly. \"All in good time. Brad, would you see to the wine?\"\n\nWith that, Cathy spun out of my arms to move to the kitchen. Her skirt flew up briefly, showing a lot of sleek leg. This time, she wore a light blue top over a white skirt, leading down to sandals. As always, I was taken with the combination of sensuality, femininity, and self-confidence that she displayed. She looked smart, classy, powerful, and hot all at the same time.\n\nMy eyes finally stopped checking Cathy out and moved over to Kelly. She had raised a heel and placed one hand on her hip. She looked damn good in a black top and cream skirt. A gold chain dangled between her breasts.\n\n\"Finally noticed, huh?\"\n\nI walked over and embraced her. \"Kelly, you look stunning, as always.\"\n\n\"Why, thank you.\"\n\n\"Follow me for a glass of wine?\"\n\n\"Of course.\"\n\nWe moved into the kitchen, and I uncorked the bottle. I poured three glasses, handed one to Kelly, and then walked over to Cathy, who was drying her hands at the sink. I stood close behind her.\n\n\"Like some wine?\" I asked softly, handing the glass around to her.\n\n\"Love some,\" she replied. She settled back against me and took a sip. \"Just what I needed.\" She set the glass down and tilted her head back. I leaned in and kissed her open lips. Her ass lightly brushed my cock. Feeling it start to harden, she broke the kiss and laughed. \"Guess we should get through dinner at least.\"\n\nCathy seared tuna for dinner, and she served us garden vegetables and salad alongside it. The white wine paired well with the food.\n\n\"Wonderful food, Cathy,\" Kelly said. \"Perfect for summer.\"\n\n\"Thought I would keep it light and fresh,\" Cathy said. \"I didn't want to slow us down tonight,\" she added, a slight blush creeping up her cheeks.\n\nWe all laughed. We continued another great conversation, catching up on my trip and the ladies' weekends.\n\n\"I was very relaxing at my parent's,\" I was saying. \"Except when some of my 'friends' were trying to give me blue balls over the phone.\"\n\n\"That's terrible. Who would do such a thing?\" Kelly feigned indignation.\n\n\"I wouldn't want to give you a bad impression of some of my friends,\" I replied confidentially. \"You know them as upstanding people, but they hide a wicked side. Best not to disillusion you too much.\"\n\n\"You don't say? Well, I don't want to know any more about that.\" Kelly said primly.\n\nAfter a while, I poured the last glass of wine for everyone.\n\n\"I was thinking that we might want to retire to the living room and get started,\" Cathy announced. \"Given our missed class and the amount of homework I was assigned, it may take a while to get through tonight's lesson.\"\n\nMy cock twitched, but I kept my cool. \"That's an excellent idea, Cathy. I'm glad to see you take such interest in your studies.\"\n\n\"It must be rewarding to teach such a motivated student,\" Kelly looked over at me.\n\n\"Very. Teaching can be a lonely job, and I value the ability to connect with a student.\"\n\n\"Connect. What an appropriate term.\" Kelly drawled as she got up to clear the plates.\n\nWe got the table clear and things put away. We worked quickly and quietly, all of us feeling an air of expectation in the room. When we finished, we all moved to our places: Cathy on the couch, and Kelly and I on two chairs facing her.\n\n\"Cathy, I was thinking that I will relax you, and then we can talk to Desire and see where she leads us tonight. How does that sound?\"\n\n\"Great, Brad. Save some time for me to report on my homework assignments as well, OK? I worked really hard.\" Cathy looked down at this last part.\n\n\"I will definitely leave time, Cathy.\" I looked over. \"Are you all set, Kelly?\"\n\n\"Seat belts fastened.\"\n\n\"Let's begin. Cathy, why don't you lie back on the couch?\" I took Cathy back to her beach for the relaxation exercise. I then asked her Controller's permission to speak to the other voices and keep things orderly. Next, I spoke to Joy.\n\n\"I am very happy for Cathy,\" Joy said. \"She has enriched her own life, and yours as well, I think?\"\n\n\"Incredibly. More than I fully understand,\" I replied.\n\n\"Wonderful. I just want her to continue to live in a place of trust and confidence. She has so much to share.\"\n\n\"She really does,\" I agreed. \"Joy, can you continue to give her that trust?\"\n\n\"I can.\"\n\n\"Thank you, Joy. Now, may I speak to Desire?\"\n\nCathy sighed and shifter her hands in her lap. \"This is Desire speaking.\"\n\n\"In your thoughts, how has Cathy been doing?\"\n\n\"Fantastic. I'm thrilled that she is asking for, and getting, what she wants. When she teased you over the phone last weekend, it was great to see her take charge. She is happy, and her friends are happy, too. I just don't want her to stop.\"\n\n\"It's great that things are working well, Desire. Now, what would you like for Cathy tonight?\"\n\nCathy took a moment to answer. Kelly and I both leaned forward. \"She's been exploring her bottom in different ways, and she is loving the pleasure it brings. Tonight...I want her to go all the way. I want her to feel you inside her.\" Cathy's body was poised in expectation, awaiting my reply.",
        "\"That sounds wonderful. I think Cathy will love it.\" My pulse had picked up and my cock had stiffened. Fortunately, my loose slacks gave some room.\n\nCathy smiled and relaxed back. \"Me too,\" Desire said. \"I've been waiting for this for a long time.\"\n\n\"Thank you, Desire.\" As excited as I was, I had two more conversations to go. \"Now, may I talk to the Protector?\"\n\n\"This is the Protector.\"\n\n\"Protector, can I ask a favor for tonight?\"\n\n\"Probably. It depends on what it is.\"\n\nI went on, knowing that the Protector was personifying any remaining nervousness about anal intercourse. \"Protector, I am sure that you are concerned about Cathy being hurt in what we are about to do. She has taken many small steps to get to this point, so she should be more than ready. However, we are still going to take this very slow and let her determine the pace. If she can remain relaxed, she won't have any pain, and she will have a great experience. In your role as protector, will you work to keep her relaxed so she doesn't get hurt?\"\n\n\"I know she wants to do this, so I will do as you say.\"\n\n\"Thank you, Protector. Now, may I speak to the Controller again?\"\n\n\"Speaking.\"\n\n\"Controller, I have one favor from you. When Cathy and I make love, she'll be on top and in charge. Can you help her control the pace so she feels the greatest pleasure? You'll probably want to go very slow at first, and then maybe speed up as she adjusts and wants more.\"\n\n\"I'll be happy to do that.\"\n\n\"Good. Now, would you please take us back to the beach?\"\n\nWe returned, and I outlined a plan to Cathy.\n\n\"After we get each other excited and we go over your homework, how about me sitting back against the headboard of your bed with you straddling my legs facing me? You can then sink down at your own pace, and we can be close as we make love this way for the first time.\"\n\n\"That sounds perfect, Brad. Thank you.\"\n\n\"Would you like to get started?\"\n\n\"I'd love to.\"\n\nI led her back from the beach. \"Cathy, do you remember what we talked about?\"\n\nCathy stretched sinuously, lightly dragging her ass along the cushions underneath her. \"Yes\u2014everything.\" She turned and looked into my eyes. \"Let's go to the bedroom.\"\n\nI got up, seeing Kelly wink at my tented slacks. I moved over to Cathy and took her hand. She stood up and we both moved toward the bedroom, Kelly following. The lamp bathed Cathy's bed in soft light. Kelly's chair stood ready, and I noticed the two butt plugs and the lube resting on a couple of towels on the nightstand.\n\n\"I kind of knew what we'd be doing tonight,\" Cathy said by way of explanation. She looked into my eyes. \"I want this.\"\n\n\"I do too,\" I replied. I took her hand and gently twisted her around, pulling her back into me. I cupped her breasts as she leaned her head back. A small sigh escaped her lips before I covered her mouth with mine. We kissed hungrily. My cock grew rock hard in my loose slacks and Cathy took advantage, rubbing it along her ass as she twisted in my hands. I rolled her nipples in my hands, the fine weave of her top giving me intimate contact. Cathy had now worked her ass over my cock, and the light fabric of her skirt gathered in as she slid my length between her cheeks.\n\n\"You feel...really good,\" Cathy panted between kisses.\n\n\"You are so incredibly hot,\" I breathed back. I pulled her tight and whispered in her ear. \"I need you.\"\n\n\"Oh, God,\" she moaned.\n\nI dropped my hands to pull up on her top and she lifted her arms into the air. I gently pulled the top over her head, letting her hair cascade free. I looked over her shoulder to admire her trim breasts, riding firm and capped with erect nipples. Like a magnet, her nipples drew my hands back, and I lightly pinched and pulled them as Cathy sighed in my ear.\n\nCathy reached back and tugged at my polo shirt. I turned her back around, and she pulled it over my head. We embraced, the hard points of her breasts dragging across my chest as we kissed. I felt Cathy's hands undoing my belt, and I stepped back to allow her to pull my slacks down. My cock sprung free, and she chuckled at my lack of underwear. As she rose back up, she paused to kiss the tip of my cock. I groaned.\n\nThen it was her turn. She turned her back to me and pulled my hands to her waist. I took the hint and unfastened her skirt. As her tight ass cheeks come into view, we both laughed at her lack of underwear. I kneeled down to ease the skirt over her feet, and then I planted a kiss on each cheek, communicating how much I appreciated her ass.\n\n\"You like that?\" she breathed.\n\n\"I love it,\" I replied as I stood up. \"Every inch of you is the best.\"\n\n\"This too?\" she asked as she maneuvered her puckered hole around the head of my cock.\n\n\"Especially that,\" I replied. Cathy sighed and clamped my hands over her breasts. I squeezed and pinched more roughly.\n\n\"Yes,\" she moaned. She arched back and pushed her ass harder against my cock, breathing hard now. We ground our bodies together as I continued to pleasure her breasts.\n\n\"Should I...show you...my homework?\" she panted.\n\n\"Yes,\" I whispered back. \"Show me how much you've practiced.\"\n\nCathy pulled away and sat on the bed, grabbing the toys and a towel. As I sat down to join her, I looked over at Kelly. She had her skirt hiked up and was lazily stroking her pussy. She smiled when she caught my eye. I winked back and sat beside Cathy on the bed.\n\n\"I'm just going to lie back where you both can see my progress. You've got me so turned on, I can just start right now.\" Cathy arranged a pillow under her head, angled herself in our direction, and hooked her nearest leg under her arm. Her pussy and ass opened up to our gaze. Taking the lube, she flipped the cap, drizzled some over the small butt plug, and placed it at her anus.\n\n\"Ohhhhhh,\" she moaned as she pushed it part way in. My cock lurched as I watched her anus expand around the plug, accepting a little more with each push. Cathy's other hand brushed over her pussy lips as she continued to fill her ass. Soon, her sphincter closed over the waist of the plug. \"Ummmmm. I have to confess that I've played with myself a lot like this.\"\n\n\"I bet. I want to play with myself right now.\"\n\n\"Naughty boy, you'd miss the fun later. Plus, I've got one more to go.\" Cathy used one hand to slide the plug around inside her while she continued stroking her pussy with the other.\n\nI reached over and tweaked a nipple, causing Cathy to gasp. \"You're kind of defenseless there, aren't you?\"\n\n\"Maybe,\" she replied, giving me a good view of her hand caressing her ass, \"But I think you're kind of defenseless, too.\"\n\nI laughed. \"I think you're right\u2014I can't resist you.\"\n\nCathy smiled. \"So I pass this homework exercise? Ready for the next one?\" I nodded, my head spinning. Cathy eased the plug out of her ass and placed it on the towel. She lubed up the larger one and placed it at her entrance, closing her eyes and visibly relaxing. With her other hand caressing her pussy, Cathy started pushing the plug into her ass. This time, her breathing deepened as she worked it inside. \"It feels really good,\" she whispered.\n\nI watched as she guided the plug back and forth, going a little deeper each time. Her breaths lengthened into deep pulls and sighs as she continued to relax her body. A quick glance at Kelly confirmed that Cathy was holding both of us riveted with her display.\n\n\"Ohhhhh, that's it,\" Cathy whispered as she felt the widest point pass through her sphincter. She continued gently pumping it as she twisted her body in pleasure. \"It's so relaxing to do this,\" she said. \"I just feel fantastic.\"\n\n\"You look fantastic.\"\n\nCathy continued to play with herself as she guided the plug in her ass.\n\n\"Well, I think that you pass your homework with flying colors,\" I said.\n\nCathy and Kelly both laughed. \"Do I get a gold star?\" Cathy asked.\n\n\"I was thinking something better. Perhaps an orgasm?\"\n\n\"I'd like that.\"\n\nI guided myself between her legs and let her spread her pussy lips for me. The pearl of her clitoris stood proud between her fingertips, and I zeroed in, knowing that she was ready. \"Oh, that feels great,\" she whispered as I rolled her clit around with my tongue. Her other hand grazed my chin as she pumped on the toy in her ass. Her breathing lost its relaxed pace as she pulled up both legs to rest her feet on my shoulders.\n\nCathy's fingers sunk deeper into her pussy as she squeezed her clit up for my tongue. I attacked the sensitive bud with deep strokes and firm pressure. When I sucked it between my lips, Cathy jumped. \"Oh God, don't stop,\" she moaned, and I kept up the strokes and sucking as I felt Cathy pump the butt plug harder. This time, I wasn't going to back off as she approached climax. I knew she wanted this one fast and hard.\n\nCathy started bucking against me as she gulped in air. I felt her body tense up and I sucked her clit in deep, clamping it between my lips.\n\n\"Ohhhhhhhhhhhhhhh,\" Cathy wailed as she pulsed in orgasm. I held on to her clit with my lips while she trembled beneath me, the contractions rippling through her pussy. As she came down, I gently released her clit and just nuzzled her pussy. \"Wow, that was intense,\" she said after she dropped her feet from my shoulders. I slid back, my cock rock hard from witnessing her orgasm. Cathy was spread in front of me, her pussy lips deep red and her ass still clutching the plug. I glanced over at Kelly, who winked as she was obviously recovering from her own orgasm.\n\nCathy sighed. \"I could stay like this all night, but I'd miss something even better. Let's get ready, shall we?\" She closed her eyes, relaxed her body, and slowly pulled on the plug. Her ass opened up and she slowly guided the taper out, breathing deeply. When it was out, she opened her eyes. \"Brad, that was the best. Thank you so much.\" She put the plug the towel and lifted herself up as I maneuvered myself to lean back on the headboard.\n\nCathy looked at my straining cock and giggled: \"I guess you don't need any more foreplay.\" She moved over to me and straddled my hips, her face getting serious as she slid my cock along the crack of her ass. \"I want this so much,\" she said as she leaned in for a deep kiss. Our tongues danced while I cradled her breasts in my hands.\n\n\"I want this\u2014want you\u2014more than anything,\" I answered as we broke the kiss.\n\nCathy answered by raising up on her knees and reaching for the lube. She drizzled a stream on my cock, gently spreading it all over. Then, looking into my eyes, she settled above me and positioned my cock at her well-prepared back door.\n\n\"Feels great already,\" she whispered. Her eyes registered my pleasure from the warm and inviting pressure of her sphincter on the head of my cock. I felt it relax and knew she was pushing out to open herself to me. Then, her eyes still locked on mine, she started to slowly sink down. My cockhead passed deeper and felt her muscular rings expand around it. Cathy kept her breathing slow and steady while she continued her journey. Then she sighed deeply, and I felt the first ring start to close over my shaft. Cathy paused, raised herself slightly, then continued sinking down. The pressure on my cockhead eased, and we both knew that I was in.\n\nCathy smiled down at me, and then she raised up and slowly sank down again. My cock went a little deeper. After a couple of more strokes, she let go of my cock, confident that I was secure in her back tunnel.\n\n\"Incredible,\" I whispered, feeling the smooth rings of her rectum squeeze my shaft. I took the cheeks of her ass into my hands, cupping and kneading them.\n\n\"So good,\" she whispered back. She placed both hands on the headboard behind me to support herself and then continued her motions, sinking a little more each time. Her muscular rings sank deeper around my shaft, while the head rubbed along her smooth passage. On her downward motions, she started gyrating her hips, attesting to her pleasure. I removed my hands when I felt her butt cheeks start to touch my legs. She twisted a couple of more times and then sank down the final distance, pushing my cock as deep into her as possible.\n\n\"Ahhhhhh, that feels good,\" she said as she rested her ass on my legs. She lifted up slightly and began slowly humping me, bottoming out each time.\n\n\"You feel amazing,\" I answered back. \"Unbelievable.\" My cock reveled in her warm, tight tunnel. I reached up and cradled her breasts again, twisting her nipples to little moans of pleasure. I then reached down to find her pussy, open and wet for my touch.\n\nOne of the fun things about anal sex is that you get full access to a women's pussy. You can reach inside to rub the walls, or you can just play with her lips and clit. You're rewarded for your efforts by the squeezing of her ass as she responds to the sensations. I took full advantage, sliding a couple of fingers inside and hooking them back to rub the bumps of her G spot.\n\n\"Oh, God,\" she moaned and threw her head back in bliss, finally breaking eye contact. Her ass clamped around my shaft as she squeezed her pussy around my fingers. She brought her head forward again and started pushing her hips back and forth, starting to make the transition from carefulness to enthusiasm over my cock in her anus.\n\nI slid my fingers out and starting encircling her clit, knowing that I didn't have forever before I went over the edge myself. Cathy gave me encouraging gasps and twisted above me as I rolled her clit in my fingers. Her hips moved faster, and I realized that she was now completely fucking me, no longer worried about anything but fully enjoying the pleasure that her body was giving her.\n\nMy cock pulsed with that realization, and I knew that I was on a one-way trip to a major orgasm. I started squeezing to hold back as much as possible, but the pressure building in my balls would not be denied.\n\n\"I'm going to\u2014come soon, Cathy,\" I whispered while I still had the ability to speak.\n\n\"Please\u2014I want to feel it,\" she whispered back between breaths.\n\nI continued frigging Cathy's clit while she humped my cock, the icy heat radiating out into my legs. Her ass smoothly gripped my rod and sent my pleasure to new heights. I am going to shoot into this unbelievable women's ass, I thought.\n\nI pressed my fingers into her clit as I went beyond endurance. Cathy dropped down and drove my cock deep inside her as the cum erupted from my balls and surged up into my shaft, passed the gripping rings of her sphincter, and then spurted into her tunnel.\n\n\"Ugghhhh, ugghhh, ugghhh, ohhhhhhhh\" I grunted as the pleasure exploded through my body with each spurt. What an incredible feeling it was to have Cathy so deeply connected to me as I came. I existed in awareness only, not conscious of anything but pleasure and Cathy's body tightly clutching mine.\n\nFinally, the spasms wound down enough for me to use my limbs again. I pulled my head away from Cathy's chest and looked up into her eyes. They searched mine, witnessing the depth of my experience in my expression. With that, I saw her excitement and need growing, her eyes getting wild around the edges. I gently encircled her clit again.\n\n\"Yes,\" she whispered. She raised up and started lightly humping my cock again. She smiled and sped up as she felt my cock remain hard within her. For some reason, I don't get as sensitive after cumming in a women's ass\u2014I think it's the fact that the muscles squeeze the shaft more than the head of my cock. Inside a pussy, the head seems to get more stimulation than the shaft, so it's gets more sensitive. Whatever the case, I was happy to remain hard and able to concentrate on Cathy's pleasure while she rode me.\n\nI played with her clit as she regained her rhythm, twining her hips hard as she filled her ass with cock and pushed her pussy into my hand. She wrapped her arms around my neck and cradled her head against mine as she climbed to orgasm. I felt the sweat break out on her skin as her body tensed. With her throbbing clit clamped between my fingers, she hugged me tight, leaving just enough room between us for my hand at her pussy. She moaned continually now, her muscles tensing more and more, her hips continuing to piston my cock in her channel. Her muscles quivered with the effort...she held her breath...still she climbed...and then she exploded.\n\n\"AAAAAaaaaaaaaa,\" she screamed as a giant contraction lashed through her body. Her rectum pulsated with continuous spasms, and I felt a gush in her pussy as her clit quivered in my fingers. She rammed herself down, collapsing around my cock, her body not her own. Wave after wave passed through her, and she sobbed in response, taking big, wracking breaths. She rocked against me, holding on for dear life as she cried through the aftermath. I held her tightly back, knowing that she needed my presence to bring her back from the depths of emotion she was going through.\n\n\"It's OK,\" I said soothingly as I started rubbing her back. She cried again, and I felt the slight jerks in her chest as she fought to control her breathing. \"Shhhhhh,\" I cooed, \"it's alright, it's alright.\"\n\nFinally, she sighed deeply and pulled her head away from mine. I looked into her red-rimmed eyes and straight into her soul. I saw love, and I saw the shock of powerful emotions. I saw the fear of being truly naked in front of me, of how I would react, of being defenseless. My eyes welled up in response, and I surrendered my expression to my own emotions, letting my love for her pour out, not even completely knowing what I communicated. Her eyes widened in surprised, then she leaned in and clamped her lips to mine, finally breaking her gaze when she twisted to the side.\n\nShe broke the kiss and leaned back. We locked gazes again, and a lot things went back and forth at a level I didn't really understand, but knew was very good. Finally, Cathy smiled shyly. \"That...that was...really good.\"\n\n\"That was really, really, good,\" I said back, widening her smile.\n\n\"Thank you for being there for me.\"\n\n\"Always,\" I replied, and she kissed me again. We held each other for a while.\n\n\"I better get up before I can't move anymore,\" she admitted. I nodded and released her pussy as she slowly raised herself off of me. My cock had softened a little, but I still felt the smooth rings slide up my shaft. Cathy gasped slightly when her sphincter closed around my retreating cockhead. I slid down to where I was lying on the bed, and Cathy pillowed her head on my chest. I caressed her hair as we both relaxed.\n\nRemembering Kelly, I turned my head to look over at her. She was a mess, sweaty, disheveled, and streaked with tears from crying.\n\n\"It was emotional for me, too,\" she said after blowing out a shaky breath. She lifted her hand, and I saw her swollen pussy. \"Very fun, but also very emotional.\"\n\nCathy lifted her head and looked over at her friend. \"Thanks for being there, Kel.\"\n\nKelly smiled. \"That was the most intense, gut-wrenching thing I have ever seen, Cathy. I will never forget that. Thank you for sharing yourself.\"\n\nCathy nodded and sighed contentedly, relaxing again. Her fingers traced over my arms and chest. \"Is it always that powerful?\" she wondered aloud.\n\n\"I figure the first time had something to do with it,\" I replied, \"but you're also a natural. I think it will always be pretty intense for you.\"\n\n\"Maybe it's the guy I'm with,\" she wondered again.\n\n\"No doubt that's a big factor.\" I laughed quietly. \"But I think that you're wired to deeply experience your body and share your love as well. Any guy would be an idiot to let you go.\"\n\nI felt Cathy's lips brush against my chest in a kiss. \"Thanks, Brad.\"\n\nWe lied there a while longer, then I heard Kelly get up and walk into the bathroom. She washed her face and toweled herself down. \"Got to dry off so I can get my clothes on,\" she said from the door. She came back in. \"I think that I've completed my chaperone duties for tonight. I don't think you can get into any more trouble than you already have.\" We all chuckled as she got her dress back on and pulled her hair into a ponytail.",
        "\"I'll let myself out, Cath. Fortunately it's dark, so nobody will see what a mess I am.\"\n\n\"Thanks, Kelly,\" Cathy said. \"I'll call you tomorrow.\"\n\n\"Yeah, so I can get any more juicy details. Good night, you two.\"\n\n\"Good night, Kelly,\" we both answered.\n\nAs we heard the door close, Cathy lifted her head and looked at me. \"Think you can get up for a shower?\"\n\n\"Are you coming with me?\"\n\n\"Of course, silly.\"\n\n\"Well, let's get going then!\" I announced. Cathy shook her head in mock exasperation, lifted herself up, and took my hand. We both padded into the shower. The hot water felt great on our skin, and we just held each other under the spray. Eventually, I grabbed the soap and starting lathering Cathy's back. I worked down to her ass and thoroughly cleaned around her back entrance. She purred in my arms as I cleaned and spread her cheeks to let the water rinse her. I finished by soaping around her pussy, starting to get hard again from feeling her in my hands.\n\n\"Your turn,\" she said. She took the soap and lathered cleaned my cock, balls, and groin. She paid particular attention to my cock, rubbing the head and squeezing the shaft. I swelled to a full erection in her hands, and she laughed.\n\n\"What should I do with this?\" she wondered. \"I have half a mind to get the lube and let you plunder me again, because it felt so good. However, I figure I should take it easy this first time and make sure I can walk tomorrow.\"\n\n\"I think taking it easy is a good idea. There's plenty of time for 'plundering' in the future.\" Cathy laughed at that. \"How about me rubbing myself along your ass while you play with yourself? That should feel pretty good for both of us.\"\n\nCathy's eyes lit up. \"That sounds great!\" She kissed me, then spun around and placed her hands against the wall. She looked over her shoulder. \"Take me, Brad. I'm ready.\"\n\nI slid behind her, reaching around to pinch her nipples. They strained against my touch, attesting to her arousal. I lined up my dick between her ass cheeks. She moaned.\n\n\"If you arch your back, you can get me rubbing across some sensitive spots,\" I said. Cathy immediately complied, and I felt the slight roughness of her anus drag across the underside of my cock. I took her hips in my hands and pulled them tight against me, driving the underside of my cock deep into her crack.\n\n\"Oh, God, that's good,\" Cathy said and pushed back into me. \"I can't wait until you're ramming into my bottom this way. I want that, too.\"\n\n\"So do I,\" I grunted. \"I know you'll be unbelievable any way we make love.\"\n\nCathy hummed in reply and snaked a hand between her legs. I pressed into her, free to stimulated myself hard now that I had one orgasm behind me. I let my eyes wander down her back, seeing the slim waist flair into her hips and ass, my cock sliding between the cheeks. Once arm twitched as she frigged her pussy, the other held the wall.\n\nCathy started twisting her hips, exposing new aspects of her pussy to her fingers and angles against my cock at the same time. We rutted against each other, the exchange of pleasure our only goal. I started squeezing her ass checks around myself, feeling the tingling in my cock from her electric skin.\n\nCathy's entire back now rolled in waves down to her hips. She breathed hard. I felt her frantic fingers rubbing down beneath me as she started tensing up. She pushed, twisted, and rubbed her way to another powerful orgasm. My cock registered the spasms clamping and relaxing her anus while she whimpered beneath me.\n\nCathy's obvious pleasure jolted my cock. I held her hips and plowed on, driving myself to orgasm while she squeezed out the last bits from hers. Cathy felt my need and pushed back hard, applying exquisite pressure to the underside of my cock. She started bouncing against me, driving me crazy with lust. As the prickles of heat radiated out again, I pulled her hips deeply into me, using her ass to hold back the pressure. The spasms started in my balls and the cum finally squeezed through my cock, spurting over her back as I howled in pleasure. I held her ass tightly, milking every spasm for all it was worth.\n\n\"Oh my God!\" I exclaimed. I held onto her hips to avoid collapsing, panting and shaking as I recovered.\n\n\"Good, huh?\" Cathy laughed beneath me.\n\n\"Yeah.\"\n\nShe stood up and settled back against me, my cock still nestled in her crack. \"It was really good for me, too. You were right, I got rubbed in some very sensitive places.\"\n\n\"You have an amazing body, Cathy. You are built for every kind of pleasure. I can feel it.\"\n\n\"It's a little frightening how much I'm loving wild, kinky sex,\" she said. \"But not too frightening,\" she added with a chuckle.\n\nI laughed and leaned in to kiss her. We started washing each other again, this time too worn out to get distracted. We dried each other off and got ready for bed.\n\n\"Help me change the sheets?\" Cathy asked. \"I think these are still damp.\"\n\n\"Yeah, we got pretty sweaty on those. Probably burned a lot of calories during that workout.\"\n\nCathy rolled her eyes and threw me a sheet. We got the bed changed and settled down, Cathy resting her head on my chest again. She sighed, thinking.\n\n\"What happened here, Brad? I've never felt anything like that.\"\n\n\"I don't know, Cathy, but it was intense, both physically and emotionally.\"\n\nShe raised her head and looked at me. \"You saw me totally vulnerable. I couldn't hide anything.\"\n\n\"You brought out the same in me. I don't even know how much I let you see of myself.\"\n\n\"Brad, thank you for sharing back. I needed that affirmation so much after what I shared with you. I don't totally understand what we said to each other with our eyes, but I know it was right. After what we experienced physically, I think we both couldn't help but open up emotionally.\"\n\n\"I think you're right, Cathy. Thanks for trusting me.\"\n\n\"I trust you more than you know.\" Cathy said quietly. Then, lightening the mood, she added: \"And damn, that was some fantastic sex! I nearly passed out in ecstasy.\"\n\n\"Cathy, I can see why you were a little reserved in bed before. Your body is so sexually wired, and your heart can feel so deeply, that it's almost too much. You were a little afraid of letting that volcano erupt. What would happen? What would people say? Now, you can see that with the right person, you can let it erupt to blow you into another dimension.\"\n\nCathy looked at me again. \"And I suppose you're that right person?\" she said, her eyes dancing.\n\n\"You'd want to make sure that I wasn't before you moved on. Besides, it takes a special man to hang with your inner sex goddess. Normal mortals wouldn't be able to take it.\"\n\n\"You're right. A goddess has special needs.\"\n\n\"Good thing I know how to satisfy them.\"\n\n\"It's a really good thing. A really good thing,\" Cathy repeated to herself. \"And now, this goddess is so worn out with lovemaking that she's ready for sleep. How about you?\"\n\n\"Satisfying a goddess is hard work\u2014I will sleep well tonight. Good night, Cathy.\" I reached over and switched off the light over her bed.\n\n\"Good night, Brad.\" She snuggled into my chest, and I felt her body relax into sleep as I did the same. My last thoughts were that this evening ranked way up there on the \"best days of my life\" scale.\n\nWe both woke to the alarm and disentangled from each other.\n\n\"Sleep well?\" Cathy said as she kissed me.\n\n\"Like a dead person,\" I replied. \"But I feel great. OK, now I have a new 'greatest night of my life.'\"\n\n\"Sounds like a challenge,\" she teased. \"I need to keep you interested.\"\n\n\"Don't worry. You're a goddess, remember? Speaking of that, can't goddesses go all night without sleeping?\"\n\n\"Most times,\" Cathy replied drily. \"But when they give so deeply to a special mortal in their life, it takes a lot out of them.\"\n\nI laughed. \"That must be it. Well, goddess, ready for a shower?\"\n\n\"I usually bathe in a mountain spring, but I'll make an exception this time.\" We got up and showered, joking and laughing with each other. We kept the fun clean this time, too worn out to do anything sexual with each other.\n\n\"Not too sore this morning?\" I asked.\n\n\"I feel thoroughly ravished, but in a good way,\" she replied. \"It never hurt last night.\"\n\n\"If you do it right, it shouldn't,\" I said. \"It should only feel good.\"\n\n\"Good is an understatement,\" she said, smiling to herself.\n\nWe got dressed and ate breakfast together. Before I left for work, she took my hands.\n\n\"Brad.\" She caught my eyes in hers. She had to see the respect and admiration I had for her, and the reluctance to let her go. I saw the same in her eyes, along with the afterglow from a good, solid fucking the night before. I felt it myself, and knew it would be a great day.\n\n\"I'm going to try to hide the 'just laid' look at work today,\" she joked. \"I'll get a lot of questions.\"\n\n\"Yeah, try and explain last night.\" We both laughed at the thought. \"I'll call you tonight, Cathy. Thanks for having me over.\"\n\n\"You're very welcome. We'll do another sleepover soon.\" She kissed me and opened the door. \"Bye.\"\n\nThe day did go very well. I got a tremendous amount done without the distraction of horniness. On the way home, I picked up some flowers and left them at her door.\n\nGetting home, I took a long bike ride. That evening, the phone rang. I heard Kelly's voice.\n\n\"OK, Brad, this is really hard to admit. You were pretty damn good last night. If I'm honest with myself, what you and Cathy experienced was beyond anything I've known. I just wanted to let you know.\"\n\n\"Kelly, thank you,\" I replied. \"It means a lot. I'd love to take all the credit, but Cathy is just amazing...\"\n\n\"\u2014I'm glad you understand that.\"\n\n\"Also, last night, she lost her last virginity. I suspect that's where she's been headed all along\u2014to get the courage to take that step. She took it, and she learned what she was capable of.\"\n\n\"I don't think she's hit her limits yet.\"\n\n\"I don't either, and that's the hottest thing about her,\" I responded.\n\n\"You know, listening to you, I think you really believe that. You may be smart enough for her, after all.\" Kelly paused. \"I had one more thing. Would you like to join Cathy for dinner and another 'lesson' at my place this Friday? I have another bedroom, so you could spend the night.\"\n\n\"How could I refuse? I would love to come!\"\n\n\"See you at six, Brad.\"\n\nI called Cathy a little later.\n\n\"The flowers were lovely\u2014thank you,\" she said. \"So, is there anything that you do wrong?\"\n\n\"We don't have time to cover all that tonight,\" I answered.\n\nCathy laughed. \"Well, you hide it pretty well. Thanks again, they mean a lot to me. By the way, Kelly tells me that you're having dinner at her place Friday.\"\n\n\"I am. She's pretty hot, you know?\"\n\n\"She is, isn't she? I don't see how any guy could refuse her.\"\n\n\"I don't think they could. Their only hope would be a better offer.\"\n\n\"Better than Kelly? That's hard to believe. She's beautiful, smart, funny, wicked, and sexy as hell.\"\n\n\"It would take a goddess to beat that, wouldn't it?\"\n\n\"So you think you're man enough to attract a goddess?\"\n\n\"I know I am.\"\n\n\"Well, I'll be interested to learn if one shows up.\"\n\n\"You'll be the first to know.\"\n\nPlease take a moment to vote and offer any comments. They mean a lot.\n\nAdditional chapters linked below."
    ],
    "authorname": "Antonio_y_Cleopatra",
    "tags": [
        "romance",
        "anal",
        "butt plug",
        "friends",
        "shy",
        "female masturbation",
        "confession",
        "phone sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-web-ch-05"
}