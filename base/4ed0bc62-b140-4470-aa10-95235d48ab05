{
    "title": "Renascence Ch. 05",
    "pages": [
        "Authors Note:\n\nFirst, thank you to all those who have shown their support these last few months. Your comments, emails and votes drove me to finish this chapter. I can't get into details of the reason for the delay, but I can say that if you'd known my reasons, you would forgive me. \n\nThe first passage of this chapter was inspired by the writings of my very talented and very dear friend, Lun. Thank you for lending me your intellectual property for the spirit of this story. \n\nHope you all enjoy this story. This is not the last chapter. More to come. \n\nCheers,\n\nNora\n\n\u2014\n\nRenascence\n\nNoun:\n\nThe revival of something that has been dormant.\n\n\u2014\n\nThere are two ways in which the body speaks, and one of them is in complete silence.\n\nOpen your mouth and talk, listen to how your voice sounds, hear what people hear when you form your syllables. This is where you can tell lies, where you can conceal, where you can make something out of nothing. This is where lies freedom, this is where lies opportunity, this is where lies all the lies you want to tell. Suppress the truth that cages you, speak the lies that free you\u2014and do it because you can.\n\nBecause the second language is spoken through the eyes, and here you have no power, here you cannot do anything. Even the blind speak here, even the blind have emotion in their eyes. Here are where thoughts linger, here are where truths are told, here are where lies dissolve. And while the words here are spoken in silence, they are loudest of them all. \n\n\u2014\n\nGabe is the physical manifestation of dreams, and I am the physical manifestation of chaos. \n\nI thought about him while I worked on the homework he'd assigned, writing words, writing thoughts, writing everything loud in my mind until it became silence on paper. From the roots embedded in my brain, the words flowed like a river, cutting through the rock until it was smooth, until my words became clear enough to make sense. I was pushing myself to weave together a creative writing paper on inspiration. \n\nInspiration stems from all sorts of places, at least that's what Gabe had said. He'd glanced at me as if he was telling me personally, knowing that I needed to hear it. Inspiration didn't have to come from the good places; it could come from the bad, from the ugly, from the places where broken dreams and broken windshield glass resided. Inspiration, like art, didn't have to be beautiful. It just had to be enough to make you feel something. \n\nExcept it's hard to feel anything these days. All I feel is this numbness, this emptiness that gets deeper and deeper, swallowing me whole, plunging me into the darkness. All I think about is Napa, of the entire life I'd had over there. It came in snippets of random things, like the way Dad used to play the piano on rainy days, his fingers moving like spiders, and Emma's voice, pure and clear, singing along with the notes, belting out all the lyrics that I could never seem to remember. Marta, the housekeeper that practically raised me, praising me for the B I got while Dad gave Emma a high-five for the A+ on a math test. The trails out behind the vineyards where Emma and I sometimes snuck a ride on our neighbor's horses (with their permission, of course), riding until our thighs got sore and our hands blistered from the reins. Mom's laugh, so fucking loud, the kind that practically echoed in the big house, the kind that always startled strangers because of just how truly loud it actually was. The annual fall festival where everyone, the employees, the neighbors, our friends, all of us, got together to participate in stomping all the grapes that didn't make the cut. It was just for fun since it ended up becoming fertilizer afterwards, but Dad insisted that we keep up the age-old tradition. Emma had been there, smiling and smiling, so goddamn happy all the time. \n\nThen all of it\u2014Dad, the vineyard, the horse trails, Marta, grape stomping, Mom's larger-than-life laugh, Emma\u2014all of it was just fucking gone. And it made me empty, so fucking empty that I felt like I was drowning in it, like I'd died a long time ago and all that was left was a shell that went through all the motions of being human, like I was my own puppet master, twisting and pulling all the strings to pretend that I was still a real girl. \n\nI did it for Mom, this whole being alive thing, just so she wouldn't have to be alone. I wasn't entirely sure if she could survive any more loss than she already has. I masked all my emptiness by getting up, going to school, and coming home to show her that I was still there, still somehow functioning even though I carried my numbness inside of me like a dark secret. \n\nThen along came Gabe. \n\nGabe with his wry smiles. Hair just a couple brushes away from looking neat. Crisp shirts and dark slacks and thin ties and black leather shoes. Long sleeves, hiding the stories told by scars that looked healed, but underneath the skin probably still hurt where the heart was. Knuckles that jutted out on a hand that was slender and long, hidden in pockets, buried away from the world to hide the physical proof that his brother had died and he'd survived. The mind that was intuitive and methodical when it worked, eyes that read fast, brows that sometimes furrowed in that cute way that made me want to just squeeze him around the middle, to feel his warmth, to feel his arms close around me again. Hazel eyes that darkened when impassioned, and then softened, melting like chocolate when thoughtful, kind, generous. The way our raw kisses tasted, the way fire had filled my veins, the fragile heart of mine that he cracked open, finding out exactly what made it tick in that way that watches do. \n\nAnd this was how I got the lunatic courage to let myself want him. Because around Gabe, around him and all the beautiful and ugly things that tore us apart and pieced us back together, I could feel. He took all my numbness in his capable hands and stripped it off my skin, showing me that sometimes, being vulnerable was what could make you strong. He was the thunderstorm, challenging the rain, saying I will not let you fall.\n\nSo I wrote about him. About the thunderstorm that inspired me. I poured myself into my homework assignment, writing page after page in metaphors, telling our story without using any names, telling him how it hurt so badly to want him, but how it hurt so much worse to pretend not to. Paragraph after paragraph, I told him that I saw him, that I knew that he was beautiful, but that I also saw other things: the way his brilliant mind worked, the way he could move people, the way he could inspire. After seeing him, really seeing him, I knew that beauty was the very least of him.\n\nAnd so, inspiration\u2014It's you, Gabe. It has always, and will always, be you.\n\nI finished the paper, signed it, dated it, spelled out some more words with those same 26 characters until you could tell that it was mine. I wrote to the dream with my chaos. I hoped he could decipher my meaning.\n\n\u2014\n\n\"Drop me from the AP Spanish class. Ms. Hanley, excuse my French\u2014uh, Spanish, whatever\u2014but I hablas the shit out of it. It's a waste of my time to drive all the way over there. \"\n\nMs. Hanley had her chin perched on her hand, watching me with an expression of mild amusement. Her wild curly red hair was down today in soft ringlets, and her makeup was much better suited to her face. She looked like a normal person, even though I knew she was weird\u2014and I kind of suspected that she knew she was weird too. But she looked pretty. \n\n\"Well,\" she said, looking down at my schedule. \"I guess I could drop you from the class. It really would have helped to bring up your GPA, but you technically don't need to take the class to be eligible to take the AP exam. That still leaves you empty for first period. What to do, what to do...\" She tapped her fingertips on her desk, looking up at the ceiling while thinking. I wondered if she knew how animated she looked, almost like she was a cartoon character brought to life in the form of one very strange human woman. \n\n\"You could be a teacher's aid,\" she said, her face brightening. \"I already know someone who'd probably love one.\"\n\nOh, hell no. \n\nI should have just kept driving over to the sister school for AP Spanish. I'd lasted all of one class before I'd realized that it'd be a complete waste of my time. I spoke Spanish fluently. I'd spoken it my whole life with Marta, the seasonal laborers in the vineyard, my friends at school and Dad who'd learned it out of necessity long before I was even born. Then the last three years of honors Spanish had helped me figure out proper sentence structure and grammar. I spoke Spanish without having to convert the words from English in my brain. Which meant that yeah, I was fucking fluent. \n\n\"Uh, how about Mr. Young?\" I offered meekly. \n\n\"Oh, no,\" she said, waving off my suggestion. \"He already has an aid. I have someone in mind that would probably be really grateful for some extra help. I'll give you a hint: he's new,\" she said with a playful smile that gave me the sudden urge to strangle her.\n\n\"Can't I just have another free period?\"\n\n\"You can't have two in a row. You already have second period off.\"\n\n\"Put me back in one of the classes that you dropped me from then.\"\n\n\"Can't, honey. You really don't need them. You already have the credits.\"\n\nOkay, whatever. I'd just have to be his aid for two days. I could work with that. I'd have to. \n\n\"So which teacher?\" I asked. \n\n\"Don't act like you don't already know,\" she said with a laugh. \"I'll send you down there with a note. I just need him to sign your schedule for his approval.\"\n\n\"What, now?\"\n\n\"Second period is only halfway over. Now's as good a time as any. Hold on, I'll print you a new schedule and write you a note for Mr. Hart.\"\n\nI stood up and shifted my weight from one foot to the other. My head was buzzing now. I kept wondering what Gabe would say, if he would think that this was somehow my idea, that perhaps I was being a bold little bitch again, initiating where I wasn't supposed to. The thought alone brought memories rushing back\u2014kisses, moans, hands everywhere, shaky breaths, a bra unsnapped with one expert hand, a shirt unbuttoned, and a tender, soft gaze that still made my heart squeeze. \n\nYou're going to ruin me. \n\nWe can't do this again. \n\nHis words rang in my ears, reminding me of my place. I shouldn't be thinking about that day. The familiar guilt made me feel hollow, draining me until I felt that emptiness again. I remembered what Dad had said about it being my fault, and those words had taken everything bad that had ever happened to us, to anyone and made it my fault, all mine. I'd barely been hanging on by a thread when Dad had snipped it, tossing me right into the darkness, leaving me to search for my ribs, counting them so I could put on a brave face for Mom. \n\nI'd run that red light on that intersection close to home, the one that was always empty, the one we'd driven by a thousand times as kids and had encountered another vehicle only a handful of times. I hadn't thought anything about it, laughing about something Emma had said, turning up the volume of the radio to drown her out, telling her shut up, I love this song. I'd been looking at her when I'd crossed into the intersection, and for one split second I'd caught the sudden surprise in her eyes when she'd peered past my shoulder. She'd seen it coming, but I hadn't. \n\nI hadn't seen any of this coming. \n\nI said nothing when Ms. Hanley handed me her note. Don't get me wrong, I wanted nothing more than to start each morning with Gabe's face to greet me, that smile, the easy way he talked, relaxed yet confident, but then I remembered how I'd just barely been able to convince him to keep from spilling our secrets and ruining his life. He thought it'd be the right thing to do, but turning himself in wouldn't have erased anything we'd done. \n\nHad my actions destroyed his perception of himself? Gabe was a good person, wholesome, principled, impassioned\u2014the type of man that wouldn't be caught dead undressing his eighteen year old student in his car. Maybe I'd brought out the worst in him with a heated kiss. He'd never really stood a chance. Lunatic cockteases are pretty hard to resist. \n\nI shouldn't be around him. I couldn't say it with my lips ever again, but I could do nothing about my eyes. They pleaded with him, begging for more, speaking that language of loneliness that only we could ever understand. We both knew that soul-crushing heaviness of loss, him losing his brother, me losing Emma\u2014and then us, losing ourselves. But I don't think either of us could have prepared ourselves for this other unexpected loss: losing each other. \n\nI walked the halls and had a fleeting memory of Gabe's thundering footsteps, how he'd somehow made all the empty space his own, how he'd commanded the halls as I'd followed behind him like a moth to a flame. I was still drawn to him, walking in a trance, trying to push thoughts of want and need out of my brain when I approached his classroom door. \n\nIt felt like a hundred pair of eyes turned to me when I let myself in, but I didn't really care. I looked only for the amber, my heart expanding in the center of my chest when those eyes found mine, looking at me, into me. \n\n\"Grace,\" he said, getting out of his seat. \n\nI didn't\u2014couldn't\u2014say anything. I'd frozen from the sight of him. After a morning in a strange classroom in another town and then a cramped office with Ms. Handley, I'd felt so out of place, existing only in dead space, but there was no dead space here, only Gabe and his commanding presence, and here\u2014here, I could belong. \n\n\"Keep working,\" he said to the class. \"I'll be right outside.\"\n\nI stepped back out into the hall and leaned against a locker. The schedule and the note were in my hand, fluttering pathetically. Our death sentence, mine and Gabe's. \n\n\"Hey,\" he said, closing the door behind him. \"Are you okay?\"\n\nI realized right then that he'd assumed I'd run to him because I needed him. It made my heart warm that he'd walked out of class without any care of how it looked\u2014all because he wanted to be there for me. He really was very good at this whole friendship thing. It made me feel worse for having to come down here and throw him back into the chaos that we'd barely gotten ourselves out of. \n\n\"Don't worry, I'm fine. Here,\" I said, passing him the note and the schedule. \"It wasn't my fault. I couldn't get out of it.\"\n\nHis eyes moved quickly as he read. \n\n\"Got a pen?\" he asked. \n\n\"You're actually going to sign off on this?\"\n\n\"Of course I am.\"\n\n\"Why?\"\n\n\"It'll be good for you, that's why.\"\n\n\"I could list a hundred different reasons why this would be a terrible fucking idea, but it doesn't really matter. I'm only doing this until Friday,\" I said, crossing my arms uncomfortably. \"I found out I have enough credits to graduate early.\"\n\nI gave him a moment to process what I'd told him. I was expecting a sigh of relief, maybe a smile because he'd been yapping about graduating for about as long as I've known him, but instead all I saw was another one of his cryptic, unreadable expressions. \n\n\"I can't let you do that,\" he finally said. Before I could even respond, he took me by my shoulders and turned me around, unzipping my backpack and then digging around, probably for a pen. I heard it click and a moment later he was passing me back a signed schedule. \n\n\"I-I don't get it,\" I said, making a face. \"I thought this was what you wanted.\"\n\n\"I want to see you succeed, not give up.\"\n\n\"How is this giving up? I don't fucking understand you.\"\n\n\"If you graduate now you'll give up and just stop living, Grace.\"\n\n\"You don't need to put me on suicide watch. I'm not going to off myself,\" I said dryly. \n\n\"That's not what I meant, Grace,\" he said gently. \"I just... I don't trust you on your own yet. You haven't reacquainted yourself with being present in the world.\"\n\n\"I don't know what you're talking about,\" I said stubbornly. I wasn't giving in. I hated coming to this piece of shit school. \n\n\"I think you do,\" he said, looking unamused. \"I know you. I was you. I didn't leave my house for almost a year after I graduated. I gave up, just like I know you will. I can't let you, Grace. I won't let you.\"\n\nIt shouldn't have surprised me that he'd see right through me, that he'd read the tiredness in my eyes and know that all I wanted to do was sleep away the rest of my life, but this was Gabe, the one person in this entire universe who'd learned to read me like a book, flipping through all the chapters of me until he'd mastered me, figuring out just how to analyze me. \n\nI fucking hated it. \n\n\"This isn't\u2014it's none of your business,\" I said, stumbling through my own words. \"I can't do this anymore. I can't\u2014I just can't.\"\n\n\"You can,\" he said, motioning for me to follow him back into his classroom. \"You will.\"\n\nI wanted to argue, but I'd already wasted too much of his time in the hallway. He had a class to teach. I reluctantly followed in behind him, chewing my bottom lip out of nervous habit. I couldn't fight the need to be around him. He made me feel so whole, grounding me to this earth, chasing away the pain from my bones. This was exactly why I needed to stay away from him. \n\n\"For those of you that don't know, this is Grace,\" Gabe was saying a moment later to the class, probably knowing full well that nobody gave a shit. \"Let's all give a warm welcome to our new T.A. Don't be shy if you have any questions regarding your assignments. Grace can answer them if I'm not available.\"\n\nThere was only one familiar face in the class. Charlie with her pink hair, greeting me with a lift of her hand. A few other girls stared, their eyes narrowed. It took me a moment to realize that they were probably annoyed that they hadn't thought to apply to be Gabe's T.A. first. I would have gladly given the title to any of them, but at the moment I was feeling a little smug. Fuck them. Fuck all of them. \n\nGabe slid a stack of papers to the center of his desk and gestured for me to take his seat. \"Mark the spelling and grammar mistakes,\" he said, handing me a red pen. I tried to ignore the thought that I was taking his seat, just the way I had his phone number, the way I'd been in his car, the way I'd kissed his lips and almost ruined his fucking life. \n\nI spent the rest of the period going over last night's homework assignments, flipping through the essays from his first and second period classes. The fact that an alarming number of them were written so poorly that they'd hardly be discernible from papers written by second graders didn't shock me in the least. Kids from small towns are notoriously stupid. Everything about this place was a cliche. \n\nTwo students came up to ask me questions. I had to explain what an oxymoron was to an actual moron, and then I broke down exactly what textual organization was and the importance of it to someone who wasn't exactly a moron, just clueless. It seemed almost criminal that these kids had made it all the way to their senior year without understanding even the basic constructs of the English language. I spoke better Spanish than they did their own first fucking language. I had to remind myself at some point that I was acting really full of myself. Nobody likes a pretentious bitch, but I guess I don't give a shit because I don't like anybody either. Gabe did maybe, but I had a feeling that he liked a lot of my shitty qualities. \n\nWhen the bell rang, I bolted like a scared chihuahua. I knew that Gabe was dying to talk. I'd seen it in the charged looks he'd kept giving me, but I'd always looked away, afraid again that my eyes would speak the words I didn't want to say. I needed to give him time to process the situation, to see the sense in letting me go. I didn't belong in this school, and no matter how much it hurt to admit it, I didn't belong in his life either. ",
        "\u2014\n\nOut of all the required classes, I always hated P.E. the most. Coach Andrews didn't seem to know what to do with me. He was that really typical high school coach that barked around like a rabid dog, scaring students and joking with the jocks like he'd been a social reject back in his day, and now he was finally getting to hang out with the cool kids. P.E. teachers in the past had given me essays to write, or had me record miles on clipboards and time students, but Coach Andrews had decided that it was easier to just mark me present on the attendance sheet and do altogether nothing else. \n\nI sat my ass on the bleachers like I did everyday, pulling out a book on Nietzsche philosophies that Emma had given me almost a year ago for my eighteenth birthday. She had told me that reading the book might help me find myself. Emma had known that I'd been her shadow, matching her every step, as if I could follow her through life without ever having to put myself out there. She'd tried to push me to be my own person, but until now I'd never understood why it had mattered so much. Now that she was not here, I no longer knew who to be. \n\nI texted Gabe to clear my head, finding some comfort in knowing that no matter what I said, he'd care. I wanted him to know that I would be okay on my own, that I knew life was worth living fully. Even though it was a lie, I hoped that he wanted to hear it badly enough to believe it. \n\nGabe responded with a single word: No.\n\nMe: You're just going to have to get over it. I'm graduating early whether you like it or not. I'm just giving you a heads up. \n\nGabe: Come to my class next period. We're going to talk about this. \n\nI checked my watch. Next period was the lunch hour. It was in forty minutes. It wasn't enough time to put together an argument. I hadn't mastered the art of beating Gabe with words yet, and I sure as hell wasn't going to be using my body again. \n\nMe: Can't. I'm busy.\n\nGabe: I wasn't asking. I'll see you at lunch.\n\nThis was why teachers shouldn't get involved with their students. I was in a unique position where I could disobey him and there wouldn't be a damn thing he'd be able to do about it. I had the power to destroy his entire career if he crossed me. It wasn't something I'd ever do, but how could he know for sure that I wouldn't? He was trusting me, pushing me and fighting me even though he knew it was pissing me off. The fact that he cared enough to risk everything was an overwhelming thought. I guess it was enough that I knew I owed him that one conversation, if only to give him some closure. \n\n\"He who fights with monsters might take care lest he thereby become a monster. And if you gaze into an abyss, the abyss gazes also into you.\"\n\nIf ever a time was bad for reading Nietzsche, now was it. I ate the text up almost hungrily, reading to immerse myself while pretending that I wasn't Grace Craft, the singular twin, left behind, drowning deep into the abyss. I looked into the darkness until I became the darkness, until I was the monster. Everything I'd done to Emma, everything I'd taken from her, it all just hit me like a ton of bricks\u2014I'd been a monster for the entirety of my existence. Even from the womb, even then, I'd stolen from her.  \n\nI texted Gabe again, grasping for something, needing desperately to be grounded again. I tried to act as if I was just bored, talking about what I was reading as casually as I could, but deep down I was hoping he'd read between the lines and figure out how badly I needed someone to tell me that I wasn't a monster. I knew it was asking for a lot without asking for anything at all, but when have I ever spoken anything that makes sense? He just kind of knew how to figure me out.\n\nGabe: \"To live is to suffer, to survive is to find meaning in the suffering.\"\n\nI Googled it and it turned out to be another quote of Nietzsche's. I thought about it for a few minutes, reading the line over and over again, trying to find some way to practice it, to live, to survive. It was almost overwhelming how Gabe always seemed to know exactly what to say. I'd turned to him seeking solace, and without judgment he'd given it to me. \n\nGabe: You'll be okay. I'm with you. \n\nAnd with those words, he reeled me out of the abyss. \n\n\u2014\n\nThe bell rung in my ears with an echo, the sound like a warning alarm blaring loud, telling me that I was walking into a danger zone. I made my way through the halls, a lost soul amongst all the others, drifting through the empty spaces between them. I was shorter than almost everybody, like a pathetic kid even though I was probably older than most of them. People bumped into me like I wasn't even there, some looking down at me like they were annoyed that I even existed. \n\n\"Get out of my way, freak.\"\n\nI was so used to it that I didn't even flinch. It wasn't Miranda, but it may as well have been. Another tall mouth-breather on the cheer squad with powerful thighs and one of the meanest faces I'd ever seen in my life. I'd never learned her name, and she sure as hell didn't know mine. Not that it mattered. 'Freak' had such a nice ring to it. I almost didn't mind.\n\n\"Fuck off,\" I said, shouldering past her. I probably shouldn't have provoked her, but I still had some leftover energy that was keeping me on edge. \n\n\"What did just you say?\"\n\nI could have made a run for it, but instead I turned around and repeated myself. \n\n\"Fuck off, you deaf fucking bitch. Leave me alone.\"\n\nI was slammed so hard against the lockers that I should have cried out, but I gritted my teeth through it and curled my fingers into a fist. Fuck graduating. Fuck everything. \n\nI saw her reach for me again, the blinding rage taking over her, coming at me like I'd personally ruined her life\u2014and for a split second I saw Emma. Time slowed, crowding my brain suddenly with that image of my sister's face in the car, the look in her eyes, the way she'd known that something terrible was about to happen. Had her life flashed before her eyes? Had she had enough time to think about that? My carelessness, just one stupid decision, and she was gone, dead on impact. \n\nRemorse. I could taste it like it was on my tongue, like it had seeped into my bloodstream and poisoned me. I know that I'll never stop blaming myself, that I'll always be stuck with these venomous thoughts, always rethinking that day, always wondering if I had just looked, if I'd just stopped at the light, if I'd just let her drive like she'd offered, if I'd just been more careful...\n\nMy fingers uncurled, giving up the fight. I looked at my bully, and all I saw was relief. She was giving me the one thing I'd been wanting more than anything: my punishment. I prepared myself to be beat within an inch of my life, craving it like a fucking lunatic, but she never made it to me. Someone grabbed her by the back of her head, fisting her hair in a grip that made her scream before slamming her face into the lockers so hard that she left a streak of blood as she slid to the ground. \n\nThe hallways went eerily quiet. \n\nIt was Miranda. \n\n\"Go,\" she said to me. \"Get out of here.\"\n\nHer friend was moaning at her feet, covering her nose, bleeding all over the floor. People were whispering now, probably wondering why the fuck Miranda had defended me, the 'Hollywood' freak. I could see the crowd begin to part for curious teachers that had come to investigate the source of the commotion. It was going to be a real shit show. \n\n\"Did you fucking hear me?\" Miranda hissed. \"Get out of here!\"\n\nI was still stunned when she grabbed me by the arm and pushed me down the hall. Gabe had been right about her. Miranda Cox was not one-dimensional; she was on so many goddamn dimensions that I didn't even know what dimension that girl was on. I glanced back at her as I walked, my ears ringing again, like the bell had gone off again, only this time it was all in my head. She looked fierce with her wild eyes, her long black hair obscuring half her face as she looked down and wiped blood off of her shoe. \n\nI left one danger zone to walk into another, slipping into Gabe's classroom, closing the door behind me to lean back against it, my heart hammering in my chest from the adrenaline, throwing my mind back into the chaos I'd been trying to escape. I blinked back tears, looking up at the ceiling, my hands finding my ribs, counting, breathing in, breathing out. I'd wanted someone to hurt me, to take all my pain and make it physical, to beat the numbness out of me. \ufffc\n\nAnd I was fucking disappointed. It was agonizing how disappointed I was. \n\n\"Grace?\" \n\nI didn't answer. I couldn't. The words just weren't there. \n\nA chair screeched back, seconds passed like minutes, and then warm hands were closing around my elbows to steady me, an action so unexpected that I couldn't prevent the strangled gasp that left my lips. My eyes snapped up to meet the darkened hazel, causing a familiar tightening in my chest. I held my despair like it was a physical thing, clutching it just to feel anything but the numbness, but looking back at me was my lifeline; looking back at me was the man who refused to let me drown. \n\nIn silence, he pried my arms away from my ribs, saying nothing with his mouth that he couldn't with his eyes. He'd figured out that this was my safety net, that this was what I turned to when the walls caved in around me. He didn't let me count my ribs, didn't let me shove my feelings down to avoid them, didn't let me withdraw so deep that I was no longer part of the world. \n\nI couldn't speak, couldn't find the words, couldn't even string together the thoughts to make sense of anything. All I knew was that I was dangerously close to drifting away, to getting pulled into that void\u2014except Gabe was here. Gabe with his warm, scarred hands, tethering me with his firm grip, searching my eyes for my secrets, and looking so completely fucking lost that it made my heart ache. I wanted to hold him so fucking bad\u2014and that thought was what made me finally see sense. \n\n\"It's okay. I'm alright,\" I said, finding my voice and tugging my arms out of his grasp. He didn't fight it, letting me go instantly and taking a step back. His face had changed, like he'd been abruptly reminded that I was his student, that this, the touching, the closeness, the intimacy\u2014all of it was wrong according to society's standards. The established boundaries were invisible barriers that reappeared between us, wedging this weight between us, a heaviness that we both had to carry. It was the burden of desperately wanting something you couldn't have\u2014at least for me, that was what it was. Wanting. Yearning. Needing.\n\n\"Did something happen?\" He asked, slipping his hands into his pockets. It was a smart move, one that took temptation by the horns and banished it back to the hell from where it had reared its ugly head. \n\n\"There was a fight. I'm not hurt or anything so don't worry,\" I said, shrugging for something to do. I wanted to play this whole thing off like it was a minor inconvenience. No big deal. It's cool. Not like I'm reaching new levels of insanity, practically begging bullies to beat the shit out of me. And wanting you; that's craziest of it all. \n\nGabe frowned, not buying it. He looked me over, searching for injuries. It started out innocent enough, just a quick sweep over, no different than how he looked when he was grading papers, but the intensity of his stare was enough to make my stomach drop, and I did the single most damning thing a teenage girl could do to a man: I bit my lip.\n\nGabe didn't miss it, tensing immediately, his jaw clenching. He looked away, drawing in a deep breath through his nose, nostrils flaring. He looked deeply disturbed, but I couldn't have told you if it was because of me, or himself. Maybe a bit of both. \n\n\"Miranda\u2014she defended me,\" I said. \"I wasn't expecting that.\" \n\n\"Yeah?\" The tone of his voice sounded strained, like a bowstring that was being pulled so tight that it was in danger of snapping. Uneasiness seemed to be rolling off him in waves, etched all over his face even as I could see that he was struggling to contain it. \n\n\"You were kind of right about Miranda,\" I continued. \"She's... I don't know what she is, actually. She isn't as shitty as I thought she was, though. It makes me kind of, I don't know, uncomfortable? How am I supposed to face her now? Actually, don't answer that. Rhetorical.\" I was blabbering. I knew I was blabbering. It was like I was filling his silence, like I could smother his unease with drivel, like every second that I kept talking was another second put between us and that awful, careless way I'd just teased him. I hadn't meant to do it, and I was sure he hadn't meant to react to it. I guess we were always meant to be fuck-ups. That's what made this whole thing so dangerous. \n\n\"What exactly happened?\" He asked. I watched as he took a hand out of his pocket and ran his fingers through his hair. Ah, his nervous tell. I'd be lying if I said that I didn't get some sick sort of satisfaction from having that kind of effect on him. Aaaaand of course that made me feel like shit again. \n\n\"Some cheerleader slammed me against a locker.\"\n\nGabe physically stiffened. His eyes blazed as he practically snarled a \"What?\"\n\n\"I swear, I think I offend people here just by existing. I got in her way in the hallway and she called me a 'freak' so I told her to fu\u2014\"\n\n\"You provoked this?\" \n\n\"She shouldn't have fucking tested me,\" I said defensively. \"I'm not allowed to stand up for myself?\"\n\n\"No. You're not,\" he said, his voice quiet and dark. \"You wanted someone to hurt you.\" It wasn't a question.\n\n\"That's not true,\" I said too quickly. \n\n\"You have no sense of self-preservation,\" Gabe said, shaking his head. \"You went looking for trouble. Why the fuck would you do that, Grace?\"\n\n\"I don't go looking for trouble.\"\n\n\"But it always finds you,\" he said. His eyes had darkened like they had after we'd first kissed, passionate and wild, but this time it wasn't out of lust\u2014it was anger. It should have scared me, the way he could look into me like that, scalding my soul, scorching it, making me feel like I was being dragged under the first layer of hell, just below the surface, close enough to crawl out... but why would I? The burn was what made it feel closer to heaven. I wasn't scared at all. I was achingly curious, the fascination settling in my brain like a disease, corrupting me, making me want to explore how far I could push him, to see if the passion could translate, if I could find a way to remind him that passion was still passion, and one way or another, I ignited that fire within him.\n\nFucking hell. These teenage hormones of mine were going to be the death of us. Gabe was such a good fucking person. He didn't deserve this. He had a whole life to live. Teaching was his passion, and I wasn't going to fucking take that away from him. He made me feel alive, made the numbness fizzle away, but it wasn't worth killing his career, his livelihood, all the opportunities he had to change countless other young lives. \n\n\"Yes. It always does,\" I said with as even a tone as I could manage. \"Which is why I can't stay. I'm going to graduate early, Gabe. I'm done taking chances with your career. You won't have to do this anymore.\"\n\n\"Wait, that's what this is about?\" Gabe turned away, gripped his hair with both hands and groaned. \"You've gotta be fucking kidding me, Grace. You won't let me help you because you're worried that I'll lose my job?\" He whipped around to face me and let out a pained laugh. \"Fuck the job. I already told you I don't care. I'm not going to just stand around and watch you destroy yourself.\"\n\n\"Well I guess we're at an impasse then because I'm not letting you destroy your fucking life either.\" I said the words through trembling lips, glaring back at him even though what I really wanted to do was scream because it wasn't fair. It wasn't fair that he was right there, right in front of me, all six feet five inches of him, towering over me, casting me in the shadow of thoughts that hovered in the morally gray. It wasn't right to want him; it wasn't right not to. \n\n\"You know what destroys me, Grace?\" He asked, his voice suddenly quiet. \"You. Just looking at you destroys me. It's like I'm seeing all those days I struggled with getting out of bed in the morning, like all the times I tortured myself over the years, replaying everything, wishing I'd been a better person, a better brother... like all the years I've been punishing myself for something that was just a split-second mistake I made as a fucking teenager. Christ, I see you and all I can see is myself. When I see your pain, Grace, I see mine too. I know how much it hurts, and it's fucking destroying me that I can't protect you from it somehow. If I could take all your pain from you and bear it in your place, I would. In a heartbeat.\"\n\nThe dam fucking broke. Tears blurred my vision, streaking down my face so fast that I tasted them almost immediately. Nobody\u2014nobody\u2014had ever cared about me like this. He wanted to take my pain from me and bear it in my place. Who the fuck does that? \n\nGabe does. Self-assured, softhearted Gabe with those big scarred hands and brilliant smile, this Gabe. \n\n\"Such a drama queen,\" he said softly. He gave me one of those half-smiles, the kind that's rooted from sadness. I wanted to smile back, but my heart wouldn't let me. I kept thinking about him as a teenager, back to when he was just like me. His sadness matched mine, like our demons could have had playdates together, like the grave I laid in now once belong to him. My emotions were once his, recycled from tragedy, from losing a sibling, from losing that entire life we could have had with them. \n\nMy heart was shattered. How fucking bad had Gabe had it for him to be willing to risk everything to save me from the same fate? I wanted to go back in time and take him in my arms and tell him that he'd be okay, that one day he'd become the thunder, that one day he'd be a force of nature. I wanted to tell him that I understood, that I wouldn't have let anything hurt him if I'd only known. \n\nAnd that's how I figured out why Gabe was so persistent. If I was in his place, if I had to look at a suffering young Gabe with empty eyes and empty dreams, I'd risk everything too. \n\n\"I won't graduate early.\"\n\nA moment later my stomach dropped as Gabe crossed the divide, walked past the invisible barriers between us and grabbed me by the arm to yank me into his arms. I melted into his body heat, so warm and so right that I could almost feel it in my bones, right down to the marrow. I wrapped my arms around him, just as I'd imagined myself doing a hundred times, just the way I'd been dreaming, just the way I remembered; it was the way his arms felt around me, the fabric of his shirt pressed up against my cheek, the gentle rise and fall of his chest from his breathing\u2014all of it was familiar, all relived like an old memory, cherished in the deepest part of my mind. \n\n\"Thank you, Grace,\" he murmured into my hair. \"I know you're doing not doing it for yourself like you should be, but I'll take it. Thank you for doing it for me.\"\n\nHis words sprung a thrill in my veins, electrifying, the sparks fizzling as I flexed my fingers, trying my hardest not to pull back and take his beautiful face in my hands and kiss him like I so badly wanted to. Instead I concentrated on being the selfless person I'd promised myself that I would become, the girl who didn't take advantage of the kindest guy she'd ever met. I owed Gabe that security. \n\n\"Can we stay like this for a moment?\" I asked. Just a little bit more, just enough so I could memorize the contours of his wide, hard chest and the faint scent of his aftershave; just long enough so I could pretend that we weren't in a classroom in the middle of nowhere, a teacher and a student who could only ever have this, nothing more. ",
        "With weakened knees and a weaker heart, I drew my arms away from him and tucked them back against my sides. Gabe sensed it too, the emptiness we had filled with each other, and there was something terrifying about it; what was going to take the loneliness away when we didn't have one another to hold? He let go of me too, but he didn't move away. He stayed rooted there in front of me, looking down at me as I looked up at him.\n\n\"You're always so sad,\" Gabe said, his voice low. It's funny, as the words came out of his mouth, he was the one who looked sad. It was a profound sadness, one that was spoken from the depths of his amber eyes. \n\n\"It's a very sad thing,\" I said.\n\n\"What is?\" \n\n\"To be alive.\"\n\nGabe winced, but I didn't take it back. With my mouth or my eyes, I spoke nothing but the truth. Emma and Kev were bones beneath the ground, and Gabe and I stood here in a cold classroom in the middle of nowhere, together in our aloneness, yet infinitely incomplete.\n\n\"You're right, Grace. It is a sad thing.\"\n\n\u2014\n\nThe art teacher, Mr. Young, taught me about form, perspective, composition, value and lighting. A crash course on the fundamentals, blowing through the basics one after the other just to make sure that I would know enough that I could look at a canvas and follow a guideline in my brain of how to approach it. I wasn't really open to the idea at first, but the more he talked the more I felt like he'd unlocked a door that I hadn't even known was there. I thought about shapes and movement, about how light fell on objects, about how something could completely change if you just took one step in another direction. The world looked different than before. \n\n\"I'll give you a list to pick up your own over the weekend, but you can use mine for now,\" Mr. Young said, patting a box of professional art supplies. It was crazy to me that he'd trust me to even touch it, much less dig through it and use it. \n\n\"I had the canvas primed with gesso for you already so you're good to go,\" he said, pointing to an easel in the corner of the room. \"Palette, acrylics and paintbrushes are in the case. Cups are over by the sink. Paper towels right next to them.\"\n\n\"Hold on, Mr. Young. I don't know what I'm doing.\"\n\n\"Painting,\" he said, leading me to the canvas with his art box in hand. \n\n\"Okay, but how?\"\n\n\"You tell me.\"\n\nI tried not to make a face that gave away how fucking weird I thought he was. \n\n\"I don't understand.\"\n\n\"Use a paintbrush or your hands. Paint. It's very simple.\"\n\n\"What am I supposed to paint?\"\n\n\"You tell me.\"\n\nGod, this man was frustrating. It shouldn't have surprised me. Most artists are. \n\n\"So that's it? Just paint?\"\n\n\"Just paint,\" he reaffirmed, walking away to help everyone else with their color wheels. The rest of them got to do normal things, and I was here being subjected to this bullshit. I was certain that Ms. Hanley had told him some sad little story about my life, and now I was being given this special treatment to uplift me or whatever. I fucking hated it. \n\nI spent a long time staring at the canvas before I realized that this was exactly what a lot of artists did. I was daring the canvas to give me an idea, but it was pretty quiet, sharing nothing, giving me no clues, just as fucking useless as Mr. Young and his instructions. Just paint. What the hell did that even mean?\n\nI found a pencil in the art kit. Probably a special kind of art pencil to do special kinds of art things that I didn't know shit about, but it didn't matter. A pencil was a pencil to me. I turned the easel away from the class, planted my feet in front of it and then I began to draw. \n\nMr. Young had said how important form was. I needed to learn to think in 3D and imagine all sides of an object and keep that in mind while drawing in 2D. It hadn't really made sense when he'd said it, but it was starting to make sense now. I sketched out the skeletons of what I wanted to paint. Lines and curves, ending, connecting, spiraling in all directions. I drew with the pencil until my hand began to cramp, but I didn't let it stop me. I just kept going, transferring all the noise out of my head because right now this canvas was my purple notebook. The emotions that I didn't have the words for were being given form. \n\nMr. Young dropped by to check on me. He didn't ask my permission to see my work, but I didn't care if he saw it so I didn't say anything. \n\n\"You're speaking,\" he said, looking at the canvas. \"Keep talking, Grace.\"\n\nAnd then he walked away again. At the beginning of class I might not have understood what he had meant, but all the weird things he said were starting to make sense. Painting was a language that you could speak any way you wanted to. By outlining what I wanted to paint, I was already saying a lot about myself. \n\nI wasn't shy anymore. I went through his art kit like it was my own. I understood now why he hadn't bothered to hold my hand through this process. It really was simple. \n\nI filled a cup with water and grabbed a roll of paper towels. I didn't bother with the palette. I dipped right into cups of paint, all colors that spoke to me, colors that were dark, deep, like a cut, like all the silvery and gray and shadows and highlights that told my story. It wasn't a scream\u2014it was a whisper. And for now, that was enough.\n\nFive minutes before the bell rang Mr. Young came by and showed me how to clean the brushes and set them to dry. He told me to be confident in my paintbrush strokes and not worry about making mistakes.\n\n\"Life is full of mistakes. Making them is as natural as breathing,\" he said. \n\nI understood that. It made sense. \n\nMr. Young's method of teaching was strange. He showed me all the ropes, but he let me tie them myself. There was a struggle that came with learning from him, but he was doing it on purpose. Figuring it out for myself was part of the journey. He didn't box me in with instructions that could have influenced how I would approach telling my story. He just let me tell it. \n\n\u2014\n\nThere was paint underneath my fingernails. I'd washed my hands with soap, two, three times, but I guess there are some things that speak so loudly that you can't drown them out with water. The paint was telling me that it was here to stay, that it was going to become a part of me. As cheesy as it sounds, I took it as the first physical sign that I was becoming an artist.\n\nGabe was standing by the door of his classroom when I got there, his arms crossed over his chest with his back rested against the wall. He looked down his shoulder as I walked in, nodding his head in silent greeting. I nodded back, sticking my own hands in my pocket for once, if only to hide the paint. I don't know why I was feeling shy about that new part of myself. \n\n\"Alright, class, pass your homework up to the front,\" Gabe said, kicking off the wall. I watched him walk to the front, his eyes trained on the whiteboard. Had he been waiting for me to begin class? It wasn't like I was late, or even the last person to walk in. But then again, this was Gabe we were talking about. Of course he'd be waiting for me. I couldn't figure out exactly what was so special about me, or if there was anything special at all, but the fact that he cared, the fact that he saw me when I was invisible... well, that made him special, at least.\n\nFor the next hour, I listened to my dream talk, to the inspiration that had become the man that stood before me, pacing and talking fearlessly, self-assuredly. He was color\u2014vidid and fascinating and beautiful and complex and broken in his own beautiful, tragic way. He was unapologetically himself, showing us what it meant to be human, what it meant to be raw and starched of the fear of failure, what it meant to be more; more open, more brave, more ourselves. \n\n\"Writing is about discovery, expression, awareness and exploration of the self,\" Gabe told us. It was why he'd had us write a paper on inspiration, setting us off on that journey to finding ourselves. I wish I could've told him that some people didn't want to be found, that some of us wanted to stay lost. I liked being in the unknown, a stranger to myself, protecting myself from the monsters that I knew lived inside of me. \n\nI was the first to finish the classwork that he'd assigned. When I looked up, Gabe immediately caught my eye. His lips were parted, like he wanted to say something, but the distance and twenty teenagers between us seemed to stop him. From the way he was looking at me, I could tell he'd read my homework from the night before. \n\nI wish I could describe his expression. I couldn't tell if he was sad, happy, or even confused. Like a tortured blank canvas, he stared back at me with a look that tore at my insides, scaring the shit out of me. What if I'd freaked him out? \n\nGabe was trying to read my eyes, and I was trying to read his. I held his gaze, speaking as best as I could because it was something that I wasn't allowed to say with my mouth: \n\nI'm falling for you. \n\nWe looked away when the bell rang. Gabe effortlessly composed himself, dismissed the class and put on the most convincing smile to answer questions on the homework for a handful of morons. Just when I thought I could sneak away, he said, \"Grace, can you give me a hand here?\" For the next ten minutes I stuck post-its in textbooks, underlined notes and answered questions as thoroughly as I could. \n\nWhen the last of my classmates finally left, I let out a sigh and perched myself on the edge of Gabe's desk beside him. It was quiet for a long time, the both of us stalling, putting off the inevitable for as long as possible. Neither of us wanted to break the spell, to finally have that talk to end it once and for all. This game, playing with fire, getting close, touching\u2014too much, it was too much. We had to stop. \n\n\"Am I the thunderstorm?\" He asked, his voice hoarse. \n\n\"Yes.\"\n\nHe wasn't so composed anymore. I could almost hear the emotions that stuck to his throat, the way his voice had gone thick, his fathomless eyes setting my mind off-course, sending me into the unknown, to that place where the two of us were somehow allowed to exist together. \n\n\"How did you get in my head?\" He asked, looking away. \"How did you figure me out?\"\n\n\"You let me.\"\n\nHe ran a hand through his hair and let out a deep sigh. \n\n\"You guessed my identity,\" he said. \"My emotions, insecurities\u2014all of it. You scare the hell out of me, Grace.\"\n\n\"I'm sorry.\"\n\n\"It's not your fault. I'd be afraid regardless. Just being around you scares me.\"\n\n\"Why?\"\n\n\"Because I want you,\" he admitted, surprising the shit out of me. \"And I'm not sorry. That's what really fucks me up. I'm not even sorry for wanting you and I have no idea why.\"\n\nMy heart pulsed, anxious and afraid, squeezing and squeezing\u2014and then I lost my fucking footing. My sneakers slipped against the carpet, and I went down, ready to crash and burn, but right before I fell, just before I became the rain, he caught me. He had his powerful hold around my middle, hoisting me up, sliding me up right onto one of his legs. I turned my head, looking over my shoulder to find him staring down at me, frowning. \n\n\"I-I should go,\" I whispered. My entire body was shaking, my lips especially, trembling, making me look like a goddamn idiot. I blinked, my eyes pricking, and tried not to cry. I was overwhelmed, so fucking overwhelmed. \n\nBecause I want you too.\n\n\"You should,\" he agreed, but neither of us moved\u2014neither of us dared. He should have pushed me off his lap and sent me on my way, but I felt his muscles flex, his hold tightening... like he was afraid to let me go. I clutched at his forearms, telling myself that I was only doing it to regain my balance, but really I just wanted my hands on him, right where those scars hid underneath his shirtsleeves. I wanted to be close to him, to take all the pieces of him that he'd glued together and take them apart, one by one, to find out exactly what made his heart tick in that way that watches do. \n\n\"You are not a victim,\" I said, my hands trailing down to unbutton his cuffs. I just wanted to feel him, those scars, to touch them and show him that they were a part of him, a part that I cherished because it was proof that he was fucking alive. \n\nI looked up at him, right into the amber. \"You're a survivor, Gabe.\"\n\nHe swallowed, eyes burning, and breathing, fucking breathing because he was alive and he was here and that was all that fucking mattered to me. He was vulnerable but unafraid, his heart worn on his sleeve, the one that I was rolling up, revealing that intimate part of him that he hid away, that he'd shown me once to prove to me that he understood grief, that he understood pain. I got a good look this time, the raised skin, leached of color in some places in jagged lines and patches. It looked like a map, like a place where I could get lost, a place where I could hide away from the world. With him.\n\n\"Does it hurt?\" I asked. \n\n\"No.\" \n\nThis subdued version of him was bizarre, but I didn't mind. I knew he needed the silence the same way I often did. We were both the stuff of stars: oxygen and carbon and all these other elements, reacting, and here, in all the noise of this, the quietness was a blessing, a release. \n\n\"You're still here,\" I murmured, feeling the scars beneath my fingertips, rough, soft, warm, and perfect, so fucking perfect. How could I make him understand that?\n\n\"So are you, Grace,\" he replied. I didn't fight him when he slid me off of him. I expected him to let me go, but instead he gently turned me around to face him. \n\n\"Fuck, I don't know how to stay away from you,\" he said. I held my breath as he brought his face close to mine. His forehead touched mine, finding support in me for once. I could've counted his eyelashes, could have counted the lines of his crow's feet, tiny and adorable. They reminded me that he was something to protect, something to save. \n\n\"You have to,\" I said determinedly. \"You'll lose your\u2014\"\n\n\"Shut the fuck up, Grace,\" he said, cutting me off. \n\n\"You shut the fuck up,\" I retorted. \"We can't\u2014we can't do this. I can't let you\u2014\"\n\n\"Shhh..\"\n\nI almost cried when he let go of me, but then he was taking my face in his hands, stroking my hair back from my face, his eyes intense, closing... \n\nAnd then I cried when he kissed me. \n\nIn silence he spoke his truth, communicating all the lies, all the despair, all the mistakes and all the loneliness with his lips. Every breath was an apology, every sigh a consolation, every moan a renounce of all reason. He held me like I was fragile, like I could shatter, and the tenderness made me lose all my equilibrium, draining my body of all the rain, chased away by the thunder. Our movements were all natural, all familiar; the warmth of his lips, the texture of his hair between my fingers, and the silence he gave to all the deafening noise in my brain. \n\nThe kiss tasted raw, almost like it had been torn out from us by force because we weren't supposed to do this, we weren't supposed to destroy ourselves in each other, but we couldn't help it because this was our war zone, and this was where we fought the world. We surrendered only to each other, our mouths moving together, our lips swelling like our hearts, our bodies burning. And fire\u2014we were fire.\n\nMy hands withdrew from his hair, caressing down until I felt his face, my fingertips on his cheekbones, tracing all the lines I'd memorized in my head. He deepened the kiss, leaning into my touch, sliding his tongue along mine, sighing into my mouth, swallowing my whimpers, drawing out every single one of my breaths to breathe them himself. He let me moan, let me clutch his shoulders as his hands moved down and closed around the bones of my hips, holding me steady as he kissed me senseless. \n\nForever. That was how long it felt, like my whole life had been leading up to this moment, to feeling his mouth on mine, to be in our togetherness, hands trailing, fingers curling, breaths hitching. I let him devour my heart, slaying all my monsters along with it, taking all the ugly insides and twisting them, turning them, casting them out into the dark, and pulling me right into the shadows made of silver and sadness. \n\nMaybe our loss would always make us feel dead, maybe it was hard to live without our loved ones, but at least here, at least in each other's arms, we could pretend we were alive. We were dreams and chaos together: destructive, terrifying, beautiful, pure. We kissed selfishly, filling our emptiness, forgetting for a moment that if we got caught he'd lose his teaching license and I'd lose the only thing left on this earth that had the power to make me feel.\n\n\"Gabe,\" I said against his lips, letting him kiss his name from me, stealing it, keeping it. \n\n\"Grace,\" he responded, his mouth curving, smiling against mine. \n\nI broke the kiss. \n\n\"Not here,\" I said. \"We can never do this here.\"\n\n\"We can't do it anywhere else either,\" he said immediately.\n\n\"Why not?\"\n\n\"I won't be able to control myself.\"\n\nGod. \"Then don't.\"\n\nHe kissed my temple, his thumbs rubbing circles soothingly on my hips to comfort me in some way. Here comes the bad news: \"You know we can't,\" he said. \n\n\"Again, why not?\"\n\n\"It complicates things.\"\n\nI wrapped my arms around his neck and rose up on my toes to bring my face close to his. Tall. He was so fucking tall. I kind of secretly loved it.\n\n\"I'm used to complicated.\"\n\nHe laughed, pulling me closer. I stiffened, acutely aware that something long and hard was pressing against my thigh. Fuck me. Temptation was a hell of a bitch. I resisted to the strong urge of reaching between us and\u2014nope. Have to stop thinking about it. Have to stop thinking about how good it would feel to have that thickness enter me, filling me up... Ugh, no. \n\n\"I want us to concentrate on getting you better. You're sick, Grace. Your judgment is clouded so there's no way of knowing if you actually want... this.\"\n\n\"Are you kidding? Have you ever looked at yourself? I'd be sick not to want this. Trust me, I would have wanted you last year too, before everything happened.\"\n\n\"Don't say that,\" he said, making a face. \"It reminds me that I'm too old for you.\"\n\n\"I'm nineteen in two weeks, so no, you're not too old for me. If you weren't my teacher and I wasn't your student we could have been together. I mean, like, if you wanted to. I know I'm not that\u2014\"\n\n\"Of course I would've wanted to.\"\n\nLike an idiot, I blushed. And like another idiot, he seemed to like it. We gave each other Cheshire-cat-grins, sharing our little moment of madness, reveling in the insanity, fighting the obvious inevitable: fucking. There are more eloquent ways of putting it probably, but when you really get down to it, that's what we wanted to do. We wanted to fuck each other's brains out.\n\nAnd yet we were both going to try to fight it anyways. Was it really worth the risk? Yes and no. No. Definitely no. \n\n\"Let's just go slow then,\" I suggested. \n\n\"Slow's good. I can work with slow,\" he said, slipping a hand into my hair. He cradled the back of my head, looking at me like I'd just plucked all the stars from the night sky and scattered them across my eyes, like I was fascinating, like I was... beautiful. Gabe looked at me like I mattered, like I wasn't invisible, like I was worth saving. \n\n\"Kiss me,\" I said breathlessly. \n\n\"As many times ask you ask me to,\" he said, tugging me closer as his mouth met mine. It was a soft, rough, lazy, slow kind of kiss; like a ferris wheel with its' highs and lows, taking me on one hell of a ride. Kissing him was a free-fall, like that thrilling, stomach-twisting second where you know you're about to fall just before you soar and rise.\n\n\"Gaaabriel?\"\n\nWe jumped a part. Ohshitohshitohshit.",
        "The door swung open and there stood Ms. Melissa Hanley with a stack of papers hugged to her chest, her glasses askew\u2014 in all her glory, ladies and gentlemen. She looked like her usual cheery, weird self. She obviously hadn't seen her favorite colleague swapping saliva with his mentally unstable student. \n\n\"Oh, Grace,\" she said, giving me a confused smile. \"What are you still doing here?\"\n\n\"I, uh, um\u2014\"\n\n\"Grace wanted to go over the syllabus to understand what's expected of her as T.A. this semester. I guess I lost track of the time,\" Gabe said, lying through his teeth like it was nothing. I filed away that superpower for later. An effortless liar. Good to know. \n\n\"I told ya she'd be a good T.A. Isn't she just the best?\" Ms. Hanley said, acting like she knew me personally. I hated how sweet she was.\n\n\"You're always right,\" Gabe said, giving her a lazy, disgustingly beautiful smile. \n\nMs. Hanley returned a smile of her own, bright and cheery as sunflowers, like she was made up of sunshine and summer. Gag. \n\n\"I'm glad I caught you both, actually. Grace, I never got that signed schedule, and Ga\u2014Mr. Hart, I was dropping by let you know I have to push the meeting tomorrow morning by twenty minutes.\" She sounded strictly business, but the way she looked at Gabe with those hopeful emerald green eyes... Well, can't say I blame her. \n\nAs I dug through my binder, Gabe chatted up Ms. Hanely with that careless confidence, making her smile, laugh, and even scrunch up her nose when he acted a little too adorable for his own good. I tried not to roll my eyes. I was maybe definitely going to make fun of him later. \n\n\"Ah, thank you,\" Ms. Hanley said when I handed her my schedule. \"So I take it Mr. Hart here has convinced you to graduate with the rest of your class.\"\n\nBy baring his soul. \"Uh, yeah.\"\n\n\"I am so glad to hear that,\" she said, giving Gabe a warm look. Good lord, this woman. \n\n\"I guess I'll get going then,\" I said. I slung my bag over my shoulder and gave them a stupid little wave. \n\n\"See you tomorrow, Grace,\" Gabe said. I memorized the smile he gave me, the last smile of the day, the one I'd never forget. We'd fought together in our war zone, facing the world, facing every obstacle, risking it all. We shared an intimacy now, a bond. No one was ever going to know what had and would transpire behind closed doors, but we'd be there, Gabe and I, breaking all the rules, making our own. \n\nAnd maybe it was a mistake, maybe one day we would crash and burn, but I was told that life was full of mistakes, that making them was as natural as breathing. \n\nAnd if this was a mistake, then I was breathing. \n\nIf this was a mistake, then I was alive. \n\n\u2014\n\nI was drowning. \n\nIn the darkness I sank, through the inkiness, the onyx shadows swirling around me like blood under water, sloshing like it carried death. Lower and lower, until the air pressure squeezed my lungs, taking the last of my oxygen and pushing it right out of me. My mouth opened in silent horror, screaming a soundless scream, crying a quiet cry because I was going to die here and no one was ever going to care.\n\n\"It's all your fault. Jesus, Grace, you don't get it, do you?\" \n\nThe door slammed after Dad and Mom just sat there, drinking wine and not crying, never crying.\n\n\"It's all your fault.\"\n\nEmma lay in an unnatural position on the road, her last smile etched on her face, blood flowing down her nose and the corners of her mouth.\n\n\"It's all your fault.\"\n\nGabe lay in a hospital bed, young and scared, his arms wrapped in bandages, eyes bloodshot as he looked up and said, \n\n\"It's all your fault.\"\n\nI looked in the mirror as the abyss swallowed me up. \n\n\"All your fault.\"\n\n\u2014\n\n\"Grace?\" His voice was groggy and thick with sleep. \n\n\"I-I'm sorry I woke you. This was a mistake. I'll just see you tomorrow.\" My finger hovered over the 'End' button on the phone, but he spoke up before I pressed it. \n\n\"No, Grace. Hold on,\" he said. I heard some rustling as he shifted in his bed. \"Did you have a nightmare?\"\n\nI lifted the covers up above my head and cocooned myself. In the darkness I could almost pretend that he was right there, right beside me, lending me some of his strength. \n\n\"Yeah, I did. I haven't had one this bad in a long time.\"\n\n\"Do you want to talk about it?\" He asked. \n\n\"Not really, no.\"\n\n\"What would you like me to do? Tell me how to help.\"\n\n\"You know how,\" I said challengingly. \n\nThere was a pause. I thought for a moment he wasn't going to respond\u2014but then, \"What are you wearing? Wait, let me guess... Disney Princess pajamas?\"\n\nI laughed. \"Is that how you imagine me when you lay there alone in the dark?\"\n\n\"There's a lot of ways I imagine you when I lay here alone in the dark, and that definitely isn't one of them.\"\n\nOh, god. \n\n\"I've imagined you calling me like this. Vulnerable, scared, and lonely,\" I heard him say over the loud beat of my heart. \"And I've imagined what I'd say, how I'd make you feel better by making you feel... something else.\"\n\n\"Don't stop,\" I said without thinking. God, it was humiliating how needy I was.\n\nHe chuckled. \"I imagined you saying that, too. Over and over and over...\"\n\nHeat, pure heat, pooled between my legs, flowing down between my thighs, drenching the bed. Weeks and weeks' worth of anticipation was built up in his words, all thick and heavy with want, desire, need. I twisted in the sheets, clenching my thighs together to still the fluttering muscles in my pussy, but it didn't work. \n\n\"Gabe,\" I whimpered. \"I-I want\u2014I need...\"\n\nThen the sound he made, fuck, it was almost depraved. Like he'd been holding off, composing himself until I'd said his name, releasing him from those chains, giving him permission\u2014no, not permission. Daring. I was daring him. \n\n\"Grace,\" he said hoarsely. \"Part your thighs for me.\"\n\nHis words were toxic, poisoning my veins, setting fire to my bones, making all my muscles cramp. My thighs were sticky with need, the fabric of my panties dampened with desire. I slipped my fingers between my wet folds and gasped from the sensation. Oh, god. \"I need you,\" I told him, biting my lower lip to keep from moaning.\n\n\"I know, baby,\" he said in a dark, low voice. \"Are you wet for me?\"\n\n\"Soaking.\"\n\n\"Oh fuck, Grace,\" he groaned. \"I can't wait to lick you and taste you.\" I couldn't contain my moan this time. It escaped my lips in desperation. \n\n\"You like that, huh? You want my stubble on your pussy, rubbing you raw while I eat you out?\"\n\nOh god. The picture he painted was vivid, and particular, so particular that I knew he'd been thinking about it a million times, the way I thought about him parting my thighs with his knee, lifting my leg up over his shoulder, sinking into me with a hiss... \n\n\"Yes,\" I gasped with the filthiest moan as I slipped two fingers inside my pussy. The pleasure was out of this world, roiling through my nerves, my veins, my everything. \n\n\"Slow down,\" he said in a commanding voice. \"Don't come until I say you can.\"\n\nI writhed on the bed, groaning in frustration. How the hell could he expect me to not come when his voice alone was spurring me on? An orgasm was already blooming inside of me, throbbing its way out, second by second, closer and closer. \n\n\"Not yet,\" he said, reading my silence. \"Lick your fingers first. Taste your pussy, Grace.\"\n\nI withdrew my fingers from my tight, slick pussy and slipped them into my mouth, tasting the sweet, musky cream. Oh god, I'd been creaming for him. It was like my body already knew him, like it prepared because it knew, it just knew how big he was. I was still tiny and tight, my pussy only penetrated once last year when I lost my virginity. \n\n\"Two fingers,\" he said. \"Lick them, get them nice and wet.\"\n\n\"Mmmh,\" I moaned, doing as he told. \n\n\"Imagine it's me,\" he said, his breathing quickening. \"Imagine it's my cock, Grace. Thick and hard. Go slow, nice and slow for me.\"\n\n\"Fast,\" I whimpered. \"I want it fast... and hard. Please.\"\n\n\"You need to come, don't you?\"\n\n\"Yes, please. Please, Gabe.\"\n\n\"You need me,\" he said. My stomach twisted. \"I'll pound your tight pussy into an orgasm. Fast and hard, just the way you want it.\"\n\nTears pricked my eyes. I was on the verge of earth-shattering release, but I hadn't been given permission to come yet. My thighs shook as I worked my two fingers in and out of all of my tightness, slick with my need, nerves burning, stomach muscles hardening, toes curling\u2014\n\n\"Come for me,\" he said. \"Now.\"\n\nI came on command, relinquishing all control with a muffled, desperate cry. Sparks flew, blinding white and painful, ignited by every wonderful and terrible thing surfacing at once, shattering me, bringing out the submissive side of me that craved being ordered, being owned. I heard him, groaning, guttural and animalistic, coming, prolonging my orgasm with every strangled gasp that came out of his mouth. We breathed and breathed, heavy and hard, flying high before finally drifting low. \n\nHeaven and hell. We had one foot in each, playing with fire, but also sitting on cloud nine. \n\n\"You really are going to ruin me,\" Gabe said after he'd recovered. I was still breathing hard, laying in bed with my hair splayed out, looking up at the popcorn ceiling and trying to find his face there amongst all the shapes and shadows. I found only darkness, but I didn't feel alone. \n\nBecause he was ruining me too. Before him, before he brought the calm with his storm, I'd been tumbling from one day into another, finding footholds in all the nothingness, but then he'd come out of nowhere and taken my loneliness and locked it away, holding it hostage in exchange for my compliance, making me melt like a fool and listen to his every word, his every command. He was making me dependent on him, and that, I promise, was going to be my ruin. \n\n\"What happens now?\" I asked.\n\n\"Well, now is the time you start telling me everything.\"\n\n\"Everything?\"\n\n\"Everything,\" he said. \"I want to know you, Grace. You confuse the hell out of me and I should hate it. I should hate not being able to figure you out.\"\n\n\"But?\"\n\n\"I'm captivated. I went through death and loss too, but your anger is unfamiliar to me. You're like fire, unpredictable and self-destructive. I want to know what burdens you so that I can help you carry it. I know you're more than strong enough to take on the world, but I can't help feeling this desperate need to protect you, even and especially from yourself.\"\n\nFire. Of course. In his eyes I was exactly that; destructive in my own way, wild and untamed, scorching everything: his scarred hands, his mouth, his heart, his soul. I was, after all, a monster, but he was odd. He didn't run from me. He ran toward me. That mystery was what made him a mystery. I couldn't understand why he cared as much as he did. I was half-afraid to find out, just in case words like 'obligation' and 'duty' came up. I didn't want him risking everything because he felt morally bound; I wanted him risking everything because he fucking wanted to. Full stop. \n\n\"Why are you doing this, Gabe?\"\n\n\"Because I'm incapable of doing anything otherwise.\"\n\n\"Okay,\" I said, swallowing down that monster strain of fear that had been getting ready to gut me. He cared because it was natural for him. He was just a caring person. I could accept that. I would have to. \n\n\"There's more to you than what happened to you,\" he said in a soft voice. \"You are not defined by your tragedy. The real Grace is still under there. I want us to find her.\"\n\n\"She's gone,\" I said blankly. \"She's been gone a long time.\"\n\n\"No, Grace. You didn't die. You're still here.\"\n\n\"But I did die. Everything I knew died. Nothing's the same. Nothing will ever be the same.\"\n\n\"Tell me about it,\" he said. \"Tell me what died.\"\n\n\"My life,\" I choked out. \"My entire life died. I broke up my family. My dad left. He fucking left because he couldn't stand to look at me. I used to look exactly like her. I've been starving myself so that I don't have to see her in the mirror. I can't\u2014I don't know who I ever was to begin with. I just know that I've been trying and trying to be the exact opposite of what I was. I'm scared to be like her, Gabe. I'm scared it'll make me miss her. I'm scared it'll make me want to be with her. I'm so fucking scared.\"\n\n\"Listen to me, Grace,\" he said. \"You did not break up your family. Your dad chose to leave and that's on him, not you.\"\n\n\"You don't under\u2014\"\n\n\"You think your family is the only one that got torn apart? My parents separated too, but you know what? That was their choice. You're not responsible for how other people grieve. You can't keep carrying that guilt around. It wasn't your fault that your dad chose to leave. That was his decision. Let him live with that for as long as he can manage. Eventually he could come around, but the damage you do to yourself will be irreparable. Stop living with ghosts, Grace. Fight and live.\" \n\nHis words were like gentle whispers into the sickest, most stubborn parts of my diseased mind. My natural instinct was to break down his argument sentence by sentence, to claw and tear it to shreds, to defy his logic... but I couldn't. I'd thought I'd become this coldhearted bitch, this psychopath on a rampage, destroying everything in her path, but when it came to Gabe I just\u2014couldn't. \n\n\"What if I hurt you too?\" I asked. \"What if I ruin your life?\"\n\n\"That won't happen.\"\n\n\"How do you know?\"\n\n\"Because you're not responsible, Grace. No matter what happens it'll never, ever be your fault.\"\n\n\"That's not fair.\"\n\n\"Of course it is. I had every opportunity to fight the urges, but I didn't. If I was a stronger man, I would have kept my feelings out of this, but I'm weak, Grace. Weak and selfish. I knew better, but I let it get this far anyway. What I should've done tonight was talk to you and calm you down. Instead I fucked you. I fucked you with my words, and you came for me. And it probably makes me sound like a fucking asshole, but I don't regret it. That's why it could never be your fault. I knew exactly what I was doing. I let this happen because I wanted it to.\"\n\nBecause he wanted to. There it was. The words I'd been looking for. He was doing all of this because he wanted to. \n\n\"I don't regret it either,\" I said, grinning my ears off. \"And you think you're weak now. Just wait until I get my hands on you. I'll bring you to your knees, and then we'll see who's at fault.\"\n\n\"Grace,\" he groaned. \"Shut the fuck up.\"\n\nI laughed. It was liberating, holding so much power. I could make him weak right now if I wanted, make him hard, make him come, make him feel the way he made me feel. I could tell him all the things I'd been fantasizing, all the ways I wanted him to take me, all the places of my body that craved him... But it was almost three in the morning. It was time to cut him loose, at least for now.\n\n\"It's getting late,\" I said. \"We should call it a night.\"\n\n\"Don't hang up. Sleep with me.\" \n\nSleep with me. \n\n\"You should be careful how you word things.\"\n\n\"I know what I said.\"\n\nI snorted. \"Oh, ha, ha, aren't you cute,\" I said sarcastically. \"Shut up and sleep then. I won't hang up.\"\n\n\"Sweet dreams, Grace.\"\n\n\"Sweet dreams.\"\n\nThe silence settled around us, but not between us. Through the phone I could still hear his breathing, proof that he was still there, still ready to catch me if I fell. He was the dream that I had not dared to dream, the temptation I'd been resisting, the desire I'd been denying, but he took all those fears, all those doubts, and turned them into something valid, something real, like dreams and temptation and desire were all allowed to exist. I was allowed to want him. \n\nBecause he wanted me too.\n\nLong after he'd fallen asleep, long after his breathing had become whispery and light, I opened my mouth and said the words that I'd only been able to say with my eyes:\n\n\"I love you.\""
    ],
    "authorname": "norafares",
    "tags": [
        "healing",
        "renascence",
        "romance",
        "slow burn",
        "student",
        "student teacher",
        "teacher",
        "teacher student"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/renascence-ch-05"
}