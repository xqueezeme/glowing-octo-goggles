{
    "title": "Meeting of the Six Kings Ch. 06",
    "pages": [
        "Four Days Later...Continued\n\nShe walked along the sterile corridor as though the motion of her body was outside of her control; As though someone else propelled her forward. External forces rather than internal ones pushing her towards her future. No longer able to think clearly, her mind buzzed with a jumble of incomplete thoughts.\n\nTwo orderlies, with their hulking mass, stood just a few steps behind her, but they weren't hurrying her along. She understood that the presentation of a claimed slave was a different affair than that of one on loan. Her two guards seemed more apprehensive to push her, touch her, or even speak to her, likely for fear of damaging the merchandise in some way that the buyer would find distasteful.\n\nShe entered a large room through a rear door and paused as she tried to orient herself to the space. It was a parlor of some kind with an adjacent entrance that connected to the room through a sizable doorway. At the room's center, Catrine noticed a platform, about twelve inches tall, with a single satin pillow resting on it. \n\n\"Go forward and take your position,\" one of the men behind her said with a dispassionate tone.\n\nCatrine stepped forward, setting her slippers aside and stepping up onto the platform. She lowered herself gradually to the pillow, smoothing her skirt gently across her lap. She lowered her head and clasped her hands behind her, stilling completely. \n\n\"Very good.\" he said lasciviously as he admired the sight of her on display. He circled her once, making sure every last detail of her presentation suitably reflected her fine training and the rigor of their establishment. \n\nHe tugged gently at her hair, letting it fall around her body. He pulled back on her shoulders forcing her to arch her back further. He stood before her pinching at her cheeks and lips to give them an added blush of color before finally running his hands over the front of her ice-blue dress, teasing at her nipples and then pinching them firmly to draw them to attention beneath the sheer fabric. \n\nStanding behind her, he pulled out a blindfold, wrapping it securely around her eyes. He leaned forward so his lips were pressed close to her ear and said in a tone that gave her a chill, \"Now...you wait here for your new Master.\" \n\nThen, after a thoughtful pause she felt him lean forward, running his tongue along the side of her neck as he added, \"Oh sweet slave, you are going to make someone a very happy man.\"\n\nCatrine overheard them laughing as their footsteps retreated from the room, the door closing firmly behind them. She trembled there, kneeling on the platform, filled with the fear of the unknown; the quaking growing so fierce that it threatened to shake her from her position. \n\nShe closed her eyes, focusing just on her breathing. She visualized nothing more than the intake of air filling her lungs before slowly releasing it, emptying with it some of her jitters. She hoped that by limiting her attention to the simplest of acts, she could keep a hold on her sanity.\n\nAfter what seemed like a lifetime, she heard a door open and close somewhere to her left and a lone set of footsteps approached her. Despite all of her efforts to stay calm, her body quaked uncontrollably as the steps neared. When the sound stopped, she lowered her head further, hoping to hide the expression of terror her face surely conveyed.\n\n\"So fearful, Pet?\" said the ice cold voice. \n\nDespite trying to stifle the sound, Catrine let out a low, anguished moan as she connected the voice with its owner. \n\nHer worst fears confirmed. It was, indeed, King Arick and not Ryan who had claimed her. \n\nShe fought a fierce wave of nausea and struggled to breathe as the realization crashed over her. Despite knowing this to be the most likely outcome, it was only now that her last fragments of hope shattered within her soul. \n\nShe had lost so much, but she had never lost all hope. The painfulness of it being extinguished inside of her making her cry out in agony. Her chest convulsed as she literally bit back the sob that was building inside of her. \n\nShe was hardly listening to Arick's words as he began speaking. \n\n\"Of course. You are a clever girl. You have such good reason to fear me.\" He said, as if in answer to her body's reaction to him as he circled her like a predator.\n\n\"Now that you've been claimed,\" he continued, \"It is my duty to convey my expectations of your conduct. You are a most costly investment and as the guarantor of your ownership agreement, I want to avoid the potential for any kind of...misunderstanding.\"\n\nStepping towards her and cupping her chin in his palm, he lifted her face and leaned forward accentuating his words. \"We don't want to have any misunderstandings, do we Catrine?\"\n\nShe managed to shake her head quickly back and forth to answer him. Her tears now flowed freely, soaking the blindfold and running down her cheeks.\n\n\"Very good.\" He answered walking to stand behind her. \n\n\"Now,\" he began as he stroked her hair with an uncharacteristic softness, brushing it over her shoulder in the process. \"As you know, you will relinquish your collar in favor of a permanent designation of your status and your Master.\" Without pausing, he pressed a key against her collar and efficiently pulled the gold band away from her body. Catrine was startled as it fell with a loud clank to the floor beside them. \n\n\"Dutton always chooses jewelry. Still a romantic, I suppose.\" he said dismissively, running his cold fingers along her neck where her collar had been. \"But, I have found that it gets in the way when i feel like enacting some of my darker desires.\"\n\nAs he spoke these words, Catrine felt him tighten his fingers around her neck, her pulse pressing frantically at his palm as it closed on her throat. Struggling to breathe, Catrine panicked and moved her hands to his, attempting to pry his fingers from her.\n\nHe clucked his tongue at her reaction but he did release his tight hold, practically shaking her fingers off his arm as he stood erect again. \"You know better than to break position, my girl. That would earn you quite the punishment in my house,\" he added, instructively.\n\nCatrine frantically gulped for air. Its sudden return making her sputter and cough. Fearing the warning in his words, she took a deep breath, pushing her shoulders back again and interlacing her fingers behind her back. She willed herself to remain still, praying she could avoid earning any kind of additional punishment from this man.\n\n\"That's better.\" He said in appraisal. \"As I was saying, I prefer to mark my girls. Much more practical than a collar and permanent too.\"\n\nShe could feel him closing in on her again, running his palms across the bare skin of her back and shoulders. She trembled violently beneath his touch, having some sense of what he had in store for her.\n\n\"I usually mark my girls in a more intimate place, but this will have to do for today...\" He trailed off for a moment before suddenly pressing one hand down hard against her right shoulder, holding her steady as something cold, like a metal tube, pushed forcefully against the edge of her shoulder blade. \n\nCatrine heard a click, like the release of a ballpoint pen. Then a sudden, white hot pain shot through her body. Unable to hold back, she let out a scream that captured the extent of her agony. \n\nHer skin burned fiercely as Arick pressed, unyielding, against her skin, allowing the ink of the stamp to set fully, keeping her pinned in place between his two hands. \n\nHe finally removed the offending object, putting it in his pocket and admiring his work.\n\n\"Such beautiful skin,\" he said with sickening softness. \"A most beautiful canvas for my work.\"\n\nAs his hands finally released her, Catrine crumpled forward, no longer having the strength to hold herself up. She wept openly, her mind giving itself over to the trauma of Arick's actions and the cruelty of his words. \n\nArick slid beside her, enjoying the extent of her helplessness. Delighting in her fear, his fingers circled the tender flesh of her fresh tattoo making her wince before trailing his palm slowly down the bare skin of her spine. \n\nThe feeling of her trembling at his feet shot directly to his groin making him rock hard. Her terrified response to his presence his most favorite aphrodisiac. \n\n\"Mmm...\" He moaned, his hands running below her skirt and across the soft skin of her ass. Cupping her pussy firmly against her thin panties, he pressed his fingers along her slit. \n\nLicking his lips, he continued, \"There is really nothing better than the first fuck with a new conquest.\" He stroked her there, hard, a few more times, listening to the sweet sound of her sobs. \n\nBreathing hard he added, \"And you are just so delectable...\"\n\nIn the distance, Catrine heard the sound of the door and more footsteps entering the room, distracting Arick from his toying with her. Arick suddenly stood, dropping her skirt but leaving her in place on the platform.\n\nHe let out a long and dramatic sigh before he finished his interrupted thought, directing his words now towards the person who had entered the room instead of at Catrine.\n\n\"Alas,\" he said with a great sense of drama, \"if only you were truly mine to fuck.\"\n\nCatrine heard the new voice in the room as he answered Arick.\n\nAs though mimicking the King's drama, the voice retorted, \"Alas, my King...\" \n\nThen, lowering his voice to convey his steely seriousness, he went on, \"She is NOT truly yours.\"\n\nFor a moment, Catrine was certain she had lost her mind and that the voice was a figment of her imagination. Surely, it was just an orderly or an official coming to finalize Arick's paperwork. Surely, she was confusing this voice with another. \n\nSurely, there was no way he could be here now.\n\nCurled up and blindfolded, she had no way to confirm the identity of this new presence in the room. She froze, willing him to speak again, listening intently to both sets of footsteps as they circled her at the center of the room.\n\n\"I am surprised to find you here this morning.\" The voice continued, the two men sharing in the formality of a hand shake. \"Surely, there are more important matters to attend to than the future of a pleasure slave?\" \n\nNonchalantly, Arick replied, \"I merely came by to inspect my investment. After all, she will remain the property of the Capital.\"\n\n\"Yes...\" the voice interjected, \"But...\"\n\n\"Yes, but.\" Arick interrupted as though annoyed. \"I obviously am quite clear on the terms you negotiated.\" \n\nWith almost childish frustration, he ticked off the big points of the agreement that had taken them a full day to work out. \"She has been leased to you for an indefinite period, while you fulfill your obligations in the southern territories. Should you exceed our expectations, at the end of the contract, her ownership will be turned over to you permanently. Should you quit or fail to meet the goals, she will be returned to the Capital and will be held responsible for your debts....\"\n\n\"Really, it goes on and on,\" he added as though exasperated by the details.\n\n\"I needed to come by to complete the paperwork and take care of...other formalities,\" he said, gesturing at the burn clearly visible on Catrine's shoulder. \"I had given very specific instructions for her treatment here these past few days and I wanted to confirm that had been fulfilled to my exacting standards.\"\n\n\"You know,\" he continued, \"Claimed slaves have no right to think they've been handed an invitation to an easy life. I didn't want to start her off on the wrong foot with you.\"\n\nThe voice, which had been silent for several moments, couldn't hide the sarcasm in his voice.\n\n\"I appreciate your extensive consideration for my well being.\" Then, more forcefully, he added, \"Though, I believe myself to be a more than capable Master and I intend to impart my own rules for her conduct going forward. I had thought all of this was settled in our discussions last week?\"\n\n\"Indeed, it was,\" Arick said, dismissively. Then, taking a different approach, he clapped his hands and said, \"So, I get the pleasure of hosting your send off!\" The enthusiasm in this last sentence ringing false to everyone's ears. \"You are leaving immediately, are you not?\" \n\n\"Yes, that's correct.\" He answered steadily. \"So, if you don't require anything further, I'd like to wrap this up and be on my way.\"\n\n\"Of course, Mr. Pierce,\" Arick said. \"She is all yours.\"\n\nThe use of his name finally confirming for Catrine the impossible.\n\nThough she could imagine wrapping herself in his arms, she could merely wrap herself into a tighter ball. Their conversation, no matter how hopeful it should have made her, only overwhelmed her already overloaded emotions. To have her last hope vanish, only to reappear so suddenly, making her delirious.\n\nShe felt herself being pulled roughly to standing and struggled to respond. Her legs hardly carrying her own weight as she stood on quaking limbs. She felt a hand pull roughly against the back of her head and with a sudden motion, the blindfold was yanked away. \n\nBlinking rapidly as she adjusted to the bright light, she finally saw him in front of her with her own eyes.\n\nRyan. He was here. And he was taking her with him. \n\nOverpowered by it all, Catrine faltered backwards, relying on Arick to keep her standing. She hyperventilated as she took in the luminous blue eyes that could only belong to one person. She could see the anger there, but also worry and sadness as he looked into her eyes. \n\nShe had been so certain that she would never see him again; the shock of his presence short circuiting her emotions. She could only cry harder, her whole body shuddering, at the sudden change of events.\n\nMistaking her reaction as fear, Arick tossed her roughly towards Ryan and assessed him. \"I may have misjudged you, Sir. I thought you were too soft on her; that you were too lenient with her submission. But, she seems suitably fearful of her new Master after all.\"\n\nThen, as he moved to leave the room, he turned to share a parting thought. \"Wishing you all the best in your new chapter...and may you make us filthy rich!\"\n\nAs the door closed, Ryan inhaled sharply, feeling as though it was his first opportunity to breathe since he had stepped into the room. His heart pounded in his chest, the adrenaline triggered by his encounter with Arick finally beginning to dissipate slowly from his bloodstream. He ran his hand roughly through his hair as though to shake his mind free from the strain of their interaction. \n\nHe hadn't expected to find Arick there. Seeing him, kneeling menacingly over Catrine, his hand hidden beneath her skirt, his face contorted with cruelty and desire, had made his blood boil. He had practically pounced on him; his anger so white hot that he would have killed him with his bare hands had they made contact. \n\nInstead, he forced himself to focus on her; Her beautiful body laying nearly lifeless on the floor. The situation was worse than he had imagined. He had once again underestimated the King's capacity for cruelty. \n\nRyan tightened his arms around Catrine, pressing her possessively against him. With distress, he looked down and took in the sight of her. She was too frail, too small, and too still in his arms. She had stopped crying, but her eyes remained shut tight and she breathed quietly against him. She rested there, almost lifeless; her arms limp at her sides. He could feel her trembling as he supported her weight. He had the suspicion that she was relying on him entirely to keep her standing. \n\nIt had only been a few days since he had last seen her in the parlor and yet, she was in such terrible shape. He could hardly believe how fragile she appeared. He could feel the protruding bones of her ribs, as though she hadn't eaten. He could see the dark circles under her eyes, as though she hadn't slept. He was sickened by the site of Arick's mark, burned cruelly into her skin. \n\nHe felt the all-too-familiar sense of powerlessness creeping into his mind as he realized that he had failed her yet again. The Kings had promised him that they would make appropriate arrangements for her. They had assured him that she would be safe - off-limits they had said - and well cared for as the transition paperwork and payment terms were arranged. That this was simply a matter of procedure. \n\nTheir false promises made his skin crawl. Arick's devious ploy to participate in her presentation; his sick way of branding her, made him furious. He let out a growl, expressing his desire to protect her and his frustration that he had been thwarted at every turn.\n\nStill, he directed his harshest anger towards himself. For days, he had gone about his own affairs, packing his boxes and attending overly-lavish going away festivities. All the while she had been here, suffering and alone. He wanted to apologize to her a thousand ways; wanted to kiss her and reassure her that he would finally, once and for all, make things right. \n\nBut, he didn't trust himself to speak to her. Not here. Not in this building where walls carried whispers. Not until they were far beyond the reach of the Kings.\n\nHe steadied himself, knowing that this time, finally, he had opened the door to her escape. He could only hope that by offering her everything he had, he could begin to undo the damage that had been done. \n\nHe just needed to get moving.\n\nHe gently brushed his hand across her cheek, swiping his fingers along her neck, grasping her gently but firmly in his palm. He traced the outline of her lips with his thumb, a favorite gesture, feeling their softness beneath with his fingers. \n\n\"Catrine,\" he whispered quietly, but firmly. \"Look at me.\"\n\nHer eyelashes fluttered as though trying to focus on the command before she slowly raised her eyes to meet his. His heart thumped in his chest as their eyes met, initiating the familiar current of their connection. He stared hard into her brown eyes, willing her to trust him; to shut out the rest of the world, leaving only the security of his embrace and the intention of his heart. \n\nCatrine felt hypnotized by Ryan's piercing ice-blue stare. It was as though her mind began to settle as his gaze warmed her from the inside out. She stared back at him, meeting his intensity with her own. \n\nThey remained frozen in place, spellbound, as Ryan inhaled deeply, slowly, encouraging her to synchronize her breathing to his. He continued to brush his thumb against her cheek, helping to soothe her ragged mind. \n\n\"That's it.\" He whispered, \"Take a deep breath.\" \n\nShe saw him nod subtly as though asking her tentatively if she was okay. Catrine took one last deep breath before nodding subtly back to him. Then, she took a small step backwards, supporting her own weight for the first time. She sought his hands and grasped them tightly to maintain their connection. \n\nOnce she felt steady, she lowered her head and asked quietly, \"What do you request of me, Master?\"\n\nRyan regarded her there, astounded once again by her courage. He squeezed her hands gently before he answered her, his tone carrying deliberate weight and authority, \"My car is waiting outside. Do you need to collect anything before we leave?\"\n\n\"No sir. I have nothing here.\" She answered gravely. Ryan's eyes closed understanding the honesty of her words, renewing his vow to give her the world.\n\nHe reached towards her, sweeping her into his arms and carrying her swiftly towards the door. Catrine felt relieved to be carried, not sure she had the stamina to follow him on her own two feet. She wrapped her arms around his neck and rested her head against his shoulder, recognizing, for the first time that day, his familiar and wonderful smell.\n\nShe kept her eyes open as he made his way quickly down the corridor, praying that this would indeed be farewell to the vile prison that had been her home for two years. She saw the guards at the door rise to unlock the final heavy metal gate that stood between them and the world outside. ",
        "\"You sure you want her conscious?\" She heard one of them inquire casually to Ryan as he made his way to the door. \"They are much easier to subdue when they're disoriented.\" He offered, helpfully.\n\nShe felt Ryan's hands tighten against her body as he struggled to tamp down his anger. Flashing them a smile he answered, \"Thank you, but I'm sure I'll be just fine.\"\n\n\"Suit yourself,\" the orderly answered as he swung open the door, following them as he carried Catrine down the front steps and towards his car.\n\nThe guard whistled as he took in the sight of Ryan's new car, parked in the driveway of the building. \"That sure is one beautiful SUV!\" he complimented.\n\n\"That it is.\" Ryan agreed as he nodded towards the guard to assist him by opening the passenger door. He set Catrine gently in the seat, closing it behind him.\n\n\"Brand new?\" The guard questioned, ignoring the fate of the woman in the front seat, rounding towards the hood to check out the details from another angle. \n\nWanting to wrap up the small talk, but still wary of ruffling feathers, Ryan managed to answer concisely, \"My boss made out pretty great in a recent business deal that I negotiated. This was his way of thanking me.\"\n\nStepping into the driver's compartment, he stuck his head over the top of the car and said amiably, \"Thanks for your help. Have a good one.\"\n\n\"You too, Sir.\" The guard answered jovially, \"And may you thoroughly enjoy both of your new toys!\"\n\nRyan pulled the door closed with a slam, starting the engine quickly and shifting the car into drive. He pulled away and drove as quickly as he dared intending to put as much distance between them and the capital as fast as he possibly could. \n\nHe wrapped his fingers around the steering wheel, grasping it hard, realizing that he too was trembling. The strain of the situation finally wreaking havoc on his nerves. Pulling onto the highway, he drove hard and fast, glancing back frequently in the rear-view mirror, still anxious that his plan would somehow still be thwarted. \n\nStill shaken by the events of the morning, Catrine sat silently beside him. It was as though she was in suspended animation, frozen in place as she watched the skyscrapers and crowded streets of the Capital go by.\n\nThey continued their drive in silence for almost an hour. Each lost in their own thoughts, needing the time to calm their minds. Gradually the density of the city gave way to smaller buildings and open land, leading towards the vast mountain range they'd need to cross on their way south.\n\nAs the car began its first steep ascent up the narrowing mountain road, Ryan finally reached over and took Catrine's hand, squeezing it softly in his own. It was ice cold; the feel of it snapping him out of his own thoughts. He looked at her more closely and it dawned on him that she must be freezing. \n\nShe was dressed only in one of her tiny silk dresses, which covered almost none of her body. And, he had managed to carry her from the building without even noticing that she had no shoes. Then, on top of it all, he had managed to drive for more than an hour without even registering that she was sitting beside him shivering this whole time.\n\nHe berated himself, swearing under his breath. This was not exactly the best way to start if he intended to take better care of her; not exactly the perfect way to rebuild her trust in him. When he spotted a turn out, he pulled swiftly off the road, creating a spray of rocks beneath the car as the wheels skidded slightly. \n\nCatrine watched, suddenly alarmed as he stopped the car, aggressively throwing it into park and mumbling something to himself. She couldn't make out the words as he got out of the car, slamming the door behind him. \n\nShe sat up suddenly, watching him out the front window as he strode with purpose towards the very edge of a cliff. He picked up a handful of stones, hurling them over the edge as he let out a long string of obscenities. Despite the soundproofing in the new car, he was loud enough that Catrine could hear most of it. He released another burst of anger as she watched his hands curl into fists and his feet kick aggressively at the stones at the edge of the turn-off.\n\nShe sat still, not sure how to respond to Ryan's uncharacteristic anger; her nerves already frayed from the stress of so much change in such a short period of time. \n\nBut, when he finally turned around and their eyes met, she saw not anger, but tears, and she knew that he shared in her pain. \n\nHe took a deep steadying breath, running his hands through his hair as he walked back to the car. Quickly opening the trunk, he grabbed two items near the top of his pile of boxes and suitcases and made his way to the passenger door. \n\nAs he opened it, he was already speaking to her as though they were in the midst of an emotional conversation. \n\n\"...They said they'd take care of you. Just a formality. Just a few days....\" His voice trailed off as he pulled a sweatshirt around her back, slipping her arms through it and zipping it up to the top. \n\nClutching his hands tightly in the fabric against her chest he gazed at her, his expression almost crazed with concern. \"Did they tell you anything at all?\"\n\nShe tried to form the words but none came. Her mouth felt dry as she took in the immensity of his sadness. Her first instinct was to lie; to reassure him that she had been okay, that the days had passed quickly and easily. \n\nBut, as she finally registered that he was really there with her. That now, she was really his. She could only tell him the truth.\n\nShe tentatively put her hands over his as they still held the sweatshirt. One finger rubbed softly along his knuckles as she looked up at his beautiful pale blue eyes and shook her head 'no.' \n\nRyan let out a cry of frustration at the cruelty of it. He wrapped his arms around her neck and her back and pulled her into a crushing embrace. \n\n\"God, I should never have left that building without you. I should have never let you out of my sight!\" He cried out to no one in particular, practically shaking with fury. \n\n\"Catrine.\" He said, his voice filled with sincerity as he pulled back slightly to stare at her beautiful face. \"How do I begin to ask your forgiveness?\"\n\n\"Ryan.\" She whispered. She had not dared speak his name for days. The word on her lips so filled with meaning and with hope.\n\n\"I am so thankful for you. For everything. You have only my gratitude. There is no need for forgiveness.\"\n\nRyan exhaled deeply, not realizing he had been holding his breath awaiting her reply. He could hardly believe her answer. He could hardly believe she was there with him.\n\nLeaning forward, he kissed her lips, softly at first, but then with more insistence. She returned his kiss, sighing deeply as she relaxed her hands against his forearms, feeling the safety of his embrace.\n\n\"Here.\" He said, releasing her from the kiss and draping a blanket softly across her lap. \"We have a long drive ahead of us.\" Then, with a boy like smile, he added, \"I cannot wait to show you where we're headed.\"\n\n\u2014-\n\nOver the next several days, Catrine and Ryan relaxed into the rhythm of their travels and the pleasure of each other's company. Despite the long distance of their journey, they each seemed to relish the unhurried pace and the luxury of spending time together. Sometimes they listened to music. Sometimes Ryan told her about this new place they'd call home and his vision for their future. Sometimes, they just sat together in companionable silence, taking in the breathtaking panoramas revealing themselves with each turn of road. \n\nCatrine was certain that the scenery only became more and more beautiful. The area was ringed by striking snowcapped mountain peaks covered by mile after mile of pine forest and birch trees. The valleys were carved by pristine glacial streams fed by rushing torrents of water feeding turquoise blue lakes. \n\nShe had never seen anything like it. It was so different from the sleek metropolis of the Capital and nothing at all like the vast prairie of her childhood home. She gazed with wonder at the natural splendor surrounding her and knew in her heart that she had found her home.\n\nAt the end of their fifth day of traveling, just as the last glimpse of the sun was visible on the edge of the horizon, Ryan pulled their car off the main road and headed up a winding dirt path, stopping the car in front of a small, dilapidated house.\n\nHe couldn't help but giggle a little bit as he took in the sight of it. \"Well,\" he began, \"It really is as bad as it looked in the pictures.\"\n\nCatrine gave him a questioning look, turning back to the building in front of them. \n\n\"Welcome home, baby.\" He said as he opened his car door and moved swiftly around to help her out. It was already late fall and as she stepped out of the car, Catrine felt the whispers of winter in the chilly afternoon air. She wrapped the jacket that he had bought for her more tightly around her as she took in their surroundings.\n\nRyan extended his hand to her. Taking it, she stepped forward tentatively and followed him up to the landing, noticing that the screen door was hanging loosely by a single hinge. The floorboards creaked beneath their feet as though bemoaning the weight of their occupants as they walked the length of the porch.\n\nAs they turned the corner, looking towards the back of the cabin, they both stopped, stunned by what they saw. The house was nestled against the shore of a magnificent glacial lake, the blue green water shimmering as it reflected the last rays of the setting sun. The lake was fed by an enormous glacier set high in the stark grey granite cliffs above, a trail of waterfalls winding their way to the basin below. They were surrounded on all sides by vast mountains washed in purples as the sunset turned the sky to yellow and orange.\n\n\"It will take a year or two,\" Ryan began as they stood together, looking at the majestic place they would call home. \"But, I was thinking about building a new house for us here, eventually taking this one down. When I saw the pictures of the land, I had a good feeling about it. Do you think we can make this work in the meantime?\"\n\nCatrine gazed around at the immense open space and natural beauty. The tranquility quieting her mind and bringing with it an enormous sense of peace. \n\nRealizing he was waiting on her for an answer, she nodded her head once in agreement with him, still taken with all that had changed so quickly and delivered her to him and to this place. \n\nWith a whoop of excitement, Ryan picked her up, spinning her around on the porch and kissing her deeply. \"Go ahead and take a look inside,\" he said enthusiastically. \"I'll get all of our things.\"\n\nCatrine wasn't sure if it was the spin, the kiss, or his excitement that had left her feeling woozy. But, as she watched Ryan walk away, the sound of fallen leaves rustling under his feet as he strode towards the car, a feeling of contentedness washed over her and she couldn't hold back a smile.\n\n\u2014 \u2014 \n\nAlthough it was far from extravagant, the house seemed to have most everything they'd need to get settled. They worked together, well into the evening, unpacking their things; making up the bed and pulling dust covers from the furniture. Ryan stacked wood in the fireplace, setting a large fire. It burned brightly, warming the whole house and casting shadows around the corners of the room. \n\nCatrine smiled as she unpacked the small set of clothing they had bought for her a few days before. So many essentials for their new life: a thick wool sweater, tall rain boots, a heavy winter coat. It was the absolute opposite of the thin gowns and soft souled slippers she'd worn exclusively for the past two years. Each item was so practical, so representative of normal, everyday life. She was crazy about them all.\n\nHe hadn't stopped there, buying her soaps, a toothbrush, a small make up set; going so far as to ask her preferences while wandering the aisles of the grocery store, making sure to stock their pantry with things that she would enjoy. In addition, he had ordered so much more that would arrive with the containers being shipped by his company: books, games, a journal, even a drawing set. He was eager to cater to her needs and wishes. She felt cared for and safe.\n\nPouring two large glasses of red wine, he handed one to Catrine and clanked their glasses together, settling on the rug in front of the fireplace. He thought about making a toast, but he hardly knew where to begin. He settled, instead for silence, sitting together and watching the flames, knowing somehow that conveyed more than he could say.\n\nHe watched her intently as she took a small sip of her wine. It was the most relaxed he'd seen her since they began their trip several days before. \n\nHe hadn't dared touch her beyond a few soft kisses or the occasional embrace. It was clear to him that she wasn't ready for that sort of intimacy. But each night, after they had first fallen asleep, she would seek him in their bed, tucking her head against his chest and curling herself tightly against him. \n\nAnd each night, he would wrap his arms around her and whisper promises against her soft hair. He wanted to be there for her, helping to make her more comfortable; praying that this could be the start of a new life together.\n\nA sudden pop in the fire sent a flurry of sparks out of the fireplace, landing on the floor just in front of their feet. The distraction shifted Catrine's attention towards Ryan who was still gazing at her. She looked at him and a shy smile played at the corners of her mouth. \n\nHer hair was pulled back in a simple pony tail and she wore an oversized flannel shirt and leggings they had picked out in town, both showing evidence of the grime and dust they had been working to clear from the house all evening. But, it didn't matter. He had never found her more beautiful.\n\n\"Are you tired?\" He asked, as he brought their empty glasses towards the sink. \n\nShe smiled again, nodding in response, as she trailed behind him with the empty wine bottle. She set it on the counter and then turned towards his chest, suddenly pressing herself against him and sinking into the protection of his embrace. She closed her eyes and wrapped her arms around his back holding herself tightly against his warmth.\n\nRyan closed his eyes as he tightened his arms around her. He was so relieved by her gesture, to know that she had sought out the bit of comfort that he could give her.\n\n\"Do you want to get ready for bed? I'll meet you in there in a minute?\" He said against her hair.\n\nShe nodded again, but lingered in his embrace enjoying the silence that surrounded them; the stillness of their new world. The sweet feel of him against her.\n\nA few minutes later, he found her standing beside the window, clad in her favorite t-shirt, the one that had formerly been his. She was gazing up at the bright moon in the clear night sky. He could feel her hesitation as he approached. Her instincts still making her cautious and guarded.\n\n\"We could get you some pajamas you know,\" he said as he looked at how it hung loosely off her shoulders. \"Something warmer?\n\nShe turned to face him, a blush spreading across her cheeks. \"I'm partial to this one, actually. It has a very special meaning to me.\" \n\n\"Suit yourself.\" He said with a smile, his body now close enough to touch her. \"I like you in my shirt.\" He said as he closed in. His voice barely registering above a whisper.\n\nShe could hardly breathe as she felt the nearness of him; his presence charging the room with a powerful energy. \n\n\"Feel that?\" He whispered as he reached up to skim his fingertips across her cheek, stroking lightly along her earlobe and across the corner of her jaw, repeating the motion a second time as her eyes closed and her head dipped slightly to press herself against his palm. \n\nShe nodded her head in affirmation. Her expression changing as his touch traveled across her body. Lighting her up. Turning her on. \n\n\"So powerful...\" he whispered as his thumb lingered at her lips. He stared at her intently.\n\nCatrine's heart pounded fiercely in her chest as she warred with herself. Her mind still seeking to protect her from suffering at any cost. Her body recognizing the feel of that invisible current. Remembering him. How it felt with him. Suddenly desperate to feel that release that she knew he could give her.\n\nShe opened her mouth slightly, catching his thumb with her teeth and locking it in place before closing her lips and sucking it gently into her mouth. She shook her head gently back and forth, allowing the tip of her tongue to rock gently along the tip of his finger. Her action elicited a low moan from Ryan.\n\nAs she opened her eyes, she could read the myriad of thoughts in his expression: His raw hunger and need mirroring her own. But also, the tenderness and affection that he felt for her. It reassured her and made her feel more confident in her actions.\n\nShe leaned forward, pressing her lips to his and initiating a slow but demanding kiss. He tightened his hands on her cheeks, pulling her closer and deepening it, teasing her lips apart and sweeping his tongue into her mouth. Having had a taste, he was suddenly voraciously hungry to explore her.\n\nWrapping her hair in his hands, his lips traveled across her neck before nibbling at her ear. \n\n\"I want to kiss every part of you.\" He whispered against her. His voice filled with desire as he eagerly left a trail of kisses across her lashes and down her cheek. \n\nHe returned to her lips, though his were more insistent now. Tugging at her mouth, pulling at her lip and sucking on it softly; pressing his tongue deeper and intertwining it with hers. \n\nReaching down, he pulled at the hem of his own t-shirt, pulling it upwards, breaking his kiss only long enough to slip it over his head. Then, he duplicated the action with hers, using one hand to press against her lower back, pushing her more closely against him. \n\nCatrine let out a quiet moan, her nerves heightened by the new contact, as she pushed herself more fully against his body. He felt so warm. So alive against her bare skin. She could feel his erection pressed against her hip as her fingers stroked lightly along his bare chest.\n\nTheir tongues danced as Ryan's hands eagerly moved down her back and across her hips. He stroked at the edges of her panties, feeling the gentle curve of her bottom and squeezing each globe softly, melding his body against hers. He could feel her flexing her hips more tightly against him, needing more from him; urging him on. \n\nSlowly, he reached down and peeled her panties down her legs revealing her naked body to him. He couldn't help but stop to admire at her, staring at her beautiful form illuminated by the moonlight. He took her in with eager eyes. \n\nUntil this moment, he had always had a sense like someone was watching them. He had always known that someone else was in control. Their time together too often cut short. Tonight she was only his. Tonight he would take her for hours, indulging in the limitlessness of their passion. \n\nHe groaned as this realization shot through him like a sharp pain. He leaned backwards onto the bed, pulling her along with him.\n\nThe springs gave a loud, protesting, groan as their weight sank into the mattress; Each movement of their bodies causing a new squeak or clank as they moved together towards the headboard. Distracted by the racket, Ryan climbed over Catrine, resting on his hands and knees before pushing with all his energy into the bed, the springs creaking in a steady rhythm with each of his thrusts. Catrine giggled beneath him as the bed became an eager participant in their coupling. \n\n\"Oh my god. This bed must be one hundred years old.\" Ryan laughed as he kissed the top of her nose.\n\n\"Yes, but it's our bed.\" Catrine answered quietly but boldly, staring into Ryan's eyes so he would grasp her meaning. It was not lost on Ryan. And, while the riotous noise had lightened their moods momentarily, it did not lessen their passion. ",
        "Still hovered over her, Ryan leaned down to kiss at her shoulder, along her collar bone and across her breast. Kissing around the edges of her nipple, he watched as it responded to his contact. He hovered over it, blowing softly on her skin. The cool sensation making it pucker just before he sucked it gently between his lips. His tongue swirled around it, making it increasingly sensitive as it hardened in his mouth.\n\nHe turned to his side, freeing his hand to stroke along her ribs and around the soft flesh of her breast. She felt so soft in his hand, easily molded and so responsive to his touch. His fingers traced her aureolas and tugged gently at her nipples. He watched as her expression betrayed the pleasure that coursed through her. \n\nHis head dipped again to take her breast in his mouth suckling at her. Her hands found his shoulder and his hair, grasping it as she arched her back against him. She felt the sensations of his touch and his tongue coursing through her whole body; that amazing feeling of her own desire igniting from within. \n\nCatrine shifted so that she could tug at the waist of Ryan's sweatpants. Reaching below the waistband, seeking to free him from the confines of his pants. He was all too happy to assist her, lifting himself slightly and helping to slide them down, kicking them to the foot of the bed. \n\nHe laid back as Catrine began an eager exploration of his cock with her fingertips. She circled the very tip before reaching downward, stroking him from the bottom to the top and back again. She used both of her hands, alternating the pressure and giving him the most sensual massage. Her dedication to the task making him groan. \n\nShe could feel his pulse beneath her fingers, the sensation of him so alive and vital. She loved the feel of him in her hands. So hard and yet so soft at the same time. So demanding and yet so responsive to her strokes. \n\nSuddenly curious, she wanted to touch him with more than just her fingers. She leaned down, stroking his cock against each of her cheeks, letting the tip of it brush softly against her lips. \n\nRyan's eyes fluttered open as he sat up to look at her in surprise. \n\n\"Catrine,\" he began, remembering their last time together. Wanting to reassure her that she didn't need to do anything that made her feel uncomfortable. \n\nHer voice was breathy as she looked up at him, barely able to speak her answer. \"I want to taste you,\" she said as her lustful eyes met his.\n\nShe leaned down again, giving him one long lick from root to tip, her eyes never leaving his. She felt his hips almost buck off the bed as it creaked loudly in protest. She couldn't help a small smile as she relished the powerful feeling of being able to provoke such a strong response from him.\n\nShe licked gently along the tip, the taste of the small bead of liquid mingling with his familiar smell and the feel of his hands deliciously caressing her hair. The feeling of it all confirming for her that she was indeed enjoying this. She enjoyed it very much.\n\nShe leaned down and took him deeply into her throat. The first aspects of her training making an appearance in their love making. She hummed quietly, tightening her lips around him each time she bottomed out against his balls. She swallowed him down and massaged him deeply with her cheeks and the muscles of her throat. She could do all of it without making the slightest contact with her teeth; that rule deeply enforced and engrained in her. \n\nShe repeated the motions with a fluidity that connected each stroke, suck and lick into a single, fluid motion. Ryan had never felt anything like it. The muscles of his ass squeezing together tightly together as he fought to retain any sense of his quickly diminishing control. He was lost in the sensations that she created.\n\nHe cried her name as though he were suffering and she glanced up to see him clearly struggling against his need to cum. The sound of her name on his lips traveling straight to her core, making her internal muscles clench sharply. \n\nCatrine realized that something unusual was happening to her too. She could feel that she was wet. Very wet. Her attention to Ryan not only pleasing him, but stimulating her own powerful need. She liked provoking this response in him. She liked being the source of his arousal, knowing that she could also deliver the cure.\n\nReturning to her work, she took him again deeply into her mouth, using her hands to massage his balls, squeezing them gently. She made tiny circles with her fingertips against the smooth place between his ass and his sack, the sensation of it working Ryan into a frenzy. \n\nShe sustained her pace as she felt him tip over the edge, losing control. She pulled her mouth upwards, not certain she was ready to swallow him. Instead, she held him tightly in her hands, milking his release as he came on her breasts and her tummy. \n\nHis breathing was still ragged as she leaned forward to plant a wet kiss on his lips. He wrapped her up in his arms, their bodies slippery with sweat and the remnants of his release. He rolled their tangle limbs over so that Catrine was laying beneath him as he stared at her. \n\n\"Sweet, sweet, girl.\" He said with reverence, tucking a stray lock of hair behind her ear. \"Thank you so much.\"\n\nA smile spread across her face as she realized how much he had enjoyed their act. It pleased her so much to please him; a gift they could share.\n\n\"Now, if you don't mind,\" he said playfully as he ran his fingertips down her body stopping just below her belly button, drawing slow shapes across her pelvis, \"I'd like to return the favor.\"\n\nCatrine closed her eyes but her expression revealed her excitement to him. Her body already hummed with the anticipation of his touch. The places he had just stroked tingled as though she could still feel him there. Her core burned with the need for more contact with him. \n\n\"Ryan. Please...\" she pleaded. The sound of her voice making his cock twitch again. She was his and he intended to leave her thoroughly satisfied.\n\nHe watched his fingers as they danced across her tummy and over her hips, the site of her sweet bare pussy making him hard. Her hips rolled gently beneath his palm encouraging contact as he heard her release a soft little moan. He loved touching her there, feeling her responsiveness.\n\nHe cupped her intimately, allowing one finger to make a solitary, slow stroke along her bare slit, starting at the bottom and moving all the way to the very tip of her clit. A shudder wracked her body and like an electrical current, it traveled through Ryan making him breathless. \n\nShe was wet. So deliciously soaking wet. The feel of it at once making Ryan groan and press more insistently against her, needing more. Needing to deepen his exploration. He had never experienced anything sweeter than the sensation of her.\n\nWith two fingers, he sought to open her further to his touch, pulling gently at her clit, letting it slip between his fingers before sliding down again to hold her firmly in his palm. \n\nHe laid on his side so he could watch as he stoked her pleasure. Using first one and then two fingers, he pushed against her until he was pressed deeply inside of her. Once there, he pressed his thumb against her clit, keeping the other fingers firmly entrenched in her body, stimulating her in both places to coax her soft cries. \n\n\"Did you like making me come with your hands and lips?\" He whispered to her. His words punctuated by the pressure of his fingers. His voice heavy with the heat of his own desire. \n\nCatrine threw her head back, biting her lip and shaking her head vigorously in agreement as he continued to increase the pressure of his hand. His thumb worked in slow circles and her hips mirrored the motions, trying to match his rhythm. \n\nShe was rocked by the sensations that were just building and building inside of her until she felt like she would burst from the pressure. With each press of his fingers she was surprised by the new burst of intensity, pushing her higher and making her crazed with need. \n\n\"Mmm...\" He moaned watching her writhe beside him. \"You are so beautiful. You feel so good. So soft and so tight. Incredible\" \n\nHer breathing was erratic as she lost herself to the rhythm of his movements and the sound of his voice. Her attention given over entirely to the place where their bodies connected. He pushed against her deeper and harder, with more insistence than he had before. \n\nCatrine arched her back, pushing against him. \n\nNeeding him. More of him. All of him. \n\nHe pulled his hands back, spreading her legs gently as he climbed up her body and hovered over her. Resting his weight on his elbows, he lined himself up with her entrance and stared into her eyes. \n\nShe felt him pushing himself slowly inside of her. The urgency of her own need making her impatient. She squeezed her arms around his body and pressed her hips forward seeking him deeper and faster than he would allow. \n\nShe let out a moan as she finally felt the satisfaction of his cock nestled deep inside of her. He stilled for only a moment, relishing the feeling of their bodies joined together so intimately. Groaning at the exquisite feel of her enveloping him. \n\nSoon though, he began rocking his hips gently but deeply, nudging against her womb and encouraging her body to flex and bend to his will. Her inner muscles clenched around him, clasping his cock and locking him inside of her. With a slight tilt of her body, she positioned herself so that each of his movements rubbed roughly against her g-spot, the vibration radiating through her whole body. \n\nHis lips locked against hers in a rough kiss as they both moaned into each other's mouths. His limbs searched to pull her more tightly against him as they soon gave themselves over to the rawness of their passion and the simplicity of their need. \n\nRyan increased his speed, thrusting into her with abandon, rubbing against her clit as he pushed and pulled against her. His relentless rhythm matched by the frenzied movement of her hips. The bed squeaking loudly as it slammed up against the wall. \n\nCatrine was hardly holding on. A thin sheen of sweat coated her body as the tension inside of her wound up impossibly tight. She could think of nothing but the intensity of her passion as it overtook all of her senses; The feelings so delicious and so overpowering they consumed her.\n\nHe pressed his lips against her ear and she heard him whispering to her between short gasps, \"My love. My sweetest girl. Come for me.\" \n\nAlready overwound, Catrine's body tightened again at the sound of Ryan's words before exploding with a powerful blast. She screamed with the suddenness of her profound and powerful release. \n\nIt was as though her orgasm liberated whole parts of herself; setting her free from her history, her struggles, her soul. The feeling of it suddenly opening vast spaces for more: More happiness. More adventure. More love. \n\nFeeling the sensation of Catrine's orgasm rippling around him, Ryan could only thrust once more before his own climax overtook him. He came with the her name on his lips, speaking the most magical and delicious word he knew. \n\nTheir movement finally stilled as their breathing slowed. Catrine felt comforted by the weight of his body still pressed tightly against her as he balanced above her.\n\n\"Do you think we're going to go crashing through the floor?\" She said with a smile as the bed gave another loud protest. \n\nLaughing, Ryan kissed her lashes, her sweaty forehead, and the tip of her nose, still enjoying the luxury of being intertwined with her.\n\nEventually, he withdrew from her, wrapping them both tightly in the covers and telling her stories until they both drifted off to sleep.\n\n\u2014\u2014\n\nA few hours later, Catrine awoke not from a nightmare but from the suspicion that she was alone in bed. Over the past few days, she had grown accustomed to the comfort of having him beside her. Her subconscious seemed to notice immediately when he was not there. \n\nWrapping herself in a blanket, she slipped from the bed and walked through the house looking for him. He was standing on the back porch, staring across the lake as the first light of morning unveiled the splendor of their surroundings. \n\nShe walked towards him, not wanting to interrupt his thoughts. But as soon as he realized she was close, he reached over and pulled her in front of him, wrapping the blanket tighter around her arms to stave off the chilly morning air, keeping her tightly in his embrace. Leaning forward, he kissed the still tender flesh on the shoulder which bore her new tattoo. \n\nThey stood together in silence as they watched the sun appear on the horizon. A sense of their powerful connection amplifying the beauty of the new day.\n\nPressing his lips to her ear, he whispered conspiratorially, \n\n\"You are my everything. You are only mine.\"\n\n\u2014\u2014\n\nOne Year Later\n\nCatrine looked thoughtfully out the window of the small office that served as the home base for Ryan's management team. The first signs of fall reminding her that nearly a year had passed since they first arrived to these mountains. \n\nMost days she didn't even think about her former life. In fact, she found that most of the time she was too busy to think about much more than the daunting project that they had embarked on. Well, she admitted to herself, that and her deep love for Ryan.\n\nHe had set out to build a dam, harnessing the power of the river to create a new major source of electricity for the Capital. But, as he had explained to her excitedly as they sat in front of the cabin's fireplace each night, he was determined to do it in a way that would have almost no interruption to the surrounding ecosystem. A practical engineering solution where technology and ecology could coexist. \n\nShortly after they had settled into the cabin, Ryan was joined by the members of his support team, constructing their own make-shift town at the base of the valley. They set out together on long hikes to survey the area and construct plans. Huge convoys had made their way south carrying the first set of supplies and paving the way for them to begin work. \n\nNot wanting to be isolated in the cabin, Catrine joined Ryan at the worksite and quickly found ways to make herself useful. While Ryan focused on the technical aspects of the project, Catrine saw to the well being of his team. \n\nShe made sure that new staff always felt welcomed to their little hideaway. That the food and supply orders were always coordinated and shipped on time. She was quick to give a smile and the first to laugh at a new joke. She made friends easily and was adored by the whole community. \n\nNobody else knew anything about her background and neither she nor Ryan made any mention of it. It was exactly the kind of fresh start she needed. The fresh air, the open land, and new beginning giving her the freedom to move, think, explore, and just be. \n\nRyan watched her blossom. Each day, he felt like she grew more accustomed to their life together. And, each day, he fell more deeply in love with her.\n\nHe hadn't realized how much she had missed out on during the war until she asked him to be her teacher. From building a fire to using the computer to his personal favorite - teaching her how to drive their car - he loved her thrilled expression was he was able to expand her horizons.\n\nEach evening, they would return to their cabin and curl up together on the couch, basking in their simple happiness. Even on the darkest winter days, they would cocoon themselves under layers of heavy blankets, tucked away in their creaky bed, making love until dawn.\n\nWhile both thought about the Six Kings from time to time, the world of the Capital was a world away from them. Even the major news headlines seemed to reach them only peripherally, mentioned in passing by a convoy driver or discussed briefly over a morning cup of coffee before everyone set out to work.\n\nSo, it surprised everyone when Ryan received an emergency call on the satellite phone with news from the Capital. Following his conversation, he assembled his team to share the news. He spoke to the whole group, but his eyes never left Catrine's as he relayed the message.\n\n\"Over the past few days, there has been a significant coup d'etat in the Capital. While no one yet knows the final outcome of the swift change of power, it's clear that where there were once six Kings, there is now only one.\"\n\nA chorus of voices all began speaking at once. Ryan raised his hand, waiting for everyone to settle down. \n\n\"As of now, there have been no changes to our instructions. I believe we should continue as planned until, or unless, we hear otherwise. I'll let you know as I receive additional information from headquarters.\"\n\nAfter fielding a few more questions for which he had no answers, Ryan quickly dismissed everyone for the evening. Waiting until the door closed behind the last person, he rushed over and took Catrine in his arms.\n\n\"What will this mean?\" Catrine said against Ryan's chest. He could feel her shaking in his arms.\n\n\"Nothing.\" He answered reassuringly. \"No matter which king still sits his throne, a dam project in the southern territories is not likely going to make the top of his priority list any time soon.\" \n\nHe kissed her forehead and held out his hand to hers. \n\n\"Come.\" He said with a smile, \"You need to drive me home.\"\n\n\u2014 \u2014\n\nFor three more weeks the new government had remained shrouded in secrecy and the remaining king had not yet revealed himself to the people. Rumors and theories ran rampant about what exactly had happened and Ryan couldn't help but feel a nagging anxiety about all of it.\n\nStill, their work progressed as planned and everyone quickly settled back into their usual routines. Ryan's boss had received reassurances that their project would continue as planned. Before long, the expansiveness of their work and the isolation of their community pushed the political news out of their minds.\n\nThen, late one afternoon, Catrine spotted a trio of cars making their way down into the valley. Each was an identical SUV with tinted windows and an imposing frame. She knew immediately that its passengers were arriving on some form of official business which would undoubtedly interrupt their peaceful existence.\n\nRyan and most of his team were out at the dam site and she wasn't expecting him home until after dark. She smoothed her hair and straightened her clothes. Then, with all the confidence she could muster, she walked down the driveway to prepare to greet the guests.\n\nShe watched a group of men as they exited the cars, but remained rooted to her place. She didn't recognize anyone as they began walking towards her. But then, making eye contact with one of them, she realized she was staring at King Hall himself. \n\n\"Your Grace,\" she began, the surprise evident in her tone. Her initial instinct was to sink to her knees before him. But, she realized that as the only person around, she needed to play the role of official greeter and not rely on the remnants of her training. She gave him a low bow before turning to greet the others who had gathered. \n\n\"Welcome to Baker Lake,\" she said cordially. \"I'm so sorry to say that we weren't expecting you. I'm sure you tried to reach us, but communications up here are very sporadic.\" \n\n\"I'm afraid that the team is up at the site this afternoon,\" she trailed off, as though apologizing for the paltry welcome party she made. \"But I'd be happy to show you up to the cabin and you may wait there for Ry...Master Ryan...to return.\" She bit her lip realizing that she had already managed to slip up within the first moments of her introduction.\n\nHall stepped forward to address her directly. \"Thank you, Catrine,\" he began. Her stomach doing knots as she realized that he had not only recognized her but knew her by name. \"If it's not too much of a bother, would you mind showing us around a bit? That way, we'll already have a sense of the place by the time Mr. Pierce arrives.\"",
        "\"Of course,\" she replied, hesitating at first, but quickly getting her bearings. She proceeded to lead them on a detailed tour of their home base, going so far as to unroll huge rolls of paper across the large drafting tables, speaking in detail about the structural and architectural planning underway. \n\nThe more she spoke, the more comfortable Catrine became in the presence of the officials. She not only had a solid understanding of the work, she believed in Ryan's vision and had confidence that he would see it through to completion.\n\nBy the time she finished fielding their questions, the sun had set and Catrine was sure the others would return soon. As though he had read her mind, Hall turned to her and requested that she accompany him to their house, leaving the others at the office to attend to other business.\n\nAs the driver took them up the winding road Catrine sat in silence next to the King. She was certain he was appraising her, just as he had while she was talking with the others about the dam operations; his eyes watchful but his expression revealing nothing.\n\n\"You are very knowledgeable about activities here. It's a bit unusual to see that in a pleasure slave.\" \n\nCatrine remained silent, not having been asked a direct question. \n\n\"You look well too, rosy cheeked, like you just stepped off a ski hill!\" He smiled at his own little joke. \n\n\"I'd venture to say that this new life agrees with you.\"\n\nThen, feeling as though she were being interrogated, she felt his eyes regarding her critically. \"Would you agree with that assessment?\"\n\nCatrine cleared her throat and practically sat on her hands so that he would not see the way she trembled. \"Yes, my king,\" she answered. \n\nWhen she glanced at him and realized he was waiting for her to say more, she continued, \"Master Ryan is a kind master. He has seen to all of my needs here...\" She paused, not exactly sure how to explain her new life to someone who carried the power make it vanish in a matter of seconds. \n\n\"But...\" the king prompted her, hearing her hesitation. \n\nCatrine took a deep breath. This King was both astute and patient. \n\n\"But, there is so much work to be done here. And, there are very few people to do it. Master Ryan has permitted me to do much more than what would be permitted of a pleasure slave in the Capital and I have accepted and also enjoyed it. I believe that my part in the work will be essential to our chances of succeeding on the project.\"\n\n\"I see,\" he answered giving Catrine no clue as to how he felt about her unique responsibilities. \"And, what of the pleasurable aspect of being a pleasure slave? Do you believe that you have served Mr. Pierce well in this regard?\"\n\nCatrine couldn't hold back the blush that bloomed across her face. \"Yes.\" She said with surprising confidence and even a bit of a smile, \"I believe I have.\"\n\n\"Good girl.\" He answered with a small laugh, patting her once on the knee.\n\n\u2014 \u2014 \n\nRyan's team crested the hill looking down the valley towards their little home base and noticed the three unusual cars parked near the office. As soon as Ryan saw them there, he took off running at full speed down the trail not stopping until he had reached the small cluster of buildings far below. \n\nHe didn't pause as he burst into the office, surprising all four of the capital officials who were waiting there, looking bored. \n\n\"Catrine?\" He gasped breathlessly as they all regarded him strangely.\n\n\"Mr. Pierce?\" One of the officials asked and Ryan nodded at him, still struggling for breath. \n\n\"She accompanied His Majesty, King Hall to your house just a few minutes ago.\" Ryan turned on his heel and tore from the doorway. He jumped into his car, barreling up the mountain to their cabin. \n\nAs he pulled into the driveway, he spotted the King's guards standing in front of his house. His adrenaline fueled mind struggling with the incongruity of the King's presence in his home, fearing for what all this could possibly mean. Why was he here? What could he want with her?Taking a moment to compose himself, Ryan opened the front door. \n\nAs he entered the room, Catrine sank to her knees, placing her hands in her lap and lowering her eyes, graceful as ever. Ryan hadn't seen this gesture from her in more than a year and the sudden act of her submission was both devastating and breathtaking to him. He swallowed hard, feeling his heart sink as the strange turn of events moved further and further beyond his control. \n\nKing Hall rose from the couch to greet him, carrying a drink in his hand that Catrine must have prepared for him just minutes before. \n\n\"Hello Mr. Pierce. Thank you for welcoming me into your home.\" He said, as he reached out to shake Ryan's hand. \"Catrine has been giving me a thorough introduction to your work here. You have quite an operation underway. I have to say that I am impressed.\"\n\nStill evaluating the direction of the conversation Ryan replied, \"Thank you Sir. But, if you don't mind me being direct, I am very surprised by your visit. I could have made arrangements to come north or you could have sent a member of your cabinet to evaluate our progress.\"\n\n\"Indeed,\" Hall replied, gesturing to the couch for them to be seated. \n\n\"There are other reasons for my visit today.\" He continued as he looked towards Catrine. Ryan stiffened as he followed Hall's eyes towards the beautiful woman kneeling on the floor, anxious to understand his intention.\n\n\"But, before I begin, why don't you ask Catrine to join us. I get the sense that she spends far less time on her knees these days than she did in the Capital. And, I'm sure you agree that kneeling in rubber rain boots cannot be particularly comfortable.\"\n\nThe King's words and a sort of glimmer in his eyes were Ryan's first clue that the conversation would be nothing like he had feared, although he still had no idea what he was there to discuss. \n\nMaking eye contact with Catrine, Ryan gave her a reassuring nod, patting the spot on the sofa next to him where she quickly joined him. He held her hand in his own as they both turned back to Hall, waiting for him to continue. \n\n\"I'm certain, even in this isolated corner of the realm, you've heard that there have been some significant changes recently to the structure of our government. But, what I am sure you didn't know is that you two were really what inspired the change in the first place.\"\n\nThey were dumbfounded that they could have played any role at all in the sweeping change of power that Hall had orchestrated over the past several weeks. When they failed to make any comment, he had the grace to continue.\n\n\"Now that things have settled down a bit, I felt like it was time to pay you both a visit. I feel as though I owe you something of a debt. And, I believe firmly in repaying my debts.\"\n\n\"I see how this could be surprising to you, so let me explain.\"\n\nRyan, when we were together at the conference, I told you that I once had someone in my life who reminded me of Catrine. Her name was Madeline. She was so beautiful, one of the smartest people I've ever known, and so much more to me than a slave. She was my partner and my soul mate and I loved her very much.\" Hall appeared wistful as he spoke of her.\n\n\"It was Arick who betrayed us. Undermining me. Stealing her away. Tormenting her until her spirit was broken, until there was nothing left of her.\" He paused as a sad sigh escaped from his heavy heart. \"Eventually, she took her own life.\" \n\nAnger sparked in his eyes, chasing away the sadness that had appeared just moments before. \"He was more powerful than me in those days and, as you learned, when Arick saw something he wanted, well...\"\n\nHe didn't need to tell them any more. They both understood his meaning.\n\n\"I could never forget and I certainly never forgave him, despite all of his ridiculous gestures as a sort of partnership formed between us over the next several years.\" He gazed at the fire as it showed him bits of his past. \n\nTurning back to them, he continued his story. \"But, it was watching you, Mr. Pierce, and the way that you interacted with Catrine at our meeting, that reminded me of the person that I had been when I had Madeline.\"\n\n\"When I realized that Arick had noticed you too...The way he fixated on Catrine. The way he kept trying to find ways to get his own hands on her....Well, I wasn't going to let him get away with that a second time.\"\n\n\"He had been trying to undermine our agreement with you since the day you left the meeting, proposing increasingly ridiculous theories about your work here. Lobbying for us to void the contract entirely. He became obsessed with it. With you both.\"\n\nRyan squeezed Catrine's hands more tightly as they grappled with the King's tale, realizing how vulnerable they had still been to Arick's scheming.\n\nWith a bit of contempt in his voice, he continued. \"Seeing to his death was quite satisfying for me.\"\n\n\"And, once that was done, I got to thinking. Why have six kings when just one will do? Arick was cruel, but at least he had been a calculating tactician. The rest? A bunch of bureaucratic idiots - overindulged, oversexed. Lost to the frivolity of their pursuits.\"\n\n\"No.\" He continued, his monologue nearly finished. \"I was tired of ruling by committee. So, I ushered in the beginning of my lone reign.\"\n\nStill astounded by the first hand telling of Hall's militant takeover, neither Ryan nor Catrine made any move to continue the conversation. \n\n\"So then,\" he said crisply, as though he understood that he still had yet to reveal the punchline of his tale. \"Here we are.\" \n\nHe reached into the pocket of his jacket and pulled out two small packets. Opening the first, he turned to Ryan. \"I've had the terms of our professional arrangement rewritten, leaving you as the foreman, assuming you're interested. But, how and when you complete the project will be up to you to determine and report back to the Capital. I've also authorized more resources for you, should you need them, to keep the project on schedule. I think that will help keep things moving.\"\n\nHe expediently handed the documents to Ryan who looked at them with surprise.\n\n\"And, of course, Catrine,\" He said and her eyes opened wide, staring back at him, the surreal circumstances still making her wary. \"There is the issue of your paperwork. You are technically property of the Capital, leased to Ryan's custody as a condition of our contract with him. Had he completed the work to our specifications, you would have been given to him permanently as a thank you for his service. As you know, it was Arick who expedited the purchase transaction and guarantee.\"\n\n\"It would be easy enough for me to sign those papers over to Ryan today.\" He paused, looking from Catrine to Ryan and back again.\n\nThinking this would be his action, Catrine's her heart leapt at the possibility of having Ryan as her permanent Master. Even with all of the changes over the past year, she still hadn't allowed herself to hope for such long term security.\n\nBut, as she watched Hall, she realized nervously that he had something else in mind for her. She looked at him intently as he went on.\n\n\"I'm not really one for slavery anymore. It had its place during the war, but I'm not that interested in its continued place in my kingdom. I know that will be unpopular with some sectors of our population, but I'm confident that they'll get over it - or move beyond it - eventually\"\n\n\"So, the choice must be yours, Catrine. The debt I pay to you, and maybe in some way to my own Madeline, is your freedom.\" \n\nHe reached forward and held something out to her. She thought at first it was her ownership papers, but as she looked at them more closely, she realized that it was a passport.\n\nCatrine's heart beat so loudly that she was having a hard time hearing Hall's words. She was frozen in place, unable to fully grasp the significance of his actions. Discreetly, Ryan reached out to take the passport for Catrine, placing it gently in her lap and closing her hands around it. She clenched it tight, a tear spilling from her eye. She struggled to make sense of her feelings. It was just too much, too fast. She knew she should feel gratitude. But, the change made her suddenly anxious and fearful of the unknown.\n\nKnowing that the two of them had much to consider and discuss, Hall stood and made his way towards the door. Ryan followed him there, leaving Catrine to contemplate the turn of events in private. \n\nShaking his hand again, Ryan expressed his gratitude to the King. \n\nIn return, Hall replied, \"It is mutual. I'll look forward to seeing you from time to time in the Capital. Now, if you'll excuse me, I have a helicopter to catch and a kingdom to lead.\" And, as quickly as he appeared, Hall and his convoy drove away from the valley and vanished into the night sky. __ __\n\nRyan regarded Catrine still frozen in place. He walked back to where she sat, sinking on his knees in front of her. He reached up and tucked her hair behind her ears, feeling the reassuring warmth of her skin against his palm.\n\nHe pushed back his overwhelming fear that if she were truly free, she was free to leave. The practical matter of her slave status had made their life together a foregone conclusion. With that barrier suddenly lifted, he was unsure of the implications. He knew it was selfish to keep her, to insist she stay. But couldn't fathom the possibility of his life without her; a sudden emptiness threatening to swallow him whole.\n\n\"You're free.\" He said to her quietly.\n\n\"Yes.\" She whispered back, hardly fathoming the concept.\n\nRyan struggled to breathe as though there wasn't enough air in the room. Ever the practical thinker, he asked, \"Where do you want to go? What do you need?\" \u2028\"I don't know.\" She said back, her voice teetering with anxiety. \n\nHe reached up and cupped her cheek, tracing her lips with his fingertips. The gesture was second nature to him, a way of saying that everything would be okay. All he wanted to do was kiss away her tears and alleviate her fears. \n\nBut, with each passing second, he became more certain that she would tell him that she wished to go. That she too would vanish into the night. He wasn't sure he could physically withstand hearing such devastating words. \n\n\"Ryan,\" she began, looking deeply into his eyes as he braced himself for the loss.\n\nNot finding the right words, she could only say, \"I don't know. This is so confusing.\" \n\n\"I know,\" he answered back. \"I can help you. We can figure it out together. Make plans for you.\" \n\nShe took his hands into her own and looked up at him. She knew he was trying to be helpful, but his words weren't really helping her. She needed a way to put words to her feelings.\n\n\"Ryan,\" she started again, squeezing his hands tighter as tried to form her thoughts.\n\n\"I was already free. You freed me the day that you met me.\"\n\nThen, collapsing into him and finally allowing for the release of the tears in her eyes, she cried against his chest, \"Please don't make me go. I don't want to go away from you.\"\n\nHe wrapped his arms tightly around her, kissing her hair and holding her tightly. \"Make you go?\" he answered incredulously, his own tears flowing freely. \"I don't think I could even let you go.\"\n\n\"Catrine, I love you with all my heart. You are everything. You are mine.\"\n\nThey embraced each other for a long time, coming to grips with their new reality and the profound depth of their feelings for one another.\n\nFinally, Ryan spoke against her hair. \"You know, there is another way that I can claim you, now that you're free...But you would have to claim me back.\"\n\nThen, holding her hands in his, he whispered something into her ear.\n\n\"Yes.\" She answered with a brilliant smile, \"I most certainly will.\"\n\n*******\n\nAuthors note: \n\nThanks so much for reading along and sharing in this story! It was really fun to experience how it evolved as I wrote it. I appreciated all of the support from readers, especially since this was my first attempt at writing!\n\nThe comments and feedback are so motivating and helpful. Thanks for taking the time to leave one!"
    ],
    "authorname": "cleverfox",
    "tags": [
        "submission",
        "slave",
        "master",
        "claimed",
        "branded",
        "reward"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/meeting-of-the-six-kings-ch-06"
}