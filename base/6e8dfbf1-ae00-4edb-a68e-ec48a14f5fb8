{
    "title": "Coming Home: Davis Brothers Ch. 05",
    "pages": [
        "\"Baby, can you help me to the bathroom?\" Ben asked, his voice sounding urgent.\n\nBenji lifted his head from Ben's chest and opened his eyes halfway. \"Hm?\"\n\nBen couldn't help but smile. His boy's hair was all mussed up and he had a little string of drool dripping from his mouth. So stinking cute.\n\n\"I fucking love you, baby,\" Ben said with a chuckle. \"And I'd love to lounge around with you a while longer, but I'm about to piss the bed.\"\n\n\"Oh!\" Benji jumped out of bed, nearly tripping over the blankets. He untangled himself and ran over to the other side. He helped Ben out of bed, then followed him to the bathroom.\n\nBen stood in front of the toilet and looked down at Benji with a raised brow, then started to chuckle. Benji was staring down at Ben's huge piss-hard-on, mouth agape, as if he'd never seen a man's erect penis before.\n\nBenji swallowed the mouthful of drool and cleared his throat. \"You can't pee with it like that.\"\n\nNo shit. \"Give it a thump,\" Ben said. He closed his eyes and concentrated on making it go down enough to piss. That was pretty hard to do with his little man standing next to him, naked with his own hard-on jutting out from his crotch.\n\nBenji flicked the head of Ben's cock with his finger and he watched it slowly start to deflate.\n\n\"Okay,\" Ben croaked.\n\nBenji wrapped his small hand around the girthy shaft and skinned it back and aimed it down towards the bowl.\n\nBen noted the way Benji stared at him piss with fascination. It wasn't the first time. His boy seemed to have a thing for watching him take a piss. He wondered for a second if Benji wanted to try water sports. It was something he never really thought about and it wasn't something that turned him on, but if Benji wanted to try it, he'd give it a shot.\n\n\"You like watching me piss, don't you?\" Ben whispered.\n\nBenji shrugged and looked up at Ben, then let his eyes fall back down to Ben's cock, embarrassed at getting caught gawking but not able to look away. \"I like...\" Benji swallowed nervously, his voice barely above a whisper. He took a breath and looked back up at Ben's face. \"I like to watch you pee, but I don't want you to, you know, pee on me, or whatever...\"\n\nBen smiled. It was a little perverse, but he liked to see Benji squirm uncomfortably sometimes. He wanted Benji to be open and comfortable with him, whether it was talking about sex or anything else. \"Good to know.\"\n\nOnce Ben finished, Benji gave it a good shake, then another for good measure. One more time wouldn't hurt...\n\n\"More than a couple of times means you're playing with it,\" Ben snickered.\n\nBenji jerked his hand away and blushed. \"Come on, let's take a shower, you perv.\"\n\n\"Oh, I'm the perv? You're the one jacking me off when you're supposed to be helping me take a piss.\"\n\nBenji's mouth fell open. \"I was not! I--\"\n\nBen laughed and leaned down and planted a kiss on his baby's lips, interrupting his pointless denial.\n\n***\n\nBrandon was having the most amazing wet dream he could ever remember. A head covered in a mop of dark hair bobbed up and down in his lap, sucking and slurping on his cock, trying so hard to take as much as he could get into his mouth and into his throat. So greedy....\n\nWith a long, deep groan, Brandon opened his eyes and saw his dream had come true. Lonnie was sucking him off. His dick was so hard as the flared head batted the back of his boy's throat with every downward movement. Lonnie's eyes were closed and he looked like he was in heaven. His cheeks were hollowed in and his lips were red and swollen, closed tightly around Brandon's girth.\n\n\"Mmm... Good mornin', cupcake.\"\n\nLonnie pulled off Brandon's dick with a pop. \"Mmm, sure is. You have the most amazing dick. So big and hard.\"\n\nHe slicked his hand back and forth, covering and uncovering the head with the foreskin. He climbed up and straddled Brandon's lap, trapping the large shaft between his legs.\n\n\"Glad you like it.\"\n\n\"I love it.\"\n\n\"I'm getting to love that mouth of yours.\"\n\nBrandon reached out and gripped Lonnie's hips. He held him tight as he pushed up, grinding his girth hard against Lonnie's taint. His boy's face was flushed. His eyes fluttered shut and his lips parted. His dusky prick stood upright, wet and purple, swollen with need. Brandon wondered if he could make Lonnie come again with just his cock.\n\n\"I wanna fuck you,\" Brandon husked. \"Can I fuck you, baby?\"\n\n\"Oh my god, yes,\" Lonnie quivered. \"Do you have any lube?\"\n\nBrandon held Lonnie steady as he leaned over and jerked open the small table drawer. He rifled around and pulled out a small clear bottle. \"Is this okay?\"\n\n\"Yeah, that's perfect.\"\n\nBrandon glanced back at the open drawer, spotting a handful of foil packets. \"I have rubbers. They might be expired.\" Brandon winced. Expired condoms did not exactly help with the image of the stud he tried to portray.\n\nA blush crept up Lonnie's neck and cheeks. \"I didn't mean to get carried away like that, before. I'm not like that normally, I swear.\"\n\n\"I got tested. I passed. No, not passed, it was negative. You know what I mean. I can show you the test.\"\n\n\"You're the only one...\" Lonnie's voice trailed off and he looked down at Brandon's belly, tracing a finger around the rim of his belly button, suddenly fascinated with the hair growing around it.\n\nBrandon reached up and tipped Lonnie's chin up. \"The only one what?\"\n\n\"The only one I ever let do that... without a condom. If we're gonna be monogamous, we don't have to use them. But only if we're monogamous, Brandon. Swear it, Brandon. You won't have sex with anyone else ever.\"\n\n\"I swear, Lonnie. I would never cheat on you. I take commitments very seriously. But I'd wear one if you have doubts.\"\n\nCommitments. The word nearly melted Lonnie into a sappy puddle. \"I trust you, Brandon. I...\" Lonnie licked his lips nervously, and stared directly into Brandon's green eyes. \"I loved it when you came inside me.\"\n\n\"God damn,\" Brandon growled. The fact that Brandon was the only man to have ever shot off inside Lonnie was fucking hot. He grabbed Lonnie by the waist and lifted him slightly, breaking contact with his aching cock. \"You're gonna make me fucking shoot my wad if you keep talking like that.\"\n\nLonnie gave Brandon an impish little smile. He loved that Brandon was no longer denying his attraction. And he loved that he could get Brandon so heated. And when Brandon was turned on, Lonnie was sure to have a very good time.\n\n\"Do I turn you on, Brandon?\" he purred as he stroked his fingers through the hair on Brandon's chest and stomach.\n\n\"God, you don't even know, cupcake, how hard it was to fight my urges. You make me want like I never wanted anyone before.\"\n\n\"I don't want you to fight your urges, Brandon. If you want me, then take me. I'm yours whenever you want, babe.\"\n\nBrandon's eyes darkened as he looked at Lonnie lustfully. \"Let me get you ready then, 'cause I'm gonna fuck you into this god damned mattress right fucking now.\"\n\nWith a deep growl, he held tight onto Lonnie and rolled them over so that Lonnie was flat on his back, pinned beneath his bulk.\n\nBrandon looked down Lonnie's body, laid out, ready and willing, all for him. Only for him.\n\nLonnie's body was smooth as silk and virtually hairless. He had wisps of silky black hair under his arms and around the base of his cock. Brandon ran one of his hands down Lonnie's torso, loving the way his soft skin felt under the rough pads of his thick fingers. And he loved how Lonnie's breathing went ragged and the way he trembled as Brandon touched him.\n\nHis boy's tiny brown nipples were stiff and pointy. Brandon leaned down and flicked his tongue across one. He didn't expect the reaction he got from Lonnie. Lonnie gasped and pushed his chest up, pulling Brandon's head down with his hand, begging for more contact. As Brandon assaulted Lonnie's nip with his tongue and lips, he realized he shouldn't have been surprised by Lonnie's response. Wherever he touched Lonnie, it seemed to light the boy up like a Christmas tree.\n\nAfter working over each nipple until Lonnie was begging, Brandon moved down. He kissed Lonnie's innie belly button, then kissed a trail lower. Lonnie's stomach rose and fell, tightening and loosening, as he struggled to maintain a steady breath. Brandon paused at the clover tattoo on his hip, planting a kiss on it, then swiping his tongue across it, causing Lonnie to shudder. \"Mm. Love your cute little tat, cupcake.\"\n\nHe moved between his legs, spreading them wide apart. He spread his boy's cheeks with his hands and brushed his thumb over the tight opening hidden there in the hairless crack. Upon hearing Lonnie's breath hitch, Brandon couldn't help the smug grin that spread across his face.\n\nHe spit onto his thumb and ran the saliva-soaked pad over the little brown pucker.\n\nLonnie thrust his hips. \"Please,\" he begged.\n\nBrandon moved down to get a closer look. He lifted Lonnie's ball sack away and leaned in and sniffed. It was a combined musky and soapy clean smell, not at all dirty. The puckered hole winked at him, beckoning him to come closer.\n\nBack in the day, Brandon was a champ at eating pussy. He had brought many a girl to climax with his skilled mouth and tongue. Would this be so different? Would Lonnie like it? Before he could talk himself out of it, he leaned in and swiped his tongue across the flesh.\n\nLonnie cried out, arching his back up. \"Oh, god, Daddy, please! No one-- ever-- Oh!\"\n\nBrandon growled, spurred on by Lonnie's lusty words and admission that Brandon was in virgin territory. He shoved his face into Lonnie's crack and began to feast. Brandon was noisy as he rimmed his boy, grunting and groaning, slurping and sucking. His tongue circled the pucker, then lapped at it, slow then fast. He sucked hard, then soft. He rubbed his face up and down, back and forth, scorching Lonnie's sensitive skin with his beard whiskers.\n\n\"Fuck, you taste good,\" Brandon growled before going back to work.\n\nLonnie thought he had died and gone to heaven. No one had ever eaten his ass before. He gripped Brandon's head in both of his hands. He writhed and bucked against Brandon's mouth and that hot, thrusting, probing tongue. He moaned and groaned, crying out and begging for more.\n\nBrandon wet a finger and pushed it into the relaxed sphincter. After Brandon's oral assault, the finger slid right in. He finger banged Lonnie while he licked non-stop around the edges. He buried his nose in Lonnie's balls and took a big whiff, then licked and sucked each ball, one at a time. Lonnie's shaft was purple and throbbing. Pre-come dripped down the shaft and pooled on Lonnie's stomach. Brandon swiped his tongue along the bottom, tasting the clear fluid.\n\n\"Oh, god,\" Lonnie moaned as he tried to squirm away from Brandon. He didn't want it to be over too quick and he was about to come undone.\n\n\"Mm-mmm,\" Brandon grunted. \"Not going anywhere, boy.\" He grabbed Lonnie and held him down with a hand splayed across his belly. His other hand was busy pumping a finger in and out of Lonnie's ass. He curled the finger up and jabbed at Lonnie's g-spot while he laved his tongue along Lonnie's cock.\n\nLonnie screamed as his body began to shake uncontrollably. \"Daddy, I'm coming!\"\n\nBrandon growled triumphantly and licked his boy's dick again. It jerked up against his tongue and began spraying, covering his stomach over and over with spurts of thick cream. Lonnie's body continued to shudder as his head slowly rolled back and forth. \"Oh god, oh god, oh god...\"\n\nBrandon moved up Lonnie's limp body and grabbed the lube. He poured it onto his fingers and smeared it up Lonnie's crack, then slicked his cock. Once he was wet and ready, Brandon lined up the head of his cock with Lonnie's entrance and pushed forward.\n\nAs Brandon breached him, Lonnie's eyes snapped open and he locked his gaze onto Brandon. He pulled his knees back and locked them around Brandon's hips, giving Brandon deeper access to his body. He brought his hands to Brandon's chest. His fingers raked through the thick hair before sliding down to his waist. Pressing his fingers into his man's soft love handles, he urged him to move forward.\n\nBrandon moved nice and slow, paying close attention to Lonnie's facial expressions, making sure that he wasn't hurting him. Once he was fully buried inside, he let out the breath he didn't know he was holding. The big man's eyes rolled back in his head and he let out a deep, throaty groan.\n\n\"Feels good?\" Lonnie whispered as he watched the open-mouthed expression on Brandon's face.\n\nBrandon nodded. \"Fuck. 'Good' doesn't cover it. You are fucking outstanding.\"\n\nIt was better, tighter than anything Brandon had felt before. He knew that he wouldn't last long. He was already starting to feel the build up. He just hoped that he could make it feel good for Lonnie too. It was really important to him that Lonnie enjoy what they were doing. He leaned forward and let his brawny body cover Lonnie's, his weight pushing him into the mattress. He slid his hands under Lonnie's armpits, under his back, and locked them around his shoulders, holding him tight. He started to move his hips, nice and slow, in and out.\n\n\"This okay?\" Brandon asked, looking down into Lonnie's gorgeous brown eyes.\n\nLonnie nodded, unable to speak. If he opened his mouth, he might embarrass himself. He had expected Brandon to pound the fuck out of him, but Brandon wasn't fucking him. He was making love to him.\n\nBrandon changed up his angle and rotated his hips, trying to find the spot that made Lonnie go crazy. When Lonnie gasped and shuddered underneath him, Brandon knew that he had found it.\n\n\"Brandon,\" Lonnie moaned. His hands tightened around Brandon's back and his ankles dug into his man's ass.\n\nUsing a slow and steady rhythm, he rubbed his cock along Lonnie's g-spot with every slide. He fought the urge to pound into Lonnie. Lonnie was clearly enjoying what Brandon was doing, judging from the soft moans and whimpers spilling from his mouth. Each little noise he made along with excruciatingly slow thrusts into his velvety-soft tight heat was bringing Brandon closer and closer, but he wanted Lonnie to come with him.\n\n\"You're so beautiful,\" Brandon whispered. \"You're my cupcake, my baby. You belong to me.\"\n\nBrandon kissed Lonnie, their tongues tangling up in each other. He started to move his hips a little faster, his thrusts hard and steady. The rickety bed began to creak underneath them as Brandon pumped faster. Brandon could feel Lonnie's body tensing up. He could feel Lonnie's dick trapped between their bodies, poking into and rubbing against his furry belly. His little man buried his face into Brandon's neck, his nose pressed into Brandon's beard, as he let out a whimper. His hips pushed back against Brandon's thrusts.\n\nBrandon sucked hard on Lonnie's neck, giving him whisker burn while he drew a deep crimson bruise up to the surface. Lonnie's body started to shake while his whimpers came faster and raised in pitch and Brandon knew that he was on the edge, so close. Just a few more thrusts against his prostate, a little more friction against his boy's cock...\n\n\"Brandon,\" Lonnie cried out into his neck. \"You're gonna make me come. Please. Make me come. Oh god, I love you...\"\n\nLonnie's begging and his declaration took the last of Brandon's control. He thrust hard into his boy, once, twice across his g-spot. On the third time, Lonnie cried out and clamped his muscles around Brandon's cock. Brandon pushed forward and buried his cock as far as he could into Lonnie. As Lonnie's warm cream pulsed between their bodies, Brandon lost control.\n\n\"I'm gonna fucking shoot!\" he grunted into Lonnie's ear.\n\nShouting a series of grunts and obscenities, he started to shoot his load, sending huge bursts of hot spunk deep into Lonnie's welcoming body. He pulsed so much come into Lonnie's ass that it started to overflow around his cock, running down Lonnie's ass crack and pooling on the sheets. As Brandon worked through his orgasm, his thrusts slowed down, until he was finally still.\n\nBrandon laid on top of Lonnie, trying to catch his breath. He was worried about crushing his boy, but Lonnie held Brandon tight to his body, not allowing Brandon to pull away.\n\nHearing Lonnie's softly muttered words, \"mine, mine, mine,\" cradled Brandon's restless spirit. His boy claimed him.\n\n\"No one, no one ever, has made me feel like you do,\" Lonnie whispered.\n\nThough Brandon didn't reply back to him, Lonnie felt his arms tighten around him.\n\nLonnie held his man in his arms, loving the feel of his wide, heavy body on top of him, his fat cock still buried to the hilt. Brandon's head was leaning against his neck. Lonnie felt the warm panting breath and the light kisses and tickling beard along his neck and collarbone. Brandon might never say it out loud, but Lonnie now knew without a doubt.\n\nBrandon Davis loved him.\n\n***\n\n\"Are you sure about this, Brandon?\" Lonnie asked as he nervously chewed at his thumbnail.\n\nBrandon pulled Lonnie's hand away from his mouth. \"Yeah. I told you I don't like you working down at that place at night. Besides, you already quit the taco stand, so it's too late...\"\n\n\"It's not that bad,\" Lonnie said. \"It's a pretty nice area, Brandon.\"\n\nHe opened the truck door, stepped down onto the running board and hopped onto the ground in between Brandon's truck and the identical F-250 4x4 parked next to it. That truck had a magnetic placard on the door advertising the business.\n\nHe straightened the collar of his pink polo shirt and smoothed down his navy blue dockers. He combed his fingers in his hair, then blew into his cupped hand to check his breath. He wanted to look perfect for his first day on the job. After letting out a deep breath, he followed Brandon into the office. As they stepped through the door, a chime dinged.\n\nThe Davis and Adams Remodeling office was housed in a small space at the end of an industrial complex, next to a bug exterminating company. The office had a nice reception desk built behind a semicircular counter. A row of chairs sat along the opposite wall for guests to use while waiting, though from what Brandon said, there were very few walk-ins or visitors to the office. In addition to a tiny restroom, there were also two small offices and a big storage room.\n\n\"Hey, Walker?\" Brandon called out.\n\nLonnie watched a man step out from one of the offices. The tall man took a sip from an over-sized coffee mug and walked up to Brandon and shook his hand. \"Hey, man. Mornin'.\" He glanced over at Lonnie but didn't say anything.\n\n\"Morning. This is Lonnie O'Reilly,\" Brandon said as he put his hand on Lonnie's back and urged him to step forward.\n\nWalker tipped his head. \"Walker Adams. So you're the new guy?\" he asked. He looked Lonnie up and down, his face neutral. \"O'Reilly, did you say?\"\n\n\"Yeah,\" Brandon answered for him. \"He's gonna answer phones and emails. Help with the schedules and quotes. Like we talked about.\"\n\n\"Right. Can I talk to you in my office a minute before we head out?\"\n\n\"Sure. Let me get Lonnie set up and I'll be right there.\"\n\nBrandon had Lonnie sit at the reception desk. The desk had a big flat-panel monitor, a wireless keyboard and mouse set, a multi-line phone, as well as a standard array of office supplies such as tape dispenser and stapler. The computer was tucked out of the way beneath the desk. Against the wall behind the desk, a big laser print and fax machine sat on a wooden console. Cubby holes underneath held various reams of paper and all sorts of forms.\n\nLonnie got situated in the chair and they signed into the computer. Brandon gave him a quick lesson on the phone system and made sure he had a list of phone numbers. He started up the special computer program they used to generate quotes and proposals and gave him a sixty-second crash course.",
        "\"You're gonna be fine,\" Brandon said quietly as he leaned his elbows on the counter.\n\n\"You sure your partner doesn't mind?\" Lonnie asked back, just as quiet. \"Walker seemed like--\"\n\n\"I told you already. He's okay with it. He's been bitching about getting someone in here to answer the phones and type up the proposals. Neither of us is that good with computers.\"\n\n\"What if he finds out about... you know?\"\n\n\"That you're my cupcake?\" Brandon asked with a playful smirk.\n\n\"Yeah,\" Lonnie said, his cheeks going bright pink, matching his shirt in a totally adorable way. \"That.\"\n\n\"I'll tell him. I'm not gonna lie. You're not my dirty little secret.\"\n\n\"Are you sure? I would totally understand if you didn't want to. I mean, maybe you shouldn't for a bit.\"\n\n\"Oh, I see now. You want me to be your dirty little secret,\" Brandon chuckled.\n\n\"Brandon, don't joke. I'm just saying... I don't want to mess things up with you and your friend or your business.\" He brought his thumb up to his mouth and started chewing his nail.\n\n\"Don't worry about it, baby. I'll be fine.\" Brandon pulled Lonnie's hand away from his mouth, then leaned forward and pressed a kiss onto his lips.\n\n\"Okay,\" Lonnie sighed breathlessly. The phone started to ring and Lonnie lifted his index finger up. \"Just a sec.\"\n\nBrandon stood back and watched Lonnie answer the phone.\n\n\"Davis and Adams Remodeling,\" he said in a pleasant, business voice. \"This is Lonnie speaking, how can I help you? ... Sure, I can re-fax that to you. Let me pull it up... What's your name? ... Mm-hmm...\"\n\nBrandon smiled to himself as Lonnie stared at the computer screen and clicked his mouse, the phone balanced on his shoulder. Lonnie was going to do just fine. He walked back to Walker's office and shut the door and sat down.\n\n\"So?\" Walker asked with a raised brow.\n\n\"So...?\"\n\n\"What's up with the twinkie?\"\n\nBrandon couldn't help but growl. \"Twinkie?\"\n\n\"Yeah, where'd you find this kid, anyway? The pickle park? He must have one hell of a deep throat and tight ass for you to take notice.\" Walker laughed loudly at his 'joke', slapping his hand on his desk.\n\nBrandon didn't laugh. In fact, he was about two seconds from leaping over the desk and royally fucking up his business partner. He ground his teeth together, trying to decide how he was going to respond to Walker without blowing up into a rage.\n\nWalker's mouth dropped open. \"Are you-- Wait, are you fucking him?\"\n\nOkay, it was now or never. All cards on the table. \"Yeah. We're dating. Living together, actually.\"\n\nBrandon blinked. Holy fuck. He just came out. Huh. That was easier than he thought it'd be.\n\n\"Are you fucking kidding me?!\" Walker pushed to his feet and paced behind his desk, shaking his head. \"I don't believe this. I don't fucking believe this. She was right.\"\n\nBrandon narrowed his eyes at his friend, while trying to remain calm. \"Who was right?\"\n\n\"Ginny. She tried to tell me that she thought you were a fag, but I didn't believe her. 'No', I said. 'Not Brandon, he's a soldier. He's a man's man'. Well, you sure had me fooled!\"\n\nBrandon tensed. \"When were you talking to my ex-wife about me?\"\n\nWalker stepped back and the guilty expression on his face said it all. \"Well, when you two were splitting up, she needed someone to talk to...\"\n\nBrandon stood up so fast his chair fell backwards and slammed into the wall. \"You motherfucker. I outta--\"\n\n\"Oh, you don't have any room to judge me. You were the one fucking around with men behind your wife's back, you sick fuck!\"\n\n\"I never cheated on Ginny. She cheated on me! And you knew this!\"\n\nBrandon got up and stormed out of Walker's office. If he stayed, he would definitely do something he would regret. He couldn't believe that his friend had betrayed him like that.\n\nWalker followed him out and grabbed his arm, jerking him to a stop. \"Take your faggot with you. He ain't gonna be working in my office.\"\n\nLonnie looked up from the computer and gasped and jumped to his feet. He just knew something like this would happen!\n\n\"You fucked my wife!\" Brandon shouted as he turned and punched Walker, connecting hard with his jaw.\n\nLonnie watched in horror as the two friends began fighting. They slammed against the wall, and Brandon landed a punch to Walker's gut. The picture on the wall behind Walker's head fell to the ground and the glass shattered. Soon they were on the floor rolling back and forth, hitting and punching each other over and over.\n\nAs soon as it started, it seemed to end. They pushed apart and slumped back against the wall, their chests heaving as they panted and tried to catch their breath. Brandon reached up and wiped the trickle of blood from his nose with his shirt sleeve.\n\n\"We're too old for this shit,\" he mumbled.\n\nWalker reached into his mouth and checked a loose tooth and let his head fall back against the wall. He sighed out loud, then turned his head towards Brandon. \"Just so you know, your ex-wife was a lousy lay. When she blew me, it was like putting my cock into a garbage disposal.\"\n\nBrandon looked over at Walker and snorted. He started to laugh and Walker joined in. Then the two of them were roaring with laughter, doubled over, holding their bellies, tears spilling from their faces.\n\nLonnie stood by with his mouth agape, in utter shock at what he just witnessed.\n\n\"Come on, we got work to do,\" Walker said as he pushed to his feet. He held his hand down to Brandon. Brandon looked into his friend's eyes and nodded his head. He grabbed the offered hand and pulled to his feet.\n\nAnd just like that, things were back to normal.\n\nAs the two men walked to the restroom to clean themselves up, Lonnie shook his head. He just didn't get straight guys. Not that Brandon was exactly 'straight'... Whatever.\n\nHe was still shaking his head as he walked into the storage room in search of a broom and dust pan to clean up the broken picture frame.\n\n***\n\nBrandon walked into the office and smiled when Lonnie looked up from his desk. A grin spread across his boy's face, and his dimples made an appearance. Lonnie was happy to see him. It warmed him to the core to know that he could make Lonnie react that way just by walking into the room.\n\n\"Ready for lunch, cupcake?\" Brandon asked.\n\n\"Yup. It's been kind of quiet this morning,\" he replied. \"I, um, hope you don't mind, but I reorganized the files in the file cabinet and cleaned up the folders on the computer.\"\n\n\"Um, okay. Whatever you need to make it better or easier for you, I don't care.\"\n\n\"I'll show you what I did later, if you want. I don't want to do stuff out of turn.\"\n\n\"Sure. Walker can't make it to lunch. He's stuck on one of the jobs. So it's just you and me today for your official 'welcome to D and A lunch'.\"\n\nLonnie got up from behind the desk. As he walked past, Brandon couldn't help himself. That tight, perky little ass just begged for it. He raised his hand and gave it a good, hard smack.\n\n\"Ow!\" Lonnie yelped. He grabbed his ass and rubbed his hand up and down while he looked at Brandon with wide eyes.\n\nBrandon laughed and held open the front door for Lonnie. The boy eyed him suspiciously as he ran through the door, trying to avoid another spank from Brandon's bear paw.\n\nBrandon took Lonnie to a nearby family restaurant chain where they could get a quick lunch.\n\nWhile they looked over the menus, Lonnie looked over the top of his at Brandon. \"Did you know Walker apologized to me?\"\n\n\"He did?\"\n\n\"Yeah. While you were in the bathroom. He came over and said he was sorry and shook my hand.\"\n\n\"Good.\"\n\n\"I hope we'll get along okay. I want him to be able to trust me.\"\n\n\"You'll be fine,\" Brandon said. He laid his menu down, apparently already decided what he wanted for lunch. \"Work hard, and he won't care about anything else.\"\n\nLonnie looked back at his menu, trying to quickly decide what he wanted to eat when he saw the waitress approaching.\n\n\"What can I get ya today, darlin'?\" the waitress asked Brandon.\n\nThe older woman had too much make-up on and her clothes were too tight and showed too much cleavage. Lonnie didn't miss the way she smiled at Brandon, not even looking at Lonnie. Lonnie's lips tightened together. He wanted to kick the woman in the shin and tell her to back the fuck off. Not that he could blame the woman. Brandon was so relaxed now and he looked friendly. He even smiled, making his rugged face soft and handsome. Of course she would find him attractive.\n\n\"Hey,\" Brandon said, returning her smile. \"I'll have the patty melt platter and a Coke.\"\n\n\"Sure thing, darlin',\" she said with a wink. She looked back at Lonnie with a raised brow, pencil in hand. No smile. \"You?\"\n\n\"I'll have the chicken salad sandwich with no tomatoes and a Coke.\"\n\nAs she turned and walked away, swishing her hips, she threw Brandon a flirty smile over her shoulder. Lonnie watched Brandon's eyes drift down to her ass and his heart fell. He felt like he couldn't breathe and the room started to spin.\n\n\"Hey. You okay?\"\n\nLonnie looked up. His eyes snapped to Brandon's and the room settled. Brandon looked a little blurry and he had to blink a few times to get him to focus on the man's face. Brandon had a frown on his face and his brows were knitted together.\n\n\"You okay?\" he repeated, before adding softly, \"You look like you're gonna cry.\"\n\n\"What?\" Lonnie blinked a couple more times. \"No, I'm fine.\" He wasn't fine. If Brandon thought he could just toss him aside for some slut, he had another thing coming. Before he could think, he blurted, \"Do you like her?\"\n\n\"Who?\"\n\n\"The waitress. Is that what you want?\" he demanded.\n\nBrandon's head jerked back. \"What? No, of course not. I'm with you, Lonnie.\"\n\n\"You were flirting with her. And you looked at her, at her butt.\" God, he hoped that he didn't sound needy and pathetic.\n\n\"I was just being nice. And maybe I looked since she was throwing it out there, but I'm not interested. I would never cheat on you.\" Brandon reached out and pinched Lonnie's chin and then tapped the tip of his nose with his finger. \"Why would I want anyone else when I got you?\"\n\nLonnie couldn't help but melt a little bit. He smiled back at Brandon. He didn't think that Brandon was lying, but he wished he was more confident in their relationship. He shouldn't worry. Brandon loved him. Well, he never said he did out loud, but Lonnie knew that he did.\n\nDidn't he?\n\n***\n\n\"I don't know about this, baby,\" Ben said with a groan.\n\n\"Come on, Ben. Brandon is coming over with Lonnie. This is a big deal for him. He's formally introducing us to his boyfriend.\"\n\n\"Yeah, but... I don't want them to watch you feed me. It's fucking humiliating.\"\n\nBenji saw the pain and embarrassment all over Ben's face and his heart ached. He wished there was a way to fix it, but until the casts came off, they would have to just deal with it.\n\n\"I love you, Ben. I promise I'll make it up to you later.\"\n\n\"Oh yeah?\" Ben ran the tips of his left-hand fingers over Benji's cheek.\n\nBenji leaned into Ben's touch. \"Yeah. I've been thinking about some things we can try, even without your arms.\" A sly smile spread across Benji's face and he flicked the tip of his tongue over the tip of Ben's index finger.\n\n\"Oh, fuck,\" Ben groaned. He pushed at his crotch with his cast, trying to push the head of his stiffening dick into a more comfortable position.\n\nThe doorbell rang and Toby ran to the door and began barking his head off. Benji hurried to the front door and pulled back Toby to let Brandon and Lonnie inside. He couldn't help but notice that they were holding hands and Lonnie seemed to be clinging to Brandon, nearly shaking with nerves.\n\n\"Hi, guys. Glad you could come.\" He smiled warmly, hoping to put Lonnie at ease.\n\nBrandon leaned down and hugged Benji, then bent down and rubbed Toby's head. \"You just needed someone to work the grill.\"\n\n\"Hey, I can work the grill just fine,\" Benji pouted.\n\n\"If you like your steaks chewy,\" Ben snickered.\n\nBenji shot Ben a dirty look. \"You can forget later,\" he muttered under his breath.\n\nBen quickly backtracked. \"I meant, if you like your steaks moist and delicious.\"\n\nBenji rolled his eyes and gave Lonnie a hug. Lonnie was surprised for a second at the unexpected display of affection but then hugged Benji back.\n\n\"Come on in,\" Benji said to him, nodding towards the kitchen.\n\n\"Thanks.\"\n\n\"That's Toby, by the way,\" Benji said, pointing to the little dog that had his nose and beard plastered against Lonnie's pant leg.\n\nLonnie reached down and scratched at Toby's neck. \"You smell Ricky? Maybe someday you two can play together.\"\n\n\"Oh my god, he would totally love that,\" Benji said. \"He loves other dogs.\"\n\nLonnie followed Benji into the kitchen. \"Can I help with anything?\"\n\n\"Sure. So, how's your new job?\" Benji asked him. Benji opened a brown paper bag filled with corn on the cob. \"Can you help me shuck these? Ben said you're working for Brandon now.\"\n\n\"It's really great. I love it. Except I might have to file a sexual harassment suit. It seems my boss can't keep his hands to himself,\" he said with a nervous laugh.\n\nBrandon looked at Ben and shrugged. \"You see an ass that good, you gotta smack it.\"\n\nLonnie rolled his eyes and turned back to Benji. \"As I was saying...\"\n\nBen and Brandon laughed. They watched their two guys chat and laugh like best friends as they worked together to make dinner.\n\n\"Let's get the grill started,\" Brandon said to his brother.\n\nBen followed Brandon out onto the deck. Ben flopped down into one of the patio chairs while Brandon started the grill. He pulled out the scrubber and gave the grates a quick cleaning before sitting down with his brother.\n\n\"So?\" Ben asked with a raised eyebrow.\n\n\"Yeah.\"\n\n\"Things are going good, I take it.\"\n\n\"Yeah. It's... I don't know... crazy. If you told me a couple months ago that I'd be living with, fucking another guy...\"\n\n\"You would have punched me.\"\n\n\"Yeah,\" he said with a snort. \"But now... I can't imagine life without Lonnie. Shit, I had to give him a job at the office because I didn't like the idea of him being away from me. I know where he is and I know he's safe.\"\n\n\"You're in love with him.\"\n\nBrandon pulled out his lighter and cigarettes and lit one up. He drew in a deep lungful of the warm smoke and then let it out slowly.\n\n\"You gonna ignore me?\" Ben pressed.\n\n\"I heard you.\"\n\n\"And?\"\n\nBrandon took another drag and exhaled. \"I haven't known him that long. I know we moved in fast, but he needed a place to go. And it's not possible to be in love with someone so quick.\"\n\n\"You don't sound very convinced. Are you having seconds thoughts? If you are, you owe it to that boy to sit down and tell him the truth. Besides, I knew I loved Benji the first time we kissed. I knew he was mine.\"\n\n\"I'm not having seconds thoughts,\" he insisted with a scowl. \"I just... I don't know.\"\n\n\"Tell me about him, Bran.\"\n\n\"Well, he's half-Japanese, half-Irish. He's smart and sweet and kind. He can be a little nervous and shy around people he doesn't know, but then when he opens up, he's friendly and funny. When he gets mad, he gets sassy and doesn't let you push him around.\" Brandon looked around and lowered his voice, \"He's fucking amazing in bed. Shit, Ben, I swear all I have to do to make him come is look at him... It's like he's really into me, you know? When we're fucking, he'll look right into my eyes and tell me he loves me. And I can see it, Ben. It scares me a little, to know that I have that power over him. Like in that one moment, I'm everything to him.\"\n\n\"Sounds like he's got that power over you, too,\" Ben said, noting the warm smile on his brother's face as he talked about his boy.\n\nBrandon didn't say anything. As he brought his smoke to his mouth to take one last drag, he couldn't help but notice his hand was shaking. And if he had looked over at his younger brother, he would have noticed the knowing smile on his face.\n\n***\n\nDespite his apprehension at having his brother and his new boyfriend over, Ben had to admit that he had fun. Yeah, Benji had to feed him in front of Brandon and Lonnie, but he and Benji turned it around into a joke. Everyone laughed. And no one looked at him with pity or disgust.\n\nEven Toby was happy with the occasional scraps of meat that Ben accidentally dropped onto the floor.\n\nLonnie fit in perfectly with their small family group. Ben never thought that Benji was lonely, but seeing him interact with Lonnie, it made him realize that the only friends he really had were Brandon and himself. He could already tell that he and Lonnie were going to be best friends.\n\nHe wanted to roll his eyes and smack his big brother upside the head with one of his casts. The man was obviously crazy about Lonnie, no matter how much he fought it. It was totally apparent in the way Brandon talked to Lonnie, in the way he touched him, in the way he looked at him. Somehow the slight little Asian-Irish man turned his big redneck bear of a brother into a fucking teddy bear.\n\nBen couldn't have been happier for Brandon.\n\n\"I really like Lonnie,\" Benji said as he got his partner ready for bed.\n\n\"Me, too. He's a sweet kid. He'll be good for Brandon.\"\n\n\"Yeah. I think he's scared that Brandon is going to bail if things get too serious.\"\n\n\"Brandon won't bail. He's got it bad, trust me. He's in way deep.\"\n\n\"It's funny how Brandon doesn't do anything half-ass. When he decided he wanted Lonnie, he went and got him and then just... came out.\"\n\n\"Brandon has always been a 'live and let live' kind of guy. He doesn't give a shit what anyone thinks of him. Never has. I think the whole thing was just a little overwhelming for him, but knowing Bran, he's already over it.\"\n\nBen sat down on the bed while Benji picked up their dirty clothes and headed towards the bathroom. Ben watched his naked ass, so tight and perky, until Benji disappeared in the bathroom, shutting the door behind him. He sat patiently waiting for his man to return. His cock wasn't so patient. It had started to rise the moment Ben caught a glimpse of that hot little ass.\n\nBen hoped that Benji was up for another ride tonight. He really wanted to fuck his baby. Fuck, just the thought of being buried inside Benji's tight little body made his cock throb and ache. He looked down and watched a pearl of pre-come ooze out of the slit and get caught in his foreskin. While Benji riding on top was never their favorite position, it seemed like it was the only way it would work without the use of Ben's arms.\n\nThe bathroom door cracked open and Benji called out. \"Ben? Can you come here a minute? I need some help.\"\n\nBen braced his feet on the floor and pushed up. He walked over to the bathroom and pushed the door open with one of his plastered arms. \"Holy fucking shit!\" His mouth fell open.\n\nBenji was leaning over the bathroom vanity, one hand braced against the wall mirror, that perky little ass sticking out. The other hand was between his legs. He had three fingers buried inside his tight little hole.\n\n\"I need, Ben. Can you help me?\" he whispered huskily, staring at him through the mirror.\n\nBen moved up behind Benji. Benji pulled his fingers free and pumped more lube into his palm. As Ben moved into position, Benji reached back and wrapped his hand around Ben's stiff cock. A few strokes and a twist and Ben was slicked up and ready.\n\n\"Are you sure this is gonna work, baby?\" Ben asked as Benji tugged his cock, urging him closer.\n\n\"Yeah, it'll work.\" Benji positioned Ben's cock head at his entrance and Ben squatted slightly to get their heights lined up. With a push of his hips, he was inside Benji.\n\nBenji groaned loudly and slapped his other hand onto the mirror, not caring that he just smeared it with lube. He planted his feet firmly and pushed his ass back against Ben.\n\n\"Fuck me, Ben.\"\n\nBen moved his hips, trying to get the friction going, but he needed something to brace himself. He leaned over Benji and moved his right arm underneath his boy's bent over body. The crook in his cast made a natural shelf for Benji. He rested his other arm on top of Benji's back.",
        "\"This okay?\" Ben asked. \"You comfortable?\"\n\nBenji nodded frantically. \"Yes. Please, Ben. Move.\"\n\nHolding him in place, and using him for leverage, he began to thrust his hips. It was awkward at first, but he quickly developed a rhythm. Slow at first, then harder and faster.\n\nBenji whimpered beneath him, pushing back with each thrust of his hips. \"Yes, Ben! Right there! Oh god!\"\n\n\"Fuck yeah! Take my cock, boy!\"\n\nBen's body slapped into Benji's over and over, the sound echoing through the bathroom. Ben wanted to prolong the pleasure, to make sure that Benji could come, but the sensations of taking his boy overwhelmed him.\n\n\"Baby! I'm--\" With a loud roar, Ben shoved forward and emptied his nuts hard into Benji's clenching ass.\n\nBen slumped forward, panting onto Benji's back. \"Fuck, that was way too quick,\" he gasped between breaths. \"I just couldn't hold back.\"\n\nBen stepped back from Benji, his cock sliding out with a squelch. He watched a thick river of white spunk drip down the inside of Benji's leg. Ben let out a grunt. God damn, that was hot.\n\nBenji's body was trembling as he pushed off from the mirror and turned around. His dick was so angry and red, it looked like it hurt.\n\n\"Ben,\" Benji whispered. \"Please. I need to come. Will you... Can you... kneel down...?\"\n\nBen looked down at Benji's pleading face. His boy was so unselfish. And here he was looking so scared and unsure, begging for a blowjob. Ben didn't deserve him. And the thought hit him, how he could make it up to his baby. \"I got something better in mind. Come on.\"\n\nBenji looked at Ben confused, but followed him into the bedroom. Ben started to crawl onto the bed and Benji hurried to give him a hand.\n\n\"What are you...?\"\n\nBen had maneuvered himself onto his belly. He spread his legs and Benji's mouth dropped open. Surely, he didn't mean...\n\nBen lifted his head and looked back at him. \"I want you to fuck me, baby.\"\n\nBenji's mouth fell open. \"I... I, uh, I've never...\"\n\n\"Me neither. You'll be my first. Aren't you curious to top?\"\n\n\"I guess. I mean, I like... you know... I really like being on the bottom.\" His cheeks flushed red.\n\n\"Well, if you don't want to--\"\n\n\"No, I didn't say that. I'm curious, I guess.\"\n\nBen's eyes were drawn to Benji's cock, which lurched and dribbled pre-come down the already wet shaft. \"Then come on, baby. Get me ready.\"\n\nBenji picked up the bottle of lube and poured some onto his fingers. His hand was shaking as he glided his slippery fingers between Ben's cheeks. He pressed the tip of his index finger into Ben's hole, nice and slow, up to the first knuckle. He could hear Ben breathing hard, but he didn't seem to be in pain, so he slid his finger all the way in. He held still for a moment until he felt Ben's sphincter relax. He moved his finger in and out, slow and steady. He pulled his finger free and pushed in two. Benji looked down at his crotch. His dick was kinda skinny. If Ben could take his two fingers, he could take his dick. As he twisted and spread out his fingers, he felt Ben tighten and tense.\n\n\"You okay?\" Benji whispered, his other hand rubbing a soothing motion on Ben's butt cheeks.\n\n\"Mm-hmm,\" Ben grunted through his teeth. \"Fuck me.\"\n\nBenji spread a little more lube into Ben's crack, then smeared some up and down his dick. His erection had softened slightly from nerves, but it firmed back up as his hand spread the lube around the shaft and head. Ben spread his legs a little wider as Benji moved in. He pushed his dick down with his fingers and lined it up and gave a gentle push forward.\n\nWith a soft grunt, he pushed again until the head popped in. He froze when Ben hissed.\n\n\"I'm okay,\" Ben said, his voice muffled by the pillow. \"Don't stop.\"\n\nBen's face was buried in the pillow. Surely he'd tell him if it hurt too much. Benji kept pushing, sliding into Ben's body. He watched as each inch slowly disappeared until he was buried completely.\n\nOh god, it was so warm and tight.\n\nBenji slumped forward, holding himself up on his hands, as if he was doing a push-up over his much bigger lover. He closed his eyes and concentrated on his breathing. He pulled his hips back and thrust forward. His legs stiffened and his toes curled in.\n\n\"Do it, baby. Fuck me.\"\n\n\"Ben,\" he moaned. He wanted to try to hit Ben's prostate gland, to make it good for him, but he couldn't quite get it. He knew he was moving awkwardly, flailing about like a fish out of water, trying to thrust, but he was fast losing control. \"Ben, oh god, I'm--!\"\n\nToo late. He couldn't finish his warning because he was already shooting inside Ben's ass, filling his body with his hot load. He slumped forward onto Ben's back and wrapped his arms around his man.\n\nBenji's dick started to go soft and Ben's body pushed it out. He rolled off his big man and laid down by his side. He draped his arm around Ben's waist and snuggled closer. He was more than a little embarrassed at his performance. \"Sorry I couldn't make it last longer. Was it okay?\"\n\nBen looked at Benji and smiled. \"You were perfect,\" he said as he leaned in for a tender kiss.\n\nIn truth, Ben didn't particularly enjoy it. Maybe that made him an asshole, but it was the truth. It was messy and uncomfortable, but it was over and done with in less than a minute. There was no harm in telling his baby a little white lie. Ben was a top, but if Benji ever wanted his ass, he would give it up to him. Benji had never denied Ben's wants, so Ben wasn't going to start doing it to him.\n\nBenji smiled and rubbed his nose across Ben's chin, back and forth across his horseshoe mustache. \"I like being on bottom better,\" he whispered, not looking in Ben's eyes.\n\n'Thank god!', Ben thought, but instead said out loud, \"Anytime you want it, you can have it, you know.\"\n\nBenji looked into Ben's eyes and smiled. \"It really means a lot to me that you offered yourself. I liked that. It made me feel special. But when you top me, I feel... I don't know. I can't explain it. It's just... right.\"\n\n\"You are special, baby, and I know exactly how you feel. Help me turn over.\"\n\nBenji helped Ben roll so that he was laying on his back. Ben laid down and spread his arms out. Benji slid back in and laid his head on Ben's chest. He lightly stroked his fingers through the swirls of hair on Ben's chest and stomach.\n\n\"I feel wet and slimy between my ass cheeks and legs,\" Ben said after a few moments. He wrinkled his nose and scrunched his brow. \"It feels weird.\"\n\nBenji blushed. \"Yeah...\" he said with a breathy sigh.\n\nBen looked at Benji and snickered. He leaned his head in and rubbed his nose across Benji's temple before he growled into his ear, \"But you like it, don't you? You love feeling my hot, wet spunk leaking out of your well-used ass. You like laying in my wet spot, don't you?\"\n\nBenji closed his eyes and shuddered, giving Ben his answer without a word. Oh, yes, Ben's boy was definitely a bottom.\n\nBenji's face was blushing bright red when he sat up. \"Let me get a cloth and clean us up.\"\n\n\"I'll be right here waiting,\" Ben said with a grin as he spread his arms and legs out.\n\nBenji hopped out of bed laughing. Before he disappeared into the bathroom, he turned back to the bed. \"I love you, Ben.\"\n\n\"Love you, too, baby.\"\n\n***\n\nLonnie glanced down at the computer's clock. It was Friday, almost lunch time. Lonnie had been working at D and A Remodeling for two weeks now. He was getting to the point where he was starting to feel comfortable with the business.\n\nWhen Brandon and Walker asked him for decorating advice a couple of days ago, he was surprised and very happy to give his advice. So they only let him pick out some paint colors and took his advice on tile choices, but it made him feel like he was really part of the business, like his opinion made a difference. Lonnie was just one of a dozen full-time employees, but Brandon and Walker treated everybody really well. He could tell that everyone respected the bosses. He was proud of Brandon.\n\nThe front door chimed and opened, and Lonnie looked up from the computer. A smile spread across his face as Brandon walked in, followed by Walker.\n\n\"Hi.\"\n\nBrandon leaned over the front of the reception counter and planted a kiss on Lonnie's lips.\n\n\"Aw, come on, man,\" Walker groaned. \"I don't wanna see that shit. Let me take a piss and then we can head out.\"\n\nLonnie couldn't help but blush and Brandon laughed at his friend's reaction. \"He's just jealous 'cause he ain't getting any,\" Brandon 'whispered' to Lonnie, loud enough so that Walker could hear him.\n\n\"Fuck off,\" Walker muttered, shutting the bathroom door behind him.\n\nBrandon leaned over the counter and kissed Lonnie again, this time slower and more sensual. He grabbed the back of Lonnie's head and pressed his tongue forward, sliding into Lonnie's willing mouth.\n\nLonnie cleared his throat and crinkled his nose. \"Were you just smoking?\"\n\n\"Yup.\"\n\nLonnie snickered. \"Wow. I thought you'd deny it.\"\n\n\"Why should I?\" he asked, then kissed Lonnie again.\n\nLonnie pulled back slightly and the corner of his mouth turned up in a hint of a smile. \"What if I don't wanna kiss you after you've been smoking?\"\n\n\"Too damn bad.\" Brandon reached behind Lonnie's head and grabbed a fistful of hair and pulled his head in and kissed him hard, until Lonnie was left panting. He stared back at Brandon. His lips were swollen, juicy wet and slightly parted.\n\n\"Uh...\" Damn, Brandon could kiss him stupid. Lonnie blinked his eyes and shook his head clear. He pulled out a pack of gum from his desk drawer and set it on the counter. \"Here.\"\n\nBrandon looked down at the white minty squares packed in plastic and foil. He narrowed his eyes at Lonnie and growled. \"Fine. I'll try to cut back.\" He pushed one of the gum pieces through the foil and popped it into his mouth. He kissed Lonnie again, and then nipped Lonnie's bottom lip with his teeth. \"God, you make my dick so fucking hard. Do you think we have enough time to go to my office for a quick blowjob?\"\n\nLonnie's eyes widened. \"No!\" He tried to look around Brandon's body to see if Walker was in the room.\n\n\"Damn.\" Brandon smiled and laughed softly. \"It was worth a shot.\"\n\nLonnie knew that Brandon was just joking around. But maybe if they were alone, he might have taken Brandon up on his offer...\n\nThe three men headed down to a local joint that was popular with the construction crowd. As soon as they walked into the door, Lonnie felt slightly uncomfortable. He didn't exactly fit in here. But wasn't that always the case? The story of his life.\n\nWhile they waited for one of the waitresses to gather their menus and utensils, his eyes scanned the room, noting all of the rugged men.\n\nHis eyes fell on one man in particular and he about tripped over his feet at the recognition. He quickly moved out of the burly man's line of vision, hoping that he was unseen, and tugged on Brandon's shirt.\n\n\"Brandon. Can we go somewhere else?\" he said quietly.\n\nBrandon turned and frowned down at Lonnie. \"Why? What's wrong?\"\n\n\"Right this way,\" the waitress said.\n\nWalker followed behind her, his eyes on her ass the whole time. Brandon turned after him and Lonnie didn't have a choice but to follow them. His eyes darted to the other side of the room. The man hadn't noticed him.\n\nHe slid into the booth next to Brandon, relieved that they couldn't be seen by the other table.\n\nHe soon forgot all about the man and concentrated on having a good lunch with Brandon and Walker.\n\nBrandon was so happy to see his friend getting along with Lonnie. Lonnie had become less shy around Walker, even laughing at all of the man's lame ass jokes. And Walker's lazy ass liked Lonnie because Lonnie happily agreed to do any work the man gave him. \n\n\"You know, I can't believe you two,\" Walker said as he shook his head. He took a sip of his coffee and flagged the waitress for the check.\n\nBrandon had his arm on the back of the booth, behind Lonnie's head. He wasn't touching Lonnie, but the arm was clearly possessive. Anyone who looked at the couple would know that Lonnie was his.\n\n\"What?\" Brandon asked.\n\n\"You, man,\" Walker said quietly. \"We're having lunch at Ray's and you practically got your boy in your lap.\"\n\n\"I don't give a fuck what these guys think.\"\n\n\"I guess not.\" Walker tilted his head and squinted his eyes. \"Is that a bite mark?\"\n\nLonnie's eyes widened and he slapped his hand over the side of his neck. He thought the purple bruise at the base of his neck would be hidden by his shirt collar.\n\nBrandon laughed loudly. \"Lonnie was attacked by a grizzly bear last night.\" He leaned down and started to playfully chomp on Lonnie's hand, pushing it away to get at his neck, growling the whole time.\n\nLonnie laughed and shoved Brandon back with his shoulder. \"Back off, Grizzly Adams.\"\n\nEven Walker couldn't help but laugh at how stupid Brandon was acting.\n\nLonnie suddenly let out a soft gasp and froze, his body going completely tense. Brandon followed his eyes to a man standing at the register.\n\nThe burly man was huskily built. He was smaller and shorter than Brandon, but looked solid. He had auburn red hair, cut short. His beard was full and unruly. The man's expression was utter contempt and disgust, his eyes staring directly at Lonnie.\n\nBrandon's possessive and protective feelings kicked into high gear and he let his arm slip from the back of the booth seat, and rested his hand on Lonnie's shoulder. He pulled Lonnie closer to him, daring the asshole to say something.\n\nWalker turned around in the booth to see what was going on.\n\nThe man's eyes glanced over to Brandon, who was daring the man to come and fuck with him and his. The assholes lip curled up in a snarl and he snatched his change from the cashier and turned and walked out of the restaurant.\n\nBrandon's eyes followed the man out the door and to the parking lot, where he unlocked a pickup truck.\n\nA shudder drew his attention back to the man under his arm. He looked down at Lonnie. His body trembled and he had unshed tears in his eyes. He tapped his fingers under Lonnie's chin, making the man look up at him.\n\n\"Lonnie? You know him, baby?\"\n\nA tear overflowed and dripped down Lonnie's cheek. He sniffled and then whispered, \"That's my dad.\"\n\n\"Get up,\" Brandon growled. \"I'm gonna go talk to him.\"\n\nAs Brandon tried to push Lonnie from the booth, Lonnie snapped out of his daze. He pushed his hands against Brandon's chest. \"No, please. Just let it go.\"\n\nBrandon sighed and reluctantly settled back down.\n\nWalker turned back around and picked up his coffee cup. \"Your dad, huh?\" He cut his eyes to Brandon and raised an eyebrow. \"He looks like you.\"\n\n\"Brandon is nothing like my dad,\" Lonnie said, surprising both Brandon and Walker with the venom in his voice.\n\nHe pushed out of the booth and stormed out into the parking lot.\n\nBrandon watched him walk over to the truck. He leaned back against it, with his arms folded across his chest. He turned back to Walker. \"Nice going, asshole.\"\n\nWalker shrugged. \"I'm just saying...\"\n\n***\n\nBrandon lifted the blankets and Lonnie crawled over him and settled on his right side.\n\nLonnie let out a soft sigh as he nuzzled his nose into Brandon's beard. His hand slipped under the cover and found Brandon's cock. \"Mmm...\"\n\nBrandon groaned. His cock started to fill as Lonnie's slender fingers squeezed and stroked.\n\nFuck. They really needed to talk. If Lonnie started this, then Brandon would be asleep by the time they finished.\n\nBrandon reluctantly grabbed Lonnie's hand and laced his fingers with his.\n\n\"You wanna talk about this afternoon?\" Brandon asked.\n\n\"Not really.\"\n\nLonnie slid his leg between Brandon's and rubbed his knees against Brandon's balls as he kissed a path along Brandon's bearded jaw.\n\n\"Lonnie.\" Brandon rolled onto his side, turning Lonnie to face him.\n\n\"Brandon, please,\" Lonnie pleaded. \"Can we just forget about it?\"\n\n\"No.\"\n\nLonnie sighed. He rolled onto his back and folded his arms over his chest. \"If you think I have some kind of daddy complex, I don't.\"\n\n\"You gotta admit, there is some resemblance.\"\n\n\"No, there's not!\"\n\n\"We're both Irish and have red hair, beards and big builds. And when we're fucking around, you call me d--\"\n\n\"You're nothing like him.\"\n\n\"And is that why you're with me?\"\n\n\"What?\" Lonnie turned back onto his side to look at Brandon.\n\n\"Because I look like your dad. But unlike him, I take care of you.\"\n\n\"I don't need you to take care of me. I can take care of myself.\"\n\nBrandon thought that might be debatable, but he certainly wasn't about to tell Lonnie that out loud. \"You may not need me to take care of you, but you like it.\"\n\n\"You're making me sound like some kind of helpless freak. And, F.Y.I., I call you that because it makes you hot. You get all rough and growly and it's sexy. It's not because I want you to be him. That's just gross.\"\n\n\"Hey, I'm not trying to upset you. I just want you to be sure. Are you with me because of me?\"\n\n\"Brandon. I admit, I was drawn to you because you're all big and manly, okay? I have always liked big guys. Under all that meanness and scowling you do, you're really warm and loving to the people you care about, and I love that about you. Even when you were trying to deny you liked me, you still wanted to take care of me. I'm with you because I love you.\"\n\nBrandon stroked his hand over Lonnie's silky soft hair. \"Okay, cupcake.\" He leaned his forehead onto Lonnie's and kissed the tip of his nose.\n\nLonnie let out a soft breath and cuddled closer to Brandon.\n\nHis voice was barely above a whisper. \"I thought maybe if I gave him some time, he might come around. He looked at me with such hate.\" Lonnie's eyes turned glassy and his voice started to quiver. \"I just want him to love me.\"\n\nBrandon pulled Lonnie to his chest and he held the shaking man in his arms and let him cry. How could anyone not love Lonnie? "
    ],
    "authorname": "robcub32",
    "tags": [
        "gay",
        "gay novella",
        "gay romance",
        "gay bear",
        "gay interracial",
        "bear",
        "trucker",
        "interracial",
        "coming out",
        "bareback"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/coming-home-davis-brothers-ch-05"
}