{
    "title": "Tribal Bonds Ch. 03",
    "pages": [
        "Hello Readers! This is Part Three of a Six-Part story. All six parts are written and will be posted in order. It takes place in the same universe as my \"Sultanah\" series, but you don't need to read any of that to understand this story (but you really should read it). In Part 1, Kedi was sold into slavery along with a member of a rival tribe, Cilek, but the slavers were seemingly attacked by ghosts. In Part 2, Kedi wakes up surrounded by warrior women who may be ghosts, but are certainly kinky. Please, please, please let me know what you think!\n\nChapter 3: Clash of Civilizations\n\nI was blinded by light. That was the first thing that I remember. Suddenly, I was bathed in the stuff\n\nBut it was too much. I instantly groaned and laid my forearm across my face, covering my eyes. My senses had returned to me, in a flood, all at once and my mind reeled. It took a moment, to get my thoughts back in order. But only a moment. After the initial shock of the light in my eyes subsided, I remembered exactly where I had been, and what I had been doing, when my senses left me. \n\nThe longhouse. The ghosts.\n\nFor a terrifying second, I realized the source of the bright line. I had been cast into the flames! When the ghosts had finished their ritual, they had dragged my body to the fire, or another fire outside, and were burning me alive! And that had awakened me. I jerked fiercely, my arm slipping from my eyes. I felt my wrist bump my nose, sensed the pain. And then I realized that otherwise, my body did not hurt. No searing agony from flames. I was warm. But pleasantly warm.\n\n\"Ah, you're awake,\" a familiar voice said. At first I couldn't place it. I sat up (realizing for the first time that I was laying down) and squinted in the light, which was still overwhelming. Forms began to reappear around me and I learned the source of the light was the Sun. Just where the Old Ones, who came before Buzcu, had hung it in the firmament to light their way North. \n\nAs my eyes adjusted to the light, I became aware of my surroundings. I was no longer inside of the longhouse. If I had ever been. Perhaps that had been some sort of dream. Or a vision. But it felt so real...\n\nI was in a village, that was clear. And a small one. I could see a small, open, circular area right in front of me. It was maybe 30 yards in diameter, perhaps a little more. Stretching out, like spokes from the hub of a wheel, from that open area were a series of long houses. There were at least a dozen of them, including one that I could sense behind me as I sat up. They were tall structures and I could see hardly see above them. But, in the little alleyways between the longhouses, I could see a bit into the distance. There was a palisade wall that formed a circle around the longhouse. It looked like there was a few long yards between the back of each longhouse and the wall. I could not see a gate and presumed it was behind me. Beyond the palisade wall, I could see large evergreen trees rising high and higher as they moved from the village. Further off, I could see the peaks of snow-topped mountains peaking over the tops of the trees.\n\nBut I was not overly concerned about geography. Because it became quickly clear that the village, while small, was bustling with life. I could hear it before I could see it. The sounds of goats. Of chickens. Creaking carts. And the sound of voices. Women's voices. Children's voices. The forms that produced these voices came into focus. There were children playing some sort of game in the town circle. Many of them. They appeared plump, healthy, and carefree.\n\nThere were women leaning against the front of the longhouses, watching the children play. Some cheered on their daughters (for they were all girls as well), and other spoke amiably with the women next to them. Down the alleyways, I could see other women tending to goats and chickens, slaughtering animals, eating at small tables, and casually practicing with weaponry. All the villagers were wearing loose-flowing gowns of white, cinched at the waist with a black leather belt. Those white sheets were the only thing remotely ghoulish.\n\n\"There is water on the table to your right. You must be thirsty,\" the familiar voice said again and remembered that someone had spoken to me before. I turned first to my right, finding the water and drinking it rapidly. I had not realized I was thirsty until that very moment. The water tasted almost unbearably sweet as it soothed my dry throat. There was a crust of bread next to the water and I picked this up as well. Sating my thirst had exposed my intense hunger. I bit the bread and then finally, turned to the source of the voice.\n\n\"We were beginning to fear you'd never wake up. I thought the sun would be solicitous. For once, I was correct. Please eat and drink, regain your strength,\" the woman said as I looked at her, \"My name is...\"\n\n\"Orospu,\" I said quickly, my eyes bulging. Any illusion I had that my experience in the longhouse was a dream melted. My pulse quickened. But Orospu laughed, a gentle trilling sound.\n\n\"I thought I saw your eyes flickering last night,\" Orospu said, \"The others said you were dead to the world. Once again, I am correct. I am in fine form this morning.\" The situation was baffling. It felt as though I were awake, but in a dream. And, I was having a casual conversation with a mysterious woman who, like me, possessed a cock. And everything was calm. And pleasant. I shook my head.\n\nA chilly breeze blew through the center of the village, whipping up the hair and gowns of the women and girls. I was cold and pulled my knees up to my chest, noticing that, I too was wearing a white gown. I too had become a ghost.\n\n\"The Hayalet are all dead. They are ghosts who haunt the valley that bears their name,\" I said without preamble. My tribesmen in the Buz had said that, even for a Northerner, I was blunt. I saw no need to dissemble. I stated the facts as I knew them to Orospu. She laughed lightly and opened her hands.\n\n\"Our reputation still precedes us. And the raid on your caravan should help as well,\" she stated simply.\n\n\"It wasn't my caravan,\" I said. \n\n\"Yes, I gathered from what the warriors tell me that you were a prisoner. A slave,\" Orospu said. She spoke of things in the past.\n\n\"I was a prisoner,\" I said, \"Am I a prisoner no longer?\" Orospu shook her head.\n\n\"The Hayalet have never taken a prisoner. Ever. You are either dead. Or left to tell the tale.\"\n\n\"I am not dead,\" I said, though I was far from certain. Orospu shrugged, \"So I may leave?\" Orospu's brow furrowed.\n\n\"You are not well-enough to travel,\" Orospu said. She reached forward, her palm moving towards my head. I flinched away from her touch. But she did not desist. I felt the palm of her hand, soft and warm, against my brow. \"No longer feverish. But you are still recovering.\" I waited for more, but she seemed to believe that that had exhausted the conversation.\n\n\"But when I am better?\" I said as my excitement started to rise, \"I am from the far North. I am Buz. I need to return to my tribe and...\" I began, my words tumbling over one another as they raced from my mouth. My mind's eye cast me into the air, like a bird I saw the Hayalet valley, where I had been attacked. I turned towards the North and flew in the direction. The miles I'd crossed slowly, in captivity, disappearing behind me at a faster and faster rate. If I left the next day, if I got back to the Hayalet valley and walked out, I could be there in a few weeks. In the far North. With the Buz. To avenge myself and take my place where I belonged.\n\n\"How do I get back to the river valley?\" I asked, \"where am I?\" I said, casting my eyes around. This time, I paid greater attention to the mountains and trees around me. I searched for anything even remotely familiar. But I had been in the Valley so briefly, I might not have recognized anything even if I was just a few miles from the river. And, in reality, I had no idea how far I'd been taken from the scene of the raid. I could have been 100 miles away.\n\n\"Tell me how to get back,\" I said, looking back at Orospu.\n\n\"It is not that simple,\" she said. Her tone was warm, but had a hint of finality to it. She must've seen my brow furrow, sense my confusion, \"We are ghosts here, as you yourself stated. But ghosts do not sleep. They don't eat. They don't rest. They don't have children. We can do those things, here. But if anyone were ever to discover this place, if they learned the truth, then we wouldn't be ghosts anymore. And raids on caravans in the night would no longer be enough to keep up safe. You were blindfolded when you were brought to this place, even though you were not conscious. You will be blindfolded if you leave.\"\n\n\"What is the truth? What is this place?\" I asked. Thoughts of freedom and returning to the Buz had temporarily blotted out my curiosity. But Orospu's cryptic statement, including the ominous 'if' had rekindled my interest.\n\n\"This? This is the village of Daire. The chief village in the hanging valley of Ust, the largest province of the Hayalet,\" Orospu said calmly. I felt a chill run down my spine.\n\n\"The Hayalet?\" I asked, \"They are all dead. Their villages destroyed, their provinces overrun. The Ulus have killed them to the last man.\" I quickly recalled the details of the story that Topu had told in the river valley. Betrayal by the Ulus, weakness by the Hayalet.\n\n\"To the last man is right,\" Orospu said with a small chuckle.\n\n\"So if you aren't the Hayalet, who are you?\" I asked, imagining that Orospu's statement had confirmed my conclusion.\n\n\"We are the Hayalet,\" Orospu said, indicating with a hand to the women and girls around her.\n\n\"But you said...\"\n\n\"To the last man,\" Orospu repeated. She paused a moment, again sensing my confusion, \"You have heard some of our story. But you haven't heard it all. Don't be ashamed. Few have. And that is by design.\" \n\n\"I don't understand how, if the Ulus killed every Hayalet man, you can be the Hayalet here. Now. If you aren't ghosts.\" I said. Orospu nodded slowly.\n\n\"You already know more than most, just standing in this village. Too much knowledge, really. The danger is already present, more knowledge will not make you anymore of a threat to the Hayalet. Further, you are here as a guest, not a prisoner. And, as a guest, you are owed an explanation.\" I had trouble following what Orospu was talking about. It seemed that she was speaking to herself, rather than to me. I remained silent, and she continued speaking.\n\n\"You know that our erstwhile allies, the Ulus, took advantage of our hospitality and, one night, began a slaughter. We were weak, the Hayalet own our weakness now. But we trusted our allies. We trusted the peace that the Empire had brought us through the years. We were totally unprepared for the sacking of our chief city.\n\n\"Our enemies had prepared for months, perhaps years, for their treachery. They had considered a thousand contingencies, prepared for every eventuality. They rapidly killed our generals, our statesmen, our leaders. They lopped off our heads first, making resistance impossible. Even if we had not been completely shocked by the Ulus' actions, there would have been no one left to organize our forces.\" I listened to Orospu speak, still sounding bitter about actions that had occurred hundreds of years before she was born. But, while I could understand her bitterness, I was also filled with admiration. For the Ulus. For their viciousness and relentlessness. The Buz could learn from them.\n\n\"They didn't just sack the city,\" Orospu continued, \"They searched, street by street, for every man or boy they could find. Without mercy, without pause, they slit the throats of old men and babies. Children were torn from their mothers breasts and killed for the crime of being a Hayalet man. They left no stone unturned. They found hiding places and secret nooks. Found men there. They killed them all. And, when they were done, they spread out into the countryside. To every hamlet and isolated farm in the Hayalet valley. They moved on horseback, arriving before the news of their betrayal. They killed men and boys and tossed their bodies into the river, which ran red as it exited the valley.\n\n\"They were ruthlessly efficient. They missed no one. If a man ran before them, they would spend hours hunting him down and would not stop until they were certain the man was dead. They sealed off the ends of the valley. They made sure than no one left. As far as I know, no man survived the months-long blood orgy. If a man did, he did so by shuffling off his Hayalet exterior and faking that he had Ulus blood. Finally, the Ulus had been left in control of the valley. We have always simply called it The Massacre,\" Orospu's eyes had grown misty as she spoke, the pain in her voice sounding clear, present.\n\n\"That is the story that I heard,\" I said, once again being blunt. Perhaps too blunt. Orospu snorted.\n\n\"Even women sometimes fall into the myth that only men matter,\" Orospu said, and she looked at me as she spoke. I did not understand her meaning, but she kept speaking, \"The Ulus felt that way. They chased down and slaughtered our men, our boys. They believed that the Hayalet were born from the seed of their fathers. Eliminate the fathers, eliminate the seed, eliminate the Hayalet.\n\n\"Certainly,\" I interjected, \"A child is born of his father's seed.\" I was still confused by Orospu, it seemed she spoke in riddles.\n\n\"The blood of the Hayalet runs through a woman's veins as well,\" Orospu retorted, \"But the Ulus thought as you did. As they marched through the valley, murdering men and boys, they largely ignored the women and girls. Pretty ones they tried to capture. As slaves and wives. But they were eliminating the Hayalet, or so they thought, they didn't have time for women. Many slipped through their fingers.\n\n\"In fact, the Ulus were so single mindedly driven to kill even gray-bearded men and beardless boys, they even allowed some of our leaders to escape. The leaders who were women.\" I was taken aback by this. Women leaders? The Buz could barely stand to listen to me speak, let alone lead. It sounded wrong. But also, alluring. After all, would it not have been a welcome change to have my voice heard.? Perhaps when my tribe was deciding who was to be a slave? \n\n\"Most Hayalet children, like most children everywhere, were born either with a cock or a cunny,\" Orospu said, and it felt like she was changing subjects, \"Babies with cocks become men, babies with cunnies become women. And it is as simple as that.\" I knew from my own experience that it was not always as simple as that.\n\n\"But, since time immemorial, there have been others born among the Hayalet. Breast, cunnies, and soft, curved bodies like a woman. But cocks like men,\" Orospu said, raising her eyebrows at me. I felt a jolt, \"The Hayalet recognize these people for what they our - a fusion of the male and female. A divine expression of the duality of nature. Light and Dark. Hot and Cold. Man and Woman. Goddesses who walk on Earth.\" Orospu's words seemed to be hammering into me. I had never heard my body described in such a way. As a thing of...honor. It was a strange, and shameful body. Wasn't it?\n\n\"These people are called the Cadilar and, because of their closeness to the Gods, they performed the rituals. They served as priestesses and conduits to our ancestors, who live now in the bottom of the river. The Cadilar were honored, respected, and consulted in all matters. From war to crops. \n\n\"There were never many Cadilar. No one could predict when or to whom one would be born. But a Cadilar was taken from her family at birth, raised among other Cadilar to know the rituals, to read the signs left for us by our ancestors on the surface of the river, and to learn the history of the Hayalet. Cadilar made vows of temperance, fortitude, and chastity. \n\n\"When the Ulus attacked, they had been our neighbors long enough to know that the Cadilar existed. But they believed that the Cadilar were \"merely\" priestesses. Women, like all other women. Some were killed, some were enslaved. But most were simply allowed to slip away from the cities, from the village, from the farms. \n\n\"The women of Hayalet had never before been in charge of their own destiny. Hayalet men, like men everywhere, were jealous of their monopoly on power. It would have been easy for the remaining women to scatter, to travel to other civilizations. To be enslaved. \n\n\"But the Cadilar remained. And the women of Hayalet had always followed the Cadilar in spiritual matters. Now, facing the death of their husbands, sons, and fathers, they were willing to follow the Cadilar out of the Valley of Death. \n\n\"The Cadilar often went to the mountains to perform rituals and commune with the Gods. They knew of the fertile hemmed-in valleys, the hidden places, the caves and streams. The Hayalet women who survived the Ulus attack followed the Cadilar to these places. They found sheltered plains, like this one, and they hid from the rampaging armies of the Ulus. Waited for their enemies to leave.\n\n\"But the magnitude of what had occurred was quickly apparent. The Ulus remained in the Hayalet Valley. No men staggered into the mountains. There were simply no men left. The enemy would not leave. And there was no future for the Hayalet. No seed to grow new crops.\n\n\"The women of Hayalet quickly realized that there were no longer any men to lead them. If the Hayalet were to continue as a people, the women (and the Cadilar) would have to take on the mantle of leadership. Necessity and danger are excellent teachers. Women who, just a few weeks before, would have meekly asked their husband or father before taking even the simplest action, suddenly burst forth in full masterful vigor. They gauntlet had been thrown at their feet and they did not hesitate to lift it. If their men had known the deep well of resourcefulness and power that lay within their wives and daughters, and had the wherewithal to take advantage of it, they might never have been defeated in the first place.\n\n\"The Cadilar stood aside at this time. They had organized the shattered remnants of Hayalet and led them to safety. And they continued to demonstrate their value as spiritual guardians. But they did not step into the shoes of the men of Hayalet. They had no desire to do so, nor did the women need them. \n\n\"In fact, the women of Hayalet were more than capable of making decisions on their own. Angered by the Ulus treachery and spurred to action by their sudden freedom, the Hayalet women reorganized their civilization. Here. What would eventually become a village. The call went out among the mountains and the caves, and the women met here, brimming righteous anger and ideas for how to respond. And to plot a path into the unknown, without men.\n\n\"Every surviving adult women in Hayalet was present. The Cadilar came to provide guidance and to chronicle the events. In the full flush of freedom, passions were high and ideals clashed. Some of the women counseled caution. They suggested climbing into the highest reaches of the mountains. Hiding forever. Other women counseled against this. They knew that the Ulus thirst for land and power would not end. Like the Hayalet, they would eventually learn about these sheltered valleys and streams hung in the mountains above the Valley. They would come. They would captured or kill the women. Hiding would delay, but not end, the threat.\n\n\"These bolder women suggested striking back. They recognized that the Ulus would never suspect an attack. They believed that, upon killing all of the men, the threat of the Hayalet was forever ended. They would be sloppy, unguarded. They suggested night attacks on the Ulus. Killing Ulus in their sleep, the same way the men of Hayalet had been slaughtered.\n\n\"Other women suggested that, once the Ulus learned they were under attack, they would realize that some Hayalet had survived. They would hunt them down. Kill them. Attacking was, in their view, just as dangerous as hiding.",
        "\"The warrior women responded that they would sneak into Ulus farms and villages at night. They would kill every witness. They would dress as ghosts, in case they were ever seen. They would be the spirits of the Hayalet Valley. And they would use fear of the unknown to defeat a stronger enemy. These women carried the day. They left the Cadilar here, in the mountains, to guard the girls and to build longhouses, while they climbed down the mountains into the Valley. They reaped a terrible vengeance on the Ulus, drove them from the Valley. That is a story you already know.\n\n\"What's more, their fame traveled to every corner of the known world, such that no man dared enter the Valley. Stories were told that the Ghosts of the Hayalet took no prisoners. And for hundreds of years, those stories have been true. We live here in the mountains, we raise what crops we can and shepherd goats. And we keep a watchful eye on the Valley below. No one is allowed to pass unscathed. As you caravan learned, to their detriment.\" \n\nFor a moment, I simply let the story soak into my bones. The admiration I felt for the Ulus began to drain, slightly. I looked around at the young, vigorous women standing in the circle around me, their hardy young daughters playing. These were warrior women. They had grasped the reins of power that I had sensed among the men of the Buz. They had taken up weapons, trained themselves, and brought death to the enemies that had humiliated their men. My heart burned suddenly with the freedom that they experienced every day. But even my excitement and admiration could not blot out a point of confusion that remained.\n\n\"If you are the Hayalet, with the Hayalet's blood running through your veins,\" I said and Orospu nodded, \"Then you must be hundreds of years old. How?\" \n\n\"Hundreds of years?\" Orospu asked, knitting her brow.\n\n\"As you said, no man of the Hayalet survived. There was no seed to replenish your stock. If you have captured other men, where are they? And are you still Hayalet if you've used their seed?\" Orospu laughed gently at my questions.\n\n\"You are a Cadilar,\" she said, \"You produce seed, do you not?\" Suddenly, an image flashed through my mind from the previous night. Gul, on her hands and knees, in front of Orospu, begging Orospu to fuck another warrior into her womb.\n\n\"So...\" I began, but Orospu spoke over me.\n\n\"As I stated before, the Cadilar, as priestesses, had taken a vow of chastity. However, our warrior women returned from battle triumphant, and lusty. The Cadilar wished to...reward our brave warriors in some way. What's more, we recognized the problem that you had diagnosed - no seed, no future. It wasn't so much that a decision was reached, but that nature took its course. The vow of chastity was not so much consciously eliminated as disregarded.\"\n\n\"The Cadilar began to fuck the women in the tribe?\" I asked in my blunt fashion. Orospu smiled and shrugged.\n\n\"The Cadilar and the women in the tribe decided to couple, and marry,\" she said, \"The Cadilar had been celibate for so long, and so devoted to their vows, that no one knew whether they even could impregnate a woman. The Hayalet were surprised, and delighted, to find that they, in fact, were fertile. In the years following the Massacre, babies were born here in these mountains. A first generation that had never known the soft life of the valley.\n\n\"According to the chronicles kept at the time, the Cadilar saw their role in the generation that experienced the Massacre, as the planter of an orchard. Cadilar would plant the seed and then watch as might trees grew through the generations and produced new fruit. In hundreds of years, men and women would grow abundant enough in these hold-fasts to return to the valley, and retake what was theirs.\n\n\"But it was not to be. We Hayalet were shocked to find that while the Cadilar were fertile, and could produce children, they could not produce male children. Daughters were born. Cadilar were born. But, for whatever reason, the seed of a Cadilar could not produce new men. The Hayalet could continue as a race, but it was a fundamentally changed race. A race of women and Cadilar.\n\n\"In the years that followed, the Hayalet learned many things. Cadilar are not as fertile as men. Most couplings will not result in an implanted seed. Women have fewer children when married to a Cadilar, as opposed to being married to a man. A woman may have only one or two children in her lifetime. It is a great rarity for a woman to have three. What is more, while men and women in the Old Times were born at a similar rate, roughly one man for each woman, that was not the case with the Cadilar. Nine out of ten children born to the Hayalet are female. The remainder are Cadilar.\n\n\"As a result, our marriages have changed to reflect the situation. A single woman does not marry a single Cadilar. There is a communal marriage. A marriage that contains one Cadilar and, on average, around 9 wives, though the actual number fluctuates. Every member is married to every other member. A Cadilar will then have anywhere from 10 to 20 children, only one or two of which will be Cadilar. And these large families, full of wives and daughters, live together in a longhouse. Like the one behind you.\" \n\nAs Orospu spoke, I looked around, as if seeing the village for the first time. No longer wondering where the men might be. This was the entire civilization. Women and girls. I never would have imagined that such a thing could exist. It was all so different from life in the far North. I could not even imagine how a society could function, without men in charge. Even knowing that I wished for more of a say in the affairs of the Buz, I never dreamed of a world in which men didn't have the greatest say. It sounded...lovely, but impossible. \n\nI turned back to Orospu in a slight daze. She was looking at me with a sort of amused countenance, like she was reading my thoughts. Something about her crooked smile cast my mind back to the night in the longhouse, when I'd first seen Orospu. \n\n\"So Gul and Otuzbes and the other women...\" I started.\n\n\"You heard and saw more than my wives imagined,\" Orospu said, answering my question before it was asked.\n\n\"They are you wives?\" I asked.\n\n\"And each others wives,\" she explained, \"We are all married to one another. We raise our children together.\"\n\n\"How many children?\" \n\n\"Let's see, with Gul's daughter, I now have 8. One is a Cadilar. But I am still relatively young. My wives are young and healthy. There will be more.\" I started counting up the numbers. Orospu with her wives and children, a total of 12 longhouses (I now counted). No more than around 300 people in this village. Maybe more if there were widows living in their daughters' homes.\n\n\"How many villages are there like this?\" I asked.\n\n\"Like this? No others,\" she said.\n\n\"So this is all that remains of the Hayalet?\" I asked. And she laughed.\n\n\"No, not at all,\" Orospu said, shaking her head, \"This large village with a palisade wall is, by far, the largest settlement of the Hayalet. That is what I meant. A dozen longhouses and defenses is large by our standard. But there are smaller villages of five or six longhouses throughout the mountains. There are families that live in isolated homesteads. There are even Hayalet living in the mountains on the other side of the river. We surround the valley. And yet we are invisible.\"\n\nI had no conception of the size of the valley. Nor how many villages or homesteads it might contain. I felt that Orospu would not be inclined to share that information. Still, she sensed the source of my curiosity.\n\n\"Our numbers are small. With warriors sometimes falling battle and sickness taking others, we have about as many Hayalet today as there were when we regrouped after the Massacre. We grow food when we can, we try to tend to our sick. Each drop of Hayalet blood is precious,\" she explained.\n\n\"The Buz have men and our women give birth to many more children. But we tread water as well. The North is not forgiving,\" I said. Orospu nodded.\n\n\"I am sure your tribe sometimes takes prisoners, women, to replenish the stock,\" she said, and I thought of Hapis, my uncle's wife, who had been captured in a raid as a child. I nodded.\n\n\"We do not force women to join our tribe, but we sometimes offer it to slaves that we liberate. It does not happen often. But we try to keep up our numbers when we can. It is even rarer to find a Cadilar. The Chronicles indicate that one of my ancestors, four generations back, was a Cadilar who wondered into the mountains by chance, was captured, and joined our tribe. But that is the last recorded instance. Then, just a few days ago, two Cadilar fell into our hands. You and your friend...\"\n\n\"Not my friend,\" My eyes flashed angrily at Orospu, \"My sworn enemy\" and I spat. Orospu raised her hands in supplication.\n\n\"I did not know,\" she said.\n\n\"I am Kedi of the Buz, a proud tribe with a proud god. She...Cilek,\" he name coming out like a hiss, \"Is a weak Kabile girl. I have said the words. I must kill her and four others of her tribe.\"\n\n\"You will not touch her here,\" Orospu said coldly, \"She is a guest here, as you are. I have guaranteed your safety. Others have guaranteed hers.\" My hatred of the Kabile burned as bright as ever, but I would not dishonor the people who had rescued me. I bowed my head.\n\n\"I will respect your wishes. Here,\" I said. Orospu's cold face warmed.\n\n\"Excellent,\" she said, \"Besides, she might not be Kabile much longer.\" \n\n\"What do you mean?\" I asked.\n\n\"You might not be Buz much longer,\" she said in response, and I flared with anger.\n\n\"One is born into the Buz. Even being sold into slavery did not change that. I will always be Buz,\" I raged. Orospu put her hands together soothingly.\n\n\"And so you shall. What I am saying, perhaps too subtly, is that the Hayalet are always in need of Cadilar. There are few of us, but we are necessary to sow the seeds of future generations. You are our guest here, and you may leave if you desire when the time comes. But we extend an invitation for you to join here. To have wives, to raise children, to be honored,\" Orospu said. Looking back, it seemed obvious that Orospu had been building up to this offer, but at the time, I was so overcome with my hatred from the Kabile and for Cilek, that I hadn't realized what she was saying. I was caught flat-footed, off-balance.\n\n\"Abandon my tribe and become a Hayalet?\" I asked after a long minute. I began to shake my head.\n\n\"Do not answer now,\" Orospu said, \"My wives, and the women in a neighboring longhouse, have just returned from their raid. And brought you back. Two other longhouses sent out patrols last night. You cannot leave until those patrols return and another two longhouses set out. The next two longhouses will take you, blindfolded, back to the Valley. If you determine that that is what you actually want. But for now, you will live with the Hayalet. And, in doing so, you can decide whether you want to stay with us.\" \n\n\"I do not need your permission, as a guest, to leave. I will follow streams down into the Valley and leave tonight,\" I said. Orospu's eyes closed to slits.\n\n\"We cannot allow you, or anyone, to know the paths that lead out of this village. Because they can lead right back into it. You will be sworn to secrecy if you choose to leave this place, on the honor of our Gods and yours. Until that time, eyes will be on you at all times. You cannot escape. If you leave, you will leave when we allow it,\" Orospu said finally. So I was still a prisoner. At least for a little while. I would not argue with her, not now.\n\n\"How long?\" I asked.\n\n\"How long for what?\" Orospu asked.\n\n\"How long until the raiders return, and then next patrol heads out? How long before I can leave these mountains and begin my trip home, to the Far North, to be with my people?\" I said. Orospu sighed.\n\n\"The next patrol will leave in three weeks,\" she said, and I felt my heart lurch. Three weeks! It would be early winter by then! I was just about to protest when Orospu suddenly stood. \n\n\"Wait a moment...\" I demanded, thinking that Orospu was just going to leave me there. \n\n\"Ah, good, they have heard that you awakened and have arrived!\" Orospu said. Who was here? And why? I turned to follow Orospu's line of sight and I saw three women standing just a few yards away from the longhouse. One I recognized instantly as Cilek. She was standing between two other women, who I did not recognize. They had not been in Orospu's longhouse. But they were at least as beautiful as any of the women who had been. They looked quite similar to one another. They were young, perhaps just turned twenty. They were short and lean with long, straight, almost black hair. One had her hair cascading freely over her shoulders, the other had it tied back in a ponytail that fell down to the small of her back. The two women had light brown skin, large eyes, and small noses. They had thin necks, wispy arms, and delicate legs. Their breasts were small and high on their chests, their stomachs were flat and thin, their hips flared more widely than their breasts. They walked with purpose and were smiling gently.\n\n\"Omuzlar, Geri,\" Orospu said, \"I introduced you to Kedi, a Cadilar of the Buz tribe from the far North. Kedi, this is Omuzlar,\" Orospu gestured to the woman with free hair, \"and Geri,\" she gestured to the woman with the ponytail, \"They are Hayalet. And they are the former wives of my late friend Olu.\"\n\n\"Welcome to our village,\" Omuzlar said.\n\n\"We are gratified to have new Cadilar here, with us,\" Geri said. I nodded, but I was barely thinking about them or what they said.\n\n\"Why is she here?\" I said, pointing rudely at Cilek.\n\n\"I am sorry to hear about your friend, and your wife,\" Cilek said, looking at the other women and not speaking to me.\n\n\"Alas, it was her time,\" Orospu said, gazing up the clouds, \"the Gods gave her 58 years. Neither to much, nor too little.\"\n\n\"Whatever years the Gods grant,\" Geri and Omuzlar stated in unison, indicating that this was some sort of ritual statement. \n\n\"They are here,\" Orospu said, turning to me, \"Because I asked them to be.\"\n\n\"I don't want to be around the Kabile girl,\" I said. Looking at Cilek in the day light, freed from her chains, I found that I could barely contain the rage I felt towards her, towards her tribe. I know that some of it was just fear and frustration at being stuck with the Hayalet for the better part of a month. But it didn't change the fact that Cilek had defiled me, and I had absolutely no desire to spend even a moment in her presence.\n\n\"Remember your pledge,\" Orospu said quietly, after sensing my surging rage. I was a woman of honor, I would respect the vow that I made. But I saw no reason to treat Cilek with anything other than the disdain I felt for her.\n\n\"She is safe,\" I hissed.\n\n\"Good,\" Orospu said louder, \"Now, I have asked Omuzlar and Geri to be here because they have a keen interest in your presence here. I will allow them to explain.\" Omuzlar and Geri looked at one another, but then both began to speak. Omuzlar spoke louder and, Geri fell silent.\n\n\"As Orospu stated, our wife and the Cadilar of our family, Olu died three months ago,\" Omuzlar's final words came out slightly choked. I saw Geri bite her lower lip and rub her eyes with her thumb and forefinger. The passing of Olu had, evidently, caused them pain which they still felt. \n\n\"Our family consisted of Olu and ten wives, including me and Geri,\" Omuzlar explained, \"Three of those wives have decided to retire from active participation in our marriage. They will live as honored elders in our home, but they are beyond child bearing years and will no longer fight. Still, that leaves seven fertile wives. And no Cadilar to provide us with seed. There are a sufficient number of us to remarry.\"\n\n\"We have been waiting,\" Geri said, cutting in, \"Waiting for negotiations to occur, to find a new Cadilar from another village, of farmstead. But finding a new Cadilar for an already-formed family can be difficult. There are alliances and political considerations to make...\"\n\n\"And there is always consanguinity to consider,\" Orospu interjected, \"We are a small civilization, with few Cadilar. Bloodlines can become entangled without care and thought. A Cadilar must consult the Ancestor Books before agreeing to any marriage.\"\n\n\"What does this have to do with me?\" I asked, again blunt, \"I am sorry your wife is dead. But it does not concern me.\" I saw Omuzlar's eyes flash with anger. Orospu held up her hand soothingly.\n\n\"You, and Cilek, provide an opportunity,\" Geri said, \"You have no existing marriage alliances. You have new blood from far away lands...\" Omuzlar cut in now.\n\n\"We are here to convince you to join the Hayalet. One of you could marry into our family, be our Cadilar, and providing us with daughters and warriors,\" she explained. Even before Omuzlar finished speaking, I was shaking my head. I wasn't staying with the Hayalet. I wasn't marrying anyone. And I wasn't going to give anyone daughters.\n\n\"You would want me?\" Cilek said, her cheeks red with flattery.\n\n\"Every family dreams of a young, beautiful Cadilar,\" Omuzlar said, turning and smiling at Cilek. My lip curled back in disgust. How could she consider leaving her tribe? But then, I guess if I was Kabile instead of Buz, I would want out as well. I was a little surprised to see Geri appeared to have a look of disgust as well.\n\n\"Did you love Olu less because she was old? Because you did not find her as beautiful as these girls?\" Geri asked of her wife. Omuzlar rolled her eyes dramatically.\n\n\"Olu was a fine wife and a productive Cadilar,\" Omuzlar said, \"I never said anything otherwise. I was complimenting our guest.\"\n\n\"She always loved you more, and it never made any sense. You never honored her...\" Geri began. I sensed the long-running tensions and fissures that ran between Omuzlar and Geri. While I knew little about them, I could sense Geri's loyalty, even to a dead woman. I could not help but respect it. Still, Orospu did not seem pleased.\n\n\"Is this why you are here?\" Orospu asked, \"To bicker and air your family's private matters before our guests?\" Geri, chastened, shook her head. Orospu softened, \"Excellent. Well, why don't you two take our guests into my longhouse. It is empty now, and you can all be comfortable.\" Both Geri and Omuzlar nodded their heads. They turned towards the door of the longhouse and walked inside. Cilek, without protest, entered behind them.\n\n\"I am not going to stay here,\" I said to Orospu, when the others were inside, \"I don't see any reason to listen to their persuasion. I am a Buz. I will return to the North as soon as I am permitted to leave.\" I spoke coolly, but not rudely. These were simply facts. Nothing was going to change my mind. Orospu smiled and gave out a short, gentle laugh.\n\n\"Oh Kedi...you're here for three weeks, no matter what. I know you say you're leaving. And I won't stop you if you want to leave. But going with Omuzlar and Geri isn't going to hurt you in the meantime. If you allow yourself, you might even enjoy your experiences here. Now go,\" Orospu said, and she pointed to the door of the longhouse. I looked around briefly, realized that there really wasn't anywhere for me to go if I decided to resist, and then I gave in. I shrugged a little a sighed, then threw open the animal skin over the door, and ducked inside.\n\nThe flap closed behind me and it took a few moments for my eyes to adjust to the dark. I blinked several times and the torches came into focus. I recognized the inside of the longhouse, though I was now standing on the opposite side. There were no people on the benches, no one sleeping on the mats. No one was present, except for Cilek, Omuzlar, and Geri. And they were rapidly disrobing. \n\nMy eyes grew wide as the thin, white fabric the women wore fell from their bodies. Geri turned as she disrobed and looked at me. A bare smile emerged and she pointed at me.",
        "\"Good, you're here,\" she said. Omuzlar didn't even look up.\n\n\"Get undressed,\" Omuzlar said.\n\n\"No,\" I said simply. Omuzlar now looked up, her eyes flashing angry. \n\n\"It is tradition here,\" Geri said, soothingly, \"We do not wear clothing in the home during the day. The children are turned outside to play. Only the adults in the family are present. And we are comfortable and naked here.\" Cilek was already naked, barely seeming to notice that I was there. She was so happy to cast off her identity, just as she'd cast off her clothes. But I was a Buz.\n\n\"I prefer to be dressed,\" I said.\n\n\"It is unbearably rude for you...\" Omuzlar said, but Geri interrupted her.\n\n\"We do not wish to make you uncomfortable,\" Geri explained, \"But this is a custom. And I ask you to respect it. This is not your home country. This is the Hayalet.\" Geri spoke soothingly, but with finality. Again, I could not help but respect her, this time for her control and firmness.\n\n\"Let no one say that a Buz does not understand what it means to be a guest,\" I said. I began pulling at my robe, finding the places where it was held together. Eventually, I got the fabric loose and felt it fall to the ground around me. I did not look down at my body, instead, I looked across the room to Geri and to Omuzlar, who were already naked.\n\nAnd beautiful. \n\nThe two women looked even more similar than they had clothed, somehow. They both had small, but high firm breasts with small, pink nipples. They had flat, gently-muscled stomachs and firm, fleshy asses. I could see their cunnies now. Both women were entirely devoid of hair on their bodies. The lips of their cunnies simply tight, pink slashes. More than ever, Geri's long ponytail was the only distinguishing feature. I saw Cilek (who I noticed as still attractive, despite myself) staring at the women with undisguised lust. I attempt to comport myself with greater dignity. But it was difficult.\n\nGeri and Omuzlar both seemed infinitely comfortable in their nudity. And with ours. For the first time in my life, women gazed upon my cock without any sort of shock or confusion. They saw me (and Geri's eyes seemed to linger on me in particular), but seemed to regard me as...natural. I felt a bit thrown off by their casual attitude and found that I was mirroring it without realizing I was doing it. Instead of seeking to cover myself or sink into the background, I walked across the room casually and found a comfortable seat. The other women followed and soon we were all sitting on the floor in the center of the longhouse, near where the fire would be lighted at night.\n\nWe sat for a moment in silence and I casually glanced at the three women around me. Their lithe, youthful bodies radiating heat that I could actually feel warming my skin. I noticed the gentle curves of their bodies and could smell the delicate perfume of their natural scents. I willed my cock not to stir, as best I could, wondering if that would be rude. But it was difficult. The women were entrancingly beautiful. And they were looking at me as well. I spoke, more to distract myself from the women that because I really wanted an answer.\n\n\"So...what have you to say to us, to convince us to stay,\" I said finally. Geri and Omuzlar looked at each other quickly, shy smiles breaking out on their faces. They didn't speak.\n\n\"What?\" I asked. The two women laughed gently, but without malice. I looked at Cilek, wondering if she was playing some sort of trick on me with Geri and Omuzlar as her accomplices. She shrugged and looked back at the women.\n\n\"What?\" I asked again, my voice annoyed. Geri lifted her hands placatingly.\n\n\"We apologize,\" she said, \"We do not mean to be rude.\"\n\n\"Oh?\" I said, looking at them blankly. They giggled again.\n\n\"Sorry,\" Omuzlar said, \"We are warriors and not much for persuasion. We are prone to action.\"\n\n\"What does that mean?\" Cilek asked, and Omuzlar turned towards her, smiling wolfishly.\n\n\"She is so glad you asked,\" Geri said playfully. Omuzlar did not respond herself. Instead, she rose up on her hands and knees. We were all sitting in a loose circle, Geri to my left, Cilek to my right, and Omuzlar directly across from me. Omuzlar was only two or three feet away from me, and as she got up on all fours, she invaded the small circle separating us. For a moment, I thought she was going to crawl towards me. I could see her shoulder's rising and falling, noticed her firm breasts brushing her arms as she moved. \n\nOmuzlar veered sharply to her left, my eyes followed her as she moved. In half a second, her knees were straddling Cilek's legs, one hand was on either side of Cilek's hips. Omuzlar's head dropped instantly, her long, dark hair cascading over Cilek's lower body. Cilek's half-hard cock suddenly disappeared inside of Omuzlar's body. It happened so quickly, Omuzlar was so expert. She simply tilted her head to the side, let the hardening tip of Cilek's cock press against her lips and then slipped the whole things into her throat. Through her hair, I could see Omuzlar's chin pressing into Cilek's balls.\n\n\"God's wounds!\" Cilek yelled in a breathless burst. She was knocked back slightly, throwing her arms back and catching herself from falling down. She was looking down at Omuzlar, shocked and wide-eyed. Bu she didn't push Omuzlar away. She just watched, as I did. I could see Omuzlar's cheeks bulging, could even hear her tongue as it swirled around on Cilek's half-hard cock. \n\nAfter a few moments, the full gravity of what I was watching dawned upon me. Omuzlar was sucking Cilek's penis. Just inches away from me. I could see them, hear them, smell them. It was so abrupt, so unexpected. And surprisingly hot. Too hot, in fact. I'd barely been able to control my cock to this point, I could feel it plumping against my leg. Both to confirm that I was really seeing what I was seeing, and try to gain some sort of control over my spiraling arousal, I turned my eyes away from Cilek and Omuzlar. I faced Geri, wondering if she was seeing what I was seeing.\n\nBut as I turned, I was startled to find Geri's face, just inches from mine. I jumped slightly and gasped in surprise Geri instantly took advantage of my slightly opened mouth. I felt her hands, one grasping at my waist and the other wrapping around the back of my neck. The distance between our face faded away, and before I had overcome the shock of seeing Geri, I could feel her warm tongue slip between my lips. I felt her soft lips melt into mine at the same instant that her tongue brushed gently against my teeth. Her tongue plunged deep into my mouth, tumbling over my own tongue, which rushed to meet her instinctively. Geri's hands grasped me gently, but firmly, as her tongue swirled against my own. I tilted my head to the side slightly, moaning into Geri's mouth and allowing her tongue more deeply inside of me. I felt Geri's body move closer to mine, felt her hard nipples pressing against my breasts. \n\n\"No!\" I said, in a muffled voice, as best I could around Geri's tongue. My hands reached forward, one pressing against Geri's hip and the other against Geri's soft breast. I pushed her, but not overly harshly. Just as quickly as she had started, Geri pulled away from me. I felt her hands slip from my neck and my waist, the warmth of her breasts moved away from me.\n\n\"I am sorry,\" Geri breathed, almost breathlessly. It was only when she apologized that I realized what I'd done. A beautiful woman had kissed me. And what a kiss! It was only after it broke, and the full force of it hit me. Geri's soft, firm lips. Her delicious tongue. Her warm breasts. It was indescribable. And I'd pushed it away! For a moment, I couldn't explain myself.\n\n\"No...don't be sorry,\" I said, and I almost asked her start kissing me again. I could hear the slurping sounds of Omuzlar sucking on Cilek's cock just inches from my body. I could perhaps have that as well. \n\nBut something, in the back of my mind, was still holding me back. I looked Geri's beautiful face, her cheeks now slightly reddened with the embarrassment of rejection. And I remembered what she was doing. What Omuzlar was doing with Cilek. They were convincing us to stay. To abandon our tribes and become Hayalet. And their supple bodies were far more persuasive than any statement they could have made. Cilek was already weakening, as a Kabile girl was bound to do. But I was Buz. I recognized that while I was fully capable of resisting any arguments Geri might make. However, her body might be irresistible. And so, almost purely on instinct, I had rejected her. Although my body cried out to reverse course now, I couldn't. I had to stop now. So that I could return to the North. \n\n\"It is not right,\" I said finally, \"I do not intend to stay.\" Geri smiled, obviously relieved that my rejection had not been personal. She shrugged (beautifully).\n\n\"I don't mind. I am no longer married to a Cadilar. My other wives do not care. We are just having fun,\" she said, and began to lean towards me again. I put up my hand, pressing against her sternum.\n\n\"I must return home,\" I said, looking deeply into her dark eyes. Geri bit her lower lip and looked at me intently. Finally, she ran her hand through her own hair, tugging at her ponytail, and she nodded. She understood. She leaned back slowly and then sighed in disappointment. I let out my own sigh, in relief. I had resisted temptation. \n\n\"It could have been a good time, is all,\" she said wistfully, but not angrily. It might have been better if she had been angry. I might have regretted it less.\n\nRegardless, for a moment, I sat in silence, congratulating myself on my fortitude and doing my best to avoid Geri's gaze. But, after some time, I realized that she was no longer looking at me. Geri was looking past me. To the other two women in the longhouse. I'd nearly forgotten about them. But now, I could hear them. Hear the slurping sounds of Omuzlar's mouth. I could hear Cilek's moans.\n\nI knew that I should just ignore it. Cilek was my enemy. And Omuzlar was trying to seduce me, just as much as Geri had been. But Cilek's sounds were so...exciting. And the heat from their bodies was so intense. I was not made of stone. I needed to find out what was happening. What harm could there be in simply watching?\n\nI pivoted on the floor and pushed myself backwards so that I was sitting next to Geri. She glanced at me for a moment, smiled, and then turned back to the scene in front of her. I followed her lead, turning towards the sounds of lovemaking. I Involuntarily groaned.\n\nOmuzlar was still face first in Cilek's lap, but the women seemed to have warmed to the task. Cilek's arms were thrown back behind her, her palms grasping at the rushes on the floor. Her head was thrown back, her long blonde hair cascading over her shoulders and her arms. Her mouth was open in a silent moan. Cilek's back was arched, her breasts sitting high on her chest, her hardened nipples towards the ceiling. I saw them shaking slightly as Cilek's body trembled. Cilek's legs were spread wide, her knees bent. Omuzlar was was now spread out on the ground, her knees in the dirt with her ankles crossed. Her large ass bubbled up from the ground. Omuzlar's breasts were pressed into the dirt. Her arms were wrapped underneath of Cilek's knees, her fingers grasping at Cilek's thighs. Omuzlar's eyes were closed, serene.\n\nThe only thing that was moving was Omuzlar's head. It was bobbing up and down rapidly into Cilek's lap. From my angle, I could not see much. But I could tell that Cilek's cock was now completely hard. I could also tell that Omuzlar was more than capable of taking all of it at once. Omuzlar's mouth was slipping rapidly up and down Cilek's shaft, her thick, full lips first wrapped around the tip of Cilek's cock, and then a second later kissing Cilek's full balls. Omuzlar's saliva was dripping down Cilek's hard shaft. The longhouse was filled with wet, slurping sounds as Cilek's cock slipped in and out of Omuzlar's throat.\n\nI knew that Cilek was a Kabile girl and I knew that I hated her. But, as it had been around the fire with the men of the caravan, I could not deny her beauty. And, if anything, Omuzlar was even more alluring. And she clearly knew what she was doing, her movements steady and fluid. The scene was sexy and exciting. And I knew that Geri felt the same way. I could sense her shifting uncomfortably next to me, even if I didn't dare turn away to look. For my own part, I felt my stomach flutter and my mouth watering. I tried to ignore my cock, by I could feel it aching, hard.\n\n\"Gods help me!\" Cilek moaned after I had been watching her, almost in a trance, for several minutes. Cilek's elbows, already wobbly, seemed to give way, and she collapsed backwards onto the ground, her breasts spreading out on her chest. Her back arched, and her hips thrust up into Omuzlar's face. Omuzlar did not even seem to notice, her head continued to bounce in Cilek's lap, even as Cilek began to moan louder. Cilek's hands rose from the ground, her hands grasping at Omuzlar's hair.\n\n\"Fuck!\" Cilek screamed, her eyes clenching shut and her hands forming into fists. Cilek's hips dropped down, at the same moment that Omuzlar, in her rhythm, was pulling her head back. Cilek's hard cock slipped from between Omuzlar's lips. At that exact moment, Cilek came. Cilek body was shaking, her muscles all clenched. And I could see her cock seizing. I watched as the thick globs of seed pulsed from Cilek's cock and splashed against Omuzlar's face. Omuzlar didn't seem surprised. Her eyes closed, her mouth opened. But Cilek's cock pulsed wildly, splashing seed across Omuzlar's eyes, her nose, and her cheeks. Finally, with a shuddering gasp, Cilek's cock spurted the last of her seed, and her body went limp on the ground.\n\nAs soon as Cilek's orgasm subsided, Omuzlar popped up onto her knees and opened her eyes. Her face was frosted with seed, and some of it was dripping off of her chin and nose onto the dirt floor. Omuzlar began to crawl over Cilek's prone body, moving quickly but smoothly. Seed dripped from her face as it glided over Cilek. I saw droplets of sperm land on Cilek's cock, then her belly, between her breasts, and then onto her throat. Cilek was breathing deeply, her eyes closed. I am not sure she even knew that Omuzlar was hovering on top of her. But, in a moment, Omuzlar's face had dropped down onto Cilek's. Their lips came together, Cilek's mouth opened instinctively, and the women's tongues splashing together. Cilek's chest was still heaving with exertion, her nipples pressing against the undersides of Omuzlar as they kissed more and more passionately. Cilek's face was now smeared with her own seed, and it dribbled into her mouth as the two women messily kissed.\n\nI groaned and squeezed my legs together, feeling the delightful pressure against my cock as Omuzlar and Cilek began to lick and suck on one another's faces, swallowing down Cilek's seed and leaving their faces glistening. For the second time since I was captured by the Hayalet, I was watching beautiful women have sex, and I was again overwhelmed by the lust that it inflamed inside of me. I could hear Geri breathing sharply and, out of the corner of my eye, I could see her hand moving rapidly. I didn't dare look, because I knew that Geri was pleasuring herself. In fact, I could smell her arousal. The same scent my cunny made when I was excited. I did not know that I would be able to control myself further.\n\nAnd so, I kept my eyes focused tightly on Cilek and Omuzlar. They were still kissing passionately, though their faces were now clean. Cilek's arms were now wrapped around Omuzlar's waist, Omuzlar's elbows were planted on the floor on either side of Cilek's head. Their bodies were pressed tightly together.\n\n\"Your cock is still hard,\" Omuzlar whispered and Cilek giggled.\n\n\"I need more,\" Cilek said. Cilek squeezed Omuzlar more tightly and then rolled. Rolled towards me and Geri. Omuzlar giggled as Geri and I scrambled backwards to avoid them. I settled back onto my knees and Geri landed on her ass, her legs spread, as Cilek and Omuzlar settled onto the ground. Their bodies were still tight together, their arms wrapped around each other. Cilek's cock was pressed against Omuzlar's slick cunny. Omuzlar moaned and kissed Cilek's neck. Cilek turned her head, giving Omuzlar better access to her throat. Cilek's eyes were open, she looked towards me, then her eyes flicked over to Geri. At the same time, she began to grind her hips, letting her hard cock slip through Omuzlar's pussy lips, making Omuzlar shake.\n\n\"Geri, please feel free to join in,\" Cilek said, her eyes flickering back to me, \"Just because Kedi can't get it up, doesn't mean you have to play with yourself.\" I huffed sarcastically and rolled my eyes. Self-consciously, though, I turned to look at Geri. I saw her eyes cast down, looking at my cock, which was sitting up high between my thighs. I heard a loud groan and turned back to Omuzlar, I saw that Cilek had thrust forward, pressing her cock into Omuzlar's willing cunny. Cilek's eyes were slits, but she was still looking at me.\n\n\"Oh look, she is hard,\" Cilek gasped, \"But she isn't looking at you,\" Cilek said to Geri, \"She is looking at me,\" Cilek's arousal had apparently made her bold. I felt my cheeks grow red, I wasn't sure if I was angry at Cilek's presumption, or embarrassed by the fact that what she was saying was true. Cilek had aroused me.\n\n\"Its for the best,\" Cilek said to Geri, \"A scrawny little Buz bitch couldn't possibly satisfy you anyway.\" Then Cilek giggled and turned back to Omuzlar, burying her face in the Hayalet woman's neck. \n\nIt wasn't just the last thing that Cilek had said. It was also the strange, disorienting circumstances I found myself in. It was the sights, and smells, and feelings of arousal that were swirling around me. It was Geri, stimulated and willing, sitting right next to me. It was the slow build up of excitement and the memory of Geri's kiss on my lips. It was all of that and more that pushed me. But that Kabile sluts disrespectful statement stirred something else inside of me. My pride. I was twice the woman, the...Cadilar that she was. And not Kabile girl could ever compare to a Buz girl in any respect, certainly not in lovemaking.\n\nNo decision was made. The rage and the determination lifted me up on my knees while blotting all thoughts out of my mind. I barely even noticed that Cilek and Omuzlar were even there. I simply turned towards Geri. She had seen me rising up and turned slightly towards me. I pounced on her, my hands landing on her shoulders. She let out a surprised yelp as I caught her off balance and she tumbled onto her back. My hands slipped down Geri's body as she fell, my palms running across her shoulders, her breasts, and over her nipples. Her flesh was hot and firm. Her nipples felt hard against my skin. She was at least as excited as I was. \n\nI kept my hands on Geri's breasts as I stretched out in front of her. My hair trailed across her body, draping over her arms and her belly. But my eyes kept traveling down, I saw her wide hips and the pink, glistening slash of her cunny. I dropped my hips down, keep my hands on Geri's breasts. As my head moved closer and closer to her body, Geri's scent filled my nose. Earthy, humid, almost sweet. My mouth watered. \n\nGeri's legs spread wider as I dropped my head between them. Her hands rose from her side, her fingers sinking into my hair, guiding me towards her cunny. In a moment, I was face-to-face with Geri's cunny. I could see how aroused she was. She was dripping fragrant liquid down through the crack of her ass, her scent was overwhelming. Her small, hard clitoris (the first I'd ever seen so closely), looked like it was throbbing harder than my cock. Her hips thrust upwards towards my face and Geri made a gentle, mewing sound. I remembered that she had been playing with herself until I pounced on her. She was probably in agony. ",
        "I had no idea what I needed to do to please a woman. I just knew that I desired Geri's body. And I desired to pleasure her more than a Kabile slut could pleasure her wife. \n\nI closed my eyes, opened my mouth, and leaned forward. Her scent was thicker now, deeper. I felt my mouth press against Geri's soft cunny lips. They were slick with her juices. My tongue slipped from between my lips, and pressed against Geri's soft skin. Her thighs were close to my ears, but I could hear her gasp. And I could taste her. I groaned as well. Salty, warm, and sweet at the same time. I made my tongue flat, broad, and soft, and dragged it up the length of Geri's pussy lip, letting the liquid collect on my tongue, and then swallowing the slick liquid down. I groaned as I swallowed down the flavor. My hands squeezed on Geri's breast, the soft flesh molding between my fingers. \n\nBecause I did not know what I was doing, and because she tasted so lovely, I simply chased Geri's flavor. My tongue swirled around on Geri's wet cunny. I dragged my tongue, thick and soft up and down Geri's puffy pink cunny lips, sucking her slick liquid into my mouth and immediately swallowing it down. He skin was so warm, and so soft, if felt like my tongue melted into her. I moaned as each droplet of Geri's juices dribbled across my tongue and down my throat. I felt like her essence was slipping into me, warming my stomach and then radiating out to the rest of my body. I started to lick faster, more forcefully as I grew more excited. I bent forward further, feel my cock pressing against my belly as I licked.\n\nBut, because I didn't really know what I was doing, I tried to be attentive to every little movement of Geri's body, to ferret out any hints of what felt good, or what felt bad to her. I listened for every sudden gasp of breath and felt for every tremble of Geri's thighs. It wasn't easy, I was overwhelmed by desire. But I noticed that, Geri's muscles grew tense as my tongue licked up the wet length of her cunny and then rested, warm and soft, against her hard clit. I felt her hands squeeze at my hair as my tongue swirled around that little nub of flesh. I recognized that, in a way, Geri's little clit was a bit like my cock. I thought of what felt good when I touched myself (or, more shamefully, when Cilek had touched me) and I tried to mimicking those motions with my tongue.\n\nAfter my first wild, but enthusiastic, minutes of lapping at Geri's pussy and tasting her juices, I settled into a groove, understanding what Geri wanted, and reacting to her movements. I wrapped my lips, softly but tightly, around her hard clit. I pushed my tongue out, letting it lap up and down the length of it, sometimes swirling, at a quick, but not torrid, pace. Sometimes, I would drop my tongue down deeper, pressing inside of Geri's tight cunny, and tasting her juices as her muscles contracted around me. Then I would slip back up to her clitoris, sucking and licking on it.\n\nMy face was pressed tightly into Geri's body. If I glanced up, I could only see the undersides of her breasts and, between then, the bottom half of her face, her teeth biting at her lower lip. This, alone, was beautiful. But really, I didn't need to see, to know the effect I was having. As I learned what I was doing with Geri's body, I could feel her reacting. With each passing moment, her legs trembled more, her fingers clenched more tightly in my hair, and the moans that welled out from her throat got louder and louder. Even her scent grew more intense. For my part, my cock ached against my belly, my mind still devoid of anything but an overpowering lust.\n\nI didn't even realize what was happening until I was in the middle of it. I hear Geri let out a long, low breath, almost like a pained sigh. Tied to that was a high pitched yell, almost a shriek. Her hands pulled at my hair and her thighs closed around my ears, shaking wildly. I continued to lap at her clit, shaking my head side to side to covering her most sensitive spot with my entire tongue. Then Geri's hips began to buck up, into my face. And I realized I'd done it! I'd made Geri cum. I could feel the muscles in her body go rigid, heard her squealing with delight, even through her thighs. \n\nGeri collapsed backwards onto ground, I could see and hear her chest rising and falling rapidly. All of her muscles had released. I felt Geri's hands on my forehead, pushing me away. I realized that, like my cock, Geri's clit had become sensitive after her orgasm. I pushed away from her, and she sighed. I sat up on my knees. My face felt sticky with Geri's juices and my own saliva, my tongue slightly numb. I looked down at Geri's cunny, the pink lips split open now, her clit glistening with my saliva. I looked at her eyes. She was staring at me mischievously, still biting her lower lip and now, raising her eyebrows.\n\nI could still hear the sound of sex, however. And, for a moment, I was confused. It sort of flooded back to me. What had been happening before I'd pounced onto Geri. Cilek and Omuzlar. They were still next to me, in the dirt. Omuzlar was on her back, her legs spread and her knees hitched up. Cilek was kneeling between her lover's legs, her hands on Omuzlar's hips. Cilek's neck was bend, she was looking down at Omuzlar's body, smiling and panting. She was thrusting her hips in and out of Omuzlar's body, and even in the low light I could see Cilek's cock splitting Omuzlar's pink pussy lips. In and out. Their breasts bounced in unison to the motion of their thrusts. They didn't seem to notice that Geri and I were there.\n\nNow I turned back to my own cock, still achingly hard. It was looking up at me, glistening with pre-cum. I had, to my immense surprise, satisfied Geri. That had been my goal. But achieving that goal had done nothing for my own arousal. My eyes flickered up towards Geri again, she was turned and watching Cilek and Omuzlar, but sensed me looking. She turned back me, her eyes heavy, looking relaxed and sated.\n\n\"Is it...is it still sensitive?\" I asked, glancing down at Geri's pussy. She giggled and sat up slightly. I gasped as her hand reached forward quickly, and before I knew it her fingers were wrapped around my hard shaft. She stroked my cock a couple of times gently and I felt my knees weaken. I could feel the silky soft skin of her palm gliding up to the tip of my penis, and then down just as easily. My pre-cum lubricated her way. She sensed the wetness on her hands as well. She switched hands now, moving her other hand onto my shaft, stroking it even more gently than before. Her other now-wet palm, moved back to her face. I saw her tongue splash out, lapping at her palm and tasting my precum. She moaned at the flavor.\n\n\"Very sensitive,\" she said languidly and she moaned at the taste of my precum. I must have looked disappointed, because she laughed again, \"Sensitive is good,\" she asserted, \"I like to cum in bunches.\" \n\nAnd with that, her hand wrapped more tightly around my cock, and she pulled me towards her, and down. I groaned, but could not resist the gentle pressure of Geri's hand on my cock. My hands dropped down into the dirt on either side of Geri's breasts. Geri's legs were spread and I could feel my cock bounce against her hips. But Geri guided me expertly, keeping her hand on my cock. In a moment, I felt the tip of my cock press into Geri's tight pussy lips. We both gasped at the same time, and I looked at her, her eyes as fiery as my own. She nodded quickly, and moved her hand out from between our bodies. \n\nI sort of melted into Geri at that point. My hips dropped down and forward and my eyes closed as I felt my cock slip inside of her. I was so hard, and Geri's body was so deliciously wet and ready, that there was nothing like pain or even resistance. I just felt her tight, warm pussy lips wrapping around me, sucking me inside of her. It was like her whole body was wrapping around me, squeezing me tightly, but gently. As my hips came to rest against Geri's, my eyes rolled back in my head and a groaned poured out of my mouth. I leaned forward now, my arms moving so they were on either side of Geri's head. I buried my face in Geri's neck, and felt my breasts pressing against Geri's. Her nipples were still hard and I could feel them pressing into me, my breasts did the same to her.\n\nFor a moment, I just rested there, savoring the hot feeling of Geri's body caressing me. It wasn't as though the tension that had been building inside me was gone; I certainly hadn't cum. But it was like I was soothed in that moment. But Geri wasn't willing to let me rest inside of her. After a few moments, I could feel Geri's hips thrusting up and back on the floor. I could feel her cunny pull back, my cock slipping out, and then pressing back in. The withdrawal was a delightful agony, and the return a mind-bending relief. I needed more of it.\n\nI placed my palms in the dirt on either side of Geri's head, pushing myself up slightly. My breasts now hung just above Geri's, my nipples tickling her flesh. I bent my head down, closing my eyes and tilting my neck. I felt my lips crashed into Geri's, a little too excitedly, a little too rough. But Geri just giggled, her mouth opening and allowing my tongue to pour into her teeth. Her tongue rose to meet me and soon, they were swirling wildly together, pouring out of our mouths and messily dragging across our lips.\n\nAt the same time, I had began to thrust. I pulled my hips back, letting my cock slip out until just the very tip remained in Geri's body. Geri's body squeezed me tightly, the whole way out. She gasped as her body released me, only just conceding each inch of me. I could barely stand to be outside of Geri's body. The cool air of against my now-sopping skin was excruciating. I plunged back inside of Geri, feeling my balls slap against her ass and feeling her groan into my mouth. \n\nGeri threw her head back and my tongue slipped from her mouth and dragged down her chin. I didn't want to pull my cock out just yet, I wanted to be deeper insider of her. I sat up higher on my knees, grasping my hands around Geri's hips. Soon I was kneeling between Geri's legs, my body perpendicular with hers, and my cock buried more deeply inside of her than ever. I rotated my hips inside of Geri, feeling her insides caress me. My balls ached against Geri's asshole. My breasts were sensitive as well and one of my hands moved from Geri's hip, grasping at my own breast. I squeezed my nipples for relief, groaning at the cascading sensations.\n\nMy eyes fluttered down to Geri's body, it looked so beautiful stretched out in front of me. Her wide hips, her narrow waist, her small breasts spread out on her chest. I could hear Geri groaning in time to my thrusts, feel her body tremble to my rhythm. But, to my surprise, she wasn't looking at me. Instead, her head was turned to the side, looking at Omuzlar, who was lying next to her, panting and moaning as well. I looked at Geri's thin, elegant arm reaching across the distance between them. Omuzlar was doing the same. Like me, Cilek was between her lover's legs, perpendicular with her body. She was thrusting wildly, looking down at Omuzlar's body. Omuzlar and Geri were looking at one another, holding hands. \n\nPerhaps I should have thought that strange, the two women holding hands while we, strangers in their land, pumped them full of seed. But, as it had from the beginning, my hatred of Cilek had clouded my faculties. Here, in the same position as Cilek, and deeply occupied in the same task, I jumped instantly to the conclusion that Cilek and I were in some sort of competition. That we were in a race to pleasure our lovers.\n\nI instantly increased my pace, thrusting in and out of Geri's body, no longer loitering inside of her. Geri bit her lip and nodded as I began to move, and I knew I was doing the right thing. Without really trying, I found that I slipped into same rhythm as Cilek, we were moving in and out of our lovers at the same rate. I could hear the wet sounds of our cocks moving into wet cunnies. Omuzlar and Geri continued to look at each other, their eyes smiling and their mouths open in constant moans. Their hips bucked into us.\n\nAfter a few moments, I saw Omuzlar's hand move. Not the hand that was holding Geri's hand, but her other hand. I watched it move across her body and down between her legs. Her fingers slipped through her wetness, rubbing against Cilek's hard cock in the process. Once they were wet, they flickered up to her own clitoris, and I watched her fingers circling on it gently, as Cilek's cock continued to plunge in and out of her. She was pleasuring herself as Cilek fucked her!\n\nBefore Geri had a chance to mimic the action, I brought my hand up off of my breast and placed my thumb in my mouth. I quickly circled my tongue around the pad of my thumb, getting it quickly wet and then slipping it out from between my lips. I dropped my palm down on Geri's flat stomach, spreading my fingers out on her hot flesh, even as I continued to thrust inside of her. My thumb found its way down to Geri's hard clitoris and I saw her eyes clamp shut and she gasped as I touched her. Working at the same pace as Omuzlar, I circled my thumb around on Geri's clit, occasionally dropping down to my thrusting cock, to keep the pad wet.\n\nWe continued in this motion, working in unison, but in competition. But we did not continue long. The sensations were simply too intense. Cilek and Omuzlar finished first, though I could not say who began. I heard Cilek let out a low shriek and turned to look as her hands squeezed onto Omuzlar's hips. For her part, Omuzlar's fingers had frozen between her legs. In fact, she seemed frozen all over. Her legs were clenched around Cilek's body, her mouth was frozen open with her eyes slammed shut. And I could see that her hand was grasping Geri so hard that her fingers appeared to be white. She was groaning deeply, trembling all over. Cilek thrust twice more, hard, and then kept her hips pressed against Omuzlar's cunny.\n\nBut I could not watch for long. I heard Geri gasp and felt a tremble run through her body. I turned back to her, and saw that her eyes were closed and that her free hand had risen up. Geri was grasping at her own breast, squeezing the flesh tightly for some sort of relief. Her trembling grew more and more intense, and the noises in the back of her throat grew louder. \n\nGeri's body continued to tighten. At first, I could feel the muscles in her legs tighten around my waist. And the muscles in her stomach under her hand. But I kept thrusting, and kept swirling my finger around on her clit. My breathing was coming ragged, but I didn't slow. I couldn't slow. Then, I felt Geri's cunny squeeze around me. Somehow, more strongly than before. I thrust into Geri and she sort of closed around me, holding me warmly and firmly in place. At the same moment, she let out a shivering gasp and her hand rose off her breast and grasped at my hand, pushing it away from her now sensitive cunny. I realized that Geri was cumming again.\n\nAnd, I realized, I was about to cum as well. I had been so focused on competing with Cilek, somehow, that I had barely noticed the rising tension in my body. But my toes were curling, my breath was shallow, and I could feel a tingly sensation down my back. \n\n\"Oh fuck, I am cumming,\" I groaned aloud. And in saying it, I realized what was about to happen. I was about to spill my seed. Inside of Geri. I felt my balls seizing against Geri's asshole. I had no time. My last thought, before the orgasm crashed over me, was to pull my hips back sharply. And then the whole world disappeared into a soothing pleasure that seemed to burst out of every inch of me all at once. A blinding, tingly sensation that erased any concerns about any competition or any seed or even going home, to the North. It was just...an overwhelming peace.\n\nEven in the midst of the orgasm, I kept my eyes on Geri's body. I saw that I had pulled my cock out of her warm cunny in time. Any regret I felt in leaving the warmth of Geri's cunny was assuaged by the pleasure of the orgasm, and the lewd thrill of watching my seed pour from my cock and splash onto Geri's shapely body. It was a large amount of seed splatter on Geri's stomach, her tits, and even her throat. \n\nAs my orgasm subsided, I found myself weak in the knees. I tumbled forward, landing on top of Geri's body. Her arms wrapped around me. I felt my softening thigh press against Geri's thigh. Our breasts were aligned and I felt her softness, holding me up. What was more, our bodies were fused together with my seed. I could feel it, wet and warm, against my breast and my stomach. I could smell my seed and Geri's cunny. I glanced at Geri, saw her looking at me, smiling contentedly. \n\nI kissed her instinctively. At first I didn't know why. We were done. I had finished what I set out to do. But I found an emotion had, to my surprise, burst from within me. I had looked at Geri, in this shared moment of supreme relaxation and bliss and found some sort of connection to her that I had not expected. I couldn't even name the feeling, or understand it. But it felt good and pure. And it willed me to kiss her. Geri's mouth opened, to allow me to kiss her further. \n\nOur tongues met, and I melted into Geri's body. I groaned into her mouth and Geri giggled in response. Giggling against my tongue, her body shaking underneath of me. And I felt myself giggling as well. Our kiss holding us together, but our bodies trembling with mirth. And just like with my orgasm, I didn't care about anything else. It was just a lovely moment. A moment where, somehow, I felt at home.\n\nBut as my tongue pushed deeper between her lips, I heard it.\n\n\"That was lovely,\" I heard Cilek's now familiar, obnoxious voice state. It was more a coo than clearly state words and I felt my lip curl. The pleasant sensation curdled inside of me. My tongue pulled from Geri's mouth.\n\n\"It was,\" Omuzlar said. I turned and looked at Cilek and Omuzlar, they kissed gently. I saw the same tender emotion that I had felt, reflected in their eyes. And I felt sickened by it. Seeing it felt like...weakness. Geri's hand wrapped around the back of my neck. She turned me so that I faced her. She was smiling, still contented. But I could no longer look upon Geri as a lover. That feeling had passed, leaving only a sense of danger behind. My cock had been thrust into Hayalet soil. I could easily find myself rooted to the spot.\n\n\"I certainly enjoyed myself,\" Geri said, raising her eyebrows.\n\n\"As did I,\" I saw queitly, then, louder, \"because I won!\" Geri's brow furrowed. Cilek and Omuzlar turned to look at me.\n\n\"What?\" Geri asked. But I turned and looked at Cilek.\n\n\"You came twice, and made your lover cum a single time. And that is being generous, since she pleasured herself. I pleasured Geri twice, and came only once myself. I am twice the lover that you are,\" I said. Geri gazed at me, her mouth open in disbelief. Omuzlar, too, looked puzzled. Cilek stared at me for a moment, and then laughed.\n\n\"I wasn't competing,\" she said, \"I was making love.\" I pushed myself up, my body feeling sticky and cold from the seed. I snorted as I searched the darkness for my clothes.\n\n\"Of course you weren't,\" I said, \"Because you lost. And a Kabile has no honor and cannot admit when she is beaten. But I am Buz. I have proven my prowess in the bedroom, as I will someday prove it to you in the field of battle,\" I said.\n\n\"We were just fucking. It was supposed to be fun,\" Omuzlar said, incredulously. I ignored her.\n\n\"Thank you Geri,\" I said, but for reasons I did not want to probe, I could not look at my erstwhile lover, \"But...\" I didn't know what else to say. Instead, I rose from the floor, found my clothes, and headed for the door. I did not look back, but I could hear the others talking quietly in the dark. I quickened my pace, so they would not sense the confusion, and fear, that I felt bubbling along in the wake of my orgasm.",
        "End Chapter 3.\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks."
    ],
    "authorname": "YKN4949",
    "tags": [
        "exhibition",
        "foursome",
        "oral",
        "orgy",
        "reluctant",
        "trans on female",
        "translesbian",
        "vaginal",
        "voyeur"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/tribal-bonds-ch-03"
}