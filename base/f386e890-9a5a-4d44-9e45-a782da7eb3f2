{
    "title": "Saturday Night School Ch. 07",
    "pages": [
        "This is the seventh chapter of the Saturday Night School series, by Jessica Tang-Von Harper.\n\n*\n\nOur story so far: \n\nCharlie Tucker is a high school senior who spends most of his Saturdays editing videos in the AV room at Pine Hills High School. One Saturday, he discovers cheerleader Michelle Santos walking naked through the school. After overcoming her embarrassment at being caught, Michelle reveals that she has a fascination with being nude in public, and she and Charlie enter into a secret relationship centered around Michelle's experiments with streaking.\n\nTired of the secrecy, Charlie decides he wants a real girlfriend, and he asks junior Ronni Arthur to go to the prom with him. Michelle, hurt that she wasn't asked, agrees to go to the prom with football player Glenn Mack. Charlie and Michelle meet and agree that their secret affair is over. \n\nBut when Charlie finds out he has an interview for the film program at Jefferson University, he asks Michelle to come with him to the interview instead of Ronni, and the two of them have a wild sexual encounter on the train ride back. Unfortunately, Glenn's best friend Cody sees them and takes a video of them kissing on the train station platform. \n\nIn an effort to split up Charlie and Michelle, Cody first threatens Charlie before school, then sends the picture of Charlie and Michelle kissing to Ronni. When Ronni confronts Charlie, he ends up spilling the whole story to her, and rather than being mad, Ronni seems sympathetic and supportive. Ronni suggests that Michelle could indulge her fetish for public nudity at Greenholt Gardens, where Ronni's older brother is the night watchman. Ronni claims the garden is completely empty at night.\n\nMichelle tries to placate Cody by telling him that Charlie is just a friend to her. She goes to Charlie's house where he is alone for the evening, and to demonstrate that she doesn't really see him as \"just a friend\", she spends the whole evening naked. Charlie's mother comes home unexpectedly, and in a panic, Charlie has Michelle flee out the front door - while she is still naked!\n\n*****\n\nCharlie was almost to the kitchen when he stopped suddenly. He looked back towards the front door.\n\nThe porch light was on. Michelle was standing on the front porch naked, under a bright white bulb. He might as well have left her on a stage lit up with a spotlight.\n\nHe took a step towards the switch for the porch light, but hesitated again.\n\nHis mom had just come in through the garage door. She'd seen the porch light was on when she drove up. If he turned it off now, would she notice it was off? She'd see the dark front windows. Would she wonder why the light was now off? Would she look outside?\n\nHe shook his head sharply. He'd figure that out if it happened. For now, he needed to give Michelle some shadows to hide in. He swiftly crossed the room to the front door and flipped the switch off. The porch light went out.\n\n\"Charlie!\" his mom called from the kitchen. \"Come in here!\"\n\n\"Just a sec!\" Charlie called back. He would need a reason to go outside for a few minutes. Something left in his car, maybe. Michelle's dress was still hidden up in his bedroom. Was it small enough that he could bundle it up, hide it as a bulge in his pocket? Hide it in a bag? How could he explain it if his mom caught him smuggling a stray dress out of his room?\n\nWhat, mom? This dress? Oh, it belongs to the naked girl outside. I'll go deliver it to her.\n\nCharlie shook his head. He would bring Michelle one of his jackets instead. If she zipped it up, she would show a lot of leg but all her important parts would be covered.\n\nCharlie entered the kitchen. Mrs. Tucker stood at the counter cutting a slice of chocolate cream pie into halves. \"Hey, Charlie.\" She smiled at him. \"You gotta have a taste of this pie. It's the best. Ed brought it in.\"\n\n\"You're home early?\" Charlie tried to sound casual.\n\n\"Yeah. It went fast. But Marsha said she'd still pay us for the full shift. Did you eat?\"\n\n\"I made a pizza.\"\n\n\"Oh, good. Let's sit at the table and have some dessert. This pie is amazing.\" Mrs. Tucker carried the two slices of pie to the table.\n\n\"Umm... sure.\" Charlie cleared his throat. \"But I need to run out to my car for a minute...\"\n\n\"First take a bite. You gotta try the pie. It's so good.\"\n\nCharlie glanced anxiously over his shoulder, imagining Michelle shivering, crouched naked on their welcome mat just outside the front door. \"I better just run out to my car,\" he said. \"While I remember. If I don't do it right away, I'll forget.\"\n\nMrs. Tucker chuckled. \"Right. And then you'll be in bed about to sleep, and all of a sudden it'll hit you, that thing you forgot to do. Happens to me all the time.\"\n\nCharlie couldn't stop himself from imagining that scenario. Cozy in bed, about to sleep. Thinking, was there something I've forgotten? All of a sudden... oh my god! Michelle is still naked outside! He would scramble down the stairs, unlock the door, find her still sitting naked on his front porch, waiting for him. She'd probably never talk to him again.\n\nBut what if he came out around midnight, stammering apologies, and she stood there naked, waiting patiently on the front porch with a smile on her face. What if she stood out there for hours, obediently waiting, willing to stand there naked and wait for him for as long as it took, without any concern for who saw her?\n\nAwful. How could he contemplate such a thing? He needed to rescue her as soon as possible. \"I'll be right back,\" he said, and left the room before his mom could argue.\n\nHe went to the hall closet and found an oversized black hoodie which he hadn't worn in a while. It zipped in the front, and he thought it was big enough that Michelle could lose herself in it. He put it on and walked swiftly to the door, expecting his mom would appear at any moment to say something else to delay him. But she stayed in the kitchen, and Charlie quickly pulled open the front door and stepped out. He closed the door quietly behind him.\n\nMichelle sat a few feet from the door, just under the main living room window, which thankfully always had the curtains closed. She had her knees pulled up to her chest, her arms wrapped around her knees. The shadow of the porch railing crossed over her body, obscuring her somewhat from view. \n\n\"Hey,\" Charlie whispered. \"You okay?\"\n\n\"Yeah,\" she whispered back. She stretched her legs out and slowly rose to her feet, while Charlie quickly removed the hoodie. He offered it to her and she took it from his hand.\n\n\"I was sitting here,\" she murmured, slipping her arms into the hoodie, \"trying to decide whether you put me out the front door on purpose.\"\n\n\"I'm sorry...\" he said. \"No one saw you, did they?\"\n\n\"No one. But I'm glad you turned out the light.\" She left the hoodie barely clinging to her shoulders and made no effort to zip it closed, so that the front of her body was still completely exposed. Charlie had imagined that she would huddle under the dark fabric like a shapeless blob with lovely long legs. But apparently she wasn't in any hurry to cover up.\n\nAt least the hoodie could be closed quickly if someone appeared.\n\nShe faced the street. \"On purpose like a test,\" she said. \"To see if I would let you put me outside like this. And I did let you. But it wasn't on purpose, was it? It was just the first thing you thought of to do.\" \n\n\"I know. Not my best plan.\" Charlie gazed at Michelle's front, knowing that he could reach out and pull the sides of the hoodie together and zip it up, knowing she would accept that from him. Yet his hands remained at his side. He looked back up at her face. \"I didn't leave you out here long, right? And you had me put your dress in my room. You could have left it with your other things by the front door. It would have fit in your purse.\"\n\nMichelle touched her finger against her throat, sliding it down over her skin until she traced the inside edge of her breast. \"What dress?\" she said softly. Her eyes were fixed on the empty street as she distractedly fingered her hard nipple.\n\nCharlie knew the longer they waited, the greater the chance they would get caught. \"Where did you park?\"\n\nShe pointed to the right. \"That way. Just around the corner.\"\n\n\"Let's start walking. Let me go first, I'll make sure the coast is clear.\" Charlie walked up the path, looking up and down the street at the sidewalks. He didn't see anyone walking or driving. He looked back at Michelle and was momentarily stunned by how visible she was.\n\n\"Anyone looking out their window can see this,\" he thought, looking at the dark circles of her nipples and the dark line of her pubic hair, clearly visible against her light skin in the glow of the street light. Was she really as exposed as she appeared? Or did it just look that way to him because he knew she was naked? Would an observer imagine her with clothes, simply because they didn't expect to see a naked girl standing on a front porch? Charlie waved Michelle over, and she crossed the front yard.\n\n\"Do you know I've fantasized about something like this happening to me?\" Michelle spoke as she stood on the sidewalk, looking up and down the street. \"I mean, where some situation puts me outside naked, and it's not my fault but there I am, outside, naked.\" She peeked down at herself. \"I guess I like the idea that it's not by my choice. Like an accident.\"\n\n\"Like someone forces you to go outside naked?\"\n\n\"Well... not really like that.\" She glanced at him. \"Although, that's kind of what just happened, right?\"\n\n\"Yeah...\" Charlie shifted uncomfortably. \"Sorry.\"\n\nMichelle just shrugged. She hooked her arm around Charlie's and pressed up against his side as they started walking. \"You know what this is like? You know how in romantic comedies, the guy and the girl are in bed, and then the girl's big jealous boyfriend unexpectedly shows up and the guy has to escape without his clothes?\"\n\n\"Yeah, right.\"\n\n\"Like in 'The Pink Envelope'. Do you know that movie?\"\n\n\"No... I haven't seen that one.\"\n\n\"Kate Hudson. I forget the actor's name. He's handsome though.\" Michelle looked up at the starry sky. \"I used to fantasize that I would be showering in the girl's locker room, and the fire alarm would go off. All the other girls would throw on clothes before they evacuated, but I'd panic and run out naked. The only one. Or I'd try to get dressed and a fireman would run in before I could, and yell at me that I need to leave immediately. So I would, I'd just run outside naked. Is that a weird fantasy?\"\n\nCharlie glanced at Michelle's nude body, and imagined a fireman leading her out to the parking lot, her body still wet and gleaming from the shower. \"It's a pretty hot idea,\" he said truthfully.\n\n\"I have a lot of weird fantasies like that,\" Michelle said, encouraged by his response. \"I have one where I'm at a fancy party and some crooks come in to do a robbery. They have guns and they tell everyone to put everything they have into a bag. Clothes and everything. They start with me, and make me take off all my clothes and put them in the bag. Then the police suddenly arrive, and the crooks run away with the bag, and the police chase them, and I'm left there, naked with all these people in fancy dresses and tuxedos.\"\n\n\"No one else takes off their clothes?\"\n\n\"No. Because the crooks start with me, so I'm the only one. And maybe the police take me aside and question me and make me identify the men who did it, but no one thinks to give me anything to wear.\"\n\n\"Or maybe they do think of it, but they decide they like the view instead.\"\n\n\"Maybe. But what can I do? When I ask if I can have my clothes back, they just say, 'nuh-uh... it's evidence!' \"\n\n\"So does anyone help you? Or do all those rich people in their fancy clothes leave you naked the whole night?\"\n\n\"Oh, someone helps me eventually. It's my fantasy, so I guess they leave me naked just long enough to be exciting.\" She squeezed his arm. \"Want to hear another?\"\n\n\"Sure.\"\n\n\"There's a hypnotist who comes to the school to do a show. He asks for a volunteer... eek!\" She froze, clutching Charlie's arm tightly. It took a moment for him to see what she had seen: a man turning the corner ahead of them, walking a small Scottish terrier. \n\nCharlie looked closer. The man was short and stooped over, with a gray beard and a head of scraggly silver hair. He wore dark-rimmed glasses and a brown coat. Charlie didn't recognize him.\n\nMichelle scrambled for the front of the hoodie, trying to pull it closed, but her left arm was hooked around Charlie's arm, and when she tried to raise her right arm too quickly, her purse slipped off her right shoulder. She caught her purse on her elbow, but leaned to the side, causing the hoodie to fall open even more.\n\n\"Don't worry about it,\" Charlie whispered to her. \"He doesn't know me. We'll just go with our story, everything will be fine.\"\n\n\"Story? What story?\" Michelle whispered back desperately.\n\n\"Shh. Here he comes.\" Charlie continued walking forward, and Michelle stayed with him, the hoodie still completely open, her naked body clearly visible. The man had definitely noticed. He gaped openly at Michelle as she approached. His glasses were apparently very effective at letting him see clearly at night, and his eyes were wide as he examined Michelle's body. The terrier was too busy sniffing a shrub to notice them.\n\n\"Hi!\" Charlie greeted the man.\n\nThe man hesitated for a moment, looking between them. \"Hi...\" he said in a gravelly voice.\n\nCharlie gestured at Michelle and shrugged apologetically. \"We were at my house, thinking we had it all to ourselves for a few hours, but my parents came home unexpectedly. Katie here had to escape out the back before they could catch us, and she didn't even have a chance to get dressed.\"\n\nThe man furrowed his brow, absorbing this story. He turned to Michelle, looking her up and down. \"His folks don't like ye?\" he rumbled.\n\n\"Oh, they hate me!\" Michelle told the man earnestly. \"I'm glad they didn't catch me.\" She gazed tragically at Charlie. \"They think I'm not good enough for their son.\"\n\n\"Oh... that's tough.\" The man's eyes dipped towards Michelle's body, and she stood patiently while he studied her breasts. The man's dog tugged vigorously at the leash, and the man looked down for a moment. He returned his eyes to Michelle. \"Fruit bouquet,\" he said.\n\n\"What?\"\n\n\"You should send his parents a fruit bouquet. They got em now. They cuts up the fruit and makes 'em look just like flowers.\"\n\n\"Oh. Okay.\"\n\n\"Everyone likes em. Fruit bouquets. I promise ye, it'll make em like ye.\"\n\nMichelle nodded. \"Okay. I'll try that.\"\n\n\"Good idea,\" Charlie said.\n\nThe man gazed at Michelle seriously. \"Fruit bouquet. Better than bein' thrown out bare ass, right?\"\n\n\"Right. Fruit bouquet. Got it.\" Michelle waved her fingers. \"Good night.\"\n\nThey walked away from the man. Charlie could tell that Michelle was struggling to hold back her laughter, and he reached over and squeezed her arm in warning. \"Wait until we're around the corner,\" he muttered.\n\n\"Oh my god!\" she whispered back. \"I can't believe that just happened!\" She covered her mouth, giggles escaping through her fingers.\n\n\"He bought it,\" Charlie growled. \"He bought it and you're going to blow it by laughing.\"\n\n\"I was naked right in front of him and all he could say was fruit bouquet! Oh my god!\"\n\n\"Just around the corner,\" Charlie said. \"Then you can laugh all you want.\"\n\n\"I'm sorry... I just... I can't help it!\" He could feel her body pressed against his side, shaking with silent laughter. \"Getting caught... and then... and then that...\"\n\nAs they reached the corner, Charlie caught sight of Michelle's car, sitting in the shadows of a willow tree's dangling branches. It almost looked like she'd intentionally parked in the darkest spot on the street, a gap in the staggered coverage of the street lights. Charlie wondered if she had considered the possibility that she might be returning to her car naked when she selected her parking spot. \n\n\"I'm sorry.\" Michelle wiped a tear from her eye with the sleeve of the hoodie. \"It's just... my heart gets going so fast when someone sees me... and afterwards... I feel so energized... I just don't know what to do with myself...\"\n\n\"He wasn't shy about getting a look at your breasts, was he?\" Charlie said, and she again dissolved into gales of laughter.\n\n\"Oh my god! He was staring right at them! But what could I say? It's not like I can say 'eyes up here, buddy', not when I look like this!\" Her foot caught the edge of the sidewalk and she almost fell over. Charlie caught her around the waist, but if anything, her near fall only made her laugh harder.\n\n\"Take a deep breath,\" Charlie said to her. \"People are going to hear you and think we've been drinking.\"\n\n\"I'm all right. Just let me...\" She breathed in deeply, her breasts heaving. \"I'm okay...\" She reached into her purse and rummaged for her car keys. \n\nCharlie pulled her close and gently squeezed her breast. Michelle paused the hunt for her keys, closing her eyes and smiling. \"Mmm,\" she murmured. \"That feels nice.\"\n\n\"I know why he was staring at these,\" Charlie said as he fondled her. \"You have a perfect pair.\"\n\n\"Thank you,\" she said. \"Ah, here they are.\" She pulled out her car keys and pressed the button to unlock the car.\n\nCharlie turned her to face him and leaned down for a kiss. Michelle eagerly accepted the kiss, wrapping her arms around his neck. Charlie continued to play with her breasts, stroking and flicking her hard nipples as they kissed. He reached between her legs and cupped her pussy, sliding a finger inside her. She was wet with the excitement of walking outside naked and bit her lower lip to keep from moaning as he pushed three fingers deep into her.\n\nCharlie broke the kiss and stepped away from her, although he kept his hand between her legs and continued stroking her pussy. Michelle leaned back against her car with her eyes closed, the pleasure clearly visible on her face. Fluttering eyelashes, mouth open, her bottom lip trembling. She lifted her right foot onto her tiptoes, separating her legs, giving him more access.\n\n\"Just friends, right?\" he murmured as his finger moved against her clit.\n\n\"...what?\"\n\n\"At school. You told Cody we're just friends?\"\n\n\"Ohh!\"\n\n\"I guess that means I can't touch your pussy like this at school.\" Charlie smiled. \"I mean, I could... but Cody might get suspicious that we're more than just friends, right?\"\n\n\"Oh, Charlie,\" Michelle moaned softly, her eyes still closed. She gasped suddenly as his manipulations provoked a wave of ecstasy through her body. \"Ohh... you can touch me if you want... at school... my pussy... ohh... I don't care about Cody...\"\n\n\"I can?\"\n\n\"Anything, Charlie... anything you want...\"\n\nShe's just really turned on, he thought. She's just saying whatever comes into her mind. Maybe it turns her on to say it.\n\nThen he thought, I want to be inside her.\n\nHe had just started to pull his zipper down when a door slammed off to their right. Someone leaving their house. Down the street, the headlights flashed on a parked car as someone unlocked it with their key fob. Michelle straightened and quickly pulled the hoodie closed. Charlie took his hands away from his zipper.\n\n\"We keep getting interrupted.\" He scowled. Now they could see a man walking to the parked car, a dim shadow barely visible in the distance.\n\nMichelle took slow, deep breaths, her legs now pressed tightly together. \"It's all right. I should go anyway.\" She leaned forward and gave Charlie a quick kiss on the lips. \"Can I have this hoodie?\"\n\n\"Sure,\" he said. \"You mean... to keep?\"\n\nShe just laughed and went around to the other side of her car. She pulled open the door. \"Good night, Charlie.\"\n\n\"Good night,\" he said. \"Um... thanks for coming over.\"\n\nShe laughed again.",
        "***\n\nWhen Charlie walked back into the kitchen, he found his mom still sitting at the table, with the two pieces of pie waiting untouched. She had brewed a pot of coffee, which she claimed she could drink at any hour without affecting her ability to fall asleep. The small kitchen TV was on, and she was watching some police show where two detectives were questioning someone.\n\nShe looked up. \"Oh, there you are. I thought you'd forgotten that I brought you dessert.\"\n\n\"Nah. Thanks.\" He sat and took a bite of his pie. \"Hey. Pretty good.\" He nodded his approval.\n\n\"I thought you'd like it. I'll tell Ed. He brought it in.\" She turned her attention back to the show.\n\nCharlie pretended to watch the show as well, but he couldn't focus on it. His mind kept returning to Michelle. What a crazy day. Ambushed in the bathroom by Cody's goon squad before the start of school. Talking to Ronni, telling her everything. Lunch with Michelle. His tires slashed at the end of the day. Then finally, Michelle again, naked in his house, making love to him in his bedroom.\n\nHe still needed to tell Michelle that Ronni knew everything. Definitely a conversation he wasn't looking forward to. Michelle wouldn't be happy that he had shared her secrets. But if he didn't warn Michelle and Ronni let it slip to Michelle that she knew, Michelle would feel completely betrayed. \n\nMrs. Tucker stood to refill her coffee from the pot. She paused by the sink and leaned down to take a closer look at something. \"Charlie?\"\n\n\"Yeah?\"\n\nMrs. Tucker lifted a glass from the sink. She pointed to a red splotch on the rim. \"This looks like lipstick. What do you think?\"\n\n\"Ah.\" Charlie grimaced inside. \n\n\"Lipstick?\"\n\n\"Yeah. Probably.\"\n\n\"Did you have a girl over here tonight?\"\n\n\"Uh... yeah.\"\n\nMrs. Tucker set the glass back in the sink. She leaned back against the counter, her arms crossed in front of her. \"Was it Ronni?\"\n\n\"No,\" he said. \"Michelle.\"\n\n\"Oh, so now there's a Michelle.\" She set the glass back in the sink. \"Wasn't it Ronni that you were taking to the prom?\"\n\n\"Yeah. I'm taking Ronni to the prom.\"\n\n\"So then... who's Michelle?\"\n\n\"She's... um... someone else.\"\n\n\"Someone else.\" Mrs. Tucker pursed her lips. \"Well, Charlie, I'd like to make a new rule. From now on, I don't want any lady visitors in the house unless I've met them first. Okay?\"\n\n\"Okay.\"\n\nShe took a sip of her coffee. \"I'm going to move to my chair in the living room. Want to finish watching the rest in there?\"\n\n\"No... I think I'm going to go upstairs.\"\n\n\"All right.\"\n\n***\n\nCharlie could still smell the scent of Michelle on his bed as he lay there, staring at the ceiling. He had her dress hidden under his bed, and thought about taking it out and looking at it. A new addition to his growing collection of Michelle's discarded clothing. No underwear this time. She hadn't bothered to wear any.\n\nNow she had his hoodie, officially making the flow of clothing a two-way street.\n\nHe considered texting her, and even reached for his phone. He would write: \"Just checking that you made it home ok.\" It was a legitimate thing to say. Really, he just wanted to say something, anything, to get a text back from her. \n\nHe started to type his message, but then remembered that her parents didn't know she had come over to his house. He didn't want to get her in trouble if they accidentally intercepted the text. He deleted the message, then let his arm fall to his side, the phone spilling from his fingers.\n\nThe scent of her, lingering in the air. He breathed it in, remembered her on top of him, their bodies moving together. His penis swelled, swiftly growing as if eager to finally enjoy the second round of sex it had been expecting.\n\nHe undid the front of his pants, letting his erection loose. He gripped it in his fingers, squeezing it. Slowly, he began to stroke himself, pretending it was Michelle's pussy sliding up and down his shaft. His body reacted as he thought of her.\n\nHe imagined walking with her at Greenholt Gardens. A Sunday afternoon, when the other visitors to the garden still wore their church clothes, but Michelle would be naked, of course; her body glowing in the warm sunlight, her dark hair cascading down her bare back. Standing together in front of a patchwork of flowers, his hand casually pressed against her ass as she admired the blooming colors. Standing behind her, hugging her, squeezing her breasts. At some point, they'd surrender to their passions, and fuck right there in the path, oblivious to the other people who walked back and forth around them...\n\nHis fantasy became more and more lurid the closer he came to climaxing, and finally he reached that peak, gripping his cock tightly as a stream of cum launched onto his bare stomach. Charlie closed his eyes, breathing deeply. He pictured Michelle, lying naked in her bed, somewhere out there wherever she lived, a vibrator in her hand, getting herself off just as he did. He imagined both of them had been touching themselves at the same time, and maybe she climaxed just as he did. Maybe far apart but together they had finished what had been interrupted. \n\nMaybe now he would text her. \"I was just thinking of you,\" he would say.\n\nShe would respond, \"Did you cum a lot?\"\n\nHe would say, \"Yes, a lot. What about you?\"\n\nShe would say, \"Yes. You give me the most amazing orgasms. Even when you're not here.\"\n\nHa! That would be an interesting conversation for her parents to find on her phone later.\n\nCharlie sat up on his bed and cleaned himself off. He glanced at his phone, but the screen was black. Maybe she wasn't even home yet. He didn't have any idea how far away she lived.\n\nHe put on his bathrobe and went across the hall to take another shower. A long hot one. He needed time to think.\n\nHe was standing under the shower head, letting the water massage his neck and shoulders, when he suddenly realized the answer to the Ronni/Michelle dilemma. A way to tell Michelle that Ronni knew about her nude adventures, without Michelle feeling betrayed. If he could just work out the details, it would be the perfect solution.\n\nIt all depended on Ronni. If Ronni was sincere about being his friend and wanting to help him. And if he could just get her to buy into his plan.\n\nCharlie quickly finished his shower, and rushed back to his room in his bathrobe. He sat down at his desk and turned on the computer. For a moment, he stared at the blank document in front of him. Then he started to type.\n\n***\n\nThe next morning, Charlie stopped at Starbucks for a large coffee on the way to school. It had been a long night without much sleep, but he was happy with what he'd accomplished.\n\nHe caught sight of Michelle in the hallway after home room. She walked with Vanessa and Tina, and at first he thought that she was wearing the same black hoodie she'd driven off with the night before, over a white boho dress. He almost stopped walking as he wondered what possible message she could be sending him by wearing his hoodie in front of the whole school.\n\nBut as she came closer, he realized it was a smaller black jacket. It didn't really even look like his hoodie. \n\n\"Hi, Charlie,\" she said as they passed each other.\n\n\"Hi,\" he said back. He wanted to show her what he'd worked on the night before, but definitely not in front of her friends. Anyways, he needed to talk to Ronni first.\n\nHe sent Ronni a text to meet him in the AV room at lunch time. She didn't text back, but when he arrived at the room, she was waiting for him.\n\n\"Hey,\" she greeted him as he walked in. \"I heard about your tires. What an awful thing. I can't believe they did that.\"\n\nCharlie leaned against a table. \"You heard about that?\"\n\n\"Yeah.\" She shrugged. \"There's some gossip going around.\"\n\n\"Does the gossip say who did it?\"\n\n\"Not really. Football players. No one specific.\" She paused. \"The rumor is that Glenn was eating lunch with Michelle yesterday, he got up to buy something, and you sat down in his seat while he was gone. Then you refused to move when he came back. Glenn's friends were mad that you were rude to him, so they slashed your tires in retribution.\"\n\n\"What!\" Charlie couldn't believe that the rumor mill had turned him into the bad guy. \"Are you serious? People are saying that?\"\n\n\"Yeah. I heard it this morning in home room.\"\n\n\"I wasn't rude to Glenn,\" Charlie protested. \"I sat next to him. We talked about movies. I didn't take his seat.\"\n\n\"Well... people like to embellish things, I guess,\" Ronni said. \"But you must have done something to make someone mad at you.\" \n\n\"Cody.\" Charlie spoke the name with distaste. \"Michelle said it was Cody.\"\n\n\"No surprise. He did it because you sat with Michelle at lunchtime?\"\n\n\"I'm sure. He threatened me in the morning to stay away from Michelle. \n\nObviously, I didn't listen. I had lunch with her and he was sitting right there.\"\n\n\"And your tires paid the price.\" Ronni nodded. \"Are you going to tell anyone it was him?\"\n\n\"No. Actually, Michelle says he's going to pay me back the cost of the new tires. So I guess I'll just let it go.\"\n\n\"Wait, what?\" Ronni squinted. \"Did you say he's going to pay you back?\"\n\n\"Michelle talked to him. Michelle and Vanessa. He's dating Vanessa, so I think she has some influence on him.\"\n\n\"Wow. Well... that's good, I guess.\"\n\n\"Yup.\" Charlie glanced down at the folder he held in his arm, then took a quick look behind him, making sure that no one else was around. He continued in a lower voice, \"Hey, I've been thinking about what you said yesterday. About Greenholt Gardens?\"\n\n\"Oh... yeah.\"\n\n\"It got me thinking. You said no one is there at night, right? It's completely empty?\"\n\n\"Just my brother.\"\n\n\"Right. So what would your brother think about us shooting a short film there?\"\n\n\"A film?\" Ronni frowned. \"Like what kind of film? You mean for a class?\"\n\n\"No. Just for the experience of it.\" Charlie held up the folder. \"I wrote a screenplay. Will you read it?\"\n\n\"Okay.\" Ronni held out her hand, and Charlie gave her the folder. Ronni opened it and leaned over the stack of papers inside. \n\n\"You don't have to read it now,\" Charlie said.\n\n\"I want to,\" she said. \"But will you do me a favor?\"\n\n\"Sure.\"\n\n\"Go to the cafeteria and get me a slice of pizza? I like Hawaiian. And maybe an iced tea?\"\n\n\"Sure.\" Charlie watched her anxiously as she started reading the first page of the script. \"Um... I'll be right back.\"\n\nWhen he returned, carrying two slices of pizza, an iced tea for her and a Sprite for himself, Ronni was already past the halfway point in his script. She looked up at him over the top of her glasses and gave him a crooked smile. \"The Gwen character is played by Michelle, I take it?\"\n\n\"Yeah. I haven't asked her yet... but, yeah.\"\n\n\"So you're going to ask her to do nude scenes in a film? Do you think she'll agree?\"\n\n\"I don't know,\" Charlie said. \"She might.\" \n\nRonni held out her hand for the iced tea, and Charlie passed it to her. Ronni sipped from the straw as she returned to reading the script. Charlie set the pizza slices down on the table, and it struck him that he had provided the same meal to Michelle the night before. Only that had been pepperoni, and this was Hawaiian.\n\nAnd Michelle had eaten hers naked while he licked her pussy.\n\nCharlie sat down in a chair and opened his bottle of Sprite. He took a bite of pizza and washed it down with a swig from his soda. He gazed at Ronni, watching her eyes moving back and forth behind her glasses as she read.\n\nWhen she reached the end, she shuffled the pages back into a neat stack.\"I like it,\" she said. \"Good dialogue. I like the surrealism of it, and how you're never sure if Gwen is real or not. It has a David Lynch feel to me.\"\n\n\"Yeah, that's kind of what I was going for.\"\n\nShe held up the title page. \" 'Anything You Want'? That's really the title?\"\n\n\"Um... no, probably not. Just the best I could think of at the time.\"\n\n\"It's a little generic.\" She put the title page back and closed the folder. \"It could be a good movie. But I guess that's not really the point, is it?\" Ronni leaned back in her chair. \"It's really about Michelle, right?\"\n\nCharlie didn't bother to deny it. \"Yes.\"\n\n\"You want to film her naked. You want her to stand outside, naked, in the gardens, and you want to film it.\"\n\nCharlie looked down at the floor. \"I was talking to her the other day about pursuing a career in film,\" he said. \"She told me if I ever needed an actress for one of my film projects, she would do it. She said she would even do a nude scene, if I needed her to. I don't know, maybe she was just talking, maybe she'll say no when she reads the script...\"\n\n\"But you think she'll say yes.\" Ronni looked down at the script. \"You wrote this script just for her. Including the nudity. You think she wants to do a nude scene in one of your films.\"\n\n\"I don't know.\" Charlie shook his head. \"I mean, she doesn't have to be nude if she doesn't want to. I could rewrite that part so she's wearing a short dress or something...\" \n\n\"What about the Max and Ingrid characters? How are you going to cast them?\"\n\n\"I guess I'll recruit from the theater department. Allison Hayes as Ingrid, maybe?\n\n\"Sure,\" Ronni said. \"I could see her in the role. But whoever it is, Michelle's going to be naked in front of them. So you better make sure Michelle approves.\"\n\n\"If Michelle even agrees to be in it.\"\n\n\"Right. That's your first step.\"\n\nCharlie nodded. \"I'll ask Michelle. Will you ask your brother?\"\n\n\"I'll ask my brother.\" She offered the folder back to him. \"It could be a good short film, Charlie.\"\n\n\"Keep it. That's your copy.\"\n\nRonni smiled, returning the folder to her lap. \"And what title do I get in the credits, if I help you with this?\"\n\n\"Assistant Director? Script Supervisor?\" Charlie looked at her thoughtfully. \"Would you ever consider playing Ingrid?\"\n\n\"Hell no!\" Ronni said. \"I like the sound of 'Producer', personally.\"\n\n\"Producer it is,\" Charlie said. \"Thanks, Ronni.\"\n\nRonni held up her iced tea in a mock salute. \"No problem. Let's go make a film with your nudist girlfriend.\" She took a sip from her straw.\n\n***\n\nCharlie met Michelle later that day, in the same AV room. She gave him the $250 from Cody, a stack of twelve crisp twenty-dollar bills and one ten. He gave her a folder.\n\n\"What's this?\" she asked, opening the folder and looking at the pages inside.\n\n\"A screenplay. I wrote a short film.\"\n\n\"You did? Can I read it?\"\n\n\"Of course,\" Charlie said. \"Actually, I thought you might play one of the characters. A character named Gwen.\"\n\nShe smiled. \"You want me to be in one of your movies? Sure, I'd love to.\"\n\n\"Maybe you should read it first.\"\n\n\"Okay.\" She flipped through the papers. \"I don't know if I can right now, though. Can I take it with me and give it back to you later?\"\n\n\"Sure. But just don't show it to anyone, okay?\"\n\n\"Okay!\" She took a step closer to him. \"I've been turned on all day thinking about last night,\" she whispered. \"Walking to my car that way, talking to that man... and the whole time he could see everything... oh my gosh...\"\n\n\"Yeah. Mr. Fruit Bouquet?\"\n\n\"Fruit bouquet! Right!\" She giggled.\n\nCharlie pointed at the folder. \"The movie is set at Greenholt Gardens. Have you ever been there?\"\n\n\"Oh, sure, I've been there. It's a beautiful place. We had our class picnic there in seventh grade, don't you remember?\"\n\n\"Yeah, I remember. Well, it turns out the night watchman at Greenholt Gardens is Ronni's brother. He's the only one there at night. So I'm trying to find out if he'll let us film there. We'd have the whole garden to ourselves.\"\n\nMichelle looked down at the folder. \"Did you show this to Ronni already?\"\n\n\"Ronni told me her brother works at the garden. She also told me the garden is pretty much empty at night. So I wrote a screenplay and I intentionally used the garden as a setting. Because we'd be able to go there at night. After it's closed. When it's empty.\" He gazed at her, wondering if she understood what he was implying. \"Ronni's going to ask her brother if it's okay.\"\n\n\"So Ronni's going to help with the movie?\"\n\n\"I don't know,\" Charlie said. \"I haven't planned anything yet. I just want you to read this, to see what you think.\" He hesitated. \"Honestly, Michelle... I wrote this screenplay around Greenholt Gardens, but I also wrote it around you. I wanted to write something you might want to be in. If you don't like it... I mean, if you don't like it, then that's fine. I'll just write something else.\"\n\n\"Ok, now I'm really curious to read it.\" Michelle lifted the folder and peaked in at the first page.\n\n\"You know, my mom could tell you were there last night.\"\n\n\"Oh?\" She looked up.\n\n\"You left the red imprint of your lips on a glass.\"\n\n\"Oops. She noticed that? What did she say?\"\n\n\"Nothing. Just that I shouldn't be having girls over that if she hasn't met them. She didn't make a big deal out of it.\"\n\n\"Has she met Ronni?\" Michelle asked.\n\n\"No... Ronni's never been to my house.\"\n\n\"I see.\" She smiled slightly. \"Well, a bit of lipstick isn't so bad, right? Could've been worse. Considering I was sitting naked on your front porch for half an hour.\"\n\n\"Oh, it wasn't that long! It was probably like... five minutes?\"\n\nShe shrugged. \"I don't know. I didn't have a watch. Or anything else. It felt like a long time.\"\n\nHe gazed at her, not sure whether to smile or apologize. Instead, he slipped his arms around her waist. He leaned forward and kissed her.\n\n\"Charlie!\" she whispered, glancing around quickly to make sure they were alone.\n\n\"I wanted to see what it was like to kiss you with your clothes on,\" he murmured, grinning.\n\n\"Shh!\" She looked around again. Confirming that they were still as alone as they'd been during their entire conversation, she turned back to him and, smiling, gave him another kiss.\n\nThe bell rang. Charlie squeezed Michelle before releasing her. \"Read it, okay?\" \n\n\"I will,\" she said. \"I promise.\"\n\n***\n\nCharlie's phone rang just as he pulled into his driveway. Michelle's number. He turned off his car and answered. \"Hi.\"\n\n\"Hi, Charlie,\" Michelle said. \"I read your movie.\"\n\n\"Did you like it?\"\n\n\"You want me to play Gwen, right?\"\n\n\"Yeah.\"\n\n\"She's naked a lot.\"\n\n\"Yeah. She is.\"\n\n\"I don't know, Charlie... do you think it's a good idea? Who's going to see the movie when it's done?\"\n\n\"No one has to see it,\" he said. \"We could put it away and never let anyone watch it.\"\n\nMichelle sighed. \"I don't know. Honestly, I'm not sure if I even understand what's happening in the movie. Why is Gwen there? The three of them are outside, Gwen is naked but Max and Ingrid don't even say anything. Is she supposed to be a nudist or something?\"\n\n\"No, no... Gwen isn't real. She's more like a representation of Max and Ingrid's sexual tension.\"\n\n\"Huh?\"\n\n\"So Max and Ingrid first meet and have a conversation. Gwen comes by, sort of floating around, sometimes joining in their conversation, sometimes just walking near them. Because Max and Ingrid are attracted to each other, but they've just met. Later, they see each other again, and Gwen reappears, but now she's more flirty, and she lets Max and Ingrid strip off some of her clothing... so even though Max and Ingrid are still just casually talking, they're showing their growing attraction to each other through Gwen.\"\n\n\"But doesn't Ingrid think it's weird that Max is taking off Gwen's shirt?\"\n\n\"No, because Gwen isn't real. She's not really a person. She's like their emotions, their hidden feelings for each other.\"\n\n\"If she's not real, then how can they talk to her? They talk to her, and she talks back, and they both hear it.\"\n\n\"It's meant to be surreal. Have you seen any of David Lynch's films?\"\n\n\"I have no idea who that is.\"\n\nCharlie thought for a moment. \"What about Greek mythology? Zeus, Apollo?\"\n\n\"Uh huh.\"\n\n\"Think of Gwen as Aphrodite. Gwen is the Goddess of Love. She's helping Max and Ingrid fall in love, and as they fall in love, Gwen wears less and less, until finally she's naked. When she's naked, that shows that Max and Ingrid are so attracted to each other that they want to make love to each other, even though neither of them has been able to clearly convey it to the other.",
        "Michelle was silent for a moment. \"Okay...\" she said finally. \"I'll do it. I'll play Gwen.\"\n\n\"You will?\"\n\n\"And you can show it to whoever you want, when it's done. I'm still confused about what's happening in the movie, but I can tell that you have a vision. You're an artist. I want to help you with your art, in any way I can.\"\n\nThe earnest tone in her voice caught Charlie by surprise and he suddenly remembered that the movie wasn't supposed to be art, it wasn't supposed to be anything at all. It was a sham, just an excuse to get Michelle naked in Greenholt Gardens. He started to speak, intending to tell her just that, but now it seemed like a lowlife thing to admit. She was offering to help him achieve a vision; how could he admit to her that his only real vision had been to watch her walking naked through a pretty garden?\n\n\"Thanks,\" he mumbled. \"But, you know, if you're not comfortable... if you want to wear something, like a dress...I can rewrite it...\"\n\n\"No. If you want Gwen to be naked, I'll be naked,\" she said firmly. She paused. \"I told you I would, remember? On Saturday. I said if you wanted me to do a nude scene in one of your movies, I would do it.\"\n\n\"Yeah. I remember.\"\n\n\"Who's going to play the other characters?\" Michelle tried to sound nonchalant, but Charlie could tell she was anxious to hear the answer. She knew she would be nude in front of the other two actors.\n\n\"I don't know yet,\" Charlie said. \"I haven't asked anyone. Let's not worry about that until we hear from Ronni's brother. If he says no, none of this is going to happen anyway.\"\n\n***\n\nBut Ronni's brother said yes. Ronni brought the word on Wednesday. \"Nick says it's okay to film there,\" she said. \"I told him we would stop by tomorrow at 11:30 PM to look around. Can you make it?\"\n\n\"I can be there. I'll ask Michelle if she can make it.\"\n\n\"It's late, I know, but that's when it's empty. Any earlier and we might run into the staff from the restaurant.\"\n\nCharlie knew his mom wouldn't care if he was out that late, especially if he told her he was working on a film project. But he wasn't sure about Michelle. He called her after school and told her the news. \"We'll just meet Ronni's brother Nick and check out the garden. No filming, just seeing what we have to work with, so I can put together a storyboard. Can you make it?\"\n\n\"I think so,\" Michelle said. \"It is late... but it should be okay.\"\n\n\"I was thinking,\" Charlie said, \"after Ronni goes home, and her brother gets to his work... we'll have some time alone in the garden...\" He trailed off, hoping she understood what he was suggesting.\n\n\"Okay,\" she said softly. \"Ronni is leaving early?\"\n\n\"She can't stay out too late. She says she's leaving at midnight.\"\n\n\"So after midnight, it'll just be you and me. No one else will be in the gardens?\"\n\n\"Nick will be around, but he mostly guards the front entrance. He has to work.\"\n\n\"Okay. Wow. The whole garden to ourselves.\"\n\n\"What if I pick you up at your house, around 10:30?\"\n\n\"Oh, I don't know if that's a good idea,\" Michelle said quickly. \"I mean... I can't really tell my parents what I'm doing, right? If I tell them I'm in a movie, they'll want to see it when it's done. And a guy picking me up at 10:30 at night? A guy they don't know? They won't go for that either.\"\n\n\"Okay...\"\n\n\"I'll drive to your place and leave my car there. Then you can drive us. Okay?\"\n\n\"Okay. But what if my mom is home?\"\n\n\"What do you mean?\"\n\n\"She'll want to meet you.\"\n\n\"She will?\" Michelle sounded surprised. \"Um... I wasn't thinking of going inside your house... do you want me to meet your mom?\"\n\n\"Sure. I mean, not in a super formal kind of way. Just like, here's Michelle, I'm spending a lot of time with her these days, so you might as well know what she looks like, like that.\"\n\n\"Uh huh. Okay.\"\n\n\"It's not a big deal,\" Charlie said. \"You sound nervous. Don't worry, my mom is super cool.\"\n\n\"I'm fine.\"\n\n\"It's not like she made a big deal about you being over on Monday. She just said she wants to meet you the next time you come over.\"\n\n\"Okay.\" Michelle was quiet for a moment. \"Does she know anything about me?\"\n\n\"Well... no. Not really.\"\n\n\"I guess there's not much about me that's appropriate to tell her,\" Michelle said. \"Not much about us. You can't even show her the script of the movie we're making together. She'll see that I'm naked through the whole thing.\"\n\nIt was a good point. Charlie promised himself that he would make a new version of the script, a cleaned-up version, with all references to Gwen's nudity removed. Just in case it fell into the hands of someone who wasn't involved in the production, like his mom. Or Michelle's parents, for that matter. \"You just have to promise me one thing, when you meet her,\" he told Michelle.\n\n\"You want me to keep my clothes on?\" she asked innocently.\n\n\"Oh, no, you can take your clothes off if you want to,\" Charlie said. \"Just don't bring her one of those damn fruit bouquets.\"\n\nMichelle laughed.\n\n***\n\nCharlie told his mom about his plans over dinner on Thursday. Meatloaf, like most Thursdays. He told her that he had a short film he wanted to make, and Ronni's brother Nick was going to let him film it at Greenholt Gardens. He explained that he wanted to meet Nick and Ronni that night after the gardens closed, so they could walk around and plan the film. As he expected, his mom wasn't overly concerned.\n\n\"It's a beautiful place,\" she said. \"Are you going to do all your filming at night? Won't it be too dark?\"\n\n\"The place gets busy in the day. At night, it's empty.\" He shrugged. \"I don't know. I hope lighting won't be a problem.\"\n\n\"You can borrow that work light from the garage.\"\n\n\"Yeah. That might help.\" He took a sip from his water glass, then casually added, \"Michelle's going to drop by later. I'm giving her a ride to the gardens.\"\n\nMrs. Tucker looked at him. \"Michelle who was here Monday?\"\n\n\"Yeah.\"\n\n\"Is she helping with the film?\"\n\n\"I'm hoping she'll be one of the actresses,\" he said. \"Anyhow, she's going to leave her car here, and we'll both go in my car.\"\n\n\"I wish you had warned me we'd have company. I would've bought a dessert.\"\n\n\"She's just going to be here for a second. Probably she won't even come inside. She's just leaving her car here so we can go in one car. It's not a big deal.\"\n\n\"Fine.\" She poked a piece of meatloaf with her fork and ate it. She chewed it slowly. \"You like her?\" she asked.\n\nCharlie hesitated for just a moment. \"Yeah,\" he admitted. \n\nMrs. Tucker nodded. \"I won't embarrass you. Promise.\"\n\nAt 10:30, Charlie sat on the porch, scanning the street for Michelle's car. His mom was inside, supposedly watching television. The curb in front of the house was empty, and Michelle could easily have parked there. But he suspected she would park further away and it didn't surprise him at all when he saw her walking up the sidewalk. But her outfit did surprise him.\n\nShe looked like she had been to a job interview. She had on a black pencil skirt and a clingy long-sleeve white sweater, along with black stockings and heels. Pendant earrings dangled from her ears, and her make-up was impeccable, her lips a deep red. She carried a black leather purse on her shoulder.\n\n\"Wow,\" he said. \"You look amazing.\"\n\n\"Thanks!\"\n\n\"Did you just come from something where you had to dress up?\"\n\nShe cocked her head and gave him a look of disdain. \"No,\" she said coolly. \"I wanted to look nice for our date.\"\n\nHe almost said, \"What date?\" but caught himself in time. It seemed like the wrong thing to say, although he was still puzzled by why she thought their plans constituted a date. They would go to Greenholt Gardens, meet Ronni and Nick, walk around looking for places to film the movie. That wasn't a date, that was working on a project. It was true that he hoped to have some time alone with Michelle in the gardens later on that night, but she didn't need to be well-dressed for that. In fact, he hoped she wouldn't be dressed at all.\n\nInstead he said, \"You look gorgeous. Seriously.\"\n\n\"Thanks,\" she said again. She looked up toward his house.\n\nMaybe she was dressed up because she was going to meet his mom? If that was the case, she clearly didn't know his mom. Mrs. Tucker wouldn't have thought any less of Michelle if she'd shown up in a ripped t-shirt and a dirty pair of jeans. Clothes just weren't that important to his mother; she seemed to prize comfort in her own clothing choices more than anything. Anyhow, it seemed like a bit of overkill for Michelle to dress up so nicely for an encounter that would likely last less than five minutes.\n\n\"Come on,\" he said. \"Let's go tell my mom we're going.\"\n\nHe opened the front door and stepped inside. Michelle stepped in after him. \"Mom?\" Charlie called. \"Michelle's here. We're about to leave.\"\n\nMrs. Tucker appeared from the doorway to the kitchen. \"Wait! Let me say hello first.\" She walked over, smiling. \"My goodness, Michelle. You're even prettier in real life than in your yearbook photo.\"\n\n\"Hi, Mrs. Tucker,\" Michelle chirped. \"Thank you so much! It's nice to meet you.\" She offered her hand and Mrs. Tucker clasped it, holding it for a moment.\n\n\"Do you want to come in the living room for a bit?\" Mrs. Tucker asked. \"I can make some coffee. Or hot cocoa?\"\n\n\"We need to get going, mom,\" Charlie said.\n\n\"Right,\" Mrs. Tucker said. \"The film. Are you interested in film, too, Michelle? Are you an aspiring actress?\"\n\n\"No... I just told Charlie I would help him,\" Michelle said. \"I've never acted in anything before.\"\n\n\"Are you and Charlie in the same classes?\"\n\n\"Not this year.\" Michelle glanced at Charlie. \"We've been in a few classes together, over the years. Right? Like eighth grade English...\"\n\n\"Yeah,\" Charlie confirmed. \"Michelle and I have gone to the same school since the seventh grade.\"\n\nThe ghost of a smile flickered on Michelle's face. \"But it's only this year that we figured out we share some of the same interests.\"\n\n\"Yeah. Well, we should probably get going,\" Charlie said quickly, before his mom could ask any more questions.\n\n\"Nice to meet you, Michelle,\" Mrs. Tucker said. \"Don't stay up too late, you two.\"\n\n***\n\nIt didn't take as long as Charlie expected to drive to Greenholt Gardens, and they mostly hit green lights as they drove along the dark streets. Michelle was in a cheerful mood, and Charlie found he barely had to make any effort to keep her talking. Maybe she was feeling relieved after meeting his mother, or maybe she was feeling excited at the idea that she might streak through the garden later that night. Whatever the reason, she chattered energetically next to him while they drove.\n\nThey talked about movies, comparing the movies they'd seen and the ones they liked. Michelle was surprised to hear that Charlie seldom saw movies in the theaters.\n\n\"I get busy on the weekends,\" he said. \"Sometimes the guys invite me, but I usually have a reason to say no, and lately they don't ask as much.\"\n\n\"But you want to be a director, don't you? It seems like you should love seeing movies.\"\n\n\"I do love movies,\" he said. \"I just don't go to the movie theater.\"\n\nWhen they arrived at the parking lot at Greenholt Gardens, the time was just past 11 PM. The parking lot was empty except for two cars, a blue Nissan sedan and a black pick-up. \"We're pretty early,\" Charlie said as he pulled in next to the Nissan. \"I told Ronni we'd meet her here at 11:30.\"\n\n\"Is one of these her car?\" Michelle asked. \n\n\"I don't know. I hope so. No one else is supposed to be here.\" He peered out his window, looking for anyone standing near the closed-up entrance to the gardens. It occurred to him suddenly that maybe the reason Michelle had dressed up so nicely was because they were meeting Ronni. Could that be the reason, and nothing to do with meeting his mother? Ronni was still his date to the prom, and as far as Michelle knew, Ronni didn't know anything about their secret affair. Did Michelle feel threatened by Ronni?\n\n\"There she is,\" Michelle said, pointing out the window. \n\nCharlie followed Michelle's finger and saw a dark figure in the shadows, propping open a door which Charlie hadn't noticed before. The figure started to walk in their direction, and when she stepped into the light, Charlie recognized Ronni. He opened his car door and stepped out. He heard Michelle doing the same on the other side of the car. \n\n\"Hey!\" Ronni said. \"You made it.\" She waited for them on the sidewalk.\n\n\"Yeah. We're a little early,\" Charlie said. He opened the back door and retrieved the screenplay from the back seat.\n\n\"It's fine,\" Ronni said. \"We'll just have to stay away from the area near the restaurant for a while. Hi, Michelle.\"\n\n\"Hi,\" Michelle said.\n\n\"Thanks for setting this up with your brother,\" Charlie said to Ronni.\n\n\"No problem,\" she replied. \"Like I said, I think this film could turn out pretty good. I think it'll be interesting to work on.\" She looked at Michelle. \"Thanks for agreeing to be in it.\"\n\n\"Oh... sure.\"\n\n\"My brother's inside. You should go ahead and strip. Just leave your clothes in the car.\"\n\nMichelle blinked. \"What?\"\n\n\"I told my brother he'd get to see a naked girl. It's a big part of how I got him to agree to this. I told him our film has nude scenes, and one of the cheerleaders from school has agreed to do them. I told him he's welcome to gawk at that pretty naked cheerleader as much as he likes.\" Ronni gazed at Michelle. \"So you need to strip.\"\n\nMichelle was stunned. \"I said I would...\" she started to say, \"I mean, I'd said I'd be in the film... I told Charlie...\" She looked anxiously around the empty parking lot. \"Out here?\"\n\n\"I want to introduce you to my brother, and I think it'll be fun if you walk in already naked. It'll give him a thrill.\" Ronni shrugged. \"He has a boring job, he could use some excitement.\"\n\nMichelle looked around the parking lot again. She nervously pushed her hair back with her fingers and looked back at Ronni.\n\n\"It's a great outfit, Michelle\" Ronni said. \"You look really nice. But now you need to take off those nice clothes and leave them in the car. You can't come in while you're wearing them.\" Her voice was quiet but firm.\n\nCharlie looked between Ronni and Michelle. He was astonished that Ronni would give Michelle such an outrageous order. Yet he also noticed that Michelle hadn't said no. He wished Michelle would look at him, so he could gaze into her eyes and try to read what she was feeling. He tried to project his thoughts towards her: You don't have to do this, Michelle, if you don't want to. You don't have to do this.\n\nHe didn't speak the words aloud, because he remembered what Michelle said to him earlier in the week, when he was walking her to her car. How she fantasized about being put outside naked in a way that wasn't by her choice. He knew Michelle didn't have to do what Ronni was telling her to do, but he also wanted to let Michelle have the illusion that she didn't have a choice, if that's the way she wanted to see it in her mind.\n\nHe hoped this whole thing wasn't a huge mistake.\n\nMichelle caught her left sleeve with her right hand. She pulled her left arm into her sweater. Her right arm followed, and she squirmed out of the tight garment, pulling it over her head. Underneath, she wore a lacy sky blue bra. She turned towards Charlie, but it was only to hold out the sweater to him. He took it and held it in his hand.\n\nHe looked at her bra. She wore that for me, he thought. She thought she would undress for me, out there in the gardens, and she wore that bra, and probably a matching pair of panties, so that she would look sexy while she performed a striptease for me.\n\nNow it seemed that the bra and panties would remain outside the gardens with the rest of her clothes.\n\nMichelle was fumbling with the zipper on the back of her skirt, so Charlie stepped forward and slid the zipper down for her. He slid the skirt down her legs and she stepped out of it. As expected, her silky blue panties matched her bra. Her black stockings stopped at mid-thigh, with tiny black bows at the top.\n\nRonni gazed at Michelle's legs. \"You should leave on your stockings and heels,\" she said. \"My brother will think they're sexy. But take off your bra and panties.\"\n\nMichelle nodded. She reached behind her back and unclipped her bra. She pulled it off her body, freeing her breasts, and Charlie thought he saw Ronni's eyes widen slightly behind her glasses. Perhaps Ronni hadn't fully grasped until that moment that Michelle was really going to do it, she was going to leave her clothes behind and spend the rest of the evening naked. Michelle twisted at the waist and held out the bra to Charlie. He caught the thin garment as it dangled from her fingers.\n\nMichelle leaned over, pushing her panties down her legs, and Charlie caught a glimpse of her pussy as she crouched. She straightened, leaving the flimsy panties at her ankles, then stepped out of them. Charlie stepped forward to pick them up, but Michelle was faster. She knelt down and plucked the panties off the ground, offering them to Charlie, also offering a view between her legs which she left carelessly apart. He added the panties to the ball of her clothing in his hands.\n\nMichelle stood and turned to face Ronni, now dressed exactly as Ronni had requested; completely naked, except for black stockings and black heels. Ronni took a step back, looking at Michelle from head to toe. The corner of her mouth quirked up. \"Wow,\" she murmured. \"The camera is going to freaking love you.\"\n\n\"Can I meet your brother now?\" Michelle asked. She swayed nervously, her fingers touching the tops of her stockings.\n\nRonni stared at her for a moment. Then she laughed softly to herself and turned away. \"Yeah.\" She waved Michelle forward. \"Come on in.\"\n\n\"I'll put these in the car.\" Charlie walked to the back of his car and opened the trunk. Gently, he set Michelle's clothes and purse inside. As he pushed the trunk closed, he allowed himself a moment to appreciate the strange scene in front of him. Ronni and Michelle, standing next to each other under the white glow of the exterior light poles. Ronni, the junior from the AV crew, wearing jeans, a loose t-shirt and her usual dark-rimmed glasses. Michelle, the senior cheerleader, wearing nothing but stockings and heels. It was a strange juxtaposition.\n\n\"Ready?\" Ronni asked.\n\n\"Yeah.\" Charlie walked around the car and hopped onto the sidewalk. Ronni had already started towards the propped door, leaving Michelle to wait for Charlie. Charlie reached out and caught Michelle's hand as they followed Ronni. Her hand felt cold in his grasp, and she clenched his fingers tightly as they entered through the door.\n\nThey stood in a small storage room, with a second closed door in front of them. Ronni opened the second door a crack, letting in a dim yellow glow. \"Do you mind closing the outside door, Charlie?\" she asked. \n\nCharlie used his foot to shift the rock that Ronni had used to prop the door and the door swung shut. Ronni pulled open the second door, and they walked into a dark area which appeared to be a kitchen. They could hear the sound of a television from somewhere. Charlie could see a large industrial sink, a grill, a tall refrigerator with a glass door which was stocked with soda bottles and beer. He could see a cash register in front of a window. The window opened to another, larger room, where the lights were on, and Charlie could see tables and chairs in that room. He realized they stood in the back of the snack bar.\n\n\"This way,\" Ronni said, and led them through another door to the seating area. A large flatscreen TV was attached to the wall at the other end of the room, tuned to a late night talk show. They could see the back of a young man with short dark hair, sitting in a chair watching the TV.\n\n\"Nick,\" Ronni said. \"They're here.\"",
        "The man looked around. He saw Ronni first and got to his feet. \"Cool,\" he said. \"Did they... whaaa?\" This last drawn out syllable came as Nick noticed Michelle. He gaped at her with his mouth open.\n\nRonni burst out laughing at the look on his face. Michelle released Charlie's hand and stepped forward, letting the light fall on her. She showed no sign of embarrassment as she stood with her legs slightly apart and her arms at her sides, her body displayed for Ronni's brother. Charlie also stepped further into the room, although he might as well have been invisible for all the attention he got. Nick was completely focused on Michelle.\n\nWhen Ronni stopped laughing, she waved at Michelle. \"Nick, meet Michelle. Michelle, Nick.\"\n\n\"Hi,\" Nick said weakly.\n\nMichelle stepped towards Nick, and Charlie suddenly remembered the way she'd said goodbye to Daryl during one of their previous adventures. He watched as she walked right up to Nick and slid her arms around his neck, pressing her naked body against him. \"Hi, Nick. It's so nice to meet you.\" She rose and pressed a long kiss on his lips. Just as Daryl had, Nick hesitated for a moment, uncertain what to with his hands, before pressing them against her back and returning her embrace.\n\n\"Jesus, Charlie,\" Ronni muttered from next to him as they watched Michelle kiss Nick. Charlie remembered that Michelle had once confessed to him that she fantasized about kissing a stranger while she was naked. Now she was taking the opportunity to experience this fantasy again.\n\n\"I told her once I thought it would be hot if she was naked kissing a stranger,\" Charlie explained, trying to make it seem like she only did it to please him.\n\n\"That's not a stranger,\" Ronni replied. \"That's my brother.\"\n\n\"Well,\" Charlie murmured, \"you said you wanted him to have a thrill.\" \n\nMichelle finally ended the kiss. She smiled at Nick, then stepped back to stand next to Charlie. She took Charlie's hand again.\n\n\"...and this is Charlie,\" Ronni said.\n\nNick acknowledged Charlie with a nod, still stunned by the kiss. \"You said you were just going to look around today,\" he told Ronni. \"You said you weren't going to film anything.\"\n\n\"We're not filming anything,\" Ronni said.\n\n\"Then why is she like that?\" He stared at Michelle.\n\nBefore Ronni could answer, Michelle spoke up. \"Ronni thought I should be naked when you met me,\" she said matter-of-factly. \"She said you could use a little excitement.\"\n\n\"She said that?\" Nick stared at his sister. Ronni burst out laughing again. She couldn't deny that she'd said that, although it implied that she'd also asked Michelle to give Nick that long kiss, when actually the kiss had been all Michelle's doing. Instead of confirming or denying Michelle's statement, Ronni chose instead just to laugh.\n\n\"Fine,\" Nick said to Michelle. \"You surprised me. Now, how about you put your clothes back on?\"\n\nA moment of awkward silence followed this request. Ronni glanced towards Michelle for her response. Charlie had locked all of Michelle's clothes in the trunk of his car, and Michelle had watched him do it, her lack of protest indicating that she intended to be naked all the time she was in the garden. Charlie finally spoke up. \"She's good.\"\n\nNick raised his eyebrows. \"You're going to stay like that?\" he asked Michelle.\n\nShe nodded, bouncing her heels up and down. Her body already quivered with giddy energy. \"Is it okay?\" she asked.\n\n\"Uh... yeah. I mean, I knew your movie had nude scenes... I just didn't think...\" Nick shrugged. \"Yeah. I'm not going to complain if you want to stay like that. Just... you probably should stay away from Shamrock. The restaurant. Sometimes the cooks and the wait staff hang around there pretty late.\"\n\n\"Okay,\" Michelle said. \"We'll be careful.\"\n\n***\n\nThe first time Charlie discovered Michelle streaking through the school, he had convinced her to venture outside to the school's parking lot. He remembered how she stood naked under the night sky, her arms in the air, proclaiming how she felt so free.\n\nCharlie could only imagine how she felt now as they stepped out the doorway of the snack bar and saw Greenholt Gardens stretched out in front of them. They stood directly in front of the wide green field called the Concert Meadow, with the stone stage surrounded by rows of bench seating visible at the far end of the field. A long lily pond bordered the meadow to the left, and a sign pointed out the start of the \"Brook Walk\", a path along the trickling brook which fed the pond. Other signs showed the ways to the different gardens: the Japanese garden and the Tropical garden to the left; the Rose garden and the Oak garden to the right. The Shamrock restaurant also lay to the right, so they would avoid the gardens in that direction. \n\nMichelle swayed with restless energy and her fingers slid back and forth across the top of her stockings, tracing the area on her thighs where the stockings ended and her complete nudity began. It was clear that she was extremely stimulated. \"Are we really the only ones here?\" she asked breathlessly.\n\n\"We should be,\" Nick said. \"I'm the only guard at night. If anyone else is here, they're trespassing.\"\n\n\"Does that happen?\" Charlie asked. \"Trespassers?\"\n\n\"I've been patrolling this place for a few months now, and I've only caught someone sneaking in once,\" Nick said. \"That time, it was a bunch of junior high kids who wanted to toss around a glow-in-the-dark frisbee. I just told them they couldn't be here, and they left.\"\n\n\"It's so beautiful at night,\" Michelle murmured.\n\nNick smiled. \"Let's walk around. I'm due to walk a patrol anyway. I'll show you guys around.\"\n\n\"You have the screenplay, right, Charlie?\" Ronni asked. Charlie had the screenplay clearly visible in his hand but he suspected Ronni's real purpose for asking was to remind him that this visit was supposed to be for scouting film locations. He held up the screenplay for her to see, and she nodded.\n\n\"This way,\" Nick said. \"Have you ever been to the Japanese garden?\"\n\nAs they walked, Ronni pulled out her own copy of the script and began to talk to Charlie about the different scenes. While talking to Ronni and looking at her script, Charlie found that he was falling behind Michelle, and soon he realized that he was walking with Ronni while Michelle had pulled ahead and was walking beside Nick. Charlie felt a surge of jealousy, watching Ronni's brother talking with Michelle. He gazed at Michelle's naked back, her perfect rear end swaying in front of them. \n\nHis girlfriend, walking next to a man she had just met, naked and undoubtedly turned on. Could Nick tell how turned on she was? Michelle, his girlfriend, walking next to a man she had just kissed on the lips. What if Nick tried to touch her? What if he reached for her breast? Would she let him? Would Charlie try to stop him?\n\nMichelle, his girlfriend. But was she really his girlfriend? He'd never asked her to be his girlfriend. She had told Cody they were just friends.\n\n\"You're clearly distracted,\" Ronni murmured to him. \"I doubt you've heard a word I've said.\"\n\n\"Sorry.\" Charlie forced his eyes away from Michelle's ass. He made himself focus on Ronni's words, and hoped that Ronni hadn't noticed the erection that was trying to break out of his pants. \n\nThey reached the Japanese garden, and stepped onto a network of simple wooden bridges that traversed a koi pond. A circular island held a wooden pavilion that resembled a Shinto temple. Lights disguised as red lanterns criss-crossed above their heads, casting glowing red reflections on the water.\n\nCharlie was gratified when Michelle flew to his side and took his hand. \"Oh my god! Charlie! Isn't this so beautiful?\" She gazed in awe at the serene garden. \"Have you ever been here at night before?\"\n\n\"No, never,\" Charlie said.\n\n\"See those benches on the island?\" Ronni pointed. \"That's pretty good light. What do you think about filming the first scene there?\"\n\n\"Uh... yeah. Let's take a look.\"\n\nThey followed the wooden bridges to the island with the pavilion and walked to an area that had been set up with wooden tables and benches for people to sit and eat. It was a beautiful location, and Charlie moved around, imagining how he could set up his shots so that the pond and the lanterns would be visible behind the actors. He would need to enhance the light, but thought he could do it in a soft way that left the scenery still visible. \n\nRonni pulled out her phone and took some test video footage. At first she just filmed the tables and the scenery, but afterwards insisted she also needed to have some footage of Michelle. Michelle was clearly apprehensive, reluctant to have video of her nude body saved on Ronni's phone. But despite her nervousness, Michelle stood where Ronni asked, in the positions Ronni requested, and let Ronni record her.\n\nThey left the Japanese garden and circled through the Tropical garden. Although they could see shadowy areas on either side, Nick kept them on a path that was relatively well-lit. \"I don't check every inch of this place,\" he explained. \"Too many dark, winding paths. If anything's out there in the dark, keeping quiet, keeping to themselves, I'm not going to worry about them.\"\n\n\"Do you think anything is really out there?\" Michelle asked, peering into the trees.\n\nNick grinned. \"Could be. I've seen some deer.\"\n\n\"Let's head back to the snack bar,\" Ronni said. \"Mom and dad want me home soon.\"\n\n\"Yeah, right.\" Nick turned them in that direction. \n\nThey reached the start of the Concert Meadow, with the snack bar visible ahead of them. Ronni turned to Charlie. \"Will you walk me out to my car?\" she asked. \n\nCharlie glanced at Michelle, reluctant to leave her alone with Nick. But he also didn't want Ronni to walk out to the parking lot by herself. \"I'll be back in a minute,\" he told Michelle.\n\nMichelle's eyes flickered towards Nick. \"Okay,\" she said. \n\n\"Don't accidentally lock yourself out,\" Nick said, and chuckled. As Ronni led the way to the snack bar, Charlie glanced over his shoulder and saw Nick standing in front of Michelle, her bare breasts jutting out at him, almost touching him. He was saying something to her, something that made her smile.\n\n\"You don't have to worry about Nick,\" Ronni murmured. \"He's not going to try anything.\"\n\n\"Right.\"\n\n\"Nick won't. But I can't promise anything about Michelle. She already kissed him, and that was after they just met.\" Ronni leaned forward and whispered, \"Jesus, Charlie. I mean, did you see her? She's dripping, like literally dripping. The inside of her stockings are soaked.\"\n\n\"Yeah. I know,\" he said as they entered the snack bar. \"I could see it while you were filming her.\"\n\n\"That's right.\" Ronni shook her head in amazement. \"Everyone could see it. She must have known, right? That we could all see how turned on she was?\"\n\n\"I don't know...\" Charlie didn't want to think about it.\n\nThey walked through the kitchen and the store room, and Ronni pushed the rock back into place with her foot to prop the outside door. Instead of walking outside, she turned to face Charlie.\n\n\"You know why I made her strip outside, don't you?\" she asked, her eyes glittering.\n\nThe question surprised him, but as he met Ronni's gaze, the answer seemed obvious. \"Because you wanted to get even with her,\" he said.\n\n\"Yes!\" Ronni said. \"Because you asked me first! And then she came to you in the middle of the cafeteria and tried to get you to drop me! This beautiful senior cheerleader, acting like she can just take whoever she likes, no matter if they've already agreed to go with someone else... it just wasn't nice. It wasn't nice.\" Ronni looked down. \"So you're right. I wanted to get even. I wanted her to stand in front of me feeling exposed and humiliated. But she didn't even hesitate. She took her clothes off, right out in the public parking lot, just like that.\"\n\n\"It shocked her when you asked her to do it...\"\n\n\"Yes, I could tell. She was shocked. But then she did it, and she barely argued. She took off all her clothes just because I asked her to.\" Ronni looked at Charlie. \"I wondered why she trusted me so much. But the truth is, she doesn't trust me. It's you that she trusts. She trusts you a lot, doesn't she?\"\n\n\"Yes, I think so.\"\n\n\"And you trust me. Right? If you didn't trust me, you wouldn't have let her take off her clothes like that.\"\n\n\"Right.\"\n\nRonni reached for her phone. She accessed the camera and pulled up the videos she had taken in the Japanese garden. \"Here. I'm deleting all the videos I shot of her. The nude videos. Okay? Will you tell her I deleted them?\"\n\n\"I'll tell her.\"\n\nRonni held up her phone. \"See? All gone.\"\n\n\"Okay. I'll tell her.\"\n\nRonni pulled her car keys out of her pocket and jingled them in her hands. She looked pensive, and Charlie expected her to have something else to say about Michelle. Instead, she abruptly clutched her fingers around her car keys, squeezing them tightly. \"Well, I should get home. Bye!\" She stepped forward and gave Charlie a hug, which he returned after a moment's surprise. As she released him, she paused to look up at him. \"She does like you,\" she told him softly. \"I can tell.\"\n\nHe nodded, saying nothing.\n\n\"See you tomorrow,\" she said.\n\n\"See you.\"\n\nHe watched her get into her car, the blue sedan, and waited until she pulled out of the parking lot. Then he moved the rock back and let the door swing shut.\n\nHe walked back through the snack bar, his feet dragging like bags of sand as he anticipated seeing Nick and Michelle again. When Ronni asked him to walk her to her car, it had seemed like a normal, reasonable thing to do, and he'd agreed to it without much thought. But now it seemed extremely irresponsible for him to leave Michelle alone with a man they barely knew while she was naked and visibly aroused. He wondered with dread what Nick and Michelle would be doing when he found them. Kissing? Sitting in a chair, making out? Maybe even having sex? He felt like he'd left them alone long enough that anything could be happening.\n\nWhat would he do if they were having sex? Turn and leave, exit the garden and drive away? Sit and wait for them to be done, trying not to watch? Did he have any right to feel possessive of Michelle when he so often assisted in displaying her body to the world?\n\nHe tormented himself with these thoughts until he stepped out of the snack bar and saw Michelle on the Concert Meadow. She was alone and Nick was nowhere to be seen. She'd shed her high heels and turned in aimless circles on the grass in just her stockinged feet. She had her arms out and her face pointed to the sky, a beatific smile on her lips. She didn't notice him at first, but caught sight of him during one of her twirls. As soon as she saw him, she smiled and headed towards him.\n\n\"Where's Nick?\" he asked.\n\n\"He had to work,\" she said. \"He's in the monitor room.\" Before Charlie could say another word, she had her arms wrapped around him and kissed him furiously.\n\n\"What's the monitor room?\" he asked between kisses.\n\n\"The security room with all the monitors,\" she breathed as she pulled his hand to her breast. \"So he can see what's on the cameras.\"\n\n\"Cameras?\" Charlie peered to the side as he fondled her breast. Michelle continued to kiss the line of his jaw down to his neck, her body pressed against him.\n\n\"He asked if I wanted to see the monitor room,\" Michelle said. \"It's not a lot of monitors. They don't have have cameras everywhere. Just around the main areas.\" Her hands went to the front of his pants, unsnapping them. \"Charlie,\" she whispered urgently. \"I'm pretty close to having a complete freak-out right now, thinking about all the insane things I've done tonight. When Ronni asked me to strip in the parking lot and leave my clothes in the car... oh my god. Do you know what I imagined? I imagined following her through that door into the garden and all these people would be waiting in there, like a set-up. Waiting to yell surprise and laugh at me while I stood there naked. It seemed like such a real possibility ... I started to really feel scared it was going to happen... but then I took my clothes off anyway! I took them off anyway! Oh my god... that feeling of following her through that door...\" Michelle's body trembled with adrenaline. \"I'm on the verge of having a freak-out, Charlie, but first I want you to fuck the hell out of me. I'm so fucking horny right now and I need you to fuck me.\" Her hand went down his jeans, finding his cock and clutching it in her hand.\n\nHe let her push him towards a stone table until he leaned against the edge. She pulled down the front of his jeans, stroking his cock as it came free. He slid up onto the table, and she pulled his jeans down to his knees.\n\n\"Are you sure he can't see us on a monitor?\" Charlie asked as Michelle climbed up onto the table and straddled him.\n\n\"Oh, he can. He definitely can.\" Michelle gasped as she sank down onto his cock. \"Ohhh! I'm sure he's watching us right now. He's seen me naked all night... now I want him to see what I look like when I'm riding your cock.\" She began to bounce up and down on him. \"Oh god!\"\n\nCharlie struggled to comprehend what she had just said. But then she leaned over him, her hungry mouth finding his, her body continuing to move against him, and very soon he stopped caring about cameras entirely."
    ],
    "authorname": "jessica_tang_vonharper",
    "tags": [
        "exhibitionist",
        "voyeur",
        "streaking",
        "public sex",
        "public nudity",
        "submission",
        "cmnf",
        "enf"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/saturday-night-school-ch-07"
}