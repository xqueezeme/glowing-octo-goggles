{
    "title": "Doctor's Orders",
    "pages": [
        "Author's note-\n\nThis is my submission for the On The Job story event. It's a D/s story, without violence, bondage or pain play. I wanted to try to show the initial steps of a woman getting a chance to explore her desire for submission. And I wanted to try to show a dominant and commanding man without him being forceful, demeaning or insulting. I hope that comes across. \n\nAs always, I hope you enjoy it and I welcome any comments or feedback.\n\nThanks\n\nBelle\n\n@~~@~~@~~@~~@\n\nIt's funny how some memories flood through you. How the mention of someone's name causes a cascade of emotions that make you tremble. That wash over you so fast that you have to go somewhere quiet, get out of the public, to collect yourself.\n\nThat's what happened to me when I flipped open that chart. I knew that particular patient hadn't been back for a while, that the chart from her last admission was old. But I'd forgotten the timeline. Seeing his name in the discharge summary was like a punch in the gut and a tall drink of ice water all at once.\n\nI had to get up. I had to leave the unit and hide. I made it to the elevator and down to my office, thanking the stars that my officemate was out. I collapsed into my chair, shaking. He'd done so much for me, had showed me the doorway to the life I currently led. Without him, I don't know if I'd be nearly as happy, nearly as fulfilled.\n\nA sob lurched out of me, and happy, giddy tears slid down my cheeks. Had it really been that long? It was a couple of months, about five years ago. Six years out of grad school, certain that working in a psychiatric hospital was the right thing. I was finding my way, figuring out a career path. He came in and he helped me discover something fundamental about myself.\n\nHe's always there, in the back of my mind.\n\n*~~* *~~* *~~*\n\nI knew what he was, as soon as he walked in. I don't mean that I knew he was the new psychiatrist. Everyone knew that a temporary doctor was starting, that he'd be there a month or so while they tried to replace the one who'd quit. I don't mean that I knew he was from New York. That much was obvious the moment he opened his mouth. The accent was unmistakable.\n\nWhat I mean is that I knew instantly he was a Dom. It's not supposed to work that way, right? It's not like people have tattoos on their foreheads declaring their sexuality. No one includes a preference for control or submission when they're making introductions. But I saw him, and I knew. I looked at him and his nature, complementary to mine, announced itself as surely as his accent did.\n\nI saw it in the way he looked around the room, taking all of our measures in one swooping glance. I heard it in the easy confidence in his voice, joking with our notoriously officious and arrogant medical director. I watched him making himself at home in that crowded room, the assurance rolling off of him in waves. It looked like arrogance to so many other people. But his attitude resonated with me, deep in my core.\n\nI felt it, in the way my mouth went dry, my uterus did a backflip, and my clit stood up at attention. I felt it in the way his eyes seemed to bore into me, and how I struggled to meet his gaze. I felt it, in the way I was rooted to my chair, the blood rushed to my ears, and I sat up straight. I felt some kind of primal, almost cellular, connection to him, even in that moment. Every time I glanced up, he was looking at me. That moment is crystal clear, preserved in my brain, unalterable.\n\nHe walked into the conference room for that first Morning Report with the medical director, Dr. Dale, shooing him in the door and muscling their way to the table. We were crowded around it, in the beat-up, mismatched, hand-me-down chairs that state funded institutions always seem to have. There were more people than chairs; a gaggle of interns, medical students, and one late coming psychologist tried to squeeze into the corner. That's why I always get to those meetings early. All the staff from both treatment teams, nurses from both units, all crammed into that space. It was supposed to be a quick recitation of the events of the previous twenty-four hours.\n\nAt Morning Report we heard about who slept, who ate, who paced in the hallway all night long. We heard about who hit whom, or who tried to kiss whom, or who refused their medications. Sixty acutely mentally ill people, in as wide a variety of conditions as you could imagine. But that day, I had no idea what the nurses said about the patients. I had no idea what anyone said about anything. I was too focused on him, to acutely aware of his every move.\n\nAfter the meeting was over, I rushed back to my office feeling like a high schooler with a crush on a teacher. I had just turned thirty-three, and the grey at his temples made me guess that he was closer to fifty than forty. His eyes were the clearest pale blue, and his lips were full and pink, darker than you'd expect on someone with skin as pale as his. His hair, where it wasn't going to white, was very dark brown. He wasn't tall; his shoulders were fairly broad, but that might have been the cut of his suit jacket. He looked nothing like the men I'd been attracted to before. But my body quickly told me my history was irrelevant.\n\nI hid in my office, doing paperwork, calling families and trying not to obsess about having to be in meetings with him until it was time to be in another meeting with him. Not only was he the new psychiatrist, he was assigned to work on the treatment team with me and my officemate. The afternoon meeting was when we discussed the progress patients were making, the doctors would talk about treatment changes, and we'd update the treatment plans. That meeting was the chance that everyone on the team had to express their opinions and talk about what we'd seen from patients.\n\nWe went to the afternoon meeting, my officemate Julia, and I. There was less than usual on the agenda, only one treatment plan to review and update. A couple of other items that would be dealt with quickly. We still worked from paper charts in big three ring binders that connected at the top. Various kinds of notes were indicated by different colored paper, and it was a task to decipher everyone's handwriting.\n\nSuffice to say, there was a lot for the new doctor to catch up on. When I got to the conference room he was already there, flipping through a chart. Julia had peeled off, to go talk to one of the people on her caseload, so I was in the room by myself with him.\n\nI wended my way around to my favorite spot. When I sat, he looked up and appraised me.\n\n\"Oliver James,\" he said. His voice was a low baritone that rolled through the space. \"But maybe you already know that.\"\n\n\"Yes, Dr. James,\" I said. My voice sounded creakier than usual, so I cleared my throat. \"We met in Morning Report today. But I'm not sure we all introduced ourselves. I'm Leah. I'm one of the social workers on the team. Leah Abbott.\"\n\nHe leaned forward on the table just slightly, his eyes still locked on mine. He smiled, and pointed quickly at me, then tapped the table with one finger.\n\n\"Leah. I'm sure I will come to rely on you.\" He gestured over the chart laid out in front of him. \"I've got some learning to do, obviously. I'll need some guidance.\"\n\nI smiled back at him. \"Of course. I think you'll find that most everyone here wants to help.\"\n\nHe tilted his head, and I could see him start to say something else when Julia barreled into the room. Hard on her heels were the rest of the team. I'd never felt so intruded on, even though they were all supposed to be there.\n\nOver the course of that first week, I stole a few moments like that with him. I worked on the unit rather than in my office, and I showed up to every meeting early. Most of the time he was early too. He'd ask me where to find things in the chart, ask me about various policies, or who to go to with particular kinds of questions. I thought he had something kind to say about everyone, that he valued everyone's input. When we started telling him the history of the patients he didn't know, he listened. But he was also authoritative. He didn't like it when team members meandered when trying to give him information. He'd cut someone off if they were going into too much detail. He asked precise questions and wanted concise answers.\n\nJulia, especially, took a dislike to him. She frequently griped to me after meetings about how she couldn't give a one-word answer to his every question. Outwardly, I sympathized with her. Inwardly, I thrilled every time I heard a certain tone in his voice. I found myself listening for that tone, but also making sure I presented information in a way I thought he'd like. The few times that week that I was on the receiving end of that tone, it didn't bother me. It made me want to crawl over to him and beg his forgiveness.\n\nI'd leave the team meetings shaking my head, wondering what had gotten into me. But sometimes aroused and always craving his presence. I convinced myself that he leaned forward when I talked, or looked at me longer than the others, or that it wasn't an accident when his foot brushed against mine under the table.\n\nWhen I was back at home, I told myself I was imagining it. I told myself it didn't make any sense for him to be attracted to me. I reminded myself that I'm not pretty. I'm too short, too curvy; I have no fashion sense. I'm opinionated and independent in a way that most men don't find appealing. But I still felt it. I believed that he had made my measure as quickly as I'd made his. I believed that in the first few seconds when he'd walked in that room, he'd seen into me, seen my reaction, and that he knew what I craved as clearly as I did.\n\nYou think about something. You fantasize about it. You imagine and daydream about what it would be like. You plan how you'd react if given the opportunity to experience it. But you never think you will. I had spent so much of my life trying to reconcile the different parts of me. Trying to figure out how the same body held this opinionated, independent woman, who also wanted to be told what to do and used as a sexual object. I wanted respect from colleagues and appreciation for my intelligence, and I wanted to turn off my mind by being made to focus solely on the pleasure of some dominant man.\n\nThat had been my life. Imagining and dreaming. When Oliver James walked into that room, I knew the reality was there in front of me. I had only the vaguest sense of how to convert that opportunity into something real.\n\nLuckily for me, he didn't have any such concerns. As soon as he'd learned enough, and as soon as he had his chance, he made his intention clear to me.\n\n*~~* *~~* *~~*\n\nIt was the Friday of his second week. I was sitting in the conference room with several charts, writing my weekly progress notes. One of the charts was for a patient who'd been admitted the previous day. It was the eleventh time he'd been here in ten years, and I'd been the social worker assigned to work with him twice before. I hadn't seen Dr. James for most of the day, and I had managed to make myself concentrate on what I was doing, rather than sitting there wondering about him.\n\nThen he came into the room and sat in the chair next to me.\n\nI glanced up at him. He asked, \"Do you have Mrs. Winslow's chart?\"\n\n\"Uh,\" I said, looking over the pile of records I hadn't gotten to yet. \"Um, yeah.\" I reached over, pulled it from the stack and handed it to him.\n\n\"Thanks,\" he said. He flipped it open and sat there reading through the notes. I felt his leg brush against mine, his knee tapping on my thigh. I scooted sideways, thinking he wanted space to stretch out. He shifted in his chair, and I felt his leg again. His knee tapped and then settled, firmly, on the outside of my thigh. I glanced over at him, but he was looking through the papers.\n\nI pulled the chart I was writing in more closely to me, I slid my chair back from the table and away from him slightly. He reached a hand out and gripped the armrest of my chair, holding it still. He slid his chair closer, and I felt his knee again. It pressed into my leg, no mistaking the intention, and his hand held onto my chair, preventing me from moving it. I looked over at him, and then he was looking at me. He had one eyebrow raised and a half smile on his face.\n\nI let my leg relax and press into his. He nodded and let go of my chair.\n\nHe tapped the chart in front of me. \"Mr. Charles. I understand you know him?\"\n\n\"Yes, Dr. James.\"\n\n\"Tell me about him.\"\n\nI did. It took everything I had to talk coherently, to give him the clinical information and the history that would be useful to him in the concise manner he'd want. The heat from his knee on my thigh travelled up my body, straight to my pussy. The heat from his look as I was trying to talk travelled straight into my heart. It melted my brain. I was in the middle of a sentence and a nurse came in to ask him to rewrite an order. When he turned slightly to do as she asked, he pressed his leg against mine more firmly. My brain came to a screeching halt, and I trailed off without finishing the thought.\n\nWhen he was done, he handed that chart back to the nurse with a thanks, and turned back to me. His hand brushed mine.\n\n\"So, Leah,\" he said, and my name sounded like music coming out of his mouth. \"You were saying?\"\n\nI shook my head. \"I'm sorry, Dr. James, I've lost my train of thought.\"\n\n\"Ah, well. Happens to the best of us.\"\n\nHe pulled the chart he'd been reading, and started writing his own note. I managed to return my attention to the paperwork I was completing. His knee never left my thigh. We sat there for another hour writing notes. I'd pass him a chart when I was done with it. He didn't ask me anything else; we didn't talk much. But his knee never left its contact with my leg.\n\nWhen I was finished, I gathered up the charts. Breaking that contact with him felt wrong. I didn't move my leg. I just sat there, staring at the pile in front of me.\n\n\"Looks like you're done,\" he said.\n\n\"Yes, si--. Yeah, I am, Dr. James.\"\n\n\"Well, then, I guess it's time for you to go.\" He slid away from me, and I bit my lips to hold in the \"no\" I almost blurted out.\n\nI made myself stand up and pick up the charts. After I put them away, I went back to the conference room for the binder I carry around. As soon as he heard me, he picked it up and handed it to me.\n\n\"Have a good weekend, Leah. I'll see you Monday.\"\n\n\"You too, Dr. James.\"\n\nWhen I got back to my office, I flipped the binder open to check off my To Do List. He'd put a sticky note over it. It read: I WILL see you Monday. I didn't know what that meant. But my uterus did another backflip.\n\n*~~* *~~* *~~*\n\nAll weekend long I wondered and fantasized and fretted and berated myself for all the assumptions I was making. When Monday morning arrived, I woke up an hour before my alarm and laid in bed with my mind spinning. As I was getting dressed, I paid far more attention to my clothing than usual. I selected my prettiest bra, rather than my most comfortable one. I pulled out a pair of panties that hugged my hips. I picked out one of my favorite skirts. It was long and full, made of a soft cotton with an abstract floral pattern all around the bottom hem. I found a fine gauge knit top that hung to my hip, but felt silky and clung just a little bit around my breasts.\n\nI left my curly auburn hair loose, hanging just past my shoulders and I picked out a pair of earrings that complemented the tunic. I didn't bother with make-up, because I hardly ever wore it, and I knew suddenly showing up with eye shadow and lipstick would spin the rumor mill into high gear. I slipped on my usual pair of comfortable clogs for the same reason.\n\nI got to work a little early, feeling like I'd had too much coffee. I flew through some paperwork and rushed to Morning Report. When the nurse remarked on my outfit and my obvious good mood, I knew I had to tone myself down some. I shrugged off her comment by saying I'd had a nice lazy weekend.\n\nDr. James came in with the other psychiatrist. He didn't so much as glance at me. I assured myself that I hadn't misread the note, that I hadn't misunderstood his meaning the Friday before, and that he'd let me in on the plans. It didn't work. I held myself together, but the whole time I was trying to steal glances at him and trying to figure out if he was paying any attention to me. I made myself concentrate on the information, and managed to chat with our occupational therapist.\n\nWhen the meeting was over, I stayed and talked with our internist about a couple of patients. She asked about their discharge plans, and I told her where things stood and asked her some details about how much help one of them would need with some chronic medical issues. Dr. James got up and left at some point, and I made myself appear to ignore his departure.\n\nBut all day long, especially when I had to talk to him, there was a question stuck to the back of my teeth. All day long I wanted to ask, \"You said you wanted to see me, Dr. James? Is now a good time?\" All day long, the words echoed, unspoken, in my ears.\n\nI was too distracted to notice whether he was acting any differently. I was too wrapped up in my own warring emotions. But in the afternoon meeting someone commented on my skirt, and he concurred that it was pretty. My heart pounded in my chest, and I had a hard time acknowledging the compliment.\n\nHe made me wait all day. He made me wait until the very last minute, until I should have been leaving work. I'd decided to stay a little late, only partially to give him more time, but also to catch up on some things that I'd not gotten to in the rush of higher priorities. I was updating a treatment plan when my phone rang at 4:30PM.\n\n\"Social work, this is Leah,\" I said, making my usual greeting.\n\n\"Leah,\" he answered. His voice was smooth and a little gruff and those syllables sank into my brain.\n\nI inhaled, but before I could say anything he carried on. \"Come up to my office. Do you know where it is?\"\n\nI did, I knew his was on the third floor, on the same hallway as the psychology staff and two other psychiatrists.\n\n\"Yes,\" I answered. \"I'm finishing up a treatment plan.\"\n\n\"Good enough. Be here in thirty minutes.\" He hung up.\n\nWhen I hung up Julia asked, \"Who was that so late in the day?\"\n\n\"Oh, you know, a family wanting to see me. I'll go up in a little bit.\"\n\nShe shut her computer down and packed up. \"'K then. See you tomorrow. Don't let them make you stay too late.\"\n\nI nodded and laughed. We were always griping about families who showed up unannounced and derailed our schedules.\n\nShe shut the door and I turned back to the computer to finish the plan. But I just sat there and stared at the monitor for fifteen minutes. My heart was pounding again and blood was rushing to my ears. My mouth was dry again, and that giddy feeling was back in spades. My hands shook, just a little, as I managed to make the changes I needed to and print out the new document.\n\nI had five minutes. I walked quickly to the elevator, never more aware of the cameras in the ceiling that tracked so much of our movement. The elevator rose with its usual slow creaks and when the doors opened one of the psychologists almost crashed into me getting on. I laughed and said goodnight and waited until the doors closed behind me before I turned to let myself into that hallway.\n\nI found his office and knocked on the door.\n\nI heard him say, \"One moment.\" Then I heard a chair sliding and a quick footstep.\n\nI took a step back from the door and he opened it. His eyes were glittering and he was smiling broadly. He swung the door wide, but didn't move back, holding his place in the doorway and looking me up and down. He held onto the door with one hand, and reached out with his other.",
        "\"Excellent,\" he said. \"Come in.\"\n\nAs I stepped forward, he slipped his hand along the side of my neck and wrapped his fingers at the back. His thumb brushed my cheek, and his grip at the base of my skull was firm. He guided me into his office, just a step or two, and to the side of the doorjamb. He shut the door and I heard the lock engage. My back was to the wall adjacent to the door, and he stood just less than arm's length.\n\nMy eyes were glued to his. My whole body felt numb, gelatinous. My hands dropped to my sides, and though my heart raced, my breathing was slow and even. He moved me slowly and gently, positioning me so that my butt touched the wall lightly.\n\nHe brought his other hand up, tracing softly down my shoulder and upper arm, then back up. He brushed his fingertips over my cheek and I closed my eyes without thinking. When I opened them, he'd moved close enough that his breath flowed over my face like a warm wind.\n\n\"I'm going to kiss you now, Leah,\" he declared, softly.\n\n\"Yes, sir,\" I responded. It seemed like the only appropriate option.\n\nHe smiled even more broadly. His thumb rubbed on my cheek and he said, \"Yes. I knew you'd be a quick study.\"\n\nI stood stock still, rooted in that spot but somehow also floating above it. I tilted my head back just slightly, and he leaned down. The touch of his lips on mine was wonderful. He was slow and gentle, but also firm and insistent. I matched his movements with my own mouth, and let him slip his tongue past my lips. I tasted him, his saliva, and the faintest remnants of whatever he'd eaten for lunch. I didn't reach for him. I didn't try to touch him or caress him. I tapped his lips with my tongue and I leaned up into his kiss, but other than that I took no initiative. I just molded myself to him, adjusting my body to what it seemed like he wanted.\n\nThe kiss felt endless. My eyes closed and time slowed down until my heartbeat matched his motions. I distantly felt him brushing his free hand along my side, up my arm, and grazing the very tip of my breast. I put my hands behind my back and slid my feet apart. He pressed his body against mine and pressed me into the wall. Still, he kept kissing. I was swept up in it, my emotions roiling, happiness, desire, surprise and yearning, all flooding through me. I'd never been kissed like that before. I'd never been kissed by a man who acted like that kiss was an end unto itself, rather than just a prelude to something else.\n\nFinally, inevitably, he moved away. I followed him, pulling off the wall, and prolonging the contact as much as I could. When he kept moving, back to arm's length, I let him go with a sigh. When I opened my eyes, he was looking at me with an almost unreadable expression. It was like he was proud of me, and pleased with himself. But there was also hunger.\n\nHe brushed his thumb on my cheek again, and his fingers curled in the hair at the nape of my neck. He tightened his grip on me, reestablishing that I knew he was there. I raised my eyebrows slightly. I assumed the kiss was only the beginning, but I couldn't even begin to figure out the question to ask.\n\nI needn't have worried.\n\nHis free hand brushed down, across from one hip to the other.\n\n\"Now you will give me your underwear.\"\n\nHe said it so simply, as though it was so clearly a foregone conclusion that I didn't think about it. I reached down, slouching a little to grasp my skirt as far down as I could. I gathered up the fabric and slipped off my shoes. It was a little awkward because he maintained his grip on my neck, and he held me up straight even when I wanted to bend down. But I finally got to the hem of my skirt, pulling it up enough that I could reach under and slide my panties over my hips.\n\nOnce again, when I would naturally have bent over, his firm grip on my neck prevented that. I pushed the underwear down my thighs to my knees, then lifted one leg high through them. I wobbled a little on one foot, but he held me up. When I freed the other leg, I let the skirt drop. I held the panties up, showing them to him. He looked at me impassively and didn't reach for them.\n\nI folded and then rolled them, like I was putting away clean laundry. The obviously damp crotch was on the outside of the roll. I held them up with both hands, presenting them to him. This time he nodded and picked them up. He held them under his nose briefly, then put them in his pocket. He let go of my neck and stepped back.\n\nHis office was basically the same size as the office I shared with Julia. But he had it to himself. His desk bisected the room, parallel to the wall with the door. There was a chair in front of his desk, and his chair behind. There were two empty book cases along the wall that the door would swing against. I still stood with my back to the wall separating the office from the hallway. To my right was a narrow door that I knew led to a tiny half bath. Just beyond that door was an institutional looking settee, with heavy wooden arms and cushions covered in thick yellow vinyl. Behind his desk was a window with a deep ledge. He had a few books piled there.\n\nHe stepped back once more, and leaned on the chair in front of his desk. He looked me up and down, as I stood there, hands once again clasped behind my back. I was acutely aware of the gentle swirl of the loose skirt fabric hanging from my hips, and that my pussy was flooded. He put his hands behind his back, and looked pointedly at my crotch.\n\n\"Show yourself to me, Leah.\"\n\nI gasped, not from shock, but from pleasure and surprise. I wasn't offended; I was ecstatic. I trembled as I reached down once more for the hem of my skirt. I spread my feet further. I bent over, to yank the fabric up. He coughed. I looked up at him and his eyes had narrowed just slightly.\n\nI paused, then stood up straight, and repeated what I'd done earlier. I imagined that his hand was holding me up and that I wasn't just flashing him. In my mind, these movements became an important part of a ritual, some kind of ceremonial dance that needed to be performed correctly. My hands worked automatically, and I held his gaze, altering my actions by reading his reactions.\n\nI gathered all the fabric in my hands, rolling it as neatly as I could and holding my hands far apart. I lifted my skirt up so that the bottom hem rose higher than the waistband. I gathered and lifted until I saw him nod slightly. Then I stopped moving and let him look at me. I felt his gaze on my vulva. I monitored his expression for any disapproval of my naturally sparse bush, or the oddly shaped birthmark on my lower abdomen. He stared at me and my heart fluttered and pounded. My pussy clenched and I let myself stare at his crotch. I let myself imagine what he looked like, under his clothes.\n\nHe stood up and I braced myself for his touch. I wanted him to explore me, to slide his fingers or his tongue into me. I wanted him to tell me to strip completely naked. He didn't. He moved over to the couch and sat down, at the end nearest to me.\n\nHe raised one hand and crooked his fingers, the dropped them and patted the space next to him.\n\n\"Come over here, Leah. We've things to discuss.\"\n\nI knew enough not to drop my skirt. I walked over and started to sit. I perched sideways on the sofa, but it seemed wrong. I shifted around, sliding back away from him and then closer. He looked at me with an indulgent and amused expression.\n\n\"You don't want to sit next to me?\" It was halfway between an assertion and a question.\n\n\"No. Sir. I. I don't know. I just.\" I was out of words. I didn't understand why I was suddenly calling him \"sir\". I couldn't explain why sitting on the couch with him seemed inappropriate. I stared down at my lap, still gripping the skirt tightly.\n\n\"It's OK, Leah. Clearly this is all new to you. For today, you settle where you think you're supposed to be. If it pleases me, we'll keep it. If not, we won't.\"\n\nHis reassurance and understanding were a salve for my worries. His recognition of my inexperience as well as my desires calmed me. I instantly knew what I wanted.\n\nI slipped down to the floor, kneeling with my knees spread wide and the skirt tucked up by my hips. I pushed the fabric back, so that my thighs were exposed and he could still see my crotch. I clasped my hands behind my back and straightened my spine. I lowered my gaze to look at a middle point between his lap and the floor. In my peripheral vision, I saw him relax against the back of the couch, spreading one arm along the backrest. He let his legs fall open. That's when I noticed his shoes were off. He put one sock covered foot on my knee and pressed gently. I spread myself wider. He kept up the pressure, and I moved my knees as wide as I possibly could and maintain balance. After I was done, the pressure from his foot relented, but he left it on my leg.\n\n\"Such a quick study,\" he said. \"But one thing to correct. Look at me, at my face.\" I raised my gaze.\n\nHe looked at me with kind and knowing eyes. \"Never be ashamed of what you want, Leah. Of what you are. Never cower. This is all about communication. So, don't cut off any avenue you have to understand your partner.\"\n\nThat was my first lesson.\n\nMy second lesson was all about a different kind of exposure. He interrogated me. He was gentle and respectful, but it was nonetheless an interrogation. He probed and calmly demanded answers to deeply personal questions I'd hesitated to even ask myself. I knelt there on the floor, with the heat from his foot anchoring me and answered. I gazed up at him and bared my soul even more clearly than I was baring my sex. I told him my fantasies and my imaginings; I told him what I thought about when I prepared to masturbate and how I touched myself when I did.\n\n\"How long have you known?\" he asked.\n\nI shrugged. He coughed.\n\nI looked him in the eye, took a deep breath. \"Would it be a clich\u00e9 to say I've always known? That since I've understood anything about sex, I've known that I wanted something different than what gets portrayed in romance novels. I didn't know what it was, exactly, until I was older. But...\"\n\nI paused, looking at him. He just returned my gaze, letting the moment and the tension grow. It's something we do, all the time, with reluctant patients or when talking about sensitive things. Letting the silence build, being willing not to break it, until the client says something. Just because I knew the technique didn't make me immune to it.\n\nI looked at him, and the set of his lips told me he was willing to sit there in silence for an hour, or all night. His expression told me he was going to get a complete answer out of me.\n\nI cleared my throat, shifting on my heels. \"I like pain,\" I said hoarse and barely a whisper. \"The first time I masturbated. Well, the first time I orgasmed from masturbating, I used the handle of a hairbrush. And I liked the way the bristles rubbed on my inner lips. I.\" I closed my eyes, partially remembering those first fumbling explorations, and partially to try to seal myself off from his stare. \"I like feeling small and forgetting myself, and when I fantasize it's always about some man...\" I sighed. \"Some man basically owning me. Making me his. Making me into whatever he wants. Being compelled or obligated to do something he wants, just because he wants it. But. But also respecting me, and liking the contradiction.\"\n\nI shook my head and made myself open my eyes. He was smiling. He rubbed his foot along my inner thigh, grazed my labia with his toes, and then put it back. I realized his smile was pleasure. He wasn't mocking me or condescending. He was happy.\n\nI felt myself relaxing, being that much more willing to open up to him. I explained what studying and exploring I'd done. I told them about fumbling with boyfriends and making it seem like I was joking when they didn't understand. I told him about my college boyfriend who'd talked a big game about kink, but never followed through\n\n\"What do you think the problem was?\" he asked.\n\nI paused, remembering Eric and the things he'd promised. I thought about what I'd learned, but hadn't had a chance to practice, since then.\n\nI smiled briefly and shrugged. \"I think the problem was that Eric was a sub too. He knew the language, but he didn't know how to convey that he wanted me to take charge. I barely even knew the language. And I couldn't have taken charge. It wouldn't have worked. I wouldn't have been any good at it. Also, I'm pretty sure he was gay. Or at least bi. So, I think I wasn't exactly what he was looking for in that way either.\"\n\nI chuckled, and then I remembered that I was half naked and kneeling in front of this man I'd only known two weeks. I startled at how comfortable I'd gotten. I stared up at Dr. James and gasped. He raised one eyebrow and cocked his head to one side.\n\nI blushed and ducked my head. Then I shook it slightly. My mouth opened and closed.\n\n\"This just got very strange, didn't it, Leah?\"\n\nHis voice was so soft, so knowing. It rumbled through me and the vibrations settled on my heart. I managed to nod. My mind was whirling. I wasn't ashamed, but I was completely unsure of myself. I clenched my hands into fists, and looked down at his feet. He'd slid the one foot off my knee, and now both of his rested between my outspread thighs. I stared, suddenly fascinated by the pattern of his socks.\n\n\"Come closer,\" he said. The volume of his voice was barely above a whisper, but the command was as loud as a klaxon.\n\nI started scooting closer to the settee, trying to move while also maintaining my wide stance, and keeping my hands behind my back. It wasn't easy, but the task distracted me from the thoughts roiling in my brain. I heard a faint clatter and the telltale slide of a zipper going down.\n\nI looked up, grinning, as he pulled his tumescent cock out from his fly. I shuffled even closer to the seat, stopping when I felt his toes pressing up into my vulva. He moved his big toes, up and down, sliding back and forth over me. I shivered when his smooth silk socks tapped the well that was my soaking wet center. His toenail pinched, just slightly, even under the cloth, and that pinprick of pain made me shudder.\n\nHe held himself loosely in one hand, and reached for me with the other. Lesson three was about to begin. He cupped my cheek with the hand and rubbed his thumb along my jaw. I pressed my face into his hand, leaning on him like a cat, rubbing back and looking up at him. The saliva was running freely in my mouth then, and I licked my lips in anticipation. He held himself and my head, maybe an inch away from him. I moved my eyes to look at his penis, not fully erect but beginning to thicken. His hand clenched on my neck and I stopped moving.\n\nI stayed there, transfixed by his cock, liked I'd never seen one in person before. I had, of course, but this meeting had leant an important aura to everything about him. It was truth to say I'd never seen a cock as important to me as his was in that moment. When I was still and my breathing had slowed his thumb rubbed over my cheek again.\n\nHe said, \"You're going to learn what I like. You're going to do what I want. In this space here, you obey me. Out there is out there, and we follow those rules. In here, we follow only mine.\"\n\n\"Yes, sir,\" I whispered, and licked my lips again.\n\n\"Take me in your mouth, Leah. You should be able to fit all of me for now.\"\n\nI did, I opened wide and I stuck out my tongue, and he guided himself deep into my mouth. I sucked and swallowed, and rubbed my tongue on his underside and I kept slipping him in until my lips were at his base and touching the fabric of his fly. His hand never left my head, and when I had him as far into my face as I could get his fingers tapped gently on the side of my neck.\n\nHe gave me instructions; he gave gentle corrections. He angled my head the way that felt the best for him, and told me to open my mouth wider. He told me tricks to ease my breathing while I was full of him. Everything I did well earned me a compliment and a gentle tap on my neck. Soon enough he was fully erect and I could no longer hold him completely in my mouth. His thumb moved on my cheek in a slow rhythm and I pulled off of him, then slid back down at a similar pace. I maintained that pace, letting him fuck my mouth, and then matched as his thumb moved faster. He pulled me down onto him and I gagged and he let me off long enough to collect myself. Then he did it again.\n\nMy pussy was dripping and I found myself pumping my hips in time with my mouth. He pressed his toes up into me, and they dragged over my clit and it was better than any toy I'd tried. He tapped my neck, encouraging me and I humped his feet, fucking myself on him while he fucked my mouth. It was like a great circle of fire and pleasure and I lost myself in the sensations. I lost myself in the feel of his jutting prick invading my mouth and his glans taking up residence in my throat. I lost myself in that frisson of pain as I rubbed the most tender and exposed nerves I have on the hard silk covered keratin at the end of his feet. I felt dirty and animalistic and totally free.\n\nI made one major mistake. At some point I forgot about him, even though his cock was deep in my throat and his hips pumped as much as I moved up and down his length. For a moment all I registered was the feeling in my pussy and the need in my clit. I rammed myself down onto him mindlessly, moving faster and faster in smaller and smaller strokes until an orgasm bloomed and exploded out of me. I cried out, choking on his cock even as my body shook and shuddered. I jerked up and let his cock fall out of me. I gasped and groaned and tucked my chin to my chest as the last throes of the climax rolled through me.\n\nHe didn't say anything, but his hand on my neck became a vice. I twisted in his grip and tried to look at him, but he grabbed his cock and shoved himself back into my mouth. I opened my lips and teeth wide and he fucked my face in earnest. He held onto me with both hands, pulling my head down into his lap and then shoving his hips up and up until my nose was smashed against his pelvis. This time when I gagged, he didn't let off. He spat a single reminder to breathe, pulled out a fraction of an inch so I could, and then slammed himself back in.\n\nThe odd thing was that even in that moment, I wasn't afraid. I left my hands behind my back; I didn't try to get away from him or pull off. I wanted him to find his pleasure however he wanted. I accepted his changed behavior as both his educational opportunity, and my deserved remonstration. When he realized that I wasn't going to balk he became less frantic.\n\nHe slowed his pace. He didn't pull me down as far or as hard has he had. I managed to look up at him, though my eyes were bleary. He stared down at me with an iron look and I felt a magnetic attraction once again. He pumped into me a few more times, then pulled halfway out and erupted into my mouth. His cum was thick and briny. He filled my mouth and I clamped my lips around his shaft to keep from spilling any. His cock twitched and jerked and with each spasm another spurt shot into me.\n\nHe pulled me off of him slowly.\n\n\"Show me,\" he said.\n\nI opened my mouth, I showed him how full it was. The smell was thick in the air. I gazed up at him, waiting for instructions.\n\nHe nodded. \"Swallow.\"\n\nI did. I swallowed it down and relished the taste. He laid my head on his knee and stroked my cheek and my hair. When we'd both caught our breath, he rearranged himself and closed his pants. I remained with my head on his knee, feeling satisfied but yearning for more.\n\n\"You did well, Leah, for the most part.\"\n\n\"Thank you, sir.\"\n\nHis hand continued to stroke my hair and his feet remained trapped between my thighs. He sighed, and I wanted to look up at him, but his hand on my head wouldn't be disturbed. I don't know how long I stayed like that. I know that it suddenly registered with me that the room was very dark, that at some point the sun had gone down. The only illumination was the ambient light from the parking lot, far below.",
        "He shifted, he tapped the top of my head and I sat up. He patted the seat next to him, and I managed to rise. He helped me steady myself on legs that were partially numb from kneeling on tile floor for so long. I sat sideways on the couch, one foot on the seat, with that knee resting on the backrest. My skirt was still rolled up and tucked behind my hips so my sex was completely exposed to him. With my legs spread he could see anything he wanted to look at. He looked in my eyes.\n\nHe turned sideways to face me, his hand coming to rest on my propped up knee. He gazed at me, and that felt more intense and more intimate than the sex we'd just had.\n\nAfter a moment that seemed like an hour he said, \"You should go home.\"\n\n\"Yes, sir.\"\n\nI couldn't be disappointed, but I already craved more of him. I stood and arranged my skirt so I was covered. I slipped back into my shoes. Then I stood in front of him, hands behind my back. I was hoping that he would kiss me again.\n\nHe looked me over. \"Tomorrow, same time here.\"\n\n\"Yes, sir.\"\n\nHe stood suddenly, but stepped toward his desk. \"In fact, let's plan ahead. Every day this week. You present yourself to me here at 5PM.\"\n\n\"Yes, sir.\"\n\n\"You should be able to hand me your underwear as soon as you walk in the door. We'll take it one step at a time after that.\"\n\n\"Yes, sir. Thank you, sir.\"\n\nHe sat behind his desk. I knew I was dismissed. I still felt giddy and content.\n\n*~~* *~~* *~~*\n\nThat's how the rest of that week went. His third week as a psychiatrist at my hospital. The first week of the rest of my life. Each day I went to his office at 5PM. I knocked on his door and waited to be invited or let in. I presented him with the panties I'd worn all day. Each day he had me take off more clothes. I got used to being physically exposed in his office. Then I would kneel at his feet and we'd talk.\n\nEven if I'd wanted to, I wouldn't have been able to keep secrets from him. He was perceptive, observant, and knowledgeable. I sat at his feet, like an acolyte, and he bestowed the wisdom of his years as a Top. He used everything he knew, from the lifestyle he led and the education he had, to draw out of me all my hopes and fears about giving myself over to someone. The more we discussed it, the more I craved it.\n\nMost evenings, when we'd talked enough for him, he'd pull out his cock and I'd fellate him. He kept giving me lessons, correcting errors, explaining the difference between what he liked personally, and what was generally pleasing to men. He always kept one hand around the back of my neck, and I soon learned that the gentle tap of his fingers was my reward. Unlike the first day, he didn't put his feet between my legs. It was clear that I was supposed to be thinking about only him while he used my mouth. Afterward, after I'd swallowed his cum, he'd let me finger myself. But he told me I had to wait until I was home to orgasm. Those drives home were some of the longest half hours of my life.\n\nHe set the ground rules for the relationship. We would meet only in his office. We would not exchange personal contact information. We both knew the relationship would last only the duration of his contract with my hospital. I readily agreed to all those terms, but privately wondered how it would leave me when the relationship was over. Having gotten a taste of what I'd wanted for so long, what would I do when it was gone.\n\nI think it was that Friday, of that first week of the relationship that I mentioned it to him, my worry about what I'd do after he left.\n\nI was sitting on the couch sideways, facing him with my foot on the seat. He leaned against my shin and was playing with my hair. Something about the tenderness in his expression made me tearful.\n\n\"Are you upset, Leah?\" he asked, breaking me from the thoughts running around in my brain.\n\nI tried to smile. I looked at him, bit my lips, shook my head slightly.\n\nHe tugged my hair. My eyes widened. \"You must always be honest with me. Always.\"\n\n\"Yes, sir. I'm sorry, sir. I'm worried. I'm not upset about this.\" I gestured between us, swept my hand across my exposed mound. \"I like this. And that's what worries me.\"\n\n\"That's what worries you?\"\n\n\"What am I going to do when you're gone?\"\n\nHe shrugged. He tilted his head and tugged my hair again. \"You might hate this by the time I'm gone. You might realize that reality doesn't measure up to fantasy. Which it rarely ever does. You might hate me, and be glad that I'm leaving. You don't really know. Do you? You only think you know.\"\n\nI stared at him. Every bone in my body knew this was right for me. Every cell knew I wanted him to keep teaching me. I replayed what he said, and realized he didn't mean it dismissively. He was being pragmatic, practically looking at all the possibilities.\n\nI shook my head so hard my whole body shook. \"No,\" I said. \"No. I know this is right.\"\n\nHe shrugged again. He leaned away, stood and went toward the bathroom. \"Time for you to leave.\"\n\nI got dressed; I waited for him to come out. He didn't kiss me goodbye. All night long I pondered what he'd said. I was determined to prove to him that I wasn't wrong about what I thought.\n\nI was comfortable being completely naked around him. I knew when I went to his office, that's what he would expect. The next week was much the same. I went to his office about 5PM, when it was reasonable to think that the other staff on his hall had left for the day. I didn't make much effort to hide where I was going, and rarely ran into other people. I already had a reputation of working late fairly often, so I believed anyone I did run into wouldn't think too much about it.\n\nThat week was a continuation of the first. I got the impression that he was increasing my comfort level with being nude around him, with exposing myself, and allowing him to explore my body. We did very little, sexually, other than fellatio and touching.\n\nI was ok with that. Even though I was eager to learn, and more eager to please him, I was still nervous and unsure. I appreciated that he was taking things slow. That seemed to be a theme with him. He even liked his blow jobs slow. He liked to prolong his arousal, and delay his orgasm as long as he could. He explained all kinds of ways for me to pleasure him without bringing him to the brink. He taught me to pay attention to his physical signs that he was getting close, and to read his expression as to whether he wanted me to back off or intensify what I was doing.\n\nIt was a thrill, that he was giving me as much control over his pleasure as he did. But I came to understand that he was teaching me communication and awareness of what my partner would want. Kneeling there, between his legs, with his long prick in my mouth, trying to look up at him, trying to listen to him, that was the greatest, truest intimacy I'd had with anyone. It filled me with pleasure and satisfaction even when I wasn't sexually gratified.\n\nSome of the time, he didn't want that. He liked to touch me, to caress my body and fondle me, without concerns as to whether I got aroused, or he did. He liked for me to drape myself over his lap, so my shoulders were on one of his thighs, and my head hung down onto the couch. He'd have me raise my hands above my head, and my back would naturally arch over his lap.\n\nI'd lay there, staring at the ceiling, or watching his face as his hands traced the contours of my body. His fingers would glide over my skin, gently kneading my flesh or tracing patterns with his fingernails. He'd squeeze my breast and roll a thumb across my nipple, or slide the palm of his hand around in circles on my lower abdomen. He sometimes played a game where he wrote words on my stomach with his finger and I was supposed to guess what they were. It was another lesson in remaining attentive, and in using all of my senses to process what was happening.\n\nIt was more difficult than I ever would have expected. I loved the sensations and his presence, his warmth and his actions served to relax me completely. I'd wind up closing my eyes, drifting off in a haze caused by his touch. I'd feel myself practically melting into him. Usually, then he'd pinch one of my nipples, or the really tender skin under my breast to make me wake up and attend to him again.\n\nOne evening, while I was relaxed like that, and he pulled out his personal laptop and placed it on my stomach. I heard him typing for a while, then he stopped, then he started typing again. After about thirty minutes a thought struck me and I started laughing.\n\n\"What's so funny?\" he asked.\n\n\"I just had an absurd thought, sir.\"\n\n\"Yeah?\"\n\n\"Yes, sir. I was imagining what Julia would do if I told her how I'd been spending my evenings.\"\n\nHe cocked his head sideways to look at me. \"And? What do you think she'd do?\"\n\nI looked over at him, and moved my hand to caress his side.\n\n\"I can just imagine it now. I come into work tomorrow and Julia asks, 'How was your evening?' And I respond, 'It was lovely. I spent several hours as a lap desk.' She'd probably have a stroke. Or call our boss and tell her I needed to be evaluated for hospitalization.\"\n\nI started laughing again, picturing the look on her face. I glanced at him, and he was grinning.\n\nHe patted my thigh. \"And a very serviceable lap desk you've made.\" He chuckled. \"Though, I could think of some improvements.\"\n\n\"Yes, sir?\"\n\nWe spent the next ten or fifteen minutes imagining modifications to my job as a lap desk. He mentioned sticking a beer koozie between my thighs to hold his drink. Or making me raise my hands to hold a tray of snacks for him. He said I was actually a combination heated blanket and lap desk, and therefore unique.\n\nIt's one of those things, if my friends or co-workers had any idea, they'd be dumbfounded. But I enjoyed that. I enjoyed laying there, under his hands, accepting whatever touch or instruction he wanted to give me. I enjoyed it. I felt contentment. I knew he was objectifying me. He was almost literally objectifying me. And that's what I wanted.\n\nWhen we'd finished laughing about me being his lap desk, I slid off the couch and took his prick in my mouth. I gave him a protracted blow job, during which he backed off from orgasm at least three times. When he did, his spunk shot into my mouth with enough force to make my cough and choke. But I managed to save some to show him, and he grinned like a kid when I swallowed.\n\nWhen I knocked on the door that Friday, he didn't rise to let me in.\n\n\"Come in,\" he said and the way the sound echoed made me realize he was still at his desk.\n\nI entered, carrying my underwear. I shut the door behind me. He was looking at his computer monitor, typing.\n\nHe didn't glance at me when he said, \"Lock that.\"\n\nAfter I had he looked at me briefly. I started to hold up my rolled-up underwear. He leaned back in his desk chair. \"When you're finished undressing, stand in a way I'll find pleasing and wait.\"\n\n\"Yes, sir.\" My pussy flooded. There was something so ineffably erotic about taking his orders.\n\nI took off my clothes, slowly, making sure he could watch me, and putting them away on the shelf carefully. When I was naked I went to the spot he'd indicated. But something felt off. I looked over at my clothes and saw the panties. I picked them up, then went back in front of his desk. I spread my legs wider than my shoulders, and stood up straight. I held my hands together with the roll of cloth balanced on my palms, and raised my hands up and out. He gave no sign that he noticed what I'd done. I stood there, not moving, my mind racing and me trying to control it. I looked at his face, watching him read what he was typing. His fingers flew on his keyboard.\n\nA cold draft circled from somewhere, and I realized his air conditioning had just kicked on. I was standing in the path of the ventilation. I shivered slightly. I saw him glance up and look at the unit holding the fan. His lips twitched in a smile, as though he was enjoying my discomfort. Still I waited.\n\nI think it was only a few minutes, but it felt like an hour. Finally, he finished what he was doing and stood.\n\n\"That's such a classic pose, Leah,\" he said as he walked around the desk. He leaned on it, maybe three feet away from me.\n\nI blushed. I tried to maintain his eye contact as he crossed his arms over his broad chest and stared at me.\n\nHe sighed, pushed himself off the desk and stepped toward me. He circled me, one hand barely grazing my skin as he walked around. When he stopped in front of me, he said, \"I do love the classics.\"\n\nHe took my hands in his and straightened my arms, then pulled them up so my elbows touched and my wrists were bent. The roll of panties had shifted to my fingers. My vision was blocked by my forearms and that made the whole thing slightly disorienting. I heard him moving around. I heard the squeak of the couch as he sat. I dared not move. He made me wait again, and I tried not to shiver in the breeze of the ventilation system. I heard him sigh contentedly again. Then there was more movement and he was behind me. I felt the heat of his body. He reached over my shoulder and plucked the roll off my hands. I watched him toss them onto his desk.\n\nThen he gripped my wrists and moved my arms again. He placed my hands flat on the top of my head, one over the other. He spread my elbows wide, pulling back on my arms until my spine was completely straight. His hands brushed down my sides and he made a fist. He put that fist between my legs, his knuckles brushing my labia. He tapped my legs in turn and I spread them wider. When his fist fit snug between my thighs, but not touching them he told me to stop.\n\nIt was a much wider stance that I'd thought of. I felt every square millimeter of my vulva hanging, exposed, the breeze tickling my hair. It was not comfortable.\n\nHe circled me again, making slight adjustments, pushing on one hip, tapping my knee so that I didn't lock my legs. His fingers brushing over my skin again. Then he went back and leaned on his desk. He picked up my panties and smelled them. His hands dropped to his crotch, still holding my underwear. I looked at his face, because that's what he'd kept telling me to do. He smiled.\n\n\"Do you feel that, Leah? Do you feel how spread out you are? How available you are?\"\n\n\"Yes, sir.\"\n\n\"You understand that you're here for my benefit. For my pleasure.\"\n\n\"Yes, sir.\"\n\n\"I want you to remember this position. Remember the angle of your legs, the strain in your thighs. Remember how straight your spine is. Remember what your shoulders feel like. Remember it. From now on, when I tell you to present yourself to me, this is what you will do.\"\n\n\"Yes, sir. I understand.\"\n\nI wanted to be there. I wanted him to treat me like this. I wanted to be his object. I got as much pleasure out of it as he did. I wanted more, though, too. I wanted more than the taste of his cum in my mouth. I wanted more than his words and instructions. But I had to wait. I had to take whatever he chose to bestow on me. And I'd have to earn even that, through obedience and deference.\n\nHe stood up and walked over to me. He reached out and brushed my pubic hair with the backs of his fingers. He turned his hand and slid his long middle finger into me. He moved slow and easy, sliding over my clit into my vagina as far as he could without bending. I was soaking wet. I was incapable of offering resistance. I felt my tunnel clenching around him. I saw a slow smile spread over his face. He left his finger where it was and raised his other hand to brush back a stray curl that had fallen over my shoulder.\n\nHe looked deep in my eyes, and slipped his finger out. Then, as he watched me, he slid it deeply back in. My eyes fluttered, but I managed to keep them open and lose myself in his deep ocean stare.\n\nHe said, \"You're very beautiful, Leah. But I don't think you know that.\"\n\nI made a startled little gasp. His thumb brushed over my mouth, pulling down my lower lip. I'm not beautiful. I've never thought of myself that way. I'm shorter than most women, and curvier than I should be. My eyes are a plain dark brown. My breasts are a little larger than average, but not anyone's definition of perky. My best physical asset is my hair. People aren't drawn to me for my looks. If they're drawn to me, it's because of my sense of humor, my intelligence, and my compassion. His assertion that I was beautiful tipped everything I knew about myself on its side. But I couldn't argue with him. I couldn't disagree with this man who was so expertly molding me.\n\nThen he said, \"Better than that. You're beautiful, and you're going to make some lucky man a wonderful submissive.\"\n\nHis thumb traced over my mouth again, and his finger slipped out and back in below.\n\nHe brought his lips to my ear and whispered, \"But you're not just a submissive. I know.\"\n\nThen he moved and kissed me. He kept sliding his finger in and out of my aching cunt. He matched that movement with his tongue in my mouth. I opened myself to him, tried to lean into him. But the spread of my legs and my hands on my head made that difficult. He wrapped his hand around the back of my neck; it was a sensation that had come to mean so much. He held me still while he pressed his mouth to mine and claimed it with this tongue. He claimed the rest of my body with his finger inside me.\n\nHe read me. He read my body's reactions so easily it was like he'd known me for years. He read the tension starting to build, the strain in my stomach and legs. He felt my arousal and knew an orgasm was building before I did. To this day, I believe that is true. It wasn't so much the physical sensations of his finger, his mouth, and the press of his body. Those felt nice, but none of them would have been enough to make me climax. It was the knowing way he'd spoken. The assurance and intimacy in his statements.\n\nI felt like I was falling, like he was holding me up. His approval was the aphrodisiac and his actions were almost irrelevant. In that moment, I thought that I would orgasm from the sound of his voice alone.\n\nHe pulled away from me, and once again I tried to move and follow him. He slid his finger out of my hole and stepped back. His hand remained around the back of my neck, anchoring me to him. My legs were shaking and I panted softly. He put his finger in his mouth and sucked my lubrication off it. Then he let go of my neck.\n\n\"Go lie down on the couch,\" he said. \"Arms over your head, hands on the armrest.\"\n\nI did as instructed. He hadn't specified, but I assumed he meant for me to lie on my back. The armrests weren't solid, I slid my hands through the space and wrapped my fingers around the wood. I moved my hands together until they touched, and scooted my ass down until my arms were stretched. I settled down, spreading my feet as much as I could, pressing one foot against the back, and letting the other balance precariously on the edge of the seat. My legs were slightly bent, due to the length of the couch.\n\nHe waited and watched until I was settled. I arched my back a little, feeling my breasts shift. My nipples were already hard, and the movement made my areolas contract even more tightly. I breathed out, trying to center myself. My mind was spinning. I was imagining him undressing and climbing on top of me. I wanted his cock inside me. I desperately wanted him to fuck me. But more than that, I wanted him to do exactly what he wanted.\n\nHe paced the length of the couch, staring down at me. He reached down and brushed hair back from my forehead. He walked and stood near my feet, looking along the length of my body. He instructed me on some adjustments. I slid up so that my arms bent. He pulled at my knees and I rested one bent leg on the back of the couch, and the other knee hung off the edge.\n\n\"Yes, that's better,\" he said.\n\nHe picked up the chair from in front of his desk and put it down next to the settee, so that he was level with my pelvis. I knew without him saying that I needed to remember this position as well. I thought about the feel of my arms and legs, I marked where the seam of the cushions dug into my butt. I noted where the edge of the seat dug into my thigh and calf.",
        "He sat down and his hands started roaming all over my body. He touched me, caressed my flesh, all over my stomach, my legs, and my arms. He lightly brushed my hips, ran his fingers through my pubic hair. He reached for my breasts, fondling them, wrapping his long fingers around and rolling my nipples under his thumbs. His hands sought my neck, stroking up under my chin, down around behind, and then across my shoulders to my arms. He touched my firmly, and my skin sang for him. I stared at him, watching his face as he explored me. I ached for him to insert his fingers, more than one, inside me. I wanted him to pinch a nipple, or better yet, bend down and suck one into his mouth. To suckle from me, and capture me with his teeth. He didn't; he used only his hands.\n\nHe explored me; he touched me; he aroused me thoroughly. Then he tested me.\n\nHe took his hands away, putting them in his lap. He looked down and I felt the ghosts of his movements all over me. The fan had cut off, and the air was still in his office. My heart pounded and my eyes were glued to his. He didn't look in my eyes, he looked down at my crotch. I felt his gaze there, and my pussy clenched again. I felt a trickle of moisture flow out of me and slip down. His expression was clouded, like someone daydreaming, in a reverie. He sighed heavily, blinked and looked at my face.\n\n\"Oh, Leah. There are so many things I want to do to you. So many things I would do, if we were at my house.\" He laughed, low, deep in his throat. \"I see you, Leah.\" He paused, collecting himself. \"Oh, yes. So many evil and painful things I'd do. You wouldn't know whether to beg me to stop or beg me for more.\"\n\nIt was happening again. Just the sound of his voice, these ruminations, these vague promises we both knew he wasn't going to keep. That was enough to make me gush. That was enough to make my labia swell and my clit engorge. My heart fluttered, my eyes fluttered, my cunt fluttered the most.\n\nHis hand slapped down, once, right at the midpoint between my hips. I startled, gasped. But he left his hand there; he didn't bring it up for another strike. He was absolutely right, and of course I'd explained it without quite bringing myself to use the word. I'm not just a submissive. I'm a masochist. I didn't just want him to use me; I didn't only want to sublimate myself to his desires. I wanted him to hurt me. I wanted his desires to include inflicting pain on me. I shuddered under his hand. I opened my mouth, but no words would leave it.\n\n\"I'm not a nice man, Leah. I'm really not. You should see...\" He trailed off, looked around his office. \"We could improvise, there are plenty of things right here. But...\" He looked back at me. His hand hadn't moved, and I felt a growing heat in my center.\n\nHe cocked his head, leaned on his hand, pressing it into me. I was transfixed by his gaze. I gripped the armrest more tightly. I pressed my hips up, silently signaling that he could do whatever he wanted.\n\nHe nodded. \"Oh, yes. I see you. I understand. But we don't have any privacy, do we? Not really. We're not the only people in the building, not the only people who work late. I do want you to enjoy yourself, Leah. I only get off on this if you do, too. But you have to be quiet. You have to be completely quiet. Even when you cum. Especially when you cum.\"\n\nHis hand moved then, down, between my legs, the tips of his fingers brushing my outer labia. He scooted the chair closer to the couch. He ran his other hand over my breasts, tweaking each nipple, and then sliding it down to join the first hand. One of his hands, poised to enter me. The other lightly touching my mons.\n\n\"Prove to me that you can control yourself.\" He slid a finger inside me abruptly. I inhaled sharply, but managed to keep it inaudible. He nodded again, pulled that finger out, dragging it directly over my swollen clitoris. I closed my eyes and ground my head into the seat. I clamped my lips shut, pressed them between my teeth.\n\n\"Alright, I'll keep going. But if you so much as moan then I'm going to stop. Say you understand.\"\n\n\"I understand, sir. I have to stay quiet.\"\n\n\"Good. Make a noise and I'm going to gag you with my cock.\"\n\nI really wouldn't have minded that, either.\n\nHe moved his fingers again, and this time slipped two inside me. He slouched sideways, leaning on the backrest, one hand between my legs, and the other on top. He pumped his fingers, fucking me in a steady rhythm not dissimilar to when he fucked my face. His other hand roamed over my pelvis, touching, pinching skin lightly. He found the point of my hip bone and ground his thumb into it. It hurt a little and my eyes fluttered. I started to moan, but managed to swallow the sound and clamp my teeth shut. He did it again and I moved that hip up, pushing back against his pressure.\n\nHe swept his hand along to the other side and did the same thing. In the meantime, his fingers steadily thrust in and out of me. I could feel him, pushing in with them together, then making a circuit of my inner walls, and pressing apart as they exited. No one had done that to me before and the sensations were intoxicating. I quit trying to keep my eyes open.\n\nI pressed the back of my head into the seat, pushed my hips up, tried to open myself to him further. It felt like the whole room was moving, like I wasn't undulating, but the couch and the floor were. I had a death grip on the armrest. His hands moved, one in and out of me, deep as he could, and the other lightly brushing, teasing my labia open. I would have paid him a million bucks if he'd bent down and put his mouth there too.\n\nThe hand that wasn't working in my hole moved again, roaming up to pinch my nipples and caress my breasts. That didn't even hurt. It was just a different feeling that spread my arousal more completely over my body. I shuddered, and exhaled hard through my nose. He paused, stopped moving. My eyes flew open and I gritted my teeth against the entreaties that leapt into my mouth. I just stared at him; eyes as wide as I could make them.\n\nI shifted my hips, fucking myself on his fingers, but managing to keep the sofa from creaking. He grinned, devilishly. He pulled his hand away. I opened my mouth, wide, a silent scream of despair. But once again, prevented a sound. He slammed three fingers deep into me. I grunted. The force knocked the sound out of me. But it was soft, I barely heard it myself, and the fan had kicked on at the same time. Lucky for me. He waggled his finger, showing that he knew I'd gotten away with something. Promising a consequence of some kind.\n\nBut he continued fucking me with his hand. Now three fingers doing the same swirl inside and spread on the way out. He curled his hand so his fingers dragged over my g-spot. I shook, involuntarily, a full body shiver that started at my pussy and spread to all my limbs. I panted, inhaling deeply through my nose. I was concentrating on keeping my mouth shut. I bit down on my lips, tensed every muscle in my face, screwed my eyes shut.\n\nHis hand quit roaming on my torso and joined his other at my crotch. He pulled my labia apart, spreading me. The cool air swirled over my wet center, and still his other hand thrust in me in that steady pace. Then he started rubbing my clit. He bore down, pressing my clit into my pelvic bone. It hurt for a split second, then he let up. My clit was slick with my juices and he rubbed at it, pressing down and letting up in counterpoint to what his other hand was doing in and out of my cunt.\n\n\"Ah,\" I breathed. \"Oh.\" I'd lost myself. I'd forgotten what the rules were, for a minute. The tension was growing in all my muscles, I could feel it building, feel myself clutching at his fingers, sucking him in, not wanting to let go when he pulled out. I arched my back. I remembered. I was so close to cumming that it almost felt like torture. Waiting for that one last piece to send me over the edge. But not being able to lose myself in the sensation. Having to be aware of my surroundings enough to keep myself quiet. The dichotomy was mind blowing. I heard my breath, hard and heavy, panting through my nose. I bit down harder on my lips, curled between my teeth. I was moaning. I was groaning. I could feel the vibrations of the sounds, trapped in my throat, beating at my lips, trying to escape. I needed to scream. I knew if I screamed, then I'd cum. I knew, if only I could scream, the orgasm might shatter me.\n\nHis hands kept working. He'd picked up the pace in response to my tension. I rocked my hips, up to meet his hand. I rocked my hips, down, sucking his hand with me. His fingers beat on my clit, rubbing along its length, and then flicking the very tip.\n\nI climaxed. It crashed down on me. It tore through me like lightning, ricocheting off every bone and organ in my body. The orgasm was trapped in my throat and it bullied its way through me, wreaking havoc. The air blew out of my lungs, down my body. Tears sprang to my eyes, and my hands spasmed and I had to let go of the armrest. I clenched my legs together, my knee pressing into his shoulder and moving him. I actually clamped down and moved him, off the back rest. My stomach contracted and I sat up.\n\nI sat up and reached for him. I clamped my mouth on his, finding him somehow even though I couldn't see. I kissed him hard and then all the strength left my body and I flopped back onto the couch, blinking away tears but without the muscle tone to so much as move my hand. I drifted in space, floating somewhere cool, while the heat of ten thousand suns radiated off my body.\n\nFrom a million miles away, I heard him say, \"Well. Damn.\"\n\nI opened my eyes, still bleary with tears. I stared unseeing at the ceiling. I felt him move, felt the shift of the heat from his body. He leaned over. I managed to make my hand work, and I cupped his cheek. I slipped my hands around his neck, rubbing my thumbs over his jaw. He leaned down, one arm propped on the back rest. I could smell my cum dripping off his fingers. He brushed away the curls that had fallen in my face.\n\n\"Not bad, Leah. I doubt anyone in the hallway would have heard anything.\"\n\nHis words were gibberish that only formed into English on the third pass through my brain. I shook my head.\n\n\"Still, though. You weren't completely quiet.\"\n\nMy head moved in a slow nod. That sentence only took two passes to sound like English.\n\nHe gripped my wrists in his sticky hands, turned them so he could kiss my palms.\n\n\"I said I'd have to gag you with my cock if you made any noise.\"\n\nI smiled. I understood that perfectly.\n\n\"Scoot down.\"\n\nI furrowed my brow, I didn't understand. He pointed toward the end of the couch, and I tilted my head up. I realized that the space made by the armrest was big enough for my head to slide through. I managed to make myself move until my head was hanging off the couch.\n\nHe walked around, dragging the chair. He perched on the very edge of the seat, leaning forward and bracing one hand on the armrest. I opened my mouth and he slid his erection in. He fucked my face. I laid back, accepting, still floating in an endorphin haze. He shoved deep into my throat a few times. Then he pulled out so that only his tip and part of his shaft were in me. I held him there, swirling my tongue around him, humming, and clamping my lips tight. He used his free hand to jerk himself off into me. He came with a soft grunt. He coated my palate and filled my mouth, and when he pulled out, I showed him.\n\n\"Beautiful,\" he said. \"Swallow it down.\"\n\nHe put himself away, and helped me slid fully onto the couch. Then he helped me sit up. He sat next to me, and I leaned into him. He wrapped his arms around me, stroking my skin gently, and murmuring praise.\n\nThen he said, \"Go clean yourself up, and get dressed.\"\n\nI stood on still wobbly legs and padded to the little half bath. I peed, then found a washcloth and wiped the rest of myself off. When I came out, I went straight to the bookcase, and dressed slowly. I felt his eyes on me the whole time. I was still half in a daze. When I was clothed, I turned back to him expecting to be dismissed.\n\nInstead he patted the couch next to him. There was a bag that hadn't been there before. I walked over and he moved the bag, grabbed my hand and pulled down for me to sit.\n\n\"Open it,\" he said with a smile. \"I wasn't sure when I was going to do this part. But, whew.\" He sighed deeply. \"Today went so well.\"\n\nI grinned up at him. I wanted to brush back some hair that had fallen onto his forehead. I wanted to kiss him, to run my hands along his chest. But I didn't.\n\nI opened the bag and laughed. There was a six pack of generic white cotton panties in my size. He was replacing all the ones I'd presented to him and he'd kept. I looked up and he was grinning too.\n\n\"I figured you might be running out. Believe me, I noticed that none of your underwear were white. But.\" He shrugged. \"I bought what I liked.\"\n\n\"Of course.\"\n\n\"There's more.\"\n\nI found them. Under the package of panties were two pairs of very silky black hip huggers. I held them up and ran the smooth fabric over my fingers. There was a hint of stretch. I noticed that unlike most satiny underwear, these didn't have a cotton swatch at the crotch. I wondered how that would feel. They were simple, and somehow elegant. Very sexy. He showed me that one had a heart stitched at the front of the crotch, almost marking the spot for the clit.\n\nHe said, \"Wear these all weekend. Put them on now and don't take them off unless you're showering. If you take them off, put them back on as soon as possible.\"\n\nI nodded. He stared hard at me. \"Fuck yourself. Practice cumming silently. At least once every day.\"\n\nMy eyebrows shot up. Before I could say anything, he held up a hand. \"If you absolutely need to take these off to have a proper orgasm, then do it. But put them back on immediately after. I want them soaked. I want them drenched when I take them off you Monday.\"\n\nHe took the second silky pair out of the bag. They had a heart embroidered at the waistband. \"You'll get these on Monday. Do you understand?\"\n\n\"Yes, sir.\"\n\n\"Any questions?\"\n\n\"Do you want me to shave? My pubes, I mean. Would you rather I shaved there?\"\n\nHis eyes narrowed slightly when he answered. I realized I'd made a mistake. \"If I did, I would have told you by now.\"\n\n\"Yes, sir. I'm sorry, sir.\"\n\nI ducked my head, and tears welled up.\n\nHe tilted my head so I'd look at him. \"Leah, you're going to make mistakes. We're still learning each other. I expect you to make mistakes.\"\n\nI nodded, and he still held my head. He leaned down and kissed me. Once again, soft, slow and gentle. I melted into him, relaxed against him, I accepted him as he wrapped an arm around me and pressed me into the backrest. When he broke the kiss, his face hovered very close to mine.\n\n\"We are going to have to be so careful.\"\n\nI nodded. He patted my cheek.\n\n\"Ok. Gone on home. I'll see you Monday.\"\n\nI allowed myself to brush his lips with my fingers. \"Yes, sir. See you then.\"\n\n*~~* *~~* *~~*\n\nIt wasn't until I'd gotten home that I realized he hadn't given me any instructions about when to meet him on Monday. I panicked momentarily, wondering if I should assume to meet him at the same time I had been. Then I remembered, the only safe assumption was that he would explain what he wanted, when he wanted to.\n\nI was so turned on and excited that I masturbated again not long after I got home. I wasn't quiet. The rest of the weekend I followed his instructions. I kept the panties on. I masturbated repeatedly, and I tried my best to be quiet and unobtrusive when I did. Not that there was anyone around to tell me whether they could hear me or not. It was weirder than I'd expected to follow these particular orders. Putting the same underwear on after I took a shower felt strange. I did what he told me and I reminded myself that every time I complied, I was strengthening my connection to him, and proving myself trustworthy.\n\nOn Monday I went into work, acutely aware of my smell. I didn't think anyone else would notice, but every time I moved, I felt the cloth shifting between my thighs and I wondered. My phone rang as soon as I'd set down my purse.\n\n\"Social Work, this is Leah,\" I said, with my heart pounding.\n\n\"Leah,\" he said and I delighted in his voice.\n\n\"Good morning, sir.\"\n\n\"Ah, so Julia isn't there yet?\"\n\n\"No, sir.\"\n\n\"Good. Excellent. I was hoping to catch you early enough that you didn't have to pretend. This time.\"\n\nMy uterus flipped over again at that implication. He laughed. \"So, Leah, are you wearing them?\"\n\n\"Of course, sir. Yes, sir.\"\n\n\"Tell me about your weekend.\"\n\nI told him, about fucking myself, about the vibrator I'd used, about how strange it felt, sliding them back on after I'd showered. How strange it felt sleeping in them.\n\n\"Really, Leah. Why was that strange?\"\n\n\"I sleep in the nude, sir.\"\n\n\"Hmm. I think you really should have mentioned that sooner.\"\n\n\"Yes, sir. Sorry, sir.\"\n\n\"What else are you wearing?\"\n\nI described my outfit, a black knit skirt, gray and pink fine gauge knit tunic, white bra, black clogs.\n\n\"Sounds lovely. I look forward to seeing you. I have a task for you first though.\"\n\n\"Yes, sir.\"\n\n\"Go to the nearest bathroom, rub your clit until you cum. You'll have to be quiet, and you'll have to be fast. Don't move your underwear. Just shove your hand down and finger yourself until you gush.\"\n\nI was already wet and aroused, just from him telling me to do it. I had twenty minutes before I had to be at Morning Report.\n\n\"Yes, sir.\"\n\n\"You'll leave work on time today, Leah. Then come to my office at 6PM. Between the time you leave and when you come to see me, you'll need to have masturbated again. I'm serious. Those panties need to be fucking soaked with your cum when I see you.\"\n\nIt was the most crass he'd been, speaking to me. My insides flopped around and I part of me wanted him to keep talking while I pleasured myself right there in my office. But then my door opened and Julia walked in.\n\nI smiled at her, then said into the phone. \"Alright, Dr. James, I'll have an answer for you later today.\"\n\n\"Julia walked in?\"\n\n\"Yeah, I'll just need to do a little research on that.\"\n\n\"It's ok, Leah. We're done. I'll see you in a few minutes.\"\n\nI hung up the phone. Julia wanted to start talking about her weekend. She looked like she was in a foul mood.\n\n\"Sorry, Julia, I've gotta, you know, go down the hall...\"\n\nShe was putting away her purse. \"Sure, see you in a few.\"\n\nI strode down the hallway that housed all the social work offices and into the women's bathroom that was at the far end. I could hear the beeping from the lock on the outside door, which was not too far from the restrooms. There were three stalls, so I couldn't exactly lock the door, and anyone could come in. It was the time of morning that most day staff arrived. I ducked into a stall and pushed the door shut a little harder than I needed to.\n\nI hiked up my skirt and sat on the toilet, like I needed to pee, but I didn't pull down the panties. I tried rubbing myself through the fabric, but it was too smooth. I heard voices outside in the hallway, chatting, laughing. I leaned over and snaked my fingers in through the leg opening, spreading my legs wide and bracing myself on the stall door. It was an awkward position, but I found the whole situation so arousing, so decadently deviant, that I was halfway there the second I touched my clit. I rubbed and pressed. I held onto the door. I closed my eyes, bit my lips and flared my nostrils. I rubbed furiously, pressed harder; I imagined him touching me, talking to me. It worked. It was a small orgasm, a little tremor, but I felt it. I felt the juice flowing out of me. I felt inordinately proud of myself.\n\nI washed my hands and walked back to my office. Julia was gone. I went up to the Morning Report and avoided eye contact with Dr. James. Then I thought that might be as obvious as fawning all over him. By the time the meeting was over I was little calmer. He asked me a real work-related question, and we talked about a few of the patients. I told him some about the process to find a nursing home for someone who needed it and which community providers would be involved in care with a different patient. We set a discharge date for a third patient, and I went off to talk to her.",
        "Sometime around lunch, I realized that I hadn't been thinking about him, and that I hadn't been thinking about the mess in my underwear. I realized I'd stopped wondering what he was going to do with them. It was like I had two entirely separate lives, and they'd intersected for a brief moment that morning, only to diverge again. The rest of the day flew by.\n\nI walked out with Julia, right at 4:30PM. She nattered on about her weekend, and some annoying thing her husband had done. I got in my car and left. I drove around the block and then realized I didn't know where I wanted to go to kill an hour and a half. I knew I didn't want to drive home, that was a little too far. I went to a drive through and picked up a burger. I drove to the parking lot of a strip mall and waited there. I wolfed down my food, then regretted keeping the onions on the burger. It was just past 5PM. I had a little less than an hour, and it would take about five minutes to drive back to the hospital.\n\nI remembered my other task. I felt secure in my car, far away from the buildings. There weren't any other cars around. But just as I'd decided to shove my hand down my skirt, someone parked next to me. I decided to drive back to the hospital. He'd said to leave on time, and he'd said when to be at his office. He hadn't said I had to stay away until then. I parked in a different parking lot than I usually used, a small one around the back of the main building. I was able to get in an entrance that no one would likely be paying attention to.\n\nI climbed the stairs and went down the hall with his office. It was quiet and someone had turned off half the lights in the hallway. I walked down to the women's bathroom, looking at each office to see if any light came out under the door. I didn't see any; I didn't hear any sounds of people in these offices. I went into the bathroom and locked the door behind me.\n\nI hoisted myself up onto the sink, and braced my foot on the nearest wall. I could spread my legs wide that way. I looked at my watch; it was barely 5:40PM. I started pleasuring myself, really taking my time to work up my arousal. I dipped a finger in and smeared my juice all over the crotch of the panties. I used the finger to shove the panties inside me. I rubbed my clit in small circles, pressing down and letting off. I repositioned my legs and managed to shove more of the fabric in my hole. I felt so filthy, so deviant, and so very aroused. It felt wonderful to be acting this way, to be doing these things, to be obeying him, and risking whatever it was I might have been risking. I rubbed harder and faster; my breath hitched in my lungs. I exhaled through my nose. I clamped my mouth shut tight, and fingered myself.\n\nI fucked myself with two fingers, and rubbed my clit. I laid my head back and the arm holding me up shook. I breathed hard, in and out through my nose. My head spun and I thought of him. I imagined him again, fucking me, what his cock would feel like inside me, what he might say. I climaxed hard, much harder that the little orgasm from the morning. I shook, and my hand slipped, and I almost fell off the counter, but I managed to grab on. I closed my legs and squeezed them together, trapping my hand as the last throes and spasms washed over me. I leaned back, my head resting on the mirror while my breathing and my heartrate slowed.\n\nI checked my watch. It was seven minutes to six. I slid off the counter, leaving my panties crammed up inside me. I arranged my skirt and shirt. When I opened the door, he was leaning on the wall directly opposite the bathroom door.\n\nI paused, unsure if that was good or bad. He had his arms crossed over his chest and he moved one hand slightly, pointing back toward the bathroom. I stepped back and let the door close. He waited a moment, then came into the room.\n\nHis eyes were blazing, and I couldn't tell if it was anger or lust. I backed up, butt against the counter. He stepped to me and wrapped both his hands around my neck, holding my head. He leaned down and kissed me ferociously. There was no subtlety or tenderness. It was raw, wanton, need. It was pure power. It overwhelmed me. He bent me back, grinding my backside into the counter as I tried to press back into him.\n\nHe broke the kiss long enough to yank up my skirt and shove his legs between mine. Then he bent back and his tongue invaded me and it was all I could do to hold on. He broke the kiss again and picked me up, depositing me on the counter and spreading my legs wide.\n\nHe stared at me, one hand wrapped around the back of my neck, while the other jerked the fabric out of me. Then his mouth found mine again and I gave in. I pressed myself to him, I opened my mouth wide, I wanted him inside me. I wanted his tongue, his fingers, whatever he would give me. While we kissed, he shoved three fingers deep in me, catching the fabric and pushing it back in too. He fucked me, pumping hard, our mouths mashed together, and he didn't let up with his hand or his tongue until I had another orgasm. Until I clenched around his hand and my hands clutched at his shoulders, and my hips bucked and I trembled, shuddered, jolted hard enough to almost knock both of us over.\n\nHe left his fingers deep inside me until the spasms stopped. He let me rest my head on his shoulder. I could feel his erection pressing on my thigh. I wanted it, I wanted to wrap my hands or my legs or at least my mouth and engulf his cock with my body.\n\nI sat up straight, looking at him. His eyes looked like banked coals, glittering in the harsh florescent light. He used the hand at my neck to lean me back against the mirror. His hand at my crotch slipped out slowly, pulling the fabric with it.\n\n\"Give me these,\" he said. I knew exactly what he meant.\n\nI pushed up with my arms, lifting my ass. He slid the satiny panties down, and they were soaked. I could see the color change, even though the fabric was black. I straightened my legs and he slid them the rest of the way off me. He rolled them up and put them in his pocket.\n\nHe sighed. \"If we had privacy, Leah. If I thought we could get away with it. I'd strip you naked and make you crawl.\" He stroked my cheek. His voice was soft, low. \"I would make you crawl down to my office, and I'd make you wait out there. I'd make you beg me to let you in.\"\n\nI was blushing, red faced and excited about that prospect.\n\n\"As it is. With the cameras.\" He shrugged. \"It's not worth the trouble you would get in.\"\n\nI reached up and stroked his cheeks. I ran my thumb along his lips. I didn't want the evening to be over. He stepped back from me.\n\n\"I'm going to leave. Wait ten minutes and then come to my office. The door will be unlocked. Present yourself. I hope you remember how.\" He looked me up and down. \"I'm not done with you yet.\"\n\nI breathed a sigh of relief. \"Yes, sir.\"\n\nI waited. I waited, staring at my watch, willing the hands to move faster. When the time elapsed, I walked, as normally as I could manage, to his office. I went in, and he was sitting at his desk, typing. He didn't look over at me. He didn't acknowledge that I'd come in. I stood next to the bookcase and took off all my clothes, folding them neatly, and placing them on the highest shelf. I added my shoes and then went to the spot in front of his desk.\n\nI stood for a moment and thought about the other day, I thought about how my body had felt once he'd put me in the position he'd wanted. There was a clock in my head, ticking away a time limit to do as he'd said. I assumed the position, as close as I could remember. When I stopped moving, I breathed out slowly and fixed my gaze on his face. He kept typing.\n\nWhen he was done writing whatever it was, he sat back in his chair. He looked me over and got up without so much as a word. He inspected me, fitting his fist between my thighs and grunting when the spacing was narrower than he'd instructed.\n\nThen he walked back to his desk chair and sat.\n\n\"Come over here, Leah.\"\n\nI went to him. He'd moved away from his desk, pressing his chair up against the window. I hesitated when I got to him because the space was small.\n\nHe turned slightly in the chair and pointed under his desk. I looked and saw what looked like a yoga mat spread out there.\n\n\"That's your spot this week. Kneel down there.\"\n\nIt was the first time he'd said something that I wanted to balk at. It was so objectifying, so potentially degrading. I'm supposed to hide under his desk, and what? I looked at him, and he had that same impassive look he'd given me in the conference room. When he'd pressed his leg to mine and prevented me from scooting away. I was going to do what he wanted. I couldn't let myself contemplate what would happen if I didn't.\n\nI squatted down and crawled into the space. I knelt and spread my knees as wide as I could. I felt my head brushing the bottom of his desk and was glad I wasn't taller. I put my hands behind my back and he rolled his desk chair up, blocking my exit.\n\nHe sat with his legs spread, slouching a little. His erection was obvious in his pants.\n\n\"You know what to do, Leah. Get to it.\"\n\nI shuddered. Suddenly I was aroused again and too focused on pleasing him to be disturbed by my reaction. I unbuckled his belt and unzipped him. As soon as my mouth touched him, I heard him start typing again. I pulled him into my mouth, and I did all the things he'd taught me. He rewarded me by shifting around, rolling his hips, fucking back when I moved on him. At some point he stopped typing and I felt his hand on its familiar spot around the back of my neck. I'd been practicing, and I managed to take his full length. I pressed my nose against his pelvis and opened my mouth as wide as I could. I stuck out my tongue and tapped his root.\n\nHis hand clamped down on my neck, and he groaned, not quietly. I stayed there as long as I could and when I had to pull off, he released his grip. I looked up at him and his eyes looked darker than usual, like his pupils had dilated. He stared down at me and I smiled. Then I deep throated him again and held on longer.\n\nThat's when he started talking. So softly I could barely hear him. He encouraged me, he praised what I did right. He praised me for being willing, for exploring my sexuality. He told me how wonderful it was to have someone who'd give herself up to him. He kept asking rhetorical questions about whether I liked what I was doing, and what drove me to act this way. I was half hypnotized by his voice. He kept his hand on my neck and guided me. He guided me down, holding me when he wanted to be far inside me. He guided me up, letting me pull off of him completely to breathe deeply. His hand pulsed on my neck, telling me to move faster, suck harder, waggle my tongue more quickly. I heard his breathing change; I felt his cock twitch and his balls shifting and I knew he was about to cum.\n\nI started to pull off, but he held me down. I settled for bobbing my head in short strokes while his glans hit my soft palate. Then his hand spasmed and he grunted again, and I felt his hot wad spurt and splatter. I coughed and almost gagged, but breathed through my nose and swallowed without thinking. I swallowed and swallowed with his cock still jerking and spurting inside me.\n\nMy eyes went wide. I was horrified at myself. I was supposed to hold it in my mouth, show him what he'd done. I was supposed to wait to swallow. But it was instinct. I'd had to, to be able to breath.\n\nThen I felt that gentle, reassuring tap on the side of my neck. I started to pull off of him, but he held me still.\n\n\"Just try to look at me, Leah. Or at least listen.\"\n\nI nodded with his softening cock still deep in my mouth.\n\n\"It's ok. You didn't do anything wrong. Tonight, I want to stay in your mouth until I'm flaccid. We're going to stay, just like this, for as long as I want. You're going to keep your mouth closed around me, not let anything drip out. If you need to swallow, go ahead. But you'll stay attached to me, like this, until I say otherwise.\"\n\nI nodded again.\n\n\"Good.\"\n\nHis cock was softening, shrinking and I slipped my mouth down, as close to his root as I could. It was an odd sensation, this deflation. I couldn't figure out what he could possibly like about it. But I realized it wasn't up to me to wonder about that. I made myself as comfortable as I could, leaning forward, with my face buried in his lap. He stroked my hair and I felt him shifting, like he was leaning his head back. I felt drool building up in my mouth and I swallowed without thinking. The suction moved his penis around, and my tongue shifted, pressing up on his underside. He let out a long sigh. He stroked my hair some more, and I found myself drifting in some foggy headspace where I felt disconnected to anything but him. A huge wave of contentment washed over me and swept away any concerns or worries, any questions or doubts about what was right for me. I closed my eyes, and nestled my head into his lap.\n\nThen he shifted in his chair again, tapped the side of my neck a little more sharply.\n\nHe said, \"Alright. Put me away.\"\n\nI pulled off of him, keeping my lips sealed around and slurping up my saliva as I went. I handled him with care, slipping his flaccid penis back into his pants and zipping up slowly.\n\n\"Go sit on the sofa.\"\n\nI crawled out from under the desk and found my legs a little shaky. I shook out all my limbs and then sat down. He followed me over, but sat in the chair in front of his desk, facing me directly.\n\n\"We have to step some things up, I think. Blow jobs and finger fucking are all well and good, but that's not really what you want is it?\"\n\nI didn't know how to answer that question. On the one hand, no. I didn't really just want that. I wanted him to fuck me. I wanted to see his naked body and arouse him and get pummeled by him with the same force and desire he'd shown in the bathroom earlier. But, more importantly, on the other hand I wanted that feeling again. That feeling of utter calm I'd had when I shut off my brain and just let him deal with my body however he wanted. I stared at him. He stared back. I realized he expected an answer.\n\nI gave him the best one I could. \"I really want you to do whatever you want. However it pleases you.\"\n\nHe sat back in his chair, and I couldn't tell if I'd said the correct thing.\n\n\"Are you on birth control?\"\n\n\"Yes, sir.\"\n\n\"What?\"\n\n\"The shot, depo provera.\"\n\n\"Hmm,\" he said. \"Ok. How long?\"\n\n\"Three, no, four years.\"\n\n\"Really.\" He tilted his head sideways, his gaze gliding down my body. \"There's a pretty common side effect to that.\"\n\nI knew what he was talking about. \"Yes. And yes, I haven't had a period since a couple of months after the first shot.\"\n\nHe smiled. \"Good. Beautiful.\" He sighed again. \"You really are beautiful, Leah. You're so beautiful I want to make you cry.\"\n\nI laughed. Maybe that only made sense because of the situation and the relationship. I wanted him to make me cry, too.\n\nHe slid back, giving me space. \"Go clean up, and get dressed.\"\n\nI went into the half bath and repeated what I'd done the other day. He watched me dress and once again patted the sofa for me to sit next to him. He held both my hands in his.\n\n\"Ok, this week. I'm going to leave my door unlocked. You are to leave the building promptly at 4:30PM, unless you have a real, work related reason to stay. Something I would know about in advance. Drive off the campus. Go somewhere, I don't care, but long enough for most people to have left for the day. Then come here and let yourself in. Put your clothes where they belong. If I'm in here, present yourself. If I'm not, wait under my desk.\"\n\nI nodded. \"Yes, sir.\"\n\nThat's what happened the rest of that week. I did crave more. But I did as he instructed. The days he was there when I came in, he ignored me for a while, then gestured for me to come over. The days he wasn't, I waited in my hidey hole, ears pinned for the sound of him. Each day I'd take him flaccid in my mouth, wait until he signaled, then work to make him hard. I'd fellate him, swallow his cum, and wait as he softened in my mouth again.\n\nFriday came, and I got no special instructions from him. He was halfway through his time at the hospital, and I wondered for a moment if what I was doing was worth it.\n\n*~~* *~~* *~~*\n\nThat Monday was busy. We'd gotten several new patients over the weekend, the other psychiatrist was out sick, and so Dr. James had to cover everything. A discharge plan for one of my patients came together more quickly than I was expecting, and that person wound up leaving that day. Suffice to say, neither Dr. James nor I had any time to even think about any extra-curricular stuff. Since I hadn't heard anything different from him, I did the same thing I'd done the week before.\n\nI left on time, drove around for a little while, and then went to his office. The door was unlocked, and he wasn't there. I did as he'd instructed previously, I stripped and secreted myself under his desk. Then I waited. I stared at the partially obscured view; I daydreamed about him coming in and ravishing me. I even allowed myself to daydream that when his contract ended, he'd decide to renew, or something. I'm pretty sure one version of that fantasy involved him taking me back to New York with him.\n\nHe still hadn't showed, and I waited some more. My knees started hurt. I got cold. I waited. I got annoyed, then angry, then worried. I waited. I wracked my memory to think of any contrary signal he'd given me, any sign that I was supposed to do anything else. I filled up with embarrassment and berated him in my head. But I waited. I told myself to leave. I told myself he was just an asshole. I told myself I was an idiot. And I waited some more. My stomach growled, and I waited. I needed to pee, but I waited. I could tell the sun was setting. I waited.\n\nFinally, when I really had no choice but to get up to use the bathroom, I did. I looked at the clock on his desk and saw that it was after 8PM. I'd waited for him three hours. I figured there was no way he was still working. Then it dawned on me that I didn't even know what his car looked like, to see if it was still in the parking lot.\n\nI dressed, furious at myself, ashamed, annoyed. I felt like the worst kind of clich\u00e9. I went home.\n\nThe next morning, I swear he smirked at me during Morning Report. I flipped him off under the table and pointedly ignored him.\n\nHe called my office just after lunch. I had been in the middle of a discussion with Julia about one of her patient's behavior, and how that would affect his discharge plan. I didn't even look at the caller ID before I picked up.\n\n\"Social Work, this is Leah.\"\n\n\"Leah.\" For once the sound of his voice only irritated me.\n\n\"Dr. James, what can I do for you?\"\n\n\"Oh. So, Julia's right there is she?\"\n\nI was so not in the mood for this. And yet he still had that pull.\n\n\"Yeah, we were just talking about Mr. Bishop.\"\n\n\"Oh. So, how long did you wait last night?\"\n\nI wanted to call him a bastard, but I bit down on my lip. I thought about how to say it and still sound casual.\n\n\"Oh, I think it was about eight.\"\n\n\"Oh. Only a few hours then. You know, Leah, I had this hope that I'd find you under the desk when I got in this morning. I spent all night thinking about what it would be like. I nice blow job, first thing in the morning. Your hot throat surrounding my hard cock. Fucking your face.\"\n\n\"Well, yeah. I just don't think we can make that happen right now.\"\n\nHe kept talking like I hadn't even said anything. \"Just knowing that you'd waited all night. That you'd be tired, sore, cold, but that you'd endured it all just because you were doing what I wanted. I had a lot of fun, last night, imagining that.\"\n\n\"Sorry to disappoint.\" I'd meant for it to be sarcastic, but it actually sounded sincere.\n\n\"You'll make it up to me.\"",
        "My uterus did a back flip. My mouth went dry, and I couldn't begin to figure out what to say.\n\n\"Tell me, Leah. What are you wearing?\"\n\nHe knew what I was wearing; he'd seen me. I realized it was another test. The phone sex version of silent orgasms. I fumbled around in my brain, trying to think of something. Something that wouldn't sound obvious to Julia that I was describing my clothing to a co-worker.\n\nFinally, I said, \"Well, you know what they say. Everyone puts their pants on one leg at a time.\"\n\nHe chuckled, and I loved it. \"And your panties. What can I expect to see later?\"\n\nI paused again, my heart pounding. I pressed the phone to my ear, trying to act like I was listening intently. \"I think Dr. White said he'd cottoned on to that last week.\"\n\nHe laughed out loud. \"White cotton. The ones I gave you, no? Oh, Leah. You're so very clever.\"\n\nHis laughter and his praise salved the last of my hurt. I knew I wasn't likely to get any kind of explanation for the night before. In that moment I no longer cared. I wanted to be near him, to taste him, and have him taste me. I almost sighed, but managed to forestall it at the last second.\n\nHis voice dropped and he whispered, \"You tempt me. You really tempt me. In the best ways.\"\n\nHe hung up. I held on to the phone. I waited a minute more, like I was still listening to him. \"Ok, Dr. James. I'll see you at team.\"\n\nWhen I hung up Julia asked me what the conversation had been about. I told her that a patient's family had complained about something. I sat there trying to gather my thoughts, shuffling papers, and reviewing my To Do list over and over. Once I'd collected myself, I went up and talked to a few patients. I needed to be around people, just to keep myself from staring into space and imagining all the dirty things I wanted him to do me.\n\nWe had our usual afternoon meeting. As everyone was shuffling out the door, Dr. James passed me a note. It read: In my office at 2:30PM. That was fifteen minutes; he'd left the room by the time I finished the sentence.\n\nI quickly went to my office and dropped off my binder. I went to the bathroom and managed to take off my pants and underwear without stumbling too much or taking too long. I shoved the panties in the pocket of my trousers and flushed liked I'd just used the toilet. I washed my hands and checked my watch.\n\nI knocked on his door with a minute to spare. He yanked the door open and reached for my neck. I didn't even care that it was the middle of the day. He shut the door, his hand on me like that comforting clamp, and then pushed me against the wall. He kissed me, deeply. He wasn't as slow and tender as usual, nor was he as raw and desperate as that one encounter in the bathroom. His tongue explored deep in my mouth, and I felt both his hands wrapping around my neck, holding my head. He leaned into me, making contact with his whole torso, and splitting my legs with one of his. He ground his hips into me, and I felt his erection, thick and heavy, pressing into my thigh.\n\nHe broke the kiss and walked backward to his desk, his hands still around my neck. He turned sideways, then turned me to face his desk and stepped behind me. His hands roamed all over my front, kneading my breasts, pressing them together, while he kissed my neck and his breath gusted hot over my shoulder. I arched my back and pressed my ass into him. He kept one hand on my tit, and shoved the other down the front of my pants. When he noticed that I wasn't wearing the underwear, he chuckled.\n\nI pressed my head into his, and the vibrations of his laugh sent shivers through me. Then he was unzipping my pants and shoving them down.\n\n\"Bend over,\" he grunted. \"Elbows on the desk.\"\n\nI did and he pushed me so that my thighs touched the front. His foot between mine shoved my stance wider, to the very limit of the waistband around my ankles. He bent over yanking shirt up, exposing my back and then reaching around front and shoving my bra up. My breasts hung and he rubbed my nipples, squeezed my areolas and the globes of my breasts tight. He did the same with my ass, squeezing each cheek, digging his fingers in and being much more physically rough than he ever had before. I arched my back again, pressed back into him. A moan threatened to escape but I managed to bite it back.\n\nThen he stopped, he let go of me and I felt his body heat dissipate as he moved back. I held myself still, even though every instinct I had was clamoring to turn around and fall to my knees.\n\nThen I heard his zipper, and the telltale sound of his pants falling. His body heat came back, and his fingers reached for me. He slipped one into my vagina. Then I felt something different, something thicker and bulbous. He pressed the tip of his cock at the very edge of my entrance. He moved himself up and down my slit, and I gasped.\n\n\"I decided I wanted something better than your throat.\"\n\nHe pushed himself in, slowly but smoothly. I knew how big he was; I was intimately familiar with the contours of his prick. But he felt so different, it felt so much better. I grasped at my shirt, my fingers wanting to hold onto something, and I wished that I was facing him so I could hold on to him. I exhaled slowly, wanting to cry out, wanting to encourage him. He pulled out a little, then pushed back in, I felt him going deeper, felt him filling me up. He wasn't too big, it didn't hurt anything, but I felt myself tightening around him, then relaxing, opening up to him. He moved in me a few more times, settling a little more deeply each time. Then he stopped, and I felt his legs resting on my thighs, his hips pressing into my ass. He was all the way in.\n\n\"What do you say, Leah?\"\n\n\"Thank you, sir. Thank you.\"\n\n\"What else?\"\n\nMy mind was blank. I spoke without thinking, and heard the desperation in my whisper. \"Please, sir. Please fuck me. Please fuck me and use me. Please, sir.\"\n\nHe caressed my back. He leaned down, reaching under me and finding my breasts. His voice was in my ear. \"You can do better than that, I think.\"\n\nHe shifted his hips slightly, withdrawing and resettling. My mind spun. Lines from a thousand pornos and romance novels rattled through my brain. I turned my head, toward the shoulder his face rested on.\n\n\"Please, sir. Please fuck my slutty holes. Please use my body. Please, sir. Please let me cum on your cock.\"\n\nHe rolled my nipples in his fingers, pinching them and pulling them. I pushed back into him. With one hand still fondling my tits and him moving his hips in tiny little strokes, he reached his other hand down. He slipped down my torso and cupped my vulva. He used two fingers to spread my lips apart and his long middle finger found my clit. He brushed it firmly, and I jumped.\n\n\"You want to cum, Leah. Let's make that happen.\"\n\nHe thrummed my clit, rubbing and pressing and circling it. I inhaled sharply. I buried my face in the crook of my elbow, my mouth opening and closely on the skin of my upper arm. I sucked my flesh into my mouth, gagged myself with my own body, because his finger was playing on me. I started rocking my hips, fucking him back, even though he'd stopped moving. My hands clamped on my head and my fingers dug in my hair and still he worked my clit. He brought me close enough to taste an orgasm, then stopped. I dropped my head on the desk, my arms flopping down and I gripped the other edge.\n\nHe started moving in my back, thrusting in and out, maybe a third or half his length leaving me before he pushed back in. It was a slow, deliberate rhythm and I recognized that he was intentionally denying himself, to prolong what was happening. He pumped a few times, waiting until my body relaxed. Then he reached down again, and vibrated my clit. He let go of me otherwise, he moved back just enough that his legs no longer rested on me. I was connected to him only by his cock inside my cunt and his finger flicking my engorged clit.\n\nI bit my lips; I clamped my teeth down. I gripped the edge of his desk and held on like I was at sea in the middle of a storm. He didn't relent, and my climax sprung up, taking over and making me shake. I tried to control it, but something on his desk rattled. I gulped in air and buried my face in my arms, screaming silently as the contractions in my pussy and stomach took over. I clenched around him, hard, over and over and over, until I was spent.\n\nHe stroked my back gently. Then he leaned down and said, \"Not bad for round one.\"\n\nHe moved in me again, as my vagina pulsed a few more times. He moved faster, pulling out more and pushing in deeply each time. I arched my back, and tilted my ass so he could get to whatever he wanted. He thrust and again and again, and I heard his breathing start to change.\n\n\"Please, sir. Please cum inside me.\" I whispered without thinking.\n\nHe stopped. I froze, wondering what rule I'd broken now.\n\nHe didn't speak and he didn't pull out. He stroked my back again, and I felt him leaning over. But this time he didn't say anything to me. He reached for his desk phone and I heard the dial tone when he turned the speaker on. He dialed an extension. I started to move, but he patted my shoulder and then pushed more deeply inside me.\n\nThe person answered, \"Dr. Dale's office, this is Brenda.\"\n\nHe'd called the medical director. I was sprawled out on his desk, with his cock balls deep, and he just casually called the medical director.\n\n\"Hi Brenda,\" he said as though there was nothing strange. \"This is Oliver James. Ken wanted me to call him, is this a good time?\"\n\n\"Oh, sure Dr. James. He's in his office. I'll just check if he's got time.\"\n\n\"Thanks, Brenda.\"\n\nShe put him on hold and he spent the time thrusting slowly in me. I spent the time turning five shades of red and trying not to have a heart attack.\n\n\"Oliver.\" It was Dr. Dale.\n\nI turned my face away from the phone. I buried my mouth in my other elbow. He started fucking me slowly.\n\n\"Hi, Ken. You said to call you. What's going on?\"\n\n\"Oh, I'm not sure actually. Mr. Grayson's wife called. She has some concerns about, well, frankly, about why he's still here. She wanted to know what was going on with his treatment. What the holdup was. I asked her if she'd spoken to you or the social worker. She said she had but still had questions. I'll refer her back to you, but I wanted to get some background before I talked to her.\"\n\n\"Sure,\" he said.\n\nHe picked up the pace, and leaned over me. He was just moving his hips, but thrusting deep. He braced his hand on the desk, between my body and the phone, and reached down with his other to fondle my clit.\n\nI practically chewed a hole in my elbow while he talked. He just chatted with the medical director, explaining his treatment plan, all the while his cock slid in and out of my pussy. He said something about having to restart a medication, and changing something the patient had reacted to badly. My eyes rolled in my head, and I ground my nose into my arm. He kept thrumming my clit and moving in me, and my body kept rebelling and reacting without me. I pushed back into him; I ground my ass against him. My breath hitched and caught in my throat, and I gritted my teeth. My pussy spasmed and clutched at his cock and he kept thrusting. I clenched around him, holding him in, and all the while my head was spinning.\n\nI wanted him to pummel me. I forgot where I was or what time it was or that the guy who was in charge of all the doctors, who was second only to the facility director in authority could hear everything that was happening. I wanted him to fuck me furiously, and knock all the stuff off his desk, and I kept rolling my hips and trying not to scream. I really, really wanted to scream.\n\nI heard the phone click off, and he put his hands on my shoulders. He brushed my hair off the back of my neck and leaned down. He kissed the nape of my neck, and reached down and rubbed my clit.\n\nHe whispered in my ear. \"I like this. I like you like this. You're all tied up in knots, trying to stay quiet. You want to scream, I can tell. Oh, Leah. I'd let you. I'd make you scream, if I could.\"\n\nHe started fucking me faster, his fingers working on me until I shuddered and climaxed around him again. His hips and legs banged into me and I held the edge of his desk, bracing myself. He stopped talking, just groaning softly and breathing hard through his nose. His face was buried in the back of my head and his air flowed around me. His hands moved to my thighs and his fingers dug in, holding me and then pulling me back onto him as the thrust into me. I lifted my head, pressing down onto the desk, and arching my back.\n\nHe pulled me back, away from the desk a little and allowed his legs to slap against mine, just a few times, just a little harder than he had. It was exquisite, but it was too loud. It was too obviously sex. With one hard thrust into me, he exhaled fast, and I felt his fingers clutching at the skin on my thighs. He twitched and jerked a few times, and then breathed out slowly.\n\nHe laid his head down on my shoulders and wrapped his arms around my waist. He kissed my shoulder blades and I relaxed into his embrace. When he pulled out, I whimpered a little. His finger traced down the length of my spine, and I didn't want to move.\n\n\"Stand up, Leah. Look at me.\"\n\nI pushed myself up and turned around. I felt his cum dribbling. My face was a mess and my shirt was still hiked up. My pants were around my ankles and my bra was shoved up. He had pulled his shirt up too and his pants were on the floor. I looked him over, then brought my gaze back to his eyes.\n\nHe stepped to me and kissed me again. I let myself reach up and caress his back, pull him down to me. He broke the kiss and I knelt down. I couldn't tell you why, other than it seemed like the thing to do. I licked my cum off his cock, I sucked our combined juice off him, all the way down to his trimmed pubes. He let me, not saying a word. When I was done, I gathered up his pants and underwear and slid them back up his legs. I covered him and zipped him up after he tucked his shirt in.\n\n\"Where are they?\"\n\nI reached down to my pocket and pulled out my panties. I gave them to him. He pressed them to my pussy, using the cotton to soak up his cum leaking out of me. He stood close, wrapping an arm around me and letting me brace myself by leaning against him. He scrubbed my cunt with my underwear, and it was rough and exhilarating. When he was finished, he passed the wad of fabric under his nose and then tossed them onto his desk.\n\nI pulled up my pants and rearranged my clothes. I leaned back against his desk, still flushed and bleary eyed. My head was still spinning and I felt like he'd fucked me in public. I felt good, satisfied, content.\n\n\"Wash up if you need to. Be back here at 6PM.\"\n\nI smiled at him, nodded. \"Yes, sir.\"\n\nWhen I came out of his bathroom after washing my face he was sitting at his desk, typing away.\n\nJulia asked me where I'd gone right after team. I said Dr. James had wanted to talk about that family complaint. We had a couple of minutes before a staff meeting. I could barely concentrate.\n\nJulia said, \"Leah, are you ok?\"\n\nI looked at her, \"Yeah.\"\n\n\"Hmm. You look a little flushed.\"\n\nI patted my cheek. \"Oh, I lost track of time. I thought I was late and kinda rushed.\"\n\nShe looked at me sideways. \"You sure?\"\n\n\"Yeah. I'm good.\"\n\n\"I dunno. Dr. James can be kind of a dick sometimes. I thought maybe he'd pissed you off.\"\n\nI wanted to laugh and say she didn't know the half of it. But I was also worried that I was losing my cool. I shrugged. \"Yeah. It's all good.\"\n\nWe went to the staff meeting.\n\n*~~* *~~* *~~*\n\nThat evening he fucked me again. I leaned over the couch and he took me from behind again. Because we were more sure that there wasn't anyone on the hallway, he let himself go some. He pushed me down and we didn't mind when our bodies slapped together. But he pulled out and jerked off onto my back, then smeared his cum into my skin.\n\nHe leaned over me, his mouth right at my ear. \"I want to mark you. I want to make you mine. We don't have much time left. You've learned so much.\" He reached around and squeezed my breasts, cupping them and pressing them into my chest. He leaned his weight on me and I let myself collapse under him.\n\n\"Lovely Leah. Lovely, lovely, submissive, Leah. I'm going to be sad to let you go.\"\n\nI almost said it. I almost asked him to stay, extend his contract. I almost suggested that I could quit, move, be with him. But I clamped my mouth shut. I gritted my teeth and bit it back. I knew that was a pipe dream. He sat up and pulled me down onto his lap.\n\nThen his cell phone rang and I scrambled up. I sat on the couch while he casually got up and picked it up. He looked at the number and answered.\n\n\"Hi. What's going on?\"\n\nHe came back over and sat facing me. He tapped my leg and I leaned back against the armrest, spread for him to look at.\n\n\"No, no. I sent that check. I sent it a month ago.\"\n\nHe settled down, staring at me. He'd pulled his pants over his hips, but his cock was still hanging out.\n\n\"I can't tell you that, Susan. I promise you I sent the check a month ago.\"\n\nHe reached over and pressed my bent knee into the back rest. He scooted toward me so his fingers brushed my thigh.\n\n\"No, I tried that first. There wasn't an online option for that camp. I called them. They said something about a glitch in the program.\"\n\nHe closed his eyes, reaching for me, but clearly paying more attention to whoever was talking. Whoever that woman was, talking. My heart started pounding. His hand traced circles around the inside of my thigh.\n\n\"Listen, honey, I know you're frustrated. I know Claire's probably upset. It's too late for me to call anyone tonight. I'll call them in the morning.\"\n\nI sank back into the armrest. I shifted on the sofa, planning to get up. My mind was spinning. How stupid had I been. Just because he didn't have a wedding ring. His hand clamped down on my thigh. When I looked at him, he shook his head.\n\n\"It's alright. I'm sure it's just a mistake or something. I'll call them and text you after. Tell Claire and Ethan I love them.\"\n\nThere was another pause, and I contemplated prying his hand off me.\n\n\"It's fine really. Sure. Love you all.\"\n\nHe pressed the button to end the call, and leaned over to toss the phone on his desk. His hand never left my leg.\n\n\"You have questions?\"\n\nI began with the obvious. \"You're married?\"\n\n\"No.\"\n\n\"Who is Susan?\"\n\nHe glanced at me. \"You know, I've got something better in mind. Lay back.\"\n\nI shook my head. \"Who is Susan?\"\n\n\"I'll tell you. But lay back first.\"\n\nI shook my head again. His hand pressed into my thigh.\n\nHe repeated his statement. \"I'll tell you. But lay back first.\" He stared at me. \"Your choice, but if you get up, you'll never know, and this will end.\"\n\nI breathed out hard. It was the most serious threat he could give me. This was a real decision point, to obey him or not. And to obey him not for some fun, silly, ultimately harmless game. But to obey him when I didn't want to, simply because he'd asked it. I closed my eyes and slid down. He stood, finishing fastening his clothes. I slipped down, mimicking the position on the couch I'd taken before, with my legs bent and spread.\n\nHe surprised me by not pulling up the chair. He climbed onto the couch, he laid down, leaning over and propping his head on one hand, with his elbow just above my shoulder. He fitted his hips between my legs. He half smothered me, his weight balanced and pressing me down. I closed my eyes, loving the way it felt. But still wary.\n\nI held onto the arm rest, and felt his lips on my cheek, then my collar bone. Then he moved and licked my nipples. His free hand found my pussy, still slick from our intercourse a little while earlier. If he was trying to distract me in order to forget my question, he was doing a good job."
    ],
    "authorname": "BelleCanzuto",
    "tags": [
        "doctor",
        "dominant man",
        "exhibitionism",
        "exploration",
        "nudity",
        "objectifying",
        "onthejob",
        "orgasm control",
        "submissive woman",
        "workplace"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/doctors-orders-22"
}