{
    "title": "Back to Bristol Ch. 22",
    "pages": [
        "It was ten o'clock on the Sunday morning after the Company dance that I was in my living room, just collecting my suit jacket from the night before, which I'd left draped over a dining chair, and my phone rang.\n\nI opened it and saw that Piers was calling me.\n\n\"Yes, Piers?\"\n\n\"Chris.\" And the hairs on the back of my neck went up, there was something in his voice. \"Is Molly with you?\"\n\n\"She's in the kitchen. Why?\"\n\n\"Peter's dead. I've just had a call from the Welsh Police, he crashed his car on a country road in the Black Mountains some time last night. A farmer found him at about six o'clock this morning.\"\n\nI sat down, \"He must have been pissed out of his mind. What the fuck was he doing driving? And driving on country roads in Wales for God's sake!\"\n\n\"Because he was pissed. I guess he got it into his head to go and stay in his cottage. That's up there somewhere.\"\n\nThere was silence between us for a minute, then I asked, \"What do you know?\"\n\n\"Not a lot. It looks as if he came off the road on a bad bend. There was a fall down a hundred foot hillside. The farmer found him upside down in his car this morning and very dead. I was Number One in his phone, so they tried me first.\"\n\n\"Good God. You don't think it was...?\"\n\nI heard Piers take an inward breath. \"It went through my mind. But we'll never know. And, for Molly's sake, it's better not even to think that it was a possibility. Let's leave it that he got drunk, and decided to go to the cottage and misjudged the bend.\"\n\n\"But he would have known that road well.\"\n\n\"Yes, he would. But that doesn't mean that he didn't make a mistake. Think about it Chris.\"\n\n\"Yes. Sorry. You're right. What happens now?\"\n\n\"I'm going to go up to Abergavenny to sort out the formalities. I can't see they'll be any problem. I guess there'll have to be an inquest, but his blood alcohol should make it an open and shut case.\"\n\nJust then Molly came into the room, took one look at me and just sat down on the sofa, looking at me and waiting.\n\n\"Piers, I've got to go. Molly's just come in. I'll talk to you again, later. Probably this afternoon.\"\n\nI closed my phone and looked at Molly.\n\nShe looked back, \"What is it? What did Piers want?\"\n\n\"It's Peter.\" I leant forward and took hold of her hand, \"He's dead.\"\n\nMolly just sat there for a second or two, then her eyes were searching mine, I suddenly thought that I must drive any bad thoughts away with the facts, \"He was found in a car wreck at the bottom of the hillside, having come off the road on a bad bend on the way to his cottage in Wales. He must have been very drunk, I told you he was in the bar last night.\"\n\n\"Oh! I know where. There's a horrible bend, totally unmarked or fenced, with a hundred foot drop to a stream at the bottom.\"\n\nI smiled, I hoped reassuringly, \"I think I know it too. It frightened the life out of me when I almost went over the edge. The silly thing is, I was driving too fast because Peter had upset me. Life does turn full circle somehow.\"\n\n\"You don't think he could have decided to do it on purpose, do you? You know, after we announced our engagement.\"\n\nI moved to sit next to her, \"No, I don't. You said yourself that Peter wasn't that type, and I certainly never saw any traits in him that he was weak and backed away from life. No, I don't.\" I paused to make sure she heard my words, \"I guess we upset him last night. He saw that he had finally lost. He should have known that long ago, so it shouldn't have been that much of a surprise. But, anyway, he obviously drank too much last night. It is just one of life's unnecessary tragedies.\"\n\nI hugged her, and she was very quiet. And that worried me.\n\nAfter a couple of minutes of silence, I tried again. \"And anyway, if he wanted to do away with himself, why drive halfway to his cottage to do it? No, that was where he went when he was upset. And he was upset last night, so he was going to his cottage, and he misjudged that bend.\"\n\nAfter about another five minutes of silence, I got a \"Yes. You're right. It was an accident when he was drunk. But we made him get drunk.\"\n\n\"No, Molly. He chose to get drunk. He could have danced the night away. He could have gone home and sulked. He could have driven to the cottage while he was still sober. He chose to go to the bar and knock back several brandies. This is not our fault. It's sad, but not our fault.\"\n\nShe turned and looked at me. \"You're right. Peter chose every step he took. It just never turned out as he expected.\" Then she smiled, \"I'm glad it wasn't you that came off the road there. When was that?\"\n\nAnd I told her about Peter's first visit to my office, and how frustrated and powerless he made me feel.\n\nIt wasn't long after that that we went over to Ralph's, and we told him. I let Molly tell him, I thought talking about it might help. But afterwards she was very quiet all day.\n\nAfter the boys were in bed, Ralph caught me alone in the kitchen. \"Give her time, Chris. It was a shock.\"\n\n\"I know. And she must have a lot of memories. I guess you can't be married to someone for four years without feeling something, even if it all ended in tears.\"\n\n\"Stay the night. I think she needs you here.\" \n\nI looked at him, \"I'll have to get up even earlier. I have to get to the office early, there are some things to sort out. When I spoke to Piers this afternoon, I said I'd give him to ten o'clock to tell the Abbey staff first. Then I'd send round an email to all staff, including Exeter. So, I'm going to need a little time to compose that, and to get someone to write a little bio to attach.\"\n\nRalph listened, but then just said, \"She doesn't seem to think it was her fault. You did well there.\"\n\n\"It wasn't. I just don't believe that he was the suicide type. Do you?\"\n\nRalph considered that, \"No. But when drunk and depressed?\"\n\nI shrugged my shoulders, \"Who knows? It was either an accident, or when drunk he decided to end it all. But either way, it wasn't really intentional.\"\n\nRalph smiled, \"You're right. Neither of you bear any responsibility, whatever he was thinking or doing.\"\n\nSuddenly a thought went through my head, \"Will you let Susan know?\"\n\n\"If I have a chance. But we aren't talking, and I'm not going to make a special effort to tell her about her co-conspirator.\"\n\nAnd then I had another thought, \"Will you be alright here, by yourself over Christmas?\"\n\nHe smiled, \"Yes. Don't worry about me. I'll miss you all, but you mustn't lead your lives worrying about the old people.\"\n\n\"I'm sure there's plenty of life in you yet.\" And we left it there.\n\nThe next morning in the office, Carole bounced into my room with a big, beaming smile. But she took one look at my face, and totally deflated. I was in the middle of writing my little note on Peter's death, trying to find the honest words that would be acceptable. \n\n\"What's happened?\" was all she asked.\n\nAnd I told her, and her reaction was almost predictable, \"Poor Molly.\" \n\nBut then it was back to business and I asked her to get me Neil Davidson. In the absence of any close relatives, I decided to volunteer the Personnel Depart to arrange the funeral. When I saw Neil, he was shocked, but business like on the arrangements. Of course he needed to talk to Piers to find out what was going on from the Police and the bureaucrats. But he would need some personal details about Peter's known relatives, who his solicitor was, and as much information as would give him help in winding things up. I couldn't avoid volunteering Molly, but only after I'd spoken to her on the phone, and got her agreement. Neil suggested that he'd send Sheila Armstrong around to see her. As he said, Sheila's kindly but efficient.\n\nAt ten o'clock I sent out my email to all staff that a senior colleague had died suddenly. I included the phrase 'although we had our differences in our private lives, Peter was nothing but courteous and professional at work' I thought that would acknowledge things without being unkind or hypocritical.\n\nThe day went well in all other respects. I did remember to ask Carole to get an extra flight to Australia for Molly. I also noticed that Peter's death was hardly mentioned to me. I wondered if that was because the death of a man in his mid-thirties was just unmentionable, or whether it was fear of what I might say or do. People don't like thoughts of death, and they don't like embarrassment.\n\nJust after lunch, Carole came to me with some news, \"I've just had Pamela on the phone. Stephen Parkinson wants to see you at three o'clock tomorrow, in his office.\"\n\nI shrugged, \"OK. I can't think what about. But I'll take the opportunity to get his approval of selling off Exeter, if I can. In fact, you'd better give me the files on all the major issues. Oh, and you'd better give my apologies to whoever I was meant to be seeing tomorrow afternoon.\"\n\nShe smiled, \"That bit's been done already.\"\n\nSo at three o'clock on Tuesday December 11th, I was making small talk to Pamela when I heard The Old Man call me in. \n\n\"Chris. I want to apologise. I know I haven't been the best of bosses, not always available when you wanted me, and all the rest. But I promise you, I've been reading every report you've sent in. Now, tell me, where are we in selling Marston Abbey?\"\n\nAnd of course, The Old Man was totally on top of his brief. We agreed that the Abbey plans could now go for outline planning permission, and that I'd liase with the Head Office departments, to make sure that everything was handled well, and that there would be no bad publicity. And then we moved on to Franks Engineering in Exeter. \n\nThe Old Man turned to those pages on his briefing notes, and looked at the figures and the organisation chart of a couple of minutes. Then he looked up at me, \"I guess you want to sell it off. That was your thinking last time we talked about it. Am I right?\"\n\nI nodded.\n\n\"Good. It's the right thing to do. On the open market, or do you have a likely buyer?\"\n\n\"I think we could encourage a MBO. It's the right thing to do, I think, It's not a complete company as it stands, it's just an engineering shop. No accounting, no sales, and no central services of its own.\"\n\n\"OK. Have a private word, and see what you can do. It'd be good PR to sell it off to the staff anyway.\" He paused and studied me, \"Now some months ago I suggested that you get yourself a good Number Two, someone with a bit of get up and go. Where are you on that?\"\n\nI remembered the conversation in Hawaii, but to be honest I hadn't done a lot about it, \"I've seen how I can do it.\" I answered, thinking quickly, \"Bill Elswood resigned, and I've been thinking of reorganising the whole of the production and client service side of the operation, possibly throwing in IT as well. It'd give me a chance to promote a couple of likely lads, and maybe get some better efficiency as well. I thought a Head of Operations, director level of course. What do you think?\"\n\n\"I like the bit about improved efficiency. Try getting somebody good, someone with a bit of get up and go. You could do with some help at the top. Try finding someone that could do your job in a couple of years say. In the whole of ITI we're short of good guys coming up to the very top.\"\n\n\"OK. I'll get it organised.\"\n\nPamela came in with a tray of tea at that point. \"Well done, Pam. Your timing is perfect. I wanted a change of pace.\" Stephen smiled at his ever loyal PA.\n\nStephen looked at me, \"Is there anything else to report? I don't need the actual figures, I've got them all here, and they're looking good.\"\n\n\"Just one thing, a favour really, Stephen.\" I paused and he waited, \"I was wondering if I could talk you into coming down one day next month and chairing a Board Meeting? Officially you are the Chairman of our Board. And if we're going to have to confirm what we're doing about both Marston Abbey and Franks Engineering, it might be nice if your there. And, if we can manage it, we might be able to get some short listed candidates for the Operations position in, or even our preferred choice. And it will be Dr Piers McBaine's first Board Meeting, it'd be nice if your there for that as well.\"\n\nThe Old Man smiled, \"Of course. Have a word with Pamela, and get it in my diary. Three hours enough?\" \n\n\"Thank you. Everyone will appreciate it.\"\n\nHe poured the tea, and passed me a cup, \"Now one more thing. You know we have those consultants, Hedgerton and Partners, looking at the Health Market strategy in North America for us?\"\n\nI nodded.\n\n\"Well, they've just about completed all their preliminary work. The next stage is for them to really start work in earnest to find us a series of health market service suppliers right across the States, that we can buy up and convert into a big and efficient chain.\"\n\n\"OK\" I said, and nodded.\n\n\"Well, we should have a man working alongside of them. I'd like you to do it.\"\n\nI was surprised to say the least, \"Thank you. I'm pleased you thought of me. I was expecting to just be running Franks for the next year or two.\"\n\n\"Oh, you can go on doing that. That's why I want you to get a good number two in, so that you can leave all the day to day stuff with him. Or her, I suppose. You'll have to spend a lot of time in the States. Set up a new office, wherever you fancy. Personally I think I'd choose between Boston or San Francisco, they're very different, but they've both got their attractions.\" He paused to look at me, \"It doesn't really matter, you'll be on the road a lot of the time for a year or two, as we find companies that interest us, so the base office will just be somewhere to get back to for the occasional desk day really.\"\n\nMy heart sank, I suddenly realised what he was proposing. Up to two years overseeing the takeover of several companies in the US, whilst remaining the MD of Franks in Bristol. Exactly the life I didn't want.\n\nI hesitated, \"Can I think about it, please? I'm just about to get married again, I was thinking that some time building that relationship would be important for the next few months.\"\n\n\"Oh, there's plenty of time. You don't need to decide for a couple of weeks. In fact, give me your answer when I come down to Bristol for that Board Meeting. The project won't start until about April. I could give it to the Consultancy boys here, it should really be their sort of thing anyway. But I remembered that you were a bit peeved that you weren't involved in the Franks takeover before it landed on your desk. You know, get in on the ground floor, Chris, in building the company's Health Division, and who knows where you'll end up.\"\n\nThere it is, I thought, the carrot. Do this and you're a shoo-in for being the Divisional Director for the Health Market, and a position on Main Board. \n\nThe Old Man was watching me, and he tried one more little bit of persuasion, \"I'm sure the passion of newly weds can survive a bit of separation for a few months. It's corporate life, I'm afraid. Time and tide and all that. Take your girl to the States, let her have a say in where you live.\"\n\nI looked at him, he was pushing me hard on this one, I wondered why.  \"I'm sorry, this is very unexpected. I promise I'll talk to her.\"\n\n\"Good. Judges 9:11\"\n\nAnd the meeting was over. I was just leaving his office, when he said, \"Don't ask Pamela for a Bible. Go home and work it out for yourself.\" I smiled, and left.\n\nI came out of The Old Man's office and stood there looking at Pamela. I knew she would know what he had offered me, nothing happens without Pamela knowing. \n\n\"Well that was a surprise.\" I said.\n\n\"He has great faith in you, Chris. Maybe he's decided it's time to accelerate things.\"\n\nI smiled, wondering why she was wondering, she knows what's going on in his mind. \"Well, he's certainly doing that.\" And I left.\n\nThere really wasn't much for me to do, except go home. As I sat on the train I phoned Carole, who had the usual list of messages, some I could sort out by phone calls then and there, and she added comment that she was having trouble sorting out Molly's ticket for Australia, but she'd see me about that in the morning.\n\nBy the time I got to Bristol, there was no point in going into the office, it was too late, and I just went home. Molly hadn't turned up yet, so I made myself a cup of tea and went and found a copy of my employment contract. Much to my surprise I found I was on one year's notice. I'm not sure whether that was to my benefit or not. If they wanted to get rid of me, then it would cost them quite a bit, but if I resigned and they felt like being bastards, they could still have me flying around the United States for a year.\n\nBy the time I'd got to the end of those thoughts Molly turned up. I kissed her in welcome, \"Good, I'm glad you're here. It's an excuse to have a very large G&T, I need one.\"\n\nShe looked concerned, and held her hand against my face, \"What's wrong.\"\n\nSo I told her about my conversation with Stephen Parkinson. At the end, she looked ashen, but said, \"We'll get through it, and it's only for a year or two. We could have a home in some good area where the boys could go to American schools. The variety might be good for them in the long run.\"\n\nI shook my head, \"No. It's what working for ITI can all be about. That we are meant to do whatever the Company needs, wherever the Company needs us. And I don't want to live like that. It means I'll have to resign.\"\n\nJust then a thought struck me, what was Judges 9:11? I went and found a my Bible and looked it up, \"The bastard. The fucking bastard. He's testing me.\" I looked up at Molly, and read out, \"Should I forsake my sweetness, and my good fruit, and go to be promoted over the trees?\" \n\nMolly looked at bit puzzled for a moment, then I added, \"He knows exactly what he was doing. Frances must have told him that I was having real trouble about my job versus my family. So he wants to know: Am I for him or against him? Or more accurately for the Company or not? He's chosen to bring it to a head. I bet this assignment was well on the way to the International Consultancy guys before he decided to use it to test me.\"\n\n\"So what are you going to do?\"\n\nI must have looked fearful or nervous as I said, \"Resign.\"\n\nMolly sat down on the sofa and I sat next to her. She turned to me, \"OK. We'll get through that as well. We're not broke, you know. The divorce settlement was over \u00a3300,000. And the boy's trust fund is nearly a quarter of a million, and that can be used for anything vaguely associated with their education.\"\n\nI looked at her and smiled, \"Well, now I know you didn't marry me for my money. We've never talked about money, have we? Do you know how much I've got tucked away in shares and on deposit?\"\n\n\"No. Knowing you, you'd have put a bit away for a rainy day. But I guess you spent a lot as a bachelor enjoying yourself. I don't know,...... \u00a350,000?\" She looked hesitant.\n\n\"I'm worth just over one point three million.\" I said as matter-of-factly as I could, although I was really rather proud of myself.\n\nShe went very quiet. And then in a small voice said, \"I'm glad I didn't know. I wanted you for you, not your money.\"\n\nWe spent the rest of the evening talking about money, on and off. But we did do some other things as well!\n\nOn the Tuesday, Carole met me with a problem, \"I can't get four of you on one flight to Melbourne. I can do two and two. Or I've got a special deal on four business class. You've left it too late.\"\n\n\"Bugger. How much is the special deal?\"\n\nAnd she told me. \"Ouch. But OK then. It is much nicer over that distance. Go on, what's money for if it's not to spend.\"\n\n\"OK. How was Stephen Parkinson yesterday, by the way?\"\n\nI smiled, \"At his evil best.\" I chose not to tell Carole that my resignation was inevitable, but instead I said that I was having to think about my future.\n\nAll I could think about that Wednesday morning was my own future. And slowly some ideas of what that might be began to occur to me. At about noon I called in to Carole, \"I don't think I've got a lunch today, have I?\"",
        "\"No. I assumed you'd want to do your thing in the canteen.\"\n\n\"What's on this afternoon. I know I've got an accounts meeting, but what else?\"\n\nShe looked at the diary, and gave me a list of four other internal meetings. Nothing was vital or time critical, \"Give them my apologies, but I'm taking the afternoon off. If anything terrible happens, then phone me, but I want to talk to Molly.\"\n\nCarole looked at me, \"OK. Probably the best thing you can do.\" And I wondered how much she knew from some chat to Pamela.\n\nI phoned Molly, \"Hi, it's me and I'm wondering what you're doing for lunch.\"\n\n\"Not a lot. I thought I'd go home and get a sandwich. Why?\"\n\n\"I was wondering if I could entice you to something more. If I called for you at one o'clock say?\"\n\n\"I've got my car. Tell me where and I'll be there.\"\n\n\"OK. Outside the theatre at one fifteen. There are plenty of restaurants in King Street.\"\n\n\"OK. I'll look forward to it. I love you.\" And that was it.\n\nWe met as I suggested, and we walked down the road. Suddenly I decided it was time for her to face up to some final demons, and I headed for the lime green fronted Italian. And just as suddenly she saw where I intended, and she held back.\n\n\"No. Not there. Not three days after he died. It's bad enough, but not now, please Chris.\"\n\nI turned and looked at her. Maybe I should press it. I hated the idea that there was a no go area in our lives. It was just a restaurant. It sold food. It didn't enforce adultery. I looked at her, but I loved her and relented. Instead, a turned to the other side of the road and chose the one that we had used on the day of our ill-fated tryst. She even seemed to have some doubts about that, but followed me.\n\nAs we sat down she said, \"You're not going to let me off this are you? You'll drag me into that place if it's the last thing you do.\"\n\nI looked at her, \"Yes, I will. We have no secrets; no places that can't be visited; no bad memories that we haven't faced up to. But we haven't a time limit either.\" And I blew her a kiss.\n\n\"OK. Next time I'll go there.\"\n\nWe talked about my future, I was coming to terms about having to leave ITI, and I needed to talk to my partner about what the future held. But I was also concerned about her, I knew she was going through a rough time after Peter's death, and that was something that she couldn't really share with me. I could be there for her, but I couldn't share it with her.\n\nShe sounded weary and hesitant combined, \"Sheila Armstrong phoned me this morning. They've taken up my suggestion that Peter is buried up in Nottinghamshire near his mother and father. They have preliminary plans that it will be next Wednesday, a week today, assuming the coroner will release the body.\"\n\nI nodded, I'd seen an email from Sheila this morning. \"I won't be there. But don't let me influence you, I quite understand that you would want to be there. I'll chauffeur you if you want, but it'd be wrong for me to pretend to mourn him.\"\n\nShe looked at me and nodded, but didn't say anything.\n\nAfter that we talked about my job. I'd decided that I'd hang on until the January Board Meeting. I'd only resign when I had to. I'd decline the offer of going to the States, and wait for Stephen to push me, and only when pushed would I resign. We talked a little about my wanting to be my own master. But, try as we might, neither of us could come up with the start-up opportunity that lit the fire in my belly that I needed. \n\nAnd then I tried her on my other thought, \"How do you fancy living in Exeter?\" and we talked about the MBO, and the possibility of my being part of it. I told her that I could only do it if I had the support of Stephen Hobbs and the guys in Exeter, and that I'd go and see them soon.\n\nAfter lunch we walked, hand in hand, back down to the car park. As we stood beside her car, I kissed her, \"I don't suppose I could talk you into coming back to my flat for a coffee, could I?\"\n\nShe saw the reference, \"Easily. But I can drive myself this time. And you don't have to seduce me. You can just send me into the bedroom and tell me to take my clothes off.\"\n\nI didn't quite do it like that, because I undressed her. And what delighted me was that when I took her dress off, I found that she was wearing quite a sexy bra and matching panties and suspender belt all in powder blue, with dark brown stockings. I recognised them all as one of the sets I'd bought her on her birthday weekend.\n\n\"You look good. Thank you.\"\n\nShe smiled and kissed me, \"It's important to me as well. I wake up in the morning and my first thought is you. And especially if you're not there, then I spend a moment thinking: I wonder what he'd like to find me in today, if you were to surprise me as you have today. It brings me closer to you somehow.\"\n\nI told her that I loved her, then I kissed her and we made love. And after we'd showered, we did something else that was important to me, for the first time ever I went with her to pick up the boys from school. I needed my family around me as I faced an unknown future, and they were there.\n\nWe got through to the day of Peter's funeral, Wednesday December 19th. Molly had stayed with me the night before, she never complained about this weird life she had, where some nights she stayed over with me, and had to get home early enough to get the boys to school, and other nights she went home. But I knew it must be a strain, and the sooner we got to all four of us back under one roof the better.\n\nAnyway, that morning I was sitting up in bed watching her get dressed. She had to leave quite early for the long drive to Nottinghamshire and the funeral. Although I'd offered to be her chauffer, I think this was something she wanted to do alone. She was sitting on the bedroom chair staring into her jewellery box. In it, I knew, were her engagement and wedding rings from Peter. I wondered if for that day she was going to wear them. Maybe not on her wedding finger, but on the other hand, or on a chain around her neck, or even just carry them, as some sort of last tribute to the four years they had shared, good or bad. But then I realised that she knew I was watching her, and that was unfair to her. So, I got up and had a shower.\n\nI wasn't going into the office that day. It would have been hypocritical of me to go to the funeral, but somehow I wanted to be around if Molly needed me. In truth I wanted her to need me, but knew she was strong and self-sufficient. After breakfast, I kissed her goodbye and told her to drive carefully, and to phone me if she had any problem. She looked pale and white and nervous.\n\nAs soon as she had left, I went into the bedroom and checked the jewellery box. Neither of Peter's rings were there.\n\nI didn't have a lot to do. I had a meeting with Stephen Hobbs and his senior colleagues planned for mid-morning, to tell them that ITI was going to put their operation up for sale. I just hoped they'd accept my tentative suggestion that I might help them in that. And for the afternoon, I had a shopping list of things to buy for Christmas, and for the boys for their trip to Australia.\n\nThe morning meeting with Franks Engineering went as well as can be expected. Telling a bunch of guys that their whole future is in jeopardy is never easy to say (or to hear). But the significant thing was the lunch with Stephen afterwards. \n\nI opened with, \"I meant it, Stephen. I really am sorry to be the one having to throw such a spanner in the works. It was my idea, and for ITI it's right. But I am sorry for the uncertainty it brings everybody. I hope you'll see it as an opportunity. \"\n\n\nHe looked at me, \"It's not your fault, Chris. It's life these days. I just wish we had a way of actually putting an MBO together. Then at least we'd be masters of our own destiny. What with TDF and now ITI, I think we've had just about enough of big corporations.  I think most of us would just love to go back to what we used to be, a profitable, professional specialist engineering company, with no special allegiances to anyone.\"\n\n\"Then, why don't you? Here is a golden opportunity. I'm pretty sure ITI would give you some secure contract for the next few years. What else are they going to do? They need you, but it just doesn't make sense to own you. That's a great jumping off ground.\"\n\n\"You see, you immediately see a way forward.\" He paused and looked at me, \"How do you see your future. With this sale, your empire has just got a little smaller. Have you been a bad boy?\"\n\nI smiled, \"No. In fact it appears I've been a very good boy. They have plans for me to be whizzing off all over the world building a bigger and better Health Division.\"\n\nHe looked at me, slightly surprised, \"You sound slightly cynical. Isn't it the future you planned?\"\n\nI gave him a wry smile, \"You're not the only one who wishes he was the master of his own destiny.\"\n\n\"Well, I hinted once that what we need is a leader. You didn't take me up on it. Any chance that I could convince you this time?\"\n\nAnd that was the answer I wanted. By the end of lunch we'd agreed to keep in close touch, and to meet up again as soon as I was back from Australia.\n\nI got back to my flat with all my shopping errands done. I was feeling satisfied with my day. I checked my watch, the funeral was long over, and Molly should be well on her way home. Our agreement was that she'd call just call in to Ralph's to see the boys, and then come on to me. I was tempted to go round to Ralph's and meet her as soon as she got back, but I thought we might need some privacy. I knew Ralph would respect that, but I equally knew that the boys wouldn't. So I sat around and waited.\n\nEventually she got to me. She looked tired, but I couldn't read anything else.\n\nSo, as I poured her a G&T to match my half drunk one, I asked \"How was it?\" \n\nShe shrugged, \"About as I expected. There weren't many there. Some from the Abbey and Piers and Jeanette, of course. Some cousins I think I've met before. One old school friend who got to hear of it from somewhere. Susan, someone must have told her. And an old couple who were neighbours of his mother's. Oh, and Sheila Armstrong, who organised everything. She was ever so kind, but she sort of stayed in the background.\"\n\n\"Was it hard?\" I asked, as I handed her the G&T.\n\n\"Not as hard as it might have been. It was odd, saying goodbye. Somehow, I don't think I was quite ready for him to be dead.\" She paused and sipped her drink. \"Mmmm...I needed that.\" She looked at me, \"You started out hating him, I know you did and I don't blame you. But now I think you don't feel a lot about him. Me? I started out liking him, respecting him and feeling sorry for the way I was treating him. But I'm the one that grew to hate him.\"\n\n\"Just let him go, Molly. For your own sake.\"\n\n\"That's what Jeanette said. When the mourners left the grave side, I just stood there wondering what I felt about him. And Jeanette came back to see if I was alright. She asked if I had stopped hating him yet. She even asked if I'd forgiven him. And I think I have. I certainly don't hate him anymore, I just hate what he did. I think I see him as a tragic figure now, he got hurt as much as anybody by what he did.\"\n\nThen she looked up at me, \"I know you were watching me looking at his rings this morning. I was wondering what to do with them. I stopped three times on the way up, until I found what I wanted. I had to buy a stupid little collection of plastic children's jewellery, but I got a little black velvet pouch with it. That's what I wanted. I put his rings in it, and when it came to the bit where you throw a handful of dirt into the grave, I threw the rings. I gave them back to him. I should never have had them in the first place.\"\n\nI sipped my drink, partly to cover up that I didn't have anything to say to that.\n\n\"And as Jeanette led me away from the grave side, Susan came up. She said that all she ever did was to try to help a man who was in love with me and wanted me when you rejected me. Then she said that it was Peter that asked her to buy the Longleat tickets, and that it was his idea to swap the letters.\"\n\n\"And what did you say?\"\n\n\"Nothing. Absolutely nothing. It's a rewrite of history, conveniently coming along after his death. If he wanted Longleat tickets why wouldn't he buy them himself, even if he was going to lie about where they came from? And she forgets, the reason I was writing to you was that I had been given a few days break from the pressure of Peter, I might have even been beginning to think straight. He was at a week's conference in Harvard at the time.\"\n\nI just held her in my arms for a long quiet hug.\n\nEpilogue:\n\nWell, that's over a year ago now, and Peter's name hardly ever gets mentioned these days. It's not that he's unmentionable, it's just that he's not very important to us. And partly because this last year has given us so many good memories.\n\nBut the first thing I remember after the day of Peter's funeral was the very next day, and it was fortuitous but somehow distasteful. Neil Davidson came into see me. \n\n\"Chris, I've got something that I think I should tell you. I've checked the records, and Peter Davies never re-assigned the beneficiary of his Company life assurance. It says Molly Davies. And I've checked with the insurance company, and Molly Davies gets it. In this day and age, with so many odd relationships in people's lives, the named person gets it whatever their relationship to the deceased.\"\n\nI looked at him. \"How much?\"\n\n\"Exactly? I can't remember. But something over \u00a3300,000. Four times his gross salary.\"\n\n\"Oh! I wonder how that's going to go down.\" I pondered.\n\nNeil looked sympathetic, \"I wondered. Will she have problems? Do you want me to start investigating if it can be transferred to a charity say, without tax implications?\"\n\nI looked at Neil for several seconds while I decided, \"No. I take it you're writing to her? I'll tell her tonight. And I honestly couldn't tell you how she's going to react.\"\n\nIn fact, when I very hesitatingly told Molly, she wasn't over the moon about it, but seemed to think that she was the lucky recipient of a bureaucratic error, and it wasn't Peter's money but the insurance company's. And it might help if I was going to be unemployed.\n\nAfter that bittersweet memory, I remember a far happier one, Mum's face when a family of four walked out into the Arrivals Hall at Melbourne airport. She just didn't know what to do with herself. She did do one thing that pleased me, she went straight up to Molly and hugged her, even before she acknowledged the boys, let alone me. \n\nThe Christmas in Melbourne was great. Within two hours of us all getting back to Len and Mum's house, Len had phoned Ralph and he was on his way. He made it by a circuitous route on Christmas Eve. Mind you, he only stayed with us for a few days before he was off in his hire car for every botanical garden in Southern Australia. Then back with us to celebrate Ben's birthday, when we had a beach barbeque which made it very memorable for a little boy with a January birthday. But then Ralph was off for a visit to New Zealand, before he headed home to hear his divorce petition granted.\n\nWhile we were in Australia, Molly and myself did some real wedding planning. And Mum got involved, and she was so happy. She'd been little more than a guest flying in our first wedding, and she just loved talking to Molly about our plans. We chose to get married again on the 23rd April, our old wedding anniversary. We'd overwrite one anniversary with another. And we decided that we'd have as simple and minimal ceremony as possible, we just wanted to put right a five year mistake. But the party afterwards, well that was a different matter.\n\nAnd then we came back and a couple of weeks later it was my birthday. And that I made very special. The boys gave me a book on malt whiskey and a bottle of the stuff to drink while I read it, and Molly gave me some diamond cufflinks. As she said, \"I know you hate jewellery for yourself, but I wanted you to have some diamonds as well.\"\n\nIn the evening, I took Molly out to dinner. And on the day when she could refuse me nothing, I took the opportunity to solve the problem of the little lime green painted restaurant in King Street. But first, I had her dress in that little open topped corset thing under her dress. She'd modelled it for me on a couple of occasions in the bedroom, but she'd never worn it out. But it was the night when she couldn't say No.\n\nShe looked at bit hesitant when I determinedly headed for the restaurant, but she just said, \"I might have known. But this place does have some bad memories for me.\"\n\n\"We'll overwrite them. Promise.\" I said and kissed her.\n\nOnce our drinks had been served, I told her, \"I want you to go to the Ladies and take off that g-string.\" She gulped, but smiled. And then I continued, \"And I want you to work at least two fingers into yourself and then come back. I want to kiss wet fingers that are smelling of you.\" At that she went slightly pale. \n\nShe sipped her drink, looked at me, sipped her drink again and said, \"Dutch courage. God, it's bad enough sitting here feeling my boobs floating around. This basque makes me feel so sexy, it sort of holds me firm which just accents that it isn't holding my boobs.\" She sipped her drink again, and then headed for the Ladies.\n\nWhen she returned, she made her right hand prominently available to me, and I took hold of it and kissed it, and gently licked her fingers. \n\n\"I don't think I'll ever think about that Ladies the same way again.\" She said with a smile.\n\nThrough the dinner, I constantly mentioned sex in various ways. And I knew she was getting more and more excited.\n\nOnce we got to the coffee, I said, \"Do you know what's going to happen when we get back to the flat?\"\n\nShe smiled, \"I hope it's what I want to happen. God, you've been cruel tonight, Chris. And I love it, even if I am squirming a bit.\"\n\n\"You're going to give yourself like you've never given yourself before.\"\n\n\"That sounds interesting.\" She smiled, and then a thought crossed her mind, \"Anal? I haven't done that in years. I've been sort of putting it off, just a bit scared I suppose. OK, then.\"\n\n\"No, more than that. First you are going to suck me and lick me until I'm as hard and as near to bursting as you've ever managed. Then you are going to turn round, and you're going to fuck me with your bottom. I told you about it. You're going to impale yourself and you're going to do the work. I'll just keep still and have you give me the pleasure of your bottom.\"\n\nNow she did gulp and go pale, \"I'm not sure I can. I don't mind you doing it to me, but me doing it to me, I just don't think I can.\"\n\n\"Don't you want to give yourself totally? Don't you want to give me the pleasure? Think of it as your final atonement. You wanted that, but this way it's you giving yourself to me more than ever before, not me taking you. I've done that many times. Tonight you give yourself to me.\"\n\nShe sipped her coffee. \"I'll try.\"\n\nAnd she did, and it was great. We took our time, and I had plenty of lube handy. But she did impale herself, and then rock backwards and forwards, fucking herself on me. And I was quite still, well I was quite still until it all got a bit overwhelming, when I was fucking her as much as she was fucking me.\n\nAfterwards, we lay on the bed, and she looked at me, \"I love you Chris. You do know that, don't you.\"\n\nI kissed her, \"Yes, and I love you.\"\n\n\"And I want you to have me do that again, once in a while. I felt so totally yours, you were all I was thinking about. And I liked that. You can have me anally whenever you like, but just once in a while, when you think I need it or you need it, make me do that again.\"\n\n\"And how do you feel about that restaurant now?\"\n\n\"I think I'll never forget this evening. I've never felt so naughty and sexy, and loved and loving. It'll never be my favourite restaurant, but now I've got some good memories to counter the bad.\"",
        "\"Thank you.\" I said, and I kissed her, \"Now you haven't cum yet. And I don't think I can help much for a minute or two. Unless you encourage me with your mouth, of course. Or you could give me a show of your own handiwork....\" And we settled for a night of wonderful debauchery.\n\nOn the Wednesday, six days after my birthday, there was the January Board Meeting. Stephen Parkinson did us proud. He had decided to spend the whole day with us, touring the factory, and shaking so many hands. And then he settled into the interview process for the three short-listed candidates for the Director of Operations position. All three were quite exceptional, but one stood out head and shoulders above the rest. A guy called Miles Poynter, he was thirty three years old, and a very bright lad. I was sorry that I wasn't going to have long working with him.\n\nAfter lunch we had the Board Meeting, and we agreed the sale and redevelopment of Marston Abbey. And we approved the offer that was going to Miles Poynter. And we agreed to put Franks Engineering in Exeter up for sale, preferably as an MBO. It all went very well. And then, after everyone else had left, Stephen and myself went back to my office.\n\nAlthough he had seen it several times before, Stephen looked at it all, \"This office is bigger than mine. I remember it from my visit at the time of the takeover, but then it was so bloody miserable it didn't matter how big it was. Now, I'm jealous.\"\n\n\"It's not my fault.\" I defended myself, \"I wanted to re-organise my way out of it, but that was simply too expensive. So, instead I made it better.\"\n\n\"And are you hoping to cling to it, or are you off to America, Chris? I need your answer.\"\n\nI looked at him and I thought I'd let him do the work. I was volunteering nothing at this stage. \"I'm not going to the States. It's at a wrong time in my life. I'm sorry Stephen.\"\n\nHe sat down at a chair at my desk, \"And there's nothing I can say to change your mind?\"\n\n\"I'm sorry Stephen. I love this company. But I love my family more. That's what this is all about, isn't it. It doesn't really matter whether I do this US assignment or not. But you want to know what comes first in my life. And that's simple, my wife and family.\"\n\nHe sighed, \"You're right. I do talk to my wife, you know. And I couldn't let it rest. You are marked out for great things, you know that. But I couldn't have you failing when the time was critical. You'll have to forgive me for pushing you.\"\n\n\"I know. At some stage I would have had to make this decision. What happens now?\"\n\n\"Well, you have a contract. I could order you to go. Maybe I should, because at some point I will have to. If not this assignment, then another one. And when I do?\"\n\n\"I'll resign.\"\n\nWe just looked at each other in silence for a couple of minutes.\n\nEventually he spoke, \"I thought you might. Well, I guess with my Company hat on, there's no time like the present.\"\n\nWas he just pushing me? Go now or not at all? There was only one answer, \"I'll put it in writing tonight.\"\n\n\"Damn, Chris. I don't want to see you go. I had hoped that one day, in my dotage I'd be sitting reading the business pages and there would be the announcement of you taking over as CEO.\"\n\n\"I know. But the price is too high. You know I talked to Frances. She told me that she was willing to be your partner in this commitment you have to ITI. I know that Molly is committed to me just as strongly, but not to ITI or just material things.\"\n\nHe bowed his head for a moment, and then looked up, \"I envy you. I was so burningly ambitious I never asked those questions. I was lucky when it turned out that Frances was always at my side, she would have had every right to say to No. But I know we paid a hell of a price for my success. Don't ask me which one of us has got it right, but I do wish you well. You must ask myself and Frances to the wedding. I'd like that, and I know she would.\"\n\n\"23rd April. I'll make sure your invited.\"\n\n\"What do I do about this place after you've gone?\"\n\n\"My advice would be to put Piers McBaine in charge. He's a good man, and it'd give the Company a hell of a credibility boost in the market to have him as MD. But he'd need that Miles Poynter to back him up. And then Piers has only got three or four years to go, by which time Miles, if he's as good as we think he is, will be able to take over.\"\n\n\"That sounds fair. What will you do? Any idea yet?\"\n\nI smiled, this was the bombshell, \"Yes. I'll lead the MBO of Franks Engineering.\"\n\nThe Old Man paused, and looked at me, \"Well I won't make a big song and dance about it. Nothing's going to happen on that one in the next couple of days. But I can't have you negotiate with yourself for the MBO. So, you'd better clear your desk and be gone by Friday. Gardening leave until your contract expires.\"\n\nNow that was a surprise, I had all sorts of veiled legal threats up my sleeve to try and get out of my one year notice. Only for him to give it to me on a plate.\n\nAs Stephen left he paused in Carole's office, and turned to me, \"Matthew 25:21.\" And for once I recognised it. \n\nI smiled, \"Psalms 30:12\"\n\nStephen paused and thought, and then his whole face softened for a moment, and he shook my hand vigorously and left.\n\nCarole looked at me, \"Translation?\"\n\nI smiled, \"His was: Well done, thou good and faithful servant. And I replied: O Lord my God, I will give thanks unto Thee for ever.\" I paused and smiled, \"I will admit that I had to look it up last night, in the hope that I'd get to use it.\"\n\nI turned back into my office. Carole followed me, \"And are you pleased with the day?\"\n\nI sat at my desk and indicated that she should sit down, \"Yes. On the whole, Yes. But I'm sorry, Carole, but The Old Man just forced my resignation. I had a choice of being promoted to spend my days in hotels and aircraft or resign. I chose Molly and my family.\"\n\nCarole just looked at me, \"Shit happens.\" And then she burst into tears and ran from the room.\n\nI did clear my desk by Friday. And the Company did a very quick settlement with me, of a year's salary, tax free, and the Jag. And so I had the time to do the round of bankers and investors and venture capitalists that I needed. ITI made one mistake, they appointed Myra onto their team for negotiating the sale of the Engineering group. And although she was properly professional, it made life a lot easier.\n\nIt was two weeks later. Carole had phoned me, and I'd invited her to lunch, I thought I owed it to her as a big thank you. But then she surprised me, \"Chris, will you be needing a secretary in Exeter?\"\n\nI looked at her, almost stunned for a moment, \"Yes. Are you asking? Because if you are, then it's yours for the taking.\"\n\n\"I'm asking.\"\n\n\"Well I can't afford to pay you what you're earning now. And I can't afford to pay you any moving costs. But why?\"\n\n\"I've talked to Rick about it. And we reckon that the twins are never going to come home to live. So we might as well sell up, and a little cottage around Exeter might be nice. Rick can sell his company, there are a couple of lads in Bristol, they're quite good according to Rick, and they'll give him a bit for the trading name and client list. And then he won't do private work anymore. He'll contract with some house builders for the plumbing of new houses. So there'll be no clients phoning up in the middle of the night. I still want to work, but fewer hours than I do now. So if I could make half of what I do now, then I'd be happy.\"\n\n\"Well, I can afford a little more than that, so I hope we've got a deal.\"\n\nAt the beginning of March, Molly and myself had to send out the invitations to our wedding. I asked her about Susan. There was still a part of me that just wished Susan would find some way of apologising, and that Molly could find some way of building some form of distant but tolerable relationship. But Molly's reply was succinct, \"She never wanted this wedding. I wouldn't insult her by inviting her to celebrate it.\"\n\nI did insist that we invited Brenda and Derek. First, I quite liked them. But it was also that I didn't want Jamie and Ben to lose total contact with their maternal family. But, that led to Brenda phoning me to say that Susan had found out, and that she had every intention of coming anyway, invited or not.\n\nI told Molly, and her reaction was simple, \"We'll go and see her.\"\n\nBy then Susan was living in a little apartment quite close to Brenda and Derek's guesthouse. We parked outside, and Molly, very firmly holding my hand, led the way to the front door. She rang the bell, and Susan answered it.\n\n\"Oh.\" You could see her stiffen as she saw us. \"I knew you'd come sooner or later. Come in.\" And she stepped backward.\n\n\"That won't be necessary.\" Molly said, \"I just wanted to say that I know that when I last spoke to you, not Peter's funeral, but when I last said anything to you, I was very angry and upset and I said a lot of things that you must have found horrid.....\"\n\n\"That's alright. I'll forgive you, it was an emotional time for you and you are my daughter....\"\n\n\"No. I want you to know that I meant every word of it.\" She paused and Susan looked shocked and she paled. But Molly continued, \"I do not want you at my wedding, please don't come. The staff will be given clear instructions to throw you out, and I'm sure you'd find that embarrassing.\"\n\nSusan bristled, \"But....but I'm you're Mother. I've got a right.... I only wanted you to be happy....\"\n\n\"No. You only wanted you to be happy. You didn't give a damn about me and my happiness, or my children's, or my husband's. You happily lied and cheated and betrayed us, just to get what you wanted. It was just you you you.\"\n\nMolly turned and started walking away, and I turned with her. But then I turned back to Susan, \"The thing is I've resigned from ITI. I've bought into a company in Exeter. So, we'll have a family home just an hour down the road from Bristol, and I'm sure Ralph will visit often. All you ever wanted, really. But now you won't be part of it. If only you could have loved and trusted us more.\"\n\nAnd I turned and we walked away. I put my arm around Molly, who said, \"Get me to the car and just drive away. I don't want her to see me crying. I had to do it, but it was so sad.\"  \n\nThe wedding was wonderful. We chose a small country mansion that was given over to nothing but conferences and weddings and big entertaining. And the service was as simple and as straightforward as we hoped. The reception afterwards was magnificent. We didn't have a big guest list, but no expense was spared in the catering or entertainment.\n\nKeith and Anne Walters were there, they flew in from San Diego. They looked suntanned, fit and happy. \n\nStephen and Frances Parkinson were there. They made quite an entrance in arriving by helicopter, and by doing so they instantly became Jamie and Ben's heroes. And I was delighted to see them. Molly took the opportunity to thank them again for their wedding present. It was our honeymoon. Two first class tickets to the Bahamas, where we were to stay in their holiday home for two weeks. \n\nStephen took me on one side, and said, \"You don't have to worry about being relaxed and doing what comes naturally; the staff are the height of discretion. Our daughter took some of her chums out there after she graduated. And from what she's told me since, about the couple who did it on a sun-lounger by the pool one afternoon, or the skinny dipping at night, I guess she had a pretty wild time. If she was willing to tell me about those bits, what were the bits that she didn't like to tell her Father about? But I've never heard a word of it from any of the staff. Enjoy yourselves.\"\n\nI had no sooner shaken Stephen's hand than I found myself talking to Myra. \n\n\"How's Franks?\" I asked.\n\n\"From the little I see of it? Piers is doing well, but I don't really know. I'm not there a lot these days. I'm mainly in London again, but they are trying to edge me towards the International Consultancy team.\"\n\nI smiled, \"Congratulations. That's a promotion. Well done.\" She wasn't smiling and I hesitated, \"Or commiserations. What's wrong with the idea?\"\n\n\"I think that if you drew a commuting belt around Exeter University I don't think much of it would fall under the classification of International.\"\n\nI laughed, \"Does that mean you and Will are getting serious?\"\n\n\"I know I am. I just don't know about him. But me being anywhere else in the world isn't going to help. I can't seduce him into marriage by email.\"\n\n\"I'll be looking for a Finance Director. It's a better title, but I expect it isn't exactly promotion in actual work. And definitely less pay.\"\n\nShe looked up and I thought she looked interested, and she sounded it, \"Not now. Here comes Will.\" And Will appeared from behind me, just as Myra was saying, \"I might buy you lunch, on ITI of course, when you get back from your honeymoon.\"\n\nI shook Will's hand, but he rather ignored me. He looked a bit pale, and looked at Myra, \"You don't fancy a breath of fresh air do you?\"\n\nAnd they were off before I had time to commiserate on the combination of champagne, noise and excitement.\n\nI looked around the room, primarily looking for my bride. But as I scanned around I saw Ralph sitting at a table with Brenda and Derek, and in deep conversation. Now that was a surprise. Then I spotted Molly, and headed over to her.\n\nShe was talking to Jeanette. Molly smiled, squeezed my hand and mouthed 'I love you'. \n\n\"You can say it out loud, on today of all days.\" I said and leant in for a little kiss. \n\nJeanette said, \"I was just saying to Molly, I've only ever attended two civil marriages in my life. And both were for Molly. And I've told her, I don't want a third.\"\n\n\"There won't be a third. I promise.\" I said, and hugged my wife. \n\nI looked around the room. I saw Mum and Carole, and they didn't look happy. But as I was about to head their way, Molly stopped me. \"No. You of all people can't go. I think its Real Mum and Proxy Mum are having a falling out. Let them get on with it.\" And we smiled, and I stayed where I was. But I watched. Len leant over and said something to Rick, and then both men stood up and obviously invited the other's wife to dance.\n\nMolly was also watching, \"There. Len and Rick are sorting it out. Leave them to it.\"\n\nI wondered where Jamie and Ben were, and I went in search. Before I found them, I bumped into Ralph.\n\n\"I saw you talking to Brenda and Derek.\"\n\nHe half smiled, \"It was time to bury the hatchet. Years and years ago, Brenda told me some things that I didn't much like, and I told her she was wrong. Well, I've known for over twenty years that I was wrong, and she was right. I thought it about time I apologised.\" And he smiled.\n\nThat explained a lot! Now I could understand his divorce.\n\nI found Jamie and Ben. Morag had Ben with her brood. And Jamie was sitting listening to his Uncle Brian. They were out on the terrace, and Brian appeared to be reciting the whole of Samuel Taylor Coleridge's Rhyme of the Ancient Mariner from memory to his enthralled audience of one.\n\nI went back to Molly. But as I arrived, Myra and Will came through the door, hand in hand and smiling from ear to ear. \n\nI didn't say a thing, but Myra did, \"I could take you up on your suggestion. We're not going to say anything today, it's your day. But, I'm going to need that job in Exeter.\"\n\nI shook Will's hand, and gave Myra a kiss. And Molly smiled, but looked mystified, until I whispered \"I'll explain later. Just congratulate them.\"\n\nJust at dusk, I went out onto the terrace for a breath of fresh air. I found I wasn't alone, Derek was there.\n\n\"Derek, I don't want you and Brenda to be strangers. It's important that the boys don't lose contact with Molly's side of the family. She doesn't want them to see Susan, but if you and Brenda could come and see us once in a while, when we've got ourselves settled in Exeter, then you'd be most welcome.\"\n\nHe turned and looked at me, \"Thank you Chris. If it's any consolation, I think you were right about Susan. She's turned very bitter. Now, it was all Peter's fault. She only did things that he got her to do. We never had any of that whilst he was alive. Funny how stories change, isn't it?\"\n\n\"She knows what she did, but she will still argue that it was understandable. She'll never admit it or apologise.\" I turned round, Brenda was standing behind me, and must have heard Derek. She went on, \"We left her in charge of the guests this morning so that we could come here. She found that hard, being left behind while we went to her daughter's wedding. I think, but I'm not sure, I saw her wiping a tear from her eye when she thought she was alone. When she saw me she said the thought she had a cold coming.\"\n\nNot long after that, many of us were out on the terrace watching the Parkinsons leave, as their helicopter took off. I had my arm around Molly, and kept an eye on Ben who seemed determined to fall off the terrace into the fish pond below, when I heard a Scottish voice behind me.\n\n\"Champagne's all very well, but you'd think an FB would serve a decent drink on his wedding day.\"\n\nI didn't turn round, \"If you ask nicely Piers, I think you'll find that a waiter can bring you a Blair Athol.\"\n\nThere was a very short pause, then the same voice, \"The day's not turning out so bad after all.\"\n\nAnd it didn't, Molly and myself were married. And now we're hurtling towards our first anniversary. At least I've got a nice diamond necklace tucked away as a present.\n\nWe bought a house in a village just outside Exeter. It's big and fairly ugly, but it had the atmosphere of a happy family home. It came in five acres of gardens and paddocks. And it had what the agent details referred to as a guest/staff cottage. I had my eye on that as the world headquarters of Chris Bennett Enterprises. But instead we did a deal with Ralph. He lives there rent free, but the upkeep of the garden is totally his responsibility.\n\nAnd is Ralph happy? Well, if you asked me for a picture of total contentment, I'd say I saw it about two weeks ago. I was watching him one evening on his lawn tractor going up and down the lawn, with his two grandsons insisting on playing football around him, and the two dogs insisting on playing football with their young masters. And the look on Ralph's face was one of total contentment and joy. \n\nI suspect that's partly helped by what I've seen for a few mornings recently when I get up at six o'clock and go down to the kitchen to make a cup of tea. I catch a glimpse of the white Honda that belongs to the widow who runs the post office and general stores in the village, just pulling out of Ralph's drive. He hasn't said anything yet, but if it's important then I'm sure he will. Maybe he'll say something when he gets back from his eighteen day botanical tour of China next month. Molly says it's a bit odd buying stamps from a lady who may just be a passing fancy, but equally maybe her future step-mother. \n\nAnd Molly? Is she happy? Well, I hope so. She's looking good, but then women who are seven months pregnant often look blooming. Obviously with our move to Exeter she had to give up working at the hospital, and instead she launched her private practice. It was a hesitant start, but then one of our neighbours heard of her, and he was a producer on the local radio station. He got her started with an occasional slot on a morning phone-in, but now she has her only regular weekly schedule. And from that, television's picked her up as an occasional expert for one of the daytime magazine shows. She earns five times what she was earning at the hospital, and she can pick and choose her patients. So she's the media junky now.\n\nOne interesting little side effect: she's lost her phobia of needles. I won't say she's volunteering for a tattoo, but she can cope. And she changes her earrings every day with no problems whatsoever.",
        "And me? Well, I'm very happy as the Managing Director of B&A Engineering. It was going to be Bennett & Associates, but before we even registered it, we all agreed that it was a bit of a mouthful, so B&A it became. \n\nAnd our biggest outside shareholder, after the finance boys? Well, that's Lady Parkinson. Yes, Stephen's knighthood was announced in the New Year Honours. Frances put one million into our little venture, and we have an unwritten agreement that Sir Stephen will be our Chairman as soon as he retires from ITI. I think she sees a monthly trip to Exeter from Cirencester as a nice day out.\n\nAnd, am I happy? Yes, more than I ever hoped or deserved. Of course, if I look back I can get angry and hurt and sad. So the trick is not to look back.\n\nTHE END "
    ],
    "authorname": "GaryAPB",
    "tags": [
        "adultery",
        "divorce",
        "wife",
        "revenge",
        "betrayal",
        "reconciliation",
        "cheating"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/back-to-bristol-ch-22"
}