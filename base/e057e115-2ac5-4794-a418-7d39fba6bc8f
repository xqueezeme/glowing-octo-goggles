{
    "title": "A Succubus Awakens Ch. 04",
    "pages": [
        "Succubi fall under the Cambian classification of demons. Which is to say that they're actually half demons. Spawn of a twisted union between man and beast. This is largely irrelevant. Their demonic traits overwhelm any humanity within. Do not squander compassion or mercy upon them. I bring this fact to your attention only because Cambians are unique among demons for their ability to dream. In the waking world, one's aura can be strengthened. Reinforced by will and discipline. In the realm of sleep, however, it is diminished. There, succubi stalk our nightmares.\n\n<p align=\"right\">-Sir Arthur Thompson, The Demonic Archive</p>\n\nAmy lay in her bed, on her side atop the covers, wearing only underwear. Nothing like her usual modest garments though. All smoky black and trimmed with floral lace. Panties with tapering waistbands that emphasized her wide hips. A pushup bra that squeezed her prominent breasts together until they nearly spilled from the cups, creating a deep valley of cleavage. A garter belt was cinched around her waist, and clipped to semi-transparent stockings tight enough that her thighs swelled out where the compression ended.\n\nShe was in her room, but it was off. Key details were missing. Her bag was in the wrong spot, and the laptop she'd fallen asleep with was nowhere to be seen. Her minimalist alarm clock was replaced by the analog one she had used as a kid. Cheap blue plastic with old-fashioned bell ringers. Behind its glow-in-the-dark hands was a star chart. The edges of the room shifted and blurred. As if she was on a small island of reality surrounded by fog. Eventually, the island would begin to shrink as the fog closed in and swallowed reality with chaos. Just as It did every night before.\n\nA mirror manifested on the wall nearest to her and she studied herself. The lingerie revealed all the parts of herself that she loathed. Her too-thick thighs. Her soft stomach. Her oversized chest. She could feel that the panties did nothing to hide the round flesh of her buttocks.\n\nYou're so beautiful.\n\nIn reality, Amy would be mortified by her appearance. Here, she felt only a whisper of embarrassment. It was drowned out by an uncharacteristic sense of pride that suddenly filled her. She realized she wasn't wearing her usual glasses. instead, they were a pair with narrow lenses rimmed only on the bottom half. Lying on her side seductively with her hair pooled around her, she looked like a pinup model.\n\nOr a sexy librarian maybe?\n\nAmy chuckled, then frowned. Were the thoughts hers, or was she hearing voices? She was more lucid here than in a typical dream, but it was still hard to think and her clarity faded in and out. Already her memory of what had happened up to this point was blurring. Like the walls. Her door opened, and Gwen finally entered.\n\n\"What took you so long?\"\n\n\"Sorry. I got distracted.\"\n\nGwen glanced sideways and blushed. Her bashful behavior roused something within Amy. She was wearing the same cropped tee and frilly crimson panties from this morning. Gwen's platinum locks and the loose hem of her shirt fluttered in some unseen breeze that only seemed to affect her. She wasn't wearing a bra, and two nubs were clearly visible where her nipples pressed against the fabric of the shirt. Amy felt a pang of jealousy as she admired the silhouette of Gwen's teardrop breasts. Her taut midsection and delicate legs. She began to shift to cover her own oversized body.\n\nNo. You're perfect.\n\nAmy froze, and the jealousy slipped away. A sense of comfort washed over her, and the jealousy was replaced by lust.\n\n\"Come here.\"\n\nThe words came effortlessly to her lips. They were kind, but firm. A command. She patted the bed beside her to add emphasis. With the exception of her academic work, she'd always been meek. It was another thing she disliked about herself, but in the dreams she was instilled with a confidence that eluded her in the waking world.\n\nGwen, usually fiery and bold, was the meek one here. She simply nodded and moved to obey. She crawled along the bed, back arched and hips swaying. Amy found her eyes drawn along each flowing curve as Gwen reached her. For a moment, a spark of clarity cut through her foggy mind. It whispered to her. This wasn't right. She reached out and cupped Gwen's cheek. At the contact Gwen's form shifted and the childhood friend she remembered appeared before her.\n\nNo!\n\n\"No!\"\n\nGwen spoke in time with the voice in her head and pulled away. The room shook, and the fog closed in. Anger flashed across Gwen's face and she shifted back into the slender, seductive woman she'd become. The fog halted. It had consumed the walls, leaving the two of them atop a bed floating in a sea of dark smoke bathed in red light. Gwen had regained her composure. What had she just done? Amy couldn't remember, but she apologized anyway.\n\n\"I'm sorry.\"\n\nShe reached forward and pulled Gwen into a hug, cradled her against her chest and felt her squeeze back. They shifted sideways until Amy was spooning Gwen's smaller form. Her hand drifted along Gwen's stomach and came to rest on her hip. Gwen took her other hand in her own and their fingers intertwined. Amy kissed the back of Gwen's neck. This was Gwen. This was what she wanted. She ignored the whisper telling her otherwise.\n\n-------------------------------------------------------------\n\nAmy woke up feeling more refreshed than she had since their predicament began. As she went about her morning routine she silently thanked Gwen for her restraint last night. The memories were already growing fuzzy, but she remembered dreaming of her yet again. Images of them intertwined in her bed sprang to her mind. She shook her head in an effort to clear them, sending her tangled hair flying. The past week providing Gwen with sustenance had clearly had an effect on her thought patterns. It made sense that her dreams would follow suit. Nothing unusual there. Still, she needed to get a grip on herself. One of them needed to keep a level head at least.\n\nGwen had displayed an impressive level self control so far but it was obvious that her thoughts dwelled on sex more and more as her transformation progressed. At first when Amy caught her sneaking glances, Gwen would quickly avert her eyes, or apologize. Now she flirted openly, and didn't seem to realize that she often stared at Amy in a way that made her feel a bit like a piece of meat. Well, she was a meal to be fair. And though she sometimes felt like a lamb trapped with a lion, Gwen had stuck to the rules so far. Perhaps her restraint last night signified that she was more easily able to keep her lust in check.\n\nThey'd planned a trip into the city today, and it was nearly winter, so she picked through her closet and put together an outfit suited for colder weather. At the last minute, an impulse struck her and she replaced the loose blouse she'd selected with a tan turtle-neck sweater that she rarely wore. It had looked so refined on the store mannequin that she'd bought it without thinking, but then of course she'd returned home to find that It clung more tightly than she'd anticipated and drew attention to the rolling curves of her hips and chest. For some reason that didn't bother her today. It looked nice with the outfit, and she'd be wearing a coat anyways.\n\nShe showered, dressed, somehow managed to comb out her hair, and gave her teeth a much needed brushing. She considered putting on makeup, but Gwen had jokingly referred to their planned outing as a date a few days ago and she didn't want to encourage that line of thinking. True, her exposure to Gwen's abilities had made her an increasingly willing participant in their daily...encounters, but she didn't want to blur the line between romance and friendship any more than necessary. She was eager to learn more about Gwen's powers and their effects, and was willing to use herself as a test subject, but she worried she was beginning to lose track of where that line was.\n\nGwen was already awake and waiting for her in the kitchen leaning against the counter reading something on her phone. As Amy entered the living space she set it down. Amy used to be annoyed when Gwen shuffled in for coffee five minutes before they needed to leave, but she realized she'd probably never see that side of Gwen again. Gwen didn't seem to need nutritional sustenance anymore, and had stopped drinking coffee altogether. Her regular feeding seemed to have given her an abundance of energy and she was usually the first one awake now. She felt a bit sad at the thought.\n\n\"I made you coffee. How are you feeling?\"\n\n\"Great, actually.\"\n\n\"Good. I was worried I'd permanently turned you into a zombie.\"\n\nGwen beamed at her, and Amy couldn't help but smile back. Her genuine relief was disarming. Hard to believe the beautiful woman before her was one of the monsters described on James Thompson's unhinged blog. But it was also hard to believe it was Gwen sometimes. She looked so different. Part of it was the clothes. Instead of her usual combination of jeans and a tee shirt, she had been wearing more fashionable, and increasingly more revealing clothing. Today it was another skirt, ruffled and brown, and the same pair of black heeled boots she wore the day before. The skirt was long at least, but the white halter top above it would do little for the cold. Amy recalled her dream the night before. At least Gwen was wearing a bra.\n\nShe didn't really care how Gwen dressed, but it was a worrying sign that Gwen's personality might be changing along with her body. It wasn't like her to fuss over appearance. Maybe succubuses instinctively sought out ways to augment their already captivating bodies? Or maybe she was just overthinking it. She knew Gwen hadn't exactly loved her body before. Perhaps she was just making the best of a bad situation and enjoying her new form. Amy had her own share of body issues, so she could empathize. She moved past Gwen into the kitchen and began searching for her thermos.\n\nShe called back over her shoulder, \"You should bring a jacket. You're going to be freezing.\"\n\n\"I'll be fine.\"\n\n\"You always say that. I'm not going to give you my coat.\"\n\nAmy's usual thermos was dirty so she stood on her toes to rummage around the back of the cabinet. The motion lifted her sweater enough that she felt cool air on the back of her waist. She also felt a tiny spark of pleasure.\n\n\"Gwen!\"\n\n\"What did I do?!\"\n\n\"You know I can feel that right?\"\n\nShe finally felt the brushed steel surface of Gwen's thermos and dragged it out before turning to find Gwen smirking at her. She quickly adjusted her sweater with her other hand. Amy hated letting anyone see her doughy midsection. Why had she worn this stupid thing?\n\n\"Sorry.\" She didn't look sorry.\n\n\"You're going to have a hard time staying in control if you get aroused every time you see an inch of exposed skin. Get yourself together!\"\n\nThe words had come out harsher than she intended. She was taking out her frustrations with her own body on Gwen. Strangely though, she felt another whisper of pleasure as she spoke them.\n\n\"Yes ma'am,\" Gwen mocked.\n\nShe turned to face away and busied herself pouring coffee so Gwen wouldn't see her blush. Did Gwen like it when she yelled at her? What did that mean? Amy wasn't quite as innocent as everyone seemed to think she was, she knew that there were some people who enjoyed being talked down to, but surely Gwen wasn't one of them. Gwen had always been defiant and proud. And the way the website talked about demons she couldn't imagine them being so submissive. She took a sip of coffee and composed herself. She'd add this to her notes and worry about it later.\n\n\"Um, Do you need to...\"\n\nAmy trailed off, letting the implication hang in the air. Gwen hadn't fed last night so she was probably hungry. Gwen looked conflicted as she responded.\n\n\"Actually, I think I'm okay.\"\n\n\"A- Are you sure? You didn't feed at all last night.\"\n\nWhy was she disappointed?\n\n\"You can tell?\" Gwen knitted her brows.\n\n\"Yeah, now that I've gotten used to it, I can feel it when you, uh, feed.\"\n\n\"What does it feel like?\"\n\n\"Like you stick a straw in me and start...\"\n\nShe was about to say sucking, but realized how gross that sounded. It was the most accurate sensation she could think of though. When they kissed she could feel her energy slipping away from her in bursts. Usually in time with the pulsations of the unwanted arousal Gwen instilled in her. She wracked her brain for a metaphor that didn't sound so sexual as she felt her face grow hot. Gwen's brows went up in anticipation.\n\n\"...imbibing.\"\n\nGwen snorthed, and broke out into laughter. Amy joined her. Once they recovered, Gwen's face went serious.\n\n\"It doesn't hurt though, does it?\"\n\n\"No, it was a bit odd at first, but it doesn't bother me now that I'm used to it.\"\n\n\"Good. I don't want to hurt you.\"\n\n\"Wouldn't you be able to tell if you did? With the... connection?\"\n\n\"I don't know. I can sense your pleasure and emotions, especially if they're strong, but I don't think I can feel your pain.\"\n\nInteresting. Pleasure wasn't really an emotion, at least not in the clinical understanding. Odd that she could sense both of them but not pain. Pain was a mental response to stimuli the same way pleasure was, so wouldn't it be more similar than something like sadness or happiness? If she could feel one, why not the other? It would be easy enough to test. Amy glanced around, if she kicked the cabinet would Gwen feel it?\n\n\"Do not hurt yourself to test a theory.\"\n\nGwen was watching her.\n\n\"I thought you couldn't read minds.\"\n\n\"Just yours.\" She smiled.\n\nAmy felt another blip of pleasure that she wasn't confident she could attribute to Gwen. Her continued exposure to Gwen's abilities was definitely having an affect on her thinking. It both scared and excited her. Gwen's phone buzzed against the counter. She picked it up and frowned as she read the message, and began tapping out a response.\n\n\"Something wrong?\"\n\n\"What? No, just Laura being a pain.\" Then tacked on, \"Aqua Eco stuff.\"\n\n\"Do you need to go to campus?\"\n\nAmy glanced at the clock. It was already past nine. She was due to meet James Thompson at two thirty, but she needed to spend a believable amount of time with Gwen before that.\n\n\"No.\" Gwen lowered her phone and looked up. \"She's just being difficult. It can wait until Monday.\"\n\nFor some reason Gwen couldn't stand Laura. Amy had always thought the two of them were similar. They were both confident and driven, and filled with passion for whatever they did. In a way, she admired Laura for the same reason she admired Gwen. Gwen would hate hearing that though.\n\n\"I know you don't like her but you should try to get along. She's not as bad as she seems.\"\n\n\"I'll play nice.\" Gwen's expression was hard to read.\n\n-------------------------------------------------------------\n\nTen minutes later Amy was driving across the Bay Bridge into town listening to the dreamy, distorted tones of whatever shoegaze band had most recently caught Gwen's attention. Amy would have preferred something more upbeat, but Gwen had given her that doe-eyed pout and she'd immediately caved. Between Gwen's new abilities and that stupid, pitiful face, she suspected Gwen would be getting her way more and more often.\n\n\"So I found a bookstore that's known for carrying a lot of old books. I figure we can start there. There's also an occult store downtown that I want to visit.\"\n\n\"Works for me.\"\n\n\"Then I have to run errands, but we can meet back up at the park afterward. It's really beautiful this time of year, I figured we could go for a walk or something.\"\n\nAmy glanced over. Gwen was staring out the window, bobbing her head in time with the music.\n\n\"I feel like you're not paying attention. Don't you want to find out more about what's happening to you?\"\n\nGwen turned to face her.\n\n\"Sure. But so far everything has been utter nonsense. Or at best, it gets a couple things right, but a dozen other things wrong. If demons are real, why haven't we found anything convincing?\"\n\nGwen didn't seem to realize that they actually had found one convincing piece of evidence, but she still had a point. Other than the blog, nothing lined up with the changes enough to be anything more than coincidence.\n\n\"Maybe demons are exceptionally rare? A few of the myths are right. So every now and then someone meets one and records something accurate. The rest is just people telling stories and it all gets mixed together.\"\n\nGwen shrugged. \"I don't know. Your binder already has more information about succubi than anything we've found so far. Maybe that's because someone's been keeping it that way. \"\n\nAmy's heart skipped a beat. How had she not considered that? Gwen was right. There was no way of knowing how many demons existed, but the New Demonic Archive seemed to imply a great many. Even if the claims were exaggerated, there should be some evidence of their existence. If someone, or more likely some group, was censoring it then they had a terrifying level of control over information. Maybe James' claims about demons in the government weren't far from the truth. Amy was closing in on the car in front of her and hit the brakes harder than she meant to.\n\n\"Whoa!\"\n\n\"Sorry... I think you might be right.\"\n\nSince the changes began, Gwen had become even more energetic, and she seemed less focused. Amy knew her grades were slipping, and she didn't seem to care. Her thoughts were always on sex. Amy had assumed she'd given up on their search, but what if she just knew it was fruitless? The archive did mention that demons relied heavily on instinct. If her new abilities magnified her already sharp intuition... She resolved not to underestimate Gwen again.\n\nShould she tell Gwen about the meeting after all? She'd made arrangements in case something went wrong. Given her father James Thompson's address. Gwen thought she was running errands for him so she was sure to ask if anything happened to her. She wanted to trust Gwen, to believe in her, but so far Gwen's transformation had proceeded in line with the blog posts describing succubuses. And many of the posts also contained a litany of warnings about how dangerous demons were. If even half of it was true...\n\nNo, she'd made her decision. She would stick with it. If she learned anything useful, or found some way of changing Gwen back she would share it. Besides, it was for Gwen's safety too. Bringing a fledgling demon to James Thompson's door didn't seem smart for anyone. The man clearly despised them. Still, she hated lying.\n\n\"We can still look. If you want. But we should be careful.\"\n\n\"Agreed.\"\n\n-------------------------------------------------------------\n\nThe bookstore was breathtaking. Two-stories, and covered floor to ceiling with shelves on every wall. Even under the stairs, angled shelves were stuffed with books wherever they fit, and other odds and ends where they didn't. The building was old, and the glass of the tall windows was warped and pocketed with tiny bubbles that speckled the beams of light pouring into the otherwise darkened space. In one corner was a miniature coffee shop. Customers sat on mismatched chairs and sofas scattered throughout the store, reading and sipping coffee. They both stood frozen in the entryway.\n\n\"It's perfect.\"\n\n\"How have we never been here before?\"\n\n\"You're the one with the car, you tell me.\"\n\n\"I'll start upstairs, you start downstairs?\"\n\n\"How come you get the floor with the coffee shop?\"\n\n\"Because I'm the one who drinks coffee.\"\n\nGwen pursed her lips. \"Fair enough.\"\n\nAmy spent approximately ten minutes diligently searching before she discovered an old book about medical practices in the early 1900s and found herself flipping through it on an old armchair, latte in hand. Soon, Gwen joined her. Taking a seat in an adjacent chair with her own stack of books. They were in a nook along the wall that led to the coffee shop, and Amy noticed that many of the customers glanced at Gwen as they passed. A few, mostly the men continued staring until their necks were crained around. Sometimes Gwen would look up from behind her book and meet their eyes, as if she could tell the moment they spotted her. Maybe she could. Amy had a bizarre urge to reach over and lay her hand on Gwen's leg. She didn't act on it.",
        "After a while Gwen got up and stepped into line for coffee. Amy watched her, puzzled. Some guy in front of her wearing a beanie and tight fitting jeans struck up a conversation. Gwen laughed at something he said and cocked her hip, leaning toward him slightly. It was obvious she was flirting. Eventually the man realized he was now the front of the line and reluctantly broke their conversation to order. Afterward he hung around, pretending to put cream in his coffee while Gwen ordered. But when she finished she strolled directly back to Amy without a glance, two cups in hand.\n\n\"Here, I noticed yours was out.\"\n\n\"Thanks. You should be careful, you don't want to lose control.\"\n\n\"What? Oh. I was just talking to him, he's a student at UCSF.\"\n\n\"You were flirting with him.\"\n\n\"Was I?\" Gwen looked surprised, but then broke into a wicked smile. \"Wait. Are you jealous?!\"\n\nWas she?\n\n\"Of course not! I just want to make sure you keep your... urges in check.\"\n\n\"You're jealous. Well you can relax. My urges are sufficiently checked, and besides. That guy can't hold a candle to you.\"\n\nGwen winked at her, and she desperately willed herself not to smile.\n\n\"Okay, sorry. I just want to make sure you stick to the rules.\"\n\n\"I will, don't worry.\"\n\nHad Gwen hesitated? No, she was probably just paranoid. Something about the exchange with the man in line had set her on edge. It was obvious that the continued feeding had instilled her with some kind of attraction toward Gwen. The jealousy surprised her though. Knowing the attraction was artificial apparently didn't make it any easier to resist. It was a troubling thought. She decided to change the subject.\n\n\"I thought you couldn't drink coffee anymore.\"\n\n\"I can, it just doesn't taste good anymore. Same for pretty much everything.\" Gwen took a careful sip and tilted her head to the side. \"Although this tastes better than the last time I tried. Somewhere in the ballpark of good, even.\"\n\n\"You told me you couldn't drink any.\"\n\n\"Did I? I was probably just being dramatic.\" Gwen shrugged.\n\n\"Well I'm trying to understand how demons work, and apparently I may be the only one doing so on the planet. You're the only first hand source of knowledge I have, so in the future try to be specific instead.\"\n\nDespite her frustration at Gwen's negligence, another pleasant tingle ran through her.\n\n\"Yes ma'am.\"\n\n\"And stop saying that.\"\n\nShe returned to her book, and after a while Gwen did the same. Her anger faded, and she spoke without looking up.\n\n\"Maybe it's because you've been feeding.\"\n\n\"What?\"\n\n\"The taste. Clearly you don't need human food for sustenance, but maybe if you're otherwise satiated you can still enjoy the flavor.\"\n\n\"That makes sense.\"\n\n\"Let's test it. See if food tastes better too.\"\n\n\"You're just hungry.\"\n\nGwen knew her too well.\n\nShe bought the book she'd been reading, and Gwen bought three of her own. One was a memoir of an explorer from the colonial era, and the other two seemed like compendiums of famous artwork. Gwen had always liked art, but she was a hopeless artist herself. Amy tried to be encouraging, but when Gwen gave up in sixth grade and vowed never to paint again, she completely understood. Gwen's total came to nearly a hundred dollars. It was surprising to see her spend so much, especially after her recent shopping spree. Usually she was frugal, bordering on miserly. Yet she wouldn't accept help. It frustrated Amy to no end when she offered to pay for things and Gwen vehemently refused. Now though, she spent her money without a second thought. Another sign of her shifting personality?\n\nThe bookstore was fortuitously close to Chinatown, so Amy drove a few blocks, parked on the street and led them past the Dragon Gate and down the winding alleys beyond until they arrived at a tiny run-down shop. Above the door in red, with no English to accompany them, were the characters for dim sum. She'd been dying to try this place. She stepped through the door into the dark interior, and Gwen cautiously followed. Stools sat lined up along a long counter, there were only six. A glass divider behind the counter separated it from a row of trays stacked with dumplings, rolls, and various other dishes. As they entered a bell rang and an elderly woman turned to greet them in cantonese.\n\nGwen turned to her confused as Amy responded in her own broken Cantonese. Despite being a first generation immigrant, her father hadn't bothered to teach her any of his native language. Recently, she'd been trying to learn it on her own, and relished the opportunity to practice. Eating her favorite food was a nice bonus too. They took seats where the woman gestured and Amy began pointing at each of the trays until the woman had filled up two wooden steamers. She shuffled around the counter and set them on the counter in front of them, along with two steaming cups of tea.\n\n\"Time to research.\"\n\nShe slid one of the steamers closer to Gwen, who raised an eyebrow.\n\n\"I hope you plan to eat most of this.\"\n\n\"Oh, I do.\"\n\nThe food was even better than the reviews described. Soup dumplings, or xiaolongbao as she'd recently learned, were always her favorite and these were perfect. They burst as she bit down and the rich flavor of pork and broth filled her mouth. Gwen even ate two of her own dishes before tapping out. Now she leaned an elbow on the counter to prop her head up and watched her as she finished the rest of their food. Amy did her best to carry a conversation with the woman with mixed results. But the woman, who she learned was named Lei Wai Han, seemed happy for the attempt.\n\n\"I have no idea what you were saying but I think you're getting better.\"\n\n\"Ha. I barely knew what I was saying. Thanks though.\"\n\nThey were walking back to the car. She was full, and if she was being honest, a little sleepy. Still, they had more to do before her meeting, so she did her best to perk up and began walking faster.\n\n\"I have no idea how you eat so much and look that good.\"\n\nShe turned to find Gwen watching her salaciously. She became instantly aware of how her opened wool coat had slid lower down her shoulders, opening at the front to frame her chest, and how her brisk pace was causing her hips to sway. Before, Gwen would never have commented. Aside from the fact that she had previously only been attracted to men, Gwen knew she disliked the attention her body often brought. Now she was growing increasingly more bold with her flirtations. Instead of discomfort though, Amy felt a twinge of pride. She pulled her jacket up and buttoned it though.\n\n\"Stop staring.\"\n\n\"Yes ma-\n\nShe gave Gwen a gentle shove before she could finish.\n\nThe occult store turned out to be a total waste of time. It was filled with new age crystals, essential oils, and talismans. All taunting their ability to cure serious medical conditions. Basically all the things that she couldn't stand, being an aspiring doctor. The clerk watched them with narrowed eyes as they browsed and poked fun at the wares. She asked Gwen if she sensed anything that might actually be magic and got an incredulous look back.\n\n\"How the fuck would I know?\"\n\nThey slipped out, and walked toward the nearest BART station. She would take a train, then walk the rest of the distance to her meeting, and arrive with ten minutes to spare. Part of her was eager for the chance to learn something new, but she was also sad to leave Gwen. Their trip hadn't amounted to much in terms of research, but it had been a fun day. Hanging out, exploring the city. Almost like old times. Almost. She could no longer deny that their relationship had changed. Gwen was different. And if she was being honest, so was she.\n\nThe day's events had made it clear that whatever her previous inclinations had been, she was becoming less and less resistant to Gwen's advances, and the unwanted attraction she felt toward Gwen whenever they kissed her had taken up permanent residence. What if, like Gwen, her personality had begun changing? The thought terrified her. An uncharacteristic anger filled her, and she squeezed her hands into fists. Her pace grew faster. Gwen scurried to keep up with her longer strides. What right did Gwen have to play with her mind? To change who she was? How long before she'd been warped enough that she wasn't even Amy anymore. Her sexuality wasn't a dial to be turned to whatever setting most pleased Gwen.\n\nNo, that wasn't fair. Gwen was going through the same thing, wasn't she? Prior to the changes Gwen had no interest in her beyond their platonic friendship, but when the changes began she'd been subjected to the very same unwanted shift in attraction that Amy was blaming her for. They were in the same boat. She came to a halt, and Gwen bumped into her from behind.\n\n\"Ow! Amy what the hell?\n\nShe let out a sigh and felt her anger go with it. Her grip relaxed and she turned to face Gwen.\n\n\"I'm sorry.\"\n\n\"It's fine just, can you walk a little slower? Some of us aren't Amazons. I swear I need to take two steps for each of yours.\"\n\n\"That's not what I meant. Gwen, I- I'm scared of you.\"\n\n\"...Oh.\"\n\n\"I know it's not fair. You can't help what's happening to you, and I know you don't want to hurt me.\"\n\n\"...But?\"\n\n\"But you're changing. Not just physically. Your personality, and your behavior. When all this started you were terrified. Now you seem almost...happy about it.\"\n\nGwen put a hand to her chin, and tilted her head to the side, considering her words. Other pedestrians shot glares as they were forced to step around them. Amy ignored them. Finally Gwen spoke up.\n\n\"To be honest, I've noticed that too. It's like I need to constantly be moving, no time to slow down and think. I guess demons really do operate on instinct. And you're right. The changes don't bother me anymore. They feel right. Like, this is what I was always supposed to be.\"\n\nAmy's stomach sank at Gwen's last words. She opened her mouth but it was dry and she wasn't sure what to say. Luckily Gwen saved her the trouble. She took her hands, held them firmly and looked up at her, face filled with determination.\n\n\"But it's still me, Amy. I look a little different. I'm a little more impulsive. And, admittedly, I'm a lot more horny. But I'm Gwen. I still love reading, and programming, and I still fucking hate calculus. I still have every memory of growing up together. All the sleepovers, all the study sessions, all the late night talks. I still love you. Whatever else changes that won't. I promise I won't hurt you.\"\n\n\"I- I know you don't want to, but what if you can't help it? The feeding is doing something to me. I know you can feel it.\"\n\n\"I can stop feeding then. I've got more control now, I can handle it.\"\n\n\"No, that's not an option. You clearly need sustenance.\"\n\n\"Then I'll cut back. Just once a week?\"\n\nAmy considered. If Gwen could survive on so little energy, and that was a big if, it might work. Whatever happened to her when Gwen fed seemed to fade over time, but with the frequency of their current feeding schedule the effects seemed to be building. It was a tempting offer, but memories of the time Gwen attacked her still loomed in her mind. They couldn't risk another incident. She didn't want to go through that again, and she didn't want anyone else to either.\n\n\"No... I don't think that will work.\"\n\n\"Amy, please don't leave me.\"\n\nGwen was watching her intently. Amy could clearly see how worried she was. Gwen's grip had tightened and she now clung to her hands as if she'd run away the moment she was free. They were ice cold. Amy could see she was shivering too.\n\n\"I'm not going to leave you.\"\n\nAs soon as she said the words she felt her body relax. She hadn't realized how tense she was. This discussion was pointless. She was worrying over another decision she'd already made. The fear was still there, but she'd never forgive herself if she fled from this. Gwen would be lost without her, maybe even become one of the monsters described in the archive. If she stayed she could protect Gwen from herself. Keep her in check. Be the voice of caution and reason that Gwen needed. They'd face this together.\n\n\"I told you to wear a jacket.\"\n\nAmy pulled her hands free, removed her coat and wrapped it around Gwen.\n\n\"You also said you wouldn't give me yours.\"\n\n\"I'm a pushover.\"\n\nThey stared into each other's eyes. Gwen's were a cloudy blue. Maybe it was a trick of the light, but today they seemed darker than usual, almost indigo. Amy was overcome with the urge to kiss her. She knew it was artificial. A symptom of the connection between them, but did that really matter? Only a week ago she'd thought this might be easier if she returned Gwen's affections, and now she did. Artificial or not, it certainly felt real. If she was to be drawn into a sapphic romance by whatever dark magic brought about Gwen's transformation, she might as well enjoy it. Gwen let out a startled gasp as she leaned down and pulled her into a kiss.\n\nSomeone further down the sidewalk whistled, but Amy ignored him. Normally the attention would fill her with embarrassment, but something about her resolution to protect Gwen gave her a newfound sense of strength. Pleasure built as the kiss lingered, partially hers and partially Gwen's. Her hair had fallen forward with the lean, and as she broke the kiss and stood straight she brushed it back to clear her vision. Gwen stared up at her, mouth agape, still standing on her toes. Amy's coat was wrapped around her like an enormous cape.\n\n\"I won't make you go through this alone. Just promise me. If we can find a way to reverse this, and return you to normal, we'll take it.\"\n\nGwen swallowed. There was a long pause before she responded, \"I promise.\"\n\n\"I'll try to meet you back here around six. If it's going to take longer I'll text you.\"\n\nAmy didn't want to go, but the meeting was more important than ever. Until now she'd been treating her observations of Gwen's changes as an experiment, and In the beginning that's all they were. Her actions had been driven entirely by curiosity. She hadn't cared that her best friend had invisible horns and the body of a supermodel. It didn't affect their friendship, and she had the unique opportunity to study something that perhaps no one else ever had. Her motivations had shifted along with Gwen's personality, however. Slowly, as she grew to fear she was losing her friend, she began to harbor hope that she might find a cure.\n\nAnd although she was slowly giving in to Gwen's temptations and being drawn into a romantic relationship, she still wanted things to go back to normal. For some reason the contradiction didn't bother her and she refused to let go of that goal. This was the first time she'd spoken it aloud though. Gwen's self control might be waning, but she had no such excuse. She'd be strong enough for both of them. Before she could rationalize some excuse not to, she turned and marched toward the station. She couldn't resist turning around before she stepped inside though. Gwen stood frozen where she'd left her. She waved, Gwen waved back, and she stepped through the station door in search of answers."
    ],
    "authorname": "Autumn_Ash",
    "tags": [
        "succubus",
        "lesbian",
        "corruption",
        "mind control",
        "demon",
        "submission",
        "transformation"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/a-succubus-awakens-ch-04"
}