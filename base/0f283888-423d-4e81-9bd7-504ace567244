{
    "title": "The Twelve Vitali Ch. 11",
    "pages": [
        "Authors note: Hello everyone. Thank you to everyone who has voted and left comments I appreciate every one of you. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\n\"No,\" Cat laughed. \"It's one thing knowing what I would have to do and a totally different thing agreeing to do it.\" The truth was that she still wasn't sure he was asking her for the right reasons.\n\n\"Why do you have to continually do this to me?\" Matteo complained. \"Just once can't you do what I ask without arguing with me?\"\n\n\"As I remember, I did everything you asked last night,\" she giggled.\n\n\"True, and I would like to get used to that happening all the time,\" he grinned and took her in his arms, kissing her deeply. \"Just say yes, and we can worry about the details later!\"\n\n\"You know that would kill you. You don't do anything without thinking about it from all angles to manage the risk because you are a self-confessed control freak,\" Cat reached up and smoothed his hair back from his face. \"You know I'm right. You need those details in place and secure more than I do. Besides, we still haven't come to a decision about whether it's even possible for me to work remotely from Melbourne.\"\n\n\"You know if you married me you wouldn't have to work,\" he groaned and rolled to his back.\n\n\"How did that argument go for you last time you made it?\" she laughed, swinging her feet from the bed and standing up.\n\nMatteo propped himself up on a pillow and watched her. He loved that she was so comfortable in her own skin. Most women he had been with had always covered up with a robe or a sheet in the morning as if he hadn't already seen and explored their naked body. It had been several days since they had discussed a future together and restarted their relationship without any talk of contracts. In his heart of hearts he knew he loved her, but they were both being careful with the word. He knew he wasn't the only one who had been let down by a mother or past lover, and they had talked in depth about both.\n\nHe had been surprised to find that it was Ned's threats against David that scared her more than anything he had done or would do to her. The fact had startled him so much he had asked her more about the relationship. He had read between the lines, so to speak, and contacted Frankie as well and had been even more surprised to find that his assumptions about her early life, her relationships with both David and Ned, as well as the court case, were not entirely correct.\n\nShe'd grown up virtually motherless, and when her grandmother had died she had to pick up the slack. She had no one to love her and an ungrateful little boy virtually dependant on her from a very young age. When her mother died, and they became homeless, Ned had stepped in, and for the first time in her life someone had wanted to take care of her. He'd always been aggressive and abusive toward her and, similarly, David, who became a surly young man prone to getting into brawls and trouble with the police until he met Frankie, and had not been kind to her.\n\nThrough it all she'd worked hard and been loyally supportive of both David and Ned, who continued to treat her badly until David finally started to get a clue and got a job so he could move in with his football friends in one of Frankie's many houses. Having nowhere else to go herself, Cat had stayed with Ned in an on and off again relationship until she finally tried to break up with him for good.\n\nThe attack wasn't the dreadful rape portrayed in court. She admitted he had done worse to her in the past. She'd said no and meant it, and she'd been hurt by him during the rape, but she only pressed charges because he had threatened David, not because he had ruined her art or forced her into having sex with him again. It wasn't the first time she had said no and he had forced her into a vulnerable position, and she knew it was easier to go along with what he wanted than fight it.\n\nThe whole idea of her acceptance that her life was meant to be that bleak at that time made him feel sick, and he could see how she had assumed Ricco's reticence to be seen with her in public was confirmation of the dreadful things Ned had always told her about being worthless and a whore. The problem was that Roberto and Ricco both had made her see that she didn't have to accept her fate and she had fought against being viewed as being Ricco's dirty little secret. She had no idea how beautiful she was or how talented she was, though that seemed to be changing thanks to her work for Vanessa and Peri. Now he wanted nothing more than to make sure her life was better on all levels and a wonderful adventure they could share together. He smiled as she came back toward him, walking carefully with two full mugs of coffee.\n\n\"Okay, you have my absolute attention for the whole day. What would you like to do first?\" she asked, putting her mug down on the bedside table and leaning down to kiss him.\n\n\"The obvious answer is you, but since I already did that, I'll settle for a shower and breakfast,\" he grinned, rolling her to her back and pinning her arms above her head and kissing her passionately.\n\nShe'd been working hard for the last few days with Roz and Peri, who wanted to make a bigger deal out of the unveiling of the family portrait than Cat was comfortable with. Because of this she had spent quite a lot of time in at the gallery, as well as in her small studio, painting while Matteo was busy with work. They'd talked continuously about everything and anything now, their open and honest communication allowing them to ask what would have otherwise been confronting and unorthodox questions that they may not have asked in a regular relationship that hadn't started with the same unusual intensity. Every day he asked her to marry him, and every day she declined, citing many reasons but holding just one close to her chest.\n\nJust over an hour later she cleaned up the kitchen as he spoke to Ricco on his phone. Cat felt for Ricco. Jacobi and Maryanne were in Europe, and it seemed they might extend their time over there as Jacobi helped his Uncle, who was the family Ambassador. She understood now how much of his life he had been willing to give up for his twin, who seemed to have abandoned him for the time being. Matteo, too, while still in the same country, was busy with his own life, leaving Ricco to pick up the slack in Melbourne.\n\n\"Ready to go?\" he asked as he ended his call.\n\n\"I'm ready. You're the slowpoke,\" she teased. \"It wouldn't hurt to give me a clue about what we're doing today, you know.\"\n\n\"We're going shopping,\" he shrugged. \"It's no big secret or anything.\"\n\n\"Oh,\" Cat said, feeling a little disappointed. He had nagged her about spending the day with him today, and she had thought that perhaps they would be doing something exciting.\n\n\"Are you pouting?\" he asked, raising an eyebrow.\n\n\"No, I just wasn't expecting a shopping trip,\" she admitted.\n\n\"I expect it will not be a usual shopping trip for you, if that helps,\" he chuckled as he went to pay the bill inside. \"Ready to go?\" he asked, holding out his hand to help her up. \"Let's walk, it's a nice day.\"\n\nMatteo smiled as he took her hand to walk downstairs. Despite her tough girl, straight-talking attitude, he was finding that Cat was a romantic at heart. During all of the lovemaking and talking they had been doing since finding their way back to each other, she had divulged the fact that she had read the awful fifty shades trilogy during all the hype around the books and movies and had become quite interested in and curious about the kinky fuckery described in the book. This had been further fed by talking with Pete about the Kept and the type of training they received.\n\nWhile he was quite adept at the BDSM lifestyle and had, as a younger man, frequented the men's clubs that catered to fetishes and the family training facility, he had never had a partner who had expressed an interest in that type of play. If he was honest with himself, he preferred women who challenged him and gave him a sense of satisfaction as he reduced them to quivering messes of pleasurable sensations. He imagined, when faced with the reality of what she was asking, that she may be challenged herself and, in turn, challenge him with a battle of wills. Today he planned to find out just how curious she was in having him exert his truly Dominant side.\n\nIn general, Cat was not an early riser, but with Matteo, who seemed to survive on very little sleep, she had been waking earlier and earlier this week. They walked over the Victoria bridge into the city centre, and he guided her through the early morning bustle of the city centre with people heading to work or breakfast with friends. There were the usual businessmen and women, which wasn't a surprise being Valentine's Day, but also there seemed to be a lot of people milling around holding hands or flowers and gifts. She smiled. Cat had painted something for Matteo that she was going to give him tonight because she had no idea about what to buy him as a gift. Despite how close she felt to him, it was odd to think that she had never seen his house or his possessions to know what he might need or want. They walked through the large shopping precinct, and to her surprise he led her to a spa, its open entrance full of dark wood and tropical plants making it seem oddly out of place amongst the brightly lit shops around it.\n\n\"A spa?\" she quirked an eyebrow at him.\n\n\"Mani-pedis are a guilty pleasure,\" he admitted, \"and we have spoken about the fact that I have particular tastes right from that very first night,\" he smirked. \"You promised me a day where we did what I wanted all day, no arguments, and you have already used your one no option first thing this morning,\" he grinned knowing she would realise he had asked to marry him yet again on purpose.\n\n\"Okayyy,\" she drew out the word, sounding doubtful of what was going to happen here.\n\nTwo hours later she'd been waxed, threaded, given a mini facial and had her make-up applied professionally as well as having a mani-pedi, which he sat beside her for and enjoyed the same pampering. Even fully clothed, Cat felt self-conscious that there was a small heart shaped patch of pubic hair where she had barely ever had to worry about trimming her bikini line, and found her face warming with the hint of a blush whenever she thought about it. Matteo was more than happy about the idea when she had told him.\n\nMatteo seemed to know his way around the funny little alleys and arcades, and they moved through the city until they ended up in a tiny alley arcade hidden behind a large building that seemed to cater to the elite. Designer shoes and clothes and leather goods all nestled together behind large glass storefronts. Matteo knocked on a red door, and a smiling older woman welcomed him warmly.\n\n\"Matteo,\" she purred, quite obviously looking him over. \"Andie told me to expect you this morning, and this must be your friend, Catriona,\" she said as she just as overtly looked Cat up and down. \"I'm Miss Della. Follow me, please. Make sure the door is shut properly behind you.\"\n\n\"Thank you for making time to see us,\" Matteo said, ushering Cat toward the interior and closing the door before following the two women up a narrow flight of stairs.\n\n\"Of course, any friend of Andie's is certainly worth making the time for,\" she laughed. \"Now what did you have in mind for today?\" she spoke directly to Matteo, assuming that he was a dominant and Cat was his submissive and wouldn't get much say in what she wanted.\n\n\"Corsetry, maybe a waist cincher, thigh highs, not garter belts, lace panties, not sensible cotton, and I'd like that in white, possibly blue or silver if you have it,\" Matteo spoke with an air of commanding authority, and Cat blinked at him as her mind took in what he was saying.\n\n\"Materials?\" she asked, still considering the young woman.\n\n\"No latex or plastics, I want soft and accessible. Boning in the corset is fine, but I am not as concerned with the construction materials as the hourglass look and tightness. I'd like to see some demi cups and shelves as well rather than full cups.\"\n\n\"Certainly. Help yourself to coffee or a cool drink and we will start putting a few things together for you,\" she turned and ushered Cat toward the fitting room.\n\n\"My day, my rules,\" Matteo reminded her as she was being taken away and took a seat on a beautiful old chesterfield couch. He wished he had brought his tablet with him, as he preferred that interface when working, but opened his phone and began firing off emails and working, as usual. He knew Hilary was becoming frustrated with his odd hours as he gave Cat all of his attention when he was with her, but he had managed to handle most of the important business and planned to use his time this morning to field the minor issues and enquires.\n\n\"Well, come on, lovely, we can't keep your Mister waiting all day, take all of that off,\" Della waved her hand up and down in front of Cat's body.\n\nCat was stunned, this was not what she had expected at all. Matteo had been attentive and courteous to the point of being annoying with the way he had seemed to be walking on eggshells and give her whatever she wanted over the last few days. Even this morning, when she had said no to his proposal, he had rebuked her in such a way that they had joked about the fact. Since leaving the house, though, he seemed to take on a commanding and almost domineering attitude with her.\n\nThe word caught her as she began to undress. Domineering, dominant, maybe this was in response to her continuing curiosity about the lifestyle and her requests to explore it with him. Was he yet again giving her what she'd asked for and wanted, or was this, as he said, something he wanted on a day designed for his pleasure where she had to play along with all of his plans? She couldn't quite decide on his reasons for bringing her here. She itched to ask him, but the woman, who had introduced herself as Miss Della, seemed determined to get to know each tiny bit of her body as she measured and pinched and stroked Cat in such a way that she had to steady herself.\n\nIt seemed like she had been standing there in her panties for an hour, rather than the ten minutes it was in reality, when Dell handed her a pair of shimmering white thigh high silk stockings to put on. Then Della appeared with a sapphire blue corset and began to manhandle Cat's body to put it in place before doing up the hooks and eyes that ran up the centre at the front below a demi bra. Moving behind Cat, Della pulled at the laces that caught a waist panel inwards and cinched her waist tightly so that her breasts and hips flared widely from the centre. The deeper she breathed, the more her breasts seemed to rise from the tops of the garment, and her nipples showed over the edge of the garment in little pink crescents.\n\nDella looked her over and then disappeared, coming back with a small ribbon of white lace which she used invisible seamstress tape to attach to the top edge of the bra, partially disguising her nipples. The whole blue and white look was a colour scheme Cat liked. Della passed her a pair of white heels and surveyed her again before pushing her out toward Matteo.\n\nMatteo looked up and tried to school his features with difficulty. He listened as Della went through the different parts of the simple outfit. Matteo cleared his throat as Cat modelled the corset by walking toward him and turning, bending forward slightly just out of his reach and walking back to where Della stood.\n\nCat tried teasing him into giving away some sort of reaction as he looked at her with a relaxed expression. Not even an eyebrow rose in response to her teasing attempt at modelling the garment. He nodded once at Della and Cat was ushered back into the dressing room.\n\nMatteo suffered silently through a silver outfit with a half-corset, an ice blue corset, and a full white corset that sat snuggly over her hips and nestled under her breasts leaving them fully exposed as they sat on what Miss Della called a shelf bra. It took great willpower for him not to groan as she walked toward him with her breasts bouncing with each step.\n\n\"I'm afraid our time here is up,\" Matteo said, hating that his voice was quite obviously deep and husky from the experience. \"Cat can wear this white one now in place of the bra she wore here,\" he instructed Della.\n\nCat went back to the dressing room and slipped her dress over the top, feeling awkward about the lack of support for her breasts. Then she emerged from the dressing room running her fingers through her hair.\n\n\"Thank you,\" Matteo said to Miss Della, as Cat finally took a minute to look around the intimate little shop that seemed more like a crowded living room. Matteo smiled as he took Cat's hand and led her back down the staircase.\n\n\"After all that you didn't buy anything aside from what I'm wearing?\" Cat asked.\n\n\"I bought them all, and two of them in different colours,\" he shrugged. \"The driver will pick them up,\" he explained.\n\n\"Oh,\" she said, shaking her head. \"It was hard to tell what you were thinking,\" she looked at him curiously.\n\n\"That was excruciating torture, and you knew exactly what you were doing to me!\" Matteo growled, grabbing her and pushing her up against the wall at the bottom of the stairs. He kissed her deeply, pressing into her so she could feel just how uncomfortable he still was after her modelling of the last braless corset, which she still wore.\n\n\"I might have had a vague idea, but you showed nothing. That was frustrating, especially with the waxing I had to endure this morning,\" she said breathlessly, as he let her up for air again and opened the door to the street.\n\n\"The waxers did an amazing job,\" he grinned. \"I'm more than impressed by the small glimpse I got of their work,\" he chuckled.\n\nIt was just after twelve, and once again she marvelled that he seemed to know the city so well as he guided her through the streets to a restaurant on the river.\n\n*****\n\nCat found that the built-in waist cincher left her a little breathless as she walked beside Matteo trying to keep up with his long strides. She wished he hadn't chosen a dress with such a low neckline, as her breasts seemed to take on a life of their own having little to no support from the corset as she breathed in short panting gasps.\n\n\"Ah, there they are,\" Mateo said, lifting his hand in salute at Pete and a middle-aged woman who sat beside him looking calm and serene.\n\n\"Happy Valentine's Day,\" Pete said, standing to kiss Cat's cheek and shake hands with Matteo. \"We just arrived ourselves. This is Troia,\" he introduced the woman to them, who smiled softly and nodded her head.\n\n\"It's a pleasure to meet you both,\" she said, holding out her hand to Matteo and then to Cat without attempting the usual air kisses on the cheek that happened in greetings within the family, Cat noted. She looked at her curiously, taking note of the unusual accessories she wore and wondering if this was one of the staff Pete basically owned.\n\n\"You both look happy. I assume you have worked out the issues between you?\" Pete chuckled.\n\n\"Apparently I should thank you and Bianca for that,\" Matteo said with a smile. \"A little understanding goes a long way, so I am grateful for your intervention.\" He'd come to terms with the close relationship that had sprung up between Pete and Cat, and knew that, although it wasn't a competition, he had won the girl in the end and had no need to be threatened by it.\n\n\"You're welcome, though I believe Bianca had more influence in your reconciliation than I did,\" Pete admitted. \"I have to admit that, while I am glad to see you both are happy, I would not have minded the alternative,\" he grinned. \"I think teaching Cat about submission could have been a very pleasant experience.\"",
        "\"I'm quite looking forward to it myself, though we have made some pleasing progress,\" Matteo chuckled good-naturedly but felt jealous of the intimacy of the friendship Cat had with Pete at his words.\n\nThe restaurant was such that they sat in a small alcove and had relative privacy from the tables around them. Aside of the occasional waiter, who discreetly approached the table, they were free to discuss anything without fear of being overheard.\n\n\"Troia is my Kept,\" he explained to Cat. \"I thought you might enjoy meeting her after all our conversations. You can ask her anything you like about her role in my life.\"\n\n\"Oh!\" Cat's eyes widened, and she suddenly felt awkward about sitting across the table from a woman who was essentially a paid sex slave. Suddenly the tight choker style necklace and the metal bracelets on her wrists made perfect sense.\n\n\"I'm not embarrassed about it, if that concerns you,\" Troia said quietly in the face of Cat's reaction. \"I'm exactly where I want to be. You can ask me anything. Peter told me you were curious about my role in his life.\"\n\n\"I am, mainly because I don't understand it or your motivation for taking on a role like that,\" Cat said, feeling even more awkward.\n\n\"Let's see, I grew up in a normal house with an indulgent mother who tried to be my friend, and as I went through my rebellious stage I drank too much, tried too many drugs, and most days didn't even know where I was when I woke up. I went from just using to starting to sell drugs and got involved with some pretty bad types and the underbelly of society. A bad shipment came in and a few people I knew and sold to started to overdose. The guilt was so bad I tried to go to the police, but then my mother died, and once you're in that sort of scene you never get to leave,\" she said with a tinge of sadness about that time in her life.\n\n\"That must have been hard. But you did leave, obviously,\" Cat smiled encouragingly.\n\n\"Yeah. A military man offered me the chance to clean up my drug habit and change my life,\" she said. \"I would have died if I'd stayed where I was, so I took the chance, and I haven't regretted it once.\"\n\n\"Military man?\" Cat asked.\n\n\"Yes,\" Troia said with a smile. \"Tall, handsome, and with one of those trustworthy faces, like he would protect me from everything that had gone wrong in my life, and he did. He took me to the rehabilitation facility and showed me a new way of living. I found I liked the rules and restrictions enforced in the program, and when asked if I wanted to stay and undergo further training, once I was clean and healthy, I jumped at the chance.\"\n\n\"Was Pete the first man you agreed to serve?\" Cat asked curiously.\n\n\"No, but he was the first I asked to extend my contract beyond the initial two years,\" she admitted.\n\n\"You asked for the extension, not him?\" Cat was surprised.\n\n\"Sure, it's my life and my choice what I do at the end of each contract. I wanted to stay. He was so young and serious when he was studying. I have always enjoyed his company and making sure he was happy,\" she smiled softly. \"I know it's not very socially accepted anymore, but I like the whole patriarchal society their family embraces. They are good men, good people. They look after the people they care about, and that includes all of the people who work for them.\"\n\n\"Didn't you ever want more?' Cat asked.\n\n\"Sometimes I wondered if I could ever be like my mother and live a perfectly normal life in a perfectly normal house. I'm happy here, however, and even though I know that eventually Pete will commit to someone he loves to start a family and I will retire, I am happy with the choices I have made. I have plans to travel the world and seeing everything when I finally leave him. I know this isn't a forever thing, all Kept do, but we have options and money we can take at any time and leave. No one forces us to stay,\" she grinned. \"Nobody, aside from you and a select few, even know I have a relationship with the Donati family. You could never slip away into anonymity now and do your own thing, whereas I can once he tires of me and I need to retire.\" She laughed lightly as Pete looked over from his muted conversation with Matteo and scowled at her.\n\n\"That's still going to take me some time to understand, but I appreciate you being so honest with me about it,\" Cat said genuinely. They continued to talk quietly throughout the lunch as the men talked about their families and business. Despite seemingly involved with his conversation with Pete, Matteo constantly held her hand or rested his hand on her thigh. Even when using both hands for his cutlery during the lunch his thigh rubbed against hers and his foot occasional curled around hers beneath the table showing her that he was acutely aware of her beside him.\n\nCat hugged the woman as they parted after the lunch and took Matteo's hand again as they walked up the street.\n\n\"Did you get the answers you were looking for?\" he asked.\n\n\"I think I did,\" she smiled, \"Or least a better understanding of why someone might choose a life of servitude. Not just as a Kept, but the staff who give up their personal freedoms to serve the family in other ways.\"\n\n\"I got the answers I wanted too,\" he nodded. \"I don't think I would be happy with Pete supervising your trial. I would prefer someone you weren't emotionally bonded with already.\"\n\n\"You'd have nothing to worry about! You have to know that now!\" she exclaimed.\n\n\"I know it in here,\" he tapped his head. \"I just don't want to share what we have with someone we both love and respect.\"\n\n\"What if you do become the chair?\" she asked quietly, knowing this was always going to be a spectre on the horizon between them.\n\n\"I won't,\" he sighed. \"But if in the unlikely scenario that it does happen, we will cross that bridge when we come to it, and I will trust my brother to be respectful of the relationship we already have.\"\n\n\"You don't trust Pete to be respectful?\" she asked, curious about the fact that he would be jealous of her relationship with Pete.\n\n\"The difference would be that I would be sharing your affections with someone who would want to enhance our relationship and trusting that your feelings for them didn't grow and come between us,\" he tried to explain. \"I don't want to talk about this anymore right now, and you promised me that today I could be in control of everything, including you,\" he smirked and pulled Cat into a tight embrace. \"You have no idea what you do to me!\" Matteo murmured close to her ear. \"Come with me,\" he took her hand and guided her to a waiting car.\n\n*****\n\n\"Where are we going?\" Cat asked again as she stepped onto the private jet.\n\n\"Home,\" Mateo said. \"My day. My rules,\" he forestalled any argument from her.\n\n\"I was only going to say that I have a gift for you back at the apartment,\" she said petulantly.\n\n\"You are the only gift I need today,\" he grinned and led her into the small jet. \"And I want to take you home and share more of who I truly am with you.\"\n\nThe cabin of the plane was more spacious than Cat had thought it would be from the outside. Four recliners sat together with a small table between them, and further into the plane was a conference table and chairs for six. The back of the plane was walled off, but a door allowed access in a similar design as the cockpit at the front of the plane. The interior had been designed for maximum use of space, and she was a little overwhelmed by the luxury of the fittings.\n\n\"Sit,\" he indicated one of the recliners, and she sat while he helped her with her belt. \"Nicer than travelling on a regular airline?\" he asked, cocking an eyebrow at her as he took the seat beside her.\n\n\"I've only ever flown once before, and that was to come up here,\" she continued to look around taking it all in. Matteo took her hand and visibly seemed to relax. As the engines came to life and the plane taxied toward the runway, she turned to him and smiled. \"I guess that sounds strange to someone like you with your own private jet.\"\n\n\"Not at all. Did it scare you?\" he asked.\n\n\"The takeoff and landings are more thrilling than scary. The turbulence I could live without,\" Cat laughed lightly, clutching Matteo's hand as she felt the plane speed up and leave the ground. \"Why are we going home to Melbourne?\"\n\n\"I need to take you home. A few days ago, when we first saw each other again, I told you how I felt. Not that I loved you, or craved you, or needed you, even though all those things are true, but that you terrified me,\" Matteo said honestly looking into Cat's eyes. \"That feeling is why Pete cannot supervise your trial if you agree to marry me. It's why I ask you every day if you will marry me. It's why we are going home.\"\n\nCat considered his words silently for a long time as the plane climbed and levelled out. It seemed so ludicrous that she could love the man beside her after such a short amount of time, but she did. She knew she loved him within the first week of meeting him, such was the intensity of the chemistry and friendship that had immediately sprung up between them on that very first night. Yet he'd never come out and said, \"I love you\". She knew it was silly, but she needed to hear it. She needed to hear his sincerity and love as he said the words before she would agree to marry him and everything that came with it.\n\n\"What are you thinking?\" he asked.\n\n\"I was thinking about the first night we met,\" she smiled crookedly. \"Not the best first impression I ever made.\"\n\n\"You were adorable from the moment you almost fell through the door,\" he chuckled. \"Once the paint came off, though, that adorableness increased to include sexiness, and I was already lost, even though I couldn't admit it.\" He leaned over and kissed her.\n\n\"What are you scared of?\" she whispered breathlessly as he finally drew away from the kiss. \"I don't really terrify you, do I?\"\n\n\"Like I said, you're erratic and unpredictable, I can't risk manage you. You make me feel things I had thought I didn't need and now know I can't live without. Things I didn't want to feel. I missed you from the moment you went out to the Donati property and were out of my reach. You make me feel out of control as if I have no control over my life anymore, and I hate that!\" he admitted. \"I want to fix that, for both of us.\"\n\n\"You think you can fix that by taking me home?\" she asked.\n\n\"That's part of it,\" he admitted. \"The second part is this flight where you can't run and hide from the things neither of us has wanted to discuss in depth, and you can't ask me to leave.\"\n\n\"Such as?\" she tilted her head.\n\n\"The red room of pain you are so curious about. It's a Romanticised fantasy, the reality is pain and pleasure, tears and triumph, as well as the big highs and lows that sort of relationship can bring. It can be wonderful, exhilarating and bring untold pleasure, but it can also be cruel and abusive if both parties aren't totally trusting and honest about their needs. It is not kinky fuckery, as you call it. That makes it sound cute, when the reality is that it is hot, sweaty, excruciating, ecstasy when done right.\"\n\n\"If you were trying to dampen my curiosity, then you failed massively,\" she laughed. \"I was humiliated, degraded and beaten for years in the name of love,\" she said, watching the shock register on his face as she used the words she had avoided when they had talked about her relationship with Ned. \"Ricco was a good lover, he was soft and sweet and romantic, never pushing me and never giving me more than a small moment of pleasure, which left me feeling like something was missing. Then there is you, who can and does push me and takes me to wonderful pleasure filled highs, but I feel like I need more. Not that I want the abuse that Ned rained down on me for years, but somewhere in between with someone who I trust to look after me and make sure I am safe.\" She sighed. \"Sometimes I want more, the pain and harsh use and. . .\" she couldn't bear the look of shock on his face anymore, so she lowered her head, fidgeting with her fingernails.\n\n\"You want more,\" he said into the silence, and watched as she nodded, not looking up at him. He took her chin and turned her face back up to his. \"I told you I would build you a room just like that if that was honestly what you wanted. I just needed to know you didn't have some fantasy built up in your head from books and movies.\"\n\n\"You don't think I'm...\" she searched for the right word. \"A freak?\"\n\n\"I'm happy that you are sure of what you want, honestly. I have been scared of taking advantage of your curiosity and pushing you too far risking losing you again. I still don't want to push you further than you're willing to go, so we are going to talk about needs, wants and limits so we both know where the boundaries are and don't hurt each other,\" Matteo said, removing his seatbelt and standing, holding out his hand to her.\n\nCat stood and took the offered hand, following him to the small conference table. She sat and watched as he went to a locker and took out a file. He took a jug of iced water from the fridge and poured them both a glass before taking his seat.\n\n\"Matt, why are we going back to Melbourne? We could have had this discussion at home?\" she asked.\n\n\"Honestly I was a little surprised you got on the plane without more of an argument. This city is not our home, Cat,\" he said assertively. \"We have a nice little studio apartment, and it has served its purpose, but it's not home. We will both need to visit Brisbane often, and for that we will need to find a bigger better place that can accommodate an office for me and a playroom for us, as well as an art studio and the normal living areas, but even that will not be home. Melbourne will always be home for both of us,\" he explained. \"This is a need for me, not a want that can be negotiated. My father is unwell, and I don't like being away so much lately.\"\n\n\"Is that why you have been asking about me moving back to Melbourne and into your place soon?\" she tilted her head.\n\n\"That's part of it,\" he admitted. \"The bigger part is that I want to come home to you every night. I don't want to be seeing you once every couple of days or on weekends only.\"\n\n\"What about my work?\" she argued for the umpteenth time.\n\n\"We've both agreed that you can do that remotely. It's not hard to come up for a day here and there, and I guarantee the Donatis will travel down, not just for sittings but to shop and go to football games and visit my family,\" he gave her the same answer he had given her each time they had discussed it. \"You just have to accept that fact instead of trying to delay the decision any longer.\"\n\n\"Moving in together is a big step., Maybe if I went back to Melbourne to my house. You know people will talk, and I'm not sure I can deal with any more of the accusations like Trista made yet,\" she finally admitted for the first time why she had been resisting the idea of moving in with him and marrying him. \"We also have to consider Ricco; he must be feeling awful at the moment with both you and Jacobi being out of town.\"\n\n\"That's another reason to return home, for Ricco and the rest of my siblings who need me around. Nobody thinks those accusations were true, not Trista and not Theresa. I promise both Ricco and I have made ourselves clear on the matter,\" Matteo said. In truth he hadn't thought about the reason Trista had been sent away since returning from the Kimberley. \"Besides, do you really want to kick Mick out of the place he calls home now?\"\n\n\"My studio is there,\" she added to her argument.\n\n\"I will build you a studio, my place is huge. You can have any room you like and remodel it totally.\" Matteo changed tack. \"You can hang out with David if you come back to Melbourne full time. He and I are good friends now; he'll come over just to watch football with us. I'll even invite Pete down to keep you company, if that's what it takes.\"\n\n\"I've never even seen your place in the city. I don't suppose we could live at the house on the hill?\" she asked.\n\n\"Only if we knock it down and rebuild it,\" he said honestly.\n\n\"You can't mean that! It doesn't need knocking down, it just needs a little renovation,\" she frowned.\n\n\"I built it when I thought I would marry Nik, and you fell for Ricco there. I don't know that it's the best place for us to be starting our lives together. Do you?\" he grimaced.\n\n\"It's such a lovely house though. Can we talk about renovations and redecoration rather than totally rebuilding?\" she asked. \"I'd love a studio there in the country with the ocean and the horses, though I probably wouldn't get much work done.\"\n\n\"Move back to Melbourne and agree to marry me, just wear the ring like we originally planned. We don't have to set the date straight away. Tell everyone that you're mine and I will let you do whatever you like to that house on the hill. I will even give you an architect and a designer as an engagement present to create whatever you like there, and I promise once it is done we will spend as much time there as we can manage,\" he negotiated with her.\n\n\"I thought we took the contract off the table so we could get to know each other properly!\" Cat exclaimed. \"This is the second time today you have talked about getting engaged like we had originally planned with the contract.\"\n\nHe had told her that he didn't need or want a fake fianc\u00e9 anymore; that the contract was off the table for good. Yet when he had proposed again that morning, he had asked her to return to Melbourne with him and move into his apartment in the city. He'd suggested they still get engaged like they originally planned, despite taking the contract off the table. If she wanted to stay in Brisbane, he wanted a ring on her finger, and it would give him a chance to talk to Roberto about what hoops the Thirteenth Table would make her jump through to be Mrs. Matteo Vitali.\n\n\"The reasons I had for coming up with that plan are still there,\" he admitted. \"Stefano still has a heart condition that worries me, and the older members of the family want to retire. Papa wants to see me settled in my life, and I know I want that now, with you,\" he said and took her hand. \"I know all of the excuses you are going to start making; it's too soon, the expectations on you are huge, and we've already had such a rocky start, we barely know each other, but I can refute them all. I want this, I want you!\"\n\n\"I understand that. And if all the reasons are still there then how would it be different? We need to build on what we started, not go back to square one. We'd be doing it for all the wrong reasons,\" she sighed.\n\n\"We have been honest with each other and talked more about our lives in the last month than I have with my family for the last year. Marry me, and I promise I will make it my mission in life to ensure you never regret saying yes. I don't want the contract or a fake fianc\u00e9, I want the messy emotions and risk of heartache, because I didn't just miss you while you were gone, I needed you. I realised that I had fallen in love with you, and not only wanted a life with you in it but needed you in my life because I love you!\"\n\n\"Okay,\" Cat said casually. Inside butterflies flared to life in her stomach as she heard the words she'd been waiting for. This was the reason she wanted, the only reason she needed to hear from him. She cared about his original reasons for wanting a fake fianc\u00e9 contract, especially now knowing how much he cared about his family and that Stefano was so unwell. None of the other stuff she was worried about would matter in the end, however, if he loved her, because she knew she loved him, truly, madly, deeply.\n\n\"Okay?\" Matteo asked, unsure if she had just agreed to marry him or agreed that he had answers to all of her reservations and was agreeing not to argue with him.\n\n\"Okay, I will marry you, but we don't set a date for at least six months. And...\" Cat took a sip of her drink and looked at him with a soft smile. \"I want a proper proposal with hearts and flowers or some sort of romantic gesture, not just an idea you threw out there as another way to get me to move back to Melbourne and make your family happy. You also have to be reasonable about the ring, I can't wear a rock on my finger, my hands are always covered in paint, so I would probably need to keep it on a chain around my neck. So something small, please, maybe just a simple band. Oh, and I love you too,\" she finally let her smile form into a grin.",
        "Matteo couldn't help his answering smile as he leaned forward to kiss her. He wanted to ask the dumb questions like, \"Are you serious? Why now all of a sudden?\" but he didn't want to tempt the wrong answer. Instead, he lengthened the kiss as his hand moved behind her neck, tangling in her hair and holding her tightly to his mouth.\n\n\"Our plans for this afternoon and tonight do not fit into the hearts and flowers romance basket,\" he chuckled. \"As for the ring, that's my domain, and we can negotiate the chain, but I don't like the idea of you just taking the ring off whenever it suits you.\"\n\n\"I can't wear an expensive ring while I'm painting,\" she said reasonably.\n\n\"I get that, but I want any ring I give you on your finger, not around your neck, so we would need to talk about when, where, and why you would take it off for any reason,\" he said seriously. \"Or I could have a ring tattooed on your finger.\"\n\n\"You wouldn't! I wouldn't, no!\" she exclaimed and laughed lightly, hoping he was joking.\n\n\"I guess that depends on how much you want to wear an engagement ring on a chain,\" he smirked. \"I don't do romantic gestures, as a rule, I've never had to, but for you...\" he pulled out his wallet and opened a small flap, taking out the ring he had fashioned from a beer bottle label the first night they had met. \"It's a little flat, but it might do for now. Catriona Leone, will you marry me?\"\n\nShe laughed happily at the truly romantic gesture of keeping that ring and presenting it to her again. She nodded and held out her hand for him to slide the paper ring onto her finger. The fact that he had kept this small throwaway thing from the first night they met touched her and made her believe that even back then he had felt something more than friendship for her.\n\n\"Why the sudden change of mind?\" Matteo asked, unable to help his curiosity after another long drawn out kiss.\n\n\"You said you loved me, that was all I ever wanted to hear when you proposed,\" she said a little shyly.\n\n\"I've said it before, I'm sure I have,\" he argued somewhat uncertainly, but she only shook her head. \"Catriona Leone, I have fallen madly, deeply, crazily in love with you, and right now I can't imagine being happier about that fact. Maybe if we had taken the family jet instead of mine, perhaps I could be just slightly happier,\" he grinned.\n\n\"Why is that?\" she asked.\n\n\"It has a full master suite,\" he chuckled.\n\n\"There's something to be said for delayed gratification. Why don't you tell me what is in the file instead?\" Cat grinned, knowing that she was just as eager as he was but was better at hiding it, or a least she thought she was until Matteo pulled her out of her chair and lay her back on the table.\n\n\"You continue to test my patience!\" he growled, his hands moving up her thighs and hooking into the sides of the lace panties she wore. \"I think we've established that I'm only human when it comes to you.\" He dragged the lace down her legs and kissed his way back up to her thighs, pushing the dress up higher as he moved. She wriggled, lifting first her hips then her shoulders as his hands reached higher, taking the dress with them and revealing the tight corset she'd been wearing all day.\n\nHis tongue had worked its way between the folds of her pussy, and he was lapping at her in long smooth strokes, making her pant and whimper as she struggled to take a deep enough breath in the restricting garment. Her chest heaved as she finally drew the dress over her head and lay back revelling in the sensations his expert tongue, teeth and lips gave her, while his fingers began to invade her pussy.\n\nEven her gasp as a second finger joined the first within her seemed strained, and she arched her back as she rode the wave building toward her climax. Everything seemed to heighten her arousal, the cool glass of the table, the narrow cabin and curved white ceiling and the almost too tight corset. She came crashing over the edge of pleasure all too soon, her mind reeling with the impact of it as Matteo stood and loomed over her a moment before driving his cock into her hard, fast and deep, making her cry out in pleasure again as her inner muscles gripped him.\n\n\"Mine!\" he growled. \"Say it!\" he slammed into her, making her pay attention to his words.\n\n\"Yours, I'm yours!\" she panted in a high-pitched whimper. \"Yours!\"\n\nHe lifted her legs from his hips and pushed them back, doubling her over and opening her up to his fucking as he thrust into her deeply. Even with Nik he had never felt the need to possess someone the way he felt with Cat. She challenged him in a totally different way, and he didn't need a battleground and bruises to enjoy her surrender to him. He needed the control and power she gave him each time she gave him what he wanted in their everyday lives, and though he hadn't realised it until now, she had always given him that when it came to sex. The realisation drove him harder, and he bent over her, staring into her brilliant blue eyes as she spasmed and shook with a second orgasm that milked his climax from him.\n\nCat felt him collapse over her and shudder as he came. He was already so aggressive and demanding when it came to sex that she couldn't wait to start exploring other kinkier facets of their love life after their small talk when they had first come on board. She kissed his shoulder and neck lightly, letting her hands caress his back as his breathing slowed. He loved her, and she finally let go of the fear that he would suddenly wake up and realise that she wasn't good enough for him or his family. If he loved her she could endure the whispers and innuendo of being a gold-digger, she could even wrap her head around his destiny and try to deal with it in a better more informed way.\n\nMatteo picked her up and carried her to the door at the end of the cabin. She found a small bathroom and he handed her panties to her as she stepped inside to clean up as best she could before he used the small room himself.\n\nThe file had remained closed as the remainder of the two-and-a-half-hour flight was spent talking about their future. The captain announced their decent and Cat froze, her eyes going wide.\n\n\"What's wrong?\" Matteo asked.\n\n\"Just like the first night we were together, this has been a nice fantasy, but we can't make any plans yet. The family is everything to you, and I don't think they will be happy about our engagement, despite what you say. I don't want to buy into the fantasy fully until you've spoken to your fathers and I've met the rest of your family. I won't lie, I still care about Ricco, and I don't want things to be awkward between us forever, but...\"\n\n\"Stop!\" Matteo cut her off. \"You said yes, and we are getting married!\" he asserted, using a low, menacing voice. \"My fathers adore you; they encouraged me to pursue you. Ricco may take some time to get used to the fact that we are getting married, but, like you, he still cares and wants you to be happy. As for everyone else, they will love you because I do, including Trista. That's how my family works.\" Now that he had told her that he loved her and realised that she needed to hear it he said it as often as he could to make sure she believed him.\n\n\"I'd like to talk to Roberto before you tell anyone else that I said yes. Please?\" she said nervously.\n\n\"I'll call him when we land,\" Matteo said easily. \"I will call Peri too, if you like, and tell her we are staying in Melbourne for a day or two so you can speak with him face to face and meet the rest of my siblings.\" He offered, looking at her intently. \"I will have you back before the opening of the art show. There is little for you to do there. Roz is the expert, and I am sure they can manage without you for a day or two.\"\n\n\"I...\" Cat began to argue, but the look in his eyes stopped her. She could see that he wanted her agreement and paused. He was right, she didn't need to be there with Roz, it wasn't like there was much to do while they waited for the framers to complete the work on her sketches and the few canvases that Mick had sent up from her garage studio. She had no urgent reason to start arguing with him over two days. \"Okay,\" she agreed hesitantly. \"I have kept you away from your home and family for over a week already, I understand that you are missing them.\"\n\n\"Thank you,\" he smiled softly, feeling relief flood through him, and drew her into his arms to kiss her. His mind worked over all the knowledge this plane ride had brought him. She'd said yes, even with all of the knowledge she had gained about his family and what saying yes entailed. She'd said yes because he had finally admitted he loved her out loud. He would show her how much he loved her once he got her home, he thought eagerly. A few minutes later they sat in the recliners as the plane landed.\n\n\"This is my driver, valet and friend, Knox,\" Matteo introduced the huge man who waited for them as they alighted from the plane.\n\n\"A pleasure, Miss Leone,\" he nodded his head respectfully at her as he moved past them to gather the bags from the plane.\n\n\"You packed for us?\" Cat asked, wondering when he would have done this.\n\n\"My day, my rules, I have been making plans for almost a week,\" he grinned.\n\n\"You knew I would agree to stay for a couple of nights? She asked.\n\n\"I had hoped I could convince you,\" he pulled her into his arms and kissed her before opening the car door. \"I had quite a lot of plans. Your confessions on the plane have made me rethink,\" he chuckled as he climbed into the car beside her. He turned his phone on and began making the calls he had promised and arranged a dinner with his family for the following night and a meeting with Roberto for Cat. He also called Dante and explained the situation, insisting that Peri phone if she needed anything at all for the gallery before they returned.\n\n*****\n\n\"I'm not going to lie to you, Cat,\" Matteo said as he opened the door to his penthouse apartment. \"Part of me expected you to refuse to fly back to Melbourne with me.\"\n\n\"Your day, your rules,\" she said as she walked into his home for the first time. She took in the champagne pink Roses that stood on the entry table and smiled. \"You seem to have been pretty confident I would come,\" she indicated the flowers.\n\n\"I'm an optimist, and the part of me that worried was drowned out by the part of me that was excited about sharing my home with you. This will be our home in the short term until we decide where we would like to live,\" he turned as a woman appeared in the entryway. \"This is my housekeeper, Lisa,\" Matteo introduced the woman, who nodded her head and smiled slightly.\n\n\"Welcome, Miss Leone. Please let me know if you need anything this afternoon,\" she said in a soft voice and moved away with the bags.\n\n\"Thank you,\" Cat said awkwardly to the woman's retreating back. \"You have a household staff?\" she asked, tilting her head, wondering why this hadn't occurred to her.\n\n\"I'm not totally hopeless around the house, but they do make my life easier,\" he said defensively.\n\n\"I don't know why I was surprised,\" she tried to contain a smile at the thought of him doing his own laundry or washing. The idea seemed ridiculous to her now, and a small giggle escaped her lips. He'd been single for a very long time, but he had said he travelled a lot as well, so it made sense to have people in place as caretakers for his home.\n\n\"You find it amusing that I have a housekeeper?\" he asked, tilting his head.\n\n\"I find it amusing to think of you doing domestic work yourself,\" she admitted and giggled again. \"It makes sense that you have a housekeeper and driver,\" she admitted.\n\n\"They are both intensely loyal to me and have been contracted to me for over ten years,\" he explained. \"They are discreet and totally trustworthy. You can ask either of them for help if you need, there is an intercom system,\" he showed Cat a panel on the wall. \"The apartment is quite large, and if Lisa is not in the kitchen, you can speak to her through this. Knox will usually be with me if I am not home. They live on the floor below this.\"\n\nAs they spoke he had guided her into the apartment, again there were roses in the living room, and she smiled. The apartment was huge, and she was amazed by the vast open plan rooms, his office space and the immense master bedroom and bathroom. There were quite a few guest rooms, which she assumed he would need having such a large family, and a cosy smaller sitting room off the master bedroom suite for privacy while he had guests staying. Matteo pressed a button and blinds lifted to expose a view of the city that she imagined would look magical at night.\n\n\"This is beautiful,\" she whispered, approaching the windows to take in the view properly.\n\n\"You are beautiful,\" Matteo moved behind her, kissing her neck. \"And mine.\"\n\n\"You're so possessive,\" she turned her head to look up at him. \"I agreed to marry you. There is no need to claim me anymore. I love you and will be yours 'til death us do part, once I talk to Roberto.\" She lifted a hand to his cheek and kissed him softly. \n\n\"I'm not telling you so much as reminding myself how lucky I am that you're mine,\" he admitted. \"I didn't think I would ever feel this way. It's very different to anything I have felt before, and I want everything we talked about, with you, but I don't ever want to feel like I am taking advantage of what you have been through, or that I am forcing you into something you are uncomfortable with. So I have to ask again: is it just the romanticised fantasy of submission that you are curious about? If you're not sure, despite what you said on the plane, now is the time to tell me before we celebrate Valentine's Day the way I have planned for us, because your confession on the plane has made me eager to celebrate a little differently tonight.\"\n\n\"That sounds ominous,\" she tilted her head and looked at him curiously. \"I haven't lied to you about anything, not Ned or Ricco or how I feel about you and what I'd like to explore with you,\" Cat reassured him.\n\n\"I'm glad,\" he kissed her neck again. \"So...\" he paused, as there was a discrete knock at the door and Lisa came in with a jug of iced tea and cheese and fruit platter. Without a word, she placed it on the small table and left the room quickly.\n\n\"Iced tea?\" Matteo asked, leading her to a comfortable sofa and picking up the jug to pour them a drink as she nodded. \"Now that I now know the vanilla good girl image you project is just for show, we need to set some ground rules for exploring the things you're curious about before anything escalates tonight.\"\n\nCat turned to give him her full attention after taking in what he was saying.\n\n\"I am experienced as a dominant, and I don't want to push you into anything you are not ready for,\" he explained further. \"Do you understand what limits are? Hard limits, soft limits? Is there anything you know you don't want to do or wouldn't be comfortable with?\" His tone was serious as he tried to convey the gravity of this conversation.\n\n\"I'm not really sure, I've never been given a choice before,\" she said carefully. \"I imagine that Ned didn't have much of a clue what he was doing anyway, and all I have to go on is fiction rather than specific experience, unlike you.\" After talking with Pete, she wasn't surprised that Matteo was experienced in a dominant and submissive type relationship.\n\n\"Today is my rules, my way, and I find it hard to believe after discussing how curious you were on more than one occasion that you would suddenly start acting all innocent with me. I also know that you can and will top from the bottom if I allowed it. So why don't you start again, and be honest with me this time!\" Matteo almost growled, but his voice remained husky and deep, telling of his arousal.\n\nThe truth was that Cat had been fantasising about this. She imagined that Matteo would have the cool, calm confidence and dominance she read about in novels she preferred. Now that she was faced with the reality of surrendering to him willingly, rather than being forced as she was with Ned, she wasn't sure about what she wanted. She swallowed hard, realising where this afternoon and evening was leading.\n\n\"I thought maybe we would find out as we went along. I guess it would be easier for me to tell you what I like rather than what I don't like,\" Cat tried to keep her sudden anxiousness from her voice. \"I haven't done anything I don't like, but, as I said, Ned wasn't a dominant so much as a bully who called me names and liked to push me around.\"\n\n\"There will be no name calling. I want no comparisons made between what we have and your past,\" he said assertively. \"Things may get rough, but if you are ever hurt, beyond what would be considered erotic pain, or if there is accidental bleeding from a scratch or the like, everything stops immediately, and the wound will be dressed. I am not saying that is likely to happen, or that I would intend to hurt you that way, but I want the ground rules clear before we go any further.\"\n\n\"That sounds extremely considerate of you,\" she acknowledged. After being with Ned, she was surprised that this would be one of his rules. Ned would have just denied that he had ever hurt her or that he ever would.\n\n\"That is not considerate, that is being safe and sane. I love you, and I would never want to hurt you beyond painful pleasure,\" Matteo reassured her. \"If that is what you think this is about you are even less experienced than I thought.\" He ran his fingers through his hair as if reassessing if this was a good idea and sighed heavily.\n\n\"I promise I will tell you if I am uncomfortable with anything that happens. I trust you to look after me,\" Cat took his hands in hers and looked into his eyes. \"I want this; really want this, with you.\"\n\n\"Okay, safe words, you must use them. If I find out you aren't, or that you are lying to me at any time during a scene, everything will stop. Do you understand?\" Matteo asked and watched Cat nod. \"If I ask you how you are and you are feeling good, say green. If you are uncomfortable or starting to feel pain, but it is tolerable, say amber to warn me so I can monitor you closely or change what I am doing. If anything becomes intolerable and you need me to stop, you say, shout or yell red and I will cease whatever is happening immediately. Do you understand?\"\n\n\"Yes, I understand,\" she nodded. \"I heard of those safe words before in one of the books I have read.\" She blushed slightly as Matteo raised an eyebrow at the mention of books other than fifty shades, which was the only one she had talked about until now. \"I appreciate that you are explaining everything so clearly to me,\" she said, feeling a little like a fraud in the face of his frustration with her inexperience, despite her asking about this lifestyle since her return from the Gathering.\n\n\"You're welcome,\" he leaned forward and kissed her. \"You trust me?\" he questioned her earlier words.\n\n\"Completely,\" she said, looking him in the eyes and discovering that she did without question. She had known him for such a small amount of time, in reality, but such was the intensity of their first strange weeks together she felt she had known him for months instead.\n\n\"Come with me,\" he took her hand and led her from the small sitting room. The small room he took her to surprised her. His apartment was decorated in a minimalist style that suited a bachelor, but this room took it one step further. The room was white, the walls, the heavy curtains, and the large four post bed that dominated the centre of the room were all stark white in colour, including the linen used. It seemed sterile and oddly impersonal with the few items of furniture being hard and cold in their appearance.\n\n\"I never understood the appeal of a red room when it would take away from all the fun we would be having making your skin that colour,\" he murmured softly in her ear as he moved her toward the bed. It was only then that she saw the gift box wrapped in a white linen paper that had made it blend with the bed in the stark room.",
        "\"Happy Valentine's Day,\" he whispered huskily and moved the box toward her. \"If you choose to open this box, it will be like opening the door to a deeper, more intense relationship. It is a relationship that I want as much as you say you do, and it is not something I think you can close the door on once it is opened. There are no hearts and roses for you in this room, only submission and obedience to me if you choose to open the box.\" He bent his head to kiss her softly and tenderly.\n\n\"If I choose not to open the box?\" she asked softly.\n\n\"I will still love you just as much as I do now, but this room will be repurposed, and we won't explore this side of our relationship. I don't think that I could give up your submission once you have given it to me if you changed your mind later.\"\n\n\"I will give you a few minutes to consider the rules I have laid out and explore the room and all it holds,\" he said seriously, and touched a panel on the wall which popped open. \"Each cupboard has magnetic locks, and you only have to push on the panel to reveal the hidden toys and equipment.\" He closed the door again. \"I'm going to send Lisa and Knox home for the night and will be back in a few minutes. I really want you to be sure about this.\"\n\n\"Matt,\" Cat said in a small voice. She had heard the seriousness of his voice and watched him stiffen as he went to leave the room. \"I won't change my mind, but thank you for giving me the chance to explore and take in everything,\" she put a hand against his cheek and kissed him softly. \"I'll feel more comfortable if Lisa and Knox are not here, thank you for that too.\"\n\n\"I'll be back in a few minutes,\" he gave a tight smile and left the room.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "dominant/submissive",
        "brothers",
        "shopping",
        "family",
        "pleasure and pain",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-11"
}