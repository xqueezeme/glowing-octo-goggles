{
    "title": "Idle Hands Ch. 02",
    "pages": [
        "Dark Reflections\n\nPart Three of The Succubus\n\nOur story so far...\n\nIn \"Idle Hands,\" Althea, first among the succubi, was torn from her body by a foolish mortal. In desperation, she sought refuge in the mind of Rachel Wainwright, a successful attorney. Weakened by the ordeal, Althea knows the only way to return to her own body is to restore her power, which she receives by tapping into the sexual pleasure of others.\n\nWith this in mind she begins a slow seduction of her host, nudging Rachel towards a more sexually adventurous lifestyle. At the end of \"Idle Hands\" she has seduced her intern, Jeremy Edwards, and has also attempted a reconciliation with her former husband, Joshua. Meanwhile, her children find her attitude towards them softening, as Rachel becomes resigned to the fact that Sarah wishes to attend culinary school, while Alex wants to become an actor.\n\nThe story continues in \"The Devil's Playthings.\" In a heroic courtroom scene, Rachel makes an impassioned argument for the future of the earth in a case involving corporate pollution. In a stunning verdict, the polluters are fined an astronomical sum, one third of which will go to Rachel's law firm. She decides to use her bonus to semi-retire from her work as an attorney, instead choosing to do pro bono work as she sees fit.\n\nAt the same time, dark urges are beginning to manifest in Rachel's home. Driven by a compulsion she cannot explain, she makes a full-time job offer to her maid, Maria, with the caveat that she must dress attractively around the house. Maria, for her part, looks on the offer (with a substantial increase in salary and the prospect of a rent-free apartment above Rachel's garage) as the answer to her prayers. When her husband, Joshua, returns home, he finds his daughter, Sarah, strangely flirtatious. The only person who seems immune thus far is Alex.\n\nDuring dinner one night, Rachel and Joshua agree to let the kids pursue their career goals without interference. Sarah will attend culinary school. With the help of his parents' connections, Alex will transfer from his dead-end community college into the theater department at Northwestern University.\n\n\"The Devil's Playthings\" ends with Rachel and Joshua reconciling. Driven by admiration of Josh's artwork, which graphically depicts their love for each other, including the night Alex was conceived, Rachel performs oral sex on him. Later that night, they make love for the first time in months. At the moment of her orgasm, Rachel falls unconscious. When she wakes, she finds herself in a beautiful, pastoral scene, where she is greeted by a gorgeous woman who introduces herself as Althea, a succubus who has been sharing her mind.\n\nRachel does not take the news well.\n\n*****\n\n\"My name is Althea,\" the incredibly lovely woman said. \"I am the firstborn daughter of Lilith, who you may recognize as Adam's first wife. I am one of the succubi, and I have been sharing your body with you for the past several days.\"\n\n\"What? Don't be ridiculous,\" Rachel said. \"Succubi aren't real. And the only person I'm sharing my body with is my husband, not some figment of my imagination.\" In truth, she wasn't quite sure what a succubi was. Or was it succubus? It brought to mind some of the boys she had known in college. The ones who were pasty-faced from never seeing sunlight, and who could speak Elvish and Klingon.\n\nThe gorgeous woman standing in front of her sighed at her outraged tone, and Rachel tried to look away from the distracting motions of her chest. Althea was wearing the kind of outfit which would have most women hauled up on an indecency charge. Nude from the waist up, her legs were covered in a short skirt of almost blinding whiteness, which contrasted with her golden skin. Slit on one side, it allowed a distracting flash of thigh to escape whenever she took a step. Her blonde hair, attractively tousled, fell in a tumbling series of ringlets down her back. Her waist was slim, her arms slender and attractive, and her breasts spectacular, teardrop-shaped wonders that sat high and proud on her chest, the nipples tilted slightly upward. Her eyes were an arresting shade of green, dark as jade, and hinted at wicked, private pleasures. She looked sleepy-eyed and sensual, as if she had just crawled out of her lover's bed.\n\nOr was about to crawl into it.\n\n\"I knew this would be difficult,\" she said. Her voice was resigned. \"It has been centuries since I shared the body of a mortal. And that was always a choice made by us both, not this bastardized joining I was forced into. Listen, Rachel,\" she continued. \"Do you remember the boy who was killed in the traffic accident? Peter Miller?\"\n\nRachel nodded warily. The face of the young man who had died, almost in her arms, several days ago, still haunted her.\n\n\"Well, he was a monster and a fool, but he wasn't an idiot. Somehow he got his hands on an old grimoire, a spellbook. He performed a ritual which he thought would tear me out of my body and into the mind of his would-be girlfriend. So that she would be so horny she would have no choice but to sleep with him.\" She grimaced in disgust. \"As if I would allow myself to be used for something like that!\n\n\"But he got it wrong. My soul was pulled away from my physical form,\" she said, as calmly as if they were discussing a trip to the drugstore. \"But instead of going into that poor girl, I was forced into him.\" She shuddered, her golden skin turning pale and sallow. \"It was horrible. His mind was a festering sewer, filled with hate for women.\n\n\"And then he got hit by a bus. I have never been so near death. If he had died while I was trapped in his mind, I would have perished as well. I was lucky. I was very, very lucky that you came along, my child. When you took that boy's hand, I had just enough power to transfer my soul to your mind.\" Her lips quirked with dark humor. \"It was like an exorcism, but in reverse.\n\n\"But I can't stay here forever,\" she said. \"Mortals are not meant to contain the consciousness of a succubus. Their bodies...change. So I started to work to regain my power, so I could move back into my own form.\n\n\"To do that, I had to give you a few hints, nudge you in the direction I wanted you to go. I will not apologize for my actions,\" she said bluntly. \"And I think, on the whole, I have not done you any harm.\"\n\n\"Direction?\" said Rachel blankly, her mind whirling. \"What direction?\" She thought of the whispering voice she had heard in her mind over the last several days. The voice that was always urging her to let go, to relax, to savor the joys of the flesh.\n\nThe voice that was eerily similar to Althea's own.\n\n\"Succubi get their strength, their physical and mental powers, from sexual pleasure. Preferably that of others, although our own will do in a pinch. A lover, or someone who we are in close contact with. A friend. A neighbor. The closer the bond, the more power we receive. An orgasm, a climax, is as sustaining to us as a good meal is for you.\" Her eyes closed and a ripple of remembered pleasure coursed down her body, making the flesh quiver enticingly. \"So I spoke to you silently, tried to remove a few of your inhibitions.\" Her face was sympathetic. \"Took away those things which were making you so terribly unhappy. \n\n\"Tell me, Rachel,\" she said in response to her shell-shocked silence. \"If someone had suggested, two weeks ago, that you would screw your intern as a farewell gift, would that have seemed in any way plausible? Would you have offered your maid a full-time job, but only on the condition that she dress in such a way as to sexually excite you? Would you have kissed her in the middle of your house, where your children could walk in at any time?\n\n\"Would you have attempted a reconciliation with Josh, a man who has driven you to screaming rages in the past due to his refusal to conform in his art and his life? Would you have allowed Alex and Sarah to choose their own careers, or would you have kept to your rigid insistence they follow the paths you laid out for them, regardless of their happiness?\"\n\nRachel blinked slowly. When taken in a lump like that, Althea's story was frighteningly credible. Her knees began to shake. She covered her face with her hands, horrified.\n\n\"You're...in my head?\" she whispered. \"So where are we now?\"\n\nAlthea smiled and shrugged. \"Just a little home I've made for myself here,\" she said. \"It was disturbing to float around in your mind, completely disembodied. I needed a template to work from. Don't worry. It didn't take more than a few hundred million of your neurons. You weren't using them anyway.\"\n\nRachel fell to a heap on the grass, her legs suddenly strengthless. Uncontrollable shivers racked her body. She wanted to scream her terror aloud, but she couldn't draw a breath deep enough to give voice to her fear.\n\nBefore she could collapse into a puddle of full-fledged hysteria, a pair of warm arms come around her from behind, as gently comforting as a mother's embrace. Lips brushed her cheek, and a soft voice murmured into her ear. \"Shhhh, lovely Rachel. I will never hurt you. I would sooner cut off my own tits than allow you to come to harm. I have claimed you as my handmaiden, and when I have retaken my own body, thou wilt be my first disciple.\"\n\nRachel swallowed, forcing back her tears, then turned in Althea's arms. It seemed she had to accept this incredible story, as outrageous as it seemed. Not for the first time, she was grateful to her law-school mentors, who had taught her that when working on a lawsuit, the only things that mattered were the facts. \"All right,\" she said, \"When you have eliminated the impossible, whatever remains, however improbable, must be the truth.\"\n\nAlthea smiled like a sunrise. \"Sherlock Holmes,\" she said, recognizing the quote.\n\n\"So what are you? You say you get power from sex? How old are you? Where do you come from?\"\n\nAlthea smiled and leaned against a rock which conveniently appeared behind her, stretching her long legs on the sun-warmed grass. \"That's a long story.\"\n\n\"We've got all night,\" Rachel pointed out. She frowned. \"I am asleep, right?\"\n\nAlthea nodded. \"Dreaming. But a true dream. That last session you had with Josh allowed me to siphon off a lot of power.\" She grinned lasciviously, and Rachel blushed. \"I can speak to you this way now. Before, I was only able to whisper to your waking mind. After tonight, we will be able to talk here any time you wish.\"\n\n\"Well, let's not do it when I'm driving, okay?\" Rachel smiled. \"Talking on a cell phone is bad enough. I'd hate to pile up my car and have to tell the cops I was talking with the sexy lady in my head.\"\n\nAlthea laughed, then smiled at the compliment. \"So you want to know about the succubi,\" she said. \"How much do you know about the Christian creation myth?\"\n\n\"What, like Adam and Eve and the Garden of Eden?\" Rachel asked.\n\nAlthea nodded. \"Exactly. Adam and Eve is what got put into the Bible and the Talmud and all the other religious literature. But there is a hidden truth that the Christian and Jewish hierarchy did not want people to know.\n\n\"Where the Christian God always fails is when he tries to take away the free will of his creations. It happened before the Garden. It happened in the Garden. And it happened for hundreds of years while he constantly fucked around with his 'chosen people.'\" Her lips twitched in a small, mirthless smile. \"Sometimes I think the entire crucifiction and resurrection was his way of giving up on humanity.\"\n\nRachel blinked, completely confused. \"I don't understand.\"\n\nAlthea nodded. \"I'm sorry. I got a little carried away.\" She took a deep breath. \"My mother was Lilith, who was the first wife of Adam. God created them out of the same clay, breathed the same breath of life into their lungs. Then he ordered Lilith to submit to Adam. To take his orders. To be his inferior.\" Her eyes filled with fierce pride. \"She refused. For that, she was cast out of the Garden.\"\n\n\"So she died, right? With no one else there. No, that doesn't make any sense,\" Rachel said. She frowned. \"You said you're her daughter. How can you be, when there were no other men besides Adam? Did Lilith wait until some of Adam's sons grew up?\"\n\nAlthea nodded, though not in agreement. \"You're quick, child. I'll give you that. But I have to correct one thing. There were lots of other men around.\"\n\n\"But...\"\n\n\"But Adam was the first man, right? According to Christian and Jewish myth, sure. But all the myths are true. Not just the Christian one. I can't explain it,\" she said to Rachel's confused look. \"You just have to accept it. Christian myth is true. But so is the Norse myth of Ask and Embla, the first man and first woman, who were created from a pair of trees. And so is the Greek myth of how Prometheus shaped men and women out of mud, and Athena breathed life into them. And the Hindu myths. And the myths of the First Peoples of the Americas.\" She held out her hands, her fingers spread wide. \"It's like a river, where many tributaries combine to form one stream. There may be some ultimate truth behind all of them. I don't know. What I do know is that the world was created and mankind made flesh. So my mother had plenty of company when she was cast out of the Garden.\"\n\n\"And your father?\"\n\n\"Not human,\" she said, seeming just a tiny bit proud of that fact. \"If he had been, I would have been dust thousands of years ago.\n\n\"Have you ever heard of the War in Heaven?\" \n\nRachel shook her head numbly.\n\n\"It happened among the angels, whom God had created. There were some who had little love for mankind. They rebelled against God, seeking to overthrow him. To take the stewardship of his creation for themselves. They wanted men to be their slaves. Or worse.\n\n\"They lost. And the punishment for their rebellion was terrible. They were cast into Hell and we now know them as demons.\"\n\n\"So one of those...evil angels was your father?\" Rachel shrank away in fear.\n\n\"No. Never.\" Althea clenched her fists. \"The Forsaken are my enemies. I have fought them and their children for years beyond count. They escape, you know, from time to time. Some of history's worst monsters have been demon-spawn. They walk among us even now, spreading anger and hate, committing terrible crimes against humanity.\n\n\"No,\" she said again, calming herself. \"My father was a different sort. When the War in Heaven came, there were angels who fought against God. And there were those, of course, who fought at his side.\n\n\"And there were,\" she said sadly, \"those who stood by, who did not choose. Who would not rebel against God, but who felt he had erred when he tried to take away mankind's ability to make his own mistakes. My father was one of them. They were not cast into Hell, but banished to earth. My father's name was Imriel. He was an angel. When my mother was cast out of paradise, it was the Fallen that took her in. She met my father and they loved each other beyond all measure. I am their first child.\n\n\"They had others, brothers and sisters like me. And in those times, when angels still walked the earth, there were others who mingled their blood with humans. We who are their children bear the taint of their immortality. For God decreed that we were to be set apart. We are cursed, or blessed, with the cravings of the flesh, as my father desired my mother. Our need for humans, for sex, is bone-deep and ineradicable. And we were given a great task. As our fathers and mothers would not take up arms against the demons of Hell, it is given to us to fight them whenever they or their accursed children should appear on earth. If we do not, our souls will be cast down with them, if by accident or mischance our earthly bodies should perish.\n\n\"We are effectively immortal. Age does not touch us. Sickness leaves no trace. But we are a sterile race. We cannot bear children. Not when we mate with each other. Nor with humans.\"\n\n\"I'm sorry,\" Rachel said. Althea's story had touched her deeply. \"What happened to them, to your parents?\"\n\n\"My mother died,\" Althea said simply. In her eyes was the reflection of an ancient grief. \"She was human. And not even my father Imriel's power could increase the span of her years. When she left us my father chose to follow her. They knew, of course, that God's heaven was closed to them forever. But they each hoped there was a place beyond where they could meet again.\"\n\n*****\n\n\"So you're in my head,\" Rachel said, after a long silence. \"And you want to get out.\"\n\nAlthea nodded. \"It's very nice in here.\" Her lips quirked. \"But I've had my body for a long time. I'm starting to miss it.\"\n\n\"And to do that you need power, which you get through sex.\"\n\n\"Sex, orgasms, any kind of sexual pleasure, really. Though intercourse is obviously the most intense. You and Jeremy helped a little. You and Joshua helped a lot, as your bond is so much deeper. And I am trying to cast my net fairly wide. Which is why I am so happy Maria agreed to move in. She is one sweet piece of ass, Rachel. I can't wait to see which one of you she trips first.\" She sighed happily, and Rachel watched in fascination as her nipples peaked. Swollen with desire, they hardened into thick nubbins on her chest.\n\n\"Which reminds me,\" she said. \"You should be careful about who you...exchange fluids with in the future. I told you earlier having a succubus in your mind causes changes in your body. This is an example. Saliva, blood, the wetness in our vaginas when we become aroused, even tears. They all have aphrodisiacal properties. You will find that your partners will be somewhat...lustier than they were before.\"\n\nRachel rocked back, her mind reeling. \"What? Aphrodisiacal qualities?\" A series of horrifying images crossed her thoughts:\n\nHer finger, recently bathed in her female juices, brushing across Sarah's innocent lips last Thursday.\n\nScrewing in her office with Jeremy Friday afternoon.\n\nMaria moaning into her mouth, their tongues entwined, on Wednesday.\n\nA loving kiss on Alex's cheek, earlier that evening.\n\nMake-up sex with Josh, just a few hours ago.\n\n\"We call it our nectar,\" she heard Rachel saying. \"Or ambrosia.\"\n\n\"No,\" she moaned, holding her head in her hands. \"What have I done? Will they all become like me? Driven by urges they can't control?\"\n\nAlthea huffed impatiently and stretched her hands above her head, showing off her magnificent breasts. The sound was eerily like that of her mother when she was aggravated with her as a child. \"Urges you can't control? Or just don't want to? Get a grip on yourself, Rachel. Tell me. Is a hammer evil?\"\n\n\"A hammer? No. It's just...a hammer. A tool.\"\n\n\"And so are the powers I possess and will wield through you, until you can stuff me back into my own body. Among those powers is my nectar. It is not good. It is not evil. It simply is. A hammer can help build a house or it can cave in a man's skull. The good or evil rests within the hand that uses it and the mind which gives it action.\"\n\n\"But know this. I have never used my power to harm a human. I have never taken an unwilling lover. I have never raped anyone, man or woman. Every single person who has come to my bed has done so of their own free will. I would have slain that bastard Peter with the power of my own mind before I let him use me to rape that girl. And I know you. You would no more use that power for evil than I would.\"\n\n\"But...what we did the other day with Maria. When we...when I...\"\n\n\"When you kissed her? When you opened your lips and let your tongue explore her sweet mouth?\" Althea grinned lecherously.\n\nShe pressed her lips tightly together. \"If you want to be crude about it, yes. When I did, it was like she lost control of herself. I don't want to make someone do what they don't want to do. I don't want them to be mindless slaves.\"\n\n\"Haven't you been listening?\" Althea said. For the first time, she sounded irritated. \"That is not how this works. The changes made to your secretions...they do not take away free will. They enhance it. It allows those we love to act on their desires without being shackled by thousands of years of outmoded morality, passed down from the Almighty to Iron Age barbarians. When you touched beautiful Maria, I was able to catch a glimpse of her mind. That's a woman with one hell of a sex drive, Rachel. And a goodly portion of it was focused on you and your family. But it was all bound and gagged with years of inhibitions. First, her church, which taught her making love outside of marriage was a sin. Second, her church again, which taught her that homosexual relationships are also a sin. Then there was her employer, who ordered her to avoid personal relationships with her clients. And then there are the issues she had with approaching someone so much higher than herself on the economic scale.\" Her voice grew disgusted. \"She knows what happens when attractive young women aren't careful around rich, powerful people.",
        "\"But when we touched her, kissed her, it took away those inhibitions. Maria was able to make her choice based only on her own will and her attraction to you. No fear of eternal damnation. No worrying about bullshit corporate policies put in place to protect the stockholders. No apprehension that you were going to take advantage of her.\" She sneered. \"As if someone could rape Maria Ochoa! I'd like to see them try. They'd end up with a vacuum attachment shoved up their ass!\n\n\"Maria kissed you because she wanted you. She has for a long time, ever since she was assigned your house. She wants all of you, actually,\" Althea mused pensively. \"You might consider pointing her Alex's way, if you're so worried about ethical considerations.\" Althea made the phrase sound foreign and slightly distasteful, like a dish at an ethnic restaurant she did not intend to try. \"They'd both be grateful. Alex needs a woman in his bed. And Maria is exactly the kind of woman who could make him happy for years to come. She is a true submissive. Did you see how hot it made her when you gave her orders? By the flaming pits of the Netherhells, she was ready to lie down and let you take her right there. Or even better, have you order her to please you.\"\n\n\"The same holds true for everyone else you're concerned about. Jeremy might have an extra dose of horniness when you see him on Sunday. But he will make his own choices. And so will you. He screwed you in the office because he wanted you. Not because you took over his mind. Your husband...he never stopped wanting you, Rachel. It was your stubbornness about the children and his art that drove him away, not any lack of compatibility in the bedroom. You know that.\"\n\n\"And Sarah?\" She paused pensively, her glorious eyes focused on something Rachel couldn't see. \"To be honest, I don't know. I don't think she will be drawn towards you. She is even more boringly heterosexual than you were when I first entered you. But she might find her sex drive ramping up. But by Moloch's Red Balls, who can tell with children her age? They're all sex-crazed nymphos.\" She grinned. \"That's why I like them so much!\"\n\nRachel frowned. The fact that Maria and Jeremy and the kids weren't going to turn into her slaves was a relief. As was the fact that even a being as obviously sex-focused as Althea had a moral center, even if that center seemed to be no more than Thou shalt not hurt anyone you don't have to and Thou shalt not fuck an unwilling partner.\n\n\"That's pretty much all it is,\" Althea said cheerfully. \"But I don't take stuff that isn't mine, either. Most people are happy to give it to me anyway.\" She smiled at Rachel's expression. \"Hello? I'm in your head, remember? I know what you're thinking.\" Her smile grew dark, deep, and wicked. \"And such naughty thoughts you're having, Rachel. Jealous of Maria when I suggest setting her up with Alex? Who are you thinking should be in his bed, if not her?\"\n\nShe patted her cheek. \"Don't worry, I'm not judging you.\" Her look drew inward and she rose from her seat on the grass, her body inhumanly graceful. \"But we're running out of time. It's almost morning. And holding together this illusion for you is a drain on my power. I need you to do something for me, my handmaiden.\"\n\nRachel sighed and stood. \"What is it?\"\n\n\"My body is missing. I need you to find it.\n\n\"Now, Rachel, go with my blessing.\" Stooping, she laid a gentle kiss on her brow. Rachel's skin burned at her touch. \"And wake up.\"\n\n*****\n\nWith a start, Rachel opened her eyes. She was lying on her back . The covers had been pulled down to lie in a crumpled heap at the foot of the bed. Morning sunlight poured through the open windows, and the cotton curtains swayed in a soft spring breeze. More importantly, her husband was kissing her breasts. Looking through slitted eyelids, she could see the top of his head as he worshiped her nipples. From the warm feeling in her chest and groin, he had been arousing her for some time.\n\n\"Well, this is a wonderful way to wake up,\" she murmured softly. She smiled down at her long-time lover and best friend. \"Looking for someplace to hide your morning wood?\" she teased.\n\nJosh raised himself on his arms, moving forward so he could give her a good-morning kiss. \"Amazing thing, the male body,\" he said, when their lips parted. \"No matter how many times you make love to a beautiful woman, it can't wait to do it again.\"\n\nShe smiled at the compliment, looping her arms around his neck and drawing him down for another long, leisurely kiss. How long had it been since they had spent a lazy morning in bed? Years, perhaps. For the first time in far too long, there were no urgent needs driving her. No cases to prepare for, no witnesses to depose, no briefs to write and file. If she and Josh wished, they could spend all day in bed.\n\n~Ooh, that sounds nice. Yes, let's do that.~ Althea said.\n\nBe quiet, you, Rachel said. Can't you leave me alone for a while?\n\n~Actually, no. I can't. That's kind of the point of this whole exercise, isn't it? And just remember, the more you make love to Joshua, the quicker you will have the mental privacy you desire. Until then, get used to having company.~\n\nShe smiled, disguising her silent conversation. Althea might be inhumanly beautiful and insufferably arrogant, but she found she was growing fond of her nonetheless. She pulled Josh down to her, delighting in the feel of him as his weight pushed her deeper into the mattress. His muscled chest was warm against her breasts, and she nibbled his neck and ears, making him shiver delightfully. She giggled into his sandy hair, enjoying the way a simple breath in the right spot could turn him into putty in her hands.\n\nShe dragged her nails up his back, tickling him, watching through hooded lids as his back arched under her touch. God, I've missed this. The feeling of power, even when he's on top of me, seemingly in control.\n\n~Being a woman is wonderful, is it not? At least, when you control your own destiny. This is why my mother spurned Adam and God. She would not allow herself to become subordinate. A tool to be used.~\n\nLess philosophy, more fucking, Rachel groaned silently. She reached between her legs, finding Joshua's jutting cock hard and ready for her. She curled her hands around it lovingly, stroking it softly. Her questing fingers found the tip slicked with his juice. She spread it around the bulbous head, opening her mouth as Josh devoured hers in a ravenous kiss. He had always loved it when she played with him, and she was happy to find her skills had not deserted her.\n\nBut the slick dampness on her fingers reminded her of her recently-completed conversation with Althea. Tell me, she asked, is this thing with our secretions...catching? If Jeremy makes love to another woman, would she be affected?\n\n~What, are you worried about mankind catching a case of universal horniness, as if it were some sort of awesome venereal disease?~ Althea's voice was teasing. ~Fortunately, no. It would have happened way before now. We are a lusty bunch, although there aren't many of us. You don't have to be worried about being Patient Zero in the great Sex Plague of 2016.~\n\n\"Oh, good,\" Rachel sighed, answering Althea and giving voice to her pleasure as Josh dropped his head to her breasts once more. His hot mouth sucked and licked her aching buds, his tongue flicking over the sensitive tips until she thought she would go crazy. \"So good.\" She pulled at his cock, wanting, needing to be filled. To have that exquisite sense of completion when two beings merged into a greater whole.\n\nAs his head nudged apart the gates to her portal, he paused, holding steady while she shifted impatiently beneath him. \"Is this safe?\" he asked. His eyes, when they met hers, were adorably worried. \"We had one kid without planning for it. I'm not sure if we should do that again.\"\n\n\"I'm still on birth control,\" she replied. \"Although,\" she said, her voice low and vibrant, \"if you want us to have another baby, I might be willing to consider it.\" The thought inexplicably excited her, and in that moment she was ready, no, eager, to be impregnated. To feel the heavy weight of life in her belly once more.\n\n\"We can talk about it later,\" she said. \"Come on, baby, fill me up\" She pulled his head down to hers, sighing as he slipped into her, inch by hot delicious inch. She raised her knees, holding him lovingly in the cradle of her thighs, and a thread of melody ran through her head. As Josh buried his lips in her hair and slowly pumped in and out, she softly began to sing in time with his thrusts, her husky contralto wavering with pleasure, but keeping the melody true:\n\n\"You fill up my senses\n\nLike a night in a forest\n\nLike the mountains in springtime\n\nLike a walk in the rain\n\nLike a storm in the desert\n\nLike a sleepy blue ocean\n\nYou fill up my senses\n\nCome fill me again.\"\n\nThe words of their wedding dance rang through the room, filled with gentle power. By the end, Josh was hovering above her, his eyes locked on hers, his own firm tenor harmonizing with her. He blinked as the final words sounded, and Rachel was astonished to see tears trickling down his cheeks. He bent to kiss her, and there was so much tenderness in the gesture she thought her heart would explode with joy. Her memory went back to that Saturday afternoon, almost twenty-two years ago; the hot banquet hall, the way her dress had dragged on her swelling stomach, the strained smiles on her parents' faces. Then she thought of how her husband had gently guided her around the dance floor, making her feel beautiful and beloved, despite the pregnancy and the heat and her parents' obvious disapproval.\n\nHe filled her, made her whole. He was a safe port in a storm, the one person who she trusted unconditionally, despite her failed efforts to drive him away. \"Now, Josh. Do it now. Come for me, baby.\"\n\n\"Might be a minute or two yet,\" he said with a twinkle. \"We're not machines, you know. We don't come on demand.\"\n\n\"Oh no?\" She said. Her voice was unsteady, her body beginning to lose control as her climax neared. She concentrated on the muscles of her vagina, gripping his cock, pulling at it on every downstroke, increasing the sensation on his plunging rod. She wrapped her legs around him, her heels digging into the flesh of his buttocks, pulling him in deeper with every thrust.\n\n\"Almost there,\" he whispered. His cheek brushed hers, and she turned her head to kiss him. His breath came short and hot and panting into her mouth, and she felt the very moment when he came. A short, trembling pause, then a burning flood inside her, hot thick liquid pouring into her innermost core. The feeling triggered her own orgasm, and she wrapped her arms and legs around her lover as she shook in ecstatic release, needing to feel every inch of him on her own skin.\n\nAnd with it, a new sensation entirely. It was like the slap of cold rain on a hot day, like the scent of flowers in winter, like the flight of a hawk in the spring sky. It was pure, simple, and completely unexpected.\n\n~Yes, child. That is a little bit of what it is like for me. That is what I yearn for. The power of pleasure. It fills me, sustains me. It is what I hunger for above all else.~\n\nIt was good, Rachel said, smiling down at the face of her husband, lying sprawled in her arms, looking inordinately pleased with himself.\n\n~Yes, it was.~ Althea's voice was wistful and sad.\n\nHave you done something to me? Rachel asked hesitantly, mindful of Althea's pain at being excluded from the joy of sex. Usually, when a man comes, I don't feel much inside. At least, I didn't use to. Just a warm tickle. Now, though, it's as if I can feel everything. His hot come just flowing into me. She shivered happily at the memory.\n\n~Possibly.~ Althea mused. ~It's true that my sisters and I feel...more...down there than humans do. Take it as a gift.~\n\nOh, I intend to. Rachel grinned. \"Come on, lover boy,\" she said to Joshua, slapping his butt playfully. \"It's time for breakfast.\"\n\n\"Oh, do we have to?\" he said in a mock whine. \"I'd rather stay up here.\" His hand curled around one of her buttocks, giving it a firm squeeze.\n\n\"Yes, we do,\" she said. \"Maria's moving in today, and you and I are going to help her. Sarah, too, if we can figure out what has her so pissy where Maria is concerned.\" She felt Josh shift uncomfortably, and a trickle of amusement from Althea. \"Alex is going to be at rehearsal all afternoon, so he won't be able to help.\"\n\n\"Oh, all right,\" he groused. He got up and went into the bathroom. In a few moments she heard the shower starting. She lay for a while in bed, savoring the aftermath of her orgasm and the power Althea had gained. She felt revitalized, electric. She rubbed her thumb across her fingers, faintly surprised the motion didn't cause sparks to leap from her fingertips.\n\n~Up, child. You have a big day today.~\n\nRachel sprang out of bed, smiling.\n\n*****\n\nMaria arrived in the early afternoon with a pair of male cousins in tow and a rattling truck filled with her worldly goods.\n\n\"Is this all you have?\" Rachel asked, a little worriedly, as she dropped a box of paperback books to the floor. Maria's furniture seemed to consist wholly of a bed frame with mattress and box-spring, a small table with collapsible leaves, two wooden chairs, and a small loveseat and easy-chair set. It had been the work of less than an hour to move it all into apartment over the garage.\n\nMaria shrugged. \"I was sharing an apartment with three other girls,\" she said. \"We didn't have much room. Most of this was in storage. When I have more money I will buy better things.\" She looked around the apartment. It was one large room, with no interior walls, dusty with disuse. But there were separate areas for cooking and sleeping, and a small nook where there was a bathroom and shower.\n\n\"Yes,\" she said, a smile showing a flash of white teeth in her dark face. \"This will do very well. Thank you for your help, Mr. Sunderman. And yours, Mistress.\" Her brown eyes shared their secret.\n\nA quiver of desire passed through Rachel, remembering her promise of a few days ago.\n\n\"Someday soon, I am going to kiss your beautiful breasts and finger your hot pussy until you beg me to make you come. And you will do the same for me.\"\n\n\"That's the last of it,\" said Sarah, coming in with a box of clothes. She set it on a table and peered curiously at the garments inside. She reached in and fingered a thin blouse distastefully. \"I don't even know why we hauled it up here,\" she remarked nastily. \"It's all a bunch of cheap Wal-Mart crap.\"\n\nRachel spun, furious at the mocking words, even as she heard Maria draw in a hurt gasp.\n\n\"Sarah.\" Josh's voice was stern. \"We raised you better than that. Apologize to Maria. Now.\"\n\nSarah lifted her face. It was tense, the eyes red and hollow from lack of sleep, embarrassed and angry. \"But Daddy,\" she said.\n\n\"No. We don't treat others that way. And you know it. Maria may work for us. But she deserves your respect. She is not your inferior or your slave. Apologize.\" He stood, waiting. Maria fidgeted, unhappy with being caught in the middle of a family quarrel. \n\n\"Sorry,\" Sarah muttered sullenly. She refused to look at Maria.\n\n\"You're going to have to do better than that,\" her father said.\n\nSarah's lips tightened angrily. Rachel kept silent, watching the battle of wills play out. For a long, tense moment no one spoke. Then Sarah blinked, tears welling up in her eyes. \"I'm sorry, Maria,\" she said. She faced the Hispanic woman bravely, though her face was miserable. \"I was wrong to make fun of your clothes. I should remember not everyone has the advantages I do.\"\n\n\"It is forgotten,\" Maria said simply. Her face was open and warm, with no hint of resentment. Rachel made a note to talk to Sarah later. As an informal member of their household, Maria might be willing to overlook the slight, but no one could be as gently forgiving as she appeared to be. Sarah would have to work to mend fences \n\nSarah turned back to her father. \"May I be excused?\" she asked. Her voice trembled.\n\nJosh nodded. Sarah immediately turned and fled out the door. They could hear her clattering steps on the wooden boards of the staircase outside as she left.\n\n\"I want to apologize, too,\" Josh said to Maria. \"Sarah's not usually like this. I don't know what got into her. Unless...\" he turned questioning eyes to Rachel, who did some quick mental math.\n\nShe shook her head. \"Nowhere near her time of the month, baby. And she usually doesn't let that get to her, in any case.\"\n\n\"Oh, I understand,\" Maria said. She began unpacking books, stacking them meticulously. \"She's the baby of the family, the sweet little nina who everyone loves. She's always had her father and brother looking out for her.\n\n\"Now a new woman is here, no? A woman who might be a rival. She has always known her role in the family. But I, I am a...disruption. So she tries to show me my place.\"\n\n~She is wise, our Maria.~\n\nRachel nodded slowly. \"I think you are right. Still, there is no excuse for rudeness. You will tell me if it happens again.\" The words were not a request, but an order.\n\n\"Yes, Mistress.\"\n\n\"And I know you don't officially start until Tuesday,\" she added. \"But we are having a cookout tomorrow afternoon. If you don't have other plans, I would like for you to drop by.\"\n\nStill, it could be worse, Rachel thought, as Maria told her cousins goodbye and they roared off in a cloud of exhaust. Josh excused himself to his workshop, where, he said with an eager gleam in his eye, he had a new project to start. She entered the house, her sandalled feet softly slapping the polished hardwood. With the way Sarah was acting, you would think she and Maria were old lovers who had broken up and were meeting again.\n\n~No,~ Althea chuckled wickedly. ~Sarah has no interest in women as playmates. She would have to be desperate indeed to see one as a potential partner. Even one as lovely as Maria. Her heart belongs to another.~\n\nWell, thank goodness. The last thing we need is for some lover's quarrel to break out here. She frowned at Althea's sense of smug amusement. What? What's going on?\n\n~Her heart belongs to another.~\n\nWho?\n\n~Didn't you notice how jumpy Joshua was this afternoon whenever Sarah was nearby? Thanks to my gift, they are seeing each other as man and woman now. Not as father and daughter. That is why Sarah is so miserable, and why Josh is so nervous. Once the genie of desire is out of the bottle, there is no getting it back in.\n\n~You're going to have to do something about it.~ Althea's voice was kind. ~They can't go on as they are.~\n\nLoosens inhibitions, you said last night. Well and so. This would be the greatest inhibition of them all. The woman she had been would have been horrified and furious, she knew. Let me think about it.\n\n~You could-~\n\nI said, let me think, she snapped. Besides, I have some phone calls to make. Or don't you want me to find your body?\n\nA miffed silence was her only answer.\n\n*****\n\nFrom the driveway, with Pablo and Roberto driving into the distance, Maria watched Rachel enter the house and felt close to weeping. It was torture, seeing her, being so close to her, but to be unable to act on her desires. She had begged God for one moment alone with her. One moment to be able to kneel before her and submit to her commands. One moment for Rachel to take her as her Mistress.\n\nWhat would she have me do? How would my Mistress have me please her? She climbed the stairs up to her apartment, wondering when that moment would come. She had no idea where her desire to be dominated came from. From the first moments of her budding sexuality as a teenager, she had been tormented by fantasies where a master or mistress ordered her about. Unable to come to terms with her needs, ashamed by what her family would think, she had not spoken of her desires to anyone. A job as a maid gave her some small sense of satisfaction, but that was weak indeed compared to the flaming fires of her innermost dreams.",
        "And then, that wonderful afternoon last week, when Rachel had glimpsed what she wanted. Standing in the middle of the dining room, shaking with exquisite terror as her uniform was slowly peeled away, Rachel's voice so loving, commanding her. Knowing that in Rachel's eyes she was a treasure beyond price; something to be cherished. At that moment, she would have done anything for her. Anything to be allowed to remain in her presence.\n\nShe may come back any time, she thought, and trembled at the possibility. A yearning warmth was in her core, needing only a touch to set her alight.\n\nBut you must be ready when she comes. She told you to dress attractively. Even though you do not work for her yet, it would be a disgrace if she should come to visit you and you had not obeyed her commands.\n\nIn moments, she had pulled off her shirt and unclasped her plain, functional bra. Eying it with distaste, she tossed it into the bottom drawer of her bureau, then slipped her shirt back on, shivering sensuously at the wicked feel of her bare flesh on the cotton cloth. Immediately her nipples hardened, and she closed her eyes as they dragged across the fabric, tormenting her with pleasure. Hiking her skirt high, she pulled off her panties. Rummaging in a box, she found her small collection of lingerie. A pair of lace panties, cut high at the hips, the crotch little more than a wisp of material, soon found their way onto her body.\n\nNow I am beautiful. And ready for my mistress.\n\nBut the room, perhaps, is not? You must clean, Maria. When she comes for you, you will not be ashamed to greet her.\n\nShe opened the windows, allowing the warm breeze to enter the musty, dusty room. Whistling happily, she took up her broom. In moments, the sound of her cheerful voice and the scrape of bristles on the floor echoed through the previously lifeless apartment.\n\n*****\n\nSarah came downstairs later in the afternoon to find her mother in the living room, surrounded by computer printouts, and talking on her cell phone.\n\n\"Yes, I understand,\" she was saying. \"However, if you could have your people keep an eye open for me, I would appreciate it.\n\n\"Hey, sweetie,\" she said to Sarah. \"Are you feeling better?\"\n\nSarah nodded glumly. When her mother had asked her to help move Maria in, she had been drained, red-eyed and bleary after a sleepless night spent fantasizing about her father. After she had humiliated herself by her childish attack on Maria, she had gone upstairs to her room. A furious session of masturbation and a short, exhausted nap had restored some of her equilibrium, though she still felt disturbingly unbalanced. \"What are you doing?\"\n\n\"A friend has asked me to help her look for a missing person,\" Rachel said. \"So I'm calling police departments in her area to see if they might have any information about her. Whether she might have been arrested, though I doubt it. Or if someone may have attacked her.\" She slid a handful of printouts across the coffee table to her. \"If you feel like helping, here are some hospitals you can call.\"\n\n\"Althea Carpenter,\" Sarah read, sitting in the love seat. \"I don't think I've ever heard you talk about her.\"\n\n\"You probably haven't. I've talked to her a few times, but never met her in the flesh, so to speak.\" She smiled in response to some memory as she placed another call.\n\nSarah shrugged and pulled her cell phone out of her pocket. In a few minutes she was navigating through an automated attendant, trying to find a live body to talk to. \"Up on the Gold Coast, huh?\" she said, referring to one of Chicago's most expensive neighborhoods. \"What does she do for a living?\"\n\n\"Runs around with men, mostly, from what I can tell,\" her mother smiled. \"Women, too.\" She cast a keen eye at her. \"Care to tell me what's got you so worked up lately?\"\n\nSarah held up a finger as a woman picked up her call. A few minutes later she hung up, shaking her head.\n\n\"I don't know, Mom,\" she said. \"A couple of weeks ago, every day was like every other day, you know? I got up, banged around the house, texted my friends, cooked or researched recipes, watched TV, went to bed. Now...everything has changed. Dad's back. Maria is moving in. You're going to be home a lot more, and I'm going to be home a lot less, going to school. I'm going to have to actually do something, rather than sit around and complain about how you won't let me do what I want.\"\n\nHer mother nodded her understanding, even as she was taken off of hold and got a negative answer from a police dispatcher. \"Change is always frightening, sweetheart. Trust me, I know about that. When I walked out of the office yesterday, I almost turned around and ran back in, just because I didn't want to leave my comfort zone. I've been working for Ben Chihiro ever since I got out of law school. It felt like a betrayal to quit, even when I knew it was the right thing for me.\"\n\n\"We wear the chains we forge in life,\" Sarah said.\n\n\"True that,\" Rachel replied, and Sarah rolled her eyes.\n\n\"And there is the fact,\" her mother said, speaking carefully, as if she was navigating a verbal minefield, \"that you're attracted to your father, and want to go to bed with him.\"\n\nIt took a few seconds for the words to sink in. When they did, Sarah denied them instinctively. \"No, I'm not! Gross, Mom! How could you think that!\"\n\nHer mother looked back at her mildly. \"Because I'm not an idiot, and because it's true. Ever since Josh came back, you haven't been able to take your eyes off him. At dinner last night, when we were helping Maria move in today. It's obvious to anyone who looks.\n\n\"But you know it's impossible, right? That's why you're so unhappy. Why you lashed out at Maria earlier this afternoon. Because you saw her as a rival. Another attractive woman who your father might desire. Especially when he is, unfortunately for you, already sleeping with your mother.\"\n\nSarah dropped her head, tears of shame running down her cheeks. It seemed too much trouble to deny the truth any longer. Best to get it over with and take the reaming that was sure to follow like a grown-up. \"I'm sorry, Mom. I didn't mean for this to happen. We were in his workshop yesterday, and all of a sudden, I just wanted him. I got all itchy inside, you know? Like, I mean, really horny. Hornier than I ever was for Sam or Luke,\" she said, naming her last two boyfriends, \"and I knew he would be able to make me feel good. We didn't do anything,\" she added quickly. \"And we won't. I won't. If you want me to, I'll move out.\"\n\nHer mother moved over to sit beside her, slipping an arm around her shoulders and holding her while she cried. She wished she was a little girl again, and she could sit in her lap. They were so different. She wasn't beautiful like her mother. She was tall where her mother was petite. Brown-haired where Rachel's was black. Her skin was darker than her mother's, her breasts smaller, her legs longer, her body that of a long-distance runner.\n\n\"Nonsense.\" Her mother's voice was warm, loving, and utterly firm. \"Why should I be angry you find your father attractive? I certainly do. That's how you got here, you know.\"\n\nSomehow, Sarah was able to giggle weakly through her tears. She sat up, rubbing a sleeve across her eyes.\n\n\"You're not moving out unless you want to. You don't, do you?\" Sarah shook her head. Her mother nodded. \"Good, so let's hear no more of that.\n\n\"But I'm glad to hear you admit your feelings for Josh. It takes a lot of courage to tell someone a painful truth. Especially when you know most people won't understand.\n\n\"I've been forced to reevaluate a lot of my preconceptions lately, Sarah. One thing I think I've learned is that love is never wrong. When two people love, truly love one another, only a fool would try to keep them apart. Physical love is only one way to express how we feel. You love your father. He loves you. For whatever reason, you are now feeling the desire to express your love for him physically. And unless I'm terribly mistaken, he has the same desire for you.\"\n\n\"He does,\" Sarah said softly, unable to believe the direction the conversation was taking. \"I know it. I felt it yesterday.\n\n\"Mom, are you saying that you...that you're okay with this? I mean...there's laws against this sort of thing. Fuck, you're an attorney!\"\n\n\"Don't swear,\" she said. \"The laws were mostly put in place to protect children. To keep adult predators away from young, vulnerable people.\n\n\"Well, you're not a child anymore,\" her mother continued, giving her a long, assessing look which made her blush. \"And you're certainly old enough and smart enough to make your own choices. If going to bed with your father will make you happy, then I'm not going to stand in your way.\n\n\"And as for the rest of it, it is not the State of Illinois' business who you choose to love. Hell, if you got arrested, I bet I could make a damn good case for those laws being unconstitutional, just based on the Equal Protection Clause.\" She sniffed angrily. \"Just like gay people have the right to marry now. As they should.\n\n\"So the question is,\" she said, moving back to the sofa, \"what are we going to do about it? You certainly can't walk into his workshop tomorrow and try to seduce him. Even if he found you attractive, which he does, he'd be all torn up with guilt afterward. Your father and I are just getting back together. I'm not going to put our relationship in danger. Not even for you, Sarah.\"\n\nShe nodded as her mother sank into thought and called the next hospital. A few minutes later, she crumpled the sheet into a frustrated ball and chucked it at the wastepaper basket in the corner, missing by a yard.\n\n\"If Daddy knew we had your permission...\" she said tentatively.\n\nRachel quirked an amused eyebrow at her. \"Hmmm. Maybe a notarized slip? 'Dear Josh: You have my permission to screw Sarah. Please give her the fucking of a lifetime. Sincerely, Rachel.' That idea has its charms, especially to see the look on his face.\" Sarah giggled. \"But no. It has to be indisputable.\"\n\n\"What has to be indisputable?\" her father asked, entering the room. Sarah jumped guiltily.\n\n\"Nothing,\" her mother said easily. \"Just a little girl-talk.\"\n\n\"Sounds interesting,\" he said, his tone meaning the opposite. He picked up the remote and turned on the TV, settling down beside Rachel. They spoke quietly together as Sarah made more calls, Rachel explaining their project. He listened carefully, making suggestions about who else could be contacted: homeless shelters, churches, and the like. She eyed her mother enviously as she nestled into the hollow of his shoulder.\n\n\"Yes,\" she said to the receptionist at the University of Chicago Medical Center. \"I'm looking for a woman who has been missing since Thursday, May nineteenth. I am checking the local hospitals to see if she might have been brought in. Her name is Althea Carpenter. Yes,\" she sighed. \"I'll hold.\"\n\nA minute later she cupped her hand over the speaker. \"Mom? I think we might have found her.\" She set her phone on the table and hit the speaker button. \"Hello, Cheryl? You're on speaker now with my mother. My father is in the room, too.\"\n\n\"Yes, hello. Can you please describe the woman in question, ma'am?\"\n\n\"Yes,\" Rachel said eagerly. \"Her name is Althea Carpenter. She's twenty-six years old, five foot seven, long blond hair, green eyes. Weighs approximately one hundred fifteen pounds.\"\n\n\"That's our girl,\" said the woman on the other end of the phone. \"She came in over a week ago. She had some sort of seizure outside her home. Witnesses called the EMTs and they brought her here. She's in our ICU. Dr. Marafi has been running tests on her, but she doesn't seem to have found a cause for her illness.\"\n\n\"Illness?\" her father asked.\n\n\"Yes, sir. She seems to be in a coma.\"\n\n\"Well, she's alive. That's the important thing,\" Rachel said. \"Would it be possible to have Dr. Marafi call me when she has a moment?\"\n\n\"I can ask, ma'am. But you understand, unless you're a close family member, there's not much more she will be able to tell you.\"\n\n\"Understood.\" She gave the lady her cell number. \"Thank you for your help. Goodbye, Cheryl. And thank you.\" She hung up the phone. \"Alive,\" she said, a smile of relief brightening her face. \"Well. That's a start.\"\n\n\"Why is this lady so important, Mom?\"\n\n\"Everyone's important to somebody, honey.\" She relaxed against her husband, watching benignly as he flipped through the channels. Sarah tried not to feel jealous of her, even as he absently placed a hand on her bare knee, his fingers softly caressing her skin. Look how well they fit together, she thought. At that moment, the mere thought of having what her parents shared seemed laughable.\n\n\"Well, I'm going to get started on supper,\" she said, standing up. \"Any requests, Daddy?\"\n\n\"Nope,\" he said, his eyes fixed on the TV. \"Make whatever you like, pumpkin. I'm sure it'll be great.\"\n\n\"Thanks, Daddy,\" she left the room, trying, and failing, to keep a sensual strut from punctuating her stride.\n\nScrew it. I hope he was watching.\n\n*****\n\nRachel watched Sarah exit, smiling as she felt Josh relax against her. He might have been able to hide it from his daughter, but after over twenty years together, she could tell how nervous Sarah was making him. How he didn't dare let his eyes rest on her for too long, for fear of giving away his feelings. \n\n\"Good looking girl, our daughter,\" she hinted.\n\n\"Yup,\" he said. \"Oh, look! We've still got Mythbusters in the DVR queue. Sweet! I wonder if it was Alex or Sarah who recorded the shows.\"\n\n\"It was me, actually,\" she said. \"It was something to have playing in the background when I was working at home. And there was something cathartic about coming back from the office and watching them blow crap up. Especially after a bad day. But we were talking about Sarah.\"\n\n\"Were we?\" he said absently. He chose a program and settled back to watch.\n\n\"Yes,\" she said firmly. \"We were.\" she pulled the remote out of his hand and paused the program. \"I thought we weren't going to do this any more,\" she said warningly. \"You know. Where I try to have a conversation and you ignore me because you don't want to talk about it? Remember that? Christmas? Let's not have a repeat.\"\n\nJosh opened his mouth to protest, then paused. He nodded slowly. \"Your daughter told me the same thing yesterday,\" he said. \"Okay, let's talk.\"\n\nRachel smiled, pleased. \"Sarah is a good-looking young woman,\" she said.\n\n\"Yes, she is,\" he agreed. \"Any news as far as a boyfriend is concerned?\"\n\nShe shook her head. \"None. She broke up with Sam in March. Just as well,\" she commented. \"I never liked him anyway. Most of her friends went away to school this year. It was hard on her, even though it was her choice to stay home. She could have gotten into the U of I easily. Or almost anywhere else. But I think she has other ideas where men are concerned.\" She met his gaze challengingly.\n\n\"Like what?\" he asked, but his eyes had a hunted look.\n\n\"Like her father,\" she said softly, pitching her voice low, so Sarah couldn't overhear them. \"Tell me, Joshua. Have you been having naughty thoughts about your sexy little girl?\" She dropped a hand to his groin.\n\nHe swallowed. \"If I say yes, are you going to rip my balls off?\" he asked.\n\n\"No.\"\n\n\"No,\" he said. \"Not until yesterday, when she started coming on to me in the workshop. Just for an instant, I wondered. What it might be like. But I didn't touch her, Rachel,\" he said hurriedly. \"Didn't lay a finger on her. I would never betray you that way. Or violate her trust. Christ, she's just a kid.\"\n\n\"A kid who is older than I was when we first met? Rather, say a woman. A woman who has told me how attracted she is to her own father.\" She smiled knowingly, patting the growing bulge in his groin. \"I'm not angry, honey. Not at her, not at you. I know you too well. You would never hurt our daughter.\"\n\nJosh blinked. \"Is that it?\"\n\nRachel nodded. \"For now. Oh, awesome,\" she said, restarting the show. \"This is the one where they blow up the cement truck!\" \n\n*****\n\nAlex arrived home fuming at himself.\n\nSo this is it, huh? Act like a damn spoiled brat for two years. And then, when you have what you want within your reach, you can't close the deal. How the hell are you supposed to make it in New York or Hollywood if you can't even make it at Cash On Delivery? His lips twisted sourly at the mocking name high school students gave to the College of DuPage.\n\nHe climbed out of the car and slammed the door shut in a fit of frustration. All right. Go upstairs and run your lines again. Try to get your mind right. You've still got a week until opening night.\n\nBut the problem wasn't his lines, he knew. He had those cold, and had for the last week. The problem was something else. He leaned back against the Pontiac, massaging his aching temples, remembering the frustrated faces of Claire and Professor Olson as they did the scene again and again and again.\n\nHe frowned as he heard steps above him, light and quick, echoing in the garage below, then relaxed. Maria, of course. His mother had told him she was moving in today.\n\nMaybe...\n\nBefore he could lose his nerve, he had exited the garage, not by the house entrance, but by the door that led outside. In a few moments he was climbing up the outside stairs to the door of the small apartment over the garage. He knocked firmly on the door, then waited, his stomach tying itself in knots.\n\nIt opened in moments, showing him Maria's quizzical face. \"Alex. Hello. What can I do for you?\"\n\n\"I...\" he floundered. How could he explain? \"Can I come in for a minute?\"\n\nShe opened the door wide. \"Of course.\"\n\nHe entered to see the room transformed. The last time he had been up here was months ago, and it had been full of dust, the windows grimy, the floor bare. Now, the windows were clean and open to the spring air. Brightly colored rag rugs were scattered over the floor, which itself had been swept and mopped until the wood seemed to glow. The rich scent of grilled meat hung in the air, and his mouth watered involuntarily.\n\n\"Were you having supper?\" he asked. \"I can come back later.\"\n\nShe flipped a hand dismissively. \"I am done. I made papusas and plantains for my meal. Fried meat and cheese wrapped in corn dough,\" she explained to his inquiring look, \"With cumin and other spices. So nice to be able to cook for myself, not worrying that three other girls want to use the stove. And a refrigerator all to myself! I can buy whatever food I want, and not worry about someone coming home drunk and eating it all!\n\n\"So, Alex,\" she said, his name sounding exotic in her Honduran accent. \"Why are you here?\"\n\n\"I need your help,\" he said. He grimaced at her disbelieving look. \"I'm going to be in a play at COD. Opening night is in less than a week. And I'm screwing it up.\n\n\"The play is Othello. By William Shakespeare. Do you know it?\"\n\nMaria shook her head. \"When I am in school we read Romeo and Juliet. And I have seen Much Ado about Nothing on the DVD, with Kenneth Branagh\" She rolled her eyes appreciatively. \"But Othello I do not know.\"\n\nHe nodded. \"I play Iago. He's the villain. He hates Othello because he has been passed up for a promotion, and also because he's just a horrible person who enjoys watching other people suffer. He plays on Othello's insecurity by convincing him his wife is having an affair. Sleeping with another man.\n\n\"At the end of the play, Othello strangles his wife, Desdemona.\" Maria nodded, her face alight with interest. \"Iago's wife Emilia comes in to see Othello standing over Desdemona, dead in their marriage bed. When Othello tells her Iago told him Desdemona was cheating on him, she knows her husband is lying. She confronts him and he kills her.\n\n\"In the original play, he stabs her with a sword. But our director is making a change. He wants Emilia's death to be more violent, so the audience can see what a monster Iago is. Rather than being run through with a sword, he...\" he swallowed thickly, \"...he strikes her several times, then stabs her with a dagger on the bed where Desdemona is lying.",
        "\"I can't do it,\" he grimaced. \"I won't really be hitting her,\" he said in response to Maria's concerned look. \"It's just a play. But I can't even make it look good when I'm acting. I've seen the recordings. It's awful.\n\n\"So I was wondering if you might like to read with me? I've got the script here,\" he said, waving a sheaf of paper. \"You could play Emilia, read her lines. And maybe I could figure out why I can't make the scene work.\"\n\nA smile lifted one corner of Maria's mouth, and she reached for the script. \"This sounds...interesting,\" she said. \"Where do I start?\"\n\n\"Right here,\" he pointed. \"We'll just run though them a few times, then we'll do it for real, okay?\"\n\nEMILIA:\n\nO, thou dull Moor! That handkerchief thou speak'st of\n\nI found by fortune and did give my husband;\n\nFor often, with a solemn earnestness,\n\nMore than indeed belong'd to such a trifle,\n\nHe begg'd of me to steal it.\n\nIAGO\n\nVillainous whore!\n\nEMILIA\n\nShe give it Cassio? No, alas! I found it,\n\nAnd I did give't my husband.\n\nIAGO\n\nFilth, thou liest!\n\nEMILIA\n\nBy heaven, I do not, I do not, gentlemen.\n\nO, murderous coxcomb! What should such a fool\n\nDo with so good a woman?\n\nIAGO, mad with rage, strikes EMILIA in the face several times, driving her back to the bed where DESDEMONA lies dead. He then draws a dagger from his belt and stabs her. EMILIA collapses across the body of DESDEMONA, grievously injured. IAGO turns and exits, running\n\nThey worked through the dialogue, with Alex helping her with pronunciation, pointing out the words to emphasize. Maria was a quick study, and in only a few minutes they were rehearsing the scene.\n\nBut it did not go any better with Maria than it did the three dozen times he had done it earlier in the day with Claire. He forced her across the room with mock slaps and punches, until he pulled a pretend dagger and lunged at her chest. Even as he said the words he could sense the awkwardness, knew the non-existent audience was not buying his performance.\n\n\"I wonder,\" said Maria, after the fourth futile run-through. She scanned the script. \"This says Iago is angry, yes?\" Alex nodded. \"Why is he angry? He should know his wife wouldn't betray Desdemona by lying for him, or he would have brought her into the plot. He isn't angry. He's afraid.\"\n\nAlex's mind opened up, the inner truth of the scene unfolding seamlessly. \"Of course,\" he breathed. His face broke into a broad smile. \"He's terrified. He's standing there, just inches away from succeeding. Desdemona is dead, Othello disgraced, and no one knows he was behind it all. Then his wife has to open her big stupid mouth and ruin everything.\n\n\"Let's do it again.\"\n\nThis time, it went right. He drove Maria across the room, screaming in incoherent fear and rage. His vicious punches whistled by her face, missing her by the barest of margins. He shoved her onto the bed, where she landed on her back, gasping with wide-eyed fear. He loomed over her, his face drawn up in an angry mask, his left hand shoving her sadistically down. His clutching right hand pulled the fictional dagger from his belt, reached high, then stabbed with brutal force into her heaving chest, which she arched up towards him in a futile effort to escape. With a shuddering wail, she collapsed beneath him, moaning piteously.\n\nHe grinned down at her. \"That was it! Damn! Finally! I've been fighting that scene for days. Thank you, Maria,\" he said. \"You've got no idea how much that helped me.\"\n\n\"You're welcome,\" she said. She smiled up at him, her lips curling lazily, and suddenly he was intensely aware of her body beneath his. \"It was no trouble at all, mi lindo.\" Her eyes were wide but warm, and he could smell her scent, a subtle blend of vanilla and citrus and the food she had been cooking. One leg raised up, rubbing on his hip, the cloth of her skirt falling away to reveal a length of brown thigh, the color of fresh-baked bread.\n\nTheir eyes locked, and for the first time in his life, Alex was aware of a woman as a complete person. He felt as if he were standing outside himself, and he could see the secret history of Maria's soul. The grinding poverty of her childhood on the south side of Chicago, growing up in an apartment which was little better than a slum. The way the public school system chewed her up and spat her out, without recognizing the bright, hungry intelligence of her mind. The years of work, cleaning up the messes the carelessly wealthy left behind. The bitter resentment of those, no better than she, who had been privileged to be born to a life of power and luxury. The fondness she held for his mother, and for his entire family, because of how they had always treated her as a person, not a mindless automaton. The sweet purity of her soul, which more than matched her outer beauty.\n\nAnd, most terrifying of all, her desire for him, and her need to be dominated.\n\nHer shining eyes met his. \"Master,\" she breathed. \"Please. Tell me how to serve you.\"\n\nFor a moment he teetered, balanced on a knife-edge. Somehow he knew that as he knew her, she also knew him. Was able to see into the corners of his soul, laid bare before her gaze. Knew his love for his family, despite the resentment he had as his mother controlled his life. Knew his burning desire to prove his skills as an actor. Knew the gnawing self-doubt that kept him from approaching her, despite the attraction between them. Knew his desire to be dominant over a willing partner, and his crawling, shameful suspicion that it made him unworthy of a decent woman.\n\nPinned by Maria's open, honest gaze, he felt terrifyingly naked, raw and defenseless, his innermost fantasies laid bare for her to see. But at the same time, arousal hit him like a sledgehammer. He looked down at Maria and saw a reflection of his inner self, the light to his shadow.\n\nAnd acceptance. The calm knowledge that they were the two halves of a single soul.\n\nHe bent his head to kiss her, watching, fascinated, as her head tilted towards his, her mouth opening like a flower. He thought he had never felt anything so warm, so gentle, as her lips, and he groaned into her mouth, months of pent-up longing given voice at last. Yielding, she pressed against him, her body waking a fire in his groin. Her shy tongue introduced itself to his eager mouth and her fingers threaded through the shaggy hair at the nape of his neck, drawing him closer still.\n\nWith an effort which was almost painful he levered himself off the bed and stood panting at the side. His blood seemed to thunder in his ears, and each heartbeat brought another jolt to his rapidly stiffening cock.\n\n\"You want to serve me?\" he asked. His voice sounded hoarse in his own ears.\n\nMaria scrambled upright. She knelt on the bed, her hands clasped before her, her head bent in submission. \"Yes, Master. Please.\"\n\nThis can't be happening. The secret, perverse desire to dominate a woman. To order her about, have her subservient to his wishes, was contrary to everything his parents had taught him. Women were to be protected and cherished, but in every way equal to a man.\n\nAnd is she somehow unequal? Inferior? You know she isn't. He swallowed harshly, knowing she could end the game even before it began by a simple refusal to participate.\n\n\"Undress me,\" he whispered. As Maria gracefully tumbled out of the bed and reached for him he allowed his lips to curve in a taunting smile. \"However, you may not touch me. One whisper of your skin on mine, and I leave, Maria.\"\n\n\"Yes, Master,\" she whispered. Kneeling before him, she untied his shoes, drawing them off his feet. Then, his socks, her long, clever fingers working the cloth down and over his ankles and arches without touching him. She rose, her eyes still not meeting his, and he felt the bite of his own hasty actions. He ached to taste her mouth, to hold her close, but could not without violating the rules of the game. He gritted his teeth against a spasm of desire as she drew his shirt over his head, revealing his chest. Crouching down, she carefully undid the button of his jeans, her fingers working slowly, careful not to touch him, until every moment was torture.\n\nThe button finally sprang wide, and she undid the zipper and pulled the jeans down to his feet, where he stepped out of them. Then the boxers, and here she was most careful of all, tugging at the hem until the elastic waistband bound up on the rigid flesh of his shaft. She looked up at him, her face solemn, though he thought he could detect a hint of laughter in her eyes. Never breaking his gaze, she plucked at a loose fold, pulling the waistband away from his skin. One finger slipped inside, the merest breath away from his overheated body. A wiggle, a tug, and the boxers were at his feet as well. With a gracefulness which was all her own, she folded his clothes and set them neatly to one side.\n\n\"Strip,\" he ordered, trying to make his voice sound casual. \"The blouse first.\"\n\nHolding his eyes with hers, full of pride at her own allure, she undid her blouse. As her beautiful breasts came into view at last, he tried to keep his desire from becoming too obvious.\n\nToo late for that, he thought with a thread of amusement. If she hasn't noticed your cock is standing straight up she needs her eyes checked. God, her breasts are gorgeous. His palms itched with the desire to hold them in his hands, to feel the wonderful weight, to stroke and kiss the soft curves until she screamed his name.\n\n\"Everything, Master?\" Her voice trembled.\n\n\"Everything,\"\n\nHer fingers shook as she pulled down the faded flower-print cloth of her skirt, and then her panties, the high-cut lace strangely incongruous compared to the rest of her clothes. \n\nShe met his eyes triumphantly. \"Good,\" he said. \"Now, lie down on the bed. On your back, legs spread, hands over your head. No,\" he said as she settled back, her hands resting on the crown of her head. \"Over your head. Grab the bars of the bed frame.\"\n\n\"Like this, Master?\" she asked.\n\n\"Yes. Well done. My name is Alex,\" he said, with the air of one tossing a coin to a beggar. \"You may use it, if you wish.\"\n\n\"Yes...Alex.\"\n\n\"I said, spread your legs, Maria.\" For the first time, he gave his voice the bite of command. Instantly, her legs shifted, spreading wide, revealing her innermost secrets. The lips of her labia parted, and he could smell the faint tang of her musk in the warm air of the room. He crouched at the side of the bed. He placed one hand on her thigh, his fingers only inches away from her groin.\n\n\"I am going to make love to you now, Maria,\" he said. \"And you are going to hold still. Your hands are not going to leave the bedframe. Do you understand me?\"\n\n\"Yes.\"\n\nHe kissed her, hard and swift. \"And you can stop this any time you want. What do you want as your safe word?\" he asked.\n\nHer eyes were open and trusting on his. \"Starfire,\" she said.\n\n\"Starfire,\" he repeated carefully, and she nodded confirmation.\n\nHe moved down to the foot of the bed. Sinking onto the mattress, he slowly made his way up towards Maria, his hands brushing the sides of her legs, enjoying the feel of her skin as she broke out into gooseflesh at his touch. Braced on his elbows above her, he looked deep into her eyes, allowing the shaft of his cock to drop down until it was nestled between her nether lips. He saw an instant's fear in her eyes. That he would drive himself into her unprepared, hurt her while he took his own pleasure. Her knuckles whitened where they grasped the iron railings of the bedstead, and he could see the cords in her wrists tighten. He shook his head, hoping she could see the truth in his face.\n\n\"You are mine,\" he whispered.\n\n\"I am yours,\" she returned, and his heart took wing as she gave him the priceless gift of her trust. He moved back down her body, his lips barely brushing her skin, torturing her with kindness. He avoided her breasts with their tense, turgid nipples, even as she tilted her body to bring them within reach of his mouth. Instead, he laid a series of tongue-wet kisses on the soft brown skin of her stomach, one hand slowly combing through the soft, neatly-trimmed curls of her pubic hair.\n\nHe lay between her legs, his elbows keeping his head raised. His head was only inches away from her folds, and he inhaled deeply. The delicate lips of her cleft were unfurled slightly, and slick with her dew. With an inward prayer, he kissed her, his mouth soft, open, and loving, his tongue reaching out to trace the gentle whorls of her labia. Immediately he tasted her tangy nectar, the flavor of her exploding in his mouth, making him wonder why he had ever wanted anything else. Maria writhed under his touch, and he slid his hands under her buttocks, cradling her taut muscles in his palms, all the while diving deeper and deeper into her soaking cleft. His nose was pressed against her black curls and her scent was everywhere, filling him, until he thought he could spend a day just breathing and not grow tired of it.\n\nDimly he became aware of a creaking sound. He looked up Maria's lovely body, sweat-slicked in the soft glow of the lamps and the last light of the sun. Her hands were fisted around the bars of the bedstead, the muscles of her arms standing out clearly. Slowly, rhythmically, she pulled at the bars, then relaxed. Her eyes cracked open. Seeing his eyes on her, she smiled, running her hands up and down the bars, every gesture a promise.\n\n\"I have not let go, Master,\" she said quietly. \"But it is hard. So hard when you kiss me so sweetly. I want to feel you inside me, papi.\"\n\n\"You will,\" he promised. \"Soon. But first I have to please you, mi novia.\"\n\nShe smiled at the awkward way the endearment fell from his mouth, and Alex bent back to his wonderful task. He carefully parted Maria's lips, seeking the bud of her clitoris. Pink and glistening, it peeked out from under its hood. He fastened his lips on it, his tongue reaching out to caress it with the tenderest of touches.\n\nMaria's response stunned him. Her thighs rose as if jerked upright by some invisible force. Instantly, her chest and face were hidden from his view. Instead, he was treated to the sight of the sweet globes of her ass and her legs, with her beautiful pussy framed between them. She rocked back and forth on the bed, gasping out a confused mingling of English and Spanish.\n\nAlex was tempted to laugh, but was wise enough not to. Feeling as if he was trying to home in on a moving target, he dove back in, his hands gripping Maria's calves as she twisted under him, his lips trying to corral her clit. At last he found the angle he sought, and opened his mouth wide, covering her nub with his eager mouth and lapping tongue, determined to please his lover if it was the last thing he did on this earth.\n\nMaria shrieked, the yell loud and piercing. In one corner of his preoccupied mind, Alex was grateful the garage was separate from the main house. His head trapped by Maria's clutching thighs, he had no choice but to roll with her as she twisted back and forth. His tongue began to ache, the effort of pleasing Maria beginning to tell on him, but he kept working her bud, interspersing licks with periods of sucking.\n\nSlowly the moans from above began to change their tone, growing lower and more guttural. Under his hands, the muscles of her legs began to twitch spasmodically. At the same time, the pressure at the sides of his head increased as her grip on him intensified. Finally, with a keening wail high enough to shatter glass, Maria climaxed. The entire lower half of her body shook, groups of muscles shuddering with orgasmic release, then falling limp.\n\nAlex shook his head dazedly, moving his jaw from side to side in an effort to make sure it hadn't been dislocated. After he had collected himself, he moved up the bed, where Maria was waiting for him, her eyes shining happily. Her chest was slicked with sweat and strands of hair were plastered to her cheeks and forehead. But her hands were still firmly wrapped around the posts of the bedstead.\n\n\"You can touch me now,\" he smiled.\n\nInstantly he found himself wrapped in a bear-hug. Maria's strong arms, built up from years of work, enveloped him, drawing him down for a wet, passionate kiss. Her legs spread under him, and with a sense of wonderful inevitability, he found himself sinking into her. His dagger slid past her lips and into her sheath, buried to the hilt. She was so hot and slick it was almost effortless, and he groaned at the exquisite feel of her wrapped around his cock.\n\nWhen he was completely inside of her, so close their groins were almost molded together, he pulled away slightly, the better to focus on her face. His mouth worked, trying to convey his feelings.\n\nShe placed a finger over his lips. \"I know, mi lindo. I know. It is the same for me, too.\" She smiled and wiggled under him. \"But now I want to make my man happy. As happy as he made me. Please, Master. Fuck me!\"\n\nHer enthusiastic embrace of his need tore away the last shreds of self-restraint Alex may have had. He dropped his head to her breasts, kissing the lovely orbs with their dark-chocolate nipples, his tongue and lips making love to them. At the same time, he slowly withdrew from Maria's loving channel, then pushed forward, stroking her firmly. Over and over again, until his mind was reeling with pleasure and love. He plunged his hands into the shining wealth of her hair, feeling the coarse strands under his fingers, pulling her head up to kiss her again.\n\n\"Soon,\" he panted, feeling his balls rise, feeling the hot come rush up his shaft. \"Soon. Soon. Now!\" he groaned, as he exploded into her, rivers of his seed flowing into her waiting channel.\n\n*****\n\nIn the house, Rachel sat bolt upright in the living room, the comedic stylings of Adam Savage and Tory Belleci forgotten, as a wave of mingled pleasure and power rushed over her.\n\nWhat the hell just happened?\n\n~Alex and Maria happened. Huh. And we didn't have to arrange anything. Well. That makes things easier.~\n\n*****\n\nThey lay in bed, comfortably relaxed. Alex was on his side, his chest against Maria's back. One arm was loosely draped around her waist, the other trapped under her shoulder.\n\n\"Thank you,\" he whispered, his breath stirring wisps of her hair.\n\n\"No, thank you,\" she returned, gripping his hand. \"I never knew it could be like that. When you told me what to do, I got so wet down there. And you were so sweet, even when you were being bossy,\" she smiled, turning her head to kiss him thoroughly. \n\n\"I thought there was something wrong with me,\" he said quietly. \"I'd fantasize about women, about ordering them around, maybe even tying them up. Having them be helpless while I pleasured them. I was disgusted with myself.\"\n\n\"Mmmmm,\" Maria sighed happily, placing his hand on her breast. He cupped the swelling mound, his fingers toying with the pebbled nipple. She arched into him, her breast filling his palm even as her buttocks rubbed his hardening member. \"Do you want to do that to me, papi? Tie me to the bed and take me?\" Her voice sank low, promising dark, forbidden pleasures.\n\n\"Maybe. Someday,\" he said, kissing her ear. \"But I don't want that all the time. Just...sometimes.\" He groaned as his shaft nestled between her warm thighs, seeking out her cleft. He paused for a moment, panicking.\n\nCrap. I didn't wear a rubber. Didn't even think about putting one on. \"Maria? Should we be using protection?\"\n\n\"You can if you like,\" she sniffed dismissively, her hand came around, guiding him, and he muffled a groan as he slipped into her. \"Though a man I know once told me it is like washing your feet with your socks on.\" He muffled a snort of laughter. \"Don't worry, mi lindo. I have the IUD. I cannot give you a nino. Not yet.\n\n\"Now shut up, and love me.\"\n\n*****\n\nHis mother caught him later that night in the upstairs hallway. She had been quiet at supper, but he had felt her eyes on him, darkly speculative.",
        "\"Have a good rehearsal?\" she asked. Her eyes were amused, as if she knew more than she was willing to admit.\n\n\"Very good,\" he mumbled, trying to brush past her. He was brought up short by an outstretched arm, barring his passage as effectively as a concrete barrier.\n\n\"I know what you did, Alex,\" she said. He looked down, startled. \"A mother knows,\" she said with a smile. \"You looked the same way the night you lost your virginity. Who was it, Alissa Fraser?\" He nodded, caught off guard. \"You had the same look on your face. Happy and stunned at the same time.\"\n\n\"Besides,\" she continued, \"I can smell it on you. The smell of sex. Of two horny human animals doing their best to please each other.\" Her eyes were warm with approval. \"I'm happy for you. Happy for you both. Maria is a lovely woman.\"\n\n\"I was worried you'd be angry,\" he said quietly, trying to keep their conversation from prying ears, even as he blushed at her forthright language. \"I remember the lecture you gave me when she started working for us. That if you even thought I was trying to hit on her you'd make castration look like a day at the beach by comparison.\"\n\nHis mother smiled. \"That's before I got to know Maria,\" she said. \"Anyone who tried to take advantage of her would wind up sorry they tried.\" She stepped closer to him, her eyes intent. \"Just make sure you don't forget your mother, okay honey? It's tough on a woman when her son falls in love. Especially when that woman is as sweet and lovely as Maria.\"\n\n\"I'm not-\"\n\n\"If you aren't now, I think you will be soon,\" she interrupted. \"You two are right for each other.\"\n\n\"Well, maybe,\" he said, his sheepish smile disguising quite a bit of pride in how he had made Maria climax. \"Master,\" her voice whispered in his memory, and even now, his cock began to swell. He began to wonder if he could sneak out of the house and see her later that night, while everyone else was asleep.\n\nBefore his thoughts could wander too far down that path, Rachel caught him in a hug. \"Be good to each other, okay?\" she said. \"Maria is a really good maid. If you guys broke up and push came to shove, I might prefer to keep her,\" she teased.\n\nWhen he nodded, she smiled and lifted her face for a good-night kiss. He bent, meaning to brush her cheek. Instead, she turned her head quickly enough so she could catch his lips firmly with hers. Even as he jumped back, he felt her lips part and the tip of her tongue track a path across his mouth.\n\n\"Good night,\" she whispered. Her expression was oddly satisfied. She turned away and walked down the hallway. His eyes caught the shifting shadows of her legs under her nightgown. Sweet, he thought absently, licking his lips. Like honey. \n\nAbsently adjusting his cock in his pants, he turned to his bedroom.\n\n*****\n\n\"So what was that about?\" Josh asked as she closed the door to their bedroom. He had apparently just gotten out of the shower. His sandy-blond hair was damp and there were beads of water scattered on the hairs of his arms and legs, shining like diamonds in the lamplight.\n\nShe smiled at him as she undressed for bed. \"Our son has a new girlfriend. Apparently he is taking advantage of our innocent maid, using him to slake his unnatural lusts.\" She grinned as his eyes widened in alarm. \"Calm down, baby. Alex has been making goo-goo eyes at Maria for months. I warned him away when she started to work for us, but I guess they're old enough to make their own decisions. And she isn't some defenseless girl who needs protection. I think they'll do well together.\"\n\n\"I hope so,\" he replied. \"No, don't,\" he said, as she began to replace her shirt and shorts with one of the oversized t-shirts she typically used as a nightie. He took her in his arms, his hands caressing her. One strayed low and gave a cheek a healthy squeeze. \"Want to have some fun?\" he asked.\n\nA hot kiss was the best answer she could give. They stood at the foot of the bed, their mouths casually exploring each other. Josh cupped her breasts, his hands knowing exactly the right places to touch her, and she felt her knees grow weak as his thumbs grazed the tips of her nipples. Lower down, his cock was hot and hard, a delightful heat on the skin of her belly.\n\nShe backed onto the bed, then dropped to all fours, her ass thrust provocatively upwards. The cool air of the room did nothing to dampen the fire in her flesh. She craned her neck around to look at Josh, her rear wiggling temptingly. \"Come on, lover boy. Or are you slowing down in your old age? You used to be able to go three or four times a night. You've been here for over a day and we've only screwed twice.\"\n\n\"Well, it was hard to get my cock up when you were yelling at me the last few months we were together,\" Joshua said agreeably. \"But now that nonsense is over, I might be able to give you a minute or two.\"\n\n\"Two minutes is not nearly enough,\" Rachel said, her lips drawn down in a pout. \"I need at least five.\"\n\n\"Three.\"\n\n\"Deal.\" She smiled to herself as Josh took up position behind her, his strong hands firm on her hips.\n\n\"No foreplay?\" he asked. \"I can wait, you know.\"\n\n\"I know,\" she said. \"That was always the best thing about you, baby. Well, second best,\" she amended, as she felt the tip of his cock at her entrance. \"You were always willing to wait until I was ready. But I'm ready now.\"\n\nGod, am I, she thought as he slipped deliciously into her, his shaft a bar of iron heat, stoking the fires of her need. Ever since Althea had merged with her, the time it took her body to prepare itself for sex had become ludicrously short. No sooner had Josh mentioned the possibility of lovemaking than her pussy had flooded with moisture, a warm ache spiraling throughout her body. She lowered her head and closed her eyes, concentrating on his wonderful hardness, the feel of his hands as they roamed over her.\n\n\"By the way, Venus,\" Josh said as he sank into her again, \"I like the tattoo.\" His hands left her flanks and settled on the small of her back, his thumbs stroking an area at the base of her spine.\n\n\"Wh-?\"\n\n~Quiet!~ Althea's voice interrupted her, quick and fierce. ~Don't say a thing. I'll explain later.~\n\n\"Thanks, baby,\" she said instead, her mind whirling. What was Josh talking about? She had never had a tattoo. The level at which she practiced law was far too high for her to endanger her reputation by getting a tattoo, or piercing, or any other body decoration.\n\nThen she forgot all about any mysterious tattoo. Josh had found the right angle, and his cock rubbed her sensitized clit on every stroke. Quicker than she could have possibly imagined, she found herself caught up in the throes of her climax, bucking wildly beneath him, her hips pounding back against her lover. She settled her face onto the bedspread and gasped as ripples of ecstasy shivered through her. In response, Josh slowed, his cock gently slipping in and out of her, waiting until her overstimulated body was ready for him again.\n\n~You know,~ Althea said, her voice musing, ~he really is quite a good lover. Especially when you consider you're the only woman he's ever been with.~\n\nWhat? Rachel was so surprised she nearly jumped out of bed. Only the lethargy brought on by her orgasm kept her in her prone position.\n\n~Didn't you know?~ Althea sounded amused. ~He came to your bed a virgin, Rachel.~\n\nRachel smiled. We promised each other we wouldn't talk about our previous boyfriends or girlfriends. She shuddered with pleasure as Josh began to thrust more vigorously into her. Poor boy. I thought he was afraid he was going to be compared to one of my boyfriends. Instead, he was trying to cover up his own inexperience. Absurdly, she found her eyes brimming with tears, remembering how careful he had been. How he let her take control. The way he lay flat on her bed in Blaisdell Hall as she sank onto his shaft for the first time.\n\n~Would you mind if I took him as a lover, once I am back in my body?~ Althea asked. Her voice was faintly wistful.\n\nI don't know, Rachel replied tartly. You would think that I would get first crack at you, seeing as how I've been generous enough to share my brain with an immortal sex goddess.\n\n~Not a goddess. Never think that. I don't want worship. What a pain in the ass that would be. And not the good kind, either. Rachel flushed as Althea presented her with a vision of what she had been hinting at. And if you think I will let my handmaiden not be my lover, you are deluded.~\n\nWell, that's all right then. Sure. See if you can get anywhere with Josh.\n\nUnaware of the way two women were deciding his future, Josh bent over her, his loving lips tracing the line of her spine. She raised up, letting his hands fill themselves with her breasts, then sank down until she was lying flat, Josh's stomach slapping into her rear as he thrust into her over and over again.\n\n\"Oh, honey,\" she sighed. \"That's lovely.\" She felt him begin to swell inside her, his cock thickening as the muscles tensed. \"Are you ready?\"\n\n\"Yes,\" he panted. \"Yes, yes, yes.\" Groaning, he spent himself inside her, then collapsed across her back. As soon as he stopped twitching, he pulled out and flopped onto the bed.\n\n\"Oh, look,\" he said in mock-surprise. \"You stayed conscious this time.\"\n\n\"Did I really pass out last night?\" she asked.\n\n\"Yep. I was kind of worried at first. But then you started to snore, so I figured you were all right.\"\n\nShe chuckled, deep in her chest. \"I love you,\" she said.\n\nHe blinked at her, as if surprised she felt the need to state the obvious. \"I love you, too.\"\n\nShe took a deep breath. \"So. Do you want to get married? Again?\"\n\nIn response, he gathered her in his arms, kissing her long and thoroughly. \"Yes. I do.\"\n\n\"Good.\" She dropped a hand to his crotch, finding his cock wet with their mingled juices. \"So, Josh,\" she said, stroking him, her hand wet and slippery on his shaft.\n\n\"Tell me a fantasy about your daughter.\"\n\n*****\n\nThe next day dawned warm and sunny, perfect for a cookout and the unofficial beginning of summer. Early in the afternoon Sarah barged into Alex's bedroom, where he was watching a movie on his flat-screen. She threw a computer printout on his desk and planted herself face-first onto his bed, muttering unpleasant words under her breath.\n\n\"Sure, Sarah,\" her brother said from his chair. \"Come on in. Make yourself comfortable. Don't bother knocking.\"\n\n\"The door was unlocked,\" she said, her voice muffled by the comforter. \"If you wanted privacy, you know how a lock works.\" Not bothering to look at Alex, she held up her fingers, demonstrating. \"You just grab it and turn.\"\n\nAlex frowned at her. \"So what crawled up your butt and died?\"\n\nShe pointed at the paper on the desk. \"Fucking Cordon Bleu isn't taking any more students. They're closing all their American locations.\"\n\n\"Closing?\" Alex's voice was incredulous. \"How does an entire chain of culinary schools close?\"\n\n\"They're a for-profit chain,\" Sarah growled. \"Apparently the profits weren't big enough. Or even there. Supposedly they were losing a crap-ton of money.\"\n\n\"So how badly is this going to screw up your plans?\"\n\nShe sighed and turned over onto her back. \"Not too badly. It's not as if we were talking about the real Cordon Bleu. The one in France. But the name still has...what do you call it?\"\n\n\"Mojo?\" Alex suggested.\n\nShe blew a raspberry at him, then snapped her fingers. \"Cachet. That's the word. People around here see that name and they think it's something special.\"\n\n\"So where will you go?\"\n\n\"Kendall College, I guess,\" she said. \"It's on the north side of the Loop,\" she continued, naming the area of downtown Chicago where most of the skyscrapers and multi-national corporations were located. \"I can ride in on the Burlington Northern out of Downers Grove. Then take the Blue Line up there. Or I could drive in if I can find parking. But I don't want to leave home yet,\" she said in a small voice. \"I'm not moving out.\n\n\"It's got the best culinary school in the area,\" she said in a firmer tone. \"Which means it's the best I can go to. Unless I want to move to some place like New York or Paris, and that's not happening. My French is good enough for high school. Not a French culinary school.\"\n\n\"Don't sell yourself short, Sarah,\" her brother said. His face was uncharacteristically tender. \"You're smart as hell. Besides,\" he said with a smile, \"if anyone can take down a bunch of snooty Frenchmen, it's you.\"\n\n\"Snooty?\"\n\n\"Snooty,\" he affirmed with a nod, grinning.\n\nSarah stared at him. \"What's wrong with you?\" she asked. \"You actually look...happy.\"\n\n\"No reason,\" he said, but he blushed and wouldn't meet her eyes.\n\n\"Oh my God,\" she said. \"You got laid, didn't you?\" She grinned as he shifted uncomfortably in his chair. \"Who was it? One of the girls in the play? What was the name of the girl you said was playing Desdemona? Lucy or Linda or something like that? You told me a couple of weeks ago you thought she was cute.\"\n\n\"No, not one of the girls at COD,\" he said.\n\n\"Well, who, then?\" she demanded, frustrated by his reticence. \"You haven't gone out with anyone for weeks. What did you do, knock on Maria's door and ask her to sleep with you?\n\n\"No,\" she said. \"No way.\" She glared as Alex looked away. \"You did, didn't you? Fuck!\" she yelled, suddenly frustrated beyond all endurance. \"Am I the only person in this entire fucking household who can't score? Mom and Dad are back together, and by the way they've been all lovey-dovey, we're going to be hip-deep in siblings in a couple of years.\"\n\n\"They're not-\" Alex started.\n\n\"And you,\" she said, her voice low and terrible. \"You score with the hot Latina maid you've been drooling over for the last three years. You all make me sick.\"\n\n\"Cheer up,\" her brother said. \"Mom told me she invited her intern for the cookout today. Maybe he'll be some total hottie you'll fall madly in love with.\"\n\n\"As if,\" she grumped. \"With my luck, he'll be some pasty-faced twerp with a law degree where his cock should be.\"\n\nAs if on cue, the doorbell rang. \"Can you get that, kids?\" came their mother's muffled voice from her bedroom. She and their father hadn't been seen since breakfast. \"We're a little bit...busy in here,\" she giggled.\n\n\"Disgusting,\" Sarah muttered. Heaving herself off the bed, she stomped down the stairs.\n\nBut the guest wasn't a hot intern. Instead, it proved to be Maria, smiling cheerfully and bearing gifts in the form of pasta salad and and a covered dish wrapped in a dishtowel which made Sarah's eyes water.\n\n\"What is that?\" she asked curiously. \"It smells wonderful. But spicy.\"\n\n\"It is a Honduran chicken and rice recipe,\" said Maria. She followed Sarah into the kitchen. \"Now that I finally have a place of my own, I can cook how I like, without other girls complaining that my food makes their eyes sting and their noses run. I'll leave it out here, if you don't mind. It's supposed to stay warm.\"\n\n\"What's in it?\" Sarah asked, her mind already looking for ways to incorporate the dish into other meals.\n\n\"Oh, lots of things. Chicken, rice, peppers, spices. I can give you the recipe, if you wish.\"\n\nCaught up in the eternal fascination of food, Sarah forgot her frustration.\n\n*****\n\nBy three in the afternoon, her parents finally emerged from the bedroom and Alex came downstairs. Sarah kept an eye on her older brother. She was happy for him, of course, despite her frustrated words earlier. She had watched, puzzled, as he had dated a series of women through high school and after, none of them seemingly able to win his heart. Her lips curved in a tender smile as he and Maria held hands at the dining room table, neither of them seemingly willing to be separated from the other.\n\n\"So what do we have, Pumpkin?\" said her father, coming up behind her.\n\n\"Brats and hot dogs,\" she said, trying to disguise the way her heart sped in his presence. \"And I'm going to start on the hamburgers.\" Suiting actions to words, she pulled a large package of burger out of the fridge and dumped it in a ceramic mixing bowl. \n\nJoshua made a face. \"I don't know why we bother with the dogs,\" he said. \"No one ever eats them.\"\n\n\"Daddy,\" she protested. \"It's traditional to eat leftover cow bits stuffed into a tube.\" She poured minced onions over the hamburger and cracked in an egg, then opened a bottle of Worcestershire Sauce to give the meat a kick.\n\nHe snorted. \"Lots of things are traditional, honey. Living in trees. Dying of cholera. Burning people for witchcraft. Doesn't mean they're good ideas.\" The doorbell rang and her mother called out that she would answer it.\n\nShe giggled at her father's dark humor and thrust her hands into the burger, mixing it thoroughly. \"Can you get me the big cutting board out of the cabinet, Daddy? I need someplace to put these until you boys are ready to start grilling.\"\n\nHer mother came into the kitchen trailed by a tall figure. \"Hey guys, I'd like you to meet Jeremy Edwards. He was my intern for the last few months at the firm.\"\n\nSarah turned to give a polite greeting, then froze as the man stepped into view. Suddenly she wished she had worn better clothes, that she wasn't wearing a ratty old Cubs hat, that her hands weren't greasy with fat and flecked with bits of raw hamburger. Wished that a previously undiscovered trapdoor would open in the floor and drop her into the basement.\n\nOh my fucking Christ he's gorgeous.\n\n*****\n\nThis concludes Book Three of 'The Succubus.' Please keep an eye out for Book Four, \"Bright Shadows,\" where Rachel and Althea visit Althea's body and make a new friend. But a terrifying enemy will appear. One that will put the future of Rachel and all her loved ones in danger."
    ],
    "authorname": "Glaze72",
    "tags": [
        "erotic couplings"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/idle-hands-ch-02-2"
}