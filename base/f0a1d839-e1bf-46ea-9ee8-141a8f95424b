{
    "title": "Nanny Sarah Pt. 03",
    "pages": [
        "This is an edited version of Nanny Sarah. Once again, a huge thank you to Bi_Cathy for helping proofread. Hopefully we've caught 99% of the typos now. \n\nThis is the third part of a three part story. Please read the other parts first. All characters in explicit scenes are over eighteen.\n\n*******\n\nSarah had been correct. As soon as the sky outside showed any hint of color a mop of curly hair bounced through the doorway and climbed up next to me. I was facing away, my arm wrapped around Sarah, who had turned in the night so I was spooning her.\n\nLittle hands shook my shoulder, making me roll over onto my back. \"Mommy, mommy.\"\n\n\"Hmm, what is it, sweetie?\" \n\n\"Why's Nanny Sarah in your bed?\"\n\nMy pulling my arm away caused Sarah to stir, rolling towards me and sliding her arm over my belly under the covers.\n\n\"S'matter?\"\n\n\"That alarm clock you mentioned is here. I think we're busted.\"\n\nSarah's eyes opened and she laid her head on my shoulder. \"Morning, Heidi.\"\n\n\"Good morning. Did you get scared last night?\"\n\n\"Hmm?\"\n\n\"Mommy only lets me sleep in here when I get scared of the thunder lightning.\" \n\n\"Oh.\" Sarah chuckled. \"No, honey, I wasn't scared. I'm going to be sleeping in here from now on, OK?\"\n\n\"Why?\"\n\nI decided to take over. \"Because, honey, when two adults love each other, sometimes they like to sleep in the same bed.\"\n\n\"Like Auntie Lauren and Uncle Rick?\"\n\n\"Uh-huh, just like that.\"\n\n\"So you love Nanny Sarah?\"\n\nI nodded. \"I do.\"\n\n\"And Nanny Sarah, you love my mommy?\"\n\n\"Yes, sweetheart, I love her very much.\"\n\nA tear began to form in Heidi's eye, her voice shaking like when she was trying to settle down from a tantrum. \"So are we a family?\"\n\nSarah pulled her arms out from under the covers and held them out, and Heidi wasted no time in clambering over me and into them. \"Oh, honey, of course we are.\"\n\nHeidi clutched at Sarah, sobbing. I put my arms around both my girls. \"Are you okay, Heidi?\"\n\n\"Yeah.\" She turned back to me, wiping her nose on the sleeve of her Elsa nightgown. \"They're happy tears.\"\n\nWe snuggled together in bed, the three of us, for another half an hour before I got up to take Heidi wash her face and brush her teeth. Sarah took the opportunity to sneak back to her room for some real clothes. By the time I had Heidi dressed the shower was running. \n\nBreakfast was well on the way when Sarah came down, and she slipped her arms around my waist as I stirred the eggs. \"Morning, sweetie.\"\n\n\"Hi. We need to get you really moved into our room today.\"\n\n\"Yeah. I thought about it yesterday while Heidi was at school, but, um, I wasn't sure about...\"\n\n\"About where to put things?\"\n\n\"Yeah. I didn't want to move your dad's stuff around. Y'know, without you here.\"\n\nI nodded my understanding while emptying the eggs into a white ceramic bowl. When mom died, dad had given all of her clothes to charity very quickly, saying she'd made him promise. So when I'd moved into the large bedroom after he died, I'd just taken over her mostly empty dresser and closet space. It had made me feel closer to her. Dad's stuff was still in his wardrobe and hanging in one corner of the walk-in closet. Eventually my stuff expanded to fill the empty spaces.\n\nI took a deep breath. \"Yeah, I guess it's time to get rid of my dad's clothes.\"\n\nI had some empty, folded up boxes in the attic left over from my move home, so by noon we had everything ready for Goodwill. Being a lawyer my dad had some really nice suits. Someone was going to score well with those.\n\nOver lunch at McAlister's we talked about the next step. Dad's wardrobe just wasn't appropriate for Sarah, although she insisted it would do. I wanted her to have something of her own.\n\nSo we went shopping. Heidi made a point of walking between us and holding both our hands \"Like Sylvia does.\" But whenever she'd run off to look at something I'd find my fingers intertwining with Sarah's without any conscious thought.\n\nI'd like to say I didn't notice the looks either, but that would be a lie. But every time I saw someone looking at us, I felt a great swell of defiance and, well, pride. I got it now, fully understanding why gay rights parades were called 'Pride Marches'. It wasn't about pride in being gay. It was about choosing to live your life openly, pursuing the relationship you wanted, loving whomever you chose to despite societal judgments. There is great pride in that.\n\nWe stopped at three different stores before finding our way to a little antique mall in Carmel. Sarah's face went all dreamy as soon as she saw it, something that hadn't happened all day. It had a lovely three-part mirror with the same number of large drawers on either side of a central vanity cut out. The info card said Spanish style, made from oak, and the matching bench style seat was included.\n\nSarah ran her fingers over the red-brown wood and along the framing. She reached for the price tag and her face fell. A sad smile followed and she took my hand to walk on. \n\nI didn't move. \"You like this one, don't you?\"\n\nSarah looked back over at the piece. \"Yeah, it's beautiful. But I can't afford it.\"\n\nI turned over the tag. Ouch, she wasn't kidding. But I hadn't bought a really nice item of furniture since dad died. \"Let's get it.\"\n\n\"Connie, no, it's...\"\n\n\"Sweetheart, we can afford this, if it's the one you want. Is it?\" I saw a little smile break and she turned back to the vanity. She did her due diligence, checking each of the drawers, the feet, everything. Finally satisfied she nodded to me. \n\n\"I really like it.\"\n\n\"Okay. I'm gonna go get the sales lady.\"\n\nBefore I could turn away Sarah pulled me into a hug. \"Thank you.\" The kiss she planted on my cheek made me all melty inside, and I couldn't keep the silly grin off my face as I moved away.\n\nFrom behind I heard Sarah talking to Heidi. \"We're going to get this one. Do you like it?\"\n\n\"Yeah, Nanny Sarah, it's pretty.\"\n\nHalf an hour later we'd paid and arranged for delivery and haul away of dad's old wardrobe. \n\nSince we hadn't had family pizza and a movie night yesterday we stopped at Napoli's and got a couple of brick oven pizzas on the way home. Heidi wanted 'Homeward Bound', so I grabbed a box of tissues before we snuggled up on the couch. Heidi sat on the floor, but my hand was firmly in Sarah's as she leaned against my shoulder. It was so lovely and I couldn't, in that moment, understand why there had ever been any distance between us.\n\nAbout half an hour into the movie Sarah's phone buzzed on the end table and she reached over to grab it. \"It's Linda.\"\n\nI whispered to Heidi that we needed to pause the movie as I grabbed the remote and hit the button. \n\n\"Hey, Linda. Yeah, let me put you on speaker.\" Sarah pressed the appropriate icon and set the phone on her leg. \n\n\"Okay, you're on. Connie's right here.\"\n\n\"Hi Linda.\" I called out as Heidi climbed up into my lap.\n\n\"Hi Connie! Just hoping you're all still coming up for Christmas.\"\n\nHeidi looked at me wide eyed. \"Who's that, mommy?\"\n\n\"Oh, is that Heidi? Hello!\"\n\nMy daughter looked at me shyly, and I whispered back. \"Go ahead, say 'Hi'.\"\n\n\"Hi.\"\n\nSarah smiled at her. \"Heidi, this is my brother's wife. She's inviting us all for Christmas. What do you think?\"\n\nHeidi's eyes went wide. \"Really?\"\n\n\"Yeah, I want you and your mommy and Sarah to all come.\"\n\nI ran my fingers through Heidi's curls. \"What do you say sweetie?\"\n\n\"Yeah! When do we go? Tomorrow?\"\n\nSarah laughed. \"No, but that's what we're going to figure out.\"\n\n\"Rebecca and Jonathan will be here the day after Christmas. Do you want to shoot for that?\"\n\nI nodded when Sarah looked at me. \"Sure, sounds good.\" She paused for a moment. \"Um, is mom going to be there?\"\n\n\"She's coming, but I doubt she'll stay the night. She knows you're all coming.\"\n\nI reached out and took my lover's hand. \"We have to see her sometime.\"\n\n\"Okay. Linda, well see you then.\" We'll give you a call Tuesday when we're on our way.\"\n\nEveryone said 'goodbye' and Linda disconnected. I restarted the movie, noting that Sarah was holding my hand a bit tighter.\n\nLater that night we were lying in bed, my fingers running gently through her hair. \"You've been quiet tonight. Worried about seeing your mom?\"\n\n\"I just don't want to drag you into my family's drama. Especially Heidi. She won't understand. I'm worried mom'll say something that'll upset her.\"\n\nI wiped a tear off her cheek. \"Sarah, as much as I hate to admit it, if we're going to be together, Heidi's going to have to get used to stuff like that. I remember what high school was like.\"\n\nSarah looked at me confused. No one had suspected I was gay in high school. Not even me.\n\n\"I mean Megan. She was six feet tall when we were freshmen. Played basketball and threw shot and discus. Even kept her hair cut short. People just assumed, and they gave her hell for it. Which is ironic, 'cause there's not a bi-curious bone in that girl's body.\"\n\nSarah chuckled. \"Really?\"\n\n\"Yeah. Absolutely, completely boy crazy, I swear. But guys wouldn't give her the time of day. It was hard, but she survived. Heidi'll get through it, too.\"\n\nSarah touched my cheek. \"Look at you, being all sensible.\"\n\n\"Well I've been hanging around this amazing woman. She makes me a better person, I think.\"\n\nHer cheeks colored and she grinned. \"How so?\"\n\n\"Well,\" I kissed her gently, \"I'm more relaxed.\" My lips feathered up her jaw line to her ear. \"I smile more.\" \n\nSarah gasped as I took her earlobe between my teeth. \"You do?\"\n\n\"Oh, yeah.\" My tongue traced the ridge of her ear, earning a delicious sigh. \"And, I'm much more of a giver.\"\n\n\"Wha? ... Oh!\"\n\nI slipped under the sheets, lifting up her pajama top and licking around her navel, where I knew she was ticklish. Laughing and squealing, she tried to push me away. I used the fact that her body was suddenly in motion to strip off her bottoms, and I let her push my head down towards its true goal. \n\nMy mouth found the sensitive skin of Sarah's inner thigh, and her giggles fast turned to moans. Up and down her legs I went until the smell of her arousal became too much, and I had to taste it. I never could get enough. \n\nSlowly I brought her to her full, and my love came like a waterfall, gushing into my mouth. When I was convinced I'd taken in the last drop of her essence I crawled out from under the covers and took her into my arms as she nuzzled into my neck.\n\n\"Mmm, I love you.\" A soft kiss. \"My darling.\"\n\nMy fingers ran gently through her hair as I pressed my lips to her forehead, hearing her purr as I did. \"My precious girl.\"\n\nA long day, combined with the relaxation of her orgasm had my lover asleep in my arms moments later. I just held her there, thanking God for being so good to me.\n\n***\n\nI'd thought I'd be more emotional when they took my dad's old wardrobe away, but it was okay. The new piece fit perfectly, and an hour later Sarah had the last of her stuff moved into our room. \n\nMy heart melted a little as Sarah sat at her vanity with Heidi in her lap, pretending to put on makeup. After dinner we sat in our living room watching the snow fall quietly outside, while our fire danced about and the lights on our tree chased each other around the ornaments. Carols filled the air as we sang along. A holiday at home with my family. \n\nChristmas morning dawned crisp and clear, with just enough snow to cover the ground. We'd told Heidi she couldn't come into our room until it was light out, so as soon as the sky even thought about beginning to brighten a mop of curly brown hair poked its accompanying head through our door.\n\n\"Mommy?\" It was a forced whisper, barely containing her excitement. \"Is it light enough yet?\"\n\nSarah rolled towards me and kissed me on the cheek. \"You know we're not getting any more sleep, right?\"\n\nI sighed. \"Yeah. Okay, munchkin, you can come in.\"\n\nHeidi bounded across the room, flumping onto the bed and bouncing up and down on her knees. \"It's Christmas! Time to get up!\"\n\n\"Okay, okay! You want to go see if Santa came?\" Heidi nodded her wide-eyed approval, sliding off the bed and racing out of the room. \"No opening anything until we come down!\" I heaved a sigh and settled back into my pillow, looking into Sarah's lovely green eyes.\n\n\"Merry Christmas, darling.\" The sound of her voice soothed away any irritation I might have been feeling over being up this early. \n\nI reached and stroked her hair. \"Merry Christmas. You're the best present ever.\n\nThe corner of her mouth twitched up. \"Really? You're in advertising and that's the best you can come up with?\"\n\n\"It's early.\" Her little grin said that excuse wasn't going to cut it. \"Alright, fine. How 'bout this?\" I pulled her to me and claimed her mouth with mine, rolling her gently onto her back. For a moment she giggled and tried to fight me, but then I felt her relax and sink into the kiss, which I made as deep as possible. I shifted my leg, drawing my thigh over her core, earning a moan and shudder. I pulled away a few inches.\n\n\"That better?\" Sarah nodded wordlessly, and I bent down to kiss her again. \n\n\"Santa came! Santa came! C'mon! Let's go!\" Heidi barged through the door and jumped up on the bed. \n\nI groaned and leaned into Sarah's neck, who patted me on the shoulder. \"Should I go make coffee?\"\n\n\"Oh, God, yes.\" I kissed her again and rolled away.\n\n\"Mommy! Get up!\"\n\n\"Heidi, go with Nanny Sarah, I'll be down in a minute.\"\n\nSarah tied off her robe and held out her hand. \"Let's go, munchkin.\" Heidi grabbed on and dragged her out into the hall and down the stairs.\n\nAs soon as they were gone I climbed out from the warmth of my bed and headed into the bathroom before wrapping myself in my own robe and sneaking into my office. In the bottom drawer of my desk was the box from Barrington's. I hadn't gotten it out while we'd been laying out the gifts last night. I wanted it to be a surprise.\n\nI slipped it into my nightgown's pocket and headed downstairs. I could hear Sarah bustling about in the kitchen and the whir of a coffee grinder, so I stole into the living room and slipped the box into her green stocking while no one was looking. \n\nHeidi was on her knees in front of the tree inspecting every package, looking for her name, which she could recognize now. I eased myself over to my favorite chair and set my phone to camera mode. A minute later a steaming mug of coffee appeared next to me, and I inhaled the aroma of java and vanilla creamer. \n\n\"Thank you, sweetie.\"\n\n\"You're welcome.\" Sarah sat on the sofa, tucking her legs underneath her in that adorable way she does. \"Shall we get started?\"\n\n\"Yeah, yeah!\" Heidi was bouncing up and down on her knees.\n\n\"Okay, go ahead.\"\n\nWith a squeal of four-year-old joy Heidi tore into the first package, and the bacchanalia was on. I'd let myself go a little overboard with presents, but other than my brother she didn't have aunts, uncles, or grandparents to pick up the slack.\n\nHer first score was a set of plastic 'My Little Pony' figures to go with the castle she'd gotten for her birthday. Several other brightly colored bits followed, including a couple of play sets from Uncle Reggie, but the real highlight was a good-sized box from Sarah, which contained an Easy-Bake oven. \n\nHeidi squealed and launched herself into Sarah's arms. \"Thank you! Thank you!\"\n\n\"You're welcome, sweetheart. Now, you're only allowed to use it when your mommy or I are with you, okay?\" Heidi bobbed her head quickly. \"Alright, now, can you give this to your mommy? It's for her.\"\n\n\"Thank you, honey.\" I took the package from my daughter. The tag read 'To the woman who keeps me warm at night. Love, Sarah.' She was smiling sweetly at me as a tear burned in my eye. I made myself tear off the wrapping, grinning widely as I pulled out a beautiful new winter coat. \n\nIt was black, with a faux-fur lined hood, and an attached belt that cinched it at the waist. So many coats I'd tried had looked odd because of my height, but as I held it up I knew this one would be long enough.\n\n\"Oh, Sarah, it's beautiful.\" I held it up to my body and smoothed it with my hand.\n\n\"Try it on.\" \n\nI nodded and stripped off my robe. The coat fit perfectly, and I could already tell it was going to be warm. \n\n\"You're going to need it when we go up to Michigan. It's not the tropical clime we have here.\"\n\nI glanced outside, where the three inches of snow we'd had two nights ago were barely hanging on in the thirty-eight-degree weather.\n\nSoon the packages were depleted. Sarah loved the Bath & Body Works basket, and 'Heidi' had gotten me a long woolen scarf in hues of blue, purple and red to add some color to my new coat.\n\nI jumped up to grab the stockings from the mantle, setting my own, which was heavier than I remembered, by my chair. I handed over Heidi's, who immediately and unceremoniously dumped its contents onto the carpet.\n\nSarah laughed, and my mind remarked to itself how much it loved that sound as I sat down next to her, still holding her green stocking. She looked at me with a happy, contented smile, which flowed away at the seriousness of my expression. I placed what I was holding in her lap.\n\n\"Merry Christmas, Sarah.\"\n\nShe looked down, drawing in a breath as she saw the blue box, which was now poking out the top. She drew it out almost reverently, her mouth open slightly.\n\n\"Oh, Connie.\" She ran her fingers over the soft covering before opening the clamshell and gasping, her hand over her mouth.\n\nThe lights from the Christmas tree danced over the precious metal and through the diamonds. There were two hearts, one simple, pure yellow gold, the other white gold inlaid with tiny diamonds all along the face. The two were interlocked, together for always. \n\n\"Do you like it?\"\n\n\"Darling, it's beautiful.\" She leaned over and kissed me, a tear in her eye. \n\nI brushed it away as it began to roll down her cheek. \"You're beautiful.\"\n\n\"What's that?\" Heidi poked her head over the coffee table. \n\n\"It's Nanny Sarah's necklace. You remember buying it?\"\n\n\"Uh-huh.\"\n\nSarah pulled the chain out of the box and turned her back to me before pulling her hair to the side and handing me the necklace. Once it was in place she faced me, one hand touching her new jewelry.\n\n\"What do you think?\"\n\n\"I think I love you.\"\n\n\"You better, you shouldn't give things like this to just anyone.\"\n\nWe laughed and kissed, and had a wonderful Christmas. Carols sounded through the house while Heidi played happily with her new loot. Soon the aroma of baking ham filled the air, along with mashed potatoes and several other assorted yummies. Heidi and Sarah even used Heidi's new oven to bake cookies for dessert. \n\nI read to my daughter from one of her new storybooks before retiring to our room, where Sarah was running a bath. \n\n\"Join me?\" She gave me a sweet pleading smile, as if there were any other place on earth I'd rather be.\n\nSoon we were relaxing in the water in our normal positions, her sitting between my legs, resting against me as my arms encircled her from behind. \n\nMy fingers caressed her skin as I whispered in her ear. \"Did you have a nice Christmas?\"\n\n\"I miss my dad, but yeah. Best in a long time. You?\"\n\n\"Same, at least since my mom died.\" I hugged her close. \"It's good to spend it with family.\"\n\nWe sat like that for a few minutes, but soon I could feel Sarah's energy change.\n\n\"You okay?\"\n\n\"Yeah, um.\" She held my arms tightly, almost possessively. \"I need to ask you, or tell you something. But I don't want you to take it wrong.\"\n\n\"Oh, God, what'd I do?\"\n\nSarah gave a nervous laugh. \"No.\" She kissed the back of my hand, which made me feel better. \"I love my necklace, and I love the dresser you bought me. I just... I want you to know you don't have to buy me expensive things. I mean, I get you have money from your dad. But it's not why I'm with you. I need to know you believe that. 'Cause it's true.\"",
        "\"So you'd still love me even if I were poor?\"\n\n\"Don't joke about this, darling.\"\n\nI held her close. \"Ok, sorry.\" I took a deep breath. \"When I saw what my dad's estate was worth, I almost choked. I've never really told anyone how much is there, not even Lauren.\"\n\n\"It's okay, I don't need to know the details.\"\n\n\"Yes, you do. After the new year we'll go through it.\" I kissed her gently on the temple. \"Besides, if we end up like I'm hoping it'll all be yours, too.\"\n\n\"Connie, you don't have to do that.\"\n\n\"Yes, I do.\" I took her hand and slowly turned her in the tub until we were facing each other. \"I know we're waiting, but I intend to marry you, Sarah Peters. And when that happens I don't want there to be any 'mine' or 'yours', just 'ours'. My dad always told me to never marry anyone, well okay, he said never marry a man, but we'll forgive him for that, never marry anyone who doesn't make you feel completely safe.\n\n\"My mom was a housewife, mostly. She handled the small bills and things, but dad did all the investments and stuff. But he always made sure mom was aware of everything, and her name was always next to his. The house, all the accounts, everything. It made her feel safe. I want that for us.\"\n\nThe soft smile on Sarah's face warmed my heart. She got onto her knees, her body rising out of the water, and leaned forward until she was inches from my face. \"Connie, do I make you feel safe?\"\n\nMy voice wasn't steady, but I was able to whisper that she did. \"Yes. Safe and whole, and happy. So, so happy.\"\n\nSarah gave me a slow, soft kiss. \"Good. Stand up for me, my darling.\"\n\nI complied, shivering as the cool air came in contact with my body. Sarah rose up and kissed my belly, and I responded with a little coo as I caressed the side of her head. My arousal had been at a low simmer since I'd climbed into the tub with Sarah, but seeing her stare up at me those glorious eyes, feeling her kisses drop steadily lower, well, my lust came quickly to a raging boil.\n\nFinally, our eyes still locked together, my lover pulled my clit into her mouth. I felt a hand slide along my leg to my foot, dipping under the sole and lifting and setting it on the edge of the tub.\n\nHer tongue began to bathe my nub while her mouth continued that delicious suction. I began to gasp and moan, never looking away. She moved her head left and right, making me cry out as pleasure rocketed through my body.\n\nMy legs began to shake as my orgasm approached, Sarah wrapping her arms around me as she continued her mercilessly glorious assault on my clit.\n\nFinally, my moans became cries as waves of bliss flowed out from my sex. My hand shot out to the wall to keep my balance.\n\nSarah's ministrations kept time with each pulse of pleasure, intensifying them wonderfully. As my orgasm subsided her lips traveled back up my body, and I helped her to her feet so I could get a kiss, my hands sliding over her wet back as our tongues caressed each other.\n\nWe stepped out of the tub and dried each other slowly before walking naked to our bed, arms wrapped around waists.\n\nI pulled back the covers, letting Sarah climb in, her eyes wide with anticipation as I joined her. I pressed my lips to hers, covering her with my body as our tongues moved gently against each other. \n\nAfter a few lovely moments my mouth moved to her ear, and then down her sensitive neck. Sarah cooed and lifted her chin, giving me full access. I suckled there for a long moment, but I didn't want to leave a mark just before visiting her family, so I continued on my journey south. As my lips crossed over her collarbone I scooted down her body, pulling the covers over my head, creating a little world that contained only me and Sarah's gorgeous body, my own private wonderland.\n\nI worshipped her beautiful breasts, loving the distant sighs and gasps as I nibbled and sucked on each one in turn.\n\nI moved my body further, letting the scent of her arousal fill me as I worked the skin of her thighs. Oh, god, she smelled amazing, and my mouth was watering as I pushed her legs apart and my tongue dove into her center. \n\nIt was a feast for all five senses. The way her flower bloomed for me as she spread her legs, the soft, happy sounds of pleasure that drifted from above the covers. The musky and rich aroma of her arousal, intensifying her delicious, heady taste, the slickness of her sex on my lips and the softness of her skin as my hands played over her stomach and breasts.\n\nI luxuriated in my lover; my sole happiness was bringing her to higher and higher levels of bliss. A loud moan sounded from above me as I slipped a finger deep into her vagina. My tongue played up and down her labia, teasing her little pearl at the top with each pass. I brought her to the edge, and held her there until her body was trembling.\n\n\"Please, Connie, please, just a little more, just a little, please, darling.\" Sarah begged and babbled, and soon I couldn't take anymore. My lips clamped down on her clit, flicking and sucking as I added a second finger to her pussy and began tweaking a nipple.\n\nHer pleas became a cry as she stiffened for a glorious moment before the spasms of her orgasm claimed her. I relished the fresh flow of her nectar before slowing my assault. I kept at it though, until I had her well excited again.\n\nWhen I knew she was ready I pulled the covers off and rose up on my knees, straddling her left leg. I lifted her right calf up along my body to my shoulder. \n\nShuddering as my large clit slid along her thigh, I moved my pussy to hers. I'd seen something on the internet and I wanted to try it, but I admit I was nervous.\n\nMy outer lips touched hers. Sarah stared up at me wide-eyed, and I had a moment of panic.\n\n\"Is this okay?\"\n\n\"Oh, yeah.\" Sarah shifted her hips for a better angle, and my clit slipped between her labia and up against her own hard nub. We both gasped as it happened, intense pleasure shooting through my body. \n\nI began to move, rocking slowly, rubbing my pearl against her smaller one. It took a minute to get the rhythm going, but once we had it, wow, it was heaven. I was trapped beautifully between her outer lip and hood, reveling in the perfect, silky friction my clit was receiving with each grinding motion.\n\nSarah seemed to be enjoying it as well, with one hand thrown back against the headboard, using it as counter balance for each movement forward. The other gripped the sheets hard, her eyes closed while moans and whimpers issued steadily from her mouth.\n\nMy own orgasm built quickly, helped along in no small part by the sight of the most beautiful woman I knew writhing in ecstasy beneath me, her lovely breasts bouncing merrily on her chest as I rocked her back and forth. I was determined not to come before her. Suddenly I had a ridiculous flashback of the gang years ago, sitting around on Laura and Rick's patio. The topic had turned to sex, and the guys were jokingly elaborating on orgasm delaying techniques they used to make sex last longer. We girls thought that was funny, as women don't try to delay their orgasms. We're lucky to have them at all. \n\nBut here, now, I totally got it, and my mind whirled around to find something, anything to distract me from how fucking good this felt and to combat my increasing desire to melt into my own pleasure.\n\nRick had said he would try to name all the players currently on the Cubs roster, and Michael had indicated he'd try to recite scenes from old John Wayne movies verbatim. I couldn't do either of those, but there was one subject I'd become an unwitting expert on over the last few months. That's right, 'My Little Pony'. \n\nSo there I was, sliding my pussy against my partner's, desperately reciting names like Fluttershy, Pinkie Pie, and Twilight Sparkle in my head. Thank God I didn't have to do it for long, as Sara's eyes fluttered open soon after.\n\n\"Oh, God, Connie, that's perfect, I'm gonna, oh, OHH!\" She began to shake beneath me, and all control I had was lost. My own release overwhelmed my body.\n\nWe ground against each other delicious moment after delicious moment until finally I collapsed next to her. Our mouths joined and we kissed and held each other for a blessed eternity.\n\n\"God, Connie, that was amazing. Where'd you learn that?\"\n\n\"Off the interwebs. It's called tribbing.\" I tried to look and sound innocent, which only made Sarah giggle.\n\n\"I know what it's called, darling. I just...wow, I'm still shaking.\" She brushed her a tender hand over my cheek. \"You're full of surprises.\" \n\n\"Had, um, had you ... done that before?\"\n\n\"My girlfriend and I tried it once in college. It didn't go real well. It wasn't like that was.\"\n\n\"I saw some lesbians love it and some don't.\" I blushed a little. \"And I read it helps if one of you has a bigger clitoris, so, well...\" My cheeks were so red now they were tingling. \"It's finally good for something, I guess.\"\n\nSarah pulled me close \"I think it's good for a lot of things.\"\n\n\"It's ugly, the way it sticks out.\" Suddenly I was thirteen again, and Marci Schuyler was pointing at me in the middle school locker room after P.E. \"What the hell is that? Eww, that's gross!\" Tears formed in my eyes as I told Sarah about it.\n\nShe looked at me directly, kindness and love shining from her eyes. \"That's nonsense. You have a beautiful pussy, and I love it.\" My face screwed up and I turned away. She could tell I didn't believe her. I mean, hers was perfect, all pink and tucked away until she opened up. Mine was sloppy and gross. I was just starting to fight another tear when she reached out and turned my face back to hers. \n\n\"Connie, you're wonderful, and beautiful. Yeah, things stick out, but it's like when you were a kid and you went to an amusement park. When you'd get close you could see the roller coasters and the Ferris wheel, and you'd start to get excited?\" I nodded. \"Well that's what it's like when I see your pussy. I'm thinking, 'I get to lick there and suck on that and kiss you here'. Every part of you is beautiful to me, Connie. And I get to make you come. I love making you come.\"\n\nI laughed, tears burning in my eyes now. \"I love you.\"\n\n\"I know. I know you do. And I love you. All of you.\"\n\nWe laid there, arms and legs intertwined, sharing gentle kisses as the night closed in around us.\n\n***\n\nWe were on the road the next morning by ten. Sarah and I had risen early, trying to get our packing done before Heidi was up. We were about eighty percent of the way there when the munchkin and Charlie made their appearance.\n\nOnce finished I took her into her room and began helping her pick out clothes and filling up her purple backpack while Sarah showered and went down to get breakfast started. As soon as Heidi was ready I sent her downstairs while I showered and closed up our suitcases.\n\nOnce on the road I could feel the tension building slowly. Not about Sarah's sibs, of course. They and their spouses had been nothing but kind and welcoming. The issue was, of course, Sarah's mother.\n\nWe'd spoken with Matthew, an he'd told us again that it had been made clear to Maggie that we all would be coming and that she was welcome only if she remained civil.\n\nCivility wasn't generally the best one hoped for in a family Christmas, but maybe it was a place to start. I didn't want Sarah hurt, but I knew she was a big girl, and she could take it. Mostly I was worried about Heidi. She hadn't asked for this, and the thought it might blow back on her scared me silly. I know we'd talked about this, but future, theoretical bigotry was a lot easier to contemplate than the immediately presenting sort.\n\nWe stopped for a quick bite and potty break in Fort Wayne before crossing into Michigan. Almost on cue it started to snow, and I flipped on the four-wheel drive. \n\nThe added stress of bad weather did not help my nerves, and I was gripping the wheel pretty tight as we continued north. I heard a thump from the backseat. Heidi had fallen asleep, letting my tablet slip onto the floor, still playing 'Beauty and the Beast' to no one in particular. \n\nSarah must have seen me jump a little when I heard the noise.\n\n\"Hey, it's okay?\" Her hand came up around my shoulder and began to massage my neck, instantly making me feel better. \"It's gonna be fine. Let's put on some Christmas music.\"\n\nMoments later the soothing voice of Josh Groban was floating through the air, and I started to relax a bit. \"How are you not nervous?\"\n\n\"Who said I wasn't?\" \n\nThat made me giggle, and we held hands as we went down the road. The snow never really got heavy, and we made good time the rest of the way. Soon enough Sarah was directing me off the interstate and into a nice neighborhood of stone and brick houses.\n\n\"Turn right here. There, the fifth one down, with the Santa Claus in front.\" That didn't really narrow it down much, as many of the houses sported yard decorations.\n\n\"This one here?\"\n\n\"Yep. Looks like everyone's here already.\"\n\nI pulled into the driveway, which was a good length, parking behind a charcoal grey Mazda Crossover, which was sitting next to a white Buick sedan.\n\n\"That's Becca's SUV, and that's mom's car.\"\n\nI checked the clock; it was just before three. We weren't late, at least. Heidi started to stir. \"Are we there now.\"\n\n\"Yes, honey. You ready to go in?\"\n\nShe nodded. \"I have to go potty.\"\n\n\"Okay, let's go.\" I decided to forgo luggage for the moment, shivering as I stepped out into the cold December air, while fat, white snowflakes danced around me. I reached into the backseat to grab my coat, the new one Sarah had bought me. It was so warm.\n\nSarah unbuckled Heidi, lifting her out of her car seat and setting her on the pavement and zipping up her coat.\n\nThe path to the front door was shoveled and salted, and Heidi toddled along after us up to the door. Sarah rang the bell, and I heard little feet running and the door was pulled open by eight-year-old Benjamin. \"Aunt Sarah!\" He threw himself into a big hug. \n\nI saw Linda come around the corner. \"Don't keep them waiting on the porch! It's cold out.\" She bustled towards us. \"Come in, come in, let me take your coats.\"\n\nAs Linda fussed over us the two smaller Peters made their appearance. Mindy, the five-year-old, slammed into her aunt with a happy shriek, while her little brother Jonah toddled laughing behind.\n\nOnce hugs and kisses had been exchanged Linda spoke up. \"Say 'Hi' to your Aunt Connie, too.\" I received tentative hugs from Ben and Mindy, but Jonah stayed hidden behind his Aunt Sarah's leg. \n\nOf course, Heidi was doing the same thing with me, so I wasn't offended. I gently pulled her out from behind me and introduced the Peters' children, as well as Linda, who got down on one knee and held her arms out. \n\n\"Aren't you the prettiest thing? Will you give your aunt Linda a hug?\" Heidi looked up at me and I nodded. She stepped hesitantly forward and was wrapped up in the plump woman's matronly arms. Mindy seemed very excited to have someone close to her age to play with, and the two were happily chatting away as we made our way into the great room, where Matthew, Jonathan and Rebecca were watching football. The men rose with big smiles and I introduced Heidi. Heidi went right over to Rebecca, who was holding little Dara. There were hugs all around and I was just starting to relax when I heard Linda's voice from the kitchen. \n\n\"Mom, Sarah and Connie are here.\" Sarah's hand grabbed mine.\n\nMaggie stepped out of the kitchen and the air thickened. \"Ms. Walker.\"\n\n\"Merry Christmas, Mrs. Peters. The food smells wonderful.\"\n\n\"Thank you.\" She turned and looked at her daughter. \"Sarah, I could use your help with the twice-bakeds.\"\n\n\"Sure, mom.\" Sarah gave my hand a squeeze before letting go. A hateful scowl flashed across Maggie's face as her eyes flicked towards our handclasp. But Sarah didn't see it; she was looking up at me, keeping her voice low. \"You'll be okay?\"\n\n\"Of course. Go on.\" She smiled at me and turned to follow her mother, who'd already disappeared back into the kitchen.\n\nI sat down on the short end of their sectional, around the corner from Rebecca. Mindy had already dragged Heidi over to her play area and they were happily talking through her collection there. They seemed very content.\n\nRebecca reached over and patted my knee. \"Don't worry about mom, she'll come around. Eventually.\"\n\nI smiled and nodded my thanks and we chatted amiably while the increasingly delectable aromas continued to waft in from the kitchen.\n\nAbout twenty minutes later Linda called her husband in to carve the roast, which, unlike me at Thanksgiving, he looked eager to do. There was the whir of an electric knife and ten minutes later we were being called into the dining room. The long table was richly decorated with evergreen branches and candles. Santa Claus plates were set at three locations for the older kids, while the rest sported china with a holly berry motif.\n\nLinda pointed at three chairs on the far side. \"You, Heidi, and Sarah.\" Heidi's chair had a booster seat already in place.\n\nDinner was amazing. We had prime rib, twice-baked potatoes, green beans and Yorkshire pudding, which I'd never tried before but was amazing. Unfortunately, being on the receiving end of Maggie's sidelong glances and pointed disregard made it less enjoyable than it would have been otherwise.\n\nAfter half an hour I leaned back in my chair, stifling a very unladylike groan. It's the holidays. I'm allowed to eat too much, right? The volume at the table started to rise as people began to finish. \n\nMindy got up on her knees in her chair. \"Can we do presents now, Mommy?\"\n\nLinda smiled and shook her head. \"We have to clean up first, honey.\"\n\nThe baby monitor crackled to life, and Dara's fussing could be heard on the other end. Rebecca stood up. \"That's my cue. She'll be wanting her dinner too, now.\" Her hand trailed across her husband's shoulder, who reached up and squeezed it.\n\n\"You'll be okay?\"\n\nOf course, stay and help clear.\"\n\nShe walked away from the table, and Linda stood and dismissed the children to go play, Heidi going happily with them. Matthew, Jonathan, and I started clearing the table while the others set to the dishes.\n\nWe were almost finished clearing when a cry went up from the great room. Linda went in to see what was going on. \"It's probably just Jonah throwing a fit about something.\" She muttered as she went. A few minutes later the table was empty and Jonathan and Matthew went back in to catch the end of their game. I poked my head into the kitchen, where Sarah was washing dishes in the sink while Maggie packed away leftovers. \n\nI slipped beside Sarah, putting my hand on the small of her back, just above her apron string, making her smile up at me. \n\n\"Hey, sweetheart, do you have a wet rag? I'll wipe down the table.\"\n\n\"Sure.\" She reached into a nearby drawer and pulled one out. As she ran it under the faucet I glanced at Maggie, who was giving me the evil eye from the far counter.\n\nI'd really had enough of that over dinner, so when Sarah finished wringing out the rag and handed it to me I didn't hesitate in giving her a quick kiss on the lips.\n\nAs I pulled away I could see the sparkle in Sarah's eyes.\n\n\"Thanks for helping out, darling. I love you.\"\n\n\"Love you too, and you're welcome.\"\n\nWith that I went back to perform my promised chore. When I finished I sat down for a moment, which was when it started.\n\n\"I just don't know why you had to bring that woman to our family Christmas.\"\n\n\"Same reason Matthew brought Linda or Rebecca brought Jonathan. She's my partner, mom.\"\n\n\"Your brother and sister are married.\"\n\n\"Linda and Jonathan started coming to family holidays before they were married and you know it.\"\n\n\"But they were going to get married!\"\n\n\"And Connie and I aren't?\"\n\n\"Of course not! You can't marry a woman!\"\n\nI heard Sarah give an exasperated sigh. \"Mom, this is 2018, I think you'll find we can.\"",
        "\"But it won't mean anything! It takes more than a ceremony to make a marriage.\"\n\n\"You're right, it does. Tell me, mom, what did it mean when you married daddy, huh? I want to know.\"\n\n\"It meant we were going to start a family! Support each other! Who's going to do that? Who'll be the man in the family?\"\n\n\"Firstly, there won't be a man in the family. And we support each other just fine. And we are a family, and WHEN we get married that family's going to grow.\"\n\n\"It's not a family; it's an embarrassment!\" \n\n\"Embarrassment?\" I'm an embarrassment?!\" Sarah's voice was trembling with emotion now. \"Tell me, mom, is Jimmy Manfried still living in his mother's basement? How many kids does he have now, three? Has Patty Williams ever gotten clean? Still with that deadbeat of a husband? Did he ever find a job? But no, I find an amazing, successful person who loves me more than I ever thought anyone could, who's already planning a wonderful life together with me, and I'm an embarrassment because that incredible person doesn't have a penis?\"\n\nA small hand slipped into mine, and my daughter climbed into my lap.\n\n\"Are Nanny Sarah and her mommy fighting?\"\n\nI pulled Heidi close, my chin resting on her curly brown hair. \"Yes, honey, they are.\"\n\n\"Why?\"\n\nI remembered what Sarah had said. Better to be honest from the start. \"Sarah's mommy doesn't like that Nanny Sarah and I love each other.\"\n\n\"But why?\"\n\n\"Some people think only boys and girls should fall in love.\"\n\n\"I don't think that.\"\n\nI kissed my daughter on the head. \"That's good. Neither do I.\"\n\nThe argument blazed on for several more minutes before Maggie stomped out of the kitchen and into the dining room, where she stopped dead at the sight of Heidi and me. She was still flushed from yelling, but her expression seemed like an even mixture of anger and grief. Her eyes locked with Heidi's, whose lips were quivering in an attempt not to cry.\n\nMaggie's scowl cracked into a look of profound unhappiness before she strode out of the room and down the hall. \n\nI set Heidi down. \"Sweetie, I think Nanny Sarah might need a hug.\" Heidi wiped her tear off her cheek and nodded, running into the kitchen. I followed at a more sedate pace, entering to see Heidi lifted up, her legs wrapped around Sarah's waist and her head buried in Sarah's shoulder as my partner held her close.\n\nTears flowed from Sarah's eyes as she saw me. She held out a hand, asking me to join in the embrace. My arms slipped around my two precious girls. \"I love you, Sarah. It's going to be okay. Shh, shh, shh.\"\n\nI stroked her hair as she wept. After a few moments she pulled away, kissing me sweetly and setting Heidi down.\n\n\"Thank you for the hug, munchkin. Go play with Mindy while your mommy and I finish the dishes.\"\n\n\"Okay. Love you, Nanny Sarah.\"\n\n\"I love you, too.\" Heidi scampered off and Sarah wrapped her arms around me. \"I love you too.\"\n\nI held her close. \"Are you going to be okay?\"\n\n\"Yeah.\" She pulled away. \"Um, we still need to finish, and the china can't go in the dishwasher.\"\n\n\"Okay, you wash, I'll dry.\"\n\nIt was quite cathartic, doing a simple chore, almost like we were back at home. We'd found an easy rhythm when Linda joined us.\n\n\"Everything okay?\"\n\nSarah glanced over. \"Peachy. How much did you hear?\"\n\n\"Mostly just raised voices. I tried to keep the kids away.\" Linda picked up a few clean baking dishes and put them away. \"So, was it about what I think it was about?\"\n\n\"Naturally. Mom said Connie and I can't be a real family, and pretending was embarrassing to her.\"\n\n\"I'm sorry.\"\n\nWe continued with cleaning until it was finished, then made our way into the great room where presents were piled under the Christmas tree. I sat at one end of their long sectional, and Sarah eased in next to me. My arm went around her as she leaned against my shoulder, her legs tucking up underneath. Benjamin, Mindy, and Heidi were all fidgeting in front of the tree. \n\n\"You guys ready?\" Little heads bobbed eagerly. Only Jonah, still too young to truly understand what was going on, seemed less than enthused. \n\nLinda patted her husband on the knee. \"I'll go get your mom.\"\n\n\"No, I'll do it.\" He rose and walked purposefully from the room. We adults exchanged looks that said 'this should be interesting'. \n\nI kissed Sarah on the forehead, \"It's going to be fine.\"\n\n\"Yeah. Que sera, sera, right?\"\n\nI squeezed her tight and she snuggled closer. She didn't move away as her mother made her appearance. Maggie'd clearly been crying, and didn't even look at us as she took a seat on the other side of the room. \n\nMatthew's expression was tight as he sat in his easy chair. \"Okay, Ben, make sure everyone gets a present before you start opening them.\"\n\nBen gave the first package to his sister, and the second to Heidi. Jonah, sitting in his mother's lap, got a third. \n\nWe'd told Heidi that she wouldn't get as many presents as the other kids, and that we expected her not to cry about it. Overall she did fine, and gave both of her new aunts and uncles hugs and 'thank you's. The awkward moment came when she thanked Maggie for her nonexistent present. It wasn't Heidi's fault, and she hadn't done it to be mean. She had gotten three gifts, after all. She didn't understand two were from Matthew and Linda (Matthew had thrown in a pink Cubs hat).\n\nMaggie looked ready to burst into tears, but she was rescued by hugs and kisses from her grandchildren when they'd finished opening their multiple gifts.\n\nSarah and her sibs, by agreement, didn't exchange gifts, preferring, she'd said, to buy for the kids. Each did, along with their spouses, receive a gift from Maggie, though. Obviously, I wasn't included. Sarah received a lovely green knit sweater, which I could tell would look great on her. \n\nShe pulled it on over her blouse; lifting out the entwined heart necklace I'd given her so that it hung over the top.\n\nRebecca's eyes brightened. \"Ooh, where'd you get that?\" She handed baby Dara to her husband and leaned in for a closer look. \"That's lovely.\"\n\n\"My present from Connie. She's a hopeless romantic.\" Sarah blushed as both Mindy and Linda came to see. While they were oohing and aahing Heidi climbed into my lap clutching her new Fluttershy pony and Cubs hat pulled awkwardly over her curls. \n\n\"You okay, munchkin?\"\n\nHeidi nodded. \"Yeah. I like having a family.\"\n\n\"Me, too, sweetheart.\"\n\nIt wasn't long after that Maggie announced she was going to head home, which was an hour or so away. Matthew and Linda tried to convince her to stay, but she insisted. After bundling up she made her goodbyes. Heidi and I stood in the background as she hugged her children and grandchildren.\n\nFinally Sarah stepped forward and wrapped her mother in an embrace. \"I love you, mom.\"\n\nMaggie's face was an unreadable mask, but she did hug her daughter back. Heidi's hand slipped out of mine. I whispered her name, but she didn't turn around, sliding past Matthew and Mindy. As soon Sarah backed away Heidi ran forward and wrapped her arms around Maggie's waist.\n\nThe older woman's face went from shock to a nervous smile to a trembling frown. She gently reached down and touched Heidi's head, patting her several times.\"\n\nHeidi let her go and took a step or two back, reaching up and taking Sarah's hand, still looking at Maggie. \n\n\"I'm sorry you don't like us. I always wanted a grandma.\" She raised her arms and Sarah lifted her up onto her hip. \n\nMaggie's lip trembled, her eyes shining, and without another word she was gone into the night.\n\nThe rest of our visit was fun but uneventful. Heidi went ice-skating for the first time. I'd been a number of times when younger, and I'd basically lived my middle school years on my rollerblades. Sarah, she was just good at it.\n\nHeidi did really well, and in just fifteen minutes she was happily chasing Mindy and Benjamin around the middle of the rink, and she took her inevitable falls like a champ.\n\nWhen we left the next morning, it was hugs and smiles all around, with Heidi happily using 'Aunt' and 'Uncle' for all of the adults. Watching her sleep on the way home, clutching Fluttershy and Charlie together, while I held Sarah's hand as we talked, it had been the best Christmas since mom had died. And next year, it was gonna be better. \n\nNext year I was going to get to propose.\n\n***\n\nOur one last real 'coming out' was at New Year's. The three of us arrived for Susie's annual party a little after seven, with Sarah holding the huge pan of seven-layer dip she'd made and me holding the chips I'd gone all the way to the grocery store to buy. So we'd both contributed.\n\n\"Connie!\"\n\n\"Oh my God!\" I dropped the bag and my purse to accept the huge hug from Wendy. I lifted the smaller woman up for a moment before setting her down. \"You cut your hair!\"\n\n\"Yeah.\" She ran her hand through her much shortened chestnut brown bob. \"Mom cut. I promised Ramit I'd grow it out once Kyra grows up some.\"\n\n\"Oh, is she...?\"\n\n\"No, I left her with mom and dad tonight. One free evening!\" Wendy gave a huge grin. \"Yippee! Oh, wow! Is this Heidi?\"\n\nHeidi blushed and hid behind Sarah's leg. Wendy crouched down. \"You won't remember me sweetie. Last time I saw you, you were this big.\" She held her hands about twenty inches apart.\n\n\"Heidi, this is your Aunt Wendy, she and mommy were friends when we were in school.\"\n\n\"Hi.\" Heidi looked over at me. \"Friends like Auntie Lauren?\"\n\n\"Mm-hmm. We were all friends.\"\n\nWendy straightened up. \"She's beautiful.\" \n\n\"Thank you.\"\n\nWendy's gaze moved past me to Sarah, and then gave me a questioning look. \"Oh! Wendy, this is Sarah. Sarah, this is Wendy, my friend from Seattle.\"\n\nWendy said hello and took Sarah's dip as Susie came into the room to take our coats. The other addition to our normal party, Wendy's husband Ramit, was sitting at the kitchen table showing Megan and Lauren pictures on his phone as we entered.\n\nGiven the goofy expressions on my friend's faces, they were clearly looking at pictures of his and Wendy's daughter, Kyra. His rich bronze skin and impossibly black hair announced his Indian ancestry as we entered. \n\n\"Hey Ramit, this is Sarah.\" I made the reverse introduction as well, and Ramit shook her hand while Lauren stood up and gave me a hug, while Megan kept staring at the baby pictures. \n\n\"Ohh, I want one.\"\n\nI smirked at her. \"You know if you get pregnant the force'll make you ride a desk till she's born.\"\n\n\"Don't care. I want one.\"\n\nLauren patted Megan on the shoulder. \"I'm sure Sam will be happy to do his part.\" Everyone chuckled, and I looked over towards Susie. \n\n\"Hey, can we get everyone in here for a second?\" \n\n\"Sure, sweetie.\" She stuck her head down the stairs into Michael's man cave. \"Guys? Put it on pause and come up here a minute.\" I heard tromping of feet and soon Rick, Michael, and Sam joined us from the basement. \n\nMichael set his beer down. \"What's up, honey?\"\n\n\"Connie has something to say.\"\n\nAll eyes turned towards me, making the butterflies swirl in my stomach. But Sarah was there beside me, slipping her hand into mine, and I was able to speak. \"This probably is an open secret by now, but I wanted to make it officially official. Sarah and I are together, like a couple. I mean, not like a couple, but as a couple. We're, um...\"\n\nSarah's other hand took my arm and held it. \"Darling, I think they understand.\"\n\n\"Right. So that's it. Big news.\"\n\nMegan let out a whoop. \"I knew it! I told you something was going on.\"\n\nWendy wrapped me in another hug. Susie looked like someone had hit her over the head. The guys were just trying to play it cool and not seem too excited. If I ever figure out what it is about guys and lesbians I'll let you know.\n\n\"Wendy finally let me go. \"I'm so happy for you! How'd this happen?\"\n\nSarah and I accepted a few more hugs before we let Wendy sit us down at the table. I regaled everyone with our story, with Sarah chipping in important details as she felt appropriate. As I finished there were tears in my eyes, and Sarah leaned in and kissed my cheek. I turned, found her lips with mine and did the job properly.\n\nI broke away, whispering my love to my beautiful partner. I turned back to my friends, where both Wendy and Megan were staring at us with moony looks on their faces.\n\nWendy clapped her hands together. \"That's adorable. Not as adorable as Ramit and I, but still.\"\n\nSarah's eyes got big. \"Why, what happened with you guys?\"\n\nI laughed. \"They did a whole 'Dharma and Greg' thing.\"\n\n\"Seriously?\" Sarah leaned forward. \"Tell me, please?\"\n\nRamit looked at his bride, and she gestured for him to go ahead. \"Well, I was about to be engaged.\"\n\n\"What?\"\n\n\"Yeah, and I hadn't even met her yet. My parents, being traditional Indian parents, had been trying to arrange a marriage for me since birth. I, being a dutiful son, had been avoiding any woman they mentioned like the plague. But when I turned thirty my attitude changed, I guess. I was tired of coming home to an empty apartment, and my dating life was non-existent, so I broke down and said okay, fine. So they set up a meeting with a girl whose parents they knew. The weekend before it was supposed to happen a friend from work had a party, and I went, kind of as a last bash, you know?\"\n\nWendy linked her arm with her husband's. \"His friend was my downstairs neighbor, so I was there, too. He was just sitting off by himself, looking lonely. So I went over and kept him company for the rest of the night. \"\n\n\"And right through till morning.\"\n\n\"Yeah.\" Wendy reached up and lovingly stroked his hair. \"I remember watching him sleep in my bed, thinking he was the most beautiful thing I'd ever seen. He'd told me the whole story, and I wondered if the girl he was going to marry knew how stupidly lucky she was. I found myself imagining I were her. And then I had a crazy idea.\"\n\n\"She starts running a finger down my chest and goes, 'Y'know, your parents would stop pestering you if were already married'. So we went to Vegas. That was almost three years ago. We just had a baby in June. Best decision of my life.\"\n\nSarah shook her head, dumbfounded. \"And your parents?\"\n\n\"It took them a while to come around, but we're good.\" Ramit shrugged. \"The baby helped a lot.\"\n\nMegan, Lauren, and I just smiled. We'd heard it all before, of course. Megan took a sip from her cup. \"Tell her about coed naked Googling.\" \n\nWendy blushed. \"Oh, God. Yeah after the marriage proposal we spent the morning in bed Googling each other.\" \n\n\"Well, I had to establish her bona fides. I mean, anyone can say they're a second grade teacher.\"\n\n\"We looked up everything. Jobs, bank accounts, credit scores, debt statements. It was weirdly intimate.\" I stood up as everyone continued to talk. \"Sweetie, you want something to drink?\"\n\n\"Sure, I'll take a diet.\"\n\n\"Okay, anyone else?\" They all waved me away and I made my way to the kitchen, where Susie was fussing over a veggie tray. \n\n\"Hey, Suse.\"\n\nShe jumped a little. \"Connie, sorry, just gotta set this out.\" It was not her usual voice. I figured I should get to the bottom of this now.\n\n\"Susie, are you okay? Are we okay?\"\n\nShe didn't look at me. \"My parents are total homophobes, you know. I remember being scared I'd be gay when I grew up. I was like, six. I didn't even know what it meant, really. And then I started noticing boys, and I was so relieved. I wasn't one of 'them'. And none of my friends were, either. I was safe. Normal. It was a horrible thing to think, wasn't it? When I see it on the TV, a gay character, it still makes me uncomfortable. Why? I know it shouldn't. I thought I was better than that. Y'know?\" She turned to look at me, and there were tears in her eyes, something I don't think I'd ever seen before.\n\n\"Connie, we've been friends since we were five. Have I ever done anything or said anything that hurt you? If I did I'm so sorry.\"\n\n\"No Sweetie, no.\" I pulled her into a hug and she leaned on my shoulder for a moment. \n\nSniffling one she pulled away and looked me in the eye. \"I really like Sarah, she's nice, and it's good to see you so happy.\" She looked at the tearstain on my blouse and tried to wipe it away before nodding and patting me on the shoulder. \"One of my best friends is a lesbian. Do you know how much more hip that makes me? Lesbianism is very in right now.\"\n\nWe both laughed, and went back to rejoin the rest of the group. We watched the ball drop, and I kissed Sarah at midnight, just like the other couples. It was a promise we'd be doing it again next year. For the first time in my life, I knew the new year would be wonderful.\n\n***\n\nAs winter went on we settled into a routine. One thing I started immediately was date nights with Sarah. Every other week Lauren and Rick would watch Heidi, and on the off weeks we'd take Sylvia and little Joseph so their parents could have the same opportunity.\n\nHeidi had begged to go ice-skating again, so we did that several more times. Along with helping Megan plan for her wedding, we almost didn't even notice it slipping into spring.\n\nAs Easter approached family drama reared its head again. Maggie wanted to host the family, but it quickly became clear that I was not welcome in her home, which led to a night of me holding Sarah while she cried.\n\nThe next evening saw a three-way Skype between Sarah, Matthew, and Rebecca.\n\n\"I'm so sorry, guys.\"\n\nMatthew's rich baritone cut her off. \"Stop it, sis. This is not your fault.\"\n\n\"That's right.\" Rebecca's beautiful face was wearing that impenetrable lawyer's mask. \"We're going to put the kibosh on this right now.\"\n\n\"What are you going to do? I mean...\"\n\nMatthew spoke up. \"I'm going to call her and tell her that if you and Connie aren't welcome, we aren't coming. \n\n\"But if you don't go to mom's, what'll you do?\"\n\nI sat down in a chair nearby. \"Sweetie? Why don't you invite them all here?\n\nSarah's eyes lit up and she mouthed \"Really?\"\n\nI nodded. \"Of course.\"\n\nSarah scooted over and patted the couch, so I slid in behind her. \"Hi everyone. If you want, everyone could come here. We'd be happy to have you.\"\n\n\"That sounds great, Connie.\" Rebecca nodded in agreement with her brother.\n\n\"Yeah, we can check out Sarah's new digs, and all.\"\n\n\"And mom?\"\n\nBoth of them looked expectantly at Sarah, who in turn looked at me. \"What do you think?\"\n\n\"Invite her. If she comes, that's great. If not...\" I shrugged my shoulder. \"Hopefully she will.\"\n\nRebecca smirked. \"Who gets to tell her?\"\n\nMatthew nodded. \"I will. I'm the oldest.\"\n\n\"My hero.\"\n\nAfter saying her goodbyes and closing the laptop Sarah leaned back onto my shoulder. \"Thank you.\"\n\n\"For what?\"\n\n\"For letting everyone come over at Easter.\"\n\nI pulled away so I could I look into her eyes. \"Sarah, sweetheart, this is your home, as much as it's mine or Heidi's. Your family's always welcome.\"\n\n\"I know.\" She dropped her head. \"I'm just sorry there's so much drama. And my job was to make your life simpler.\"\n\nI pulled her to me and kissed her hair. \"These have been the most wonderful months of my life, with you here.\" I pulled her close. \"And I'd go through any amount of drama to be with you. Any amount.\"\n\nSarah held me tight and sniffed once. \"I love you.\"\n\n\"I know, and I love you.\" I held for a few moments longer before standing. I reached out, and after Sarah took my hand I guided her to her feet. \"Let's go to bed.\"\n\nI moved deliberately toward the stairs, still holding Sarah's hand. She was a step behind me as we ascended, so I let my hips sway with each step. I was still wearing my slacks from work, which I knew showed off my backside quite well. Sarah's breath quickened as we walked, making me tingle inside. The woman just made me feel beautiful, one of the many things I loved about her,\n\nAs we entered our room I let go of her and turned to close the door. I slowly rotated back around and began to unbutton my silk blouse. Sarah sat down on the edge of the bed, eyes wide as saucers.",
        "My top fell to the floor, and I reached behind my back and undid my bra. I stepped forward and Sarah reached out to touch me, but I gently pushed her hand away, wagging a finger in front of me. \n\n\"No, no. No touching, not yet.\" Sarah grinned and sat back while I unfastened my dark gray slacks, pushing them down over my hips. I crossed my arms below my breasts, pressing them up and out. \"Do you like these?\"\n\nSarah nodded, her eyes never leaving my chest. I came to the edge of the bed. \"If you want, you can touch them with your mouth only. Okay?\"\n\nA jerk of her head indicated she understood, and the wet heat of her mouth captured my right nipple and areola. A sigh escaped my lips as she worked me with her tongue and teeth, and I had to really concentrate to remember why I was having her do this. \n\n\"Don't stop, okay? Promise?\" She hummed an affirmative without breaking contact. \"Good.\" I leaned in close to her ear. \"I love you Sarah Peters. Every day I fall more in love with you. You are beautiful beyond words. Your kindness, the way you give to our family, you're good to us.\"\n\n\"Con...\"\n\n\"No, no, don't stop. Just listen.\" She moved to my other breast, and I ran my fingers through her hair as I continued. \"I'd give anything to be with you, risk anything so we could be together. We are a family, you and me and Heidi, now and forever. I love you, Sarah. Always.\"\n\nWith that my breast popped free from her mouth and her head rested against my chest. I pulled her arms around me, lifted her chin, and kissed my love with everything I was worth. I felt Sarah melt into our embrace, holding me desperately. The more I learned about her the more I understood how hard it was for her to give herself over to that place where she wasn't a daughter, or a nanny, or even a partner, where instead she was just a lover.\n\nBut it was getting easier for her. And that meant the world to me.\n\nI pulled her blouse and tank top free from her skirt, and her arms went instinctively over her head so I could remove them. Off they went, followed by her bra. We kissed again, this time skin against skin, her soft breasts pressing into mine, which was heaven.\n\nI reached down and unbuckled her skirt, and she flopped over onto her back, raising her hips so she could push it off. Taking advantage of her vulnerable position I climbed onto the bed and covered her body with mine. My lips found hers, and I cupped the side of her face with my hand. I ran my fingers down her cheek and over her neck, past her shoulder, earning an adorable little squeal at her ticklish underarm. Further down I went, never breaking the kiss, until my fingertips traced over the waistband of her panties. \n\nI pulled my mouth away a few inches, looking deeply into her eyes as I caressed her. Her green depths shone with lust, and she shivered from head to toe as my fingers slid under the silky material. Her mouth opened in a silent moan as my middle digit slipped between her outer lips, seeking her core, where Sarah's delicious nectar was already flowing. I drew some up to her hood, her folds opening for me as I did.\n\nBack and forth my fingers went, teasing, stroking. I dipped a finger into her, just a knuckle length, earning a gasp. A quick kiss and I was back to gazing into the perfect eyes, which were now awash with pleasure.\n\nSlowly I stoked the fire, spending time in every place I knew she loved. I watched, enraptured, as she drew closer and closer to the edge. The sounds she made were the key and I'd spent the last four months learning them well.\n\nMy middle finger slipped deep inside her, earning a long winded 'ooh'! A second joined the first and they began to alternately tap and caress that special place inside her. Sarah's breath began to hitch, shudders echoing through her body as I held her, her eyes both begging for release, and trusting that I would give it to her.\n\nMy thumb circled her clit once, then twice, then a series of times, faster and faster until my precious girl stiffened before coming apart in my arms. \n\nI held her close as she came, screaming her bliss into my shoulder. All the while I continued to whisper sweet truths of my love in her ear.\n\nAs the trembling subsided our lips found each other, and our kiss was deep and sweet. As it finally ended the pure love and adoration shining from her emerald eyes shattered my heart. How could I be worthy of that?\"\n\n\"Was that nice?\"\n\nHer eyes never left mine. \"Uh-huh.\"\n\n\"Do you want another?\"\n\nThe most adorable shy smile spread across her face as she nodded. \"Yeah.\"\n\nI kissed her soundly before moving my lips to her neck, then continuing down over her collarbone, taking a few minutes to worship each beautiful breast as I passed, but that was not my goal. The smell of her arousal and release still hung heavy in the room, and I wanted, no, needed, to taste it directly from the source.\n\nI kissed over the softness of her belly, where I know someday she would carry our children. Down further I nuzzled into the hollow where leg met her hip, eliciting a squeal. I gently suckled the soft flesh of her inner thigh, making her squeals turn to moans as her legs spread in anticipation. I stripped off her panties, and her sex blossomed, pink and beautiful and glistening with her arousal, but I wanted this to last.\n\nBack down her leg I went before kissing her outer lips, then blowing gently as I passed over her core. Another peck on the labia and back up her other thigh.\n\n\"Please, darling, please.\"\n\nI didn't answer, instead lazily trailing my tongue in spiraling patterns down over her creamy skin. Finally reaching her core again I feathered my lips from top to bottom, over her very swollen labia. Sarah gave a long moan and settled back into the soft bedding, her hips lifting slightly in preparation for the gift I was about to give her. \n\nI flattened my tongue and took one long lick from Sarah's perineum, over her vaginal opening, through the depths of her cleft and over her hood, feeling the swollen bump underneath. \n\nSarah gave a long, deep sigh, lifting and pushing her hips forward to meet my attentions. I let the taste of her fill me, and it was my turn to shudder in ecstasy. Setting aside being a mom to Heidi, there was literally nothing I enjoyed more than what I was doing right now. I loved the flavor of her, the feel of her in my mouth. Combined with the knowledge that I was giving pleasure to the most incredible woman I'd ever known, it was pure, soul-filling joy.\n\nSo I set to it. In and out I dipped my tongue as deep as possible into her canal, being sure to ring the entrance each time I pushed in or withdrew. A few thrusts and Sarah was rolling her hips in time with my intrusions. I pulled my tongue out and licked up through her slit down and back, not reaching her little nubbin, but coming closer and closer each time.\n\nI glanced up to be sure it had finally come out to play before running my tongue gently around her pearl, which caused an adorable coo from the top of the bed. If I could read perfect strangers in a focus group I could damn well learn how my girlfriend liked to be loved, and I'd paid close attention over the last few months. \n\nI moved my tongue in lazy circles, feathering over the top and caressing gently. Her hips rolled in rhythm with my ministrations, a sure sign I was doing well.\n\nSarah's breathing switched from low moans to hitching gasps as I increased the intensity, tightening the circle so more stimulation focused on the clit itself. I started throwing in a few more flicks as well, each earning a full body shudder.\n\nI brought her to the edge and held her there. \"A little more, please darling. I'm so close, oh, so, so close ... Oh, God!\" Hearing the pleading in my lover's voice was more than I could take, so I sucked her pearl into my mouth, lashing it over and over with my tongue. Her pleas became screams of pleasure as her release coated my face, and I greedily swallowed it down. But even then I kept the stimulation, attempting to give her every second of bliss possible.\n\nWhen her orgasm finally subsided she relaxed back into the pillow, holding her arms out weakly towards me. I climbed into them, pulling the covers around us as I did. \n\n\"Connie, why are you so good to me?\"\n\nI kissed my love gently on the mouth. She never drew away when I tasted of her something I found so erotic. \"Because you deserve it. Because you're the incredible woman I've ever met. Mostly because I love you.\"\n\nHer eyes teared up, but I kissed the drops away as she whispered her love back to me. I lay there and held her close, drifting finally into dreamland.\n\n***\n\nOn Good Friday, Sarah texted me around one-thirty that her brother and family had arrived. I turned back to the account on which I was working. Five minutes of staring at it convinced me that my brain was mush, and further attempts at productivity would be futile. Half the office was already gone for the holiday weekend. I might as well join them.\n\nI closed the garage door behind me and set my bags down on the counter in the mudroom. The noise was already evident, with happy voices drifting in from the living room.\n\nMindy, Heidi, and little Jonah were hip deep in stuffed animals over in Heidi's play area, while Benjamin and his father were hooking something to our TV. Linda and Sarah were chatting on the couch.\n\nI just took in the scene for a moment. The sight of Heidi happy, and Sarah too, the sounds of children playing, it was all wonderful.\n\n\"Hey everybody.\"\n\n\"Mommy!\" Heidi jumped up and threw herself into my normal welcome home hug.\n\nWhat I wasn't expecting was Mindy wrapping her arms around my waist. \"Hi, Aunt Connie.\"\n\nBenjamin even came over and hugged me in a more sedate, eight-year-old boy sort of way. Jonah smiled at me, but wasn't brave enough to come over.\n\nI set Heidi down and went over to sit next to Sarah. Even with her family there her eyes sparkled to see me, and she showed no hesitation in sharing our normal kiss.\n\nAll in all it was a terrific afternoon. Matthew and Ben got his video game system set up, and everyone took turns doing that silly dancing game, whatever it's called (yes, even me).\n\nPizzas were ordered so no one had to cook, and my favorite moment came when Jonah, quite without invitation, crawled up into my lap with a book.\n\n\"Batman, Aunt Connie. Na-na-na-nana-nana ....\" He held out his Batman book, trying to sing the little theme song, which was adorable. So I read to him, and he cuddled into my lap. He was never shy around me again.\n\nRebecca and Jonathan arrived just before ten, and everyone went to bed shortly after, with Heidi announcing that she and Mindy were going to share her room. \n\nFaces were washed, teeth brushed, and finally everyone was settled, and I was holding Sarah under the covers of our bed. \n\nShe kissed my cheek and slid her arm under my breasts. \"I love having the house full.\" \n\nI smiled and nuzzled into her hair. \"So Heidi and I aren't enough for you?\"\n\n\"That's not what I meant.\" She buried her face in my shoulder, tickling my skin with her lips, making me squeal and push her away. We ended up on our sides, facing each other. My fingers played over the silk of her top before running down over the swell of her hip.\n\n\"I know what you mean. It's been empty for so long.\" I pulled her close and kissed her deeply. \"And when we get married, we can fill it up some more.\"\n\n\"I ... I'd really like that.\"\n\n\"As long as you're with me, I would too.\"\n\n***\n\nBreakfast Saturday morning was an exercise in organized chaos. Sarah and I had extended our table with both leaves, but it was still tight with eleven people. Granted, five on them were under the age of ten, but still.\n\nUnfortunately it was a rainy morning, so our idea of going to White River was in jeopardy. The children's museum was a solid back-up, but we were going to leave the final decision for a few hours. \n\nAs we were starting to think about getting ready to head out, the doorbell rang.\n\nI stood up. \"I'll get it.\" I walked into the foyer, my jaw dropping when I saw who was standing on the other side of the glass.\n\nI opened the door. \"Mrs. Peters! Please come in.\"\n\n\"Ms. Walker, I'm sorry. Could I speak with you?\"\n\n\"Sure, come on inside, we can ....\"\n\n\"No, I ... Is there somewhere we could go? I would like some privacy.\"\n\n\"Mom?!\" Sarah had come to check on me, and her mouth was hanging open as I turned towards her.\n\n\"Hi, honey.\" Maggie held up her hands. \"Please don't tell everyone I'm here. I ... uh ... may I borrow your partner for half an hour?\" She hesitated slightly over the word 'partner', but she got through it. The fact that it was the first time she'd ever acknowledged our relationship without sneering contempt wasn't lost on either of us.\n\n\"Uh, sure, yeah. You okay, darling?\"\n\nI nodded, still feeling a little like I was in an episode of 'The Twilight Zone'.\n\n\"There's a coffee shop a couple of blocks from here. Would that be private enough?\"\n\nMaggie nodded and walked back out to the driveway. Sarah was now standing next to me, staring after her. I shrugged. \"Maybe she's going to try to buy me off?\"\n\nSarah laughed and kissed me hard and deep, one hand running up into my hair while the other caressed my ass. She even raised a leg and drew it slowly over my hip. \"Just a reminder why you shouldn't let her.\" She gave my behind a pinch and flashed a pair of playful eyes at me as turned. \"I love you.\"\n\nAll I could do was nod, my lips still tingling from the kiss. I gave myself a mental shake and followed Maggie out into the cool April morning. \n\nI drove, but Maggie insisted on buying the drinks. She handed me my caramel macchiato and sat across from me at one of the small tables. \n\nShe took a sip from her drink and drew a deep breath. \"I didn't like Linda the first time Matthew brought her home. She was timid, almost mousy around me. I didn't see the strength in her for a long time, and I behaved, um, poorly towards them. When I would complain about her Teddy would remind me that we don't always know what's best for our children. He asked me if I trusted my son. When I gave her a chance, I finally saw what Matthew does. Now I'm proud to have her in the family.\"\n\nShe paused and took another drink of her coffee. I didn't say anything. I certainly wasn't going to beg for her acceptance, but I'd be happy to help her get there, if that's even where she was headed.\n\nShe sighed deeply. \"I don't understand this ... relationship. It feels wrong. But when my friend's daughter married a black man, I felt the same way. My parents would have railed against it. But Teddy talked me through it. I wish he were here now. Maybe I'm just a hopeless, bigoted old woman.\" She looked at me, eyes shining with tears. \"But I don't want to lose any more family. I can't ... not anyone else.\"\n\nI leaned forward. \"You don't have to. And I don't think you're hopeless, not as long as you can ask the question. But why did you want to talk to me? Shouldn't Sarah be here for this?\"\n\n\"Probably, but I need to know a few things first.\" Maggie sighed and set down her drink. \"Leaving aside its ... unconventional ... nature, you might understand why I would be concerned that the balance of power is so skewed in this relationship.\"\n\nMy brow crinkled. \"Balance of power?\"\n\n\"Ms. Walker, you are a wealthy woman. Sarah does not have a degree, or any real experience in any field. She's entirely dependent on you. Can you understand how that frightens me?\"\n\nI thought for a second. \"I guess, from the outside. But I don't feel that way, like I have power over her.\"\n\n\"What are your intentions for this relationship, Ms. Walker?\"\n\nMy mouth hung open, and I tried to cover my discomfort by taking a sip of my coffee. \"I'm sorry?\"\n\n\"Your intentions. What do you want out of this relationship?\"\n\nImages floated in front of my mind's eye. The sight of Sarah in my doorway for the first time, seeing her play with Heidi, how beautiful she was in her gown at the Christmas party. How she looked after we made love.\n\n\"Everything. I want everything, Mrs. Peters. I want to marry your daughter, share my life with her. I want to give her the big family she's always wanted. I want to support her in anything she chooses to do.\"\n\n\"And if she just wants to be a housewife?\"\n\n\"Then I'll spend every day that God chooses to give us reminding her how much her family loves and cherishes her. Setting aside the 'unconventional' nature of our relationship, could you ask for more?\" I couldn't read her expression, but I had one more thing to say. \"I wouldn't be complete without her.\"\n\nMaggie sighed, shoulders slumping, her voice suddenly small and sad. \"I understand that feeling.\" She sat up straight, collecting herself. \"But you are not engaged yet.\" I shook my head. \"Why not?\"\n\n\"Sarah's making me wait.\" I gave her a brief account of that particular conversation, leaving out how naked we'd been at the time. Amazingly, it drew a smile from Maggie's face.\n\n\"That does sound like Sarah.\"\n\nI returned her grin and for a moment I felt we connected in our mutual love for a certain auburn-haired young woman. My phone chose that moment to beep.\n\nSarah -- Everything okay? Kids are getting anxious to go.\n\nMe - Everything's fine. Be home soon. Love you.\n\nMaggie cocked her head at me. \n\n\"Your daughter, funnily enough.\" I showed her the text.\n\n\"I'm keeping you from your plans. I'm sorry.\"\n\n\"We were going to White River Gardens and the zoo.\" It had stopped raining, and a check of my phone said we'd likely be able to get our excursion in. \"The kids would love it if you came.\"\n\n\"I'm not sure I'd be welcome.\"\n\nShe looked away, clearly fighting back her emotions, so I reached out and took her hand. \"You're always welcome. You mean the world to Sarah, and to me. Spend the day with us. Watch how Sarah and I treat each other, and do it with an open mind.\"\n\nShe looked me in the eye. \"I don't understand this relationship. But for the sake of my family I will try. Thank you, Ms. ... Connie.\"\n\nWhen we arrived home Maggie gave Sarah a warm hug. I saw Sarah tear up. \"I'm glad you're here, mom.\"\n\n\"So am I, sweetie. So am I.\"\n\nMatthew's kids were overjoyed to see her, of course, and she really was a changed woman around them. Heidi kept her distance, still wary from the arguments at Christmas.\n\nWe piled in vehicles and headed towards the zoo, where we had a marvelous day. We rode the train, saw the macaws and orangutans, bears and tigers, even watched the dolphins perform. All the kids, right down to nine-month-old Dara, were enraptured.\n\nI'll never forget Sarah, surrounded by butterflies in the butterfly garden, a look of girlish wonder on her face. I marvel how often I'm struck by Sarah's beauty, but that one was special.\n\nAfter four hours the kids were starting to flag, and Maggie steered them all into the gift shop. She even looked up at me and smiled. \"Time to buy their love.\" It made me laugh.\n\n\"Okay, everyone, pick out one thing, not too expensive.\" To his credit, Benjamin headed straight over to the books, while Mindy took Jonah by the hand and made a beeline to the stuffed animals. \n\nHeidi hovered around my leg. We'd told her as gently as possible not to expect anything from Maggie. Heidi was just starting to give me her 'can I have a toy' face when Maggie called to her. \"Heidi, sweetie, don't you want something?\"\n\nI almost responded that I'd take care of it when I felt Sarah's hand slip into mine. She mouthed \"It's okay\" and nodded. She was right of course; we shouldn't turn away a kind offer from Sarah's mom. \"Go ahead, munchkin.\"\n\nShe didn't need to be told twice, racing after Mindy to the plush animal bin.\n\nMindy and Heidi both decided on a dolphin, while Jonah was clutching his new ring-tailed lemur. Ben was thumbing through his new book on the great apes, and even Dara was happily burbling at a brightly colored stuffed macaw.",
        "Instead of cooking, we decided to invade the locale Chinese buffet, and Maggie insisted on helping Heidi with her plate. \n\n\"Connie, is there anything she can't have? Allergies, or such?\"\n\nI shook my head, marveling inwardly at the genuine civility in her tone. \"Nothing we've run into yet.\"\n\nSarah gave me half a smile and followed after them, while I stayed at the table holding baby Dara and watching our stuff, as well as everyone else. \n\nUp at the buffet Heidi was pointing excitedly at some of the items, and her nose crinkled and she shook her head at others. I saw Linda and Matthew fixing their little ones' plates, while Ben piled sesame chicken on his own. Jonathan's hand rested on Rebecca's back while they waited a moment to get at the soups. And I saw Sarah. Even among all those people, she seemed to shine. Her mother turned and said something to her, making her laugh. My new family, all because of her.\n\nOur petite, East Asian waitress carried over a high chair, cooing and saying something in Mandarin to Dara, who laughed and waved her arms at the strange but friendly face. I started to get her situated as people began to return. \n\nAcross the table Heidi snapped up one of the coveted spots next to Maggie, paying me no mind at all. Sarah's hand ran across my shoulders.\n\n\"Go get your plate, darling. I'll watch Dara.\" As I stood Sarah kissed me on the cheek, and I squeezed her hand. Turning to head toward the buffet I noticed Maggie watching us, but the look on her face was different. I don't think I'd call it approval, but it wasn't disgust, which was progress, I hope. I had told her to watch us after all. \n\nDinner passed with pleasant conversation and laughter. There was even a completely natural, civil request from Maggie to me to pass the soy sauce. \n\nThat evening I took a moment to marvel at my home, so full of life and laughter and love. I hadn't realized, I think, how lonely I'd been since dad had passed away. Sarah was down on the floor, playing animal upon animal with Heidi and Mindy and Maggie, all having a grand time. It was wonderful.\n\nAs I sat in bed that night, leaning against the headboard and reading, I could hear the sound of a hair dryer running in the bathroom. The noise stopped and Sarah emerged a moment later, wrapped in her terry cloth robe, her hair softly falling unencumbered around her shoulders.\n\nShe walked around to her side of the bed and opened her jewelry box, laying the necklace I'd given her inside. A drawer opened and closed in her nightstand.\n\n\"Thank you for being so good to my family, Connie.\"\n\nI set my book aside and looked at her. \"Honey, I told you, you don't have to thank me for that.\"\n\nShe pushed out her bottom lip into a pout, rotating her shoulders coyly as she undid her robe. \"You sure?\" The sash fell away, followed by the rest of the soft white material. Sarah was wearing nothing but her pair of pink panties, ones that usually went under one of her baby doll teddies. Tonight the teddy was noticeably missing, letting me get a good look at what lies beneath.\n\nShe crossed her arms under her perfect, pink tipped breasts, pushing her chest out towards me before turning to the side so I could admire her perfect silhouette. \"Cause I really don't mind, saying thank you.\" Her voice was soft, dripping sex. My eyes were wide as saucers, trying to drink her in. I scooted to the middle of the bed and lifted the covers, a dazzling smile appearing on Sarah's face as I did. She climbed in and our lips meant, tongues dancing to that special rhythm that was ours alone. Gently, she pushed me onto my back as my hands made free to run over her smooth skin and squeeze her firm behind.\n\nSarah held herself above me, letting her breasts hang down. I growled and slid lower, my mouth enveloping as much as I could. I suckled, earning a soft sigh from above.\n\nSarah pulled away, straddling me on her knees and sitting on my tummy. She ran a finger over my lips. \"Okay, so here are the rules.\" She caressed down the side of my face and over my neck. \"My mother is in the next room, so no noise. I get to do whatever I want to this beautiful body, but you have to stay quiet while I do. Okay?\"\n\nI nodded. We weren't terribly quiet during our lovemaking, even with Heidi in the house. She'd asked about it once, and Sarah had answered in her perfect, truthful, succinct way. \n\n\"That's just your mommy and I loving each other. You shouldn't listen, because it's private time, but if you do hear it just know that it means your mommy and I are making each other very happy, and love each other very much.\"\n\nGenius. But letting Sarah make love to me while I couldn't moan or sigh? That was going to be really hard. \n\nSarah lowered her mouth to my neck, and my little gasp was met with a stern \"Shh!\" and a finger over my lips. \n\nI bit down and lifted my chin up and to the side to give her better access. She took full advantage, and a small, logical part of me figured I was going to have a hickey in the morning, but it felt so good I didn't care. I loved it when Sarah kissed my neck, and normally I'd be moaning and sighing through it. Instead I was desperately trying to regulate my breathing while my hand played absentmindedly with her hair.\n\nFinally she moved down my throat to my chest, which while still lovely, was far less intense. A finger ran over the lacy, scooped neckline of my satin negligee. Gone were my frumpy nightgowns, going to bed had such a different connotation now. Sarah made me feel sexy, a totally novel experience. Before I'd been afraid of sex, so I'd dressed to avoid it. But now it was as natural as breathing.\n\nSarah pulled one of the shoulder straps down before pulling on my garment's side, baring one of my breasts. She circled the hard nipple with a finger a moment before capturing it with her mouth. I sighed, and she reached up again to cover my lips with her finger, but I pulled it into my mouth and sucked on it. She smiled up at me, before continuing what she'd been doing.\n\nAfter a few seconds she pulled her hand away, using it tweak my other nipple, and I floated in a sea of pleasure as she transitioned back and forth.\n\nSarah looked at me, her glorious green eyes flashing a mischievous gleam. \"So far so good. Can you keep it up?\"\n\n\"Oh, yeah.\"\n\n\"Really? We'll see.\" She began to kiss down my satin covered belly. I hadn't been sure how far she would take this, but as her hands slid up my bare calves and over my knees, pushing my negligee up as she went, I got an idea. I lifted my hips, letting her bunch the entirety of the garment around my waist before gently spreading my legs, and my pussy went from pleasantly aroused to dripping wet in about thirty seconds. \n\nI still didn't wear panties to bed when I didn't have to; something Sarah always loved taking advantage of. Gentle kisses feathered on my inner thigh, while a single digit trailed lazily through my moist heat, making me shudder as I dutifully stayed silent. \n\nUp and down the finger went, before circling my entrance several times and sliding inside. A second joined in and Sarah began alternating between caressing and tapping on my g-spot. I stuffed my hand in my mouth to stifle a moan. Sarah's face was directly over my clit, her warm breath making me beg for more contact.\n\n\"Please, sweetie, please.\" My voice was a forced whisper as I shook in my need for her. I thrust myself up towards the mouth I knew was so close.\n\n\"You're so beautiful, darling. How can I say no?\" And without stopping her work inside me, her tongue gave a further light caress over the length of my nubbin, making my head slam back into the pillows.\n\nI covered my mouth while Sarah gradually increased the stimulation, bathing my sex over and over. After a moment she pulled me into her mouth, and the force of her suction counterpointed with the tenderness of her fingers' gentle touches drove me toward the edge.\n\nBut Sarah knew me well, including exactly how to build me up. I should have known she wouldn't settle for a nice, quiet little orgasm. She wanted a soul-shaking screamer. And unfortunately for me (well, sort of), she could get it.\n\nShe held me expertly on the brink for an ungodly amount of time. \"Please, baby, please. I need to come, oh God, just a little harder.\" It was barely a whisper, and I don't think I could have been louder if I'd tried. It was wild. Normally when Sarah loved me I could just lose myself in the pleasure. But now I had to concentrate on being quiet, which meant I had to focus on every little feeling, making it that much more intense.\n\nSarah's emerald eyes sparkled at me over my body, and she wrapped her lips around my large clit, bathing it mercilessly with her tongue. Her fingers inside me also increased their urgency. I felt my bliss begin to take hold of me, so I reached out and grabbed Sarah's pillow, covering my face as I screamed out my joy. Ecstasy pulsed through ever nerve in my body.\n\nMy every limb was suddenly turned to Jell-O, so I just laid there while Sarah's tongue gently cleaned me up, causing some wickedly delicious aftershocks. A minute or so later my lover gently closed my legs and pulled my nightie back down before climbing up and pulling the pillow off my face. \n\n\"Hey, under there.\"\n\n\"Hi.\" My silly, satisfied smile beamed at her. I wrapped her in my arms as she snuggled in, kissing me sweetly. My taste lingered on lips, which I found incredibly erotic.\n\nShe ran a finger over my skin. \"I have a confession to make. When I was in high school I always had this fantasy, sneaking a girl home and making love to her while my parents were in the next room.\"\n\n\"Always happy to make your fantasies come true.\" I turned towards her. \"Want to hear one of mine?\" She nodded, and I booped her on the nose. \"Okay, close your eyes.\" As she obeyed I reached into my side table and pulled out my recently neglected little vibe. I didn't know why I hadn't used it on her before. I guess it just didn't seem necessary. But this was going to be fun.\n\n\"It's already come true, but I still think about it anyway.\" I rolled her onto her back, kissing her long and deep, before moving down her jaw line so I could whisper in her ear. \"Do you remember the day we met? You were wearing a green blouse and a brown skirt. You were beautiful beyond imagining. I remember you opened the curtains in your bedroom, and the sun shone in your hair, and you glowed like an angel.\n\n\"What I've never told you was that I thought about you that night.\" I flipped on the vibe and ran it around one of her areolas, making her jerk and shudder while I held her tight. \"I imagined you kissing my breasts, your tongue caressing my nipples.\" I flicked my toy over her tittie before pressing it down. Sarah bit her lip to suppress a moan. \n\n\"I pictured you moving down, your gentle lips on my belly.\" The vibe moved lower, ticking her navel. \"Then you spread my legs, and covered my sex with your mouth.\" I slipped my knee over hers, drawing her open and letting my toy slide under her panties and into her folds. Sarah gasped and bucked her hips against my hand. I covered her body with mine while she buried her head in the crook of my neck, arms tight around me.\n\n\"I can't tell how many nights I spent right here, touching myself while I dreamed of you. Every time you smiled, whenever you touched me my heart would soar, and I wanted you more and more.\" My lover was starting to shake, which meant she was close, so I backed off a little. \"I had no idea how deeply I would fall in love with you. And for all my dreams, they fell so far short of what being with you is truly like.\" I stepped up the pressure and I felt her tense.\n\nI kissed her cheek and temple. \"My beautiful, precious girl. Come for me, baby. I want you to feel so good.\"\n\nHer body shuddered and then began to jerk, her mouth clamped over the skin, and I could feel the cries of pleasure against my shoulder. As she floated back down I turned it off and tossed away the vibe so I could hold her with both arms.\n\nHer green eyes shone with tears, and her voice cracked with emotion. \"I love you so much.\"\n\n\"Oh, sweetie, I love you, too, always.\" I touched her face, wiping away a tear before we came together in a beautiful kiss. We each found our full one more time that night, legs entwined, gently moving against each other. We almost never broke the kiss.\n\n***\n\nMy alarm went off at six am, and I reached over and whacked it into submission. Why the hell was my alarm going off on a Sunday? I felt Sarah's head nestle against my shoulder, her arm sliding across my torso under my breasts. \n\nHer touch calmed me, and the sleep fog lifted. It was Easter, and we were all going to church.\n\nI hadn't been in a church since Silvia's christening. My dad's funeral had been held at the mortuary. Most Sundays we'd gone as a family until mom got sick. Dad just never showed any interest afterwards.\n\nI didn't hate God, or blame Him for my mom's disease or my dad's death. Those things just weren't in my nature, I guess. But He clearly didn't care about me, so why should I care about Him? So I didn't. I had always gently rebuffed Joan's many invitations to accompany her and Roger to church. Until yesterday, that is. Linda and Matthew had asked about it, so I'd called Joan, who was very excited about the whole prospect. Joan and Roger went to the early service at eight, so this Sunday I was up and in the shower at an ungodly hour, if you'll pardon the expression.\n\nBy half past seven we were piling into cars. I threw on one of my good business suits, while Sarah was beautiful in a flowing, floral dress that fell to mid-calf. She and Heidi had apparently been shopping the week before, as my daughter was adorable in a frilly white and pink dress and bonnet I'd never seen before.\n\nMindy was in pastel green while her brothers all sported ties and vests. The whole family looked great. Even Maggie looked pleasant in a conservative blue dress and hat.\n\nWhen we arrived I started to get nervous. Joan had said my being with Sarah wouldn't be a problem, but still. So I did what I always did when I felt anxious. I held Sarah's hand. \n\nAt the door we were greeted kindly by a bright-eyed old grey beard who handed us a bulletin. \"Welcome to Agape Church.\"\n\nI returned his smile as we passed inside. I looked at Joan. \"Agape?\"\n\n\"It means self-sacrificing love. You know where it says 'For God so loved the world'?\"\n\n\"Sure. John 3:16.\"\n\n\"Well, the Greek word used there is Agape.\"\n\nThe smell of coffee broke over me, and Joan laughed as I inhaled deeply. \"I need some of that.\"\n\nRebecca, Matthew and Jonathan all signaled their agreement and we began to follow the smell. Before I did, though, I turned to find Heidi, who was holding hands with Maggie. \n\nShe and I locked eyes, and she nodded. \"Go on, I've got her.\"\n\n\"Thank you.\" Sarah's hand brushed against mine, and I took it almost on instinct.\n\nSarah glanced down. \"Are you sure?\"\n\n\"If anyone has a problem, I want to know now.\"\n\nSarah nodded and tightened her grip on me as we made our way over to the little coffee nook. There were two men standing behind a counter, keeping steaming cups coming and sugar and creamer stocked as people scooped them up. Roger was chatting with one of them, a middle-aged man with bright red hair and a closely trimmed beard.\n\n\"Connie!\" Roger waved me over, and I eased through the people, still holding Sarah's hand. \"Connie, this is my friend Steve. Steve, my neighbor, Connie.\"\n\n\"It's a pleasure Connie.\" His voice was soft and kind, and his hand warm as I shook it. \"I know Joan and Roger have been wanting to get you here for a while, now.\"\n\n\"Thanks, it's nice to be here. This is my partner, Sarah.\" I watched his reaction, which consisted only of a warm smile.\n\nSteve pointed to the dark-haired man setting out cups of coffee to his left. \"That's my husband, Adam.\" Adam looked up from his task and waved.\n\nThe surprise must have shown on my face. \"You're among friends here, Connie. We don't judge people on whom they love.\"\n\nI smiled at Steve and thanked him as he handed me a filled cup of coffee. As we made our way into the sanctuary I noted several other same sex couples of both genders. Not a majority or anything, but enough to make me feel welcome. \n\nWe easily found Maggie and the others and if Sarah's mom was feeling uncomfortable she wasn't showing it. In fact Heidi was sitting next to her, chatting endlessly about her friends, teachers, her stuffed animals and anything else that entered her innocent little mind.\n\nWe sat next to Heidi, and I listened. Glancing over I caught Maggie's eye, and her expression was almost warm. \n\nThe service started. The junior pastor was an attractive young woman in white slacks and a nice lavender blouse, who prayed and introduced the choir. She informed us that today was their annual Easter Cantata, and we should all sit back and enjoy as they entertained and uplifted us.\n\nThe music was beautiful. Jonah got antsy at one point and Linda had to take him outside to the toddler playroom, but the other kids were good as gold. Mindy in particular seemed just transfixed by the music.\n\nThe senior pastor spoke for maybe fifteen minutes at the end, expounding on the boundless, selfless love of God, and reminding us all to show the same love to each other. As he prayed I looked over at Maggie, whose head was down with eyes closed. She was also holding Heidi's hand. My daughter looked up at the older woman before closing her eyes and mimicking her posture.\n\nThe pastor dismissed us with an invitation for those who didn't have a church home to visit them again next Sunday, and for the first time since mom died I wasn't opposed to the idea.\n\nA backyard Easter egg hunt followed back at the house, along with a wonderful lunch of ham and baked potatoes and green beans. By two o'clock people were packed up to head home. Maggie stayed behind to help clean dishes, and soon she was the only one left. \n\nAs she put on her jacket to go she hugged her daughter warmly. She even gave me a quick hug. It was awkward and I could tell she was uncomfortable, but it did seem like she was trying, which I appreciated.\n\nI turned to Heidi. \"Sweetheart, tell Mrs. Peters 'goodbye'.\"\n\nMaggie knelt down and held out her arms, and Heidi went into them without hesitation. \n\n\"Goodbye, Mrs. Peters.\"\n\nMaggie separated, looking Heidi in the eye. \"Heidi, if you want, and if it's okay with your mom and Sarah, you can just call me grandma.\"\n\nMy daughter's face split into a dazzling smile, eyes dancing with joy. She threw herself back into Maggie's arms, who laughed brightly at the sudden embrace.\n\n\"I love you, grandma.\"\n\n\"I love you, too, Heidi. You be good now.\"\n\nHeidi nodded, wiping a happy tear from her eye.\n\nI glanced at Sarah, who was holding her hand over her mouth in disbelief. I guess miracles do happen. But then again, what power on Earth is stronger than a child's love?\n\nOn Wednesday over dinner (cheesy chicken enchiladas - have I mentioned how much I love this woman?) Sarah told me mom had called and asked for a picture of Heidi, and one of the two of us..\n\n\"Are we going on the shelf?\"\n\nSarah shrugged. \"Maybe.\"\n\nFurther proof of the thawing of Maggie Peters came when my birthday rolled around in May, as a box containing some of my favorite chocolates, along with bath salts and a scented candle arrived from her. She'd also included a card with a handwritten note that was actually kind of sweet. It was signed, 'Love, Maggie'. That meant a lot.\n\nSoon it was June and I was standing in my bedroom wearing a yellow, layered monstrosity of a bridesmaid dress complete with ruffled neckline. Oh, and beads. Beads everywhere. The bright side was that I'd shelled out almost $400 on the thing, if you include shoes and alterations.\n\nI was turning around in my full-length mirror while Heidi sat wide-eyed in Sarah's lap on the bed, who was trying not to laugh.",
        "\"Darling, you look, just ... wow.\"\n\n\"Shush you.\" I tried to give my lover a stern glare while the smile on her face grew ever wider. \"I look like Big Bird.\"\n\n\"I think you look pretty, mommy.\"\n\n\"Thank you sweetheart.\" I took one last resigned glance and clapped my hands. \"Alright, lets get this off, we have to get to the rehearsal.\"\n\nWhen we arrived Sam, Rick, and Sam's brother Elias were chatting in the foyer of the church. Sam patted his brother on the shoulder. \"Guys, go on in, I'll be there in a second.\" He turned toward Sarah and me. \n\n\"Hey, Meg's sister-in-law is watching the kids down in the toddler room. Sylvia's there.\" At the mention of her friend's name Heidi's face lit up. \n\nSam pointed to his left. \"Just down that hall to the right.\" Sarah nodded and took Heidi's hand and led her that way. Sam turned back to me. \n\n\"Now, I have told my family that one of Megan's bridesmaids is gay, and that she'd be here with her partner, and that they are to keep any disapproval or stupid jokes to their redneck selves. But if they don't, please let me know.\"\n\nI chuckled at his sincerity and assured him I could take care of myself.\n\nThe rehearsal went smoothly. Sarah never made it into the sanctuary, which didn't surprise me. Sure enough, I found her afterwards in the church's playroom helping Trish, Megan's sister-in-law, with the kids. Trish thanked Sarah profusely for her assistance as we all got up to go, and I'm pretty sure I was beaming after being reminded how awesome my girlfriend is.\n\nI first noticed the sniggers and whispers at the dinner itself. After the food, Sam and Megan stood up to thank everyone and hand out gifts, and my hand naturally found Sarah's, our arms linking together.\n\nSam was the youngest of six, so he had some teenage nephews, who were the ones being idiots. They were sitting just behind us, unapologetically staring and giggling. Sam's mother was there also, and when I turned around to glare at them she gave me a very dirty look. \n\nI shook my head and turned back towards our friends. Sarah whispered in my ear. \"Don't let them bother you.\"\n\n\"I won't.\" Besides, I could see the exchange had not gone unnoticed by Sam, and the look on his face wasn't a happy one. It goes without saying that I never let go of Sarah's hand.\n\nThe next day was a blur. I was at the salon early with Megan, Lauren, Susie, and Wendy, who'd flown in with Ramit for the event. Only a pregnant Mia was absent, but one of Megan's buddies on the force was going to live stream it, and Mia'd promised to be watching. \n\nThe service was quick, the photography session afterwards less so, but soon enough the party started. After the traditional opening dances the DJ invited the wedding party to the floor. I started with my opposite groomsman, a buddy of Sam's from college whose name I don't remember, but after thirty seconds or so his girlfriend cut in, and I gracefully bowed out, my eyes searching for my Sarah. \n\nShe was there, a vision in a lime green dress with a darker sash tied around her waist. Her auburn hair had gotten longer, falling in loose curls well past her shoulders. The necklace I'd given her for Christmas glittered on her skin, and my cheeks stretched into an almost involuntary smile as I held my hand out. \n\nShe seemed to float towards me, her own grin turning my insides to jelly, as her emerald eyes sparkled and danced in the soft light.\n\nMy arms slipped around her waist as her head rested on my shoulder. The warmth of her breath tickled as she nuzzled into my neck.\n\nI held her through one song and into the next. That sixth sense we all have told me we were being watched and judged, but that only made me hold her tighter, trying to shield her from a cruel world with only my love.\n\nEventually she raised her head and we looked into each other's eyes. Sarah turned, seeing Megan and Sam dancing blissfully a few steps away. \"She looks beautiful, and happy.\"\n\n\"She really does.\" I ran my fingers up from her waist to her back, pulling her close. \"I can't wait to see you wearing white.\"\n\n\"Really?\" She cocked her head playfully. \"Still set on that, huh?\"\n\nIn answer I kissed her, deep and pure, trying to express everything I felt about her in that one action. I think I succeeded, as I felt her relax into our embrace. I lived for these little moments, when she would surrender to just being loved.\n\nBoth my girls were passed out by the time I'd gotten them home. There had been a great deal more dancing, both for Heidi and Sarah, and they were all tuckered out. I gathered Heidi up into my arms, while Sarah opened the doors and closed the garage.\n\nAs a practiced team we went about getting the munchkin ready for bed. In minutes we had her dressed and tucked in. Sleepy 'I love you's were shared, and I tucked Charlie into her arms before we slipped out the door.\n\nWe walked hand in hand to our room, and I let Sarah enter first by design. After closing the door behind us I wrapped my arms around her shoulders and pulled her back to me. My fingers ran up her body to her chin, which I pulled to the side so I could suckle her perfect neck from behind. \n\nMy lover gasped as lips made contact, and she leaned back into me as my other arm circled, holding her across her middle. My tongue trailed up her neck, tracing over her earlobes before I whispered to her. \"I've been dreaming of taking this dress off you all day.\"\n\n\"Mmm, okay.\"\n\nMy hands went to her shoulders, moving gently down to the back of the bodice, earning a lovely sigh as Sarah's head bent forward. She untied her sash as I gently undid the clasp and lowered the zipper, and moments later the garment fluttered to the floor, leaving my love in only her lace panties.\n\nI didn't let her turn around, instead scooping her into my arms and carrying her to the bed. Once I'd laid her down I stepped back and shed my Big Bird dress before climbing on the bed and rolling her onto her back, kissing her deeply.\n\nI broke off, gazing into her eyes. \"While they were up there, doing the vows, all I could think about was saying those things to you, and how badly I wanted to.\"\n\nA tear slipped down Sarah's cheek, and I kissed it away. I pressed my lips to her forehead. \"You are going to be the most beautiful bride.\" The most lovely smile spread across her face as her blush reddened her cheeks. I caressed her cheek. \"Relax, baby, let me take care of you.\"\n\nI moved to her neck and worked my way down over her clavicle, pulling a nipple into my mouth. Finally she began to relax, and sighs of pleasure started to fill the night. \n\n\"That's right, Sarah, I love you so much.\" I gripped the waistband of her panties and pealed them off. I suckled on the soft skin of her inner thigh, her puffy outer lips, even her perineum before running my tongue up through her wet folds.\n\nMy action was greeted by a long moan, letting me know she was mine. And for the next half hour I treasured her in every way I knew how, savoring her flavor, always anticipating the next time she would flood my mouth with nectar.\n\nFinally I climbed back up the bed, pulling my totally spent young lover to me.\n\n\"I love you, Connie. I'm so happy here.\"\n\n\"That's good, 'cause it's your home now. I'm never letting you go.\" I was trying to make a little joke, but she just pulled me tighter.\"\n\n\"Promise? I never have to leave?\" Her voice was soft and unsure, very unlike the confident, capable young woman I loved.\n\n\"Of course not. Why would you ask that? What's wrong, sweetie?\"\n\n\"I'm sorry, I ....\" She stopped speaking for a moment. I didn't say anything for a long moment, just stroking her hair.\n\nFinally she continued. \"When I first started here I had this horrible nightmare. You found out I was gay and fired me. I ended up working across the street and I had to see you every day. And you hated me.\" Her voice was quavering as she spoke, sniffing back tears. \"It's always been my greatest fear, being discovered, thrown out. But if it happened I would've survived. Until now.\"\n\nShe looked up into my eyes. \"I've wanted this, all this, for so long, it still feels like a dream, like it's not real. I couldn't handle waking up, if you made me go. It would break me.\"\n\nThe pleading in her eyes almost terrified me. I understood now what Maggie had been worried about, and all my old insecurities about being worthy of Sarah's trust reared up. But things had changed. I was comfortable here, now. I was out at work, with my friends, in public. And she held my heart, too. She was the center of my universe, and I was completely under her power. As it should be.\n\n\"Sarah, you're my family now. You're not the only one who couldn't handle it if you left.\"\n\n\"You were doing fine without me.\"\n\nI gave a laugh of disbelief, shaking my head. \"No, no I wasn't. I was surviving, maybe. But I was lonely, and scared, and hanging on by my fingernails. But since you've been here I'm happy. My life makes sense, maybe for the first time. I love you, Sarah Peters, and I will love you forever. I swear it.\"\n\nI was crying now, too, and Sarah wiped away a tear. \"How can you know?\"\n\n\"Because of something my dad told me. Love isn't a feeling. It's something you do. Being in love comes and goes, but loving someone means being there for them, even when you may not want to. If you ever find that the 'being in love' is fading, just love the person, do things for them, pray for them, spend time with them. And it'll come back, stronger than ever.\"\n\nSarah's tearful smile melted me inside. \"Okay. We'll just do that then.\"\n\nI nodded. \"Yeah. Yeah, we will.\"\n\nI'll never forget the kiss we shared in that moment. I wasn't na\u00efve enough to think everything was completely settled, but the last of our walls were crumbling. Sarah had been so right to make us wait. When we said 'I do' we would really mean it. We made love into the early morning, soft and gentle, intimate and beautiful beyond words.\n\n***\n\nIt was definitely a year of firsts. Our first camping trip came in July, up to the Dunes on Lake Michigan. Heidi got to see big water for the first time, which inspired a desire for swimming lessons in the fall.\n\nAnd as autumn approached Heidi also signed up for Park League soccer. She really enjoyed playing with her friends, even if she'd inherited my lack of athleticism.\n\nOctober brought Heidi's first friend-laden birthday party as she turned five, and Sarah brought it together perfectly. It was on a Saturday afternoon. I'd had to work a little past twelve, since it was our busy season, coming into the holidays. When I got home the party had already started. \n\nSix little girls were playing noisily in the family room while their moms and one dad were chatting in the kitchen. The smell of hot apple cider and cinnamon hung in the air.\n\nI heard Sarah laugh as I set down my bag and made my wad into the house. My lover's smiling face brightened again when she saw me.\n\n\"Darling! You're home!\" She set down her mug and stepped towards me, wrapping her arms around my waist as we shared my welcome home kiss, the same one I always got. I was aware of the people who were watching, but I really didn't care. Any opportunity to kiss Sarah was a blessing.\n\nAs we separated, Sarah turned and began making introductions. Sarah had mentioned several of them before, and it was good to put faces with the names. I got so many compliments about how wonderful Heidi was, and how many great things they'd heard about me, I was floored.\n\nI hadn't realized that Sarah was even cultivating this group of friends, but I was glad she had them. \n\nI also saw the last of Sarah's anxieties about us flow away. To my shame, I hadn't even realized they were there, really, until our conversation after Megan's wedding. I did everything I could to assuage them in the months that followed, starting with including her in all household decisions and making her familiar with my bills, accounts, and investments. \n\nThe weather had cooled considerably as the calendar turned to November, and the expiration of Sarah's imposed trial period for our relationship was ending. It had been the happiest year of my adult life, and I was absolutely at peace with my decision to marry Sarah. Truth be told I was chomping at the bit.\n\nFor her birthday a few months ago I'd given Sarah a certificate for a spa day, and I finally pressed her to take it that first cold weekend after Halloween.\n\nAfter shooing her out of the house early that Saturday I told Heidi to get ready to go out.\n\n\"Where're we going, mommy?\"\n\n\"To buy Nanny Sarah a present. But you can't tell her, okay?\"\n\nHeidi nodded vigorously, and by ten we were on our way to Barrington's. It was busier than last time, but just as we began to look around the woman who'd helped us before came out from the back.\n\nOur eyes met and she smiled, coming directly us. \"Hello again.\"\n\n\"Hi.\"\n\n\"Did the necklace go well?\"\n\nI smiled. \"Very well, I can't believe you remembered.\"\n\n\"You were memorable.\" She looked at Heidi. \"And you are taller.\" Heidi beamed back at her. \"So how can I help you today?\"\n\n\"I stood a little taller and squared my shoulders. \"Today, I'm ready to look at rings.\"\n\nThe woman just smiled and motioned to her right. We began to look at styles. I was having a much harder time deciding than with the necklace. I mean, she'd be wearing this for the rest of her life. How do you make that kind of decision for someone?\" Instead I opted for a simple solitaire, one that I could trade in, keeping just the stone. A few days later it was ready and I swung by after work to pick it up. I remember sitting in my SUV just staring at it. Round cut, just over one karat, but still so small. It meant everything,\n\nI hid it away in my desk in the den, getting a little thrill and a bit more nervous every time I glanced in that direction. The wheels in my head were already turning on how I was going to ask.\n\nNovember rolled on, bringing our first light snow and leaves cluttering up my backyard. We were playing a matching game on the floor of the living room when Sarah's phone rang. She hit the accept and speaker icons.\n\n\"Hi, mom.\"\n\n\"Hi, sweetie!\"\n\n\"Grandma!\" Heidi ran around and climbed into Sarah's lap.\n\n\"Hi, Heidi, sweetheart. How was school today?\" This had been happening a lot since Easter. Maggie called at least once a week, and at least half an hour was spent chatting with Heidi, and my daughter adored her new grandmother.\n\nAs for Sarah, the secret that had caused so many issues since her adolescence gone, her relationship with her mother really blossomed. To me Maggie had gone from being civil to almost warm in out brief conversations. I could tell she was really trying, and it was becoming less of an effort as time went on.\n\nThe purpose of the call was to ensure we were all coming up for Thanksgiving, so I answered for the family.\n\n\"Absolutely, we're looking forward to it.\"\n\nSo as the fourth Thursday in November dawned we were all singing 'Over the River and Through the Woods' as we headed north to grandmother's house.\n\nWe were the last to arrive at Maggie's packed home, and many hugs and kisses later we were settled in and I was holding a streaming mug of hot apple cider, letting the happy chaos surround me.\n\nHeidi, Mindy, and Benjamin were playing a game while Jonah was building an unknown contraption with his Duplo blocks while Rebecca and little Dara sat by and watched. Jonathan and Matthew were deep in discussions of the Cubs chances next year while the Lions and Bears played on TV.\n\nFrom the kitchen emanated the perfect holiday aroma of roasting turkey, mixed with Linda, Maggie, and Sarah's voices as they chattered. They were swapping stories about the little ones, and it warmed my heart to hear Sarah talk about Heidi just as if she were her own daughter.\n\nEventually Jonah lost interest and grabbed one of his books and, seeing my very available lap, toddled over and climbed up. This had become our thing, and I loved it. He handed me the book and snuggled in as I opened it.\n\n\"The sun did not shine, it was too wet to play, so we sat in the house all that cold, cold wet day.\"\n\n***\n\nAn amazing dinner was served, and after we non-cooking adults completed clean up there was just good old fashioned family time. Maggie had been downright welcoming to me, and the change was something to marvel at.\n\nI noticed something different about the bragging shelf, so I walked over to look closer. The small photo of Sarah was gone, replaced with a larger one of Sarah and me taken just before my boss's Christmas party last year. A smaller frame with Heidi's school picture sat next to it. \n\nI reached out and touched it. As I did I felt a presence next to me.\n\n\"I'll want a new one of her every year, you understand.\"\n\nI smiled down at Maggie. \"You got it. So what did your friends say?\" I nodded towards Sarah's and my photo.\n\nMaggie breathed deeply. \"I put them up the day before my best friend Rosie came for coffee. I was so nervous. I'd rehearsed what I was going say dozens of times. But when she noticed and asked, I wasn't sure I was going to be able to say anything. But then ... you're going to think I'm silly.\"\n\n\"No I won't, promise.\"\n\nMaggie took a steadying breath, her voice thick with emotion. \"Suddenly I felt Teddy there, like he'd put his hand on my shoulder, and I said 'That's Sarah and her partner Connie, and that's my new granddaughter Heidi.' And I just looked at Rosie, daring her to say anything. After that it got easier.\"\n\nAt that moment we heard Sarah laugh from the next room. God, I loved that sound. I felt Maggie's hand slip into mine.\n\n\"Thank you for making my daughter so happy. Since she met you she's been all lit up inside, like when she was little.\" Maggie looked over at a collage on the wall, where a young Sarah was sitting on a pony at the fair, smiling with unabashed glee. \"She was always so full of joy. Helpful, kind, a perfect child. But then, when she became a teenager things changed. She was still a good girl, still helpful and kind, but the happiness was gone. I figured it was just teenage drama, y'know? But now I know it was more. I have my daughter again. You gave her back to me. Thank you. I'm so sorry, about everything\"\n\nI squeezed her hand and shook my head. \"Water under the bridge, Mrs. Peters.\"\n\n\"Please, Connie, my name is Maggie. Or maybe, just mom.\"\n\nMy jaw clenched and tears stung my eyes as I nodded. Maggie turned back to the pictures. \"You know, it's a nice shot, but I wouldn't mind a new one. Maybe an engagement photo?\"\n\nI looked over my shoulder, making sure Sarah was still a room away. \"Actually, I wanted to talk to you about that.\"\n\n***\n\nBy the next weekend the house was decked out in Christmas paraphernalia, another huge tree dominating our living room. The stockings were once again hung by the chimney with care, and we even sent my brother his, filled with some of his favorite goodies. There'd been no tears unpacking the decorations this year, only good memories. \n\nWe'd taken a family picture with Santa, and I'd sent out a Christmas letter for the first time ever. It was a bit of a coming out announcement as well, I guess, but everyone I really cared about already knew. I got back a few 'we're so happy for you's from a couple of my parents friends. No hate mail, but I wondered who'd stop sending me cards next year. \n\nOne night I was reading to Heidi while Sarah was downstairs making a snack for our quiet time together. I set the book down.\n\n\"Heidi, I want to talk to you about something important.\"\n\nHer eyes went wide. \"What is it, mommy?\"\n\n\"I'm going to ask Nanny Sarah to marry me. She'll be a part of our family forever.\"\n\nHeidi looked confused. \"I thought she already was.\"\n\n\"Oh, munchkin.\" I hugged her close and kissed the top of her head. \"She is, we both know that. But this makes it official. It's a way to tell everyone that we're going to spend our lives together, as a family.\"",
        "\"Oh. You should do that.\"\n\n\"I will. But two things. First it's a secret and you can't tell Nanny Sarah about it. Second, I'm going to need your help.\n\n***\n\nI was a nervous wreck. Sarah had definitely noticed something was up, but she hadn't said anything. And I was such a bad actress, several times running out of the room when my phone rang.\n\nFinally it was the Saturday before Christmas and everything was ready. We drove up to Lauren and Rick's to drop of Heidi, just like a normal date night. We left my Escalade there and took an Uber into downtown to the Palomino, where our table was waiting.\n\nThe restaurant did little to calm my nerves, and I knew Sarah noticed, as she kept stifling giggles when she looked at me.\n\n\"Something's going on with you tonight.\" Sarah took a sip from her wine glass. \"Wonder what it is?\"\n\n\"Just excited for Christmas. Like every good girl.\" My hands fidgeted under the table.\n\n\"Uh-huh. Nothing special planned for me?\" As she spoke she pulled her shoulders back slightly, emphasizing how her tight green turtleneck outlined her perfect breasts. The soft lighting made her auburn hair glow and emerald eyes sparkle, and for a moment I was lost.\n\nI recovered, giving a passably innocent expression. \"Whatever could you mean?\" \n\nSarah chuckled and shook her head. \"Darling, you are not a good liar. But it's okay. Just something I love about you.\"\n\nFrom there Sarah mercifully let me steer the conversation away to calmer waters.\n\nAfter a lovely meal I settled the bill while Sarah got our coats. This gave me a few precious seconds to ensure everything was in place.\n\nI pulled my coat around me as we stepped out into the wintry air. It was chilly, but the lack of wind made it brisk without being biting. Very pleasant for a December evening.\n\n\"Darling, did you call the Uber?\"\n\n\"Not yet. How 'bout a carriage ride first? We could take our time and see the lights.\" I nodded towards a horse and carriage stopped just off to our left. It was trimmed in blue and purple lights, while a man in an old-fashioned suit and top hat leaned against his dapple-grey partner.\n\nSarah grinned up at me and took my hand, and we walked towards it, but her face fell as we got close.\n\n\"Oh, it says it's reserved.\"\n\n\"So it does.\" I stepped up to the man, who met my gaze. \"Are you waiting for Walker?\"\n\n\"Yes Ma'am.\" He straightened smartly and opened the little half door, handing us inside.\n\nSarah's eyes were dancing. \"You had this all planned out?\"\n\n\"Maybe.\" In fact I'd given the carriage company detailed instructions as to not only the time and place but also the route to be taken.\n\nOur driver climbed into position and with a gentle shake of the reins we were off. The little jolt at the start caused Sarah to fall back into me some, and I wrapped her in my arms. Her proximity was soothing, especially since my heart was beating a thousand miles a minute.\n\nMy anxiety lessened as we made the turn onto Meridian and headed north toward the circle. I glanced down at a text from Lauren while Sarah was looking at the lights. Everything was ready.\n\nWe trundled along, my heart beating faster and faster as we went. Sarah seemed oblivious, her eyes twinkling from the decorations along the way. My stare was locked on the right side of the road as we approached the circle, which was shining with Christmas cheer.\n\nI found what I was looking for, giving a wave and receiving a thumbs-up in return. My co-conspirator hit a button on their phone and held up a sign.\"\n\nI took a deep breath and nudged Sarah. Here goes nothing. \"Hey, sweetie, look at that.\n\n\"Hmm?\" Sarah shook herself out of her trance, following my pointing finger toward a sign about the size of a poster board. On it was a highly stylized representation of Sarah's name, in vibrant greens and reds. My love covered her mouth with her hand. \"Oh, my.\" She looked back at me. \"Darling, what did you do?\"\n\nI couldn't keep the smile off my face. \"Keep watching.\" I pointed back at the sign. \n\nSarah turned back and the man holding the sign lowered it, revealing a bushy beard and broad shouldered physique. \"Matthew!\"\n\nHis big friendly grin shone back, but he just turned and motioned down the street. As Sarah looked up a woman stepped out with another sign. \"The day I met you.\" Mindy and Benjamin waved next to their mother as we went past, and a stunned Auntie Sarah looked further down, where Lauren was holding another.\n\n\"My heart beat truly.\"\n\nWe continued around the circle. Megan was next. \"For the very first time.\"\n\nRebecca held the next \"I love you more.\"\n\nThen Susie. \"Every single day.\"\n\nRick's \"I never want it to end.\"\n\nWe continued around the circle, tears were rolling down Sarah's cheeks. She leaned back into me and I kissed her gently on the temple.\n\nJonathan had the next. \"I want it to last.\"\n\nThen Michael and Sam. \"For ever and ever.\"\n\nWe'd gone all around the circle, and drive crossed over to the middle, stopping in front of the granite stairs leading up to the central monument. He hopped out and opened the door, and I got out and helped my lady down.\n\nOne arm around her waist, the other holding her hand, I led her up the stairs to the landing at the top.\n\nEveryone had crossed to the center, and they lined the stairs as we went up, where a final sign was unfolded. One side was held by Sarah's mother, and the other by a bouncing five-year-old with light, curly brown hair.\n\n\"Sarah, will you marry me?\"\n\nAs she read the words I heard sobs break free, tears running freely from her eyes. My own began to roll down as she turned to me. To this day I'm not sure how I got the words out. \n\n\"From the first moment, a part of me knew. You're the one, Sarah, my one and only. You are my family, and I want to watch it grow with you. Only you. Marry me my love. Please.\"\n\nI dropped to one knee and held out the ring. \"Sarah Peters, will you marry me?\"\n\nHer voice was thick with emotion, but steady and strong as she answered. \"Yes, oh, yes I will.\"\n\nI slipped the ring on her finger and stood into her embrace. I was dimly aware of our family and friends cheering around us, along with a number of strangers. But it didn't matter. The woman in my arms was my whole world, her voice in my ear the only thing that mattered.\n\n\"I'm yours, Connie, yours forever, if you'll just be mine.\"\n\n\"I will. I am. Always. Always.\"\n\n*****\n\nTWENTY-FIVE YEARS LATER\n\nI picked the photo up off the mantle, running my finger over the glass. Sarah beamed back at me from inside the frame, perfect and beautiful in her wedding dress. I remembered the day.\n\nIt was August, the exact day Sarah's two-year contract ended. We'd decided to replace it with a covenant. Some details were fuzzy, but I remember the doors to Agape Church's sanctuary opening, and Sarah began walking towards me. The Earth had stopped moving, and there was only her. I remembered holding her hand as the minister introduced Constance and Sarah Walker to the congregation. I'd told she didn't have to change from being a Peters, but she insisted, saying she wanted to share her daughter's last name.\n\nA hand rested on my shoulder. \"Hey, mom. Feeling nostalgic?\"\n\n\"Do you remember it, Heidi?\"\n\n\"Yeah, some. You both looked so beautiful. I couldn't wait for my own day.\"\n\n\"Oh, sweetheart, you were a beautiful bride, too.\" I looked over at Heidi's wedding picture, she and the young man next to her gazing radiantly into each other's eyes.\n\n\"Thanks, mom. But we have to get going, though.\"\n\n\"Yeah.\" I sighed, putting Sarah's picture back and gave myself a shake. \"Is your brother ready?\"\n\n\"I'll check.\" She went to the base of the stairs and hollered up. \"Teddy! We've got to go!\"\n\n\"Coming!\" My son's quick step could be heard coming down the stairs. \"I was talking to Tim. Hey buddy, I gotta get my shoes. Talk to mom.\"\n\nHe handed me the tablet, and my younger son's 3D image looked back. \"Hi, mom.\"\n\n\"Hey sweetie, how's the tour going?\"\n\n\"It's going great. Totally sold out. You got the tickets I sent for September, right?\"\n\n\"Yes, thank you. Where are you now?\" \n\n\"Portland, Oregon, then up to Seattle.\"\n\nA petite blond waved from behind Tim's shoulder. \"Hi, mom!\"\n\n\"Hi, Annika! Keeping him in line?\" \n\nShe put her hands on his shoulders and pecked him on the cheek. \"Oh, yes, he is not a problem.\" Her crisp accent was kind, and Tim leaned back for a kiss. Tim had always been a kind, quiet boy. He reminded me most of Sarah. But he loved to perform. Both my boys did, really. Teddy had done it on a baseball field; Tim always preferred the stage.\n\nI admit I'd wondered what Tim's preferences in a partner would end up being, and I worried about it a bit. Not as to him being gay, but what it would mean for him if he were. Sarah and I had faced a few things over the years. Luckily nothing we couldn't handle, but still. \n\nDuring his second year at Julliard he'd called, asking if he could bring someone home for Thanksgiving. We waited with baited breath until he walked in with Annika, a tiny blonde Russian ballerina. The way he looked at her left nothing to doubt. The two of them were currently touring nationwide in a revival of South Pacific. \n\nHeidi walked back into the room, putting in an earring. \"Mark? Is Cole ready?\"\n\n\"Yes, dear. Just waiting on you.\"\n\nCole toddled in with his father, looking very smart in a button down shirt and slacks. He'd inherited his mother's curly brown hair, but they kept it short on account of his preternatural ability to get sticky things in it. \n\n\"\"Where's Auntie Cece, grandma?\"\n\n\"She's at the school already.\"\n\n\"Okay. Come on, let's go!\"\n\nI took a last look at the family portrait. Sarah and I, surrounded by our four children. It had been taken when Heidi had been a senior in high school, just before she'd gone off to culinary school. How'd it go by so fast?\n\nI let my four-year-old grandson drag me out to his parents' minivan, and I climbed in the front seat. It was still cool so far in early June, but clear and bright.\n\nWe drove past the playground where Sarah and I always had taken the kids. So many memories there. \n\nWe'd started quickly. Sarah had wanted to carry my child, but I was insistent. She was already helping raise a daughter of mine. I wanted to do the same. So, an anonymous donor, and Teddy was born nine months later. We'd picked someone who favored me, right down to the eyes, and everyone thought he was my biological son. That was fine with me.\n\nI let her have her way for our next. Matthew provided the seed, and me the egg, but Sarah still carried. I'd been right. She'd been born to be a mother. \n\nIt was about three years after Tim was born, and Sarah was starting to get that look in her eye, and I knew she wanted another.\n\nIn an act of providence, a week later our OB/GYN had called. A colleague of hers, a friend from med school, was involved in the first human same sex procreation trial. They were looking for committed lesbian couples that'd had success with IVF in the past. We flew to John's Hopkins for a consult, and were accepted into the trial. \n\nThey harvested from both of us, and after several attempts a viable embryo was produced, and the little warrior hung on to be our daughter Cecilia.\n\nLuckily Sarah wasn't the first to give birth from the trial, that honor went to a couple in Florida, along with the media circus that went with it. All we got was a story on the nightly and a write-up in the paper. I didn't cry about that. \n\nI do remember staring at her, ten perfect little fingers and toes. Sarah's and my daughter, in every way. I love all my children dearly, but that was special. And now she was graduating high school.\n\nWe arrived and piled out of the van and headed through the gathering crowd and into the stadium. Heidi put her arm around me. \n\n\"Last one of these.\"\n\n\"Yeah. Until that one grows up.\" I pointed at Cole, who was riding on his father's shoulders. \"It goes so fast, sweetheart. Don't take it for granted.\"\n\n\"I know, mom. So where're we sitting?\"\n\nI looked around, my melancholy washing away as I saw the hand waving at me from down front.\n\n\"We're sitting down there.\" I pointed and headed down the stairs. I slid into the row and made my way to the middle.\n\n\"Hello, darling! You've no idea how hard I had to fight to keep these seats.\"\n\n\"You're my hero.\"\n\n\"I know.\" My wife tilted her chin up for her kiss, which I gladly provided, my insides fluttering as out lips touched. Our family sat around us, and Cole climbed into his Nana's lap.\n\nSarah put her arms around her grandson's middle as her green eyes looked into mine. \"I think we did well, darling.\"\n\nMy hand slipped into hers. \"Yeah. Time to celebrate.\"\n\n\"Mm-hm. That's why you're taking me to Europe in the fall.\" She grinned, her eyes glinting with mischief.\n\nI laughed and shook my head. With all the ups and downs, it had been a wonderful life, but there was so much more coming. And I was going to get to share it with the love of my life.\n\nTHE END.\n\n*******\n\nThank you for reading, rating and commenting on my stories. Writing for everyone here is such a joy. I know the sex in this story was more vanilla than my last, but it felt right for Connie and Sarah. The sex between any of my couples is organic, and often surprises even me. My next couple will be significantly different.\n\nJust a note for anyone who doesn't know, there have been successful same sex reproduction trials in female rodents (Scientific American, Oct '18). It's definitely a pipe dream that it would be available to human parents so quickly, but let's keep praying."
    ],
    "authorname": "JCMcNeilly",
    "tags": [
        "lesbian",
        "romance",
        "lesbian sex",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/nanny-sarah-pt-03"
}