{
    "title": "Secret Smiles and Three Little Words Pt. 25",
    "pages": [
        "Chapter 27* \n\n\"Why are you calling me this early in the damn morning?\" Lena's sleepy voice came across as muffled and exhausted. \n\n\"I have more Christmas shopping to do!\" Alex groaned as she struggled with the Keurig. Nothing was cooperating this morning. She had so much to do, and no time to do it! The last thing she needed was a ten minute argument with a coffee maker! \n\n\"Jesus!\" Lena gasped. \"Now who for? Not Gavin, because he gave you specific instructions, if I remember correctly.\" \n\n\"No, as much as I would like to buy him something else, that is a fight I will not have right now,\" Alex smiled. \"Especially after he agreed to go to Pennsylvania with me!\" \n\n\"You're fucking with me now, right?\" Lena moaned. \"You woke me up to rub in the fact that he is so perfect, he is willing to go into hell with you?\" \n\n\"No, I woke you up to go shopping with me again, I have nieces and nephews to buy for!\" Alex laughed. \"I wasn't expecting to see them until later so I didn't buy them anything. Now that we're going I need to get them something! The rubbing it in is just a bonus!\" \n\n\"You know, you can be such a bitch sometimes!\" Lena teased. \n\n\"Besides, we didn't find the perfect shoes for your date tonight,\" Alex told her, ignoring her insult. \n\n\"I have shoes,\" Lena groaned. \n\n\"No, you have shoes, then there are shoes,\" Alex reminded with a laugh. \n\n\"Yeah, can't afford those!\" Lena scoffed as she got out of bed and began to gather clothes. She knew by the sound of her friend's voice it wasn't a matter of if she could go, or even if she wanted to go, but when Alex was picking her up. \n\nAlex was putting on her coat when Gavin stopped her with his arms around her. \n\n\"I have a favor to ask,\" he whispered while nipping at her ear. \n\n\"She can wait!\" Alex laughed huskily, insinuating her eagerness to have sex and make Lena wait on her. \n\n\"No, not that,\" Gavin chuckled. He turned her around, and held out his credit card to her. She stared at it for a second then lifted her eyes with an anger flashing in them. \n\n\"You are buying for your family, yes?\" Gavin said firmly recognizing the anger easily. \n\n\"I am,\" she said looking at him trying to keep the anger in check. To her, she was doing a masterful job, to the outside world, not so much. Her face was tight with it. Her jaw grinding her teeth making her muscles in her face strain. \n\n\"Take the damn card,\" he growled finally when she hadn't made an attempt to do so. \"This is not up for discussion, no debates and no temper tantrums. I don't want to arrive empty handed, so either you use my card to help buy some of the gifts or I'll buy gifts, and I assure you it will be extravagant and very expensive!\" \n\nAlex closed her eyes, know your role, she reminded herself as she gently took the card from him. He took her back into his arms. \n\n\"Look, Little One, I don't know them like you do, this way we can say it's from the both of us,\" he explained. \"Whatever the total is, I will let you pay me half back.\" \n\n\"You will?\" she asked him dubiously, squinting her eyes as she studied his response. \n\n\"I will,\" he smiled, but it was the way he smiled that made her furrow her eyebrows at him. \n\n\"You promise? I want your word,\" she said to him firmly. \n\nHe looked at her with an appreciative grin. \n\n\"Fine,\" he agreed reluctantly. \"You have it, I promise to let you pay me back, half.\" \n\n*** \n\n\"Big step,\" Lena pointed out as she held up a pair of high heels for Alex's approval. Alex shook her head at the shoes. \n\n\"What is?\" Alex asked as she opened a box then closed it quickly with a shake of her head, gasping at the hideousness of the shoes trapped within. \n\n\"Meeting the family,\" Lena explained. \n\n\"He's already met the parents,\" Alex smiled. \n\n\"Parents is one thing, your family is another,\" Lena defended. \"With your parents they kind of cancel each other out, one Puritan and one normal man. Now your mother will have her Stepford Daughters and their Stepford Children, and I'm sure they will be ready to pounce on his perfect ass.\" \n\nLena shivered as she remembered the one and only Christmas she spent with Alex in Pennsylvania. It was the most excruciating experience of her life. When she saw her own family again she hugged and thanked them for being normal! \n\nAlex's family was horrible to Alex, chiding her at every opportunity. Rubbing in the fact she was always asking for money, always asking for help, and was always alone. Lena could do nothing but sit there slack jawed as they attacked their family member, regardless that she had brought a guest. It was like a show from Shark Week on the Discovery Channel. \n\n\"Remember when they thought we were lesbians?\" Lena laughed. \n\nThe family asked if that was the case, at the dinner table no less, as Alex never had a boyfriend to bring home. \n\n\"I still think you should have let me tell them yes!\" Alex growled at the bad memory. \"That would have shut them the fuck up!\" \n\n\"I doubt it!\" Lena disagreed with a shake of her head and a frown. \"It would have got your mother to drag us down to the church to save our souls! Remember what she said? Queers and fags are going to hell first!\" \n\n\"Agreed,\" Alex frowned as she couldn't find what she was looking for. She didn't want to relive the bad memories from her past, if she thought of one, a hundred would flood her mind and she just didn't have time to deal with that today. \n\n\"I don't need new shoes!\" Lena told her again as they looked over the aisle of shoes, none of which made Alex happy. \n\n\"C'mon, it's time we get serious with the shoes,\" Alex frowned as she led Lena from the store. \n\nWalking into the boutique Gavin had taken her that first time she looked about. \n\n\"Alexandria!\" the owner called out when she saw her. \n\n\"Mistress,\" Alex smiled with a slight bow of her head respectfully. \n\nThis caused Lena to look at Alex, then to the owner who was making her way over. It was obvious by Alex's demeanor change that this woman was in the life Alex was a part of, one that Lena didn't understand completely. How could a person demand this type of response only by calling out her name? Something Alex would have to explain. Later. \n\n\"What are we looking for?\" the owner asked. \n\n\"Shoes,\" Alex told her with a wicked smile. \"Not just shoes, but shoes.\" Alex stressed. \n\n\"For you?\" The owner asked with a surprised tic of an eyebrow. \n\n\"No,\" Alex smiled knowing where she was going with her question. Gavin bought all of Alex's clothes, and this woman knew that. \"For my friend here, she has a hot date.\" \n\n\"Right this way,\" the woman smiled as she nodded. \n\nWatching Lena fall in love with the shoes made Alex smile. She walked in them and then turned and came back. \n\n\"Ok,\" Lena laughed. \"You're right, there are shoes, then there are shoes!\" \n\n\"Told you,\" Alex smiled as she had a convert. \n\nShe was getting used to high end clothing now, not buying them, but wearing them. She was still uncomfortable with buying them, which is why Gavin always brought her here. None of the clothes or shoes in this store had prices on them. You had to ask, and if you had to ask, you couldn't afford it, so you were in the wrong store. \n\nShe remembered seeing the total of one of her shopping trips, it was just under five digits, not including change. She about threw up there on the counter. Gavin was quick to push it where she couldn't see it but he was too late, she had seen it. \n\nShe hoped she could keep the cost of the shoes from her friend with more success. \n\n\"Ok,\" Lena smiled looking down at them. \"How much?\" she asked the sales woman. \n\n\"Don't worry about it,\" Alex smiled stopping the clerk from divulging the cost. \"Merry Christmas!\" \n\n\"Bullshit!\" Lena barked. \"These are going to be expensive!\" \n\n\"We'll take them,\" Alex told the clerk disregarding her friend's anger. \"Box them up for us?\" \n\n\"Of course Miss Alexandria,\" the clerk smiled. \n\nLena took the shoes off and handed them to the clerk. \n\n\"As long as they are not too expensive,\" Lena said to Alex as they made their way to the counter. \n\n\"Relax, would you?\" Alex smiled. They waited at the counter for the clerk to bring the shoes up. As soon as the clerk set the box down Lena began shaking her head vehemently. \n\n\"Absolutely not!\" Lena gasped after the clerk set the silver box on the counter, the Jimmy Choo logo proudly displayed. \n\nAlex handed the cashier the card that Gavin gave her. Even she couldn't afford Jimmy Choo, but she hoped Gavin would let her pay him back as he promised he would do. \n\n\"Jimmy Choo's are a like six hundred dollars!\" Lena gasped taking Alex by the arm and spinning her around. \"No!\" \n\n\"Yes,\" Alex said back calmly. \"I want to, I owe you so much, from all the bills I didn't pay, to just being there for me through everything! Please, let me do this!\" \n\n\"Baby,\" Lena said softly shaking her head as she looked at the box. \"It's too much!\" \n\n\"No, it isn't even close to what I owe you,\" Alex smiled taking her into a hug. \n\n*** \n\nWalking back into the condo with arms full Alex felt accomplished. She spent more than she intended to and that was not including the shoes for Lena. But she found gifts she knew the kids would love, especially her favorite little niece, Nora. The little blonde that everybody said was the spitting image of Alex when she was that age. Attitude and all! \n\nShe set everything down in the middle of the floor and pulled the wrapping paper from the closet, along with the one gift she had gotten early, but only because Gavin had to help her with the finishing touches. \n\nGavin came in from a call shortly after she got started and looked at her as she sat on the floor and began to wrap the first gift. He set his bag down and moved to the floor with her and began to help her, picking up another box and roll of paper. \n\n\"I can do it,\" she smiled looking at him. \"Why don't you go relax for a change? You are always go, go, go!\" \n\n\"Nah,\" he smiled back. \"I can help. Did you get everything you wanted?\" \n\n\"I did,\" she smiled. \"And then some.\" \n\nGavin nodded as he wrapped the gift. She watched him, even in his gift wrapping he was so meticulous. Carefully measuring out the wrapping paper, then making sure the creases were perfect. Each step showing is attention to detail. Not moving to the next step until the step he was on was perfect. \n\n\"There is one thing,\" Alex told him as she finished her first gift and set it aside. She compared it to his handiwork and frowned. She never was very good at wrapping, she didn't have the patience for it. \n\n\"Yes?\" \n\n\"I bought Lena a pair of shoes today,\" Alex smiled. \n\n\"Ok,\" Gavin said as he readjusted the paper to get it just right, never taking his eyes off the task at hand. She loved that concentration, it had her mesmerized as she watched him. It stopped her voice from working for a moment as she stared. \n\n\"Yeah, I put it on your card,\" Alex told him when she shook her head to shake herself back to reality. \n\n\"No problem,\" Gavin smiled with a shrug. \n\n\"So I will pay you back the full price for that,\" Alex said as she began to wrap another gift. \n\n\"Hmm,\" he smiled as he set his aside after it was perfect. \"We agreed you would only pay back half.\" \n\n\"No,\" Alex began firming up. \"That was for the gifts for my family, not the Jimmy Choos!\" \n\n\"Hmm,\" Gavin said looking at her. \"Don't remember making that distinction, I remember us agreeing to you paying half whatever you put on my card.\" \n\n\"Gavin,\" Alex began to fire up. \n\n\"Alexandria,\" Gavin said in a tone to remind her of where she was. \n\n\"Fuck,\" Alex growled. \"That is totally not fair!\" \n\nGavin said nothing as he continued to wrap the gifts with his mischievous grin. She stewed there next to him as they worked. She wanted to argue, but her vow made that impossible, not if she was going to be a true submissive. \n\n\"So are we taking your car, or mine?\" Gavin asked changing the subject. Alex blushed a bit. \n\n\"Yours then?\" Gavin could tell with a grin and a soft shake of his head. \n\n\"Yeah,\" she smiled sheepishly. \"Kinda want to be childish and rub it in!\" \n\n\"As you wish,\" he smiled with a knowing nod. \"Now, next question. Do we want to exchange our gifts to one another here, before we leave, or do we want to wait until Christmas morning?\" \n\nAlex looked to him in thought. She knew he was going to go ballistic when he saw the box. She also knew he would know exactly how much she spent on it and then he would Vesuvius all over the place. Perhaps if they were in front of her family it would be kept to a minimum. If nothing else, the punishment wouldn't come immediately. Granted it was only prolonging the inevitable, but the longer she put it off, the longer she could keep the dream that he wouldn't be angry. \n\n\"Christmas Day, at my mom and dad's,\" Alex said thinking of the chance to give it to him without a huge fight. Gavin stared at her for a few seconds, taking the time to read her body language. \n\n\"It concerns me that you think that being at your parents will keep me from punishing you for the gift if I deem it too extravagant,\" Gavin said watching her shrink a little. \n\n\"It's that expensive?\" He growled when he saw her shrink. \n\n\"No,\" she shrugged trying to keep him from erupting now. \"Not in the grand scheme of things!\" she explained weakly. She didn't look at him even though she could feel him staring at her. \n\n\"Alexandria,\" Gavin began. \n\n\"I'm not taking it back,\" she whispered. \"End of story.\" Gavin tilted his head at her, part surprise, part anger. \n\n\"It's worth taking a consequence for?\" he asked her, his own temper rising. \n\n\"Some things are,\" she nodded with a whisper. \"Yes, I'll take the consequence, as long as you promise not to return it.\" \n\n\"This is direct disobedience,\" Gavin reminded. \"Thirty strokes.\" \n\n\"I understand,\" Alex whispered. Her face frowned. She tried to keep it from happening but it happened anyway. \n\n\"How much did you spend?\" Gavin asked her point blank. \n\n\"How much did you spend?\" Alex fired back. \n\nShe was trying to behave, but he was making it difficult. She hoped he remembered that keeping her tongue in check was new to her! It most definitely wouldn't happen overnight! \n\n\"Shall we start with the Mercedes? Lease or not, it's still more than I spent. Then the bracelet, and I can't imagine what the clothes cost. That still leaves the Christmas gift itself, which I know isn't going to be inexpensive!\" \n\nShe looked to him and saw his smile. \n\n\"What?\" she barked, louder than she intended to. \n\n\"Gifts,\" Gavin chuckled. \n\n\"Plural?\" Alex growled. He nodded as he chuckled at her fiery response. \n\n\"See, you could have been an English teacher too!\" he teased, knowing full well she would explode. \n\nAlex was having none of his teasing as she tackled him on the floor, he easily overpowered her and held her hands above her head trapping them there. He trapped her body beneath his, locking her arms to the floor as he hovered just above her face with his. His nose rubbing on hers. \n\n\"I love to watch you fire up,\" he smiled staring at her eyes. \"It turns me on.\" She relaxed a little as she saw the look in his eyes. \n\n\"You have a gift of getting me fired up,\" she whispered as he began to nibble at her neck, then moving down. \"And just because you are seducing me, doesn't mean this argument is over.\" \n\n\"I wouldn't have it any other way,\" Gavin laughed as he began to lift her dress up. His hands pulling at her panties. \n\nHer hands fell to his head as he pulled her breast out and began to lick the nipples, they were still ultra-sensitive from the clamps and they instantly sprang to full attention. The blood rushing to them in a pleasurable millisecond. He lifted his head as soon as she touched his hair. She looked down at him when he stopped suckling. She pulled her hands back from him and shrugged innocently at him. \n\n\"Sorta sorry?\" she tried as she put her hands back to where they were above her head. \n\nHe pulled his tie off and straddled her chest. Taking her hands in one of his, he tied her hands together then lifted her arms straight above her head. She tilted to look to see what he was doing. He was tying the other end to the leg of the couch. She giggled. \n\n\"I love the fact you have bondage equipment on you at all times,\" she whispered. \n\n\"I have to with you,\" he grinned. \"You make me want to tie you up all the time, just so I can to lascivious things to you!\" \n\nOnce he had her tied to the couch he moved off her and stroked the side of her face, before grinning. \n\n\"I don't think I'm going to like that smile,\" she pointed out. \n\n\"Probably not,\" he agreed as his fingers tweaked her nipples. \"I want you to tell me what you spent on me.\" \n\nShe looked at him blankly, waiting for the rest of his demand. Surely he didn't think she would just tell him. When he didn't continue, she tilted her head. If she held her ground, it would go directly against what she promised the night before last. \n\n\"No,\" she said softly, her stomach summersaulting in anguish. \n\nIt actually pained her to say it. That was new, she never had any problem saying 'no' before to any boyfriend. \n\n\"I can't, please don't ask me to violate my oath, please!\" she pleaded in a last ditch hope that he would help her keep her hopes of being a true submissive. \n\n\"I won't,\" he smiled. She sighed a breath of relief. \"No, I won't punish you for disobeying my command, however...\" He slid down on her and moved between her legs. \n\nHe began to work on her, his tongue gently probing her lips causing her to close her eyes and lose herself in the soft, warm feel of his tongue. She also lost her thoughts on what he was saying. He managed to suckle and nuzzle her into thinking only of her pleasure. \n\nHe worked his tongue on the outside of her lips at first, just running around them gently with his tongue. He brought his hands into play and her mind skipped like a record player when you dropped something near it. Her body started grinding up into his face. \n\nHis fingers gently pulled her apart, opening up her soft folds for his tongue to explore. His tongue, one of the many parts of his body that made her legs dance without music. She smiled at the way her toes would curl involuntarily when he would hit the most sensitive of spots. \n\nHe used his thumb to rub her clit, while his tongue dove into her depths giving her multiple sensations to deal with, she could do nothing with either of them but moan in approval. \n\n\"Oh my God, Sir,\" she whispered as her body lifted off the floor, an attempt to drive him faster as she felt herself inching up the roller coaster of her orgasm. The clicking in her mind sounding like the build up from her childhood trips to Cedar Point, in Ohio. The roller coasters there that would have her leaning back in the seats as they climbed the tall hills of steel. \n\nThis was very similar, it was a buildup that had her heart racing, knowing she was going to call out very soon as the orgasm washed from her. Her legs began to shake as she pressed off the floor with her feet, her orgasm causing her to rock back on her head to use it as a pivot point and lifting herself off the floor. \n\nHer teeth dug into her lip as she prepared for her satisfying orgasm, God he was so good at making her body do this. Like a concert pianist, playing her expertly to get the most beautiful music from her. \n\nSuddenly it was on her and her body shook as she held firm. She waited, holding her breath as her orgasm screamed from the belly ready to rush down the tracks to his face. \n\nJust as suddenly, his lips were gone. Her coaster car coming to a crashing halt as her body collapsed to the floor with a thud. \n\n\"Sir?\" she pleaded, her voice breaking with the strain of her near orgasm. \"Are you going to edge me?\" ",
        "\"No,\" he smiled as he blew across her sensitive sex. \"All you have to do is tell me how much you spent. I will make you cum.\" She tilted her head to look at him as he lifted his eyes to her. \n\n\"I won't tell you what I got you!\" she said to him, shocked that he would make such a suggestion. \n\n\"I'm not asking you to tell me what you got me, just how much you spent, so that fight can be had here, instead of at your parents,\" he said firmly. \"The gift you can keep a secret.\" \n\nShe stared at him for agonizing seconds. Trying to gauge if he was serious. It was evident that he was by the look in his eyes. \n\n\"I can't,\" she whispered. \n\n\"No?\" he smiled as he began to lick her gently again causing her to whimper. \"Are you sure you don't want to cum?\" \n\n\"Please Sir!\" she begged. \"Let me cum!\" \n\n\"Tell me,\" he said again as he began to suck on her lips, pulling them into his mouth. \n\n\"No,\" she whispered. \"I can't, that's not fair!\" \n\n\"All is fair in love and war,\" he snickered from within her. \n\n\"Fuck!\" she gasped as he returned to working on her. \"You do not play fair Sir!\" \n\n\"No, I play to win!\" he said. \"Tell me, and you cum.\" She shook her head as she clamped her treacherous lips closed for fear they would betray her and tell him when she was at her weakest. \n\nBringing her to the peak he watched her fight the fight. Trying to keep herself from enjoying his manipulations. Trying to keep her secret to herself. Her head began to thrash from side to side. At the precipice, he stopped causing her to cry out and stomp her foot to the floor. \n\n\"It's all up to you,\" he whispered as he gently licked the outer edge of her sex. \"You can cum, when you tell me.\" \n\n\"Please!\" she begged. \"This is cruel!\" \n\n\"I agree,\" he laughed. \"But, it's still gonna happen. I am a man of my word!\" \n\n\"So mean!\" she laughed in pleasurable wickedness. \n\nHe dove into her this time, eating ravenously. Watching her struggle inside herself. Knowing it was taking a great deal of strength not to give in. Again at the breaking point she closed her eyes shut tightly, her lips tighter. He stopped, causing both feet to stomp this time. \n\nHe moved up her body and lay next to her. She looked to him, her eyes begging for mercy, which was met with a sinister smile. \n\n\"All I need is a number,\" he whispered as he ran his lips over hers, his tongue dipping into her mouth. \n\nHis fingers eased into her hot depths and caused her body to shake. \n\n\"I want to make you cum, I want you to coat my fingers with your delicious cream,\" he said to her as she opened her eyes and stared into the depths of his chocolate brown eyes. \"Just give me the number.\" \n\nAlex laughed as did Gavin, it sounded like something from a James Bond movie, a sinister villain promising to kill Bond quickly if he gave up the secret. She looked deep into his eyes and knew he was enjoying himself. This had nothing to do with the number, he was just enjoying toying with her body. So she channeled her inner Bond, to let him continue his pleasurable game. \n\n\"Do your worst,\" she smiled with a shake of her head. \"I will never tell!\" \n\n\"So it's going to be like that?\" he asked her as his fingers picked up speed. She clamped her lips shut, praying to God that they didn't betray her. But nodded her head vigorously. \n\n\"You know, I don't have to stop with my tongue or fingers? I could go get our friend, the wand, or better yet, let my cock out and use it,\" he informed her as he used his fingers on her. Forcing her body to respond quickly to him. \n\nShe turned her head away from him in a show of defiance. \n\n\"Oh,\" he laughed. \"I can go all night.\" He whispered as her body began to shake as her orgasm approached. \"Can you?\" \n\nShe nodded her head defiantly, enjoying their game now. It was driving her insane but it was definitely a most delicious game. One she was determined to win. \n\n\"Your body says otherwise, it appears it's on my side,\" he pointed out. \"It wants to cum, it's begging me to make you cum!\" \n\n\"Too bad,\" she gritted her teeth. \n\nShe turned her eyes to him, and he tilted his head with a smile. Her face reddening as her orgasm approached at rapid pace. Surely he would let her cum when he was done playing the villain in their little role play here, right? \n\nHer body demanded her mouth to speak so she held her lips tighter, her insides begging for release. Suddenly he was gone from her, his sinister smile mocking her. \n\n\"Fuck!\" she barked. \"You are the meanest man on the planet right now!\" she told him. \n\nHe kissed her deeply and she tried to convince him with her lips to end the game but he held her chin and smiled at her. \n\n\"You are really not going to tell me?\" he admired. She shook her head as her chest heaved with her excitement. \n\nHe continued on with his torture, and that was the only way she could describe it. Torture! Glorious, heavenly torture, but torture nonetheless! \n\nHe was so good making her body sing, but he wouldn't play the last note for her. Always bringing her to the edge only to stop the music right before the crescendo. \n\nShe physically tired from all the playing, he was wearing her out. Her body ached from all the muscle contractions. Her lips hurt from where she bit them to keep herself silent. \n\n\"Stubborn little mule,\" he smiled pulling his fingers up to lick them. \n\n\"You are going to know in a couple of days, what's a couple of days?\" she asked him under heavy breath. \n\n\"That's a long time to not cum,\" he pointed out. \n\n\"What?\" she gasped. \n\n\"What would happen if I said I wasn't going to touch you until I knew whether or not to be angry with you,\" he asked. \n\n\"You are not playing fair!\" she whispered as she closed her eyes. \n\nHe began to untie her hands from the couch, she looked to him with watery eyes. \n\n\"What are you doing?\" she asked him. \n\n\"Releasing you,\" he smiled. \"It's getting late, and we have a long drive tomorrow.\" \n\n\"But,\" she whimpered. \n\nThe tear snuck out and he caught it with his finger. \n\n\"No,\" he smiled. \"I'm very happy you held out, I love it when I'm challenged in this fashion.\" \n\n\"Are you sure, I could satisfy you!\" she told him as soon as her hands were free she put them on him clutching his shirt. \n\n\"No,\" he smiled. \"I enjoyed our little game very much, my only regret is that we didn't have more time. I could have broken you with more time!\" \n\n\"No chance,\" she smiled defiantly against his lips as he kissed her. 007 always wins! \n\n*** \n\nThe car was packed with gifts, including his, which she took down while he was in the shower so he couldn't see it. They were traveling down the highway headed to Pennsylvania and her family. Now she wasn't so certain this was a good idea. Here in the car with nothing to do but think of all the things that could go wrong. She wished she could just tell him to turn around. \n\n\"Awfully quiet over there,\" he pointed out. \n\n\"Is it too late to change my mind?\" she asked him with a snort knowing it was. \n\n\"What are you so nervous about? You know these people, I don't. I should be the one who's nervous!\" He laughed taking her hand in his and kissing the back in a comforting gesture that she melted over. \n\n\"You're right, I do know these people. I know exactly how they are going to respond! They are going be all, 'oh wow, we are so happy Alex has finally decided to find a good man to settle down with', then they are going to run away to some corner of the house and drool all over themselves as they undress you with their beady little jealous eyes and their holier than thou attitudes and wonder 'how did Alex land such a perfect man?'.\" \n\n\"Sex. Tell them great sex!\" Gavin suggested in a tease. \n\n\"Oh yeah! Would love to do that! Go up to them and say, yep, I bagged him because I can fuck like a two dollar Bangkok whore that he doesn't have to use his frequent flyer miles to get to!\" Alex laughed with him. \n\n\"Yeah, go with that! That would impress the shit out of them!\" Gavin said with a shake of his head. \n\n\"Thanks for enduring this with me,\" Alex sighed looking to him as he drove. \n\n\"Uh, not enduring anything, this is where I get to show you off. You think it's the other way around, but it's not. I'm showing your family, who missed the diamond in the rough, what a spectacular jewel you really are!\" Gavin said firmly. \n\n\"God you are so spectacular!\" she gushed as she looked at him. \"So perfect!\" \n\n\"No such thing as perfect,\" he told her with a shake of his head. \n\n\"No?\" she disagreed with a tilt of her head. \n\n\"See? That is where you women are messing up, there is no such thing as perfect. Even though every woman's magazine says they have the clues to finding the perfect man! Every book, every movie, every TV show, they all purport to show what the perfect man is,\" Gavin shrugged. \n\n\"Every one of them is wrong, there is no such thing as perfection. Our faults are what makes us special. They key to happiness is finding someone who's faults you can live with for the rest of your life. Stop looking for perfection and start looking for the faults and decide, can I spend a hundred years with him doing that?\" \n\nAlex looked at him with an admiring smile. \n\n\"Nah,\" she finally said with a firm shake of her head. \"You're perfect!\" \n\n\"I tried to sound humble, but you're right, I'm perfect!\" he chuckled jokingly with a shrug. \n\nThree hours into the nine hour trip Alex shook her head. \n\n\"I forgot how long it is to get there!\" she groaned. \"Maybe we should have flown in like you suggested.\" \n\n\"Don't want to spend time with me now?\" he teased. \n\n\"Not after your cruelty from last night!\" she reminded him from his non-orgasmic torture. \n\n\"All you had to do was tell me a number,\" he pointed out. \n\n\"All you had to do was go two seconds longer!\" she pointed out right back causing them both to laugh. \n\nHe rested his hand on her knee and she melted under it. It took her back to the first weekend. The way his hand touched her so innocently but made her body react. Nine months later it still reacted the same way. Not a smidge less, just as exciting as that first weekend. She rubbed her fingers over his, falling in between them she rested her hand there on top of his. \n\n\"Shall I make the drive more bearable?\" he asked as his hand slipped up her stocking covered thigh, moving her dress up as he went. She moved her thighs apart to give him access. \n\n\"Please don't torture me again Sir,\" she begged. \n\n\"I won't,\" he smiled as his fingers found her without panties. \"No panties?\" He smiled. \n\n\"I wanted to be available to you,\" she smiled sheepishly. \"Whenever you wanted me!\" He nodded approvingly as he licked his fingers before returning to her, he found it was unnecessary as her lips parted easily, anxious to take him in. \n\n\"I love the way your body responds to me,\" he said as he stared at the road. \n\n\"I love the way you make my body respond to you!\" she countered as she gripped the arm rests next to her to keep her hands from misbehaving. \n\nHis fingers rubbed her outer hood of her clit, forcing her to whimper with delight as he pinched it between his fingers. His fingers released it after evoking a gasp from her before they snaked into her causing her to lift her hips off the leather seat. His palm against her smoldering clit had him smiling his secret smile. Her eyes closed, praying this wasn't a continuation of last night. She would not be able to keep the number today, she was too weak, too desperate for her orgasm. \n\nHis fingers filled the car with the sound of her eager acceptance, the smell of her sex also rising driving him faster and deeper as he looked over at her and saw her biting her lip. \n\n\"Play with your nipples for me,\" he told her. \"I can't do it myself as I have to keep one hand on the wheel.\" \n\nShe opened the crossover of her dress, pulling her breasts from her lacy bra and fondling her nipples. Squeezing them gently as he continued to finger her. Her blood rushing to the tips of her nipples turning them purple as she squeezed them with her fingers. \n\nGavin watched her play, looking from the road, to her, then back to the road. The sloshing of his fingers told him this was going to be a hard orgasm. He wished he would have pulled over and played with her, so he could fully enjoy her body, and more importantly, her orgasm. \n\nHer hips lifted up as she pulled the bottom part of her dress up around her hips, setting her bare ass on the cool leather. Her skin sticking a bit as she sat down. He continued to press his fingers into her, developing a rhythm with her lifting hips. Letting his fingers enjoy her warmth. \n\n\"May I cum, Sir?\" she asked him, more like begged him she decided, as she heard her voice in the silent cabin. \n\n\"I'm not heartless,\" he smiled. \"Despite your belief from last night! Cum for me, I want to watch your beautiful face in the throes of your bliss!\" \n\nThe first orgasm had her gasping as she let it go, her voice cut off as she kept herself from calling out. \n\n\"There is absolutely no reason to be quiet now,\" he complained at her nearly silent response. \"I want to hear you!\" \n\n\"Yes Sir!\" she said in between ragged breaths as she came down from her orgasm. Her legs sticky with her cum. \n\nShe felt her cum drip down the crack of her butt, not quite a squirt but enough she was glad that she lifted her dress otherwise it would have put a stain on it! She looked to him, saw his profile as he watched the road as he drove. \n\nHe would look over at her and his eyes smiled at her. God she loved the way he looked at her. He always seemed to be devouring her. Or undressing her! Whatever he was doing in his mind when he was looking at her, had her begging herself to let him do whatever he was concocting. \n\nToday it was fingering her while he drove eighty miles an hour down the highway, last night tying her to the couch and torturing her to give up information. The night before that, the kitchen rack! This man's imagination was like that of Stephen King! It was limitless! Unable to keep bound to any one thought or process. Always able to come up with something else that was mind boggling! \n\nThe second orgasm was already building, she wondered if they would be like that for a while. He had stacked up the cars of her orgasm like a train last night, one right after another. Waiting at the station for the conductor to let them loose. \n\nHe did. \n\nShe came with a squirt the second time, it shot out of her hitting the seat with a soft splatter, his hand stopping most of it, thankfully. Otherwise she was sure she would have hit the dashboard! \n\nThe third orgasm fell from her immediately after, almost consecutive with no ebbing. It twisted her body even though she fought to keep herself open and let him work his fingers in her, bringing more from her if he desired. But she couldn't, her body folded up as the muscles in her contracted tightly. \n\nShe trapped his hand in the folds of her body, as it overwhelmed her. When it finally released her she sat back as quickly as she could, her body flopping against the seat. Her chest heaving as she tried to control it and bring in breaths to fill her lungs. \n\nHer nipples out, the warmth of the car wasn't enough to keep the chill of the outside air from tightening them even more as she clutched the seat. \n\nGavin slowed his fingers, not quite stopping, but easing his urging of her body to cum. The loud blast of the semi's horn next to them had her looking to the window. She saw the driver looking down at her and she covered her body quickly with her dress and turned her body towards Gavin. \n\nHer face flushed with heat from her embarrassment, the driver honking his approval of what he saw, whether that was just her breasts or her powerful orgasm as she didn't even try to hide, when it took over her. \n\nShe looked to Gavin and saw him slip his fingers into his mouth to clean them off, she shucked her seatbelt and covered his lips with hers, her dress not falling quickly enough giving the driver next to them more of a show. He honked again as she passionately kissed Gavin's lips, her tongue forcing her way into his mouth to catch some of her essence in his mouth. \n\nWhen she stopped she buried her face into his neck and laughed embarrassedly, she heard the motor rev up and knew Gavin was speeding up to elude the semi driver they had just entertained. \n\nShe adjusted the dress down after taking some Kleenex from her purse and cleaning herself as best she could. The seat needed attention as well. It made her blush and she shook her head at the idea of cumming in a public place where at least one other person possibly witnessed her orgasm. \n\n\"What do you think he is thinking right now?\" she asked him as she looked in the passenger side mirror to see the distance put in between them. \n\n\"Probably the same thing I think every time I see you cum,\" Gavin said firmly. \"That is the most beautiful woman in the world!\" \n\n\"The things you say,\" she whispered as she took his hand in hers. \"Not a poet! HA!\" \n\n*** \n\nPulling up to the hotel Gavin looked at it. He looked to Alex with a grin. \n\n\"Ok,\" she smiled. \"It's not the Drake!\" she defended. \"We are a small town!\" \n\n\"I get that,\" he nodded. \"But good God!\" \n\nHe looked at the one story hotel, the rooms side by side with no inside access. You pulled your car up to your door basically and walked into your room. It needed a good paint job as most of the current blue paint was faded to almost a powder blue. \n\n\"Hey!\" she playfully pushed him. He got out smiling with her as she waited for him. Opening the door he held his hand to her and she took it. \n\nOnce she was out he kissed her lips in apology for his teasing. \n\n\"You are going to have to do better than that!\" she told him when he left her lips. He moved closer, pushing her to the car. \n\n\"Shall we give another show?\" he asked her with a twisted wicked grin. She blushed as she could almost hear the semi horn in her head. \n\n\"Maybe we should just take our show indoors and please each other there!\" she suggested. \n\n\"Party pooper,\" he teased. \n\nHe moved away from her and went inside the office with its bright neon sign claiming vacancy. \n\n\"Good afternoon,\" he said to the clerk. \n\n\"Good afternoon,\" she smiled back, admiring him even though Alex stood just off to the side in full view of what was going on. \n\n\"We have reservations,\" he told her. \"Dr. Gavin Steward.\" \n\n\"Yes,\" the woman smiled. \"A doctor!\" She quizzed disbelievingly. \n\n\"Yes, Ma'am,\" he said with a shake of his head. He looked to Alex who looked upon the woman coolly. \n\nGetting their keys he signed the corresponding paperwork as the clerk ran his credit card. \n\n\"Oh, I'm going to have to start digging holes!\" Alex growled once she was back into the car glaring at the woman from inside her Mercedes. \n\n\"Easy now,\" Gavin laughed. \"These are your people!\" \n\n\"That one wasn't!\" Alex said defiantly. \"There are just over a thousand people in this town, and I know them all! I don't know that bitch, so she isn't from here!\" \n\nGavin dropped the bags on the bed and looked around. Definitely not the Drake, with its spacious rooms and opulent furniture. This one was small, and the covers looked like they were from the eighties. The desk looked like it was well past its prime. There was a small cubical fridge just to the side of the TV stand. It hummed noisily as Gavin looked at it. He kicked it gently with his foot and it sputtered slightly before it continued its noise. \n\nHe sat down, and bounced on the bed. \n\n\"Least the beds feel comfy!\" he smiled. \n\n\"C'mon,\" she smiled. \"Let me show you around town before I take you to see the folks!\" \n\n\"Deal,\" he smiled. \n\nWalking around town, they held hands and she pointed out the sights. There weren't many to see, just a typical small town, with its center courthouse being the main attraction. Walking out of the coffee shop after picking up something to warm them up they ran into someone Alex vaguely recognized. ",
        "\"Alex?\" the lady asked looking at her carefully. \"Alex Lasko?\" \n\n\"Stephanie?\" Alex smiled as the name clicked. \n\n\"How are you? I thought you moved to Pittsburg or something!\" Stephanie said giving Alex a hug before turning her eyes to Gavin who nodded a hello to her. \n\n\"Chicago actually,\" Alex told her. \"I'm home for the holidays!\" \n\n\"Awesome!\" Stephanie smiled. \n\n\"Steph, this is Dr. Gavin Steward,\" Alex said introducing them. \"My boyfriend.\" \n\n\"Doctor?\" Stephanie smiled with a surprised uptick of her eyebrow. \n\n\"Yes,\" he nodded with a soft smile. \n\nIt was getting harder to not laugh, as so far, every person she introduced him to, had the same response, one of disbelief. He didn't know if he looked like he couldn't be a doctor or that they didn't believe Alex had a doctor. Either way it was starting to wear on him, and his patience, as it could be construed as an insult. \n\n\"So what are you doing in Chicago?\" Stephanie asked tearing her eyes of Gavin, which Alex noted took some effort. \n\n\"Well I'm an artist,\" Alex shrugged. \"I have been teaching too.\" \n\n\"An artist?\" Stephanie asked with a scoff. \n\n\"She is quite good,\" Gavin defended picking up the derision. \"She did a mural at the Chicago Expo that drew rave reviews, was seen by just over a million people.\" \n\n\"No shit?\" Stephanie gasped in disbelief. \n\nAlex nodded that what he said was the truth. Happy that her gallant knight had come to her defense. \n\n\"Small town girl makes good, huh?\" Stephanie admired. Alex shrugged. \n\n\"Stephanie,\" came a voice from behind Alex who turned to see who it was. \"Oh my God! Alex!\" \n\n\"Megan,\" Alex forced a smile. \"How are you?\" \n\n\"I'm good! How are you? I thought you moved to Philly or something?\" Megan asked. \n\n\"Chicago,\" Alex said with a shake of her head. She could see there were multiple stories floating around about her. She was sure there were multiple stories of failures as well as Stephanie had seemed shocked that there was some success. \n\n\"Yeah?\" Megan nodded. \n\n\"She is an accomplished artist there! Has done stuff for the city that a million people has seen!\" Stephanie chimed in, relishing in the surprised look Megan gave. \n\n\"I have done some stuff for the Chicago Expo, it's a fair the city puts on, kind of like the World's fair, I guess,\" Alex explained. \"I have sold some stuff in a gallery there as well.\" \n\n\"Wow! That's great!\" Megan smiled, her voice betraying her actual feelings. It couldn't be more false if she just came out and said she thought Alex was the greatest thing since sliced bread. \n\n\"Megan,\" Alex said dismissing her tone. \"This is my boyfriend, Gavin Steward.\" The two shook hands. \n\n\"Doctor...Steward,\" Stephanie chimed in. \n\n\"Doctor?\" Megan gasped, now she was stunned. \n\nShe never would have thought that Alex Lasko would have made a name for herself, let alone land a doctor. The dorky high school girl who was always covered in paint, or dark charcoal dust. Her fingers blackened by her art. Smudges on her face as she was always more interested in her drawings than her appearance. \n\n\"Wow,\" Gavin grinned. \"I'm going to have to move here, you guys are making it sound like being a doctor is a big deal!\" \n\nThis got the three girls to laugh. Alex looked to Stephanie who gave her a wink that they both enjoyed that Megan was sufficiently jealous. The former prom queen was jealous of Alex. \n\n\"Well,\" Megan smiled. \"It was nice to meet you Dr. Steward, and Alex congrats on the success! I'm home to Derrick! You remember him? Derrick Stuppolo? We got married shortly after high school!\" \n\n\"Wow!\" Alex smiled trying to hide her amusement at the obvious ploy Megan was now employing. Rubbing it in that the boy everybody in their class wanted was now her husband. Alex had a thing for him, but that was then, when she didn't know any better. \"High school cheer captain marries High School quarterback! That's like every girl's dream!\" \n\n\"That or a doctor!\" Stephanie countered, continuing to turn the screws on Megan. \n\nMegan waved goodbye without responding and walked away quickly. \n\n\"What total bullshit!\" Stephanie gasped moving closer to Alex. \"I know for a fact her beloved husband is still sitting in jail from his drunk and disorderly from last night!\" \n\n\"What?\" Alex laughed covering her mouth. \n\n\"Yep,\" Stephanie nodded. \"Seems Derrick is still living in the past, telling whoever will listen about his guidance of the team to the state semi-finals! Got into an argument with a guy at the bar, fight ensued.\" \n\n\"Well,\" Gavin nodded with a bemused smile. \"It's tough for elite athletes like ourselves to let go of our glory years!\" \n\n\"When were you ever an elite athlete?\" Alex laughed thinking he was joking. \n\n\"Baby, I had a full ride scholarship to Northwestern in hockey!\" Gavin said semi-proudly. \"Led the league!\" \n\n\"In scoring?\" Alex asked stunned that he hadn't brought it up sooner. \n\n\"No,\" he laughed. \"Penalty minutes! Seems I had a bit of a temper back then!\" This got the girls to laughing before Stephanie said her goodbyes. \n\n*** \n\nAlex sat in the car, staring at her old house. Gavin waited patiently. He had started to get out when they first arrived but Alex hadn't budged. He closed the door and looked to her. He could see the clouds of disappointment and indecision on her face. He did nothing, he said nothing for the longest time, just waiting for her to come to grips with what was forthcoming. \n\n\"We can't just sit here,\" Gavin pointed out softly. \"Sooner or later we have to get out.\" \n\n\"Can we just drive back to Chicago?\" Alex asked him. \"I mean we were here and all, just because we didn't go in doesn't mean anything, does it?\" \n\nShe looked to him with a forced smile. She knew better, but she wanted to turn back the hands of time and go back to where she suggested this visit and keep her damn mouth shut! \n\n\"I'm going in,\" Gavin finally said. \n\n\"Have fun,\" Alex huffed. He looked to her with a shake of his head. \n\n\"I will carry you in, kicking and screaming if I have to!\" Gavin threatened. \n\nHe hopped out and walked around to her side of the car with her watching with her own mischievous grin coming out. When he got to her door she locked it. This caused him to double over in laughter. She looked to him innocently, batting her eyelashes. \n\nHe held up the key chain and pushed the button unlocking the door. He opened it and she let out a deep sigh as she undid her seatbelt. Helping her from the car she scowled at him. \n\n\"Just remember, this is your family!\" he pointed out. \n\n\"Don't remind me!\" she said as he took her face in his hands. \n\n\"What are you so worried about?\" he asked her. \"Your mother and I have already drawn blood, so it's not like it could get any worse!\" \n\n\"You obviously don't know my family!\" Alex told him with a disbelieving laugh. \n\n\"Then why did you want to come?\" Gavin asked her. \n\n\"My Dad,\" Alex shrugged. \"Can we just see him and leave the others out of it?\" \n\n\"Sorry,\" he said. \"Kind of a package deal, like me and you.\" She tilted her head at him and smiled. \n\n\"Again,\" she shrugged. \"Absolutely perfect!\" \n\nKnocking on the door, he gave her a wink of encouragement. She twisted a smile and nodded her appreciation. \n\n\"Why on earth are you knocking on the door to your home?\" her father asked as soon as he opened the door. \n\n\"Dad,\" she shook her head at the instant teasing he was giving her. \"I haven't lived here in years!\" \n\n\"Still your home!\" he said firmly. \"As long as I breathe anyway!\" She nodded as she hugged him, inhaling his Old Spice making her feel like she was at home, back in her childhood. \n\n\"Gavin!\" Al smiled at him. \"Thank you so much for bringing her home for the holidays!\" \n\n\"The pleasure was all mine,\" Gavin said shaking his hand. \n\nThey were ushered in and Marylyn came around the corner to greet them. \n\n\"Marylyn,\" Gavin said offering his hand which she accepted with a polite smile. \n\n\"Mom,\" Alex said with a slight hug. The tone was impossible to miss. \n\n\"Well, Gavin,\" Marylyn smiled. \"Thank you for coming to visit us during this special time of year!\" \n\n\"Thanks for letting me,\" Gavin nodded. \n\n\"I really wasn't aware you both were coming in until this morning,\" Marylyn said looking to her husband with a quick angry look. \n\n\"You didn't tell her?\" Alex asked him. He shrugged. \n\n\"I wanted it to be a surprise,\" Al laughed. \"It will be the first time in years that the whole family was together!\" \n\n\"Livy!\" Alex called out when she saw her. \n\n\"Alex!\" the woman smiled coming down the stairs and embracing her. \n\n\"You look fantastic!\" Alex beamed. \n\n\"As do you!\" Livy gasped looking her over. \"Look at that dress!\" She marveled as she held Alex's hands out to see the full dress. \"Never pictured you as a dress girl! Overalls yes! Sweatpants absolutely! But a dress?\" \n\n\"Already starting with me are you?\" Alex laughed. She stared at her for a few moments before Livy looked around her to Gavin. \n\n\"Oh! Sorry!\" Alex smiled turning to put her arm around Livy. \"Olivia,\" she said formally. \"This is my boyfriend, Gavin.\" \n\nThe two shook hands with pleasant smiles. \n\n\"Gavin, this is sister number three, Livy!\" Alex said hugging the woman with one arm. \n\n\"Nice to meet you,\" Gavin said politely. \n\n\"I've heard a lot about you,\" Livy smiled. \"Dr. Steward.\" \n\n\"Gavin,\" he said quickly. \n\n\"Of course!\" Livy smiled as she looked to her sister and embraced her again. This time more tightly, more lovingly. \n\n\"You ok?\" Alex asked her softly from within the embrace. \n\n\"Yes and no,\" Livy said not letting go of her baby sister. \"A lot to talk about...but not now!\" \n\nThe two separated and stared at one another. Alex searched her sister's face for whatever news she had but could get no inclination as to what she had to say. \n\n\"Well,\" Marylyn smiled. \"If I would have known you guys were coming I would have moved Nora out of your old room so you could have that and Gavin could stay in the guest room.\" \n\n\"No,\" Alex said shaking her head with a frown. Leave it to her mother to divulge Livy's news in the most embarrassing form possible. In front of a man Livy had known all of thirty seconds. \n\nNow she knew what needed to be talked about. If Livy and her daughter Nora were living here, that meant that the marriage to Don was crumbling. \n\n\"Gavin and I are staying at the hotel,\" Alex told them. She gave her sister a comforting squeeze that Livy understood. \n\n\"Nora can stay where she is!\" Alex sighed as she smiled happily at her sister. She hadn't realized how much she missed her until she got here. \"She's got the best room in the house!\" \n\n\"Staying in the same room, I suppose?\" Marylyn said with disproval dripping from her lips. \n\n\"Of course,\" Alex said with a wink at Livy. \"Wouldn't want to disappoint you by not giving you something to gripe at me about!\" \n\nAlex hugged her sister again and Livy smiled that once again, just like their childhood, Alex drew their mother's ire towards her and away from the other sisters. Something Livy took for granted, but now knew the sacrifice Alex made. \n\n*** \n\nGavin and Al walked around the supermarket together. Picking up last minute items that Marylyn needed. It was more of an excuse to get rid of the men so the women could chat. Both men knew the ploy so they shrugged to one another and left. \n\nGetting into Alex's Mercedes, Gavin let Al drive. \n\n\"It's your town, you know where you are going!\" Gavin insisted when Al balked at the idea of driving the car. \n\n\"So how much trouble are you in for not telling your wife we were coming?\" Gavin asked as they walked around the store. \n\n\"Nothing I'm not used to!\" Al chuckled. \"I'm sure Livy will be happy that Alex is here, Alex was always able to draw Marylyn's temper to her instead of the other girls! Marylyn has been on Livy something fierce!\" \n\n\"Anything I can help with?\" Gavin offered. \n\n\"Not unless you are a divorce lawyer!\" Al frowned. He looked to Gavin with an embarrassed shrug. \n\n\"Not uncommon in today's world,\" Gavin told him comfortingly. \"Unfortunate, but not uncommon. I know several good ones if you need one...lawyers that is.\" \n\n\"No,\" Al shook his head. \"She isn't sure what she wants to do yet, I think she should drop the bum, Marylyn is dead set against it!\" \n\n\"Well, she is religious,\" Gavin defended. \"They don't believe in divorce.\" \n\n\"Livy has put up with his chasing skirts long enough!\" Al growled. \"Let the bum go and get his rocks off without breaking my girl's heart!\" \n\nGavin nodded that he agreed, but he didn't want to stir up Al any more than he already was. \n\n*** \n\nAlex looked at Livy with sorry eyes. Her sister was sitting in the porch swing as she came out with her cup of coffee. \n\n\"So,\" Alex started. \n\n\"So,\" Livy repeated. \"Long story or short?\" \n\n\"Livy,\" Alex sighed. \"I'm your sister, just talk to me!\" \n\nLivy nodded as she stared at the birds picking at the bird seed she had just tossed out to feed them. \n\n\"How long?\" Alex asked her. \n\n\"How long have I been here? Or how long have we been having trouble?\" Livy asked her. \n\n\"Both,\" Alex demanded. \n\n\"I found out Don was cheating, two years ago, the first time that is,\" Livy exhaled deeply. \"We went to the church, like Mom told us to. Prayed like Mom told me to.\" \n\nAlex rubbed her shoulder before putting her arm around her. \n\n\"I thought we had gotten through it,\" Livy said after some silence. \"Found out he was still cheating about two months ago, the hard way!\" \n\n\"Did you catch him in the act?\" Alex gasped as she thought how horrible that would be. \n\n\"No,\" Livy said shaking her head as the tear came out. \"She came to the house, and told us she was pregnant. She and Don had a huge fight right there in the living room, in front of Nora and me!\" \n\n\"Oh my God!\" Alex gasped as she thought about her niece having to bear witness to it all. \n\n\"I wanted to get up and run from the room, but I was just so stunned!\" Livy explained. \n\n\"Oh baby,\" Alex said taking her into her arms. \"I bet you were!\" \n\n\"Nora is with him tonight,\" Livy explained. \"Opening the gifts from him at the house...with her!\" \n\n\"What?\" Alex asked. \n\n\"When the tests came back and Don was indeed the father, that he had insisted to me that he wasn't, I moved out, he moved her in because he didn't want her to be out in the cold with a baby!\" Livy said angrily. \n\n\"What about you?\" Alex asked her temper flaring. It made Livy smile. She was happy she had an ally. Something in short supply in this house. \n\n\"I moved in here and haven't heard the end of it!\" Livy explained. \n\n\"Mom doesn't expect you to stay with the son of a bitch!\" Alex nearly yelled. \n\n\"She is only worried about what the church will say, so on Sundays we show up, put our little happy faces on and pretend!\" Livy cried. \"I always feel like God should strike me down for the lies! The worst part is, she goes to our church! I have to sit there and look at the bitch and be nice!\" \n\nAlex closed her eyes tightly shut and it forced the tears from her own eyes. Living the lie, so that her mother can save face. Surely God didn't want that! If so, she would change her religion! \n\nLivy went for a walk to clear her head and Alex sat on the porch and stewed for a few minutes. When she could stand it no longer she stormed into the house and found her mother making dinner. \n\n\"How dare you!\" Alex raged. \n\n\"What?\" her mother asked surprised at the sudden intrusion of anger. \n\n\"Forcing her to pretend to be a family?\" Alex clarified. \"What kind of bullshit is that?\" \n\n\"Watch your language!\" Marylyn fired back. \n\n\"Watch your hypocrisy!\" Alex yelled. \"What kind of God would find your behavior tolerable?\" \n\n\"How dare you!\" her mother suddenly raged. \"You are not here! You are in Chicago living in sin!\" \n\n\"Let he who is free from sin, cast the first stone!\" Alex said, her anger seething. \n\n\"Don't pretend to spout a verse from our Lord and call yourself a Christian!\" her mother continued to rage. \n\n\"Don't pretend, for one second, God hasn't judged you already,\" Alex said her face draining. \"I might be living in sin, but I'm in love, the Lord has filled me with it, he has given me Gavin! You kneel and put on the face of Christianity but its false, you are worse that a whore...at least Jesus forgave one of those! He will never forgive those who bear false witness!\" \n\n\"How dare you speak to me that way?\" Marylyn turned on her. \n\n\"Enough,\" Al said louder than either one of them had been. \"This is Christmas! I will not have you two at each other's throat the entire time!\" \n\nGavin went to Alex and put his hands on her shoulders and found them shaking. She turned and buried her face into him. \n\n\"Dad,\" Alex said softly. \"I'm sorry.\" \n\n\"Look,\" Al said calmer now. \"We haven't shared a Christmas together in so long, just make it my Christmas present, huh?\" \n\nShe nodded to him and went and hugged him. He held her face softly. \n\n\"Livy will work out her own problems,\" Al told her firmly. \"They are not your problems.\" \n\n\"That's where you are wrong,\" Alex shook her head. \"We are sisters, her problems are my problems. She would never stand up to mother the way I would, but somebody needs to stand up for her!\" She turned to her mother. \n\n\"Have you even thought of the psychological damage you are doing to either of them?\" Alex asked her. \n\n\"Don and Livy are adults,\" Marylyn frowned. \"They can handle it!\" \n\n\"I don't give a fuck about Don! I'm talking about Livy and Nora!\" Alex gasped. \"The damage you are forcing on them for you charade is immeasurable!\" \n\n\"It's not your problem, like your father said!\" Marylyn reminded her. \"You'll go back to Chicago and live in your fantasy land thinking God is ok with your lifestyle because you think you are in love!\" Marylyn said with her claws mimicking air quotes on the word love. \n\n\"You are...an absolutely horrible person! A complete monster!\" Alex gasped as the tears fell. Marylyn looked upon her stunned that her daughter would say that to her. \"I used to think it was just me, but it isn't...it's just you!\" \n\nAlex fled the room in tears. Gavin looked to Al who was crying himself. \n\n\"Al,\" Gavin said softly. \"We'll see you tomorrow, I think it might be better for a cooling off period.\" \n\n\"I agree,\" Al whispered. \"But, we will see you tomorrow?\" \n\n\"Absolutely,\" Gavin said firmly. \"It's Christmas.\" \n\n*** \n\nGavin laid on the bed, the remote in his hand as he flipped through the channels. He had the volume on low as he tried to decide on what to watch. His mind thinking of the pain Alex was feeling. To come to the realization she had tonight was a long fall to recover from. \n\nThrough the time they spent with her parents earlier in the summer, Gavin had come to think the woman was just awful. The monster Alex had claimed. Marylyn seemed to rip Alex at every turn, something Alex did her best to fend off. There were many times in which he wanted to just order the woman from his home. Alex always wound up gritting her teeth and looking to her father. It seemed the only reason she was even trying was for him. \n\nHe had listened at the bathroom door, she had said she wanted a shower before bed. In reality she had sat in there and cried with the shower camouflaging her tears. He almost went in to comfort her, but decided to let her cry it out. It hurt him to hear her cry. It angered him. He wanted to drive over to the house and rip into Marylyn. To eviscerate her, but he knew that would only make this Christmas harder on Alex. \n\nThe shower turning off made him settle on the movie \"A Christmas Story\". Little Ralphie standing there in that hideous pink bunny outfit. The mother on the show reminded him of his own mother. Not just in looks, but in the way she handled things. From the soap in the mouth, to covering for him from his father. He chuckled at the scene as he thought of Pavy, he definitely would have been the kid who stuck his tongue to the flag pole! ",
        "He was thankful that he had a mother that was so unlike Marylyn in most instances. He thought of what his mother would have done to Marylyn had she gone after Alex in her presence. His mother would had held nothing back, he wasn't lying when he said she would have adored Alex. She would have, and because he loved her, that would have been enough for his mother to defend Alex as her own. \n\nAlex came in in a robe that stopped mid-thigh. She knelt at the side of the bed in the submissive pose. He looked at her for a few seconds. Her desire to become a true submissive for him had him shaking his head. He saw her eyes and they were betraying her and her tears, as they were reddened and puffy. She was doing her best to keep them from him, but she shouldn't have bothered. If she truly understood his Dom, she wouldn't have tried. \n\n\"Come to bed Little One,\" he said softly. \n\n\"Dressed or undressed,\" she asked before she stood. \n\n\"Dressed,\" he told her. \n\nShe rose and pulled her robe off dropping it on the floor revealing herself in a spaghetti strap camisole top and matching silk bottoms. She got into bed under the covers and he guided her head to his stomach where she laid her cold wet hair on his skin causing him to flinch slightly. \n\n\"Sorry,\" she whispered. \n\n\"Just a little cold,\" he smiled as he began to stroke her hair. \n\n\"No,\" she whispered. \"For embarrassing you.\" \n\n\"How did you do that?\" He asked her. \n\n\"As a sub, I'm a reflection of my Dom,\" Alex admitted. \"I should treat people the way you would treat them. I know there is no way you would have spoken to your mother like that, or anyone like that. I failed you.\" \n\n\"Where did you hear that?\" Gavin asked her. \n\n\"When you had me on my quest,\" Alex said softly. \"I was talking to Kelly and some of her friends that were also in the life...I found I wasn't doing anything like a submissive.\" \n\n\"Look at me,\" he demanded. She turned over and he hit the mute on the TV. \"Explain.\" \n\n\"They were going over what a good submissive does,\" Alex shrugged. \"I wasn't doing any of them!\" \n\n\"Tell me what a good submissive does,\" Gavin said to her. \n\n\"Well, the first one which causes me to believe I'm doomed, is patience,\" Alex shrugged. This caused Gavin to chuckle with the way she said it. She smiled. \n\n\"What else did they tell you?\" he asked her. \n\n\"Oh God! The list of what I'm not doing is endless!\" Alex frowned looking up and shaking her head. \"The two biggies I guess, is respect and grace.\" \n\n\"Respect and grace?\" Gavin quizzed. \n\n\"I was told, how I treat others was a sign of my Dom, if I showed respect then it looked good upon you, if I was disrespectful then...,\" Alex let a lone tear fall. \"And we won't even get into my lack of grace!\" \n\nAlex continued on with the list of things that were believed to be good qualities of a sub. \n\n\"Look,\" Gavin said with a shake of his head when she was finished. \"Nobody can be all those things! It's impossible! If you did those things, you wouldn't be human, you would be a robot!\" \n\nAlex looked up at him confused. \n\n\"Alex,\" Gavin said sitting up to where she was kneeling in the submissive position in the bed. He stroked her face. \n\n\"Yes, you should strive to be all those things,\" Gavin admitted. \"But you can't be that at all times! That isn't you.\" \n\n\"I want it to be me,\" Alex told him. \"I want to be a great sub for you! I want to be something you are proud of!\" \n\n\"Whoa! When have I ever said I wasn't proud to have you by my side?\" Gavin asked her. \n\n\"The girls indicated I wasn't a true submissive,\" Alex pointed out. \n\nGavin let his head fall back as he thought about it. He lifted it slowly. \n\n\"Do you know why I violated my absolute and took you in?\" Gavin asked her. She shook her head and shrugged at the same time. \"It was because you did something for me that no other sub had done.\" \n\n\"What was that?\" Alex asked him. \"Piss you off?\" This caused him to laugh. \n\n\"No,\" he smiled. \"You challenged me. Not in an insubordinate way, but in like climbing a mountain way. You gave me a goal.\" The look she gave him told him she was not understanding. \"That is what a Dom and sub should do for one another above all else, challenge each other!\" \n\n\"Do you remember when you first sat at my table?\" he asked her about their first night. \"You sat there and told me you had absolutely no experience as a submissive, your one idea of it was a farce!\" She nodded that she was following along. \n\n\"I'll admit, sitting there at that table I was thinking of all the delicious things I wanted to do to you, all of the fun I could have with your body,\" he admitted to her softly. \n\n\"Then the Dom in me said, this isn't your sub, this young lady would be unlike any sub you have had before,\" he told her. \"The man in me wanted you for sexual gratification, purely physical. My Dom wanted you for the challenge. The emotional challenge. That challenge was to show you what this life really is, to guide you into becoming an excellent sub.\" \n\n\"Every sub I have owned had those qualities they told you about,\" Gavin continued. \"But you had a spirt none of them had, that is why it is so important to me that you don't lose who you are. That's the challenge, to keep you who you are, but keep you as my sub. I wouldn't want it any other way!\" \n\n\"Strive for those things, but know, you won't be that person all the time,\" Gavin shrugged. \"And that is ok, we all fail, I fail as a Dom, but I always try to be better.\" \n\n\"Funny,\" Alex frowned. \"When they described the perfect Dom, you had every one of those qualities!\" \n\n\"I've been in this life for years,\" Gavin pointed out. \"I wasn't like this in the beginning. I had some of the traits, sure, but I had to work on them. Just like you have to! Do not let your setbacks become all you see. You have made great strides...see? As a Dom I have failed you.\" \n\n\"How do you figure?\" Alex snapped. \n\n\"I wasn't complimenting your progress, letting you know that you were doing well!\" Gavin told her. \"As a Dom I'm supposed to tell you those things. Like when you came in here just now, you went into the submissive position. I didn't tell you 'good girl' for that! I should have, to let you know that you are doing a great job. No, I took it for granted. Not exactly good Dom behavior. That's because every other sub I have owned had already mastered that, you are a novice, but you are so perfect that I forget you are a novice.\" \n\n\"Oh yes, my Alexandria,\" Gavin smiled kissing her lips. \"You are a challenge, you have challenged me to be a better Dom, and just like you, I'm trying to improve. If you had never come along, I never would have been forced to improve. See that is the key, to challenge one another to be better. It's not just in the BDSM world, it's in the vanilla world as well, we should challenge each other as a couple, as lovers, as friends and as humans.\" \n\n\"Thank you Sir,\" she smiled as she kissed his lips. She pushed him back to the bed and laid her head on his stomach again. Returning to the simple pleasure of his hands in her hair. \n\n\"Have you ever noticed,\" Gavin said softly. \"That it is easier to give respect to a total stranger than to people we know?\" \n\nShe tilted her head to look at him. \n\n\"Take me for example,\" Gavin told her. \"I open doors for perfect strangers, manners yes, but it's also respect, given freely because that is the way I was raised.\" She nodded that she understood what he was saying. \n\n\"My guess is that you lack of respect for your mother is well earned,\" Gavin told her. \"She earned that for her lack of respect for the things you believe in. Your art, yourself, your friends...your father.\" Alex nodded and turned back to the TV. Gavin understood her completely. He also washed away her guilt from the day. \n\n\"There is one thing I want you to consider though,\" he continued. \n\n\"What is that,\" she asked. \n\n\"You still need to respect your mother,\" he told her. \n\n\"Because she gave birth to me?\" Alex asked. \n\n\"No,\" Gavin told her firmly. \"Because of your father. If you respect him, you must respect her.\" \n\n\"Why?\" Alex fired at him. \n\n\"Because he loves her,\" Gavin explained. \"You are disrespecting him if you don't at least act cordially to her. This is the woman he loves, she may have lost the respect, but he obviously hasn't, so if you respect him, show him, by treating her the way he would want her treated.\" \n\n\"I pity anyone who knows me that treats you with anything less the utmost respect! The wrath that would rain down on them would make them regret even being born,\" he said solemnly. \n\n*** \n\nGavin pulled up along the road, there was cars parked in the driveway unlike the day before. \n\n\"Looks like the rest of the sisters are here,\" Alex frowned. \n\nShe was dreading going in after the day before. Most of the time when she and her mother fought there was time in between seeing each other again. Sometimes it was years! It all depended on how awful the fight was. \n\n\"Are you ready?\" Gavin asked her softly. \n\nShe sat looking at the door, she didn't want to go in. She wanted to go back to Chicago and spend the holidays with Gavin. Alone. This was such a monumental mistake. She wouldn't be surprised that Gavin didn't pull a Lena and refuse to come back for the way her family acted. \n\nShe saw a little face pressed to the window and that made her smile. Little Nora was peering out. \n\n\"Seems like the advance scout has spotted us,\" Gavin pointed out. \n\n\"Nothing gets past Nora,\" Alex grinned. \"We had better go in, otherwise she will be out here, barefoot in the snow!\" \n\n\"Ok,\" he smiled. \n\nHe walked around the car and just as he got her door opened the front door to the house opened. \n\n\"Aunt Alex!\" the little girl screamed as she ran out of the house leaving the front door standing wide open. \n\n\"Absolutely not!\" Alex barked at her. \"You go back in before you get pneumonia!\" \n\nNora disregarded her command and came out in a full sprint. \n\n\"Oh, so it's a family trait,\" Gavin deadpanned noticing the little girl did not slow down, let alone adhere to the command. \n\nNora split them as she leapt into Alex's arms with a squeal. Gavin shucked his coat and draped it over her to protect her from the single digit cold. \n\n\"I've missed you!\" Nora blurted. \"Can I have your colors from your room and your paints? Can I have the horse picture? And the one with the butterflies?\" \n\n\"Whoa, whoa, whoa!\" Alex beamed hugging the girl. \"Slow down!\" \n\n\"Another family trait,\" Gavin teased. Alex glanced at him for his teasing. \n\n\"Who is that?\" Nora asked looking at him for the first time. \n\n\"This is my boyfriend,\" Alex said proudly. \n\n\"You have a boyfriend?\" Nora asked. \n\n\"Well don't sound so surprised!\" Alex laughed as she spun Nora in a circle making her laugh. \n\n\"His name is Gavin,\" Alex said when she was done spinning. She looked up to see Livy on the porch. \n\n\"She has been dying to see you,\" Livy called out. \"Her favorite aunt!\" \n\nAlex started to carry the little girl in, pulling Gavin's coat tighter around her to protect her from the cold. \n\n\"I have a boyfriend too!\" Nora whispered in her ear. \"His name is Greggory, but don't tell mom!\" \n\n\"Our secret!\" Alex whispered back kissing her cheek which brought a kiss in return. \n\n\"Hi Gavin,\" Livy laughed as he came up the steps. \"Sorry for the attack of the munchkin!\" \n\n\"No problem at all,\" Gavin assured her. \"I haven't seen Alex smile like that in a while, so it's worth it.\" \n\nAlex set her down on the floor as soon as they were inside. \n\n\"I can't believe you came out without a coat!\" Alex finally took the time to chastise her. \"You could have gotten sick.\" \n\n\"Aunt Alex! I had my boots on!\" Nora said like that was all she needed to fend off any illness. \n\n\"Not good enough!\" Alex warned her dropping to her knees to warm Nora up with her rubbing of the little girl's arms. \"Is it Dr. Steward?\" \n\n\"No, it really isn't,\" Gavin agreed. \"It's like walking in sub-zero wind chills from the train! In a sleet!\" \n\n\"Not helping,\" Alex pointed out what he was getting at. \n\n\"Wasn't trying to,\" Gavin said firmly. \n\n\"Never going to live that one down am I?\" Alex asked snuggling her niece. \n\n\"No,\" he said plainly. \n\n\"You are a doctor?\" Nora asked him. He nodded. \"You must be really smart!\" \n\n\"Some people think so, but some people treat me like I'm dumb!\" Gavin pointed to Alex who had her back to him so she didn't see it. \n\n\"You think Gavin is dumb?\" Nora asked her. \n\n\"What?\" Alex coughed out, she looked behind her at him. \n\n\"Ask her, when she had pneumonia, who was trying to convince me that I didn't know how sick she was?\" Gavin teased. \n\n\"Don't listen to him,\" Alex tried. \"He just likes to give me a hard time!\" \n\n\"You should spank him then!\" Nora suggested with a smile. \"Daddy says that's what bad boys and girls get!\" \n\nGavin barked out a laugh which he covered and looked to Alex. \n\n\"Oh please don't,\" Gavin said dryly. Alex blushed red and didn't look back. \n\n\"Merry Christmas!\" Al called out to her when he came into the hallway. Alex went to him and hugged him tightly. \n\n\"Merry Christmas,\" she said within his embrace. \"I'm sorry for last night.\" She whispered while he still held her. \"I will behave today, I promise! For you!\" \n\n\"You are my little girl,\" Al smiled pulling back. \"You never have to apologize to me!\" \n\n\"Yes I do,\" Alex said. \"I love you.\" \n\n\"I love you,\" Al said kissing her cheek. \"C'mon in the kids have been dying to open the gifts!\" \n\nAlex coming into the living room brought out another round of semi hugs from her sisters and their children and husbands. Gavin was introduced and all had the same lifted eyebrows look of pleasant surprise. Alex clutched his hand with one hand, and held Nora on her hip with the other. \n\nNora refused to be put down and every time her mother would try, Alex would shoo her away. \n\n\"So let's get to it!\" Al called out from the living room where the tree was. \n\nThe kids needed no other encouragement as they ran to the room. Gavin followed Alex in as she talked with Nora about the gifts she got at her father's the night before. \n\nWhile Gavin sat on the couch, Alex sat at his feet with Nora. The kids tore into the gifts opening them in a frenzy. Alex watched with pride as her nieces and nephews opened her gifts. Each and every one of them looked shocked at the gifts they had been presented with. Each looked to her in pleasured thank yous. \n\n\"Oh my God!\" her eldest nephew gasped as he looked into his box. \n\n\"Trevor!\" his mother immediately admonished his blasphemy. \n\n\"An autographed Sid the Kid jersey?\" Trevor gasped pulling it out reverently. \n\n\"You still play, right?\" Alex asked basking in his response. He nodded. \"Still wearing his number?\" He nodded again as he stared at the black and gold hockey jersey. \n\n\"You should thank Gavin,\" Alex smiled at him. \"He is the one that got his autograph on it.\" \n\n\"You met Sidney Crosby?\" Trevor asked moving closer to Gavin. \n\n\"Yeah,\" Gavin shrugged. \"I know most of the Blackhawks, some are patients of mine. I had asked them if they would get it autographed for you, but they told me to come down to the United Center and get it. Sid had a bad chest cold, so I gave him something for it, got a lot of ribbing for it because he went out and had two goals and an assist! They said I wasn't allowed to treat opponents until after the game!\" Gavin laughed causing Trevor to laugh with him. \n\n\"What's he like?\" Trevor asked. \n\n\"Good guy, funny,\" Gavin told him with a shrug. \"A guy to look up to for sure.\" \n\n\"Wow! You met Sid the Kid!\" Trevor couldn't believe it. \"Thanks Aunt Alex!\" He said hugging her. \"This is by far the greatest Christmas ever!\" He gently put the jersey on and sat down. \n\n\"Princess dresses!\" Nora shrieked above all the commotion. \"Belle's dress! Ariel! Anna and Elsa!\" Nora abandoned them all to jump into Alex's arms. \n\n\"How did you know?\" Nora asked her. \n\n\"I had a little elf tell me,\" Alex smiled looking at Livy. \n\n\"I said one,\" Livy pointed out. \"Not all of them!\" \n\n\"I couldn't decide which princess she would be, so I got them all so she could be them all!\" Alex said accepting Nora's loving kiss. \n\n\"Go give this one to Grandpa!\" Alex whispered handing Nora an envelope after she put on one of her dresses. \n\nNora went over and handed the envelope to Al who bowed to her royal highness as he took it. \n\n\"Alex, I told you not to bother,\" Al warned her. \n\n\"I don't live under your roof anymore,\" Alex smiled defiantly. \n\n\"Gavin,\" Al looked to him for help. \n\n\"No way, she's way too mean for me to tangle with!\" Gavin laughed. \n\nAl opened his envelop. \n\n\"Oh Sweetheart! This must have cost you a fortune!\" Al said pulling his Steeler tickets out. \"Fifty yard line lower bowl?\" \n\n\"Just repaying you for all the games you took us to!\" Alex told him, her heart floating at his response. \n\n\"We never got these type of seats!\" Al gasped. \n\n\"It's time,\" Alex smiled. \n\nGavin patted her on her shoulder for a job well done and Alex took his hand and kissed it lovingly. \n\n\"Gavin?\" Nora called out. \"Should I give Alex her gift from you?\" \n\n\"Sure,\" Gavin smiled at her as she picked up the small box. \n\nNora ran to her and jumped in her lap, then handed her the box. \n\n\"Want to help me?\" Alex asked her. Nora began to help unwrap the paper. Alex stopped when she saw the blue felt jewelry box. \n\n\"Maybe he got you a wedding ring!\" Nora said as she saw the box. \n\n\"Easy now!\" Gavin warned with a laugh. \n\n\"This is too big for an engagement ring!\" Alex smiled kissing her niece for bringing it up. The Cartier label had her frowning at the cost of what was inside. The name alone reminded her of the jewelry counter lady who said that some watches ran in the tens of thousands. \n\nNora helped her gently open the box. \n\n\"OH MY GOSH!\" Nora gasped. \"Are those real diamonds?\" Nora asked turning to him. Gavin smiled and winked at her. \n\n\"Jesus,\" Alex gasped as she looked at it. The watch diamonds sparkled in the light streaming in from the window. The diamonds encircled the watch face and went down the band. \"Gavin!\" \n\n\"Merry Christmas,\" he said to her as she moved up to kiss him. \n\n\"I don't want to hear one thing about what I got you!\" she threatened. \"It doesn't come close to this!\" \n\n\"We'll see,\" Gavin said after staring at her for a few seconds. \n\n\"Kiss her!\" Nora suggested. \"You have to kiss a girl after you give her diamonds!\" \n\n\"Well,\" Gavin smiled. \"I don't want to break protocol!\" They kissed gently as Nora squealed. \n\nNora then ran back to the tree and tried to lift Gavin's gift while Alex blushed at the way Gavin was looking at her. \n\n\"Gavin!\" Nora complained. \"Yours must be tools! This is really heavy like tools!\" \n\n\"Tools?\" Gavin smiled as Alex closed her eyes. \n\nHe nearly laughed out loud, he had already told her he knew nothing of mechanics. So tools was most definitely not in the box. He looked to Alex to watch her close her eyes regretfully. \n\nThis was the moment she had been dreading for weeks now. It seemed like such a good idea at the time, but that was before the pneumonia, before the fight, before the commitment to be a proper submissive. This could be very bad!"
    ],
    "authorname": "CJT",
    "tags": [
        "exhibitionism",
        "oral sex",
        "bondage",
        "fingering"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-25"
}