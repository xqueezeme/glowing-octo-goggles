{
    "title": "Adventures of Hollywood Jim Ch. 41",
    "pages": [
        "While we still in the midst of filming \u201cDays of Rage\u201d in London, Marty O\u2019Brien called with a hastily organized photo gig. The Triple Threat Tour we\u2019d worked on was doing a special gig at the O2 Arena for the BBC and HBO in the states. And we\u2019d be doing all the photos again. Beyonce`, Rihanna and Tigress would be on the bill again and there was a promise of \u201cunannounced special guests\u201d on the show too. For some reason, Marty kept that a secret even from us. Very un-Marty, if you asked me. But I wasn\u2019t complaining; my entire time in London had been spent at the flat with the film\u2019s star Jennifer Aniston and the studios\u2019 London rep Beth. Which saved the studio money, and the benefits of being around the two of them had been quite nice as well. Chris was doing quite well too, he\u2019d hooked up with one of the production assistants so I didn\u2019t see much of him on days we weren\u2019t working. I learned long ago not to ask too many questions about his hookups, and he rarely asked about mine. \n\nBeth was turning out to be quite fun to be around, and not just when her sister Sophie was there too! \n\nChris and I met at the vast 02 Arena complex the morning of the show for the soundcheck and to go over logistics with Terry Carter, the English promoter. Even with all the chaos going on around us, Terry was cool. He\u2019d been promoting shows in England for many years, so something like this was nothing for him. Marty and Terry went over what to expect and let us in on who the guests would be. Fergie was expected, and possibly Mariah Carey. One of them was this British singer I\u2019d never heard of but was apparently quite the rising star there, Pixie Lott. She\u2019d be joining Rihanna during her set. Marty was quite proud to get her on the show, he\u2019d just made a deal to bring her to the USA to open for Tigress\u2019 on their upcoming tour, so he was positioning her to be his \u201cnext big thing\u201d with lots of promo appearances planned. Marty had pulled out all the stops to make sure \u201cPixie\u201d got first class treatment. Like I said, she was already a rising star in Britain, but he figured the more press she got with the American market, the better. Chris and I couldn\u2019t help but snicker at calling somebody Pixie, sure it was a stage name and all but it just felt weird to Yanks like us. And Marty was starting to get a little annoyed at us.\n\n\u201cAlright, I\u2019m glad you\u2019re getting\u2019 a laugh out of this, I\u2019ll remember it when I\u2019m choosing tour photographers.\u201d He said with mock-seriousness.\n\nAs we were leaving the Arena, as if by chance, Beth and Sophie were waiting outside by Sophie\u2019s car, a blue Ford Focus convertible. \n\u201cHey Jim!\u201d they yelled.\n\u201cLooks like you just got a ride somewhere nice.\u201d Chris said.\n\u201cOh, well, they\u2019re just, uh\u2026\u201d I stammered.\n\u201cFriends?\u201d he said with raised eyebrows.\nI could only nod in response as they walked over.\n\u201cYeah\u2026wish I had friends like that.\u201d He replied wistfully as he walked away to the sexy redhead standing by an equally cool looking Jaguar.\n\u201cWhat are you two doing here?\u201d I asked after getting a sweet kiss from both girls.\n\u201cSophie works for Terry\u2019s company, she gets me into every show here, cool, huh?\u201d Beth said.\n\u201cI can clearly see the advantages of this arrangement.\u201d I said with my best professorial tone.  \nThey both laughed like schoolgirls.\n\u201cI\u2019m so cool\u2026\u201d I thought to myself.\n\u201cSo I hear that Pixie Lott\u2019s gonna be on the show.\u201d Beth said\n\u201cDon\u2019t know anything about that.\u201d I replied.\n\u201cIt\u2019s true.\u201d Sophie added in a weary tone \u201cShe\u2019s all wacko about that.\u201d\n\u201cI\u2019ve never heard of her.\u201d I said.\n\u201cYou\u2019re kidding? Oh my god she\u2019s so cool!\u201d Beth said excitedly\n\u201cCome on Hollywood, we\u2019re buying you lunch.\u201d Sophie said as she led me to the Ford and we were off. Beth was playing Pixie\u2019s CD as we drove along and giving me all the details about her. Not bad, I thought. And both wanted to know any gossip about Rihanna, I had to wonder if I should tell them about my fling I\u2019d had with her during the American tour. After what I\u2019d already done with them, I doubted anything would faze them.  They\u2019d probably enjoy it for all I know. \n\nThe night of the show was definitely the biggest affair we\u2019d ever been a part of. Beth and Sophie drove me there, looking incredibly sexy in matching miniskirts with glitter accents that showed some serious legs. There were paparazzi photographers everywhere and plenty of stars too. But these were of the English kind, so the names\u2019 meant little to me. This was one of those rare moments when I had to look around and wonder if I was really here. Chris reassured me like only he could;\n\u201cGet your ass in gear Hollywood! We gotta a job to do!\u201d he barked.\n\nThe show was something else! Everyone involved had radically changed their set lists for this show. Which was good, my theory was when you see the same show night after night, the pictures begin to suffer. Rihanna and I hadn\u2019t seen one another in a few months. And a lot had happened to her since then, according to the tabloids. She had even fiercer looking guards around her than usual. So there was no way we\u2019d have any kind of meeting like before. Like Chris said, I had a job to do.\n\nChris and I headed into the backstage areas for extra gear and saw Marty there.\n\n\u201cHey boys! I\u2019d like you to meet Miss Pixie.\u201d \nPixie Lott was there with him and several other assistants. She was quite pretty, I had to admit. She had golden blonde hair and warm brown eyes. And a killer body that had definitely spent lots of time either in an elite dance studio or a gym. She was definitely showing it off too, in a glittery tank top and blue jeans.\n\u201cHi guys, I\u2019m Pixie.\u201d She said with a cute accent\nThis was one time that Chris didn\u2019t play super salesman. To my surprise, he was the one stammering for a response.\n\u201cHi, I\u2019m Jim. That\u2019s Chris, my boss. We did all the photos for the American tour.\u201d\n\u201cI know, Marty\u2019s quite the promoter for you guys. I can\u2019t wait to see your photos tonight. I\u2019m just so nervous about Rihanna\u2026what\u2019s she like?\u201d\n\u201cOh, she\u2019s cool, great lay\u2026I mean LADY!\u201d I said quickly correcting myself.\nChris was practically standing behind me now like a shy child.\n\u201cUh, you know there\u2019s some friends of mine who\u2019d love to meet you, maybe later?\u201d I said.\n\u201cOh, I\u2019d love to meet them, bring them to the after-party.\u201d She said cheerfully as she looked at Marty.\n\u201cYou got it, guys.\u201d Marty said \u201cI\u2019ll tell Terry\u2026come on my dear, it\u2019s showtime.\u201d\nAnd with that, Marty and Pixie left.\nMy, oh, my, she had a nice ass!\nChris hadn\u2019t said a word the whole time, a first for him.\n\u201cWell, you were in fine voice tonight, should I wind you up for the Q&A?\u201d I said.\n\u201cL-l-let\u2019s get going.\u201d He said.\nOnce in a while I get the upper hand with him, and it\u2019s always nice! \nRhianna\u2019s set was even better than I recall. She looked incredibly hot, as usual. But there were few, if any, glances toward me on stage left snapping photos. I turned around and there was Ms. Pixie waiting for her cue to join her onstage. \n\u201cHey, do I look OK?\u201d she asked nervously.\nShe had the same outfit on when we met, but the jeans had been traded for a pair of tight black bicycle shorts that looked painted on and thigh-high leather boots. It took all I had to not totally drool over her, she looked so hot. \n\u201cWow\u2026you look great!\u201d I said.\nWe then heard Rihanna talking onstage.\n\u201cAlright London\u2026I\u2019m gonna bring someone up here for my next song\u2026give it up for\u2026Pixie Lott! Come on, girl!\u201d\nShe hesitated momentarily, then looked at me and smiled as if to say \u201cwish me luck\u201d then quickly dashed out onto the stage, waving to the screaming crowd. Then the two went right into Rhianna\u2019s song \u201cShut Up and Drive\u201d, Pixie\u2019s song \u201cMama Do\u201d and a cover of Joan Jett\u2019s \u201cBad Reputation\u201d. They sounded great together and played off one another in an \u201cI\u2019ll show you\u201d kind of way. I can only imagine what Beth and Sophie were thinking. I hadn\u2019t seen them since we arrived, they followed me into the backstage area for a minute then apparently went to their seats.\n\nOnce Pixie had finished her mini set with Rihanna, she walked offstage and immediately went for me, giving me a big hug, much to my surprise.\n\u201cOh, my god! That was so awesome! I can\u2019t believe I did it!\u201d   \n\u201cWell, you did.\u201d I replied, still trying to understand why she went for me and not Marty. After all, he was the guy bringing her stateside.\nPixie was quickly swept away by Marty and reps from her record company. She looked over her shoulder at me and waved as she was led away.\n\u201cI know that look\u2026\u201d I heard Chris say as he stood by me.\n\u201cYeah, I\u2019ll bet you do\u2026\u201d I replied and we went back to gather our gear for the night.\nThe tour had progressed to the point where we knew the best time to leave the venue to beat any traffic. We weren\u2019t disrespecting the performers, but we\u2019d seen the show so many times that there wasn\u2019t much we hadn\u2019t already seen before.\n\nAs we were packing up, Marty buzzed us on our cellphones with info on the after party. It would be at the Dorchester Hotel in London, I remembered that place from long ago. At least this time Chris wouldn\u2019t blow me off like he did the last time we were in London. \n\u201cOK, our car\u2019s downstairs, let\u2019s go.\u201d He said\nThe underground garage was a hubbub of activity between drivers, musicians, managers and assorted hangers-on. In the midst of this I heard someone yelling.\n\u201cJim! Over here!\u201d I saw Beth and Sophie at their car waving me over.\nI quickly dashed over to them.\n\u201cThe party\u2019s at the Dorchester, see you there.\u201d I said and turned to run back\n\u201cWait a minute! You might need this.\u201d Sophie said as she held up my wallet. \u201cYou left it in my car.\u201d  \n\u201cHoly shit!\u201d  I didn\u2019t realize it had fallen out. \u201cThanks!\u201d\n\u201cSee you there, baby.\u201d Beth said as they drove away.\nI walked back to the rented car Chris and I had, and saw it was gone.\n\u201cSon of a bitch!\u201d I screamed as I stood in the now empty garage.\nHe did it again! Chris had abandoned me in London.\nI started to walk, then ran up the ramp hoping I might catch him before he disappeared.\nNo luck, there was a vast sea of cars but no sign of Chris.\n\u201cWonderful!\u201d I said out loud.\nI started walking, where I had no idea. I gotta figure out how to get to this Dorchester Hotel, wherever that is.\nCalling Chris\u2019 phone was no help, it went to voicemail.\nBut London had other plans for me as I heard a car horn honking and a girls\u2019 voice screaming.\n\u201cJim! Jim! Over here!\u201d\nI saw Sophie\u2019s convertible and Beth standing up in it screaming my name.\n\u201cOver here!\u201d\nI immediately ran toward their car.\n\u201cWhat the fuck are you doing here?\u201d \u201cWhere\u2019s your ride?\u201d They asked.\n\u201cUh, I\u2019m not sure. He probably figured I was riding with you and took off.\u201d\n\u201cBastard\u2026\u201d Beth growled\n\u201cAw, he\u2019s not so bad.\u201d I said trying to defend the guy who dumped me.\n\u201cI hope he doesn\u2019t get laid tonight!\u201d Sophie said with a laugh as we drove away.\n\nIt had been awhile since I\u2019d been to the Dorchester; it still had that old-world charm to it. It must\u2019ve quite the place long ago. But it still had the private elevator that quickly spirited us up to what was called the \u201cSkyline Room\u201d at the top of the hotel. The windows looked out onto London\u2019s late-night lights. There was music playing everywhere and flashbulbs were going off in different places. I was happy the show went off great, and happier that we\u2019d be heading home soon with \u201cDays of Rage\u201d having finished principal photography. London had been great to us again, but L.A. was calling our names again.\n\nBeth and Sophie were spellbound at what they were seeing here. With their jobs in the film/music business they\u2019d probably been to their share of these events but once in awhile they look at it in a whole new light.  \n\n\u201cCan I get you two a drink?\u201d I asked\nThey both nodded.\n\u201cWhat would you like?\u201d I asked again\n\u201cOh! A glass of wine for me.\u201d Beth finally said.\n\u201cI\u2019ll have one, too.\u201d Sophie replied\n\nI found the bar and added in a Jack Daniels and water for myself. While getting my drink I spotted Terry Carter.\n\u201cHey! Great show, Terry!\u201d I said.\n\u201cOh, thanks, mate. Things like this are always an adventure, where\u2019s your partner?\u201d\n\u201cI have no idea. He ditched me in the garage.\u201d\n\u201cStrange, I just saw him in the lobby arguing with the Concierge`.\u201d\n\u201cHmm, maybe he didn\u2019t have his invitation.\u201d I said with a laugh.\nTerry chuckled in response.\n\n\u201cHey, Jim!\u201d I heard Marty calling me from across the room. \u201cChris is on the phone, says the hotel won\u2019t let him into the party.\u201d\nFor a minute, I chuckled and thought this would be the perfect revenge.\n\u201cYeah, let him in\u2026but make sure the bar\u2019s out of beers.\u201d I finally said.\nI felt a distinctively soft presence on my side I heard an equally soft voice\n\u201cHi, Jim.\u201d\nIt was Ms. Pixie, back again and holding her own glass of red wine. She\u2019d traded her stage clothes for a white pantsuit and black t-shirt combo.\n\u201cSo, where\u2019s these friends of yours who wanted a picture?\u201d she asked.\n\u201cOh, right this way, my dear.\u201d I said with elegance.\nMarty stopped me slightly.\n\u201cDon\u2019t wrinkle the merchandise, Mr. Hollywood.\u201d He said\nPixie laughed, she seemed to like the attention.\n\n\u201cUh, Pixie, this is Beth and her sister Sophie.\u201d I said\nThe girls were completely star struck, and hesitantly held out their hands to her. She was incredibly friendly towards them and gladly posed for photos. I was just an observer as they chatted. Then out of the corner of my eye I saw Chris arriving.  I excused myself as he spotted me.\n\u201cWhy Chris, fancy meeting you here.\u201d I said with a snicker.\n\u201cVery funny! Where\u2019s the bar?\u201d he snorted.\n\u201cOh, didn\u2019t you hear?\u201d I said with a serious face. \u201cThey just ran out of booze.\u201d \nChris had a look of horror on his face, before I stated to giggle.\n\u201cNot funny!\u201d he said before stalking off to the bar.\nPixie and the girls seemed to be deep in some kind of discussion, but with apparent giggles thrown in. I went out on the balcony to check out the view. To see the London skyline at night was truly amazing. It was another one of those \u201cam I really here?\u201d moments that stay with you. In the dim light I saw someone sitting at a table with several companions, along with 2 or 3 very large men to the sides.\n\n\u201cHey, Jim\u2026\u201d a voice said.\nIt was Rihanna, seated with several friends who I recognized as members of her band. She immediately got up and walked towards me. She had on a simple black dress with silver accents, her hair was back to its normal dark color.    \n\u201cHow you been, baby?\u201d she said with a hug and sweet kiss on my cheek.\n\u201cHow about you?\u201d I asked, I think she knew what I was referring to.\n\u201cI\u2019m OK\u2026I\u2019ll be fine.\u201d She said with a confident smile \"what about you? It\u2019s been awhile since I saw you.\u201d\n\u201cOh, you know me, work, work and more work. We\u2019re here shooting Jennifer Aniston\u2019s movie.\u201d\n\u201cDays of Rage?\u201d \n\u201cYes, how did you\u2026\u201d\n\u201cI was offered that film too! But not to star in it, I would\u2019ve played one of the assassins. Oh, man, I wish I could\u2019ve done it. \u201d\n\u201cOh well, that\u2019s show-biz.\u201d I said with a shrug.\n\u201cYeah, we could\u2019ve, um, seen each other you know.\u201d She said with a sexy smile and raised eyebrow. \u201cSeen each other a lot.\u201d\nUh-oh, what should I say now?\n\u201cJim!\u201d I heard Beth\u2019s voice from behind me.\nSaved by another pretty lady.\n\u201cOh, somebody\u2019s calling you now\u201d She said with a sweet kiss and a soft caress of my crotch \u201cyou have fun baby.\u201d as she went off with her entourage.\n\u201cCome on hun, Pixie\u2019s gonna show us her suite.\u201d Beth said as she took my arm and led me away.\nI looked over my shoulder and Rihanna gave me a smile and a wave.\n\u201cGee, I guess you two hit it off pretty good.\u201d I said\n\u201cYou bet!\u201d she replied as we joined Sophie and Pixie and headed for the elevator.\nThe wine had obviously hit the girls and they were all giggling the whole time like they\u2019d known one another for years.\n\nWe didn\u2019t realize it but we were heading past where the suite\u2019s were. The elevator doors opened and we were in the pool area.\n\u201cHey! Let\u2019s see what\u2019s there!\u201d Beth said and we immediately went to check out the pool. The lights were off and doors locked but somehow Pixie\u2019s key card opened the doors and we all looked at one another with surprise.\n\u201cCool!\u201d she said with surprise and excitement as we crept inside.\nWe quietly walked inside the vast indoor pool area. The water\u2019s reflection shimmered on the ceiling and walls and our voices echoed. We all tried to be as quiet as possible and be only high-class trespassers. \n\u201cWow this is so cool.\u201d Sophie said as she walked around.\n\u201cI think it\u2019s even heated too\u2026\u201d Beth said as she elegantly dipped a toe into the water.\n\u201cMan, looks like there\u2019s a sauna in there too.\u201d Pixie said as she peered in a window.\n\u201cI wonder if there\u2019s a light switch around here.\u201d I said looking around on the walls.\n\u201cNo, leave them off, I think it\u2019s cooler.\u201d Sophie said.\n\u201cShall we try it out?\u201d Beth said looking at me and the pool with a naughty smile.\nSophie and Pixie both giggled at the thought.\n\u201cUh\u2026 are you sure?\u201d I was apprehensive at what was going on.\nBut the girls weren\u2019t, Beth and Sophie took off their shoes and unzipped their dresses. They were suddenly topless, Sophie wearing only a pink thong, Beth in skimpy white panties. Pixie looked at them, and began taking off her shirt showing a flesh colored bra that disappeared showing beautiful C cup tits with bright pink nipples. Her pants disappeared too and she had on matching panties.\nBeth and Sophie had quietly slipped into the water and I heard them both say \u201cOoooo\u201d as they got accustomed to the heated water. Pixie was seated on the poolside before sliding in to join them.\n\u201cWell?\u201d I heard Beth say while looking at me. Sophie and Pixie had similar looks.\nI took a deep breath, looked around and began to disrobe for them. Sophie turned to Pixie and whispered something to her, making them both giggle.\n\u201cI\u2019ll bet you\u2019re enjoying this.\u201d I said to them.\n\u201cHey, it\u2019s better than my show!\u201d Pixie said, making them all laugh even more.\n I was down to my underwear and now I slid into the pool. I gently glided across it to where Sophie and Beth were. Pixie did her own gentle glide across the length. Her ass looked so cute in her now transparent panties. And it was incredibly erotic to watch. Before I knew it, Beth had swum over to me and was embracing and kissing me, her blonde hair looking equally sexy with its ends matted down by the water. Sophie began to gently swim across the pool and it appeared as if her panties were now gone. She dove under the water and when she surfaced, she elegantly stretched her leg out of the water.\n\u201cHey love\u2026\u201d Beth whispered.\nWe kissed again, deeper now. I felt her hands caress my head and her tongue had made its way inside and was touching mine as we gently spun around in the water.\n\u201cWhy don\u2019t you lose those?\u201d she said as she felt my underwear which now felt very constricting. \u201cI\u2019ve lost mine.\u201d she said.\nMy hand slid down and, sure enough, I felt nothing but bare skin between her legs. I was able to slip my underwear off and we were both naked now. Her hand immediately went to my dick and it was already hard.\n\u201cOhhh\u2026so nice.\u201d She said in a sexy whisper \u201cTouch me\u2026\u201d\nMy hand went to her naked pussy and it felt so smooth in the water, making her coo with delight. Beth\u2019s hand wrapped completely around my dick and she began to slowly jerk it. The warm water felt especially good to both of us as my finger had penetrated Beth\u2019s pussy, making her slowly moan in my ear as we continued to kiss. Out of the corner of my eye I saw Sophie and Pixie watching us. Sophie swam over to us and gave my ass a nice grab. Pixie was with Sophie at the shallow end of the pool sitting on the bottom step, the water was only up to her waist, and they looked so sexy watching Beth and I. Out of the corner of my eye, I cold see Pixie\u2019s hand was beneath the water and her face seemed to show a lot of pleasure, I think she was rubbing herself, her eyes were half closed. I think she was lost in her pleasure but still wanted to watch someone else\u2019s. Sophie appeared to notice and eagerly watched her while casually touching her breasts. Beth\u2019s hands continued to caress my dick, and mine were on her pussy, gently inserting a finger inside her. Beth no longer kissed me, but lightly rested her head on my shoulder and let out a long series of \u201cohs\u201d that came faster as she apparently climaxed. It wasn\u2019t the same kind of earth-shattering ones I\u2019d so far experienced with her, but I figured there\u2019d be more soon! Beth gradually slid from my arms and floated away from me.",
        "\u201cOh\u2026.god! That was great!\u201d she said with joy.\nNow it was Sophie who floated to me.\n\u201cHey baby\u2026\u201d she said in a very sexy voice before kissing me. \u201cYou should come over here.\nSophie led me to the steps and as the water became shallow, my hardness could be seen by Pixie. She covered her mouth as she saw my dick in all its glory.\n\u201cOh...my god.\u201d She said in a mix of embarrassment and desire.\n\u201cIsn\u2019t he lovely?\u201d Sophie said as she held me close and held my dick \u201che\u2019s really something!\u201d she giggled.\nBeth was nearby treading water and watching.\nSophie looked at me and we kissed, then she slowly knelt down in the water.\n\u201cPretty\u2026\u201d she said while looking up at me.\nSophie\u2019s tongue began to softly touch my head, then she began to swirl it around the mushroom-like head.\n\u201cBig ice cream cone?\u201d Pixie asked while watching us.\n\u201cThe best.\u201d Sophie replied before my dick slid into her mouth.\n\u201cHey Jim\u2026\u201d Pixie said\nI looked up and Pixie had stood up in the water, giving me a look at her in all her naked glory.\n\nPixie Lott\u2019s tits were beautiful, with nice large pink nipples. She cupped her tits very seductively. Her pussy was totally bare, she had pussy lips that seemed like a blossoming flower as she ran her fingers through it.\n\u201cHow do I look, luv?\u201d she asked with a bit of a pout on her face.\n\u201cWow\u2026very\u2026nice\u2026\u201d I could barely talk, Sophie had inhaled my dick and I felt it touch what seemed like the back of her throat, complete with smacking sounds.\n\u201cI like it too.\u201d I heard Beth say as she walked through the water.\nPixie giggled as she saw Beth\u2019s just as lovely naked body. Beth kissed me on the cheek while she watched her sister sucking my dick. I could tell she was very turned on by this, as well as seeing Pixie naked before her. She was moaning softly and grinding her hips against me. I turned and we kissed very sexy, with lots of tongue.\n\u201cWhere\u2019d your sister learn to suck?\u201d\n\u201cWhere do you think, hun?\u201d she replied with a smile.\nI smiled too as I looked down at Sophie.\n\u201cOh fuck, baby I\u2019m so horny now.\u201d She said lustfully as she now stood and both sisters kissed me.\n\u201cMy turn\u2026\u201d Pixie said as she waded into the water. Beth and Sophie looked on with anticipation as she held my dick, then they moved to the sides of the pool. Pixie gave me a quick kiss then began her own oral pleasure of my dick. She seemed to use a lot of spit instead of tongue, probably inexperience on her part. But I felt my head go back in ecstasy. When I looked back, I saw Beth lying back on the poolside, legs spread and her fingers apparently deep inside her. Beth turned to look at me and gave a sexy leer to me, complete with a sexy licking of her lips. Sophie was gently rubbing her pussy and smiling as she watched Pixie suck my dick. Her hand was gently rubbing it. She came off me and looked up;\n\n\u201cHow does that feel baby?\u201d she asked\n\u201cGreat.\u201d I replied, somewhat breathlessly\n\u201cI haven\u2019t done this too many times.\u201d She added.\n\u201cYou\u2019re doing it g-great.\u201d\n\u201cSweet man\u2026\u201d she said as she resumed her lip service.\n\nBeth and Sophie were enjoying all they saw, Beth was now gasping and moaning.\n\u201cUh-huh\u2026ohhhhhyessss.\u201d She moaned.\n\u201cI think you made her cum Jim!\u201d Sophie said with a big smile\n\u201cOh fuck yeah!\u201d Beth said.\n\u201cYou\u2019re quite a man, Jim\u201d Pixie said as she now stood and we kissed, I felt her gorgeous tits and she was now moaning as my hand went down to her pussy and slowly inserted a finger.\n\u201cCome over here.\u201d I said as I guided her to the poolside.\nBeth and Sophie seemed to know what I was doing, they moved over and I had Pixie sit on the edge and she spread her legs, almost instinctively.\n\u201cOh my\u2026\u201d she said with a soft voice.\nPixie Lott\u2019s legs were spread and I now knelt down to kiss her sweet pussy. Beth and Sophie were on either side of her. Beth kissed her cheek, then moved down her neck, all the while her hand was caressing her tits. Sophie watched and continued to rub and finger her pussy. Then Beth and Pixie kissed, I could see their tongues touching. My lips were on Pixie\u2019s pussy lips, they were soaking from her fingers, she tasted so sweet as I my tongue penetrated her. I could hear Beth and Pixie\u2019s moans and words of lust as I licked her.\n\u201cLick her Jim\u2026oh yeah\u2026lick her.\u201d\n\u201cOh god\u2026oh baby\u2026huh\u2026oh god yes\u2026\u201d Pixie\u2019s voice was a sexy cry now as I licked her and touched her clit with my tongue.\n\u201cLet him lick you babe\u2026he\u2019s sooo good\u2026lick her\u2026\u201d I heard Beth saying just as lustfully \u201cMmmm your tits taste good\u2026\u201d\nI now felt someone next to me, it was Sophie.\n\u201cMy turn.\u201d She said.\nI moved over and Sophie looked at her pop idol\u2019s pussy close-up.\n\u201cPixie\u2019s pretty pussy.\u201d She said to me with a giggle before giving it a gentle kiss.\nI smiled in response.\nBeth kissed Pixie\u2019s cheek.\n\u201cMy sister\u2019s gonna lick you now Pixie\u2026she\u2019s good too.\u201d\n\u201cHow do you know?\u201d she replied\n\u201cMmmm\u2026experience.\u201d Beth replied before kissing Pixie again\nMan, just hearing that was a turn on for me!\nSophie eagerly kissed and licked her pussy, making Pixie\u2019s chest heave upwards and little gasps and cries come from her. Beth continued to caress and hold her as Sophie worked her magic on her.\nI knew I should do something as well. I made my way to Sophie\u2019s cute ass, I could see Beth looking at me, her eyes widening.\nI gingerly felt her soft ass and stroked my dick on it and let it slowly slide inside her pussy. Sophie groaned as I penetrated her, making Pixie moan even more knowing that there was even more going on and she was seeing and feeling it all.\n\u201cOh yeah Jim\u2026oh god yeah!\u201d Sophie said quickly as her head lifted up from Pixie\u2019s pussy momentarily.\nI was sliding in and out of Sophie and she felt so hot and tight, I gripped her hips and really took command of her as the water splashed around us. Beth was fingering herself again as she watched.\n\u201cOh god\u2026gonna cum\u2026oh god!\u201d I heard Pixie cry, then her hips thrust forward and her back arched. \n\u201cYeah, Jim\u2026fuck me baby\u2026oh god yeah!\u201d Sophie moaned \u201cOh yeah baby\u2026do it!\u201d\nI was really fucking her hard, and as good as this was, I really wanted to do Pixie, she had been such a sexy presence all night. I pulled Sophie up into a standing position and kissed her neck.\n\u201cBaby\u2026do Pixie now\u2026fuck her like you fucked me.\u201d She whispered.\nI pulled out of Sophie and went over to Pixie, who was laying back on the concrete, being softly kissed by Beth as he legs dangled in the water making soft ripples. I gently took her hand and slowly pulled her up. Her eyes opened and she smiled at me.\n\u201cMmmmm\u2026.this is lovely.\u201d She said as we kissed.\n\u201cJim\u2019s gonna make it even better, aren\u2019t you baby?\u201d Beth said.\n\u201cI\u2019ll sure try.\u201d I said.\n\u201cWith that, I\u2019ll bet he will!\u201d Pixie said as she looked at my still hard dick\nPixie kept her legs spread and looked at me.\n\u201cCome on luv\u2026do me.\u201d She said with a sexy smile.\nBeth and Sophie both looked on with eager anticipation as I moved in close to her. My dick slid ever so nicely into her pussy and it was so warm and tight. Pixie let out a long slow moan as I entered her. Sophie moved over and resumed licking and sucking her tits. I was making her tits bounce as I rammed into her, she was amazing to fuck. \n\u201cOh god yeah! Fuck my pussy\u2026fuck me good\u2026.oh god, yes!\u201d she cried out, her voice echoing on the walls \u201cUh oh\u2026uh oh\u2026uh oh!\u201d\nI looked down and saw my dick sliding into her bare pussy, wow did it look good, if I do say so myself. Beth was rubbing herself as we fucked and all the girls were making sounds of pleasure as I fucked the English pop star.\n\u201cDoes he feel good, Pixie?\u201d Sophie asked between licks\n\u201cOh god\u2026so good\u201d Pixie gasped \u201cHe\u2019s perfect.\u201d\nSophie and Pixie kissed as I continued to fuck her, Beth was lost in her own world as her fingers slid in and out of her pussy, I so wanted to fuck her now. Pixie\u2019s moans had changed to cries and gasps as she neared climax and her pussy seemed to grow tighter the more she climaxed. Her back arched again and her head went back. Sophie held her and they kissed softly. I pulled out of Pixie and kissed them both.\n\u201cI think your sister needs me now.\u201d I boldly said\nBeth turned to look at us and smiled contentedly.\n\u201cOh yeah\u2026feel so good now.\u201d She said.\nI climbed up onto the poolside and lay on my back. The girls joined me and watched as Beth sat up then swung her leg over to be on top of me. My dick was still rock-hard and they positioned it while Beth slowly sat down on it. It looked even hotter going into her pussy and Beth let out an equally sexy moan as it went in. \n\u201cHe\u2019s really good Sophie.\u201d Pixie said.\n\u201cMmmm\u2026you bet.\u201d She replied.\nBeth now began to rock back and forth on me as Pixie licked her tits and Sophie kissed me, her tongue was so hot and wet. I\u2019m not sure how much energy I had left in me, I certainly wanted this to last. Beth was too far gone to make anything last, she already seemed on the verge of coming.\n\u201cOh god, Jim! Oh god!\u201d she screamed out.\n\u201cMake her cum Jim!\u201d Sophie said excitedly \u201cWatch her Pixie!\u201d\nBeth sat up slightly and a gusher of cum blasted out of her, making the girls gasp.\n\u201cOh my god! I\u2019ve never seen that!\u201d Pixie said with a big smile\n\u201cIsn\u2019t it cool?\u201d Sophie said as she rubbed her sister\u2019s pussy.\n\u201cWow! Amazing!\u201d\nBeth was still gasping as she continued to rock on my dick.\n\u201cI wanna cum again\u2026make me cum\u2026\u201d she gasped.\nI did my best to thrust into her as she bounced on my dick, her knees probably hurt from the concrete. Pixie began to rub Beth\u2019s pussy as she rocked on me, we were all about to explode, it seemed.\n\u201cFuck me Jim\u2026oh god fuck me!\u201d Beth cried\n\u201cOh yeah\u2026gonna cum Beth!\u201d I now said \u201cI\u2019m gonna cum!\u201d\nBeth sat up again, another gusher came out of her and I gushed as well, making everybody gasp and moan. Sophie started to jerk my dick and I felt like every bit of me was coming out. Pixie jerked me too and licked me as well. Beth was completely spent. Sophie and Pixie were probably still ready for more. \n\u201cWow, Jim\u2026that was amazing.\u201d Sophie said as we kissed.\n\u201cYou\u2019re quite a man, babe.\u201d Pixie said with an equally sweet kiss.\n \u201cI think we\u2019d better get back, I can\u2019t believe we got away with all this.\u201d Sophie said as she slowly stood and went back for her clothes and Beth\u2019s. Beth slowly sat up now.\n\u201cGod, I feel like I\u2019ve been at an orgy.\u201d Beth said, making us all laugh in response.\n\nWe quickly dressed and snuck out of the pool area as silently as we could. I looked at my watch and the time was close to 4 AM. Pixie kissed me and the girls goodbye and we made sure to exchange phone numbers. Beth and Sophie somehow found the energy to walk to their car with me, although I drove home, they were completely exhausted.\nI sure was lucky Sophie\u2019s car had a GPS unit. And that I remembered they drive on the left side of the road there.\nBeth\u2019s place was quiet when we arrived home, I remembered that Jennifer was away for the weekend with friends of hers. Didn\u2019t matter to me, we all just wanted to get to bed.\n\nTwo days later \u201cDays of Rage\u201d wrapped production. There was a big party for the cast and crew. Jennifer was the center of attention, appropriately, so I was grateful for the few minutes we got to chat before she left to catch her flight back to California. My flight would leave in the morning, so I wanted to make it an early night. Beth had the same idea, she had to start post production work at the studio so she\u2019d be tied up with that. Chris was gonna take a night flight home so he had already left.\n\nI was awakened by my cellphone buzzing on the bedside table. Before I could even say a groggy \u201chello\u201d I could hear Marty\u2019s voice screaming at me.\n\u201cAre you outta your fucking mind!!!\u201d he screamed\n\u201cWh-what are you talking about?\u201d I replied sleepily\n\u201cYou read the papers? You\u2019re all over the front pages!\u201d\n\u201cHuh?\u201d\n\u201cThe Sun has it in big headlines\u2026\u2018Pixie\u2019s Poolside Sex Romp\u2019! The News of the World says \u2018Pop Star\u2019s Hotel Orgy\u2019! Another one is calling her \u2018Pixie Shag-a-Lott\u2019. Guess who was part of all this?\u201d\n\u201cMarty, I don\u2019t know what you\u2019re talking about!\u201d\n\u201cYou and Pixie Lott, that\u2019s who! All I know is she was last seen talking to you and 2 other girls at the party, then she disappears and was caught on hotel surveillance cameras going into the pool, which was closed, and having a midnight swim with several parties, all unclothed! I wonder who the guy with her was?\u201d he yelled.\n\u201cHey, how do you know it was me? Who says it wasn\u2019t Chris? Or you for that matter?\u201d\nJudging by the silence on the other end I knew I had him. Chris certainly got around with the ladies but it was well-known that Marty was an ultimate skirt chaser. Rumor was he\u2019d had flings with both girls in Tigress as well as the sister of one of them. And he probably would\u2019ve gone after Rihanna if she wasn\u2019t (unofficially) with me already.\n\u201cI told you not to fuck with the merchandise and now I\u2019m ordering you\u2026don\u2019t fuck with the merchandise!\u201d he said before slamming the phone down.\nI immediately got dressed and ran out to get a newspaper. \nMarty was right, it seemed like every British tabloid had Pixie on the cover and the same gossipy headlines Marty had read me but whatever photo evidence they had didn\u2019t show Pixie, me or the girls clearly enough. And the article seemed to wildly exaggerate what we\u2019d done. The more I thought about it, this seemed just like the video footage of me and Lindsay Lohan when we\u2019d met at the Burger King.\nMy phone buzzed again. I hesitantly took it out of my pocket, but then put it back in. I didn\u2019t need to hear Marty scream at me again. For all I know he\u2019d probably tell me what was on CNN, Fox News, BBC, ITN, etc. \n\nI went back and started packing up for my flight.\n\nBeth and Sophie drove me to the airport, they were both quiet. Maybe because they were still trying to comprehend all we\u2019d done the night before. As we went into the departures area, they both gave me a sweet kiss and hug goodbye.\n\u201cYou gonna come back soon, luv?\u201d Beth asked with a sly smile.\n\u201cOh, gee\u2026I dunno.\u201d I said with my eyes rolled skyward.\nSophie playfully slugged me in the chest.\n\u201cNext time, we do all this at my place.\u201d I said\n\u201cYou bet!\u201d they both said as they kissed me again.\n\nI headed for the gate to board my flight. London had been quite an experience all over again. I hated to leave, I always felt I didn\u2019t do the city the way I wanted to. Oh well, there\u2019s always next time.\n\nI boarded the plane and made my way to my seat. My phone had been buzzing on and off all day, but I ignored it. After it buzzed again, I shut it off. I pulled out my IPod, hit the random play feature and reached for a newspaper. Just as I started to read it, my seatmate joined me.\n\u201cGonna read about yourself?\u201d a female voice said.\nI turned and my eyes nearly jumped out of my skull.\nIt was Pixie Lott.\n\u201cI tried to call you earlier, you know. Wanted to tell you we\u2019d be flying to L.A. together.\u201d\nSo that\u2019s what all the phone calls were, rats!\n\u201cOh, um\u2026sorry.\u201d I replied \u201cI thought it might be Marty.\u201d\n\u201cAw, don\u2019t worry about it, luv.\u201d She said sweetly as she touched my hand, her smile just oozed sexy. \u201cWe\u2019ve got lots of time.\u201d\n\nAnd into the clear blue skies we flew. \n"
    ],
    "authorname": "hollywoodjim",
    "tags": [
        "london",
        "blondes",
        "threesome",
        "swimming pool",
        "oral sex",
        "totally shaved"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/adventures-of-hollywood-jim-ch-41"
}