{
    "title": "It'll be our secret Pt. 03",
    "pages": [
        "All characters represented in this story are over 18. These are real events but the names of the characters have been changed for anonymity. The story is based in the UK so drinking age is 18 and will all be from Hannah's POV.\n\nThis is part 3 of 'It'll be our secret' so I strongly advise to read part 1 and 2 to understand what has happened. It is a slow burner so if you are looking for something quick this is not for you. Please leave feedback, I would love to do more!\n\n<p align=\"center\">Chapter 1</p>\n\nI'm just standing in the rain, sore and vulnerable and Sophie is just looking at me as if she's saw a ghost. I was going to go to Jens, I really was, but when I got here, I just found myself pulled to Sophie's door instead. I know that Jen would want to take action, she would want to go up and beat the shit out of Zoe. I've just had too much of a traumatic night to deal with that. I just need a warm bed and somewhere safe. Plus, Zoe knows where Jen lives and I'm scared that she'll turn up looking for me.\n\n\"Sophie? Please, I just need somewhere for tonight and I'll leave in the morning. I can't go back there tonight.\" I break down on her doorstep, my chest is so sore and I don't think it's because of the run here or how cold I am from the rain. I genuinely think it's because my heart is breaking. Sophie grabs me and pulls me in and holds me tight while I cry on her shoulder.\n\n\"Of course you can stay here! You can stay as long as you need to! It's okay, you're safe with me, I've got you Hannah, I'm right here.\" How can she be so nice to me? After all of the horrible things I said, after I cut her off like she was nothing and ignored her existence for nearly 8 months. \"Come on in, we need to get you cleaned up and get you into something warm.\" She takes my hand and I let out a painful gasp.\n\n\"She... Zoe... she accidentally slammed the door on my hand, I think it's broken.\"\n\n\"Okay, I'll take a look at that too don't worry.\"\n\nShe puts her hand onto the small of my back instead and leads me into her living room. It's pretty empty but very cosy. It's mainly just boxes scattered all over the place, a couple of decorative pieces on the walls, a 3-seater sofa and coffee table are seated Infront of an old school fireplace. Across the room is her kitchen, open plan sort of thing. It's more full than the living room and she has the cutest little breakfast bar with a couple of bar style stools.\n\n\"Sorry for the mess, I still haven't had a chance to fully unpack, take a seat I'll make you a cup of tea and we'll get you cleaned up.\"\n\n\"Sophie?\"\n\n\"Yes beautiful?\" Pft, beautiful? Sitting here looking like I've been drowned, puffy eyes and blood dripping down my face and she calls me beautiful? It felt nice though.\n\n\"Sorry to be a pain, but can I maybe get a change of clothes and a towel?\"\n\n\"Yes of course! Silly me! Just one thing though, not in a creepy way, but we don't want you getting blood on your pyjamas so maybe can you just wrap the towel around you instead of putting the top on when you get changed? I promise it's just until we clean up that cut. I'll be back in a mo!\"\n\nI trust her when she says it's not to be creepy, she's genuinely just looking out for me. I feel sick about how horrible I've been to her, and she's still so caring and wonderful to me. She skips back into the room and hands me a set of pyjamas, she is actually quite cute, In a friendly way, like she has nice positive energy.\n\n\"There you go, the bathroom in just at the bottom of the hall way, again sorry for the mess, there's a warm towel on the radiator for you and a fresh facecloth, are you hungry? Do you want anything to eat?\"\n\n\"No, I'm okay thank you.\"\n\nI make my way down the hall and get to the bathroom. I take a second to look at myself in the mirror. I'm a mess, there's a deep red mark around my neck and wrist from where Zoe gripped me, my other hand is swollen and there's a deep gash on my head. How did this happen, she's never been like this before, well apart from that night 6 months ago, but that was an accident. This time she wanted to hurt me, she wanted me to feel pain. I quietly start crying. My life is falling apart, I have no home to go back to, I can't ring my parents because they'll freak out and come home and I'll need to go back to Zoe's to get my car which I might not even be able to drive myself because my hands are fucked! There's a knock on the bathroom door.\n\n\"Hannah? Are you okay in there? You've been a while your tea's going to get cold.\"\n\n\"Yeah, sorry I was just thinking, coming now.\" I quickly put the shorts on and wrap the towel around my torso and head back in. She points me to the sofa where she has a couple of biscuits on a plate for me and a cup of tea.\n\n\"Okay you just sit right there and let me have a look.\" She starts cleaning where I hit my head. \"Good news is, it doesn't look deep enough to need stitches, and it's not bleeding as much as it looked, must have been the rain making it look worse. I'll just put a plaster on it to keep it clean.\"\n\n\"Thanks for this, sorry to put this on you.\"\n\n\"It's no bother at all. I'm glad you came here, it's the safest place for now. Let me see your hand.\" She sits on the floor, I gently raise my hand onto hers. \"Fuck me Hannah, I'll need to wrap this up to make sure it doesn't get worse. We'll go to the hospital tomorrow, okay?\"\n\n\"But they'll ask me what happened! It was an accident and Zoe will get in trouble!\"\n\n\"Calm down, you don't have to tell them if you don't want to. We'll think of something, you work in a bar you could say it happened at work drunk customers or some shit, but if you don't want to tell we'll have a plan B okay?\"\n\n\"Okay, thank you.\" She starts wrapping my hand for me,\n\n\"Okay this is going to hurt, but I need to wrap it tight, just concentrate on something else. My ass? You like my ass?\" That manages to get a laugh out of me. \"That's the spirit.\" She's right, it did hurt. Like really, really fucking hurt but she kept me calm, she has such a calming vibe about her. I definitely felt safe here. \"Done! Is anywhere else needing looked at?\" She looks up at me with a smile, which quickly turns to anger.\n\n\"No that's it, thank you.\"\n\n\"Let me see your neck.\" Instinct makes me cover it up with my other hand so she can't look. \"Holy shit Hannah your hand! Look at your wrist!\" Well, that didn't go to plan.\n\n\"It wasn't a big deal I promise, we got into a fight and she accidentally hurt me.\" How would anyone believe that, I wouldn't believe it, why was I even trying to protect her?\n\n\"Hannah, look at you! You've got your hand wrapped up, a cut on your head, your wrist is bruised and there's a fucking hand bruised into your neck! It wasn't an accident and you don't need to lie to me either, honey... tell me what happened.\"\n\nHoney? First beautiful and now honey? Why are these names bringing me comfort? If she called me these names a few hours ago it would have made my stomach turn.\n\n\"Please Soph, I don't want to talk about it.\" My eyes start to fill up with tears again, she kneels down between my legs and places her hands on either side of my face.\n\n\"You don't have to, I won't make you do anything you don't want to, but I want you to know you can tell me anything, and unless you want me to do something, I won't.\" I look into her eyes, and yet again I can just tell that she means it. \"Just tell me one thing, has this ever happened before? Apart from the night you already told me about?\"\n\n\"No. Never. Soph... She was just so angry! I was so scared. She choked me against the wall and then threw me to the ground. I couldn't breathe, I thought she was going to kill me!\" I start sobbing again. She comes and sits beside me and puts her arm around my shoulder and I rest my head on hers crying.\n\n\"Well, she can't hurt you anymore. I'm here, and I won't let anyone lay a finger on you again.\"\n\n\"She's going to kill me Sophie. She told me to clean up and that I've to stay on the sofa but I ran. I ran as soon as she went upstairs. What the hell can I do to make sure she doesn't hit me again? I just don't know how to fix it!\" I'm still in tears on her shoulder.\n\n\"What do you mean fix it Hannah? You're not going back to her! She fucking beat you! Look at yourself. Honey, why would you go back to someone who treats you like this? This isn't love! This right here is control, she needs to control you and the one time she wasn't able to this happens!\"\n\n\"I have no choice Soph! My car's there, all of my things are there. I would happily live out of my car but she smashed the window through, and how the fuck am I going to afford to fix that plus pay a month's rent and deposit upfront?! I've only been working a week, I have nothing to my name Soph! My parents are on a cruise ship in the middle of nowhere, so I can't go back to my them! She smashed my fucking phone too so I don't even have any form of contact! She has full control and she knows it, she knows I have nowhere to go!\" She takes my face in her hands again and looks at me with the most serious look I've ever seen her give me.\n\n\"You have here Hannah. You will always have here. I know it's not much and it's pretty empty but it's safe! I've got a spare room, for now though I'll sleep on the sofa and you can have my bed, I can't afford a second bed right now but when I can I'm getting you one. I've been where you are, thrown out on my ass with nothing so I won't let that happen to you!\"\n\n\"I can't let you do that Sophie. It's too much to ask, I can't even afford to help you out with bills or food or anything because with this fucking hand I can't work! 1 week into my job and I'm going to have to leave. I can't believe this is really happening!\"\n\n\"Hannah? You're not asking me to do anything. I'm offering, and it's not because I expect anything in return, It's because I love you, and I would do anything for you. I would never let the woman I love be trapped in a situation where she's scared for her life so I don't give a shit if you can't give me a penny this is your home until you don't want it to be anymore.\"\n\n\"But... I've treated you so bad Soph. I cut you out when I promised I wouldn't, I've ignored you and pretended you never existed. How can you possibly still love me. How can you forgive me and give me all of this?!\"\n\nI honestly don't understand how she can be so kind and thoughtful. I really fucked her over and treated her like she was a piece of shit on my shoe and she's treating me as if I deserve the world. I deserve none of this, especially from the girl who's heart I broke.\n\n\"I don't give a shit about all of that, all I care about right now is your safety. So what we're going to do is for tonight, we'll relax, you've had a really rough night so I think we need to get you to bed. In the morning we're going to make a plan to get your stuff from Zoe's. One step at a time okay?\"\n\n\"Yeah I guess. Thank you Soph, I owe you big time.\"\n\nI give her a massive hug and she holds me tight. How could I have fucked this friendship up, and for a violent fucker like Zoe too! Looking back on it now I feel so fucking stupid for not picking up on the red flags. The quick mood changes, the way she hurt me the first time, taking my phone off me and deciding what I was going to text Soph and basically saying to me if I don't cut her off that it's going to make her angry and violent again? Am I a fucking idiot! Abuser red flags were slapping me right across the face.\n\n\"You owe me absolutely nothing. Let me show you to my room and then you get yourself a good night sleep.\"\n\nSophie brings me up a flight of stairs and into the first room on the right, she told me down the hall is where my room will be when we can get me a bed, but for now I'll be taking over her room. It was a reasonable size and had a double bed in it. Just like the rest of the house it's pretty empty except from a few decorative pieces, but it was still very cosy. I get myself into bed and leave enough room for her. After all of her attempts to seduce me I expect she'll try again. It's the last thing I want, but I also don't want to be alone right now, so as bad as it sounds if I have to kiss her to have some comfort tonight I'll do it. She starts walking towards the door, I first assumed it was just to close it but she was actually about to leave.\n\n\"Sophie?\" She turns her head back to look at me.\n\n\"Yes honey?\"\n\n\"Are you leaving?\"\n\n\"I thought you were going to try to sleep? But if you want to chat I can stay and talk until you want to settle?\"\n\n\"I... I was going to sleep but I just thought... I thought you were going to stay with me?\" I can tell by the way she's looking at me that she wants to jump in the bed beside me, but something's holding her back.\n\n\"No sweetheart, I can't. You're vulnerable and hurt right now and me jumping into that bed, as much as I have dreamt about it for the past 7 months, is a really bad idea. It's not fair on you, and it's not fair on me.\"\n\n\"But... I don't want to be alone tonight..\" She walks over to the bed and sits on the edge.\n\n\"Tell you what, I'll sleep on the floor, just so you know I'm here and if you need anything you just need to wake me up. Is that fair enough?\" I wanted to say no, but I knew she was already doing more than she needed to.\n\n\"Yeah, that would be great. Thank you so much.\"\n\n\"No worries, I'll be back in a minute, just going to get a blanket okay?\"\n\n\"Okay.\"\n\nShe gives me a gentle smile and off she goes to get herself ready to sleep on a hard cold floor. I feel terrible, she's already doing so much and now she's sleeping on a floor for me. Not going to lie, I would much rather have her holding me for comfort right now, but she's right. I'm vulnerable and would only be using her to make myself feel better which would be shitty on her part to take advantage of that, but also more shitty on me to use her when I know it would mean a lot more to her than it does to me.\n\nGod she's a lot more mature than I thought she was. Most people wouldn't give a fuck If someone was vulnerable, they would take full advantage, but not her. She actually cares about me so much. She comes back in after about 5 minutes with a few blankets in her hands.\n\n\"I really do need to unpack because I just tipped about 7 boxes out to find these!\" She lets out an innocent giggle. \"But anyway! Ready to try to settle? I'm pretty exhausted so I can only imagine how you feel.\"\n\n\"Yeah, sure I'm ready.\"\n\n\"Okay perfect.\"\n\nShe turns off the light and I hear her fumbling on the floor, obviously trying to get comfortable. She finally stops flopping about, my automatic routine at this time at night is to flick through social media on my phone. Of course that's not possible because it's currently smashed on Zoe's floor. I Guess I actually should just sleep then.\n\n\"Night, night Soph, thanks again for this.\"\n\n\"Night beautiful. Anytime.\"\n\nBeautiful. I don't feel beautiful, but again, I believe she means it. I close my eyes and within minutes I'm fast asleep.\n\nWhen I wake up I have a moment of panic, I have no idea where I am and I'm in so much pain. It takes a few seconds but then reality hits, the events of last night come flashing back. I take a look at my hands, it actually really happened. The girl I love physically hurt me. My head feels like I've had a 3 day bender and I've woke up with a killer hangover, nope. That's just the damage from the coffee table. I look down and see that Sophie isn't on the floor anymore, I'm not sure if she left while I was sleeping or if she just got up early, wouldn't be the first time I've woke up and she's been gone.\n\nI make my way to the bathroom to get freshened up and I see she's already left me a change of clothes, a spare toothbrush and a few toiletries. She's left a folded piece of paper beside it with my name on it, inside reads;\n\n'Morning beautiful, hopefully these are okay for you, if not feel free to raid my wardrobe. I've had to make a quick trip to work but I'll not be long, the fridge is full so make yourself whatever you like for breakfast. See you soon x'\n\nShe's so sweet, but I don't understand why my heart sinks every time she mentions 'beautiful'. The more I think of it, I've never really been called beautiful. I've been called hot, sexy, even unique, but beautiful isn't something I've ever thought of myself. I guess it's nice to have someone think that I am, I just don't believe it myself.\n\nI go downstairs and just sit at her breakfast bar, sipping at my coffee and reading the newspaper she left. It's my favourite actually, the chronicle, always has the most challenging sudoku's. Yes I'm a geek, I still get the newspaper to do the daily puzzles, it was always me and my dad's thing to do so I guess it brings me comfort. I check the fridge to see what I can force down myself, she has great taste! Fresh berries, Greek yoghurt, strawberry sauce, even had banana and strawberry smoothies. My favourite cheeses, smoked, cranberry, pickled cheese, the little things get me excited! I can get used to this selection. Zoe's more of a 'eat on the go' girl so we never really have fresh food in the house.\n\nI make myself a Greek yoghurt pot with strawberries, raspberries, strawberry sauce and a smoothie for the extra boost. I continue with my sudoku and I hear a car pull in outside. My heart skips a beat. What if it's Zoe? What if she found out I'm here? I'm dead, she is actually going to kill me. But then I hear the key in the door and I relax, it's just Sophie. She goes to the living room and throws a laptop bag on the floor and lies down on the sofa and starts playing on her phone.\n\n\"Morning lazy. How was your sleep?\" She's chirpy today, it's refreshing.\n\n\"Could have been better, you?\"\n\n\"Oh it was lovely, the hard floor did wonders for my back.\" She takes her head out of her phone for a second and gives me a playful smile and then straight back into her phone.\n\n\"Sorry, I shouldn't have asked you to sleep there.\"\n\n\"Shh you, I'm only playing. Enjoying the sudoku?\"\n\n\"Yeah I've nearly finished it. Wait how did you know I was doing a sudoku? Have you got cameras? You been spying on me you creep?\" She lets out a little laugh.\n\n\"No you idiot! You told me before that you love doing the chronicle's puzzles in the morning so I made sure to go and get it before I went into the office.\"\n\n\"I don't remember telling you that?\"\n\n\"It was just a random conversation we were having when we were texting back when.\"\n\n\"I... I can't believe you remembered that. Did you get the stuff in the fridge for me too?\"\n\n\"Oh. Yeah, same situation, I just remember things. No biggie.\"\n\nIt was a biggie though. I can't even remember telling her anything about the things I like. This was over half a year ago and she still remembers, she made sure I woke up to things I loved. I take a glance over and she's just so casual, just lying there without a care in the world glued to her phone. She's acting like nothing happened to me, it's strange.\n\nShe must feel me staring at her and finally glances up. She tilts her head and taps the sofa to invite me over. I grab my smoothie and walk over to the sofa and she's still fully sprawled out with her long, sexy legs taking up all the room. Shit, snap out of it! I need to not sexualise her, I'm only thinking this way because I'm hurt and she kept me safe.",
        "\"Soph... unless you want me to sit on your legs you'll need to scoot up.\"\n\n\"Oh yeah, sorry.\" She pulls her legs into her and I sit down. She immediately stretches them back out and rests them across my lap.\n\n\"I'm not a footstool you know?\"\n\n\"Holy shit. My footstool just spoke, that's some creepy shit right there.\" She gives me another playful smile. Finally I crack a smile and shake my head at her. \"So footsy, what's the plan of attack today?\"\n\n\"I don't even want to think about it right now. Plus should you not be going to work? Please don't tell me you aren't going in because of me?\"\n\n\"Well I went in just to speak to HR to organise emergency leave. I have holiday allowance that I can use up so it's no biggie. I just told them you were my wife and you aren't well. Worked a charm.\"\n\n\"You didn't have to do that Soph. I would have been fine alone. But thank you.\"\n\n\"Anytime! I have 3 weeks of leave, then I'll be working from home until you're able to do things for yourself, until then your wish is my command!\"\n\nIn the past 12 hours Sophie has showed me every single reason I should hate myself for hurting her, for cutting her off, for not even giving her a chance. She knows my favourite things no matter how small, she makes me laugh, makes me feel beautiful and she puts me before anything else. I feel like the worst person in the world for the way I treated her. I think this guilty feeling hurts more than my actual injuries. Actually that's a lie. This shit hurts!\n\n\"Thank you, really I owe you so much for this. How can you work from home? I thought you did cold calling?\" She looks at me as if I'm speaking a different language, confusion wrote right across her face.\n\n\"Cold calling? What on earth made you think I did cold calling?\"\n\n\"Jen told me. She told said you had to get a job there when you got thrown out?\" She rolls her eyes and lets out a grunt.\n\n\"Of course. No sweetheart, I'm a logistics manager, and I've had this job for the past 6 months.\"\n\n\"Logistics manager? That sounds fancy, what's that?\"\n\n\"It's pretty boring, I basically need to make sure that the right stuff is delivered to the right place, at the right time for the right cost. My dad put in a good word and got me it before everything went down. It's basically just a lot of data, a lot of work though. Great pay too!\"\n\n\"Sorry, but... I heard things and I just assumed... and then when you said you couldn't afford another bed I just through you were in a shit financial situation too.\"\n\n\"That's why we don't listen to gossip isn't it?\" Another cute smile, I can feel myself blushing. \"Living at home before here meant I was able to save basically everything I earned, so at least I had my own savings before I got froze out. I was able to put down a good deposit on this place to get a lower monthly mortgage which is why it's pretty empty right now, but as soon as I get my next pay I can get you a bed. It won't be long I promise.\"\n\n\"You don't have to do that, I'll talk to work and I'll see if I can do something else for them while my hand heals. I don't want you spending your money on me especially since I won't be here for long.\"\n\n\"Stop worrying about everything!\" She gives me a playful push with her foot. \"We'll put our heads together and work something out, so again, what's the plan of attack?\"\n\n\"I don't even know where to start Soph. I need to go back to the house to get my things, I need to get my car, get my hand looked at, talk to work. There's just so much to do!\"\n\n\"Okay, well, one step at a time. Main thing is that hand of yours. So I contacted my doctor, she's going to have a look at it for you, she has a private practice so she can do the diagnosis side of things there and if it needs to be looked at by the hospital we'll go from there. I'll go get myself ready to go and then I'll take you\"\n\nThere she goes again, skipping away. She has so much energy, she really is amazing. I definitely don't deserve the support she's giving me right now. From the second she woke up this morning her day has revolved around me. Getting me my favourite snacks, my newspaper, taking time off work and now getting me sorted with a doctor. How could her family just cut her out of their lives without a second thought. Just because she's gay? Being gay doesn't make her a bad person and this here is living proof of that.\n\n\"Hannah! Get your ass into gear! Here's your 5 minute warning!\"\n\nHow did she know I hadn't moved? This girl can see through walls or something. I get myself ready to go, throw on the clothes that Sophie left out for me and make a coffee to go. I'm leaning against the breakfast bar when I take a deep breath and I can smell that perfume off these clothes, I smell just like her. It's intoxicating. A strange feeling runs through my body, I thought for a second it was a panic attack coming on but I when I close my eyes to bring myself back down to earth, flashes hit me. I was back to that night with Sophie, in Steve's house after her confession of loving me. I get goosebumps just thinking about it, the smell of her perfume has brought me right back to that moment, it feels so real. I can even feel Sophies hands on my waist.\n\n\"Daydreamer! Snap out of it!\" Shit, I wasn't imagining her hands on me, she was actually right behind me. I turn to look at her, her hands still on my waist and she's got that playful smile on her face. \"Come on you, we're going to be late.\" I can feel myself blushing again. \"Hello? Earth to Hannah?\" Those eyes, those beautiful brown eyes. I can't help myself, I quickly lean in and kiss her, it was only for a second, it was so gentle but It made the hair on the back of my neck stand up. When I pulled back she looked dumbfounded. Her eyes were just glued on mine but she wasn't moving. I slowly leaned in to give her another, but she pulled away this time.\n\n\"Hannah, we should really get going.\" Her hands drop from my waist and she grabs her car keys and walks towards the door not even taking a second to look back at me. \"I'll meet you in the car.\"\n\nThis was the first time since I've been here that she's been so cold to me. I know it was stupid to kiss her, but it felt right and she's been flirting with me from the second I arrived. Last night in the bar she was basically begging me to be with her, but the moment I make a move she rejects me and walks away. What the fuck just happened?\n\nI grab my coffee on my way out the door and jump into her car. She doesn't even look at me, the whole time her eyes are set dead straight onto the road. We sat in complete silence the whole drive, which wasn't really ideal since it was about a 30 minute drive. She didn't even turn on the radio, I've never had such an awkward journey.\n\nWe arrive at this fancy little office, not like any doctor's office I've ever been to before. Instead of crappy worn away plastic chairs it has one seated sofa chairs and a flat screen TV that is at least 50 inches secured to the wall. I take a seat and Sophie goes over to the receptionist. I hear them laughing together for a few minutes and then Sophie comes over and sits beside me.\n\n\"Izzie will be out In a minute she's just finishing off with a patient.\"\n\n\"Okay. Thank you Soph. So... about earlier...\" She cuts me off.\n\n\"We'll chat later, let's just get what we need to do out of the way today and we'll chat about it later.\"\n\nI was about to respond but then Sophie stands up with a massive smile on her face and her eyes were sparkling, she's looking at someone across the room and I turn to see this supermodel type of woman. She was about the same height as me, blonde slightly curled bouncy hair that fell just above her shoulders, piercing green eyes and was wearing a black skin tight dress that showed off her amazing body and even more amazing legs.\n\nSophie walks over to her and tilts her head to the side extending her arms with that massive smile still on her face. They hug tight and it lasts a lot longer than a normal, nice to see you, kind of hug lasts. She still hasn't called me over but instead they stand and have a chat. Very, touchy feely chat. Izzie, the doctor, has stroked Sophie's arm at least 3 times, and has gave her a playful push a couple of times after a clearly flirty laugh. She whispers something in Sophie's ear and gives her a smirk which I can see has clearly got Sophie flustered. I suddenly have this overwhelming feeling of jealousy raging through my body. She finally looks my way.\n\n\"Hannah?\" I stand up and walk over to her.\n\n\"Yeah, that's me.\"\n\n\"Hi Hannah, nice to meet you, I'm Doctor Roberts, if you just want to follow me into my office. Hannah, I'll see you in a minute.\"\n\nI follow her into her fancy little office with her stupid certificates up on the wall. I'm staring in her direction giving her evil looks, but she can't see me she's checking something on the computer, she spins to me and gives me a gentle smile. Stupid perfect smile.\n\n\"So Hannah. Sophie told me you had an incident at work last night where one of the patrons did a number on you?\" Thank god Sophie kept to her word, she didn't even need to lie for me but she still did.\n\n\"Yeah... a fight broke out and I guess I was in the wrong place at the wrong time.\"\n\n\"You and Sophie both, that's some shiner she had on her eye! She's tried to cover it up I see, but Doctor instincts.\" She gives me another one of those stupid smiles. \"Looks like you got the really rough end of it though.\" She starts to tilt her head to try to get a better look at me. \"Do you mind if I have a look?\" She points at the plaster on my head.\n\n\"Oh, yeah go ahead.\"\n\nShe starts off looking at the cut that Sophie cleaned up for me, she doesn't look too concerned. She looks at my neck and gives a bit of a winch as if to say 'ouch' and then she takes a look at both of my hands. She unwraps my hand to have a closer look and does the usual 'does it hurt when I do this? Does it hurt when I do that?'.\n\n\"Okay Hannah. I'm going to prescribe you some pain killers for your injuries. The good news is you won't be needing to go to A&amp;E. I do think your hand is fractured but there would be nothing more the hospital can do for you. The bruises of course will heal themselves. I'm going to suggest you keep to light work with that hand for at least a month otherwise you'll be risking more damage and I'd like you to speak to my receptionist to book in to see me then so I can make sure it's healed okay. If I'm honest you've wrapped it up really well and you've cleaned that cut out great too.\"\n\n\"Thank you. It was actually Sophie who fixed me up.\" She smiles again, but not the gentle smile she gave me before, a more excited smile at the mention of Sophie.\n\n\"Of course she did, the woman has many talents.\" She goes deep into her thoughts for a second and then snaps out of it. \"Anyway! Let me lead you back out to the reception.\"\n\n\"Thank you Doctor.\"\n\n\"Anytime, a friend of Sophie's is a friend of mine.\"\n\nShe leads me back outside and points me over to her receptionist, the same one Soph spoke to when she arrived. I look over at Soph and she's looking over here with a big smile, makes my heart flutter a bit seeing her look at me like that. When I start walking to the receptionist though I notice she's not smiling at me, she's smiling at Izzie. I take a glance behind me to see her motioning Sophie to come to her. There's that jealousy building back up again. Sophie quickly comes over to me.\n\n\"Hannah, I'll be a few minutes, I've to go have a chat with Izzie okay?\"\n\n\"Yeah sure take your time.\" I force the fakest smile I think I've ever forced and she gives me a friendly one back. My eyes follow her to Izzie's office and I see her hand go on the small of Sophs back to guide her inside. My blood is actually boiling. I know I have no right to be jealous, I chose someone else over her after all. But just seeing another woman's hands on her kills me. I'm probably overthinking it anyway.\n\nAbout 10 minutes pass by and I think I've pretended to read this magazine at least 100 times. Finally I hear Izzie's door open and look over as fast as I can, they're both laughing and still very touchy, a quick arm squeeze, moving hair out of each other's faces, and another hug to say good bye. Izzie goes back into her office and Soph starts walking towards me, she can't even look into my eyes.\n\n\"Sorry I took so long, you ready to go?\"\n\n\"Yeah sure. Where are we going?\"\n\n\"Guess we could just go back home?\" She said home. Not back to her place, but home. I like the sound of home.\n\n\"Yeah okay sounds good to me.\"\n\nThe drive back wasn't as awkward as the drive there. A bit of small talk about what Izzie said, how I'm feeling, after a few minutes of that Soph put the radio on and started singing along, I just stared out the window. We were pulling into the street and my heart dropped.\n\n\"Turn around!\" I shouted so loud that she actually jumped.\n\n\"What? Why?\"\n\n\"Please, Sophie! Turn around.\" She stops and looks at me. I take a quick glance back and start to cry. \"That's her car. Outside Jens. Zoe's there Soph! She's going to kill me please Sophie, please,\"\n\n\"Honey, stop crying. We'll leave, I have a plan actually and this works well.\"\n\n\"Thank you.\" I'm too hysteric to even click on to the 'I have a plan' part.\n\n\"What's your address?\"\n\n\"What? Why do you need my address?\"\n\n\"You have your keys still right?\"\n\n\"Of course I do. But why do you need my address?\"\n\nShe ignores my question and pulls into the side of the road. She takes out her phone and starts to ring someone. Why is she avoiding my questions? What the hell is she up to?\n\n\"Hi... Yeah it's Sophie, don't say anything I'm talking about out loud I know this is very strange but can you go to another room so we can freely talk?... Okay great thank you... Yes she's with me... Her phone's broke so that's why it's off...\"\n\n\"Soph, who is that?\"\n\n\"Shh! No not you sorry.. Oh so she never told you what happened?... Of course not... We'll tell you when we see you... can you keep her busy for maybe like 30 minutes we have something to do, I'll let you know when it's safe for her to go, I'll text you... okay perfect thanks Jen.\"\n\n\"Jen?! How the fuck did you get Jens number?\"\n\n\"The first night we met she was drunk and gave it to me. Her exact words were 'Hannah's going to end up in your bed tonight so text me your address so I can get her in the morning' I guess she wasn't completely wrong.\" That flirty smile is back. My heart is melting.\n\n\"So, Zoe knows I'm with you?\"\n\n\"No, she told Jen you and her were fighting and that she was there to pick you up. Jen played dumb and said you were away for a run and would be back soon. She has no idea what happened.\"\n\n\"Okay. That's good I guess, why does she need to keep her there, I'd prefer if she left so we could go home.\"\n\n\"Because little footsy, we're going to get your stuff and your car. So... what's your address?\"\n\n<p align=\"center\">Chapter 2</p>\n\nAfter a lot of hesitation from me, more out of fear of Zoe coming back, I give Soph my address. We pull up to the house, I can't believe I'm coming back here so soon. I'm so scared, so nervous, but at the same time it's a little exciting to be here when I know I shouldn't be here.\n\n\"You ready?\" Soph puts her hand gently on mine, she just knows how to comfort me. \"We don't have to if you don't want to.\"\n\nShe gently wipes away my tears, I was crying the whole way here, I never expected her car to be right there at Jens. She has some nerve showing up there and acting as if we had a little fight and that it was no big deal.\n\n\"No, I'm ready let's do this.\"\n\nI unlock the door and walk in to the mess from the night before. I take a look around and she hasn't even bothered to clean anything up. My phone is still on the floor smashed to pieces and I can see my blood on the coffee table. Tears are streaming down my face being here again. Sophie grabs me and pulls me into her and just holds me while I cry.\n\n\"Shh sweetheart, it's okay. It's okay to cry. After this you never have to come back here again, I promise she'll never be able to lay a finger on you. I've got you okay?\"\n\nI don't say anything, I just hold her back. I'm reluctant to let go but we need to be as quick as we can. I run upstairs to the office and grab a couple of suitcases, I rush into the bedroom and just start pulling out all of my clothes and shove them in, I grab a couple of things that are important to me like my jewellery, photo's, a teddy I've had since I was a kid. Everything else can be replaced, it's all just materialistic, she can have it. I run back down the stairs to find Sophie just sitting on the sofa with her feet on the coffee table as if this is completely normal. I pick up my smashed phone and take out the sim card and memory card and look over at Sophie who still doesn't look like she's up for moving.\n\n\"Soph, I'm ready I have everything I need.\"\n\n\"Does Zoe have cameras? We should have sex on the sofa if she does give her something to watch later.\" She lets out a little laugh and finally gets off the sofa. She sees me looking at her confused. \"I was joking. Sorry. Not funny, I always make jokes at the wrong time.\"\n\n\"It's fine. But there is something we haven't thought about. My car. Zoe's going to see me driving it to your house.\"\n\n\"No she won't, you're leaving it at Steve's I already thought about this. She can go by there if she wants to find you, but you won't be there. Told you, I'll keep you safe. You go first I'll follow behind you.\"\n\nI throw my stuff into her boot since I won't be taking my car back to hers and we both get into our own cars and make our way to Steve's. I made sure to grab some tape and a few black bags so I could cover the broken window when I get there just to make sure if it rains again it doesn't get any worse. I'm in agony trying to drive with this hand. For all of the 15ish minutes it took to get there all I could think of was the joke Soph made. I know it was only a joke, but for a split second I genuinely wanted to do it but I'm unsure if it was because I wanted to get back at Zoe or if I just wanted Soph. My head is well and truly fucked up. How can so much change in such little time.\n\nWe get to Steve's and I don't bother to go in, he'll see my hand and neck and he'll ring my parents straight away, I can't have them worrying about me like that. I try to sort out the car but with my hand It's basically impossible. Soph sees me struggling and comes and takes over. She lets out a heavenly giggle and gets to work taping the bags to the window. I can't help but take a good look at her bending over the bonnet, bad things are running through my head. If my hand was working I would take her right here and now. Jesus she is so fucking sexy. She turns and catches me looking at her, I can feel myself blushing again.\n\n\"Get a good enough look?\" She folds her arms and gives me semi-serious look and breaks it with a smile. \"Some things never change, come on you little creep.\" We jump back into her car and she rings Jen again, she puts her on speaker so she can drive and talk.\n\n\"Hey Jen, we're done, is she still there?\"",
        "\"Yeah, she's here she's in the other room with Bex. Is Hannah with you?\"\n\n\"Yeah.\"\n\n\"I'm here.\" I jump in.\n\n\"Hannah, what the fuck, you have a fight and you go right back to Sophie? No offense Sophie if you can hear me! But Hannah that is fucked up. I lied for you and said that you stayed here last night, never have me do that again!\"\n\n\"Jen. I didn't cheat on Zoe... I...\"\n\n\"Yeah right Hannah, so you just had a friendly sleepover with someone you were obsessed with?\" Of course she had to say obsessed. \"I just didn't think you were that type of person, I actu...\"\n\n\"Jesus Christ Jen! Shut the fuck up and listen to me! Zoe... she really hurt me last night.\"\n\n\"Grow up Hannah, what did she say that hurt you so much that you cheated?\"\n\n\"She didn't say anything Jen. What she did though is fucking strangle me, slam my hand in the door and smash my car window. Oh I almost forgot, the threw me against the coffee table and demanded I clean up my own blood.\"\n\n\"Talk shit. Please tell me you're talking shit.\"\n\n\"No I'm not. I stayed at Sophies because I knew she'd look for me at yours and I'm fucking terrified of her so I needed somewhere she couldn't find me. Sophie just helped me get my stuff out of the house while we knew she wasn't there.\"\n\n\"One second Hannah...\" I can hear Jen's phone rusting about but she's not speaking. I can hear her telling Bex to hold her phone. I suddenly hear Bex shouting for Jen to stop.\n\n\"...Fucking touch her *muffled* stupid fucking bitch *muffled* and never fucking come near her again *muffled* Hi. Sorry I'm back. So, she's gone, I threw her out but... I may have accidentally punched her... and when I say threw her out I dragged her out by the hair. Oops!\"\n\n\"Jen why the fuck did you do that?\"\n\n\"No one touches my girl and gets away with it! Stupid bitch coming to my house acting like nothing happened.\"\n\n\"You are crazy! But thank you. You really are a great friend, I'll come over once I get settled a bit, it's been a long day. I just need to relax a bit, see you soon Rocky.\"\n\n\"You better come over, I'm so sorry this happened to you. I'm sorry I thought the worst of you too, I love you dickhead. I'll see you soon.\"\n\nI look over to Sophie who has a massive grin on her face, I guess she got some pleasure out of Jen giving Zoe what she deserved. I'm not going to show it but I'm pretty happy about it too. I doubt she'll be back around Jen's door looking for me anytime soon!\n\nWe pull up to Soph's and Zoe's car is nowhere to be seen. Thank god. We make our way into the house and Sophie carries my suitcases, she clearly sees me struggling. She brings them to the empty spare room and comes back down and plants herself on the sofa again, same way she did earlier and goes straight on her phone. I take a seat at the breakfast bar and just sit in silence. She glances over at me.\n\n\"Shit, I'm being so rude. I'm not used to people being here sorry I was on autopilot! Do you want to sit or do something? We can watch something on tv if you like?\"\n\n\"No, I'm fine. Might go over to Jens and see if she has a spare phone lying about, sim card is kind of useless without a phone and I need to ring work.\"\n\nShe jumps up and skips away without a word and I hear her upstairs in the bedroom. I just turn back to the breakfast bar and read the newspaper again. I hear her coming back down and she skips over to me, wraps her arms around me and shows me a brand new phone.\n\n\"I forgot about this! I got it for you when I went out this morning, it's nothing special but I thought you'd be missing having a phone.\"\n\n\"What the fuck Soph? You've already done way too much for me! I could have just got one of Jen's old shitty broken ones! Really I can't take this, it's too much.\" She lays her head on my shoulder.\n\n\"Stop being ungrateful and take it you brat.\"\n\nShe sets it down on the table and scruffles my hair up and skips back to the sofa, back in her sprawled out position. I set up the new phone. Even though she said it was nothing special I actually think it's an upgrade from my old phone. My old phone was about 3 years old and on its last days anyway. After about 5 minutes setting it up I start to get texts through. Mostly from Zoe, she clearly didn't notice my phone was left behind, or she assumed I already took the sim card.\n\nZoe - Where the fuck are you. I told you to clean this fucking mess.\n\nZoe - I'm locking the door so sleep on the streets for all I care.\n\nZoe - You better not have told anyone about last night.\n\nZoe - Please, can we talk. I'm sorry, I promise not to hurt you again, I'll go speak to someone about my anger. I'm so sorry.\n\nZoe - I'm coming to Jens to get you, be ready.\n\nZoe - I'm here can you come back? I promise I'll do better, I'll make it up to you. I love you.\n\nJen -- Hannah, Zoe's just turned up looking you, did you tell her you stayed here? What the fuck is going on?\n\nZoe - That fucking friend of yours just attacked me and now I come home to see you've raided the wardrobes. If I see you you're fucking dead. I swear to god Hannah, you'll regret fucking me over!\n\nI start sobbing reading the messages. This is so hard, I know she hurt me, I know she's a bad person but I love her and I can't help but love her. I'll never go back there, but it doesn't make it any easier to accept the fact that it's over. Even in her messages it's clear that she's trying to control me, manipulate me to come back. I'll never go back. Never.\n\n\"Honey? What's wrong? Why are you crying?\"\n\n\"Zoe. She's sent me so many text messages. I'm sorry. I'll go upstairs.\"\n\n\"No you won't, come here.\" She pats the sofa again but this time she swings her legs around to put them on the floor. I walk over and sit beside her. She pats her legs. \"Nope, you relax, lie down and rest your head on my lap, I'll play with your hair if that'll make you feel better?\"\n\n\"It might actually.\" I lay on my side with my head on her lap while she runs her hands through my hair, I glance at my phone and I show her. \"What the hell do I say back to these messages?\"\n\n\"Honey, don't say anything, block her. Her words can't hurt you if you don't let them.\"\n\n\"Yeah you're right, it's just hard.\"\n\n\"Trust me, I know how hard it is to not contact someone you love. It'll get easier.\"\n\nI roll over on my back, still with my head on her lap to look at her and she gives me an encouraging smile.\n\n\"Did it?\"\n\n\"Did what sweetie?\"\n\n\"Did it get easier not talking to me?\" She looks away from me.\n\n\"That's different. You never laid a hand on me.\"\n\n\"You didn't answer my question though, did it get easier?\"\n\n\"No. It didn't. It got harder.\"\n\n\"Why?\" She lets out a deep breath.\n\n\"It just did Hannah. It was hard not to be able to speak to the one person you found comfort in when shit went wrong, it was even harder not to be able to tell you when things went right. It was just hard Hannah.\" I can see her fighting back tears. I never wanted to hurt her, but I did.\n\n\"You know I'm sorry right? I never wanted to stop talking to you, but I was given a choice and at that time, I had to do what I thought was right for me.\"\n\n\"That doesn't make it any easier either Hannah. Let's just stop talking about this, up you get, I'm going to put dinner on. I got stuff in for taco's, pulled chicken is your favourite yeah?\"\n\n\"Yeah, that would be nice.\"\n\nShe stands up and walks to the kitchen and opens the fridge to start taking the ingredients out. She remembered my favourite type of taco too, she genuinely really took everything I told her into account. I follow her into the kitchen and she turns to me and I can see the tears in her eyes. They start to fall down her cheek. I reach up and wipe away the tear and keep my hand there. I pull her in for a kiss and she's hesitant. I give her a gentle kiss, but she doesn't kiss me back. I move my hand to the back of her neck and she's looking at me terrified.\n\n\"Hannah, please don't. Please just stop.\" Tears are still filling her eyes and I pull her into me again, this time giving her a harder, deeper kiss. This time she kisses back and wraps her hands around my waist. I feel her hunger, the kiss is amazing but then she pushes me off her. \"Hannah I said no. Stop!\"\n\n\"Why? I thought you wanted to kiss me?\"\n\n\"Hannah I don't just want to kiss you I want to fucking be with you! So us doing whatever this is isn't fucking fair on me! It's going to make it harder than it already is to move on!\"\n\n\"I... I'm sorry... I just thought...\"\n\n\"You didn't think! You just do what you want and don't consider how I'm going to be feeling! I can't just kiss you and sleep in the same bed as you and not want to be with you Hannah. I can't just turn off those feelings of wanting more!\"\n\n\"I don't expect you to Soph!\"\n\n\"Do you want to be with me Hannah?\"\n\n\"I... I don't know...\"\n\n\"Well I fucking know I want to be with you. I can't just wait for you to decide what you want! I know the past 24 hours has been crazy and you're confused and you see me as some sort of hero right now. But that feeling will disappear. I can't do this until I know you have genuine feelings for me or if this is some sort of phased thing just because I'm keeping you safe. I'm sorry. I can't be here right now. Work away at dinner I need to go.\"\n\nShe grabs her keys and runs out the door in tears. I can't believe I've done this again. I've hurt her. After everything she's doing for me right now I've ended up causing her to be in tears and leave her own house. I'm an asshole. She deserves so much better.\n\nI don't bother with dinner and just put everything Soph already took out back in the fridge and head over to Jen's. My head is honestly all over the place, what Soph said is just playing on my mind. Is she right? Do I only want her because I feel safe with her? Or have I always wanted her and I was in denial? All I know is I hurt her again, and I don't know if I want to be with her, so she's got a right to be pissed off with me.\n\nI get over to Jen's and I let her know everything that's happened in the past 24 hours. The way Sophie antagonised Zoe at the bar, what happened when I got home and how I ended up at Sophie's. Jen being Jen laughed when I told her how Soph was antagonising Zoe, thinking back on it, it was pretty funny. Actually it was a turn on seeing Sophie so confident in her words. She nearly cried when I gave her the details of what Zoe did. Finally I told her about today and how when I tried to kiss Soph the first time she basically ran away and how she reacted the second time.\n\n\"Okay, first of all, is your head still sore?\"\n\n\"I guess a little, not that bad though, why?\" She gave me a smack on the back of the head. \"Ouch! What was that for!?\"\n\n\"For being a fucking idiot. I'm on Sophie's side here! What the fuck made you think kissing her was a good idea!\"\n\n\"Jen, I know you don't like her, but that's got nothing to do with it.\"\n\n\"You're right Hannah, it has got absolutely nothing to do with it! Jesus Christ you are so stupid! Did you really think she was just going to fall back in to your arms as if nothing happened?\"\n\n\"Well... Yeah? She said she still loves me?\"\n\n\"That doesn't mean jackshit! Just because she loves you doesn't mean she'll settle for second best, and it doesn't mean she has to either.\"\n\n\"But she's not second best?\"\n\n\"Oh really? So you slept with her, she made a mistake that she clearly regretted, you refused to be in the same room as her but were happy to keep her at arm's length by texting her and when she finally tells you how she feels you turn her down, cut her off and move on with your life, but as soon as that happy life stops being so happy you're right back to her? You told her less than 24 hours ago that you'd be happy to never see her again and now you're kissing her? Don't you realise how fucked in the head that is Hannah?\"\n\n\"I... I never thought of it like that... I'm such a shit person!\"\n\n\"No, you're not a shit person Hannah. You just need to consider how hard this has to be for Sophie. Yes she's doing all of this because she loves you, not because she wants to guilt trip you into being with her. Unless you really are ready to commit to her and leave the past behind don't try it on with her. It's not fair on her Hannah.\"\n\nJen was right. I was so hurt when Sophie slept with Alan, and I had only known her for one day. I can't imagine how much it would have pained her to know I was with someone else for this long. I've been so unbelievably selfish, I never considered what I wanted to do after that kiss, and right now I can't commit to Sophie, I'm still In love with Zoe, until I'm not I can't be making any advances on her. I need to be sure that I'm ready to give her my all and that I don't have anyone else in the back of my mind.\n\nI go back to the house after another couple of coffee's and a rant about Zoe and Sophie's asleep on the sofa. She looks so peaceful. I go on upstairs and make a quick call to work. Turns out Sophie already went out of her way to go to the bar after she left to explain what happened last night and they're aware I won't be able to work. They're happy to keep a spot for me but since I've not been there long enough I won't be getting paid while I'm off. Safe to say they've barred Zoe for life, they may not let us bring our outside lives into work, but they're not happy for a woman beater to have any association or relationship with their bar.\n\nI head back down stairs and Soph's still fast asleep on the sofa, I lift a blanket and gently lay it across her, she stirs a little and opens her eye's to see what I was doing. I stroked her face and said night to her and went on upstairs to bed. I tossed and I turned, probably because I haven't slept alone in so long, it felt so strange not to have someone else in the same room as me. I didn't like it at all. I finally drifted off into a deep sleep. Unfortunately I had nightmares about Zoe and woke up in a sweat crying, only to see that Sophie was on the bedroom floor sleeping but woke up to my cries and came and sat on the bed beside me.\n\n\"Hannah? What's wrong? Are you okay?!\"\n\n\"Sorry. I'm sorry, it was just a nightmare. It was just a bad dream, it's spooked me a little. Why are you on the floor?\"\n\n\"I just didn't want to leave you alone, today was a rough day for you again and I thought you'd like to know someone was here.\"\n\n\"That's so sweet of you. You're always so sweet to me.\" I start crying again.\n\n\"Hey, stop it. You don't need to cry, calm down sweetheart.\" Just holds me tightly and rocks me while I cry.\n\n\"I'm such a shit person Soph, you don't deserve any of this, you really don't. I'm sorry for kissing you, I'm sorry for everything. I promise it won't happen again. I'll not cross that line, I'm so sorry.\"\n\n\"Awk Hannah, I'm sorry I reacted that way. It's hard, I know it's not easy for you too. Let's just forget it ever happened okay? We'll go back to being friends again and pretend that the past 7 months never happened okay?\"\n\n\"Yes please. That would be great.\" She said friends, I suppose that's for the best though, I can't be leading her on when I don't know what I want.\n\n\"Come on then, let's get you back to sleep, come here.\"\n\nShe lays in the bed beside me and pulls my head into her chest and holds me there. She's running her hands through my hair again and I start to calm down. I start drifting off slowly to that sweet smell of her perfume and the warmth of her body. It's going to be hard not to give into my urges to kiss her again, but for now they're just urges, not true feelings. I drift off fully again and I don't dream this time. It's just complete darkness.\n\nWhen I wake up I'm surprised to see that Sophie's still in bed with me. Her arms are wrapped around me and I've woke up in the same position I fell asleep in. I give her a little bit of a shake to wake her and she grunts and pulls me in tighter. I give her a harder shake and her eye's start to open, she looks down at me and smiles.\n\n\"Morning beautiful. Did you have a nice sleep?\" My stomach flutters.\n\n\"Yeah. It was really good, thanks for staying with me.\"\n\n\"I would take credit and say you're welcome, but If I have to be honest I accidentally fell asleep.\" I let out a small laugh. \"Right up we get lazy. What do you want for breakfast?\"\n\n\"Mmm... French toast with strawberries.\"\n\n\"I shouldn't have asked. Effort! But of course, meet me downstairs in 30 minutes.\" She jumps out of bed and grabs a tracksuit out of the wardrobe. \"I'm just going to the shop quickly, do you want anything?\"\n\n\"No thank you.\"\n\n\"Okay, be back soon footsy.\"\n\nAs usual a little hop, skip and jump and she's away. I don't think I like the footsy nickname. I prefer beautiful, sweetheart, honey. Anything other than footsy, but when she says it she always gives me a playful smile, so I'll live with it. I have a quick shower and grab some things from the spare room to wear. Kind of disappointed that I don't smell like Soph anymore. Honestly if you could smell her perfume, it's addictive. Makes my chest tighten every time she walks by me. By the time I get a shower and ready It's been 25 minutes and I go downstairs to find Sophie dancing and singing along to music on her phone while making breakfast. It's great to wake up to someone so positive.\n\n\"I said 30 minutes, you're early. I can't promise that I'll be able to get you a table yet we're very busy today.\" She's always so playful.\n\n\"Sorry, should I just wait outside until you have one ready?\"\n\n\"No, go ahead and sit at the bar I'll be with you in a minute.\"\n\n\"Thanks.\" It's a much calmer feel than yesterday, it's nice to have someone to have a bit of flirty banter with. \"Awk you got me the chronical again thank you.\"\n\n\"I have no idea what you're talking about Miss, I've been here since 7am, maybe another customer left it.\" She turns to me and gives off a huge smile. \"So, French toast with strawberries, powdered sugar and some cream. Enjoy.\"\n\n\"Are you not having any?\"\n\n\"Of course I am, just need someone to cover my shift.\"\n\n\"Oh shut up and sit down!\" She's laughing at herself, she takes a seat across from me.\n\n\"So is it good?\"\n\n\"It's amazing! Thank you, I could get used to this! So what's the plans for today?\"\n\n\"I'm not too sure actually, we smashed everything out yesterday so I guess, it's just a free day?\"\n\n\"Sounds good to me.\"\n\nWe sit and have breakfast together and I make a point to ask her some questions about her favourite things. Turns out her favourite breakfast is a good old fashioned English fry up. Sausage, eggs, bacon, potato bread, soda bread, beans and mushrooms. For a girl with such a tiny waist she can eat plenty! She loves a fresh coffee every morning, wouldn't be able to function without it, and her version of chronicle puzzles is to sit on her phone and read blogs about her favourite TV shows.\n\nAfter breakfast I start to clean up and Soph runs to get a shower. She left her phone down here with the music still playing. She has such an old persons taste in music! Dolly Parton, Elvis, Cher. Not my cup of tea at all! Every couple of minutes her phone buzzes to let her know there's a notification, I guess it won't stop until she acknowledges it. My phone does the same, I need to click the home button to stop it vibrating. I try to shout up to her to let her know but she can't hear me over the shower so I click the home button to acknowledge it and I can't help but look at the notification. It's a message from Izzie.",
        "Izzie -- Was nice seeing you yesterday. It's been a few weeks since your last physical, maybe you should come over later? ;) xx\n\nMy heart drops. I knew I wasn't imagining the way Izzie was giving her these gentle arm strokes and little touches. They're sleeping together. Is that the real reason Sophie doesn't want to kiss me? Does she have a girlfriend and doesn't want to tell me? Jealousy is eating me alive, but I have no right to say anything. We're just friends after all and she's got every right to sleep with whoever she wants. she comes down the stairs wrapped in a towel and comes over towards me. Please let the towel drop, please, please, please!\n\n\"Sorry forgot my phone.\" She glances at it and she suddenly smiles and her eyes light up again. \"I'll be down in 5 minutes, stick something on the TV if you want.\"\n\nOf course she would have someone that beautiful, that smart, that rich. Why would she want someone like me compared to her. Even if this is just me not knowing what I want and being lonely, there's no chance she'd choose me over someone like her. When she comes back down she sits across from me again, texting away, with a very mischievous look on her face. I try to ignore it, I try to concentrate on my sudoku but I can't get the image of her and the doctor out of my head. I need to make sure she has plans with me and not her, but before I could make any suggestions she speaks.\n\n\"So, I'm going to be going to a friends for dinner tonight, I might not be home until late. You're welcome to have someone over, or go out, or whatever. I'll be having a couple of drinks so I'll be getting a taxi so I'll leave my car keys here in the case you want to drive anywhere.\"\n\n\"Yeah sure.\" Going to a friends? Sure. \"Anyone I know?\"\n\n\"Yeah actually, remember Izzie from yesterday, the doctor? Just going to her place to catch up.\"\n\n\"Nice. Well, I guess I'll just go to Jen's and see what her and Bex are up to.\" While you fuck the doctors brains out.\n\n\"Why don't you have someone over? I don't mind, honestly. I know you're probably dying to get some frustration out.\"\n\n\"No, I'm really not ready for that. I spoke to Jen yesterday and made the decision to not jump into anything with anyone else until I'm over Zoe.\"\n\n\"That a very good idea, I'm glad you're keeping yourself right.\"\n\nWe spend the rest of the afternoon just chatting and watching random YouTube videos together, having a laugh and just enjoying each other's company. I learnt a bit more about her. She doesn't like flowers because they remind her of dead people. She doesn't understand why people give flowers to say thank you, love you, goodbye, miss you. She thinks it's just a money grabbing industry. She prefers gifts she can get enjoyment out of such as books, brainteasers, jigsaws.\n\nI also learnt that she loves books with random facts in them, true crime and also romance. She's not a big fan of thrillers because with her being a true crime fanatic she gets bored since she knows what kind of fucked up shit can really happen compared to make believe. Her favourite TV shows are ones with twists but also family shows. I wanted to learn more about her but due to her dinner with her friend she went upstairs to get ready.\n\nI sat in a shitty mood just flicking through social media. I started going through my own profile and I start to delete the photos of me and Zoe, anything I've posted mentioning her, anything she wrote to me. I'm surprised to see she still has me and her in a relationship, but I'll fix that. I change my status to single and block Zoe from all social media and also block her number. I don't want her having anyway of contacting me again.\n\nI glance up to see Sophie walking down the stairs and do a double take. I stand up staring right at her and she stops in my tracks and stares back with a shy smile. I stand up staring right at her and she stops just before the last steps and stares back with a shy smile. She is absolutely breath-taking. She's wearing a red dress that was tight in all of the right places, it showed enough boob to be classy and not too much to be slutty, it fell just above her knee showing off those long legs. Her hair was curled and pulled to one side falling down her left shoulder. Her make-up was subtle but really enhanced her feature and she had on sexy red lipstick to go with the dress.\n\n\"Wow.\" That was literally the only word that escaped my mouth.\n\n\"Do I look okay?\" She looked really nervous.\n\n\"You look absolutely beautiful Soph, I can't even explain how breath-taking you are right now. Just. Wow.\"\n\n\"Thank you Hannah. That means a lot. My taxi should be here in a minute, so I guess I'll see you later?\"\n\n\"Yeah. I guess.\"\n\nShe walks by me and gives me a gentle arm squeeze and she's gone. Izzie is one lucky lady. I can't get my head around how beautiful she looked, my head is in the gutter right now. All I can think of is how much I wanted to grab her and mount her right there and then on the sofa. How good it would have felt to slowly kiss down her delicious body and slip my hand under that dress. The thought of fucking her again is driving me crazy. I need to let this out of me.\n\nI lay down on the sofa and close my eyes and start to imagine Sophie there with me, kissing my neck and nibbling at my ear. Her perfume is stuck to this sofa which makes imagining her here a lot easier. I slowly rub my clit feeling the heat rush through my body. Just the image of her on top of me is enough to get me going. I drive myself into a massive orgasm right there on her sofa. I just lay there, thinking of her. Then it hits me. The jealousy again. Izzie is going to be the one embracing Sophie tonight. Not me. This is going to be harder than I thought.\n\n<p align=\"center\">Chapter 3</p>\n\n3 weeks have went by and me and Sophie seem to be in a regular routine with each other now. She got paid last week so I now have a bed in the spare room and we actually work well together, despite the feelings there. I'm still not fully over Zoe, I know I'm not, and the feelings I have for Sophie are only growing. But I made Jen a promise, I told her I wouldn't make any moves on Sophie until I knew for sure that I wanted to be with her. Like really wanted to be with her.\n\nEven though I can't touch her, it doesn't mean I haven't been thinking about her when I'm touching myself. She's been seeing the supermodel doctor more recently, still can't say anything, she still has every right to see whoever she wants to see. No matter how much I hated the thought of someone else touching her I had to live with it. I still made it a point to learn more about Sophie when I could. Her favourite DC hero is Superman, Marvel is Spiderman, favourite movie is the Note Book, favourite meal Is spaghetti bolognese because in her words you can't go wrong.\n\nToday is her first day back to work since I moved in so I'm going to make myself a ghost, I decided to go to Jens to see how things are going with her, and to get out of Sophies hair so she can concentrate on her work. Jen and Bex are going through a rough patch right now, Jen's finding it a lot harder to be okay with Bex not being out, especially since they're living together now.\n\n\"So, where's Bex?\"\n\n\"I have no idea, had another fight and she walked out again. I'm sick of it Hannah. I'm so close to ending it.\"\n\n\"You can't be Jen, you are perfect for each other! She'll come out eventually!\"\n\n\"When Hannah? We're living together and she still hasn't told them, do you know how hard it is to be called 'Bex's friend' and to hear her parents talk about what man would be perfect for her? It's too fucking hard.\"\n\n\"What has she said about it all?\"\n\n\"The usual shit, they'll disown her, they won't talk to her again blah blah blah. What the fuck is she going to do if we want to get married? Have kids? That's what I want in my life Hannah and she says she wants the same. Clearly not if she's still not told them and we've been together for nearly 2 years now. If she hasn't done it now she's never going to do it.\"\n\n\"I think you need to have a proper talk about it, not a fight, a talk and then go from there.\"\n\n\"I think I will, tonight. Let's not talk about it anymore though. How's things been with the sexy ex?\"\n\n\"She's not my ex, and they've been okay.\"\n\n\"Just okay?\"\n\n\"Yeah, I definitely have feelings for her Jen, but I promised until I'm completely over Zoe I won't make a move and I'm sticking to it. Especially now she's been seeing Doctor Model more I can't fuck things up for her if I'm not sure.\"\n\n\"Shit, is she still seeing her? I thought it was a fling kind of thing?\"\n\n\"So did I, but she's gone most nights, doesn't come home, avoids the topic of Izzie. It's clear she feels awkward around the subject.\"\n\n\"Well, aren't we both in a shit storm then?\"\n\nWe laugh about it but it's true. I'm living with someone I want to fuck all over the house and Jen's living with someone she wants to throw out of hers. We're both messes. It hits 5PM and that means Soph has finished work so I go back across the street so we can have dinner together. She's an amazing cook, one of secret talents. Tonight she made a rump steak with onion rings, stuffed mushrooms, crispy fries and peppered sauce. It was incredible! Our system is if she cooks, I clean and it was a good system, since I can barely cook a ready meal. We sit down to watch TV together and she flings her legs around to place them across my lap. This has also became a regular thing.\n\n\"So how was work anyway?\"\n\n\"Meh, had a lot to catch up with, but thankfully the way my annual leave fell in with my shifts I'm now on my weekend off, so worked out well! How was Jen?\"\n\n\"Fine, relationship troubles, but she was fine.\"\n\n\"Awk shit, hope they get it sorted. Oh I forgot, Izzie wanted me to check how your hand's doing?\"\n\n\"Oh. Yeah it's better, I can fully grip things now without it hurting.\"\n\n\"Okay, good.\" The room filled with an awkward tension at the mention of Izzie.\n\n\"I might just go up to my room if that's okay? Feeling a bit tired so I might have an early night.\"\n\n\"Oh. Yeah sure, you okay?\"\n\n\"Yeah I'm fine, just exhausted I guess. See you in the morning?\"\n\n\"Of course, night beautiful.\"\n\n\"Night Soph.\"\n\nI can't stay down there, I can't sit in that room while she's clearly got Izzie on her mind and I have her on mine. I wasn't lying though, I was exhausted. I planned for my early night and fell asleep around 9.30PM. I was in the land of nod dreaming the usual, me and Sophie together, embracing each other's bodies. That was until I got woken up by a continuous vibration from my phone. I have a look and it's 2AM, it's Jen ringing. I answer and whisper so I don't wake Soph.\n\n\"Jen? Are you drunk do you know what time it is?\"\n\n\"It's over Hannah. I ended it with Bex. I just can't keep living in secret anymore.\"\n\n\"Oh no Jen, I'm so sorry, do you want me to come over?\"\n\n\"Can I... can I come over there? Bex is packing her things right now and I want to be away from her.\"\n\n\"Of course you can, I'm coming down now, but be quiet i don't want us to wake Sophie.\"\n\nI quietly tip toe down the stairs to the door and let Jen in, I pull her in for a massive squeeze and she's holding me so tight. We go back up to my room and I just hold her while she sobs. Turns out Jen and Bex had the chat I advised and Bex told her she's doesn't think she'll ever be able to risk losing her parents. That she never thought as far ahead as marriage and kids and that it was just something she wanted someday, but she never expected to have it with a woman. So Jen ended there and then. I don't blame her though, she was in a relationship that had a road to nowhere.\n\nI cuddle her all night as she cries herself to sleep, it was about 5AM when she finally drifted off and I was able to get a few hours' sleep in. I made a point of waking up early so me and Sophie could have a morning coffee together, she would have my paper ready each morning and we'd have a bit of fun throwing little blows at each other in a playful way. But this morning was different, she didn't say hi to me, she hadn't got my paper or coffee, instead she was just sitting on the sofa, flicking through her phone with a grumpy face. I sit at the breakfast bar and she doesn't even acknowledge me.\n\n\"Soph? Are you alright? You seem a bit... off?\"\n\n\"I'm fine. You look like shit, late night?\"\n\n\"Ouch. Me-ow! Yeah it was actually, didn't get much sleep.\"\n\n\"Yeah I heard.\"\n\n\"Oh sorry did we wake you?\"\n\n\"At what part? When you snuck someone in or when you were up until all hours talking and laughing?\"\n\nShe finally looks at me, and she's shooting daggers right at me. Before I get a chance to say anything Jen comes walking down the stairs and Sophies face drops. She looks over at me and her face is now bright red with embarrassment. I walk over to Jen and grab her and give her a big hug and a kiss on the forehead. I make her a coffee while we all sit in silence and Jen finally speaks.\n\n\"So... girls... since we're all single and free now, can we please go out and party tonight?\"\n\n\"Single? Are you okay?\"\n\n\"I'll be fine, it was time we went our separate ways. So as I said. Party? Tonight?\" Soph looks at me shyly with a sorry look on her face I give her a little nod.\n\n\"Yeah sure, should be fun!\"\n\n\"Okay great! I'll go home and get my ass into gear! Thanks for letting me stay last night Hannah. You're the best!\"\n\nWith that Jen goes home and I go back to making myself something to eat, I keep catching Sophie's eye and I think she wants to say something but after her little outburst she seems too embarrassed. I eat my breakfast and go straight back up to my room and I don't say a word. After about an hour or so of sitting there doing sudoku's on my phone there's a gentle knock on my door.\n\n\"Come in!\" Sophie comes in and sits at my feet on the bed. She can't even look at me she's just looking at the ground.\n\n\"Sorry I was snappy with you Hannah. I didn't know it was Jen I thought you invited some random girl over while I was sleeping.\"\n\n\"It's okay, easy mistake to make. But just for future reference, I would never do that to you.\"\n\n\"It's not okay, I was acting like a child. Didn't even get you your paper or have breakfast with you.\"\n\n\"Most horrible thing that's ever happened to me Soph. You not getting my paper. I'll be traumatised for life!\" I give her a gentle kick and she finally looks at me and smiles.\n\n\"Well, I am sorry. It won't happen again.\"\n\n\"Why did it happen anyway?\" I already know why, I just want to hear her say it.\n\n\"I don't know.\" I give her another gentle kick.\n\n\"Come on, tell me.\" I continue kicking her and she's giggling and trying to push my feet away.\n\n\"Stop it!\"\n\n\"Tell me, tell me, tell me.\" I'm saying it in a teasing way which gets her laughing even more, her mood's definitely lifted now. \"Come on. Say it. You were jealous! Green eyed monster!\"\n\n\"Stop it no I wasn't!\" She tries to grab my legs to stop me kicking her but this time I wrap my legs around her and pull her causing her to fall on top of me. I keep my legs wrapped around her and give her a playful smile, the same one she always gives me.\n\n\"You were so jealous!\"\n\n\"And what if I was?\"\n\n\"Oh! You admit it! I win!\" I'm still laughing but she's looking at me all serious so I stop. I think I pissed her off.\n\n\"So you like that I was jealous?\"\n\n\"Wouldn't say I liked it, I just find it funny.\"\n\n\"Funny? Why funny?\"\n\n\"Because you're seeing someone and you're getting jealous at the thought of me being with someone else.\"\n\n\"And that's funny to you?\" Yep, I've pissed her off.\n\n\"I didn't mean to annoy you, sorry, I just like teasing you, I'm only playing.\"\n\n\"Oh okay, so you like teasing me?\" The playful looks back on her face. \"Two can play at that game!\" She closes the gap and grabs my earlobe with her teeth and licks it, she lets go and pushes herself back up and laughs. \"You shouldn't play with me Hannah, I don't play fair.\"\n\n\"Either do I!\" I pull her closer with my legs, and as much as I just want her to take me here and now, I'm still not 100% there, so I resort to childhood tickling. She squirms and she laughs and tries to pull away from me but my legs are far too strong. \"Say I win!\"\n\n\"No!\"\n\n\"Say it or I won't stop!\"\n\n\"Fine! Stop, stop! You win! You win!\"\n\nI stop tickling her and she stares at me trying to catch her breath. Then her pupils get bigger, her smile disappears and she bites her lip. I know that look. That's the same look she gave me the first night we met before she kissed me. Shit. She starts to move her face closer to mine and it happens. She kisses me. It's the most gentle and passionate kiss I think we've ever had. It feels like it lasts for an eternity, she pulls back and looks at me, with big loving eyes. She puts her hand on the back of my neck and pulls me in again. This time a much deeper, harder and even more passionate kiss. I can feel her body grinding against mine, and her other hand is making its way up my leg.\n\nI can't help but give into her kiss, her touch. The sparks are still there, still flying. This feels so right, it's not the case that I just want her physically, I know I want her emotionally and mentally. This just confirms that my feelings for her aren't because she 'rescued' me but because I really do want to be hers. I can feel her getting hungrier, she starts to kiss down my neck and tugs at my shirt to try to pull it off. As I'm about to sit up to let her pull it off me I hear a noise downstairs.\n\n\"Hannah? Sophie? Where the fuck are you guys?\"\n\nFucking Jen! Has to come at the worse time possible. Sophie jumps off me, she's all flustered and starts to fix her hair and pat herself down. She turns and looks at me and makes a face as if to say oops. I've made my decision. I know how I really feel now. It's her. I want to be with her. I'm ready. We're about to leave the room to go down to Jen when she gives me another kiss. I think she did it to show me she doesn't regret it. We then make our way down to Jen.\n\nJen's way of dealing with pain has always been drinking. I'm not one to judge, at the same time I know it's not going to make her better, but I'm her best friend and for now all she needs me to do is be there for her. She decided she wants to go into town to the bar I work at, or worked at, not sure about that one just yet. She thinks it's the best place to let loose since it has an adjoining club and also it guarantees Bex won't be there either.\n\nShe's brought enough drink from her house to give all 3 of us alcohol poisoning! I'm going to take it easy tonight though, after all that's went down in that bar I don't want to give myself a bad name especially since I do plan to go back there for work. At least I know that Zoe won't be there so I'll definitely feel safe. Me and Jen sit and have a few drinks together while Soph gets ready upstairs, takes her a lot longer than me to get ready, she's definitely a girly girl.\n\nAfter around 1 hour Soph comes downstairs and she looks hot! She's wearing a black oversized t-shirt that has a rip effect on the arms and down at the bottom of the shirt, she has a black leather belt around her waist that's decorated with chains and a black pair of ankle boots. She's done her make up quite smoky and her hair is tied up In a high ponytail. On anyone else it would look okay, but on her it is out of this world!",
        "\"Jesus Sophie you look hot! Maybe me and you should just stay here!\" Jen gives her a cheeky wink.\n\n\"Oh yeah? Me and you? Did I get the hate you have for me mixed up with sexual tension?\"\n\n\"Oh she has jokes too! Well you've definitely went up in my books! No longer on my hate list, you've been promoted to strongly dislike.\"\n\n\"You've not done enough to move out of my hate list, work harder Jen.\"\n\n\"Hannah, your house buddy has a bit of fight in her I like it! Now pick up your jaw and go get ready, me and Sophie will stay here so I can try to fight my way off the hate list!\"\n\nIt's nice to see Jen and Soph have a bit of friendly poking back and forth, the fact that Jen's giving her the time of day means she does actually like her but I don't think she'll tell her that just yet. She enjoys the teasing too much. I really need to pull out the stops tonight though, because if I don't have Soph on my arm there'll be plenty of other vultures out there ready to pick her up. I can't do girly though, never. I wouldn't be comfortable at all but I still need to make myself look appealing.\n\nI finally decide on a white t-shirt with black pinstripes across it, a black and white checked shirt over it opened and sleeves rolled up, a pair of skinny black jeans with holes in the knees, a pair of black ankle boots and finally a black fedora. I do the usual casual make up, eyeliner, mascara, a bit of foundation and smoky eyelids. When I'm ready I start to go downstairs and I hear Jen and Soph laughing together. This is great, with how earlier went I plan on telling Soph how I feel tonight and knowing my best friend likes her too it makes it so much better. I get downstairs and they are both wasted and ready to go, Jen sees me first.\n\n\"Now I think we'll all agree we should just stay here and have a threesome because Hannah you're looking hot too! Love the hat, very you. Right Soph?\"\n\n\"Yeah. You definitely look hot. Scrub up well Hannah.\" She's giving me the eyes while taking a sip of her drink, tonight's going to be a good night.\n\n\"Right you two I can tell there's going to be no threesome for me because you are already fucking each other in your heads. Hannah I'm going to your room to fix myself up and I'll ring a taxi, see you both in a minute asshats!\"\n\nJen sprints past me and slaps my ass, also slips up the stairs on the way up, someone's clearly had too much to drink, I go over to the kitchen and start making up a drink when I feel Sophies hands slip around my waist to my stomach.\n\n\"It's a shame that Jen interrupted us earlier, because I was minutes away from fucking you the way I should have fucked you the first night we met. I've been dying to taste you.\"\n\nHer words sent chills through my body. I turn and look at her, and there's those eyes again, her come to bed eyes.\n\n\"Well, make sure you store your energy because when we get home you'll be up until the sun rises.\" I pull her in and give her a deep kiss, those sparks again. She's definitely who I should be with. I break the kiss and look at her again. \"I'm sorry it took me this long to realise that it's you.\"\n\nShe takes a step back and her body language completely changes, she's closed off and the eyes are gone.\n\n\"It's me? Like you want to be with me?\"\n\n\"I thought that was clear? I told you I wasn't going to be with anyone until I knew I was ready. That someone is you Soph. I want to be with you. When you kissed me earlier I knew that my feelings were real.\"\n\n\"Hannah, I though you just wanted a hook up, if I thought you wanted to be with me I... I...\"\n\nJust then Jen comes back down the stairs and of course interrupts us again at the worst time.\n\n\"I got a text! Taxi's outside! Come on, time to party!\"\n\nI look at Soph and she's just looking at me confused, I can see her overthinking, I just wish I knew exactly what was going on in that head of hers. We get into the taxi and just like the drive to the doctors after I tried to kiss her she's silent, distant, like she doesn't want me there. Jen's in the front of the taxi talking the drivers ear off, god help him because she talks rubbish when she's drunk, pretty sure she's telling him about her break up. She needs to let it out somehow. I look over to Soph and she's staring out the window, I grab her hand and she finally looks at me. She looks sad, I thought she'd be happy.\n\n\"Soph, did I do something wrong?\"\n\n\"No, you didn't. I just wasn't expecting that.\"\n\n\"Do you not want to be with me anymore? Is it Izzie?\"\n\n\"No it's not Izzie, I ended things with Izzie.\"\n\n\"Really? When? Why didn't you say anything?\"\n\n\"I ended it yesterday and I was going to tell you then but you went to bed early so I didn't have a chance.\"\n\n\"So what's the problem?\"\n\n\"Hannah, can we just have a good night tonight and talk about it tomorrow? Please? I'd rather not do this when we're about to go out.\"\n\n\"I'd rather do it now Soph, if you don't want to be with me I understand. A lot has happened. I would just rather know now before we go out.\"\n\n\"So you'd rather know now so you know what you're allowed to do in the club? Of course. This is exactly why I wanted to wait until tomorrow to see how you would act tonight, you want me when it's convenient but when you have other options I'm out the door.\"\n\n\"No, I didn't mean that Soph, I meant I'd rather know so...\"\n\n\"So you can turn on that stupid charm and fuck someone else who will give into you. I'm so fucking stupid thinking you could want me, like really want me. Leave it Hannah. Do what the fuck you want.\"\n\n\"Sophie? Please listen you've had a few drinks and you're not listening.\"\n\n\"Get fucked Hannah.\"\n\nShe turns back and looks out the window again and snatches her hand away from mine. What the fuck just happened, we've went to almost fucking, to talking about it, to kissing, to this? How? I told her I want to be with her, I know she doesn't trust me so I'm going to have to build that trust but I never expected her to be this stand offish with me. She's worth it though, I'm going to show her I'm not the person she thinks I am. I look over at her again and she's on her phone as per usual. I look at Jen who's playing with the taxi man's car radio and then I see the bar up ahead. Thank god I can get out of this atmosphere!\n\nWe get into the bar and grab ourselves a couple of drinks, Jen Is eying up every tomboy who walks past and Soph still has her head buried in her phone. I'm really not feeling it, I just feel so out of sorts and I just don't know what to do. I order 6 shots so we have 2 each and order myself a double vodka and coke. Jen also orders 6 shots so within minutes we've had 4 shots each. I just chat to Jen about the girls she wants in the bar, I point out to her the one's I know and tell her that I'll put in a good word for her, we try to involve Soph but again, she's not interested. Her head in in her phone texting away.\n\nAfter about 20 minutes I am extremely drunk, I know my plans were to be as sober as I could be, but there is too much tension between me and Soph and I can't handle it, I need to get drunk and dance like an idiot so the night goes quicker and I can go home. One of the regulars come over to the bar to say hi to me, she's a lovely girl, very quiet but very energetic and also very funny. She's also Jens type and I think she would work well as a rebound so I introduce the two of them and straight away it's like a house on fire.\n\nJen drags the girl into the adjoining club to dance with her and I finally decide to try to talk to Sophie, as I do though I'm slapped across the face, not literally, just slapped with a surprise I never saw coming.\n\n\"Sophie! I knew you'd come around!\" It was fucking Izzie. That's who she was texting. She asked Izzie to come to the club. I can't believe this. Izzie gives her a hug and a small peck and turns to me \"Oh Hannah, hi, how's the hand?\"\n\n\"Better thank you.\"\n\n\"Be sure not to get into any bar brawls tonight won't you?\" She gives me a gentle elbow.\n\n\"Great advice doc, thank you I never thought of that.\"\n\nI look at Soph who seems pretty pleased with herself and I leave to go into the adjoining club too. I never expected her to do something so dicky. I understand she's hurt. I understand there is lack of trust. I never expected her to be the type to flaunt someone else in my face though, it brings me back to the night I walked in on her an Alan.\n\nJust then it hits me, she did that because she was scared. She was scared of how she felt for me and then I didn't give her a chance to talk to me or explain. I just moved on to the next person. I can't do that again. As much as it'll kill me seeing her with Izzie, it'll hurt more ruining a second chance of being with her by having a one night stand with someone to get my own back.\n\nI stay with Jen most of the night, she's moved on from girl to girl to girl, she's not wasting anytime making sure she gets all of her frustration out and I'm pretty sure she's kissing a girl she's already kissed and she hasn't even realised. I continue to dance with Jen and her playtoy and glance around me and I see Sophie and Izzie. Me and Sophie catch each other's eye and I crack a friendly smile, instead of smiling back she pulls Izzie towards her and kisses her while looking straight at me still. I can't lie. It hurt, it really fucking hurt.\n\nAs the night goes on my mood really starts to dip, a lot of girls tried to get to know me and flirt and even kiss me, and I'm not being big headed at all, but when I say a lot I mean a lot, but none of them are Sophie. So I turned each and every one of them down. If I wanted to I could have kissed someone and used Soph being with Izzie as an excuse but I didn't. I couldn't cause Sophie to hurt the way I am right now. I just want to go home.\n\n\"Jen! Jen! I'm going to go home, I'm not feeling it and it's nearly closing time anyway so I want to beat the rush for taxi's, are you coming?\"\n\n\"Nope! I will be later though, that cutie over there already promised me I would be.\" She points at the regular I set her up with earlier, seems she has well and truly went full circle.\n\n\"Okay, be safe and you let me know you get home okay. I love you Jen.\"\n\n\"Thanks Hannah I love you too sexy!\"\n\nShe seems in a much better mood than I expected, I'm glad she's happy but I'm still expecting the crash soon, for now though I'll let her enjoy her single, free mind frame. I go out the front of the club to grab a taxi and I hear my name being called. A voice I recognise but not a voice I can put a name on, that is until I turn around and see Izzie and Sophie standing down the footpath holding hands. Ugh, I can't believe I have to deal with this. I walk down to them to be polite.\n\n\"Hannah, well you surprised me, I expected you to be walking out of here with a girl on that arm of yours, seemed like you were a magnet every time I looked you were pushing another girl away.\"\n\n\"Well Izzie. I guess I'm full of surprises aren't I?\" I'm talking to her in a condescending way but I don't think she's noticed, Soph is looking at me unimpressed too. \"Truth is, I'm not going to jump into bed with just anyone, especially when I have feelings for someone else.\" I look dead at Sophie, her eyes widen and she looks genuinely saddened, obviously realised that my intentions weren't to fuck some random girl.\n\n\"Oh yes, Sophie told me you recently went through a break up. Awk that's awful sad. Well chin up!\" God I hate her.\n\n\"Great advice again Doc! Thank you! I'm guessing you'll want to split a taxi home?\"\n\n\"To Sophie's house? God no! Like I told her yesterday I can't be seen in that type of place. Would bring my reputation right down. It may be suitable for you two but I personally wouldn't want to be anywhere near there.\" Penny drops. Doctor Model is a stuck up bitch.\n\n\"Oh yes god forbid you ever be seen there Izzie! How could I be so stupid, what would your friends think of you!\" For someone so smart, she really doesn't pick up sarcasm at all.\n\n\"I'm glad you understand Hannah! Sophie was very upset when I told her. Truth be told, I actually told my friends that Sophie was a Doctor too! Could you imagine the embarrassment of telling them she's just a manager of some stupid shipping thing? It's nice to have someone agree with me though.\"\n\nI'm genuinely shocked. That's why Sophie ended it. Izzie's embarrassed of her. How could she be embarrassed by someone so amazing! Sophie looks to the ground then looks back at me. She seems like she's ashamed, her face is going red with embarrassment and her eyes are filling with tears. This bitch is making her feel underappreciated and it really isn't sitting right with me. A taxi pulls up and I offer them to take it, because I want this bitch out of my sight, but she says no because it's not up to her standards, no shock there. As I'm about to get in it I say bye to Izzie and pull Sophie in for a hug. I hold her so tight and whisper into her ear.\n\n\"You deserve better. I love you.\"\n\nI let go and without looking at her I get in the taxi. As we drive away I glance back and see Sophie watching in shock and disbelieve. It was too late now though, I made my bed 7 months ago, and now I'm lying in it."
    ],
    "authorname": "Call_me_milky",
    "tags": [
        "lesbian",
        "romance",
        "young",
        "attraction",
        "lesbian romance",
        "drama",
        "love story",
        "lesbian sex"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/itll-be-our-secret-pt-03"
}