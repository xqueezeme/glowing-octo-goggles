{
    "title": "Austin's Big Night Pt. 02",
    "pages": [
        "Austin froze in place, unsure what to do. \"What do you mean she's here?!\" he shot back. \"I thought she wasn't coming!\"\n\nJess shook her head frantically. \"She wasn't supposed to. She had to work, but I guess she called in. She's out there.\"\n\nAustin paced back and forth in the small hallway. Jess patiently watched. He did indeed look ridiculous. He was wearing a police officer's uniform that was far too tight and holding a child's Frankenstein mask. \"I can't go out there, right?\"\n\n\"Why not? Just put on the mask and do like we planned. I can't go out there and tell everyone there's no stripper anymore. Half of them already know it's coming!\"\n\n\"What about Emilia?\" Austin protested. \"She's gonna know it's me!\"\n\n\"By what? Your dick and balls?\"\n\nAustin allowed himself to crack a smile. Jess was right. How could Emilia know it was him as long as he doesn't remove his mask? \"Fine. I'll do it. But I'm not gonna go up to her table.\"\n\nJess nodded. \"Absolutely. Just stay clear. It'll be fine.\" She glanced down at his crotch. It was noticeably smaller in the panic of the moment. She approached him and put her hand on his cock. \"Does this need a little encouragement now?\" She winked seductively as she massaged him.\n\n\"Might need some help, yeah,\" Austin said as he looked down. Jess got on her tippy toes and breathed into his ear. \"Get this big cock hard for me, hmm?\" she said softly in her sexy voice. She then licked his neck sensually while stroking him over his pants.\n\n\"Oh fuck, Jess. You know how to push the right buttons.\"\n\nShe looked down to see he was back to his ballooned state. \"I'm sorry Officer. Did I do that?\" she joked. \"See you in a bit, Mr. Nine Inches.\"\n\n\"It's eight and a half,\" Austin said. Jess giggled as she left for the main room.\n\nAustin took a deep breath as he peeked out the door. Without being seen, he was able to ascertain the setup of the room. Each of the stylist chairs had one girl sitting in them. Then there were tables and chairs set up in the back for the others. Behind everything, there was a makeshift bar setup where at least a dozen girls were standing around, chatting.\n\nThat's where he saw Emilia. She was talking to two of her friends. She wasn't sitting at a table or in a stylist chair. It might be difficult for Austin to avoid her. What if she floated over to the action? Or worse, what if she wanted to partake in the action and touch him? He knew women had a tendency to get pretty handsy at these things, especially when the drinks were flowing.\n\nHe decided his strategy would be to dance around and avoid Emilia. If she came near him, he'd move along. All he really had to do was spend some time with Gabbi, put on a little show for her, then he could get out of there. No harm, no foul.\n\n\"Let's bring him out, ladies!\" Jess said as the room erupted in applause. It was time.\n\nLoud dance music blasted from the stereo system. It wasn't music that Austin was particularly into. He was more of a Country guy himself. But it was perfect for the occasion.\n\nHe emerged from the hallway to an explosion of cheers and cat-calls from the women. Sporting a police officer outfit and Frankenstein mask, he began to dance around. He thought to himself that he probably should have practiced at least a couple of dance moves before that evening, but none of the women seemed to mind.\n\nThey were cheering, clapping, and laughing. Austin could see through the mask enough to notice that every single set of eyes were glued to him. As he danced around the room, they all feasted on him, staring at his muscles and the sizable bulge snaking down his leg thanks to Jess' flirts in the hall.\n\nAustin originally planned to take his time before the big reveal, but the Emilia situation threw a wrench in the mix. He decided to get to the main event sooner than later. The clothes he bought from Amazon were designed to be ripped off in one fell swoop. He reached down to the bottom of his shorts and yanked them off. As planned, the entire costume came off at once.\n\nThe room erupted. It was so loud, Austin thought his ear drums would burst. He continued dancing even though he couldn't even hear the stereo anymore. His cock bounced back and forth as he hopped around. It was so big, it was slapping against his thighs and his stomach. Through his mask, he watched the girls' facial expressions carefully. Many of them covered their mouths in shock. He saw several women whisper to each other with perplexed looks on their faces.\n\nHe was about half-hard, so he knew he looked pretty good and was growing by the minute the more he watched the girls' reactions. He noticed one girl in the back hold her two hands wide apart, clearly indicating her estimation of his penis size.\n\nThen he saw her. Emilia was standing in the same area as before, next to three or four other women, holding her champagne glass. She was smiling and laughing. She too was whispering to her friends. Once Austin noticed her, he could barely stop from looking in her direction. Her eyes were definitively glued to his cock. She may have even been blushing.\n\nWelp. Fuck he thought to himself. His stepsister had now seen his most private of parts. And not only that, but she appeared to have a fixation with it. She wouldn't stop looking at it no matter where in the room he danced. Austin felt deeply ashamed and embarrassed for letting this happen. He never dreamed of being like this in front of her, yet here he was. He felt a slight anger towards Jess and Kelly for knowingly putting him in this position, but that quickly faded as he reminded himself no one was holding a gun to his head. He wanted to be there.\n\nIt was time to get to work. Gabbi was seated at the table in the back of the room. He would have to walk past all the women sitting in the stylist chairs to get to her. He started doing the rounds.\n\nWith each visit, he would dance a little in front of the girl, then spin around, then move on. But some of them insisted he stay longer. It wasn't long until the first woman of the evening grabbed his cock. She playfully jerked it while all the other women cheered. Austin didn't object. It was understood that this may happen.\n\nOnce the floodgates were open, every woman that Austin danced with wanted to touch him. Throughout each interaction, he checked on Emilia. She was still entranced. She was like a woman possessed, mesmerized and spellbound by the biggest penis she's ever seen.\n\n\"It's so fucking huge!\" one beautiful redhead said as she placed both hands on his hardening cock. \"I can get two hands on it!\"\n\n\"You have a beautiful penis,\" her friend stated plainly as she watched the redhead jerk him off while casually sipping her drink.\n\n\"It's fucking crazy! Look at this thing!\" she said. \"It's like a third leg!\"\n\n\"I love your abs,\" another girl said as she ran her fingers up and down Austin's torso. That sensation helped secure a complete erection. \"Oh I think he likessss it!\" she said as she noticed his hardened cock.\n\nAs the girls fondled him, Austin looked in the back of the room. Emilia was in the same spot. She hadn't moved, but still appeared very interested in his naked body. He prayed it would be over soon. He caught eyes with Jess who did a very subtle thumbs up, indicating all was good with Emilia staying put.\n\nHe re-focused attention on the girls. The redhead was inches from his cock. Her mouth appeared to be close to drooling. He sensed she wanted more. But Austin had a job to do. Just as the redhead opened her mouth wide to accommodate his girthy unit, he pulled back. \"Not yet, sweetie,\" he said quietly, remaining in character.\n\nAfter checking on Emilia once more, he moved on. He decided if he wanted to get out of there, he'd better pick up the pace. These women were hungry and one of them was going to eat him if he didn't move swiftly.\n\nBut just as Austin hurried up, the women seemed to get even more excited. As he danced for one of the girls in her chair, he felt a hand slap his butt. Several women had gotten up out of their chairs to surround him as he waved his cock around. The drinks must have been flowing because the girls were getting wild.\n\n\"It's enormous!\"\n\n\"How is it so thick!?\"\n\n\"Look at his muscles!\"\n\n\"His balls are massive!\"\n\nThese were just a few of the comments flying around as they obsessed over him. Someone even handed Austin a shot of tequila to which he happily threw back. Why not? he thought to himself as he got even more fast and loose with his audience.\n\nDespite the crowd growing around him, he did manage to make progress and had now stopped at each of the ladies seated in the stylist chairs. All that was left was the table at the back where Gabbi sat wearing a crown and a sash. Her eyes grew wide and she began to blush when she noticed Austin coming her way.\n\nWhile Austin danced his way to Gabbi, he scanned the back of the room. At first, he panicked when he couldn't find Emilia, but quickly relaxed when he noticed she was pouring another glass of champagne, still a safe distance away. But now that Austin was in the back of the room, he was dangerously close to an encounter with Emilia. To make matters worse, the girls around her seemed destined to approach him with their escalating excitement and intensity. He prayed Emilia didn't follow them if they did.\n\n\"Oh my fucking lord, I have died and gone to heaven,\" said Gabbi as Austin danced right up to her. He put his hands on his hips and swayed his meaty cock back and forth while Gabbi and all the girls at the table watched it closely. \"You are a specimen!\" she said as she turned bright red.\n\n\"How do you have sex?!\" one of the girls asked, looking up at Austin. But he remained silent, unwilling to blow his cover, despite badly wanting to interact with the gorgeous women.\n\n\"It's so fat. I want to eat it!\" Gabbi said as she reached out her hand and began to stroke his cock. Her fingers felt amazing on Austin's rock hard column. Everyone cheered and hollered as Gabbi used two hands to jerk him off. \"This is a workout!\" she screamed as everyone laughed.\n\nAnother set of hands squeezed his butt. Several others ran their hands along his muscular arms and back. Austin was in heaven. He held his hands up out of the way to allow full access to anyone who wanted it.\n\n\"Wooooo!\" one girl yelled. \"Get it girl!\" another one shouted out. Austin felt as if he died and went to heaven as he watched Gabbi stroke him off in front of all the women.\n\n\"How have you not cum yet?!\" someone asked. Austin remained silent. But her calling attention to him having an orgasm seemed to escalate his arousal to a point of no return.\n\n\"Make him cum! Make him cum! Make him cum!\" the women chanted, aggressively trying to get the bride-to-be to incite a massive orgasm out of the young man.\n\nGabbi gritted her teeth as she stroked. \"I'm trying!\" she yelled. \"He's so big!\"\n\nA pretty brunette was the first to notice. \"His butt cheeks are clenched! He's gonna blow!\"\n\nAustin's breathing increased. His fingers clutched the back of his head. He stared at his cock with Gabbi's sexy hands running up and down. He felt his balls tighten and the first load of cum race up his shaft. He groaned loudly, much to everyone's delight.\n\nAs he came, he looked up to see her. Standing directly across from him, smiling and cheering with everyone else, was Emilia. She stared at his cock. She looked happy, impressed, delighted all at once. She was completely focused on her own stepbrother's cock just as a thick blast of white cum sprayed out, across the table, landing squarely in front of her.\n\nAustin was helpless. He could do nothing. Pleasure consumed him as he jutted his hips out, launching a considerable load onto the table. He watched Emilia's eyes as she observed him cum, each shot being more than the previous, landing on the table cloth.\n\nAustin moaned, unable to control his own sounds. Gabbi jerked him harder. He had already deposited four thick loads, but could feel the next one would be the crowd-pleaser.\n\n\"Ahhhhh!\" he shouted as his fifth blast spewed out his aching cock, across the table, and landed directly onto Emilia's red sweater. She jumped back and screamed. Everyone else screamed and moved out of the way. They all looked at the mess left on her sweater.\n\nGabbi laughed and tried to aim Austin's cock elsewhere, but ended up spraying another girl with his sixth and seventh shots. More laughter erupted. Everyone was getting a kick out of the giant cumshot.\n\n\"He's still going!\" someone noticed. Austin kept cumming, this time on the table again. As he finished his orgasm, he watched Emilia closely. He could not believe what had happened. She was surprised, but not disgusted. She held her sweater out from her body, showing others the thick load stretched across it. Her flat tummy was exposed in the process.\n\n\"Ok, ok, ok,\" Austin said out loud, careful not to be loud enough Emilia would hear. He winced in sensitivity as Gabbi finally let his cock free. She held up her hand to the girl next to her, showing how much cum was on her fingers. \"Holy shit,\" the other girl said.\n\nAs Austin stood, out of breath, and awkwardly vulnerable, he watched Emilia. She was laughing and smiling, showing off the cum on her sweater. She seemed to be having a blast. Austin never thought about her like that, but could now see she had a devilish side to her. Perhaps she was a cum fiend. Or a big dick lover. Perhaps Austin was her perfect type.\n\nStop it now Austin scolded himself. He needed to get out of there fast. As he turned to walk away, he was stopped by one of the girls at the table. \"Not so fast, Mr. Big Shot,\" she said. \"You're gonna just leave this mess you made?\"\n\n\"Yeah, how are we supposed to eat with all your jizz everywhere?!\" another one called out. Everyone laughed, getting a kick out of the situation.\n\nAustin was handed a roll of paper towels and a cleaning spray bottle. He got to work cleaning up his cum. The women got a kick out of watching him clean up. As he moved about the table, scrubbing and wiping, his cock bounced around. Some of the girls playfully tapped it or even squeezed it.\n\n\"You have a very pretty penis,\" one said.\n\n\"It's perfect,\" added another. They were delightfully watching as Austin cleaned up all around them.\n\n\"You missed a spot, sweetie,\" one attractive blonde said as she held out her arm. Almost the entire length of her forearm was a splattering of thick sperm. Austin held her arm and gently cleaned it off. She smiled and thanked him by stroking his dangling cock.\n\nAustin checked once again on Emilia. She was still standing in her group near the drinks. Another girl was helping her clean off her sweater. She was smiling and laughing. It certainly appeared she was having a great time. Austin thought about how this may not be that bad as long as she doesn't find out it's him. He decided as long as she didn't hear his voice, he may be able to get away with this.\n\n\"It's so big when it's resting too!\" the blonde observed as she continued to stroke him while everyone else watched. \"How many inches is it, darling?\"\n\nAustin noticed the question resulted in the spotlight on him. Everyone wanted to find out. The room was quiet as they awaited his response. Emilia was paying attention. He couldn't speak for fear of being recognized. So instead, he held up eight fingers.\n\n\"Eight?!\" the girl called out.\n\nAustin shrugged and held up an additional finger.\n\n\"Nine?!\" she again responded. Austin shrugged again.\n\n\"My goodness,\" said one girl. \"That's the biggest penis I've ever seen. And fattest. We're gonna have some fun with you, honey!\"\n\nAustin finished cleaning his cum and took a half bow, before heading back to the bathroom. Jess and Kelly quickly followed.\n\n\"You did awesome!\" Jess said as the three of them were safely together. Austin took off his mask and took a deep breath. He was sweating heavily. \"That was nerve-wracking,\" he said.\n\nKelly nodded. \"Yeah, but Austin. She has no idea. She's having a blast. You were perfect.\"\n\n\"You really were,\" added Kelly as she eyed Austin's cock. \"You were amazing. Both of you,\" she said as she softly petted his penis. Austin laughed. \"Stay with us now, Kelly!\"\n\n\"Ok, the pizza just got here. We need to get you ready to serve. We have an apron and everything,\" Jess said as she started to gather paper plates and napkins.\n\n\"Wait, what? I'm leaving, guys!\" Austin protested.\n\n\"Austin, you can't. You're doing so well. They are loving it. Gabbi is having the time of her life. Please just stay for the rest of the time. You can keep the mask on. Emilia is never gonna find out, we promise!\" Jess looked at him with her big blue eyes. They were stunning enough to convince any man.\n\nTruth be told, Austin was having a blast. \"I don't know guys,\" he said with unconvincing hesitation. \"You sure?\"\n\nKelly smiled. \"There's no way. Look at her out there.\"\n\nThe three of them peered around the door frame to see Emilia with her friends, dancing, singing, and having a blast. \"See?\" Jess asked. \"She's loving this.\"\n\n\"Just do the rounds again, handing out pizza. You and your big ass dick will be a delight for everyone.\"\n\nAustin took one more look out towards the main room. Emilia was doing a fake dance, seemingly imitating Austin's cheesy dance moves. She looked so happy.\n\n\"Ok. One more round,\" he said as he wiped his face and put the Frankenstein mask back on.\n\n\"Yay!\" Jess said. \"Wait!\" She then knelt down, tucked her hair behind her ear and kissed Austin's penis tip. After the kiss, she followed up with a little suck, and flick of the tongue.\n\n\"Oh shit,\" Austin said as he felt blood rushing back to his cock.\n\nSatisfied, Jess stood up, smiling. \"Just wanted to help you get ready.\" She winked at him as she and Kelly left for the party.\n\nOnce again, Austin found himself alone in the back room, naked and trying to get psyched up to go back out. But this time was different. He was having fun. The girls loved him. Emilia had no idea. He was excited to make the best of it. And to add to that, he already had a raging boner from Jess' mouth action a moment ago. It was time to do his thing.\n\nHe threw on the apron, grabbed a pizza box, and emerged from the back. The apron was, of course, far too small and left nothing to the imagination. To no surprise, the girls began to hoot and holler when he emerged, clearly noticing he had a raging erection under the apron.\n\nAs he danced around, he handed out pizza slices to each of the girls sitting in the stylist chairs. More than half of them had vacated their position and were mingling in the back near the big table. Emilia was among them. He could see she had cleaned her sweater, but remnants of his cum blast remained. Austin recognized the sweater as he had seen her wear it many times. He found it odd that he soiled it.\n\nA small group gathered near him by one of the chairs. The girls were extra handsy, wasting no time in pulling his apron aside to see his cock. \"You are fine. You are so fine, baby,\" a cute Hispanic woman said. \"You gonna spray everywhere again?\" she asked.\n\nAustin was far enough away from the main group, he felt comfortable talking. \"I just may. You want to see it shoot again?\"\n\nThe girl bit her lip. \"I want nothing more,\" she whispered as she stroked his cock.\n\n\"How do you cum so much, baby?\" another girl asked as she watched the first one jerk him off.\n\nAustin smiled, although it was concealed by the mask. \"Hydration. And it's just luck of the nature draw.\"\n\nShe giggled. \"You're a funny one!\"\n\nAustin continued moving along, handing out pizza to anyone who wanted some. As he progressed, he could hear the girls he was just with talking with each other.\n\n\"God, I want to fuck him so bad,\" one of them said. Austin loved hearing that. He pretended he didn't though.\n\n\"He would destroy me with that,\" the other girl responded. Austin's dick ached when he heard the exchange.",
        "Austin progressed further. All eyes were on him this time. Every single girl in the room seemed to be overly riled up by the show. He was in his element, having a blast. Girls were taking turns jerking him off, sucking him off. It wasn't before long until he saw the first pair of breasts. They belonged to a heavier girl sitting at the table. She shook them side to side as the room erupted in applause. She then took Austin's cock and stuck it between her two massive orbs.\n\nAustin responded by thrusting up and down. His cock was so big, it poked her in the chin. She loved it as did everyone else. Soon after, more girls removed their tops. Austin looked around. Tits were everywhere. He tried to avoid looking over where Emilia was, but couldn't help himself.\n\nThen he saw her. Her sweater was off and she was dancing in a bra. He had seen his stepsister in a bikini more times than he can count. He knew she was in good shape and he knew she had bigger than average breasts. He quickly averted his gaze so as not to stare at her. But he couldn't help but admit to himself she looked really good.\n\nAs the music blared and the drinks flowed, the party kicked into high gear. The pizza was barely touched. Everyone wanted to party. And none more than the guest of honor, Gabbi herself.\n\nShe took off all her clothes except her panties and laid out on the table. Everyone cheered loudly as she rubbed herself over her panties in front of everyone. Austin couldn't believe his eyes. He stopped dancing and watched her masturbate as he stroked his cock. He was situated right near her head. His outstretched cock was mere inches from her face.\n\nGabbi reached out and grabbed it, quickly wrapping her lips around him. She sucked him off while fingering herself. Everyone cheered triumphantly, as if the home team scored a goal with no time left. Austin put his hands on his hips and softly thrusted into her warm, wet mouth. Gabbi was a pro. Her tongue did most of the work while her hand stroked the lower part of his shaft.\n\nHer fingers worked aggressively under her panties. Her legs kicked. Despite having a mouth full of cock, she moaned. The entire room was now surrounding the two of them.\n\nAs Austin got his dick sucked, he closed his eyes as he felt immense pleasure. He noticed a set of hands reach out and cradle his balls. He turned to see it was Jess. He responded by putting his arm around her. \"Does that feel good?\" she asked.\n\nAustin nodded and moaned.\n\nGabbi progressed deeper and deeper on his shaft. She also moaned louder as she approached orgasm. Austin was caught up in the moment. Someone tore off his apron long ago. He felt more and more hands all over him. Feeling his muscles, squeezing his nipples and ass. He prayed he wouldn't cum so the moment was extended as long as possible.\n\nHe closed his eyes and looked up. He allowed himself to belt out an \"Oh my God!\" He scolded himself for doing so, afraid Emilia would recognize his voice.\n\nWhen he came to, he looked down. Several hands ran all over his body. But one set caught his attention. They were fair-skinned slender hands. Dark nail polish. A small ring on the pinky. These particular hands were familiar to him. Austin checked the drink station to see Emilia was not there anymore. He looked back down and knew right away. They were the hands of his stepsister.\n\nHe watched them explore his body. Feeling his abs, pecs, thighs, and slowly approaching his cock.\n\nHe blacked out when the moment happened. He didn't remember how it started. But it wasn't long before Emilia's petite little hand was wrapped around the base of his thick cock. She squeezed with authority. She stroked up and down, far enough to reach Gabbi's encircled mouth, and then back down again. His stepsister was jerking him off.\n\nHe could smell her. He recognized the smell of her hair. He could have sworn he heard her moan quietly. It was surreal. He froze in place. He even debated running away.\n\nBut instead, Gabbi popped his cock out of her mouth and screamed. She pulled her panties completely aside and came right there and then in front of everyone. While Austin watched, Emilia didn't stop jerking him off. She now stroked his entire shaft. Austin tried to focus on Gabbi cumming and not her amazing stroking skills.\n\nWhen Gabbi's orgasm subsided, she turned sleepily to Austin and beckoned him over with her index finger. She knew what she wanted next. Austin was no dummy, he knew as well.\n\nEmilia released his cock, but not before expressing her admiration. \"You're so fucking huge,\" she said to him. He simply nodded as he walked by her and approached Gabbi, panicking that if he said anything he'd be discovered.\n\nAustin started by slapping his cock across Gabbi's pussy. He teased her a little as she begged to be fucked. The girls continued cheering and hollering. They even chanted \"Fuck her! Fuck her! Fuck her!\"\n\nNothing mattered as Austin proceeded to penetrate her. He stuffed her tight cunt with his oversized cock and didn't think about having sex in front of dozens of women. He didn't think about Gabbi cheating on her future husband, and he most certainly didn't think about Emilia. Overcome with intense arousal, all he could focus on was the warm, wet confines of the beautiful vagina before his very eyes.\n\nLike most girls with Austin do, Gabbi gasped upon entry. Her eyes rolled in the back of her head. Her mouth fell open. She tilted her head forward to watch him enter her. \"Ohhh fuck!\" she moaned loudly.\n\n\"Holy shit,\" someone could be heard saying. The girls surrounding Gabbi were astonished as they watched Austin's massive cock slowly disappear deep inside. Gabbi's pussy spread wide in an attempt to take him in.\n\n\"Are you ok?\" someone asked as they lovingly put their hand on her forehead. Gabbi nodded as she bit her lower lip. \"He's so big,\" she answered. \"But he feels amazing.\"\n\nAustin held onto the space behind Gabbi's knees as he crouched in front of her and fucked her harder. Jess and another girl held her boobs in place while a third felt her stomach. \"I can feel him in your stomach!\" she observed. This comment was met with much uproar from everyone else.\n\nAustin was fucking her so hard, his balls could be heard slapping against the side of the table. Gabbi could not take his whole penis, but at least three-fourths were buried deep within after each thrust. Gabbi had cum twice by now, each orgasm sending her into a shivering spell. And it wasn't just she who was getting into it. Austin noticed several girls playing with themselves as well as with each other. Hands in panties and even completely naked. It was turning into an all-out cumfest.\n\nIn the midst of all the hoopla, two other girls joined Gabbi on the table. One was a beautiful brunette with medium breasts and a hairy pussy. She spread her legs, signifying she wanted to get fucked by Austin as well.\n\nThen Austin panicked when the second girl climbed up on the other side of Gabbi. Next to Gabbi, still wearing panties and a bra, was Emilia. She too spread her legs. Her hand worked frantically underneath the black fabric. She was masturbating. Her eyes made contact with Austin's through his mask. She had a look of desperation and desire.\n\n\"I wanna turn!\" shouted the other girl before Austin could do anything. Gabbi nodded her approval. She had cum three times already. As Austin withdrew his cock, he noticed Emilia stare at it. She never broke eye contact with his slimy, rigid pole, covered in Gabbi's fluids. Her hypnotizing stare nearly sent Austin over the edge as he quickly stuffed it into the other girl's waiting snatch.\n\nHe fucked her with force and passion. She loved it, nearly cumming instantly. Emilia sat up and watched. She wanted to get a good look at his cock as it went in and out. She played with her pussy and Austin caught a glimpse of her pink lips. He scolded himself for staring, but could not take his eyes off her. His own stepsister was driving him nuts.\n\nAfter ten minutes, the other girl had reached a second orgasm. As she came down from her high, Austin removed his cock and began to jerk off in front of Gabbi.\n\nWhile everyone in the room awaited the big money shot, Emilia was not about to be left out. She reached out and grabbed his cock for the second time that night. She pulled him towards her. Austin had no choice but to play along. He didn't object, allowing her to position him between her legs. \"Fuck me, Frankenstein,\" she said as everyone laughed and cheered.\n\nAustin let her position his cock so his head made contact with her wet pussy. As she pulled her underwear aside, he saw his very first unobstructed glimpse of his stepsister's vagina. It was fat, much fatter than he expected. Her lips protruded prominently. The clitoris was large and engorged. He noticed she was substantially wet and clearly turned on.\n\nAfter a few moments, she realized Austin was not making the first move. So she slid forward to begin to take him inside her. First, just the head, then an inch of the shaft. He watched her pussy spread wide to take him in. The feeling was incredible. She was so warm and tight. It felt like his dick was in a vice. He had never felt anything so glorious in all his years.\n\nEmilia didn't rest her head down. She watched every second of every inch as it slid inside her. Her mouth dropped open in shock. The others cheered. One of them massaged Emilia's clit with her forefinger and middle.\n\nAustin took one look at Emilia's face and panicked. More so than he had done the entire time. How did it come to this? He wasn't even supposed to be anywhere near her. He was careful about that. Yet here he was fucking her in front of everyone. His very own stepsister.\n\nHe looked up and saw Kelly. She was white as a ghost. Jess was beside her with a very worried look on her face. This was not right. They knew it and Austin knew it.\n\nHe looked back down. Half his cock was inside her now. He couldn't bear to go on any further.\n\nIn an instant, he pulled his cock out and stroked it viciously. The only way to get out of there was to cum. He stepped aside and jerked off with all his might between Gabbi's legs. Emilia was visibly upset. She hadn't cum, but wanted to. She wanted to feel what the others felt.\n\nAustin arched his back, looked up to the ceiling, closed his eyes, and grunted. He sprayed his first blast all over Gabbi's naked body. He drenched her in cum. The girls all cheered and clapped. It was immediately apparent that the load he was expelling was more than before. It was more than any of them had ever seen. He moaned and groaned as he shot forth thick, white blasts on everyone.\n\nAs he came, it was Emilia who snuck up and took hold of his cock. He couldn't stop or hold it back. She aimed at her mouth as he dropped a massive load deep down her throat. There was nothing he could do but moan in pleasure. The train had left the station. He was cumming in his stepsister's mouth.\n\nShe gulped it down, one load after another as everyone encouraged her with cheers. Kelly ran for the bathroom. Jess covered her mouth in shock.\n\nAustin let three blasts go into her mouth, before forcibly removing his dick and shooting out the rest of the loads onto Gabbi and her friend. He thought Emilia looked disappointed as she wiped her mouth, watching him finish his orgasm. The whole room continued to cheer in excitement.\n\nAustin was out of breath as he panted and observed the cum he sprayed everywhere. Gabbi laid perfectly still as everyone clapped. She had a permanent grin on her face. The girl next to her also laid on her back, facing Gabbi, smiling with her. They shared an intense bond after going through everything together.\n\nThen there was Emilia. Austin looked at her as she sat up, naked. Cum dripped from her chin. It was on her stomach. She remained naked. Her pussy was still exposed for all to see. He followed her eyes and noticed she was still staring at his cock. She was completely taken in by it. He couldn't help but notice she looked slightly disappointed, surely because of how Austin abruptly pulled out of her.\n\nAustin waved his goodbyes and retreated to the back room to get dressed. Not long after, Jess and Kelly showed up.\n\n\"Austin,\" Kelly said. \"I'm sorry.\"\n\n\"Me too,\" said Jess. \"I'm so sorry. How are you feeling?\"\n\n\"Well besides the fact that I just fucked my stepsister and came in her mouth, I'm just dandy,\" he replied snarkily.\n\n\"Austin, we didn't mean for that to happen. We should have done something.\"\n\nHe shook his head. \"You know what? This is my fault. No one forced me to do any of that. Now I need to live with it.\"\n\nAfter they hugged, Austin collected his things and was on his way. He felt a deep sense of regret and remorse the entire ride home. He wondered if things would ever be the same again.\n\n----------------------------\n\nIt was a lazy Sunday afternoon. Austin was at his parents' house to use the pool while they were away. No one was home except for him and Emilia. Several days had passed since the Bachelorette Party at the salon. As hard as he tried, Austin could not clear his mind of what happened. It affected him deeply. But much to his surprise, not in a detrimental way. He often imagined Emilia's face when he first entered her. He pictured her leaning her head forward and watching him penetrate her as her vagina spread wide. He pictured cumming on her. On her shirt, her face and in her mouth.\n\nHe wondered if she'd ever find out who the masked dancer was. On the surface, he hoped she wouldn't. But he wrestled with the idea of her potentially finding out, often wondering if that was something she'd like.\n\n\"Hey,\" Austin said as he cruised by the laundry room.\n\n\"Hey,\" Emilia said, plainly with no emotion. Austin noticed she was hanging up her red sweater to dry.\n\n\"No dry cleaner?\" Austin asked.\n\n\"Oh, umm... no. I, umm... spilled wine on it at Gabbi's thing the other day.\"\n\n\"Ahh, gotcha,\" said Austin. He replayed the image of her showing off his cum blast to her friends while laughing and giggling.\n\n\"How was that, by the way?\" Austin asked. \"The party.\"\n\n\"Wouldn't you like to know?\" she teased. \"Don't you know what happens at a Bachelorette Party stays at a Bachelorette Party?\"\n\n\"I should have known,\" said Austin. \"Probably just wine and gossip, right?\"\n\nEmila laughed as she finished hanging up her sweater. \"Exactly.\"\n\nLater that day, the two found themselves in the kitchen. Emilia was working on opening a can of black olives and couldn't get the can opener working.\n\n\"Ughh.. I can't get this. Can you help?\"\n\nAustin walked over and took the can from her. He positioned the can opener and started working its way open. Emilia watched closely. She never really looked at Austin's hands this long. As he tried to open the can, she watched them maneuver the can opener and struggle to get it working.\n\nSomething struck her as familiar about his hands. She studied them carefully. They were large, much larger than hers. She never really noticed how masculine they look.\n\nSuddenly, it hit her like a ton of bricks. She recognized his hands from somewhere. Something very recently. Where did she see them before?\n\n\"Excuse me,\" Emilia said as she darted unexpectedly for the bathroom. She shut the door, flipped open the toilet seat, got on her knees and vomited profusely.\n\nThere was a knock on the door. \"Emilia? You ok?\"\n\nShe kept throwing up. \"Yes!\" she called out, struggling to find the words without crying.\n\nShe had sex with her stepbrother.\n\n---------------------------------------------\n\nAustin wasn't born yesterday. He knew she recognized him as the masked dancer. The way she looked at his hands and then her sudden escape to the bathroom were dead giveaways. Austin floated around in his parents' in-ground pool, contemplating what he was supposed to do. He knew that she knew, but was almost certain she wouldn't bring it up.\n\nHis inner self tried to convince him to leave it alone; let it die on the vine. Eventually, the two could just move on and be back to normal.\n\nBut a more adventurous inner self constantly reminded him of how much fun he had. Emilia was not his real sister. They weren't blood related. Could there be anything there? Of all the women that obsessed over Austin's penis, the way Emilia looked at him was on another level. He craved to be able to relive that moment again.\n\nEmilia stayed inside the house for what seemed like an eternity. It was a comfortable summer day. Not too hot or humid. Not a single cloud in the sky. Austin floated around the pool staring at the bright blue canvas above. He strategized in his head about how he would approach Emilia. He had to come clean since he knew that the secret was out. He wasn't quite sure if he should apologize, however, as that would imply he did something wrong. Admitting wrongdoing may destroy any hopes of it happening again.\n\nJust as he decided it was time to go find his stepsister, the sliding door from the deck opened. Emilia slowly emerged, wearing short white shorts, a red tank top, and barefoot. Her long, smooth legs descended the steps towards the pool.\n\n\"Hey,\" she said quietly as she tucked her hair behind one ear.\n\n\"Yo,\" said Austin, slightly awkwardly as he tried to play it cool. \"What's up?\"\n\nEmilia didn't answer him. She sat down on the edge of a lounge chair and crossed her leg. She leaned forward, resting her arms on her lap. She forced a smile in Austin's direction.\n\n\"You ok?\" he asked.\n\n\"I feel much better, thanks.\"\n\nAustin nodded. He remained in the pool, sitting atop a raft. Emilia studied his physique. Although she needed no additional confirmation, Austin's muscles all but proved without a doubt he was indeed the masked dancer.\n\n\"Did you know I'd be there?\" she asked, skipping right to the difficult part. \"Did they tell you?\"\n\nAustin shook his head adamantly. \"Emilia, I swear. They said you weren't going. They were sure of it. I wouldn't have gone if I--\"\n\nEmilia shook her head. \"Stop. It's ok. It's true I wasn't supposed to be there. I called into work.\"\n\n\"I feel awful,\" he said solemnly.\n\n\"Do you though?\" Emilia said while sarcastically smiling. \"You sure seemed to be having a blast.\"\n\n\"Look,\" said Austin as he used his hands to wade over towards her. \"Was it fun? I mean... shit. It was a fucking blast. But I feel bad about how far I took things with...\"\n\n\"Us?\" Emilia asked. \"You feel bad about having sex with me?\"\n\n\"Don't say that,\" Austin said. \"C'mon. I'm trying here.\"\n\n\"You're right. I'm sorry, Austin. I just feel... embarrassed. Ashamed. Whatever. I don't know what I feel.\"\n\nAustin nodded. He understood as he felt the same way. But deep down inside, he was curious if she also felt the other feelings he had. \"Did you like it?\"\n\nEmilia stared at her stepbrother. She had known him since they were too young to form memories. They grew up together. They did everything. They explored the world together. She continued to study his body. Her eyes landed on his crotch. The wet bathing suit, while bunched up, allowed her to see the massive bulge underneath. She couldn't comprehend how she never noticed it before. She felt a tingle between her legs.\n\n\"You know I never really noticed you, Austin,\" she said, avoiding his earlier question. \"I never even considered you as anything more than a brother type.\"\n\n\"Same,\" he said. \"But you're beautiful. Do you know that?\"\n\nShe smiled. \"Thank you,\" she said. Her eyes again landed on his crotch. It appeared to be a bit bigger. The twinge between her legs radiated stronger. \"Gosh, when did you suddenly get so jacked?\" she asked. \"No wonder I didn't recognize it was you the other day.\"\n\nAustin humored her by flexing. \"Which way's the gym?\" he asked in a mocking low tone of voice. They each cracked up laughing.\n\nAs Emilia's laughter subsided, she sighed. \"I guess I did enjoy it. As weird as that sounds. It was so much fun. You may have found your next career!\"",
        "\"You think?\" Austin said as he did a little dance move in his raft.\n\n\"Come on. Get out of there. Let's go hang out in the shade. I have lots of questions,\" said Emilia as she darted towards the patio where a hammock was set up. Austin quickly followed.\n\n-------------------------------\n\n\"Oh my gosh! I know!\" said Emilia. \"That was so hilarious. Her name was Rowan and she's a little crazy. I'm not surprised she was the first to grab your dick!\"\n\nEmilia and Austin laughed as they swayed back and forth in the hammock, sitting side by side. This was something they had done for ages, even falling asleep together when they were young step siblings.\n\n\"So what questions do you have?\" Austin asked, anxious to see where things were headed.\n\n\"Ok, let's see. Rapid fire, you ready?\" Emilia said as she turned excitedly toward him.\n\n\"Woah, ok. Yeah, let's do it. Rapid fire!\"\n\n\"How big is it?\"\n\n\"Eight and a half, almost nine.\"\n\n\"Girth?\"\n\n\"Mmm.... five and a half.\"\n\n\"Has anyone taken the whole thing?\"\n\n\"One girl.\"\n\n\"Who?\"\n\nAustin paused before answering. Emilia cracked up laughing. \"I'm joking,\" she said. \"Don't kiss and tell!\"\n\n\"Ok what about your cum,\" Emilia continued. \"Like... how?\"\n\n\"How?\" Austin asked, perplexed.\n\n\"You're not human. You cum like a horse or something,\" she said.\n\n\"Ohh, yeah. About that...\" Austin laughed. \"It's always been like that. Ever since I was little--\"\n\nEmilia held her hand up. \"Ok, that's too much information.\" Austin nodded.\n\n\"Last question. Did you fuck Kelly and Jess?\"\n\nAustin paused, unsure what to say. He turned to Emilia. \"No. I didn't. But we did just about everything else.\"\n\n\"Ewww! Austin! Like as a group!\"\n\nHe nodded and blushed. \"Is that bad?\"\n\n\"Whatever,\" she said. \"Not like you didn't do it last week anyways.\"\n\nEmilia thought long and hard about her next question. \"Can I ask one more?\"\n\nAustin nodded nervously.\n\n\"Can you take it out?\"\n\nWith zero hesitation, Austin happily pulled his bathing suit off so he was completely naked sitting right next to her. His cock was nearly fully erect as it wavered and swayed in Emilia's direction. It hovered delicately over his thigh as she gasped at the sight of it.\n\n\"Holy shit,\" she whispered. \"It's so fucking big.\"\n\n\"Just like you remember?\" he asked with his hands behind his head.\n\n\"Bigger. You're bigger than I remember.\"\n\n\"Touch it. It won't bite,\" he whispered. His cock grew in length and hardness in anticipation for first contact. Emilia reached out with her little hand and tentatively grabbed it from the base.\n\n\"How does it feel?\" he asked.\n\n\"It's very warm. And hard. And thick. It's everything. Your penis is perfect.\"\n\n\"I think it likes you,\" he said. \"Look, he's crying tears of joy!\" They each noticed a large droplet of precum oozing out the tip of his engorged head. Emilia giggled in excitement. \"You're liking this huh?\" she asked as she began to stroke him.\n\n\"Fuck,\" Austin said as he closed his eyes briefly. He quickly opened them so as not to miss a moment of action. \"That feels so good.\"\n\n\"God, it's enormous. Austin, you're so big.\" Emilia now used two hands to jerk him off while she bit her lower lip.\n\n\"Do you wanna kiss it?\" he asked. \"It tastes good too, ya know.\"\n\nEmilia didn't laugh this time. She had a very serious look of desire in her expression. She tucked her hair back and leaned forward, softly kissing Austin's hard cock head, tasting his precum in the process. Austin moaned. \"Fuck,\" he said again, overcome with pleasure.\n\nEmilia slid her lips down further, taking in several inches of Austin's cock. Like a professional, she grazed up and down, her lips opening wide to encircle his thick member. She stroked him with one hand and cupped his big balls with the other.\n\nAustin slid his hands down the back of Emilia's shorts and under her panties. He ran his middle finger down her asscrack until he reached her pussy. It was throbbing wet already. Emilia leaned forward to ensure he had enough room. In an instant, his finger was inside her, feeling her juices soak him. She moaned in response.\n\nRight there on the hammock, she blew him while he fingered her. The sounds of slurping and squishing echoed in the covered patio. Austin felt he could cum any second. He was in heaven.\n\nThen Emilia came up for air. She wiped her mouth. Austin kept his hand down her pants. \"I wanna fuck,\" she said with authority. \"Come on.\"\n\nShe stood up, leaving Austin sitting there with a raging hard-on, unable to move. She darted inside, giggling and turning back. \"Let's go!\" she taunted.\n\nAustin finally got up and ran inside. Emilia was already on the couch, her tank top was torn off revealing her big natural breasts contained by a thin black bra. She laughed as she watched Austin scamper over.\n\n\"Your dick is going everywhere!\" she laughed. \"Oh my God, I love it!\"\n\nHe pounced on her and stuck his tongue immediately in her throat. It was his turn to take the wheel. They kissed passionately. Years and years of being so close prepared them for this moment. Admiration and love for one another swept over them in that moment. Emilia tugged on his rigid cock as they kissed. Austin ripped her bra off and devoured her perfect breasts. Her nipples were much larger than he imagined. She shot her head back and closed her eyes. \"Ohh God, Austin. Please fuck me. Please make me cum like you almost did the other day!\"\n\nAustin stood up, licked his fingers, rubbed it on his cock and quickly penetrated her. She was so wet, he nearly plunged it all inside in one shot. Emilia moaned loudly. \"Ohhhhh my God! Ohhhh God Austin!\"\n\nHe went to work, sliding in and out of her. He bent his legs and secured his footing to make sure he could get the best angle. Right there on the same couch they watched cartoons together as toddlers, he fucked his step sister with his massive cock, rapidly bringing her to a powerful orgasm.\n\n\"Oh fuck, oh my God, fuck! Austin no one's ever made me cum like this. You're gonna make me cum. No one's ever done this!\"\n\nAustin proudly pushed the rest of his monstrous shaft inside her, feeling her reach a climax she surely would never forget. Emilia's orgasm was long overdue and, as a result, arrived quickly. Austin studied her face as she came. Her mouth hung open in an o-shape. Her eyes were closed. He noticed she pinched her nipples. He never wanted to forget what she looked like in this private moment.\n\nOnce she was done cumming, they each started laughing. Austin paused for a moment, with his cock still buried inside her, as they stared into each other's eyes. \"Holy shit,\" Emilia said as she ran her fingers softly across his abs. \"You just made me cum in like a minute.\"\n\n\"How did it feel?\" he asked.\n\n\"Amazing.\" Emilia continued looking into his eyes and didn't look down. \"You're all the way in me right now aren't you?\"\n\nAustin smiled and nodded.\n\n\"Jesus Christ. I have a nine inch cock inside me right now?\"\n\n\"Well... almost nine,\" he said.\n\nThey each laughed again. Just like old times. \"Ok, ok. You better take that out and fuck me from behind before I cut it off for my own personal use.\"\n\nAustin flipped her over and entered her from behind. Normally girls enjoyed doggy better with him and Emilia was proving to be no exception. To say she enjoyed it immediately would be an understatement. Her moans were not like before. They weren't merely saying I enjoy this. No. Her moans told a much different story now. Her engines were raring to go. She was about to be blasted off straight to the moon.\n\n\"Ohhhhhhhh fuckkkkkk meeeee!!!!!\" she screamed as Austin slammed his massive cock deep inside her. His balls slapped against her ass cheeks. Her mounting pleasure was so intense, he could nearly feel it himself.\n\n\"You're so deep!!! Fuck! Fuck! Fuck!!\" she screamed. \"I'm gonna cum again! I'm gonna fuckin' cum!\"\n\n\"Yeah? You gonna cum for me?\" Austin asked as he held onto her hips tightly. He continued pounding her like there was no tomorrow. As she squealed and moaned, he felt her vagina contort around his cock. The feeling of Emilia cumming on his cock sent his body into a tailspin. He had to use every bit of his mental capacity to prevent himself from blowing his load.\n\n\"Oh my God Austin. Right there. Keep doing that. Fuck! Oh fuck!\"\n\nEmilia's cheek was flush against the couch cushion. The room was spinning. After fifteen minutes, she lost track of how many orgasms she had. But it was more than she's ever had in life.\n\nAustin was proud of himself for how long he was able to hold out. Especially given the circumstances. Emilia was such an important person in his life. They were so close. Yet here he was fucking her brains out on a Saturday night.\n\nAs he watched her pussy spread wide and dripping wet while he plunged his cock in and out, the pleasure was just too intense. He felt his balls tighten. His legs buckled. His heart began to race. He was going to cum a whole lot.\n\nAs he quickly withdrew, Emilia knew it was time. She spun around. A combination of Austin's and her sweat glistened across her perfect body. Laying on her back, she held her boobs up and smiled eagerly. \"I'm so excited!\" she said as she stared at Austin's cock. \"I love seeing you cum.\"\n\nAustin strained. He held his cock with a death grip at the base. His veins angrily protruded throughout his big shaft. \"Fuck.... you ready?\"\n\nEmilia squealed. \"I think!\" she said nervously. \"It's gonna be so much!\"\n\n\"Arghhhh!!!! Fuck!\" Austin moaned. After one single stroke of his hand, he was ejaculating.\n\nEmilia watched in shock and awe as a fresh blast of white cum shot at her, square in the chest between both breasts. As she looked down to see it seep down her body, another one splattered against her stomach. Austin groaned in pleasure.\n\nHe happily coated her with two more solid blasts. Emilia couldn't help but laugh. Her own stepbrother had more cum than any man she'd ever known. It was remarkable and sexy. She loved to see his facial expression during orgasm. He was feeling so good.\n\n\"Oh my God Austin!\" she said as he continued to blast her with a seventh and eighth shot, seemingly losing no momentum.\n\n\"Oh my God Emilia,\" he repeated. \"I'm cumming so much!\"\n\nShe lovingly watched him as he concluded his fantastic orgasm. His eyes closed as he slowly stroked his cock, releasing the last few drops on her legs.\n\nThey made eye contact and both began to laugh. Austin was out of breath. His cock was retreating in size. Cum was all over Emilia's body.\n\n\"I'm sorry,\" he said. \"That was a big one.\"\n\n\"You're telling me!\" she said as she scooped some off her belly, holding it up to show him. A large glob of it dripped back down to her body.\n\n\"Can you get me a towel please?!\"\n\n----------------------\n\nThey remained naked as they recovered. While sleepily cuddling in Emilia's bed, she casually played with Austin's penis. It was her newfound fixation.\n\n\"It's amazing how you've had this incredible thing between your legs our whole lives and I never knew.\"\n\n\"Do you love it?\" Austin asked.\n\nEmilia looked up at him. They kissed softly on the lips. \"I do,\" she said before refocusing her gaze on his cock. \"I really do.\"\n\n\"We're gonna have a lotta fun, Emilia. A lot.\"\n\nShe looked up. They kissed again. She gently squeezed his cock before whispering. \"I know.\""
    ],
    "authorname": "BrazenHorse",
    "tags": [
        "cfnm",
        "big cock",
        "big dick",
        "step sister",
        "step brother",
        "cumshot",
        "big tits",
        "handjob",
        "blowjob",
        "orgasm"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/austins-big-night-pt-02"
}