{
    "title": "Three Square Meals Ch. 071",
    "pages": [
        "Tossing and turning in bed, the blue-skinned Maliri girl whimpered as she suffered through a terrifying nightmare, one of her more frequently visited horrors from a broad and grotesque catalogue. \n\nShe was standing legs parted and arms upraised, shackled to the floor by her ankles, and to the ceiling by her wrists. Stripped entirely bare, she was exposed and horribly vulnerable to violations by the repulsive monstrosity that lurked with her in the darkness. Her sharp, pointed ears heard it approach from behind her in the gloom, a squelching sound that sent shivers of fear up her spine. It stopped close behind her, and the creature admired its prize, savouring the moment as if tasting her terror. She was filled with a steadily increasing sense of dread, her heart beating deafeningly loud in her chest, each interminable second dragging out as she cowered before the malignant beast.\n\nA cold inhuman presence began moulding its way up her legs, goosebumps rippling over her flesh as her skin crawled with revulsion. She began to scream in fear, her heart racing harder as she thrashed violently in a vain effort to shake off this abomination. Thicker and more viscous now, it crept higher up her lithe body, over her stomach and chest, as every part of her was slowly enveloped and penetrated. Her angular violet eyes were wild with terror as her clinging assailant slithered up her neck and onto her face.\n\nAnd the screams... she screamed herself hoarse, begging for mercy, until her cries were abruptly stifled. Now she was being smothered, her mouth stuffed with a treacly, foul-tasting appendage that forced its way down her throat, and...\n\nShe sat bolt upright, her heart pounding in her chest, her body soaked in sweat. As she gasped for breath, she heard a heavy thumping on the door, and by reflex, she grabbed the vicious-looking duelling pistols from under her pillow, then aimed them at the ornately framed door.\n\n\"Cap'n? Are you alright?\" Bull's muffled voice drifted through the metal doorway. \"I heard screams...\"\n\nShe felt a surge of relief, mixed with a healthy amount of gratitude to her first mate for rousing her from her tortured sleep. With a heavy sigh, she called out in her gravelly voice, \"Yeah, I was having a nightmare about dividing up the loot.\"\n\nHis booming laughter sounded loud to her sensitive ears, and he said, \"Good one Cap'n. Just lettin' ya know, we'll be arrivin' at Underworld in twenty minutes.\"\n\n\"Got it, I'll be right there,\" she replied, untangling herself from the twisted black sheet. \n\nHer stomach cramped as she climbed out of bed, but it usually did when she woke up. She stretched and clicked her neck from side to side, before running her hand over her shaven scalp, feeling the slick perspiration from her ill-fated attempt to get some rest. She padded across the plush carpeted deck of her garishly decorated cabin, and into the ensuite bathroom. \n\nFilling a cup with water, she swilled her mouth out to get rid of the acrid taste that still lingered after nearly a decade. Staring blankly at the faded rectangle marking the wall ahead of her, she spat the water into the sink, then got into the shower. The hot water felt good as it sluiced over her skin, her hands washing the soap over the patchwork of scars that layered most of her lithe body. Most of them she'd picked up as a victim, but there'd been plenty more she'd accumulated while she learned to fight back, clawing out a life for herself in the Unclaimed Wastes.\n\nThe shower revitalised her, and she felt more like herself as she dressed afterwards. Her outfit was designed to tease and distract, a simple ploy that could buy valuable seconds if - and when - it was time to get down to the business of killing. She pulled on the black clinging trousers which hugged her athletic legs like an unblemished second skin, while conveniently covering up the gruesome scar-ravaged truth. It was the same with the high-necked top that concealed her torso from view, presenting mouth-watering black-clad curves for any lecherous eye, while hiding a checkerboard of scars.\n\nAlthough the material looked like it could be easily torn, the exotic compression-weave fabric could stop a ten-millimetre round, and had saved her life on dozens of occasions. Tugging on her red leather boots that ended just below the knee, she grabbed her matching cropped jacket and slipped it over her arms. \n\nAll that was left, was for her to get into character again. \n\nShe'd arrived in the Unclaimed Wastes naive, optimistic, and foolish, but she'd been educated very quickly as to the brutal reality of her new existence. First, she'd been forced to play at being a slave, and while the nature and torments of her slavery shifted over the years, the chains had stayed firmly in place. She walked over to the table beside the bed, and ran her nimble blue fingers over the golden mask and black cowl. The features of the mask were twisted into a mocking smile, her own modification to the original one she'd been made to wear. \n\nMalifica was the woman that had torn away her shackles, and now that she had her freedom, she lived her life as that merciless persona. Pulling on the mask and hood, she slipped her hands into her latest pair of matching black gloves, then strapped her heavy belt around her waist. It had a comforting weight to it that helped to emphasise the seductive sway of her hips, all adding to the enticing illusion promised by her statuesque figure. \n\nRetrieving the weapons that were resting on her pillow, the twin Enshunu duelling pistols slid home into the pair of well-worn holsters. Twin. An apt adjective for the vicious weapons, designed to inflict pain, and destroy lives. Her sardonic laughter echoed around the room as she spun and strode for the door.\n\nShe hit the button on the wall, and the etched depictions of naked women that had been embossed on the door, slid back into the frame as it opened. Malifica heard Bull's breathing before she saw him, so she wasn't surprised when she found his heavy-set frame leaning against the nearby bulkhead. He was waiting for her in his usual spot, standing beside a faded, smoky silhouette marring the wall. \n\n\"I wanted a word, Cap'n, before we get to Underworld,\" he said, looking shifty.\n\nShe strode past him, and asked, \"Alright Bull, what's on your mind? You've got until we reach the Bridge.\"\n\nHe walked briskly to catch up to her, his heavy, armoured boots clomping loudly on the metal decking. \"'Tis the boys. They be havin' a few reservations about our next job,\" he muttered.\n\n\"The 'boys' have reservations?\" she asked him with a snort, as they reached the elevator. \"I sincerely doubt Groluk even knows what the word means.\"\n\n\"Heh,\" he chuckled, nodding his agreement. \"Good one, Cap'n.\"\n\n\"Spit it out then, Bull,\" she ordered, as they stopped outside the door. \"What's got your knickers in a twist?\"\n\nHis slab-like face twisted into a frown, and he asked tentatively, \"I'd never dream of second-guessin' ya, Cap'n, but are ya sure this plan is wise?\"\n\nMalifica strode into the elevator, hitting the button for the Bridge before glancing his way. Despite Bull's grizzled appearance, he was a loyal and reliable first mate, and she'd learned to trust his judgement. \n\n\"We haven't got much choice, Bull,\" she replied quietly. \"You know as well as I do that with Kintark Space closed off while they're at war, smuggling isn't an option any more. I enjoy killing pirates too much to become one myself, which only leaves dealing with Hades.\"\n\nHe nodded, his expression bleak, and said, \"'Tis a shitty situation, whatever way ya look at it.\" He hesitated for a moment before he added, \"Hades be a treacherous snake, Cap'n. I wouldn't piss on that bastard if he were on fire!\"\n\n\"We'll keep our eyes open,\" she said grimly. \n\n\"I've got ya back, Cap'n,\" he agreed, but the worried look hadn't left his face.\n\nWhen they reached the Command Deck, the elevator doors opened with a quiet hum, and Malifica strolled out, saying, \"Afternoon ladies, what's the news?\"\n\nThe Bridge of her ship, the \"Infernal Retribution\", was a narrow oval about ten metres in length. Practically every surface was filled with instruments or glowing panels, which supplied the crew with detailed information about the Enshunu Destroyer. Malifica's Command Chair was raised up on a dais at the rear of the Bridge, providing her a good vantage point to look over at the other stations evenly spaced around the room. There were three crewmen there, and they looked up from their consoles to nod at their Captain. \n\n\"I is hungry, boss,\" Groluk grunted, two of his four arms rubbing his belly.\n\nMalifica strode up to her Command Chair, and as she sat down, she said to the Drakkar Gunner, \"You're always hungry, Groluk. What happened to all that bhatana-elk we stocked up on? That should've kept you going for weeks.\"\n\nHe tilted back his putrid-green, hammer-shaped head, and his jaw snapped up and down anxiously as he snarled, \"All gone on Tuesday!\"\n\n\"We'll get some more provisions in Underworld,\" she said, mollifying the anxious warrior.\n\n\"I've come up with my new name, Captain!\" the fresh-faced man sitting in the Pilot's seat said, an enthusiastic grin lighting up his face.\n\n\"Hang on, young fella,\" Bull interjected, turning to the last of the crewmen. \"Plex, have ya fixed the leak in the fuel tanks?\"\n\nThe Slarmian engineer uncoiled itself to its full height, rearing up until its blunt, eel-like face twisted to look at him. Fixing his creepy yellow eyes on Bull, he replied, \"Plex fixed it after grubby wade through fuel filtration system! Plex is magnificent engineer!\"\n\nMalifica glanced at the diagnostic panels which had started flashing red that morning, and nodded with satisfaction to see that the warning icon had now disappeared. She glanced at the four-armed Slarmian and said, \"The pirates must have hit us harder than we thought. Can you repair the armour plating when we dock, Plex?\"\n\n\"Plex will do this, have no doubt,\" the Slarmian replied, swinging his beak in Malifica's direction and nodding it up and down.\n\n\"We better refill the tank as well,\" Malifica muttered, glancing at the distressingly low fuel levels. \n\n\"We're approaching the Alamak system, Captain,\" her young pilot said, giving her a cheerful smile. \"Dropping out of hyper-warp in two minutes.\"\n\nShe punched up the Alamak system map, which the computer helpfully tagged as Gamma Andromedae. There were actually four stars in that system, Gamma Andromedae itself, which was a huge yellow star, and Y2 Andromedae, which contained both a double star, and a small indigo star that was their destination. \n\n\"So what's all this yammerin' about a name, George?\" Bull grunted at their pilot.\n\nThe young man's blue eyes sparkled with excitement as he replied, \"I'm not 'George' any longer! Now I'm...\" He dropped his voice a few octaves, and continued dramatically, \"'Talon'.\"\n\nMalifica smiled behind her mask, while Bull guffawed, and Plex snickered. Groluk squinted at him, narrowing his bulbous black eyes and grunted, \"Why you choose this name... 'Tal-on'?\"\n\n\"Well, I got my first kill, so I get to come up with a new nickname!\" George replied defensively. \"I thought that as I was a pilot, Talon kind of fit.\" He trailed off quietly, as he finished, \"You know, like a bird's talons, and a ship's a bit like a bird, so...\"\n\n\"Nah, we get ta pick ya nickname,\" Bull replied with an evil grin. \"What'cha think Cap'n? Somethin' fittin' for the young fella.\"\n\n\"How about 'Greenhorn'?\" she suggested playfully.\n\n\"Heh, good one, Cap'n,\" he replied, giving her a sly wink.\n\n\"No! Should be 'Podling'!\" Groluk shouted, snorting with laughter, and wiping the drool from his chin.\n\nThe Slarmian undulated as he thought it over, and said, \"Plex agrees, very fitting names.\"\n\nBull turned to look at the young man, and teased, \"So what's it ta be, George? 'Podling' or 'Greenhorn'?\"\n\n\"You guys can go and suck vacuum,\" George retorted, turning back to the ship's controls as they reached the outskirts of the Alamak system.\n\nThere was a bright flash on the outskirts of the system, and Malifica's heavily-modified Enshunu destroyer, the \"Infernal Retribution\", dropped out of hyper-warp. Under George's capable hands, the three big engines throbbed with power, and their vessel began its approach towards the third orbital path around the dark-blue sun. \n\nAs their passive sensors engaged and began to sweep the local system, the holographic image of Underworld began to fill the tactical map. The ancient refinery was huge, and dwarfed every stronghold in the Unclaimed Wastes. Octagonal and squat, the tan-coloured orbital platform was in high orbit around a helium gas giant, on the third orbital path around the star. As it loomed large on the map, Malifica stared at it in fascination, just as so many ship Captains did while they pondered its mysterious past.\n\nThe station had been left abandoned for countless millennia until it was discovered and repurposed as a starbase, then used by one detestable gang of pirates after another for the last several hundred years. The origins of this time-worn monument to an ancient civilisation had been lost to antiquity, with all sorts of legends and rumours circulating as people speculated about the species who created the colossal facility. \n\nThe extensive interest in Underworld was in no small part due to the daunting network of defensive platforms that surrounded the station. The pirate band who'd first claimed the refinery had managed to activate life support, power, and the refuelling facilities, although the station's days of helium refining were long past. When Hades' Bloodnova gang had ousted the previous occupants, they'd managed to subsequently enable some of the defensive grid. That had instantly made this impregnable base the fulcrum of power in the Unclaimed Wastes, with no ship in the entire territory able to challenge its destructive firepower. \n\nUnderworld was not a complete enigma however; there was one person in the Unclaimed Wastes who knew exactly who'd built it. Such knowledge belonged in her past though, one that had been brutally stripped from her, along with her innocence. \n\nThe Infernal Retribution cruised past the outer ring of weapon platforms, dwarfed by the size of the defensive sentinels. Each octagonal structure was the same tan colour as Underworld itself, and possessed two massive weapon barrels set into an enormous turret. Malifica had seen the huge gun emplacements several times before, and while they were still very intimidating, she turned her attention away from them to study something new in the Alamak system. \n\nHades' fleet seemed to have expanded dramatically in the month since she'd last been to Underworld, and she counted well over two score of ships, ranging from corvettes up to one big battlecruiser. It looked like he'd taken on more allies recently - mercs by the look of it, - who swelled the ranks of ships at his disposal. She recognised the insignia on those vessels, and both the Ruiners and the Corpselords appeared to have both signed on with the self-appointed ruler of the Unclaimed Wastes.\n\n\"What're those bastards doin' 'ere?\" Bull muttered, following his Captain's eye.\n\nMalifica was quiet for a moment before she replied, \"Whatever it is, can't be good. Hades must be planning something big, but I've no idea what it could be.\"\n\n\"Better bring Groluk with us, just in case,\" Bull said, glancing over at the hulking Drakkar warrior. \n\nThey were drawing closer to Underworld now, and well past the outer ring of turret defences, they were now closing on the inner ring. This was the most dangerous part of the approach to the base. Hades had a penchant for letting ships pass safely by the outer defences, then suddenly opening fire from both sides, unleashing a blistering barrage on unsuspecting vessels. Dozens of wrecks littered this section of space - the carcasses of those hulks picked clean by his army of scavengers. \n\nAs they sailed past the sad hulk of a merchantman, Malifica stared at the deep holes seared through the tattered hull. It reminded her of \"the Warning\", staged carefully outside Geniya trading post to dissuade non-Maliri from trespassing inside the Regency. She felt a sharp pang of homesickness, made worse by the knowledge that she could never return to her people.\n\nStifling a forlorn sigh, she stared at the big viewscreen fixed on the far wall as it flickered to life. A slovenly, bearded Bloodnova pirate had hailed them from Underworld, and when his image coalesced on the screen, he took a big swig of beer from the bottle in his hand. Staring at them suspiciously, he said in a surly manner, \"Yeah? Whaddya want?\"\n\n\"I've got a meeting lined up with Hades,\" Malifica replied, doing her best to keep her tone calm and even. \"Tell him Malifica's here to see him, to discuss the details of the job we spoke about last week.\"\n\nThe pirate burped, then stabbed a button down on the console in front of him, leaving her looking at static. \"Fucking pirates; worthless pieces of shit, the lot of them,\" Malifica thought to herself. \n\nIt had been pirates that had first boarded the weaponless skiff she'd been supplied with upon her banishment. Pirates that had wasted no time in beginning her introduction to the pleasantries of life in the Unclaimed Wastes with a savage gang rape. Her gloved hands gripped the armrests of her chair, and her temples started to throb as she tried to tamp down her fury. \n\n\"Easy there, Cap'n,\" Bull whispered from her side, gently patting her arm. \"No need ta get riled up.\"\n\nMalifica blew out her breath, then glanced his way to give him a grateful nod. He'd been her first mate for three years now, ever since she'd 'acquired' the Enshunu destroyer, and he'd learned all her little foibles in that time. It was Bull that had persuaded her to start a life as a smuggler, and she'd been tremendously grateful to have him at her side ever since. Her new life hadn't exactly brought her peace - she was too broken for that, - but it had provided a sense of purpose that helped keep her demons at bay.\n\nThe screen crackled once more, and the scruffy pirate gave her an insolent grin as he said, \"Land in Docking Bay Two, you know where to find the King.\"\n\nBefore she could reply, he turned his attention back to the beer bottle in his hand, and flicked off the comm channel.\n\n\"Laying in a course, Captain!\" George said breezily, Bull's ribbing about his nickname not enough to bring down the cheerful young man.\n\nThe Enshunu destroyer swept past the inner layer of turreted platforms, and approached the huge repurposed refinery. There were scores of small, sealed portals on four of the huge octagonal sides of the base, and alternating between each facing, there were four enormous docking bays that handled the flow of traffic into the brigand's fortress. George brought them around to the port side of Underworld, the huge tan-coloured surface looming hundreds of metres above their relatively tiny ship.\n\nA dark brown Bract clipper was taking off as they manoeuvred into the docking bay using retro-thrusters. The ship's design reflected the nature of its insectoid creator, and it was a blunt vessel, heavily armoured, and very, very ugly. Malifica shook her head in distaste as she looked at the hideous-looking vessel. For someone who had grown up amongst the golden-hulled splendour of Maliri spacecraft aesthetics, such an unpleasant looking ship was an affront to her sense of artistic beauty. Then again, maybe it was a fitting metaphor for her current situation, all things considered.\n\nThe Infernal Retribution glided into the busy refinery, and George looked for a place to land near one of the dozen refuelling towers interspersed amongst the docking bay. The refuelling stations were packed today, but there was a space in the area vacated by the Bract clipper, so he eased the destroyer down to land there. Places to refuel were in short supply for the miners, pirates, and merchants in the Unclaimed Wastes, which was part of the reason why Hades, and the Pirate Lords before him had become so wealthy. What they planned to do when Underworld's enormous fuel reserves ran dry, she had no idea.",
        "Malifica rose gracefully from her chair, and ordered, \"Bull, Groluk, you're with me. Plex fixes the ship, and George, can you see about getting us refuelled?\"\n\n\"You got it, Boss,\" Groluk grunted, standing up abruptly and cracking his back with both sets of arms.\n\nThe Slarmian glided away from his console on his long eel-like body, not having any need for a chair. He slithered past, arched up into his standing \"S\" shape, and said, \"Plex will do this. Malifica will marvel at his meticulous care of her ship.\"\n\nGeorge sprang from his Pilot's Chair, but he had a frown on his face as he said hesitantly, \"Can't we wait and buy some fuel from the Smuggler's Guild?\"\n\nMalifica shook her head, and replied, \"The Mirach system would be too big a detour. We're low on fuel, and we won't have time for any side trips when we're doing this job for Hades.\"\n\n\"We're going to get gouged,\" the young man said with a grimace. \"There's no other fuelling station nearby, so Hades can charge whatever he likes.\"\n\n\"You heard the Cap'n,\" Bull said, clapping their pilot on the back. \"Can't be helped.\"\n\nThey followed Plex into the elevator, with the Slarmian flattening himself against the walls to give them plenty of room to enter. George hit the button for Deck Four, and the lift sank to the lowest deck on the ship, then chimed as the door opened with a quiet hum. They walked and slithered respectively, past several entertaining rooms, their doors embossed in garish images of wanton women performing a variety of lewd acts. At the end of the corridor were two doors; the one to the left contained the Armoury, and her crew all trooped inside, while Malifica took the right door into the Cargo Bay.\n\nWhile she waited for her men to get geared up, she idly rubbed the toe of her boot over the blackened marks that swept across the floor. No matter how hard Groluk scrubbed, he never could completely remove them.\n\n\"Everythin' alright Cap'n?\" Bull asked gruffly, as he strolled into the Cargo Bay, a nasty-looking auto-shotgun hefted in his arms.\n\n\"That was quick,\" Malifica replied, smiling at him behind her mask.\n\nHe shook his head as he stopped beside her, and said quietly, \"I've been a while, Cap'n. Groluk wanted to bring two chainsaws until I put me foot down. You must've been daydreamin'.\"\n\n\"It's alright, pleasant dreams this time,\" she replied, with a rough chuckle.\n\nThe rest of her crew entered shortly afterwards, George entering first with his prized MCA 270 Carbine. Given the slightest opportunity he'd talk at length about the latest version of McCarran Arms' short-barrelled rifle; \"Designed for boarding actions,\" he'd announce sagely, to anyone who cared to listen. Plex was the next to enter, with his four heavy pistols holstered in harnesses slung over his rubbery hide.\n\nFinally Groluk stomped into the Cargo Bay, his large reflective shield carried in one pair of arms, and his long-barrelled minigun carried in the other. A snaking ammo feed jutted out of the side of the weapon, then swept around to his broad back, where a heavy pack carried hundreds of rounds of ten-millimetre caseless rounds.\n\n\"Bull say no to chainsaws!\" Groluk barked, his fanged jaw twisted into what passed for a petulant Drakkar pout.\n\nMalifica sighed, realising this wasn't the last she'd heard of this particular complaint, and she replied, \"Yes, they're terrifying, but so is the minigun.\"\n\nGroluk gave Bull an angry glare as he marched past, and grumped, \"Don't make as much blood.\"\n\nBull turned to look at her, then rolled his eyes in exasperation. Malifica knew as well as he did that dealing with the eccentricities of a Drakkar warrior could be trying at times, but no one could question Groluk's effectiveness.\n\nGeorge darted over to the control panel mounted on the wall, then hit the button while whistling a happy tune to himself. He checked over his carbine one last time before slinging it over his shoulder, and walking over to join the rest of the crew. The Cargo Bay doors slowly slid open, giving them a sweeping view of the huge docking bay. \n\nThick cables snaked across the floor, while crates and containers were stacked around haphazardly, with scores of people walking around purposefully. The noise in the docking bay was deafeningly loud to Malifica's sensitive ears, with engineers arc-welding parts of their ships, while merchants bellowed orders at their slaves who were loading or unloading cargo. Tracked carts were the preferred method of hauling around goods in the Underworld, and their clanking progress over the metal decking added to the general hubbub.\n\nThere was a fight underway by the closest refuelling tower, with two Bloodnova pirates engaged in a burly brawl, fists flying as they rolled on the ground. Their fellow guards laughed and pointed, laying bets on who was going to win, while stepping out the way of the savage fight. \n\n\"Best wait 'til that's over, young fella,\" Bull said, glancing at George protectively. \"Don't wanna get mixed up in some pirate scrap.\"\n\n\"I'll be fine, don't worry,\" George replied with a confident grin. He patted his carbine, and added, \"One look at this, and it'll keep them in line.\"\n\nThe Slarmian rustled over the deck, and said, \"Plex will keep an eye on Greenhorn. Terrans always intimidated by Plex's magnificence.\" \n\n\"Hey, cut that 'Greenhorn' shit out!\" George objected. \"No way is that going to be my nickname!\"\n\n\"No problem, Podling,\" Malifica said amiably, as she strode down the ramp to the deck below. \n\nGroluk roared with laughter as he stomped down the ramp, falling into step at her side, while Bull chuckled as he jogged to catch up to her, and said, \"Good one, Cap'n.\"\n\nMalifica strode away through the crowds of people, who rushed to move out of the way of the strangely-masked woman and her two hulking bodyguards. Even though they had a mostly clear path through the crowds, it was still slow going having to follow a snaking trail around all the randomly parked spacecraft in the docking bay. She spotted another Enshunu destroyer, or \"pleasure barge\" as they referred to them, parked over on the far side of the docking bay. Her anger flared and her lip curled with disgust at the thought of running into any of those foul degenerates.\n\nTen minutes after leaving their ship, Malifica and her two crewmates finally reached one of three sets of vast entryways into the docking bay. The enormous portal in the centre was bustling with independent traders and merchants ferrying their goods towards the market district. The general convention was that you stuck to the left to avoid barging into the traffic flowing out from Underworld, and the three smugglers dutifully joined the throng of aliens and humanity that were heading into the station.\n\nA couple of Trankaran Miner's Guild merchants were leading a convoy of heavy tracked vehicles to the market, and despite the hefty load of ore containers stacked on the back, they were making good progress. Malifica wasn't in any particular rush, so she followed along in their wake, happy to let the Trankarans barge anyone ignoring the 'keep left' convention out of the way. No longer having to watch her footing, her mind drifted as she strode along at an easy pace behind the rumbling Trankaran conveyances. \n\nIt was thirteen years ago when she'd first visited Underworld, or more specifically, she'd been herded into the station in chains. The pirates had got bored of her once they'd broken her spirit, but the captain had enough sense to make sure she hadn't been permanently injured, which would have reduced her value to the flesh merchants. As a wildly exotic and beautiful young woman, he knew she'd be able to fetch a fine price to the slavers at the station.\n\n\"Get your fresh meat here!\" a raucous cry called out, breaking her out of her reverie, and sending a chill down her spine. The flesh merchants still hadn't changed the way they announced their merchandise in all this time.\n\nShe turned to look to her left, and couldn't miss the flesh merchants, given pride of place amongst the very first stalls set up in the Trader's Market. The man who'd spoken was a sleazy looking Terran wearing a blue suede trenchcoat, who was trying to catch the eye of passers-by, to encourage them to check out his wares. Behind him, standing along an immobile conveyor belt which hadn't moved in tens of thousands of years, were his terrified slaves.\n\nThe dozen women were all Terrans; young and attractive, they'd been stolen away during raids on frontier colonies or kidnapped by pirates. Stripped naked, they were being forced to stand up straight by a sneering, bare-chested muscular man, who was wielding a shock-probe in his right hand. Electricity arced over the contacts, and she could hear the crackling hum all the way over from where she stood. That sound brought back memories of being jabbed by another sadistic bastard, when she'd been the one forced to stand before the crowds, all those years ago. Those feelings of fear and shame rushed over her, as she relived that terrifying evening all over again.\n\nMistaking her unblinking stare for interest, the flesh merchant sidled up to her, and said, \"Hey, baby. Looking to take a walk on the wild side? I like to accommodate a lady, and you look pretty fine to me!\"\n\nMalifica turned to stare at him blankly, her mind still reeling from the onslaught of memories.\n\n\"She ain't interested, buddy,\" Bull said quietly, a hint of warning to his tone.\n\nShaking his head, the unsavoury man persisted, \"I know an interested customer when I see one.\" His voice dropped a few octaves, as he added with a leer, \"They'll do whatever you want, believe me. Even if they don't, it's more fun when they put up a fight! You know what I'm saying, right baby? Tell you what; If you let me know who caught your eye, I'll let you sample the merchandise... as long as I can watch, and maybe join in too.\"\n\nMalifica was snapped out of her paralysis when the flesh merchant reached out and brushed his finger against the back of her gloved hand. Her hands darted to her hips reflexively, and her Enshunu pistols were half out of their holsters before Bull grasped her right wrist in a firm grip. She looked at him in shock, amazed that he'd attempt to restrain her.\n\n\"Beggin' your pardon Cap'n,\" he said, eyeing her warily. \"Just makin' sure you was fully aware of the situation.\"\n\nPicking up on the note of caution in his voice, she watched as Bull made a point of staring across the flesh merchant's stall. She followed his gaze and saw a couple of enormous Largath guards, who were carefully watching proceedings, their four eyes darting over the crowd as they searched for threats. The brutish aliens were common bodyguards amongst these kind of slavers, their massive strength and unique anatomy making them ideal for keeping the merchandise cowed into submission. Malifica could still remember the sickening screams when she'd been forced to watch a Largath fuck a girl to death with his two-foot cock, her Enshunu master braying with laughter all the while...\n\nBull squeezed her arm gently, and when she looked at his face again, he glanced to the side at the dozen heavily-armed mercs who were laughing and pointing at the slave girls. She could tell by the burning-planet icon on their body armour that they were from the Ruiners Mercenary Company.\n\nMalifica let her pistols drop back into her holsters, and Bull relaxed his grip and released her. She gave the flesh merchant a cold stare, and growled, \"I'm not interested. Fuck off.\"\n\nHe lifted both hands in the air in a mock-defensive gesture, and said, \"Your loss, baby. Offer's always open if you change your mind.\" He snickered and then sauntered back to his stand, looking out for more potential customers.\n\nBull leaned in, and said, \"Sorry for layin' hands on ya, Cap'n. I wanted to off that greasy bastard too, but we can't risk it. Too many mercs and guards.\"\n\n\"It's alright, Bull,\" she murmured, patting his arm.\n\nMalifica turned away from the frightened young women, though it galled her to do so, and strode along quickly to catch up to the Trankaran carts, which were heading deeper into the Trader's Market. The ceiling of the colossal room arced high overhead, the walls surrounding the bustling market made up of cylinders that stretched all the way up into the gloom above. The market wound its way around the machinery that had been used in the refining process, looping back and forth as the path wended its way deeper into the facility.\n\nDozens of metres overhead, she could see the maze of ramps and gantries that led up to the upper levels, and the domain of Hades himself. Unfortunately, the entrances to those sturdy platforms were over on the far side of the Underworld, which meant following the crowds past hundreds of stalls with everyone selling their wares. \n\nUnderworld had everything its nefarious clientele could ever want, with gun runners selling outlawed weapons, drug dealers selling a cornucopia of hallucinogens, and more flesh merchants selling slaves. There were more legitimate businesses here too, with miners selling ore by the tonne, and hundreds of independent traders buying and selling goods from most of the major empires.\n\nAlthough the current rulers of Underworld were a Terran gang, it certainly didn't mean that all the occupants were Terran too. There were Slarmians undulating through the crowd, unlicensed Trankaran miners selling ores, and Bract merchants scuttling about and looking to find a bargain. Malifica spotted a group of Kintark traders haggling with a flesh merchant over the price of rugged-looking male slaves, and she couldn't miss a raucous party of Drakkar Raiders who were eagerly test-firing some very loud auto-shotguns. \n\nIt was then that she spotted a gelatinous Bolon squelching between the stalls, followed by its robotic helpers. Her skin began to crawl with that same clammy feeling of dread that haunted her nightmares, icy fingers of fear clawing at her heart. Memories of birthing disgusting slime-covered spawn filled her with utter revulsion, and she staggered a step as she retched. Not paying any attention to the crowd, she bumped into a fungus-like Yelneg, nearly knocking it off its six stumpy legs. \n\n\"Boss, you OK?\" Groluk grunted, steadying her with one of his hefty hands, when she stumbled a couple of steps from the collision.\n\nThe Drakkar warrior's guttural voice reminded her that she was Malifica now, and her temper suddenly flared as she felt a rising flush of burning hatred. Her head began to throb, and she stalked towards the amorphous creature, hands clenching in eager anticipation.\n\n\"Hold up there, Cap'n,\" Bull said, shoving another of the Yelneg traders out the way, so he could block her path.\n\n\"Get out of my way,\" she snarled, a dreadful spark in her glowing violet eyes.\n\nBull slowly shook his head as he studied her, and with a curious expression on his face, he said, \"You're on a hair-trigger today, Cap'n. What's up?\"\n\nHis calm voice soothed her fury, and she blinked in surprise as she cooled down. He was right, she never normally let her temper get the better of her like this. Now she thought about it, she had a weird feeling that itched in the back of her mind. It was something she hadn't felt for nearly forty years. Although she quickly dismissed it as her imagination playing tricks on her, her nerves were still on edge.\n\nShe looked her first mate in the eye, and said guiltily, \"Must be a bad bout of PMS. Never serve under a female Captain, right Bull?\"\n\nHe chuckled at her joke, then visibly relaxed as he grinned at her, and replied, \"Good one, Cap'n.\"\n\nThe Drakkar warrior at her side started making eerie clicking noises with his fangs scraping together, and when they looked at him in surprise, Groluk blurted out, \"Had Podqueen as Boss once. Got big hungry after mating, eat half of crew. I says never again!\" \n\nMalifica patted him on his muscular shoulder, and said, \"Don't worry, I don't think I could manage a whole Drakkar right now. Maybe just an arm?\"\n\nGroluk snatched his arm away in a panic, then when he realised she was teasing him, he threw his head back and barked out a booming laugh. They drew plenty of attention from the crowd, and after nodding in gratitude to Bull, Malifica set off across the concourse once again. \n\nIt took them another twenty minutes to weave their way through the crowds until they finally reached the ramp that led up to Hades' upper levels. There were half-a-dozen Bloodnova pirates lolling around insolently at the entrance to the ramp, and their shaven-headed leader glanced up at her as she approached.\n\n\"Yeah, whaddya want?\" he drawled, openly leering at her curves.\n\n\"We're here to see Hades,\" she replied, resisting the temptation to whip out her pistol and drill a hole between his beady eyes. It proved surprisingly hard to do so, and she was startled by just how twitchy she was at that moment.\n\nThe pirate eyed her suspiciously, then leaned his head to one side, and tapped a comm device attached to his black leather jacket. He turned away slightly, then mumbled something over the internal communications channel. After a hurried conversation he nodded her way, and said, \"You can go up, the muscle stays right here.\"\n\nShe could feel Bull bristling at her side, but she glanced his way, and said, \"I'll be alright, don't worry.\"\n\n\"I don't like this one bit, Cap'n,\" he grumbled, but he made no move to stop her.\n\n\"I look for something to eat,\" Groluk announced, his jaw snapping up and down as he drooled with anticipation.\n\nMalifica nodded at the Bloodnova pirate, then strolled past him and up the first slope. The ramp was set at a shallow incline, and the left side of its surface was etched with a strange pattern that reminded her of the conveyer belts back near the entrance. It was just as immobile though, so she ignored it and continued her ascent. She reached the first platform, where a couple more pirates were slouching around playing cards. One of them wolf-whistled at her as she glided past, and she heard the lecherous comments from his mates as they discussed what they'd like to do to her. \n\nGritting her teeth behind her mask, she reined in the urge to emasculate them as she turned the corner, and switched back to take the second ramp up to the next level. It was a long climb to reach the top of this unerringly straight slope, and she marvelled that the robust structure was still standing after nearly seventy millennia. When the ramp levelled out into the upper platform, she stopped for a moment, and stared down over the balcony at the teeming mass of lawless denizens going about their illicit business in the Underworld. If the place wasn't such a festering sty, filled with the worst dregs of galactic scum, it might have been an impressive sight.\n\nTurning away from the long drop to the market below, she looked out over the platform she was currently standing on. Scores of massively thick pipes ran across the ceiling a few dozen metres overhead, before converging into a central hub that ran down to the centre of the platform. The base of the broad pillar was covered in lifeless monitors and consoles, and the strange designs and sigils marking the panels hinted at the otherworldly nature of its creators.\n\nThere were more Bloodnova pirates here of course, but she spotted a few Ruiner and Corpselord mercs clustered in groups as well. There was no love lost between the two mercenary bands, but Hades must have been paying them well enough to put their differences aside for the moment. There were several dimly-lit gantries that led away from this area, but she spotted her destination on the opposite side of the platform. Malifica strutted past the bands of mercenaries, feeling their eyes on her, but she didn't deign them with a glance in their direction. \n\nShe approached the huge vault entrance that led into Hades' abode, and stepped carefully over the foot-wide grooves in the floor that fit the enormous gear-like door. It was half-rolled to one side at the moment, narrowing the passage into his lair to a ten-foot gap. The sight beyond made her pause a step, as she found herself staring at four multi-barrelled sentry turrets set up in the room, with an accompanying handful of pirates glaring at her suspiciously.",
        "One of the Bloodnovas approached her, and said in a surly voice, \"Hand over your weapons. You can get them back when you're done.\"\n\n\"You can try and take them,\" she countered, her hands drifting to her hips, and her fingers caressing the handles.\n\nAn amused chuckle met her pointed ears, and she recognised Hades' voice over the intercom as he said, \"It's alright, let her though.\"\n\nThe pirate scowled, but backed away, letting Malifica stride past him and proceed deeper into the King of the Underworld's lair. This complex was made up of two levels; the lower level housed all the equipment that would have monitored the operation of the refinery, while the upper level formed the command centre of the facility. This lower level was well-lit, albeit dirty and littered with scattered trash on the floor. Sweeping banks of consoles and long-dead displays lay silent and unused, a forlorn reminder of the real purpose of this station.\n\nHades had heavily reinforced the Bloodnovas' lair, with several layers of defences consisting of barricades to provide cover for all his guards, supported by armoured turrets. She swept past dozens of Bloodnova pirates, their expressions ranging from sullen to lascivious as they stared at this unlikely intruder in their inner sanctum. Some of the rooms she passed had been closed off, with their metal doors firmly shut, and her sensitive ears picked up the sound of weeping coming from more than one of them. \n\nIn the final huge room on that level, there were three separate ramps that sloped upwards - one in the wall opposite, and another in both the left, and right walls. This had been some central control section, and there were dozens of unusually shaped consoles in this room, but they all lay dormant. Picking the left ramp at random, she followed it as it looped around to the upper level, where she found a similar control room. \n\nThis place was alive with light and sound though, and the dozen brass-coloured consoles in here were all brightly-illuminated. Odd curving displays showed the defensive grid of turrets outside Underworld, while another large semi-circular panel displayed what looked like a strange form of Tactical Map. There were a lot more pirates in here, and unlike the ill-disciplined bunch outside, Hades' bodyguard were focused and alert.\n\nShe looked around the clean and tidy room, but saw no sign of the man himself. However, there was another reinforced door at the back of the room, where two sentries with rifles stood guard.\n\n\"Keep going, you're nearly there,\" Hades' voice said, echoing around the room from some hidden speakers.\n\nMalifica glanced about, and caught the glint of some kind of security camera built into the corner of the room.\n\n\"That's right, I see you,\" he said, with dry amusement.\n\nWalking purposefully towards the inner vault door, the guards made no effort to stop her as she entered. A few sealed doors led off from the next room, but she ignored them, her eyes drawn to the massive imposing desk that dominated the chamber. Seated behind the desk was the ruler of Underworld himself. She recognised him immediately, having seen him attend some of the duelling pit battles in the heydays of her pit-fighting career. \n\nThey'd been bleak years, filled with blood and a very different kind of pain to what she'd previously endured. When the catalogue of abuse by her Enshunu master's depraved clients had finally taken too much of a toll, he'd thrown her to the wolves in the duelling pits, expecting her to be exotic fodder for the brutal combatants. She'd refused to lay down and die though, the flickering embers of hate finally blazing bright as she found an outlet for her rage.\n\nHades was a well-built man in his forties, clean-shaven with neatly trimmed hair, and a cruel intelligence glinting behind hard eyes. He studied her for a long moment, before he gestured to the chair on the opposite side of the desk.\n\nWhen she sat down, he wasted no time in getting straight down to business as he said, \"As we discussed over the comm last week, I've got a job for you that should prove profitable for everyone involved.\"\n\nShe watched him carefully as she tried to get a read on the man, but he kept his face an impassive mask, not giving anything away. \"Alright, I'm listening. What do you need me to do?\" she asked him in a carefully neutral tone.\n\nHe stayed quiet for a moment while he stared at her, until he finally replied, \"I'm sure you already know that another pirate crew owned Underworld before me and my Bloodnovas took over?\"\n\nMalifica nodded, and replied, \"The Obsidian Scorpions, wasn't it?\"\n\nHe grunted his acknowledgement, his face twisting into a scowl. It was the first real emotion she'd seen from the man.\n\nHis expression didn't change as he replied, \"When we routed the Scorpions, those bastards looted this place for anything that wasn't nailed down. They took something useful, and I want it back.\"\n\nHer curiosity was piqued now, and she leaned forward to ask, \"What did they take, and why do you want it?\"\n\nHades' face returned to an impassive mask, and he replied, \"I want a three-foot-long brass rod that their leader, Madclaw, keeps as a trophy.\"\n\n\"Alright, and why do you need it?\" she pressed him again.\n\nDeliberately ignoring her question, he replied, \"Bring me back that rod, and I'll give you four-hundred-thousand credits. Madclaw won't give it up without a fight, so you'll have to kill him to get it.\"\n\n\"That's a lot of money,\" she muttered studying him intently. \"Why hire me to do it? You've got the Ruiners and the Corpselords working for you now, so it's not like you're short of men, ships, or firepower.\"\n\nHe frowned as he replied, \"They'd sail in and just start shooting up the place, and I don't want the rod getting damaged. Besides, I'd end up paying them a fucking fortune in compensation if it got bloody.\" \n\nMalifica stared at him for a moment, before she said, \"I'm not an assassin, I'm a smuggler. What makes you think I'm cut out for this?\"\n\n\"You know how to sneak into a system without it turning into a shitstorm, and besides, I've seen you fight in the pits. I know you can get the job done,\" Hades replied confidently. Steepling his fingers, he waited for a while to give her time to mull it over, then added, \"So what's your answer?\"\n\nThat amount of credits would keep her crew paid, and her ship running for years. Even though she didn't trust Hades as far as she could throw him, it was simply too good a job to turn down. Still, that didn't mean she planned to stroll back into the lion's den with this brass rod and expect Hades to just cough up the loot.\n\n\"I'll do it, but I want half-a-million, and a neutral drop site to make the exchange,\" Malifica replied firmly. \"When we retrieve this rod, I'll contact you and give you the coordinates for the meet. You send a ship to bring me the cash, and then I give you what you want.\"\n\nHades eyes narrowed, expecting some hard bargaining from the smuggler, but he nodded curtly, and said, \"Fine, we'll play it your way. Get me the rod, and I'll bring you the cash.\" He pushed a data stick over the desk towards her, and added, \"There's a ground map of their base, you should be able to sneak in the back.\"\n\nSensing the meeting was over, Malifica retrieved the data-stick, and stuck it in the inner pocket of her jacket. Rising gracefully to her feet, she said, \"I know where the Obsidian Scorpions are based. We'll head out to the Lesath system immediately.\"\n\nHe nodded, but didn't reply, at least not until she'd turned and nearly walked back out of the room. Not raising his voice, he said in a cold tone, \"Whatever happens, don't damage the rod. If you do, I'll be offering your fee as a bounty on your head.\"\n\nShe paused and nodded, but didn't bother to turn around to do so. Instead, her sharp violet eyes were darting around the adjoining command centre, looking for something very specific. As she strode away, she glanced one last time at the three-foot groove in the middle of the biggest console in the room.\n\n***\n\nHades watched her leave via the camera feeds built into his desk, and only rose from his chair when Malifica was back on the ramps heading down to the market. He walked over to the door on his right, then hit the button, and it slid open with a faint grinding noise. A cowled and masked figure was seated at the long table in the room, and the Enshunu stared at him as he entered. \n\n\"Do we have a deal, Hades?\" the Enshunu, Yil'magur, asked in its grating voice, staring at him with dark-red eyes behind the golden mask.\n\nThe King of the Underworld stood behind the nearest chair, and gave a slight nod as he replied, \"I'll give your boss the girl, when you've activated the rest of this station's defences.\"\n\n\"All we need is the control rod, and it shall be done,\" Yil'magur agreed, an eager note to its swift reply.\n\n***\n\nBull blew out a sigh of relief when he saw Malifica striding down the ramp to join them. He nudged Groluk, making the Drakkar drop half of the charred carcass he was devouring, and then walked over to meet her. \"You're a sight for sore eyes, Cap'n!\" he greeted her gruffly. \"Everythin' on the up and up?\"\n\nMalifica gave him a curt nod in reply, and muttered, \"Not here, Bull, we'll talk back on the ship.\"\n\nGroluk scooped up the meat he'd spilled on the grubby floor, and began shoving it into his slavering maw. He strolled over to flank her, and between greasy mouthfuls he grunted, \"Good eatin's here, Boss.\" \n\nBull fell into step beside her, and said, \"I restocked on food for the big fella, and the ship's all gassed up and ready to go, Cap'n.\"\n\n\"Well done. We'll be departing immediately as soon as we return to the ship,\" she said quietly, her eyes darting around the crowd.\n\nHe nodded but remained quiet, understanding that then wasn't the time nor place for discussing the details of Hades' job. They rejoined the exodus from the market area, and stayed to the left amongst the raucous crowd. Malifica wanted to leave the Underworld as soon as possible, so they wove through the crowd this time, moving faster than the plodding pace set by most of the merchants. While she nimbly avoided the various creatures in her path, Bull and Groluk simply barged their way through, knocking the smaller aliens out the way to the sound of many an indignant cry.\n\nMalifica kept her eyes fixed firmly on their path this time, studiously ignoring the flesh peddlers and the heart-wrenching sight of their wretched merchandise. As much as she'd dearly love to cleanse this rat-infested sinkhole, trying anything like that would earn herself and her men a very quick end. Or a very slow one, which would be far worse. \n\nIt took them just over twenty minutes to dodge and shove their way through the crowd, all the way back to the docking bay where they'd left their ship. The Infernal Retribution appeared before them, standing out like a sleek, chrome-coloured predator amongst the blocky merchant shipping in their hues of greys and browns. Plex and George were leaning against the ship, chatting idly as they whiled away the time. The pilot spotted the returning group first, and he gave them a cheerful wave, prompting Plex to uncoil himself and slither over to join them.\n\n\"Plex has replated your ship, Captain,\" he said, twisting back to look at the lower-right section of their Enshunu destroyer. \"The work was exemplary, no?\"\n\nMalifica walked over to the rear of her vessel, which had taken a nasty hit from a cannon in a pirate ambush two days ago. She reached up to run her gloved hand over the surface of the hull, but try as she might, she couldn't find the exact spot where the armour had been breached. \"Outstanding work, Plex,\" she agreed, nodding her head.\n\n\"We got the delivery of Maktarian bison,\" George announced, as they started walking back to the Cargo Bay. He wrinkled his nose as he added, \"It smelled pretty ripe, so I had the baggage handlers dump it into cold storage on Deck Three.\"\n\nBull grinned, and clapping Groluk on one of his many shoulders, he said, \"I dunno how ya can eat that bilge, big fella.\"\n\n\"Very tasty!\" Groluk croaked with a toothy grin, two of his hands rubbing his belly in anticipation.\n\nThey walked up the ramp and into the Cargo Bay, with George striding over to the door controls and sealing up the hull behind them. \n\nAs soon as the doors had sealed with a weighty \"clunk\", Malifica turned to her men, and said, \"The job for Hades is on. We'll be sneaking into the Lesath system and retrieving an item he wants really badly.\"\n\nBull frowned, giving her a worried glance, but kept his opinion to himself for the moment, not wanting to undermine her authority in front of the crew. \n\n\"What's the score, Captain?\" George asked, a flash of excitement in his blue eyes.\n\n\"Half-a-million credits,\" she announced without preamble.\n\nGeorge whistled appreciatively, while Plex began to weave his beaked head in a figure-of-eight pattern, his unsettling yellow eyes staring at her intently. Groluk roared with delight, raising his minigun in the air, but he managed to curb his enthusiasm enough to stop himself firing off a victory salvo. Bull had been forced to have words with him about that before. As for her first mate, Bull looked impressed despite his concerns, but once the initial surprise had worn off, his brow furrowed even deeper with worry.\n\n\"Let's get out of this cesspit,\" Malifica continued, her distaste for Underworld quite apparent. \"I want us underway immediately, and I'll explain the details on the flight there.\"\n\nHer men slithered, stomped, and strolled out of the Cargo Bay, chatting amiably amongst themselves as they returned to the Armoury. Malifica glanced at Bull, who waited patiently beside her, and they watched in silence as the rest of her crew departed, until it was just the two of them left alone in the Cargo Bay.\n\n\"Beggin' your pardon, Cap'n,\" Bull began tentatively. \"I was hopin' I could have a word.\"\n\n\"I thought you might,\" she replied wryly. Turning to look at him, she said, \"Alright, out with it.\"\n\n\"This job smells fishier than a hold full of Cagfish!\" he blurted out, finally speaking his mind. \"Hades is tighter than a gnat's chuff! What makes ya think he'll cough up the cash when we get whatever it is he's after?\"\n\n\"He wants some kind of control rod for the rest of Underworld's defensive systems. The Scorpions took it with them when they were kicked out of the base,\" she replied quietly. \"Believe me, he wants it alright, and I'm pretty sure half-a-million credits is a bargain for the extra firepower it'll give him. I've got no intention of taking it back to Underworld though; he'd just shoot us down when we tried to leave the station. As soon as we have the rod, we'll contact Hades and tell him to meet us in the Tarin Shoals to make the exchange.\"\n\nBull nodded thoughtfully while rubbing his bristled chin, and said, \"Yeah, that just might work, Cap'n. If things don't look right at the exchange, we'll be able to slip away, no problem.\"\n\n\"That's the plan,\" she agreed, glad to see he was on board with her precautions.\n\nThe Tarin Shoals was a thick belt of asteroids shrouded in a dense nebula. With all the electromagnetic interference from the nebula they'd be practically invisible to sensors, and the asteroids would give them plenty of cover to escape, if it looked like Hades was attempting to betray them. As long as they got there first and planted a few covert probes, they'd be able to pick up the Bloodnova ships on their boosted sensors without being seen themselves.\n\nBull gave her a confident grin, and said, \"I might just settle down and retire after this one. Buy off me debts in the Terran Federation, and get that farm on Maccaran IV I'm always goin' on about.\"\n\n\"You'd be bored in a week,\" she replied, smiling at him from behind her mask, as she started walking towards the door that led deeper into the ship.\n\n\"Aye, true enough, Cap'n,\" he agreed, with a sigh of lament. \"I guess some of us weren't cut out for the quiet life.\"\n\n\"Or they had it torn away from them,\" she murmured bitterly, under her breath.\n\nOnce Bull had deposited his shotgun back in the Armoury, they stayed quiet for the rest of their journey up to the Command Deck, both of them lost in thought. When they stepped out onto the Bridge, Malifica was pleased to see that they'd left Underworld behind them, feeling cleaner as the distance increased. George was flying the Infernal Retribution towards the outskirts of the Alamak system, making sure they were well clear of any gravity wells before attempting the jump into hyper-warp. In these anarchic systems there were no helpful navigation beacons to clearly mark the point where it was safe to jump, so navigators had to rely on their expertise and judgement.\n\nGeorge flew their destroyer well clear of Alamak to avoid taking any chances, and after painstakingly plotting out their course to the Lesath system, he engaged their FTL drive. It took twenty seconds to power up before it could be engaged, and Malifica felt that same flash of irritation at having to rely on such primitive technology. The Maliri drives activated in less than a quarter of the time, and travelled in hyper-warp at over twice the speed. It was just one more of the constant nagging reminders of what she'd been forced to leave behind.\n\nThe Lesath system was over six hours away, so she rose from her Command Chair, and said, \"Bull, fill them in on the details. I'm going to try and get some rest.\"\n\n\"Right you are, Cap'n,\" he agreed, and began to tell his three crewmates the plan. \n\nHis gruff voice was cut off by the lift door as it closed behind her with a quiet hum. The elevator dropped down to the deck below and chimed shortly afterwards, the doors swishing open again. She stepped out into the corridor, and turned right, heading towards the Captain's Cabin that she had claimed as her own.\n\nMalifica paused for a moment to admire the collage of blackened outlines that adorned the floors and walls on this Deck. They were just like those in the Cargo Bay, and despite three years of Groluk's frenzied scrubbing, these proved just as stubborn to shift. She could still remember the stench of charred flesh, the terrified screams, and the pitiful pleas for mercy. The Unclaimed Wastes was no place for mercy though; it had been a gruelling lesson to learn, but one she'd been forced to take to heart. In the end, she'd been more than happy to share what she'd learned with her former owner, his men, his loathsome guests, and their equally disgusting retinues. \n\nTrailing her fingers over the last scorched shadow on the wall, she hit the button by the door to her room. When the scenes of debauchery that were etched on the doors slid open to let her enter, she strolled into her bedroom with an added bounce in her step. Stopping to relive good times with the Enshunu Captain and his men helped keep the nightmares at bay, at least for a little while, and she looked forward to getting some rest.\n\nShe quickly stripped off, then tucked her pistols under the pillow before slipping under the black sheets. It wasn't that she particularly distrusted Bull and the rest of her crew, -as smugglers went, they were a reliable bunch- she'd simply learned not to trust anyone. That was a lesson she'd been taught by the one person she thought she could count on the most, and that betrayal had cut deepest of all. \n\nSleep came quickly to her then, practically as soon as her head hit the pillow, her mind drifting and following her subconscious thoughts. She began to dream, but it was about something she hadn't thought about in years.\n\n***\n\n\"Irillith, I have something for you!\" Tashana gasped in excitement as she bounced into the room. \"You aren't going to believe what I've discovered!\"\n\nHer twin scowled at her as she looked up from her console, her beautiful azure face twisting with irritation as she snapped, \"What are you bothering me with now?! Can't you see I'm sweeping the network for spies?\"",
        "\"I finally have proof!\" Tashana gasped breathlessly, cradling the priceless artefact in her hands. When she saw Irillith roll her eyes, she rushed over to her sister's side, and continued, \"The deck built into this vambrace powers an AI! It holds recorded testimony from the last days of Mael'nerak's rule over the Maliri!\"\n\n\"Of course, how interesting,\" Irillith muttered sarcastically, not paying Tashana the slightest bit of attention. Completely focused on the console in front of her once more, she waved her hand distractedly over towards the table behind her, and added, \"Leave it over there with any other junk you've brought me. I'll take a look later.\"\n\nTashana felt her elation fade away. She'd hoped she might be able to rebuild bridges with Irillith if she could only prove that she'd been right all along, but now she actually had proof, she instinctively knew it wouldn't make any difference. Feeling dejected, she placed the vambrace on the table, then walked over to her twin and placed a hand on her shoulder.\n\n\"What now, for fuck's sake?\" Irillith snapped at her furiously, whirling around, and shrugging off her sister's hand.\n\n\"We used to be so close. Why did you turn your back on me?\" Tashana asked, her voice subdued.\n\nIrillith's mouth twisted into a sneer, and she replied, \"I don't know... maybe it was when you decided to waste your life trying to prove some 'hidden truth' behind a child's nursery rhyme?!\"\n\nTashana felt a stab of regret as she looked at her sister's scornful face. The sister she'd known and loved with all her heart seemed more lost to her than ever.\n\n\"I'm sorry I disappointed you. Can't we try and go back to the way things used to be?\" she pleaded.\n\nIrillith rolled her eyes, and said in a derisive tone, \"Fine, anything that'll give me a moment's peace.\"\n\nDespite the biting sarcasm weighing down her sister's words, Tashana decided to hope for the best. \"Thank you sister, I love you,\" she said earnestly.\n\nIrillith had already turned back to the console, and just gave a non-committal grunt. Tashana left her side, and started walking for the door, only to be stopped in her tracks when her sister called out to her.\n\n\"Mother wanted a word with you. She evidently hasn't tired of your witterings, and wanted to know more about psychic healing or some such nonsense. When I couldn't tell her any more details about the Mael'nerak's magic powers, I earned a backhander, so thanks for that,\" Irillith said, as she glared at Tashana, her face twisted with anger. \n\n\"I'll go and speak to her now,\" Tashana murmured, leaving the room with a sad sigh. She paused half-way through the door and added, \"I really am sorry, Irillith.\"\n\n\"Bye,\" her twin muttered sullenly, her attention on her console once more.\n\n***\n\nSitting bolt upright, Malifica clutched at her chest, feeling that horrible sense of loss all over again. It still stung even now, despite everything that had happened; the moment of realisation that no matter how hard she tried, her relationship with her twin was irrevocably broken. \n\nShe could feel a headache coming on, a bad one if the recent splitting migraines were anything to go by. Fumbling for the painkillers she'd started keeping by her bedside, she grabbed a couple then staggered into the bathroom, ignoring the cramping in her stomach as she went. After running the taps, she scooped up some water and swallowed the two pills down, then breathed deeply as she massaged her temples. \n\nFlopping down in bed again, she relaxed as the meds kicked in, sending soothing waves through her head that eased the stabbing pain. She started to get drowsy again, which was when she suddenly felt that same itching sensation at the back of her mind. It was something she'd only ever felt around her sister, when they'd been so close growing up as children. They used to whisper together that it was because of their own special bond that only twins could share.\n\nThose kind of nostalgic thoughts were even more painful than the worst of her nightmares, so Malifica got up and dressed, grabbing her pistols before she left. It only took a couple of minutes to work her way back up to the Bridge again, and a glance at the Sector Map showed they were nearly at the Lesath system.\n\n\"Nice timing, Cap'n,\" Bull said, turning to give her a nod. \"I was goin' to come and get ya in a couple of minutes anyway.\"\n\nMalifica slumped in her Command Chair, then stared bleakly at the Lesath System, watching as the holographic image of their ship steadily approached it. The Sector Map had tagged it as the Upsilon Scorpii system, and at its centre was a huge blue star, which was several times larger than the sun in the Epsilon Aquarii system. \n\nShaking her head at the flood of memories, she realised she was always going to keep using the star from her homeworld as a point of reference; such things were too ingrained in a person to shrug off. She remembered summer picnics as a young girl in the many beautiful parks scattered around Melfalas, Valaden's Capital. They had been gloriously happy times, spent laughing and having fun with her father and her sister. Grimacing behind her mask, she wondered what the hell was wrong with her today. She was never this maudlin. Bitter, yes; filled with hatred, absolutely; but this melancholic urge to relive the past was new and quite disturbing.\n\nForcing herself to look at the map again, she looked at the celestial bodies in this system. The blue sun was orbited by one small rocky planet, a huge orange, stormy gas giant, and four dense bands of asteroids in elliptical orbits. The Scorpions had been based in Lesath for years, even before their short-lived occupation of Underworld, and they'd renamed their gang accordingly when they first set up here. Their base, \"The Nest\", was located on Lesath IV, a small rocky planetoid in the fourth orbital ring of this system, in a substantial mining facility constructed there before it was conquered by the pirates. \n\nEveryone thought of Lesath as the home of the Scorpions, but Malifica knew the real tragic history of the Upsilon-Scorpii system. She stared at the numerous dense asteroid belts that orbited the Upsilon Scorpii system, knowing that they were all that remained of verdant planets which had once been the home of billions. Every one had been obliterated by... -well, that was another pointless bit of knowledge from her past, which was best forgotten about.\n\nThey dropped out of hyper-warp on the far edge of the system, out beyond the farthest of the asteroid belts. Plex quickly shut down all unnecessary systems to reduce the ship's energy profile to a minimum, and George decreased engine thrust so that they were coasting in-system. Their passive sensors pulsed out, and the Tactical Map began to slowly fill with vessels in their proximity, tagging them with the ship classification and their current vector. There were two groups of ships patrolling the system, each consisting of a brace of destroyers performing lazy loops around Lesath IV, the site of the Scorpions' Nest.\n\nUnder the cover of asteroids, the Infernal Retribution eased its way deeper through the orbital rings, with George using a feathered touch of the retro-thrusters to avoid disaster as they flew through the fields of rocky obstacles. It seemed to take an interminable amount of time to reach the Scorpions' home planet, but they couldn't risk taking any chances. The Scorpions had an aging Terran cruiser in geostationary orbit above the base, flanked by two destroyers and four corvettes, which made for quite the intimidating defensive fleet. As well-equipped as her Enshunu destroyer was, it wouldn't last long against that volume of concentrated firepower.\n\nGeorge approached the rocky planetoid from the opposite side of Lesath IV, keeping the planet between themselves and the Scorpions' fleet. Using the electromagnetic interference from a violent thunderstorm to mask their descent from low orbit, he brought their ship into the planet's atmosphere, retro-thrusters flaring hard to keep the ship steady as it was buffeted by the howling winds. After a nail-biting few minutes spent bracketed by lightning bolts, they cleared the trailing edge of the storm, and flew into clear calm skies. George eased off on the use of retro-thrusters, dropping their energy signature through the floor as he flew low over the surface of the desolate planet.\n\nUnless the Scorpions had a sophisticated net of sensors webbing the atmosphere of Lesath IV, Malifica knew they would have no chance of detecting their stealthy approach. The Maliri would never even dream of leaving their planets so horribly vulnerable to infiltration, but as she seemed to have to keep reminding herself of late, she wasn't in the Maliri Regency any longer.\n\nThe Scorpion's Nest was located on the smallest of the planet's two continents, and built into a steep cliff made of igneous rock. The rugged terrain had once been laced with valuable minerals, but the ore had been stripped away by the miners who'd constructed the facility. To protect the base from the savage winds that howled around Lesath IV, the bulk of the facility was set back into the cliff-face. \n\nThere were four glowing landing platforms located at the front of the base, where containers of precious metals would have been lifted into orbit by friendly traders. Only one of the landing platforms was being used at the moment, and it was currently occupied by the mangled wreck of a freighter. While the other three platforms were clear of obstructions, they could hardly just park their destroyer on the Scorpions' doorstep.\n\nFortunately, the base extended right through the cliff, with tunnels bored out into a canyon that ran along the back of the rocky plateau. This was where the miners had dumped all the worthless by-products of their excavations in the search for precious metals. The rock was piled high in several large mounds along the canyon, but with all the conveyer belts and abandoned machinery, sneaking in from that side would be an order of magnitude easier.\n\nLesath IV had a breathable, if rather thin atmosphere, and after studying the topographical map that Hades had given them, Malifica pointed to a ravine only two kilometres away from the base. \"Bring us down there, George,\" she said, narrowing her eyes as she planned out a route to their destination.\n\nHe nodded solemnly, concentrating hard on avoiding any excessive use of retro-thrusters to slow their descent. There were many folds and slab-sided hills in this cold, unforgiving landscape, and George was able to use the cover they provided to keep them well out of line-of-sight should the Scorpions have guards watching the approach to their base. Malifica strongly suspected they wouldn't have any, but it was always sensible to take precautions, just in case.\n\nThe Infernal Retribution descended into the tight valley between two sheer cliffs, narrowly avoiding a jutting outcropping of granite which would have torn through their hull if they'd strayed mere metres to starboard. With a combination of skill and luck, the destroyer touched down safely, and Malifica breathed a quiet sigh of relief.\n\nRising to her feet, she said, \"Alright, let's get this show on the road. Plex, you better stay on the ship; it's probably too cold for you out there, right?\"\n\nThe natural ecosystem for the eel-like Slarmians was tropical, muggy swamps, which would keep their rubbery skin nice and moist. His long undulating body quivered at the thought of the chill biting winds, and he replied, \"Splendid as Plex is, sadly in this case, he is ill-suited for such an unpleasant planet.\"\n\nShe nodded, and said, \"Alright, keep an ear open in case we need an emergency evac. All being well, we should be back in a couple of hours.\"\n\nHer other three crewmates, the Drakkar and two Terrans, followed her into the lift, and they dropped down a level to Deck Two so that they could grab some warmer gear. Malifica's compression-weave suit was well-insulated, and with her matching gloves and cowl, she knew she'd be warm enough. Besides, the cold wasn't much of a problem for her nowadays. Groluk set about scratching himself in several places at once, and with his ribbed black and purple armour, she reasoned he wasn't worried about the cold either. Still, he never usually wore a helmet or gloves, so she thought it might be wise to check.\n\n\"Are you going to be alright just wearing that?\" she asked him, glancing at his ribbed armour.\n\nThe Drakkar warrior shrugged all four shoulders, and replied, \"Drakkar tough, don't mind the cold. Got spares for everything, so frostbite not a problem.\"\n\nYes, she knew all about the Drakkar's unique anatomy, with two of everything being the operative word. Her eyes glazed over as she recalled the day of her final victory in the duelling pits.\n\n***\n\nShe'd gunned down the three challengers in a savage battle, using cover provided by the ancient machinery to great effect, shielding herself from incoming fire and picking them off one at a time. When she returned to the Enshunu's ship, she'd been expecting well-deserved praise for the huge victory purse she'd just won for him, but as ever in the Unclaimed Wastes, her hopes had been dashed. \n\nOne of his men shot her with one of the Enshunu's debilitating stun-rifles, and when she awoke, she found herself naked and lashed face-down with a heavy weight settled on her back. Her master had sold her body for use by a Drakkar, who'd been impressed and aroused by watching her fight, and cared little about the shocking reality of her tortured flesh. \n\nThe Drakkar wasted no time in ramming both his thick cocks into her at once, spearing her ass and pussy simultaneously. It had been years since she'd been abused like this, and she wailed with the agony and indignity of it all, never thinking for one moment that she'd be put in this position again. As she howled with the pain, she heard the Enshunu's cackling laughter, even over the Drakkar's braying grunts. It was mental suffering the Enshunu savoured most of all, and to see her look of shock and disbelief had delighted him no end.\n\nThat had been the final trigger that had made her snap. Her burning rage had finally manifested into something that had wiped the smug look of pleasure from her master's face, replacing it with one of absolute terror.\n\n***\n\n\"You alright there, Cap'n?\" Bull asked warily, jostling her shoulder with a gentle shake. \"You look like you're gettin' a bit hot under the collar.\"\n\nShe blinked a few times, and found her three crewmates looking at her wide-eyed in alarm. There was smoke drifting up from her hands, and she glanced down at her gloves in surprise. \n\n\"I'll just grab a new pair,\" she said guiltily, before jogging down the corridor to her room.\n\nPeeling off the steaming black gloves, she threw them in the shower and turned on the water to cool them off. Grabbing a fresh pair from her wardrobe, she tugged them on over her slender blue hands and then darted down the corridor to rejoin the others. No one said a word, but she could feel the tension in the air as they dropped down to Deck Four and stopped at the Armoury for everyone to re-equip themselves with their gear.\n\nGroluk was wearing the same ribbed armour he always wore, and was carrying the shield and minigun again. She spotted a chainsaw tied to the side of his pack, and when she glanced at Bull, he gave her a helpless shrug. Her first mate was carrying the same auto-shotgun again, but had brought a bandolier of grenades with him this time, and had a thick trenchcoat pulled on over his body armour to keep out the wind. George was fully armoured and wearing a long coat now as well, but he carried his treasured MCA 270 carbine along with a trauma kit slung over his shoulder.\n\n\"Alright, let's get moving,\" Malifica said, taking the lead as they strolled into the Cargo Bay.\n\nShe hit the button that would open the Cargo Bay doors, and with the hum of heavy servos in operation, the massive doors started to slide open. The sound of the howling wind flooded in through the gap in the hull, and she winced at the shrieking noise. Groluk strolled out first, his only concession to the conditions being that his bulging black eyes were now narrowed to tiny slits. George followed him outside, but Bull strode over to her side, and held her back with a cautionary hand.\n\nLeaning in close so she could hear him over the wind, he asked, \"Are you sure you're up to this, Cap'n?\"\n\nShe could see the worry in his eyes, her recent loss of control in the lift having clearly unsettled him. Reaching out with her gloved hand, she placed it reassuringly on his arm, and replied, \"Just been thinking about the past a bit, Bull. It must be the stress of working for Hades that's got me reliving bad memories.\" She patted his arm, and added, \"I've got it under control, I promise. I'll save any temper tantrums for Madclaw.\"\n\n\"Good one, Cap'n,\" he said reflexively, but he didn't laugh this time.\n\nMalifica wanted to give him a reassuring smile, not the mocking one that was etched onto her mask, but she didn't want to give the poor man nightmares. \"That was just a joke. I'm fine, honestly,\" she told him in as soothing a manner as her gravelly voice could muster.\n\nHe gave her a slow nod, and then moved aside to let her pass. When she stepped foot outside the protection provided by the ship's hull, she felt the strong tug from the wind as it howled through the ravine. George and Groluk were waiting for her up by the stern of the ship, so she strolled out to join them, being careful where she put her feet on the sharp, uneven ground.\n\n\"Where to, Captain?\" George asked her, speaking loudly to be heard over the wind. \n\nRecalling the topographical map, she knew there should be a canyon to the South-East, which they'd be able to follow all the way to the Scorpions' base. She pointed up the slope at the end of the ravine, then jerked her thumb to the right as she yelled back, \"Over there!\"\n\nHe nodded, then began scampering up the slope, sure-footed as a goat. With his carbine in hand, the young man looked eager to get into a firefight with the Scorpions. Groluk plodded after him, seemingly untroubled by the huge weight of all his equipment, and she followed after the Drakkar, with Bull bringing up the rear. \n\nClearing the lip of the ravine, she staggered against the full fury of the gale that was blasting over the rocky landscape. Managing to keep her balance, she saw Groluk ahead of her, stomping in the general direction of the canyon she'd pointed out. He was completely unfazed by the lashing squall, so she jogged up beside him, and used his burly form as a windbreak. Now that she wasn't fighting to stand up, she was finally able to get a good look around at Lesath IV. \n\nThe rocky ground they were walking over was part of a range of long-extinct volcanoes on the smaller southern continent. Violent eruptions had covered this part of the planet with thick magma that had eventually formed the grey, jagged igneous rock that stretched as far as she could see in every direction. Subsequent earthquakes had shattered the plateau of rock into misshapen crevasses which cut deep into the ground, and rocky outcroppings that clawed their way skywards. The planet's surface was illuminated by the eerie cobalt glow from the huge star in the cloudy sky, making everything seem surreal and dreamlike.\n\nIt took a few minutes to reach the canyon, and while it was disconcerting to be so exposed, she could see no signs of life amongst the bleak rock. George had scouted ahead, but when she reached the slope down into the rift, she spotted him fifty metres ahead of them, sheltering where the crevasse turned a corner. He gave her a thumbs-up signal, then walked out of sight once again. \n\nGroluk let her take the lead, and while the wind still whistled down into this gulley, it was much more sheltered in there. In addition to the welcome relief from the wind no longer threatening to knock her over, the piercing, shrieking sounds were no longer quite so sharp to her ears. They made good time along the canyon, snaking back and forth along the jagged faultline, as they made their way towards the Scorpions' base. It didn't seem to take long before George came jogging back to them, a big grin on his face.",
        "\"We're nearly there!\" he yelled enthusiastically, as the others crowded around to hear him. Turning to point at a splintered fork in the rock up ahead, he added, \"It turns sharply to the right up ahead, and I spotted the first of those rock hills at the back of the Scorpions' base!\"\n\n\"Podling did good,\" Groluk grunted, his bulging eyes staring at the right fork in the canyon.\n\nGeorge grimaced, and said, \"Not all that Podling shit again!\"\n\nBull grinned at him, and said, \"Of course not, young fella.\"\n\nMalifica glanced at them in turn and said firmly, \"Alright, this isn't the time for messing about. The Scorpions are nasty, and Madclaw earned his name. I saw him fight once, years ago, and it wasn't pleasant. He had a huge cybernetic claw instead of his left arm, so trust me when I tell you, don't let him get close!\"\n\n\"I'll take point from here,\" Bull offered, moving forward when Malifica nodded her agreement.\n\nLooking at the Drakkar, she said, \"I'll go next, Groluk after me.\" Glancing at the eager young man last, she added, \"Greenhorn, you cover the rear.\"\n\n\"Hey!\" George replied indignantly, while his crewmates chuckled.\n\nDespite Bull's stocky build, he knew how to move quickly and quietly when the occasion called for it, and this was definitely one of those occasions. Malifica followed ten metres behind him as he took the right fork in the canyon, and they followed the trail down a slight decline with the first of the rock piles clearly visible up ahead. \n\nThere were a forlorn looking pair of six-wheeled dump-trucks by the pile of rocks, both of which had seen far better days. The Scorpions had used one for target practice, while the second appeared to have had angry sex with a blender. Having seen Madclaw fight, Malifica could well imagine what had happened to the second truck.\n\nBull peered carefully around the bend in the canyon, then looked back at her and beckoned her onwards, before slipping around the corner while hugging the rock wall. She followed him around the corner, and saw the other three mounds of rock, and the conveyor belts that led out of the Scorpions' base. There were no pirates in sight though, the weather sufficiently cold and bleak to discourage them from leaving the tunnels unless absolutely necessary.\n\nTrusting that the over-confident pirates would be too lackadaisical to bother with concealed sentries, security cameras, automated gun turrets, or - heaven forbid - mines, they broke from cover and headed towards the tunnels. Malifica braced herself for a blaring alarm, warning shouts, or hails of bullets, but the only sound was the howling of the wind, which drowned out the sound of their footsteps.\n\nThe tunnel ahead of them was wide and tall enough, to have taken one of the mangled six-wheel trucks, which were slowly rusting to oblivion outside. Even though the tunnel was unlit, the ground was clear of debris, and level enough to let them walk along at a good pace in the murky gloom. There was light further up ahead though, and the sound of raucous laughter reached her sensitive ears. \n\nBull turned to look her way, and she nodded at him as she crept past, drawing her twin Enshunu duelling pistols. She walked silently towards the expansive loading area at the end of the conveyer belts, staying to the shadows, and avoiding any sudden movements that might alert them to her position. \n\nThis area had once been a sorting area, where ore and rock had been pulled up to the surface from the mines below, on a series of conveyer belts which all ended in here. The miners had then categorised the ore into valuable and non-valuable materials for careful storage or dumping on the rock piles respectively. There were lots of long-disused tables scattered around the room, along with weighing and magnification equipment for identifying the treasures dug from the rock below.\n\nThere were four pirates sitting around one such table, but they'd ripped away all the gemmology and metallurgy equipment, and dumped it in a pile. The Scorpions were currently playing cards, three of them shouting and cursing at the fourth, who sat there smugly while raking in his winnings. Drawing a bead on the first two, Malifica took careful aim with both pistols and pulled the triggers.\n\nThe weapons were standard Enshunu sonic-disintegration weapons, which could strip flesh to the bone in seconds, and cut through ceramic armour plating with equal ease. The Enshunu favoured them for the debilitating pain they caused their targets, and as Malifica usually ended up shooting at pirates, she considered that an added bonus.\n\nThe Enshunu pistols made a low thrumming noise as they fired, loud enough to draw the attention of the pirates, but not loud enough to be heard beyond the room. Shooting at surprised, stationary targets was hardly a challenge, and the short pulses of hyper-frequency sound waves hit the first two pirates in the head. They were both dead before they hit the floor, and their corpses started spasming as the sonic reverberations caused havoc with their central nervous systems.\n\nOne of them stared at his fallen colleagues in horror, while the other flipped over the table, sending the cards and chips flying while he bolted for cover. The seated pirate got shot in the face for his trouble, pitching over backwards with a crash, while she took careful aim at the fleeing pirate and shot him in the leg. He sprawled across the floor, writhing in agony as he clutched at the ragged wound in his thigh. \n\nMalifica was already running after him by the time he crashed to the ground, and she kicked the heavy pistol out of his hand as he tried to point it in her direction. She crouched down next to him, and jabbed him in the groin with the barrel of her evil-looking pistol as she hissed, \"Tell me where Madclaw is, or say goodbye to your cock!\"\n\nThe pirate froze, his face a mask of pain, and he squeaked, \"No, please! He's on the upper level, in the workshop!\"\n\n\"Thank you,\" she replied, then whipped her second pistol around, clubbing him in the head and knocking him out cold.\n\nHer three crewmates jogged up to her, and she rose to her feet and said curtly, \"Next floor up, in a workshop.\"\n\nThey nodded their understanding, and the group moved forward again, walking furtively through the open double-doors set into the far wall. There was a corridor beyond with several doors on either side, but a quick glance in each showed them to be storage rooms that just contained empty containers that were gathering dust. Reaching a T-junction at the end, they could hear loud cheers and shouts coming from the right, where a big group of pirates were watching a Zero-G football game at a ridiculously loud volume. To the left was a flight of steps that led up to the next level.\n\n\"No like football,\" Groluk grunted, his lime-green forehead wrinkling in distaste. He gave Malifica a toothy grin as he added, \"Do like killing pirates!\"\n\nBull joined her at her side, and whispered, \"What do you reckon, Cap'n? Waste the football fans?\" \n\nAlthough she was loathe to risk leaving an unknown number of pirates at her back, she knew how dangerous Madclaw could be. Getting the jump on him had to be more useful than squandering the element of surprise on a bunch of regular pirates, so she glanced to the left, and said, \"Leave them, we've got to get the control rod. Who knows, we might just find it lying around, and then we can just sneak out of here!\"\n\n\"It's never that easy, Cap'n,\" Bull said, smiling at her and shaking his head in amusement.\n\nShe nodded her agreement, but headed left, and started sneaking up the stairs. The steps were hewn from the rock, so it was a relief not having to worry about her team's metal-shod boots clanging on steel decking. It was a long flight that ended on a small landing, with a metal banister at the top to prevent anyone accidentally falling into the stairwell. \n\nThe well-lit room beyond was substantial, with a big holo-table set in the middle, surrounded by a score of metal chairs. A quick glance at the glowing sector map floating above the table revealed that the pirates had marked various zones in red, which she knew were the centre of mining activity in the region. It suddenly became obvious that the Scorpions used this areas as some kind of planning room, and they were using the map to choose their next raiding targets.\n\nIt seemed like their luck was in, as the planning room was deserted, with most of the pirates downstairs watching the game. Malifica spotted a couple of doors leading from the room, with double-doors leading to the right, and a single one to the left. Picking the single door, she walked over to it, and eased it open to find... a dingy bathroom, with three sets of currently unoccupied stalls.\n\n\"Might be useful if the fight with Madclaw gets too scary,\" George joked, grinning at them all.\n\nMalifica smiled despite herself, with Bull chuckling, and Groluk doing his best to suppress one of his grunting laughs. With that door eliminated, it meant the only way left was through the double doors, so they fanned out across the room to approach it with caution. Her sharp ears heard the sound of swearing coming through the door, and she waved everyone to a stop as she listened intently.\n\n\"The fucking thing keeps locking up unless I power it down and let it cool off!\" an angry voice snarled. \"Fucking around with it every four hours is a huge fucking pain in the ass!\" \n\n\"It's all the enhancements you asked me to make!\" a desperate voice whined. \"It's running hot because of all the extra power it needs!\"\n\n\"You little fucker! So you're saying it's my fault?!\" the angry man snorted indignantly. The voice got louder as it roared, \"You're the one who fucked up here, not me!\"\n\nRunning footsteps coming their way had everyone looking around frantically for cover, but aside from the planning table in the centre of the room and a few metal chairs, there was nothing to hide behind. Malifica dashed forward and to the left, as she hissed, \"Incoming!\"\n\nFive seconds later, the double doors crashed open, and a thin, bespectacled man wearing overalls raced into the room. He looked absolutely terrified, and with good reason, as a huge hulking cyborg came barrelling into the room, hot on his heels. The cybernetics engineer screeched to a halt when he saw Bull, George and Groluk standing in front of him, which gave the cyborg behind him a chance to catch up. \n\nThe enormous cybernetic arm ending in a pincer-like claw left little doubt as to who this person was, and he grabbed the engineer's head in his claw, and squeezed. Blood and brains spattered all over the floor as the man was killed instantly, his lifeless body collapsing in a heap. \n\nBull reacted quickly, and aimed his shotgun at the irate cyborg's chest before pulling the trigger. The auto-shotgun boomed as several slugs slammed into Madclaw's torso, but he was wearing heavy armour, so the shot just knocked him back a step and pissed him off. Roaring in fury, he lunged forward, and slapped Bull to the side with a hefty cybernetic backhander. Bull was sent flying, and he crashed into the wall, before slumping bonelessly to the ground.\n\nMalifica aimed both pistols at Madclaw's back, and was about to pull the trigger when she spotted the brass rod sticking out the top of his cybernetic claw. With his arm flailing around, she couldn't fire for risk of hitting the rod. That moment of indecision was enough for the pirate boss to aim his clawed hand at George, and fire a micro-missile from the cybernetic limb. The fragmentation missile smashed into the holo-table that George was hiding behind, flipping it over and knocking him down. \n\nShe quickly readjusted her aim, going for the back of Madclaw's knee this time, and squeezed the trigger on both pistols at once. The two shots blasted through the weak point of his armour, tearing through flesh and muscle, and knocking the pirate boss down to one knee. He bellowed in pain, and whirled around, glaring at her with red pupils in his cybernetic eyes.\n\nGroluk opened up with his minigun, the heavy whir sounding deafeningly loud in the enclosed space. A hail of ten-millimetre rounds pummelled Madclaw from behind, but they didn't have the penetration to cut through his heavy armour. Bullets flew past him, or ricocheted from his armour, kicking up plaster from the wall above Malifica's head when she was forced to dive flat to avoid being hit.\n\nShe scuttled away as Madclaw got to his feet and stomped after her, and she was stunned he was able to still stand, let alone pursue her. A quick glance at his leg as she backed away explained why, and although her shots had destroyed his flesh, there was a titanium column where the bone should have been.\n\n\"Fucking cyborgs!\" she muttered, opening fire again at his other leg this time, in an effort to slow him down.\n\nHe roared with the pain, but kept on coming, running forward into a charge now, and leading with his claw. She narrowly avoided being flattened like a bug, and managed to dive out the way, only for Madclaw to barrel straight through the wall behind her in a shower of rubble. She heard the sound of running feet coming from the stairs, so as she was scrabbling backwards to put more distance between herself and the enraged cyborg, she looked desperately for Groluk. He was advancing after Madclaw, intent on hunting him down, despite the ineffectiveness of his minigun.\n\n\"We've got incoming!\" she yelled at him. \"Cover the stairs!\"\n\nMalifica didn't get a chance to see whether he listened to her orders, as she had to duck more bricks when Madclaw punched his way through the wall again, as he stormed back into the room. His furious red eyes locked on her again, and he began lumbering forward once more. Levelling her pistols in his direction, she pulled the trigger as she aimed at his face, but he'd whipped his claw arm up to protect himself, and her pistols were ineffective against such thick titanium.\n\nHe lunged for her face, forcing her to roll backwards, but it bought her little time. He smashed down with his claw, pounding the floor where her legs had been only moments before, and she dropped one of her pistols as she skittered backwards. Madclaw snatched it up in his claw, and laughed as he snapped it in half between his brutal pincers, the servos in his cybernetic arm whining in protest.\n\nShe heard the sounds of gunfire now from two directions. One was from the stairwell, where Groluk's minigun had begun its battle dirge once more, and the second was the distinctive chatter of George's carbine. His long burst of ten-millimetre rounds sailed over her head, and then punched straight through Madclaw's armoured torso, sending a gout of blood out behind him, to spray all over the remains of the broken wall. \n\nThe cyborg stared down at his bullet-ridden chest in shock, watching the spurts of blood fountaining out from over a dozen entry wounds in his torso. Malifica didn't waste any time as she aimed straight for the middle of his face with her remaining pistol and squeezed the trigger. The sonic-disintegration pulse hit Madclaw right between the eyes, and he screamed in agony as he toppled over backwards, landing on his back with a clang.\n\nClambering to her feet, she glanced to the stairwell to see what was happening, and saw Groluk barking with laughter as he sent a remorseless hail of bullets down the stairs at the pirates below. Any shots they managed to fire in return hit his shield, only to be deflected harmlessly with a curious whumping sound.\n\nFocusing on the other threat in the room again, Malifica shot him again twice more in the chest, but Madclaw didn't flinch. When she walked over to double-check on him, she found the cyborg leader of the Obsidian Scorpions to be quite dead, his face a hideous ruined mess. The dozen hits to his chest had left him mortally wounded, and her shot to his face had simply finished him off. Checking his cybernetic limb next, the brass rod appeared to be undamaged, so she pulled it free from the cord that bound it to his titanium arm. \n\nGlancing across at the Drakkar warrior again, she called out to him, \"Everything under control, Groluk?!\"\n\n\"Yeh, good fun!\" he snorted, fanged mouth snapping in delight as he squeezed off another burst with his minigun.\n\nLooking at her other two crewmates next, she saw that Bull was still slumped on the ground, as was George, but she knew her pilot was at least conscious enough to shoot. She ran over to Bull's side, and saw a bloody wound on his head. Fearing the worst she felt for a pulse, and let out a sigh of relief to find that he was unconscious and not dead.\n\nGeorge had the medkit though, so she ran over to him next, skidding to a halt at his side. He was looking pale, but was still conscious, and he gave her a wan smile in greeting. It only took a glance to see that when the holo-table had flipped over, it had landed on and crushed his right leg.\n\n\"I got him, Captain,\" he said weakly. \n\nShe nodded, taken aback by the gruesome injury, and did her best to sound comforting despite her throaty voice as she replied, \"You sure did... Talon.\" Trying to keep him talking, she added, \"How did you punch through his armour like that?\"\n\nHe smiled at her as she crouched down beside him and began searching around for the trauma pack, and replied through gritted teeth, \"Armour-piercing rounds. First thing I packed when I knew we might be fighting a cyborg.\"\n\nMalifica found the emergency trauma pack, and uncoiled some medical-tape to make a tourniquet for his leg. He let out a low moan as she tightened it around his thigh, and he slumped back with the pain.\n\n\"I'll be right back, I need to check on Bull now,\" she said, patting him gently on the arm.\n\nHis arm flopped in what she guessed must have been an attempt to wave her away, and she ran back to Bull with the kit in hand. She managed to staunch the bleeding on his head wound, and then gave him a quick shot of stimulants to try and rouse him from his unconscious state. After a painfully long thirty second wait, he coughed and rolled to his side, his hands going to his head.\n\n\"Fuck! Me head's ringin',\" he groaned.\n\nShe helped him sit up and said, \"I'm sorry, we can't take the time to rest. The whole place is on alert and we need to get the hell out of here.\"\n\n\"Give me a hand, Cap'n,\" he muttered, sticking his right arm up in the air. \n\nMalifica stood and grasped his hand, pulling him to his feet. He looked pale and unsteady, but he was able to focus on her at least. Hooking an arm around him, she helped him stagger across to the table, where Groluk was waiting for them.\n\n\"Pirates all dead. Groluk move?\" he asked, jerking a thumb towards the upended holo-table.\n\nLooking down at the young man, she said, \"Brace yourself, Talon.\"\n\nThe young man smiled at her bravely, then let out a low cry as Groluk reached down and flipped the table off their pinned crewmate.\n\n\"That don't look good,\" the Drakkar said, his big protruding eyes staring at the badly crushed right leg.\n\nMalifica frowned, and said, \"Can you help him? I've got Bull.\"\n\nGroluk shrugged and nodded. He slung his minigun over his two right shoulders, then scooped up the badly wounded pilot, drawing a cry of pain from George as he lifted him up. Malifica could only marvel that the Drakkar could carry so much, but Groluk didn't seem to be terribly fazed by it. \n\nTucking the brass rod under one arm, and holstering her remaining pistol, she fished an intercom from her pocket, and then pressed the button to call their ship. It took nearly a minute for Plex to answer, and she sighed with relief when she finally heard his voice.\n\n\"Plex here,\" he replied, sounding muffled.\n\n\"Why the long delay?\" she asked. \"We need an immediate evac. Any signs of movement from the Scorpions' fleet?\"\n\nAfter another ten second pause, Plex replied, \"Plex is doing his best, but signal very weak; must be interference from rock. Scorpions' fleet hasn't moved position yet.\"",
        "\"Maybe all the communications consoles are up here?\" Bull asked glancing around the planning room. Staring at the wrecked holo-table, he added, \"Or were at least.\"\n\n\"Land on the pads in front of their base,\" Malifica told the Slarmian. \"We'll leave through the front door.\"\n\nAfter another ten second wait, he replied, \"Plex is on the way.\"\n\nLooking at the battered Terrans and the unscathed Drakkar, she said, \"Let's get moving, we don't want to leave the ship exposed for longer than we have to.\"\n\nShe helped Bull over to the stairs, but saw no sign of life down the staircase, only signs of death. Lots of it, in fact. Well over a score of pirates had been gunned down by Groluk with his minigun, the men caught completely exposed on the stairs as they'd tried to join the battle. Stopping for a moment to listen, she strained to hear for any more pirates, but couldn't hear any sounds coming from down the stairs over the din from the football game.\n\nReasoning that they'd either been killed or had fled, she took the first step, and then helped a rather groggy Bull down too. It was slow and treacherous going, what with the steps slick with blood, and all the bodies slumped on the steps. Eventually, she managed to guide her first mate down the steps, although he was looking a bit green by the time they reached the bottom.\n\n\"You alright to continue?\" she asked him, looking into his eyes to check to see if they were still focused.\n\nHe nodded, then winced as he said, \"Yeah, but I wish I hadn't done that.\"\n\nShe helped prop him up against the wall, and said, \"Wait here a few minutes with Groluk and George, I'll just check the way out is clear.\"\n\nBull was about to give her a weary nod, but he caught himself and raised a hand in a thumbs-up gesture instead. Malifica glanced at the Drakkar, but he waved her away, so she pulled out her pistol and crept forward towards the double doors where the Zero-G football game was still playing on the huge vidscreen. There were no pirates in there, just abandoned snacks and beer, but she saw another long corridor heading off to her left, which was heading in the general direction of the front of the mining base.\n\nShe had a quick look around, and there were several more doors, but they just led to a kitchen, galley, a storeroom and another bathroom. The place was filthy, but clear of pirates, so she went back the way she'd come to collect her crewmates. Bull had a little more colour in his cheeks, and George was hobbling on one foot now, using a magazine-less rifle scavenged from the dead pirates as a crutch.\n\n\"It looks clear,\" Malifica said to them. \"Most of the Scorpions must be with their fleet at the moment.\"\n\nBull smiled wanly as he said, \"Let's get a move on then, Cap'n. I've had just about enough of this shithole.\"\n\n\"My sentiments exactly,\" George said with a tremulous grin, trying to maintain a cheerful facade despite his obvious pain.\n\nGlancing between them, she said, \"Bull can you keep an eye on Talon? I better take point, just in case there's an ambush. Groluk, can you watch our rear?\"\n\n\"Yeah, Boss, no problem,\" the Drakkar agreed, carrying his minigun in his hands yet again.\n\nMalifica moved ahead of them, travelling at a slow pace to allow their walking wounded a chance to keep up. The lounge was just as deserted as the last time, so she guided them towards the long corridor she'd spotted, and began walking down it with her crew in tow. It took a minute to reach the end of the long passageway, and it was with a sigh of relief that she heard the roar of retro-thrusters coming from up ahead.\n\n\"Nearly there, guys,\" she said, glancing back at them to check they were still with her. \n\nShe was greeted with tired but happy smiles from the Terrans, and a fang-filled grin from Groluk. They passed through another loading room with a handful of adjoining storage rooms, before finally reaching the front door. Opening it cautiously, she was hugely relieved to see the Infernal Retribution parked on the closest landing platform, retro-thrusters burning in readiness to launch them skyward. \n\nWalking out through the door, she strolled towards the ship, a triumphant grin on her face as the Cargo-Bay doors began to open. Turning around behind her she waved at her crew, beckoning them onwards as they stumbled and plodded through the door. Something had caught her eyes as she turned around to look at them, and she whipped her head back to do a double-take. Her heart froze when she spotted several armed men, the one in front holding a vicious-looking Enshunu rifle pointed in her direction.\n\nThe man opened fire, and she was knocked backwards, sent reeling by the stun-rifle. She wasn't knocked out this time, only rendered insensate, and she stared helplessly at her crew from the awkward angle that she'd landed. \n\n\"Cap'n!\" Bull cried out in panic, and he said something else, but it was drowned out by Groluk's roar of defiance and the sound of a minigun firing.\n\nGeorge raised his carbine, aiming it at the stun-rifle user, and he fired off a burst, hitting the man in the chest. Their attacker went cartwheeling backwards in a crimson fountain, but Malifica wasn't paying attention to him. She could only watch in horror as George was hit from in front and behind, the bullets punching through his armour in sprays of bright-red blood. He toppled over backwards, and was dead before he hit the ground. \n\nThere was the sound of an explosion, and then Bull crouched next to her, grabbing her by the shoulders. He was desperately trying to pull her back into the base when she heard a sharp cry of pain, and the hands pulling her shoulders fell limp. He pitched forward, slumping down next to her, his eyes staring at her lifelessly, his face a mask of blood.\n\nMalifica tried to croak out that she was sorry, that she should have listened to him all along and never even considered this job. She couldn't talk though, even to beg his forgiveness, and was forced to stare at him mutely, a tear welling in her violet eyes.\n\nThe minigun and the accompanying screams of pain went silent, although the whumping sound of rounds hitting Groluk's shield continued unabated. He roared again, but sounded weaker this time, although the ripping sound of a chainsaw accompanying his challenging bellow managed to make it terrifying enough.\n\nShe could hear frantic shouts and then agonised screams as the chainsaw bit into flesh, but the shooting continued, and eventually the chainsaw cut out and died.\n\nThere was silence for a few minutes, where she was left gazing helplessly into Bull's blankly staring eyes. They seemed to hold a damning accusation in them, as though her first mate and only real friend held her completely to blame for his death. \n\nBull was suddenly unceremoniously hauled aside, and with a wet squelch, Plex's head lolled in front of her, his final expression fixed in a final look of abject horror. She heard callous laughter, and the Slarmian's head was booted aside. A few seconds later, a familiar face loomed above her, while brandishing the brass control rod in his hand. \n\n\"Someone really wants a word with you,\" Hades said with a mocking grin, an evil glint in his eyes.\n\nHe gestured to one of his men, who shot her with the Enshunu stun-rifle again, the weapon previously only set on low-power so that Hades could torment her after killing her men. Malifica welcomed the onrush of oblivion, hoping she might find peace from her feelings of guilt and loss.\n\n***\n\nEven knocked unconscious, Malifica's fevered mind offered her no respite from her torments, and her thoughts flitted from one disturbing set of memories to another. \n\nThey started benignly enough, thinking of innocent times spent playing with her sister in their youth. However, they were quickly interspersed with the calculating look of triumph Irillith had on her face when their mother ordered her banished from the Maliri Regency - the very moment this unending nightmare that was her life had begun. Then, when she was wracked with anguish over her twin's betrayal, her thoughts took an even darker turn. She remembered screaming in horror as a sadistic pirate Captain took his knife to her face, her Enshunu Master gleefully telling her how he'd only been paid one miserable credit to ruin her beautiful looks.\n\nIt therefore came as a relief when her eyes fluttered open, jostled awake by Hades' bodyguards as they chained her to the wall of a cell. Malifica found it difficult to focus on anything though, her vision blurry and her mind disorientated. \n\n\"Ah, she wakes.\"\n\nShe recognised the voice, and turned her head groggily in his direction. She made out who she could only assume was Hades, but she felt a shiver of fear when she spotted the golden masked Enshunu standing beside him, easily identifiable despite the way her vision swam.\n\n\"Why not simply transfer her to my pleasure barge?\" the Enshunu asked, his voice grating just like the rest of his species.\n\nThe abrasive sound stirred up a host of vile memories, but she fought them down so she could listen.\n\nHades laughed humourlessly, and replied, \"Don't think me as gullible as this stupid bitch. I'll only transfer Malifica to you, when your boss arrives and activates the rest of Underworld's defences.\"\n\n\"But without my help activating the tracking beacon, you wouldn't have acquired the rod,\" the Enshunu protested. \"Wasn't that enough to prove our good faith?\"\n\nHades ignored the alien creature, and stepping closer to Malifica, he said, \"You've made some powerful enemies... Tashana.\"\n\nHer eyes widened in shock, but she was too groggy to respond, the chemical cocktail that was coursing through her veins rendering her speechless.\n\nHe gave her a smug smile as he said, \"The Enshunu asked for my help capturing you years ago, but with you flitting around doing your smuggling, I knew I'd never be able to lure you in. As soon as the Kintark shut down their borders, I knew it was only a matter of time until you'd be desperate for work, and you'd be begging me to go get that rod.\"\n\nDrowning in an artificially created fog, she managed to mumble brokenly, \"Why...?\"\n\n\"Why send you after the rod?\" he asked, then shrugged as he answered his own question, \"I wasn't lying to you about that before. If I'd sent in the mercs after Madclaw they would have levelled the place and I couldn't risk the rod being damaged. I wasn't going to waste my own men hunting the Scorpions, I need them to keep control of Underworld.\"\n\nShaking her head, she tried again, \"My men... why kill them?\"\n\nHades let out a callous chuckle as he replied, \"I don't believe in leaving loose ends. That's why I finally got around to wiping out the rest of the Scorpions.\" He frowned then, and added, \"Besides, your fucking crew cost me a goddamn fortune paying off the Corpselords for all the mercs they wasted.\"\n\nThe intercom crackled, and one of the pirates up in the command centre announced, \"Hades, you better get up here, the ship you're waiting for appeared on the long range scans.\"\n\nThe Bloodnova leader gave Malifica a mocking grin, as he said, \"The Enshunu are sending some big shot to complete our deal, so I better go and greet our guests. Thanks for fetching me the rod, but I guess this is goodbye.\"\n\nHe was about to leave when he paused, and reached out to grab her mask, carefully lifting it off her sagging head. When he saw her face, he winced in disgust, and let the cowl fall to the floor. \"Yeah, good call on the mask,\" he muttered with revulsion.\n\nWith that, he turned and walked out of her gloomy cell, leaving her alone with the malevolent, golden masked alien.\n\nThe Enshunu stepped close, staring at her from inches away with his red, baleful eyes. \"Your suffering will be exquisite,\" he gloated in a jagged hiss. \"The Vizier will make you pay for your effrontery against the Enshunu, in ways that will have you begging for mercy!\"\n\nShe shook her shaven head, and replied in a quiet, chilling voice, \"There's no such thing as mercy. Not for me, not for you.\"\n\nThe Enshunu looked unsettled as he blinked at her, and hurrying from the cell he called after Hades, \"Are you sure she's drugged enough? Perhaps we shou-.\"\n\nWhatever he said next was cut off as the door to her cell slammed shut, and was locked with a loud click. Malifica slumped against her bindings, trying to focus her thoughts in her drowsy drug-induced stupor. Her head drooped forward, and her eyes focused on her golden mask with its mocking smile, which stared back with wry amusement at her predicament. \n\n***\n\nHades strolled up the ramp into his Command Centre with a spring in his step. Everything had worked out perfectly, and as soon as the Enshunu Vizier explained how to activate the last of Underworlds defence grid, he'd be rid of the unpleasant aliens and his troublesome guest. He'd heard all the rumours about Malifica, but she didn't seem all that terrifying to him. He was starting to wonder if the Enshunu had made up the wild stories, to save themselves the embarrassment for losing a ship to a slave revolt.\n\nHe made eye contact with a pirate named Chigs, who was a relatively recent promotion to his Bloodnova bodyguard, and nodded to the man as he walked towards him. It had been Chigs who'd contacted him over the intercom, and Hades strode over to join him at the brass control console for the sensor suite built into Underworld. The irritating Enshunu followed in his wake, the red-eyed alien squawking about doping up Malifica with more drugs.\n\n\"They're early,\" Hades said to Chigs, a smile of anticipation on his face.\n\n\"The ship just jumped in,\" Chigs replied, pointing at the system map. He hesitated for a moment, before he added, \"I didn't know the Enshunu could travel that fast in hyper-warp! I've never seen anything like it.\"\n\nThe oddly curved displays in the control room had taken a bit of getting used to, but they were effective enough when you learnt not to rely on three-dimensional holo-maps. Hades followed the pirate's pointing finger, and looked at the cruiser which had just jumped-in at the edge of the Alamak system. He frowned when he saw it, and said to the Enshunu at his side, \"I thought all your ships were chrome-coloured?\"\n\n\"That's not the Vizier's ship!\" Yil'magur declared indignantly, frowning as he stared at the map. The Enshunu Captain's red eyes narrowed with suspicion as he added, \"It looks like a Terran Federation vessel to me...\"\n\nHades stared at the glossy white-hulled cruiser, and wondered what the hell a Terran Federation vessel could possibly be doing in the Unclaimed Wastes.\n\n\"We're being hailed, Hades,\" Breaker, the bearded pirate at the Comms Station said, turning in his chair to look at Hades.\n\nHades snorted, and replied, \"Alright, this ought to be good. Put them on.\"\n\nThere was a large curved display in the middle of the Command Centre, and lines of static rolled up the screen for a few seconds before the image solidified into a view of the cruiser's bridge.\n\nSeated on some kind of command chair, up high on a podium, a man wearing white body-armour with a golden lion stamped on his chest stared intently back at them. He'd removed his helmet, and had placed it on the console in front of him, the gold scrollwork glinting in the light. Surrounding the man at the stations on the bridge were some of the most beautiful women that Hades had ever seen, and he blinked in astonishment as he gaped at the stunning girls. They were all wearing vaguely similar, sparkling white body armour, although theirs was far more form-fitting and showcased one spectacular body after another.\n\nThe armoured man spoke in a clear, authoritative voice, and said, \"This is Rear Admiral John Blake, on the Invictus. You must be Hades?\"\n\nForcing himself to tear his eyes away from the girls, the Pirate king sized up Admiral Blake and replied, \"Yeah, that's me. What brings you out here? You're a hell of a way from the Terran Federation.\" \n\nJohn replied in an even tone, \"I'm looking for a girl called Tashana, and I know she's somewhere in that station.\"\n\n\"Who's that exactly?\" Hades asked him cagily, intrigued as to why the Terran Federation would be interested in an ex-pitfighting slave. \"Maybe if you tell me why you're looking for her, I could help track her down?\"\n\nThe Enshunu Captain at his side bristled, and snapped, \"She's the personal property of Vizier Sag'kalyak of the Enshunu Empire! Go back to your Federation, Admiral Blake, you have no jurisdiction here!\"\n\nHades ground his teeth in irritation, and could have throttled the red-eyed fool. Forcing himself to remain calm, he looked at the Terran Federation officer, and said, \"Sorry, Admiral, looks like you're out of luck.\"\n\nAdmiral Blake leaned forward in his Command Chair, and his expression was stern, as he said, \"We can do this the easy way, or the hard way. Hand her over, or I'll come in there and get her.\"\n\nWith a contemptuous laugh, Hades replied, \"You're hundreds of light years from Federation Space, dickhead! It looks like you forgot to bring a fleet with you!\" He had a gloating grin on his face as he continued, \"Just fucking try it, and see how long you last!\"\n\nThe Terran Officer shared a glance with the brunette on his left, then smiled grimly at Hades and growled, \"I just want Tashana. As long as she's unharmed, you get to live.\"\n\n\"Go fuck yourself, boy scout!\" Hades replied, his lip curling into a derisive sneer.\n\n\"The hard way it is, then,\" Admiral Blake replied, staring at him with cold pitiless eyes. \"I'll see you soon.\"\n\nThere was something about that dreadful look, and the utter certainty in the Terran officer's voice that sent chills up Hades' spine. He was about to reply, when the screen abruptly went blank as they were cut off.\n\n\"Who the fuck does he think he is!\" Hades blustered indignantly.\n\n\"They're approaching on an attack vector, Boss,\" Chigs said, sounding eager to see the defence grid of turrets at work.\n\nHades rounded on the Enshunu Captain, and asked, \"What does this jumped-up fucker want with Tashana?\"\n\nYil'magur shook his head, and replied , \"She was purchased by Captain Tyr'kayda nearly thirteen years ago. From everything I know about her, she had no contact with the Terran Federation prior to that.\"\n\nAfter studying him appraisingly for a long moment, Hades concluded he was probably telling the truth, but with the masks the Enshunu all wore, it was extremely hard to tell. \"How long until this Vizier turns up?\" he asked the cowled alien, keen to get this deal over with.\n\n\"Vizier Sag'kalyak is not due to arrive for another three hours,\" Yil'magur replied, his grating voice getting on Hades' nerves.\n\n\"Holy fuck!\" Chigs suddenly gasped in awe, his exclamation echoing through the room.\" They just blew it to fucking bits!\"\n\nHades grinned, remembering how impressed he'd been, when he first saw the massive Beam Lasers mounted in the turrets melting huge holes through an unsuspecting freighter. \"That'll learn that smug bastard not to fuck with Hades,\" he gloated with a sense of tremendous satisfaction.\n\nShaking his head, Chigs pointed at the curved map, and blurted out, \"No, not the cruiser, the turret! They just fucking vaporised it!\"\n\nRushing to the pirate's side, Hades stared at the glowing chunks that were all that was left of the closest weapon turret. The white-hulled cruiser drew closer at an unhurried pace, and as soon as it was within range of more of the defence grid, it opened fire with an incandescent salvo of bright blue beams. Hades watched incredulously as the beams lashed into two more turrets, the pulsating columns of energy slashing down and cutting the defensive platforms in half. One of them detonated in an incandescent orange explosion, while the other drifted apart in two smouldering chunks.\n\n\"Get on the comm to the Ruiners, the Corpselords, and my ships! Tell them I want that fucking ship dead! I want to piss on that fucker's ashes!\" Hades barked at Breaker, the pirate seated behind the comms console.",
        "The bearded man had been staring at him in shock, but one look at the pirate king's furious expression had him leaping into action. Breaker put his hand to the headset in his ear as he frantically contacted the pirate and mercenary fleets.\n\nHades turned back to look at the curved map, so he could focus on the battle developing outside Underworld. His eyes narrowed, and he nodded with satisfaction as the Bloodnova pirate ships, along with the Ruiner and Corpselord mercenaries began to respond. There were twenty-three vessels in the flotilla, made up of eight corvettes, six frigates, five destroyers, two Ruiner cruisers named \"the World-Burner\", and \"the Howling-Pillager\" along with one for the Corpselords, called \"the Flesheater\". The huge formation of spacecraft were all lead by his flagship, the battlecruiser \"Brutaliser\".\n\nHe grinned as he turned to look at the white cruiser, the sensors having identified its transponder code and tagged it as \"the Invictus\". Expecting the Terran Federation vessel to turn-tail and flee in the face of so many ships, he was astonished when the assault cruiser banked towards them, almost as if it were eager to get to grips with his fleet. Hades' jaw fell open as he watched the Invictus dramatically increase its speed and charge headlong into the mobilising fleet opposing it.\n\n\"That's impossible, no ship moves that fast!\" he balked, as he stared at the curved map not believing what he was seeing.\n\nChigs shook his head fearfully, and said, \"No, it's right! There's nothing wrong with the sensors!\"\n\nThe Invictus began to roll and drift, causing the green laser beams from the defensive grid to flail about well wide of the mark, missing the cruiser by dozens of metres. Beam weapons were designed to fire at large, slow moving vessels, and the automated targeting software was ill-equipped to aim the ponderous turrets at such a nimble ship.\n\nReacting as fast as they could, the pirate and mercenary fleet began to assemble into formation, preparing themselves for the battle. The World-Burner and the Howling-Pillager were at the front of the throng of ships, and they opened fire with six Beam Lasers apiece. The dull orange beams throbbed as they fired chaotically at the incoming ship, with half managing to glance over the Invictus' shield by blind-luck rather than skill.\n\nUnfortunately for the Ruiners, the Terran ship was now in range too, and it turned sharply before unleashing the terrible firepower from its topdeck on the two dark-blue cruisers. Eight azure beams struck each ship on the prow, their shields trembling violently for a split-second as violent blue waves surged out from each point of impact. Then just like that, their shields were gone, leaving the vessels horribly vulnerable to the ferocious columns of energy. \n\nAs the Invictus ran parallel to the ships, the beams continued to throb with power, scything along each cruiser and neatly gutting them from prow to stern. Hades looked on in utter disbelief as two of the biggest ships in the sector were filleted in seconds. They'd been torn into two neat halves, and debris and personnel were sucked out into the vacuum of space as the ship's hulls were sliced open.\n\nMore of Underworld's turrets were in range now, and they turned to fire on the white ship as it looped around for another pass. Some of the beams actually managed to strike the cruiser this time as it was impossible to dodge incoming fire from eight different directions. Three of the turrets managed to connect with their pairs of green beams, sending spiralling pulses of verdant light across the field protecting the Invictus, while the rest of the shots sailed harmlessly wide.\n\n\"They haven't even lost their shields!\" Chigs exclaimed in alarm. \"What does it take to put that fucking thing down?!\"\n\nStunned into silence, Hades staring wide-eyed as he watched another eight beams from the underbelly of the Invictus lance out and eviscerate two more of his turrets. It rolled again, and came barrelling in on a direct heading towards the bulk of his fleet, closing to medium range with the host of ships. The corvettes, frigates, and destroyers brought their laser cannons to bear in a blistering hail, joined by beams from the last of the cruisers, the Flesheater.\n\nHades' flagship was his pride and joy, the battlecruiser having been the scourge of miners and traders throughout the Unclaimed Wastes. The mighty vessel was armed with a mix of Beam Lasers, Heavy Cannons, and Laser Cannons, in addition to dozens of missile racks along the ship's spine, each warhead containing potent loads of high explosives. The Brutaliser joined in the devastating barrage with a thunderous broadside, firing everything it had at the onrushing assault cruiser.\n\nThe pirates in the command centre cheered as they saw the shields on the Invictus wink out, with beams and laser bolts finally striking home against the sparkling white hull. Hades sighed with relief as nearly sixty missiles raced towards the vulnerable vessel, leaving long plumes of smoke as they burned through their fuel. A wicked grin crept onto his face, knowing nothing could survive that amount of ordnance.\n\nA second later, a broad cone of bright blue laser fire swept out from the Invictus, the blistering hail of bolts arcing into the missiles' path. There was a rippling wave of explosions as the swarm of missiles were shredded by that azure rain, causing the warheads to detonate prematurely as they were ripped to pieces by Pulse Cannon fire. The Invictus wasn't content with contemptuously sweeping the missile barrage aside, and the blue hail tore into the corvettes, frigates, and destroyers, chastising them for their impudence. \n\nNow it wasn't just missiles exploding, and he watched in horror as not only mercenary ships, but his own BloodNova fleet was cut to pieces. The relentless destruction proceeded through the ranks of ships, the titanium armour on the smaller vessels proving woefully inadequate against pinpoint accuracy with such overwhelmingly powerful weapons. The pirates' cheers in the command centre died out just as abruptly as over two hundred of their Bloodnova brethren.\n\n\"No! This can't be happening!\" Hades protested, shaking his head in denial as he watched his forces consumed by the blue wave of laser fire. It had taken him painstaking years to assemble his fleet of ships, and now they were being obliterated in a matter of minutes.\n\nThose lethal blue beams lashed out again, split between the Flesheater and the Brutaliser this time. The Corpselord's cruiser was bored through in half a dozen places, its shields offering scant protection against the nightmarish power of the terrifying weapons. The bright blue shards of light raked through the ship, and one of them touched off the reactor, blotting out the cruiser on the map as it was enveloped in a tumultuous amber explosion.\n\nThe Brutaliser had lost its shields, but they'd managed to nearly ward off the eight blue beams, sapping them of most of their strength. That did the battlecruiser little good though, as the Invictus pulled up its nose to face directly towards the red-hulled ship, and unloaded its Mass Drivers. The four hyper-accelerated shells pounded into the Brutaliser's upper gun decks, and the detonations that followed a second later ripped through the vessel, tearing the banks of Heavy Cannons from the superstructure. \n\nThe ravaged battlecruiser still had its Beam Lasers, Laser Cannons, and Missile Racks, although the missiles would take some time to reload. The Invictus started to perform a lazy roll, no longer making any effort to dodge as it brought the Beam Lasers from its underbelly to bear. The Brutaliser fired back in desperation with every weapon it could muster, and Hades felt his heart pounding in his chest as he watched eight of its beams link the two ships as they all struck home. \n\nObscured from view by the hail of orange laser bolts and beams, the Invictus was surely done for, and Hades waited for the ship to explode as so many had previously fallen victim to his flagship. When the beams winked out a few seconds later, his grin was wiped off his face as he gaped in open-mouthed astonishment at the curved display. Not only was the Invictus still intact, its glistening hull still shone radiantly, not even showing a scratch from the Brutaliser's savage burst of destructive energy.\n\nIt was the Invictus' turn now, and as it finished off the last of the destroyers with Pulse Cannon fire, the eight Beam Lasers on its underbelly blasted into the battlecruiser. All eight beams converged on a single point, melting through Titanium armour as though it were made of butter, then burning through deck after deck until they speared the ship's reactor. The resulting catastrophic explosion sent fragments of the obliterated ship tumbling away on the blastwave.\n\nHades fought down the overwhelming feelings of shock, grief, and loss at seeing his beloved flagship get blown to pieces. He whirled on the Enshunu beside him, and grabbing the alien by his red robed tunic, he hauled him off his feet and roared, \"Talk you sneaky fucker! What aren't you telling me?!\"\n\nYil'magur's red eyes were wild, the alien just as terrified by what he'd witnessed as everyone else in the room. \"I-I've told you... w-w-what do you...?\" he babbled incoherently.\n\nPulling out his broad-barrelled heavy pistol, Hades jammed in under the Enshunu's chin, and snarled, \"Start fucking talking, or I'll blow your fucking brains out!\"\n\nThose blood-red eyes stared cross-eyed at the deadly-looking pistol, and he yelped, \"Tashana's a Maliri!\"\n\nHades blinked at the Enshunu, staring at him in amazement. He released the alien's tunic from his grip, and Yil'magur stumbled backwards, struggling to keep his balance. Everyone knew about the Maliri; the enigmatic aliens who hid behind their golden armour, and after seeing Tashana's face he understood why they did. Tales of the Maliri's incredible firepower, and their utterly remorseless attitude towards all other races, were well known to everyone in the Unclaimed Wastes. \n\nHades glanced at the Invictus as it banked around the Underworld. With every pirate and mercenary ship in the Alamak sector little more than glowing debris, it was completely unopposed as it closed on the nearest docking bay, obliterating every turret in its path.\n\n\"Hail that fucking ship!\" he croaked at the bearded pirate sitting behind the comms station.\n\n***\n\nJorgan Marharbor twisted his shoulders and then brought the wickedly-barbed neural lash across the back of his slave. \"Stop dawdling you lazy pieces of shit!\" he snarled in anger.\n\nThe barechested man screamed in agony, and collapsed in a spasming heap as he convulsed with the searing pain, with the vicious lacerations left by the weapon adding to the web of scars cross-crossing the man's torso. Normally that was enough to send all his servants running, falling over themselves in their haste to unload the cargo from his freighter, but to his astonishment, the rest of his dozen slaves didn't even flinch. They all seemed to be transfixed by something, and they stood stock-still, gazing out across the docking bay. Jorgan raised his arm to strike another of the indolent slaves, but the voice of Ndunng, his bodyguard, stopped him.\n\n\"Boss, wut's that?\" the Largath at his side grunted, two pairs of eyes rolling to look in the same direction that his massive brawny arm was pointing.\n\nJorgan frowned in irritation, wondering what pointless irrelevance had brought his unloading operation to a grinding halt. He turned to follow the direction of the Largath's huge gnarled finger, and he stared wide-eyed at the sight, just as awed by it as his servants.\n\nA huge five-hundred-metre long, sparkling white cruiser was floating completely motionless outside the docking bay entrance. The ship looked sleek and predatory, that impression greatly enhanced by the formidable arsenal it had on display. Segments of its glossy armour plating had peeled back, revealing fearsome batteries of turreted weapons, which were all pointing inside the docking bay. \n\n***\n\n\"They've accepted the call!\" Breaker blurted out, twisting in his seat behind the brass-coloured comms station as he looked for Hades.\n\nThe leader of the Bloodnovas was pacing up and down, eyes darting nervously at the Invictus, which was currently parked outside Docking Bay Four. Hades felt a surge of relief when he heard Breaker's call, and glanced at the viewscreen as it flickered to life, revealing the bridge of the Invictus once again. The room was practically deserted now, except for two beautiful alien girls, one with a ravishing green face, the other a cute purple.\n\n\"Where's Admiral Blake?\" Hades asked impatiently. \"I need to talk to him!\"\n\nThe green-skinned girl studied him for a moment, then replied in a sombre voice, \"He isn't on the Invictus any more.\"\n\n\"Where is he?!\" Hades demanded in a panic. He felt clammy now, and with cold sweat dripping from his brow, he added frantically, \"Tell him I've reconsidered!\"\n\nJade gave him a macabre smile, her emerald green eyes flashing with excitement as she said with an ominous tone, \"Don't worry, you'll see him soon enough.\"\n\nIcy talons of dread clawed at Hades heart, and he pleaded, \"Wait! I'll give him whatever he wants! Tashana right? She's yours! I don't give a shit!\"\n\n\"If I was you, I'd make sure Tashana's safe,\" the Nymph said, staring at him intently. She gave him a pitying look, and added, \"John's got a nasty temper when he gets upset.\"\n\nWith that she closed the comm channel again, leaving Hades staring at the crackling screen. \n\n\"Fuck!\" he blurted out, his heart pounding in his chest.\n\n***\n\nJorgan Marharbor stood transfixed as he stared at the smaller vessel emerging from the side of the massive cruiser, which was now blockading the entrance to the docking bay. The gunship banked out from a hangar built into the intimidating larger ship, then rolled around and swept into the Underworld. It flew in low over the parked merchant shipping, before hovering twenty metres above the deck, about fifty metres away from him. It had the same sparkling white armour as the bigger ship, but this gunship had a leaner, more aggressive profile, making it seem just as ferocious despite its smaller size.\n\nThe loading ramp at the front of the gunship swung down, and a tall, white-armoured soldier stepped out fearlessly, the golden lion emblazoned across his chest catching the light. Golden-yellow flares of light appeared behind him, as some kind of retro-thruster slowed his descent, and the man landed lightly on his feet, raising a long white rifle in his armoured grip. The weapon looked radically advanced, and was illuminated by a blue light that ran down the length of the barrel.\n\nNo sooner had he touched down, then half a dozen more white-armoured figures started stepping out from the ship, dropping down in pairs then fanning out to flank their leader. These soldiers were smaller in size, and Jorgan realised with a start that they were all women, the figure-hugging body armour making that abundantly clear.\n\nThey paused for a moment with their long rifles covering all angles, standing protectively around one of them in their centre; a girl with a golden lioness on her shoulder. From where he stood on the loading ramp, Jorgan had a clear vantage point over the heads of his slaves, and he could see how breathtakingly beautiful the girl was through her transparent faceplate. He stared at her in fascination, watching as she closed her eyes. The girl appeared to be deep in concentration, and she seemed to fall into some kind of meditative trance as the seconds ticked by. Lights began to dim all around them, and he glanced around in alarm, watching the lighting in his freighter's cargo bay start to flicker erratically.\n\nWhen he glanced back at the girl again, he stared at her in amazement as a burning white light blazed from her eyes. Her arms were swathed in swirling white vortexes of energy, and she suddenly crouched down and struck the floor with both fists. A surging pulse of energy blasted outwards from the kneeling girl, making Jorgan flinch instinctively as the wave of energy rushed towards him. It swept over his slaves and the Largath beside him, before surging past and plunging into the depths of the Underworld. As he watched it glide away, he had the sudden epiphany that it might not be wise to be standing out here, gawping at these mysterious soldiers. \n\nHe turned to run back into his ship, but something he spotted as he turned made him freeze in place. All his slaves were shrouded in a soft white nimbus, and they stared at their hands in surprise, turning them over in amazement. \n\n\"Pretty lights, looks like blood!\" Ndunng, his Largath enforcer muttered, holding his burly hand up in front of his face and admiring the red glow.\n\nJorgan stared at his own pasty hand, and gaped at the ominous red aura in shock. Ndunng was right, it looked like his hands were soaked in blood.\n\nThat's when the shooting started. \n\nAnd the killing began.\n\n***\n\n\"Holy fuck...\" Chigs breathed, in a low, terrified voice, staring at the red shroud covering his body, just like all the other Bloodnovas up in the command centre. His attention was suddenly drawn by a strobing flash of blue light, and glancing across at the banks of monitors, he gasped, and shouted, \"Hades, look!\"\n\n\"What now?!\" Hades asked him fearfully, still reeling after his chilling conversation with the green girl on the Invictus.\n\n\"Docking Bay Four!\" the pirate gasped, pointing a shaking hand at the bank of vidscreens.\n\nWhen Hades had taken over the base, he'd had his men install surveillance cameras all over Underworld. They'd hooked them up to a broad bank of monitors, so that they could maintain a careful watch over their new lair, and keep an eye on the untrustworthy denizens of the station. The cameras in Docking Bay Four were now ablaze with blue beams of light.\n\n\"Zoom that shit in! What the fuck's going on?!\" Hades demanded.\n\nBreaker tapped in some commands on the console beside him, and the image on one of the twenty-five screens expanded to cover all of them. Hades instantly recognised the white armoured figures, with John Blake at their lead, three of his women to either side. The way they moved was hypnotising, with the six women moving in perfect synchronisation as they swept through the docking bay at a fast walk.\n\n\"They're killing everyone!\" Chigs cried out in alarm.\n\nHades watched as one of the women, who had a brown lioness on her shoulder, aimed at a Largath and sent burst after burst into the howling monster. The rapid pulses of azure laser bolts blasted searing holes through the creature, and when it was hit by a well-aimed shot to the head, it toppled over backwards crashing into some crates. \n\nIt was eerie to see the woman brutally slay the huge alien while never once falling out of step with the others. She pivoted smoothly as she switched targets and gunned down the Largath's fleeing master, leaving him dead on the floor with fist-sized holes steaming in his chest. John Blake and his women swept out of sight of the camera, moving on from the Docking Bay, and leaving scores of corpses in their wake.\n\n\"Find them!\" Hades barked at Breaker, who nodded hurriedly, trying to locate the invaders again on the cameras. Whirling around he looked for Yil'magur, as he muttered, \"This is all your fault, you fucking red-eyed bastard...\"\n\nHowever the Enshunu Captain was no longer in the command centre, having taken advantage of the fear and confusion to slip from the room. \n\n***\n\nMalifica was in a daze, slipping in and out of consciousness as she tried to fight off the effects of the drugs that were overpowering her senses. Her mind took this opportunity to further her torment, slipping back through her memories to when she was just a young girl, aged eight, living in Melfalas, Valaden's capital city.",
        "\"I don't believe you!\" Tashana said stubbornly, tears streaming down her face. \n\n\"I'm telling you the truth!\" Irillith replied, the expression on her face showing how sincere she was. \"I saw mother and father fighting, and then she...\"\n\n\"No! I can't hear it again!\" Tashana cried out, putting her hands over her ears to try and block out her sister's voice.\n\nHer twin stared at her for a long moment, then simply held out her arms for a hug. \n\nTashana could see that Irillith looked scared, although she was doing her best to keep it from her grief-stricken face. With a strangled sob, Tashana went to her sister, hugging her fiercely.\n\n\"I love you, Tashana,\" Irillith whispered in her ear, her voice throbbing with emotion. \"We just have each other now. I promise I'll take care of you.\"\n\n\"I love you too!\" Tashana replied, and the two sisters cried over their lost father, and at the brutal realisation of just what kind of a monster their mother truly was...\n\nMalifica was jolted out of her partially conscious state, her heartbeat racing, and that same nagging itch at the back of her mind once again. She tamped the feeling down, smothering it with the sting of betrayal, and a throbbing surge of smouldering anger. She'd been naive and weak when she'd believed her sister's lies. She wasn't any longer.\n\nSurrendering to her burning hate, she lost herself to seductive dreams of flickering flames.\n\n***\n\nJohn and the girls swept through the market, bringing long overdue retribution to the Underworld. Lady Justice might be blind, but in this case, the condemned had been judged by the one person truly capable of determining their own guilt. Themselves. \n\nFollowing Athena's guidance, Alyssa had fallen into a spirit-walk, then swept through the station in moments, lightly touching the minds of everyone in sight. Rapists, slavers, murderers; simply brushing her ethereal fingers over their minds had given her an ugly glimpse into the dark, twisted nature of their souls. After that, the pulse she'd sent out simply separated the guilty from the innocent; and there were many more of the former than the latter.\n\nTheir progress through the Underworld was heralded by terrified screams as they pursued the crowds at a brisk pace, purging the guilty, and leaving the terrified innocents unharmed. A group of Drakkar raiders swathed in a sickly blood-red opened fire on them, but the rounds from their miniguns bounced away harmlessly with odd whumping sounds. The Drakkar carried reflective shields, but they proved scant protection against such deadly accurate laser fire. John simply shot out their feet, and when the lime-green hammer-headed aliens toppled over in agony, he shot them in the head.\n\nSimple. Effective. Lethal.\n\n***\n\nIt hadn't taken Breaker long to find John Blake again, they just had to look for the fleeing crowds and the relentless salvos of blazing blue laser fire that slashed through anyone painted in an eerie red glow. The pirates watched as a Trankaran merchant shrouded in a pale white aura cowered behind his mining trucks, while a squad of Ruiner mercenaries only metres away, turned to face the remorseless Terran officer and his soldiers. The dark-blue armoured mercs appeared a ghastly purple in the red haze that surrounded them, and they began shooting their assault rifles in desperation at the implacable foe.\n\nThe bullets bounced harmlessly wide, arcing upwards and away from the crowds, and the mercs stared aghast at their ineffective weapons. They received a deadly hail of laser bolts in return, which ripped through them in short bursts, melting fist-sized glowing holes through ceramic armour and flesh alike. In a matter of seconds the Ruiner mercs had been perforated in a dozen places, and they pitched over, dead before they hit the ground.\n\nHades watched the terrified Trankaran stare wide-eyed at John Blake and his entourage, who ignored the bulky alien as they glided past, intent on their unrelenting massacre. Hades looked down at his own hands, swathed in a lurid red, and he quailed as he realised what it meant. He'd been marked for execution just like the rest of the pirates, mercenaries, slavers, and other miscreants being butchered below them in the market. \n\nTurning, he began to run for the lower level of his base, intent on fleeing across the gantries before John and his pitiless women could seal off this complex. A shocked gasp from Breaker stopped him in his tracks, and he spun around to look at the cameras in morbid curiosity. The seven white-armoured figures had launched themselves into the air, held aloft by a golden glow coming from some kind of thrusters on their backs. Their short flight ended as they landed gracefully on the gantries, firing all the while as they wiped out the Bloodnova pirates standing guard on these upper levels.\n\nHades' heart sank like a stone in his chest as he realised he was cut off, but he rallied quickly, and yelled, \"Seal the fucking doors!\"\n\nOne of the pirates stabbed his finger down on a big red octagonal button on his brass console, and after a second's delay, they could hear heavy machinery grinding into motion. The massive reinforced door rolled into place on the level below, sealing them into the complex with a bass rumble that Hades could feel through his feet. \n\nRealising that he was now trapped, he jabbed a finger at two of his men, and snapped, \"Go and get Malifica, bring her up here.\" When they stared at him mutely for a moment, Hades' face twisted in anger as he roared, \"Fucking move your ass!\"\n\nThe pirates lurched from their chairs and began running for the nearest ramp down to the level below. Grinding his teeth in anger, Hades turned his attention back towards John and his women. The six female soldiers peeled off, striding across the gantry and around the central control column, until they stood at the opposite balcony overlooking the fleeing crowds below. They now turned their unflinching attention to the flesh merchants at the other end of the market. \n\nThe slavers and their customers were a long way from the scenes of slaughter, and had no idea of the nightmare that had descended on Underworld. They looked around at each other in confusion and alarm, as they heard the distant sounds of terrified screams heading their way. Hades watched as an unsuspecting flesh merchant in a blue suede coat was punched through the chest by a laser bolt, leaving him staring in dumb horror at the glowing hole below his sternum. The rest of the women opened fire now too, unleashing a savage hail of blue laser blasts which blazed into his Largath enforcers. One of them was cut in half at the waist, left thrashing around impotently until it was shot in the head.\n\nRed shrouded corpses were piling up by the score, as the people here fled deeper into the market, fleeing from the shooters who seemed focused on killing anyone running for Docking Bay Two. Hades saw what the terrified people below failed to understand. That they were being herded back into the killing zone.\n\nHe turned his attention back to the entrance to his fortress, and stared with wild eyes at the cameras as John pulled a big white sword from his back and stalked towards the door. Hades knew how thick that door was, so despite everything he'd seen so far, he knew he'd be safe for a while yet. John started hacking through the tan-coloured wall, seemingly intent on chopping his way around the door. The sparkling sword descended again and again as he cleaved his way through the wall, the blade carving through the thick ochre metal as if it were cardboard. \n\nHades wondered what the hell John was doing, as he abruptly stopped his hacking then sheathed his sword and backed up a few paces. He launched himself at the reinforced door, and a deafening crash boomed through the complex, as John smashed into the huge, foot-thick disc and ripped it out of the frame. The impact sent it spinning backwards where it crushed the pirates and turrets behind it, leaving bloody smears across the ground where the men had been standing.\n\nJohn unshouldered his long laser rifle again, then paused for a second as the girls finished their slaughter of the criminals below. They jogged over to join him, but one of the women with a white lioness on her shoulder paused before entering the base. She turned her beautiful blue face towards the camera pointed in her direction, and her angular eyes blazed with a blinding violet light. \n\nShe reached towards them, and in front of Hades' horrified, disbelieving eyes, she seemed to grasp hold of the frame of the vidscreen, and started hauling herself through. Her ghostly blue form peeled itself away from the screen, her face contorted with rage, with her long white hair billowing out behind her. \n\n\"Give me back my sister!\" she shrieked in fury, then lunged at the nearest pirate to the vidscreens.\n\nBreaker had turned a pallid white as he stared in terror at this vengeful wraith, and he screamed in fear as her grasping hands clawed for his throat. Her long fingers were surrounded by arcing lightning, and he convulsed as she touched him, white sparks of electricity crackling and hissing as she fried him alive. Irillith's spectre dropped the blackened corpse, then turned her feral, supernatural gaze on Hades next, eyes narrowing with hate.\n\nYelling at his men in horror, Hades screamed, \"Shoot the fucking screens!\"\n\nAs she stalked towards him, the pirates pulled out a wide variety of handguns, then opened fire on the vidscreens. There was a series of sharp cracks as bullets started punching holes in the panels, shorting them out in a crackle of sparks. As the last of the screens went dead, the ghastly apparition flickered out and disappeared only a few metres from the pirate king, leaving him to sag with relief. \n\nAlthough they'd stopped her from cooking any more of them to a crisp, Hades suddenly realised that with all the camera vidscreens shot out, they'd been effectively blinded. He wondered what the hell was keeping the men he'd sent after Malifica...\n\n***\n\nAfter sneaking away from Hades and his men while they were distracted, the Enshunu Captain had crept down the corridors of the lower level of the complex. Yilmagur wasn't a fool; he could see this John Blake was a far deadlier foe than he'd initially believed, and he knew that his one chance of getting out of here alive was to use Tashana as a bargaining chip to barter for his freedom.\n\nHe had to duck into a shadowy alcove, as a group of Bloodnovas ran out from their barracks and hurried to man the barricades. When they were gone, he continued furtively along the passage as he headed towards the cells, where the pirates kept their prisoners and their entertainment. Yilmagur wasn't one to judge them on that though, he knew well the pleasures to be had from hearing a slave's despairing cries. When he finally saw Tashana's cell, he glanced both ways down the corridor to make sure it was still clear, then strode over to the locked door. \n\nSag'kalyak would be furious when he'd be forced to report that the Maliri girl had escaped the Vizier's wrath, but some things, like Yilmagur's own life, weighed far more heavily than revenge. Still, if all went to his current plan, and he managed to buy his way to freedom by handing over Tashana to John Blake, it would mean Hades would be left without any bargaining chips of his own. A change in ownership of the Underworld could still be in the running, which would end up being a far more valuable prize for the Vizier. \n\nThe Enshunu had spent centuries scouring the Unclaimed Wastes for secrets, always searching for hidden troves of knowledge left behind by the ancient civilisation that had called this section of the galaxy their own. Some dreadful and mysterious calamity had suddenly befallen the Achonin, wiping out the advanced space-faring empire in a matter of years. It had always been a mystery to the Enshunu, how the Achonin had managed to build such a thriving civilisation in such a bleak and inhospitable place as the Unclaimed Wastes.\n\nPutting aside such thoughts, he reached for the button on the wall which would unlock the cell. His hand froze half-way though, as he felt a sudden surge of heat coming from the door itself. Remembering what had happened to Captain Tyr'kayda, he backed away fearfully, eyes fixed on the white hot disc that was burning its way around the lock.\n\n***\n\nMalifica was mesmerised by the dancing flames in her mind, and she shivered with delight as she embraced their warmth. The heat coursed through her body, burning away the drugs clouding her senses, and jerking her back into full consciousness. There was an acrid smoke filling her cell, and when her eyes snapped open she immediately saw what had caused the horrible smell. Her gloves lay on the floor, flames consuming the black synth-weave where they'd been set ablaze. \n\nHer hands were shrouded by flames now, the fire roiling around her fingers, dancing to her command. She merely had to reach out with her will, and the tendrils of fire blazed bright, scorching the chains that secured her to the wall. The steel melted like wax as she burned her way through the links, leaving a pool of liquid metal on the ground as she tore her hands free.\n\nHer fires thirsted for more though, and were hungry to taste flesh and blacken skin. She breathed deeply and held back the blaze, letting the flames die back for a few seconds, which gave her a chance to retrieve her golden mocking mask. Pulling the hood over her head, she felt safe and protected by the persona of Malifica. \n\nDreams of fire and burning overwhelmed her now, and the fires roared back, flaring over her hands as if in delight. She stepped forward and placed her flame-wreathed fingers against the door, sharing her all-consuming heat with the metal. It glowed white hot as she melted her way through the steel, globules of super-heated metal running in rivulets down the door.\n\nWith a gentle push it swung wide, unleashing the Infernal Retribution.\n\nMalifica heard a cry of fear, and when she strode from her cell, her blazing eyes locked on the retreating form of the Enshunu who'd tormented her earlier. She laughed with delight and gestured towards the terrified creature as she embraced him with her flames.\n\nLazy orange tendrils swept out from her outstretched hands, and curled around his calves, setting him ablaze and burning through his clothes. His terrified screams were like a beautiful chorus to her ears, accompanied by the wonderful sizzling of his searing flesh. Yilmagur collapsed on the floor, wailing in agony as the dancing flames had their fun, playfully caressing his thighs, and climbing higher.\n\n\"Yesss, feed the flames,\" she purred, as she sashayed towards him.\n\nGreasy black smoke filled the corridor, as Yilmagur thrashed on the floor, his cries of agony growing higher pitched as more of him was burned away. A deafening crash some way off in the complex made Malifica turn in that direction with a frown, but there didn't seem to be any immediate danger. She shrugged, and focused on the Enshunu once more, smiling at him as she recalled fond memories of playing with her old master in the same incendiary way.\n\nTwo pirates rounded the bend in the corridor, as they rushed towards her, but they skidded to a halt as they stared in horror. Giving them a frown of irritation for interrupting her game, she flicked her left hand at them dismissively. A raging inferno burst from her hand, sweeping down the corridor and incinerating the Bloodnovas in a blazing conflagration. The men didn't even have time to scream as they were burnt to a crisp, not even their bones surviving the incredible heat. When the fires died down as quickly as they'd arrived, all that was left were some smoky black silhouettes scorched onto the floor.\n\nShe turned back to the Enshunu who was convulsing in agony, and she knelt down beside him, and crooned, \"I'm so sorry we were interrupted.\"\n\n\"Please, have mercy!\" he begged her desperately in a high-pitched squeal.\n\n\"Like this?\" she asked him, tilting her head to one side, and extinguishing the flames lapping at his groin.\n\nHe reached out towards her, hands clasped together as he cried out, \"Oh, thank you!\"\n\nShe caressed his hands with her own, and whispered, \"Have you already forgotten what I told you? There's no such thing. It's a lesson my old master taught me well.\"\n\nYilmagur gaped at his hands in horror, feeling the blistering heat on the back of his hands where she'd touched him. The flames ignited once again, dancing around his flailing hands, as he screamed in fear. She laughed at his efforts, her violet eyes watching intently as she roasted his flesh.\n\nFour more Bloodnovas burst out of a side-room, alerted by Yilmagur's piercing screams, and they stumbled to a halt as they gaped at the charred Enshunu. One of them was violently sick, while the other three took one look at the fires roiling around her hands, and began to back away from Malifica.\n\n\"More pirates,\" she hissed, eyes narrowing in hatred.\n\nGesturing upwards with both hands, a twisting maelstrom of fire roared into existence beneath them, scorching the Bloodnovas where they stood. \n\n\"Maybe a corridor wasn't the best place for us to get acquainted,\" Malifica apologised to the burning Enshunu, chuckling and rolling her eyes at her silly mistake.\n\nYilmagur's hands had been reduced to blacked stumps as the flames slowly crept up his arms, and he was in so much pain now, he was beyond reason. Malifica frowned at him in irritation, realising she'd been too hasty, and with a bit of patience could have made this far more entertaining. With a shrug she reasoned that there were plenty more Enshunu left to play with in the galaxy. She tapped him on the mask, and the flames danced from her fingers through the eye-slits, scorching out his eyes and melting his brain.\n\nMore screams reached her ears, but these weren't of her making. Rising to her feet, she glanced along the corridor, but couldn't see any signs of life, only signs of fiery death. Strolling that way to find out what was happening, she listened with her sharp hearing as the sounds of fighting drew closer. There was a door up ahead that led into one of the big rooms filled with pirates that she'd passed through on her first trip to the base. Cautiously she approached the door, flames cavorting around her hands in eager anticipation.\n\nMalifica poked her head around the door, but she was totally unprepared for what awaited her, the sight shocking her to the very core.\n\nAfter studying his species for over two decades she recognised the Progenitor instantly. The distinctive features, the pointed ears. It was almost as if she was staring at Mael'nerak made flesh, jumping out of one of the friezes she'd found.\n\nAccompanying the Progenitor were half-a-dozen thralls, their beautiful faces set into cold impassive masks. Absolutely merciless, they were slaughtering the pirates with practiced and calculated ease. Ribbons of blue laser fire slashed through the Bloodnovas, shooting the ones cowering behind the barricades by blasting holes directly through the inch-thick steel plating. \n\nHer flames flickered out and died as she gaped at them in horror. A Progenitor, here. She'd thought her living nightmare had been the worst that life could throw at her, but apparently she was terribly mistaken. Malifica shook with terror as she fled back down the corridor, stumbling deeper into the complex in her desperation to escape from the most tyrannical species the galaxy had ever known.\n\n***\n\nHades had ordered his men to cover the entrances into the room, and they hid behind the brass consoles with rifles or pistols out, trying to hold them steady as they shook with fear. He clutched his heavy pistol in a trembling hand, and was crouching behind the furthest console in the command centre from the entry ramps. His hiding place was also conveniently located near the vault door behind him, so if it turned into a bloodbath, he could always bolt in there and try to escape. ",
        "His heart sunk in his chest and he was filled with despair as he remembered the effortless way John Blake had smashed his way into the complex. The vault door was hardly going to be a challenge to someone so insanely strong.\n\nHe could hardly believe it when he spotted Malifica sprinting up the ramp directly opposite, running full tilt towards him. \"Grab her!\" he yelled at his men, pointing towards her.\n\nA couple of Bloodnovas dived towards the fleeing woman, knocking her to the floor as they grappled with her. \"No, let me go!\" she screamed, absolutely frantic. \"He'll kill us all!\"\n\nMalifica thrashed in their grip, her desperation giving her added strength, and she managed to twist away from one of the pirates before kicking him in the groin. \n\nHades rose from his cover, and blurted out, \"Stop fucking around, and grab her you fucking idiots!\" He gestured to two more of his men, who ran over to help.\n\nA flash of white drew his attention to the ramps, and figures in white armour glided smoothly into the room, appearing from all three entrances simultaneously. That was when the killing began again in earnest. \n\nBlue laser fire from the groups to the left and right ripped through the two running pirates, catching them in a crossfire, as they sprinted towards the grappling group on the floor. The first was sawn in half by a deadly sweep of high-energy pulses, while the other was hit in the chest and throat, the blast to his neck neatly decapitating him. Both smouldering bodies crashed to the floor, as the armoured group coming up the ramp in the middle opened fire on the pirates trying to restrain Malifica. \n\nThe one clutching at his groin was shot in the head, killing him instantly, while the one attempting to grab the terrified woman was shot in the shoulder, melting through the joint. His arm fell to the metal deck with a wet thump, and he screamed in horror before being silenced abruptly by a shot to the face.\n\nFree once more, Malifica scuttled backwards, staring at John in absolute terror. She scrambled to her feet and ran deeper into the room, her path cleared of pirates by the sweep of laser fire. \n\nHades saw John striding after the fleeing woman, and as the last of the Bloodnovas died around him, he seized at the one chance he had to try and escape the carnage. He darted out from behind the console to intercept Malifica, arms outstretched to catch her.\n\nJohn moved in a blur, his long blade sweeping through the air as he charged across the room at incredible speed. He neatly cleaved through both of Hades' outstretched arms, slicing through them just below the wrist. \n\nHades crashed into Malifica, sending them both tumbling across the floor, and while he gaped at his bloodied stumps in horror, she tried to untangle herself to break free.\n\nIrillith had followed John in his run across the room, leaping nimbly over the Bloodnova corpses in her path. She pulled off her helmet as she skidded to a halt in front of Malifica, and she gasped, \"Tashana, it's me! Irillith! We're here to rescue you!\"\n\nTashana froze, staring at her own beautiful face that loomed in front of her. It had been years since her features had been ruined, and she'd removed every mirror in her quarters to avoid any painful reminders. Seeing that glorious vision of her unspoilt beauty once again, pierced through her terror, and she held out her hand in wonder.\n\n\"I'll take care of you now,\" Irillith said, giving her a reassuring smile.\n\nThe words were an echo of something Irillith had told her over forty years ago, and to hear them again snapped Tashana out of her shocked state. Laughing maniacally, she tore away her golden mask, revealing her ravaged features. Irillith's smile was wiped off her beautiful face as she stared at her twin in horror.\n\n\"It's all your fault!\" Tashana screamed, leaping forward and smashing her sister in the face with a roundhouse punch. \n\nIrillith was knocked sprawling backwards, blue blood spraying from her nose as John and the girls moved in to break up the fight. \n\nWith her rage spent, Tashana collapsed on the floor, and hugging herself she began to weep. \"It's all her fault,\" she sobbed brokenly."
    ],
    "authorname": "Tefler",
    "tags": [
        "nonconsent",
        "slave",
        "alien11111",
        "violent",
        "scorchio",
        "underworld",
        "hades",
        "enshunu",
        "non-con",
        "noncon"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-71"
}