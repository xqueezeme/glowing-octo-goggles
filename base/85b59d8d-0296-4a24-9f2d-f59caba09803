{
    "title": "The Horror Beneath Ch. 02 V. 02",
    "pages": [
        "Some readers said the earlier version of this chapter was too short; I agree and have expanded this. Please write and let me know what you think!\n\n* * * * *\n\nWhen Jessica regained consciousness, she had no idea where she was. The eighteen year old schoolgirl lay naked in a bed, only a thin sheet covering her, in a room that was little more than a box six feet square. For a brief moment she thought she was alone, before someone stirred beside her. Glancing to her side, she found her mother laying under the sheet next to her, slowly waking up.\n\n\"Mom! You're okay!\" she cried, sliding over and hugging her, realising that her mother, Holly, was also naked when their large breasts pressed against each other. Their arms went round each other and, without thinking, began stroking and caressing far more intimately than a mother and daughter should. Holly's hand kneaded her daughter's butt, pulling her closer, their thighs entwining and rubbing against each other's pussies.\n\n\"Oh Jessica, what's happening to me? I feel so . . . fucking horny.\" Holly began kissing Jessica's neck, her thigh pressing harder against her daughter's moist pussy. \"I know this is wrong . . . you're my daughter . . . but those things in the basement . . . \" she moaned between kisses. \"I couldn't help myself . . . just like I can't now.\"\n\nJessica knew what she meant: she'd never been attracted to another woman, let alone her mother, and yet now she could feel herself becoming more and more turned on. She moved up the bed, using her hand to raise one of her huge tits to her mother's waiting mouth. Holly eagerly accepted it, sucking on the nipple, tonguing around it before trying to cram as much of her daughter's tit flesh into her mouth as she could.\n\n\"Suck my titties, mom.\" She gasped. \"Suck your daughter's big tits.\" Jessica hooked her leg over Holly's waist allowing her mother to move her hand from her ass to her pussy and easily slide two fingers into her sopping cunt. \"You like that, mom? You like fingering your daughter's cunt?\"\n\n\"Hmm-hmm.\" Holly muttered, her mouth still latched on to Jessica's tit. She quickly slipped a third finger into Jessica's pussy for a moment, getting it slick and wet before removing it and pushing it gently into her daughter's asshole.\n\n\"Oh you dirty bitch.\" Jessica moaned as her mother finger fucked both her holes at the same time. \"Go on, put another one in there.\" Holly did as her daughter instructed, adding another finger to her butt, thrusting two fingers into her pussy and asshole together, making her buck and moan as she came on her mother's hand. Jessica grabbed at her mother's big tits, pinching her nipples as she was being fingered, gasping as her mother increased her hand's movement, fucking her ass and cunt even faster. \"Oh fuck mom! You're making me . . . come again!\" she cried, almost falling off the bed as she came, her mother's fingers slipping out of her holes.\n\nHolly brought her hand up to Jessica's mouth and offered her daughter her fingers, smiling as she took them all, one by one, and licked and sucked them clean.\n\n\"Baby, I know this is wrong.\" Holly said. \"But I'm not sure I can stop.\"\n\n\"Mom, I know.\" Jessica said, still caressing her mother's tits. \"It must be something to do with those things in the basement . . . I just feel so horny.\"\n\n\"You're right, Jessica, it is because of those things in your basement.\"\n\nMother and daughter turned suddenly at the sound of a woman's voice. Neither of them had heard the door open but they now saw a young woman stood in the doorway. It took a moment for Jessica to recognise her as the nun who had rescued her and her mother as she was no longer in the bizarre fetish style costume. She was barefooted, wearing a pair of low slung hipster jeans, her thong clearly visible above the waistband, and a short, ragged cut T-shirt that barely covered her large tits, with her dark hair tied back in a pony tail. Over one arm hung two long bath robes.\n\nThough the woman had almost certainly seen them fucking, Jessica and Holly both grabbed at the sheet, pulling it up over themselves.\n\n\"Don't worry, you've nothing to be ashamed of here.\" The nun said walking into the room. She handed them each a white robe and watched as they put them on, her gaze running over their bodies. \"I'm sister Corina and I'm here to let you know how much your lives have changed.\"\n\nShe walked to the door and both Jessica and Holly found themselves watching her perfect ass move beneath her jeans. Sister Corina stopped and looked over her shoulder.\n\n\"Follow me.\" She said, stepping through the doorway, Holly and Jessica walking behind her. They walked down a plain corridor which had other doors in the walls and one main door right at the end and it was to this one that Sister Corina led them. Opening the door and walking through, she brought the mother and daughter into a large hall. Other people milled about, most dressed casually though Jessica spotted a few priests and some women dressed in the X-rated nun's costume, every one of them like Corina: drop dead gorgeous with really big tits.\n\nA woman in her mid-forties walked over to them, wearing a one piece summer dress that buttoned up the front from the hemline to the low cut neck, but most of the buttons were undone with only a few at her waist preventing it from flying open. Her bare, long legs were visible as she walked and her mountainous breasts moved gently with every step.\n\n\"Sister Corina.\" She said, kissing the Sister on the lips, their tongues briefly darting against each other. \"I take it these are the pair you and Father Patrick rescued yesterday?\" She looked at Holly and Jessica with obvious desire.\n\n\"They are, Mother Superior. I'm just about to take them to the holding area.\"\n\n\"Good. Once you've finished, perhaps you'd like to join me in my quarters? The Abbot will be there.\" She reached out and ran her hand across the Sister's t-shirt, smiling as her nipples hardened instantly. \"I look forward to meeting you both.\" She said to Holly and Jessica before strolling away.\n\n\"What is this place?\" Holly asked as the three of them walked across the hall towards another door.\n\n\"This is the Church of The Protectors.\" Sister Corina said, taking them through the door into another corridor. \"We try to protect innocents such as yourselves falling prey to the horrors that live beneath the earth, like the one that you encountered yesterday. We detected that one too late to prevent you both from being taken by it.\"\n\n\"The one?\" Jessica asked. \"But there was about a dozen of those things.\"\n\nSister Corina smiled as she stopped outside a door. \"Come and see.\" She said, opening the door and stepping in.\n\nThey entered on to a balcony, looking down at the large room beneath them that could be accessed by a set of steps off to one side. Behind a full length glass wall, a pulsing mass of grey/pink flesh sat embedded in the ground, about the size of a large family car. Growing out of it were perhaps two dozen of the same tentacle-cocks that had raped Jessica and her mother the day before. Each of them had been allowed to escape through specially cut holes in the glass and had been clamped in place so that no more than about eighteen inches of the things were able to get out.\n\nIn front of the glass wall, six women, all naked, were being taken by three or four of the cocks at any one time. They writhed and moaned as they took the thick cocks in the pussies and/or assholes, between their big tits or in their mouths and hands, their bodies slick with a mixture of sweat and spunk.\n\nSister Corina, Jessica and Holly each felt their pulses begin to race, their own nipples stiffening and their pussies moistening as they watched the bizarre scene before them.\n\n\"We captured this one several years ago and use it to harvest its semen.\" Sister Corina said, a little breathless. \"You both experienced it yesterday so you know how tasty it is, but it has a few side effects. It raises the libido to a high level which is why you were both so horny when you woke; the cravings for sex are such that even the taboo of incest can be broken.\" She grinned as the pair of them blushed again. \"No need to be ashamed, as I said earlier. If enough of the semen is taken in your pussy, it will impregnate you; not in the normal manner, however. The foetuses grow only from the semen itself, but it requires a lot which is why they produce so much; thankfully it's quite difficult to get pregnant by these things. The only purpose of these creatures is to propagate the species; they've no real intelligence and can't tell the difference between your pussy, ass, mouth, tits, whatever. They just want to fuck and cum in the hopes of getting some woman pregnant.\"\n\n\"So why do you collect the cum?\" Jessica asked, unable to take her eyes of a blonde girl who was being double fucked by the tentacles, pushing herself back on to them. She caught Jessica's eye and smiled as she came, moaning and shuddering.\n\n\"That's another side effect: sadly, it's very addictive and once swallowed you're hooked. If I gave you both permission to go down there, as horrid and repulsive as that lump of flesh is, you'd both gladly be fucked silly by it, wouldn't you?\" With only a moments hesitation, Jessica and Holly both nodded. \"We'll all be drinking that stuff for the rest of our lives.\" Sister Corina said quietly. \"Without it, we'll die.\"\n\nThe thing behind the glass wall shuddered and a second later, the tentacles began spewing semen. Each of the women pulled away from the cocks and, as best they could, pointed them downwards, letting the strong jets of jism hit the metal floor. The cum ran down the gentle slope toward a grill that ran the length of the room, disappearing through it.\n\n\"It's collected in the next room, bottled and either handed out in it's natural form or mixed into our meals in the canteen.\" Sister Corina said. She turned to Jessica and her mother. \"You'll need to drink some soon, actually.\" As they returned through the door, the women below them began sucking and fucking the cocks once again.\n\nStepping back into the large hall, Holly asked \"Why are all the women so dammed gorgeous?\"\n\nSister Corina chuckled. \"Another side effect of the semen; it alters your body's genetic make-up. It makes your legs longer, your face better looking, slims down your waist and enlarges your breasts.\" She turned to them and reached out, cupping their tits. \"As big as you ladies are already, you're both going to get bigger.\" Sister Corina gently squeezed their large tits making the pair of them gasp in pleasure.\n\n\"Fuck that feels good.\" Jessica sighed.\n\n\"Before yesterday if I suggested to you both that we find a quiet room and fuck each other you'd have probably called the police, right?\" Jessica and Holly agreed. \"And if I suggested it now?\"\n\n\"I'd say show me to the room right now.\" Holly said instantly.\n\n\"Well, I'm going to show you to your new room. I'm sure you won't mind sharing, will you?\" The Sister said with a grin.\n\nThey walked to a bank of elevators and took one to the fifth floor. Stepping out into what looked like a typical hotel corridor, Sister Corina took a door key from her jeans and opened one of the doors. The three of them walked into a basic yet comfortable suite with a bedroom, bathroom and living area-cum-kitchen. In the bedroom they found a closet and chest of drawers which was filled with a selection of clothes, both casual and more formal.\n\n\"I know it might sound harsh, but your old life is over.\" Sister Corina said. \"You'll be staying with us and training to fight these creatures, learning more about them, where they come from and about the other things that we fight against. But all that's to come. For now, just try and make yourselves at home.\"\n\n\"Sister?\" Holly asked, looking a little embarrassed. \"You said we needed to . . . to drink more of that . . . that cum. I . . . I think I'm getting a craving for it.\"\n\n\"Me too.\" Jessica said quietly. \"How do we . . . how do we get some?\"\n\n\"The cravings are always worse in the early days. They will lessen as time goes on if you drink enough on a regular basis. Normally I'd get some sent up to you in a couple of bottles.\" Sister Corina said. \"But as I'm here, I think I can help.\" She took hold of the torn t-shirt she wore and pulled it up over her head, revealing her big round tits, cupping them in her hands and pinching her nipples. \"Take off your robes and get on the bed.\"\n\nJessica and Holly did as she instructed, climbing naked on to the large bed, watching the nun.\n\n\"Show me what you were doing when you woke up.\" Sister Corina said, smiling as the mother and daughter turned to each other and kissed passionately, their tongues playing with each other. Jessica's hand slid down her mother's firm stomach and between her legs, two fingers slipping easily into her sopping pussy. Holly broke the kiss and dipped her head, kissing and sucking at her daughter's tits.\n\n\"Oh baby that feels so good.\" She moaned as Jessica added another finger into her pussy. Reaching behind herself, she easily pushed two fingers into her own asshole, moaning with pleasure. \"Before yesterday . . . I never had anything in my ass.\" She gasped. \"Now I can't stop myself.\"\n\nJessica raised herself up and turned around, her fingers never leaving her mother's cunt, straddling Holly in a sixty-nine.\n\n\"Eat me, mom.\" She demanded. \"Eat my pussy.\"\n\nSister Corina watched as the incestuous pair ate and fingered each other and themselves for a while before she unbuttoned her jeans and pushed them off, followed by her thong. She slipped two fingers into her own hairless pussy, fucking herself for a moment before climbing on to the bed, kneeling between Holly's spread legs.\n\n\"There's another side effect to the semen that only affects about one in fifty of us.\" She said. Jessica lifted her head from her mother's pussy and watched what she was doing. The nun took her fingers from her twat and began stroking her clit rapidly. \"You might get it, you might not.\" She said, tugging and pulling at her clit.\n\nBefore Jessica's surprised gaze, the skin at the top of Corina's pussy began to expand, pushing outwards. It formed a tube that grew in shape and size until, in under thirty seconds, the nun sported a fully grown, foot long cock identical to that of the tentacle creature, complete with shiny helmet that leaked cum from its slit.\n\n\"Fuck me.\" Jessica said quietly. She moved off her mother, allowing Holly to see what Corina had.\n\n\"Oh my god.\" Holly sighed, taking in the sight of the big titted nun stroking her own cock. With Jessica out of the way, Corina leaned forward and slid her big prick deep into Holly's cunt in one movement. \"Oh fuck me! Oh fuck that feels good!\" Holly cried as the nun began fucking her with long, deep strokes.\n\nJessica moved behind them and watched the nun fucking her mother for a moment before pushing her head between Corina's legs and feasting on her still visible pussy, occasionally moving her tongue up to her asshole and rimming her.\n\n\"You like my big cock, Holly?\" Corina asked her. \"You like being fucked by a woman?\"\n\n\"Oh fuck yes! Fuck me!\" Holly moaned, reaching up and grabbing Corina's huge tits. \"Oh fuck . . . I'm cumming!\" Holly cried as Corina pushed deep into her pussy, stuffing as much of her cock as she could into her. As she relaxed, the nun pulled her cock out and turned her on to her side, Jessica moving to give them room. Corina lay on her side behind Holly and spread her ass cheeks, her cock nudging against her asshole.\n\n\"You want my big cock in your ass, Holly?\" she asked the horny mother.\n\n\"Oh god yes! Fuck my ass! Fuck it!\" She cried, moaning as Corina pushed forward.\n\nJessica knelt beside them and watched her mother's asshole stretch wide to accommodate the nun's thick cock, her eyes widening as more and more of Corina's huge fuck rod slid inside her butt. The fingers of one hand were already busy in her pussy and now she reached behind her with her other hand and slid two fingers in her own ass, moving them in time with Corina's thrusts, cumming quickly as she finger fucked herself.\n\n\"Oh baby! Oh Jessie! She's up my ass!\" Holly cried as she was butt fucked. \"Your mom's getting . . . fucked in the ass! It feels so fucking good!\" She screamed as she came again and again.\n\n\"I can see, mom. I'm watching.\" Jessica gasped. Corina looked over at her.\n\n\"Come closer, Jessica.\" Corina said, slowly puling her cock out of Holly's ass. \"Taste your mom's ass.\" Jessica leaned forward and took hold of Corina's huge, glistening cock, eagerly stuffing as much as she could into her mouth, her head bobbing up and down, her cheek bulging out. \"Look at your daughter, Holly. Look at her suck my cock after its been up your ass.\"\n\nHolly looked over her shoulder and watched Jessica sucking and licking at the nun's big dick.\n\n\"Fuck her, Corina.\" She said. \"Fuck my daughter in the ass.\"\n\nThe nun chuckled and pulled away from Jessica, telling the mother and daughter to get back into their sixty nine, Jessica on top. The pair did as they were told, quickly thrusting their tongues into each others pussies. Corina knelt behind Jessica's butt and positioned her cock at the entrance to her ass.\n\n\"You ready to get fucked in the ass, Jessica?\" she asked. She didn't wait for a reply; she pushed forward, her thick cock spreading Jessica's ass wider than it ever had been, cramming her meat deep into her butt.\n\n\"Oh fucking hell!\" Jessica cried, lifting her head from her mother's cunt. \"Oh fuck my ass!\" Holly continued licking her daughter's pussy as above her Corina fucked her butt hard and fast. Jessica began moaning as she came, her juices flooding her mom's mouth. \"Oh momma!\" she cried. \"Momma, she's fucking my ass so good!\"\n\nCorina suddenly pulled her cock from Jessica's butt and pushed it down into Holly's waiting mouth, feeling her run her tongue over it.\n\n\"That's it, Holly. Time for you to taste your daughter's ass.\" She moaned, pushing as much of her cock between her lips as she could. She pulled it out after a moment and quickly thrust back into Jessica's asshole, butt fucking her again. \"I'm gonna cum, girls.\" Corina said. \"Lay either side of me.\"\n\nShe withdrew from Jessica's ass and laid on her back, Holly on one side, Jessica on the other. Corina grabbed her legs behind her knees and pulled them up, forcing her huge cock between her own tits. Mother and daughter both grabbed a hold of her meat and began jerking on it. Within seconds, Corina came, spewing out thick streams of sweet, warm cum, the same that the tentacles had the day before. It spurted out between her jugs, covering her face and falling into her open mouth. Holly and Jessica leaned in, mouth open, tongues hanging out to catch the huge load Corina was delivering, the three of them quickly plastered with spunk, licking it off each other, swapping it back and forth, drinking it down.\n\nEventually, Corina stopped cumming and dropped her knees back down, Holly and Jessica licking the remaining cum off her big tits before lifting up her semi-hard cock and sucking it clean between them.\n\nThe three of them laid back on the bed, watching as Corina's cock was absorbed back into her body, leaving her with her perfect pussy on view.\n\n\"That was fucking intense.\" Jessica said quietly. The pair cuddled up to Corina, hugging and stroking her and each other.\n\n\"I was right.\" Corina said. \"I think I am going to have some fun with you two.\""
    ],
    "authorname": "daniellesadvisor",
    "tags": [
        "large hall",
        "jessica holly",
        "daughter holly",
        "corina",
        "holly spread",
        "ass holly",
        "jessica mother",
        "tits mother",
        "daughter turned",
        "holly cried"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-horror-beneath-ch-02-v-02"
}