{
    "title": "Finding the Perfect Fit Pt. 15",
    "pages": [
        "<center>January 10</center>\n\nFirst week of classes wrapped up and the difference between the beginning and end of a semester is fucking amazing. Softball assignments, a bunch of them sure but I knocked them out just as quickly. At least work has slowed up somewhat but now the store is hungry for new help, as Christmas thinned out the roster.\n\nStill, life has returned to something approaching normal and thank God. I've made a promise to myself that I'm not going to let it get so bad this semester. I'll lie, cheat and really shouldn't need to steal anything to make sure I'm in a good spot when the next round of finals shows up.\n\nJamie agreed with that idea when we ate lunch together in the college's cafeteria, both of us having a salad. Us eating rabbit food was basically like holding up a cross to a vampire, except we were staving off caffeine and sugar related issues.\n\n\"Don't think Tom is going to stick with it though. He's already went to a party.\" Shaking his head, Jamie polished off the last of his salad and sat back, his covered chest barely noticeable.\n\n\"Yeah, so did Donna. How the fuck do they play basketball when they're sloshed all the time?\" A shrug was my only answer and probably the best one I was going to get. \"So, when do ya got some time off?\" I asked him, my voice playful and he instantly understood what I was after.\n\n\"Friday night.\" We'd been away from each other all Christmas break and seeing him, even in his grungy guy get up, was making me all sorts of excited. Especially since I had a stockpile of new clothing for him to try on. His grin and flushed cheeks told me that he was ready for the weekend and the days passed slowly until finally, Friday night came.\n\nI picked him up, noting his hair was in much better shape than during that nightmare slog through the end of last year and had been combed. Hell, so had mine! Still colder than a witch's tit out and spring was still so far away.\n\n\"I've been... looking forward to this.\" Rubbing his hands together then holding them up to a heater vent, Jamie glanced at me out of the corner of his eyes.\n\n\"I'd hope so!\" Leaning back, Jamie looked out the windows at cars coming and going to his dorm, the early night of winter settling over the campus. He didn't look eager but solemn, watching strangers coming and going. \"Hey, what's up?\"\n\n\"I don't quite know. I guess it's kinda surreal, right? Like, we did this before but are right back here, doing the same thing.\" I tilted my head at that, almost following along with his logic. \"Sorry, sorry, got a little too far up my own ass there.\"\n\n\"Hey! That's my job.\" The look he gave made me laugh, shifting from shock to an easy half grin, the sort he had given me before sitting on the dildo and doing all the work to the ends of his own pleasure. \"I mean, yeah, we've met up like this before but it's never been the same thing. If ya want, we could go to where I got my fun stuff and grab something new to spice things up.\" Echoes of the woman at the counter, talking of guys really liking it and find they were size queens burbled up from memory, inciting me all the more.\n\n\"...I think I'm good with what you're currently packing.\" I giggled at that, reaching a hand over and tweaking what lay between his legs.\n\n\"Same here.\" I said, feeling as that part of him jumped to life, Jamie looking around in the gloom before allowing himself to relax. \"Almost there. And I gotta surprise for ya.\" Several in fact but I didn't want to get his hopes too high.\n\n\"I do too. It called MY DICK!\" I burst out laughing and he quickly joined me, the both of us losing our minds as I parked, somehow.\n\n\"Where the fuck did that come from?!\" I got out, nearly choking on the words.\n\n\"Tom told me to say it!\" He howled and I let loose of HIS DICK and clutched him as we laughed and laughed. \"Made me promise!\" By the time I managed to stop, my stomach hurt and Jamie was coughing, clutching the dashboard as if to keep from drowning.\n\n\"Oh my God, I need a nap.\" I said, head falling forward and resting on the upper part of the steering wheel.\n\n\"Fuckin' Tom.\" I gave a giggle, willing to admit I might have been wrong about my misgivings about him. He was good for a story and a laugh, which was better than most people offered. \"Ready to go in?\"\n\n\"Yeah, and take a nap. Tired out now.\" I felt his glare and had to stifle more giggles. I couldn't afford to get lost in that again. \"Alright, fine, I guess we'll do the same ol' same ol'.\"\n\n\"You never complained before.\" Jamie said as we ventured out into the cold, Donna's car nowhere to be seen.\n\n\"I'm just giving ya shit. Let's get going before Donna shows up and crashes our fun.\" I unlocked the door and went back into the dim and dingy dorm, eternal and changeless. Still, my bedroom held promise and I lit a scented candle given to me for Christmas and made sure nothing flammable was near it. Going up in a house fire wasn't how I wanted this night to end. Now if I burst into flames when Jamie slipped into what I'd brought for him... Yeah, that'd be a good way to go, the fire that seized control when things got hot and heavy finally breaking through my skin and consuming me.\n\n\"So, not to sound greedy but what is this surprise?\" Taking off his hoodie, I saw he was wearing a new Metallica shirt, still probably two sizes too big for him.\n\n\"Man, I wish I could pull my pants down and a dick would pop out. The look on ya face would be fuckin' priceless.\" I said, Jamie smirking at my wishes. \"Anyway! Pick a color: Red, Gray, or Black.\" Presented with these choices, Jamie sat on my bed and drummed fingers on the wrinkled blanket.\n\n\"Gray. For a change.\" I nodded and went into my closet where all manner of things were stored, secreted away from him until the time was right. From a bag came the lacy bra and panties in the color he had requested. Approaching him, I held the underwear up so he could see that they didn't really have much to them and were indeed see through.\n\n\"Oh. Oh wow.\" Jamie looked closer, color slowly building in his face and bit his lower lip, obviously interested.\n\n\"Merry late Christmas!\" I handed it over and Jamie gingerly took both pieces, rubbing the thin, filmy lace between a finger and thumb.\n\n\"I can't take this. It's gotta be expensive.\" His words were slow, as if spoken with great effort.\n\n\"Lucky for you I have two more sets.\" Walking back to the closet, I held up the other two bras and watched the conflict on his face. \"Seriously, it's yours. I didn't get ya anything for Christmas and I want nothing more than to see you in it.\"\n\n\"But-\" I didn't let him get started and was honestly kind of annoyed that the Jamie who had straight up said he was going to fuck me had been replaced with the painfully meek and 'oh I possibly couldn't' version of him. Still, I wanted to see this through and needed to be patient.\n\n\"The only butt I care bout right now is yours in those panties, 'kay? I got more stuff once ya changed.\" I stepped into the closet only to peek my head out a few seconds later. \"What ya wanna see me in? Red or black?\"\n\n\"...Red.\" Still slightly out of sorts, Jamie was utterly absorbed by what was in his lap when I dipped back in the closet. I had no idea what was going on in that head of his and was going to find out once I got back out there. Stripping, I wiggled into the panties and fought into the bra, settling my boobs in it and using my phone to check out how I looked. Yeah, my vag was basically on display and nipples were somewhat visible through the lace but that was the point.\n\nOpening the door slightly, I called out if Jamie was ready and he replied that the bra was trying to kill him. I asked if he wanted help but Jamie refused, saying he was going to get this. At least he sounded much more sure of himself and less conflicted. Hanging out in my closet, ha ha I just now got that, I looked at what was coming next and couldn't help but get giddy.\n\n\"Okay, finally got it.\" Flinging the door open, I struck a pose and messed my hair up, looking past the veil seductively. Jamie was split between looking at me and down at himself, not quite covering up but he had seemingly fallen out of the habit of showing off. \"I might as well be naked!\"\n\n\"But ya not and that's what makes it so hot.\" I grinned, both at the view and my inadvertent rhyming.\n\n\"I'm not going to make out with Dr. Seuss.\" Jamie proclaimed, making me laugh. \"Uh, these are really tight!\" His legs were pressed together, pushing that eager bundle of his forward and I walked over, feet making hushed sounds on the carpet that became erotic whenever Jamie was about. I could make out his dick, straining to be free from behind the lace. I ran a finger down his trapped length, loving the heat and hardness wrapped up in something as touchable and feminine as sheer panties.\n\n\"I like it.\" Turning us towards the mirror, I cocked my hips to the side and Jamie tried to do the same but with less enthusiasm. His mushed up junk in in the surprisingly strong panties and my labia looked pretty close, both creating a bulge, with his being slightly bigger and more pronounced of course. His nipples were poking through the bra and, yep, mine were too. While Jamie had said something about being back here, doing the same thing over and over, if it was this I didn't mind at all. Sure, his legs weren't freshly shaved but I was more than happy to see him exploring once more.\n\n\"Man, I just can't be bigger than you, can I?\" I reached over and gave his package a honk, making him jump.\n\n\"Once those come off, I think we know who's bigger.\" Taking one of his hands, I placed it over my lace covered vag and puppeteered him into returning my grab. His breath caught as fingers closed about my warmth, rubbing slowly and just as slowly driving me insane. I wanted to show off more surprises but at this point I wasn't going to make it.\n\nPulling him close, his motions not stopping, I kissed him and gave a happy sigh when our breasts came together, the thin lace only adding to this beautiful dream. Reaching down, I caressed his still wrapped up dick, feeling it desperately wanting to be free.\n\n\"Mmm, I love these panties on you.\" Slipping a hand about his waist, I took a handful back there, the texture of the underwear making his grabbable butt all the better. With what might have been a dry sob, Jamie broke away from me and staggered over to my bed, either gasping for breath or crying.\n\nBlinking, having just got hit by a bad bout of mood whiplash, I called his name softly and got nothing back.\n\n\"Jamie, what's wrong?\" Raising both clenched fists over his head, Jamie slammed them down on the bed, then again before falling atop of it. A growl, sharp and slapping the mood away from sorrow, rang out and Jamie rolled over, speaking to the ceiling.\n\n\"Over Christmas break, I stayed with my Dad and tried to talk, connect, fill the silence between us.\" His voice was clear and frustrated, not clogged with tears. \"And I ended up saying that I'm seeing a girl and he reacts to that. Not that I passed all my classes and English with an A. Or that I'd helped Tom or basically worked full time the whole semester but I have a girlfriend? Now that's REAL news!\" There was no missing the bitterness in his voice and I knew nothing good was coming from his shithead father that had neglected to ensure Jamie was prepared for life with boobs.\n\n\"He tells me while watching football that he's glad I'm 'growing up' and being a man.'\" Sitting up suddenly, Jamie glares at me before grabbing and lifting his breasts with fingers curled in crooked claws. \"Yeah, okay! So manly!\" Letting loose of what had to be a painful grip, he clapped hands over his face and flopped back down.\n\n\"I can't get that out of my head. I know I shouldn't give a shit but it's haunting me!\" Walking first to the closet to grab my phone out of discarded jeans, I got Dreams by Fleetwood Mac playing before joining him on the bed.\n\n\"What about it bothers you?\" I asked softly as the gentle music filled in the silence.\n\n\"That I'm expected to be a typical guy. Cause I had sex I'm now a man.\" He gave a chuckle that contained bout as much humor as a funeral. \"I wanted to ask if taking it up the ass counted, if that too, made me a man.\" I blinked at the savagery that came out of him, like blood oozing up from a sudden and deep cut.\n\n\"God damn Jamie.\" The song played on as I failed to think of anything to say. So I winged it. \"You know what the answer would be from a person like that.\"\n\n\"Yeah.\" He said, that one word so final I almost expected him to walk out. His next words took me completely off guard: \"Pretty sure I'm bi.\" He sat up, looking at me with a flat expression that failed to hide vulnerable eyes.\n\n\"Really?\" I had nothing else, all the words of the world fell through my fingers like water and left me with only that one.\n\n\"I kinda have to be, right?\" Jamie struggled, mouth opening a few times before noise came out. \"A straight guy doesn't bend over for his girlfriend who's wearing a strap on.\"\n\n\"I dunno, have ya asked Tom if he's been railed before?\" I tossed that out there, Jamie's face a mask of offense before crumpling into laughter. \"Maybe he was chasing Misty in the rain for THAT DICK!\" And I threw my head back and laughed along with my lingerie clad boyfriend who had figured some shit out during the break from school by the sounds of it.\n\nTapping the screen on my phone, Jamie restarted the song as I wound down; glad to see the grimness of a religious fanatic gone, replaced with humor. Looking down at his hands, I watched him formulate thoughts and listened as he spoke:\n\n\"I don't mind if I am. Like I said before, back when we first met, what does it matter? The world doesn't change, the universe doesn't care how I get off. I... I liked it, you having something to fuck me with. It was so much more intense than anything else I've ever felt.\" He looked up suddenly, eyes fierce. \"I don't care what he thinks anymore, I can't. I can't!\"\n\n\"And you shouldn't. Who cares if you're a manly man? I kinda would, actually, so I'm glad you're not.\" One of his arms crept about me, touching the band of the bra he wore the twin to as he brought me closer. \"You are Jamie and I'm so fucking happy for it. Straight, bi, gay, whatever else there is, I don't care. Ya wanna dress up? I'm down. Ya just wanna fuck? Sure! If there's anything ya wanna try, just ask. Cause here, we don't gotta worry bout what anyone else thinks.\"\n\nHaving given my little speech, I leaned in for a kiss and Stevie Nicks sang on as the mood shifted back, the ghost of Jamie's shithead father exorcised from my room. Gently, oh so gently, I pushed Jamie back down the bed and straddled him, seeing his nipples were once more standing to attention but the other part of him wasn't, couldn't.\n\n\"I still got surprises left if ya wanna try on more stuff or we could just get to it right now.\" I said, closing my eyes so I didn't have to see his boobs through the sheer bra. \"Please hurry and choose, I can't keep off ya much longer.\"\n\n\"Let's see what else you have.\" Rolling off him and nearly falling off the bed, I wobbled over to the closet, taking a much needed deep breath. \"And Gen, thanks. For all of this and not making a big deal about, you know.\"\n\n\"Been there, done that.\" The absolute fucking truth but now wasn't the time. \"Oh, does this mean I get to stick more things in ya butt?\" I peeked out of the closet, seeing Jamie smirking, playing with himself through the bra.\n\n\"Depends on my mood.\" What else could I do but laugh? He had discovered the perfect answer all on his own. Looking at the two hanging surprises, I didn't bother asking which he wanted as Jamie had picked gray for his underwear and that was enough for me.\n\n\"Close your eyes. And no peeking!\" I called out, slipping what had been sitting forgotten back at my parent's place off the hanger and making sure Jamie was following my request before stepping out with it. Holding what I'd hoped in vain for when first playing dress up with him, I told Jamie to open his eyes.\n\nI saw the rapid blink as he adjusted to the low light we usually operated in and the inhale as his breath caught, a hand rising to touch the flat above the swells of breasts. Jamie beheld the dress I'd worn mostly during sophomore and junior years to a few dances, a slinky gray that clung and was held up with two thin straps, leaving plenty of open space to show off boobage. I'd turned heads when wearing it but I'd spent most of that time flirting with Cass between dancing with the awkward or annoying boys who got the nerve to ask me. Only after the official dance did we get to have a turn, my choice of music playing as we swayed with each other in the safety of my room, skirts swishing against each other as she groped me in a way that would have gotten us kicked out at school.\n\n\"Where, how... Really?\" Jamie blurted all of that out, eyes wide.\n\n\"Of course.\" The tenderness I felt towards Jamie at that moment took me off guard. Now, looking back on it, he had spilled his guts about shithead father and sexuality, which couldn't have been easy. And his amazement towards the dress was genuine, honest. \"Want help putting it on?\"\n\n\"I don't know, needing help to get dressed isn't very manly...\" Jamie's grin made me want to tackle him and forget what I was holding but no, this was for him and I had to do it. Unzipping the back, I gestured for him to sit as I moved it towards his legs. \"I, um, Can I wear my stockings too?\" His face was burning hotter than the candle and he only looked away from the dress up towards me. \"I want to do this right and they're part of it, right?\"\n\n\"Of course.\" Handing the dress to him, Jamie grabbed the bodice ever so carefully and ogled it, I returned the closet where his stuff was in a little pile on one of the shelves. Taking his nylons, I tossed them from one hand to another, trading once I got back to him. With the same care he'd shown my dress, Jamie slipped the stockings on, reminded me of the last time he'd worn them and all we had done together.\n\nPooling the skirt on the floor, I held the back open as he stepped in, looking down with what might have been shock or maybe awe. In that swirl of emotion must have been something exciting as his dick was threatening to tear free of the lace but the panties held, somehow. Taking my time, knowing this was for Jamie more than me at this point, I raised the dress and covered his legs, butt, then back with the steely gray fabric, zipping the back up partway before slipping the straps over his shoulders. Then I secured him in something my Mom had told me I looked damn good in before issuing a warning about boys and sneaking away with one. Well, I was years late but I'd picked a good one to find some private time with.\n\n\"Oh wow.\" Still looking at Jamie from behind, I watched as he ran his hands up the silky expanse, from hips to under his bodice, then back down. Stepping beside him, I took one of his shaky hands in mine and lead Jamie to the ever trusty mirror that kept all our secrets. And there we both saw him in a fancy, swanky dress that screamed, at least to me, 'high school'. The skirt was brushing the floor, Jamie not wearing heels and being slightly shorter than me but that was a passing thought, quickly forgotten.\n\n\"Oh Gen...\" I saw his face fall in the reflection, lips quivering before twisting into a broken smile. I took him in my arms and held Jamie as he trembled, feeling a few tears fall to my shoulder before he drew back enough for me to see his face in the flicking light of the single candle.\n\n\"I'm sorry.\" He offered and I was shaking my head before he finished getting the words out.\n\n\"Don't be. I brought this for you and you look damn good in it.\" A blush flooded his face as he wiped his eyes, checking the mirror again. Not that I could blame him. His breasts filled out the top fully and it clung to his hips, giving a greater illusion of a figure that I approved of. There was also the bulge that really wasn't being hidden very well but that could be easily excused.",
        "Stepping over to my desk, I dug around for lip gloss and handed it over to a stunned Jamie, who looked at the tube then me as if in a dream.\n\n\"I'mma change real quick, get some of this on, okay?\" He nodded and I retreated back, flipping the closet light on and struggling into my own stockings before taking the second dress off the hanger. This was the prom dress, the most important thing a girl could wear during the most magical part of high school and both of those dances were 'meh' at best. Slipping into the black thing I'd last worn about a year ago, I adjusted the top and grabbed the heels off the largely empty shoe rack and rejoined a still stunned Jamie.\n\nThe bodice of my dress was tighter than Jamie's, with a V cut out of the middle to show cleavage and studded with little plastic prisms that caught the candle's meager light and almost seemed to glow. My skirts had a slit going up the sides, something a senior could get away with, I guess, as Jamie's dress didn't have any such thing. And I've already starting thinking of that gray dress as his. Jamie just looked so fucking happy in that thing, so why not give it to him?\n\n\"If ya dare, try these on.\" I dropped the shorter heels on the floor beside me and sat down, trying to remember the last time I'd worn heels. Probably for graduation cause the day after I was at Dick's, working for the summer to save up money for college and even left them at my parent's place when I moved in here. 'Cause I was tall, at least for a girl, I didn't go above an inch and a half but even that made me tower over most people.\n\nJamie got the shoes on and stood, wobbling hard and I offered a steadying arm but we both nearly fell. Laughing, Jamie shook his head and slipped out of the shoes, keeping me steady as I did the same.\n\n\"Next time. I think those are too small for me.\" Lips now shimmering and smiling, Jamie's spirits were high, stealing glimpses at the mirror every so often.\n\n\"If ya wanna learn, I'm sure we can find a cheap pair online and ya can strut all over this room and maybe even me.\" I wiggled my eyebrows at Jamie, leading him to giggle like a girl and my heart melted... just fuckin' melted. With my feet firmly on the ground, I stood and found the lip gloss, applying it while Jamie got to his feet and swayed in place, the skirt going to and fro as he watched.\n\n\"I love the way this feels.\" He noticed me staring and flushed further red, brushing hair out of his face and giving a sheepish smile.\n\n\"Don't you dare apologize.\" Giving him a pat on the ass as I walked by, I found my phone and kicked Fleetwood Mac back to life, setting the song to repeat before dropping my phone to the bed with the speaker facing upward, the sound clear and pure. Wrapping an arm about Jamie's waist, my other hand smoothly found his and just like that, we were dancing.\n\n\"I'm not good at this, I never-\" I cut him off again, not wanting his past or doubts creeping back in here in here.\n\n\"I don't care. We'll get it right and if not, well, I'm sure we can find something else to do.\" Choking back tears, Jamie kissed me before laying his head against my collarbone as we swayed, his breath warm and inviting on my skin.\n\nThe first time Dreams ended I moved my hand back towards his butt and he looked up at me before following suit. We kept dancing to a song that was older than my parents, back when Stevie Nicks was probably the hottest damn woman on the planet. When the second loop ended, Jamie raised his head from my chest and kissed my cheek, not turning away when my lips let his.\n\n\"Can I-\" Jamie started after our kiss ended but I was way ahead of him.\n\n\"Yes.\" I answered, knowing it would have to seriously be out there for me to refuse him.\n\n\"One of the dances I went to, I saw a girl doing this and...\" Letting loose of me, Jamie turned around faster than needed, skirts twirling as his hips swayed with the music, much more lively than before when he had been burdened by expectations of being a manly man. Wrapping my arms about him, I stepped close and felt his butt through two thin dresses and even thinner panties. And so we swayed together, his hands over mine as he slowly pushed back into me, a light, barely there moan escaping from Jamie as I applied the slightest pressure to what he was offering.\n\nI found his breasts without thinking about it or meaning to, slipping past the shimmery material and to the lace holding his boobs in place. Jamie's breath hitched and he pushed back harder, chest coming forward in my hands. This would have been the point a teacher would have stopped us but alas, high school was behind us and as adults, we were free to do this.\n\n'Thunder only happens when it's raining.' Stevie sang but I disagree, there, between Jamie and I there was lightning and thunder was sure to follow. I saw us in the mirror and with his back arched to give me full access to his butt, his masculinity was hidden by the skirt and there was no telling Jamie was cross dressing. Sure, we both lacked make up and the elaborate hair dos but if a bottle of wine was added we'd be the perfect picture of drunk white chicks just having a good time.\n\nJamie was growing more insistent and I had to move things along, the winter break had been long and dammit I needed this. Finally taking the hand not fondling a breast to his back, I teased the zipper down and Jamie emerged from the dress, looking much more comfortable with the situation. I kissed him as I got the zipper down on mine, Jamie watching as it fell to a dark pool about my feet.\n\nAnd then, in something that caught me off guard, he bent and picked up both, carrying them to the closet and I heard hangers 'clacking' as he hung them up. In a few steps, I got to the side of the bed that had the fun stuff under it and pulled the bag out, dumping the contents out as he rejoined me.\n\n\"I think that's the first time in the history of ever that's happened.\" Pointing the purple dildo at him, Jamie looked at that before shaking out of what had to be the pit of memory.\n\n\"What? They're nice and probably expensive and should be taken care of.\" Unable to help it, I laughed, finding that we were running low on condoms during. \"What?!\"\n\n\"Ya right, absolutely! Just, I dunno, normal guys wouldn't think of that. I mean, ya think Tom made sure his prom date's dress was off the floor before they did the nasty?\" A single eyebrow rose, this line of thought not amusing to him. I found it extremely telling to his priorities and just nice. \"Sorry! Sorry, anyway, whatcha want tonight?\"\n\nLooking at the floor, then lifting his breasts clad in a sheer lace bra, Jamie locked eyes with me and a grin broke through, one that spoke of trouble.\n\n\"Maybe I need to give being a man another shot. I might even get it right this time.\" I blinked, not catching what he was putting down. \"I want you to fuck me again. With that.\" He pointed at the dildo I was still holding and I frowned, catching him by surprise. \"What? I thought you'd want to.\"\n\n\"Well, yeah but I don't want to do it as a 'fuck you!' to your shithead Dad. I want to do it cause you want to, okay?\" Slapping hands over his face, Jamie leaned back and growled up to the ceiling. Eternal and lumpy, it gave no answer.\n\n\"I do! I just, I need to get out of my head, to stop thinking!\" He sounded desperate and I swept in, catching him in a hug and awkwardly sidestepping us closer to the bed.\n\n\"I can do that. Cause I got another surprise.\" We toppled over, Jamie with a squeak as I kissed him deep and hard, rolling on top. \"I did research over break on fun things to do with this.\" I tapped the dildo on his nose, Jamie going cross eyed to watch as it did so. My other hand went to his bundle of joy, taking my time in feeling how hard he was yet molded by something so fragile looking.\n\nI peeled, literally in this case, the panties off and the sigh of relief as he sprung free was adorable. Still, I found a rag shirt and put it under his butt, to catch the ensuing mess. Grabbing the lube, I cracked it open before tearing into a condom and slipping it over two fingers.\n\n\"I feel... Stupid? I guess?\" I mulled out loud, pouring the lube on my protected fingers and rubbing it in the dark trench of Jamie's crack, getting drawn out sigh from him.\n\n\"Why?\" He managed to ask, impressing me. It can't be easy to carry on a conversation when being prepped for butt stuff.\n\n\"Cause I spent the break working and being horny, looking at new and fun ways for us to fuck while you're dealing with ya sexuality.\" I refused to evoke Jamie's father, lest his spirit return to ruin things. After some feeling around, I found that entrance and, with more lube, slipped in. His moan and the jerk his tower of a dick gave pushed me to keep going, give him what he wanted but I had to go slow.\n\n\"You'd already dealt with it. I hadn't.\" Sure, he was having trouble getting the words out but Jamie was speaking his mind. Good for him. \"After that weekend, God! I had to come to terms with everything.\" Jamie had spread his legs without me needing to ask and I curled my fingers upward where all the articles said the prostate was and his speaking became more fractured as he struggled to say his piece. Or peace, I'm not sure. Never seen that saying written down before. \"I'd, oh, oh man, I'd asked for it and did it twice and you only once.\" Took a second but I figured he was talking about times taken up the butt during that long weekend together.\n\n\"That first time was so intense I thought it was a fluke, ahagn!, had to be. Nothing could be that good.\" Jamie said, his words still coming even as I kept finger fucking him. I wanted to hear what he had to say and that he was plowing past my best efforts was all the more impressive. He had to get this out and I would listen before bringing the dildo into the mix. \"But it was! Better even, cause it was easier oh God, what are you doing?!\"\n\n\"Making ya feel good.\" While awkward, I got my other hand on his penis that had been towering over what I'd been going and gave it a few good strokes. \"Keep talking.\" I said, hearing his rapid breathing and bit back laughter as he did what I asked.\n\n\"Okay, okay! I uh, looked and asked around and couldn't figure out if liking things in my butt made me gay. I, I knew I liked when I did that to you but the other way, I ugn! like that more.\" I let up rubbing that certain spot which stole away his words but kept my fingers in that hot, welcoming embrace of Jamie.\n\n\"Being gay means you're attracted to the same sex.\" Moving his dick in circles with a finger atop the slightly leaking head, I got nothing but silence in response to that. \"I take that's a 'no' then?\"\n\n\"Not really?\" Lifting his head, Jamie looked at me for a few seconds until he fell back. \"I love you and your shape, figure, all of that. Guys are flat.\"\n\n\"Except this.\" I gave his dick a stroke and put a tiny bit of pressure on that spot within him, getting a groan. \"Guys have this and I think that makes them interesting, don't you?\" Granted, fingers and toys could get the job done but sometimes the real thing wins out.\n\n\"Yeah but that's it, all they got. You're better, got curves and that!\" I let off his dick, not wanting Jamie to blow early. \"Gen, I'd never cheat on you with a guy.\" I snorted, hearing his earnestness and discarding it.\n\n\"I'm not worried bout that! Hell, if ya do wanna fuck a guy invite me along! Cause that'd be amazing, seeing ya get the real thing.\" Oh Jesus, even typing that out drives a burning spike into my brain and just... Fuck! \"Ya right about one thing: I got dicks for days.\" Having been lubing up the dildo, I withdrew my fingers and lined up the shot as if I was playing pool. Then, laying almost flat on the bed so I had the best seat in the house, I saw as Jamie swallowed up the dick up to its purple balls.\n\n\"Nggg!\" Leaving that sight behind, I crawled to his panting head and watched him for a few seconds, still glossy lips parted, shoulder rolled forward as his head was tossed back and there was no growl this time. No, he shuddered and there was a moan, one befitting someone who had been in a prom dress and was still in a lace bra.\n\nWithout much effort, I undid the bra and pulled it free, Jamie blinking and looking at me as if he'd forgotten I was still there. Taking a nipple in my mouth, I reached between his legs and past his erection to the dildo, beginning to work both.\n\n\"Oh fuck! I-I!\" Anything else became a lovely whimper, telling me just as much as all those words he'd managed until the dildo stole his speech away. But I wasn't done yet, his boob was just a detour. Finding the lube, I poured some in a hand and wrapped it about his dick, watching his eyes go wide at my touch.\n\n\"I've heard that being bi is the best of both worlds.\" I gave a few strokes, making sure he was good and covered before kissing the tip, the taste of not quite cherry but close enough coming back to me. \"And I think ya deserve that.\" Then all talking stopped as I had something more important to do with my mouth and his scream confirmed it. Jamie was getting it both ways, being penetrated and blown, the typical roles of male and female sex at once.\n\nJamie thrashed, arms and head seized by sudden needs to move until suddenly coming to a halt, the sounds of his breathing mingling with my wet giving head noises as I made sure the penis not in my mouth never stopped.\n\n\"Ah! I!\" There was nothing else it could be: Jamie was close and trying to warn me. Rising off his dick, I darted over and kissed him, my tongue running about his lips.\n\n\"Do it.\" Slamming in the phallus in faster and faster until my wrist hurt, I kissed his exposed neck as his head was swinging side to side, as if saying no, trying to deny his orgasm. \"Come on!\" With my demand hanging in the air, I took nearly the whole of what had been trapped for so long and lashed my tongue about until that salt tide flowed forth.\n\nJamie screamed, clawed at the blankets, went fucking feral as I pushed the dildo in to the balls and held it there as more and more was shot into my mouth, some of it spilling out or being swallowed as I had to breathe. Giving up, I chugged the whole load and rolled over on my back, gasping for air as my not exhausted hand went into my soaked panties and started what needed to be done. After what I'd seen, hell, done, it didn't take long.\n\nI was shot after that, laying there knowing things needed to be cleaned up but I couldn't bring myself to move. Until I heard a wet, lewd sound and a pitiful moan from Jamie and knew what I was going to see. Sure enough, without something holding the purple dick in place, it had slipped free and was now laying atop the shirt I'd put down, freshly fucked and not at all impressed.\n\n\"Uhh... That felt weird.\" His tired voice cracked and I knew what the both of us needed: Water. The ever trusty bottle was nearby and mostly full, it being split between us. And just like that, we came to life and started cleaning up. I wrapped the toy that had done so well and took it to the bathroom, using soap and nigh boiling water to ensure my dick was clean before being put away back under the bed. Jamie had taken off his stockings and was putting the whole outfit in the closet when I got back.\n\n\"I should be used to how that feels by now but I'm not.\" Jamie said in a conversational tone as I tucked the bag under my bed as he took his turn in the bathroom. Thankfully Donna was still gone, probably wasting her time at some party. Returning after a few minutes, I saw that he wasn't able to wash away the 'I just got laid' looked and I was pleased by it.\n\n\"I don't know what got fucked the hardest: my butt, dick or soul,\" he said in the same everyday voice, and I failed to bite back a snort while tying my shoes. Getting that done, I leaned on his shoulder and outright laughed when he slapped my hand creeping into his lap. \"No more of that, not tonight!\"\n\n\"Aww but Jamie, I need it!\" Whining as hard as I could, my act paled to the huge performance sigh Jamie gave while lifting his shirt to reveal the black comfy bra.\n\n\"You get these, nothing more.\" Said like a parent trying to placate their child, his eyes rolled as I clapped in glee.\n\n\"Yay, boobies!\" I didn't even bother to make a grab at them, laughter had found me once more and wouldn't let go. \"The fuck is wrong with us?\" I got that much out as Jamie shook his head.\n\n\"Pretty sure we're terminally weird.\" Standing, checking his pockets, Jamie helped me get to my feet and his crooked smile paired with red eyes told of a long, trying night. \"But you know what? I'm fine with that.\"\n\n\"Yeah, me too.\" I said, sobering up and finally shutting up Fleetwood Mac. Hand in hand we got out to my car and got it going, the night as dark and cold as any other we'd spent together. \"I was serious, by the way.\"\n\n\"About?\" Jamie said, hands in his coat as we stood in the cold for no reason other than to be on our feet. Less than an hour ago he had been in a dress and driven to tears by it. How quickly things change, especially when dealing with the public.\n\n\"Ya wanting the real thing.\" I smiled, seeing Jamie having trouble recalling the conversation. Meant I'd done a good job. \"If ya ever wanna try real dick, we'll figure out a way to make it work.\"\n\n\"I...\" Face red and not from the cold, Jamie looked at glimmering lights in the distance as I leaned against my car, not expecting any answer. \"That's a big step Gen. It's one thing to do this but... Doing that, it feel permanent.\"\n\n\"Like wearing those pink panties?\" I asked, knowing it wasn't the same thing at all but that world shattering event for him was tame after that Thanksgiving weekend.\n\n\"No. Yes. I think?\" Jamie struggled to say anything more but I stopped him from trying.\n\n\"It's too late for this soul searching shit.\" I said, getting a chuckle from him. \"I just wanted to let ya know that's possible, if ya want.\" Gesturing, we got in the car and started off for his dorm.\n\n\"What about you? Is there anything you'd like to try?\" Jamie asked and I was very, very careful in my answer. I hadn't been kidding about it being too late for this and my thoughts were a drunken tornado, having sucked up all the information from the night and throwing it every which way.\n\n\"I've still got ideas to try out.\" I made kissing noises in his direction and Jamie only rolled his eyes. \"We'll deal with this later, okay? I gotta get some sleep.\" With a kiss and a final searching look, he bounded up the steps and I watched him leave then drove back home. Haven't been able to sleep so I started writing this and it's done the job I'm so fucking tired and gotta work in the morning but how brave of Jamie to admit not being straight to himself then me."
    ],
    "authorname": "Joshana",
    "tags": [
        "blow job",
        "college",
        "cross dressing",
        "erotic",
        "female dominate",
        "male submissive",
        "romance",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/finding-the-perfect-fit-pt-15"
}