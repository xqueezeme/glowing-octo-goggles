{
    "title": "The Mystic Adventure Ch. 03",
    "pages": [
        "(This is part three of the Mystic Adventure Series. Please consider starting from the first part to get the full story.)\n\n*\n\nI was roused from my nap by the sound of the outboard motor on a dinghy as it zipped by. By the looks of the sun and the sky, I figured I'd been out for about an hour. Kelly was still snuggled up next to me with her hand on my chest and her hair tickling my nose in the gentle breeze. \n\nShe stirred at the sound as well and we both slowly came awake. I watched her wake up and simply enjoyed studying her while she re-registered her surroundings. Maybe I just have no self-esteem but I think I was worried that the nap would have somehow erased this \"relationship\" that we had seemingly been building over the last few days. \n\nI needn't have worried. \n\nShe turned her head up to look at me and broke into the most beautiful smile I'd ever seen. She pushed herself up and rolled on top of me so she was straddling me as I lay back on the cockpit cushions. She just looked at me for what was probably only 5 or 6 seconds but it seemed like an eternity. Then, she simply bent down slowly and kissed me. I was completely caught off guard. The kiss was not a tonsil-bashing make-out kiss. It was a tender, moving, meaningful kiss and it totally disarmed me. \n\nI don't know that I was expecting a make-out kiss but it was what I was prepared for. I wasn't prepared for this. This was not a foreplay kiss - something to get things warmed up for the next level. This was not a slutty, teasing kiss that was part of a role she was playing. This fucking *meant* something. This was the kind of kiss that you don't play around with. The kind that's like a loaded weapon - one you don't just whip out casually or someone might get hurt. \n\nIt caught me off guard but not for long. It triggered a response in me that I could only hope was the same thing that was driving her. I just wanted to drink her in through my mouth somehow. I could feel her on top of me of course and I knew she was in a tiny bikini with her cunt just inches from my cock but I was beyond that. I was focused only on her...what?...her fucking soul or something. Fuck, I don't know. It all sounds so artsy and feebly poetic to try and describe it but it was absolutely the most intense feeling I've ever had. \n\nThe kiss lasted for several minutes - I think. Like a dream that only actually runs during the last two seconds of sleep, it could have been much shorter. But also like that dream, a hell of a lot of strange and wonderful things happened in the duration. Kelly eased her mouth slowly off of mine but went back for a few more tender brushes that conveyed even more emotion and meaning. With these kisses was she saying the same thing I was saying? \"I can't get enough of you\"? \n\nShe finally pulled her head back and looked in my eyes again. Her impossibly blue eyes sucked me in even further and I was back to seeing her soul again. Fuck. \n\nAs she looked at me, she made the tiniest of tiny nods with her head. I wasn't even sure I was seeing it or if it was just from the motion of the boat but it was like she was answering me. And just as I was really beginning to think I was losing all sense of reality and reading waaay too much into everything, her mouth said \"Yeah.\" She didn't actually *say* anything, and it was only the smallest of movements of her lips but I know what she said. \n\nMy head spun.\n\nWhat the fuck girl? Are you really answering these questions I'm thinking at you? I'm head over heels for you, do you feel it to?\n\nYeah.\n\nDid that really mean something for you like it did for me?\n\nYeah.\n\nAre you falling...in love with me?\n\nYeah.\n\nFuck.\n\nYeah.\n\n\"Hey guys, what's on the agenda for this afternoon?\"\n\nJesus Christ! I think the space-time continuum might have suffered a rip as I was teleported back to the real world by Kim's voice.\n\nKelly could have easily disguised our little \"moment\" and made the whole thing look like a continuation of the kind of playfulness we'd all been enjoying since day one but she didn't. She kept her gaze on me for a few more seconds and only slowly started turning her head towards Kim while keeping her eyes still on mine for as long as possible. The message was unmistakable and Kim didn't miss it. \n\nWhen she and Kelly looked at each other, I saw Kim's face change ever so slightly. She instantly knew that something had changed in Kelly and it was like it was something that she had been waiting to see in Kelly for a long time. Kim visibly brightened and I looked up to see that Kelly was smiling right back at her. I could almost see the comm link between the two of them - or whatever the fuck it is that lets women do all that intuition magic that they do. \n\nThe transmission lasted a few more seconds and then Kelly turned back to me. \"I don't know. Brad? What's the plan?\"\n\nPlan? You want a Plan? After my whole fucking world had been turned upside down, shaken, stirred, and basically totally reshuffled? You want to know what the fucking plan is?\n\nOf course I didn't say any of that. I stumbled and ummmed and tried to think back to what I had been planning this morning at breakfast.\n\n\"What do you say we head over to the Baths?\"\n\nKelly did a double take, \"The Baths? What, the shower wasn't good enough earlier?\" She smiled at me and leaned down and licked my lips. \n\nGod. I could revel in being surprised by the actions of this girl for the rest of my life.\n\n\"Umm, no. I mean, yeah, it was fine. Great! I mean, no, the Baths are a rock formation on Virgin Gorda. There are these huge boulders right on the beach that form little grottos that you can poke around it. It's pretty cool.\" \n\n\"Ooh, that sounds fun. How long will it take us to get there?\" Kim had picked up the chart book and was trying to find out where we would be going. \n\nI got up and flipped to the page with Virgin Gorda and showed her where the Baths were. \n\n\"It's probably about an hour or so sail over and it should be an easy reach - no tacking back and forth to go upwind. I figured we could sail over and mess around there for a while and then head up to Gorda Sound here at the top of Gorda. We can have dinner at the Bitter End Yacht Club.\"\n\nKelly looked at me like I was making a joke, \"The Bitter End Yacht Club? Are you serious?\"\n\n\"Yeah. It's actually a pretty swanky place. I know you have those little cocktail dresses and it would be a shame to have them and not use them right?\"\n\nKim and Kelly looked at each other and smiled. \n\nYup. There he is. Yeah, he gave me some time to get all emo and fall in love with this girl but you know he wasn't going to just wait patiently down there for some kind of written invitation right? Nope. He's back on the job, envisioning clingy party dresses, with perky nipples standing up and thong underwear splitting assess that are begging to be caressed. Oh man.\n\n\"Sounds cool,\" Kelly said as she gave me another peck on the cheek. \n\n\"Ok then. Let's make sure things are stowed below and then you girls can come up and I'll show you how to raise the anchor.\"\n\nI fiddled around in the cockpit, taking the covers off the instruments and generally making sure we were ready for our sail over to Gorda. The girls went below and put away a few things that were left out from lunch. A few minutes later, they came back up top, ready for the sail.\n\nI led them up to the foredeck and opened the anchor hatch on the bow. Inside the hatch was a small remote control for the anchor windlass with two buttons - one for up and one for down. You used to have to manually haul up all that anchor chain - or hand crank it up on a winch - but again, modern technology takes over and makes things much easier. Old salts would call it cheating but I'm not an old salt - yet.\n\nTechnically, I could handle all this myself. I had dropped the anchor when we had come in yesterday. If there's not much wind, and not many boats around, it's not a big deal to leave the wheel, go up on deck and drop the hook. I wanted to get them involved in the operation of the boat though so I showed them the process. \n\nI went back to the cockpit and fired up the engine and then gave them the signal to start raising the anchor. The electric winch kicked in and started pulling the chain up and dumping it into the open hatch. The act of pulling up the chain pulled the boat ahead until it got right over the anchor. As soon as the anchor pulled free of the bottom, the boat started to drift but since there weren't any boats that were very close, it was easy enough to get the hook all the way up and nestled in its chock before putting the boat in gear and heading out of the cove. \n\nWe repeated the process of raising the mainsail and unfurling the jib - the girls remembering everything like they had been doing it all their lives. I could tell they were proud of themselves for not needing to be told what to do. I was alternately impressed by how fast they had picked up what to do and transfixed by seeing them move around and bend over in their skimpy suits and gauzy shirts. \n\nBoth girls were amazingly light on their feet. Getting your \"sea legs\" usually takes at least a few days and most people stumble around at first but these girls had no problem at all. \n\nThey got the sails up and trimmed and I cut the engine - that moment of Zen that I love so much. Kelly looked back at me, beaming. Is it really possible that she feels all these things the same way as I do? Weird.\n\nThe girls grabbed some cushions and moved up to the high side to relax. It was basically a straight shot over to Gorda so they didn't need to do any further sail trimming. They both lay down next to each other and engaged in a conversation that I couldn't hear. Every once in a while, they would laugh and hug like old friends reconnecting. \n\nI guess it started with a quick little kiss. It was a casual enough kiss - one between two friends who were enjoying a fabulous day in the tropics. Yeah, that's how it started. \n\nIt's a straight shot over to Gorda like I said but anyone who was tracking my course would have thought I couldn't follow a straight line if my life depended on it. It's much more difficult to sail a large yacht when you are mesmerized by two women who are ever so slowly starting to caress and touch each other. \n\nThe two girls were lying perpendicular to the length of the boat. Their feet were pointing out to the side, heads towards the centerline. Kelly was closest to me and had turned on her side to face Kim so all I could see was her back and butt in her little bikini bottom. She had propped herself up on her right arm and was gently caressing Kim's belly, breasts, and face. Every once in awhile, she would bend down and give her a long kiss. \n\nKim's hands were caressing Kelly as well. I think she liked Kell's ass as much as I did because she would constantly reach around and rub her buns and slide her fingers underneath the fabric. \n\nYeah, man. Just steer 95 degrees. You can do it. \n\nKelly rolled over on top of Kim to get a better angle of attack on her mouth and Kim yanked the string on the back of Kell's top to let her tits hang free. \n\nAt this point, I could probably hold a steadier course by letting my dick stop the spokes of the wheel from turning since my hands were clearly not up to the task.\n\nKim reached down to Kelly's suit bottoms and untied the ties on each side. She then grabbed Kelly's hips and pulled her up, along her stomach, past her tits, and up to her mouth. Kelly's suit bottom had come off at the beginning of the trip so she left a trail of cunt slime all the way up. Jesus Fuck, it was all I could do to hang on to the wheel and not go over there and lick that up. \n\nKelly leaned forward and grabbed hold of a rail on the cabin top and slipped her cunt over Kim's nose and mouth. She looked straight back at me as she did it and I flashed back to this morning when I had my dick in Kim but I was actually *fucking* Kelly. She basically just did a \"Right back at you Dude\" move and I was loving every second of it. \n\nI was torn between looking into her eyes as she locked them on to me, and glancing down at her cunt as she ground it into Kim's face. Kim was totally slicked up with Kell's juices and I'm not really sure how she even managed to breathe. \n\nKim would alternately push Kell down a little so that she could lick up her slit and all around her clit. Then she would pull her up and slide herself down so that her nose would rub Kell's clit and then slide into her cunt. This meant, of course, that Kim's tongue was able to flick around Kelly's asshole. Each time this happened, Kelly would shudder and gasp but she never took her eyes off of me. \n\nI had to tear my attention away from this scene when I realized that the sails were luffing. I had slowly been heading more and more off course and into the wind. I quickly turned back to re-fill the sails and keep us moving, and looked for any boats that might be getting close. Man, that's bad. It's not like I could run aground out here or hit a rock but it's not good to lose track of navigating for so long like that. I've got to keep focused.\n\nI glanced back at Kell. Yeah, right. Like focus on sailing is gonna happen. I was sucked right back into the porno happening on the deck in front of me. \n\nKelly was just about at the brink when she stopped and slid back down Kim's chest? again leaving a trail of spunk that glistened in the sunshine. Kelly smashed her face into Kim's and licked all around, adding spit to the slippery slime. Jesus.\n\nKelly moved off of Kim and rearranged the cushions so that she could lay lengthwise on the boat, with her head back towards me. Kim got the message and wriggled out of her bikini bottoms and swung her leg over Kell, dropping her cunt onto her mouth. So Kim's ass was facing me and I could see Kelly going to town on her cunt and asshole just like she had been getting from Kim. Kim also went back to work on Kelly but was having trouble concentrating what with the action happening between her own legs. \n\nI don't know, in my vast experience with girl-on-girl sex - which up until now, had consisted of watching it in pornos - it's one thing when the receiver just lays there while the giver does the licking. It's quite another when, as what was happening now, the receiver, as it were, is actively grinding her own cunt on the \"givers\" face. Now *that* is fucking hot. \n\nI think that might be why so many guys find girl-girl sex so arousing. There's no guy with a dick in the scene \"forcing\" the performance so to speak. It's just girls being lustful for lustfulness's sake and yeah, that's hot. \n\nI forced myself to check the course again and found that I hadn't drifted too far off this time. \n\nI could hear Kim's breath getting shorter and little moans and groans coming out. In a few short seconds I saw her tense up and pull up slightly from Kelly's mouth to be able to cope with the orgasm. Every couple of seconds, she would drop her cunt back down to within range of Kelly's reaching tongue, get a quick lick, and raise back up. \n\nFuck. Me.\n\nKim finally turned around and lay down next to Kelly. They talked and caressed each other for quite a long time before sitting up. Kelly looked back at me and smiled her beautiful smile. \n\nFuck. Is there anything better than a woman who is at once someone you'd want to meet your parents and be the mother of your children, and at the same time, perfectly willing to break every sexual boundary you could imagine? Yeah, no. I don't think so either. \n\nKim got up first and headed back to the cockpit. \n\nShe wasn't wearing any pants.\n\nShe smiled at me, \"I'm gonna grab a beer. Want one?\"\n\n\"Um, yeah. I think I could use one.\" I stammered.\n\nKelly made her way back to the cockpit too and she didn't bother to put her pants on either. She *was* wearing her white, gauzy shirt but it was doing a very bad job of covering her tits since her top had been untied early on in the preceding show. She came back to the wheel where I was standing and stuck her tongue in my mouth. \n\nShe hadn't bothered to wipe her face so I got the full effect of Kim's cunt, some saliva, and whatever the fuck that smell of hers is that drives me crazy. \n\nShe pulled away from me, \"Can I try sailing the boat again. That was really fun yesterday.\"\n\nOK, now you are purposefully teasing me girl. That's cruel.\n\n\"Yeah, sure.\" I started to get up from my seat behind the wheel to let her sit down.\n\n\"No, stay there. I think I need to sit in your lap so I can see over the cabin.\" \n\nOh man. Here we go...\n\nShe came around behind the wheel and made a show of sliding her ass down my chest and into my lap. \n\n\"Oh. What's this? Brad, where you watching us up there? Weren't you supposed to be concentrating on getting us to the Baths safely?\n\n\"It seems like your pants are kind of tight. Do you want me to help you out of those before I take the wheel?\"\n\n\"Uh, yeah. That'll work.\"\n\nKelly stood up, bent forward, and reached between her legs to grab my shorts. This, of course, thrust her ass in my face and I couldn't help but to give it a quick lick. \n\n\"Now, now. Concentrate on sailing Brad.\"\n\nWhen my shorts came down, my dick went up and brushed against her arm as she pushed them to the cockpit floor. She grabbed my cock with her left hand and just sat right down on that fucker like she was dropping into a chair. \n\nShe was still slicked up from Kim's ministering that it was like sliding into satin. Christ.\n\nShe grabbed the wheel, \"What course are we steering?\"\n\n\"Uhh, 95.\" Very cute Kell. You know you are killing me right?\n\nMy cock was buried to the hilt in her cunt and I was dying to start thrusting. The thought of sliding in and out of her was blowing my mind. She didn't move though. Actually, she didn't move on the outside. I slowly became aware of her ever so softly squeezing me with her cunt muscles. At first, she waited a long time between each squeeze so I didn't even really realize she was doing it on purpose. Each time though, it would get a little stronger and a little closer to the last one until I figured out what was happening. \n\nNow I've had girls squeeze my cock in their cunts before but this was different. She wasn't just squeezing me all together. It was more like a ripple effect where the added pressure would start at the base and travel up to the tip of my dick and then repeat. It was like she was sliding up and down without actually moving. I was simultaneously amazed at her technique and going crazy at the feeling. \n\nI had let go of the wheel and grabbed a handful of tits and was caressing them when Kim popped up out of the cabin with three beers. \n\n\"Looks like you don't have a spare hand for this beer do you Brad?\"\n\nBefore I could think of a witty comeback, Kelly piped up, \"Hey Kim, you didn't get a chance to sail the other day. You should try this.\" She slid up off of me and reached out to take a beer. \n\nWhile Kim had obviously seen that I was fondling Kelly's tits, she evidently didn't realize that Kelly was sitting on my cock which was now standing straight up. She gave a startled look to Kelly and then back to my cock and then back to Kelly. I think she was a little surprised that Kelly was \"sharing\" after what had clearly taken place earlier today. Frankly I was a little surprised as well. \n\nKelly answered her questioning look by wrapping her arms around Kim and kissing her deeply. I guess that means The Pact is still on.\n\n\"Here. Come over and sit in this nice little seat and let Brad show you how it's done.\"\n\nKelly led Kim over to me, turned her around and then bent down to grab my cock. She positioned it straight up and guided Kim down onto it in one easy motion. She raised up and kissed Kim again and then leaned back to me to stick her tongue in my mouth like she had developed a habit of doing. ",
        "She pulled her tongue from my mouth and licked around to my ear. \n\nShe set another record for the number of times she had thrown me for a loop when she whispered, \"I love you.\"\n\nShe sat back and reached for her beer as I sat stunned, trying to focus on what just happened while Kim writhed like a Gypsy on my dick. \n\nI looked at Kelly just looking at her beer, sipping it slowly. She finally looked back at me and smiled. I know I've described each of her smiles as the most beautiful one I've ever seen but they truly did get better each time. This one was like \"I've been waiting to admit this to myself and I wasn't sure when to say it but now that I have, I'm happier than I have ever been in my whole life.\" Okay, that's what it looked like to me - probably because it was exactly what I was thinking about her. \n\nIf it makes any sense, it was even more meaningful due to the fact that Kim was sitting on my cock grinding her ass into my stomach. It was like, at this point, nothing else mattered. Even something as relationship-testing as fucking someone else didn't stand a chance against the connection that had formed between us. Like, \"Here, test the tensile strength of what I just said. I'm not worried at all.\"\n\nI'd never even thought about it that way but it was instantly crystal clear. I refocused on Kelly who was still looking into my eyes and smiling. She knew. I knew. \n\nI mouthed, \"I love you.\" \n\nShe mouthed, \"I know.\"\n\nFuck.\n\n\"Hey Brad, I'm really not sure if I'm doing this right,\" I was snapped back to reality as I realized that I had once again, become completely oblivious to the rest of the world and the rather important act of sailing this boat. Kim was trying to keep us on course but she was having trouble concentrating too as she bobbed up and down on the dick that was impaling her. \n\nI refocused on the boat and got us back on course as Kim simply let go of the wheel and concentrated on driving her ass through the back of my spine. \n\nKelly put her beer down and slid over closer to us. She took a quick lick on Kim's right boob and then shifted her mouth to mine. At the same time, she reached down between Kim's legs and grabbed my balls. They were totally slicked up with the cream from both girls' ride. She evidently moved up to Kim's clit because Kim's breathing quickened and she started bucking with more abandon. \n\nKelly moved back to Kim's mouth, licking her sensuously and sweetly. Kim lost it and had a shattering orgasm, which I could feel pulsing around my cock. It almost sent me over the edge but I somehow held back. I think the fact that I was trying to keep focused on the boat and keeping us heading in the right direction had something to do with it. \n\nWhen Kim calmed down, she rose off of me and pretty much collapsed in the seat cushions on the starboard side of the cockpit. Kelly handed her her beer and kissed her again, almost like a mother tucking in her child. I know that sounds weird but it's what I thought of as I watched it. \n\nI looked up again and realized that we were pretty much at the Baths and really needed to start thinking about getting the sails down and finding a place to drop the hook. \n\n\"Hey Kell,\" She looked back at me and I nodded towards the looming island.\n\n\"Oh shit! We're here? That was fast!\" \n\n\"Can you take the wheel while I get the main down?\" I stood up and moved out from behind the wheel to let her take over. \n\n\"Yeah, but uh Brad. You may want to, you know.\" She looked down at my slightly softening cock waving in the breeze for all the tourists at the Baths to see.\n\nI looked down, \"Oops! Damn! You girls left me high and dry and I didn't even know it!\" I pulled my shorts up and tried to get my dick tucked in without too much discomfort. \n\n\"Here, why don't you let me help you get rid of that stiffy a little quicker.\"\n\nWith that, she knelt down in the cockpit and attacked my cock with her mouth. The fact that it had just come out of Kim a few seconds ago qualified it for the pussy-to-mouth fantasy. Check. \n\n\"Kell. We've...really...got...uhhh...to...get...these...sails...down,\" I said as I struggled to maintain focus on not putting us on the rocks. \n\nKelly pulled my dick out of her mouth and looked up at me. \"Well, you better finish then. Here, help me out.\" She grabbed my hand and put it on my cock. \"Jack that thing off. I won't spill a drop.\" \n\nFuck.\n\nMy cock was a spit and come covered mess which meant that my hand had plenty of lube to work with for fantasy number two. Would that be Jacking off into a girls Mouth? Ding, ding, ding!\n\nAs I looked down at her with her mouth open and eyes on me - apparently eagerly awaiting the blast, it only took two or three strokes before I could feel the build. It wasn't a slow build this time though. It pretty much hit me like a truck and I pasted the back of her throat with two quick blasts the almost made my knees buckle. She closed her mouth to swallow just as I launched the third blast so it hit her square in the lips. She quickly opened up again to take the fourth blast and then licked the cum from her lips before swallowing my cock again to get the remaining bit.\n\nShe licked me clean and then looked up at me, smiling around my dick which was still in her mouth. \n\nI must have looked like a fool because I think I was just staring at her with my mouth open in amazement. \n\nShe pulled my cock out of her mouth and gave it a tiny little kiss on the head and then bent down to pull up my shorts. \n\n\"OK, now that that is taken care of, lets get this boat anchored so we can go explore the Baths. OK Brad?\"\n\n\"Fuck Kell,\" was all I could say.\n\nI heard Kim give a little chuckle and looked over at her still recovering from her fuck ride. \"Gee Kim, you're such a slut,\" she said, mocking Kelly's quips about her actions earlier. \"I'd say you are giving me a run for the money in the slut department Kell.\"\n\nKelly looked over at Kim and laughed. \"Touche,\" she said with a smile. \n\nWe managed to get the sails down and the anchor set and then started gathering our things for the trip to the beach to explore the Baths. \n\nThe girls both pulled on little lycra bike-short shorts over their bikini bottoms and tanks over their tops since there were lots of families on shore and they didn't want to stunt anyone's growth. Of course, the shorts were the kind that are so tight that the rear seam is pulled into their butts -- accentuating their buns and causing a growth of another kind on me. \"I really don't think I can take this,\" I muttered to myself as the girls bent to get into the dink.\n\nAs we got closer to shore, the girls got a sense of these massive boulders that appeared to be thrown together, and how they formed the caves and pools. \n\nWe beached the dink and spent a good hour exploring and scrambling around on the giant rocks. The grottos that were formed from the rocks leaning together kind of reminded me of the grotto at the Playboy Mansion - no, I've never been there - saw it on TV just like you, smartass. It would have been a killer location to have a quick fuck but there were way too many people around for that. It did however, spark another idea.\n\nI gradually guided the girls to the extreme end of the rock out cropping until we came to what looked like a giant cliff blocking any further travel south along the beach. The cliff extended out quite a ways into the water and, while you probably could swim around it, the waves crashing on the razor-sharp coral heads made that seem less than smart. The face of the cliff was practically straight up as well so there wasn't a way to get over it. \n\nBoth girls turned to me with a look that said \"What the Hell?\"\n\n\"If you guys are up for a little adventure, there's a special little place just on the other side of this cliff.\"\n\nThe girls looked back at the cliff. Looked up. Looked out to sea. Turned back to me with a look that said, you guessed it, \"What the Hell?\"\n\n\"There is a little passage under the cliff just a few yards off the beach. All you have to do is take a breath, dive under, give a few kicks and you'll pop up on the other side. I think you'll think it's worth it if you want to give it a try.\"\n\nI saw Kelly looking out along the cliff, trying to find the spot. \"Look, right there, you can see a little light blue spot. That's the sunlight from the other side.\n\nKelly turned back to me, \"So we swim through a tunnel?\" She seemed hesitant but intrigued. \"What exactly is on the other side?\"\n\n\"It's a surprise but I think I know you two pretty well and I'm pretty sure you'll be glad you took the risk. Not that it's really a risk.\"\n\nOne more look at the cliff, back at me, over to Kim, and a shrug of her shoulders. \"I'm in.\"\n\nI led the girls out into the water to a point where it was about chest deep. \"Okay. We didn't bring masks so you're going to have to open your eyes in the salt water. It might sting a little but you'll be fine. Just take a deep breath, dive down, and pull strongly through. Don't stop halfway or you'll float up and smack your head on the ceiling of the passage. Got it?\n\n\"I'll go first to make sure everything is okay. I'll come right back and then I'll go through with each of you okay?\"\n\nKelly looked excited but nervous at the same time. Just as I looked over at Kim, she said \"Fuck it,\" and dove down and into the tunnel. \n\nShit. I was pretty sure that there would be no blockages or other dangers in the passage but I really wanted to make sure myself first. I dropped down under water to check the passage and didn't see Kim hung up on a rock or anything so I came back up next to Kelly who looked even more worried now.\n\n\"She'll be fine,\" I said rather weakly.\n\nAs I was standing there wondering whether to follow after her and leave Kelly on this side or wait for her to come back, Kim popped up right next to us giving Kelly a start.\n\nKim pulled her hair out of her eyes and looked at me and then Kell. She uttered her signature line that indicated her approval - \"Fuck. Me.\"\n\n\"Kell! Come on! You have to see this!\" She grabbed her arm and took one of those exaggerated breaths while looking at Kim - the kind that practically forces the viewer to take the same breath. Kell did, and the both dove under and swam for the passage. \n\nIt all happened so fast that I was caught off guard. I gave them a few seconds to get clear and followed them under.\n\nOn the other side, I came to the surface and saw the two girls looking around in amazement. I had been shown the passage and the destination it lead to several years ago and had thought at the time that if I ever got back here, it would be a fantastic place to take a woman. \n\nWe had arrived at probably the most secluded, spectacular beach there could ever be. It was a short strip of white sand the consistency of powdered sugar and was walled in on the South side by another cliff like the one we had just swum under. The beach ran up to a dense stand of palm trees that drooped lazily toward the water, providing just enough shade to keep things cool. It was like our own private paradise.\n\n\"Brad! Look at this sand - it's amazing!\" Kelly was basically rolling around in it and pretty much looked like a powdered donut. \n\n\"Hey Kell,\" Kim had found a nice spot under a palm tree a little further up the beach. \"Fantasy Island!\" \n\nKelly stopped rolling around and looked at Kim. \"Oooh, yeah! You're right!\"\n\nI had no idea what they were talking about. Yes, it was like a fantasy but it's like they were talking about something else. Kelly rinsed herself off in the water and came over to me. \"Do other people come here?\"\n\n\"I don't think many people know about it. When I was here last, nobody else was here. You have to know where it is and that passage is a pretty good filter for the casual tourist.\"\n\n\"So, umm, Kim and I kind of have this fantasy that we've always talked about,\" she started, \"and this place is straight from it. Do you think you could help us live it?\" She gave me the puppy dog eyes. How could I refuse? \n\n\"Oh man. I'm about to go on a wild ride aren't I?\"\n\n\"Yes, Brad. Yes I think you are.\" She grinned at me and told me what I needed to do.\n\nOh, Fuck.\n\nKelly looked up to Kim and gave her a thumbs up.\n\nI headed down to the water.\n\nThe fantasy was that they were on vacation (check) and were lying out on the beach (yup, we can manage that) when a dashing stranger (that's me) mysteriously rises out of the water, comes ashore and ravishes them without saying a word. When he's finished, he just quietly disappears back in the water. \n\nOkay, it seems a little corny but most fantasies are when you really think about them. And I'll be damned if I'm going to make fun of it after just getting cast in the starring role. \n\nKell wanted me to wait in the water for a bit and then just come ashore since I couldn't really just *appear* out of nowhere like in the fantasy but I had a better idea. I slipped underwater and swam back through the passage way, leaving them alone on the beach. \n\nI took my trunks off and stashed them behind a rock and waited in the water. I was supposed to wait to come ashore just long enough for them to pretend that they had been sunning themselves all day but I wanted to string them along for a \"truer\" affect.\n\nAfter about 5 minutes, I took a big breath and swam under. I figured I would play the role to the hilt so I swam under water a little closer to the beach so that I could crouch just below the surface and slowly rise all the way up. I envisioned the Daniel Craig in the James Bond movie where he comes out of the surf with streaming and glistening off his muscles. I told you, I swear, I'm not gay but that scene was pretty hot - just sayin.\n\nI figured that was about the look that the fantasy guy would have. \n\nI got to a good spot and slowly rose up out of the water - barely making a sound. Despite them knowing what was going to happen, I think I actually surprised them. I saw Kelly look at my face and then down my body and back up at my face. Her mouth opened slightly and I saw her take in a sharp, short breath. She seemed like she just melted.\n\nI laid it on thicker, I locked my eyes alternately on Kelly and then Kim and slowly but purposefully, started moving towards them.\n\nThey were totally naked.\n\nMy cock twitched.\n\nThey were leaning back on their elbows. \n\nMy cock grew.\n\nAs I came up to them, in one continuous motion I kneeled down and wedged in between Kelly's legs, came down on top of her and simultaneously stuck my tongue in her mouth and my cock in her cunt. A no hands insertion can be a tricky, dangerous stunt but I have to say, I nailed it. I felt another sharp intake of breath around my tongue as I pressed Kelly to the sand and I heard the same thing from Kim right next to us. \n\nI held my tongue in her mouth for a few more seconds and then rose up and pinned her shoulders to the beach. I locked onto her eyes and slowly pulled my cock away until just the tip was touching her pussy lips. \n\nI held it there. And looked in her eyes. \n\nThere was no sound. \n\nNothing existed except her and me.\n\nI slid my cock slowly back into her and then slowly pulled out. \n\nI poised again at her lips, still locked on her eyes, still pinning her to the beach. \n\nI slid in again. And out again.\n\nShe was like liquid velvet. \n\nI slid in again a little faster this time. A little faster the next.\n\nIn a couple of strokes, I was pretty much slamming into her. Each time, gasped a breath out and then back in as I came up. \n\nI'm not exactly sure of the definition of \"ravish\" but I was taking my best shot at what I thought it was and I think it was working. \n\nI kept going harder and faster and just when I figured she was getting close to coming, I pulled out, crawled over her to Kim and stuck my cock in her mouth. I swung my left leg over her head, spread her legs apart, and buried my head in her snatch. \n\nI think she enjoyed what she had been watching because she was totally wet. I slid my tongue down along her clit and jammed it in her cunt as she sucked my cock. She tried to get her head moving up and down on my shaft but I just drove her head back down on the beach so all she could do was hold it there and swirl her tongue around it. \n\nI pulled my head up and grabbed the backs of her knees and pulled them back to me which raised her ass off the sand giving me better access to her asshole. I licked back and forth from her cunt to her ass, coating her and my face with her spunk. \n\nKim was starting to breathe faster and faster as I basically rubbed my face in her cunt. When she got to a point where it seemed she was almost ready to come, I stopped. I pulled my cock out of her mouth, spun around and plunged it into her cunt. I reached over to Kelly, grabbed a handful of hair at the back of her head, and pulled into a slimy, three-way face licking. \n\nAfter a few pounding strokes into Kim which brought her to the brink again, I pulled out, stood up and, still with a handful of hair, shoved Kelly's mouth on my dick. \n\nI was totally in character now. I grabbed her head with both hands and started fucking her mouth like I had been slamming her cunt. I had a brief fear that I might be hurting her but she was taking everything I could throw at her so I said \"fuck it\" and kept banging. I don't really get into the choking scene you see a lot of in porn lately so I wasn't trying to do that but it felt what, primeval or something, to be just dominating this woman - both these women - like this.\n\nI pulled out of Kelly's mouth and pushed her down on her back, on top of Kim. I moved to between their legs and forcefully arranged them so that they were lined up on their backs on top of each other so that I had two cunts to fuck just by moving up or down. \n\nNormally, sex on the beach, while sounding very romantic, is actually quite unpleasant. As anyone knows, beach sand gets everywhere and when it gets in the wrong places, it fucking hurts. This sand however, was truly like powdered sugar. Whatever sand got in the wrong place, simply mixed with the fluids that were already there and just made it a bit thicker - kind of like corn starch in a gravy!\n\nI worked back and forth between both cunts - pounding them as hard as I possibly could. I brought both girls to the brink yet again and stopped yet again. I crawled forward, dragging my cock across Kelly's belly and up to their faces. They both attacked my dick and licked and sucked it for all they were worth. I slid back down and licked more slime off of their faces as I slid back into Kelly before starting the alternating pounding again. They were back to the brink again in no time and frankly, so was I. \n\nJust the admission to myself that I was that close, and the realization of the raw debauchery of this whole episode was all she wrote. I started pounding even harder.\n\nI think Kim came first and that set Kelly over the edge which in turn pulled my last trigger. I let out a roar that echoed off the cliff walls and sounded like a fucking caveman and exploded into Kelly. After the second shot, I pulled out and slid my cock down, hammered it into Kim and exploded again. Both girls were moaning and writhing around on each other and against me in the slick that was between their legs. \n\nI continued to spurt a few more times and rammed my cock back into Kelly one last time. I felt like just slumping on top of them and lapsing into a coma but I needed to finish the fantasy. I wasn't quite sure my legs would actually work but I pulled out and rose up off the girls. I stood there looking at them and they looked up at me, still short of breath. I turned and walked slowly back into the water until it got to my neck and then I just slipped under and swam back through the passage to the other side. \n\nI popped up on the other side and gasped for air. Damn! Not only was that mind-blowing sex that was the best acting performance of my life! Okay, it was also the first acting performance of my life but I fucking owned that role! Hell yeah!",
        "I collapsed on the beach and caught my breath before heading back to the \"theater.\"\n\nI popped up on the other side and it looked like the girls hadn't even moved. They were laying there sprawled on top of each other just like I'd left them. I walked up to them. \"You two okay?\"\n\nKelly's eyes fluttered open. \"Oh my god Brad,\" was all she could muster.\n\nKim didn't even bother to open her eyes. \"Well, you've pretty much ruined every other fantasy I've had or will have for the rest of my life.\" She smiled. \n\nKelly opened her eyes again. \"I had a brief thought that maybe I shouldn't ask you to do this. You know how real life can never live up to a fantasy that you cooked up in your head to be perfect? That was better than anything I could have dreamt.\"\n\nI lay down next to her in the soft sand and looked up at the blue sky.\n\nShe rolled her head onto my shoulder and arm and whispered in my ear, \"I love you.\""
    ],
    "authorname": "smugmug",
    "tags": [
        "sailing",
        "love"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-mystic-adventure-ch-03"
}