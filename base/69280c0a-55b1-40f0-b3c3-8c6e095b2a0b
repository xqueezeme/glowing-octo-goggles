{
    "title": "Sophia Pt. 01",
    "pages": [
        "Author's Notes:\n\nThank you for even opening up this story. I hope you enjoy it. I was once again, effected by gamma radiation from my desk lamp, so it's not my fault if it sucks. But I will, of course, take all credit if it is liked. \n\nIn this story, you will notice and probably get sick of, the number of meals that I describe. I myself thought, that I might be overdoing things a bit, with the descriptions. But on further thought, I decided to leave them in. I find meals, especially homemade meals to be a terrific way of binding people together. There is something primal about it. \n\nI wanted to show, how the two main characters of the story fall in love together. There are of course other ways, related in this story, that are not food related. In many stories, on this website, and good stories too. Boy meets girl, they fall in love, they have wild sex. With no real description of the events, big and little, that cause them to fall in love. \n\nWith this story, it wasn't a case of compulsion, I didn't have that much of a choice. I tried to show some of the factors, that caused the two main characters to fall in love. Again, I hope you enjoy the story and I hope that it doesn't suck, too much. And yes, the adulterous wife, gets hers in the end. But not the way I expected, damn gamma radiation.\n\nThanks for reading.\n\nOh yeah, disclaimer time. This story is entirely fictitious. Everything is made up. Including, but not limited too, various musical groups like The Beatles, the city of Seattle, the Cascade Mountains, the lodge referred to in the story, horses, and vehicles with internal combustion engines. \n\nI haven't lived, in the mythical city of Seattle, for over twenty years. Don't abuse me too much, if my made up facts; disagree with your made up facts. \n\n..........................................\n\n\n\nSophia, Part I\n\n\n\nI love my girls. We had just finished singing along to AC DC, Dirty Deeds. They really like the \"high voltage\" part. \"Okay, what to you want next Queen, Meat Loaf or The Beatles?\"\n\n\"Dad, when are you going to get some new music? All you like, is old music and old movies.\" Came a plaintive voice, from my oldest Megan.\n\n\"Old movies have class and character. Not like the movies, made today. The only thing they got, is special effects. Pretty soon, that is all movies are going to be, special effects, even the actors.\"\n\n\"Yeah, yeah, Dad, we've heard it before. Your favorite movie is the African Queen. Your favorite actor is James Cagney. Your favorite actress is.....\"\n\n\"Queen, queens are you talking about gay people, like Rock Hudson?\" My youngest Robin interrupted.\n\n\"Rock Hudson was not gay!\"\n\n\"DAaaaad\" My two girls harmonized. \"Everyone knows......\"\n\n\"I'm not listening to this, La, La, La, La, La.\" I used my right hand to cover my right ear, cause I needed the other one to drive.\n\n\"He sounds like a Teletubby now.\" Stated Megan.\n\n\"Isn't one of those gay, too?\" Asked Robin, from the sound of her voice, I just knew, she had one her classic big grins.\n\n\"That is it! You're both out of the will. I'm going to leave my vast fortune, to the Save the Chipmunks Foundation.\" \n\nThere followed a fierce conversation between Megan and Robin, about which Chipmunk might be gay. I love my girls. Of course, I sometimes want to strangle them. But I would lovingly strangle them. Eventually they wound down, and I asked them again about music.\n\n\"I want the Moody Blues. Blasting, billowing forth with the power of ten billion butterfly sneezes.\" Sang my youngest, Robin.\n\n\"You're back in the will Robin. Megan you're still out, no desert for you tonight.\"\n\n\"Then no more kisses for you Daddy.\"\n\n\"Oh yuck, kisses from girls can give you cooties. But, okay you're back in the will, too.\"\n\nI love my girls. My marriage of twelve years was lie. The type of sex, that I was dying for, she gave to everyone else. I lost at least two million dollars. I'd been branded a willing cuckold. It was all worth it, because I got my girls out of the deal! We started singing, Nights in White Satin.\n\nTwo and a half years ago, I found out the truth about my wife. That she had been cheating on me, for at least three years with a lot of different men. I've never been a very observant guy, when it comes to human interaction. Frankly, it takes a couple of hits with a clue bat, to even begin to think that someone might be deceiving me. I'm a better than a middling programmer, but about people forget it. I take people at their word and I trust them, until I get hit with the aforementioned clue bat, several times.\n\nWhen I confronted my wife with her adultery, her reaction was, \"well, duh\". Even though we had never agreed to or ever mentioned an open marriage, even though she had been deliberately deceiving me, even though she well knew my obtuseness. She said \"well, duh\". No apologies, no crawling back to me, no request for marriage counseling, no promises to stop cheating, no nothing. I doubt any of that would have worked anyways. But it would have helped my self image, if she would have at least tried. She was Clark Gable at the end of Gone with the Wind. She didn't give a damn!\n\nSo I filed for divorce based on adultery. My attorney told me that it would have no effect on the property division, but I wanted it for the principle. I wanted it known that I had been an unwilling cuckold. Then I made a big mistake, on the financial end of things. I tried to be completely, honest and transparent in all our finances, expecting my wife to behave the same way.\n\nWe had almost eight million dollars in investments, that I had carefully nursed over the years. Even though my wife was in banking and I was a programmer, I was the one handling our long term investments. My wife had done an analysis of my financial performance versus the pros, there was no contest. The amount of research I would do, before making a decision was mind numbing. I always had plans, at least, two and three tiers deep for any market change in relation to our investments. Frankly, I just cared more about our money, than they did. I worked harder.\n\nWhat I should have done, was immediately convert all our investments into cash and put them into certificates of deposit. Three million was fairly conservatively invested. Five million was invested in more risky ventures. Nothing to bad, I knew when to sell and I thought we could maybe make another half million, before I liquidated.\n\nWell my wife's lawyer requested the Judge to freeze all of our assets. The court issued the order and our broker was notified. I started to worry at that point. So I sat down with my wife, Barbara, an explained how within the next couple of months we should sell those stocks. She listened politely and ignored me. I went to my attorney and explained things. He tried to get the freeze lifted, and was denied. I started to panic. I raised a fit with the judge, I was nearly held in contempt of court. The judge brought in a professional. Guess what, he was associated with the same bank, my wife worked at. This man got on the stand, and swore all our investments were financially sound and that selling now, would lose us almost two million dollars in certain gains. Four months after I filed for divorce, we were three million dollars poorer. \n\nWait it gets better. There was now approximately five million left, plus the house and a few smaller assets. I already agreed that my wife would get the house. After finding out, how many of her lovers had been there. I swore to never enter that place again. Of course, only after I got all my stuff out. \n\nThe house was easily worth over six hundred thousand. So how did the judge split our remaining assets. She gave my wife 3.2 million and I got 2.2 million. The judge said that because of circumstantial evidence, that I might have hidden some funds, she was awarding my wife one million more than me. No where, no when in the case, had anyone made allegations or presented any evidence that I had stashed some money. I had complete records of all our income and investments, there was nothing unaccounted for. I still don't understand what happened. First my wife and I, lose three million, then she gets a half a million of my remaining share.\n\nMy lawyer advised against challenging the decision. He told me. \n\n\"You've been screwed, you can turn bitter and fight. Spend at least a hundred grand and probably two years on appeal. Get ulcers, lose sleep. Or walk away, and instead of living two years dwelling in the past, spend two years building your future. Knowing you're an honest man, regardless of what this dumb ass judge says.\"\n\nAnd that wasn't the end, when Barb's attorney challenged the divorce grounds of adultery. He claimed, that I knew my wife was cheating. He said, I had to have known because so many of my family, friends and coworkers were aware of my wife's adultery. Heck my wife had, had sex with a lot of my coworkers and friends. That revelation, caused four more divorces. They brought in, witness after witness, including my two older twin sisters. That admitted, they had known about my wife's affairs. Most of the witnesses said, they thought I had known too. Did I mention, that it takes a clue bat. They characterized me as a submissive guy. Shit, that is what I get for being nice and polite. \n\nEven my daughters, at only nine and eleven, admitted that they had some suspicions. I was so pissed, when my wife and her attorney put them on the stand and the judge allowed it. They brought in some therapist, from the Children's Welfare Department, that testified that it would not hurt my girls. And it would empower them, to make them part of the process. A year after my divorce I heard that, that shrink was fired and had to move out of the state to get another job.\n\nMegan and Robin, later explained to me that they hadn't really understood the situation and were just trying to get us to stay together. They said their momma told them she wanted to stay with me.\n\nBarbara wanted me to publicly accept being a cuckold and come crawling back to her. That cheating cunt!\n\nBut I did get one thing out of the deal, I got shared custody of my girls. That is the most important thing in the world to me. I've got an apartment in the same school district. Actually I own the apartment building, it is a small one. I live two miles from my old home and one mile from the school. The girls might spend one night at my home and the next at Barb's. I might hate her cheating, lying ass, but when it comes to my girls we stay in communication. Barb and I, both know where they are at all times, aren't smart phones with GPS wonderful. I don't trust Barb worth a damn, but there was no way I would be able to get sole custody of the girls, so I hadn't even tried. Barb, on the other hand, knows I would willingly die for either Megan or Robin.\n\nThere was a lot of fallout from my divorce. I told all my ex-friends to burn in hell and I told my older twin sisters to fuck off and die. My sisters still try and contact me. I think it is because they miss, having a free financial advisor and handyman. \n\nDid I mention that I'm a tool addict. I just can't help myself, some women by shoes, I'm a guy who buys tools. \n\nI quit my job with no notice. It turns out my boss and two of my subordinates had played, hide the salami with my wife. I couldn't sue my employer, because of the judge's decision that I must have known and tacitly agreed with my wife's behavior.\n\nAt my old job, we had been working on a completely new revision of our primary retail software product, our biggest profit maker. It was completely new code from the ground up. If you know anything about programmers, quite a few of us do extra work at home. It is a dumb thing, because we are not adequately compensated for the extra work, but we do it anyways. Well, there were some add-on features and modules that I had been developing, solely at home. \n\nThese were things that our sales people were quite excited about. I had kept things separate because I had wanted some extra money, for once, for the additional work I had been doing. I planned on extorting a bit of money, when my boss asked for the additional code. I would point out, how not one line of code had been written on company time or on company equipment. I would also point out, how it was not even part of the original project design. Marketing had wanted it, but the CEO and president had decided it wasn't feasible. Now, that they knew I was close to delivering, they were thrilled. Oh, did I mention that the company president, had done my wife too?\n\nMarketing had even started a massive advertising campaign, about the new features my added code offered. Then I found out, how my employer had been screwing me over for the last few years, by screwing my wife. I was not pleased. The day after my divorce, I packed up my office, gave my boss the finger and walked out. \n\nThey did try to get that additional code. At first they demanded it. Then they threatened legal action. They even went to the police, but I had everything documented. There was not one scrap of evidence, that I had ever worked on that code during company time or on company equipment. Mind you, I couldn't sell it to anyone else, but I didn't have to give it to them. \n\nThey asked me my selling price. I gave them two choices. First choice, fire everyone that had ever fucked my wife. Giving them no golden parachutes, since they had violated company policy. I would then sell it to them for a half a million. You see, the new program was scheduled to be released in two months, they even had the new packaging. Second choice, pay me two million dollars.\n\nThey chose neither, I hear the CEO is still kicking himself. One year later and their attempt to reproduce my code, still sucked. Two years later and their market share was so small, as to be nonexistent.\n\nSo, I quit my job, making eighty thousand a year. Lost two million. Severed all ties with my family and ex-friends. But I had my girls, it is good to be a winner.\n\nI had Megan and Robin, make a solemn oath. My private life was my business, and they were not to discuss any of it, with their mother or their aunts. Everyone had kept me in the dark about her. Now that we were divorced, they had no damn right to any knowledge of my personal life. I also told them, that I didn't want to know anything about their mother. I phrased it as diplomatically and gently as I could. But it still came out pretty damn hard, especially when telling nine and eleven year old children. It was not something, I should have inflicted upon them. But I was so mad and crazy at the time, about how everyone had kept silent about Barb. Then they all turned around and said, I must have known, assholes!\n\nOh, the CD is starting to play \"I'm Just a Singer in a Rock and Roll Band\". The girls really like to belt that one out. So, I've got the girls for another weekend. I pretty much have the girls for every weekend. \n\nTheir mother does take them on some very nice long vacations, Europe and such. It has made me a bit concerned about how much money Barb is spending. She quit her job after the divorce and instead of investing her share of the money, and living off the interest, she has been spending the principle. All of the vacations, she has taken the girls on, have been first class. Her new car, I think is about $160,000.00. Well if she spends it all, I am always ready to take the girls full time.\n\nWe're going to a small lodge in the mountains. In the winter, the place is packed with skiers. In the off season, they shrink the operation a lot and have horses and a barely adequate 9 hole golf course. Both Megan and Robin are mad about being eques, equestr.., they love to ride horses. I just like to sit and view the fall colors in the mountains, with the smell of pines, and a good book.\n\nI had been hoping to beat the rain storm to the lodge. I really enjoy sitting by a fire and watching a storm out the windows. The storm was supposed to pass a bit north of us, but it had swung suddenly south. My SUV is good one, it ain't new but it is reliable as all hell. With these muddy wet roads and driving wind, I'm happy about the all wheel drive.\n\nI'm driving slow because of the weather and poor visibility. I catch a glimmer of light out of corner of my eye. But I'm too busy paying attention to what is right in front of me, to give it any serious attention.\n\n\"Dad, there is a car in the ditch back there.\" Shouted Robin.\n\n\"Huh,\" I slowly stopped the car.\n\n\"What Honey?\"\n\n\"I saw the lights of a car in a ditch, back there.\"\n\nI checked my rear view mirrors and there was nothing behind me and no lights either. Both Megan and Robin were busy looking out the back and side windows.\n\n\"Are you sure?\"\n\n\"Positive Daddy!\"\n\nI thought about it, a car being in a ditch was nothing new. But the culverts on either side of the road were particularly wide and deep. They were at least ten feet deep and someone could be seriously hurt. Then there was the cell phone reception, which sucked where we were. I slowly started to back up the car. Then stopped with that stupidity. Visibility was so bad, that I couldn't be certain that I was backing up in straight line and I didn't want to chance turning around in the current conditions. I pulled over to the side of the road and turned my emergency flashers on.\n\n\"Robin, hand me my rain suit from on top of my tool box, please.\" I classified clothing like my rain suit or my Carharts as tools. Did I mention I love tools. I struggled putting on the suit, in the confines of the front seat.\n\n\"Honey, please hand me the big flashlight, it is by my tool box in back.\" Robin struggled to dig out my battery spotlight and pull it out. It weighs close to fifteen pounds. \"They called me submissive. Hey, I'm a manly man, don't you see all the big tools I got?\" I thought to myself.\n\nI stopped for moment and thought about the situation. I'm pulled over on the side of the road. I'm leaving my two precious girls behind, visibility is poor, and there are always idiots on the road. Any sane person should be driving slow in these conditions, but there is always some moron out there. A friend of mine had a car break down in a similar situation. He came back an hour later to find his car had been rear ended and knocked over a cliff. On the other hand, someone could be in serious trouble back there, and there is no safer place for me to park. \n\nThen I remembered, some tools that I had purchased years ago and never used. JUSTIFICATION!! I haven't wasted money. I've hauled them around for years with my jumper cables and they thought I was mad at the academy.\n\n\"Robin, in the back there is a bag, that holds my jumper cables. Could you dig it out, please. \" With much groaning and grunting, she dug out the bag from beneath everything else back there. Good thing she was strong. She handed me the bag.\n\nI pulled two road flares and a yellow flasher with a magnetic base, out from the bag.\n\n\"Robin I'm going to stick this flasher thingy on the roof. You roll down the back window a little bit and I'll pass the cord to you. Just plug it into the rear cigarette lighter, okay?\" \n\n\"Got it Dad.\"\n\n\"Megan I'm going to check this out. We haven't seen anyone else driving on this road for a half an hour. I'll only be back there, about a hundred feet or so. If you have any problems, just honk the horn. Now, I'm off to get wet.\" I looked out at the driving wind and rain, and turned again back to Megan and grinned. \"I wish I had packed my scuba gear.\"\n\n\"We packed our swimsuits for the sauna and the whirlpool baths. How about if we have Robin change and send her, since she saw the light?\"\n\n\"I'm not going out there.....\"\n\nWith that playful discussion going on, I forced open the door against the wind. Stepping out of the car, I realized that I had forgotten to change my hiking boots for my mud boots. Ah well, these boots were pretty tough too. ",
        "I stuck the flasher on the top of the car and Robin plugged it in. Up close it was so bright, that it was blinding. Good! I walked twenty five feet back and dropped my first flare.\n\nI continued to trudge down the road, periodically shining my light in the ditch. About one hundred feet behind our SUV, sure enough there was a car in the ditch. But it had no lights on and looked to be partially buried in the mud. I shined my light on the driver's side window.\n\n.............................................................................................\n\nMaria had been desperate to get back to her home, her sanctuary. She had a condo in the city but her retreat, her refuge was her home in the mountains. Originally she and her husband had found and bought it together. But over the years she had restored, remodeled it and made it her own. After the divorce there was no question, between the two of them, that she would get it out of the settlement. Their divorce had been quite amicable. Maria was still, in a sense, a business partner with her husband. Richard had a been a young financial genius, with little money. Maria a daughter of Brazilian immigrants, had been a successful dancer and model, and had a modest inheritance, as well. Richard had taken Maria's money and turned it, into a fortune of almost two hundred million dollars. \n\nAfter the divorce, Maria had taken forty million to conservatively invest. She left the rest, entrusted with Richard. He could make more money for her, he so enjoyed making money. He also enjoyed young women. He had never cheated on Maria. But he had fallen out of love with her and Maria wasn't sure, if she had ever really loved Richard in the first place. He was charming, intelligent and loyal, but there was no deep loving warmth. They had sex together and were friends, but they never seemed to be a family. But while they were no longer, if ever, in love. They were still dear and the closest of friends. He did have one vice though, he always had to have the shiniest and best toys. \n\nMaria guessed at thirty-two, she had lost most of her shine. But during the two years since the divorce, many men still thought she was shiny, she thought with a grin. There had even been more, than two proposals of marriage, but they had all reminded her of Richard in a way. The last one she had thought, might have been the real deal. Oh what a mistake she almost made. Better to find out now, but it hurt so much the way she did find out. \n\nMaria had met Robert, a lawyer in town from the East Coast. He was a rising star. Tall, blonde and handsome. He had seemed so sincere and honest. Never been married. Maria and he, had even been taking about engagement. They were supposed to be traveling back to Boston to meet his entire family, where they would be formally engaged. She had even been ready to move from the West to the East Coast. Though she would desperately miss her home.\n\nBut suddenly his parents decided to make a trip to Seattle to meet Maria. Maria was overjoyed, that she would be able to show her prospective in-laws her town. When they got off the plane and met Maria. Robert's father John, was gracious and a gentleman. Robert's mother, Caroline was a nightmare. On first sight of Maria, she had a grim foreboding expression. Maria did her best. She had made reservations for them in the best of hotels. Introduced them to her closest friends. Took them out, on a day long cruise on her boat. All in all, she tried to show them her best. \n\nBut to no avail. Today, she took them to her favorite restaurant, for an early dinner. At the restaurant, she found out the truth about Robert.\n\nShe was coming back from the ladies room. She was just turning a corner, behind Robert and his mother, when she heard Robert and his mother talking.\n\n\"Robert, she seems a lovely girl, but don't you think that she is a little bit dark?\"\n\nMaria was shocked. What was that woman from, the Stone Age? She had run into racism before, but she could never understand how such people could be so brain dead and still be able to walk and talk.\n\n\"Well Mother you know I love you, but......\"\n\n\"Here it comes,\" thought Maria. \"Robert is going to tell his mother that he loves me and is going to marry me, despite her objections.\"\n\n\"Well Mother you know I love you, but if you look honestly and logically at the situation, you will see that this is brilliant opportunity for me. Maria is quite wealthy. I highly doubt, if we will have any children. So children of mixed race, shouldn't be a problem. If we do get divorced later on, then I should get quite a nice settlement. With that kind of money, I could set up a proper home for a new wife and family.\"\n\n\"Robert that is a good plan, but I'm so worried about my possible grandchildren being of.....\"\n\nDuring the conversation, Robert's Father had been staring bug-eyed at his son and wife. \"I CAN NOT BELIEVE YOU TWO! I'm appalled at your behavior. You have no morals or decency at all. This meal is over. I'll pay for this dinner. After the lavish way, Maria has treated us, it would be a crime to have her pay for such lowlifes, as you two.\" John said furiously.\n\nJohn got up from the table and quickly walked towards Maria. She was surprised, she hadn't realized that he had seen her. He grasped her two hands in his and looked gently into her eyes.\n\n\"Maria, I am so ashamed. I must have done a terrible job raising Robert, please forgive me. You would have made a wonderful daughter-in-law. But he isn't worthy of you. I just wish, I was twenty-five years younger. I would be courting you in a heart beat. Again my sincere apologies. Have a wonderful life. It was a joy to meet you.\" He turned back to Caroline and Robert, who were staring with shocked faces and open mouths.\n\n\"I'm going back to the hotel, find your own way back. I'll probably be getting a separate room and quite possibly, travel back to Boston by myself.\"\n\n\"John Darling, I wasn't being.......\" Caroline said desperately.\n\n\"I know what you are and I've hidden from it, too long. After this shocking display, I need time to think. Goodbye, Caroline. Robert, prove that you are a man, at least in this regards, and see that your mother, makes it safely back to the hotel. Goodbye Maria, take care.\" John walked off to see the manager about paying the bill.\n\nMaria nodded her head, in reply to John and turned to the table. She picked up her purse with one hand and with the other she slapped Robert across the face. \"Scum!\" She said simply, and walked off. \n\nIt was only late afternoon, she had time to pack her car and get to her home in the mountains. She didn't even take time to change. Less than an hour later, she had her car loaded with the necessities. She had a cooler chest full of ice cream, two chocolate cakes and a sack full of DVDs of her favorite movies.\n\nDuring the long drive, she listened to classical music to calm her nerves and thought about the disaster, she narrowly missed and the pain it caused.\n\n\"Am I going to spend the rest of my life alone? Why am I only attracting superficial losers? What do I want?.........\"\n\n\"Hell I know what I want. I want a knight in fucking, shining armor, to come along and sweep me of my feet. A man who will back me up with words and deeds. A man who will be loyal and never let me down. A man who will grow old with me and not abandon me, when I got a wrinkle or two. I WANT A HOUSE FULL OF KIDS!\" She screamed with tears on her face.\n\nShe really should have been paying more attention to the road, what with the weather conditions. There was a flash of lighting, a deer bounding across the road, and Maria jerked the car to the right, and off the road. She felt the car nosing down, there was an impact and the airbag exploded in her face.\n\nThere were a few more seconds of the car sliding around and almost flipping over. When things settled down, Maria started to knock down the airbag. She was scared and in a bit of a panic. Her pounding on the airbag filled the car with a bit of dust, which caused her to start to cough and made her eyes water. The engine was still running, she wondered if she should turn it off. A moment later, with a groan, the engine died.\n\nShe looked around to assess her situation. The road was to her left, and was at least ten feet, over the roof of her car. To the right, the wall of the trench was at least six or seven feet high and her car was resting in the bottom. Maria tried her cell phone, but as she expected, no signal. She was wondering what to do, should she stay in the car?\n\nLights briefly swept over her car. \"Did a car just pass on the road overhead,\" she thought? \"Should I try to get out and make it to the road? I'm in dress for goodness sakes, it is cold, wet and muddy outside. I don't even have a proper coat for this weather.\" It was at that point, that her car lights died.\n\nNow she started to panic. She had no flashlight in the car. The storm was fierce and she was all alone. \"Calm down, Calm down, think about what to do, think, think.....\"\n\nShe saw powerful flashes of light going off in the ditch in front of her. She realized someone was periodically shining a light down from the road into the ditch. \"Maybe someone saw my car crash and is looking for me?\" She thought.\n\nSuddenly a bright light from the road, was flooding her car. She looked up at the light, shielding her eyes. Just as suddenly the light turned the other way. From the movement of the light, it looked like someone was running back up the road.\n\n\"Where were they going? Come back here! Don't leave me alone. Maybe they went to get help?\"\n\n.........................................................................................................\n\nA face looked back up at Don through the driver's side window. There was a huge amount of mud and debris against the doors on the driver's side, and the other side was wedged firmly against the embankment.\n\n\"Shit, shit shit....\" Don lit and dropped his second flare, and then turned to run back to his car. \"You dumb guy,\" he thought to himself. \"Don't have a tow rope do you? Got all your other tools, but not a long chain or a rope. If you had one you could maybe reposition the car to get the driver out. Well, you've got a shovel and a crowbar. Maybe the power windows still work? If they don't, I can always break them.\"\n\nDon ran back to his car and pulled open the rear door.\n\n\"Megan, Robin, try your cells phones. See if you can get 911. There is someone back there.\"\n\n\"Do you need our help Dad?\"\n\n\"No I think it is going to be okay, but just in case try and reach 911.\" While saying that Don grabbed his folding shovel, a crowbar and a small blue tarp. There was no way, he was going to let his girls out in this storm and do anything dangerous.\n\nHe slammed the gate closed and started to run back the other way.\n\nMaria was relieved to see the light coming back towards her. \n\nThe man, dressed in a yellow rain suit, scrambled down the embankment. He slipped and slid down the muddy wall. His left arm was wrapped around some long tools. His right hand was carrying an extremely bright flashlight.\n\nAs Don looked at the woman, he wondered if she realized how much danger she was in? The ditch was filling up fast with rain water and her doors looked like they were wedged shut with mud and debris. He didn't even bother trying the doors. His boots were full of cold muddy water, that was an icy, painful shock. He did his best to ignore it.\n\n\"Do your windows still work?\" He yelled to her.\n\n\"No,\" she yelled back and shook her head.\n\nDon set his tools down and wedged the light into the embankment, so it's light shown down upon the car. He unfolded his shovel and started to work on the mud holding her car door shut. He was working up quite a sweat with all his labor, but his feet and ankles were freezing. A few times he had to put his shovel down and move a log or stone with either the crow bar or his bare hands. Don was wondering if he should just break the window. But he had never deliberately broken a car window before and was concerned that flying glass might injure the woman inside. He decided to try his best at clearing the door. If the water got knee high before he was done, he would change tactics and break the glass.\n\nMaria felt her feet getting cold and wet. She looked down to see water covering the floorboards of her car. She jerked her legs up and onto the seat.\n\n\"There's water in here.\" She yelled in panic to the man outside.\n\n\"I know, just give me a minute or two. I think I've almost got it.\" He huffed that out while still working furiously.\n\nThe water was already covering the floorboards by and inch or two, and was rising rapidly. Maria was suddenly aware of what a dire situation she would have been in, if her rescuer had not shown up.\n\nDon kept on working until he had all the obvious debris away from the driver's door. He also made sure that there was plenty of clearance for swinging the door open. It would do him little good, if he could only open the door and inch or two. He was almost ready to open the door, when he took another look at the driver. It was hard to tell with the rain and poor light, but she seemed to be wearing town clothes. Nothing suitable for the cold mountain air. She wasn't even wearing a coat.\n\n\"I'm going to open the door. Put your coat on first, it is really cold out here.\"\n\n\"I didn't bring a coat.\"\n\nDon put down his shovel and picked up the tarp. He started to swing it about violently, to shake off any mud on the outside. He was also muttering to himself. \"Just like a woman, never prepared. Never have a proper tools. Always want a man.......\"\n\n\"Are you saying something?\" Maria yelled.\n\n\"I've got a little tarp here. It is a little bit wet, but it is a lot better then nothing. I'll open the door and give it to you. Wrap it around yourself. Got it?\"\n\n\"How will I walk?\"\n\n\"You won't, I'll carry you. It doesn't look like you've got proper shoes. The water is cold and getting deep.\"\n\nMaria looked at her feet, all she had was a pair of high heels. \"But....\"\n\n\"We've got not time. Let's do this!\" Don yanked open the door and thrust the tarp at Maria. She felt the unrestricted cold for the first time and quickly wrapped the tarp around her body. The man easily picked her up in his arms. The rain was so fierce that Maria covered her face with a corner of the tarp. Slowly, the man climbed the embankment to the road. Maria was terrified that they would slip and fall. But while he did move very slowly there was no hesitation in the man. His arms seemed strong and secure, like he could carry her for an entire day, without weakening. Finally, they made it to the flat of the road and Maria breathed a sigh of relief.\n\nA few minutes later, from all the flashing lights, Maria could tell they were at his car. She could hear a door open.\n\n\"Are they hurt?\" Yelled a young girl.\n\n\"No, just didn't have a coat or good shoes.\" Answered the man.\n\n..........................................................................................\n\nThe woman in my arms wasn't very heavy at all, but my feet were so cold. Robin had opened the door for me, from the inside, and I set the woman on the rear passenger seat.\n\n\"Megan, turn up the heat, full blast.\"\n\n\"Okay, Dad.\"\n\nI still had my arms around the woman. I was just going to pull my arms out from under her when, I looked down at her face, for the first time with decent light, and............\n\nSophia Loren, I was looking at a beautiful gorgeous Sophia Loren. Maybe the skin color was a bit darker, but who would give a shit. I wanted to run around the car, like a cartoon wolf and bang my head against the door post. Scratch that, I know what to do. I'm going to take her back up in my arms and run to the top of the nearest mountain. Along the way, I was going to pick up a club. I would use the club to keep away all the other men, after my woman.\n\nShe would be there sitting on the ground with her legs outstretched. With her arms wrapped around and clutching my leg. I would be screaming at the men trying to climb our mountain. Crushing them with my club. \"Get away you ASSHOLES. She's Mine! All Mine, Mine, MINE!\" \n\n\"Dad, Dad, DADDY!\"\n\n\"Huh, what?\" I tore my eyes away from her face and looked up blankly.\"\n\n\"Daddy, what are you doing?\" Asked Megan.\n\nI took a deep breath. Oh yeah, my girls, my precious girls. No mountain for me. SHIT!\n\n\"I'm sorry honey, I'm just a little bit tired and cold.\" I looked down again at the woman, and braced myself. Oh, she looked so lovely. She was staring at me with wide eyes. No mountain, no mountain, remember Megan and Robin.\n\n\"Hello, I'm sorry if kind of phased out there for a second. My name is Don Hendricks and these two lovely ladies, are my daughters. The one in the front seat is Megan and next to you is Robin. Robin is the one, that saw your car. If she hadn't seen you, you might have been in a bit of trouble. Right now I need to get my tools, before that ditch fills with water. Do you have anything you need from the car? I expect it to be under water, before morning. So, if I don't get it now, it will probably be ruined.\"\n\n\"My name is Maria Wilson. Thank you for rescuing me. I really only need my purse. There are a few things in the trunk but you don't have to get them. It would be too much bother, after everything you've done.\"\n\n\"Better to get them now. Waste not, want not, as the saying goes. Are the keys still in the ignition?\"\n\n\"Yes, but you don't have to.\"\n\n\"No problem.\" I took the tarp from her and left.\n\n..................................................................................\n\nMaria was carefully put on the rear seat of the SUV. She pulled the tarp away from her face and looked up, into his face. A complete look of shock washed across his face and then his arms tightened possessively about her. It was frightening. Then a look of longing came into his face, that seared her heart and touched her soul. He looked like a man, that was about to carry her off into the night. Luckily, the girls in the car, broke him out of whatever spell, he was under. \n\nHe took back his tarp and trudged back and forth from her car. Carrying things and making three trips in all. At one point, he suddenly pulled open Robin's door and thrust a tarp wrapped bundle onto her lap. The tarp was wet so she shrieked a bit. It turned out to be Maria's chocolate cakes and her DVDs. The girls ooohed, at how yummy they looked and Maria promised, one of the cakes to them. But while Don was working, they had time to talk.\n\nMegan started to talk. \"Can we call you Maria, or do you want us to call you Ms. Wilson?\"\n\n\"Oh, Maria is fine.\"\n\n\"Maria, I saw how Daddy stared at you. I know it was a bit freaky. He's never done something like that before. He's the best, most honest, loyal man I know. I'm not just saying that because he is my father. So, you don't have to worry. I think it just surprised him to see how beautiful you are. But if we tell him what he did, he will get all embarrassed and he'll feel real bad, for making you uncomfortable.\"\n\n\"I think he's just lonely. He only really has Robin and I now. Some real bad things happened to him and he has hard time trusting people. Robin and I hurt him too. So please don't be too mad at him, okay?\"\n\nMegan's eyes had such a pleading look, that even if Maria was so inclined, and she wasn't, she couldn't be mad. \"Don't worry Megan, I'm not mad. With the accident and everything, I'm just a little stressed out. I'm sure your dad is a wonderful person. He has to be, if he has two such girls as you, for daughters.\"\n\n\"Thanks Maria,\" spoke up Robin. \"He's the best dad in the world. They hurt him so much, during the divorce and before. Everyone lied and he lost so much money. We just don't want him hurt anymore and there's nothing we can do, to make it better.\" Robin started to cry.",
        "\"Robin, don't cry Daddy will be back soon. You know how much he loves us. He always says that no matter what happened, he is still the big winner, because he has us. Calm down, please.\" Megan reached into the back seat to pat Robin's shoulder.\n\n\"Okay,\" Robin did her best to quiet her sniffles.\n\nMaria took a couple of deep breaths, maybe Don has had, some really bad things happen to him. And his girls haven't had a joy ride either, she thought. \"So, he stared at me like a hungry wolf, it has happened before. Well, maybe not that intensely and not with a look that seemed to see my soul. But...., oh shut up. He rescued me. I'll treat him cordially, until I see the wolf again.\"\n\n.........................................................................................\n\nIt took three trips down into the ditch to bring up everything. There was Maria's purse, a cooler chest, two large bakery boxes, a bag full of DVDs, and my tools. I had to strap the cooler chest to the roof of my SUV, there was no more room inside.\n\nI was glad to be done. The water in the ditch had been well above knee height at the end. My feet were screaming in pain, from the cold and it was hard to walk. I stumbled to the driver's door to let myself in. There was a lot of mud on the my boots and lower legs, but I didn't give a shit. I just had to get warm.\n\nI opened the door and plopped myself into the seat. I was shuddering and shaking from the cold. I couldn't believe how cold I was, I looked at the dash to check the outside temperature. It was registering forty degrees, oops dropped another degree, now it was thirty-nine. That thermometer normally registered at least two degrees higher than ambient, because of the heat of the engine too. I swear it was at least fifty, when Robin first spotted Maria's car.\n\n\"Dad, are you okay?\" Megan asked with a worried tone to her voice.\n\n\"I just need to warm up a bit. It's a lot colder, than I thought it would be and I wore the wrong boots.\" My teeth were chattering when I said that. I tried to grin at my daughter, to ease her mind. That just made her look more worried.\n\n\"I'm okay Baby, honest. Now, that I'm in the car, warming up. Maria, where do you want to go? We're heading to the Elk Mountain ski lodge, but we can easily make a detour to drop you off.\"\n\n\"I live just five miles from the lodge entrance. If you could drop me off, that would be wonderful.\"\n\n\"No problem, just give me directions.\"\n\n\"My drive is off this road, about twenty miles down and five miles before the lodge.\"\n\n\"Beautiful.\" I put the SUV in gear and started to slowly drive down the road. I didn't have good control of the gas and break peddle because my feet were still too numb.\n\nIt took forty minutes to reach Maria's driveway. Maria had found out, that my girls were horse crazy and they had been having a happy discussion. I was too miserable to pay attention to anything but my driving. My feet were no longer numb, but they hurt a bit. Plus water had wicked up my pant legs, so the only place that wasn't soaked was my chest area. My hands looked a bit a swollen too, I hadn't been too careful in my desperation to free Maria. I've got at least three pairs of heavy leather work gloves in the back and I hadn't thought to grab a single pair, dumb guy.\n\n\"Just up ahead on the left, is the drive. Can you see the reflectors?\"\n\n\"Red and yellow ones?\"\n\n\"Yes.'\n\n\"Got it.\"\n\n\"There is a gate about thirty feet off the road. You've got to stop just before it, so I can punch in my code.\"\n\n\"Okay.\" I did as she directed and pulled up parallel to security box just before a heavy black security gate. I stopped the car so Maria's window was lined up with the box. The gate was one of those huge ornate affairs that you see in the movies. With heavy stone columns at either end.\n\nMaria was fumbling in her purse for a moment and then lowered her window. I watched through the side mirror, as she slid open the door on the box. She then slid a key card through a reader and punched in a code. Pretty fancy system, must have a few bucks.\n\nThe gates started to slowly swing open. I was wondering how she handles it, when snow fills the driveway and blocks the gate from swinging open. So I asked.\n\n\"What do you do, when there is so much snow that it blocks the gate?\"\n\n\"The motors on the gate are extra strong, so they can push quite a bit. I've also got a local man that keeps my driveway clear. I've only had problems once or twice. But I had to add the gate. There were too many tourists driving up and disturbing me. Some of them quite drunk, thinking my house was the lodge.\"\n\nWe drove up the drive. I was looking at the odometer, four tenths of mile, and it was all paved. Yep, she had some bucks. Automatic lights came on as we got closer. I could see why people thought her home, was the main building at the lodge. But there was a difference, her home was bigger. It was built of stone and logs and had an attached four door garage.\n\n\"If you can pull up to the left hand door of the garage, I can get out and punch in the code. Then you can just pull in and we can unload there.\"\n\n\"Makes sense, but you're not dressed for this weather. If you can temporarily trust me with the code, I can punch it in. You can change it later.\" I turned on the dome light and looked in the rear view mirror at her. Which I been religiously avoiding doing for the entire ride. Damn, she was gorgeous. That dress she was wearing was to light for this weather, it wouldn't be much better than naked skin. No, no, no, don't think about her naked skin. I carefully kept my face and eyes under control and looked at her eyes in the rear view mirror, so she could see mine. I wanted her to see that I had everything under control and she had nothing to worry about.\n\n..................................................................................................\n\nI stared in the mirror, and screamed. \"Barbara you're an adulterous slut and scum. You don't deserve any happiness, you piece of shit!\" I had to vent. It was only safe to do it, when Megan and Robin were gone. I took one of my lipsticks and scrawled all over my reflection in the mirror. I then collapsed down onto the floor with the shakes. At least this time, I didn't throw up.\n\nMy life was a complete wreck and it was my own damn fault, but Don's sisters had helped a bit too, SHIT!\n\nI needed therapy but I had been avoiding it, because of fear of what the therapist would say. I had even stopped my girls' therapy, when their therapist had asked too many questions. You're a GREAT FUCKING MOM, BARBARA.\n\nAbout six years ago Don and I were having problems, and what I did just made them worst. Or I should say, I was having problems, Don was just perfect like always. I had been taking him for granted. He was my rock, my comforter, and my life. He totally comprised everything that made up a safe and secure home to me, he was the essence of the word \"home\". AND I HAD BEEN COMPLETELY TAKING HIM FOR GRANTED, AND I KNEW IT! \n\nMaybe it was the fact, that I made five times his salary. Maybe it was because he was always so nice, calm and reasonable. He always spoke with me calmly, no matter the provocation. Even if I was being a BITCH. But harsh words were not his way. I knew he had an iron will, but he wasn't a man of rage and violence. I loved him, with all my heart and soul, but our marriage was suffering and so I went to best my friends, his sisters, for advice.\n\nI had first met his sisters, Diane and Michelle, at college. They were one year older than me. I don't know why, but we just hit it right off and became close friends. \n\nThey were constantly talking about their little brother, Don. How when his father died, and Don was just twelve. Don had tried to become the \"man of the house\" for the family. All the heavy chores he did, all the household repairs he did. When he found, he couldn't do some of the heavy chores around the house. He started exercising constantly, so he could do the heavy work, that an adult man is called on to do, from time to time. \n\nDon went to the library and borrowed books about household repairs, so he knew how do them. He even got jobs, doing lawn work and window washing, and gave most of his earnings to his mother. And this wasn't a phase, he was still doing it, when he was a senior in high school.\n\nWell that summer after my freshman year, I went Michelle's and Diane's home, to visit with them for a couple of weeks. The thing that immediately struck me about Don, was that he carried an air of competence. Like he was a man that could do anything, but he still looked like a kid. Don's mother was nice, but he was always in the shadows, ready to support her. The power behind the throne, so to speak.\n\nWell, there was one evening when Michelle, Diane and I, all had dates with our boyfriends. We were going to a fancy dinner/dance club for a romantic night. At the last minute, my boyfriend had to cancel, he had problems with his student visa and was forced to hurry home. I told Michelle and Diane to go on without me, but they refused. Then Diane got the bright idea of having Don accompany us, he could be the designated driver, too. They said Don could keep the chair warm and maybe I would meet someone else at the club. Personally, I thought it was beneath Don, but they and his mother talked him into it.\n\nAt the club, I did dance a few songs with Don, but then I met some other people and spent most of the evening at their table. Both groups decided to leave, at the same time and Don went off to get the car. That's when the true colors of my new friends revealed themselves. I made it plain to them, that I was going home with Michelle and Diane. But they wanted me to go with them. There was no way, I was going to get into a car with three strange men. Flirting and dancing with them, okay. But go home with them, hell no.\n\nThings got physical. Michelle's and Diane's boyfriends tried to help, but my new ex-friends were much bigger. Michelle and Diane were both screaming for Don, and I was thinking, \"what can one eighteen year old kid do against these guys?\" I had already been forced into the back seat and was being held by one of my new boyfriends, when Don arrived. \n\nHe appeared and suddenly the two guys outside of the car, just seemed to magically fly about six feet, into the wall of the club. Don then reached into the car and grabbed my soon to be ex-new-boyfriend at the belt and collar. He pulled him from the car, with the guy screaming all the way, like a little girl. Don lifted the guy over his head and smashed him down onto the car's roof. Scaring the hell out of me, since I was still inside the car. The police came, charges were filed and my three very ex-new-boyfriends got two years probation. And I started looking at Don, in a whole new way. Let me tell you, there is something primal when a guy fights for you.\n\nIt took me four years to finally catch him, and then I went and blew it, eight years later but his sisters helped.\n\nDon had been after me, to spice up our love life. He had books about different sexual positions and acts, that couples could try. I think he would have been happy, if I just started giving him blow jobs again. Lord knows, he deserved it, with all the oral he performed on me. I was still desperately in love with him, but he no longer got my juices flowing. And I wasn't even willing to try to do anything about it. I refused trying new things. I refused romantic evenings in or out of the house. I refused to see a counselor and most definitely, refused to see a sexual therapist.\n\nThere I was carping to my sisters-in-law, about what a lousy wife I was, shit. I should have just gotten off my ass, swallowed my pride and seen a licensed therapist. My two best friends and sisters to Don, made a confession to me. They said, that when they felt their own marriages were getting stale, they went out and had brief affairs. Never lasting too long and never more than once a year. They said, that when they returned to their marriages, that it made them appreciate their husbands more and they gave their husbands a lot of kinky guilt sex. They suggested, that I give it a try and like a damn fool I did.\n\nI've always had a weakness for men with accents, they made me go weak in the knees. I'd dated quite a few men from other countries, while in college. But I never wanted to marry any of them. For me, there are just too many cultural differences when involved with someone from another country. I just can't get comfortable with them and relax into a long term relationship. But to have a brief affair with one, that was another story for my demented mind.\n\nI had my masters and was involved with international finance at the time. I managed large loans and investments from the U.S. to overseas, and managed a lot of overseas investments into the U.S.. \n\nHis name was Philippe, and he was from France. He was here on a joint venture project. Every time he was near and spoke to me, my face grew red. We went on two dates, before I let him go all the way. I even prepared for it. The books, that Don bought for our love life. I finally read them, but for Philippe. I WAS SUCH A BITCH! I did things for Philippe, that I no longer did for Don. I did things for Philippe, that I never did for Don.\n\nAnd when the affair was over, did I then return to Don, hell no. Don was my fluffy down comforter. Don would always be there. He was nothing to excite my pussy. Ah, but Sean from Scotland, his very voice got my pussy wet. So I had affair after affair. I even got into a brief affair, with the president of Don's company. He was from England. That proved my undoing.\n\nDuring the almost four years of my adulterous life. My sisters-in-law became increasing furious with me. But I always hit them with the fact, that they were the ones who got me started and that they were adulteresses too! Personally, I always thought, that they vicariously got off from my affairs. I was seeing exotic, exciting men. Michelle and Diane would always press me, for every detail of my dates. \n\nWhen friends, finally discovered my affairs, I tricked them with the aid of Diane and Michelle. I told our friends, how Don was so ashamed but he got off, on me seeing other men. It helped Don to perform in the bedroom. I MADE DON OUT TO BE SOME SORT OF PERVERT AND THEY BOUGHT IT. They promised not to confront Don with my infidelity and embarrass him. Michelle and Diane would add to the story. They would tell, how Don had grown up in a house without any male, father figure, how sad. The only thing he had, for a role model was three strong women, what a crock.\n\nWell the vice-president at Don's company, had picked up some clues regarding my behavior, from the president. And that fat toad, hired a P.I to follow me. Three weeks later, he was blackmailing me for sex. \n\nI thought it was the most disgusting thing ever, when he laid hands on me. I was wrong, the second time was the most disgusting. I needed to get drunk to let him touch me and I swear he slipped me something too. But the second time, he brought in two of Don's subordinates. I did my first multi-partner sex act. THEY GANGBANGED ME! The next day, I called that fat toad. And with a calm and sincere voice I threatened to kill him, if he ever came near me again or told my husband.\n\nBut I couldn't do anything about Don's subordinates. Don overheard them talking about me. He didn't believe it, but he had heard enough to hire his own private detective. The man discovered virtually everything. How I had been having affairs for over three years and how I had a secret apartment.\n\nSome evenings, when I was very late, could be excused as business related. But too many evenings would even make Don suspicious, he was a bit dense but in a good way. So, I became an imaginary frequent traveler. I did make many business trips, but only half of them were real. During the fake trips, I would still go into work, but the evenings were all about my lovers in my apartment. The apartment was also useful for showering and changing clothes. I have some beautiful gowns, dresses and especially lingerie, that Don has never seen. My lovers would take me to some of the fanciest affairs around town. Money can open any door, and we were money people.\n\nI was disgusted with myself about how I was treating Don, but I couldn't stop. Many women read romance novels, well I was having real romances.\n\nThat is until Don found out.\n\nI came home, from two days out of town, \"at my apartment\". When he confronted me. I tried to give him a kiss on the cheek.\n\n\"Barbara, sit down at the table. There is something we have to talk about.\"\n\n\"Honey, I'm so tired from my long trip. Can't we talk later?\"\n\n\"I'm sure you're tired from FUCKING Sergei. Sit your GOD DAMN ASS DOWN!\" He roared. I almost fainted. Don never yells. The words penetrated and I did faint.\n\nI came to, with a bucket full of ice cold water, hitting me in the face. Then, Don bodily picked me up and PUT ME IN A DINING ROOM CHAIR. Don had never been physically assertive with me before, and he never makes a mess. Yet there he was pouring a whole bucket of water on me and the floor. I knew Don would react badly to my affairs. In the back part of my mind, where I tried to never looked, I even suspected that if he found out, it would lead to the end of our marriage. But I had never imagined, that he would be so enraged.\n\nHe thrust some papers before me, on the dining room table. It was a detective's report on my affairs. \"I thought about confronting you at your apartment, but I was afraid I might kill someone. Right now, if you're wondering, Megan and Robin are at Diane's house.\"\n\n\"What do you have to say for yourself Barbara!\" I didn't say a word. I didn't even cry. I just looked at the papers and refused to look up. For a half an hour at least, there were no sounds made by either of us.\n\n\"Barbara the depth of your betrayal is disgusting, and we are probably heading for divorce. But if you have any hope of saving this marriage, you had better speak in the next fifteen minutes, or I am out of here!\" My hand with my wristwatch was on the table. I could look at it without looking up or moving. I remembered doing a mental count down, like when a bomb goes off. \"Fourteen minutes until my marriage is over. Thirteen minutes......\"\n\nTrue to his word, Don left. He had his SUV already packed. Initially he stayed with Diane, until he found out about his sisters' involvement.\n\nThere was one terrible meeting, that I had with my attorney, Don and his attorney. I couldn't believe all the evidence, that they were easily able to acquire, about my past affairs. Don said something like, \"you've been cheating on me for years!\" I don't know why I said it, I think I was insane at the time. But I said it sarcastically and looked at him mockingly when I did it. \"Well, duh.\" \n\nDon picked up, one of the heavy conference chairs at the table. And threw it the length of the table and into the wall. The drywall shattered, and he stormed out of the room. It was a good thing, that we were at his attorney's offices.\n\nThen the divorce proceedings occurred. My lawyer was good, he was a real shark. He didn't care about justice, he just cared about winning. I was still in so much shock and mental anguish, that I let my attorney run the show. \n\nFirst, I humiliated Don with all our friends, then they talked about Don's \"problems\" on the witness stand. When our friends were confronted with the fact, that Don's \"problems\" were a lie constructed by me and his sisters. Our friends, when pressed by my attorney, said Don still had to know about my affairs, because they were so blatant. They mentioned several pictures of me, in the society pages of the local newspaper, as example. Like Don, would ever read a society page. I had Don's absolute trust, and I betrayed it, absolutely.",
        "Then the stupid freeze, was put on our finances. Did I choose to trust Don, no. Instead, I trusted my idiot lawyer, some dumb-ass financial guru at my own bank and the judge. We lost three million dollars. Then the judge, awards me a million more than Don. At first, I thought I really deserved it. Then the financial advisor comes to me, trying to get into my pants, and admits that the judge was a second cousin of his. And he had, during some private conversations with the judge, convinced her that Don was hiding some assets. \n\nThe truth was, that I had hidden some assets in the Cayman Islands. All my sleeping around over the years, had gotten my bank some big deals. As a result, my bonuses had almost doubled. I had separate checks cut and the money deposited in the Caymans. My last year working, I had also started to receive some nice gifts, maybe they were bribes, from customers and clients. I put those in the Caymans as well. I did try and give some of the money back to Don. But he said, he would be damned if he accepted any charity from me, and that any money that passed through my hands, would be diseased.\n\nWhen the divorce was over, the slimy toad from Don's office called me again. He wanted to go on a date with me! When I told him, \"hell no.\" He started to laugh at me and told me, how everything had gone to his plan. He revealed, how he had overheard the CEO talking about firing him and giving Don the job of vice-president. Oh God, Don would have finally been rewarded for all his hard work and I screwed it up. The toad had used me to embarrass Don in the eyes of the CEO, so Don would never be offered the promotion. He had also figured that Don, would probably quit as well.\n\nSo Don went from making eighty thousand a year as a programmer to thirty-six as a lead tech support person. I understand that he also has a job as maintenance man at an apartment building, I think he gets a free apartment, out of the deal. \"I AM SUCH A LOVING AND DEVOTED WIFE. I SHOULD BURN IN HELL!\"\n\nShortly after the divorce was finalized. I was encouraged to resign my position. It turns out, that I hadn't used the best judgment, in the investments I had approved, during the past year. People and companies desperate for money, had found out about my predilections. For over a year, the gorgeous and exotic men that I had been meeting, had been professionals alright, but not the financial kind. They had been professional gigolos, used to seduce me into making some really dumb decisions.\n\nI got back on my feet, to look at the mirror again. This time, I took the lipstick directly to my own face and screamed. \"YOU STUPID CHEATING CUNT.\" \n\n..................................................................................................\n\nDon's eyes caught mine in the mirror. Gone was the hungry wolf with the longing eyes. They just looked sad and tired now. I didn't have the heart to doubt him, and the weather outside was miserable.\n\n\"You're going to need my key card. Just swipe the key card through and punch in my birth date 2/26/75. After you do that, it will ask you which door to open. Press button one for the left door and thank you.\"\n\n\"No problem, Maria.\"\n\nHe slowly got out of the car and seemed to stumble a bit, but he caught himself on the fender. He made his way over to the box and punched in the code. The door slowly rose and he stumbled back to the car. I was getting worried about his walking, there had been no sign of difficulty, when he carried me, earlier.\n\nI was starting to think something, which might be a very bad idea. But I owed them, maybe my life, and I would be the worse sort of ingrate not to help them now.\n\nWe drove into the garage and I jumped out to hit the close button. I was chilled to the bone, in just a few minutes, with that dreadfully cold wind rushing in. I opened up the door to the house and briefly stepped inside. There was one of the house thermostats located there, and I turned up the heat from the resting temp of fifty to seventy. The thermostat offered me two options, warm up the house as economically as possible or as quickly as possible. My handyman Carl, calls it turbo mode. Fuck the expense, I was cold and they might be needing to warm up too.\n\nI went out to garage. Don was lifting my cooler chest off the roof of the SUV. Megan approached me.\n\n\"Maria could we use your bathroom, it would only take a minute?\"\n\n\"Of course......\"\n\nDon walked over carrying the cooler chest. \"Where can I put this Maria? I'm going to step outside for a minute, I'll be right back.\" \n\nI looked at him curiously. Why is he going outside? He's shaking and shivering, and basically looks like shit? Then it dawned on me, he needed to pee. He was covered in mud and dripping with water. He didn't want to mess up my house, by tracking mud through it. Then I looked at his hands, holding the ice chest. He had cuts all over his hands, they were bruised and obviously swollen.\n\nWhat kind of ungrateful, unthinking shit was I, to not notice. I remembered how, when he was moving the junk burying my car. He was throwing around huge branches and stones the size of exercise balls, with his bare hands. So he kind of looked at me lustfully. He saved my fricking life. I should give him a blow job, if he asks.\n\n\"Girls, we've got to get your father warm and dry. Don, you are not moving. Do not go outside. We will be back in a few minutes. Pee in your pants if you have to, you're already soaked. It won't make any difference. Megan, Robin, follow me.\" Don just stood there with a kind of dumb expression on his face, as I turned back to enter the house.\n\nThe girls followed me inside. \"The bathroom is the door on the left. I'll be right back.\" I ran down the hall, through the great room and up the stairs to the master suite. There were things closer, but I knew exactly where everything was in my own bedroom. I grabbed an armful of extra large bath towels and two soft wool blankets. Turning around, I charged back down to the garage. The girls were already there, helping their father off with his rain suit.\n\nI set the blankets down and spread two of the towels on the cement floor, right in front of the entrance door to the house. \"Move over here Don. Sit on the cooler chest and let's get your boots off.\" He stumbled over, to tired to object and stand on his manly pride.\n\nHis boots were caked with mud and it took me a few minutes to undo the laces. I yanked the boots off and pulled off his socks. His feet were white, and pruney looking. They also looked they were starting to swell, now that his boots were off.\n\n\"Stand on these towels Don.\" He stood up and I started to shoo the girls into the house. But I stopped to look at his hands. They were swollen and looked too stiff, to be used. So without looking into his face, I undid all the buttons on his shirt. I then reached to undo his belt. When he started to object.\n\n\"Ah, ah, maybe you better......\"\n\n\"Don, your hands are all swollen. I'm just going to undo your belt buckle and the top button of your pants. Then we'll leave the rest to you. There is a full bathroom with a shower just the other side of that door. You get yourself undressed, wrap one of these blankets around yourself, get to the bathroom and take a shower to warm up. I've got an on demand water heater. There is plenty of hot water.\"\n\n\"While you're doing that. Megan and Robin will get you dry clothes out of your luggage. Okay?\"\n\n\"Okay, sounds like a good idea. Thank you very much.\"\n\n\"Megan, Robin, let's go inside for minute, to give your father some privacy.\" \n\n\"But I wanted to take pictures.\" Said Robin with a grin.\n\n...............................................................................................\n\nI slowly took off my clothes. Even though it was embarrassing, having Maria undo my buttons, especially my pants, I was glad she had helped. When she was doing that, it was easy to tell that we were almost the exact same height. I always liked women the same height as me. It made it easier, when dancing cheek to cheek or kissing. Hold it, drop that thought.\n\nThe garage I was standing in, was huge. There were a couple of snowmobiles in sight, as well as a medium sized tractor with a front bucket and backhoe attachments.\n\nWhat the hell am I doing! I'm standing here naked in her garage looking around. I've got to get warm! I wrapped a blanket around me and stepped inside. There was a flash of light, there were my two grinning daughters and my youngest was taking my picture. Standing behind them was Maria, with a concerned expression on her face.\n\n\"What took you so long Daddy? I bet you were looking at all the tools in the garage. You need help Daddy. I'm going to sign you up for Craftsman's Anonymous. I'm Don and I haven't bought a new tool in seven days.\" Megan said solemnly with her right hand raised, like she was making a pledge.\n\nI know I should have roared at them in jest, but I was too tired. I grunted and shuffled off to the bathroom.\n\n...............................................................................................\n\nWhy was Don taking so long? Should I go out there and check. Robin had a small digital camera in her hands, the kind that can fit in your pocket.\n\n\"Oooh, I'm going to get some good ones and post them on the internet. Maybe we can get Daddy a girlfriend.\"\n\nWhy did I feel a small flash of jealousy, ridiculous. Don finally came through the door. He looked so tired. I looked at his feet and they were definitely swollen. Robin took five or six pictures while he just grunted and shuffled down the hall. He wasn't paying much attention to how he held the blanket. At one point, he stepped on a corner of the blanket, pulling it down and exposing most of back and part of his buttocks. He just pulled the blanket back up and continued on to the bathroom. He walked in and closed the door.\n\n\"Hot damn, I got some real good ones. We post them on the internet and we'll get Daddy a girlfriend for sure. I'll title them Stud Muffin in a Blanket.\" Chortled Robin as she looked at the little screen on the camera.\n\n\"Let me see, let me see.\" Robin handed the camera to Megan.\n\nI found myself looking over Megan's shoulder at the little pictures on the LCD screen. Oh my God, what am I doing? What are they doing. They're his daughters, for goodness sakes. I took the camera from Megan.\n\n\"I'm sorry girls, I know you hardly know me. But I don't think this is appropriate behavior for young daughters to be involved in. Your father is too tired, to have really noticed what was going on. I've got to play responsible adult now, while he is so out of it. There is nobody else here. I'm sorry, I hope you understand. I will return your camera later.\"\n\nMegan and Robin, said \"aw\" at my actions, but didn't object.\n\n\"Now it is time to get the rest of your car unloaded. I'm going to talk to your father and convince him to stay the night. With the way his feet are swollen, I don't even think, he can put his shoes back on. There is plenty of room here and having company would be nice.\" Actually I wanted to be alone this weekend because of my breakup, but I wanted the girls to feel at ease.\n\n..................................................................................\n\nOh, man the hot water felt so good. Better than sex, probably. Though I hadn't had sex with anything but my right hand in such long time, that I might not have an accurate memory of it. Even when I was getting sex, it wasn't that often or good. But she was giving it to everyone....... STOP THAT THOUGHT. It is over and done with it. Don't think about her again. You've got a new life and the only family you have is your girls. You've got a new home and a couple of new jobs. The past is dead and gone.\n\nI took a deep breath and focused on the here and now. Boy I'm glad, that Maria insisted on me showering here. What with driving to the lodge and checking in, it probably would have been an hour or even two, before I could warm up there. Looking down at my feet I noticed how swollen they were, they didn't look like they would fit in my regular shoes. But, I had a pair of rubber mud boots, that were really loose. I could wear them if necessary. \n\nBut I didn't want to drive out, in that lousy weather and then stand around, waiting to check into the lodge. I wanted to lie down and rest my aching back. Maybe eat something. With that thought, I suddenly got hungry. The cabin we were supposed to be renting had a small kitchen. I had promised the girls spaghetti, Italian sausage and garlic bread tonight. I was too tired to cook and the restaurant, at the lodge even if it was open, sucks during the off season.\n\nI realized suddenly, that I had been standing in the shower for a long time, doing nothing. I quickly scrubbed myself clean and got out. On the floor of the bathroom was my overnight bag. I hadn't even heard anyone come in. I got dressed, put some thick socks on my feet and exited the bathroom.\n\nI smelled sausage and spaghetti sauce.\n\nI followed my nose.\n\n......................................................................................\n\n\"If we get everything unloaded and put away, your father is less likely to raise a fuss and object.\"\n\nSo I had the girls take their bags to one of the guest rooms. I wish I could have moved Don's to a room, but he needed his in the bath. Then with Megan on one side and me on the other, we moved their heavy cooler chest to the kitchen. Robin followed us, with a grocery bag full of food. \n\nI opened the cooler chest and felt my mouth water. I was so hungry. There were eggs, milk, bacon, packages wrapped in butcher's paper, orange juice and other good eats. Here I am, a multi-millionaire and what do I have. A cooler chest full of ice cream, and two chocolate cakes. Correction, one chocolate cake, I promised one to the girls. I do have a freezer with some food. But there is just a couple of frozen dinners and some meat, that would take too long to defrost and cook. \n\nCarl's wife Lucille, usually kept my pantry stocked. But she had been hurt in a car accident and was still in the hospital. Carl was staying with her in town, until she could return home. Carl and Lucille were good friends. I was paying for his hotel and had them both listed as full time employees, with medical benefits. Carl's former employer went out of business and he had lost a good chunk of his pension. \n\nWhen he first started working for me, his straight forward behavior, honesty and sense of humor; had warmed my heart. Lucille was absolutely wonderful, with a wicked sense of humor. I would sit in the kitchen while she cooked and Carl worked outside. We would chat, about all manner things. Some of the things, she said, I'm sure would shock Carl. He was a lucky man, but Lucille was also a lucky woman. They became my friends, and I had more money than I knew what to do with. So I paid them a little more than what was necessary, big deal. The big thing was the medical and dental coverage. Carl was suspicious, but I made up some lie about my accountant, needing it for a tax deduction.'\n\nRobin groaned. \"I'm sooo hungry.\"\n\nMegan chimed in. \"Me too, Maria can we use your kitchen? Daddy packed a lot of food. He promised us spaghetti and sausage tonight. He always packs too much food. He says you never know, when you might have company or a big appetite. So there is plenty for you, too.\"\n\nI was so hungry, that I wanted to scream \"let's cook\". But I had to be more dignified. \"I'm a bit hungry myself, if you're sure your father wouldn't mind? I would be happy to join you for dinner.\"\n\nMegan looked kind of sheepish. \"There is just one problem, we don't know how to cook very well.\"\n\nI laughed. \"No problem, I sure between the three of us, we can figure it out.\"\n\nMegan started lifting packages out of the chest and bag. There was one large bag, containing one of those cheap store bought salads. I guess Don, as a typical male, wasn't into salads. She explained each package. Her father's homemade spaghetti sauce, his homemade Italian sausage, which was extra good because he hand chopped the meat, instead of using a grinder. Homemade French bread, which was to be used to make garlic bread. A large package of mushrooms, which was to be fried with butter. Her father loved them as a side dish. Finally she pulled out a wonderful looking pecan pie, which was of course homemade.\n\nMy God, the man could cook, and he rescues damsels in distress. Maybe I should take another look at him. Maybe he is not so much a wolf, but a lonely sheep dog. I suddenly thought about Robin's digital camera in my pocket. Maybe I should take a closer look at those pictures, too. I could feel the beginnings of a tiny, wicked grin on my face.\n\n.................................................................................................\n\nFollowing my nose, I came to large and beautiful kitchen. I stood in the entryway looking around in awe. It was at least six hundred square feet, and there were at least six ovens. There were built in refrigerators, freezers, 4 large sinks, a center island with built in grill and smoke hood. I've seen many restaurants with less equipment. Wood cabinets, marble floor, granite countertop and of course, all appliances were stainless steel. I mentally figured the low end of the kitchen cost was $120,000 but I would not have been surprised at $250,000 or higher.\n\nMaria and my girls were standing at the other end of the kitchen, busy cooking.\n\nI walked slowly towards them, because of my swollen feet. So when I finally spoke, I was only ten feet behind them and they were surprised.\n\n\"Smells good.\" They all jumped a little.\n\n\"Daddy,\" screamed my youngest. \"You almost made me spill the sauce.\" She came running back to punch me in the arm.\n\n\"Sorry Baby, I didn't mean to scare you. What's happening?\"\n\n\"Maria is cooking the sausage and mushrooms. Megan is making the noodles and garlic bread. And I'm making the sauce and I set the table too, see.\" She pointed to an alcove with a large bay window. Nestled within was a large, round oak table.\n\nMaria spoke. \"I hope you don't mind that we started cooking and are using your groceries?\"\n\n\"Why should I mind. This is wonderful. You all seem to be doing a great job. I can play lazy man and sit down at the table, if you don't mind.\"\n\n\"Go right ahead. I think everything is going to be done in about ten minutes.\"\n\n\"Dad, are you feeling better?\" Asked Megan.\n\n\"Much better, I'm dry, and I'm warm.\" There was a sudden big gust of wind that rattled the windows. I took a deep breath, I wasn't looking forward to leaving this warm house for even the short trip to the lodge. I better give them a call and warn them, that we would be checking in late. I pulled my cell phone and checked it, no bars.\n\n\"Maria, I've got no signal on my cell phone. Can I use your house phone? I need to call the lodge and warn them about our late check in.\"\n\n\"Daddy, Maria wants us to spend the night. It is so late and it is so nasty outside. She's shown us our bedroom and it's beautiful. Please, can we stay one night?\" She looked at me with big mournful eyes. \n\nRobin returned to my side, took my hand and looked up at me with big eyes. \"Please Father, it would mean ever so much to us, if you would allow us to stay the night.\" She said it all, with a fake English accent. I wasn't sure if she got it from Mary Poppins or Oliver Twist.\n\n\"You two, think you've got me wrapped around your fingers, don't you?\"\n\nFrom Robin, \"yep.\"\n\nFrom Megan, \"pretty much.\"\n\n\"Okay, I just wanted to make sure. Maria, are you sure that it is all right for us to stay? I wouldn't want to inconvenience you in anyway.\"\n\n\"Don, I would be happy to have you stay over. Your two girls are wonderful, they are fun to be with and I'm enjoying their company. This is such a terrible night, that I would be grateful to have someone else in the house.\"",
        "\"Well I'm glad for the invite. I really didn't want to go back out in the storm either, thank you. If I could still use your phone? I need to let the lodge know about the change in plans.\"\n\n\"Of course, there on the wall by the refrigerators.\" \n\nI made my call and informed the desk clerk about the change. He understood, no problem.\n\n\"Did you bring in the small cooler chest from the SUV?\"\n\n\"No Dad, we forgot,\" answered Megan.\n\nI thought about it, I didn't have any shoes that I could wear, and I was weary and sore. \"Megan could you run to the car and bring back the small cooler? And while you're doing that, bring in my rubber boots and set them just inside the door. I might need to wear them tomorrow.\"\n\n\"Sure Dad, just let me pour the noodles into the colander and if you could pull the garlic bread, it looks done.\"\n\nI gravely strode, maybe limped, forward to check on the bread. Megan was right it was done. I found an oven mitt and pulled the tray.\n\nRobin started explaining to Maria. \"We've got a cooler chest full of root beer. It's wonderful and it's homemade by Daddy.\"\n\nMaria replied in a kind of a blithe tone. \"Of course.\"\n\nIt only took Megan five minutes to be back with the ice chest. There were only twelve bottles inside and just a small amount of ice, so I was sure she could handle it.\n\nThe table was set, and the drinks poured. We were ready for dinner.\n\n.............................................................................................\n\nThe cooking was going smoothly and the smell of the food, had my mouth watering. The girls had been telling me about their daily life and how great their dad was. The cooktop I was using, was right next to two ovens, stacked one on top of the other. The top oven was very useful for me, when I had guests. The glass door, on that oven, was like mirror that gave me a perfect view of the entry way, behind me. I kept one eye on that mirrored surface, waiting for Don.\n\nHe finally appeared in the door way. He seemed to be alright at first. But he looked around for a moment and sagged against the door frame. He seemed to rest there for a few minutes and then started quietly limping towards us. It took me a moment to figure out what was going on. Since our backs were towards him, he thought he was unseen and didn't have to put up a strong front. \n\nHe was only a few feet behind us, when he pulled himself together, pasted a smile on his face and spoke. \"Smells good.\" \n\nThe girls jumped a bit and I acted, like I had been startled too.\n\nRobin yell, \"Daddy, you almost made me spill the sauce.\" She ran back to punch him on the arm.\n\n\"Sorry Baby, I didn't mean to scare you. What's happening?\"\n\n\"Maria is cooking the sausage and mushrooms. Megan is making the noodles and garlic bread. And I'm making the sauce and I set the table, see.\" She pointed to the kitchen table.\n\nI spoke. \"I hope you don't mind that we started cooking and are using your groceries?\"\n\n\"Why should I mind. This is wonderful. You all seem to be doing a great job. I can play lazy man and sit down at the table, if you don't mind.\"\n\n\"Go right ahead. I think everything is going to be done in about ten minutes.\" Please sit down, before you fall over you oaf, I thought.\n\n\"Dad, are you feeling better?\" Asked Megan.\n\n\"Much better, I'm dry, and I'm warm. Maria, I've got no signal on my cell phone. Can I use your house phone? I need to call the lodge and warn them about our late check in.\"\n\n\"Daddy, Maria wants us to spend the night. It is so late and it is so nasty outside. She's shown us our bedroom and it's beautiful. Please, can we stay one night?\" She looked at her Father with big pleading eyes, what an actress. \n\nRobin ran back to her Father and took his hand. \"Please Father, it would mean ever so much to us, if you would allow us to stay the night.\" She sounded like that little girl from Chitty Chitty Bang Bang.\n\n\"You two, think you've got me wrapped around your fingers, don't you?\" Asked Don.\n\nFrom Robin, \"yep.\"\n\nFrom Megan, \"pretty much.\"\n\n\"Okay, I just wanted to make sure. Maria, are you sure that it is all right for us to stay? I wouldn't want to inconvenience you in anyway.\"\n\n\"Don, I would be happy to have you stay over. Your two girls are wonderful, they are fun to be with and I'm enjoying their company. This is such a terrible night, that I would be grateful to have someone else in the house.\" I would also feel guilty as hell, if you left.\n\n\"Well I'm glad for the invite. I really didn't want to go back out in the storm either, thank you. If I could still use your phone? I need to let the lodge know about the change in plans.\"\n\n\"Of course, there on the wall by the refrigerators.\" He made a brief call and hung up. Everything seemed fine from what I overheard. \n\n\"Did you bring in the small cooler chest from the SUV?\"\n\n\"No Dad, we forgot,\" answered Megan.\n\n\"Megan could you run to the car and bring back the small cooler? And while you're doing that, bring in my rubber boots and set them just inside the door. I might need to wear them tomorrow.\"\n\n\"Sure Dad, just let me pour the noodles into the colander and if you could pull the garlic bread, it looks done.\"\n\nHe limped over to the oven and pulled the tray.\n\nRobin started explaining to me. \"We've got a cooler chest full of root beer. It's wonderful and it's homemade by Daddy.\"\n\n\"Of course.\" Of course it is homemade. He is super Father, able to fix anything with a pocket knife and a bit of chewing gum, while baking bread.\n\nIt only took Megan a few minutes to come back. The cooler didn't look very heavy and she handled it with ease.\n\nWe sat down to eat and the girls were right. The food was wonderful, except for the salad. The girls and I started talking about horses again. I told them how I had four horses stabled at the lodge. I love to ride, but I let someone else clean up after them.\n\nThe Italian sausage was the best, I had ever had. I'm not much of a meat eater but it was goood. The girls even convinced me to try the root beer. I've had root beer before, and haven't thought much of it. But this stuff was of a whole different caliber. It was like the difference between a good bottle of wine and a cheap can of beer. A bottle a day, with let's say lunch, would not be bad. \n\nDon was strangely silent during the whole meal. Though, he did have a big grin on his face from all our antics, he didn't join in much. There was a small hint of sadness to his eyes. He laughed out loud when, after I drank the root beer, I got in a burping contest with Robin. I won!\n\nFor a spontaneous evening that came out of misfortune. I was having one of the best nights of my life. It felt like having a family. Which at first made me kind of sad. Then it made me think about Don. But I decided no, after the disaster with Robert, I was going to be careful. Especially since Don and I, didn't seem to be that compatible. I was impressed with him, but I felt no immediate attraction. On the other hand, all the people I've had an immediate attraction to, have been losers. I think, I'm going to keep my eye on Don and look at those pictures. Maybe he would grow on me.\n\nWe finished dinner and Don insisted on doing the clean up, since we had done all the cooking. I suggested that he needed to rest his hands which still looked terrible. He said that they were feeling better, and that the hot water and a little bit of exercise would be good for them. He shooed us off to relax. Maybe he was growing on me.\n\nAfter Don finished the clean up, he found us in the movie room. He was tired, so I showed him to his bedroom, right next to his girls' room. \n\nThe girls and I, watched one DVD and had a piece, a big piece of pecan pie. Which just might be better than chocolate cake. Then we called it a night too. \n\nThe bedroom I had given them, was on the opposite side of the house from mine and down the hallway. It was kind of a fantasy room that I had decorated. It had two queen size canopy beds with pink curtains. I always thought my friends would bring some daughters for a visit. But almost all my friends are still childless, like me, FUCK! So the room has never been used.\n\nI had some funny feelings when I went to bed that night. This had been, both one of the best nights of my life and the saddest.\n\n.......................................................................................................\n\nWhile I was cleaning up the kitchen, Maria and my girls were starting to watch a DVD. It didn't take me long and I was yawning, before I put the last dish in the rack to air dry.\n\nI followed the sound of the movie and girls talking, to an entertainment room. Huge screen TV, speakers all over the place and really comfy looking couches and chairs. Maria looked up at my arrival and paused the DVD.\n\n\"You look like you're having fun.\"\n\n\"We're having a blast Daddy, have you seen the size of this television? I didn't know they made them that big.\" Megan said, Robin had a mouth full of pecan pie and couldn't talk.\n\n\"How's the pie?\"\n\n\"Yummy, Daddy.\" Said Robin.\n\n\"It's quite good, best pecan pie I've ever had.\" Remarked Maria.\n\n\"I hate to be a party pooper, but I'm pretty tired. Maria could you show me, where I can put my head down for a bit?\n\n\"My pleasure, I'll be right back girls. Follow me Don.\"\n\n\"Goodnight Daddy.\"\n\n\"Night, Dad.\"\n\n\"Goodnight my darlings, my pearls from heaven, the cherubs of my.....\"\n\n\"Shut up Dad.\"\n\n\"There is no poetry in your souls.\" I turned to follow Maria. We went up the stairs from the great room and entered a long hallway. We started to pass room after room.\n\n\"Maria, if you don't mind me asking. How many bedrooms does this house have?\"\n\n\"Twelve bedrooms, not quite a hotel. But it is great when I'm entertaining, especially during ski season.\"\n\n\"How do you keep it all clean? It has got to be a full time job for one or even two people.\"\n\n\"I've got my handyman Carl and his wife Lucille. I think I mentioned them to you. They're in town right now. They don't work full time but pretty darn close. I've also got a cleaning crew, that comes in three times a week. I'm not comfortable with a full time, live in staff.\" \n\n\"Carl and Lucille live just down the road. If I need them, they're here. If not, they still get paid. Carl takes care of inside repairs and outside tasks. Lucille takes care of the kitchen and spot cleaning. The cleaning crew, takes care of all the large cleaning tasks. It is a big crew and they are normally in and out, in under four hours. This way I have more privacy and if at night, I want to run downstairs to the kitchen, in my underwear, I can.\" She said the last with a grin.\n\nKeep cool Don, don't think about Maria in her underwear. Oh God, I want to starting licking her toes and work all the way up. Take a deep breath Don, pause turn and look at the picture on the wall. Don't show her your face, so she doesn't see your fight for self control.\n\n\"Oh, you like Kincaid too? I think his painting are so cheerful. They always make me feel good.\" Commented Maria.\n\n\"Who the heck is Kincaid?\" I thought to myself. After composing myself, we continued down the hall.\n\nWe almost reached the end of the hall and Maria pointed to an open door on the right. \"That is your room. Your daughters' room is the next one down, on the right. Extra blankets are in the chest, at the foot of the bed. Make yourself to home.\"\n\n\"Thank you for your kindness Maria. Goodnight.\"\n\n\"Thank you for rescuing me. Goodnight Don.\"\n\nI stepped into the room and Maria turned to walk back down the hallway. I hurriedly stuck my head back out, to watch her ass, as she was walking away. When she was out of sight, I pulled my head back into the room. I then noticed the room had an attached bathroom. I was really hoping that there was some hand lotion in there. Because there was no way, I was going to be able to get to sleep, unless I took care of my John Thomas. And if there was no hand lotion, he was going to be getting some terrific friction burns.\n\nTo see such feminine perfection and not to able to , SHIT! Now was not the time. Maria had graciously invited us into her home. I'm a strange man and we're miles from nowhere. Hell of a thing, if I make a pass at her, she could kick us all out. So, I've got a hard-on that needs a whip and gun to control. Deal with it, Megan and Robin are having fun. Their enjoyment and Maria's peace of mind comes first.\n\nBUT I WANT TO FUCK HER, THOUGH! COVER HER IN WHIP CREAM AND CHOCOLATE SYRUP, AND LICK IT OFF HER BODY.\n\nOh God, there better be some hand lotion in that bathroom.\n\n.........................................................................................................\n\nI wished the girls goodnight and told them, that I needed to step into my home office for a bit, before I headed up to bed.\n\nThe girls went up stairs and I went to my den. Luckily Robin hadn't asked any questions about her camera.\n\nI booted up my computer and stuck the memory card from the camera into the slot on my pc. Robin had even taken more pictures than I had previously thought. And Don, had been much more careless with that blanket, too. He must have been very tired, since I didn't take him for a flasher.\n\nOh my, oh my, not bad, not bad at all. A bit bigger than normal, entirely adequate. Let us also remember, that he was quite cold at the time. Things might be scrunched up a bit. Torso looks a bit sloppy, not too much though.\n\nI felt so wicked looking at the pictures. You are a bad woman, Maria. You purloin his daughter's camera, so you can check our her father. I turned around to make sure my office door was still closed. Now to check out his back and ass. Hot damn, we have a winner. It was like looking at Arnold's ass from the first Terminator movie.\n\nEarlier, I had thought about wanting a knight in shining armor. Maybe I had one, maybe his armor just needed a little polishing. Or to put it another way. I had remodeled this old lodge, into a huge magnificent home, that was the envy of many of my wealthy friends. Maybe all he needed, was a bit of remodeling. I would definitely have to think about it.\n\nI transferred all the pictures to my hard drive, making sure the memory card was clear of the offending photos. I had to make sure to protect the innocence of his daughter. I was such a baaad girl. I almost printed out a copy of the pictures to take to bed. Maybe the result of the subsequent disasters of Robert and my car wreck, was going to be a good thing. \n\nI went off to bed. The storm was really lashing the house, when I finally got off to sleep. I was little worried about losing power, but I had generator for emergencies.\n\nMy sleep was interrupted by large crash, in my room, that shook the house. I jumped up screaming. I felt a blast of cold wet air. There was a large dark mass in front of me. I screamed again.\n\n\"What the fuck is going on? What the fuck?\" I was panting very loud in a panic. When awoken abruptly, I never handle it well. And this was about as abrupt as possible. I was making little whining noises, what was going on. I'm cold. Where am I? I didn't know what to do. I was in my bed. But I didn't want to get out, because it was so cold and I was frightened. Where's the light switch? Call for help?\n\nSuddenly my door burst open and I jumped again. Someone was there and they turned on the light switch.\n\n\"Maria, are you all right?\" He asked. What was his name? He helped me with the car accident. He has two daughters. Don, that's it. He's only wearing pants.\n\nI turned to look away from him and to where my picture window used to be. There was a tree sticking in my room. I made some more funny noises.\n\n\"Maria, are you all right?\" I didn't answer him.\n\n\"Maria, don't be afraid. I'm going to pick you up and carry you to my daughters' room. I' m not going to hurt you. I promise.\"\n\nHe wrapped all the blankets around me, and scooped me up in his arms, and held me against his naked chest. Don carried me out of my bedroom. At first I felt very nervous in his arms. But he kept reassuring me.\n\n\"I'm just taking you to my daughters' room. You'll be safe. Then I'll take care of that mess in your room. So don't you worry. I'm good at things like that. Megan and Robin are probably scared with this big storm. You can keep each other company.\"\n\nI started to feel very secure, with him holding me. But just as I was getting really comfortable, we were at the end of the hall and at his daughters' room.\n\nI heard Megan's voice. \"Daddy what's wrong? Why are you carrying Maria? Is everything okay?\" She sounded scared, I was scared.\n\n\"Don't worry Honey. Maria just had a big fright. A tree branch came crashing through her window. She was probably sleeping soundly. Getting woken up that way is really disorienting. It is so bad out tonight, that I think you ladies should have a slumber party. If you don't mind, Maria?\n\n\"No, no, I don't mind.\" I really wasn't sure what I was replying too. But it sounded good. If Don, kept holding me that sounded good too.\n\n\"Megan, if you get in one bed with Robin, I'll put Maria in the other.\" Don sat me down on the bed, but I had a hard time releasing my arms from around his neck. He didn't pry my arms loose, he just crooned to me until I calmed down enough to let go on my own.\n\n\"Don, thank you. I'm so embarrassed.\"\n\n\"There is nothing to be embarrassed about. That is a hell of a way to be woken up. You're sleeping deeply, you've already had stressful day, what with your accident. Now, a bloody tree comes through your window. Anybody would freak out.\"\n\n\"I know this is your house and your rules. But, with such a nasty storm outside, I think it would be a good idea if you three spent the night together. I'll to a little clean up of your bedroom and go back to bed myself. I'm probably not as good as your handyman Carl, but I'm not bad. Okay?\"\n\n\"Okay Don, thank you. Don't do too much yourself. I've got plenty of money and insurance. I can easily afford to get everything fixed.\"\n\n\"Just a little bit of clean up. Doing a little bit now, can save you big bucks later. I hate to see things go to waste, no matter how much money you have.\"\n\nHe got up from kneeling at my side. I didn't know, what he could do with a tree, sticking into my bedroom. But he said only a little bit of work. I would trust him to know better than me.\n\n\"Okay Don, thanks again for rescuing me a second time.\"\n\nWhen I said okay, he seemed to get a deep thoughtful look, like he was planning something. His next statement caught me by surprise, but the way it was delivered and his mannerisms convinced me, that it was an unconscious reply, his thoughts were elsewhere.\n\n\"My pleasure, for the second time tonight, I've carried in my arms the most beautiful woman I've ever seen. Well, I'm going to get to work, goodnight.\"\n\nHe left the room with me staring in shock, at his back. I turned to give Megan and Robin a flabbergasted look, but they were staring at each other with open mouths. Megan caught my expression, out of the corner of her eye and snapped her mouth closed.\n\n\"It's a spooky, stormy night. Let's tell ghost stories.\" Megan blurted out. I mentally applauded her quick thinking and the change of topic. But it wasn't a bad idea. To be spending a night, telling spooky stories with a pair of girls, young enough to be my own daughters. Damn, I wanted my own children so bad.\n\nI told the Gray Ghost of Witching Tower. Just before the next story, Robin announced that she was hungry and hinted at wanting a piece of chocolate cake. That idea met with unanimous approval. I told the girls to stay in the room, while I hustled down to the kitchen in my pajamas.\n\nWhen I passed by my bedroom, I opened the door to look inside. It looked like Don had given up and I couldn't blame him. The tree or branch sticking through the window was huge. I couldn't see what anyone could possibly do tonight, especially with the storm outside. I shrugged my shoulders and shut the door. Oh well, that's what insurance is for.",
        "I continued down to the kitchen and loaded one entire cake, plates, napkins, knife, forks, and three glasses of milk onto a tray; then rushed back to the room. The next story was the Green Ghost of Petticoat Lane.\n\n.........................................................................................................\n\nAfter dropping off Maria, I returned to my room to get properly dressed. I was already second guessing myself. I loved to solve problems like this. Give me something broken and I've just got to try and fix it. Eighty or ninety percent of the time, I make things better. But, sometimes I screw things up and make things worse. And this could be, one of those situations. But, I can't help myself. It's liking having an itch, I've just got to scratch it.\n\nOnce I was dressed, I stopped in Maria's bedroom to inspect things. Damn, I wasn't sure if it was one big limb or the top of a tree, but it was big. I better hustle outside and see how much weight is leaning against the house. I ran down to the garage, put my mud boots and rain gear on, grabbed my spotlight and went outside.\n\nI had to walk clear around the house, to get to the back side and see what was going on. Maria's house had a walk out basement on the rear. So the broken window was close to forty feet from the ground. A large oak tree had been toppled against the house, with the crown of the tree breaking through the window.\n\nDid I really want to do this? Hell yes, I'm a manly man and they called me submissive. But could I do it, without further damage to Maria's house is the question? I would hate to make myself look like an idiot to her. I am an idiot, I just don't want her to know. Well, I've got to see what kind of tools Carl has. Without the right gear, I might as well forget it.\n\nCarl had a good assortment of chains, ropes and towing straps. There was a good quality chain saw with a 24\" bar. He had not one, but two come-a-longs, with a four ton rating. I just hoped they were strong enough. There was also a tractor in the garage, but he had the engine in pieces, so that was a no go. \n\nSo I had the tools for the job. Did I have the materials to patch the window?\n\nWell, there was rack full of two by fours, but I couldn't find any plywood. I also found a supply of tarps, but they were either canvas or the cheap blue kind. But I had a silver, heavy duty, 12' x 12' tarp in the back of my SUV, that I kept for emergencies. I could build a frame out of the two by fours, cover it with my tarp and fit it into the existing window frame from inside the house. Probably not the best solution, but I'm an idiot. There was no way, I was going to climb forty feet up a ladder, on the outside of the house, even without a storm. \n\nGot the tools, check. Got the materials, check. Got the stupidity, double check.\n\nI couldn't measure the window upstairs for the patch, accurately, with the tree in the way. So I was going to have to remove the tree, then measure things. That would leave the room, exposed to the full force of the storm. I could only hope, that things wouldn't get to wet in Maria's room.\n\nI went back upstairs to attach a chain to the crown of the tree. I took a pair of loppers and a hand saw with me. Probably the chain saw would have been better, but I didn't want to scare the girls with the noise. Who am I kidding. I didn't want Maria to run down the hall asking me. \"What the hell are you doing?\" She would probably stop me.\n\nGetting that chain attached was a pain in the ass and took me almost forty-five minutes. Damn that chain was heavy. I left enough wood chips and sawdust in her bedroom to mulch a pretty good size garden. I was well on my way to making myself look like a complete numbskull. Time to complete my buffoonery. I wonder if Maria, has insurance protecting her from the dumb. \n\nI went back outside pushing a wheelbarrow. Loaded with more chain, straps, ropes, come-a-longs and the chain saw. I prepared the base of the tree with the chain saw, cutting out a wedge shape. This was so, when I pulled the tree away from the house, it could more easily fall in the direction I wanted.\n\nI then attached the two come-a-longs, to the bases of two different, very large, trees that were on a slope a short distance from the house. I hooked more chain onto what I had dropping down from the top of the tree, and then I attached that chain to the cable of the come-a-long. I then had to wait for a lull in the wind. It took nearly a half an hour for that lull to show up. While I was waiting, I entertained myself by singing Monty Pythons', \"I'm a Lumber Jack and I'm Okay\", repeatedly at my loudest volume. It seemed appropriate, what with the task at hand, the weather and me being a complete fool.\n\nI also got into fits of maniacal laughter, imagining the girls being able to see and hear me. Megan and Robin would disavow knowing me. Maria would probably call the sheriff. \n\nEventually the lull came and I started cranking the first come-a-long like mad. It took a while for any progress to be made, but eventually it started to move. I nearly had the tree nearly up right, when I reached that particular come-a-long's limit of travel. Which was what I had feared and known would happen. Now I had to connect the second come-a-long to the chain to finish pulling the tree over. And I had to do it quick, because I didn't want the tree to fall side ways, and maybe twist into the house. \n\nGod must have been smiling down upon me, because everything worked exactly as I had planned. I didn't even have to run that fast or far, when the tree started to topple over. It was a pain digging out the chain and the buried come-a-longs from the trees branches, but it was expected. Paul Bunyan, eat your heart out. \"I cut down trees, I wear high heels, suspendies and a bra!\"\n\nAs quickly as I could, I rushed back into the house to measure the size of the bedroom picture window. It was a perfect 6' x 6' square, which made things a bit easier, I measured twice of course. \n\nI prepared the frame in the garage, and attached the tarp using some fender washers and screws. I lugged the whole thing upstairs. I first attached some scrap wood to the outside edge of the existing window frame, to act as stop when I slid my patch into place. I didn't want the whole thing to fall out of the window before I secured it. Then I used some four inch galvanized deck screws to attach my frame to the stops and pre-existing window frame. \n\nDamn I was good. It was at that point, that the lights went out. Seeing as how every thing had gone as close to perfect with my hair brained plan, as humanly possible, losing power was a necessity. Life can only give you so much good luck. \n\nWhile outside, I had spotted a whole house generator and I patiently waited for it to switch over, but it wasn't happening. There was a wet/dry shop vacuum in the garage, which I had been hoping to use for clean up. Bending down I felt the carpeting and it was really soaked. Maybe I would checked into what was wrong with the generator.\n\nThere was a file cabinet, next to Carl's work bench. He had everything neatly organized and sure enough there was a manual for the generator inside. First thing that occurs to me, when an engine doesn't start, is that the battery might be dead. I rigged up a 12 volt tester, using a light of the tractor and some wire. Sure enough the battery was dead on the generator. Following the instructions in the manual, for these conditions. I swapped in the battery from the dismantled tractor and had the generator working in less than twenty minutes. When I was done, I carefully looked over my shoulder and made sure I had no witnesses. Time to do the happy dance.\n\nI cleaned up the tools, Maria's bedroom and then went to bed. It only took me about five hours, I was impressed. As a reward, before I left Maria's room, I had grabbed one of her pillows and clutched it to my face, breathing in her scent. Everyone should have the right to dream a little bit.\n\n..........................................................................................................\n\nWe ate too much cake and then we all climbed into one bed to tell ghost stories. I was surprised, it was Robin that knew the scariest stories. We all conked out after about two hours. \n\nWhen I woke up the next morning the light on the bed side clock was flashing. I guess we must have lost power during the night. Listening carefully, I could hear the sound of the generator. Normally, when we lose power it takes at least three days to get it back. I would have to check the level on the propane tanks. That was something Carl would normally do. If the level was too low, I'd have to give the gas people a call.\n\nI slowly sat up in bed. This was a bit harder to do, since I had someone else's leg laying across my waist. I looked down at Robin's sleeping face. She looked like she could sleep forever. Megan was at the very edge of the bed and looked like she was about to roll out. I carefully extricated myself from Robin and got out of the bed. I walked quickly to the other side and rolled Megan away from the edge. Man, these girls could sleep. \n\nI looked around the room with a grin. This was a wonderful way to christen it. I was so happy.\n\nI left the room quietly and walked back to my own bedroom. Time to see the damage in the light of day and change my clothes. When I opened the door I was shocked. The tree was gone! The room was clean! There was a big silver tarp where the window used to be. From adjoining windows there was bright sunlight streaming in. The silver tarp was flexing a bit in the wind, but it seemed pretty secure. I walked slowly across the carpeting. When I got close to the window, my bare feet felt a bit of wetness. All the broken glass was gone. How long had Don worked?\n\nI moved over to an adjoining window to look outside. I had expected the limb to be from the tree closest to my bedroom. But I had not expected the entire tree to be down. Carl had warned me about that old oak. But it had looked so healthy, that I had refused him permission to cut it down.\n\nFrom the remains of the splintered trunk, I could easily tell that it was the whole tree that had come down on the house, and broke through my window. I could also see saw cuts. I thought I heard a chain saw last night but it was only for a short time, and I thought it was just noise from the storm. There had been longer noise too, that woke me briefly. But I had ignored it too. There was no way someone would be vacuuming at four in the morning.\n\nI marched down to Don's room to get an explanation. I knocked on his door and there was no answer. Cautiously I opened his door, and peeked at the bed. He was laying there spread eagled in just his boxer shorts. His hands and feet were still swollen or swollen again. He rolled over, making a groaning noise as he did. I quietly left the room and closed the door.\n\nI went back to my room, to clean up and change. Once that was done, I needed to get some coffee and get my thinking in order. Over my second cup, I thought about my current situation. Two strange girls sleeping in my home, and one exhausted man. I had a good time with Megan and Robin, but they were almost complete strangers. But I did want to get to know them better. I guess I'm looking for an outlet for my maternal instincts. \n\nOnly problem, they came with their father. Who I wasn't too sure about. Did I like him? Could I like him or was he just a door stop. It was awfully presumptuous of him, to have done so much work like that, with out getting my permission. I know in one way, it was nice and he worked hard. But this is my home, mine! Nothing is done here without my okay. On the other hand, I was pretty upset when he left me, maybe this was something that he had to do, for the safety of my house.\n\nDon't get me wrong, having the clean up done, so I don't have to worry is great. But he still should have cleared a job this big with me. I'd shelve my thoughts about the repairs, until I had more information.\n\nMegan and Robin had come up here to go horse back riding. I owed them for my rescue. Don would probably be tired and sore for the rest of the day. And I owned four horses, stabled at the lodge. Even though I had flunked calculus, this kind of math was easy for me. Time to see if the girls were awake.\n\nRobin was snoring and had her feet on top of Megan's chest, it was so cute.\n\n\"Megan, Robin time to get up, if you want to go riding.\" No answer.\n\n\"GOOD MORNING YOU TWO.\" Maybe a bit too loud. Robin did a sort of back flip off the bed, landed on her feet and collapsed onto her butt. Megan rolled off the bed, nearly hitting her head on the night stand and hit the floor with a thump. I even heard a surprised yell from Don's room.\n\nGroans filled the room and I think the room next door too. Megan sat up on the floor rubbing her eyes. Robin jumped up, to run to me and give me a good morning hug. Ooh, that was nice.\n\n\"Morning Maria.\" Nice hug, but her breath. I should have made them brush their teeth after the chocolate cake, last night.\n\n\"Good morning, Maria.\" Megan slowly stood up, looking at me while scratching her butt. She definitely was not a morning person.\n\n\"I figured, I would use more of your father's food to make us breakfast. What would you like?\"\n\n\"We always have either pancakes and sausage, or French toast and sausage on Saturdays with Daddy.\" Robin replied.\n\n\"Okay pancakes and sausage, it is.\"\n\n\"Be sure to use Daddy's special syrup.\"\n\nI winced at the double meaning that statement could have, I don't even know if I like him. \"Don't tell me, it's homemade right?\" Megan wandered off to the bathroom.\n\n\"No, Daddy just mixes regular syrup and real maple syrup together, it makes it extra good.\"\n\nThere were groans coming from the bathroom. Megan definitely was not a morning person. But there were still sounds of pain, coming from next door too.\n\n\"Robin, your daddy is making some funny noises let's go check on him.\"\n\n\"Okay,\" Robin led the way out of the room. She didn't knock on his door, but just burst right in.\n\n\"Daddy are you okay?\"\n\nHe was laying flat on his back, but he was covered up. Before Robin had opened the door, I could hear him groaning. Now that we were inside the room, he had shut up.\n\n\"Good morning, Baby. I'm just a little sore.\" He looked over at me. \"Good morning, Maria.\"\n\n\"Good morning, Don. Sorry for invading your privacy, but I heard your groans. You did an awful lot of work last night, you're probably very sore. He looked a little embarrassed at my comment.\n\n\"Robin, could you get me a couple of Motrin out of my bag, and a glass of water from the bathroom, please? After that, I'm going to teach you how to grovel properly when you make a mistake.\"\n\n\"Sure Daddy. Did you make a mistake.\"\n\n\"You better believe it, Honey.\"\n\n\"Maria I apologize for not making clear to you how much work I intended. This is your home and property, and I never should have done anything so drastic, without getting your permission. I sincerely apologize, things could have gone wrong very easily. I had no right to do those things, without your full understanding and okay.\"\n\nI was taken aback. I thought he was going to go all alpha male on me. \"I know what is better than you do little girl,\" kind of attitude. I've never taken that crap from anyone. Maybe I was bit flustered last night, but give me a few minutes and we could have discussed things. But he recognized his mistake and was sincerely apologizing.\n\n\"I've got a problem, Maria. When something is broken, I've just got to try and fix it. It's a compulsion.\" He looked at me with pleading eyes. \"I carry tools with me, wherever I go, just to be ready. I just couldn't go to sleep last night, with the thought of that multi-ton tree leaning against your house.\"\n\nMulti-ton, multi-ton? Was it that big? I began to have some unease about last night's situation.\n\n\"The wind was making it shift around in your window frame. I was worried about structural damage or maybe the tree would break loose from the window, slide down and take out the whole exterior wall. I'm really sorry. I should have expressed my concerns to you. I didn't want to disturb you last night, but only an idiot wouldn't wake a homeowner for such a job.\n\nBoy, he was good at groveling.\n\n\"Daddy always has to fix things, and he's good at it too.\" Robin spoke, looking at me with such a sad face. \n\nI thought about Don's apology. He knew, he had screwed up in not talking to me. I also thought about his compulsion excuse. Maybe this compulsion thing, is what causes a man to search a drainage ditch on a dark and stormy night. Maybe this compulsion of his, saved my life. It was time to be gracious.\n\n\"Don, I thank you for your work and your apology. You didn't wait for me to bring it up either, that means to me that it is more sincere. Please if you do any more work around here, consult with me first, okay?\" He started to look very sheepish, oh, oh.\n\n\"Well I'm sorry Maria, but last night as I was almost done, we lost electricity.\"\n\nI gave him a gimlet eyed stare. \"Yeah, and I've got a back up generator, that starts automatically.\"\n\n\"Well, it didn't start. So, I took a quick look at it and the battery was dead. It was real easy to fix. I just swapped the battery from your tractor and it started right away. I'm sorry.\" He said that all in a rush.\n\nI thought about the lights, heat, and well pump. That wouldn't be working right now, if he hadn't fixed things. There are times to stand on principle and there are times not to be a damn fool. And I hated to admit, it is nice to be taken care of, too.\n\n\"Well Robin, what do you think we should do to him?\"\n\nShe seemed to go deep in thought. \"I would say no breakfast, but he looks hungry. Tell you what, I won't give him any kisses for two days. Is that enough?\"\n\n\"Sounds fair. Okay Don, you are forgiven. Don't do it again.\"\n\n\"Yes, Ma'am. I won't do it again.\"\n\n\"How come I don't believe that? You're a complete fix-it addict, aren't you?\"\n\n\"Yes, Ma'am. I'm sorry Ma'am.\"\n\n\"You need mental therapy, but that can wait until after breakfast. The girls want pancakes and sausage. I'll have it ready in about forty minutes. You groan your way out of bed and come down, okay?\"\n\n\"Okay and thanks for accepting my apology.\"\n\n\"You're welcome Don. Thank you for fixing my house.\" I turned and left the room. \n\nAs I was leaving, I heard Don say. \"No kisses for two days, two whole days, you're a mean woman, Robin.\" \n\nOh damn, I forgot to talk about taking the girls riding. Oh well, I'll do that at breakfast.\n\n.........................................................................................................\n\nI was happy, that Maria had accepted my apology and wasn't too ticked at me. Maybe I should have made it in private, so she could have really yelled at me. But I don't like to hide things from my kids. They can learn from my mistakes too and how I handle them.\n\nRobin helped me to get out of bed, and then she pushed me into the bathroom. She told me that I was stinky and to shower. Then she went back to her own room to get dressed.\n\nI showered, dressed, left my room, and walked slowly down the stairs. I could smell the sausage, cooking. It was wonderful, another a meal I didn't have to prepare. I consider myself a pretty decent cook, I had to be, especially since I consider most restaurant food to be overpriced and generally lousy. But the big secret about me is that I hate to cook, but I love eating good food. I don't mind baking, I just hate to cook regular meals.\n\nI walked into the kitchen. \"Smells wonderful, is there any coffee?\"\n\n\"It ought to smell good since it is your homemade breakfast sausage.\" Maria put extra emphasis on the word \"homemade\".\n\n\"Yep, I've got a back lot, where I raise some pigs. That meat there comes from Emily. She won me a prize at the county fair. Should be mighty fine eating.\"",
        "Maria turned to stare at me, looked down at the fry pan and mouthed the word Emily.\n\nMegan and Robin, burst out laughing.\n\n\"You're kidding me right.\" Maria asked. I put a big grin on my face and nodded my head, yes.\"\n\n\"Robin, make a note. You don't give your daddy any kisses for three days, okay?\" \n\n\"Okay, Maria. Daddy you're a bad boy, and you're in so much trouble.\"\n\nI looked down, faking depression and walked over to the coffee pot, pouring myself a cup. I then walked over to table and sat down with Megan. Who was nursing her own cup of coffee. Megan was not a morning person. It got to be so bad, that starting at twelve years old, my ex-wife and I either gave her one cup of hot chocolate or one cup of coffee, heavy on the cream and sugar, in the morning. On school days, we also had to wake her up a half an hour earlier than Robin, just to get her fully prepared for her day.\n\n\"Good morning, Sunshine.\" She groaned into her coffee cup.\n\n\"Good morning, Megan.\" She looked up, gave me a half-assed smile, mumbled \"morning\", and then resumed staring into her cup.\n\n\"Were you out bar hopping again? How many times have I told you...\"\n\n\"Daddy.\"\n\n\"Yes, Dear.\"\n\n\"Shut up Daddy, or no kisses from me too.\"\n\n\"Yes, Dear.\"\n\nI looked towards Maria, who was staring at us. She had a big grin on her face.\n\n\"Don, I was thinking. I've got four horses stabled at the lodge. The girls mentioned to me that you don't ride. How about I take the girls riding today. You seem to be pretty stiff and sore, still. That way you can stay here and relax. Does that sound okay to you?\"\n\n\"It sounds good to me Maria. But we've already spent one night here. Don't you want us out of your hair?\"\n\n\"Oh no, I'm having fun. I'm really enjoying your company. Please stay another night. Also, since my car is stuck in that ditch and maybe covered with water, I'm trapped here without transportation. If you don't mind, when you leave tomorrow, could you give me a lift back to town?\"\n\n\"No problem, giving you a lift.\" Megan and Robin had been following the conversation with big grins on their faces. Even Ms. Grouchy morning person.\n\n\"And since Megan and Robin, obviously approve. We would be happy to accept your invitation of another night, thank you. If I stay here during the day, it will give me a chance to cut up that tree into logs for your fireplace.\"\n\n\"Don\"\n\n\"What, Maria?\"\n\n\"No\"\n\n\"But, Maria\"\n\n\"No and don't make me say it a third time. I appreciate your offer. But I've got a handyman that I pay. He can take care of it, when he comes back. You are still stiff and sore. No work, promise me.\"\n\n\"I promise.\"\n\n\"No building an addition onto my home or digging a swimming pool, understand?\"\n\n\"Understood, Maria. Can I use your kitchen when you're gone?\"\n\n\"Sure, but why?\"\n\n\"I promised the girls chocolate chip cookies, for this weekend. I could bake them and have dinner ready to go, when you get back.\"\n\n\"Don, there are very few women in the world, who would turn down fresh baked cookies. And I'm not one of them. How do you make your homemade cookies.\" Again that emphasis on homemade.\n\n\"Nothing special, just double chocolate chips and maybe a touch more vanilla.\"\n\nWe finished breakfast and I did the clean up, while the girls got ready to go riding. I of course had to lend Maria my SUV and then they left for the remainder of the day. I was going to prepare a sandwiches to take with them, but Maria said that they would buy a hot lunch at the lodge.\n\nAfter they left I spent an hour or two, checking out Maria's home. Damn the place was big. Kitchen, family room, great room, bathrooms, bedrooms, entertainment room, game room, room with growing plant thingies, basement gym with a lap pool, den, and I'm not sure I found everything.\n\nI then read for an hour or two, made myself lunch and started making cookies. I'd do the dinner setup, when I was done baking.\n\n............................................................................................... \n\nWhen I got to the stables. I talked with Nancy, she was the lead instructor and stable master. She was also a part owner of the lodge. I spoke with her about the girls level of skill. It was her opinion that my horses were to spirited for their abilities. Because of the storm, many people had cancelled their weekends, so the girls were able to pick their favorite horses from those available.\n\nWe did a two hour ride, and then went to lunch. We walked a bit to stretch muscles unused to riding and then went on another ride with different horses. Most of our conversations for the day centered on me, giving the girls instruction. I also enjoyed showing the girls some of my secret spots, that weekend visitors never get to see.\n\nWith sore legs, we went back home. We came home to house filled with smells of fresh baked cookies. I could get used to this. We were all horse stinky, but we stopped in the kitchen for a few cookies and a glass of milk.\n\n\"What's for dinner, Daddy?\" Asked Robin.\n\n\"Turkey and dumplings, and I'm making corn bread, too.\"\n\n\"I thought you were going to make hamburgers and French fries?\" Remarked Megan.\n\n\"Maybe tomorrow for lunch, before we go home. You always eat too much of the French fries. I want you to eat something a little more healthy.\"\n\n\"But your French fries are so good.\"\n\n\"Enough talk, you're stinking up Maria's kitchen go shower.\"\n\n\"Don, would it be okay if I invited your girls to a little movie party tonight? We've got pecan pie, chocolate cake, a ton of ice cream, and now your cookies. The three of us can stay up late and be bad, then we can sleep in the car while you drive us home.\" I gave him my sweetest smile.\n\nHe took a deep breath. \"No problem, don't let them eat so much sweets that they get sick.\"\n\n\"Getting sick is half the fun.\"\n\nUs girls went up stairs, to remove the stink. After we showered I put on some perfume and gave some to the girls too. This was to tease their father. He held my chair for me, as I sat down and seemed to take a couple of deep breaths. I was secretly pleased.\n\n\"Daddy do we smell all pretty now?\" Asked Robin.\n\n\"You all smell like beautiful flowers.\"\n\nWe had a good meal. The girls and I discussed which movies I had brought, and chose the order that we would watch them in.\n\nMegan, Robin and I did the kitchen clean up, I insisted. Don cooked this time, so it was our turn to clean up.\n\nMegan and Robin, hinted that a homemade pizza would really be nice for our party, tonight. But Don said that he didn't have the ingredients. Was there no end, to this man's talents?\n\nDon went up to his room to relax and watch television. All the bedrooms were equipped with satellite TV.\n\nMegan, Robin and I had a wonderful evening. As we talked and ate, we started to open up more with each other. I told them about Robert and they told me about their father's divorce. What they told me shocked me and I couldn't believe their story. They told me many things, they said, that their father didn't know. They were willing to tell him, but he didn't want to know anything more. He said, he had been hurt enough. To know anything more, would just hurt him further and make him more angry. The past was dead and it was best to leave it that way.\n\nI really liked the girls, and I was a little interested in Don. But that story couldn't possibly be true, could it? But if it was maybe true, then I had to speak to Don about the girls. According to the story, he no longer had any adult friends to confide in.\n\nI had a chest in the movie room full of blankets and pillows. The girls, eventually fell asleep on the couches, and I covered them with blankets. I wanted my own babies, so bad. I turned of the television and fell asleep in a recliner.\n\nI woke up the next morning, to hear Don making noise in the kitchen. When I walked in, he was making coffee.\n\nI was only in my pajamas and robe, but I didn't feel uncomfortable at all. He offered me a cup.\n\n\"Don, I know we hardly know each other, but there are some things I need to discuss with you. It is about your girls.\" He looked at me intently. I told him how I had told the girls about my most recent break up with Robert. I also told him a few details about the break up. He commented, \"what a complete moron.\" Which made me feel better.\n\nBut then I went on to tell him what the girls said about his own divorce. He got a very wary expression on his face.\n\n\"Don, I apologize for invading your privacy, but the girls had a lot to unload. And they've had no adult to talk with about it. You justifiably don't want to be hurt anymore. Their mother and your sisters, they consider to be the cause of the ill that befell you and them. They've got no one to talk too. They really should be seeing a therapist.\"\n\n\"My ex-wife and I, had them in therapy after the divorce. But Barb, my ex-wife, said that everything was resolved and that they didn't need therapy anymore.\"\n\n\"Don, your ex-wife arranged the therapist, right? And then she decided it was over, right? After everything that Barbara did to you, according to the girls, you still trust her judgment and her word?\" I gave him a look of disbelief.\n\nHe got this extremely angry look on his face. And I was frightened at first.\n\n\"I'm a complete idiot, aren't I?\" He put his face in his hands. He took several deep breaths. I wanted to get up and put my arms around him, but I didn't want him to assume, that we were unusually close. I still remembered the look of the hungry wolf. \n\nHe finally looked up at me and his eyes were wet with tears. I then cursed myself for not offering a bit of physical comfort, to the man who had saved my life. \"I've been a terrible father. I've been unable to talk to them about the divorce. Every time I think about the betrayal, there is so much rage, that it frightens me. I can't let my girls see how angry I am. But, how could I not see that they needed help?\n\n\"According to the girls, you're a wonderful father. You give them every bit of love in your heart. You're just not very observant. If you like, I have some good contacts. I'm sure I can find an excellent therapist for the girls. You'll have to keep it a secret from your ex-wife, though. I don't think she is going to like them, going back to therapy or seeing a therapist that isn't hand-picked by her.\"\n\n\"She kept so many secrets from me, that I've got no problem keeping one from her. I do worry though, that asking the girls to keep that secret will put additional pressure on them. But I don't see any other choice at the moment. Thank you for your advice about the girls and thank you for your help.\" What I saw before me, was a completely sincere and loving father, and I cursed Robert for making me so wary about future relationships.\n\n\"Don, have you thought about seeing a therapist?\" I asked with a bit of trepidation.\n\n\"Thought? I've been to a therapist and I still see her once a month. I can't even talk to her without blowing up. She says that I am justifiably angry at the situation and I need time to heal. Because I still have to talk to Barbara, regarding the children, frequently. I'm constantly being reminded of the betrayal. So every month I visit with my therapist and we see if I'm able to talk about the entire mess, without hulking out. She says, that I need some new happiness in my life to counteract the pain.\"\n\n\"I've got plenty of happiness with my girls. But she says, that it is not enough. She says, that every bit of happiness I had, except for the girls, was stripped from me, faithful wife, loyal family and friends, successful career, and financial success. Well I'm working on the financial success. I guess I will never have a successful career as a programmer again, my old employer set out to black ball me.\"\n\n\"Have you tried dating?\" No why did I have to go and ask that question?\n\n\"Maria, I'm a mental wreck. I like being a nice guy, but with this rage I've got inside me.\" He shook his head. \"I don't have the guts to inflict my presence on any woman, it wouldn't be fair or kind to them. On top of that there must be something wrong with me, if my wife could cheat like that and have everyone back her up. It just doesn't help my self confidence.\"\n\n\"Maria you've helped me unload a bit and I appreciate it. But as you pointed out, we barely know each other. Though what I do know, I like quite a lot. But I don't like talking about the situation, rages issues like I mentioned, and I don't like inflicting my past on anyone else. There is no reason for you to have to deal with it.\"\n\n\"But any bit of help you want to extend to Megan and Robin, I will be eternally grateful for.\" He looked at me with eyes full of sincerity and desperation. What he had unloaded on me, was a bit of a shock. It was expected because of my talk last night with the girls, but still a shock. My first thought, was to run away from this basket case and I didn't need those kinds of trouble in my life.\n\nBut....., I really liked Megan and Robin. They needed an adult that they could confide in, besides a therapist. This situation was not their fault and not Don's. Right now, my dead body could be stuck in a car full of muddy water. No more waffling, it was time for some serious payback. I would check into Don's divorce and if their story was on the level? I would strive to become a friend that they could confide in. On top of that, he bakes cookies. \n\n\"Don we'll need to exchange cell phone numbers to talk about the therapist. And next weekend will be the final time for the year to go riding at the lodge, they will be closing the stable for the upcoming ski season. No promises yet, I'm not sure of my schedule.\" I'm not sure your story is going to check out, I thought. \"But if I'm able to make it, how about you and girls come back here for that weekend? Probably a couple of my girlfriends will be here too. I think it would be good for Megan and Robin. We can have a repeat of our movie party. I'll give you a call, probably my Wednesday, if I can make it. Does it sound good to you?\" \n\n\"I think or know that I'm taking advantage of you, but I know the girls would love it. But let's not tell them until you know for sure. I wouldn't want to disappoint them.\"\n\n\"Agreed, but you will of course have to bake more cookies.\" I said that with a grin.\n\n\"If you want, I will cook and bake all weekend long, and clean your house too.\" He said sincerely.\n\nIn the back of my mind, was the idea that Don was a knight in rusty armor, in need of a bit of polishing. It also seemed, that he might be a wounded knight, that had fallen off his horse. He needed some healing and perhaps a new horse. \n\nAt that point in my thoughts, I could hear Megan and Robin walking down the hall, towards the kitchen. They stumbled in, with Robin pushing a reluctant and groggy Megan.\n\n\"We need an IV of coffee, with ringers sugar and cream, stat!\" Stated Robin with a big grin. Megan just groaned.\n\n\"Should I make French toast and bacon for breakfast?\" Asked Don.\n\nI looked at him in shock. Robin put a hand over her mouth and voiced what I was thinking. \"No more sweets! We ate one whole cake, one gallon of ice cream, I don't know how many cookies, and we finished the pecan pie. I don't want any more sweets for at least a week, or I'll barf!\"\n\n\"Well, how about I make an early lunch at eleven? We'll have hamburgers and French fries.\"\n\n\"Your homemade French fries, Daddy?\" Again with the homemade.\n\n\"Of course.\" \n\nDuring that brief conversation Robin had left Megan to wobble on her feet, alone. I hurriedly got up and steered her to a chair at the table. Then I got her an IV of coffee, stat.\n\nWe sat at the table, just gabbing for an hour. It was so nice. I really hoped Don's story checked out.\n\nThe girls and I, then went upstairs to get cleaned up and dressed. Don asked me if I wanted him to strip the sheets off the bed and launder them. The man does laundry, too. I reminded him, that I paid a cleaning crew for that.\n\nI dug out a Play Station, that I had purchased for guests. Robin put in some sort of fighting game. Megan showed me how to play. The rankings after two hours of play. Megan beat Robin, Robin beat me, and I kicked Don's ass. He grits his teeth and snarls when he plays, I am of course more dignified and ladylike, hah. Lunch got started late.\n\nWe ate in the garage, it was great. Don didn't want to cook inside because of all grease. He said he would cook just outside the garage and bring the food inside to the kitchen. We all went outside to watch and give him unneeded advice. It just evolved into all of us eating in the garage. He made wonderful hamburgers on a little hibachi grill. \n\nBut the truly fantastic thing was the French fries. Unlike those common restaurant fries that are nothing but crispy pieces of Styrofoam with no taste. Don made them from scratch and he had a little electric deep fryer. He must have made at least five batches. He left the skin on the potatoes and hand cut them down to the perfect size. Once they were fried up, he would dump them in a brown paper bag and shake them up with different seasonings, for each batch. I need to go on a diet and if he does come back next weekend, because he is going to have to make French fries too, besides cookies.\n\nAfter lunch we took a leisurely few hours packing up and goofing around. Don tried to do some housecleaning, but I again reminded him about the cleaning crew.\n\nWe loaded up into his SUV and left. When we came to my car. I had Don stop the SUV, so I could take a look. The water level was down, but it was clear from the damage that the car had been completely submerged. There was even a large log that had been driven through the front window. I hadn't been able to call my insurance company because of down lines from the storm. I would wait until we got closer to town and try my cell phone.\n\nDon, had a travel version of the Yahtzee game. I got my revenge on Megan and Robin, and kicked their butts for three games. They, then instructed me on the proper way to say \"high voltage\" when singing along to AC DC. It was a good trip, that seemed too short, by the time that Don dropped me off at my condo. \n\nWhen they dropped me off, I kissed both Megan and Robin on their cheeks. Don started clowning around by blatantly sliding up to me with his right cheek presented. I mentally said what the heck, and kissed him too. It took him by surprise, but it seemed to be a happy one.\n\nThe early the next day, I called my insurance company about the car. The very next call was to my ex-husband, Richard. I told him about my complete weekend. The fiasco with Robert, my wreck, and about Don and his children. I told him everything, that the girls had told me about their father. I asked him for the name of a private detective, that could check out the story, because it just seemed so improbable. \n\nRichard made a conference call with a detective that he trusted. I repeated the story and the P.I. promised to get a preliminary report to me by early Wednesday. But the investigator warned, that without a release from the subject, that there was only so far that she could go. Also, any in depth questioning of friends and contacts of Don, might cause the inquiry to be revealed to him. \n\nCarl and Lucille were still stuck in town. Lucille needed a bit of physical therapy, before they would release her. I visited with them at the hospital on Monday afternoon. I told them about everything that had happened. They were glad that I was safe and unharmed. Carl felt guilty that he couldn't take the time to inspect the damage to the house. He gave me an \"I told you so\" about the fallen tree. He didn't like someone else using his tools, without permission but he understood. I reassured him that Don had cleaned up after himself.\n\nCarl made some phone calls from the hospital, to some home repair/remodeling people, that he had done business with in the past, on my behalf. They promised to take a look at the damage on Tuesday and give me an estimate. I told them I didn't care about price, I would trust them, just get it repaired as quickly as possible. I offered a 35% bonus on the labor if they could have the repairs done by Friday morning. Since the broken window, was a standard size, they didn't feel that acquiring a replacement would be an issue. I arranged with the cleaning crew, to grant the repair people access to my home. ",
        "Carl also called some retired loggers, he knew, that would be grateful for a little extra income. They promised to finish chopping up the fallen tree. I didn't want to Don to return to my home, and have that unfinished. He was liable to sneak out in the middle of the night, to finish chopping it up, regardless of his promise.\n\nOn Tuesday, I called a small number of my girlfriends, that I trusted and that owed me. As a former model, I had a number of friends that became what people call \"trophy wives\" . Some of them didn't have the good luck to marry an honorable man like Richard. A lot of them married successful husbands with pre-nups from hell and a taste for younger women. Or they married a loser, that squandered their hard earned savings. With my financial success, I had seen no reason not to help them. I've helped a few return to college and helped others start their own businesses. I decided to call in some favors.\n\nI explained to Vanessa, Kathy, and Freddie, about my weekend. I told them how if Don's story checked out, I was going to invite Don and his daughters back to my mountain home. I said, that I would welcome their opinion and advice about the family. I told my girlfriends how I had, had a wonderful weekend with Don and his daughters, and how I felt I owed them, for saving my life. None of them took it properly. They all made comments like \"oooh, Maria's got a new boyfriend.\" But they were all happy to offer their help, assholes.\n\nThat Wednesday morning, I got the detective's preliminary report. She still had to confirm a couple of things, but there was no contradictory evidence to Megan's and Robin's story. The P.I. said that so far, everything was checking out and there was a lot of circumstantial evidence that Don had been \"screwed over\" worse than Megan and Robin had related to me. She told me some of the things, that she suspected and it made me terribly angry for Don.\n\nThat afternoon, I called Don inviting him and his girls for the weekend. I also had a recommendation for a good therapist. He said he had to check with Megan and Robin, and he would call me back shortly about the weekend. He called back in twenty minutes and said the girls were thrilled and excited. I warned him, that there would be other guests and he better be ready to do some cooking.\n\nMy insurance company got back to me about my beloved Mercedes SL600, it was a complete write off. I bought a Lexus GX 470, an SUV was really more practical for my mountain trips, but I missed my roadster. When my girlfriends heard that I had bought an SUV, they teased me unmercifully. They said it seems that I had picked out a ready made family and now I had bought a family size car too, assholes.\n\nBut with one big car, at least we didn't have to take multiple cars on the trip. I could fit all my girlfriends in mine and Don could, of course, drive separately with his daughters. I would miss playing Yahtzee with them, though.\n\nI had to brow beat Vanessa, Kathy and Freddie to force them to leave early, that Friday. I wanted to get the house opened up and dinner started, so it would be ready when Don, Megan and Robin got there. We had used all Don's groceries last time. I wanted to prove that I could plan and cook a good meal too. My friends teased me yet again, thus proving that they were indeed assholes.\n\nWhen we got to my home, I met briefly with a representative from the construction firm that did the repairs. There had been damage to the roof and wall above the window, and there had been extensive structural damage below the window frame. It had been necessary to call in a stone mason, to make some of the repairs. He had everything well documented for my insurance company. I asked his opinion about Don's immediate response to the fallen tree and his patch job.\n\nHe said that there was no way to know for sure, but he would never let a tree that size lean against his house for more than a few hours without removing it. A storm made removal more difficult, and at the same time it made repairs more urgent. He thought the patch was fairly well done, for someone working only from the inside of the house. I guess, I had less to bitch at Don about.\n\nWhile I had to be less of a bitch. Kathy, Vanessa and Freddie were being especially bitchy to me. I had to stay close, to one of the house security panels, in order to be ready, to let Don inside the front gate. They kept making cracks like, \"did I just here a buzz\" or \"maybe the speaker or microphone is broken, you better wait down by the gate\", ASSHOLES.\n\nDon, Megan and Robin finally showed up, in fact, they were a little early too. So I went out, to let them in the garage and help them unload, and no I didn't run. Don had two big cooler chests strapped to the roof of his SUV. Megan and Robin jumped out of the SUV and ran to me, with screams of \"Maria\", maybe I ran to them too. We did a three way hug, maternal instincts activate. Don came walking up with a bag in each hand.\n\n\"Maria, I want to thank you for your generous invitation. Megan and Robin, had such a wonderful time last weekend, that they've been on pins and needles for the last few days, worried that you would cancel.\"\n\n\"Oh, there was no danger of that. I'm happy to see them too.\" I said that while still in a three way, bouncy hug with Megan and Robin. I looked at Don over their heads. \"I'm happy to see you again, too. You better be ready to make more French fries.\" Don laughed.\n\n\"I've brought plenty of food and I'm ready to cook.\"\n\n\"Well you don't have to cook just yet. I've got everything ready to make shrimp scampi. So, I hope you're hungry.\"\n\n\"Starving, Megan and Robin were so anxious to get here, that they wouldn't let me stop for food.\"\n\n\"Good let's eat.\"\n\n...............................................................................................................\n\nWe unloaded and Maria introduced us to the rest of her guests. Vanessa was a dark brunette. Kathy a redhead and Freddie was a blonde. I have never seen so many gorgeous women in one room. But Maria was still the prettiest to me.\n\nFreddie posed me a question. \"It's nice to meet you Don. Do you ride too?\"\n\n\"I haven't ridden in years and even then I wasn't any good.\"\n\nSeeing that my girls were busy talking to Maria, she gave me a slow appraising look, from my feet to the top of my head. \"Maybe you just need some proper instruction, and a new horse.\" With that statement she looked directly in my eyes. I'm pretty thick, but I felt my face grow warm.\n\nKathy crowed out. \"He blushes, he blushes. Oh Don, we are going to have so much fun with you.\"\n\n\"I better take the girls things up to their room, please excuse me.\" Laughter followed me out of the room. It wasn't nasty, but it sort of creeped me out.\n\n...............................................................................................................\n\n\"Robin, Megan, why don't you help your father take your things upstairs? So he doesn't have to make more than one trip. You all have the same rooms as last time.\"\n\n\"Okay, Maria.\"  \"Kay, Maria.\"  They both scurried off, after their father.\n\nI then turned on my friends. \"What are you all doing? I told you some of his history, he hasn't been with a woman in over two years. And even when he was married he was never exposed to piranha like you three.\"\n\n\"Lighten up Maria, it's good for him. According to what you told us. His former wife, thought he was about as sexy as a brick. We talked and decided to give him a boost to his ego. Heck, he seems like a nice guy and he's not bad looking either. If he has been as screwed over, as you said. He deserves a bit of fun. And I'm ready to be a bit of fun.\" With the end of that statement Kathy wiggled her eyebrows at me.\n\n\"You're always ready to be a bit of fun.\"\n\n\"I enjoy sex, so sue me. But I'm really careful about who I pick. He's a nice kind guy, that seems to be pretty built. He's also still hurting, it will be my good deed for the year, so Santa doesn't give me another lump of coal. By the way, when are you going to show us those pictures?\" I blushed, I should have never told them about those pictures.\n\n\"Oh, she blushes, she blushes.\" Crowed Vanessa. Assholes!\n\nDon and the girls came back down, and we all sat down at the table to eat. Maybe we should have used the dining room, but I've always enjoyed eating in the kitchen better.\n\n\"Maria, I got big news. Daddy made two of THE PIES.\" I swear I could hear a drum beat just before Robin said, \"THE PIES.\"\n\n\"Oh what, pray tell is so ominous or wonderful about THE PIES?\" Asked Vanessa, I swear there was another drum beat.\n\n\"They are just the most wonderful pies in existence. He never makes more that one, because he says we couldn't handle it. He thinks THE PIES make us too wired and uncontrollable. But he said, since this is a special weekend and there were other people, that he would make two. They are\" \n\nThere's that stupid drum again, and maybe some trumpets.\n\n\"CHOCOLATE CAPPUCCINO PIES.\" Did I just hear a lions roar?\n\nReally Robin's grandstanding was a bit much, so I turned to ask Megan about THE PIES. Megan's eyes seemed to be glazed over, and she was drooling. The couldn't be that good, could they? Don finally spoke.\n\n\"They are quite good, but you do have to be careful with them. Eat too much and it does get hard to get to sleep. If you don't mind Maria, I'll let you, use your best judgment in how much pie, Megan and Robin can eat, tonight. I usually let them have two pieces, three rarely and four never.\"\n\n\"Don't worry Don, I can handle it.\"\n\n\"I also brought fixings for pizza. Megan and Robin wanted it last time. So if you would like, I could make a couple tonight.\"\n\n\"Okay this is the plan, us ladies are going to watch movies and maybe play video games. Don you're assignment is to pamper us, until you get too tired. Then we will all grant you leave to retire.\" I waved my hand majestically and everyone laughed.\n\n\"Thank you, your Highness. I will do my humble best to serve you and your cronies.\"\n\n\"Did he just call us crones?\" Asked Kathy with a mock snarl, on her face. \"And here I was going to give you a goodnight kiss, tonight. You just blew it buster.\"\n\nMegan spoke up. \"No, no, no, don't upset him before he gives us THE PIE. I did it one time and he only gave me one piece, I still have nightmares.\" \n\n\"You were a bad girl. But if it is any consolation, beside cookies, I also plan on baking THE CAKE, tomorrow.\" Again with the drums. I looked at Megan and Robin, and both of them had glazed eyes. Megan was quietly muttering. I leaned over to listen. \"THE CAKE, THE PIE in one weekend. THE PIE, THE CAKE in one weekend. It has never happened before, it has never happened before. Is the world coming to an end?\" Funny kids, I was beginning to regret this weekend.\n\n\"Megan and Robin, like to over dramatize things. I just make a triple layer chocolate butter cream cake and they insist on calling it, THE CAKE.\" I didn't understand what was so big about THE PIE, but a homemade triple layer chocolate butter cream cake, that I understood. I felt my eyes start to glaze over. I turned to look at Kathy and Freddie. They were both certified chocolateholics. They were both doing imitations of Megan and Robin. Their eyes were glazed over and they were drooling.\n\nDon spoke again, what bomb was he going to release now? \"About the pizzas, I make tonight. Is anyone a vegetarian? I've got onions, banana peppers, sausage, pepperoni, green peppers, mushrooms, black olives, pineapple and ham. What do you want?\"\n\nFreddie, was touched that Don inquired about anyone being a vegetarian. We place an order for one all veggie pizza and one everything, hold the green peppers and olives. I was ready to bring out desert. I had a ton of ice cream left from last weekend. But Don beat me to it and brought out a cherry blueberry pie that was wonderful.\n\nUs girls headed to the movie room, while Don cleaned up the kitchen. We were too stuffed to play any games, so we settled down to watch our first movie. Towards the end, Don brought in THE PIE. The first piece was okay, I didn't see what was so special about it. I made that remark to Megan and Robin and they just sniggered at me. I spontaneously decided to have a second piece. It was good thing that Don was already bringing it in. Half way through the second piece, I was completely addicted. I licked the plate, when I was done.\n\nVanessa, the non-chocolateholic spoke. \"Could you bring us in, a third piece of pie please?\"\n\n\"I'm not sure, if that is a good idea, Vanessa. Maybe you should all wait a little bit, for a third piece?\" Kathy and Freddie just growled. Vanessa grabbed Don by his shirt and pulled him close, to whisper into his ear. He first blushed red, then he blanched white. \"I'll be right back with more pie.\"\n\nDon came back caring more pie. He stayed as far from Vanessa as he could. She just sat there, pleased with herself, giving him an evil grin.\n\nTHE PIE had made us too jazzed up. We broke out the Play Station, but it could only handle two players. We decided to head down to the game room. Several ping pong games and air hockey matches later, we were starting to calm down. At that point, Don showed up with pizzas. I was beginning to think, that Don liked fat women. The pizzas were excellent, we even had some of his homemade root beer to go with them. All three of my friends were starting to give Don appraising looks. Maybe inviting them, wasn't such a good idea.\n\nWe returned to the movie room, for the rest of the night. Don wished us all a goodnight and headed up to his bed. It was during the third movie, with Megan and Robin asleep, that I noticed Kathy and Freddie were missing.\n\nVanessa and I found them, on the stairway going up. They were arguing quietly but furiously. \n\n\"After all Don did, I'm going to check on him.\" Said Kathy. \n\n\"No, no, don't bother yourself. You were really enjoying that movie. I'll check on Don.\" Replied Freddie.\n\n\"You just want him because of THE PIE.\" Accused Kathy.\n\n\"No I don't, I think he is a sexy guy. That has had too much heartache. It is time, he had a bit of comfort. You heard Maria, he hasn't gotten laid in over two years. You just keep Megan and Robin downstairs and I'll take care of him.\n\n\"Ahem.\" Why was I grinding my teeth and why were my hands clenched?\n\n\"Oh, Maria, Vanessa, we didn't see you there.\" Their attention was concentrated behind me on Vanessa. Both their eyes seemed to be getting big. I was peripherally aware that Vanessa seemed to be gesticulating furiously behind me. But when I turned around to confirm, her hands were behind her back and she seemed to have an innocent expression.\n\nArm in arm, Kathy and Freddie came down the stairs. A picture of eternal friendship. We all went back to the movie room and fell asleep before the end of the movie.\n\nI woke up before every one else. I put on my bathrobe and hurried to the kitchen, I had an idea. As I was getting a clean dish I noticed two pie plates in the sink, TWO! There was supposed to be a half of one PIE, left. Maybe, Don put in on a different plate in one of the refrigerators. Nothing, nothing! Those bitches, one or more of them got up, while I was sleeping, and finished off THE PIE. I never should have invited them!\n\nGrumbling, I started to make coffee. Don walked into the kitchen, freshly showered and fully dressed. There I was in my bathrobe and floppy slippers, with my hair a mess. I didn't want to live, THE PIE was gone. I was so disappointed.\n\n\"Good morning, Maria.\" I grumbled and muttered back to him, I'm not sure what I said. I just kept on making coffee.\n\n\"Is everything okay?\"\n\nI looked at him, with big tearful eyes. \"THE PIE is all gone. Someone finished it off, last night.\" You know what he did? He started to laugh. Not just a little laugh. But a deep belly laugh. That went on and on. Every time I thought he was going to stop, he would take one look at my face and start laughing again. If he wasn't the only source of THE PIE, I might have killed him on the spot. Finally he stopped laughing, by refusing to look at my face, asshole.\n\n\"I'm really happy that you enjoyed the pie. But I'll be making cookies and THE CAKE today. I hope you'll enjoy them as much. Should I make breakfast?\"\n\n\"No, I'm going up to my room and go back to sleep for a few hours. I think everyone else, will do the same or just stay asleep in the movie room.\" Grumbling about stupid friends, that eat all the good stuff and stupid men, that don't understand a woman's need for chocolate, I made my way upstairs. \n\nDon could drink the coffee. I didn't think he noticed, he was too busy laughing, but I had added three tablespoons of black pepper and one of cayenne in the basket, before I started the coffee maker. Teach him to laugh at me!\n\nAlmost three hours later I headed back down to kitchen. I could hear voices before I entered. When I entered I was shocked. My three good friends, that had been wearing flannel pajamas and thick bathrobes last night, the same as I had. Were now wearing night gowns and thin silk bathrobes. Their hair was neat. They were even wearing a little make up. They looked fantastic. I had expected some of this behavior from Kathy and maybe Freddie, but Vanessa was doing it too.\n\nEveryone looked up at my arrival. I was wearing jeans, dressed for a day of riding. They were all sitting at the table and I walked over, sitting down at my usual spot. Don was looking more that a bit flushed in the face. Megan had her face in her coffee cup. I really hope Don had made a fresh pot. On the other hand, it might help Megan wake up, if he didn't. \n\nRobin's eyes were dancing with excitement, as she kept looking from one of my friends and than back to her father, to a different one of my friends. She had a big grin on her face, too. Her chair was right next to mine, she leaned over and gave me a good morning hug. It was nice, I returned it and kissed the top of her head..\n\n\"Morning, Maria.\"\n\n\"Morning, Pumpkin.\"\n\nThe others in the room greeted me as well. Don gave me a sort of a desperate look. Looking at my friends attire, I had an idea.\n\n\"Don, you're planning to make hamburgers and French fries for lunch, right?\"\n\n\"Yes, just like last weekend.\"\n\n\"Why don't we eat outside again then, it was fun. It is warmer today than last Sunday.\"\n\nHe looked at how my friends were dressed. I answered his unspoken question. \"Oh, they won't mind changing. They have to any way, since we are ALL going riding today.\"\n\nHis face cleared up, with my reply. \"Okay, Maria. It is already getting late. Let us say lunch in forty minutes? That will give everyone time to change, especially Megan.\" Megan just groaned and everyone laughed.\n\n\"That sounds fine, Don.\" I urged everyone to get up. Vanessa helped Megan get up from her chair. But my good friends, Kathy and Freddie, trailed their left hands across Don's broad shoulders as they walked by his chair. He took a deep breath when they did that and got even redder. As they came by my chair, I gave them a furious glare. Which they blithely ignored. But I could smell them too. They were both wearing perfume, in the morning after supposedly just waking up. I think the scents were \"Fuck me Now\" and \"Rape me Now.\" No wonder, Don had taken such a deep breath.\n\n\"Oh, Freddie.\" Don suddenly spoke up.\n\nFreddie turned around, surprise and a bit of hope in her face, that bitch. \"Yes, Don?\"\n\n\"Since you're a vegetarian. I thought I could make you a grill cheese sandwich or put some shrimps on the barbecue. Which would you prefer or both?\"\n\n\"Don, a grilled cheese sandwich, would be wonderful.\" She gushed. My God woman, it is just a grilled cheese sandwich.\n\n\"Great, I've got some homemade sourdough bread, Swiss cheese and maybe a bit of onion? And of course, a cup of tomato soup. Does that sound good?\"\n\nHmmm, that was sounding like, it might be better than one of Don's hamburgers.",
        "\"Don, that is great. Thank you for thinking about me.\" She gushed again, sheesh.\n\nKathy and Vanessa, both expressed interest in maybe sampling a grilled cheese sandwich. Don said that he would make some extra, so we could each have a half sandwich, if we wanted. \n\nMy friends turned back towards the kitchen door. I followed them to the great room. I wanted to make sure, that they wouldn't come back and ambush Don, until they were fully dressed. \n\nVanessa was having great difficulty in steering Megan. She finally asked Kathy to take Megan's feet, and the two of them carried Megan up the stairs and down the hall. I swear that girl, as soon as she was picked up, fell completely asleep. Being her mother, was going to be a chore. WAIT A MINUTE, WHAT THOUGHT DID I JUST HAVE!\n\nMore than a bit flustered, I made my way back to Don. I needed to talk to him and I could help set up for lunch.\n\nWe talked about the therapist that I had found for the girls. The therapist had agreed, that she could meet with Megan and Robin, on Wednesday evenings. The girls had gotten into the habit, of spending that night with Don. So it would be the easiest way, to keep the secret from Barbara, if they could meet on Wednesday. Don thanked me for my help. He also asked me for another favor, as he put it. He seemed to be quite embarrassed.\n\n\"Maria, the girls really like you. Even though, they've known you for only a short time. I was wondering, if only for the first night.\" He hastily interjected. \"If you could come with us, to see the therapist. You could talk to the girls and ease their fears about seeing the therapist and afterward, if you don't mind, you could talk to them about their session. I'm probably not the best person, to do that with them. Please, it would be a great help to me?\"\n\nI was secretly very pleased, at his request. I had wanted to come along, but I thought it was wrong for me to intrude, too much into their private lives. I tried to keep the glee out of my voice. \"Don, I would be happy to help. I really like your girls, too. If you'll give me your address later, I'll meet you an hour before the session.\n\n\"Thanks, Maria. I really appreciate it.\" For some reason that conversation, made things uncomfortable between us, and we had a hard time talking for a bit. Finally Don started speaking, I think just to break the uncomfortable silence.\n\n\"I had a some good news, this week. It is probably nothing, but it might be something nice.\" He spoke, as if he didn't really think, something good would happen.\n\n\"Oh, what happened?\" I tried to put a lot of interest in my voice.\n\n\"After my last job. I was pretty much black balled with the programming industry, in our area. I've never had a response to any of my resumes, for a programming job. Last week, I got a call from a head hunter, that deals in the industry. He said that he had a couple of job prospects for me. They're both confidential types of work. One company specializes in financial programs. The other does DOD work. So I needed to sign a form, giving them permission to run a background check.\"\n\n\"Like I said, probably nothing will come of it, but it would be nice.\" He replied wistfully.\n\nI sensed the hand of Richard, my ex. I understood his desire to protect me, but to get Don's hopes up, even a little. I'd have to give Richard a call later, and check on things.\n\n\"Oh, I hope you get it. You deserve some luck, Don.\" He was busy setting up for lunch. He said it quite quietly, and I don't think he intended, for me to hear it. It was more, that he was talking to himself and didn't realize, that he was talking aloud.\n\n\"I think I've had plenty of luck, ever since your accident, and I met you.\"\n\nI know I blushed red and my mouth dropped open. It was a good thing that his back was towards me. I rushed out of the kitchen, carrying some plates outside.\n\nSure enough, Don's lunch was a success. There was an awful lot of lip licking being done. In fact, I think there was too much being done. Most of it by my friends and all of that, being directed Don's way.\n\nWhen we were done eating, Robin spoke up. \"You know, there should be a little of THE PIE left. We could all have a little piece. That would give us plenty of energy for riding.\" She looked around hopefully, thinking she had a wonderful idea. I looked at my three friends. They were busy looking everywhere else, but at me and Robin, those filthy pie stealing vermin.\n\n\"Robin honey, I'm sorry but I already looked this morning and it was all gone.\"\n\n\"All gone!\" Wailed Megan and Robin. They got up from their chairs and I ran to comfort them. I thought it was very well done. \"Yes, some pie stealing miscreants, have denied you sweet children your dreams. I'm so sorry my babies.\" My girlfriends had all turned their heads away, looking for something to magically appear so they could change the conversation.\n\n\"Don't worry, I'm making THE CAKE. You can all have an extra big piece.\" Don spoke in a bored voice, like my acting had been over the top. Critics!\n\n\"See, my sweet babies, your father has saved you. I think that it is only fair, that only us three, shall have any of THE CAKE.\" My girlfriends started to protest.\n\nRobin spoke. \"No Maria, that would be too kind. We shall give them, one small piece of THE CAKE. And deny them any more. That way, they will know what they are being deprived of, and it will torment them all the more.\" Robin had used her fake English accent again. That earned a round of applause from all those present, and maybe some Bronx cheers, too.\n\nDon urged us to stop the clowning around.\n\n\"You're burning daylight. I'll do the clean up. I think you better get going, if your going to fit an afternoon ride in.\" I stuck my tongue out at him, pushy critics.\n\nWhile Don stayed home to bake, the rest of us got into my new SUV, to ride to the lodge. Kathy kept teasing me, that it was a good thing. that I had bought, such a nice big FAMILY car, so everyone could ride together. Bitch!\n\nWe rode for the afternoon and I said goodbye to my horses. I hardly saw them, during the winter months. They were to be transported, to a stable at a lower elevation, for the winter. Winter was my time to go skiing. I found out during the ride, that both Megan and Robin could ski, some. But their father, not at all. I was going to have to do something about that. He couldn't be staying home all the time.\n\nI was also, going to have to get Megan and Robin their own ski equipment. No matter how well maintained, I thought of rental equipment as a broken leg waiting to happen. Don might complain, about such an expensive gifts, but there was no way, I would let my girls take such a risk. Next year, I should probably get them, their own saddles, too. I thought absently.\n\nJust like last time, we returned to a house filled with wonderful smells. There sitting proudly on the table was a huge chocolate cake.\n\n\"Dad, you've never made one so big before.\" Stated Megan with awe.\n\n\"I normally make a smaller round cake, but with you chocolate gluttons. I decided to make a large rectangular cake. But it is for after dinner.\" He warned.\n\nDon the task master, would only let us have three cookies each, before urging us to go shower. I stole a hand full of cookies, on the way out of the kitchen, and passed them out. Don yelled, jokingly. \"You're dropping crumbs on the floor.\"\n\nSuch a worrywart, going to have to change that.\n\nWe came back down to dinner. Don served us shrimp cocktail, pasta with garlic and olive oil, fresh bread right from the oven, saut\u00e9ed mushrooms, and Italian sausage. I felt like he was trying to make us fat for the slaughterhouse. \n\nWe waddled to the movie room for some heavy exercise. All of us, fell asleep for the next hour. Vanessa, who owns a large day spa with exercise facilities, was groaning about getting fat. Kathy and Freddie, both decided that they wanted to have Don's love child. They of course said that, while Megan and Robin were out of the room.\n\nWe watched movies, we ate THE CAKE, cookies and ice cream. Discussed ways to enslave Don, so he could continue to cook for us. And fell asleep watching movies. It was a perfect party.\n\nThe next morning, we were surprised to see a thick layer of snow, on the ground. We hadn't been paying attention to weather reports. Checking the forecast, we saw that the snow, was expected to last at least two days, before it melted.\n\nThe tractor was disabled, but Don had seen a large snow blower out in the garage. He insisted on using it. I think he just wanted to use a new tool. He had been such a good boy, that I gave him my blessing. Vanessa and I decided to watch him for a little bit, to see if he needed any help.\n\nThe snow blower was located in a bad position. It was blocked in by the broken tractor, so it couldn't be wheeled out. Don walked over to it, squatted down and lifted it up, seemingly with no difficulty. He put it down and walked over to his SUV, to put on some warmer clothes.\n\nVanessa walked over to the snow blower and picked up a corner. She came back and whispered to me, that it had to be at least three hundred pounds. She was impressed by Don's strength.\n\nDon had the entire drive clear, in slightly more than an hour. He came back inside, with a glow. The man liked using power tools, the more power, the better. \n\nThen after doing all that work, he made us a late brunch. French toast, sausage, bacon and just for Freddie, a side of scrambled eggs with onions and Swiss cheese. From the looks Freddie was giving him, I think she was starting to be genuinely attracted to him, and not just clowning around anymore. That worried me.\n\nWe packed up, with every one exchanging hugs and kisses. Freddie and Kathy surprised Don, by kissing him on the lips. I think Kathy, even tried to insert her tongue. I was ready to strangle her.\n\nI promised Don's girls, that I would invite them back for the ski season.\n\nWe got in our separate cars and started the drive home. Since we were taking almost the same route and Don's was the lead car, Megan and Robin would wave back to me, every once and awhile. I made a comment under my breath, that my friends overheard, on how I wanted to ride with Megan and Robin. Kathy and Freddie suggested that I call Don, on his cell, and we switch passengers for awhile. They said, that they would be happy to keep Don company. Like, I would trust them alone with Don. Our routes finally diverged on the highway and I waved goodbye to Megan and Robin.\n\nEnd of Part 1, to be continued.\n\n...................................\n\nAuthor's Notes:\n\nI had intended to submit this story in one go, but it has turned out longer that I had anticipated. It also has had, a lot of character building and not too many exciting moments, as yet. For that reason, I am submitting this part now, before I finish the story. It is quite possible, that readers will not enjoy this story. If that proves to be the case, then I will probably leave the story unfinished. Mind you, I will keep working on it, until that becomes clear. There are at least three major story developments that need to occur. Some of that is already written.\n\n1) Maria and her friends \"polish\" Don, some perhaps many erotic scenes.\n2) Barbara gets taught the meaning of pain.\n3) How Don's life changes. This ending was not expect by me and it is going to be fairly long. Maria's plan for Barbara has many unforeseen repercussions. \n\nAgain, thank you for reading. I sincerely hope it was enjoyable and worth your time.\n\nCastleStone"
    ],
    "authorname": "CastleStone",
    "tags": [
        "cheating wife",
        "betrayal",
        "cheating",
        "romance",
        "payback"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/sophia-pt-01"
}