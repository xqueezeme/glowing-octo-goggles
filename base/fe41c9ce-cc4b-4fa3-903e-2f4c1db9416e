{
    "title": "Sherry's Special Brew",
    "pages": [
        "Hey all! Here's another orphaned short I don't really know what to do with, so I thought I'd give it to you guys. It's a fun story of succubus corruption, male to female transformation, drunken lust, corruption, and milkings. \n\n***** \n\nDaylight burned away in violets and golds atop the distant mountains. Night began to stretch its long fingers through the forest, blindly groping across the lonely road twisting among the towering trunks. A low wind sighed through, rustling leaves as their colours deepened. The birds fell silent among the eaves, the beasts hunkering down. \n\nSuch an instinct stirred in Zane Staffen as he rode down the quiet rode. His black cloak shrouded him, melding him to the night as it wrapped around him. The clip clop of hooves was soon the only sound. \n\nAnd as darkness grew, so did the glow. \n\nIt was an old tavern. It slumped beneath its sloping roof, the timbers melded together under the weight of years. Zane raised his head, his chin rough with unshaven hair. A sign, waving disconsolately in the wind, red paint peeling in strips, declared the inn The Farmer's Pride. The windows glowed with a low light, but his was the only horse in the stable. He patted its midnight flank before stepping up to the door and pushing his way inside. \n\nIn contrast to the waiting night the inside was warm and cozy. Golden light fell from the hearth and illuminated a small common room of perhaps a dozen tables, gleaming off varnish and bottles ranged along the bar like silent soldiers standing guard. A smell of fine liquor spiced the air and lamps glowed on every table like flames trapped in amber. The bar stretched across the far wall and before the closed door of the kitchen. \n\nA woman stood behind the bar. She was middle aged and her hair was a lustrous black that bounced in curls around a strikingly beautiful face. She was leaning on the counter, a bored pout on her lips, but when he entered she straightened, perking up like a cat hearing the tinkle of a bell. \n\nZane wouldn't be a man if he didn't notice the curves that stretched her dress. The cloth might have been modest on literally anyone but her, but her breasts strained the front until the deep valley of her cleavage could be seen, the flared skirt baring long legs, riding up shapely hips and a curving rump that begged to be touched and stroked. \n\n\"Hello!\" she cried, bowing a quick curtsy. \"I'm Sherry. Welcome to the Farmer's Pride!\" \n\n\"Zane,\" he said, taking off his hat. He scanned the room again. \"Empty.\" \n\nShe sighed. \"You don't have to tell me. It's a little used road. Honestly, I don't know why we keep it running some time.\" \n\n\"It's yours?\" \n\n\"May as well be. The owner's in the back, but I sort of inherited running it. She's a bit deep in the cups,\" she said with a knowing look. \n\nZane nodded slowly and took a seat at the bar. The woman smelled of cinnamon and something a little musky. Not unpleasant, but curious. \"Travellers come by often?\" \n\nShe shrugged, her breasts shifting tantalizingly. \"Not really. Suits me alright most nights. But it can get so boring sometimes,\" she said. \"We used to be busier. Very famous for our beer. We have a distillery in the back and I've been trying to get the recipe just right. Bring back the customers.\" \n\n\"That right?\" Zane said. \"Might try some.\" \n\n\"Great! Let me draw you some of the house blend.\" \n\nShe winked and slipped through the back door. Zane cocked his head, hearing a muffled moan from the other room. The owner, no doubt. After a moment Sherry returned, beaming and with a foaming stein of ale. She plopped it before him. \"There you go! Fresh from the taps.\" \n\n\"Thanks,\" Zane said. He lifted it, taking a sniff, then a sip. It was a smooth beer, warm and creamy as it slid down his throat, and flavoured with a hint of nutmeg. He put down the stein, tongue flicking across his lips. \n\n\"Like it?\" \n\n\"It's good.\" \n\nShe beamed. \"So glad you think so!\" \n\nZane nodded, taking another sip. It was good. Rich and heady. It seemed even tastier the second time going down. But he resolved not to get drunk. He needed his wits around him yet. \n\n\"You've been here long?\" he asked. \n\n\"Oh not long,\" she said with an errant wave. \"I was hired off the road. Didn't have a home, you know how it is. And a young woman all alone on the highway? Bad people would do all sorts of things to me.\" \n\nShe clasped her hands before her, and Zane noted how her luxurious breasts strained the buttons of her front. He took another drink to soothe the sudden roughness in his throat. \"I imagine. Particularly around here.\" \n\n\"Oh?\" \n\n\"Yes. There's been some... disappearances.\" \n\n\"Really? Oh! Looks like you're empty. Would you like some more?\" \n\nZane glanced down in surprise. His stein was empty. He smacked his lips, wondering when he drank the rest of it. \"Yeah. I think I would...\" \n\nSherry beamed and took the mug back into the back. Again the low moan from beyond the oaken door, the girl returning a moment later with the stein once more full and foaming. \n\n\"Thanks,\" Zane said. \n\n\"No problem! So people disappeared?\" \n\n\"A few have,\" he said. He reached into his cloak and pulled out a medallion. Sherry's eyes widened in wonder at the amulet he laid on the counter, an arrow wrought in shining silver. \n\n\"Oh!\" she gasped in amazement. \"You're a hunter!\" \n\n\"I am.\" \n\n\"Wow,\" she breathed, leaning onto bar to get a better look, and Zane fought hard not to look down her shirt and into that lovely valley. \"Then, I have to get you another drink!\" \n\n\"I don't...\" He stopped, staring. His stein was empty again. \n\n\"No problem!\" Sherry chimed, sweeping up the stein and vanishing. Before Zane could ponder when he drank the sweet beer she returned, placing his cup before him again. \"Here you go! So, a hunter? That must be so exciting!\" \n\nZane smiled with wry pride. \"I've killed a few goblins. A wyvern. Nothing too big,\" he said, taking another drink. Gods above but this was good beer. It seemed to become tastier the more he drank. He shifted, his clothes feeling a little looser than before. \n\n\"Those savage monsters?\" she asked in awe. \"You must be incredible!\" \n\n\"I have my moments,\" he said. \"Monsters are stupid creatures, by and large. They're stronger, to be sure. So you need to outthink them. Trap them. No trick is too dirty when hunting those beasts.\" \n\nSherry nodded in eager agreement. \"So true! But, the thing taking people? Do you think it could be one of those?\" \n\n\"Maybe,\" Zane said. \"It might be nothing. But I have my doubts.\" \n\nShe nodded, looking a little flushed. Zane smirked. The ladies always loved a hunter, he thought as he took another swig of that sweet, sweet beer. He put it down, gasping. He felt warm, but he wasn't drunk yet. He barely noticed as Sherry took the stein from his hand, replacing it with another one moments later. \"What do you think it could be?\" she asked. \n\nZane glanced about the room, heightening her anticipation. He leaned in. Inhaled. She smelled lovely. \"It might be a... demon.\" \n\nShe gasped, hands flying to her mouth, her breasts bouncing. Zane stared at them. Gods they were big. And looked so wonderfully soft... \n\n\"I never would have thought!\" she gasped, his attention yanked back to her pretty face. She grabbed his hand in hers, eyes shining. \"You'll take care of it, won't you Zane?\" \n\nHe smirked, lifting the stein with his other hand. It seemed a bit heavier. \"Of course,\" he said, grinning proudly. He must be getting drunk. His voice sounded higher than before. \"I'm a hunter. It's my job to protect the people of the land.\" \n\n\"Oh thank you!\" she breathed, her eyes deep and shining with gratitude. And something more. Something very familiar. Zane's cock hardened at the low simmer of lust in those dark eyes. \"It means so much having such a strong man to defend us! I must think of a way to thank you.\" \n\n\"I could think of a few,\" Zane said, his voice slurring a little. \n\nShe smiled back, her lashes low and lidded. \"I know just the thing. Some of our special stock! Only the best!\" \n\n\"Er, well, I meant-\" \n\nBut she was already gone, slipped from his fingers and away into the back. Zane sat there, stroking his chin. Had he shaved that morning? His chin felt so smooth. He wondered if she was really so dim she couldn't tell he was flirting. \n\nThen the door to the back opened, and he wondered no more. \n\nSherry stood there, smiling with sultry suggestion. No longer were the objects of Zane's fascination trapped behind a tight fitting top. Her soft bosom swelled from her chest, a pair of glorious pale orbs, the tantalizing treat of her nipples hidden behind the pair of steins she carried. Her eyes were smoky and bright, her smile teasing. She swayed forward, hips cocking back and forth and rustling her skirt, baring the first hints of lacy white panties beneath. Zane swallowed thickly, then inhaled deeply as the rich scent of the booze washed over him. His head swam at the sweet tang of liquor and spices that tingled in his nose and made his mouth water. \n\n\"Here we go,\" she breathed and placed the two steins before him. \"My own recipe. I call it Sherry's Special Brew. I think you'll love it.\" \n\nAs she pulled back Zane nearly forget the mugs as he took in the dark nipples that capped each of her breasts. His tongue flicked across his lips. He leaned forward a little, lips tingling to taste those dark peaks... \n\n\"Zane!\" Sherry cried in mock shock. \"Are you staring at my tits?\" \n\nZane nodded slowly. \"Uh huh...\" \n\nShe giggled, crossing her arms beneath the firm orbs and lifting them suggestively. \"Mmmm. Well, I can't blame you. Aren't they just lovely? So big and soft. I bet you'd want nothing more than to bury your face in them and just lick them all over...\" \n\nOh he would want nothing better. His eyes followed the gently movement of her breasts, fixated on their smooth curves and flawless flesh as it shifted, rolling, stroked up and down in her arms. His breathing was deep, his chest tight and his head swimming. \"Yeah...\" \n\n\"You just can't look away from my big, soft tits can you?\" Sherry asked. \"Why, you're practically hypnotized by my big creamy tits.\" \n\n\"Yeah... hypnotized...\" \n\n\"But you're not of course. Only a silly, stupid little slut would be hypnotized by my big... juicy... tits...\" \n\nZane nodded slowly. \"Yeah...\" \n\nShe giggled, the sound rough and dark. \"Maybe you should take another drink, Zane. Clear your pretty little head.\" \n\nHe sincerely doubted it would. But he didn't really think hard on it. Taking one of the mugs he took a swig. He gasped, eyes shooting wide open. It was like nothing before! Creamy as the beer yet sweet and thicker. The taste of nutmeg was gone, replaced with something spicy and sharp that made his heart beat against his ribs and his cock harden in his pants. His eyes fairly rolled with the taste of it, his throat working frantically as he chugged the sweet brew, his body heating up to a blaze. \n\n\"That's it,\" Sherry said, her voice lyrical like she were singing. \"Drink it all, my pretty hunter. You need to keep your strength up.\" \n\n\"Mmm,\" Zane moaned as he tilted back his head, shaking the stein to get the last few drops. He put it down, gasping, breathing deep and heavy. He winced, feeling a dull ache radiate across his chest and hips. \n\n\"Awww. Zane? Is your shirt tight?\" \n\nFuck, it was getting tight. He nodded dimly. \"Yeah.\" \n\n\"Well, we should get you out of it.\" \n\nShe reached across the bar, her fingers hooking in the buttons of his jacket. She snapped them open, one by one. Zane felt his jacket come open, but he couldn't look away from her huge breasts squished atop the bar, mere inches from his face. Dark nipples so hard and inviting... \n\nThe final button came free and Sherry gasped in surprise. \"Why Zane! You never told me you had such pretty breasts!\" \n\nA trickle of that penetrated his haze. Zane lowered his head and stared, stunned. That couldn't be his chest. His chest was smooth and toned with muscle from training at the Hunter's Hall. But the one he was looking at was thin, and a pair of budding breasts curving from it. \n\n\"Wha...\" \n\n\"But of course you don't,\" Sherry purred. His eyes swung back up and froze, arrested again by the sight of her curvy teats. \"You're a man, after all. Aren't you?\" \n\n\"I...\" \n\n\"Of course you are,\" Sherry murmured, her hands squeezing, massaging her perky tits. \"Because only a silly slut would have such soft tits, and be hypnotized by my voice and my big, soft boobs. And you're not a silly slut, are you Zane? You're a big, strong hunter.\" \n\n\"Uh huh...\" \n\n\"A big strong hunter doesn't have soft, playful tits,\" Sherry said, cupping Zane's new breasts. \n\n\"Nnn!\" Zane gasped, arching, eyelids fluttering as a sudden sweet pleasure raced through him. \n\n\"A big strong hunter doesn't make those kinds of noises when another woman plays with her pretty little tits, does he?\" \n\n\"Nnnoooo,\" Zane whined softly. \n\nShe giggled. Squeezed the hard pink nubs of his nipples. \"Take another drink, Zane.\" \n\nZane fumbled for the still full mug as Sherry massaged his budding chest. He shakily drew it to his lips, and gods but that mug seemed heavy. But he needed it. The sweet scent of the liquor filled his senses, throbbed through his head. He took a swig, throat working frantically. Some spilled across his mouth, dribbling down his chin and onto his soft breasts. \n\nSherry giggled and rubbed the sweet liquor into his chest. The mug dropped from Zane's suddenly nerveless fingers, shattering, ignored on the floor. He whined, high pitched and pitiful. \n\n\"Oh Zane! What's the matter?\" \n\n\"Don't... don't feel so good...\" \n\n\"Oh?\" Sherry said, and her voice didn't sound worried. It sounded amused. Like she was mocking him. \"You must have drunk too much. I think you need a lie down.\" \n\nZane struggled off his stool. He nearly fell, but then Sherry was there, arms catching him. Zane face planted into her soft breasts, and oh but they were everything he dreamed. He moaned softly, all the strength draining from him as the soft cushions enveloped his head, smothering him in the sweet scent of spices and liquor. He nuzzled her teats, weakly pawing at them. \n\nSherry giggled, the sound echoing through her jiggling teats and into Zane's throbbing head. \"Oh Zane,\" she purred. \"You do love my fat tits, don't you?\" \n\n\"Mmmm,\" Zane moaned. Love wasn't the right word. He didn't love them. He needed them! They obsessed him. He buried his face deep into her cleavage, inhaling her scent with the shuddering need of an addict getting his fix. He moaned as her fingers clinked on his belt, and his pants fell away. \n\n\"Oh,\" she purred, the rough, reverberating sound echoing through her tits as she cupped his hard cock easily. \"You do like them.\" \n\nWeakly he lifted his head from her pillowy tits and looked at her face. Her playful dark eyes, her curly black hair. \n\nHer horns... \n\nZane's mouth fell open. This, at last, penetrated the haze of the drink and lust that swirled in his body. He looked down and saw her skin was not the pale white that he recalled, but a lurid red as deep as blood. \n\n\"What's the matter, Zane?\" Sherry giggled, her arms, suddenly so strong, tugged him once more into her pillowy tits. \"Didn't you want a closer look at my pretty tits? Don't you want to taste them and suck them and let your mind just bleeeed away?\" \n\nZane struggled. Laughing, she let him go. He staggered, his back hitting the bar. Panic settled over him. The room spun. His legs felt wobbly and the heat in his body ran over him in a blaze of naked lust. Fear fought it. He clawed his way around the bar. Blind. Escape. Escape! Dimly he knew he had to escape! Dimly, because he wanted nothing more than to throw himself once more into those strong arms, nuzzle those wonderful, soft tits and suckle at her fat nipples. \n\nHer laughter rang after him as he staggered against a door. He grabbed the handle, yanked it open and fell through. \n\nAnd froze. \n\nHis jaw slackened with shock at the room behind the bar. Dusty barrels of ale lined the walls, their taps cobwebbed with disuse. A single large table consumed the center of the room, and atop it, the true source of the beer. A woman sat on a customized chair, her thighs clenched around a fat barrel, her hands grasping a pair of breasts of almost absurd proportion. Her head was tilted back as she massaged her massive teats, a look of utter bliss on her face as she milked her sloshing boobs, foaming liquor pouring from her fat nipples and into a barrel propped up in front of her. \n\n\"Ooops, looks like you found my secret recipe!\" \n\nZane spun about, staring in horror at the succubus. She stood before him, blocking the door with her devastating crimson curves, horned head cocked back, smirking. She'd done away with the last of her clothes, baring every raw inch of her flawless flesh. Her wide, broodmother hips and firm rump were on full display. But what truly drew his eyes, even away from those mouth-watering breasts, was what lay between her legs. He stared, gobsmacked at the thick hose of her inhuman cock, hard and pointing at him accusingly. \n\nZane staggered back an uncertain step into the room with the moaning woman. \"You... You...\" \n\n\"Zane,\" Sherry purred as she sauntered in after him, the sound of her voice sending tingling fingers dancing up his spine. Her spaded tail curled around the handle of the door and shut it behind her with a click. \"Of should I call you Zana? It sounds so much better I think. After all, Zane didn't have such pretty tits and such a tiny cock.\" \n\nZane looked down, his small breasts heaving, his cock barely bigger than his pinky. \"N-no. I...\" \n\n\"And Zane,\" Sherry said, again cupping her tits, arresting Zane's eyes with their softness. \"Zane was a hunter. But Zana is a pretty little bitch who can't wait to bury her face in my big tits and suck my fat nipples.\" \n\nZane trembled, watching her massage those soft orbs. His tiny cock trembled with its hardness, his cheeks flushing at the memory of their enveloping softness around his face. His nostrils flared, inhaling the thick scent of sweet, sweet mind numbing liquor. \n\n\"And Zana gets to drink Sherry's Special Brew,\" she giggled, Zane's eyes following her hand as it slid from her fat tits, down along the curve of her waist and swell of hip, finally wrapping around her lurid cock. \"Zana knows those last cups didn't come from Maddie over there. And Zana gets to drink my special brew right. From. The. Tap.\" \n\nZane's breath hitched with every pump of her hand on her meaty cock. Pre oozed from the slit of the succubi's shaft, and the scent of those final cups of ale - those sweet, wonderful, delicious cups of ale filled the room and made his head spin. His tongue stroked his soft, plump lips, his eyes riveted to the drop of pre as it wavered on her cock, growing into a fat teardrop dangling, teasing, tempting. He trembled at the sight of it, there, waiting for his soft, stupid lips to wrap around her shaft. To capture it. To suck it down and never stop. He bit his lip, trying to fight it, trying to fight the battle he already knew he'd lost. \n\nIt fell. \n\nSplattered to the floor. \n\nZane cried weakly as he fell to his knees. Sherry smirked as Zane crawled towards her. Trembling, his eyes dull with the desperate need, he pawed at the damp spot in the wood. He leaned down on all fours, licking the wood, trying to capture the sweet liquor of her cum. \n\nSoft hands reached down, cupping Zane's chin and tilting his head up. Her cock hovered an inch from his lips, her balls hanging heavy with her liquored seed. His head throbbed with the rapid beating of his heart as he scented the sweetness of her cum. \n\n\"What's your name?\" Sherry purred. \n\n\"Z...Z...\" \n\n\"What's your name, slut? What's the name of the pretty girl who's going to suck my sweet cream from my demon cock? What's the name of the little bitch whose new pussy I'm going to fuck until her brains leak out of her pretty empty head? Who's the slut who's going to get to nuzzle and suck my fantastic, fat tits and guzzle my sweet cum? What's her name?\" ",
        "\"Z-Zana,\" Zane moaned. \n\nHer grin gleamed with predatory fangs, hungry and triumphant. \"And what's your name?\" \n\n\"Zana!\" he cried, weeping. \n\nSherry smirked. \"Good bitch.\" \n\nShe let him go, and Zana lunged forward. His lips locked around Sherry's shaft. \n\nAnd sucked. \n\nA shuddering moan of final satiation rippled through him. That taste. That sweet, lovely taste soaked her girthy cock meat. \n\nHe sucked. \n\nLovingly Zana ran his tongue around the thick hose of the succubi's cock, worshipping the musky flesh, soft lips stroking up and down the veiny shaft, relishing the sweet, sharp taste. \n\n\"Mmmnn...\" Sherry sighed, stroking Zana's dark hair as he bobbed atop her massive demonic dick. \"That's it. What a good slut. Sucking my fat cock. You love it don't you?\" \n\n\"Mmmm,\" Zana whimpered. \n\n\"Give my balls a taste, bitch. Get them nice and shining and I'll let you have another taste of my brew.\" \n\nZana pulled his lips off the succubi's cock and started to lick and tongue her balls, rubbing his cheek against the iron hard shaft beside his head. Zana was beyond caring. Beyond thought. He only knew he needed it. Needed more of that wonderful liquor. \n\nSherry sighed, fingers tangling in Zana's hair. Her grip tightened, eliciting a moaning yelp from the femboy tonguing her balls. \n\n\"That's it. Get me nice and riled. Oh fuck yes. You're going to love it, Zana. You're going to love guzzling my cum. Feeling your tiny bitch boy prick vanish, getting your new, soft pussy. Then, mmmnn... then I'm going to fuck you. I'm going to bend you over and break that pretty little ass in. Would you like that, Zana? Do you want to be my new cock sleeve?\" \n\n\"Yes. Oh gods yes,\" Zana gasped mindlessly, his mouth tasting of the succubi's cock and balls. \n\nSherry grinned, her fangs gleaming in the light. She pulled back Zana's head and aimed her cock. Zana opened his mouth wide, trembling in expectation, and Sherry pushed herself inside. Zana gagged as Sherry thrust, brutally fucking the former hunter's mouth, ramming her cock past those soft lips. \n\n\"Mnnn! Yes. Yes! Suck it. Work your tongue. Oooh we're going to have to train you but I've got time. I've got time to make you... a perfect... cock sucking... slut!\" \n\nSherry cried out, throwing back her head, black curls flying about her rapturous face. Her balls tightened, and Zana was in heaven. The former hunter's eyes rolled back as the sweet, hot liquor of Sherry's cum pumped into his mouth. Zana swallowed as best he could, guzzling the heady cream of the succubi's liquor cum. The heat of it bloomed through Zana's body. He moaned weakly, breasts aching, swelling further with every swallow of that glorious cream. Hips and ass plumping out to more feminine curves. Zana whined as his cock shrank further, inverting, the flesh splitting and the hollow, empty feeling of a pussy in desperate need of being fucked took shape. \n\nSherry shoved Zana back, the new girl falling to the floor as the succubus grabbed her cock and pumped it. Ropes of cum bathed Zana's panting, writhing body in the sweet, addicting liquor of her cream. \n\nSherry took a deep breath, let it out as the pump of her cock slowed. She flicked some of her curls from her face and smirked at the sight of the moaning girl on the floor, flesh shining with fizzy cum. \n\n\"Aw. There there, Zana,\" Sherry cooed as she scooped up the cum stained woman. \"We're far from done yet.\" Giggling, Sherry pressed a hungry kiss to Zana's soft lips. Moaning, Zana's mouth parted, submitting to the eager tongue of the succubus. Holding Zana at ease, Sherry took a seat on the bench beside the moaning Maddie, the living keg of a woman whining as she squeezed her teats, creamy booze jetting into the barrel, saturating the room even further in the heavy scent of creamy booze. \n\n\"Now, let's make my proper bitch,\" Sherry said as she straddled Zana on her hips. \n\n\"Yes,\" Zana moaned. \"Sherry.\" \n\nSherry grinned. \"Good.\" \n\nAnd dropped Zana onto her cock. \n\nZana's head flew back. Her eyes shot open and her mouth opened in a wide O of impossible pleasure. Her new pussy clenched around the thick rod rammed within her, filling her perfectly as if her cunt were made for it. The pain of her broken hymen didn't last more than a second before the shuddering pleasure ripped through her, blasting her thoughts to nothing. Fireworks exploded behind Zana's eyes. Her voice came out in a shuddering wail of helpless pleasure as Sherry lifted her, then dropped her again onto her cock. \n\n\"Yessss,\" Sherry moaned as she fucked the helpless girl atop her. \"Yes! Take my big cock! Ah! Fuck me you're a tight little bitch aren't you?\" \n\n\"Yesssss!\" Zana screamed, her voice keening with pleasure. \"Fuuuuck yessssss!\" \n\n\"Whose bitch are you?\" Sherry laughed. \n\n\"Yoursssss!\" Zana moaned as she slid up. \n\n\"And who are you?\" Sherry demanded, and shoved her cock to the hilt into her. \n\n\"Your biiiiiiitch!\" Zana screamed, orgasm thundering through her, pussy rippling around the hard heat of the demonic cock buried inside of her. \n\n\"And don't you forget it!\" Sherry cackled, drew back, and shoved forward once again. \n\nZana knew she never would. Her memory of a life before, of a time when she was a man out to slay the evils of the world, faded, blasted to nothing by the pistoning of the futanari demon's cock. Zana screamed, writhing and twisting around her mistress's cock. And when at last Sherry's body tensed, her hands digging painfully into Zana's hips, her cock throbbing, pulsing, and her sweet liquor cum bursting into Zana's womb, the last of Zane died. \n\nZana whimpered as Sherry slowed, her sweet cum oozing out of her pussy. Zana gave a weak moan of protest at the thought of the waste, but Sherry merely chuckled. \n\n\"Don't worry, Zana. I'll make sure you never go without as much of Sherry's special brew as you want, for as long as you live.\" \n\nZana moaned her thanks, burying her face in Sherry's wonderful tits, nuzzling and licking at her hard nipples eagerly. \n\nSherry chuckled, stroking Zana's short hair. She looked good with that boyish cut, the demoness mused. Maybe she'd let the silly slut keep it while she waited tables, shaking her pretty rump for all the guests. Maybe she'd even let a few fuck her little beer bitch. \n\nBut the Farmer's Favorite was a big place, Sherry thought, idly tickling Zana's swollen teats. She squeezed a nipple, Zana moaning as a bead of sweet cream formed. Sherry smirked. And craft beer was such a wonderful way to bring in customers..."
    ],
    "authorname": "jayaurysmut",
    "tags": [
        "femdom",
        "futanari",
        "succubus",
        "transformation",
        "male to female",
        "lactation",
        "hucow"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/sherrys-special-brew"
}