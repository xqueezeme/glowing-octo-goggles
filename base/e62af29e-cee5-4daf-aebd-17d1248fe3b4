{
    "title": "Timber Pack Chronicles Ch. 07",
    "pages": [
        "Every step Parker took away from Colton tore at his heart. The further away he got, the sicker to his stomach he felt. He kept wiping the tears away with the sleeve of his sweatshirt--Colton's sweatshirt.\n\nOnce he couldn't run anymore, he slowed down to a walk. The walk home took an hour or so, which gave him time to think. Unfortunately, his mind was utterly blank. He was like a zombie, wandering on autopilot towards his home.\n\nBut something kept pulling him back to Colton, telling him to turn around. Trying to ignore that pull made his head hurt.\n\nWhen Parker finally reached home, he quietly snuck up to his bedroom, kicked off his shoes, pulled his hoodie off and flung it over the headboard.\n\nStill in zombie mode, he went into his bathroom and relieved himself. As he washed his hands, he took a good look at himself in the mirror. His eyes were puffy and bloodshot. His nose was runny. He looked like death. When he tilted his head to the right, he finally got a look at the bite mark.\n\nHe pulled the collar of his t-shirt to the side so that he could see it better. There it was at the base of the left side of his neck. The bite was angry: red, purple and bruised, the colors vivid against his fair skin. He could see the teeth marks, where the beast's fangs had punctured and tore into his skin.\n\nParker reached up with his left hand and his eye caught the bracelet. It seemed like yesterday that Colton gave him the bracelet and tied it around his wrist. With a smile on his face, he ghosted his fingers across the scar.\n\nHe gasped as he was overwhelmed with sensations. The image of the Colton beast sinking his teeth into him flashed across his mind. He gripped the sink with both hands as his knees buckled. The bite was super-sensitive to the touch, a mixture of pain with a hint of pleasure. Bile rose in his throat. He choked back a gag, and closed his eyes until his stomach no longer felt like it was trying to crawl out of his mouth.\n\nHe reached into his medicine cabinet and grabbed the aspirin bottle and shook out a pair of pills. He popped the pills and washed them down with a palmful of water. After washing his face, he patted dry with a towel and walked back into his room.\n\nParker walked to his bed and flung himself into it. He pulled the covers over his head and curled up into a fetal ball. Clutching at his rolling stomach, he closed his eyes and tried to calm his nausea.\n\nParker believed Colton when he said he didn't do it on purpose. And he believed him when he said he would never hurt Parker. He had to believe. If it wasn't true, then everything about Colton was a lie.\n\nOf course, none of that changed the fact that Colton Butler was a werewolf.\n\nA freaking werewolf!\n\nNot only that, Colton had turned him into one. How the hell was he supposed to deal with that? How could Colton have done that to him? Maybe he was dreaming. Maybe he was crazy.\n\nParker had never really given any thought to the paranormal. What else was out there that he had to worry about? Vampires? Demons? Fairies? Ghosts?\n\nThinking back, some of Colton's behavior now made sense: the sniffing, the biting, the pissing. Parker scoffed out loud. Maybe Colton was the crazy one who should be locked up in a mental institution.\n\nNo, Parker had seen it with his own eyes. He squeezed his eyes shut and shuddered. He would never be able to get out of his head the image of that half-man/half-beast on top of him, thrusting into his body. Parker was horrified, but what was even more horrifying was that his dick started to stiffen from the memory.\n\nHe rolled onto his back and stared at the ceiling, trying not to remember.\n\nParker should have known that there had to be something wrong with Colton. Really, no one was that perfect. And to Parker, Colton Butler was indeed perfect.\n\nParker could just cut his losses and run, but how could he deny Colton? Especially now. He would need him. When he transformed -- oh my god, holy shit, what the fuck?! -- he would need Colton.\n\nHell, he needed him now. Parker was hopelessly in love with Colton. He would rather die than live without Colton. The rest of the stuff was huge -- so huge -- but ultimately, did it really matter?\n\nAnd that really was the heart of the matter. Could Parker live without Colton in his life?\n\nNo.\n\nColton was the one.\n\nColton was his mate.\n\nHe closed his eyes. He was exhausted, but he couldn't sleep. He kept seeing the werewolf Colton in his head. Parker's dick throbbed in his underwear and began to ooze pre-come.\n\nDrawing in a ragged breath, he unsnapped his jeans and pushed them down. He shoved his hand into his underwear and gripped the base of his cock, intending to hold back the arousal. He grabbed his pillow and pulled it over his face and squeezed his eyes shut, trying to smother out the memories.\n\nThe beast thrust into Parker relentlessly, hard and fast, pinning him down to the bed with his big body, just the way he liked it. He shouldn't have liked it, but he did. Those fangs were razor sharp, dripping with saliva. Colton's body was covered in hair. He was bigger, stronger, harder. And so was his cock.\n\nThe memory of Colton biting his neck pushed to the forefront. After that initial shock of agonizing pain, Parker remembered the unexpected waves of ecstasy that slammed into him. And like he did then, he came.\n\nParker cried out into the pillow as he filled his underwear with semen.\n\nPhysically drained and mentally exhausted, Parker fell into a dead sleep, his hand still inside his messy briefs.\n\n* * *\n\nCompletely naked, Parker chased the black wolf deeper into the forest, calling out its name in desperation. The forest was cold, wet and foggy, lit only by the light of the full moon, high and bright in the partially cloudy night sky.\n\nA figure stepped out of the dark. Still bathed in shadows, the steel grey eyes were icy cold.\n\nParker stopped. He backed away as the man began to transform. Grey fur sprouted from his body as his features began to morph.\n\nParker turned and ran. He knew this time the grey wolf wouldn't let him escape. The wolf was going to kill him this time.\n\nHe screamed for Colton, but he couldn't find him. He stumbled through the forest like a clumsy oaf, calling for his boyfriend, his wolf, his mate.\n\nThe grey beast was behind him, closing in. Parker could feel its hot breath on his back.\n\nParker hit a patch of muddy leaves and skidded, tumbling down a hill.\n\nThe grey wolf slowly stalked closer and closer, circling like a predator. Parker's heart pounded in his ears. He screamed for Colton, but he didn't come. Parker had denied Colton and his wolf had left him.\n\nFighting back tears, feeling naked and vulnerable, Parker picked up a big rock and threw it at the predator as hard as he could.\n\nThe rock hit the wolf's head and bounced away, making a sound like a spoon tapping a glass:\n\nTink.\n\nParker opened his eyes.\n\nHe pulled the covers off his head and sat up.\n\nUgh. His hand was gross, all crusty and sticky. He pulled it free of his underwear, and after wiping his hand on his bed sheets, he waited and listened for a moment...\n\nTink.\n\nSomething had tapped at the bedroom window pane.\n\nHe tried to focus his eyes, but everything was blurry. He grabbed his glasses from the nightstand and put them on. That made it even worse.\n\nWhat the hell?\n\nThere was yet another tap at the window.\n\nParker tossed the glasses back onto the nightstand and blinked a few times. Strange. He was still wearing his contacts. He pulled down on his lower eyelid and carefully pulled his right lens out. He covered his left eye. He could see almost as well as he could when wearing the lenses. He pulled the left lens out and tossed the useless pieces of plastic onto the nightstand.\n\nTink. Another tap at the window.\n\nHe knew it was Colton without even looking. Logically, it wouldn't be anyone else. But there was more to it than that. He just knew that he was close by. He wasn't sure how he knew, but he did.\n\nHe walked over to the window and looked out. It was dark, but he could see the outline of Colton sitting on a branch of the big oak tree with a handful of acorns.\n\nParker pulled open the window and knelt down. \"Colton,\" he whispered. \"What are you doing here?\"\n\n\"I couldn't sleep. I can't wait, Parker. I know you said you needed time to think...\"\n\nParker sighed. \"I know, I know. You couldn't wait. You just have to have things your way, don't you?\"\n\n\"Yes,\" he said, completely unrepentant. \"Let me in.\"\n\n\"Wait. How did you get up in that tree? You know what? Never mind.\"\n\n\"Open the window screen, pup.\"\n\nParker unlocked the screen and tugged at it, trying to remove it from the window frame, but it was painted in place. He gave it a good yank and it finally came free with a bang. The noise made him cringe and he listened for a few seconds to make sure no one was coming to see what was going on.\n\nColton stood up on the branch and hopped. Parker gasped in surprise as Colton gripped the window casing with his hands. His feet were firmly planted against the wall below. He lifted up with his hands and effortlessly climbed through the window and into the room.\n\nParker looked at him with his mouth agape. \"How the heck-- Never mind.\" Parker shook his head. He didn't know if he'd ever get used to knowing how Colton did the things he did. When Colton sniffed at him and raised a brow, Parker's face began to flush warm. He muttered, \"Let me go clean up real quick.\"\n\nParker used the bathroom, then washed his hands. He stripped off his underwear and used a wash cloth and tried to clean up the mess he had made. He grabbed a pair of sweat shorts he had left on the bathroom floor and slipped them on and walked back into the bedroom.\n\nColton was still standing in the middle of the room, his hands shoved into his pockets, staring down at the floor.\n\nParker had never seen Colton like this. Nervous. Uncertain.\n\nParker thought maybe there was some insecurity behind Colton's arrogant and cocky attitude, but Colton had never shown it outright.\n\nHe didn't like it and he needed to fix it.\n\nHe grabbed Colton's arm, pulling his hand from his pocket. He pulled the big... wolfman?... towards the bed.\n\n\"Come on, Colt. We need to talk.\" He walked over to the door and turned the lock on the knob. He didn't need anyone barging in. \"And we might as well get comfortable.\"\n\nParker pulled off his t-shirt and socks and climbed into the bed. Colton did the same, stripping down to his boxers. He pulled the covers up over them and they lay down on the bed facing each other.\n\nColton reached up and brushed a stray lock of hair from Parker's forehead. \"I missed you, pup,\" he whispered. Colton's eyes turned glassy and he blinked several times.\n\nColton's vulnerability made Parker love Colton just a little bit more. Once again, he knew that he was seeing a side of Colton that no one else ever saw. It was something special, reserved only for him.\n\nParker subconsciously leaned into Colton's hand, his body craving the touch of his man. Even though it had only been hours since they last saw each other, he understood exactly how Colton felt. He wanted nothing more than Colton's kisses and touches, wanted to soothe him and tell him everything would be okay.\n\nBut first they had to talk.\n\n\"What do I need to know, Colton?\" he whispered.\n\n\"The next full moon... you'll shift. You won't be able to control it. Once you do it that first time, you'll be able to do it whenever you want. But for the first few months, the full moon will always make you change. You won't be able to stop it. After that first time, when you shift back to your human shape, you'll notice some differences. Your senses will be heightened. You'll be stronger. You're probably already starting to notice some changes, right?\"\n\n\"Yeah. My vision is better.\"\n\n\"It'll get even better after your first change. Your body is also developing an allergy to silver. So if you have any, you might want to get rid of it now. Once it kicks in, it'll burn the hell out of your skin.\"\n\n\"Ouch.\"\n\n\"Yeah. It hurts like a son of a bitch. But you'll heal faster. After your first shift you'll find that old wounds and scars have healed. Except for the bite.\" Colton ran his fingers across Parker's neck, making the smaller boy shudder and whimper. \"You'll always bear my mark.\"\n\nParker tried to ignore what Colton was doing to him. He wanted to roll over and beg for Colton to fuck him.\n\n\"When you're a wolf, are you like an animal or are you still Colton?\"\n\n\"My animal instincts and senses come to the forefront, but I'm still me. Just four-legged and furry.\"\n\n\"Who changed you?\"\n\n\"I wasn't turned. I was born this way.\" Parker's eyes widened. \"No, not like a puppy. I was born in my human shape,\" he added with a chuckle. \"We don't shift for the first time until we're going through puberty when our hormone production surges. Something about testosterone. I wasn't really paying attention. Anyway. Full-blooded shifters pass the trait down to their pups. Uh, you know, their kids.\"\n\nParker gasped softly. \"So, your dad is one, too?\"\n\n\"Yes.\"\n\n\"Who else? Jed and Trey are, aren't they?\"\n\n\"Yeah, Jed and Trey... There are others.\"\n\n\"Seth and TJ? That's why TJ's arm was healed the next day at school?\"\n\nColton nodded. \"Yeah. He shifted into his wolf, then shifted back.\"\n\n\"That's it? That fixed it?\"\n\n\"Well, his arm was probably sore and tender. And he was probably exhausted and starving when he shifted back but yeah. That's it.\"\n\n\"Wait a minute, so when you piss all over the place, you really are marking your territory?\"\n\nColton chuckled. \"Yeah. Smelling my scent everywhere pisses off Seth, so that's a bonus. It reminds him that I beat him in a challenge. It reminds him that I run the school.\"\n\n\"Seth is Sheriff Forrest's son. The sheriff's a wolf, too?\"\n\n\"Yes. Sheriff's the pack alpha, the leader of the Forest View Wolf Pack, which encompasses most of the tri-county area. We're a big pack.\"\n\nIt was a lot to take in and process. They laid together in silence for a while.\n\n\"You should have told me,\" Parker finally said.\n\n\"I wanted to. This wasn't how I planned on telling you.\"\n\n\"If you had told me, then I would have had a choice. You took that away.\" Parker's voice cracked and his eyes teared up.\n\nColton leaned his head closer. He let out a ragged breath. \"I know. I'm so damn sorry, Parker. I would take it all back if I could. I know this is going to come as a surprise... but I'm not perfect.\"\n\nParker let out a soft laugh. He sniffled and wiped his eyes. \"So I noticed.\"\n\n\"Do you think you can ever forgive me?\"\n\nParker was silent for a moment. He then placed a hand on Colton's chest. \"Can I see it?\"\n\n\"You can see it anytime you want, pup. You know that.\" Colton leaned in and gave Parker a quick kiss as he shimmied his boxer shorts off. He grabbed Parker's hand and wrapped it around his already erect cock.\n\nParker laughed. He knew that Colton did that on purpose to try to ease some of the tension and it worked. It felt good to laugh. \"Not that, you goof. The wolf.\"\n\nColton got out of bed. He stood naked in the middle of Parker's bedroom, with a dick as hard as steel, still looking a little uncertain. \"I won't hurt you. Don't be scared. And whatever you do, don't run. My wolf will think you're playing and it will hunt you and make you submit.\"\n\n\"If you're trying to soothe my nerves, you're not helping.\" He let out a slow breath. \"Okay. I'm ready. Show me.\"\n\nColton kept his eyes locked on Parker as he dropped down to a crouch on all fours. His bones popped, cracked and stretched as his muscles rippled. The noise was disturbing enough to make Parker cringe, and the sight of it was horrific.\n\nBlack hair erupted from his skin, completely covering his body as his face began to change. His teeth grew into fangs and his ears grew into points as his mouth and nose pushed out into a muzzle. A tail grew from his butt as his legs turned into a wolf's haunches. Fingers and toes morphed into razor sharp claws as his hands and feet changed into paws.\n\nParker tried not to be terrified, tried not to look away in horror as his boyfriend transformed and morphed into a beast right in front of his eyes.\n\nThe entire change took about five or six seconds in total, and when it was done, a large black wolf now stood on all fours where Colton had been.\n\nParker stared open-mouthed at the animal.\n\nThe black wolf slowly stalked towards the bed and climbed on. The box springs and frame creaked under the large animal's weight. Parker remained perfectly still, not wanting to provoke the Colton beast.\n\nColton's raspy tongue rolled out and licked the side of Parker's face, leaving a trail of slobber.\n\nParker let out the breath he was holding. \"Knock it off,\" he whined as he wiped his cheek.\n\nParker looked into the animal's dark eyes and saw Colton staring back at him. It was more than a little unnerving.\n\n\"It is you, isn't it?\" he whispered.\n\nThe wolf's snout rubbed along Parker's neck and inhaled and snorted. When his tongue slicked across the tender bite mark, Parker shuddered and let out a soft involuntary moan as a shock-wave of ecstasy coursed through his body.\n\nHis face flushed with embarrassment as his dick went totally stiff. \"Don't,\" he whimpered, mortified at his reaction to the wolf, even if it technically was Colton.\n\nParker tried to move under the blankets, but the wolf grabbed the blankets in his teeth and tugged them down until Parker's body was exposed to him. He licked a line up Parker's belly up to his chin, then laid down on top of Parker, making Parker grunt from the sudden weight.\n\n\"Uh, Colton, you're gonna need to get your wolf dick off me, because it's really freaking me out.\"\n\nThe Colton wolf growled and pumped his unsheathed erection against Parker one time before reluctantly moving to lay down at Parker's side.\n\n\"Ew,\" Parker whispered as he looked down at his belly. Colton had left a slimy and copious trail of pre-come on him. Parker could smell the musky scent he knew to be Colton wafting off the slime. \"Are you marking me with your scent?\"\n\nColton made a huffing noise that Parker took to be a \"yes.\" He then slid closer to Parker and laid his head on his hands -- er, his paws.\n\nParker snuggled into the warm, soft fur and put his arm around him. \"That's better.\" He rubbed his nose against Colton's neck and breathed in that distinct scent that was all Colton. He became lightheaded as the intense smell overwhelmed him momentarily. As his head cleared, he was able to pick out the individual scents that made up Colton's smell.\n\nWow.\n\nWhat was strange was the fact that it felt perfectly natural for Parker to be lying in bed with a huge-ass wolf. Well, it wasn't just any wolf -- the wolf was Colton Butler, his wolf. Parker knew then that he had, without a doubt, made the right decision to be with Colton.\n\nIf he could embrace the beast in Colton, then he'd have to do the same with himself.\n\n\"You're beautiful, Colton,\" he said as he stroked his fur. Colton just watched him with those coal black eyes. \"I love you, Colton. I want to be with you. It doesn't matter what you are. Uh, well, what we are. And I do forgive you.\"\n\nColton stood and stepped away from Parker. He shifted back into his human form, then flopped onto the bed next to Parker and pulled the covers up over them. He lay down on his side facing his boy.\n\nParker felt a deep need to touch his mate. Mate. The word seemed to come so easily to him now. Colton was his man and his mate.\n\nReconnecting with Colton, Parker ran a hand over Colton's wide, hairy chest. Pushing his fingers through the curls of hair, he felt the planes of the hard muscles underneath. The tips of his fingers brushed against a nipple. The small nub stiffened under Parker's fingers. Parker twisted and pinched it with a lover's vengeance, making Colton grunt from the sudden shock of pain.",
        "Parker narrowed his eyes to a hard glare. \"Don't ever lie to me or keep secrets from me again.\"\n\nColton stared into Parker's eyes, then tipped his head, baring his neck.\n\nThe significance of Colton's action wasn't lost on Parker. Colton submitted to no one, but here he was, bowing to Parker. Parker let out a soft breath. He leaned forward and planted a series of small kisses down Colton's neck as he soothed his fingers over the abused nipple. He laid back and watched his mate while he absentmindedly twirled his fingers through the patch of hair covering Colton's breast bone.\n\n\"No more secrets,\" Colton promised. He closely watched Parker's face for a few moments. \"You're taking this way better than I thought you would.\"\n\n\"I think I'm still in shock... But...\" He let out a deep breath. \"The thought of being without you... it's worse. Worse than anything I can think of. I can't live without you.\"\n\nParker felt the sting of tears in his eyes. He cuddled close to his man and laid his head on Colton's chest. He stroked the hair on those muscular pecs, then realized he had been doing the same thing when Colton was in his wolf form.\n\nHe liked touching Colton. Touching Colton soothed him.\n\nParker always liked the way Colton smelled and now that scent was so intense. Parker lifted his head and sniffed at Colton's armpit. He closed his eyes and let out a soft hum of approval.\n\nColton chuckled. \"You are so fucking cute when you twitch your nose like that.\"\n\nParker looked up at Colton, who leaned in and nipped his teeth on the end of Parker's nose.\n\nParker let out a quiet laugh and laid his head back on Colton's chest. He swirled a finger through the hairs surrounding Colton's belly button. \"When it happens... You'll help me? Will it hurt?\"\n\nColton pulled Parker closer and tightened his arms around him. \"Of course I'll help you, pup. I won't lie. It hurts like a bitch the first time, but it gets a lot easier after that.\"\n\n\"The last time you said those words, you were right. Of course, you were talking about butt sex.\"\n\nColton laughed. \"Butt sex?\"\n\nParker groaned and buried his face in Colton's chest. \"Oh god. I'm such a dork.\"\n\n\"Yeah, but you're my dork.\"\n\n\"Right. My point is I'll have to trust you about this, too.\"\n\n\"Would I ever steer you wrong?\"\n\n\"That remains to be seen.\" Parker laughed softly, then added, \"I know you'd never steer me wrong. I trust you with my life.\"\n\n\"You should know that wolf shifters are very territorial. And when it comes to our mates... well, I will be very possessive and protective towards you.\"\n\n\"You 'will' be? What do you mean 'will be'? You've been protective of me, even before we started dating.\"\n\n\"Well, that was before my bite bonded us. Just be patient with me.\" Colton leaned close, kissed Parker's head, then buried his nose in his hair and breathed in deeply. \"You smell different. I didn't realize it until my wolf smelled you.\"\n\n\"What do I smell like?\"\n\n\"You smell like me now. It's like your sweetness is mixed in with my musky, woodsy scent. Anyone who smells you will know you're mine.\"\n\nColton grinned, clearly pleased with himself.\n\nParker wanted to roll his eyes. Yeah, Colton was apparently back to his normal self. \"So, I smell sweet, huh?\"\n\n\"Mm-hmm. Like a sweet spring rain. I'd recognize your scent anywhere, pup. I'd follow it to the ends of the earth.\"\n\nParker straddled Colton's body, placing his knees on either side of Colton's waist. \"When you say things like that, it gets me so freaking hot.\"\n\nColton slid his hands up and down Parker's thighs, then up his smooth chest. He rubbed the hard nipples with his thumbs, making Parker moan softly.\n\nParker could feel Colton's cock pressing into his taint. It jerked and throbbed underneath him and he just had to taste it. He shimmied down Colton's body, then lifted Colton's dick and took it into his mouth. Slow and deep, just like Colton liked it. He fondled and pulled at his nuts while he sucked until Colton's cock was throbbing and ready for release. He knew he could easily make Colton come with his mouth, but he decided that he wanted it inside him.\n\n\"The lube is in the drawer,\" Parker whispered after he lifted his head. \"But we have to be quiet.\"\n\nColton chuckled as he pulled open the drawer and handed Parker the bottle. \"You're telling me to be quiet.\"\n\nParker poured a healthy amount into his hand, and rubbed his fingers across his hole. He then reached back and gripped Colton's boner and slicked it up and down. He raised his hips and positioned the head and eased his way down the thick shaft.\n\nSlowly and steadily, he rode Colton's cock. Their hands roamed over each other, touching and feeling. Colton let Parker take the lead. His hips pushed up with each of Parker's movements, but this time he let Parker take control.\n\nColton felt so good inside him, but in this position he wasn't getting direct stimulation on his own dick. He looked down at the red, throbbing shaft. He slid his hips up and pushed back down. When it hit his prostate, he pressed his lips together to keep from moaning. His dick jerked and dribbled pre-come onto Colton's stomach, getting lost in the hair.\n\nParker placed his hand on Colton's and nudged it. He looked down at Colton, silently pleading for his touch.\n\nColton pulled Parker down for a kiss with one hand while the other wrapped around Parker's slick hard-on. Their tongues tangled as they moaned softly into each other's mouths.\n\nParker whispered against Colton's lips. \"I wanna make you come. I want you to come inside me.\"\n\nColton's eyes fluttered closed and he grit his teeth together, trying his best to be quiet.\n\nThey quietly made love in Parker's bed, stifling their groans of pleasure until they brought each other to an intense climax.\n\nThe feeling of Colton's dick throbbing inside him, filling him with that molten hot spunk set Parker off. He shot over and over, coating Colton's hand and his belly with his sticky load.\n\nParker slumped forward and fell on top of Colton's hot, sweaty body. He didn't even care that their stomachs would be glued together with his come.\n\nParker lay on top of Colton, trying to catch his breath. He could hear Colton's heartbeat as his hard chest rose up and down under his head. His eyes drifted shut and he fell asleep with his boyfriend--his mate--still throbbing inside him.\n\nHe didn't feel Colton roll them over onto their sides. Colton spooned up behind him, covering and protecting his smaller form with his own bigger body.\n\n* * *\n\nParker was startled awake by the knock on his bedroom door. \"Parker.\"\n\n\"Just a minute, Dad,\" he called out. He scrambled over Colton's naked body. \"Hide,\" he hissed.\n\nThe big jock jumped out of bed and scooped up his clothes and dashed into the bathroom as the door knob turned.\n\nThank god the door was locked. Parker pulled the blanket off his bed and wrapped himself up in it.\n\nAn impatient knock, then, \"Parker.\"\n\nRemembering the scarred and bruised bite on his neck, Parker covered it with his hand and unlocked the door and opened it a crack. \"Yeah?\" he said with a yawn, pretending to stretch.\n\n\"Shell is downstairs,\" his father said.\n\n\"Oh. Okay. Um. I'll be right down.\"\n\nBarney eyed him suspiciously. \"Are you okay?\"\n\n\"What? Yeah. I'm fine.\"\n\nParker shut the door in his dad's frowning face. Colton stepped out of the bathroom fully dressed. \"I better go. I'll call you, okay? I'm pretty sure the Alpha is gonna wanna see you.\"\n\nParker's eyes widened. He picked up the pair of sweatpants hanging on the back of his desk chair and slid into them. \"Really?\" He grabbed a t-shirt and pulled that over his head. \"Why?\"\n\n\"Yeah,\" Colton said with a shrug. \"I might be in trouble for turning you. It's kinda against the law.\"\n\nParker didn't like that. He could tell that Colton was making light of it, shrugging it off like it wasn't a big deal. He knew that Colton was doing it for his benefit, not wanting him to worry. He could see in Colton's eyes that it was more than that. What he had done was a really big deal.\n\n\"You didn't mean to. I'll testify to that if you need me to.\"\n\n\"It doesn't work like that.\" Colton looked up towards the door and his nostrils flared. \"I'll call you, okay?\" He rubbed his thumb across his mating bite, then pressed his lips to Parker's one last time. \"I love you, pup.\"\n\n\"I love you, too.\"\n\n\"Thank you for last night. Spending the night with you was very special to me.\" Colton gave Parker one last caress across his cheek, then turned to leave.\n\nParker watched Colton hurry to the window. Colton yanked it open and jumped, easily landing on the ground below in a crouch. Parker watched slack-jawed as Colton pushed to his feet and then took off running into the woods.\n\n\"What are you looking at?\"\n\nParker yelped and turned around, clutching his chest as Shell pushed him aside and looked out the window.\n\n\"Nothing. And stop sneaking up on people.\" Parker yanked the window shut and pulled the curtain over it.\n\n\"Hey, don't be giving me no stank attitude. Where the heck have you been, boy?\"\n\n\"Nowhere,\" Parker said, trying to shrug casually. He picked up Colton's hoodie and pulled it on, hoping that it covered the bruised scar on his neck.\n\n\"Oh, I see how it is. You're one of those kind of girls. You get a man, and you just toss your friends to the side.\"\n\n\"What? I am not like that. I've just been... busy. And besides, you've been all hunched up on Curtis, so you're not around just as much.\"\n\n\"You been busy gettin' busy, you mean,\" she said with a laugh. \"And Curtis...\" She let out a sigh and turned serious. \"Damn, he's fine. He's so intense. I can't say 'no' to the boy. It's weird, you know. I've never been like that with anyone else.\"\n\nParker's eyebrows raised. \"So you two have... you know... done it?\"\n\n\"A lady doesn't kiss and tell.\"\n\nBefore Parker could put his two cents in, Shell flopped down onto Parker's bed, then lifted her hand and stared at it. She looked up at Parker in absolute horror. \"Oh my god, boys are so damned nasty!\"\n\nShe jumped up off the bed and ran into Parker's bathroom.\n\nParker grimaced in embarrassment and pulled the semen stained sheets off the bed. He followed Shell into the bathroom, where she was at the sink scrubbing her hands as hard as she could. Parker tossed the sheets into the laundry hamper and grabbed a fresh pair from the linen closet.\n\nParker had just finished making the bed when Shell came out from the bathroom.\n\nShe turned around, trying to look at her clothes in the mirror on the back of Parker's door. \"I don't have any on me, do I?\"\n\n\"No. Stop being so dramatic.\"\n\nShe shot Parker a dirty look and sat down in his desk chair after giving it a thorough inspection. \"I swear, hooker, if I get pregnant...\"\n\nParker rolled his eyes. \"If you get pregnant, don't blame me.\"\n\nShell smiled and swiveled in the chair. \"So, if I did get pregnant, would I be having your baby or Colton's baby?\"\n\n\"Oh my god,\" Parker muttered and his face went red.\n\nShell gasped in fake shock and clutched the non-existent pearls around her neck. \"You tramp! Have you been sneaking him in here?\"\n\n\"Sometimes before school, or after school. And he kinda spent the night last night. Things have been... crazy.\"\n\n\"So I guess 'Like a Virgin' is off your playlist now.\"\n\nParker laughed nervously. \"Whatever.\"\n\n\"Slut.\"\n\nParker dropped down onto his bed. \"I can't help it. I mean, have you seen Colton? I just can't say no to him.\"\n\n\"I know what you mean,\" Shell muttered.\n\nEven though they were the only two in the room, Shell looked around and leaned forward and lowered her voice. \"You know, speaking of pregnant sluts... I heard that Kim Reynolds has been hooking up with Seth Forrest. And the past two days she's been puking in the girl's bathroom.\" She held her hands up and spun around in the chair. \"I'm just sayin'...\"\n\nParker's mouth dropped open. \"Oh. My. God. I thought you were gonna say you were pregnant.\"\n\n\"I'm gonna smack the shit out of you. Do I look like I'm stupid? I'm talking about Kim and Seth.\"\n\nParker's eyes widened with realization. \"Oh God. Seth. He's a--\"\n\n\"He's an ass,\" Shell finished.\n\nYeah. And a freakin' werewolf. Just like his babies would be.\n\nParker's cell phone rang and he picked it up and looked at the screen. \"It's Colton.\"\n\nAs he answered the phone, Shell jumped up and slid next to him and put her ear next to Parker's. Parker waved her away. He got up and went into the bathroom. \"Hello?\"\n\n\"Hey, pup. There's a mandatory pack meeting in two hours. You have to be there. I think the shit's gonna hit the fan.\"\n\n* * *\n\nColton was in the middle of setting up a surprise for Parker when he got the call from his father about the pack meeting. He had to abandon his plans so that he could pick Parker up to get to the meeting on time.\n\nHis old pack put down turned humans if they were felt to be dangerous. There's no way anyone could ever think Parker was a danger. He wouldn't even entertain the idea that Alpha would do that to Parker. The worst possible thing he could imagine was that the pack would reject Parker and exile him. Colton wouldn't let them take Parker away from him. That was not an option. He would fight whoever he needed to make sure that did not happen.\n\nBy the time they arrived at the Alpha's country home, Colton was nervous. He didn't let it show, but he was sure things were going to be bad. He tried to sugarcoat it for Parker, but his pup was smart.\n\nHe parked the car in the grassy field designated for parking and he and Parker got out. Parker looked around, taking everything in.\n\nThe house was a large Tudor revival home and to Parker, here for the first time, it must have looked quite impressive sitting on a huge plot of land. The Alpha also owned much of the forest around his home. It was used for many pack gatherings.\n\nColton walked around the front of the car to get to Parker.\n\n\"The Sheriff lives here?\" Parker asked as he looked around. \"I didn't know that Seth's family was this loaded. No wonder he acts like a spoiled brat.\"\n\n\"Mm-hmm,\" Colton answered. He gently pushed Parker against the car and leaned into him. His hands moved to either side of the smaller man who belonged to him. He leaned his head down close. He breathed in Parker's new scent and it calmed him.\n\nHe grabbed the hem of Parker's polo shirt and yanked it over his head.\n\n\"Colton!\" Parker hissed as he tried to grab the shirt.\n\nColton tossed it into the back floor of the car. He rifled through his gym bag and pulled out one of his t-shirts. Colton had sweat through it during his last workout. It was ripe with his scent. It was perfect.\n\n\"What are you doing?\" Parker asked as Colton pushed the t-shirt over his neck, then helped with the sleeves.\n\nThe baggy loose-fitting shirt exposed his neck and collarbone enough that everyone would see the fresh mating bite. He wanted everyone to know that Parker was his. He was proud to be mated to Parker Montgomery and he was going to show off his pup to the pack. Colton leaned in and lapped his tongue across the bite, grinning smugly when Parker's knees buckled.\n\nParker pulled the collar of the shirt up to his nose and sniffed. He wrinkled his nose and let the shirt drop back down. \"Are you gonna piss on my shoes next?\" asked Parker.\n\nThere was no heat behind his words and Colton laughed. \"If there's a chance that someone might not know that you belong to me, then I might just have to do that.\"\n\n\"Yeah, I think they'll figure it out.\"\n\nParker let out a sigh and put his arms around Colton. Colton could feel him trembling. He rubbed his chin up Parker's neck, and across his jaw, letting his rough whiskers scrape across Parker's smooth skin.\n\n\"It's gonna be okay,\" Colton whispered, trying to soothe the boy's nerves.\n\nParker looked up at him, the worry and fear in his eyes easily readable. \"I'm scared,\" he said in a hushed voice.\n\nColton moved a hand to Parker's neck. His thumb stroked the jaw line. \"You don't need to be scared. You're mine, pup. You wear my mark and my scent. I may be young, but I'm no whelp. I'm big and strong. You're my mate and I will protect you until my last breath. If anyone dares to touch you, I will kill them. They have no choice but to accept you into the pack.\"\n\n\"I'm not worried about me... well maybe a little, but I'm worried about you. I don't want you to get in trouble. You couldn't help what happened. It was instinct, like you said. It's not your fault. And please don't kill anybody.\"\n\nColton laughed. \"I'll try. Don't worry about me. I can handle myself.\" He flexed his arms, making his massive biceps bulge.\n\n\"I know you can.\" He reached up and wrapped his hands around those biceps and gave them a squeeze. \"You're my big, bad wolf. And I am so proud to be your pup.\"\n\nIf it wouldn't have hurt his tough-guy image, Colton would have melted into a puddle of tears. Instead, he leaned down and kissed his boy slowly and sensually, their tongues tangling in each other.\n\nWhen Colton broke the kiss, he dropped his forehead on Parker's shoulder.\n\n\"Do you think anyone would notice if we just left?\" Parker whispered into Colton's neck.\n\nColton chuckled. \"Probably.\"\n\n\"So I can't even tempt you with the promise of sex?\"\n\nThey both laughed. \"You tempt me more than you know.\"\n\nThey were interrupted when the rumbling diesel engine of Jed's monster truck pulled up next to Colton's car. Jed and Trey jumped out of the truck.\n\n\"What the fuck is going on?\" Jed asked Colton, his eyes wide as he looked at the newly mated couple. \"What's Parker doing here?\"\n\nTrey looked at Parker and blinked. \"Holy shit.\"\n\nJed turned, took another look, and leaned in and sniffed Parker. His eyes widened even further when he saw the bite scar on Parker's neck. \"Holy fuck.\"\n\nColton stepped forward and gave Jed a nudge backwards. \"Back away from my mate.\"\n\nJed held his hands up defensively. \"Dude. Come on. For the last time, you know I'm not trying to hit on your pup\u2014er, Parker.\"\n\nTrey's jaw hung open. \"My dad said the meeting was called because someone in the pack bit a human--turned him without permission. I was praying that it wasn't you, but I should have known. But you didn't just turn him. No, you mated him. I can smell it.\"\n\n\"I repeat: Holy. Fuck. How did you do it?\" Jed asked. \"Mate him, I mean?\"\n\nColton spoke matter-of-factly. \"I bit his neck and drank from him while I came inside him.\"\n\nParker coughed and choked and looked at Colton with shock. \"Colton!\"\n\n\"What?\" He shrugged. \"That's how it happened.\" He looked back at Trey. \"Did you find anything?\"\n\nTrey shook his head. \"No. We thought we found a scent trail by the old water tower. We followed it down to the ravine, but it just disappeared.\"\n\n\"Are you talking about the grey wolf?\" Parker asked.\n\nColton reached up and rubbed his fingers through the back of Parker's hair. \"Don't worry about it. We're looking for him.\"\n\n\"I thought he was a wild wolf. But he's one of you-- I mean, one of us.\"\n\n\"Yes,\" Colton grunted.\n\n\"But why would he attack me? I haven't done anything.\"\n\n\"We don't know what he wants,\" said Trey. \"It could be a coincidence. Or he could have smelled Colton on you and it was a territory claim.\"\n\nColton ground his teeth and started to growl until Parker nudged him in the ribs with an elbow.\n\nThe yard was starting to fill up with cars. Colton checked the time. As he looked around, he saw that everyone was watching him and Parker. He really wished he could shield Parker from all of this. It was time to get this shit over with. Then he could get back to being with his pup.\n\n\"Let's go.\"\n\nColton grabbed Parker's hand and pulled him close. Trey and Jed flanked the couple and they proudly walked in formation to the backyard where the pack was gathering.\n\n* * *\n\nParker tried not to be nervous. He tried to remain calm. He was safe. He had Colton on his left side, with Jed close on his right. Trey was also nearby. He had no doubt that the three would protect him with their lives. So what if he was walking into a field full of lycan shapeshifting werewolves? So what if they were prejudiced against him because he's human? Er, was human.",
        "No big deal.\n\nYeah, right!\n\nParker could tell that all eyes were on him, the newcomer that had been turned without permission. The way they were all looking at him made him feel really uneasy.\n\nHis eyes widened as he looked around the field and recognized many of the faces. The cop that caught them making out at the old water tower, Deputy Green, stood among several other cops. He recognized one of his father's golfing buddies standing with the cops.\n\nHe also recognized Principal Shaw. Mr. Shaw's hard gaze made Parker drop his eyes to the ground. Homophobic asshole.\n\nParker couldn't miss the Stone family. Jed's four brothers stood with a woman he assumed was Jed's mom and an older girl that must have been the sister. They weren't paying any attention to Parker, they were all watching Jed.\n\nA muscular black man wearing an expensive business suit motioned Trey to join him and the statuesque woman standing with him. Trey shook his head and remained with Parker and Colton.\n\nParker drew in a sharp breath when he saw a small group of guys from school, all of them wearing blue and white letter jackets. Seth Forrest stood in front of the group, arms folded over his chest, with a smarmy smirk on his face. Parker really wanted to slap that look off his face.\n\nShell's boyfriend Curtis was among the jocks standing with Seth. Parker and Curtis exchanged a look.\n\nHe would need to talk to Colton about Curtis.\n\nThey walked towards Colton's dad, dressed in his brown deputy's uniform, speaking with Sheriff Forrest -- Alpha Forrest. Jed's father stood off to the side of the Alpha, looking menacing with his arms folded across his chest.\n\nAs if they sensed the quartet's approach, they turned and looked at Colton, then Parker.\n\nEven without his sheriff's uniform, his massive size and his voice would have conveyed his authority. He was without a doubt the leader of this pack. He turned to Jed's father and quietly spoke.\n\nJed's father nodded and moved to stand with his family. He looked upon Jed with a small smile that looked completely out of place on his stern face.\n\n\"Colton Butler,\" Alpha Forrest spoke. He spoke normally, but his voice seemed to carry throughout the field as if he shouted. \"Step forward.\"\n\nColton gave Parker's hand a final squeeze, then let go. He held his chin up high as he walked right up to the Alpha and stood directly in front of him.\n\nParker moved slightly closer to Jed. Trey stepped sideways, closing the gap. Parker felt his nerves settle a little bit. He would be protected. It was Colton he was worried about. He didn't want Colton to be punished. No one would tell him what the punishments were, and all sorts of horrible things ran through his head. None was worse than being separated from Colton. He couldn't imagine living without the man.\n\n\"Colton Butler. You have been accused of breaking one of our most sacred laws: turning a human. How do you plead?\"\n\nColton crossed his arms across his chest. \"Not guilty.\"\n\n\"He lies!\" Seth shouted as he stepped forward. His finger pointed at Parker accusingly. \"Even a blind man could see that bite mark.\"\n\nThe Alpha glanced back at Seth with narrowed, focused eyes. They flashed a bright amber and Seth immediately dropped his head and stepped back into his place.\n\nThe Alpha turned his focus back to Colton. He dropped his voice, but his tone became icy and he was practically growling. \"Try again, pup.\"\n\nColton ground his teeth and suppressed an offended growl. He was no pup and he made it clear that he didn't like being called one. \"Not. Guilty. Parker is my mate. Yes, I bit him, but it was on instinct. My wolf would no longer be denied what was his.\"\n\nThe entire crowd erupted in gasps and chatter.\n\n\"Silence,\" the Alpha commanded and the crowd immediately quieted. He turned to Parker. \"Step forward, whelp.\"\n\nParker wanted to turn and run, but something compelled him to obey the powerful wolf. He clearly didn't move fast enough because Trey put a hand on his back and gave him a push forward. Parker kept his eyes on the Alpha's black uniform boots as he walked forward to stand next to Colton.\n\nThe Alpha grabbed Parker's head and turned it, his fingernails digging uncomfortably into his skin. Parker pressed his lips together to keep the pained whimper from escaping, but his trembling couldn't be helped. He didn't like the big man's rough hands on him.\n\nApparently neither did Colton, because Parker could hear a low warning growl coming from his mate.\n\nIgnoring Colton, the Alpha leaned in and sniffed Parker.\n\nColton's growling increased in both volume and intensity.\n\nAlpha's head snapped towards Colton. \"I would back down if I were you, pup.\"\n\nColton gritted his teeth and balled his fists but stopped his growling.\n\nAlpha stepped back. \"The accusation is null. He is Colton's mate.\"\n\nSeth pushed forward, completely outraged. \"What?! Men can't mate with men!\" Several in the pack shouted their agreement. \"He can't breed pups with that faggot!\"\n\nColton spun on his heels and snarled. His arm shot up and he gripped Seth by the throat and squeezed.\n\n\"Enough, Colton.\"\n\nColton ignored the Alpha's command. He squeezed harder and Seth's face turned red. Seth's hands gripped and pulled at Colton's arms as he struggled in vain to free himself. Parker was frozen in fear; he didn't know what to do.\n\nThe Alpha stepped forward. His voice was low and dangerous, directed at Colton. \"I am not accustomed to having my orders ignored. That is twice I've had to correct you tonight. Let him go. Now.\"\n\nColton gave Seth a shove, knocking him backwards but doing as the Alpha commanded.\n\nThe Alpha glared at his son. \"I have made my decision.\" He looked around the pack. He took in a deep breath and let it go. Even in a calm state, his body language exuded power and strength. \"Does anyone have a problem with this?\"\n\nSeth spit on Colton's boot. His voice dropped to a whisper. \"I hope you enjoy my sloppy seconds.\"\n\nColton's chest heaved and his pupils dilated. His voice dropped in pitch and became a snarl. \"You. I knew it was you. You tried to rape my mate.\"\n\nColton's shirt ripped down the back as his muscles began to ripple. His body grew in size and width, black fur sprouting all over his skin. With a mighty roar, he backhanded Seth, sending the muscular teen flying through the air as if he weighed nothing.\n\nThe crowd gasped and stepped back as the two-legged werewolf hybrid ripped his shredded shirt and pants off and tossed them aside and advanced on Seth.\n\n\"Holy fucking shit!\" Jed sputtered. \"He can do a partial shift. He's an alpha.\"\n\nParker looked from Jed back to Colton but didn't have time to really let Jed's words sink in. He knew that Colton was close to being out of control. When he told Colton what Seth had tried to do to him in the locker room, he had known it would come to this if Colton ever found out who it was.\n\nSeth pushed up to his feet to defend himself, but he was too late. Colton's arm slashed out. Angry claw marks bloomed red across Seth's chest as his blood began spilling. Seth fell into a whimpering heap on the ground as his body started to morph.\n\nNow a large black wolf with grey streaks and a bloody chest, Seth shrugged out from under his clothes, pushed to his feet and snapped and growled at Colton. He lunged and leapt for Colton's throat. Colton slammed his fist into the side of Seth's head, sending him smashing into the earth.\n\nSeth was simply no match for Colton's alpha hybrid form.\n\nWith an ear shattering roar, Colton advanced, fully prepared to deal a final blow.\n\n\"Colton! Stop,\" Colton's father intervened, but Colton ignored him.\n\n\"Colton Butler!\" Alpha shouted. \"Back down! Shift!\"\n\nColton tilted his head back and howled angrily. He dropped down to one knee at Seth's side and raised his arm. His claws were already dripping with Seth's blood.\n\nParker ran forward to his mate. \"Colton,\" he whispered as he grabbed the furred paw, covering the claws in his hand. \"Don't.\"\n\n\"Colton! Don't make me tell you again.\" The alpha's teeth dropped and claws extended from his fingers, ready to strike.\n\nParker tugged at Colton's arm. Colton turned and looked up at him. Parker could see the rage in his dark eyes, the instinctual need to protect and avenge his mate. Those deep brown eyes stared deep into Parker's. Parker somehow remained calm and he tried to direct that at his big, bad wolf. He reached down and cupped his hand on Colton's furry cheek. \"Colton.\"\n\nThe ears on top of Colton's head started to shrink as did the jaw filled with razor-sharp fangs. The body hair receded and the claws retracted as his body shrank down to its normal size.\n\nA very human-looking, fully naked Colton stood up and stared down at Parker. He grabbed a fistful of Parker's hair, slanted his head and claimed his mate's mouth in a feral kiss.\n\nHe broke the kiss and grabbed Parker's hand and pulled him close. He led him back to the Alpha and stood before him, naked as the day he was born, with Parker at his side, their hands clasped and fingers intertwined together.\n\nThe Alpha stared at Colton, who defiantly stared back, meeting his eyes. After several moments of neither backing down, the Alpha finally spoke. \"You need to leave.\"\n\nCarlton Butler stepped forward, whispering, \"Alpha....\"\n\nColton blinked, finally backing down from the Alpha's gaze. \"You're exiling me?\"\n\n\"Yes. It's time for you to leave and start your own pack. It's what I did when I was your age, when my own mate triggered my change. You can't stay here. You're already too disruptive. I won't have you destroy my pack.\"\n\nCarlton's voice dropped to just below a whisper. \"Alpha, if you banish Colton, you're going to lose him and possibly his friends. They are all strong wolves and can give the pack strong pups.\"\n\nAlpha scoffed, looking between Colton, Parker, Jed and Trey. \"None of those boys is going to be making any pups. I've made my decision.\"\n\nCarlton nodded and stepped back. \"Yes, Alpha.\"\n\n\"I accept exile,\" Colton said, taking Alpha's decision like a man.\n\n\"The pack owns a small campground at the edge of the county near the village of Timber. You can rent it from us and relocate there.\"\n\nColton shook his head. \"No. You'll sell it to us outright at fair market value, and I want the village in my territory.\"\n\nAlpha Forrest narrowed his eyes at Colton, then started to chuckle. \"You're an arrogant little fucker. I'm glad to be done with you. Fine, I agree.\"\n\n\"What?\" Seth cried as he pushed to his feet. The naked jock stood upright with difficulty. His breathing was labored and he clutched at his scabbed-over, healing chest wounds. \"That was supposed to be mine,\" he wheezed.\n\nThe Alpha turned to his son, his voice icy with disappointment. \"That was before you lost a challenge and then got your ass whooped. Once again. Now mind your place, boy.\"\n\n\"Yes, father,\" Seth replied through gritted teeth. He reluctantly stepped back and moved to stand next to TJ. His face was red with anger, directed at Colton, who ignored him as if he didn't exist.\n\nAlpha Forrest turned back to Colton. He raised his voice for everyone to hear. \"Colton Butler, you are no longer part of this pack. You can stay in the city until graduation, then I want you and your mate gone. You'll do your runs out at the camp. Stay off my lands. I won't be as patient next time you cross me.\"\n\nParker nearly jumped out of his skin when Jed moved in next to him. He looked up at the big man, who folded his arms across his chest and stared straight ahead. Parker looked to the other side of Colton, where Trey now stood.\n\nColton glanced at Trey and then Jed, who both nodded at him. He then looked the Alpha square in the eye. \"In addition to my mate, I take my beta and my enforcer with me.\"\n\nAlpha Forrest held out his hand. \"Agreed.\"\n\nColton shook his hand. \"Agreed.\"\n\nColton gave his father one last look, and after Carlton nodded respectfully, he turned towards his friends.\n\n\"Let's go, Timber Pack.\"\n\n\"Yes, Alpha,\" Trey answered proudly and respectfully. Jed and Parker quickly replied the same way.\n\nJed and Trey flanked Colton and Parker.\n\nThe Forest View Pack parted to allow the newly formed Timber Pack to leave the field.\n\n* * *\n\nAfter Colton got dressed with the change of clothes he had in his trunk, the pack-mates drove to their new pack grounds.\n\nColton watched Jed and Parker build up a fire in the big firepit while Trey \"supervised.\" He looked around the abandoned campsite and cringed. What the hell had he just done? It was one thing to accept his own exile, but he had just ruined the lives of the three people he cared about the most.\n\n\"Your dad looked pissed,\" Jed said to Trey as he pushed a log into the fire using a big stick.\n\n\"Yeah,\" Trey said with a sigh. \"My parents are all about appearances and social standing. The Forest View Wolf Pack is big and powerful. They have a lot of pull. I'm sure they look at my leaving as a blemish on their standing in the pack.\"\n\nParker gave Trey a pointed look. \"Well, the Timber Pack is going to be just as powerful some day. It may be just the four of us now, but we're good people. Not homophobic assholes like Seth Forrest and TJ Carlyle.\"\n\nTrey held out his fist and Parker tapped it.\n\nJed dropped another log on the fire. \"My parents don't care much about that stuff... power and socializing. But they're really big on loyalty and duty. I'm not sure if they approve of me leaving the pack.\"\n\nParker shook his head and knelt down into a squat next to the big man. \"Your mom and dad looked so proud of you, Jed.\"\n\n\"What? Really?\"\n\n\"I'm serious. They were ready to burst with pride. The way they were looking at you when we left... If my mom and dad ever looked at me like that, I'd wake up because I know I'd be dreaming.\" Parker and Jed laughed together. \"They were proud because you did the right thing.\"\n\n\"Thanks.\" Jed nodded. He gave Parker a little nudge with his shoulder, sending the smaller boy sprawling into the dirt.\n\nJed laughed. \"Oops. My bad.\"\n\n\"You are a really crappy bodyguard, you know that?\" Parker said as he dusted off his jeans. \"You're supposed to protect me, not kill me.\"\n\nColton couldn't help but smile. His mate was simply amazing.\n\nTrey sat down next to Colton. He spoke quietly, even though the others would still be able to hear if they cared to listen. \"Hey. Whatever you're thinking, don't.\"\n\nColton didn't say anything.\n\n\"We came with you by our choice.\"\n\nColton let out a sigh. \"I can't help but think I fucked up your lives. Look around, man. This is all I have to offer you guys. I really fucked up this time.\"\n\n\"That's bullshit.\"\n\nParker sat down next to Colton and took his hand. \"Colt, I don't care where we are as long as I'm with you.\"\n\nJed snorted. \"That's some totally corny shit, but yeah, what he said.\"\n\nParker shot Jed a dirty look, then turned back to Colton. \"You said this to me before, but it goes both ways. I'd follow you to the ends of the earth, Colton. We all would.\"\n\n\"That's right, man,\" Trey said. \"You're our alpha.\"\n\nColton drew in a deep breath and stood up. Fuck this self-doubt bullshit. He had people depending on him.\n\n\"Right. First order, if any of you refer to me by title, I'll beat your ass.\" He looked around the camp grounds. \"So, it looks like we got six cabins that are salvageable. If we're gonna be living here when school gets out, we should concentrate on repairing the three that are in the best shape. Parker and I will take number one. Hopefully there's a working kitchen in the common building. I'll work on getting the electricity turned on and I'll get keys and paperwork and everything we need from Alph-- from Forrest.\"\n\n\"I can borrow some tools from my dad and my brother's business,\" Jed said. \"I'm sure they'll help us with supplies at contractor pricing. We can have this place in shape in no time.\"\n\n\"All right then. We're gonna do this.\"\n\n\"We're Timber Pack,\" Trey said. He stood up and held out his right hand. Jed put his hand on top, followed by Parker. All three turned and looked at Colton.\n\nColton laid his hand on his pack-mates'. \"Timber Pack.\"\n\n\"I'm hungry,\" Jed mumbled with a frown, interrupting the significant moment. He suddenly perked up, and then turned to Colton. \"Hey, now that you're an alpha, does this mean we get to go to Conclave?\"\n\n\"What's Conclave?\" Parker asked.\n\n\"It's a gathering of Alphas,\" Colton explained. \"It happens twice a year on the full moon closest to the solstice. I need to register our pack with the Council. I'll find out about it then.\"\n\n\"Conclaves and Councils?\" Parker asked. \"This is all too much. My head is going to explode.\"\n\n\"We'll all get to go,\" Jed added, bouncing on his heels. \"My dad goes with Forrest as his enforcer. He says it's awesome.\"\n\n\"The Council holds the Conclave in a private reserve in the Canadian Rockies,\" Colton added. \"Dad says the mountain forest is gorgeous.\"\n\nTrey nudged Jed with his elbow. \"Maybe we can find you a mate.\"\n\nJed scrunched his face. \"Find one for yourself. I don't want no stinking mate.\" He turned to Parker. \"No offense, little dude.\"\n\n\"I told you, don't call me little,\" Parker said before he punched Jed in the gut. \"Ow!\" he cried as he shook his fist. \"What are you made of, rocks?!\"\n\n* * *\n\nWhile Trey and Jed discussed repair plans, Parker scooted closer to Colton. He knew it was a little perverse, but watching Colton fight Seth earlier had made him really horny. All of that power that Colton had was really sexy.\n\nParker kissed the side of Colton's neck, and whispered in his ear, \"Can you get rid of them for a little while?\"\n\nColton growled and grabbed Parker's head, angling it, before he ferociously attacked his mouth. He broke the kiss and looked up at his friends. His voice was low and guttural. \"Get lost.\"\n\nJed looked at Trey and rolled his eyes. \"Fine. I wanted to go for a run anyway.\"\n\nWhen Jed and Trey started to strip off their clothes, Colton snarled, turning Parker's head away from their exposed cocks. Colton grabbed Parker and threw him over his shoulder, caveman style, carrying him off towards the cabins.\n\n\"Hey!\" Parker squealed as he squirmed, trying to get down onto the ground.\n\n\"Quiet,\" Colton barked. \"Be still.\"\n\nParker instantly stopped struggling at his alpha's command. His whole body was one big nerve, with his aching dick at the center.\n\nHolding onto Colton's back for support, Parker let Colton carry him to the first cabin. They entered through the back door and Colton kicked it shut behind them.\n\nColton tossed Parker onto the bed and he landed with a bounce. The cabin's room was bathed in a soft light when Colton turned on an LED camping lantern.\n\nParker looked around and noted that he was laying on a nest of blankets. The cabin looked like it had been cleaned up a little. All of the boards had been removed from the windows. Colton must have done all of this after he left Parker's house this morning. Parker was impressed.\n\n\"You've been busy.\"\n\nColton smirked, then became deadly serious. He moved around the foot of the bed, slowly stalking Parker like a predator. Parker could see his cock was hard, creating a big bulge in his jeans that pointed towards his hip.\n\nColton's voice was deep and husky as he unbuckled his belt and unbuttoned his jeans, relieving some of the pressure. \"I seem to recall a promise of sex.\"\n\nParker gave him a seductive smile and whispered, \"Yes, Alpha.\"\n\n\"Fuck,\" Colton grunted. His eyes flashed amber, then dilated. Taking a deep breath, he let it out and then pounced. He shoved Parker's legs apart with his knees, covering him with his big body. He grabbed Parker's wrists and pinned them over his head.\n\nParker shuddered when Colton rolled his hips, grinding that hard cock against his own.\n\n\"Show me my mark,\" Colton said, adding a low growl while bearing a hint of his fangs.",
        "Parker closed his eyes and tilted his head back and to the side in submission.\n\nColton swiped his tongue across the mark, up Parker's jugular. He pressed his lips against Parker's ear. \"You're mine, little wolf.\"\n\nParker's ass twitched. He locked his legs around Colton, opened his eyes and stared into Colton's. \"Take what's yours, Alpha.\"\n\nColton pushed back and practically tore Parker's clothes from his body. He quickly got rid of his boots and jeans, then grabbed a bottle of lube he had hidden.\n\n\"Hurry,\" Parker begged. He was about to go up in flames. Colton had him so hot right now, being all aggressive and, well, alpha.\n\nColton swiped his lubed-up fingers through Parker's crack, then pushed the two longest fingers into Parker's ass. He pegged the prostate, then twisted and spread the fingers, stretching the ring of muscle.\n\nParker writhed on the bed, his hands trying to grab at Colton to pull him closer. \"Oh god!\"\n\nColton lined up the head of his lubed-up cock and pushed forward. His hands pinned Parker down onto the mattress and he stared down at Parker, his dark brown eyes wild with lust.\n\nParker nodded desperately, giving Colton his consent.\n\nColton growled. \"Take it.\" He pulled back until the tip of his cock was just about to slip out, and then slammed forward, stabbing Parker's prostate and burying his rod balls deep.\n\n\"Yes!\" Parker cried. His legs tightened around Colton's hips. His hands dug into Colton's arms.\n\nColton began to move. He was relentless, pounding Parker into the mattress. Parker loved every minute of it.\n\nThe headboard slammed against the wall repeatedly as Colton's body slammed into Parker's.\n\n\"Look at me.\"\n\nParker opened his eyes and looked into Colton's. Parker could tell that the beast was just below the surface, ready to burst out, but this time Colton was in complete control. Colton's eyes were wild, feral. His upper and lower canines had pushed through. Colton didn't bother to try to hide the razor sharp teeth from Parker. He displayed them in a snarl, grunting like an animal with every thrust of his hips.\n\nParker's back arched, desperate for more contact with his mate's muscled, hair-covered body. He writhed on the bed, his head thrashing from side to side.\n\nColton's hands tightened on Parker, his grip bruising Parker's tender flesh. He jackhammered into him, pushing him up the bed, making Parker whimper with every thrust. Parker slapped his hand against the headboard to steady himself.\n\nColton laid his full weight on top of Parker, completely covering his smaller body. He pushed his arms underneath, cradling his boy's head and body, holding him tight to his body. His hot breath wafted across the mating bite. Then he licked it and started sucking.\n\nParker cried out in pleasure as Colton held him and worked the scar with his mouth, tongue and teeth while his hips snapped back and forth.\n\nHe could feel his orgasm building up faster and faster with each thrust of his mate's huge cock. Colton was going to make him come. \"Don't stop,\" he panted. \"Don't stop.\"\n\n\"Come for me,\" his mate commanded. \"Now.\"\n\nColton's teeth clamped down, his fangs piercing Parker's neck. Parker's entire body contracted hard and his ass clamped down like a vise on Colton's girth. He screamed as the muscles in his groin contracted and then began pumping. Hot come spewed from the end of his cock, spraying their bodies with the thick, white liquid.\n\nWith a feral roar, Colton shoved forward and erupted, shooting jet after jet of molten lava deep inside Parker's guts.\n\nStill thrusting his hips, Colton collapsed his weight on top of Parker, his weight pushing him down into the mattress. He swiped his tongue across the fresh bite and his big body jerked one more time and then went still.\n\nThey laid together in recovery. Parker stroked a hand through Colton's hair while the other caressed his man's muscular ass.\n\nAfter a few minutes, their breathing finally evened out enough for Parker to whisper, \"That was so hot... I think I like it when you go all 'alpha'.\"\n\nColton could only grunt in reply.\n\nColton's cock finally went soft enough to slip out of his body. Parker felt wet and slimy between his ass cheeks. His ass was sore from the rough treatment. It was heaven.\n\n\"They're gonna know what we were doing, aren't they?\" Parker asked. He knew he was blushing at the thought of Jed and Trey hearing them. They were both really loud tonight.\n\nColton laughed, his voice still rough from his shouting. \"Yeah. It's no different than every other time we have sex.\"\n\nParker's eyes widened. \"What?\"\n\n\"They can smell me all over you, pup. All inside you, leaking out of you. They all can.\"\n\n\"Oh jeez, that is all kinds of embarrassing.\"\n\n\"No. It's fucking hot.\"\n\nParker nodded his head. He understood exactly what Colton was feeling. \"They know I'm yours.\"\n\nColton growled possessively. \"Yes. Mine.\"\n\nHe pushed himself up onto his knees. He grabbed Parker's ankles and spread them wide. With a push forward, his newly erect cock found its target and slid into his mate's body and proceeded to fuck another load out of him.\n\n* * *\n\nAfter parking the car in the driveway, Colton walked Parker up to the front porch.\n\n\"You don't have to walk me to the door,\" Parker said.\n\nColton looked around. \"That shifter is still out there. I'm not taking any chances. Not with you.\"\n\nKnowing he wasn't going to win, Parker let it go. \"Okay.\"\n\n\"Promise me you'll stay inside.\"\n\n\"I will. Good night, Colton.\"\n\n\"'Night, pup. I love you.\"\n\n\"I love you, too.\"\n\nAfter kissing him goodnight, Parker unlocked the door and went inside. He walked over to the front window and pushed the curtain back and watched Colton get into his car and drive off.\n\nAs he let go of the curtain, a movement in the shadows across the street caught his eye. Parker squinted in the dark, searching...\n\n\"What are you looking at?\"\n\nParker gasped and spun around at the sound of the unexpected voice.\n\nThe living room's overhead light came on. Parker's dad was standing at the bottom of the stairway.\n\n\"You're cutting it close, Parker.\"\n\nParker glanced at the clock on the wall. \"Yeah...\"\n\n\"If you're going to start missing your curfew, then we're going to have to re-evaluate the freedoms we give you.\"\n\n\"Okay. Well... Goodnight.\"\n\nParker hurried past his father and went upstairs to his bedroom.\n\n* * *\n\nColton felt wrong leaving Parker behind. Somehow it was different this time. Parker should be with him, sleeping in his bed. Not at home--at his parents' home--sleeping in his own bed.\n\nThe next few months were going to be long.\n\nColton found his dad sitting at the kitchen table. He was eating a bowl of cereal, reading a magazine, though Colton could tell that he wasn't really reading.\n\nHis father clearly was waiting for Colton to get home.\n\n\"Dad.\"\n\n\"Sit down.\" Colton raised an eyebrow. \"Please,\" he added through gritted teeth.\n\nColton pulled out a chair and sat down. \"Okay. What did you want to say?\"\n\nHis father let out an exasperated sigh. \"Damn it, Colton. Stop being so damn difficult. Why didn't you tell me about what was going on?\"\n\n\"Would it have mattered?\"\n\n\"Yes, damn it! All of this could have been prevented, but you are just so god-damned stubborn. I could have helped you.\"\n\n\"Helped me how?\"\n\n\"I had everything planned. Seth Forrest is weak. He'll never be alpha. When Alpha stepped down, you were supposed to take his place. If you wanted a mate, we could have found you one. Someone you could have bred pups with. There are plenty of bitches out there wanting to breed with strong wolves. Hell, we could have found you a human girl if that's what you wanted. Now you've been exiled and Alpha won't back down on this. You've thrown away everything that we've worked for.\"\n\nColton's anger started to rise. \"And what about Parker?\"\n\nHis father didn't speak. He knew he had gone too far as far as Colton was concerned.\n\nColton stood up swiftly, sending the wooden chair to the floor. He placed his hands on the table. His teeth dropped and his claws extended from his fingers and dug into the wood as he leaned in closer. His voice was deep and threatening, taking on a definite alpha quality. \"I am not interested in your power games. Parker is my mate, the mate of an alpha. You will respect him. Don't test me on this.\"\n\nSatisfied when his father subconsciously tipped his head in submission, Colton pushed from the table and went up to his room. He slammed the door shut behind him.\n\nFeeling agitated, he stripped off his clothes and tossed himself onto his bed. He grabbed his phone, went to his favorite contacts and hit Parker's name.\n\n\"Hello?\"\n\nColton closed his eyes and let out a soft breath. Just hearing Parker's voice had a calming effect on him. \"Hey, pup.\"\n\n\"Is everything okay?\"\n\n\"Yeah. I'm-- Just a second.\" Colton pulled back his phone and tapped the face chat button. After a couple of seconds, Parker's face came into a view. \"Much better,\" Colton said.\n\nParker was snuggled up in bed, under the blankets. The lamp on his nightstand gave off enough light so that Colton could see him.\n\n\"Hi,\" Parker said, flashing Colton an adorable smile.\n\n\"Hi. Don't you look all cute and cozy.\"\n\n\"You look sexy.\"\n\n\"What? This?\"\n\nColton slowly swept his phone down his body, then back up to his face. He watched Parker swallow visibly.\n\n\"You're hard,\" Parker whispered.\n\n\"I got hard as soon as I heard your voice.\"\n\n\"I like that I can do that to you. Makes me feel sexy.\"\n\nParker covered his mouth as he yawned. He settled back in the blankets.\n\nColton could tell that Parker was tired. It irked him that his mate wasn't in bed with him where he belonged. \"You should be here with me,\" he growled.\n\n\"I wish I was. But I probably wouldn't get any sleep because you'd be poking at me with that big ol' thing you got down there.\"\n\n\"Maybe... probably... definitely.\"\n\nParker laughed, then yawned again. \"But I'm glad you called.\"\n\n\"Let me see my mark before you fall asleep.\"\n\nParker laughed again. He pulled off his t-shirt and tossed it aside. He moved his phone so that it captured the scar on the curve of his neck. Parker ran his fingers over it and shuddered.\n\n\"It's sensitive.\"\n\nColton licked his lips as he watched Parker sweep the phone down his chest and stomach to his bulging underwear before moving back up to his face.\n\nColton knew that he could probably talk Parker into a video chat quickie, but he could tell that Parker was sleepy. It had been a long day for his mate. \"I'll let you go to sleep. I'll see you in the morning.\"\n\n\"Okay.\" Parker's eyes were already half closed. \"If you save it for me, I promise I'll take care of it in the morning.\" His eyes drifted shut, then slowly opened half-way. \"I love you.\"\n\n\"I love you, too, pup. Goodnight.\""
    ],
    "authorname": "robcub32",
    "tags": [
        "gay drama",
        "gay romance",
        "gay novella",
        "paranormal",
        "werewolves",
        "high school"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/timber-pack-chronicles-ch-07"
}