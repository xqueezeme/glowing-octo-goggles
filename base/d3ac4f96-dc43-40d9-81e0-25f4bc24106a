{
    "title": "Sessions",
    "pages": [
        "Hi Everyone, \n\nThank you all for your kind words of encouragement and support, I honestly feel so humbled that I've received nothing but positive comments and feedback on my stories thus far. I appreciate that it's been a long wait for this next story and I thank you all for your patience. \n\nI give you fair warning that what follows is by no means a 'quick fix' story. It's more than double the length of my previous works and the sex is limited to say the least. \n\nHowever, I promise it's not all doom and gloom! \n\nHoping you enjoy, \n\nAll the best \n\nSessions \n\nChapter One: \n\nEight Sessions Down: \n\nSession: \n\n\"Take another one Cora.\" \n\nI look up through a curtain of chocolate brown hair to see my counsellor, Jayne, holding out a sympathetic box of tissues. \n\n\"Thanks.\" I sniff, pulling one out of the box and tucking my hair behind my ears \"I'm sorry, I don't mean to get like this every time I come here, but it's like, I'm fine...then I walk through that door and the floodgates just open.\" \n\n\"There's nothing to be sorry about Cora.\" She smiles \"And you're getting through less tissues in each session so we must be making some progress.\" \n\nI laugh a little, wiping the tears from my cheeks. \n\n\"I want you to think of these sessions as a safe, judgement free place where you can just let go and let out what clearly needs to come out. Eight sessions is enough for it to be clear you spend too much of your time supressing emotions and hiding from the world, it's good to let it out.\" \n\n\"It doesn't feel that good.\" I mumble. \n\n\"Give it time,\" she smiles again, \"I promise you'll feel better soon.\" \n\n\"I'll hold you to that.\" I grin. \n\n\"I take that to mean I can safely assume you'll be here next week?\" She asks, making a note at the top of her page. \n\nMy grin slips a little at the prospect of yet more talking about myself, but I assure her that I'll be here again next week, same time, same place...and I'll bring my own box of tissues. \n\nWe work through our deep breathing exercise, signalling the end of the hour is in sight and I use the silence to reflect. She is right that I've cried less and less in each session, but I'm not actually all that sure we've made any real progress. It's been two months for Christ's sake. Surely I shouldn't still be crying for more or less the whole hour after two fucking months?! \n\nWhat frustrates me the most about these sessions is that we...or I, as the case may be...can't seem to pinpoint exactly how I got to feeling this way in the first place. I work full time and am doing well in my part time degree, I can afford to pay my rent comfortably, although we are getting a new housemate to ease some of the financial pressure. I live with my best friend Tommy and his girlfriend Natalie, who I absolutely adore. I feel so guilty that I want for nothing and yet here I am stuck in this downward spiral of despair and misery, while those a lot less fortunate than me just get on with things. \n\nThis train of thought carries me through the last few minutes, then out of the practise and into my car. I sigh deeply as I pull my seat belt around me and click it into place, taking note of my tear stained cheeks, sore, wet, dull green eyes and cracked lips in the rear-view mirror. At least I don't have anyone to look pretty for back home. \n\nI suppose I have no choice but to believe Jayne really is telling the truth and one day I'll feel normal and happy again... \n\n... \n\n\"Cora...Cora...Cora! Are you even listening to me?\" \n\nI slowly pull my gaze away from the window and turn to face Tommy. \n\n\"Sorry Tommy,\" I sigh, \"what were you saying?\" \n\n\"I was asking you if you wanted to go to Leo's party on Friday night, since your last exam is that afternoon?\" \n\n\"Erm...\" I hesitate, I had planned on going straight to bed once my final exam was done with, the last thing I wanted to do was go to a party with Tommy's rugby mates. Not that I didn't like them, they were just a bit much when all you needed was sleep, several well-earned glasses of wine and a few bars of chocolate in front of the tv. \n\n\"You know Jayne would tell you it'd be good for you.\" He says with a boyish smile. \n\n\"Hmmmm...\" I muse. \n\nI know he's right, Jayne would tell me it'd be good for me. The theme of our sessions (despite me ending up an emotional wreck each time) seemed to be shifting towards me trying to get out more and be sociable. \n\n\"Is Natalie going?\" \n\n\"She's not coming back until Sunday remember?\" \n\n\"Oh yeah...\" I reply quietly. \n\n\"Come on Cora for fuck's sake! You're always saying you need to get out more...I heard Leah will be there.\" He grins and winks theatrically at me. \n\n\"Ok. First of all, you and I both know that it's you and Jayne who think I need to get out more, not me. Secondly, all I want to do is sleep, not go out and get shitfaced with Leo and co. and thirdly, the last thing that would make me want to go to this party is Leah fucking Dawson!\" \n\n\"That's not what you said last time when she stuck her tongue down your throat.\" His grin widens. \n\n\"That's because I couldn't speak!\" I throw my pen at him. \n\n\"Whatever helps you sleep at night,\" he laughs, running his fingers through his dark curly hair, \"I know she got your panties wet.\" \n\n\"That's fucking disgusting Tommy...\" I grimace \"and I'd appreciate you keeping your thoughts out of my underwear thanks.\" \n\n\"Alright, alright, keep your hair on. I just thought you could use some fun after all the sensible shit you've done this year. It can't be any fun working full time and studying for a degree. Think about it at least?\" \n\n\"Fine! I'll see how I feel on Friday once I'm done.\" \n\nHis face lights up happily as he bounds out the door like a kid at Christmas. \n\nI sigh loudly as the door closes behind him, I wish he'd stop trying to force Leah on me, I know he's only trying to help and he's been so supportive of me recently with the counselling and everything, but Leah is definitely the last thing I want right now. \n\nDon't get me wrong, in the conventional sense of the word she's absolutely stunning. Roughly six feet tall, long dark hair, bright green eyes and a figure she clearly works hard on, but there's just something about her I don't like, I can't even explain what it is, she just puts me about somehow. \n\nI sigh again as I return to my notes, thank Christ next year I'll be done with studying. A quick glance at the clock tells me I've been back from my session for roughly three hours...and I've been reading the same page for the last hour and a half...I think maybe I need a break... \n\n\"Oh! By the way,\" Tommy sticks his head round the door again, \"I think I've found a solution to our roommate problem.\" \n\n\"If it's asking Leah to move in then you seriously need to re-evaluate that thought.\" I retort quickly. \n\n\"Jesus, don't worry so much,\" he laughs, \"I wouldn't dare do that.\" \n\nMy eyes narrow and I raise another pen threateningly. \n\n\"No,\" he says hastily, \"it's my friend Madison, from Uni. I think you've met her before? Blonde, about an inch taller than you...ex-Army? Anyway...\" he continues at the blank look on my face \"she just broke up with her boyfriend and needs a place to stay. I told her about our spare room and she's really keen. She's coming for a look round on Saturday.\" \n\n\"Have you mentioned this to Natalie?\" I ask, knowing all too well that Tommy had a habit of making these decisions without mentioning it to anyone else. \n\n\"Course I have!\" I raise an eyebrow at him \"She knows Cora, I swear.\" \n\n\"In that case I'll put on a chicken.\" I reply. \n\n\"Awesome,\" he smiles as he leaves once more, \"she'll be here at 11.\" \n\nI throw my pen onto the desk and lean back in my chair, cupping my hands around the back of my head. I glance at the appointment card propped up against my desk tidy and sigh yet again. Jayne would definitely be telling me I needed to go to this party on Friday night...and who knows...maybe I'll actually enjoy it once I get there... \n\nChapter Two: \n\nThe Party and the Aftermath: \n\n\"Are you ready yet Cora?\" Tommy thumps on the door. \n\n\"Almost.\" I shout back. \n\nI hadn't been home from my exam for two minutes before Tommy had started shouting at me to get ready to go to the party. I could sort of see where he was coming from, allowing me to get settled in the house would mean he had next to no chance of getting me out of it again, but I didn't really appreciate being chauffeured from room to room and being told to get ready. It was like being in the military! \n\nTommy also seemed particularly concerned that I get dressed up, pulling clothes out of my wardrobe and making suggestions that I put some make-up on, which was unusual, as normally he wouldn't have cared if I'd gone in a onesie and slippers! \n\nAs it was, I ended up wearing a button up blouse where Tommy insisted I undo several buttons in order to show off my generous c-cup breasts, and the only the only pair of jeans I owned that made my ass look nice. \n\nI knew he was up to something, but I was so preoccupied with being shoved out of the house again at light speed I didn't have chance to ask about it. \n\n... \n\n\"Hey guys!\" Leo greets us enthusiastically at the door \"Thanks for bringing this stuff.\" \n\n\"No problem pal.\" Tommy grins, slapping him on the back. \n\n\"Hi Cora,\" he kisses me on the cheek, \"you look great!\" \n\n\"Um, thanks Leo,\" I grin nervously and button my shirt up a little more, \"where do you want this stuff?\" \n\n\"In the kitchen would be awesome, cheers.\" \n\nI wander through to the kitchen and deposit my bags on the table, already wishing that Natalie was here to keep me company. \n\n\"You came!\" A female voice suddenly yells from behind me, making me jump and almost drop the bottles I'm holding. \n\nI spin around just in time to register that disappointingly its Leah and not Natalie, before she wraps her arms around me and kisses me full on the mouth. \n\n\"You look gorgeous!\" Tommy's concern over what I was wearing becomes painfully apparent as she pulls away and looks me up and down, her eyes lingering on my chest \"Let me help you with those.\" \n\nShe takes the bottles out of my hands and drags two shot glasses out of the cupboard, pouring vodka into each one. \n\n\"Drink!\" She holds one out for me and I begrudgingly take it. \n\n\"Awesome! We're starting the shots early!\" Tommy shouts, barging through the door \"Get another two going Leah.\" \n\nShe obliges and soon the four of us are on our fourth one. I don't really want another after that, but as people start arriving I decide 'what the hell?' and knock it back. I'm in for a hell of a long night anyway, may as well at least try to relax. \n\n... \n\nMidnight rolls round and Leah is still clinging on to me as though I might evaporate, the large amount of alcohol I've consumed does nothing to make this less irritating. Her arm feels like it's been surgically attached to my waist...although now she's stopped forcing her tongue down my throat the kissing has improved...either that or I'm getting too drunk to notice how bad it is... \n\n\"You wanna take this back to your place?\" She asks, using her tongue to trace around my ear. \n\nI pause before answering. \n\nOn the one hand, I haven't had sex in forever and I know that Leah is definitely interested, regardless of the amount of alcohol in her system...but on the other, I can't shake the feeling that I'll seriously regret this in the morning...and I'm a firm believer in trusting your gut. \n\n\"Um, maybe...just give me one sec...\" I manage to excuse myself under the pretence of going to the bathroom and began a frantic search for Tommy. \n\n\"Tommy!\" I shout as I spot him playing some sort of drinking game in the kitchen. \n\n\"Cora!\" He yells drunkenly back at me \"How's things?\" \n\n\"I'm having a moral dilemma...that I think you might be too drunk to help me solve.\" \n\n\"You're welcome my friend.\" He babbles. \n\nI let out an exasperated sigh \"I think I'm gonna head home, I'll see you in the morning.\" \n\n\"Make sure you take Leah with you.\" He winks before pulling me into a hug \"She's well fit!\" \n\n\"I don't think I can Tommy, it's been so long and I just don't fanc-\" \n\n\"Cora listen!\" He slurs \"Leah is hot, you're just nervous because it's been a whole long time since you've seen another naked woman, or woman naked, whatever. Take Leah home and get back in the saddle! You know she likes you.\" \n\nHe pushes me somewhat roughly away and resumes his game. \n\nPerhaps he's right and I'm just nervous? I gave up dating because I didn't feel emotionally stable enough to deal with it but I have been better lately...and it isn't like I'm jumping into a relationship, just sex... \n\nI locate my jacket and head back to the where I last saw Leah, only to find her stood at the front door waiting for me. \n\n\"Leaving without me?\" She pouts. \n\n\"Of course not,\" I answer with a small smile \"I was just coming to find you. Shall we?\" \n\nWe climb into a taxi and Leah sits right next to me, her lips on my neck and her hand on the top of my thigh. I rest my hand on her knee slowly edge it further up her leg. My heart isn't really in it, but I tell myself that maybe I'll get into it if I keep trying. \n\n... \n\nHalf an hour later we're in my bed, our clothes strewn across the floor and our hands all over each other. Despite Leah's best efforts in the taxi I'm still not really feeling into this, my insides are fluttering with nerves and anxiety, there's no excitement. \n\nAs soon as I'm able too I roll Leah onto her back and am thankful she allows me to take control of the situation. I slip my hand between her thighs and push two fingers straight into her, perhaps a little roughly but her loud moans indicate that she likes it. Normally I'd take my time with this but right now all I want to do is sleep. I curl my fingers upwards searching for that magic spot and thankfully find it quickly. Leah's fingernails dig painfully into my back as I pump my fingers in and out of her. \n\n\"Oh, fuck yes!\" She shouts loudly \"I knew you'd be a good fuck Cora!\" \n\nI slide my fingers in and out faster, using my thumb to rub her clit as I take her nipple between my teeth and bite down gently. \n\n\"Harder Cora!\" She shouts again \"That feels so good...fuck me...ah...fuck me harder...\" \n\nI add a third finger and press into her as hard as I can, I feel her fingernails pierce the skin on my back and groan in pain, this seems to turn Leah on more as her legs wrap around my ass and her body starts to shake. \n\nIt only takes a few more seconds for her to cum. \n\nSlowly I pull out of her and lay down on my back beside her, she doesn't try to speak, just lays there with a triumphant grin on her face. I watch her chest rise and fall, her breathing deepening with each breath. \n\n... \n\nThree minutes pass and she's out for the count. \n\nExhausted, I roll onto my side and pull the duvet around me, Leah doesn't stir at the movement and instead starts to snore heavily. \n\nI sigh deeply...my long night doesn't look like it's going to end anytime soon. \n\n... \n\nI wake up late the following morning. I finally managed to drift off at around three am and its now almost midday, much later than I'd normally sleep in at the weekend. I turn over and am disappointed to find that Leah is still here...and still snoring...rolling over fully I note small spots of blood on my sheet from where Leah's fingernails pierced my skin...great, getting that out is going to take some doing... \n\nIt takes a few more minutes before I remember I'm meant to be meeting Madison today...shit! \n\n... \n\n\"She lives!\" Tommy shouts as I enter the front room. \n\n\"Very funny.\" I grumble, running my fingers through my hair and taking in the long, plaited blonde hair of the woman I'm supposed to be trying to encourage to take our spare room. \n\n\"Anyway,\" he continues, \"Mads, this is Cora, Cora this is Madison. Although I guess if you remember each other introductions are pointless...\" \n\nThe woman turns around and I feel my breath catch in my throat, she's absolutely stunning! I can't believe I don't remember her! Her plaited hair hangs casually over her shoulder framing her face and a sweeping fringe covers her brilliant hazel eyes. One glance over the rest of her body is enough to see that she clearly works out, she's muscular without being overly built...definitely my type... \n\n\"Hi,\" she extends her hand and smiles, revealing perfectly straight, white teeth, \"nice to see you again Cora. I like the new hairstyle.\" \n\nI take her hand and instantly note her manicured nails and how soft her skin is. \n\n\"H- hi,\" I cough, wondering how on earth she remembers what my hair looked like last time we met, \"nice to see you again too.\" It's not entirely a lie, it is nice to see her despite not remembering that we've already met \"Sorry I'm not so awake this morning, someone,\" I look pointedly across at Tommy, \"decided that going to a party the night before we met you was a great idea.\" \n\n\"No worries,\" she smiles again...god that smile is amazing... \"did you have a good night?\" \n\n\"One of us did.\" Tommy winks at me. \n\n\"It was ok.\" I scowl at him. \n\nTo further compound my embarrassment, Leah chooses this moment to come into the room wearing an old shirt of mine and not very much else. \n\n\"Morning beautiful.\" She slides her hands around my hips and kisses my cheek \"I had an amazing time last night, we should definitely do this again sometime.\" \n\nI can feel my face burning as she leaves the room. \n\n\"Sounds like it was more than just ok.\" Madison grins. \n\n\"Yeah...\" I look sheepishly at the floor and will my face to return to its normal colour. \n\n\"So,\" Tommy claps his hands together and stands from his chair, \"shall we give you a tour round?\" \n\n\"That'd be great.\" \n\n... \n\nAn hour later we've somehow managed to convince Madison to take the spare room and arranged to help her move her things in the following morning. Leah left soon after the scene in the living room but not before embarrassing me again by sticking her tongue down my throat as a way of saying goodbye. Tommy, of course, found this hilarious, but Madison took it in her stride and barely batted an eye. At least one of them could tell I was mortified! \n\nChapter Three: \n\nMadison Moves in: \n\nMadison arrived bright eyed and bushy tailed the next morning ready to move in. Thankfully I made a better second impression and was up, dressed and eating breakfast as she pulled onto the drive. I dumped my bowl and spoon in the kitchen sink and went out to meet her. \n\n\"Hey Cora.\" She smiles, walking round to the back of her car \"Feeling better this morning?\" \n\n\"Er, yes, thanks.\" I reply. \n\n\"You sure about that?\" She laughs \"You don't sound very convinced.\" \n\n\"It's still early.\" I mumble, wandering down the steps as she lifts the boot lid \"This is all you've got?\" I ask as I take in the sparse number of boxes in the boot of her car. \n\n\"I travel light.\" She smiles, lifting what looks like the heaviest box with ease and turning away from the car. \n\n\"I'll say.\" I return her smile and grab another, thankfully much lighter box to take into the house. \n\n\"Thanks for helping with this Cora, I hope I'm not taking up too much of your time. Tommy said you were studying for a degree?\" The muscles in her forearms flex a little as she adjusts the box to a more comfortable position. \n\n\"Oh, I am,\" I reply, tearing my gaze away, \"but I had my last exam of the year on Friday, just another twelve months to go and then it's all over.\" \n\n\"What's the degree in?\" She asks as we head up the stairs to her room. \n\n\"Psychology,\" I grin, \"the human brain fascinates me.\" ",
        "\"Sounds interesting. If you ever figure out how the male brain works please let me know.\" \n\n\"The male brain isn't really my main area of interest.\" I reply \"Sorry about that.\" \n\n\"No worries,\" she smiles, \"maybe I should let you tell me about the female brain instead?\" \n\n\"I don't really know much about that either, I'm mainly interested in the thought processes behind every day thinking ...\" \n\nI look across at Madison to find she's trying hard to contain herself...it takes a further few long seconds before I realise I've completely missed the joke... \n\n\"It's ok.\" Madison laughs as I go bright red \"It was a terrible attempt at humour.\" \n\n\"No,\" I stammer, \"it was a good joke, I'm just not with it yet today...\" \n\n\"Are you ok Cora? Tommy said you were going through a bit of a tough time and you might be different to how I remembered you, I'm sorry if I've upset you.\" She looks across me, genuinely concerned. \n\n\"You remember me?\" I ask. Why on earth would this goddess of a woman remember me... \n\n\"Of course.\" She smiles. \n\n\"Oh...\" I look down at the floor. \n\n\"Is that not ok?\" She asks. \n\n\"It is bu-\" I start as her phone rings. \n\n\"Shit!\" She curses, looking down at the screen \"I've got to take this, we'll talk in a bit ok?\" \n\n\"Ok.\" I reply quietly. \n\n... \n\nI was laid on my bed that afternoon hugging my pillow while reliving my painful and embarrassing conversation with Madison, when a familiar voice filtered up from downstairs. \n\n\"Cora!\" \n\nI stick my head over the bannister and a huge smile erupts on my face as I confirm that it is actually Tommy's girlfriend Natalie who's shouting me. \n\n\"Natalie!\" I shout back, jogging down the stairs and jumping into her open arms to get my customary bear hug. \n\n\"I missed you so much!\" She exclaims, pulling me in tight and kissing my cheek \"How did your exam go?\" \n\n\"I missed you too,\" I breathe, \"how was your trip? My exam was fine thanks.\" \n\n\"It wa-\" \n\n\"I always knew I'd come home one day and find you two together.\" Tommy yells in mock annoyance as he walks through the door with Madison. \n\n\"He says, whilst walking through the door with a gorgeous blonde woman I don't know.\" She laughs, brushing her long red hair out of her eyes and kissing my forehead for effect. \n\n\"Oh shit, sorry babe. This is Madison, my friend from Uni and the answer to our roommate problem. Madison, this is my girl Natalie.\" \n\n\"Hi Madison.\" She smiles, giving me one last squeeze \"I hope you know what you're in for, taking care of these two.\" \n\n\"It's been ok so far.\" Madison smiles back \"I don't think I've upset the boat too much in the eight hours since I moved in.\" She looks cautiously over at me. \n\n\"You haven't.\" I say to the floor as I wonder exactly how much Tommy's told her about my situation at the moment. \n\n\"Give it a few days and you'll be tearing your hair out.\" Natalie laughs, her deep brown eyes sparkling. \n\nI envy Natalie so much sometimes, she's so free and easy around new people while I'm an uptight, nervous wreck. \n\n\"We're not that bad.\" Tommy interjects. \n\n\"That's what you think.\" Natalie smiles, unwrapping her arms from around me and planting a kiss on Tommy \"Hi baby. What're we doing for dinner?\" \n\n\"You fancy going out?\" He asks us all \"Give us a chance to bond and all that crap.\" \n\n\"That'd be great.\" She kisses him again. \n\n\"We should ask Leah to come too...don't you think Cora?\" \n\nI could've died on the spot. \n\nNatalie whips her head around so fast we hear her neck crick. \n\n\"What?!\" She gasps in shock, rubbing her neck. \n\n\"I'll tell you later.\" I mumble, deliberately avoiding her eyes. \n\n\"I'll text her and let her know where to meet us then.\" Tommy continues, using my lack of an answer as a yes and pulling out his phone, once again completely oblivious to the situation around him. \n\nNatalie rounds on him a fraction of a second later shooting daggers. I use this as an out and escape back upstairs, followed closely by Madison. \n\n\"She really doesn't like Leah then?\" Madison asks, following me into my room. \n\n\"Doesn't like is a mild understatement.\" I laugh \"She can't stand her...and Nats loves everyone.\" \n\n\"Do you like her? Leah, that is.\" She leans against the doorframe. \n\n\"Ermmm...\" I think \"I mean, I don't really know her that well, but I guess she's attractive and she likes me so...\" \n\nThe corners of her mouth twitch slightly \"So that's enough for you?\" \n\n\"I don't know,\" I shrug, \"I haven't really dated for a while. Maybe someone who I know is definitely interested is a good place to start?\" \n\nShe shakes her head and stands up straight again. \n\n\"I'm sure if women knew you were available they'd be queueing round the block to get a date with you...and you never know, you might actually like one of them.\" \n\n\"Maybe...\" \n\n\"Trust me,\" she smiles, \"you're gorgeous Cora. Inside and out if I remember rightly. You could have whoever you wanted...\" \n\n... \n\nDinner was awful. \n\nLeah met us at the restaurant and continued her customary tradition of shoving her tongue down my throat which had me instantly embarrassed and Natalie instantly annoyed. One look was all it took for me to know I was in for a serious talk with her as soon as we got home. \n\nWe got through the main course in virtual silence, every time anyone asked Madison a question Leah would talk over her and try to block her from the conversation, it got so awkward that silence was the best solution. \n\nA little later on, Madison braved speaking again invited me to join her for a climbing session next time she went, I thought it sounded interesting and agreed to go...Leah on the other hand, saw red and stormed off outside to 'make a call'...I think I was supposed to follow her and reassure her that despite us only spending one night together, she was my one and only, but to be honest, I was just happy for the break. The atmosphere was so tense you could have cut the air with a knife, and even though I hadn't invited her, I felt like the whole situation Leah had caused was my fault. \n\nThe evening was rounded off nicely by her leaving just before we did, skipping out on her share of the bill. \n\n... \n\nThings didn't improve when we got home, Madison went straight upstairs to her room while Natalie cornered Tommy and myself in the kitchen. After I'd explained exactly how I'd ended up bringing Leah back on Friday night Natalie rounded on Tommy and gave him a verbal bollocking that you could've heard at the other end of the country, meaning that all of us went to bed not speaking to one another. \n\nI knew they'd both acted with my best interests at heart, but I fell asleep wishing that they'd all just let me suffer alone in my bubble until I figured things out. I hated that I'd caused so much trouble. \n\n... \n\nSession: \n\n\"How've you been since our last session?\" Jayne asks, crossing her legs and adjusting her notepad on her knee. \n\n\"Erm, ok I guess. We've got a new housemate...and we nearly had World War Three the first night after she moved in.\" \n\n\"Are the two things related?\" \n\n\"Um, no...not really.\" \n\n\"Ok, well why don't we start with World War Three and end with a hopefully more positive story?\" \n\nI sigh and take a deep breath. \n\n\"I know it's hard Cora,\" she smiles knowingly, \"but I can't help you if you don't speak.\" \n\nI look down at my hands and twiddle my thumbs, weighing up my options. \n\n\"I need you to be honest too Cora,\" she continues, as though she can read my mind, \"I don't care if you get upset and we have to use a whole box of tissues to get through it. Omitting details will only lead to bigger issues building up.\" \n\nI look back up at her and she raises an eyebrow. \n\n\"Ready?\" \n\nI nod slowly. \n\n... \n\nFifteen fraught minutes later I've told Jayne everything...about the party...Leah...dinner...Leah...and the after-dinner showdown when we got home...that also concerned Leah. \n\n\"Wow.\" She leans back in her chair and cups her head in her hands. \n\n\"Now you see why I'm not sociable.\" I joke \"Things go tits-up when I leave the house.\" \n\n\"How did you feel, about going out and then spending the night with Leah?\" She asks, tilting her head slightly. \n\n\"Erm...\" I hesitate as I try to find the right words to explain \"well, at first I felt nervous and awkward about going out, and even though I know Leo really well it was hard to relax. Hence why I decided that drink was a good idea...and why I ended up with Leah.\" \n\n\"What about your night with Leah, how did that make you feel?\" \n\n\"It didn't really,\" I frown, \"it's like, I was there but I wasn't at the same time. I didn't really enjoy the experience. I just did what I needed to do for it to be over.\" \n\n\"Do you think that's healthy?\" \n\n\"Definitely not.\" I reply quickly, trying to find the words she wants to hear before she asks me any further questions on the topic \"But there's only me that can get myself out of it and fix the situation...and I need to tell Tommy to back off.\" \n\nShe smiles \"And what is it important to remember?\" \n\n\"To give myself a break...and that change doesn't happen overnight.\" \n\n\"Good.\" Her grin widens and she leans forward in her chair again \"Now, let's move on to more positive conversation. How's Madison working out as a new housemate, is she fitting in well with the three of you?\" \n\n\"Well, she's a friend of Tommy's from University and I think they've lived together before, so he's fine, then Natalie gets on with everyone so she's fine too.\" \n\n\"And what about you?\" She presses \"How're you finding having someone new in your home?\" \n\n\"It's fine,\" I shrug, \"I keep myself to myself and we work different hours so there's never a clash for the bathroom. I can't say I've really noticed her being there to be honest.\" \n\n\"So basically, everyone's fine and you've not spoken to her at all?\" Jayne laughs, bringing a smile to my face \"Things get easier the more you do them Cora.\" \n\n\"I know,\" I sigh, \"but I spoke to her briefly when she moved in, helped her move some boxes. It wasn't as traumatic as expected.\" \n\n\"Has she tried to speak to you at all?\" She asks. \n\n\"Um, yeah we chatted a bit while I helped her move things and then a bit more at dinner. She asked about my degree stuff and offered to take me climbing with her next time she goes.\" \n\n\"That sounds good,\" Jayne smiles, \"it sounds as though she wants to get to know you. \n\nI shrug and look away. \n\n\"What does that shrug mean, what're you thinking?\" \n\n\"That she's just making an effort because she's friends with Tommy, she doesn't really want to know me.\" I reply after a breath. \n\n\"Why wouldn't she want to know you?\" She answers quickly. \n\n\"Because I'm really boring and she's this gorgeous, super fit, action woman who probably doesn't need any extra friends...let alone boring, depressed, sad, lonely ones.\" \n\n\"And how do you know this?\" Jayne asks kindly. \n\n\"Because I-\" I stop abruptly as I realise what it is she's driving at and look up to see her smiling at me \"I don't.\" I concede. \n\n\"Exactly,\" her smile widens, \"it sounds to me like Madison has plenty of friends and an active social life. If she didn't want to know you, she wouldn't make any effort to try.\" \n\nA grin spreads across my face. \n\n\"She does seem to remember me from when we met years ago...\" I muse. \n\n\"I keep telling you that you're worth knowing Cora, I certainly like to see you every week. There's absolutely no reason why Madison wouldn't feel the same way.\" \n\nI look away in embarrassment but the grin remains etched on my lips. \n\n\"So, there's your homework for the week.\" She concludes \"Practise letting people get to know you a little bit more, think about how you're going to deal with the Leah situation and then next week you can tell me all about it.\" \n\nChapter Four: \n\nCan we call this Progress? \n\nFollowing Jayne's advice, I made much more of an effort to let people in, not just over the week between that initial session and the next, but over the next few months as well. And not just with Madison, with everyone else too. It was almost impossible at first, but gradually I managed to speak more and more and volunteered information about myself without other people needing to prize it out of me. It had definitely made life at home better, Natalie and Tommy had known me long enough that they knew what I was like, but for Madison I must have seemed like a completely different person to the one she met back in June. \n\nFor the first time in years I actually enjoyed Christmas. Normally the thought of so much social activity filled me with nothing but anxiety and I spent a considerable amount of time wishing the whole festive period away. But this year it was just...well...fun. Our 'Housemates Only' Christmas party was great and really set the whole holiday up, it was nice for there to be four of us. Madison had slotted in perfectly with us and it was a welcome change to have someone on my team while playing games and someone to sit up with once Natalie and Tommy went to bed. My family even commented on how much better I seemed during the few days I spent with them. \n\nThe only problem was Leah. \n\nI had tried for a while to give her the benefit of the doubt and to open up around her...much to Natalie's disgust...and had even ventured as far as telling her about my counselling sessions, but she just wasn't interested. She only showed an interest when Madison was around. \n\nJayne was also surprised by my continued relationship with Leah, she was a frequent topic of conversation during our sessions and had yet to be a positive subject. I think personally she agreed with Natalie and felt that I should end things with her, but due to the nature of our relationship she was professionally unable to give her true opinion. \n\nI hadn't seen Leah over Christmas, but had given her her gift just after. She hadn't got me a present and again failed to give me anything during the sex afterwards, instead she had let me get her off and then spent the next half hour roundly abusing the thoughtful book Madison had bought me. I saw red at that point and for the first time in six months bit back. It didn't go down well to say the least. I left the house to a torrent of verbal abuse, which ended in her telling me she wished I was dead, and then spent the evening in Natalie's arms while she calmed me down and wiped the angry tears from my face. \n\n... \n\nOn the Monday after the argument with Leah, I walked in after a long, boring day at work to find Tommy, Leo, Leah and Madison sat at our kitchen table passing a bottle of whiskey between themselves. \n\n\"Cora!\" Tommy shouts gleefully, that boyish smile plastered on his face once again \"Come drink with us!\" \n\n\"No than-\" I start, glaring at Tommy over the top of Leah's head. What the fuck is she doing here! \n\n\"Please Cora. You look like you could use one.\" Madison adds, tilting her head in silent understanding. \n\nI begrudgingly sit down in the empty seat between Leah and Leo and Tommy hands me the bottle, instructing me to take a big swig. Unfortunately, Leah chooses this moment to squeeze my knee causing me to choke on the already burning liquid. \n\n\"Steady on!\" Leo shouts, grabbing the bottle from me. \n\n\"So- sorry.\" I cough shooting Leah a confused look. She wished me dead not seven days ago and now she wants to be friends again? What the fuck?! \n\n\"Where's Natalie?\" I ask Tommy. \n\n\"Out for dinner with a friend, she'll be back later, don't panic.\" \n\n\"Jesus, it's nothing to worry about,\" Leah sneers, \"she's got a life away from you you know.\" \n\nI don't acknowledge her comment, I know she's trying to get me to bite again. But her words stir some dark feelings within me that I thought I was finally making some progress in getting over... \n\n... \n\nAn hour later the first bottle of whiskey is gone and a second one appears from nowhere. I can already feel myself buzzing from the first bottle and take this as my cue to leave. I try to stand from the table but am quickly intercepted by Leah. \n\n\"No you don't.\" She laughs darkly \"We're playing spin the bottle!\" \n\n\"Spin the bottle?\" I raise an eyebrow \"What are we, escapees from a classic teen movie?\" \n\n\"Don't be such a spoilsport!\" She scolds, frowning like a spoilt child \"Ok everyone! No kissing with tongue for those of us that are attached...otherwise, anything goes.\" \n\n\"Won't this be the most pointless game ever though?\" Madison asks \"You know, since most of us...\" she glares pointedly at Leah \"are actually attached.\" \n\n\"Make no wonder you're single with an attitude like that!\" She snaps back coolly. \n\n\"Ok, ok guys.\" Leo intervenes \"Let's just play, ok?\" \n\nSatisfied that she'd won that round and sufficiently upset Madison, and with those as the only two rules, Leah took the bottle and started us off, promptly leaning across me to plant a kiss that clearly involved her tongue on Leo after her first spin. I didn't even bother acknowledging her, I knew it was yet another ploy to get me to bite, but I was far more concerned with trying to figure out why I was willing to put up with this shit... \n\nTime seemed to stop as we played, I'm not sure if the others felt the same way I did or not, but I couldn't wait to get out of there. I gave it another half hour before deciding that enough was enough and was half way out of my chair before I realised that Madison was staring intently at me. \n\n\"What?\" I look around at everyone. \n\n\"You need to give me a kiss Cora.\" She whispers, her eyes blazing into mine. \n\nWe might've been playing for a while but this is the first time she or I had spun each other. \n\n\"Guys, I'm really tired. I just want to go to bed.\" I try. \n\n\"One more kiss Cora, then you can go to bed,\" Leo grins, \"Mads' been waiting for this all night.\" He winks at her causing her to blush...and Leah's face to drop. \n\n\"Ok fine.\" I sigh, desperate to get out of this situation...and to save Madison any further embarrassment. \n\nI walk around the table and lean down to kiss her. She closes her eyes and I close the distance between us, pecking her lips lightly. I pull away quickly and notice that her eyes are still closed... \n\n\"Wow Cora,\" Leo laughs, \"I've seen people give their grandmas more passionate kisses.\" \n\nI look back down at Madison to see she's even more embarrassed...and visibly hurt...which is the last thing I wanted. \n\nCursing silently, I lick my lips nervously, thankful that they aren't as chapped and sore as they once were. My eyes flick across the table at Leah and I suddenly feel a bit rebellious, if she can break her own rules, why can't I? I turn back to Madison and cup her face in my hands. Leaning in slowly I lightly press my lips to hers once more and feel her mouth move against mine. I use the tip of my tongue to gently part her lips and she moans softly, her tongue reaches out to meet mine and I get a slight taste of whiskey as her arms wrap around my neck. \n\nMadison's grip intensifies around my neck and my fingers slide unconsciously into her silky blonde locks, it feels as though the rest of the world slips away as we continue our kiss...that is until the sound of an angry cough from the other side of the table meets our ears. \n\nI pull abruptly away from Madison and glance across the table to see Leah's face has gone from annoyed, to absolutely fuming, while Leo and Tommy sport identical huge, gleeful yet surprised grins. \n\nWhat the hell was I thinking?! Excusing myself quickly I head upstairs without speaking to anyone and lock myself in my room, the last thing I need right now is another slanging match with Leah or to sit around the table with those two idiots grinning at me. \n\n... \n\nI spend the majority of the rest of the week hiding from the world. Staying in my office at work with the door closed, ignoring calls and texts from everyone, leaving only to go to the toilet and to pick up lunch. The situation barely changes when I return home at night, I get back before the others so I shower and eat before they arrive home, then head to my room. ",
        "I know it's not good for me to spend so much time alone, I know Jayne would be far from impressed if she knew I was cutting myself off again (I conveniently forgot to mention it in our session that week) but the embarrassment and anxiety from that stupid game of spin the chuffing bottle was still playing on my mind. I knew I'd have messages from Leah, which was part of the reason I'd more or less abandoned my phone, I just didn't feel that I could cope with her right now...and I also didn't feel that I could cope with Tommy and Leo grinning at me. \n\n... \n\nI slope through the door at home on Friday and slink down the hall to the kitchen with the intention of repeating my routine and grabbing some food before retiring to the comfort of my room...only to be met by Madison coming the other way. \n\n\"Hi Cora,\" she smiles sheepishly, \"you ok?\" \n\n\"Um, yeah...\" I reply quietly. \n\n\"I've hardly seen you since Monday night, busy week?\" \n\n\"Kind of, I've had a steady stream of stuff to do.\" I shuffle my feet awkwardly and try not to stare too hard at her legs in her running shorts. \n\n\"Ok...\" She looks up at me and pauses briefly before the words just start flowing out of her \"Are you sure things are ok Cora? You haven't answered my texts and you're avoiding us all. Please don't tell me you're still embarrassed about that kiss, it was just a game...a great kiss...but just a game...and Leah can go fuck herself if she's said anything horrible to you! An-\" \n\nShe stops suddenly and looks at me. At the mention of Leah I felt myself recoil and clearly she's seen it too. \n\n\"Am I right on the money?\" She asks. \n\nI nod. \n\nShe steps closer to me and wraps her arms around me. Her embrace is surprisingly soft; with all the exercise she does and the whole army thing, I was expecting it to be a bit rougher around the edges. \n\n\"You're right about everything.\" I mumble \"Well, maybe not Leah, I haven't looked at any of my messages but I can almost guarantee there'll be something in there from her.\" \n\n\"You want me to look through them with you?\" She pulls away slightly to look at me. \n\nI shake my head \"Thanks, but I can handle it. I think actually it might be time to grow a pair and tell her to fuck off.\" \n\n\"That- that sounds like a really sensible idea.\" She manages, a puzzling look appearing on her face \"You need me though; you know where I am.\" \n\nI nod and give her a small smile which she returns as she plants a kiss on my cheek before heading off upstairs leaving me to continue getting some dinner sorted. \n\n... \n\nTwenty minutes later I find myself sat in the kitchen finishing off my dinner while reliving my conversation with Madison, how is it that she's known me for like six months and she knows me so well? One of my issues is not letting people get close, what makes her so special that she can read me like a book? \n\nA knock on the front door draws me out of my trance and I wander down the hall to see who it is. Opening it I'm met by a tall, dark haired, muscular guy wearing joggers and a hoodie. \n\n\"Hi, Mads around?\" His voice is gruff and strained, as though he's spent a lot of time screaming at someone recently. \n\n\"She might be,\" I reply, taking an instant dislike to him \"depends on who you are?\" \n\n\"It's alright Cora,\" Madison interjects, coming halfway down the stairs, \"this is Jason.\" \n\n\"Your ex?\" I ask. \n\n\"Her current boyfriend.\" Jason grins at me, pushing his way past and meeting Madison on the stairs for a kiss \"isn't that right babe?\" \n\n\"Um, yeah.\" Madison replies, clearly embarrassed. \n\nHe drags her up the stairs towards her room leaving me standing alone next to the open front door. \n\nI pause for a bewildered few seconds before hearing more footsteps coming up the drive. \n\n\"Why thank you kind sir.\" Tommy bows to me as he walks in. \n\n\"What's wrong with you?\" Natalie asks, following him in. \n\n\"I just met Jason.\" I explain as music starts to blare out from upstairs. \n\n\"Want a drink?\" \n\n\"I think I need one.\" I nod. \n\n... \n\nOnce in the kitchen Natalie rounds on me almost immediately. \n\n\"So,\" she starts, taking me by surprise, \"Jason, what do you think?\" \n\n\"Not a lot to be honest, although the conversation was brie-\" \n\n\"Brief is long enough.\" She interrupts \"Now, what's your plan?\" \n\n\"My- my plan?\" \n\n\"To break them up.\" She raises her eyebrows at me as though there's something I'm seriously missing. \n\n\"Natalie,\" I say calmly, putting my hands on her shoulders, \"I've got no idea what you're talking about. Why would I have a plan to break them up?\" \n\n\"Now I'm confused...Maddie said you guys kissed?\" \n\n\"During a drunken game of spin the bottle we did,\" I laugh, \"it was nothing serious.\" \n\n\"Spin the bottle?\" She asks \"Which classic teen movie did you escape from?\" \n\n\"That's exactly what I said.\" I laugh even harder. \n\n\"Well, Maddie certainly described it as more than a drunken kiss.\" \n\nThat sobers me up instantly. \n\n\"She told you about it?\" I hiss. \n\n\"More like described it in loving detail actually.\" A smirk appears on her face \"You certainly made an impression.\" \n\nI can feel my face colouring and my cheeks starting to burn. \n\n\"Why do you think she called that dickhead and got back together with him?\" \n\n\"Because she's realised I'm not as good at kissing as she thought?\" I ask. \n\n\"For someone who's doing a psychology degree you're pretty fucking dense Cora.\" She laughs, clearly enjoying my embarrassment \"Don't worry, it'll all make sense when you're older.\" She pinches my cheek and turns to the kettle to start making drinks. \n\n\"Or maybe she just wanted to get back with him because she misses him?\" \n\nShe gives me a WTF kind of look. \n\n\"Ok, so maybe not for that reason...perhaps she's just lonely...or after an easy lay.\" I shrug. \n\n\"Now that sounds familiar.\" She sticks her tongue out at me. \n\n\"Leah is a completely different situation!\" I reply crossly \"I had no intention of going there in the first place. It was Tommy and alcohol that caused this mess.\" \n\n\"And a little bit of you dropping your knickers...right?\" \n\n\"Actually, it's kind of just been her dropping her knickers...\" I say without thinking. \n\n\"What?!\" She spins round so fast her hair whips me across the face \"I knew it'd be a one-sided affair!\" \n\n\"It is what it is,\" I shrug again, rubbing my cheek, \"I'm trying to get out of it. I've just not got as far as how yet...\" \n\nShe sighs deeply. \n\n\"It may surprise you to hear this Cora, but you are actually a really good catch. There's a reason she's clinging on to you...and it's not just because she likes letting you get her off.\" \n\n\"Thanks Nat.\" I give her a hug. \n\n\"Group hug is it?\" Tommy's voice barely has chance to reach my ears before I feel him jump on my back and wrap his arms around both me and his girlfriend. \n\n\"Ouch! Get off Tommy, you idiot!\" Natalie shouts. \n\n... \n\nTen minutes later we're in the front room trying to watch tv and catch up, it feels like ages since we've all just sat and talked. This proves difficult however as our voices are drowned out by the increasing volume coming from upstairs. \n\n\"Do you think they'll ever stop?\" I ask, the noise starting to get to me. \n\n\"Sounds like they're having a hell of a reunion.\" Tommy winks at me before Natalie slaps him playfully on the arm. \n\n\"They'll be done soon if Mads knows Jason.\" She laughs. \n\n\"How do you know?\" Tommy asks intrigued. \n\n\"Girls talk Tommy. You should know that by now.\" She kisses his cheek. \n\n\"How much longer is soon?\" I shout. \n\nShe glances at the clock \"He arrived just before we did?\" I nod \"Then...another five minutes...at best.\" \n\nAfter that we sit in silence and literally watch the clock, all of us now genuinely interested in the outcome. \n\nThe noise lasts another three minutes and fifteen seconds before the music stops and Jason comes bouncing downstairs pulling his shirt back on. \n\n\"Later guys!\" He shouts, not even remotely concerned by the fact that the three of us are all staring intently at him from our various positions around the room. \n\nI turn back to the others and both Natalie and I start to laugh uncontrollably. Tommy on the other hand looks deep in thought, his baby blue eyes full of concern. \n\n\"What's the matter sweetheart?\" Natalie asks wiping tears from her eyes. \n\n\"D- do you talk about how long we...you know...go for?\" \n\n\"What do you mean?\" \n\n\"Like Jason, we all know now that he lasts twenty-five minutes. Do you tell people stuff like that?\" \n\n\"Of course not honey!\" She replies, trying desperately to keep a straight face \"Once you get to below four minutes it's not even funny anymore, people just feel sorry for you.\" \n\nUnable to keep a smile off my face any longer I let out a snort of laughter which is followed by even more uncontrollable giggling from Natalie. Tommy, on the other hand, finds this far from amusing and storms out in a huff. \n\n... \n\nBy the time I head to bed that night I'm feeling better than I have all week, I almost feel happy and secure again, so happy and secure in fact, that I decide to check through the messages I haven't picked up all week...which is of course when it all comes crashing down around me. \n\nI had a few messages from work colleagues about going for drinks...missed those...ah well...a couple of texts from Natalie...several texts from Tommy, which all turned out to be about my kiss with Madison and how hot it was...then came the messages from Leah... \n\nTuesday and Wednesday's messages started off with warnings and abusive language, don't dare kiss that fucking skank bitch again, that sort of thing. By the early hours of Thursday morning they had progressed to insults about my family and friends...with the language decreasing further...Thursday night and the messages from today however, were a whole different ball game. The language was disgusting, the insults had become personal and centred a lot around my depression and anxiety...with the worst of them being that I was a waste of life and I should end it all before I dragged everyone I cared about down with me. \n\nThe positive mood I had been in left me as soon as I read those messages, I knew I should just ignore her, that she wasn't worth bothering over, but in my fragile emotional state the words hit me like a brick and I quickly crumbled into an irrational, crying, shaking mess. \n\n... \n\nI barely slept that night, tossing and turning until it was light enough to justify going for a walk. I thought a lot about my current situation as I walked, the progress I was making with counselling, how amazing Christmas had been and how I was slowly getting myself back on track. I resolved to try and ignore the messages that Leah had sent and made myself promise to call her when I got home to end things officially. I knew she was a nasty, insensitive piece of work...and deep down I had always known it would end in tears...this didn't really cheer me up too much though, if I'd known that why had I been stupid enough to get myself involved in the first place? Was I really that desperate to have someone that I was prepared to walk on eggshells all the time and put up with being spoken to the way I had been? \n\nJayne was always telling me I had to treat myself like I would a friend. Would I encourage a mate stay in a relationship like this? The answer was clearly no. Leah brought nothing into my life that made it better, she didn't really even have any redeeming qualities, other than that she was hot, in the conventional sense of the word. \n\nThe thought of being alone again was far from a pleasant one, but enough was enough, if I'd encourage a friend to get out than I'd be a hypocrite to ignore my own advice! \n\n... \n\nI cried all the way home after that. I tried to tell myself that it was just relief that I'd finally figured out my next move, but I knew I was really just terrified of being alone again. \n\nI stuck to my guns though. As soon as I walked through the door I called Leah and told her it was over. She screamed and yelled and told me I should drop dead, just as she had done as I'd left on the day I gave her her Christmas present, but this time I was stronger, I held my nerve and didn't break my resolve. \n\nAfter the phone call I was a wreck, I needed a stiff drink to try and calm my nerves, I didn't care that it was only 9:30am. I grabbed a drink and the box of tissues before plopping myself down on the sofa and proceeding to cry my eyes out. \n\n... \n\n\"Cora honey, what's the matter?!\" Nat shouts as she enters the room an hour later, quickly sitting down beside me on the sofa. \n\n\"Do you think I'm a waste of life?\" I whisper quietly, tears dripping down my cheeks. \n\n\"Of course I don't think you're a waste of life! Come here. Where on earth have you got that from?\" She replies and pulls me firmly into her chest \n\n\"Leah...\" I cough. \n\n\"Oh sweetie,\" she looks down at me, her eyes full of warmth and comfort, \"anything that bitch has to say you can ignore. I've hated her from the start, I could never understand why Tommy always tried to push you to be together! I hope you told her to piss off!\" \n\n\"I did, she got angry and started screaming abuse at me...and normally I wouldn't care, but you know when everything else is just so-\" \n\n\"Hey,\" she interrupts firmly, \"you've worked so hard to get yourself away from feeling like this, don't let Leah ruin it all for you!\" \n\nThe door to the front room opens and Madison walks into the room nursing her right hand. \n\n\"What happened to you?\" Nat asks incredulously. \n\n\"I met Leah as I was leaving the gym...\" she replies darkly heading through to the kitchen. \n\n\"And?\" Nat shouts after her. \n\n\"And...\" Madison continues, re-entering the room with a bag of frozen peas on her hand \"she insulted one of my closest friends...so I socked her one.\" \n\n\"Wow.\" Natalie laughs \"You see Cora, people don't just sock other people on the street for people that're a waste of life!\" \n\n\"She called you a waste of life?!\" Madison yells \"Hold this,\" she throws the peas to me, \"I'm gonna go find her and sock her again!\" \n\n\"That's ok,\" I smile, climbing off the sofa and wrapping my arms around her, \"once was great, thanks Madison.\" I kiss her cheek and hand her the peas back. \n\n... \n\nThe rest of the day was spent drinking and roundly abusing Leah, Natalie bought us a takeaway dinner and I fell happily asleep on the sofa with my best friends either side of me. \n\nI knew the feeling wouldn't last and I'd probably wake up feeling down...again...but nothing could've prepared me for just how much things would slide over the coming few days. \n\nChapter Five: \n\nThe Last Few Steps to the Bottom: \n\nNatalie, Tommy and Madison spent Sunday packing. By unfortunate coincidence all three of them were going away at the same time...as were my parents and Jayne ... \n\nMadison was off on a climbing trip with some friends, while Natalie and Tommy were going on holiday for their anniversary...meaning I would be left alone. \n\nThe thought of being alone in itself wasn't what was bothering me, it was the emotions that came with it that had me worried. I was already fragile and prone to tears, ten days by myself was the last thing I needed, I thought that perhaps I should talk about my worries...but after seeing how excited the others were about their various trips I was determined to stick it out and take care of myself, I didn't want them worrying about me... \n\n... \n\nMadison left in the early hours of the morning, she didn't make much noise but I was already awake, tossing and turning, trying to get my brain to switch off. \n\nTwo hours later Natalie and Tommy were also ready to go. \n\n\"You sure you'll be ok?\" Natalie asks. \n\n\"I'll be fine, I promise.\" I give her a smile. \n\n\"You look shattered.\" Her expression becomes concerned. \n\n\"I didn't sleep well last night; I might go back to bed for a bit.\" \n\n\"That sounds like a good idea, are you seeing Jayne while we're away?\" \n\nI shake my head \"No, she's on holiday too so I'm not seeing her for another three weeks.\" \n\n\"Ok,\" she nods, \"well, enjoy the peace and quiet while we're away and we'll see you in ten days.\" \n\n\"Have a great time.\" \n\n\"We will, thanks pal.\" Tommy gives me one last hug and climbs in the taxi \"Bye Cora!\" \n\n\"Bye.\" \n\n\"See you soon.\" Nat smiles, giving me yet another hug and planting a kiss on my forehead. \n\nI watch from the side of the road as the taxi pulls away, a strange sensation starting in my chest as my insides begin to feel tight. I know I'm perfectly capable of surviving for a week and a half by myself but the way I've been feeling the last few days means I also know this is likely going to feel like a lot longer. \n\n... \n\nTen days later. \n\nThings have spiralled quickly from ok, to really not ok. \n\nI tried so hard to keep on top of things, to make sure I ate properly, had some social interaction, got out of the house for a quick walk after work and went to bed on time. I managed it for a couple of days, but after receiving more abusive messages from Leah my resolve quickly crumbled. \n\nI suffered three horrendous panic attacks on consecutive nights meaning that I didn't manage to drift off until the early hours and spent most of that time tossing and turning. This in turn meant that I was late for work, which lead to me feeling guilty, hopeless and as though I'd let everyone down. I was exhausted, mentally and physically drained and starting to feel like I was drowning in negative thoughts again. \n\nBy the time I reached Sunday night I was a real mess, I couldn't sleep in my room anymore, it felt like the walls were closing in on me. I was hardly eating, I could feel myself getting thinner with each day that passed, leaving the house was next to impossible and I was almost constantly in tears. \n\nI struggled through Monday at work but called in sick after that. Luckily I had followed Jayne's advice and been honest about my situation at work, my boss had been great about everything and was more than happy to let me take some time off to get myself sorted. \n\n... \n\nWednesday morning. \n\nI look across at the clock to see it reads half past eight. Sitting up on the sofa I take a deep breath and assess the state of the room...it's not good...I've been using it as a base since sleeping in my room has become such a struggle, but keeping it tidy hasn't been really high on my list of priorities. \n\nI slide off the sofa and head for the bathroom, taking a deep breath I splash some cold water on my face and start the process of tidying up. \n\n... \n\nBy the time Nat and Tommy arrive back at three that afternoon, the house is spotless and the constant activity has helped me to switch off my brain, meaning that I'm feeling a little bit better. \n\n... \n\nThe front door opens and Natalie bursts through it. \n\n\"Cora?!\" She shouts. \n\n\"Hey guys.\" I call, walking downstairs to meet them. \n\n\"Why aren't you at work?\" Tommy asks incredulously. \n\n\"Nice to see you too.\" I snap. \n\n\"Things aren't good again, are they?\" Nat asks sympathetically. \n\nI shake my head and she pulls me into a tight hug. \n\n\"You feel so thin!\" She exclaims \"Have you eaten nothing while we've been away?!\" \n\n\"I- I tried...\" I stammer as the tears start \"bu- but it got s- so hard and th- then-\" \n\n\"Ok, ok, here's what we'll do,\" she smiles, \"we'll get a cup of tea, unpack, get some shopping and then you're gonna sit and tell us all about it. Sound good?\" \n\nI nod my head as best I can against her, she has no idea just how good that actually sounds. \n\n... \n\nSix pm. \n\nNatalie was still at the shop and Tommy had some errands he needed to do before going back to work, meaning that once again, I was alone. \n\nI flick the tv off and look around the dark room, from nowhere a sudden rush of emotion hits me like a brick and I feel myself starting to panic. Natalie and Tommy will be back soon I tell myself, they don't need to see me in this state. In a desperate attempt to combat the feeling of my chest compressing as despair starts to seep through my core, I switch on the lamp next to me and try to get my breathing to steady. ",
        "I jump up from the sofa and begin pacing the room, repeatedly counting to thirty and back down to one as I walk...it isn't working...my chest won't loosen up...I feel the pins and needles starting in my fingertips...tears start to form in my eyes... \n\nI abandon my pacing on sit hugging my knees on the floor under the window, the cool breeze tickling my cheeks as tears start to drip down them. I might be crying again but at least some of the feelings are coming out. \n\n... \n\nI don't know how long I've been sitting there but the sound of the front door closing and a heavy object hitting the floor draws me out of my revere. A pair of strong hands grip my arms and I find myself being pulled to my feet and into a welcoming embrace. \n\n\"Come here sweetheart.\" I breathe in deeply as the tears strengthen again \"Sshhhh, it's ok, I've got you.\" \n\nMy arms tighten around the warm, soft yet toned body I'm holding without me even bothering to take in who it is, one hand presses against my small of my back while another comes the back of my head and strokes my hair comfortingly. \n\n\"Sshhhh, just breathe, that's it.\" \n\nThe smell of women's perfume starts to seep into my nostrils as the tears slowly begin to stop, I take another deep breath and redouble my grip on the woman holding me, my fingers delving into damp material of her jacket. \n\nThe fingers running through my hair pause slightly at this and a pair of lips press gently against my forehead. \n\n\"Are you feeling better?\" \n\nI freeze as the sudden realisation of who I'm holding onto so tightly becomes clear. \n\n\"Cora?\" Madison pulls away and looks down at me \"Are you ok?\" \n\n\"I...erm...I-\" \n\nThe front door opens again and Tommy walks in shaking the rain out of his hair. \n\n\"Hey guys, everything ok?\" He asks. \n\n\"I think Cora could do with some love.\" Madison smiles, gently extracting herself from my grip and allowing Tommy to take over. \n\nNo sooner have Madison's arms left my body than Tommy takes over, I catch a brief glimpse of her face as he pulls me in, if I'd blinked I would've missed it, but I swear her expression was momentarily pained as she watched Tommy hug me...as though she felt aggrieved to see someone else in his arms... \n\n\"I'm gonna go get us some dinner,\" she says quietly, \"I'm feeling Chinese...be back in a bit.\" \n\n\"You want some money?\" Tommy says, reaching for his wallet. \n\nShe shakes her head \"No I got it, my treat.\" \n\n\"You should take a brolly, it chucking it do-\" The front door slams shut \"Mads?\" He shouts. \n\n\"I'm so sick of feeling like this.\" I whisper. \n\n\"It'll pass Cora, we're all here for you, me, Nat, Mads, Jayne...your folks, you'll get through this. I promise.\" \n\n\"Everything feels so dark and lonely Tommy,\" I sniff against his chest, \"I know you guys are here and believe me, it means the world, it sounds daft but I just want someone to hold me and kiss me and tell me everything will be alright. \n\n\"I can and do already do that for you.\" He says in mock annoyance. \n\n\"I know you do, but I mean, like...I wish someone loved me the way you love Natalie.\" \n\n\"Hey,\" he pushes me away from him slightly and looks down at me, his hands firmly gripping my shoulders, \"somewhere out there, there's some amazing, gorgeous woman desperately searching for you, and I have every faith that one day she'll find you.\" He smiles and pulls me back to him \"And you know I love you...I mean, if you weren't a lesbian and practically my sister, I'd have tried it on with you ages ago.\" \n\nI giggle and tighten my grip around him \"You did try it on with me remember? You were absolutely convinced that as the captain of the school rugby team you could turn the gay girl...and instead took a slap in the face and a kick between th-\" \n\n\"And we've been friends ever since.\" He laughs \"Come on, let's get some stuff ready for dinner.\" \n\n... \n\nMadison came home roughly an hour later, she was miserable and wet but her arms were full of a welcoming bag of warm food. She was soaked to the skin, her blonde hair, darkened by the rain, stuck in clumps to her forehead and water dripped off the end of her nose as she deposited the bag on the kitchen side and tried to unzip her jacket. \n\n\"You should get a shower,\" I say, walking over to help her with the zip. \n\n\"I th- think I will d- do,\" she stammers, her brilliant eyes fixed firmly on my fingers as I pull the zip down and try to prise the sodden material from her skin, \"th- thanks.\" \n\n\"No problem.\" I smile when the garment finally comes free. \n\nI do a double take and try my best not to drool as I notice for the first time just how incredible her body is. The tank top she's wearing is practically transparent and does nothing to hide the swell of her breasts, the flat stomach or tight abs beneath it. \n\n\"It's seriously chucking it down then?\" I ask, my fingers absentmindedly reaching out to press lightly against her stomach. \n\n\"Yeah.\" She nods, her eyes meet mine before dropping down to the hand against her body. \n\nI quickly retract my hand and turn back to the food, a light blush spreading across my cheeks. \n\n\"We'll wait for you Mads,\" Tommy says, thankfully noticing nothing, \"Nat'll be here in ten minutes so we can all eat together.\" \n\n\"That's gr- great,\" she smiles, \"I'll try and be quick.\" \n\n... \n\nIt wasn't long before the four of us were sat together eating dinner and watching a movie on tv. Madison had brought a selection of different things from the Chinese, including all of my favourites, but I was so exhausted I was struggling to keep my eyes open, let alone get food into my mouth. I only lasted twenty minutes before announcing I needed to go to bed. \n\n\"You sure pal?\" Tommy asks. \n\n\"You've hardly eaten a thing Cora, are you feeling ok?\" Natalie enquires, looking genuinely concerned. \n\n\"I'm fine, I'm just tired...didn't sleep much last night. If I'm hungry later I'll come back for this,\" I indicate my plate, \"night guys.\" \n\nI drop my plate in the kitchen and head straight to my room, I thought it'd be an age before I fell asleep but as soon as my head hit the pillows I was out. \n\n... \n\n\"Cora! Cora, wake up!\" \n\nMy eyes fly open and I find Madison sitting beside me on the bed, her expression anxious. Without pausing she sits back and pulls me with her, wrapping my arms around her waist and holding my head against her chest. \n\n\"Try to breathe...that's it sweetheart...it was just a dream. You're ok, I'm here.\" \n\nMy body shakes uncontrollably as I try to calm down, I'm absolutely soaked through with sweat, my sheets even feel damp beneath me. I don't know what I was dreaming about but judging by the state I'm in, it wasn't something nice. \n\n... \n\nMadison keeps up a constant stream of encouragement and words of comfort as we sit there, the rhythmic beating of her heart and focusing on her voice helps me to come around and I slowly manage to get myself back under control. \n\n\"Thank you.\" I whisper, my voice thankfully not wavering too much as I speak. \n\n\"Don't even mention it.\" She smiles. \n\n\"Where's Tommy?\" I ask. Her heart beats a little stronger against her ribs at the mention of his name and I wonder again if perhaps she likes him. \n\n\"He went out for a drink with Natalie.\" \n\n\"And you got stuck babysitting, right?\" \n\n\"Actually, I didn't fancy being the third wheel for the evening,\" she laughs, reaching up and tying her long hair into a ponytail, \"I'd much rather be here.\" \n\n\"You're not seeing Jason?\" \n\n\"Definitely not.\" She shakes her head. \n\n\"I'm sorry.\" I say quietly \"I don't mean to sound ungrateful...I just don-\" \n\n\"It's ok Cora,\" she interrupts, \"I promise you no-one wants you to feel like we're babysitting you. We just want to help get you back to normal again.\" \n\nAn uncomfortable silence follows this. \n\n\"Tell you what,\" Madison says loudly, breaking the tension, \"why don't you get a shower and put some dry clothes on? Are you hungry, I could warm that Chinese up for you?\" \n\n\"That...that sounds amazing.\" I stammer. \n\nI'm not hungry, but the worried look on her face hasn't faltered since I woke up to find her sitting with me. \n\n\"Great.\" Her smile widens as she unwraps her arms from around me and heads towards the kitchen. \n\nShaking my head, I stagger to the bathroom and pull my wet clothes off before jumping in the shower, the hot water feels amazing against my skin and energises me enough that I manage to wash my hair. By the time I'm finished I actually do feel a little hungry. \n\n... \n\nI wander into the kitchen to find my sheets in a pile next to the washing machine. \n\n\"Erm, Madison?\" I ask \"Why are my sheets here?\" \n\n\"Oh,\" she blushes, \"well...they were kind of soaked through...so I thought I'd get them in the wash for you.\" \n\nI sit down at the table and she hands me a streaming plate of food. \n\n\"Your mattress is kind of soaked through too...it's ok though,\" she adds hastily on seeing my face, \"you can sleep in my room, I'll sleep out here.\" \n\n\"You don't have to do that,\" I shake my head and push some food around my plate, \"I probably won't sleep much more tonight anyway.\" \n\n\"Cora you need to sleep.\" She presses. \n\nI shake my head again \"I can't Madison, once I'm awake that's it...I'll be ok.\" I put a forkful of food into my mouth and chew slowly as a gesture of goodwill, but she isn't fooled. \n\n\"How about this,\" she tries, the blush creeping back into her cheeks, \"you get in my bed and try to sleep, I'll sit with you all night so if anything happens you aren't alone...and if that doesn't work, you're free to stay awake all night to your hearts content and I won't mention it ever again?\" \n\nI tentatively try another mouthful of rice and consider her offer. \n\n\"Aren't you at work tomorrow?\" \n\n\"Nope.\" She shakes her head. \n\n\"I don't know...\" \n\n\"Please?\" \n\nI draw my gaze away from my food and meet her eyes, she looks genuinely concerned. \n\n\"Ok.\" I mumble quietly, staring at my plate once again as my desire to eat leaves me. \n\n\"Did I get your favourites wrong?\" \n\n\"Hmmm?\" I look up. \n\n\"The food, I was sure I'd got your favourites?\" She frowns a little, as if she's trying to remember something she forgot. \n\n\"No, you did a great job, all my favourites,\" I smile, \"I'm just...tired...I guess.\" \n\n\"Bed?\" \n\nI can only nod in agreement as I tip the food into the bin and put my plate in the sink. I follow Madison to her room and climb into bed as she holds the covers open for me, with a little encouragement I lay back against the pillows and take a deep breath. She switches off the main light and turns on the lamp on her bedside table before settling into the chair next to her bed. \n\n\"Ok, now I'm right here, no-one is getting in without going through me first,\" she gives me a toothy grin I can't help but return, \"so lay back, close your eyes and try to drift off.\" \n\nI laugh a little and turn onto my side facing her, stifling a yawn as I realise just how exhausted I actually am. \n\n\"Thanks Maddie.\" I sigh as my eyes start to close. \n\n\"Maddie, eh?\" \n\nI see the brief glimmer of a huge smile etched on her face before my eyelids close completely and I drift off. \n\n... \n\nThe time on the alarm reads 3:15am, I can't believe I've managed to sleep until now, a whole five hours! I look across at Madison, asleep, but still in her chair, just like she promised. I feel a pang of guilt when I note just how uncomfortable she looks, I shuffle slightly and her eyes open instantly. \n\n\"You ok?\" She croaks before clearing her throat. \n\nI nod \"You look really uncomfortable there.\" \n\n\"I'm fine,\" she shrugs, \"I've slept in worse places...and you're my main concern at the moment.\" \n\n\"And you're doing a great job of taking care of me, but I feel horrible looking at you scrunched up in that chair...especially when this is actually your bed.\" \n\n\"It's honestly fine Cora...\" she stands and stretches, wandering over to the window and opening it slightly \"it's still throwing it down out there.\" \n\nI climb out of bed and move over to join her; a pleasant shiver passes through my body as the sound of rain reaches my ears and I find myself leaning into Madison a little. \n\n\"Please get in bed,\" I nudge her, \"it doesn't feel right me being in there and not you...I'm happy to share if you are?\" \n\nShe looks over at the bed and bites her lip softly, as though she's weighing up a huge decision. \n\n\"Please Maddie...\" I beg. I may have only called her Maddie once before, but the reaction I got was enough to tell me that that was how to get her to be more agreeable. \n\n\"Ok.\" She sighs eventually, the smile I predicted playing on her lips. \n\nI smile and climb back into bed, the mattress sinks down when Madison crawls in beside me, but other than that she barely makes a sound. I reach out and switch off the lamp, the sound of the rain outside and Madison's light breathing quickly lulling me back to sleep. \n\nChapter Six: \n\nThe Bottom: \n\nI wake the next morning to find myself snuggled closely into a pillow in the middle of the bed. Oh god...I must've rolled over in the night and tried to cuddle Madison...I grimace at the thought...she must have put the pillow here to stop me... \n\nI drag myself out of bed with the intention of getting some warmer clothes on and maybe going for a walk but as soon as I look out the window I rapidly change my mind; the rain is still coming down in sheets. Instead I wander back to my room and freeze in the doorway...Madison is bent over my bed pulling a sheet into place...how is it that I've never noticed how nice her bum is before? \n\n\"Morning Cora,\" she says without looking at me, \"how're you feeling today?\" \n\n\"Oh, erm,\" I start, tearing my gaze away from my new favourite view, \"a lot better actually.\" \n\nI walk around her and pull some clothes out of my wardrobe. \n\n\"Thank you...for last night...I really appreciate it.\" I fiddle absentmindedly with my sleeve \"I haven't slept that well for weeks...and thanks for making my bed too.\" \n\n\"You're more than welcome.\" She smiles as she walks over and pulls me into a tight hug \"Want to go for a walk in the rain?\" \n\n\"It's worse than last night out there.\" I laugh \"We'll get soaked.\" \n\n\"So?\" \n\n\"So, we'll get soaked.\" \n\n\"It'll be fine. We'll take that huge umbrella I borrowed from work.\" \n\nI'm not convinced...but I smile and allow her to drag me from the house ten minutes later under the enormous umbrella she took from work. \n\n... \n\nBoth of us were soaked to the skin when we burst through the door roughly an hour later, each of us trying to get in before the other, giggling hysterically as we did so. Madison won of course, she had me beat in any sort of physical contest. \n\n\"Where the hell have you two been?\" Natalie laughs, looking up from the tv. \n\n\"I thought Cora could use some fresh air.\" Madison shrugs. \n\n\"And get pneumonia in the process!\" Tommy interjects, his voice suddenly harsh. \n\n\"I can take a bit of weather Tommy.\" I frown. \n\n\"That's not the point! We're meant to be taking care of you...not getting you even more sick!\" \n\nSick? They think I'm sick? \n\n\"She's fine Tommy.\" Madison says firmly. \n\n\"You think I'm sick?\" I ask quietly. \n\n\"Of course not!\" Madison and Natalie shout in unison. \n\n\"What about you?\" I ask Tommy, my voice barely above a whisper \"Do you think I'm sick? That I need babysitting constantly in case I have a breakdown? That I'm so fragile I can't handle even the simplest task?\" \n\n\"If you could handle the simplest task you wouldn't be in the state you are now!\" He yells. \n\n\"If you hadn't tried so hard to push Leah on me when I clearly wasn't interested I wouldn't be in the state I'm in now!\" I yell back. \n\nHe opens his mouth to speak but instead of the apology and words of comfort I was expecting he says nothing, just sits there looking at me, his eyes piercing and cold. A devastating silence fills the room, I can't believe we've reached this stage, I look at Tommy, my best friend, my partner in crime, my soul confidant over the years and suddenly I don't even recognise him anymore. \n\nTears fill my eyes, I don't know where to go, or what to do, I push past Madison on my way out the door and head back out into the rain. \n\n\"Cora-\" Madison says, reaching out a hand to try and stop me. \n\nI ignore her and carry on, leaving without picking up the umbrella. Once outside I simply just start walking as fast as I can, not paying attention to where I'm going or who I'm walking in to. \n\nMy vision blurs as a combination of tears and rain drops drip down my face, I can't get over Tommy's reaction. I turn the corner into the park and crouch down under the nearest tree, this doesn't do much to keep the rain off me but at least provides a little shelter from the wind. \n\nI lean back against the tree and try to ignore the whirlwind of thoughts now flying through my brain, instead I hold out one hand and focus on the steady drip of water falling from it onto the ground underneath. How could he say those things? He's supposed to be my best friend... \n\n... \n\nWhen I next take stock of reality it's almost dark, my clothes are so wet they fit like a second skin and rise up my arms and legs as I stand. I wince as blood flows back to my outer limbs and begin to stagger home... \n\n... \n\nBy the time I arrive back at home I can't even feel my fingers and opening the door is next to impossible. I give up after only a few seconds of trying and land a feeble knock on the wood. The door opens instantly to reveal a relieved looking Madison half way into pulling on her coat. \n\n\"Cora!\" She exclaims, wrapping her arms around me tightly \"Thank god you're home! I was just on my way out to find you. I've been so worried!\" \n\nI don't answer, I know she means well, I know she's just trying to help, but suddenly I find I'm so angry with her I can barely stand to be in her presence. I roughly push her away and head for the bathroom. \n\n\"Cora?\" I raise my eyes to look at her, one arm still in her coat as she slips her shoes off. \n\n\"Just don't Madison, I'm too tired, I don't wanna hear it!\" I snap. \n\n\"Hey!\" She grabs my hand as I turn to walk away. \n\n\"I said don't!\" My voice rising to a shout \"I know you all think I'm pathetic and feeble but I'm capable of getting myself a shower!\" \n\n\"We don't think that, we-\" \n\n\"Are you fucking deaf?!\" I scream manically. Her eyes widen in surprise \"Just leave me the fuck alone! I don't need your fucking help or your pity!\" \n\nI storm away from her, up the stairs and into the bathroom, but my fingers are still so numb I can't get the door locked. I also can't get out of my clothes, the harder I try the more frustrated and upset I get. Soon the tears are flowing again and my loud sobs echo off the tiles around me as I slide to the floor. \n\n\"Cora?\" A tentative voice enquires from the other side of the door \"Can I come in? Please.\" \n\n\"Ok.\" I sniff. \n\nSlowly the door opens and Madison slides into the room. She says nothing. She pulls me easily to my feet and unzips my coat, helping me to pull my arms out, my jumper and t-shirt follow soon after. Still without speaking she turns on the shower before helping me out of my jeans, leaving me standing there in my underwear. \n\n\"Can you do the rest?\" \n\n\"I can't undo my bra.\" I cry pathetically as I try to lift my arms. \n\nTo her credit she simply walks around me and helps me to remove the fiddly item, then she turns me around and encourages me into the hot water. My skin feels like it's on fire as the water hits. \n\n\"It's only luke warm, I promise.\" She nods as she sits on the side of the bath. \n\nAs the pins and needles slowly ease off I manage to slip my pants down my legs, I look over sheepishly at Madison but find she's looking the other way to give me at least some privacy. I struggle through washing myself with arms that feel like lead before switching off the water and stepping out of the shower. ",
        "Madison stands and wraps me a large fluffy towel, rubbing my arms to try to get the blood pumping better. \n\n\"I'm so sorry Maddie...\" I cry \"I don't deserve this kindness.\" \n\n\"It's ok.\" She replies as she continues to help me get dry, deliberately avoiding any particularly sensitive areas. \n\n\"It's not.\" I say quietly. \n\n\"Cora, it's fine, I get it.\" She gives me a half smile \"Can you finish up here?\" \n\nI nod and shuffle the towel around taking in Madison's eyes wandering over my body before she leaves the room to allow me to finish. \n\nHer hand appears around the door some minutes later holding my pjs and a hoodie. I take them from her gratefully and slip them on. \n\nI leave the room with the intention of going to bed but Madison has other ideas, she drags me to the kitchen and puts a plate of food and a cup of tea in front of me, instructing me that I'm not leaving her sight until it's gone. \n\nIt takes me well over an hour to finish it, but she sits patiently by my side until I'm done. \n\n\"Right,\" she says taking the plate and cup from in front of me, \"you're free to do as you please now, I just wanted to make sure you ate.\" \n\n\"Thanks.\" I mumble. \n\nI'm actually not sure what to do now, I feel lost again without something to focus on or someone telling me what to do. I look aimlessly around the room trying to find inspiration, but all I can focus on is Madison stood at the sink washing up. A fresh wave of guilt washes over me as I watch her, she's been nothing but kind to me, taken better care of me than anyone else and yet she's the one I've sworn at and shouted at... \n\nI stand up and walk across to her, pulling her hands out of the soapy water to give her the biggest hug my numb arms can manage. \n\n\"I'm sorry Maddie, there's no way you deserve the way I've treated you this evening. You've been nothing but kind to me and I've been an ungrateful bitch.\" \n\n\"It's ok Cora,\" she whispers, the water from her hands and forearms soaking through my hoodie as she holds me tighter, \"you've been through a lot the past few days. All I want is for you to feel better.\" \n\n\"I don't understand why you care so much,\" I mumble again, \"you hardly know me. I should be the least of your worries.\" \n\n\"Well I...I just...we're friends aren't we? You should take care of your friends.\" She pushes me away gently and I notice her cheeks look flushed \"Let me finish up here and we'll watch a movie or something ok?\" \n\n\"Ok.\" I nod. \n\nI wander into the front room but change my mind when I realise that there's a good chance I'll have to see Tommy at some point. I turn around to backtrack into the kitchen and walk straight into Madison coming the other way. \n\n\"Changed your mind?\" She smiles. \n\n\"No,\" I smile back, \"but can we watch somewhere else? I don't want to see Tommy.\" \n\n\"No problem, go get settled in my room and we'll watch in there, any preferences?\" I shake my head \"Paranormal Activity?\" \n\n\"Definitely not...unless you fancy spending the night with me clinging to you.\" \n\n\"I could think of worse things.\" She grins and tilts her head suggestively at me...I say nothing, unable to decide if she's joking or not \"How about Despicable Me then?\" She continues when I remain silent. \n\n\"Sounds good.\" I smile again. \n\nTen minutes later we're laid together under the covers on Madison's bed in an uncomfortable silence, I shuffle down and rest my head on the pillows...a fatal mistake as my eyes instantly start to close. \n\nI jerk awake only five minutes later to find Madison looking down at me. \n\n\"Sorry.\" I mumble sheepishly. \n\nShe pulls my pillow into her side and encourages me to lay down again \"Rest your head here.\" She pats the pillow and I slowly lay down. \n\nHer expression is unfathomable while I adjust my position and try to get comfy, but as soon as she deems I'm sorted, what's bothering her becomes clear quickly. \n\n\"Is this the worst it's been?\" Madison asks, looking anxiously down at me as she brushes her fingers through my hair. \n\nI pause for a few seconds and contemplate my answer. Shaking my head slowly, I take a deep breath and reveal what I've never told another soul. \n\n\"I thought about suicide once...\" \n\n\"Oh Cora.\" Madison gasps and gives me a worried look \"When?\" \n\n\"Before I started seeing Jayne.\" I answer \"I was driving home after a shit day at work, my anxiety was through the roof. Then I got to the road by the river and suddenly all I wanted to do was just drive off the edge and into it, it would've been so easy.\" I pause slightly \"In fact, for those few seconds, when I had that thought, I felt at peace somehow, you know? The anxiety was gone, it faded away instantly, as though my mind knew that that was the answer...\" \n\n\"What stopped you?\" She asks quietly, her fingers still tangled in my hair. \n\n\"I realised it was a blind bend and I was on the wrong side of the road. I didn't want to risk hurting someone coming the other way when I flew off the edge. Taking my own life would've been one thing, but the idea of taking out someone completely innocent was a whole different ball game...and I decided that I really didn't want to die...\" \n\nI look up at Madison and see her eyes welling with tears. \n\n\"Hey,\" I sit up, wrapping my arm around her shoulders, \"it's ok, I'm not there anymore, no one got hurt and I only thought about it once...it was actually that thought that made me decide to get help.\" \n\n\"Why didn't you tell anyone Cora?\" She asks, her hands shaking a little as she wipes her eyes \"I knew you'd been down but I had no idea it was that bad.\" \n\n\"I don't know.\" I shrug, wishing I hadn't admitted anything \"I've just never thought of it as something anyone else needed to know...and now I'm getting help worrying about it seemed pointless.\" \n\nHer eyes well up again and tears drip down her cheeks. \n\n\"Don't cry Mads,\" I pull her in for a hug and her arms wrap tightly around me, \"I'm not worth crying over, there are bigger problems in the world.\" \n\n\"You always say things like that Cora,\" she sniffs and looks up at me, her eyes staring straight into mine, \"there might be other problems out there, but you are definitely worth crying over. In fact, you're worth so much more than crying over! Do you have any idea how much hurt anyone who knows you would've felt if you'd gone through with it? Everyone who meets you loves you sweetheart, and those lucky few that are allowed into your world, that get the chance to get close to you, they think you're incredible, they'd do anything to make you happy, they just adore you Cora.\" She takes in a deep breath to steady herself, the tears fall thick and fast down her cheeks now. \n\n\"You're so kind and considerate, I can't believe that even in that situation your first thought was that you might hurt someone else. And you're so strong, you don't give yourself nearly enough credit for getting through what you have, depression is a seriously difficult thing to overcome and you fight yourself at every turn, I've seen you do it. Letting people into your world is hard, even harder after what happened with Leah... \n\nI just want you to know that you're not alone in this Cora, we're all here for you and we all want the best for you because that's all you want for everyone else. I hope so much that one day you get your happy ending sweetheart; I've never met anyone who deserves it more than you.\" \n\nShe takes another deep breath and rests her head against my chest, trying to get her breathing back to normal. I don't know what to say, I pull her in closer and lean against the headboard, kissing the top of her head softly as I run my fingers across her back. \n\n\"This makes me happy,\" I whisper \"I'm so glad to have you in my life Maddie.\" \n\n\"I want you to promise me something.\" She mumbles, her voice muffled by my hoodie. \n\n\"What?\" \n\n\"I want you to promise that if things ever get that bad again, you'll come find me and tell me...or call me, or text, or write a letter, or...or...just promise me you won't suffer alone.\" \n\n\"I promise.\" I answer earnestly. \n\n\"Good.\" \n\nHer fingers grip my hoodie tightly as fatigue starts to stab at my eyes. \n\n\"It's ok Cora, go to sleep.\" She whispers, obviously able to feel my breathing deepening and my body relaxing under her. \n\n\"Thanks Maddie.\" I sigh as I drift off once more. \n\n... \n\nMy eyelids flutter open again in the early hours of the morning. I've shuffled down into the bed in my sleep and Madison is now laid beside me, the pillow still separates us but her fingers are entwined in my hair. I smile a little at this comforting gesture and adjust the pillow so I can shuffle closer to her. She sighs and closes the gap between us fully, her hand drops to my waist and she pulls me gently into her body until my forehead is touching her chin. \n\nHer lips press softly against my skin and I wrap my arm around her before sleep consumes me once again. \n\n... \n\nI wake the next morning to Madison attempting to slide out of bed without disturbing me, a difficult feat as we're still wrapped so closely around each other it's hard to tell which limbs belong to each of us. \n\n\"Morning,\" she smiles, \"how're you feeling?\" \n\n\"Like I've got one hell of a cold coming on,\" I groan as I take note of the pounding headache, sore throat and blocked nose I've woken up with, \"I'm definitely going to suffer for yesterday.\" \n\n\"Stay here and try to go back to sleep,\" she smiles again and throws a blanket over the bed, \"I'll come and check on you in a bit.\" She tucks some stray hairs behind my ear and leaves. \n\nA warm, fuzzy feeling fills my chest as I snuggle back down under the covers and manage to fall into a thankfully dreamless sleep. \n\n... \n\nI wander into the front room some three hours later. \n\n\"Hey sleepyhead,\" Madison grins as I slump down next to her on the sofa, \"sleep well?\" \n\n\"Better than I have done in weeks.\" I smile \"Thank you so much Maddie, I don't know what I'd do without you.\" \n\nShe pulls me in for another amazing cuddle that warms my soul and eases the throbbing headache I'm still experiencing. \n\n\"I've got some good news for you...\" \n\n\"Hmmm?\" I reply, my eyes starting to close once more. \n\n\"Natalie messaged to say her and Tommy were going away for another few days.\" My eyes snap open \"She thought...and I agree...that maybe it'd be good for you and Tommy to have a bit more of a break from each other...\" \n\n\"Maybe...\" I turn into her shoulder. \n\n\"Space might be just what the two of you need.\" She kisses my forehead \"But you know...\" she hesitates \"I don't think what he said came from a malicious place...\" \n\n\"It sounded pretty malicious to me.\" I grumble. \n\n\"I know,\" she whispers, \"but I think he just panicked, I don't think he really understands-\" \n\n\"That doesn't give him the right to say what he did.\" I reply angrily, wondering why she's trying so hard to defend him. \n\n\"I know.\" She kisses my forehead again and changes tact. \n\n\"So I was thinking...it might be a bit soon for you to go back to work, but how about we try going to the shops this afternoon? We could get something for dinner, maybe cook together, then watch a film before bed?\" \n\n\"Sounds good.\" I answer quietly. \n\nPrivately I think it sounds awful, I know she's only trying to help me get better and distract me from my thoughts, but right now all I want to do is curl up on the sofa with her arms wrapped around me and not move for a considerable period of time. \n\n... \n\nOverall the shopping trip went well, I only had a few moments of panic as we went up and down the aisles, but Madison did an amazing job of keeping me calm and distracted. We got home, put the food away and made a basic meal of spaghetti before settling down to watch the film. \n\n... \n\nThe closer we got to it being time to go to bed, the more despondent and withdrawn I became. I knew Madison would be heading out to work in the morning and that she'd need a full night's sleep, she couldn't sit up talking to me... \n\n\"You ok sweetheart?\" She enquires. \n\n\"What? Oh...yeah I'm fine.\" I reply. \n\n\"Talk to me Cora,\" she pauses the tv, \"you can't get better if you keep everything inside.\" \n\n\"It's really stupid...\" \n\n\"I won't laugh, I promise.\" She smiles and lifts my chin. \n\n\"I really don't want to go to bed...\" I breathe \"it's like...I can get in bed and fall asleep, but I can't stay asleep and then my mind starts working overtime thinking about nothing...and then I either fall asleep again and have a nightmare...or I wake up every ten minutes feeling anxious and like the walls are closing in in the dark...\" I pause for breath \"And I also really don't want to wake you up in the early hours if I have another bad dream when I know you've got to get up for work...\" \n\n\"Ok,\" she smiles, \"first of all, I appreciate your concern over waking me, but honestly I'd much rather you did than struggling on in the dark feeling like that. Secondly, that's not stupid at all! You need to give yourself more credit, you've been through so much recently, I'm surprised you're even managing a bit of sleep...and finally,\" she pulls me in for a hug, \"if you ever feel like you just can't cope alone, please come and wake me up.\" \n\nI nod with as much conviction as I can and tighten my grip around her waist. \n\n\"I'm gonna grab a quick shower and then get in bed,\" she says and I loosen my grip, \"if you need anything...and I mean anything...you come and see me, ok?\" \n\n\"Ok.\" I smile. \n\nAs Madison leaves I figure I may as well try and get myself to sleep, I feel tired even though I've actually slept for most of the day. \n\nI sigh loudly as I stand up and switch off the tv. A quiet determination fills my brain and I take several deep breaths...I will not wake Madison up later. \n\n... \n\nI wake up in a cold sweat...looking across at the clock I'm almost heartbroken to find it's only 2:38am. The familiar feelings of panic and anxiety begin to filter through my body before I even have chance to stop them. \n\nI close my eyes and try to get a handle on my breathing, in through the nose, out through the mouth, all that crap. Needless to say, it doesn't work. I finally give in and leave the room with the intention of getting a drink from the kitchen and going to sit in the front room with something random on the tv in an attempt to feel like I'm not alone. \n\nI get halfway down the hallway and pause outside Madison's room. My hand hovers over the door handle and I bite my bottom lip, weighing up my options before deciding that despite what she said, I can't do this to her so early in the morning. I get as far as pulling my hand away when the door opens from the other side. \n\n\"Come here sweetheart.\" Madison takes my hand and drags me into the room. \n\nI don't even try to stop her, I'm so thankful she opened the door I can't even speak. Silent tears run down my face as we climb into bed and she pulls me to her. \n\nShe lays back and her arms wrap around me as she holds me tightly against her body, I rest my head on her chest and listen to the comforting thump of her heart beating under her ribs. \n\n\"I'm sorry,\" I whisper when my breathing evens out, \"I really didn't mean to wake you, especially when you've got work in a few hours...\" \n\n\"Hey,\" she kisses the top of my head, \"it's ok, I promise, you didn't wake me, I was coming to check on you anyway, you just saved me a few steps.\" \n\nThat's a lie and I know it...but I appreciate the sentiment all the same. \n\n\"I was actually thinking,\" she continues, \"maybe it'd be better if you just came to bed with me at night? I mean, until you feel you'd be ok by yourself...like...you'd sleep without nightmares and all that.\" \n\nHer heart pounds strongly against her ribs as she proposes this and I can tell she's flustered despite the fact the room is in total darkness. \n\n\"What about Jason?\" \n\n\"He never stays over.\" She replies quickly. \n\n\"Oh.\" \n\n\"Yeah...he likes to leave as soon as he's done...and to be honest I don't want him here afterwards...\" \n\n\"Do you want him here before?\" I blurt out before I can stop myself. \n\n\"Not really.\" She sighs \"I think I should just end it.\" \n\n\"Maybe.\" I nod, tightening my arms around her before speaking again \"Sharing would be really awesome Maddie, thank you.\" \n\n\"Great!\" She says with enthusiasm. \n\nA huge weight feels like it's been lifted as a massive smile spreads across my face...and despite what I try to tell myself, I know I'm smiling at more than just the offer of help with easing the nightmares. \n\nChapter Seven: \n\nRecovery: \n\nSession: \n\n\"I'm sorry,\" I manage to get out between sobs, \"I thought I was past this stage...again...\" \n\n\"It's not a problem Cora, I promise. You need to get your feelings out, and I know how hard you've worked on that, but there's absolutely no shame in crying every once in a while.\" \n\n\"I try so hard to act like things are ok, to keep everything on the surface happy and light,\" I wipe my eyes, \"but inside things are so dark and cold and lonely and...and...and kind of numb.\" \n\n\"Numb?\" She questions. \n\n\"Yeah...like, I'm not even sad anymore, it's as though I've gone beyond that and now I just don't feel anything at all.\" \n\n\"Do you always feel like this?\" She asks kindly. \n\n\"When I'm with my friends, or out doing something I used to enjoy things are a little bit better, but then the next day things are exactly as they were before. Except...\" \n\n\"Except?\" She probes. \n\n\"Except with Maddie.\" I can feel a small smile playing on my lips \"I don't know how she does it but she makes me feel...lighter...somehow.\" \n\n\"Perhaps that's because you feel you can relax around her...or perhaps you see her as something more than a friend?\" \n\n\"What? No!\" I exclaim \"She's straight...and a friend...and she still has a boyfriend...\" \n\n\"Ok, ok,\" Jayne laughs, raising her hands in surrender, \"she's a friend...although I feel we need to push this out at least as far as, she's a 'close' friend.\" \n\n\"Ok.\" I agree. \n\n\"Now, as far as homework goes for this week. All I want you to do is simply to keep doing what you're doing.\" I look across at her, a little surprised by this \"Everybody has setbacks Cora, but I know that if you keep doing what you were doing before, things will start to become easier...maybe even enjoyable.\" \n\n\"God I hope you're right.\" I sigh \"I'm exhausted.\" \n\n\"Go home and relax,\" she smiles, \"today was a hard session, give yourself a break.\" \n\n\"I will, thanks Jayne.\" \n\n... \n\nLater that day. \n\nI walk through to the kitchen and switch on the kettle, hoping that my eyes look a lot less sore than they did as I got back in the car. The door swings open again and Madison walks through it, towelling her hair dry. \n\n\"I was just about to do that,\" she smiles, \"I thought you'd be back about now and you'd want a drink.\" \n\n\"You don't have to make me drinks,\" I smile, \"you want one?\" \n\n\"No thanks.\" She drapes her towel over one of the chairs, revealing my favourite t-shirt and a pair of shorts \"Oh...\" she grins when she sees where I'm looking, \"I sort of borrowed this...I hope that's ok?\" \n\n\"It's fine,\" I reply light-heartedly, while secretly hoping that she never wears it when she sees Jason, \"it's not like I have a girlfriend to steal my clothes, you may as well have the honour.\" \n\n\"Don't mind if I do.\" She kisses me on the cheek and gives me a quick hug \"Come cuddle when you're sorted. I want to hear how your session went.\" \n\n\"Yes boss.\" I salute. \n\nI catch sight of myself in the window as she leaves and almost don't recognise myself. The woman in my reflection looks...well she looks happy...she's smiling, her eyes don't look sore, in fact, her eyes are a shining, vibrant green! Her shoulders aren't hunched over...she's just a normal, happy human being...with infectiously positive friends. \n\n... \n\nThe second my backside hits the sofa Maddie wraps herself around me and starts talking. ",
        "We talk for a few minutes about my session, but given that she was a huge part of the subject matter I try to keep this as brief as possible. Luckily for me, she doesn't do her usual and push me for more information, she has plenty of other things to talk about...unluckily for me, it's mostly about Jason and how he's coming over later once the match finishes... \n\nI say a silent goodbye to my favourite t-shirt. \n\nShe talks more about Jason's impending visit and I resist the urge to ask her why she hasn't ended things yet. I imagine she felt about Leah the way I feel about Jason. She was patient with me while I made my decision, the least I can do is return the favour. \n\n... \n\nEventually conversation moves on to work and a climbing trip she's planning with some friends over the summer, then the man himself arrives... \n\n\"Evening ladies!\" Jason shouts, or perhaps slurs would be more accurate as he crashes into the room. \n\nMaddie sits up and scowls at him, her arms remaining wrapped around me. \n\n\"I take it they won then?\" She asks shortly, taking in his drunken state. \n\n\"Course they did babe, never in doubt.\" He staggers over to us and pulls Madison roughly to her feet, leaving me feeling as though I've just stepped out of a warm shower and into a freezing cold room \"You're in for a treat tonight princess.\" \n\n\"I'm actually not done talking to Cora yet!\" She says firmly, pulling her arms from his grasp. \n\n\"Oh but you are babes,\" he continues, \"I've got a big problem I could use your help with.\" \n\nI try not to retch as he reaches around her waist and grabs her ass, giving me a wink as he does so \"Thanks for keeping her warm Cora, saves me a job.\" \n\nHe laughs shortly and gives me another wink I don't appreciate. \n\n\"I'll see you in the morning then Maddie?\" I say, raising my eyebrows as a way of questioning that she's ok. \n\n\"In the morning.\" She nods and gives me a quick smile. \n\nI don't believe her, I actually feel my chest tighten a little anxiously at her smile, it looked forced and it feels to me like the last thing she wants is a night with Jason! But what can I do? She said she's ok and she left willingly...and I suppose he is her boyfriend, she must be at least a little bit attracted to him. \n\nA shudder passes through my body as Jason drags a beet red Madison off towards her room for what I gather he thinks will be a night of passionate, hot sex. \n\n\"Have a good evening Cora.\" Madison blushes as she's escorted firmly from the room. \n\nThe door closes behind them and I sigh loudly. The thought of Jason's hands all over Madison makes my skin crawl and I wonder, yet again, what the hell she sees in him and why she would ever want to get back together with him. She could do so much better... \n\nAh well, I think, it's her choice, if she wants to be with him then she wants to be with him. There's nothing I can do about it. \n\n... \n\nAfter a long, disrupted night of listening to Maddie and Jason having sex I finally give up on trying to sleep and roll over to find my alarm reads 6:13am, sighing loudly I drag my tired body from my bed and head for the kitchen. \n\nI make myself a cup of tea and sit down at the table, resting my head in my hands. \n\n\"Morning Cora,\" Nat laughs, entering the kitchen to grab her things for work, \"did you not sleep either?\" \n\nI shake my head and look up to see Maddie walking through the door...wearing my now old favourite shirt. \n\n\"Well good morning Madison!\" Nat announces, as though welcoming a special guest \"It sounds like someone had a great night last night!\" \n\n\"Someone did yeah,\" she replies darkly, \"but it certainly wasn't me!\" \n\n\"Wow,\" Nat continues, giving her an impressed look \"you must be a freak between the sheets for Jason to make that much noise all night.\" \n\n\"I wouldn't go that far,\" she replies without smiling, \"I woke up at 3 to find him humping my leg.\" \n\n\"Nice...\" Nat grimaces. \n\n\"Isn't it just.\" Madison states, grabbing a glass of water and turning on her heel to head back to bed \"Sorry if he kept you up all night guys.\" \n\n... \n\n\"She could do so much better.\" I say to Nat when I hear her bedroom door close. \n\n\"She could.\" Nat nods. \n\n\"How did Jason even get her attention in the first place?\" \n\n\"I don't know, why...are you interested?\" \n\n\"No!\" I answer quickly \"I just don't understand what she sees in him, what do you think it is?\" \n\n\"I really don't know,\" she sighs, \"I agree completely, she could do way better. Maybe you should ask her out and show her what dating should be like...\" a smirk appears her lips \"she's already wearing your favourite clothes...you're practically halfway to married.\" \n\n\"As we've discussed many times before, she's straight Nats.\" I scowl \"I don't have the right equipment to make her happy.\" \n\n\"Hmmm, maybe,\" she smiles at me, \"only one way to know for sure though...\" \n\nShe gives me that look again as she finishes packing her lunch. \n\n\"It's not that hard Cora,\" she laughs, \"keep thinking about it and you'll see where I'm coming from. Have a good one!\" \n\n\"And that's now my ex-favourite shirt by the way!\" I shout after her as she heads for the door \"I won't be able to look at it anymore without thinking about Jason!\" \n\nChapter Eight: \n\nApril: \n\nTommy and I were finally friends again. I walked in after my first day back at work to find him sat in my room waiting for me. He apologised for forcing Leah on me instead of listening to what I wanted and for saying he thought I was sick, and I apologised for blaming him completely for the whole situation I'd found myself in over the past few months. \n\nWe talked for ages that night, more than we had done in months. The longer we talked the more I appreciated what Madison had tried to tell me, he had just panicked. He thought that I'd suddenly just 'get better', that I'd wake up one day and be the way I used to be. That second slide back into darkness had thrown him a lot more than I knew. \n\nWe both cried in the end, Tommy because he was so sorry for what had happened, and me because I was so relieved that he finally understood just how difficult it was dealing with what I was going through. \n\n... \n\nThings between Maddie and Jason however, were exactly the same as they had been. It had been two months since she had first mentioned to me that she was thinking of ending things with him...but despite this they were still together and still having loud, apparently unsatisfactory sex at least three times a week...she was also still walking around in my ex-favourite t-shirt, flaunting it at every opportunity as if she was trying to see how far she could push it before I said something. \n\n... \n\nI was laid in bed one night around the middle of the month watching tv and thinking longingly of the weekend, it had been a hell of a long week at work but I was finally starting to feel more settled again after the problems I'd faced earlier in the year. I heard the front door open and sighed deeply, Maddie and Jason were back from date night... \n\nExpecting to hear the sound of Madison's bedroom door closing, I was surprised when mine opened instead. \n\n\"Cora!\" Maddie whispers loudly \"Are you awake?\" \n\n\"Yeah.\" I prop myself up on my elbows and look over at her. \n\nShe staggers over, clearly drunk, and clumsily removes her shoes before laying down beside me on the bed. \n\n\"Are you ok?\" I ask, pushing her hair back and revealing the mascara smudged down her cheeks. \n\n\"I'm fine...\" she slurs \"I've just had a few drinks is all...\" \n\n\"Just a few?\" I raise an eyebrow \"Where's Jason?\" \n\n\"He fucked off wi- with his mates,\" she hiccups and turns onto her side, \"so I had a few drinks by myself and then Geoff put me in a taxi and I came ho- home.\" \n\n\"Who the hell is Geoff?!\" I demand, absolutely fuming that a stranger had had to put her in a taxi home and take care of her while Jason was out having fun. \n\n\"Geoff is a very kind man who works at a pub...bar...alcohol place in town...and who made sure I got in a taxi home...\" \n\n\"Why didn't you phone me?\" I ask, \"I would've come to fetch you.\" \n\nShe merely shrugs \"I thought Jason would bring me home...until he didn't come back...\" \n\n\"Oh Maddie...\" I slide out of bed and grab the wipes from my dressing table \"why do you put up with this idiot, he can't even work out that he's meant to spend date night with you! You know, since you're his girlfriend and all...\" \n\nThis comes out a little more scathingly than I intended and Maddie's eyes begin to well up. \n\n\"I'm sorry sweetheart,\" I sigh and start tenderly wiping the make-up from her reddening cheeks, \"I know he's your boyfriend it just...well it just winds me up that he's got a smoking hot woman like you and instead he ditches you to get pissed with his mates.\" \n\n\"Thanks Cora.\" She clumsily cups my cheek in her hand and leans in, giving me a quick peck on the lips. \n\nI freeze at this and Madison pulls back slightly. \n\nWith her eyes glued to my lips she leans in again and presses her mouth to mine. I don't move. My body feels as though it's been separated from my mind. \n\nShe pulls away once more and looks up at me, visibly embarrassed. \n\n\"Sorry...\" she blushes as I bring my fingers to my lips \"I'm gonna go get some teeth and brush my water ok...I'll be right back...\" She falls over her shoes and staggers back out of the room with only half her face make-up free. \n\nLeaving the door wide open she heads for the bathroom and I hear the sound of a glass hitting the side of the sink, luckily it doesn't sound as though it's smashed. After a few seconds pause she starts to brush her teeth and then heads for her room. \n\nI strain my ears, listening out for any sound that might indicate she needs my help, but she reappears in my doorway only moments later. \n\nThe first thing I notice is that she's managed to get changed into a pair of joggers...and that damned t-shirt again. \n\n\"Feeling better?\" I ask with a smile. Half of her face is still covered in mascara and she's now got toothpaste down her chin...it's an oddly endearing sight. \n\nShe nods and staggers back across to my bed once more. Pulling back the duvet she invites herself in and lays down, her eyes closing the second her head hits the pillow. I chuckle to myself and take another wipe from the packet. Tilting her face upwards slightly I finish tidying her up and get up to close the door. \n\n\"Where are you going?\" She cries drunkenly when she feels my weight leave the bed. \n\n\"Shhhh,\" I whisper, brushing some hair back from her face, \"I'm only closing the door.\" \n\nI push the door closed and slide back into bed beside her. We only shared for a few nights back in January, the guilt I felt meant that I was soon back in my room, but I can't deny that I've missed this. No sooner have I settled back into bed than Madison wraps her arms around me and snuggles in closer. \n\n\"He's such a dick!\" She exclaims suddenly and bursts into drunken, angry tears. \n\n\"He definitely is.\" I whisper in agreement, drawing patterns across her back with my fingertips. \n\n\"And he hates this shirt too,\" she adds as an afterthought, \"which makes him even more of a dick!\" \n\n\"I don't think hating a shirt makes him a dick Mads, not everyone likes-\" \n\n\"He doesn't not like it because of what it is...he hates it because it's yours...\" \n\n\"And he thinks you should be wearing his clothes?\" I ask. \n\nShe shakes her head \"He asked me why I liked wearing it so much and I just blurted out that it was because it smelt like you and I found it comforting...he was so pissed he just got up and left.\" \n\n\"Oh.\" I say in surprise. \n\n\"Yeah...but he isn't bothered if I wear his clothes, he thinks I should wear nothing whenever he's around,\" she sniffs, \"easier access and all that. All he wants me for is sex...he doesn't even know when my birthday is and we've been together three fucking years!\" \n\nHer tears strengthen again and I grip her waist tighter with one hand while I run my fingers through her hair. \n\n\"Sshhhh,\" I kiss the top of her head, \"try and go to sleep sweetheart. We'll talk about it more tomorrow.\" \n\nI roll over so I'm flat on my back and Maddie rests her head on my stomach, just below my breasts. Her fingers grip my shirt and I resume drawing patterns on her back in an attempt to calm her enough that she can drift off to sleep. I'm so pissed off with Jason that I could use some time to sleep it off too, I'm almost certain that Maddie wants to end things with him but I can't let her do it based on my feelings on the situation. \n\n... \n\nThe sound of my alarm going off wakes me early the next morning. I reach over to switch it off and look across at Maddie, she had rolled over in the middle of the night and was still snoring gently beside me. Her t-shirt had ridden up slightly during the night revealing her perfectly flat stomach and creamy white skin. It took a serious amount of willpower to resist reaching out and touching it. \n\n\"Maddie.\" I whisper, gently shaking her shoulder \"Maddie, wake up sweetheart, it's time for work.\" \n\n\"Hmmm...noooo...\" she moans \"not today.\" \n\n\"Maddie come on, it's Friday, just eight hours to go and it's the weekend.\" \n\n\"Nooo...\" she moans again, pulling the duvet firmly over her head. \n\n... \n\nI didn't spend too much time trying to convince her to get up, I knew I was fighting a losing battle and to be honest, I didn't blame her for wanting to stay in bed. Before I left I set her another alarm in case she was feeling up to going in to work later, placed some paracetamol and a glass of water on the bedside table for her and cleared a path to the door so there was less risk of her falling over her shoes again. \n\n... \n\nMy day at work passed slowly, I texted Madison at lunchtime but received no response. Natalie and Tommy hadn't heard from her either. \n\nThe mountain of paperwork I was working through felt never ending as I willed the clock to tick round to clocking off time. \n\n... \n\nI finally walked through the door after a long day and a horrific journey home expecting to find Madison downstairs. I looked everywhere for her before heading upstairs to get changed, I poked my head around her bedroom door to find her bed still perfectly made and the room deserted. \n\nAssuming she was either at work or climbing I pushed open the door to my room and started unbuttoning my shirt, ready for comfy clothes and some food...I nearly had a heart attack when my duvet started moving and Maddie's mess of blonde hair came into view. \n\n\"Have you been there all day?\" I ask incredulously. \n\nShe nods and holds her arms out to me, her eyes round and pleading...how the hell does Jason not find her irresistible?! \n\n\"Please Cora...\" \n\nI slip out of my shirt and replace it with a hoodie before walking across to her and pulling her in close. \n\n\"I- I'm so sorry about last night,\" she mumbles against my chest, \"I shouldn't have kissed you, it wasn't right, I was drunk an-\" \n\n\"Maddie it's fine,\" I interject, \"honestly, let's just forget about it ok?\" \n\nShe takes one slow deep breath but otherwise doesn't make a sound as I wrap her more tightly in my arms and hold her tight. \n\n... \n\n\"You fancy something to eat?\" I ask as my stomach starts to grumble some fifteen minutes later. \n\nShe nods her head and loosens her grip enough that I can move away from her. \n\n\"I think I've got some leftovers in the fridge that we can just warm up.\" \n\nI step backwards and breathe a sigh of relief as I finally manage to get my tight work trousers undone. Her eyes follow me across the room as I pull out a pair of shorts and quickly make the swap. \n\n\"Coming?\" I enquire, standing in the doorway and holding out a hand to her. \n\n\"I'll meet you downstairs, I want to get a shower and freshen up a bit first.\" \n\n\"Cool.\" I smile and head for the kitchen. \n\n... \n\n\"Hey Cora,\" Natalie sighs, \"I hope your day was better than mine. I'm so fucking glad it's the weekend! Did you manage to get hold of Madison in the end?\" \n\n\"No,\" I shake my head and grab a third plate from the cupboard, \"she was still in bed when I got home. Nearly gave me a heart attack when I went to get changed and my sheets all of a sudden started moving. You want some of this?\" \n\n\"She was still in your bed?\" She raises an eyebrow \"And yes, please, I'd love some food.\" \n\n\"Yeah,\" I shrug, \"shouldn't she have been?\" \n\n\"Hey it's your bed,\" she holds her hands up in surrender, \"your choice to let her sleep in there.\" \n\n\"She let me sleep in hers after what happened back in January,\" I continue, \"as her friend, can I not return the favour?\" \n\n\"Cora for Christ sake!\" She groans in exasperation \"I'm sort of enjoying the 'will they, won't they' side of watching the two of you together...but when are you going to realise that Maddie wants to be more than just your friend?!\" \n\n\"She does not want to be more than my friend!\" I reply, switching on the microwave. \n\n\"She does too!\" She retorts quickly \"Think about it, she steals your favourite shirt...the one that you went mental about when I thought I might have accidentally shrunk it in the wash...and wears it almost constantly, even when she's with Jason...which I know pisses you off so much you could punch something...yet you just let it slide and say nothing because she's Maddie and you'd do anything for her. \n\nShe came home last night absolutely devastated about Jason and your bed was the only place she wanted to be. I was home too last night, Tommy's away, she could've come and got in bed with me...because let's be honest, I give amazing cuddles...but no, she wanted you...and I bet she just held her arms out and you went running-\" I feel my cheeks flush \"because you just can't help yourself...and she'll have been there with the puppy dog eyes, desperate for you to hold her, because she lo-\" \n\nShe stops abruptly as we hear a bang and a gasp of pain come from the hallway, she opens the door as the microwave pings to find Maddie stood rubbing her knee. \n\n\"That bloody table!\" She grumbles \"I walk into it every time...I think I might still be a little bit drunk too you know...\" \n\n\"Please tell me you're going to end whatever this is with him.\" Natalie says sympathetically as she pulls Maddie into the room and sits her down at the table \"He's about as decent a human being as bloody Leah!\" She glances over at me and I frown at her. \n\n\"Maybe we should introduce them to each other.\" Maddie mumbles through a mouthful of food. \n\n\"They'd be well suited...\" Natalie agrees, taking her dinner from the microwave and sitting beside her \"although not as well suited as the people they were with...\" \n\nMadison coughs and chokes on her food while I turn bright red and turn my attention back to the microwave. \n\n\"So,\" Natalie continues, completely unabashed, \"what is the plan with Jason?\" \n\n\"I don't know,\" Madison shrugs, her eyes still streaming, \"I know I should end it...but I kind of want to do it in some big, dramatic, public fashion where he looks like the complete tosser he is.\" She pauses and I take the seat across from her \"Then once I've done that maybe I'll get with Cora...\" \n\nShe winks at me and grins, while I look down and blush again. \n\nChapter Nine: \n\nRevelations: \n\nThe night before my final exam. \n\nI was sitting in the kitchen with my notes spread across the table, my head in my hands, fingers rubbing circles on my temple in an attempt to stop the incoming headache, when a quiet voice filtered in from the doorway. \n\n\"Wow...this looks like fun...\" \n\nI look up as Maddie comes in from her run, her face slightly red, a small bead of sweat running down her chest between her breasts. She sweeps her hair back from her face, \n\n\"Want some help?\" She grins. \n\n\"Depends, how much do you know about psychology?\" I ask wearily. "
    ],
    "authorname": 184081,
    "tags": [
        "lesbian",
        "lesbian sex",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/sessions-2"
}