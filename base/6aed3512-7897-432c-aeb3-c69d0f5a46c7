{
    "title": "My Little Ventrue Pt. 05 Ch. 01",
    "pages": [
        "~~Welcome to the world of Vampire: the Requiem~~\n\n~~One week later~~\n\n~~Jack~~\n\nAvery could wait a little while. Everything could wait a little while. He needed a vacation, and god damn it, he deserved it.\n\nHe spent the next week doing one thing: spending more time with the Prince of Dolareido. Every night had included sex, but since he was sleeping at her place now, and on vacation, every night now also included time to chat. Sit around and talk about music and movies and stories and whatnot, was a luxury he realized she probably rarely had with other Kindred. The only vampire she'd get to talk to so easily and frequently was Daniel or Natasha, especially now that Natasha was also staying at the Elysium tower. But he doubted talking to those two was terribly satisfying. With him though, he could see, she wanted to talk more, and more.\n\nNow, spending day after day in bed together, Antoinette had time to chat with him before dusk and after dawn, those twenty or thirty minutes she spent getting dressed and doing her make-up, time they could talk. They could get a lot of talking in when they were around each other for the minutiae of everyday stuff. And when she was upstairs, either higher in the basement, in her research alcoves doing god knows what, or higher again up in the tower, doing Princely things, he spent his time relaxing, reading, listening to music, swimming, and other recreation activities her surprisingly robust underground fortress provided. She still had a dozen enormous rooms down here he hadn't even seen yet. But they could wait. Right now, his mind was on the woman on top of him.\n\nAntoinette sighed, a long, satisfied sigh, and lowered herself back onto him. Softness. Weight. The best place in the world, underneath Antoinette's breasts. She was riding him, milking him, his cum pouring into her insides as she squeezed his length. Her juices coated him, bathed him in the heavenly heat, until his white, thick fluids were flowing back down his length. And as his orgasm turned him into a shivering, relaxed, defeated noodle of a man, Antoinette rested her breasts on his lips, bending over so her nipples grazed along his chin and nose. At least until he opened his mouth, and began to suckle on one of them.\n\nShe shivered, smiled down at him, and set one hand on his head to lightly tease and stroke his buzzed hair while he kissed her swollen, puffy, pink areola.\n\n\"My sweet little Ventrue, and now one of the right hands of the Invictus. I admit, I did not expect this, but I should have. Julias knows of your true accomplishments, and I am sure he would have found a way to reward you for them.\" Slowly, with a teasing twist of her hips, she slid herself up and off of his shaft, and sat upon his pelvis. His softening member dripped of their fluids, warm, inviting him to melt beneath her breasts and into the blankets of her bed.\n\nHis boss knowing about Lucas, Viktor, and Tony was a feather in his cap, that was for sure. Not necessarily a good feather though, more like an albatross feather, since all these fucking insanities kept falling into his lap, and he kept having to claw his way out from under them.\n\n\"I can see that look in your eye, a look of worry.\" She tapped a finger on his forehead, drew lines he couldn't see, and started to caress his head once more. God yes, fingers pushing against the grain of his eternally buzzed hair was euphoric, forcing him to melt and succumb to her touch.\n\nHis lips drifted away from her nipple, and planted kisses along her breast's underside, causing its size to spill over his nose and upper half of his face, hiding his forehead. But, she could still caress his hair, and she did as she offered him quiet little, husky mewls and chuckles, while he planted another kiss, and another along the heavy, soft skin of where her breasts met her ribs.\n\n\"It's a big responsibility,\" he said. \"And I... I'm never comfortable with new things. I like to research things to death before I put my feet in.\"\n\n\"Admirable, but paralyzing. You will forever be more intelligent than others, and yet forever denying yourself the joys others find by trying new things at the whim of the moment. You must learn to be comfortable with being uncomfortable, my love.\" She adjusted her torso angle so his face slipped between her breasts, and she slid back her knees so she could lay on him and bury him with her body. A kiss. Another kiss. She grinned a devil's grin as she pecked him on the nose a few times, all while one of her hands continued to massage his scalp and play with his hair, elbows to the sheets.\n\n\"I think I've heard that expression before.\"\n\n\"No doubt.\"\n\n\"I think the dude was trying to explain the psychological benefits of cold showers.\"\n\nAntoinette shivered and shook her head. \"Non merci. Without the subtle, blissful sting of a hot water, I fear I would never touch a shower again.\"\n\nThe Prince of Dolareido did not like cold showers? Too cute. He laughed, and she caught his lips between a finger and thumb with her free hand.\n\n\"I uh, well we are vampires,\" he said, voice mumbling through her grip on his lips. \"We don't really need to shower.\" No body odor issues, and any grime and build up of crap sort of just fell off as a Kindred slept. Unless they were blushing life, they had no skin oil or anything. Maybe they shed a layer of their skin off as ash at night?\n\nAntoinette slipped her hands down to his, netted her fingers with his, and raised his hands until they were pinned against the sheets by his head, over it. With a warm laugh, she set her lips to his neck, and continued to kiss him, slow, tender, her long white hair tickling over his chin and lips as she gently slid her roaming mouth from one end of the collar bone to the other. Lying on him like this, her breasts squished to his chest and out to the sides, like big pillows. And her feet reached far past his own, her knees along the outside of his shins and pressing his legs together.\n\n\"All Kindred are to now keep a partner with them, whenever moving through areas not directly next to their headquarters,\" she said, nudging her nose into his chin. \"I trust you will move with your fellow right hands mostly?\"\n\n\"Yeah. Maybe Amanda too.\" Take another sneak peek at his mom and sister again, maybe? Last he checked, they were doing a lot better. His mom was exercising a lot, getting back into shape, maybe trying to reboot her life. Good for her, and good for him. A little less guilt on his shoulders.\n\n\"And, it may be to your interest, that I have reports showing the witch Jennifer joining Beatrice and your sire Julias more often.\"\n\n\"Are you spying on everyone?\" he said, smirking up at the ceiling as she brought her lips to his jugular.\n\n\"Of course.\"\n\n\"Understandable.\"\n\n\"And, perhaps more interestingly, I have reports that the three have been seen at Bloodlust on a couple of occasions. To my surprise, the video footage showed your sire having sex with both women, and they each other.\"\n\nWell, damn. He knew there was something going on, considering how much Jen seemed to be on Triss, when he stumbled in on them playing strip poker. He hadn't really thought much of it beyond vamps being vamps though. He chuckled a little as he thought about Julias, caught between Triss and her twin. Same facial shape, same hair, same height, but Triss had the ass, Jen had the breasts.\n\nUgh, breaking women down into their body parts. He was hanging around Jessy too much; cause the job demanded it, not because he wanted to. Damn woman sexually objectified everyone, guys and girls alike, and sometimes Jack found himself getting drawn into her very 'bro' conversations. It was innocent good fun, and Jessy never let it actually affect how she treated people, but still.\n\nWait.\n\n\"Antoinette, you wouldn't be trying to gossip with me about what other people are doing, would you?\"\n\nShe raised her head up and looked down at him, one eye slightly squinted, and a devious little grin on her lips. \"Of course not, darling. I am the Prince of a city of millions. I am above gossip.\"\n\n\"Uh huh.\"\n\n\"I am merely sharing information I think would be of import to my lover, and now an influential member of Kindred society.\" She kissed his forehead again, before she sat up, slid off of him, sat beside him, and caressed his abs with her fingernails. \"And besides, if those three feel comfortable engaging in intercourse in public, then I am afraid they have forfeited their right to my silence.\"\n\n\"Ah, true, very true.\" Her argument was too precious, eloquent, but really a smokescreen for the excuse to gossip. \"Then by all means, my Prince, what else have those three been up to?\"\n\nShe chuckled as she smiled at him, her one hand continuing to trace his muscles, while her other tickled between her breasts before drifting underneath one to caress its underside; purely for his visual benefit, surely. \"On two separate occasions this week, those three have enjoyed relations at Bloodlust. The video footage showed a rather... interesting equilibrium between them. Kissing, each of the three, with each other.\"\n\nHe raised a brow. That was a little weird, actually. He never kissed Antoinette's ghouls, and since Antoinette and he had become lovers, she hadn't kissed them either. It'd be too powerful a gesture for who were ultimately guests in the bed.\n\n\"Can't see myself kissing anyone but you,\" he said, one hand setting on her leg and stroking her quad.\n\n\"And I you, my little Ventrue. But I am glad you are comfortable with sharing a taste of our love with my pets.\" She slid off the bed, walked toward her wardrobe, and of course he watched every second of it. That nice, big round ass swaying as she walked, her long white hair nudging against its curves, and the sides of her breasts visible from behind when she raised her elbows as she combed back her hair with her fingers. So beautiful.\n\nShe was such a unique person. Slim but curvy, buxom and tall, all traits he thought were beautiful and alluring, but they weren't what made these conversations so intriguing, or what made her so unique and interesting. He wanted to know more, dig into her, find out why she thought the way she did, acted the way she did, why he was the sort of man she wanted to be with. It was hard, and made the relationship strangely one-sided in certain ways. All his memories were very much intact, while hers were wisps on wind.\n\nBut, even if they were wisps, subjected to years of fading and alteration, he still wanted to know them.\n\n\"You have any more memories of when you were younger, and... I don't know, discovering all the sexual freedom you had? That majesty discipline is a recipe for orgies.\" They'd just had sex, so of course, he had to ask about sex.\n\nHis words yanked a surprised laugh out of her, and she brought a hand up to her lips to try and disguise it as she opened the wardrobe against the black marble wall, and retrieved a white robe, fluffy and furry.\n\n\"You truly wish to hear such tales? You are a man; I thought perhaps you would find such stories to make you jealous, other men and women with their hands upon me.\"\n\nThe woman had been alone for so long, thanks to her crash-and-burn relationship with her child Tony. To know that he managed to rekindle her desire for love, and better yet, find himself in the best relationship ever? How could he be jealous of a memory? He shrugged at her, rolled onto his side, and watched her as she sat down, and started to brush her hair.\n\n\"Hit me.\"\n\n\"Then, I will need a moment to ponder. Digging through the haze is difficult, even for a dragon such as I.\" She brushed the long waves of white over her shoulders, again and again, flowing strands reaching down and down the stool she sat on, in front of a rather grandiose mirror with a black, curving frame. It was hard for elders to piece together their older memories, and for one as old as her, it must have been like playing archaeologist in the dark. \"Once... I could not have reached my elders year by then, but I was strong for my age, as you are, and gifted in the ways of majesty. I owned a castle, I believe, something that overlooked a cliff's edge and faced the ocean. I remember... a young woman, perhaps eighteen years of age. A sickly creature, and one that had scaled my walls, to hunt for food to steal from me.\n\n\"She found my inner sanctum, where I drank, where I laid with my many servants and meals. Upon realizing she was surrounded by a dozen men, and that I was a vampire, the queen of the castle, and lord of the estate, she ran. But my servants captured her, and brought her before me.\" She stopped combing her hair, and stared into the mirror, as if entranced by a campfire. \"She was short, with red hair and a splatter of freckles across the nose. And her eyes, green like yours, pierced my soul. She was afraid, and yet, determined. She fought and fought, despite the frailty of her body and need for food.\n\n\"I brought her food. Water, bread, meat, fruit and vegetables, that which I fed my finest servants. I, naked and sitting in my throne, told her to sit next to me, and eat of the dish held before her by one of my thralls. And as she did, devouring the food with terrible fervor, I asked for her name.\" She lifted the brush in front of her, but invisible strings trapped it, forcing it back down to the mirror's desk as she stared into it. \"For the life of me, I cannot remember it. But, I can remember her voice, a charming, squeaky little voice. I remember the sight of her, her fear of me, her panic, but also her euphoria when given a meal. And as she ate enough food for three, I motioned for my harem to continue their love making. Soft fabrics, black silk upon furs, mountains of blankets, and wine, endless wine. Over a dozen men, and over a dozen women, with their hands and lips upon each other's bodies. In the center of the room, three men indulged themselves with one woman, filling her in every way, and drawing endless moans from her white-coated body.\n\n\"The young intruder asked if she could stay. If it was the food, a roof over her head, or the sexuality on display that seduced her, I was not sure. I looked at her, her meal gone, her eyes locked onto the bliss before her, and I smiled. She was the first kine I had ever enthralled, without breaking her mind with majesty or forcing a taste of my blood upon her. Over the next two weeks, she never left my castle, and followed me everywhere. Questions, she had so many questions... I cannot recall them. But I can remember the pitch of her mouse-like voice, and the smell of her as she bathed. The first few times I had joined my harem, and let them shower me in pleasure, she had watched on, terrified to say anything or join in. And yet, she was hypnotized by the sight of flesh. The small woman could not look away as, while one woman kissed and filled my sex with fingers, another woman massaged my breasts, and each male thrall in my employ... at least twenty, each two at a time, coated my breasts in their seed.\n\n\"Perhaps I broke her with the delights I showed. Perhaps her old life was too great a burden to bear, or pain to experience. But, with her eyes gazing upon my naked body, she asked me if she could stay with me, for forever. I let her taste of my blood, my will and strength infused into it, and invited her into my bed before the dawn. I taught her young body of pleasure she had never known, the same night she became my ghoul. I had had ghouls before, I believe... but, never had I... such a relationship with one. Ghouls before her were tools. This ghoul, was both my pet, and my friend.\n\n\"The next night, she was the center of attention. Lean, fit, strong, and now nourished, she sat before me, and lay upon the black silk of my inner sanctum as each thrall spent time pleasuring her, helped her drink wine, the women filling her with fingers, suckling her sex with their lips, and massaging her small breasts, as each man covered her in white. I knew she had fantasized about the experience after watching me, and I let her drown in the fantasy, in sex and sin. And when I thought she was spent, she held up her hands for me. I came to her, straddled her, pressed my breasts upon her cum-soaked chest, and kissed her. I can remember the taste of semen on her lips, from when some of the men had slipped their cocks into her mouth at various points, men she had happily pleasured to orgasm. I can remember the feel of her small body clenching in another orgasm, as I fingered her insides, while the women at my service massaged and caressed her limbs.\n\n\"... I... cannot remember what happened to her, Jack. Of her own choice, she had become my ghoul, joined me in many years of decadence and lust, but also, served as a willing ear and joyful voice. A companion.\"\n\nJack gulped, and blinked a few times as he stared at the woman in front of the mirror. The image she painted was a pretty awesome one, erotically, but also, moving. Girl stumbles into a vampire's home, and instead of being turned into a meal, finds a friend and a new life. On top of that, finds a new taste in extreme eroticism.\n\nAnd Antoinette couldn't remember her name, or what happened to her. God that must have sucked.\n\n\"It sounds like a fairytale.\" He got up, walked over to her, stood behind her, and started brushing her hair as he smiled at her in the mirror. \n\nShe returned the grin, and got comfy in her stool as she watched him brush her hair for her. \"I was young. Indulging in fairy tales, both grim and enchanting, is a guilty pleasure for many Kindred in their ancilla years. The power to make your desires become reality enters your grasp, and suddenly, what were once silly fantasies become solid, obtainable.\"\n\n\"I have to admit, if I could do it, I'd be pretty tempted to be having orgies every night too.\"\n\nShe rolled her eyes, and leaned in closer to the mirror as she started adjusting her makeup, reapplying foundation or washing it off first with a small washcloth depending on where she deemed it necessary. Or at least, that's what he figured she was doing. The art of makeup was well beyond him. Mascara, eyeliner, lipstick, blush, concealer, it was like watching a crazy genius chemist juggling two hundred chemicals at once; and she had two hundred things on the desk, little bottles and brushes and such.\n\nAt least as a vampire, the skin was easier to work with and manage, according to her. Without it, he could see the subtle lines of a thirty-year-old woman, beautiful and real, but Antoinette liked covering them. Putting on her mask, she said. Julias said everyone had a mask, and with women, it just happened to include an actual one.\n\n\"As a Ventrue, your abilities capable of manipulating minds are a little more direct, my love. Bending the will of an individual, or a small group, is where your talents are best served. Daeva are the masters of majesty, to enthrall entire concerts of people, have them eating out of our hands and begging for our attention.\"\n\n\"I've seen Julias dominate some people, and have them enthralled like they were under majesty.\"\n\n\"Your sire is quite skilled, and has found ways to manipulate the minds of kine in subtle ways, to mimic majesty.\"\n\nMaybe he could learn to do that some day, handle the discipline dominate with more finesse and accuracy, instead of the brutal, overpowering hammer he felt it as.\n\n\"You ever wish you could see her again?\" he said. \"Your ghoul.\"\n\n\"I am not sure. Much has changed. And I am sure Ashley and Julee would be jealous, when... when... she, would inevitably recount the tales of our youth, of the swaths of men and women we'd share our bed with. They would fear her taking me away from them.\"\n\n\"I don't think they'd be that jealous. And, I have to admit, imagining you and a young woman, in the center of a giant orgy, is a pretty hot image. I prefer what we have now, but just, in my mind, the mental image? Scandalous.\" He came in closer, leaned in, and set his lips against the back of her head to kiss her hair as he put the brush down. Arms free, they drifted down over her shoulders, and down the open chest of her robe. She only had it done loosely with its belt, so pulling the chest open and down to expose her breasts was easy. She didn't stop him either, chuckling as she continued to put on her makeup, while he started to caress her breasts again.",
        "Sometimes he wondered if Antoinette had as large a sex drive as him. He spent at least half the night thinking about being between her thighs or breasts, and as he grew more comfortable with his vampire body, he was finding himself able to cum two or three times every session easily. Sometimes four. And now that he was sleeping in her tower, it was him often initiating sex. Bed time? He started kissing her breasts, and a minute later, had his cock inside her. Wake up time? He hugged her from behind, and started fingering her. A moment between her meetings in the middle of the night? Perfect time to get his head between her legs.\n\nA tiny little voice in his head told him he might have been starting to annoy her with the constant sex, like a needy, hungry kitten. But then she told him this story, a long tale, detailing the sexual nature of Antoinette's ancilla years. She made his constant seeking of sex seem tame in comparison.\n\n\"You do not understand the realities of such things, little Ventrue. Forty bodies in the same room? Legs, arms, heat, the body odor and other natural bodily functions of the living, they all provide frustrating nuance to organizing an orgy.\"\n\n\"Yeah, but, imagining you, and these,\" he squeezed her breasts softly, so they spilled over his fingers, \"rubbing on your friend's body, after a dozen guys came on her?\" He shivered with the image, and shivered again as he started to gently slide his hands down Antoinette's breasts to cup their undersides near her ribs, before drawing them up again, so her nipples slid back along his fingers. And then back and forth again, all while Antoinette continued to prepare herself for the night. Maybe he could cum on Ashley or Julee's breasts a couple times, and see if Antoinette would remake the image in the story? He smiled at the thought.\n\nTo fondle and massage his girlfriend's breasts while she did her makeup, was a strange fantasy he didn't know he had. Something about the way she was perfectly comfortable with his touch, and perfectly comfortable to let him watch her in the mirror as she did her makeup, was both comforting and arousing. Intimacy made manifest, maybe? Whatever it was, it made him almost giddy as he leaned in closer, set his chin on her shoulder, and watched her touch up her mascara as he fondled her tits.\n\n\"Perhaps I should buy some pillows made to feel like breasts? There are materials that simulate the feeling decently well,\" she said.\n\n\"No no, that's not the same! These are attached to the most amazing woman ever.\"\n\n\"Yes, I suppose they are.\" With a long, playful sigh, she got up, and walked him back to the bed. \"Very well, you may indulge yourself upon them again, little rascal. Quickly now, I must leave in ten minutes.\"\n\nTen-minute quick tit fuck? God yes.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\nEverything changed, now that the hunters had exposed themselves.\n\nAntoinette warned her that, now that Natasha would be sleeping in her tower, she would also be running into Jack far more often, since he too would be sleeping in her tower. Nothing wrong with that, being friends with Jack and all. The Prince had also warned her that, to celebrate Jack's new sleeping arrangements, and Jack's safe return, Antoinette would be making love to her 'little Ventrue' on a frequent basis. Natasha was invited to watch, whenever she wanted, if she found the two of them having sex outside the Prince's master bedroom. Maybe a bit too awkward for Natasha.\n\nBut for all the sex, Antoinette wasn't relaxing. If anything, the Prince was upset with herself for letting the city get as dangerous as it had become. In a single year, the balance had been upset in such massive, weird ways, that no one could have possibly expected her to be able to manage it all. The Prince expected it of herself though, a perfectionist to her core. Natasha was glad to be working for her again, especially now that Tash was an older, more mature Kindred, than when she was the freshly embraced childe of the sheriff. Back then the Prince scared her, and her Ordo Dracul experiments had terrified her.\n\nThe Prince had now increased Tash's goals. Natasha was still to seek knowledge about the Begotten and their weaknesses, and also join Antoinette in her experiments involving reaching to the 'other side'. She was, as of now, also to help Daniel with investigating both the hunters, and the disturbance Clara warned Antoinette about, that someone was fucking with 'the other side'. Lot of things, a lot lot lot of things. She had her work cut out for her.\n\nSome days would be spent dealing with her collection of occult objects, testing them against the Prince's strange tools, and seeing which items triggered effects. Nightmare fuel, seeing ghostly after images. But, also, they were damn fascinating, and Natasha could completely understand the Prince's infatuation with them. And Safe, a creature from another realm, summoned? Fascinating didn't begin to describe that.\n\nShe walked down the stairs of Antoinette's tower, its inner depths, and made for her new bedroom. Tomorrow night would be a night for dealing with those occult things, and she both shivered and smiled in anticipation. Would they see a memory, a horrible memory, a murder from the past, echoed before them? Or would they try and see if they could summon a new spirit from the other side? They\u2014\n\nMoans. Natasha froze, and looked over at the hallway in the black marble beside her. Her bedroom was down there, but just past the hallway, only ten feet in front of her, was another opening in the walls of shiny black. One of Antoinette's many, many living rooms, filled with couches, fancy tables, some with chandeliers, others with actual working fountains, and others with musical instruments and acoustic panels, for Antoinette to play in. The room she was hearing the moans from was one with a dragon fountain in the back, and several backless couches and short tables. A great place for sitting around and chatting.\n\nFrom the sounds, Antoinette was having sex. Julee and Ashley were still out of commission, far as Natasha knew, from a recent feeding for Jack, which meant it was only the two vampires in the room. Natasha smiled to herself, and moved down the hallway toward her bedroom.\n\nAnd then walked backward a few steps, and put her back to the wall that led toward the guilty entryway, the one making noises. A little peek? Just a little one? Antoinette said it'd be fine, and there was a good chance Antoinette knew she was just around the corner anyway; moans were still going though, so even if she knew, she wasn't stopping.\n\nCaught between a grin and shivering parted lips, she sneaked her way toward the entryway, and inched her head out just enough to get one eye a view of the room.\n\nThe lighting was low, all the LEDs set to gently pulse on a soft amber, as if a setting sun was gently rolling past the clouds. The dragon fountain in the back of the large room had its eyes turned on as well, LED eyes, and they glowed red. She also had the LEDs in the actual fountain pool around the dragon set to red, so their red light shined up against the black marble cracked with white lightning. So beautiful, so utterly beautiful.\n\nJack was on one of the center, backless couches, lying down, legs dangling off the couch at the knee. His head was to Natasha, legs away from her, so unless he leaned his head back really far, he wouldn't be able to see her. Antoinette, on the other hand, was sitting on the boy's waist\u2014no, wait, sitting on his pelvis, and she was facing him, and Natasha. She was having sex with Jack, had Jack inside her, and she was looking down at him from her perch on top of him.\n\nThe Prince took a quick glance at Natasha, and offered her a small, welcoming smile. She didn't have to say it, she didn't mind if Natasha wanted to watch. And Natasha didn't have a choice in the matter anymore, as her body froze, unable to move, eyes locked onto the sight of the Prince, nude, and her gentle, rocking motion on Jack's body.\n\nIt was one thing to see Antoinette wearing skimpy outfits that showed off her body to the point nothing was left to the imagination, and another to actually see her naked. How did a woman with a slim waist have such wide hips and such enormous breasts? It defied logic! And, it was hypnotizing, bewitching Natasha, paralyzing her.\n\nIt took Natasha a moment to realize there was something on Antoinette's breasts. Some liquid, thick, and\u2014cum, her breasts were covered in it. Natasha raised a hand to her lip, and nibbled on her finger as she watched the curvy woman gently ride Jack, her hands pressing down against the boy's chest, and using the sides of her arms to press her cum-soaked breasts together.\n\nAntoinette wasn't just fucking Jack, she was showing off! Just like Jessy would, Antoinette sat up straight, lifted her hands, and raised them up to her hair. Still rocking her hips back and forth, the tall vixen combed her hair back with her fingers, elbows up, chest jutting out and breasts lightly jiggling with her motions. So huge, so utterly huge, they turned into heavy teardrops that squished and spread against her chest and ribs, but pulled up slightly by her raised arms. Fashion model pose, and she held it with a smile as she fucked her love.\n\nWhen Jessy did it, it seemed silly and obnoxious. When Antoinette did it, it seemed glorious and awe inspiring.\n\nJack raised his hands from her legs where her knees were snug against his sides, caressed her hips, caressed her waist, and brought his hands up to her breasts. But, instead of grabbing them, squeezing, all the things Natasha expected of young men who had no sense of delicacy, Jack's touch was tender, loving, and his fingertips found her large, swollen nipples. They traced lines through his cum, spreading it along the outside and underside of each breast, which had Natasha's whole body singing with excitement. A boy, young man, running his fingers through his own cum, on the woman's skin? Hot. Hot hot.\n\nWhen Jack's fingers found Antoinette's nipples again, and began to caress them, Antoinette moaned. Antoinette, moaning, with a hint of a whimper and mewl. The other moans before had been quiet, little things, and only now did Natasha realize they were all Jack's. Antoinette's moans were also subtle, but god damn they were enticing, majestic, royal. Showing off in so many ways, just like Jessy did, but she was so much better at it.\n\nMaybe... maybe she should try that too? A little? Natasha struggled to picture herself performing such an erotic display with her boyfriends, but the more she watched, the more she wanted to try.\n\nJack's cum faded away, like all Kindred fluids did, and once it was gone, Antoinette lowered her hands, took his, netted their fingers together, and pinned them down above his head into the couch. So much taller than Jack, pinning his hands down like that caused her heavy breasts to pull down and sway over his face. She lowered herself a little further, until one of them was set on the boy's chin and lips, its size spilling over onto his neck and shoulder. And, once the boy opened his mouth and began to suckle on her, her moans returned, a little louder than before. She really loved having her nipples kissed and licked.\n\nAntoinette offered Natasha occasional glances, tiny things, only enough to let Natasha know Antoinette knew she was still watching. The Prince wasn't showing off for her though, she was showing off for Jack; and showing off agreed with her. She was rocking her body back and forth on Jack's body, smiling down at her little lover like he was the most precious thing in the world to her, and she was loving it.\n\nShe came. Her moans came to a stop, and her rocking motion slowed down as well. Eyes half-closed, she still managed to glance Natasha's way, and smiled as she milked her own orgasm. Jack's suckling seemed to grow gentler, but it was hard to tell from where Natasha was watching. They must have, as his lips drifted away from her nipple, and started to plant kisses along the inner contours of Antoinette's other breast. Hands pinned, he only had so much access to move, but he worked with what he had, and kissed a little in one spot, then another, and then another, all avoiding the Prince's nipples as she came. Too sensitive, maybe?\n\nOk, you just watched your boss, and the Prince of Dolareido, enjoy an orgasm from having her nipple suckled during some rather romantic, slow cowgirl action. That's enough barrier breaking for tonight. Natasha turned to slip away, but, for some reason, raised a hand and offered Antoinette a tiny finger wave as well.\n\nAntoinette pouted. Oh good god she pouted, an actual pout. Antoinette did not pout. The Prince of Dolareido did not pout! But, she offered Tash a small pout, before she slipped in a sly, quick wink, and looked back down at her lover. She started rocking again, faster this time. Queue for Tash to leave before she got hypnotized again.\n\nThe little Mekhet forced herself away from the beautiful display, and went to her room.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe next night, Natasha was already in the primary research room when Antoinette came to join her. They were going to spend the next eight-ish hours researching the occult, and seeing what sort of things Antoinette's machine could summon. That was the plan anyway, but as Antoinette stepped in, all Natasha could think about was the beautiful woman, naked and having marvelous sex with her love Jack. If Tash could paint, she'd be painting that scene right now.\n\n\"I um... I...,\" she said. Stuttered. It was hard to look Antoinette in the eye anymore, and it wasn't easy to begin with. \"I saw you.\"\n\n\"Of course, my dear. You may have noticed I saw you as well.\" She chuckled, hand raised to touch her grin with her fingertip. \"Did you enjoy watching Jack and I make love?\"\n\nMake love, oh! It was so romantic, it made her tiny dead heart want to flutter. And then slap herself for being so silly.\n\n\"Y-You're really comfortable, being watched... aren't you?\"\n\n\"Of course. Dear, when I was your age, to indulge in feasts of a dozen bodies at once, sex and blood and semen, with more kine besides to watch, was a normal activity. I am afraid such memories are blurred, most but a haze, a fog I cannot grasp no matter how hard I try. But I know they are there.\" She slid into a chair at the large table covered in occult goods, and pulled over her laptop.\n\n\"Um, is... is it a D-Daeva thing?\" Mekhet were secretive by nature. Daeva were passionate by nature. It generally meant that Mekhet were anti-social and that Daeva were very social, but not always.\n\n\"Perhaps. It is certainly easier for Daeva to indulge in erotic play with kine. But to say that to find joy in being watched, as others admire you, your movement, your sounds, your beauty, as you milk another of his bliss?\" The woman leaned forward with a slow, almost seductive motion, set her elbows on the table, and winked at her. \"Do you not enjoy the eyes of your wolves?\"\n\n\"I uh, I can't really tell? They're normally all over me, and p-pinning down, and before I know it, I have things... inside me. I try to see, but they... they're... they're really good, and my eyes close and I can't stop...\" Can't stop cumming.\n\n\"I am sure they would let you have a little more control, Natasha, a little more time to indulge in their gaze, if you ask them.\"\n\n\"I know, I-I just... not sure I could... handle being the center of attention like that.\"\n\nThe tall Daeva chuckled, a warm and lustrous sound, before she leaned back, opened her laptop, and starting clicking and type. They'd just imported a new piece that looked like it was from ancient Mesopotamia, some sort of necklace. The string on it should have decomposed by now, but it hadn't, and some weird, small, smooth black rocks were dangling from it, looped in string. Metallurgical analysis came up with nothing.\n\n\"... H... How, um, would... would you go about... b-being the center of attention, like that?\"\n\n\"My dear Natasha, are you interested to know the ways in which I seduce my little Ventrue?\"\n\n\"... y-yes.\" Natasha pushed her laptop aside, and nodded as matter-of-factly as she could, considering the topic. But the topic was far too silly for her to stop grinning, like they were exchanging naughty secrets. Which they kind of were, except the only one who still thought of these things as secrets was Natasha.\n\n\"As much as I could offer suggestions for clothes, or ways to flirt, ways to drive the men wild and turn them into helpless pups in the palm of your hand, it truly only takes a word. I ask my love to sit for me... which, I suppose, would be an apt request for your two canine bed fellows.\" The Daeva smiled, bordered on a chuckle, and continued to type on the laptop. But her attention was mostly on Natasha now, with only the occasional glance at the screen. Natasha couldn't see what she was working on, sitting on the opposite side of the table, but it was probably the same information dumps about the Mesopotamia era that Natasha was looking at.\n\nBut sex was more interesting!\n\n\"You think if I t-t-tell them to sit, they'll... sit?\"\n\n\"Of course.\"\n\n\"B-But there's two of them! And they're... so much stronger than me.\"\n\n\"Far be it from me to encourage abuse of the genders, sweet Natasha, but you are a woman, and there are... perks, to being a woman in a sexual relationship with men.\"\n\n\"P-Perks?\"\n\n\"Ben oui. A little word, a petite smile, a quiet hush, and a devious grin, is all it takes to turn most men into love slaves, Miss Vola. Even older men, familiar with the back and forth of sexual energies, the game of flirtation, will find themselves drawn toward a woman with hungry eyes and a knowing smile. Simply letting the two boys know that you wish to have sex with them will have them mad with desire, but doing it in a more controlled, tempered, playful fashion, will have them eating out of your hand.\"\n\nNatasha wasn't sure if Antoinette kept slipping in references that could be used for men or dogs on purpose, but it was making her giggle anyway.\n\n\"H-How would I\u2014\"\n\n\"Just say the word, to sit, and then ask \u2014 or perhaps tell \u2014 them to hold still. Smile as you instruct them, bat your eyelashes, show them bits of your body, expose your breasts, your sex, hypnotize them, and then order them.\"\n\n\"... th-that's all?\"\n\n\"Mmhmm. The more you practice, the better you will become at seduction. Though with you, I get the impression this is purely an experiment, and that more often than not, you would enjoy the usual way in which you copulate.\"\n\nNatasha squirmed as she smiled, and tried to look like she was reading more about Mesopotamia. But, she wasn't.\n\n\"I d-do... really like when they... they grab my wrists, and hold me down. They... they squish me, between them. Unt-t-til I just... vanish between their bodies. And they're both... b-both inside me, trying to get d-deeper, even though they're already in as d... d-deep they can get.\"\n\nAntoinette raised a brow, interest on her face. Good, because it was taking every bit of courage Natasha had to talk about this sort of stuff, especially with a woman she'd just seen naked fucking her own lover.\n\n\"That sounds deliciously primal, little Vola.\"\n\n\"Y-Yeah! That's a good word for it. Primal. They're... it's almost l-like they're desperate, you know? They start... grunting, growling sometimes, and they're both pressed against me, and... and they kiss me, and bite me a little sometimes, and...\" She lowered her eyes as she let her mind drift to the thoughts of the two beasts, and how overpowering their sex could get sometimes. \"I, I um... not sure if I can... control that.\"\n\n\"Do not feel as if you must, Vola. It is purely for fun, after all. If you enjoy what you do, continue to do it. It sounds terribly delicious.\" She sighed as she too let her mind wander, eyes looking up giving her away. Envisioning herself with two werewolves, or envisioning Natasha with them? \"I must admit, now that you have seen myself make love to my little Jack, I would not mind seeing yourself between the two beasts.\"",
        "\"Y-You would!?\"\n\n\"But of course. You are a very beautiful, tiny creature, Natasha. It must be a deeply exciting bout of sex, to have both of those beasts penetrating you. One for your front, the other for your delicious little derriere? And, from the way you have described it, it sounds like you experience orgasm many times. Non?\"\n\n\"I... I um... y-yeah. B-But I don't think they'd agree! To being watched, I mean.\"\n\n\"Alas, you are probably correct. A shame.\"\n\nThey both nodded, and resumed their work. Or at least, Antoinette did. Natasha tried, but after seeing Antoinette naked and having some beautiful, romantic sex with Jack, she got thinking about Arturo and Matthew in a different light. She liked hanging out with them. They made her laugh, they made her smile, they made her try new things, made her feel exciting. But, romance? How would that work with two boyfriends?\n\nAnd she did want romance. She wanted those little tinglies, the heart flutters, the excitement of being near the person she loved. Intimacy. She wanted someone she could confess her secrets to, and someone who would confess theirs. She wanted someone she could trust with her back, and her heart.\n\n\"... hey, P-Prince?\"\n\n\"Yes Vola?\"\n\n\"You love Jack, r-right?\"\n\n\"Oui, beaucoup.\"\n\n\"And... Ashley and Julee?\"\n\nThe Prince looked at her, eyes steady, fingers no longer typing, and took a long, gentle sigh. She knew where the conversation was going, she must have.\n\n\"They are my friends and my pets, and I love them dearly, but I do not love them romantically.\"\n\n\"... I... I wonder sometimes, about Art and Matt-t. I... w-we get along great, but I... d-d-don't know about... romance.\"\n\n\"I am afraid you walk in strange waters, Vola. Many cultures have embraced polygamy in varying fashions. Naturally most of these were in the form of polygyny, but there have been some to embrace polyandry. Were Arturo and Matthew brothers, I would call your relationship not so unusual, considering history.\"\n\nNatasha giggled and shook her head. \"N-No, they're not brothers, but they might as well be. They know each other v-v-very well, and, um, share everything.\"\n\n\"Dolareido is nothing if not open minded about sexuality, my dear Vola, but I am afraid it would be difficult to find an example of such a relationship leading to romance.\" The ancient Daeva tapped a finger on her chin, and slowly built a grin with each tap as she looked up, and then at Natasha. \"I do suggest you not worry about it, my dear. If you enjoy being with these men, then enjoy it. I can understand the desire for romance, but if you seek it, it will never come. Love is terribly afraid of being in the spotlight, and if you shine a light on it, it will flee, or die.\"\n\n\"... d-don't look for it?\"\n\n\"Non.\"\n\n\"B-But, how do you find it then?\"\n\n\"Love is found through the self first, creating a garden for your soul, an inviting place that you care for and enjoy, with gates open. As you go out into the world, interact with the world, and share with others the garden of your soul, you may find another who will do more than pass by to admire its contents. They may stay. They may offer to combine gardens... perhaps I should have chosen a better metaphor.\" Chuckling, she looked back down at her laptop, and got back to work, as if the topic was one she was all too practiced with, and could talk about it while she looked at Mesopotamian history. \"First the self must be a place that you enjoy, and a place you nurture. Only then will you enjoy sharing it with others, and only then will love find you, when someone else decides, of their own desire and to your joy, to stay.\"\n\nIt wasn't a bad metaphor. Hell it was a good metaphor. Natasha smiled as she watched Antoinette working, and put her eyes back on the screen too. It wasn't new advice, she'd heard it before; but she didn't trust the internet at even the best of times. To hear Antoinette say it though, put some weight into the philosophy. You need to love yourself, take care of yourself, and be happy with yourself first. Then, go out into the world, interact with it, and with time, you'll meet someone. The key little bit there Antoinette had glossed over, that Natasha was terrified about, was the open gates part. You had to open your gates.\n\nNo Mekhet opened their gates easily. Arturo and Matthew had forced their way through hers, and that was just the front gate. There were many gates! She had her cute little garden she liked, but it was guarded by a fortress.\n\nStep one then, was to try and be a little more open with Arturo and Matthew. If they liked her garden, all the better. If they didn't, well, she was thankful for the enjoyable, meaningful time they'd shared. Or at least, that's what she hoped she'd feel. She'd probably feel heartbroken. And being afraid of that, made her close her gates. Arg, vicious cycle!\n\nDeal with it later, later. Antoinette was an amazing boss for these sorts of topics, but unlike Natasha, she had the ability to control her mind and switch gears quickly. Focus Tash, focus.\n\n\"I still haven't b-been able to... to think of anything, or f-f-find anyting, about Ganesha, that could be useful.\"\n\n\"Summarize, s'il vous plait.\"\n\n\"Um, Ganesha is the... a deity in the Hindu p... p-pantheon. M-Many groups worship him. He is usually revered as... as a deity of wisdom, science, and art. And, um, also worshiped as a remover of obstacles.\"\n\n\"Yes, but that is Ganesha, a deity in the Hindu pantheon, as you said. Azamel is not Ganesha. She is a Begotten, a monster, a literal nightmare incarnate.\"\n\n\"I'm not sure how t-t-to use that information though.\" It's not like she could pop open a Wiki article about nightmare versions of ancient deities.\n\n\"Such is the mystery of the Begotten. Where do they come from, these horrors of the dream?\"\n\n\"Fiona says it's... that it's not the spirit world.\" She looked over her shoulder to the large symbol on the floor. It was still an unnerving concept, that spirits existed. Safe had been the most adorable thing ever, but they hadn't managed to summon anything like that since. A few wisps had come through, colorful things, glowing like big fireflies, and some other entities with slightly more defined shapes, but nothing as profound as Safe. \"Begotten, and their... h-horrors, come from the dream world.\"\n\n\"It is both fascinating and unnerving, that there have been humans throughout the ages that have both spoken of a higher existence that can be touched upon by the dreaming, but also, that there are dangers, lurking outside the walls of our realm. Entities beyond imagining, beyond simple definitions, beyond the limitations of matter or dimensions.\"\n\nFascinating was most definitely not the word Natasha would use to describe such entities. But, that did give her some clues.\n\n\"Kine, and... and Kindred too, I suppose, since we all dream, they t-touch the dream realm?\"\n\n\"So it would appear. Or perhaps, only some do. Mystery upon mysteries.\" With a long sigh, Antoinette got up, took her interface tablet from the table, and tapped on it a few times. Soon the room was buried in the blue light of the strange chandelier, and Antoinette set the Mesopotamian necklace upon the room's center, in the giant symbol marked on the floor. \"Any predictions?\"\n\n\"About the necklace? Um... n-no, sorry.\"\n\n\"And about nightmares?\"\n\n\"I... I... I should ask Fiona.\"\n\n\"Be careful with her, Vola. She may be a sweet, innocent creature on the outside, but you and I both know a monster rests within.\"\n\nShe nodded, got up, and walked over to stand beside Antoinette. On queue, the Prince lowered the device so Natasha could see through it, and the two of them could watch through the amber screen to observe madness unfurl. But it would take time.\n\n\"H-Have you asked Jack?\" Natasha said.\n\n\"I do my best to not speak of city matters when with my love.\"\n\n\"I understand... b-but, you're both Kindred, and you're the P-P-Prince, and... and with these hunters...\"\n\nAntoinette lowered the device, and looked down at her, frown on her lips. \"Speaking of this Angela and Jeremiah with my love is not how I wish to spend our time.\"\n\nPissing off her boss was a bad idea. Pissing off the Prince of Dolareido was a bad idea. But it needed to be said.\n\n\"You... you c-can't completely separate them, your roles and... your love life, your romance.\" \n\n\"So you say. I have tried to mingle love with work before, Miss Vola. Tony was the result.\"\n\n\"B-But... but that's not the same. You're not... trying t-to outwit each other, or... I d-don't know, I think... even though you're not in the same covenant, these problems threaten us all. And m-maybe, Jack will know something about B-Begotten, more than me.\"\n\n\"... I will consider your words, Vola. You speak true, and I fight against inevitability, but I would fight against it for as long as I can. You though, perhaps you could ask Jack of the Begotten? Do not feel you should coddle my love because of his connection to me. As you said, these threats are for us all. In fact...\" Antoinette lowered the device completely, turned to face her, and put her free hand on her shoulder. So tall. \"My dear Vola, I am ordering you to not tell me which questions you will ask of Jack. Please provide me with all information pertinent, information that you may gleam and learn from Jack, but I do not want you to let me prevent you from doing your job. Understood?\"\n\n\"... understood,\" Natasha said.\n\nAsking her subordinate to pull some information out of her lover, and not let her know about the specifics, to avoid her interference, was an interesting approach. Very indirect, very complicated. Very elder.\n\nShe needed to learn about Begotten, to learn about ways to defeat them. Fiona had information, and Jack may know something from Fiona. Or Tash could ask her herself. Everyone liked Fiona, her included, but they needed information. Tash also needed to find information about the hunters, but they refused to expose themselves; almost two weeks since their attack on Jack and no one had found any evidence of them anywhere. Tash also needed to look into the warning Clara gave Antoinette, about someone doing... something... to something. And that was going swimmingly! Ugh.\n\nBut for the moment, they were going to spend some time pursuing the secrets of the universe. Natasha had laughed when Antoinette had said those words, but the Prince had raised a brow at her, as if the laughter were unwarranted. And it was, the more they touched the edge of what any sane person would consider to be normal. Antoinette said it was both important to her personally, and to her role as a dragon. The Ordo Dracul was a world Natasha had not yet touched, except with limited conversations with the Prince or Daniel. What sort of figures, leaders, subordinates, and fellow practitioners existed out in the world? What sort of secret sciences and arts did they pursue? Maybe she'd met some someday.\n\nThe two looked back at the device, but still nothing came, nothing showed itself, no blue ghostly images danced or died in the amber screen.\n\n\"... surprising,\" the Prince said.\n\nTash nodded, and peeked around the screen at the symbol itself. Not that she could ever see ephemera with her naked eyes, but she knew it was there, the Prince had proven it a dozen times over with the ghostly images she'd shown her. Still, no such after-images of death or love or trauma or whatnot appeared before them.\n\nAntoinette switched the program to something else, something called Essence Resonance. And, nodding to herself, she set it to level: light.\n\n\"You think, um, the sp-p-pirits will be attracted to it?\"\n\n\"The resonance will use the properties of this Wyrmn's Nest to... create, in a way, essence that mirrors the resonance of the necklace.\" Another hint of its power. Natasha appreciated it, considering how few she shared.\n\n\"Sounds like l-light, how surfaces reflect back light as a color.\"\n\n\"Similar, yes. Now, let us watch.\" The Prince nodded, and then handed her the device. \"You may watch this time, and see if anything crosses the barrier.\"\n\nOh yes! Natasha took it with a smile, and raised it up as she switched the device back to the previous program, the amber lens. The first time they had used this, Antoinette had wanted to keep the summoning of something from across the Gauntlet a surprise. A success, considering the creatures Tash's necklace had summoned, and the eventual spirit Safe. To have the emotion of the necklace distilled into something so artful, beautiful, meaningful, had been astounding. What else could they summon? She stared on at the device, its amber screen, and watched the glowing white dot that sat upon the symbol on the floor, only visible through the screen's alien science.\n\nSomething! They could summon something! Natasha squeaked, and pointed at the device as blue swirls started to appear in the screen. If the glowing white was a hole, a cut, something that penetrated the wall between their worlds, the blue mist and rolling waves of dense fog that leaked from it, was something on the other side coming their way. The process wasn't instantaneous; whatever was crossing the Gauntlet, it took a bit for them to find their way here, and for them to cross the mysterious barrier.\n\nShe really had to ask Arturo and Matthew about it, the barrier, about the spirit world. It seemed so beautiful from this side. How bad could it be? Well, she wasn't so stupid or naive to think it had to be pretty and nice, just because those were the sorts of things she and the Prince managed to summon, but\u2014\n\nA black tendril slipped out of the hole. Natasha gulped, and stepped back as she lowered the device. Without it, she couldn't see the blue swirling energies, or the strange, white, glowing cut in reality that allowed things to come through. But she could see the thing, the black, squirming, wriggling thing, force its way into their realm. Like seeing a worm push up through dirt, something ebony, inky, like slime but solid, continued to crawl from the floating space, until it fell to the floor and sat upon the center of the symbol.\n\nNatasha took another step back. This was most definitely not Safe, or safe for that matter. Antoinette took a step forward on the other hand, and knelt down to look at the strange thing. A squid? It kind of looked like one, but as Natasha stared on, it started to float upward, its many tendrils leading its direction instead of following behind it. When it turned to face her with its tendrils, she squeaked, and almost dropped the heavy tablet.\n\nIt had an eye, on its main body, between all the tendrils. Ew.\n\n\"What manner of spirit are you?\" Antoinette said.\n\nIt didn't respond. It did blink though, dark eyelid coming down over the large eye that sat between the dozen tentacles. The eye itself was perfectly circular, and the eyelid opened far too wide, so the whole of its shape was exposed. White eye, with a gray iris and black pupil. It had no mouth, even when Natasha stepped around to check behind it, on its main body. The main body was very bulbous too, and the skin bumpy, a bit shiny, and it looked kind of slimy. Far too much in common with a squid for her to want to touch it.\n\n\"M-Maybe it can't speak?\" she said. \"I, um, I've heard the Uratha\u2014\"\n\n\"Uratha.\" A wriggling voice of quiet slorps came out of the squid thing. It shivered, and floated away from Natasha. It didn't get far. The necklace beneath it was both bait and a tether, so the spirit thing managed only a few feet from it before it drifted back toward its lifeline.\n\nThe Prince smirked, tapping a finger to her chin as she analyzed. \"I know the werewolves are capable of communicating with creatures from the other side. But I had assumed that the spirits themselves were incapable of speech, except for the more developed ones. Safe, was perhaps, an anomaly. I wonder, if the Uratha speak a language unique to spirits?\"\n\n\"... you want secrets?\" The floating eye came closer to Antoinette, hovering higher. No mouth, but the weird, slorps and shlorps and blops of its voice came from somewhere, quiet but there. \"Trade for secrets.\"\n\n\"I guess it d-does speak English.\"\n\n\"Trade for secrets.\" The tentacles swirled, causing the eye to slowly rotate. \"Trade?\"\n\n\"Spirits are awfully one-track minded, are they not?\" Antoinette said, looking down to Natasha as the smaller vampire approached.\n\n\"It d-does seem like, that, that they're... um... specific.\" They knew that already, but it never ceased to be an interesting sight, these spirits and their inability to think beyond their purview. \"And maybe more can sp-p-peak than we thought?\"\n\n\"I will trade you for secrets,\" Antoinette said to the creature.\n\n\"What trade? I know many secrets from Hisil. Know few from Gurihal.\"\n\n\"Gurihal?\" Natasha said.\n\n\"Here! Here! Tasty treat summoned.\" The creature lowered itself down to the necklace, and hovered around it a few times before looking back to the two Kindred. \"Trade secrets?\"\n\nThe Prince set her chin in her fingers, and lightly stroked it as she contemplated. \"I will trade you... knowledge about a human politician's love affair, if you tell me about the language spirits and the Uratha speak.\"\n\nThe squid thing copied Antoinette's motion, running one of its tentacles under its eye as if it were a chin. \"Agreed.\" Apparently, it knew what a human politician was too. Or at least, knew that it wanted to know more about them.\n\n\"Darla Copperman has been sleeping with her hairdresser.\"\n\nNatasha raised a brow and blinked at Antoinette. \"... r-really?\"\n\n\"Mmhmm. From what I can tell, it is purely physical, and perhaps a touch romantic. No ill intent; except, of course, that both are married and doing this behind the backs of their partners.\"\n\nA politician risking her career for something as simple as good sex was a surprise. Or, maybe not. Good sex was pretty great.\n\nThe tentacle rippled, as if someone had poked a puddle. \"Secret! My turn. The Uratha speak Uremehir. Spirits too.\"\n\n\"Uremehir?\" the Prince said. \"Is there an English word for that language?\"\n\n\"The First Tongue.\"\n\nThe two Kindred blinked at the squid, then each other. \"First Tongue?\"\n\n\"Yes, First Tongue. Old, very old. Uratha say maybe first language for humans.\" The tentacle creature floated around some more, looking around at the room with the eye between its tentacles, before looking back to the two Kindred.\n\n\"I... remember, Art and Matt t-telling me they learned something, called the First T-Tongue, when they were changed.\" She nodded a little as she dug through the memory. \"I d-didn't really... think about it, at the t-time.\"\n\n\"Another trade?\" it said.\n\nThe Prince nodded. \"Very well. Perhaps for something of greater weighter?\"\n\n\"Oh, dangerous trade. Yes, dangerous. Offer?\"\n\n\"I will tell you of a secret of the vampire leader here, of the Carthians, Garry Tones. Something personal. In return, tell me what the Uratha leader Avery has been doing in the Hisil.\"\n\nThe eye made a giggle sound, like a bunch of swamp bubbles popping. \"Uratha hunting, always hunting, not secret.\"\n\n\"Surely she has pursued something specific and worthy of note?\"\n\nThe tentacle creature started to turn in place, one of its limbs occasionally rubbing its fat body. It didn't seem to care too much if it was oriented with the floor, and with time it started to adopt positions that were upside down from how it was before; which looked normal after a while, and Natasha's brain eventually identified the old orientation as upside down. Did this creature not care where gravity was? Creature was perhaps the wrong word for a spirit.\n\n\"Avery has secret, about hunts in Hisil. Trade!\"\n\n\"Alright spirit, you speak first.\"\n\n\"Can't.\"\n\nAntoinette frowned at the floating orb, and exposed her fangs as she grit her teeth. \"I shared with you first on the first trade. Would it not make sense to share with me first on the second?\"",
        "\"Can't.\" And, as if the world were summarized in that single word, the spirit started hovering in random directions. Never far from the necklace of course, a few feet to the side, maybe six feet up, but always back to the necklace.\n\n\"It... these spirits aren't truly... c-capable of internal reasoning, I think,\" Natasha said. \"They seem bound to their... to what they are.\"\n\n\"... merde.\" Sighing, Antoinette folded her arms under her bosom. \"I know these spirits are defined by what they are, to an all-encompassing degree. But that does not mean they are incapable of lying.\"\n\n\"Can't lie! Must trade. Secret with lie, is not secret, just lie. Trade?\"\n\nThe Prince was not used to being denied. Natasha had to fight to hide her smirk, at how this simple little spirit was defying her, especially over something like secrets. Secrets were Antoinette's favorite dessert, Natasha was sure, and having it denied her was too cute. And scary. This strange magical machinery of the Prince's made the spirits physical, in a way, and that meant Antoinette could rip the strangely adorable-but-gross floating eyeball in half if she wanted to.\n\n\"Alright, I will tell you my secret first.\" With a groan, Antoinette gestured with her hand, as if the secret itself deserved an open palm. \"Garry Tones once slept with a young man, Kindred, who was a member of the Lancea et Sanctum, during the years of Lucas's rise. They were romantic together. Lucas found out, and killed the boy.\"\n\nOh, eesh. Natasha squirmed a little and looked down, not wanting to make eye contact with anything as she visualized how horrible that must have been. The secret would not damage Garry's life to be known, except perhaps that it would infuriate him to know others knew about such a horrible trauma. Antoinette could be ruthless in her pursuits of knowledge.\n\n\"Secret! Secret! Avery, Uratha, thinks someone named Maria is looking for a way to summon Black Blood. She\u2014\"\n\nAntoinette's hand snapped out, grabbed the creature, and sank her nails into it as she brought it up to her face. \"Black Blood!? Maria would never attempt to summon that monster! She knows nothing of it!\"\n\nNatasha almost jumped away, but managed to stay put, and shiver a little as Antoinette's eyes lit ablaze.\n\n\"But... secret! I give, trade!\"\n\n\"Um, I-I think... this little guy really doesn't know how t-to do anything else. Just, trade secrets. Maybe spy too, t-t-to learn secrets, but... don't think it can lie.\" Black Blood? Who was Black Blood?\n\nThe Prince brought the creature in closer still, until it was only a few inches from her face. Fangs bared, eyes wide, she snarled deep under her breath, and glared into the pitiful thing hard enough to cut steel.\n\n\"Why does she think Maria is trying to summon that monstrosity? Consider the information a part of the secret we traded.\"\n\n\"Avery found whispers! Whispers from Black Blood's wraiths in Hisil! Someone named Maria was trying to talk to them. That's all I know!\"\n\nLetting go of the black squid, Antoinette sighed, and began to circle the creature. The poor spirit was spooked, jittering, skin vibrating like a puddle, its eye tracking Antoinette. Poor thing. Except, Natasha knew she should know better, to pity it. It was a spirit, it didn't 'feel' things like living creatures did. Its existence was devoted to fueling its purpose, feeding it, and anything else was not a part of its being. Being jittery and quick to panic was probably just a valuable trait to incorporate into its behavior, if it was a purveyor of secrets.\n\nStill, it was oddly adorable in its simplicity, and Natasha pouted as she watched it grow nervous.\n\n\"... I will make you another trade, spirit of secrets,\" the Prince said. \"Tell me of Black Blood's latest goals, its current agenda, and I\u2014\"\n\nThe creature made a pathetic, squealing shriek sound, and went poof.\n\nThe two Kindred stared on, looked at each other, then at the empty air where the creature used to be. They waited, for thirty seconds, but nothing happened. No more noise, no more spirit, no nothing. It'd gone home.\n\n\"Shall I... t-turn it off?\" Natasha said.\n\n\"Yes, you may as well.\" Sighing, Antoinette scooped up the necklace, and walked back over to the table where they kept their laptops and the objects they were studying for the day. The only one they hadn't already tested in the device was the new necklace, and now with test one complete, they both had some notes to take.\n\nNatasha set the resonance level back to zero, and turned off the ephemera-exposing blue light. Back in normal lighting conditions, Natasha came over to sit with the Prince again. She thought to find the Prince typing away and filling in her observations, but instead, Antoinette was leaning back in her chair, her chin between some fingers while her other hand combed her hair over her shoulder, down her chest. Thinking mode. Natasha usually chewed on a pen or something, Antoinette seemed to comb her hair.\n\n\"... it... ran away?\" Tash said.\n\n\"Indeed. It is afraid of Black Blood, no doubt; if such a simple creature is capable of fear. I doubted it would answer my question, as that entity's shadow has haunted Dolareido for centuries now.\"\n\n\"Centuries!?\"\n\n\"Indeed. My experiments with the Gauntlet, and testing what entities I could draw from the other side, started not long after I arrived here with Jacob. Before we Kindred had managed to manipulate the small village into our foundation for a future utopia, whispers of that name were on the words of the people, the kine. Jacob, deep into his own experiments, his dark magics and blood rituals, also discovered mention of the creature's name. I know his relationship with it, if it could be called a relationship, has grown as well. They know each other.\"\n\n\"J-Jacob... knows... this thing?\"\n\n\"Oui. To my chagrin, I have not been able to discern the exact nature of that relationship. It... Black Blood was involved, somehow, with the incident with Simon and Avery.\" She frowned, hard, and grit her teeth until her fangs were bared again. So weird, so very weird, for Antoinette to carry anger on her face when she got frustrated. \"But that is not what bothers me.\"\n\n\"... is... is it b-because... this?\" Natasha reached out, and picked up the necklace on the table.\n\n\"Yes. I imported this piece through my connections with the company Border Explorations, as I have done many times in the past. And yet, this time, not only does the object have no memory imprinted upon it, it resonates with the spirit world in such a way as to attract a spirit of secrets.\" She reached out for the necklace, and Natasha set into her hand. \"It does not surprise me such a spirit would exist in Dolareido, as both Kindred and kine grow secrets here like a garden of weeds. What surprises me, is the delightful timing of this necklace.\"\n\n\"It... it d-does seem awfully perfect, doesn't it? We want to know more about Avery, and w-what she's up to, and... this necklace is perfect for that.\"\n\nAntoinette stared into the black orbs the necklace wrapped in its strings, and rubbed one with a thumb. Fiery eyes stared into it, and Antoinette's frown faded away as she slowly set the necklace back down.\n\n\"Someone has conspired to insure I would receive this necklace. They wished for me to know more about what is happening on the other side of the veil.\"\n\n\"Are we sure it c-can't be coincidence?\"\n\n\"We coincidentally learn that Maria has been communicating, or attempting to communicate, with this creature beyond our realm?\"\n\n\"... no, I suppose it... it couldn't b-b-be coincidence.\" A lot of randomness involved though. Would Antoinette buy the necklace was a big roll of the die, and if the device would summon a creature that resonated with it was another roll of the die. Whoever had set this up knew the necklace was a necklace of secrets though, and had a clue as to what sort of experiments Antoinette did. That lowered the possible people down to a manageable amount, at least.\n\n\"I... am also concerned... about Maria.\" Antoinette set the necklace back onto the table, closer to Natasha. \"Assuming that that spirit was incapable of lying, as you believe, then Maria is pursuing a course of action I fear has no happy ending.\"\n\n\"I d-don't understand. What is Black Blood?\"\n\n\"A spirit, a very old and powerful spirit, my dear Vola. Unlike the innocent creatures we have summoned, this dark entity has haunted Dolareido for so long, it has... it is beyond simple descriptions. It pursues death, murder, but it also pursues life, in a strange way, in a way only Jacob and his cr\u00faac rituals could understand.\"\n\nThis, was exactly why Natasha left the Ordo Dracul in the first place. She didn't want to deal with crazy alien creatures from the beyond! She wanted to sit down, deal with data, deal with money, deal with secrets. Those were things she could understand, and catalog, and control. Now she was dealing with sewer monsters, nightmare monsters, spirit monsters, and everything in between.\n\n\"So, um, m-my... t-t-task now is to: discover the weakness of the Begotten, or at least Azamel; track down the hunters, p-particularly Jeremiah or Angela; find out more about M-Maria's motives; find out what Clara... w-w-warned us ab\u2014ooh... m-maybe she warned us about Maria? And, um, I'm also t-to continue this research here.\" She gestured to the room behind her. Conveniently, she left out how much work that was, how much life threatening work that was, and how much she would not be able to handle that all on her own. The Prince noticed it without her saying it, and smirked at her.\n\n\"Alas, you make a point, my dear Vola. I will continue my research alone; you need no longer attend these research meetings of ours. Daniel is already investigating Clara's mysterious warning, though I suspect the man will be able to find little. Perhaps, with this new information, he may find something by investigating Maria Turio's activities though. You, my sweet, shall consider dealing with the hunters your primary task, and discovering the weakness of Azamel your secondary task.\"\n\n\"W-What about Maria?\"\n\n\"Your sire will handle it, Miss Vola. Please leave Maria be. We do not know the extent of her pursuits, or her goals.\"\n\n\"B-But... I...\" I feel like I should be involved. I know Maria better than most. I owe her a lot, too, like a punch to the face. \"Yes Prince.\"\n\nPrimary task meant put your life on the line for it if need be, like the time she was investigating the tunnels. Secondary task meant looking it up on the laptop when at home, or just keeping an open ear for it when the opportunity presented itself. So she was being told to risk her life to deal with the hunters, but don't risk it for dealing with the Begotten. Reasonable, but scary, considering what the hunters had done already, killing Barry and nearly killing Jack.\n\nNatasha nodded. \"I'll see it d-done.\" And she would too. Hunting down humans, in a city, by being sneaky and smart and cross-referencing data in an increasingly intricate mountain of evidence? She was damn good at that, she just had to be careful to not end up like Barry. \"... I rarely see my sire these days, Prince.\"\n\n\"Neither do I, my dear. I miss his company, as quiet as it was. But, he must disappear for days at a time, to find his prey.\"\n\n\"That worries... m-m-me. He... he d-didn't find Jeremiah or Angela.\"\n\n\"That worries me, as well, my dear. These humans hide themselves using the size of my city, and its teeming masses that they can blend in with as easily as they breathe. And worse still, they use strange tools to pursue their goals. Relics, artifacts perhaps, or rituals that tap into forces that defy my knowledge.\" The Prince lowered her gaze, eyes becoming red steel. If there was one person who hated not knowing something, it was her.\n\n\"I will m-make sure, to learn about how they're hiding so well t-t-too.\"\n\n\"See that you do. These pests are proving incessant, and that cannot stand. I will see this Jeremiah and Angela dead, and I will purge this city clean of their like, even if it floods Dolareido's streets in red.\"\n\n~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~\n\n~~Eric~~\n\nWhat now?\n\nEric stared on over the deadly white sheets of the hospital bed. The distensions in the blanket marked the legs of the round man underneath the pale sheet. Some hospitals used green, some use mauve, some sky blue. This hospital liked white. Felt professional, and sterile.\n\n\"You see this?\" The old man in the bed gestured to the TV on the wall, thrice as large and far newer than the one in the other hospital.\n\n\"Can't not see it.\" Groaning, Eric leaned forward, ass starting to hurt a bit as the cushions of the seat did not agree with him. Whatever, just a bit of pain to accent the futility of why he was here. Wonderful. He put his elbows to his knees, and looked to the TV. The Amazon forest was burning to the ground.\n\n\"I swear the world's burning down around us,\" his father said.\n\n\"Metaphor?\"\n\n\"Of course it's a fucking metaphor.\"\n\nEric shrugged. \"Thought maybe you really cared about the rainforest.\"\n\nThe old man snorted, and put the TV remote back onto the sheets after muting the TV. \"Makes me sick.\"\n\n\"Then stop watching it.\"\n\n\"I'm not going to ignore the world's problems.\"\n\nYeah, right. Old man couldn't ignore a problem, no matter how small it was, no matter how much he couldn't affect it.\n\n\"Could join the relief effort, help block the fire from spreading,\" Eric said. \"I'm sure you'll be of great help.\"\n\nHis old man glared at him, sneered, and looked back to the TV. \"Fuck you.\"\n\n\"Fuck you too.\"\n\nThey both sighed, and let the silence of the muted TV fill the room. The captions were on. His dad could hear fine, but he found the quick talking of the reporters and civilians annoying. Poor fool wouldn't be able to stomach a single conversation with a Gen Z, let alone a Millennial.\n\n\"Nurses here treating you alright?\" Eric said.\n\n\"Well enough. Shorter skirts and bigger breasts seem to be the only upgrade.\"\n\n\"I told you don't harass the nurses.\"\n\n\"I'm not harassing them.\"\n\n\"Dad, saying to a woman that she had a nice rack is harassment.\"\n\n\"Pretty sure that's a compliment.\"\n\n\"It is, it's also sexual harassment.\"\n\nHis old man sighed, and shrugged. \"Can I at least say nice ass?\"\n\n\"... better, but I still wouldn't advise it. These women \u2014 and men \u2014 are the only things between you and a shit-filled bed.\"\n\n\"If they didn't want the compliment, why wear the short skirt?\"\n\nExplaining to his idiot old man the delicacies of flirting versus harassing was not how he wanted to spend his Sunday afternoon.\n\n\"They want you to notice, but they don't want you leer. Direct, tactless compliments are the verbal equivalent of leering. And besides, it's not you they're trying to get to notice anyway.\"\n\n\"I can still bag the ladies when I want to.\"\n\nEric raised a brow at the old man, and smirked. His dad was normal height, like him, but he didn't shave his head like Eric, instead preferring some short hair; now white short hair. He had a bit of a beard too, trim at least, but otherwise a full beard. He wasn't extremely fat, but he had more flub on him than a heath-conscious guy like Eric would prefer he had, and the soft roundness it gave his dad's face betrayed the darkness of the man's soul.\n\n\"You're a regular Bill Cosby, dad.\"\n\n\"I watch the news son, or did you not notice?\" Old man gestured to the TV again. \"So fuck you too.\"\n\nAnd around, and around, and around they went.\n\nMaybe you should try putting your good foot forward first for once, Eric? He thought he did that by getting his dad into a better hospital. Nah, best that managed was a single 'thanks' from the old man, before things went right back to normal. Well, old man take a look at my life, I could use a fucking olive branch, just like you.\n\nPointless attempts to mend burned bridges was only half the reason he was here though.\n\n\"Dad, serious question.\"\n\n\"Shoot.\"\n\n\"You ever felt... like... an animal?\"\n\n\"Eric, I'll stop harassing the nurses if you\u2014\"\n\n\"No, not about that. I mean, literally, you ever felt like... I don't know, someone eying you in the street, thinking you're an easy target to mug, and you feel... ready to tear into them?\"\n\nHis dad raised a brow as he stared at him, before adjusting his hospital gown, and scratching at the tubes coming out of his forearm and nostrils. If Eric's words had triggered some sort of memory, hidden reflex, anything like that, the heart monitor didn't show it.\n\n\"We grew up in a rough neighborhood son, you know that. Did some things in my life I ain't proud of, hurt people when I had to protect me, you, or your mother.\"\n\n\"This isn't about that either.\" Thankfully, the two of them were past that part of the father and son relationship, talking about their shit life and the struggles they had growing up together. Now, it was figuring out how to not hate each other as adults. It wasn't going well.\n\n\"The fuck is it then?\"\n\n\"Ever want to... not just kill someone, but...\" Hunt them down, tear them open, eat their flesh. \"Forget it. Guess I'm just still angry about shit.\"\n\n\"If I was a dumbass like you, I'd be angry about shit too. How's Sheryl by the way?\"\n\n\"Haven't spoken to her since last time I told you.\" Not like his dad liked Sheryl. Old man had called her out for what sort of person she was long before Eric realized it. He'd called Eric out for what sort of person Eric had become before he realized it too. In both circumstances, his old man had had the tact of a fucking gun. Maybe if the fucker hadn't been such a monumental asshole about it, Eric would have listened to him.\n\nToo fucking late now. A delightful life lesson that he could never swallow. Just cause you don't like how the truth tastes doesn't mean it isn't the fucking truth.\n\nAs he sat there with his dad, and the two of them watched the muted news, reading the captions, he tried to feel, to sense, look for any of the weird signals his new mind had been sending him. Was his dad dangerous? Was his dad an animal, like him? Was his dad something more than just his dad? No, it all seemed perfectly normal, perfectly dad-ish, perfectly human. For the best, probably. Unless, his dad might live if he became the sort of person Eric was becoming.\n\nEric looked down at his knee, and groaned as he flexed it. Still hurt. If he was becoming a werewolf, or whatever, why did that still fucking hurt? Wouldn't it heal? Is that something werewolves did? Christ, he needed to talk to Fiona, get some answers about who he was.\n\n\"Seeing anyone?\" his dad said. \"Must see a lot of nice girls at a nightclub.\" The sarcasm was palpable, and with just a hint of bitter for a delightful cocktail of fuck you.\n\n\"Bloodlust is closer to a lounge than club.\"\n\n\"Yeah, how so?\"\n\n\"Less people, and you don't have to scream at the top of your lungs to speak to the person beside you.\" And it was a front for vampires to get themselves easy meals, using sexuality, booze, and drugs to turn humans into defenseless prey. Didn't seem like the vamps killed their victims, at least not at Bloodlust, so he had to admit, it was a pretty cozy setup for them, one he didn't mind.\n\nAnd they were paying his salary, a pretty sweet salary, so he shouldn't complain. Hell, that Jessy girl did him a huge favor, and the only thing she wanted in return was to fuck him. Talk about a reversal of expectations.\n\nExcept, now, she knew he knew she was a vampire. Suddenly he was neck deep in a strange world, with vampires and werewolves and monsters, and they had a leash on him. He didn't like being on a leash, but as far as he could tell, the leash wasn't forcing him to do anything he wouldn't already do. New job with great money and great benefits? Yeah, he'd do that. Sexy woman with a hard body \u2014 the fitness nut in him creamed its pants at the sight of her \u2014 who wanted to fuck him? Yeah, he'd do her. And now, the sexy vampire and a beautiful monster were looking to make his nights more interesting on a regular basis. Yeah, he'd probably appreciate that too.",
        "He looked at his dad. The man wasn't going to live much longer; at least, not at a health conscious guy's definition. Type 2 diabetes, a bad Trig/HDL ratio, obese enough to hurt his joints, and only enough muscle to get his ass out of bed in the morning. All in all, a very unhealthy man. That was the way of it since Eric's mom died some ten years ago, despite Eric's constant badgering for him to take better care of himself. Put down the bread and eat some real food for once in your life. At a certain point, he just had to let the man be, let him do his thing.\n\nThen the man got sick. Queue painful conversations, lots of yelling, lots of object throwing, and an eventual new thing Eric had to pay for. A spiral, leading to one shitty thing after another. But now he was on the up, and at least he could get his dad some premium care.\n\nOr maybe he should just let the old bastard die. Why the fuck was he helping him? Cat's Cradle situation? No, his dad was around for him plenty growing up. Hell, he'd been a great dad, just an asshole too. Eric didn't feel any son guilt either, he put in his dues with his dad, at various ages, now included. Why didn't he just let the god damn idiot die?\n\n\"... hey dad.\"\n\n\"Mm?\"\n\n\"You ever wonder what it'd be like to be a vampire?\"\n\nThe old man raised a brow at him like he was crazy, before looking back to the TV and changing the channel to some sports channel. Baseball. His dad couldn't be bothered to watch a real sport, of course.\n\n\"Whatchu talking about?\"\n\n\"If I told you I could make you immortal, never age, but you'd be a vampire, could never see the sun again, had to drink people's blood, what would you say?\"\n\n\"I'd say keep your fucking shit the hell away from me, blood sucker.\" He laughed as he said it, before breaking into a coughing fit. Eric got up, but the man motioned him back into his seat, and forced down the coughing with time. \"I've had enough of this life, thank you very much.\"\n\nIf you took care of yourself, got up off your fat, lazy, idiot ass, life would be kinder to you. Maybe you'd have found love again, or at least you might not spend your days in pain. Fuck you old man, fuck you.\n\n\"So vampires are off the table?\"\n\n\"Good lord, Eric, the fuck is the matter with you? Just let me do what I want to do.\"\n\nYeah, if I did that, you'd be dead.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBack in Bloodlust, he stood on the second floor again, elbows on the railing, and watched on from above. The smells and sounds were more distinct, each categorized, each apparent. People stopped being people, are started being persons, individuals, lots of them. Colognes, perfumes, deodorants, different types of fabrics, and different degrees of sweat or sex on their skin. It would have been two, maybe three odors to his nose in the past, but now it was dozens.\n\nHe looked down at one of the corner booths below him. The dance floor had twenty people on it, and many of the booths around it only had two or three people in them. People were feeling more wild tonight than usual, and many of the booths had a lot of physical contact happening. One of the booths had a vampire in it, a man, and he had two women in his booth with him. One of the women was snug against his side, her tube top pulled down to her belly, exposing her fake breasts, and her hand reaching out to hold onto the back of the other woman who was riding the man.\n\nThe vampire looked up, met Eric's gaze, and winked.\n\nWeird, so fucking weird. Eric's new instincts told him to be careful with this fucker, to worry about him, to keep note and be prepared to rip him in half, literally. He was a vampire, not one of these humans, and if he was going to kill him, he had to be prepared to do more damage than that Jack kid had suffered. So, rip him in half or tear off his head, or don't bother.\n\nHe looked in another booth. A man was getting a blowjob from another man from under the table. In the same booth, a woman was getting some cunnilingus from a woman under the table. Interesting setup. In another table, two people were stroking each other off, a man and woman. And up on the second floor it wasn't much better, people fucking and touching each other and filling the pulsing music with their quiet moans.\n\n\"It's fuck night.\"\n\nHe raised his head, and watched Jessy approach him. She was wearing a high cut shirt, high enough to expose the underside of each breast, and the top had a boob window before it reached out into long, black sleeves that reached her wrist. Very slick, and it matched the short skirt she wore, with its crisscross thread sides exposing a lot of her thigh and ass. A lot, lot of her thigh and ass, all the way past her hip. No underwear.\n\n\"Fuck night?\"\n\n\"This your first Saturday night here? First Saturday of a month, I mean.\"\n\n\"Yeah.\"\n\n\"Fuck night.\"\n\nHe rolled his eyes, and looked back down at the dance floor. The men and women were grinding up against each other with the beat of the music, and people were happy to get their hands involved, touching and rubbing. At least they weren't having sex on the dance floor, even the Bloodlust crew would object to that. Keep it to the booths, and keep the moans below the music.\n\n\"I see you've met Josh.\" Jessy came up beside him, leaned her elbows onto the railing as well, and made a small wave at Josh. The man returned the favor. \"He's next in the rotation to keep an eye on the place for the next few days.\"\n\n\"Looks like he's having fun.\"\n\n\"Daeva are so fucking spoiled. He snaps his fingers and he'll have bitches in droves ready to fuck him.\"\n\n\"Daeva?\"\n\n\"Type of vampire, really pathetic, poetic types. No grit to them at all. Fucker could put stripper sparkles on his skin and it'd fit perfectly.\"\n\nWell, that was one way to summarize a type of vampire, he supposed.\n\n\"And you?\"\n\n\"Gangrel. Pretty animalistic, I guess is the easiest way to describe it.\"\n\nHe most definitely got an animal vibe from her, so that fit.\n\n\"You look good tonight.\"\n\n\"I know, right? Just got this thing yesterday.\" She gestured down to the skirt, and how the threaded side exposed her skin. And, waving a blatant 'stare at my ass' sign, she turned around for him, exposing the rather small black front and back that covered her sex and ass crack, barely.\n\n\"Be careful where you sit down, wearing that.\"\n\n\"Ha, was hoping to be sitting on a rather attractive bouncer's dick, actually.\" She slid in closer, and nudged her elbow into his as she stared over the railing with him. \"Or, we can stare down at people, that's cool too.\"\n\n\"It's my job.\"\n\n\"Eh, not really. Your job is to be attractive and attract the sort of kine we like having here at Bloodlust.\"\n\n\"... and they would be?\"\n\n\"People who are attracted to dark, brooding types. Those sorts are such easy prey, flies to honey.\"\n\n\"... I'll have to pass on the sex, sorry. Not in the mood.\" And he wasn't. Visiting his dad in the hospital left a rather bitter taste in his mouth. A wonderful way to remind him how meaningless his words could be, visiting his dad. Shouldn't have done it. But he was a glutton for punishment.\n\n\"I'll bet you twenty bucks I can change your mood.\" She smirked, playful and flirtatious, aggressive and confident, all the things he liked in a woman. Usually.\n\n\"I guess I can't stop you from trying.\" Even if she broke the rules, her vampire world paid his bills.\n\n\"Right, so, get over here.\" She gestured to one of the empty booths, and slid into it. Empty booths in a nightclub, ha, place really had no business calling itself a nightclub. Sighing, he came over and sat down as requested. She was the boss. Do what she said. \"You do look pretty fucked up. Something on your mind?\"\n\n\"Typical family drama.\"\n\n\"Want to talk about it?\" she said. He raised a brow at her, and she laughed as she ran a fingernail along the booth table. \"I like you.\"\n\n\"How's that?\"\n\n\"You really are the only kine I know of that's not a ghoul or a thrall, and that gives you an edge I really like. Thralls and ghouls, they break the moment a vamp makes eye contact with them. They got the addiction to vamp blood, and they got respect for us. Blood gets into their minds, makes them feel special about the vamp they're addicted to.\" She slid in closer along the booth seat, until her thigh was against his. \"You're not a thrall or ghoul, but you know what I am, what I can do. And yet, you're still a stubborn dick, knowing I could full well do anything I wanted to you.\"\n\nHe didn't know exactly what she could do, no, but he could feel his muscles tighten and his eyes snap to her every time he felt he was exposing his back to her. Whatever she was, he was more afraid of her than that Beatrice girl.\n\n\"I guess.\"\n\n\"Plus you're really hot. Black dude with a shaved head, buff, in a nice suit? Arg, any Invictus girl would be wet just looking at you.\"\n\n\"... I think you overestimate how easily women get aroused at the sight of me.\"\n\n\"I think you underestimate.\"\n\nPersistent as fuck, this woman.\n\nHe shrugged, sighed, and leaned back. No use in trying to slide further away from her, she'd just slide after him.\n\n\"You ever think about asking?\" she said.\n\n\"... about what?\"\n\n\"Becoming a vampire.\"\n\n \n"
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "romance",
        "slow",
        "vampire",
        "violent",
        "werewolf",
        "erotic",
        "orgy",
        "group sex",
        "magic"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-05-ch-01"
}