{
    "title": "Blow Your Mind Pt. 05",
    "pages": [
        "Thanks everyone for enjoying this story so far. I have had some feedback about certain things in the story and I appreciate it both for the advice and comments, but also in being polite. Hope you continue to enjoy.\n\n*\n\nPART V\n\nTWO MONTHS LATER\n\nBrandi finished reading the file and slid it back over the table to her boss. She glanced around and made sure she was blocking her mouth with the menu when she spoke.\n\n\"So you want me to neutralize her by removing her skill set and memories. I can do that, but this is an odd first job.\"\n\nMr. Case smiled that grim smile of his that Brandi had learned to be wary of. \"I suppose, but it serves several purposes. One, you should consider it \"training\", Brenda is a first-class spy and has a lot of training, experience, and skill under her belt. She started working for me when she was in college and was my top spy for a while. Two, you get to see what happens to people who double-cross me or think they are smarter than me. And three, you remove a top rival in the ranks. I don't encourage infighting, but I am fully aware that my company has some as certain people vie for the top jobs that pay the most.\"\n\nBrandi nodded. \"Still it seems a bit off that my first target is one of your own spies. This information is excellent and it's a good profile, but what exactly did she do to warrant my attention? I'd like to know before I jump in.\"\n\nMr. Case smiled again. \"Excellent question, filling in the blanks from what you have gotten, and being wary of what the holes are. There may be times when the answer is simply \"Do not ask\" and you will have to either walk away or go on only knowing what you know. But you can always ask, don't forget that. In Brenda's case, she has \"branched out\" and has done some independent work on the side. I do not necessarily mind that, but I do require knowledge of it as she may be causing problems for people I may have agreements with or people I do not want to do business with. Brenda has gotten rather full of herself and her abilities and thought she could get away with it. But she made a couple of stupid mistakes and I was on to her.\"\n\n\"What mistakes?\"\n\nMr. Case gave her an appraising eye. \"Just curious or thinking ahead?\"\n\nBrandi kept her face still. \"Learning from the boss. If this tripped one of your best spies up, I had better learn about it.\"\n\nMr. Case nodded. \"Brandi, I know that at some point you will wonder about going off on your own and doing this as a freelancer. Everyone does. I would ask you that when that time comes you tell me and let me show you the parts that I am shielding you from. There are a lot of very dirty people and dirty things that this job deals with and causes, and I would like to shield you from some of that. If you end up able to handle it, well, we can talk about it then.\"\n\nMr. Case took a sip of water and then continued. \"As for what tripped her up, a couple of simple mistakes. One, she started living beyond what she could afford. And by that I mean, she was living beyond what I knew she was making working for me, which was saying something considering. I don't begrudge people enjoying the fruits of their labors, but she certainly couldn't afford 7 houses in elite locations all over the world, not when they are all multi-million-dollar homes and she paid cash. That cost, along with how much she was working and making was enough for me to notice. She also used the help desk for several things that had nothing to do with any of my assignments. She got lazy on that. You for instance used Frankie for your support instead of using my help desk. Sloppy and lazy will get you caught. Brenda has been getting more of both lately and has not shaped up when given the chance. And this is the key thing to remember my Dear, EVERYONE can be replaced. Brenda has forgotten that and so will pay the price.\"\n\nBrandi kept her face very still and Mr. Case looked at her for a moment. \"You have a very good poker face Brandi, but I know this is probably making you wonder what you have gotten into and wondering just how valuable you think you are. Well, you have gotten into the spy game, and all the excitement and fun aside, its for keeps. Never forget that. As for how valuable you are? Very valuable, but in the end if you test that you will find out that you too can be written off. I really hope you never test me on this, you and I have a lot to lose if you do.\"\n\nBrandi nodded. \"Mr. Case, this was something I never dreamed of doing, but I am loving it so far. The money is great sure, but this whole thing is amazing! With my hungers and urges, this might be the only business FOR me anymore. Having to always pay attention, having to always remember a thousand and one things, it is keeping me sane because of how much attention and focus is required in order to do the jobs right. If I wasn't doing this I would likely be stalking people on the streets by now to feed.\"\n\nBrandi sipped her water and smiled. \"I get it. I can't trust anyone, not even you. But you are up front with me, you pay me very well and on time, and like you said, you handle the part of the business that I very likely would not like to deal with. You were certainly NOT Dr. Caines when you realized what I could do. I can't promise you I will stay with you for my entire career, but I do promise you that when the day comes I will talk with you about it.\"\n\nMr. Case smiled and nodded. \"That really is the best you can hope for. Now then, for Brenda. She is a highly skilled agent. She has been doing this for 15 years and knows a lot of stuff. Stuff I want you to have. She has been briefed that you are a newbie and that she is supposed to provide you some training and make some social introductions. She is going to introduce you around Miami, get you into the clubs, set you up socially. This is part of your fake persona, you will rarely do any business here in Miami or Florida if I can help it. My firm has a completely legit side and you will be part of that. But she is being retired whether she likes it or not. I can't afford to have her out there free-lancing. If she had just quit it would be one thing, but since she is dealing behind my back and is in money-trouble she is a risk. The temptation to sell me out to others will be too much eventually unless she gets her act together and I have no faith that she can.\"\n\nMr. Case leaned in a bit. \"When I mean retire her, I mean it. You rip out her skills, all of them. Don't copy them, rip them out, along with any memory of my organization and her time with it. Do not touch her money, or anything that is hers. She can get out from this hole if she sells some of her property and stops some of her rather expensive habits and live well on what she has left over. But she is to have no ability to get back in this game, and no ability to threaten this organization. Understood?\"\n\nBrandi looked at the picture and smiled. \"Absolutely.\"\n\nThe next day Brandi met Brenda for a coffee in the afternoon in a trendy little coffee shop on the beach. Brandi was dressed nicely, and she blended right in with the crowd of other young couples, hotties showing off and young men on the prowl. She saw Brenda and walked over to her.\n\n\"Hi there. You must be Brenda, I'm Brandi.\" She said extending her hand.\n\nBrenda smiled at her as she stood up. Brandi noted the smile never touched her eyes, which had a bit of a cold and hard look to them. She took her hand and said \"Good morning Brandi, so pleased to meet you. I was more than happy to meet you after the boss called me.\"\n\n\"Like hell you were, you lying bitch.\" Brandi thought to herself while she gave her \"Gosh, this is so cool!\" smile.\n\nBrandi sat down and moved way into the booth so her back was against the wall a bit. She noted that Brenda slightly arched her eyebrow at that. \"Not such the newbie, huh? Well, you ain't seen nothing yet.\" Brandi thought.\n\nBrandi gave Brenda a very careful look over. Brenda was a Chinese-Korean mix woman, fluent in Korean, Chinese, and Japanese, Harvard graduate, and had a Masters in International Relations from UVA. She had gotten into spying early, in college, where she had done some work for some unnamed people getting some blackmail information. Mr. Case had noticed her work and signed her on. She was about 5 foot 6 inches, jet black hair, dark eyes, and a nice figure with a set of tits that was just a bit bigger than what her body should have.\n\nShe was excellent at safe cracking and seduction and had a very good ability to get into private computers and laptops via using exploitable weaknesses or by finding or guessing the owner's passwords after profiling them and then pillow talking them a bit. Her favorite method was to seduce them, fuck them unconscious and then get on their laptop or cellphone and get the needed data. But she was also a very good cat burglar and if seduction failed, she was very adapt at breaking in, disabling alarms, locating and opening safes and copying what was needed with the mark never knowing or framing it as something else like a jewelry heist.\n\nBut as Mr. Case said, her personal habits had gotten her in a bit of trouble. She liked to spend a lot of money, hundreds of thousands of dollars on a single shopping spree in Las Vegas or in Paris over a weekend whim. Since she was a bit of an excitement junkie (which Brandi could completely understand), she was beginning to develop a gambling habit. Nothing bad yet, but she was always at the track and when she went to Vegas she could spend hours on the craps table. She liked to have fun, and she liked to have it on her terms which meant that boyfriends never lasted long as she either was way too expensive for them or they couldn't deal with her \"my way or fuck off\" mentality. She had blown through millions, and while she was not in real trouble yet, Brandi could easily see where she was headed. And, in Brandi's opinion, the worst thing was that she always thought she was the smartest person in the room.\n\nIn short, she was a pretty spoiled little princess who had never yet run into a real problem, and now that she was beginning to see that was in one, was having some issues dealing with it. Brandi had seen how that worked in the sorority when one of the sisters who had never had any problems before hit that one class head on. They either folded under the pressure (dropping out or changing majors), or they dug deep and worked through it. Brandi could tell Brenda didn't have the ability to dig deep.\n\n\"So, Mr. Case wants me to show you around the town and get you signed up for some clubs and memberships. In our line of work, this is pretty important. Lots of potential contacts and important people come here to relax, or work, or just to hang out for a bit. Being able to drop a name here and there is a big help.\"\n\n\"I understand. That makes sense. But tell me, how much of this is really us being just another hot chick in a large crowd of pretty faces versus linking up and making contacts?\n\nBrenda smiled and Brandi could see she was giving her a bit more of an appraisal. \"Good question. Mr. Case said you were quick on the uptake. It's a balance. Most of the time, we are just another face in the crowd, just there to see who else is there so we can name drop later if needed. You will shake a lot of hands, and you need to try and remember who you met so you can drop the comment \"Oh we meet at the regatta in Miami, so good to see you again\" to someone later. They most likely won't remember you but will be too polite to say so to your face so they will make small talk with you a bit to cover. But sometimes you will get someone who is your target or a likely target and you will want to chat them up a bit more. Not a huge amount and don't try to seduce them, not here, not ever here as this is the \"official\" site of our \"company\". But if you are going to need to meet with the mark later, then you need to at least make enough of an impression on them to remember you by. All sorts of tricks for that, from a joke to having the same drink or knowing about a type of cigar. We have a social cocktail hour this afternoon after the driving tour and getting you registered. It's a \"after work\" social group, lots of younger adults who are the up and comers here in Miami, the mid to upper mid-managers, Junior VPs, stuff like that. Good to know locals.\"\n\n\"What if they are, interested, in me?\"\n\n\"Dating is allowed by the boss. But it's hard to manage believe me. You can be gone for months on end or be in the middle of a long weekend in the Keys and then get a call and you have to be on a plane in 2 hours. Hard to keep a boyfriend like that. I recommend you date some so people know you are social but keep things simple.\"\n\nBrandi nodded and sipped her coffee. \"Got it. Well, I was never much of a coffee drinker, so if you are ready, let's get going.\"\n\nBrenda nodded and they headed out. Brenda led her to a Lamborghini and zipped off. Brandi noted that it was red and Brenda drove like she owned the road. \"Cripes, she sticks out like a sore thumb. She's an upper-level manager on paper, but she drives a car that is worth more than her yearly salary, not smart.\" Brandi mentally noted.\n\nBrenda took her to several clubs and got her signed up for memberships via the Case Consulting business account; the Country Club, several nice private dining and dance clubs, the Yacht Club, the Race Club, and some others. She got a membership at very upscale fitness gym with numerous locations in Florida. Brenda then showed her \"some girl stuff\", some good shopping spots with the trendy stores. That nearly got them late because Brenda got caught up on a whim and spent a couple grand on some stuff.\n\nAside from Brenda nearly getting them there too late, Brandi was noting that Brenda was really being a snide little cunt. She didn't use her name much, usually saying \"Kid\" or \"Girl\" instead, even after Brandi asked her to use her name. A couple things she had to dig out of her because she had said \"A newbie like you wouldn't understand that yet.\" And in terms of professional advise (which Mr. Case had said would be part of the conversation) Brenda was completely mute. When Brandi had pressed for some tips, Brenda had responded with \"Sometimes the only way to know is to just do. You need to figure that part out kid.\"\n\nThey made the cocktail party only 15 minutes late, just enough to be barely fashionably late and Brandi quickly noted how Brenda's behavior continued.\n\nBrenda was definitely keeping tabs on a lot of people. She introduced Brandi to a whole bunch of folks, all whom Brandi was able to remember without difficulty. But Brandi quickly figured out that some folks Brenda seemed to be making an effort to NOT introduce her to. Brenda was also making some comments that Brandi saw as an effort to make sure she was not taken as seriously as she should be.\n\n\"This is the new kid.\", \"Brandi is fresh from college, wide-eyed in the big city.\", \"This is Brandi's first real job, isn't that cute?\" and so on. Brandi played along a bit, and then broke away to use the bathroom. When she came back, rather than link back with Brenda, she sought out a couple of people Brenda had been keen to keep her away from.\n\nBrandi was pretty annoyed as her suspicion was proven correct. One of the guys was the COO of a major international investment company, another was the heir apparent of a large international shipping company, one of the women was a major political player and local party boss. Brenda had been trying to fob her off on the lesser players.\n\n\"Well, one good turn deserves another.\" Brandi thought and turned on her charm. With her skills from Lucinda and Dylan, she was able to make very good impressions on all three of them. Not seduction level, but certainly enough to make them remember her and in a good way.\n\nBrenda found her talking to the COO and Brandi nearly burst out laughing at Brenda's reaction when he said \"Hey Bree, thanks so much for bringing your new friend to the party. She's sharp, it was real fun to talk with her.\"\n\n\"It's Brenda.\" Brenda had said with a frozen smile. Brandi's heightened senses made it easy to see the slight flush of anger, the very slight twitch of her hand, and the almost invisible tweak of her eye when the COO got her name wrong.\n\n\"Oh, right. God I'd forget my own head if it wasn't attached. Well Brandi, so nice to meet you and I hope you can be here next week.\" He said as he handed her his card.\n\n\"The pleasure is all mine.\" Brandi said with a smile.\n\nBack in the car Brenda was silent as they drove a bit. She didn't say much on the ride home and just peeled out when she dropped Brandi off. The next day Brandi had to go into the office. There she got the tour and a short brief from the office manager who gave her a business phone, account and so on. He took her into a private backroom and proceeded to sweep it for bugs. Once done he had her sit down and he pulled out a file.\n\n\"So, now you have seen the front. This is your portfolio. This explains your front, meaning your job, your accounts, background, what you do, and so on. You need to memorize it and be able to answer any questions on it. This is your business account. Once a day you will get an encrypted file with a timer on it. Once you click on the file, you have 1 hour to read it, then it deletes completely. The code is in your file, you need to reset it daily after one use, no patterns. This gives you a run-down of \"your work-day\" meaning what you supposedly worked on. It's a mix of fake stuff and some real-world work tossed in that was done by someone else and coopted into your work. Anyone who asks you about what you worked on you have something that can be verified. If you are on a real-world mission where you can't check stuff in, your work will reflect it by saying \"out in the field\" or some such. You don't ever have to worry about anything other than checking that file. Mr. Case will notify me when you are out on a job. After today, I don't ever expect to see you here again except when Mr. Case is fronting for something.\"\n\n\"Got it. What else?\"\n\n\"Inside your file you will find a company credit card. Use it for business-related stuff, buying ink for the printer at home, meals while in Miami, spend at least a grand a month on it. A list of things you can use it for is included. When you are out of town, leave this card at home. We will put some fake transactions on it to match the cover story. This is your front 401K, insurance, and bank account. Use it only while in Miami. You are responsible for your own money affairs on the other stuff. There is also a medical card in there, it's a plain white card with a red edge. It has a website address and a phone number. It's the medical plan you will use for while working. Using that number or website will get you in touch with certain medical professionals who take cash and won't talk if you follow. There is a number for your \"account\" on the back, use it when signing in.\"\n\nThe man then pulled out a couple small devices. \"This is a white noise generator, and this is an EMP pulser. Use them as you see fit, they look like power packs for your cellphone, but that is just for looks. This here is a bug sweeper, like what I just used, but smaller. Your place has one hidden behind your bathroom mirror, use it daily. Once you move into another place of your own, you can take it with you. If you need a new one call the help desk. And here is your first burn phone and alert number.\"\n\nBrandi nodded and packed away the various things. \"By the way, I'm Mr. Jones. Last thing, do you have a weapon?\"\n\n\"I have a Colt .25 automatic pistol and I have a small stiletto knife with a leg holster.\"\n\nThe man got a humored look. \"Everyone always gets one of those knives when they start. I recommend you get a Gerber multitool, might not be as easy to get the knife out, but is a hell of lot more useful. Can you shoot the gun well?\"",
        "\"I can.\"\n\nThe man nodded and made a note. \"Alright, this is a card to a certain gun range. See the man named Mack, he will check you out on it. If you are any good, we will see about setting you up with a kit for your gun. If not, he will train you. While that gun works, if he recommends something bigger or heavier I'd listen to him. You will be getting a concealed carry permit in the mail tomorrow. Oh, yeah, here, regular old business cards for the yuppie.\"\n\nBrandi loaded up everything and headed downstairs. She linked up with Brenda and they went to another office building. She led her through a door into an office with no name on it and past a very tough looking guard in a suit. Brandi could tell he was carrying a weapon by how he moved and the way his suit was cut slightly different.\n\n\"I swear, how can normal people NOT see this stuff?\" Brandi wondered and shook her head as they went into a small conference room.\n\n\"Okay kid, quiz time. You have had a chance to see the places you need to blend into and the people you need to know and now have seen at least a glimpse of what your front is. In this business you don't get second looks or takes, so let's see what you know.\"\n\nBrenda clicked on a screen and a picture of a man popped on.\n\n\"Who is this?\"\n\n\"Mr. Daren Lassilo, COO of 1<sup>st</sup> Miami International Bank.\"\n\nBrenda frowned just a bit at Brandi's reply and then really got into it.\n\nBrenda went through multiple photos of various people she had introduced Brandi to the day before and Brandi rattled them all off. After the first several she started asking her questions about their background that they had talked about. Brandi got those as well, and Brandi had to work to keep her face smooth as Brenda went from slightly amused to annoyed to pretty damn pissed off.\n\nBrandi could read her body language easily and could easily see Brenda had gone off the reservation in terms of questioning and was getting so mad she was nearly trembling in anger. Brandi was beginning to get a bit worried about how well she was going to handle this when Brenda took a deep breath and said in an even voice \"Damn. Okay kid, you win, you got the background down perfectly. How did you set me up?\"\n\n\"Beg your pardon?\"\n\n\"Either you have a trick, or Mr. Case is fucking with me. Which is it?\"\n\nBrandi smiled. \"I guess I could have told you about my photographic memory.\"\n\nBrenda growled. \"Photographic memory? No kidding? Well, that explains a lot then. Ok, let's see how well you do on your background then.\"\n\nBrenda spent the next hour going over Brandi's new professional identity. She seemed a lot more at ease this time and Brandi had it all perfectly. Brandi smiled and put on the front of \"The new kid being happy they did so well for the boss\" look.\n\nBut she was nervous. Brenda was much more relaxed, but there was a new tension in her. It was like she had reached a decision on something and was figuring out how to do it. Brandi could tell she was working hard to put her at ease and that was making her internal alarms go off big time.\n\nBrandi was going over in her mind what Mr. Case had told her about Brenda and what she had learned since. But she always kept coming back to Mr. Case's comment from the second time they had met.\n\n\"Next time, don't wait to act.\"\n\nAfter a bit longer Brenda sighed and said \"Okay Brandi, you are solid. Too bad you can't teach me how to have a photographic memory, must make things easy.\"\n\n\"Not as easy as you think. I'm glad I got to go over all of this with you, it's one thing to know it, but it's another thing to really know it, if you follow.\"\n\nBrenda smiled and nodded. Brandi returned the smile even though she saw that cold look her Brenda's eye again. Brenda stood up and stretched. \"Well, you pass muster on this test. Hey, you hungry?\"\n\n\"Yeah, now that you mention it, I don't think I had lunch.\"\n\n\"Well, I happen to know a spot, nice out of the way, great food and everyone minds their business.\"\n\nBrandi's alarms were going off big time but she smiled and said \"Sounds great.\"\n\nThey got into Brenda's car and she was soon zipping down the road. Brandi noted immediately (she had memorized a road map of the greater Miami area) that she was heading towards a bad area. A place where people didn't go unless they had some business to do that was not legal or were cops. Brandi sighed and waited for her chance. They were turning a corner when Brandi looked behind them.\n\n\"Brenda, I think we have a tail. Green four door SUV one car back.\"\n\nThe SUV turned with them as Brenda checked her mirror. Brandi had seen she had not been keeping an eye out in the rearview much and was hoping this might give her a bit of a push.\n\n\"You sure?\" Brenda said as she had to stop at a stopped car at a stop sign. The Green SUV had heavily tinted windows and pulled up right behind them.\n\n\"Yeah, but let's check. Go through the stop sign and then duck right down the alley. Punch it all the way, come out on the other end, go right, then go right and circle around.\"\n\nBrenda gave her a look between \"Impressive\" to \"Are you fucking kidding\" but nodded. She went through the stop sign, and then gunned it. She jerked the wheel to the right and zipped down the alley. As per Brandi's memory of the map, it was a large alley and mostly empty so the sports car had no issues. Just as she was getting towards the end of the alley Brenda slammed on the brakes, stopped and backed quickly behind a dumpster with just her mirror peaking out. She watched and then then let out a sigh.\n\n\"Guess you were wrong, the green SUV just drove past without stopping. Damn girl, you had m...\"\n\nBrenda turned around and Brandi locked lips with her. She shoved over the divider and pushed Brenda up against the door. Brenda thrashed and tried to break free but was only able to rev the engine and then honk the horn while she struggled. After a few seconds her struggles ceased and she went limp.\n\nBrandi broke her kiss and sat back in her seat. Brenda's eyes were rolled up in her head and her head hung limply. \"Whaaaaaaa happppppppndddd?\" She slurred out.\n\nBrandi got out, went around and opened the door. She pulled Brenda out of her seat, led her around to the other side, sat her down, buckled her in and then gave her a sensing kiss and scanned her memories over the last couple of days. Brandi shut the door and got in the other side. She pulled out her burn phone as she peeled out of the alley. She dialed the Help Desk and waited.\n\n\"Help Desk.\"\n\n\"This is Brandi Mimms, number 58942.\"\n\n\"Yes Ms. Mimms.\"\n\n\"You are about to have a major cyber-attack on the dark web and front system. The hackers are coming from overseas, possibly Russia, for sure Eastern Europe. They are going to be using Brenda Lynn's access code along with two others, one from a Marcus, don't know the name, and the other a woman who was working on something called \"Project Codex\". I get the feeling she may have been out of contact for a while and this might be disguised as a call for help.\"\n\nThere was a pause and then another voice came online. \"Ms. Mimms, please repeat what you just said, there are several people online.\" Brandi did. Another short pause. Then Mr. Case's voice said \"Act on what she said. Brandi go to the safe-house listed in your file and wait there. Is Ms. Lynn with you now?\"\n\n\"She is, but she is currently unresponsive.\" Brandi said.\n\n\"I understand. Take her with you and carry out your assignment. Keep the phone handy as you may get new directions shortly.\"\n\nThe line went dead and Brandi drove quickly to the safe-house. She pulled into the driveway of a small two-bedroom economy in a lower middle-class neighborhood that looked like everyone minded their own business. She got out, tapped in the access code, and then opened the garage door. She pulled the car in (it would really stand out if she left it outside) and shut the door. She heaved Brenda to her feet and mostly dragged her into the nearest bedroom.\n\nBrandi went to the fridge and got a bottle of water. She sat down and drank some and shook her head.\n\n\"Cripes. First real day on the job and I find out my lead is a mole for some European mob. Christ, I am really starting to lose faith in humanity.\"\n\nAfter catching her breath and then checking the windows to see if anyone was taking an interest that they shouldn't, she then swept the house for bugs using her gear. Satisfied, she turned on the white noise generator and set it on the nightstand in the room with Brenda.\n\n\"Well, time to get to work. You are very pretty, this should be fun.\" Brandi said as she started to undress. Brandi stripped naked and then stripped Brenda. Brandi giggled as she looked over her target.\n\n\"Nice body baby. My, my, pussy nice and shaved, and a little rose tattoo over your clitty. Naughty girl.\" Brandi said with her devilish voice. Brandi eased down and gently kissed Brenda's clit and Brenda stiffened and then let out a long sigh. Brandi felt her body just relax and slowly go completely limp as she kissed her pussy gently and then swirled her tongue around. Brenda let out a cooing sound and Brandi giggled and then started to suck on her clit and then on her pussy lips.\n\nBrenda's head began to roll around and she started making baby babbling sounds. Brandi giggled more and kept at it.\n\n\"Damn girl, most of my marks are stone cold out by now. You must be pretty strong willed, oh well, not strong willed enough.\" Brandi moved a finger into Brenda's slit and with a loud \"Abbbbbbbaaaaa.\" Brenda passed out.\n\nBrandi noted she hadn't orgasmed yet, but she was plenty wet. Brandi arranged her legs and then eased up between them.\n\n\"Feeding time. MMMMMMMMMMMMMSSSSSSSSSSSSSSS!\" Brandi hissed out as her pussy rubbed hard against Brenda's.\n\nBrandi hissed and then growled. \"What the fuck? Are you fucking trying to resist me? ME? You fucking whore!\"\n\nBrandi was getting jolts of pleasure but they were lesser than what she had gotten before. Brenda's face seemed to be contorting a bit. She was out, but her face indicated that sub-consciously she was trying to focus.\n\n\"You fucking fuck! I am going to have your fucking mind!\" Brandi snarled. She ground her pussy hard into Brenda's and they both let out a large gasp and a jolt of pleasure seemed to rip through Brandi like a dam giving way.\n\n\"Mmmmmmm! Mmmmmmmmm! NNnnnnnnnnnn, fuckkkkkk meeeeeeeee! So fucking good!\" Brandi growled out as the rush of pleasure and energy hit her full on. She hadn't fed yet today, so she swooned and moaned for a few minutes as wave after wave on sensory input washing through her connection. She felt Brenda tremble and then orgasm and then she matched Brenda's with one of her own.\n\n\"Fuck! Fuck! Fuck! Fuck! Sooooooooo gooooooooooooooood!\" Brandi panted out. \"God damn! Focus Brandi! Fuckinnnnggggg, ngggggg, focus!\" Brandi was finally able to clear her head just a bit and get her thoughts back under control.\n\n\"Fuck! I could just stay like that forever if I'm not careful. Kay, now, mmmmmmmmm, sssssssss, now to get to work.\"\n\nBrandi dug into Brenda's brain. Brenda had tons of stuff and Brandi didn't need to worry about messing her up. Brandi found her various skills (lockpicking, hacking, karate at black belt level, pick pocketing, gambling, appraising jewelry and so on), her knowledge (everything related to Mr. Case, in short most of her memory over the last 15 years), and most important the plan for how she was going to betray the organization and why.\n\n\"You, \"grunt\", stupid, sssssss, cunt!\" Brandi moaned out. \"Fucking idiot! Oh FUCKKKKKKKKK!!!!!\"\n\nBrandi orgasmed hard and felt the blast of the upload hit her like a swinging log. Her whole body jerked and it broke the connection. The sudden end of the pleasure caused Brandi to start and then lose her balance and fall backward off the bed and bang her head on the floor.\n\nBrandi came to a few minutes later and rubbed her head. \"Ow. Fucking OW! Damn, what a rush that is, but I really wish I could pass out and stay on the fucking bed next time.\" Brandi laid back for a moment and felt the faint aftershocks of pleasure course through her body. \"Mmmmm, that feels so fucking nice. God yes. Mmmmm, so nice.\"\n\nBrandi zoned out for bit. Aside from her whole body feeling the joy of a massive orgasm, her mind felt stuffed and gorged and she had the post-thanksgiving feast lethargy mixing with it. She just wanted to curl up under some nice covers and sleep. After a bit she decided why not and crawled up onto the bed.\n\nBrenda was lying on her back, completely out of it with a huge smile on her face, sweaty, cum-streaked, and reeking of hot and heavy sex. Brandi leaned over and kissed her on the lips and Brenda let out a low sigh and snuggled closer to Brandi. Brandi giggled and put her arms around the comatose form. After a moment she sighed and rolled over. She forced herself to get up and go into the kitchen. After digging around for a bit she found what she was looking for. She went back and zip tied Brenda's wrist and ankles together and then snuggled into bed with her.\n\n\"Never take chances my little former spy.\" Brandi said with a yawn and then passed out.\n\nBrandi woke up to a buzzing sound. She felt a bit better but still very stuffed and worn out. She grumbled and picked up the burn phone. She checked the number. It checked out and she answered.\n\n\"Yes.\"\n\n\"Things have calmed down on our end. How is your end?\" Mr. Case's voice was definitely in business mode.\n\n\"Things are fine here. Subject is fully neutralized as per discussion and I have the details of what was supposed to happen.\"\n\n\"Why didn't you call with them earlier?\" Mr. Case said with a no-nonsense tone.\n\nBrandi paused for a moment and then shrugged. \"Two reasons; one the attack was already underway and nothing I had by then would help you any given you already had the three main avenues of attack. Two, I was so fucking drained by what I did to Brenda I had to take a nap. She is still completely out of it, and I can barely think. This one was harder I think. I had to work at it more for some reason. I am thinking it was likely due to her strong will and stubbornness.\"\n\n\"We will look into the aspect further at a later time. Next time, you WILL call in with whatever you have at the time.\"\n\nBrandi rubbed her head and said \"I understand. I will but understand this knocked me out for a bit so no promises.\"\n\n\"Noted. There is another phone hidden behind the toilet with a slip of paper with the ID number. Break this one and pick up that one. Remain there overnight, get some sleep, if you need to eat, use what is in the fridge. Do not order out, and no one from the company will come by to see you. If someone does get out of there and head to the HQs office.\"\n\n\"Got it.\"\n\nThe phone went dead. Brandi smashed the burn phone against the corner of the bedstand and then got the other phone. Brenda was still completely in la-la land and snoring peacefully. Brandi grumbled about her getting to get some sleep and then went and got a shower and then some food. After eating, Brandi began sorting through her head.\n\n\"Well, Brenda certainly had a lot of useful stuff, but damn if she didn't get sloppy as hell. And all for a guy.\"\n\nBrandi shook her head. Brenda had been on a mission several years ago and had met someone in Europe. A handsome man, Russian, and the one man who wouldn't take her shit other than Mr. Case. Brenda had fallen head over heels in love with him. Brandi had seen some of the memories and she sighed.\n\n\"I'm not one for romantic sap, but damn, she had some fun with Nicoli. Mmmmm, that one in Red Square was so hot.\" Brandi murmured.\n\nNicoli was a very important man in a large Eastern European Criminal organization. It turned out that it was one group Mr. Case avoided dealing with at all costs. It had ties to several formal intelligence agencies from some very power countries and did a LOT of dirty work for them. Mr. Case had been at odds with them for a long time.\n\nBrenda had been the perfect opportunity for them. And Brenda went along willingly. She had felt that only 35% of the value of a job was severely unpaying her despite making over ten million a year. Love was part of it (and some really awesome sex apparently), but so was pride, arrogance, and flat-out greed.\n\n\"This bitch had no honor. God, I can't believe I am saying that, but that is the truth. She had no loyalty, no feeling of comradery, no feelings of debt to Mr. Case for getting her into the business, no appreciation for what he had done for her. Nothing. The picture of self-fucking-centered. That and what she was going to do to me just because I showed her up? Fuck you bitch.\"\n\nBrandi glanced at the stainless-steel refrigerator and saw her reflection. She looked into her own eyes for a bit and then shook her head. \"No, I'm not like that bitch. Sure I am out for me, but I can understand when someone does me a good turn that I should repay them. And after this little incident, I get the feeling that there won't be too many safe places for people who betray Mr. Case. Nope, I think I will be loyal enough to do my job and then if I need to get out of this, I'll do it smart.\"\n\nBut Brandi mulled over her acquired memories and thoughts and frowned. \"But what is smart in this case? Brenda had found a reason, well one she could finally face up to other than flat out greed and arrogance, she wanted to stop doing what she was doing and this was the only way she thought she could get out. By destroying the people she worked with and for so they couldn't get her. She didn't trust Mr. Case. She didn't trust anyone. Shit, I need to start thinking about this now. To retire from this job may require a really long-term plan.\"\n\nBrandi paused for a moment and then let out a laugh. \"God listen to me. Six months ago, I couldn't think past the next Friday night party. Now? Damn, I guess I have grown up.\"\n\nBrandi heard a murmur from the bedroom and she walked in wearing one of the robes that had been hanging there. Brenda was looking around confused and dazed.\n\n\"Good evening sleepyhead.\"\n\n\"Um, hi?\"\n\nBrandi sat down and smiled at her. \"So Brenda what do you remember?\"\n\n\"Um, nothing really. It's all messed up, like big holes in my life. My last clear memories are from when I was junior in Harvard, then there's all sorts of holes and gaps.\" She frowned and then winced. \"Ow. It hurts to think. Er, who are you?\"\n\n\"I'm a friend. There was something bad that was going on and I got you out of the way. Things are safe now, but you need to stay here with me until my friend comes and lets us know for sure things are okay. You hungry?\"\n\nBrenda nodded like an eager little girl and Brandi cut off the ties and got her into a robe. \"You will need to shower, but let's eat first.\"\n\nBrenda ate up the simple defrosted meal Brandi made for her. Brandi quizzed her lightly, but it was very obvious her brains had been ripped apart. She was confused about a lot and sometimes started to cry when memories just ended. Brandi felt a bit bad when that happened, but then remembered what she had planned to do both to the organization and her and then had to hold back her rage.\n\nAfter eating Brenda went to take a shower. Brandi heard a knock on the door. Getting her gun she carefully checked using the hidden doorbell cam and let out a sigh of relief when it was Mr. Case.\n\nShe ushered him in and he sat down. \"Sorry for my state of dress, but like I said, the draining did a number on me. She resisted a bit, and I had to push through it. Wiped me out for a while afterwards.\"\n\nMr. Case nodded. \"That makes sense, she had taken several courses on resisting interrogation so that might have helped her. But you did get what we discussed?\"\n\n\"She will never spy again. She had no concept of how to do it, and she had no memory of you in that manner. She does remember working for the front though. I left that in place, she knows she has been doing consulting work for you for 15 years but has only met you a couple of times when you played that role. I figured it would lessen the blow and let her have a chance at living a normal life. She's going to need it.\"",
        "Mr. Case arched an eyebrow. \"She's in debt up to her eyeballs. She was able to hide most of it from you, some very creative bookkeeping really, but that's how she met Nicoli. She lost several million at one of his underground casinos in Warsaw and they took her up to see him about how she was going to pay it back. He knew she was a spy but had thought she was a CIA spook. He was going to blackmail information out of her when he found out who she really worked for. She fell hard for him and he was apparently at least fond of her, enough that he helped her out with some other debts. They put together the plan to attack you on the dark web, burn your agents, get your files, and wreck your hidden finances. She seduced the code out of Marcus and she burned your other agent and helped them torture the information out of her. After this attack, she and Nicoli were headed to a private island to enjoy their victory. They didn't really want your money or information, they were just chumming the waters to get others to come and rip you apart, that way you couldn't target any one group as you wouldn't be able to trace it back other than some vague ideas.\"\n\nMr. Case had a mixed look of respect and anger. \"That fills in the blanks nicely. I have traced it back directly to the mob responsible, and the word is out. Their attack was a complete failure and we were able to reveal some of their very valuable assets in the counter-attack to some \"friends\" of mine in the NSA. They are going to take a big hit in their cyber-crime section for this, and very likely Nicoli is going to get a rather permanent demotion.\"\n\nBrandi smiled. \"Good. The memory I have of how he and Brenda broke your agent is enough for me to hope it's not a quick demotion.\"\n\n\"Yes, I agree. But I will take what I can get, namely his head on a pike. Now then, what about Brenda?\"\n\nBrandi took a breath and said \"Keep her on.\"\n\nMr. Case arched an eyebrow and Brandi held up her hands. \"Hear me out. She is absolutely no threat to you anymore. I mean none. She couldn't spy on a sleeping dog if she was tied to it. But she has her front skills, in fact she thinks all of that stuff was real. She can actually DO it. I'm not saying this because she deserves to get away with anything, but she can repay you by helping the keep up the front. For others in the real business, it will look like a retirement of an agent who has been so badly burned they can't get back in. For those who don't, you can make it like an office promotion. She is a big social splash around here, let her be more of the official face. She will never know the real story.\"\n\nBrandi paused and then looked Mr. Case dead in the eyes and gave the final push. \"And it will also look like she was in on a double-cross. If anyone wants to take revenge, they will go after her, not you or me.\"\n\nMr. Case gave her a very level look. \"That is a rather cold-blooded solution.\"\n\nBrandi returned the look evenly. \"She was planning on drugging me and then dumping me off in a bad part of town. She was going to use the attack as a cover to disappear and hopefully make me disappear or be so spooked I wouldn't want to do this and take off. You know why? Because I showed her up at that cocktail hour and she was so fucking petty she decided that should be my punishment. So yeah, fuck her and the horse she rode in on. You said it yourself, \"Don't wait\". So I didn't.\"\n\nMr. Case thought about it and then said \"I don't know, but it is worth thinking over. Get her cleaned up and then take her to this address. It's her new apartment, at least for now until we decide what to do. Leave the keys in the car. We will get rid of it and use the Honda that is now parked out front.\"\n\n\"You got it boss.\"\n\n\"And Brandi? Two things. One, great job. Two, you are right, don't wait. Ever.\"\n\nBrandi waited until she heard the shower turn off and then walked in on Brenda. She was toweling off and Brandi noted her finely toned body and pert tits. Brenda smiled shyly and Brandi giggled.\n\n\"How are you doing?\"\n\n\"Better. I'm still really confused about what happened, but when I don't think about it I'm okay. I try to focus and I get a really bad headache.\"\n\n\"I figured. There was a chemical leak at the office. They were doing some stuff in the basement and a bunch of stuff got spilled and it mixed together and got into the ventilation. Really noxious stuff. I was just coming in when they started pulling everyone out. Mr. Case told me to take you home because you got a full dose of the stuff. You were really out of it.\"\n\nBrandi put her eyes down and smiled shyly. \"You, uh, you kinda made a pass at me and one thing kinda led to another...\"\n\nBrenda blinked and blushed. Her eyes seemed to focus for a moment and then she winced and put her hand up to her temple. \"Ow. I made a pass at you?\"\n\nBrandi smiled again and walked up to Brenda who was now looking very confused and in pain. Before Brenda could react Brandi leaned in and kissed her. She scanned her and noted she was still very jumbled and confused, but she did have some memories of the pleasure they had shared. Brandi lightly scrambled her brains a bit and then broke the kiss.\n\nBrandi looked in Brenda's eyes and happily noted the dopey look was back and Brenda had a stoned smile on her face and very glassed unfocused eyes. Brandi took her by the hand and led the unresisting woman back to the bed and laid her down. Brandi laid down next to her and drew her finger up from Brenda's bellybutton to one of her nipples and then leaned over and gave it a nice little kiss. Brenda let out a contented sigh and Brandi kissed the other one and then slowly kissed up to Brenda's lips.\n\nBrandi was fully sated, so she didn't really try to scramble Brenda anymore and Brenda didn't need any work as her mind was tripping out as far as Brandi could tell with each little kiss.\n\nBrandi gently pulled Brenda's face down between her legs and said \"Kiss it.\" Brenda did and Brandi sighed. \"Again.\" Brenda did and this time kept kissing. Brandi gently pushed her face deeper into her pussy and said softly \"Lick it, kiss it, please it.\" Brenda did as she was told and Brandi lay back and enjoyed being the one getting the attention for once.\n\n\"Mmmmm, this is nice Brenda. We should do this more often. You are very good with that tongue.\" Brandi said and let out a contented sigh. While this didn't even remotely compare to the overwhelming blasts of pleasure she got during sex or oral, it was very lovely and enjoyable in that she was the one getting the attention and not having to do the work. She wasn't feeling the jolts nearly as much, more like little zaps that made her want to giggle when Brenda kissed her pussy hard or really got her tongue into her.\n\nBrandi let Brenda work on her for a while, occasionally having to give her instruction as she would sometimes just space out. Brandi felt an orgasm build and she gently pushed Brenda's head down into her crotch. \"Now pet, work that tongue, swirl it, that's it...Yeesssssssssssssssss.\"\n\nBrandi let out a contented sigh as the orgasm hit her. It was easy and gentle compared to the mind blowing, body convulsing knocking her off the bed ones she had otherwise. She smiled and pulled Brenda up next to her. Brenda smiled the smile of the mindless and stoned and Brandi giggled. Brenda joined in and Brandi pulled her next to her and then pulled on the covers. Brenda snuggled up close and with a sigh feel into a deep sleep.\n\nBrandi petted her a bit and then sighed. She reached over and set an alarm for a couple of hours and then snuggled under the covers.\n\nShe yawned and said \"Well my little mole, you have a nice nap and then we will get you to your new home. This was fun. Thank you for being such a wonderful tutor.\" Brandi closed her eyes and dropped to sleep with her arms around her mark.\n\n \n"
    ],
    "authorname": "Moosetales",
    "tags": [
        "mind control",
        "girl on girl",
        "oral sex",
        "brain washing",
        "spies",
        "betrayal",
        "seduction"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/blow-your-mind-pt-05"
}