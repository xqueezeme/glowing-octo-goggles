{
    "title": "The Usual Suspects Ch. 03",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 10 - Aikido Rules \n\nFrom around the corner, Phyllis Troy ran up. \"What are you doing?\" she screamed at Ferrell, distracting him. He turned to face her.\n\n\"You fucking cunt!\" Ferrell snarled. \"I'm going to finish what Ikea started. And your turd son isn't here to save your sorry ass!\" He advanced upon Phyllis and swung as hard as he could at her face. Phyllis dodged the blow, and saw his shoulder joint pass by... ah, a joint. She knows what to do with those.\n\n*WHAM!!*\n\nFerrell came down hard on his neck and cheek, driven into the floor by his own body weight. As he lay stunned, Phyllis moved to get the wheelchair off Tanya.\n\n\"Are you all right?\" she asked. Then she saw Ferrell trying to get up, and going for his gun.\n\n*WHEE!* *WHEE!* *WHEE!* *WHEE!* *WHEE!* *WHEE!* *WHEE!* *WHEE!* *WHEE!*\n\nIt was the building fire alarm. As people began coming out of the rooms into the hallway, Ferrell rushed for the stairs to get away. Phyllis pulled the wheelchair off Tanya's legs.\n\n\"Tanya, are you okay?\" Phyllis asked.\n\n\"No.\" said Tanya. \"I can't feel my legs, but I know something is wrong.\" Phyllis looked and saw the bruises forming on Tanya's thighs.\n\n\"Let's get her to the hospital!\" said a technician as several ran up.\n\n\"Call an ambulance!\" replied Phyllis, taking charge. Then Tanya handed her the file and jump drives.\n\n\"Take these to your son.\" said Tanya. \"That's more important than anything. Get some of these guys to go with you.\"\n\nAs Phyllis and two technicians rushed to the elevator, she got out her cellphone and made a fortuitous phone call.\n\n* * * * * * * * * * * * * * * *\n\n\"I'm sorry, Commander, he got away.\" said Captain Cortese, commander of the 1st District State Patrol Post. With him was Sergeant Rudistan, and they were in my office at Police Headquarters. \"We expected him to go either south towards Midtown or east towards Hillside and maybe cut south. But he went west. He crossed the State Line.\"\n\n\"The only non-stupid thing he's done all day.\" I said. \"Okay, Captain, thanks for your efforts.\"\n\n\"Sir,\" said Captain Cortese as he read a text, \"the SBI is ordering the State Patrol to cease and desist pursuit of Lieutenant Ferrell.\"\n\n\"Those orders do not apply in this County to you, Sergeant Rudistan.\" I said. \"Put out an APB on Ferrell for aggravated assault with the intent to kill. Do it in the Sheriff's name, not mine, and I've already gotten his permission.\"\n\nMoments later, as I sat alone in my office, the Three Mouseketeers came in. \"We got the hallway footage from the State Crime Lab building, sir.\" said Myron. \"But we had no warrant to hack them, so I don't know if it's valid.\"\n\n\"It's valid, Mr. Milton.\" said a voice. It was my mother's voice. She came up to us and said \"Two technicians recorded what Ferrell did to Lt. Perlman in the hallway. They sent videos to the TCPD and the Campus Police, and we're holding their cellphones as evidence for now.\"\n\nI accessed the evidence servers and watched. It was painful to watch Tanya take that abuse, and I was very angry, very angry in-deed. \"How is Tanya?\" I asked.\n\n\"Dr. Morgan said it was lucky her legs weren't broken.\" my mother said. \"They have her on exercise therapies to try to keep her leg muscles as strong as possible, but it's not all that much. And she had some severe bruising that they're going to monitor overnight. She's lucky, son. Very lucky.\"\n\n\"So is Ferrell... in a 'bad luck' kind of way.\" I said. \"Nothing will stop me from destroying that bastard if I ever see him. My katana will be blooded, consequences be damned.\"\n\n\"Not if I get him first.\" said another voice. This one belonged to FBI Special Agent in Charge Jack Muscone.\n\n\"Why aren't you at the Hospital, Special Agent Muscone?\" I asked.\n\n\"I was.\" Jack replied. \"They're running tests, and I think Tanya felt a bit humiliated to have me there. She asked me to come see you.\"\n\n\"I think you're right, Jack.\" said my mother. \"I believe she felt very helpless lying there, but it was she who activated the alarm.\"\n\nTanya had a necklace that had a button secreted in it. It was the equivalent of the \"I've fallen and I can't get up\" kind of alert. She also had something secreted in her wristwatch, and when she pressed that, the fire alarm went off in the building, and camera evidence was automatically moved to evidence servers. It was Dr. Marvin Milton that had given Tanya the watch, fearing for her safety as he'd feared for mine when he gave me the belt alarm. Tanya's own acumen to have camera evidence preserved if she activated the alarm is what caused her to activate it.\n\n\"All right.\" I said. \"Myron, I need jump drives of this video prepared.\"\n\n\"For whom, sir?\" asked Myron.\n\n\"For the Press.\" I replied. \"By the time I am done, both Ferrell and his boss Jack Lewis will rue the day they hurt Tanya.\"\n\n\"By the way, Mom,\" I said after the Mouseketeers had left. \"Awesome job planting Ferrell's face into the floor.\"\n\n\"I was trying to kill him, you know.\" Phyllis said. \"Unfortunately, my skills are rusty.\"\n\nWhat you may not know, people, is that when Elizabeth and I were young, we were not dropped off at our Aikido lessons... we went with our parents. My mom and dad were both very good with Aikido, as Elizabeth and I learned to be.\n\n\"And Ferrell has a very hard head.\" I replied. \"Okay, so what did Tanya learn?\" I asked, looking at the information even as my mother spoke.\n\n\"As you know, son, the SBI made a raid and confiscated some synthetic drugs. Some of those drugs apparently are nothing short of nerve agents, and somehow they found a way to inject young Jeremy with those drugs. The drugs destroyed his brain stem and cerebellum, and virtually all of his autonomic activity.\"\n\n\"Was this done at the scene?\" I asked, \"or at the Hospital later?\"\n\n\"It was fortunate I asked for blood samples to be taken even as Jeremy was being transported to the Hospital, was it not?\" my mother asked. \"They show it happened at the scene. We'll never prove it was Ferrell, but he was in this County at the time, monitoring your casino stings.\"\n\n\"For what I am about to do,\" I said, \"I don't need proof.\"\n\n\"Son, you should refrain from physically attacking him at this time.\" my mother admonished. \"Your enemies will use any attack by you against you.\"\n\n\"Oh, I'm not going to touch him, not just yet.\" I said. \"We have something far, far more important to do for our State first...\"\n\nPart 11 - Revenge of the Crowbar \n\n\"Director Lewis!\" shouted Priya Ajmani at the Press Conference Jack Lewis was giving at the Lakeside Inn and Suites resort hotel, \"do you support Richard Ferrell as your successor?\"\n\n\"I think he's a fine SBI Officer, and one of the reasons the SBI is the premiere law enforcement agency in the State. He will certainly be considered when I become Governor.\" said Jack Lewis.\n\n\"Even though Director Ferrell attacked a paraplegic SBI Agent, Mr. Lewis?\" asked Tim Sioban of KSB in the City. The silence was sudden and overwhelming.\n\n\"What?\" asked Lewis. \"What are you talking about?\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is Amber Harris, KXTC Channel Two News at Six!\" said the athletic blonde behind the anchor desk. \"We are bringing you shocking footage of SBI Agent and Narcotics Task Force Director Richard Ferrell attacking Lt. Tanya Perlman, who is a paraplegic. This is very disturbing video, showing Mr. Ferrell throwing Lt. Perlman's wheelchair on top of her legs...\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is Diane Williams at the City National Newsdesk.\" said the decided blonde from her anchor desk, which had a national audience. \"A State Bureau of Investigation Officer is being investigated after throwing a paraplegic Crime Lab employee out of her wheelchair! Lt. Tanya Perlman is paralyzed from the waist down, and was unable to avoid Agent Ferrell throwing her wheelchair on top of her!...\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is Priya Ajmani, Five-Alive News in the evening!\" shouted the lovely Indian reporterette. \"SBI Director Jack Lewis continues to support his NTF Director, Dick Ferrell, after Ferrell attacked Crime Lab Director Tanya Perlman, throwing the paralyzed woman to the floor and dropping her wheelchair on her. Ms. Perlman was hospitalized with severe injuries...\"\n\n* * * * * * * * * * * * * * * *\n\nIn all cases, the footage of the Ferrell attack was shown over and over again, all over the State, and even on a few national outlets that used Diane Williams's coverage. \n\n\"You know, Commander,\" said the Chief as we sat and watched in the Main Conference Room, \"it is likely that Ferrell can't be prosecuted now, because the evidence is being shown all over the State.\"\n\n\"Yes sir.\" I said. \"But he can be fired after an investigation. And we're going to nail Jack Lewis's foreskin to the wall and staple-gun his scrotum with this.\" The Chief was laughing hard at my potty-mouth language.\n\n* * * * * * * * * * * * * * * *\n\n\"We don't have any information yet.\" said Jack Lewis as reporters thronged around him. \"The SBI is handling this as an internal investigation. We will determine what actually happened, and you should not jump to conclusions based upon sensationalized video tape that we have not verified yet as being accurate.\"\n\nLewis was shuffled into his car, and was driven to the SBI's Midtown offices. Once there, he was escorted into the building by a back door, so that reporters could not speak to him. Once inside, he was taken to a conference room. Inside were SBI Deputy Director Robert Gaston, State Senator Katherine Woodburn, State Senator Richard Langdon, and his top campaign managers.\n\n\"How bad is it?\" Lewis asked, seeing the haggard, stunned faces around him. \"And where is Jimmy Cerone?\"\n\n\"He declined to come.\" said Langdon. \"And I can guarantee you I considered it. This is a disaster, Lewis. An unmitigated disaster.\"\n\n\"Let's not jump to hasty conclusions.\" said Lewis.\n\n\"Have you seen the tape?\" asked Katherine. Lewis said he had not. Katherine had the campaign people run the footage from the various angles.\"\n\n\"Jesus Christ...\" Lewis whispered, practically falling into his chair. \"Oh my... God....\" He watched it again, just to make sure his eyes were not lying to him.\n\n\"As you can see, Director,\" said Gaston, \"it's bad.\"\n\n\"First of all,\" Lewis said, groping for words, \"has anyone talked to Ferrell? Has anyone asked him just why he did that?\"\n\n\"No,\" said Katherine Woodburn, \"but we don't need to ask. Lt. Perlman's Crime Lab found strong evidence that the drugs captured in the SBI raid some days ago were used on Jeremy Moreland, and may in fact be what killed Jeremy. Perlman was trying to get the evidence to the Iron Crowbar, and Ferrell interdicted. After what you saw on the tape, the Iron Crowbar's mother came upon the scene and Ferrell attacked her.\"\n\n\"Ohhhhhh, nooooooo.\" said Lewis. \"After what the Iron Crowbar did to Ikea for hitting Mrs. Troy...\"\n\n\"Fortunately, Ferrell got out of the County before the Iron Crowbar found out.\" said Katherine, hurling her words at the SBI Director. \"Mrs. Troy did defend herself from Ferrell with martial arts, by the way. She's no slouch.\"\n\n\"Ferrell did that to a paralyzed woman...\" whispered Lewis. \"What is this doing to the campaign?\"\n\n\"We don't have polling yet.\" said Langdon. \"But your campaign may well be finished.\"\n\n\"No, we have to find some way to mitigate this.\" said Lewis.\n\n\"You'll have to fire Ferrell.\" said Katherine. \"You will probably have to serve him up to the System on criminal charges. You have to separate yourself from him, and you need to make a Press statement very, very soon.\"\n\n\"No, that is what you must not do.\" said Robert Gaston. \"Director, you have to come out and support Ferrell on this. Say this isn't what it appears to be, that it's a smear job by Jared and the Republicans.\"\n\n\"Are you fucking kidding me?\" Katherine all but screamed. \"This tape is all over the State, and you say Lewis should support Ferrell?!?!?\"\n\n\"Yes, Senator.\" said Gaston. \"That is the only way for the Director to save his campaign. He says there will be an 'internal review' of Ferrell, and a 'security review' of the State Crime Lab cameras and Lt. Perlman herself. You must say that Ferrell has done nothing wrong, though. Make people doubt what has happened, and what is going on.\"\n\n\"That is the craziest thing I've ever heard, outside the Iron Crowbar's County.\" said Katherine.\n\n\"Katherine,\" said Richard Langdon, considering it, \"we must think about this. On its face, it would seem crazy. But I'm starting to see Gaston's logic in this... stand right up to them. It's always the Republicans that retreat in shame. With us Democrats, we stand tall and strong, no matter what crime we're accused of perpetrating. We deny, deny, deny. And we say there's an internal investigation, so we can't comment until it's done. And then we say we didn't mean to do anything wrong, that this doesn't rise to the level of an actionable crime. And with the Media behind us, we'll be just fine until December and beyond...\"\n\nKatherine said \"I don't agree. We have to cut bait, here. If it weren't for the fact Ms. Perlman is a paraplegic, you might get away with that... but people see a helpless woman... and note that she's a woman... thrown to the floor and her wheelchair thrown onto her... and with her now in the Hospital...\"\n\n\"Well,\" said Lewis, \"let's get this right. We only get one shot at getting it right, and we also had better go nuclear on Jared. If we have anything on him we were holding back, now is the time to bring it out.\"\n\n* * * * * * * * * * * * * * * *\n\nGovernor Val Jared stood beside SBI Inspector General Brittany M. Maxwell at the State Capitol. On cue, he took to the microphone, and spoke into the ears of the State: \"It is obvious that the deep corruption of Jack Lewis's SBI cannot be tolerated any longer. Inspector?\"\n\n\"Thank you, Governor.\" said Britt Maxwell. \"The SBI Office of Ethics and Review has determined that the video footage, obtained from several sources, of Agent Ferrell attacking Ms. Perlman is valid and accurately depicts what happened. I am suspending Agent Ferrell, without pay, and the SBI Office of Ethics and Review is opening a comprehensive investigation of this issue, as well as others that will be discussed shortly. In addition, I have asked the FBI for assistance, and they will also be making a determination if Ms. Perlman's civil rights were violated in addition to the criminal violence against her.\"\n\n\"Thank you, Inspector.\" said the Governor. \"Ladies and gentlemen, despite the political campaign, this issue is so serious that I cannot fail to act. Responsibility begins at the top, and the actions of SBI Agent Ferrell are the responsibility of SBI Director Jack Lewis. Therefore, I am suspending Director Lewis indefinitely. Deputy Director Robert Gaston will take over as Interim Director.\"\n\n\"Governor, if responsibility goes to the top, doesn't that mean that YOU are ultimately responsible for this?\" John Hardwood sneeringly asked.\n\n\"Normally that would be the case.\" said the Governor. \"But now let's listen to the hookup with Commander Donald Troy, speaking from his home County, to show you what is truly happening here.\"\n\n\"Thank you, Governor.\" I said on cue. I was speaking in front of reporters and cameras at City Hall in Town. I was wearing my formal jacket with ribbons over my white shirt and tie (and body armor, of course). \u2028\"Ladies and gentlemen, we have proof, evidence that will hold up in Court, that Jeremy Moreland was injected with drugs confiscated by the SBI some days ago. They are the same drugs, some of which are missing from the SBI's evidence rooms.\"\n\n\"These drugs,\" I continued, \"were injected into Jeremy before he arrived at the Hospital, nearly dead from a blow to the head. Blood samples taken at the scene prove beyond any shadow of a doubt that Jeremy was injected at the scene with the SBI's drugs. Again, we have proof of this that will stand up in Court.\"\n\n\"Commander,\" asked Bettina Wurtzburg, \"do you have any idea who injected Jeremy with these drugs?\"\n\n\"We have no video evidence.\" I said. \"We talked to the young man who confessed to hitting Jeremy with the tire iron, and he claims to have seen no one. Considering the seriousness of the charges against him, and that a plea deal might be made should he have seen something, I consider his claim to be truthful.\"\n\nI went on: \"What I also know is that Chaplain Steven Ikea is a close friend of NTF Director Dick Ferrell, and that Chaplain Ikea is the organizer of the 'State Right To Life Committee'. In fact, Ferrell and Ikea were once partners in the SBI. We also have evidence that shows that Dick Ferrell was in this County on the night Jeremy was attacked. Ferrell and the SBI were monitoring a casino sting operation being jointly run by the TCPD and the FBI.\"\n\n\"Commander, are you saying Richard Ferrell injected those drugs into Jeremy?\" asked a cub reporter that I did not know.\n\n\"I am only stating the facts for which I have evidence.\" I said. \"Any other conclusions that you draw are just that: conclusions drawn by you, not stated by me.\"\n\n\"Why would they do this, Commander?\" asked Bettina.\n\n\"Again, I have no proof who actually injected Jeremy.\" I said. \"But Jeremy was used as a pawn by SBI Chaplain Steven Ikea's 'State Right to Life Committee' to politically attack Governor Val Jared. That young brain-dead man was used as a tool, causing his family anguish and grief, by Steven Ikea's group. And that young man was brain-dead likely as a result of being injected by these powerful drugs that were confiscated by the SBI but are now missing from the SBI's control.\"\n\n\"It is obvious to me, Bettina,\" I said, \"that all of this was done to create a political attack on Governor Jared. I will continue to investigate this matter, and will report my findings to the FBI and to the United States Department of Justice. And I will not try to deceive the People of this State by saying that there is going to be even a hint of cooperation with the SBI in this investigation...\"\n\n* * * * * * * * * * * * * * * *\n\nIt was now officially 'late'. It was about 11:00pm, Friday, October 7th. I was sitting in my office, feeling cold after taking off my Police jacket, and thinking and re-thinking this whole thing.\n\n\"I'll just say this.\" said Chief Moynahan, who appeared at my doorway, then came on inside. \"If it had been anyone but you connecting those dots and telling that story, no one would be believing it.\"\n\n\"They might not believe me anyway, sir.\" I replied.\n\n\"Oh, if you get the chance to watch a tape of yourself, do so.\" said the Chief. \"Everyone who saw that on television will know that you were right, and that you are all over it. Now go home, Mr. Crowbar.\"\n\nI went home. Laura was in bed, asleep. I checked in on Jim and little Pete Feeley in their beds, then Carole in her room. In the process I found myself being followed by two fine dogs that needed taking out.\n\nOutside, they went and did their business while I looked over my beloved Town, seeing the twinkling light and enjoying the sight, as always. And I knew that I had yet more work to do to keep that Town clean.",
        "Once back inside, I gave Buddy and Bowser a lot of skritchins, petting them and talking to them, complete with belly rubs and them pressing their bodies into my sides and pressing their noses into my tummy like they liked to do. Afterwards, feeling the canine love, I felt refreshed.\n\nDogs just make everything better.\n\nPart 12 - Cleanup \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" blared the redheaded reporterette on Saturday, October 8th, from in front of the newly rebuilt Community Center, which only needed some finishing touches before it would be opened. \"The Town & County, as well as the entire State, are still in shock from the revelations of the attack upon paraplegic Tanya Perlman by Dick Ferrell, SBI Agent and confidant of Democrat nominee for Governor, Jack Lewis!\"\n\n\"Just moments ago,\" Bettina continued, \"State Attorney Glenn Alberts and Regional DOJ Director Harold Bennett issued a joint statement, in which they said the State Attorney's Office will not pursue criminal charges against Dick Ferrell until the SBI's 'internal review' is completed. When asked if Inspector Maxwell's suspension of Ferrell and her own review finding Ferrell culpable of the attack wasn't sufficient ground to criminally charge Ferrell, State Attorney Alberts said that he was waiting for the review called for by Director Lewis to be completed, and that Inspector Maxwell's probe would likely be biased, and would be unimportant.\"\n\n\"Sheriff Daniel Allgood was none too happy about Mr. Alberts's lack of action. He asserted authority over the State Crime Lab property, as County Sheriffs are allowed to do under the State Constitution, and has put out an APB for the arrest of Richard Ferrell.\" \n\n\"However, Judge Harry 'Spud' Nance refused to issue a warrant from the Bench, citing the SBI investigation, State jurisdiction in spite of the Sheriff's Constitutional authority, and what Nance called 'a lack of credible evidence that NTF Director Ferrell actually committed a crime'. Nance dismissed the video evidence of the attack as 'inauthentic fake news created for Social Media'.\"\n\n\"And now let's go to the Channel Two News Decision Desk with Amber Harris. Amber!\"\n\n\"Thank you, Bettina!\" said the athletic blonde at the anchor desk, in what was obviously a taped interview. \"With me are Dr. Romanov from the University's Center for Political Policy, and reporter Tim Sioban of KSB News in the City. Gentlemen, this has to be devastating for the Lewis campaign, doesn't it?\"\n\n\"Not necessarily, Amber.\" said Dr. Romanov. \"The SBI needs to complete their 'security review', of course, but this was not Director Lewis's doing, and we still don't know the full circumstances of this situation. Did Lt. Perlman put Lt. Ferrell in a position where he was at risk of being harmed? We just don't know.\"\n\n\"Tim?\" asked Amber.\n\n\"I partly agree, but partly disagree, Amber.\" said Sioban. \"I do think this incident will harm Director Lewis's campaign; he's head of Ferrell's SBI, he's come out with words of praise for Ferrell many times. And the video, real or not but very likely real, is damning... people will see it and not ask questions, but simply see a man throwing a paraplegic woman to the ground.\"\n\n\"So what can Director Lewis do to keep his lead, and win this Election?... which by all accounts was in the bag for him before this...\" Amber asked.\n\n\"What we're not remembering,\" said Romanov, \"is that Val Jared is a very unpopular Governor with a poor track record, who is not trusted by women nor minorities, who differs from mainstream Republicans in his racist anti-Immigrant views, and his wishy-washy stance on abortion rights.\"\n\n\"I agree with Dr. Romanov on this.\" said Sioban. \"If this were any other candidate, such as solidly Republican Sean Stockton, then Jack Lewis would be in deep trouble. But because it is Val Jared, I'd say Director Lewis will very likely still be able to pull this Election out.\"\n\nAmber said \"Okay, let's go back to Bettina.\"\n\nBack to Bettina live: \"Katherine Woodburn spoke at a breakfast fundraiser for Jenna Stiles this morning, and she had this to say. Roll tape.\"\n\nThe tape played, showing a fired-up Katherine yelling at the crowd outside the Ladies Auxiliary Clubhouse: \"Dick Ferrell's unconscionable actions against a woman, and a paralyzed woman at that, is the fault of Governor Val Jared's failure to lead! And Commander Donald Troy's wild accusations, using a dead University student as campaign fodder, is even more disastrous! We need competent Law Enforcement, not Commander Troy's paranoid fantasies!\"\n\nBack to Bettina: \"And joining me now for a live interview is the object of Katherine Woodburn's anger: Commander Donald Troy himself. Thank you for joining me this morning, Commander!\"\n\n\"Glad to be here, Bettina.\" I said.\n\n\"Commander, I'll get straight to it.\" said Bettina, who'd informed me this question would be coming. \"You've earned a spectacular reputation after your run of successes since joining the Town & County Police Force, including breaking up the Westboro Syndicate, and earning two Medals of Valor. Are you really willing to put that reputation on the line with those accusations you made last night?\"\n\n\"First of all, Bettina,\" I replied as Bettina had to reach up to get her microphone to my chin, \"I didn't make accusations, I pointed out facts we already know. Second, as I said last night, we have solid, judicially solid evidence that fully backs up every word I said. And I continue to believe that those who used Jeremy Moreland's death to attack Governor Jared are shameful people. Yes, Bettina, I will put my reputation up against theirs any day of the week.\"\n\n\"Commander, if Governor Jared wins and offers you the post of SBI Director, will you accept it?\" asked Bettina. This one was not pre-planned, and was an ambush.\n\n\"Let's get through the Election first, Bettina.\" I said, then smiled as I added: \"And let's not get the local criminals' hopes up, okay?\"\n\n* * * * * * * * * * * * * * * *\n\nI brought little Pete Feeley to see his mother in the Hospital. Needless to say, the sight of her son brought back the rosy cheeks and the sparkling eyes to Tanya's countenance. But after a few minutes, I saw Tanya become quiet, almost morose.\n\n\"I'll save the money offering the penny for your thoughts.\" I said. \"You're thinking how helpless you felt, lying there as Ferrell threw a wheelchair on your legs.\"\n\n\"I told everyone you can read minds.\" Tanya said, trying to joke about it.\n\n\"Don't tell anyone, but yes, I can.\" I said, taking Baby Pete. \"Pete, are you ready to help me go righteous on your mom?\" Pete made a noise like a 'heh'. and continued fiddling with my badge on my shirt.\n\n\"Uh oh, here it comes.\" Tanya said.\n\n\"Yep.\" I said. \"Look, I can understand how you hated to have that helpless feeling. Yes, it sucks; and yes, there are times you have to be totally dependent on others. It's the hand we're dealt.\"\n\n\"You don't understand, Don.\" Tanya said. \"You've never been there before.\"\n\n\"Yes I have.\" I said. \"You probably have not heard the full story of what happened to me after we put Westboro down.\"\n\n\"You were kidnapped and brainwashed.\" said Tanya. \"But------\"\n\n\"No 'buts' about this one.\" I said. \"I was on the floor of a hallway, falling unconscious, unable to fight back any more, and surrounded by people who absolutely intended to murder me. I felt like I had no hope, and that I would never wake up again. Let's just say that the good guys arrived in the nick of time.\"\n\n\"Now Tanya,\" I said, \"you are one of the most capable people I have ever known. You blast over, under, around, and through obstacles like nobody's business. And you have to keep on doing that. And when that obstacle that's a bit too big comes along... then you have to learn what I've had to learn... you'll have to have help to overcome it, and you'll have to be grateful for that help.\"\n\n\"Yeah, but...\" Tanya said, then grinned... \"... how can I learn those martial arts moves your mother put on Ferrell?\" I couldn't help but laugh.\n\n\"Those 'martial arts moves', as you call Aikido,\" I said, \"put a Police Boxing Matches trophy on my shelf... and will win the Police Boxing Matches again. As for you... we'll attach machine guns to that tank you call a wheelchair...\"\n\n* * * * * * * * * * * * * * * *\n\nPizza for lunch in the Main Conference Room at Police Headquarters. Always a good thing. Enjoying the lunch were Chief Moynahan, Chief Emeritus Griswold, myself, Della Harlow, Cindy Ross, Teresa Croyle, Wes Masters, and Sheriff Daniel Allgood. Unfortunately, the conversation was not as good as the pizza itself.\n\n\"I cannot believe the level of cover-up for this man.\" said Daniel Allgood, with exasperation. The former head of TCPD Internal Affairs had an integrity streak in him, and he was showing it as he continued: \"I understand the SBI and it's corruption, of course, but it's also the State DOJ, the State Attorney's Office, and the Courts. And it's not like we don't have solid proof on videotape.\"\n\nChief Griswold took up the bit, growling \"I would say that this is how Democrats are; they don't give a shit about the law, and they'll always look the other way to help their side and their candidates win. But this really isn't just a Democrat thing, is it, Crowbar? If you or I had done that to Ms. Perlman, we'd be under the jail.\"\n\n\"Chief,\" I said, \"if I'd done that, my mother would not have just busted my head on the floor, she would've gotten a switch from the switch tree and spanked my ass up one side and down the other.\" Everyone burst out laughing at that, and for a moment we couldn't stop laughing.\n\n\"Well, there's not a lot we can do about all that.\" said Chief Moynahan after a few moments. \"Let's just worry about the structural arrangements coming our way. Oh yes... and security for University football games... even though I know there aren't any big ones coming up any time soon. Isn't that right Ms. Ross?\"\n\n\"That is correct, sir.\" said Cindy with some alacrity, her eyes cutting towards me. \"We'll just be taking care of the lightwork on October 29th. Nothing big there, nothing at all.\" That was the Bulldogs game vs. the Wildcats. It is possible the Chief was being sarcastic about it. It was also possible that it would be bigger than even his expectations.\n\n\"Oh, here's the new political ad on TV.\" Della said, and we all turned to watch it. The ad showed Jack Lewis stating how proud he was of Dick Ferrell... then showed Ferrell dumping Tanya on the floor. As the video of Ferrell attacking Tanya was shown over and over, Lewis's voice was superimposed over the audio, praising Ferrell again and again, saying he'd be a candidate for SBI Director 'when' Lewis won.\"\n\nThe room was suddenly quiet. Then Teresa said \"Well, if that doesn't win it for Jared, what will?\"\n\n\"I dunno.\" I said. \"We can't even get an indictment of Ferrell, and half this State would rather vote for a criminal than Governor Jared...\"\n\n\"Okay, let's stop talking politics.\" said Chief Moynahan. \"Back to religion... that being college football...\"\n\nPart 13 - Epilogue \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted Bettina at 7:00am, Tuesday, October 11th, from in front of the new Community Center. \"Tonight the Town & County Council meets, with two important items on the agenda. First is the Second Reading of the Bill that will change the structure of the Police Department, and confirm the nominee for the Captain of Operations slot. And second will be to officially determine the person for whom the new Community Center will be named!\"\n\n\"Sources tell Channel Two News that the names most discussed are those of Police Chief Emeritus Griswold, Fire Chief Emeritus Gillem, Dr. P. Harvey Eckhart, who financed the rebuilding, and there is even a discussion that the Center be named for Commander Donald Troy, who defeated the arch-criminal that blew up the original Community Center and earned a second Medal of Valor.\"\n\n\"It ain't gonna be none of me.\" I said as we drank coffee in MCD. \"I will take a crowbar to the backsides of the Council Members if they do not come correct with a better name than mine for that building.\" Everyone nodded, and I noticed out of the corner of my eye that Cindy's facial expression had changed. I was seeing something that looked like 'determination' upon her ruggedly pretty features.\n\nBettina was still going strong: \"And the first polls have come out since SBI-NTF Director Richard Ferrell was suspended for his violent assault upon paraplegic Tanya Perlman. It is now dead even, 47-47%, with five percent undecided, and one percent for Libertarian Blade Schwartz. The District Attorney's race has also tightened up, with incumbent Gil Krasney holding a 48-46% lead over Jenna Stiles, within the margin of error. And the race to fill the seat vacated by the death of Pastor Raymond Westboro is settling into a two-man race. Public Health Officer Loran T. Michaels holds a 45-40% lead over Sheriff Department Press Relations Officer Scott Peterson, with Sheila Sorrells well behind with about 10% of the vote. Fifty percent plus one vote is needed to avoid a runoff, however.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, that takes care of that business.\" said the Mayor at the Council's executive session in their private chambers. \"The Second Reading is approved 7-2, and let the record show that Carnes and Cook are the dissenting votes. The structural changes to the Police Department are approved. Okay, let's get through this one final item, for which we will not need a Second Reading. The Community Center opens Friday. For whom should it be named?\"\n\nJohn Colby said \"What about Joe Smedley? Most decorated Police Officer and Fireman in County history?\"\n\n\"For that matter, why not name it after Donald Troy?\" said Edward Steele, partially because I'd saved his daughter, and partially because he was mischievously trying to start trouble... and he was succeeding.\n\n\"No way in hell.\" said Kelly Carnes. \"I'll bomb it again, and I'll do it myself, if you try to name it after Troy.\"\n\n\"Ditto that.\" said Thomas P. Cook.\n\n\"While Commander Troy has done many great things,\" said Malinda Adams, \"I believe he would be the incorrect choice. Of course, it should be named after one of this County's many great women. Women are not suitably represented in this area.\"\n\n\"No one is truly adequately represented.\" said Dagmar Schoen. \"We've named very few buildings after anyone.\"\n\nReginald B.F. Lewis said \"I believe it should be named after a Person of Color. Perhaps the Reverend Billy E. Williams. Or longtime schoolteacher, Coach Grimes.\" Kelly Carnes could not stifle a groan in time.\n\n\"All right, all right.\" said the Mayor. \"Okay, let's narrow this down. I believe there is someone who has requested to speak to us.\" He pressed a button. \"Mrs. Peabody, would you please show our guest in?\"\n\nThe doors opened and Mrs. Peabody ushered in Captain Cindy Ross of the Town & County Police Force. Unlike her last visit to these Chambers, she did not need her crowbar to break in. She was still carrying the green crowbar, of course.\n\n\"Thank God you did not bring a dog today, Captain.\" said the Mayor, who meant that more seriously than it might've sounded.\n\n\"No sir, Sergeant Bowser will not be needed tonight, at least not here.\" replied Cindy. \"I understand that you are considering names for the Community Center. I speak from a unique place in saying that I believe that there is only one possible name for that Center...\"\n\n* * * * * * * * * * * * * * * *\n\nFriday, October 14th, 10:00am. It was a beautiful day, clear and cool but not too cold. Riverside Drive had been closed off behind City Hall, so that the large gathering of people could stand in the street as the Mayor went through the formalities of the opening ceremony.\n\nI was in attendance, my presence having been requested by the Mayor himself. Chief Griswold was also here, as were the Police and Fire Chiefs and a number of politicians. Absent was State Senator Katherine Woodburn. KXTC and KSTD were covering the event, and it was Priya alone for this one; John Hardwood was not here.\n\nAll the Council Members were here as well, with two exceptions. Do I even need to say that those exceptions were Kelly Carnes and Thomas P. Cook?\n\nI was wearing my formal jacket with ribbons (instead of medals), and got a few looks at the one with the silver edges, red field with five silver stars, and an oak leaf cluster embedded. Then Cindy Ross came up. She was wearing ribbons, as well, including the blue-edged, blue-field ribbon denoting the Distinguished Service Award. She was also wearing the Medal of Valor around her neck, which she was entitled to do, but it seemed a bit much to me. I was wrong, though, and would soon see why.\n\n\"Commander,\" Priya said as she came up to me, \"can I ask you a couple of questions?\" I acquiesced. Priya was looking gorgeous today, and my 'little crowbar' might've done some of the talking in allowing the interview.\n\n\"Commander, it's a surprise who the Center will be named after.\" Priya said. \"Some have said it will be named after you. Is that the case?\"\n\n\"I don't think so, Priya.\" I said. \"Too many great people in line before me, and deserving it more.\"\n\n\"Commander, your uncle, P. Harvey Eckart, financed the reconstruction of the Community Center. While he's done many great philanthropic things, should the Community Center be named after him?\"\n\n\"I'm sure the Council will have made the correct choice in the name.\" I adroitly said. I noticed that there was a banner over the front door, hiding the name, and also a cover over the front sign.\n\n\"One last question, Commander.\" said Priya. \"Is Lt. Perlman recovering well?\"\n\n\"Yes, she is.\" I said. \"And there she is now.\" Indeed, driving her wheelchair at a high rate of speed down the avenue, was Tanya Perlman herself. The Senior Citizens present (including my mother), gave her much attention.\n\n* * * * * * * * * * * * * * * *\n\n\"Commander, can you come towards the front, with me?\" asked the Mayor. While somewhat reluctant, I did so. I noticed the 'Crowbar Crew' of Seasoned Citizens, including Mrs. Boddiker and old Mr. Davis, behind the podium. They were ready to cut the ribbon across the Center's doorway.\n\nAfter a short speech thanking P. Harvey Eckhart, who was here and wearing his standard khaki pants, button-down blue shirt, and blue blazer (and with an overcoat over it), the Mayor asked the Senior Citizens to cut the ribbon.\n\n\"Well, we can't do that just yet!\" declared Mrs. Boddiker. \"All of us are not here!\"\n\n\"That's right.\" said Myrtle L. James. She went out into the audience and took Cindy by the hand. \"Captain Ross, this would not be complete without you.\" Everyone clapped as Cindy was led to the front porch (so to speak) and given scissors.\"\n\n\"But before we cut the ribbon,\" said the Mayor, \"let us unveil the name of the Community Center. Commander Troy, as Trustee of the Community Center, would you read the proclamation?\"\n\n\"Yes, Mr. Mayor.\" I said. I went up and read the Council's proclamation, which ended \"and henceforth the building will bear the name of... the Veasley Community Center.\" There was applause as the banner was dropped by pulling two ropes, and the cover on the street sign was also removed, both saying 'Veasley Community Center'.\n\nCindy had done it. She had gotten the Council to name the Center after the woman who had stayed with her to evacuate First Baptist Church, and who had guided Cindy on many other occasions. It was only 'meet and right' that the Center be named after the late hero, Mrs. Veasley...\n\n* * * * * * * * * * * * * * * *\n\nWe went inside. The building was simple, composed mostly of painted-over concrete blocks. There was a hallway leading from the front door. On the left as we walked in was a storage closet, with room for chairs and tables and other such stuff. On the right side was a kitchen area, with a window that opened onto the main room, where meals could be served or concessions sold. ",
        "Today there was a ton of free cupcakes for visitors. Timmy Austin, who with Davie Marsdon had shown Rudistan the secret passage into First Baptist Church, had already sampled a couple of the cupcakes. Susie Haskins had, more politely, eaten only one... so far.\n\nThe room itself was very large. Velvet ropes were sealing off the walls, keeping people towards the middle, and the tables that were set up. In the very back, near where the restrooms were, three tables were set up slightly angled, as if they were three sides of an octagon. That got my curiosity up, though I didn't know why.\n\nJust past the hallway on the left, facing the main room on the wall, was the portrait of the person for whom the Community Center had been named. It was a photograph of Mrs. Veasley in her wheelchair, and had been morphed into what looked like an oil painting, the wheelchair becoming a regular chair, and a blanket over Mrs. Veasley's legs, her octagonal glasses and relatively short haircut also a part of the picture.\n\nCindy and Dr. Eckhart were looking at the portrait and the plaque beneath it, and Cindy was feeling some emotion as she and Dr. Eckhart remembered Mrs. Veasley.\n\n\"I'll always remember how she called me 'Child', as if it was my name.\" Cindy said. Eckhart chuckled. \n\n\"She called many of our young people at The Vision that.\" he said. \"It meant she liked that person, and I know she had tremendous love and respect for you, my dear.\"\n\nSusie Haskins came up. \"Officer Ross, can I get a picture of you with Mrs. Veasley's portrait?\" the little girl asked.\n\n\"Sure.\" said Cindy, stepping over the cordon.\n\n\"Why don't I take one you with Captain Ross.\" said Eckhart. \"Mrs. Veasley thought a great deal of you, young Susie.\"\n\nSusie was speechless as she recognized the famous leader of 'The Vision' self-help group. \"Doc... Doctor Eckhart? You're here? But you're famous!\" Eckhart laughed heartily at that.\n\n\"Yes, my young friend, I am.\" said Eckhart. \"And Mrs. Veasley was a very good friend of mine, as she was a friend of yours.\"\n\n\"Is Dr. Eckhart your friend too, Officer--- I mean Captain Ross?\" Susie asked breathlessly.\n\n\"I daresay.\" Cindy said, smiling. \"He's my father.\" Susie's eyes widened like saucers, but Cindy's words had greater effect on Dr. Eckhart himself.\n\nPhotos were taken, one of Cindy and Susie on either side of the portrait of Mrs. Veasley, then with Dr. Eckhart, who then graciously allowed his picture to be taken with the portrait and other Senior Citizens. The picture of Cindy and Susie would make the weekend newspaper, the Town & County Examiner. A copy of that picture, in full color would find its way into Susie's possession, and would remain a treasured possession of Susie's for the rest of her life.\n\nMeanwhile, to the left side of the building as one walked in, I noticed a collage of photos on one wall, surrounding one of my 'Crowbar Crew' medals in a frame. The photos showed various Senior Citizens, and included the awarding of those medals the previous summer.\n\n\"Mrs. Boddiker, is this your medal?\" I asked as Mrs. Boddiker came up to me.\n\n\"Why yes it is, Commander.\" said Mrs. Boddiker. \"I have been privileged to be able to help your Police Force on occasion, and I do not need this for myself. So I have asked for it to be shared with all of our citizens.\"\n\n\"That is very kind of you, Mrs. Boddiker.\" I said. A photograph of me and Mrs. Boddiker with the framed medal would also make the newspaper.\n\nAnd last, but not least, I saw why the tables in back were arranged as they were. Several old men were setting up chessboards, including old Mr. Davis and Fire Chief Emeritus Gillem.\n\n\"Commander,\" said Chief Griswold loudly, \"you have been challenged.\" Everyone got sort of quiet.\n\n\"I can hardly resist that.\" I said. \"Choose your color, gentlemen, and let's get started.\"\n\nSo I played simultaneous chess with all six players. Everyone watched with great interest as I would go from board to board, watch each player make his move, then I'd make mine and move to the next board. Some of the players were not all that good, though they likely would've destroyed me in checkers, and I fairly soon had four wins, including over Chief Gillem.\n\nOld Mr. Davis, however, was a tough player. \"I learned how to play chess in Europe, during the war.\" he told me as we played. \"They're pretty good over there.\"\n\n\"And you're pretty good over here.\" I replied. Soon the game was dead even, and I offered Mr. Davis a draw. He accepted, and we shook hands. The last game also ended in a draw, though I was doing slightly better.\n\nWhile this was going on, Timmy Austin had come over to watch, and he was totally fascinated. \"Mr. Crowbar, will you teach me how to play chess?\" he asked.\n\n\"I will!\" said Chief Gillem. \"You come here on Saturdays, and we'll teach you how to play chess, okay?\"\n\n\"Better take him up on that.\" I told Timmy.\n\nTimmy Austin would take him up on that. Timmy would learn chess, and learn it well. And Timmy Austin would improve. Timmy would study chess with a driving, relentless passion. And two decades later, while Davie Marsdon's military career was taking off, Timmy's chess career would reach its pinnacle... he would become an International Grandmaster.\n\nAfter a couple of hours, the party died down, and I was able to gracefully exit. As I did, I thought about how Dr. Eckhart had set things up as a Charitable Trust, with me and Cindy as Trustees. The State and Federal Constitutions required that 'just compensation' be made for any property taken by eminent domain. And it was a quirk of State Law that properties in Charitable Trusts were deemed to be of 'inestimable value'. That meant that 'just compensation' would be 'infinite', and therefore unable to be paid, ever.\n\nThomas P. Cook had been forever stymied with regard to this property. Now if only defeating the other Usual Suspects were as easy...\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-usual-suspects-ch-03"
}