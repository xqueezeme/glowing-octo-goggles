{
    "title": "Ashley's Revenge Ch. 08",
    "pages": [
        "I did not see Ashley for the next couple of days; she had plans with her mother and plans with her friends so it gave me some time to myself where I could think about and process everything that had been happening over the past few weeks. I couldn't help but dwell on the state of my relationships with both Ashley and my wife. My thoughts kept returning to the ticket stub that Ashley found in my wife's bag. Was my wife really out with another man at the Monet exhibit on the very first night that I enjoyed Ashley's perfect, young body on my marital bed? Sure, I knew it was hypocritical, but I needed to know. I told myself there could be a variety of logical explanations; like perhaps my wife loaned out that particular Jimmy Choo bag to one of her friends, it wouldn't be the first time.\n\nI searched the house looking for any other evidence that I could find and came up completely empty. Being a tech guy, it was fairly easy for me to gain access to my wife's email account but found nothing out of the ordinary. Unfortunately, coming up empty didn't really prove anything to me; it just meant that if my wife was having an affair that she was being very careful, just the way I would be.\n\nIt would be easy to just ask my wife Katherine about the stub, but Ashley was right, it would be a great \"get out of jail free\" card if Ashley and I ever did get caught, plus it would just lead to questions as to why I was looking around in one of her purses in the first place. I couldn't exactly tell my wife that the beautiful high school girl next door was going through all of her things when she wasn't home, now could I?\n\nI was not completely naive; I knew that it was completely possible that Ashley had put that ticket stub into the handbag in the first place. I needed to find more evidence one way or the other; I just wasn't quite sure how I was going to do that. I thought about turning on the Find my iPhone app on her phone, but when it first appeared on her iPhone she immediately turned it off saying she didn't want Big Brother tracking her each and every move. If I turned it on now and she noticed it, it would be very hard to explain.\n\nThe answer came to me when I remembered a scene from the television show Breaking Bad where they tracked someone using a little GPS device that included a strong magnet so it could be attached in the wheel well of a car. A device like that would be great, it would record every move a car made and be pretty much untraceable even if it was found. I figured that Amazon.com usually has just about everything under the Sun so I fired up my browser and sure enough there it was on the screen. The product title even included the phrase, \"As seen on Breaking Bad.\" For $139.00, I figured it was worth every cent so I ordered one.\n\nThe days seemed to go by so damn slowly, I missed not having Ashley around. I craved her hot, young body and my thoughts were filled with all of the things that I'd like to do to her. Her words rang through my mind, telling me that she'd do anything that I wanted her to do. I wondered if she was serious about that and if she was, if she really understood what anything could mean.\n\nI was a bit surprised that she brought up the idea of a m\u00e9nage \u00e0 trois with Lindsey again. Maybe it was something she really wanted to do, or maybe she just really wanted to prove to me that she would do things for me that my wife never would. By this point, I knew Ashley could keep a secret if she wanted to but I had no idea if Lindsey could be counted on to do the same.\n\nAshley and Lindsey's friendship went back years and years, starting in grammar school. They were really more like sisters, but like sisters they seemed to love to compete with each other whenever they could do so. Both were excellent volleyball players on the varsity team since sophomore year and both were at the top of their class academically. I could only imagine what it would be like to have them both vying for my cock at the same time.\n\nThe truth is I never imagined that I would have even one sexy eighteen year old girl once I was married and past forty, but now it seemed that the prospect of having two insanely gorgeous eighteen year old girls at the same time was well within my grasp. I knew there was no way that the affair I was having with Ashley could last forever so I thought maybe it might be worth the risk after all to fuck her and Lindsey at the same time.\n\nAshley said she wanted to spend the night alone with me before the school year started up again so I had to figure out a way to get my wife out of the house. I remembered her sister's birthday was coming up in a couple of weeks so I figured I'd kill two birds with one stone and I made reservations at a resort a few hours away from here for the two of them to enjoy the full spa treatment the next weekend. By that point, I'd have the GPS tracker so I figured it would also be a good opportunity to see if where my wife was supposed to be was really where she went.\n\nIt was late Thursday night and my wife Katherine had already gone to bed and I was downstairs watching a ballgame and monitoring my fantasy baseball team on my laptop when my iPhone buzzed on the side table. I picked it up and smiled when I saw a text from Ashley.\n\n\"Miss me??\" the text read.\n\n\"I do, it's been two whole days! Where are you?\" I replied.\n\n\"At Lindsey's, we just got back here after a night of dinner and shopping.\"\n\n\"Did you buy anything?\"\n\n\"Yes, but it's a surprise. Maybe you'll find out tomorrow if you're good.\" I smiled at the though, I was already counting down the hours until I'd see Ashley again and now I was wondering what kind of surprise she might have in store for me.\n\n\"I did a little shopping of my own on Amazon.\"\n\n\"Ooh, did you get something for me?\"\n\n\"No, sorry! I ordered a GPS unit we can use to track my wife's car to see where she really goes.\"\n\n\"Oooh, you are a naughty man! Are you sure you really want to know?\"\n\n\"Yeah, I think so.\"\n\n\"Well, remember what I said. If we find out that she is cheating, we make the bitch pay! :)\" I chuckled at the smiley face, Ashley was bad but I loved it. I was a willing participant in her revenge from the start because I couldn't resist fucking a hot, young blonde but now I was looking at possibly getting a little revenge of my own and Ashley was the perfect person to assist me.\n\n\"Yes, without a doubt.\"\n\n\"Lindsey says, 'Hello, mystery man!'\"\n\n\"Tell her I said hello, what have you told her about me?\"\n\n\"Just that you're older... and that you fuck like a beast! Hehe\"\n\n\"A beast, huh? Does she know that I'm married?\"\n\n\"Yeah, she said it was super naughty and extremely hot and that she'd totally fuck a married guy.\"\n\n\"You're both very, very bad girls!\"\n\n\"I know, and you're a very, very bad man, Mr. Jones. :)\"\n\n\"We're a perfect pair then!\"\n\n\"Yes, we are! Tomorrow at 9AM?\"\n\n\"Yes, I'll see you then. Don't have too much fun without me.\"\n\n\"Me? Never! XOXO\"\n\nI looked up at the television and the game was in a rain delay. Texting with Ashley reminded me of the fun we'd had on the couch I was sitting on just a few days earlier so I pulled up the listing of the videos on my phone and beamed the video of me fucking Ashley over the couch onto the big screen using my AppleTV. I quickly brought the audio down as Ashley looked into the camera and told my wife she could use a few pointers.\n\nSeeing Ashley up on the screen was a surreal experience. I had never made a sex video before, and I wasn't too sure what to expect from the iPhone as far as the video quality goes. Needless to say, I was very impressed with the detail as I watched Ashley's perfect, young body moving with every hard thrust I gave her. The images of her perfect B cups bouncing and her soft blonde hair flowing down got me rock hard in an instant. When she looked up at the camera she looked so sweet and innocent, proving the looks can be very, very deceiving.\n\nI thought about taking matters into my own hands, but I told myself that it was just a matter of hours before Ashley would be here in the flesh and she would be able to take care of my raging hard cock herself. I locked my phone and put it down on the side table and flipped the television back to the ballgame. It was still in a rain delay so I downed the remainder of the bourbon I had been drinking and headed up to bed.\n\nThe next morning I actually slept in a bit, by the time I got up my wife was already in the kitchen finishing her coffee and getting ready to leave for work. I had to admit she was looking good lately, even in the conservative business suit she was wearing I could tell that she'd been working out more than usual lately. Whether that was because of feeling threatened by Ashley or because she was fucking someone else or for some other reason entirely, I really wasn't sure.\n\nWe made the usual morning small talk for a couple of minutes and then she was off. I sat at the table finishing up my coffee when I saw Ashley slip through the back gate and into our yard. She skipped her way up to our deck and up the stairs and I noticed she was carrying a backpack as she opened the French doors and let herself in.\n\n\"Hello, Mr. Jones,\" she said smiling and then mouthed the words, \"Is the bitch home?\"\n\n\"No, don't worry. She's already gone,\" I grinned as my eyes feasted upon Ashley after not seeing her in person for a few days. She was wearing a white high-neck tank top with slender straps that crisscrossed high up on her exposed back, a short jean skirt and red Keds with white, frilly socks. Her long, blonde hair was down and looked a bit curlier than usual.\n\n\"Good, I wasn't in the mood for her dog and pony show today,\" Ashley smiled as she put her backpack on the counter and walked over to me and sat down on my lap. \"I've missed you,\" she cooed as she wrapped her slender arms around my neck and kissed my lips softly.\n\n\"I've missed you too,\" I moaned low as I wrapped my arms around her waist and devoured her sweet, soft lips.\n\n\"Is there any housework for me to do today?\" Ashley asked with a giggle as I playfully kissed and nibbled on her neck.\n\n\"I didn't have any planned, why? Did you want some?\" I smiled and looked up into her eyes.\n\n\"I guess not, but I brought my new uniform just in case,\" Ashley bit her lower lip ever so softly and stared at me with her sparking blue eyes.\n\n\"You have a new uniform, huh? Is that what you bought yesterday?\"\n\n\"Among other things,\" Ashley giggled and leaned in. She kissed me softly then moved her mouth to my ear and whispered, \"Do you want to see it?\"\n\n\"Yes, you know I do,\" I moaned softly as I felt Ashley's lips gently kissing my neck.\n\n\"Go up to your room and wait for me, I'll get changed and come up to show you,\" she smiled and jumped up off my lap and walked over to grab her backpack.\n\n\"Anything I should do while I'm waiting?\" I asked with a smile.\n\n\"You're the boss, you can do whatever you want,\" Ashley giggled and bounced out of the kitchen and into the hall bathroom.\n\nI made my way up the stairs and into the master bedroom. I slipped my red polo shirt up over my head and tossed it on my dresser before I kicked off my shoes and socks and slid my jeans and boxer-briefs to the floor. I sat back naked on the big, king-sized bed and watched the doorway awaiting Ashley's arrival.\n\nI heard her footsteps on the wood floor in the foyer and then on the staircase heading up to the bedrooms. My eyes were focused on the doorway and they were greatly rewarded when Ashley appeared wearing a very sexy French maid outfit carrying a small white feather duster and a small black pouch. The smile on her face grew as she walked into the room and saw me naked on the bed with my already growing manhood.\n\n\"Now how to you expect me to get any work done when I can see that big, hard cock of yours, Mr. Jones?\" she smiled.\n\n\"I'm the boss, you'll do whatever I tell you to do,\" I grinned as I took in every last detail of her sexy outfit. She was wearing a formfitting black corset and skirt with white lace accents that fit her slim body like a glove. Her long legs were covered by black stockings topped with black lace garters and bows. She was wearing black panties with white lace trim and she had a pair of black open toed pumps with a 4\" heels on her feet which made her legs look absolutely amazing. She completed the outfit with a black bow in her hair and she was wearing a black lace choker around her neck.\n\n\"Yes, sir,\" she said as she walked over to the bed and slowly twirled around for me to admire her outfit from every angle and then playfully teased by cock with the feather duster.\n\n\"What's in the pouch?\" I asked, looking into her blue eyes.\n\n\"A gift for you, sir,\" she smiled as she held out her hand with the pouch for me to take it. I watched her eyes sparkle as I took the pouch from her hand and heard a metallic sound come from inside as I grasped it. I untied the top of the pouch and turned it upside down, letting the black, metallic handcuffs that were inside fall into my open palm.\n\n\"I have to say, I like the way you shop,\" I smiled, looking at the handcuffs and then up into her eyes. The handcuffs were made of steel and were not the playful, fuzzy kind of handcuffs that you could slip out of easily.\n\n\"I'm glad,\" she grinned, biting her lower lip.\n\n\"So, you want me to use these on you?\" I asked with a smile.\n\n\"Mmhmm, if you want to,\" she said in a voice just louder than a whisper. It was the first time in a long time that Ashley actually seemed a bit unsure of herself and I wondered if she was pushing her comfort zone to prove to me that she would do anything that I wanted her to do.\n\n\"Of course I do,\" I said as I moved closer to her and searched her eyes. I sat on the edge of the bed in front of her and put the cuffs and pouch on the nightstand and then put my hands on her hips and looked up into her eyes.\n\n\"I just want to make you happy,\" Ashley smiled before she playfully bit her bottom lip and brought the feather duster up and giggled as she dusted my face with it.\n\n\"You are such a bad girl,\" I groaned as I pulled her body down on top of mine and grabbed the duster from her with my right hand. She tried to get away but I pinned her down on the bed and gave her face a little dusting of its own.\n\n\"Not fair!\" she giggled as her young body squirmed underneath mine.\n\n\"You started it,\" I groaned and gave her one last flick with the feathers before I brought them down and slowly traced her arm with them, making sure the feathers barely touched her skin.\n\n\"Mmm, fuck,\" she moaned as the feathers caressed her skin and my left hand slid down in between her legs and teased her through her black satin panties.\n\n\"You like that, huh?\" I smiled as the feathers teased Ashley's chest, her firm B cups nearly popping out of the corset.\n\n\"I do,\" she groaned softly as my fingertips slid under her panties and found her smooth, wet pussy. I made a few soft, gentle circles around her clit as the feathers made their way once again down her arm.\n\n\"Have you ever been handcuffed before, slut?\" I growled in a low voice and saw Ashley's eyes open wide in response to the question and the way I had asked it.\n\n\"No, sir, never,\" she moaned as I rubbed her clit a little bit harder.\n\n\"Just so we are clear,\" I moaned, \"when I have you handcuffed I can do whatever I want to your hot, sexy body?\"\n\n\"Yes,\" she whispered softly as I used the tip of my middle finger to make quick little circles around her clit.\n\n\"I can't hear you, slut,\" I growled.\n\n\"Yes!\" she nearly screamed, \"I am yours to do with as you please, sir.\"\n\n\"Good,\" I smiled as I threw the feather duster to the floor and used my right hand to move Ashley's arms up over her head. My big hand easily clamped down on both of her small wrists and held them in place as my left hand continued to tease her hot, young pussy. She let out a yelp as I bent my middle finger and slipped it slowly inside her.\n\n\"Mmm, that feels so good,\" Ashley moaned as I softly kissed her neck and slid my middle finger slowly in and out of her wet pussy. Ashley closed her eyes and moaned softly as my finger teased her with slow, small movements and I leaned in and kissed her neck softly.\n\n\"I'm sending the wife away next weekend,\" I whispered in her ear and she let out a long deep sigh.\n\n\"Good,\" Ashley moaned as I nibbled on her earlobe. \"All weekend?\"\n\n\"Yes, I booked her and her sister a long spa weekend. She'll be gone from Friday afternoon until Sunday night,\" I whispered and then let the tip of my tongue softly trace her ear.\n\n\"Mmm, yes\" Ashley moaned as my middle finger slid slowly in and out of her tight, little pussy.\n\n\"Does that mean you will be able to stay the whole weekend?\" I smiled and looked down into her blue eyes, still holding her hands above her head.\n\n\"Yes, I'm sure Lindsey will cover for me,\" Ashley smiled.\n\n\"That's good, and you can cover for her,\" I grinned as I finger fucked Ashley's pussy a little bit faster.\n\n\"Cover for her?\" Ashley asked, confused then she let out a deep moan as I added my ring finger to my middle finger and slid them both in and out of her dripping wet pussy harder and faster.\n\n\"Yes, why don't we make Lindsey our little slut.\" I watched Ashley's eyes as she took the words in. Her slim body was moving up to meet my fingers as they fucked her slowly once again. She bit down on her plump lower lip and took in a deep breath and nodded.\n\n\"If that's what you want, I'll ask her,\" Ashley moaned.\n\n\"No, there is no asking. You will deliver her, do you understand?\" I growled as I grasped her wrists harder and slid my fingers faster and deeper inside her hot little pussy.\n\n\"Yes, I will deliver her,\" Ashley moaned as I released her wrists and moved my way down her body, kissing her soft, warm flesh. My hands moved down and unsnapped her garters and then grabbed a hold of her black satin panties with the white lace trim and slid them down past her black stockings and heels and then off.\n\nI spread Ashley's long, skinny legs and moved her feet in the sexy pumps up over my shoulders as I leaned in and my tongue immediately found her hot, dripping wet pussy and dove right in. She grabbed onto my hair and pressed my face down into her pussy while my tongue lapped up every sweet drop of her juices as it slid in and out of her body.\n\nI looked up at Ashley as she let out a long moan. Her head was pressed back into the bed and her long, blonde hair was a total sexy mess. Her chest was rising and falling as my tongue worked her sweet pussy and I had to remind myself that this amazing little slut in the French maid costume was the young blonde Catholic high school girl from next door.\n\nMy big, strong hands slid their way up her body. They traced the corset until they reached Ashley's firm, young breasts. I pulled the material down, revealing her puffy pink nipples as my tongue drove deeper and deeper inside of Ashley's dripping wet pussy. Her juices were covering my face and I was grinding my mouth up against her to get as deep as I could inside her.\n\n\"Fuck, yes!\" Ashley screamed as my fingertips squeezed down on her freshly revealed nipples. I could feel them harden in my hands as my tongue found Ashley's clit and playfully flicked it a couple of times before I kissed it and sucked on it softly.\n\nAshley's breathing was now getting labored and erratic. My hands cupped her breasts and my tongue was making quick circles around her little button. I squeezed down hard on her nipples again and twisted them as I sucked on her clit, causing Ashley to let out a scream.\n\n\"Yes! Yes! Holy Hell, Yes!\" Ashley screamed between breaths as her hands left my hair and grabbed down at the bed sheet, pulling it free from the mattress as I slammed my tongue deep inside her wet candy pussy.",
        "I moaned as my tongue darted in and out of Ashley's tight, young body. Her hips came up to meet ever thrust and it took everything I had to keep my mouth attached to her soft wet skin as I tongue fucked her dripping pussy.\n\n\"Oh God, Yes!\" she screamed as her orgasm started. I pinched my fingers down on her hard nipples as let her ride my rolled tongue as it pummeled her. My face was covered and dripping with her sweet nectar by the time she finished with a deep moan and let her hips fall back onto the bed and tried to catch her breath.\n\n\"For a maid, you sure do make a hell of a mess,\" I smiled up at her as I looked at the wet spot beneath her body and the sheets that she had pulled off the bed.\n\n\"But, I look good in the uniform,\" Ashley giggled out of breath as I moved up her body and got on top of her. I propped myself up on my elbows and looked deep into her blue eyes.\n\n\"Yes, you look amazing in the uniform,\" I grinned as I leaned down and kissed Ashley's soft, red lips. Her hot, wet tongue shot into my mouth and tasted her sweetness on my tongue as they wrestled through the kiss. I let out a moan as she reached down with her manicured hand and found my hard cock.\n\n\"How may I please you, sir?\" Ashley asked with a wicked grin as she wrapped her hand around my hard cock and squeezed playfully.\n\n\"Oh, I can think of a few ways,\" I moaned as she slowly stroked my hard cock and smiled at me. I pulled her hand off my cock and rolled her over onto her stomach as I grabbed the handcuffs from the nightstand. I gathered her arms behind her back and slapped the cold, metal cuffs onto her wrists.\n\n\"Oh, fuck,\" Ashley moaned as she lay there handcuffed on the big bed in her French maid outfit. I slid her short skirt up and let my left hand come down hard on her exposed ass, causing her to moan and bend her knees, bringing her black heels up into the air.\n\nMy hand rested for a moment on Ashley's firm, young behind and every time I moved it even a fraction of an inch I could see her muscles tensing up, expecting to be spanked again. I slid my right hand up her back, past the soft satin material of her costume and onto the warm skin of her back. I let her long, blonde hair intertwine with my fingertips as I quickly raised and lowered my left hand on her ass, causing her to let out a scream.\n\n\"Don't tease me,\" Ashley moaned as I let my left hand once again linger on her warm, red bottom. I grasped down harder on her hair and pulled it back for a brief moment before letting go. She groaned and clenched her buttocks but this time I did not spank her. \"Fuck me,\" she whimpered.\n\n\"I'll do what I want to do,\" I said matter-of-factly as I released her soft hair and removed my hand from her perfect, little ass. I stood up and grabbed my jeans from the floor and slid my black leather belt free and held on to it as I got back on the bed. I doubled the belt back onto itself and pulled hard on both ends, bringing the leather together with a loud thwacking sound.\n\n\"Oh, don't you dare,\" Ashley said as she glared up at me with her blue eyes as I kneeled on the bed next to her long, slim body and let the leather of the belt touch her soft skin.\n\n\"What happened to, 'I'm yours to do with as you please'?\" I grinned as I let the belt run slowly up and down her slender arms which were handcuffed behind her back.\n\n\"But that will hurt, a lot!\" Ashley groaned as I brought the black leather belt to her exposed ass and let it sit there causing her to squirm.\n\n\"Not necessarily, it all depends on just how hard I bring it down on your soft, warm skin, now doesn't it?\" I grinned and raised the belt an inch or so off of Ashley's ass and let it drop back down softly causing her to clench the muscles on her firm little ass tighter.\n\n\"Yes,\" she whispered, \"I suppose.\"\n\n\"Don't you trust me?\" I smiled as I picked the belt back up and snapped it upon itself to make the desired thwacking sound again.\n\n\"I let you handcuff me, didn't I?\" Ashley grinned. She had a point, she was lying on my big bed with her hands cuffed behind her back and I could do pretty much anything I wanted to her. I wondered for a moment what the proper thing to do to a little teen slut who was handcuffed on a married man's bed was. Ashley had helped me push a lot of my personal boundaries over the past couple of weeks so I figured it was time to push a few of hers.\n\n\"Yes, but you're still a dirty little home wrecking slut,\" I moaned as I brought my black leather belt down so hard and fast onto her firm ass that she never saw it coming. The result was that perfect thwacking sound followed by Ashley's scream.\n\n\"Fuck you!\" Ashley shrieked as she squirmed and kicked her feet coming close to slamming her heel into the side of my face.\n\n\"You're not a dirty little home wrecking slut?\" I growled as I brought the belt down hard again on her now very red bottom.\n\n\"No! Your cheating wife is the home wrecker,\" Ashley moaned and squirmed on the bed as I brought the belt up again and held it there as she looked up at me. \"I just want to be your dirty little slut,\" she sighed as she bit her lower lip and grinned.\n\n\"Is that so?\" I smiled.\n\n\"Yes, it is,\" Ashley groaned.\n\n\"So tell me, did it really hurt that bad?\" I asked with a smile as I gently rubbed Ashley's warm, red ass with my left hand as I held the belt in the air with my right.\n\n\"Yes,\" she giggled.\n\n\"Are you lying?\" I asked, still rubbing her ass softly.\n\n\"Yes,\" she giggled again. \"I kind of liked it.\"\n\n\"Did you?\" I smiled as my left hand slid down her ass and I let my fingertips softly caress Ashley's soft, pink pussy lips which were now dripping with her juices. \"Fuck, you are a bad little girl.\"\n\n\"Only for you,\" Ashley moaned as I slipped my ring and middle fingers inside of her tight, young pussy causing her to let out a high-pitched yelp.\n\n\"But for how long?\" I asked as I let the belt fall softly down onto her ass as I slipped my fingers slowly in and out of her body.\n\n\"What do you mean?\" she moaned as my fingers started to work her pussy faster and deeper.\n\n\"How long do you think this little thing we have going could last?\" I asked as I raised the belt up high and watched Ashley's blue eyes as she followed it up.\n\n\"I can't say,\" Ashley moaned.\n\n\"You can't, or you won't?\" I asked as I looked into her eyes.\n\n\"You said you'd never leave the bitch,\" Ashley moaned and bit down on her lip. I slid my dripping wet fingers in and out of her tight pussy faster and she pushed her body back on my hand for more.\n\n\"Is that what you want?\" My right hand brought the belt down hard on Ashley's ass as I finger fucked her.\n\n\"Yes!\" she screamed. \"She can't give you what you want.\"\n\n\"So you want you and me to be forever?\" I moaned, raising the belt again.\n\n\"Well, no,\" Ashley smiled, \"I figure I can fuck you to death in ten, twenty years tops,\" she giggled as the belt came down hard on her ass and my fingers pummeled her tiny, wet pussy and Ashley let out a series of high-pitched screams as she came hard on my hand.\n\n\"That wouldn't be a bad way to go,\" I chuckled as I threw the belt onto the floor and slid my wet fingers from Ashley's pussy and tasted them.\n\n\"No?\" Ashley moaned as she smiled up at me with her blue eyes.\n\n\"No,\" I said as I stood up and grabbed the handcuffs and pulled Ashley up to her feet at the side of my bed. I spun her around and looked into her eyes and smiled. \"I can think of worse ways.\"\n\n\"Good,\" Ashley giggled as I put my hands on her shoulders and pressed her down onto her knees where she was eye level with my raging cock. She licked her lips and stared up at me with her sexy blue eyes as I grabbed a handful of her long blonde hair. \"How may your little slut please you, sir?\" she asked in her sweet little girl voice.\n\n\"Suck my cock,\" I growled as I tugged Ashley's hair back. I looked down at her there on her knees in front of me, in her sexy French maid uniform with her hands handcuffed behind her back and wondered just how many guys would kill to be me at that very moment.\n\n\"Yes, sir,\" she moaned as she leaned in and let her soft, red lips touch the throbbing head of my cock. I let out a soft moan as her soft, sweet little girl's tongue darted out of her mouth and made slow circles around my hard shaft as she looked up into my eyes.\n\nI watched her, alternating from looking into her eyes and down at her firm young breasts as they bounced. She smiled up at me as I brushed a stray hair from in front of her face and watched her as she let her mouth slide down slowly on my cock until my throbbing cockhead was in her throat.\n\n\"Fuck, Ashley, you are a great little cock sucker, baby,\" I moaned as she bobbed her head up and down on my shaft and slobbered all over it. Her tongue and her lips engulfed ever inch of my prick as I watched it disappear in between her soft, red lips.\n\n\"So, tell me,\" Ashley moaned as her lips moved clear of my cock, \"when was the last time you had your bitch wife on her knees, handcuffed giving you head?\" Her eyes sparkled as she bit down seductively on her lower lip and awaited my reply.\n\n\"Never,\" I moaned as I grabbed and pulled her soft blonde hair back hard and looked down into her eyes.\n\n\"Fuck, she is a boring bitch, isn't she?\" Ashley giggled but didn't wait for my reply this time. Instead, she started going down on me again in earnest. Her lips gripping my cock tightly as she corkscrewed her way up and down my shaft making soft little sucking and slurping noises as she went along.\n\n\"Yes, I guess she is,\" I moaned as I watched Ashley's perky B cups bounce as she bobbed her head up and down on my cock. I could feel my balls welling up; knowing I wouldn't be able to last long at the rate Ashley was sucking my cock. I tugged her hair back and thrust my throbbing member deep into her mouth. I was so addicted to this girl and I loved fucking her pretty face with my big, married cock.\n\n\"She let you cum on her ugly face?\" Ashley moaned.\n\n\"No,\" I groaned low, trying to keep from exploding as Ashley teased my throbbing cockhead with her tongue.\n\n\"Mmm, cum on my face, baby. Show me what your bad little slut gets,\" she moaned and then went back to work bobbing her head up and down on my ready-to-explode cock. Both of my hands moved down behind her neck and grabbed a hold of her hair as I fucked her sweet mouth. In and out, faster and harder, Ashley deep-throated me like a pro and I couldn't handle any more.\n\n\"Fuck, yes,\" I groaned as I felt myself ready to explode and I pulled Ashley's blonde hair back pulling her mouth off my cock. I felt her hot, wet tongue flick as my throbbing head as her lips moved past my cock and she looked up at me with her lust-filled eyes as I came hard, spurting out wave after wave of my sticky, hot white cum all over her pretty face.\n\n\"Yes,\" she groaned as my jizz covered her lips, her chin, her eyes and just about every inch of her face.\n\n\"Holy fuck,\" I moaned as Ashley's lips returned to my cock to milk it for every last drop that it had. When I finished cumming Ashley's tongue twirled a few times around my throbbing head and her soft lips sucked my cock clean.\n\n\"How was that?\" Ashley grinned, looking up at me as my cum dripped down from her face down onto her tits.\n\n\"I have no words,\" I grinned as I took the image in.\n\n\"Why don't you grab something out of the bitch's drawer and clean me up?\" Ashley giggled as she kneeled back, her hands still handcuffed behind her back.\n\n\"I can do that,\" I said as I opened up one of my wife's drawers and pulled out one of her t-shirts and gently cleaned my cum from Ashley's face and her firm B cups.\n\n\"Thanks, husband,\" she moaned, \"Are you going to fuck me now?\"\n\n\"You want more already?\" I smiled.\n\n\"Mmhmm,\" she grinned up at me with her blue eyes. \"How often do you get to have a little slut handcuffed for your pleasure?\"\n\n\"I'm starting to think it's going to become a regular occurrence from now on,\" I grinned as Ashley leaned forward and took my cock into her mouth again bringing it quickly back to life with her expert tongue. She bobbed her head up and down and had my cock rock hard in record time.\n\nI grabbed Ashley's long blonde hair and pulled her off my cock and stood her up and bent her over the big king-sized bed. Her ass, still nice and red was up in the air and her hands still cuffed behind her back. My hands moved out to her hips as I guided my throbbing cockhead to her little wet pussy and slipped it inside.\n\n\"Mmm, yes, baby that feels so good,\" Ashley moaned as I started fucking her slowly and deeply. Her tiny pussy gripping down hard on my married cock as I started slamming it home as deep as I could, lifting Ashley's young body off the ground with each deep thrust.\n\nI lifted my right hand and brought it down hard on her already sore bottom and she responded by letting out a scream and pushing her tight pussy down harder on my cock. I let my left hand slide around her hip and between her legs and I used my fingertips to tease her clit as I pounded her pussy from behind.\n\n\"Yes, fuck me,\" Ashley moaned as I continued to tease her clit with my left hand. I was pounding her harder and faster and I could feel her juices dripping down my hard cock. My right hand moved up and gathered her blonde hair into a ponytail and pulled her back hard as I pounded her pussy with every ounce of strength that I had.\n\n\"You are such a slut,\" I moaned as Ashley's pussy engulfed my cock and squeezed me tightly at the end of every one of my thrusts.\n\n\"You love me,\" Ashley moaned.\n\n\"I do,\" I growled, \"I love fucking your tight little pussy.\" I pulled her hair back hard and made quick circles around her clit with my fingertips as my cock penetrated her dripping wet pussy over and over again.\n\n\"No, tell me you love me,\" Ashley moaned as she used her pussy to grip my throbbing manhood tighter as I pounded her from behind.\n\n\"Fuck, yes, I do. I love you, Ashley,\" I knew it was probably a mistake to say it, but at that moment I did love the naughty little Catholic schoolgirl slut that was taking every inch of my cock in her amazingly tight little pussy.\n\n\"Mmm, baby, I love you too. Now fill me up good,\" Ashley moaned and I couldn't have stopped myself if I wanted to do so. My cock was on fire and my body was on auto-pilot as I pounded her perfect young pussy hard and fast. Her pussy was so tight and dripping wet and felt better than anything I'd ever had my cock in before and I wanted more and more. I yanked her back hard by her hair as I felt myself cumming, shooting every drop of cum that I had left deep inside of her waiting pussy.\n\n\"Oh fuck yes!\" I moaned, letting my cock slam in and out of Ashley's tiny little schoolgirl pussy. I loved feeling her gripping down on my cock like a vise and milking me for every last drop. When I was finally done, I slid my cock free and reached for the handcuff keys on the nightstand.\n\n\"Mmm, baby,\" Ashley moaned as I unlocked the cuffs and set her free. She fell down onto the bed and moaned, \"That was intense.\"\n\n\"Yes, it was,\" I grinned as I lay down next to her on the bed and pulled her body close to mine.\n\n\"So, we're really going to have a whole weekend together?\" Ashley whispered as she softly kissed my neck.\n\n\"Yes, we are,\" I groaned.\n\n\"I want you all to myself for at least a day; I have a surprise for you.\" Ashley looked up at me with her soft blue eyes.\n\n\"You are full of surprises, huh? Is it better than a French maid uniform and handcuffs?\" I chuckled.\n\n\"I think so,\" Ashley smiled and there was no way I could deny her.\n\n\"That's fine, I'm still not too sure about the Lindsey thing anyway. It might just needlessly complicate things.\"\n\n\"If you want it, we'll do it,\" Ashley smiled, \"Just maybe not next weekend.\"\n\n\"Sounds good,\" I smiled.\n\n\"But, if and when we do,\" Ashley giggled, \"promise me you'll beat her ass with that black leather belt of yours!\"\n\n\"You are bad!\" I said as I shook my head.\n\n\"I know, but that's why you love me, husband.\" Ashley snuggled her face up against my chest and I wrapped my arms around her. There was no doubt this girl liked to compete, whether it was with my wife or with Lindsey. I drifted off to sleep imagining how I could use that to my advantage. "
    ],
    "authorname": "TallMarriedMan",
    "tags": [
        "ashley",
        "revenge",
        "blonde",
        "schoolgirl",
        "internship",
        "catholic",
        "french maid",
        "cheating",
        "hair pulling",
        "handcuffs"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/ashleys-revenge-ch-08"
}