{
    "title": "Strap-on Secrets",
    "pages": [
        "Micah looked down at his phone and was surprised to see his good friend Jessica calling.\n\nIt was 11:30 at night and he was just getting ready for bed as he caught up on some Sportscenter, as he lounged on his bed in his room, which was located in the back of a house that he rented from. The home was a beautiful two-story craftsman in an old neighborhood near the private university where he went to school. It was a good setup for a 23-year-old kid finishing up school after some meandering semesters of life's early indecisions.\n\nHe'd first met Jessica Douglas after being hired on as a bank teller at a local credit union near to his place. She was also a business student at the same university and they'd become good friends thanks to their shared jobs and majors. They had numerous classes together and often met on campus for lunch or study sessions.\n\nJessica was an absolute cutie-pie with a body that put in some work. She wore these pencil skirts every day to the bank which caused Micah's heart to have constantly irregular palpitations and forced his belt to sometimes do some major boner-concealment within his dress slacks.\n\nShe was the cute girl next door that still didn't fully know how sexy she had become in the years since leaving high school\u2014a flower in a room without mirrors. But everyone around her knew it. She had dark brunette hair that she wore in attractive layers and always down, and she wore these cinnamon Watson Eyeglasses that left her looking like the most popular librarian working the night shift at a college library. Her hair would often fall over part of her face and she was always brushing it back behind her ears. Micah noticed every single maneuver. He was totally smitten with the girl.\n\nUnfortunately, Jessica, like so many girls before her in the history of the world, had a thing for the worst breed of guys. Since he'd first met her, she had been with an absolute shit-stain of a boyfriend whom Micah received constant play-by-plays of when it came to their vast and various relationship problems.\n\nHer boyfriend was lazy, uninspired, unaware of the things that seemed most important to her, and at times could be completely dismissive. He drove a raised truck with a Monster energy drink claw sticker on the back window and loved video games and weekend drunken golfing with his buddies far more than he ever appeared to love her. He attended the same school they did (when he actually went to class that is) and his parents seemed to have firmly lodged a silver spoon up both ends from a very early age.\n\nThey looked good together in pictures and it felt like the right guy to be with to Jessica\u2014she had grown up in the same well-to-do neighborhood with his family, but Micah always knew it stunk to the high heavens.\n\nHe did what he could to be the solid friend with a shoulder to cry on or an ear to bitch to when she needed, but he knew that was as far as he could take it. If he revealed how into her he was, he might jeopardize what was an absolutely stellar friendship and he didn't want that to happen, so he played the ultimate waiting game in his friend's gradually imploding relationship.\n\nHe knew that their fights had gotten worse as of late, and when he saw her calling that late on a weeknight he knew it probably had something to do with the micropenis'd dickwad (something he'd concluded based on his own astute observations of the dude's typical social media interactions).\n\nWhen he answered the phone he could immediately hear Jessica crying. Apparently, as he would come to learn through sniffles and nose-blows, a big fight had erupted earlier that night and some terrible things had been said. The relationship was on the precipice of disaster and the dickwad had stormed out to go to a strip club with his buddies or something. He was drunk (and probably driving now). It all fit the script that Micah had become accustomed to.\n\nThe dick was being a dick again. What else was knew?\n\nThis was a little bit unusual but she asked, but she asked if she could come over. She didn't want to be at their apartment in that moment. Micah of course said yes. She was on her way as soon as she could gather herself together.\n\nShe parked in his back driveway some twenty minutes later. She didn't live that far away.\n\nWhen Micah saw her he felt the pangs of his heart immediately doing their thing. Her makeup was all over the place with her hair all pulled up in a disheveled clump. It was clear she'd been stuffing her face into the corner of a couch\u2014the pain of a relationship fight could ache like the pain of a migraine. She looked dazed, but still as pretty as ever. She was wearing a zip-up sweatshirt and a pair of old pair Victoria's Secret Pink branded sweat pants that were charcoal with a black waistband and white drawstring. Her feet were in slip on sandals\u2014a small purse under her arm held a big bottle of water sticking out of it.\n\nMicah took her into his strong arms at the back door of the house as she immediately broke down into a silent sob. The part of the home that he rented was cordoned off to a room and side bathroom with its own outside entrance which provided a nice modicum of it feeling like he had his own place. If nothing else, he could have late night visitors come and go without ever having to bug the lovely, older couple that he rented from.\n\nHe held her 5'4 frame in his arms as he stroked the back of her soft hair. She sobbed into his chest and made his t-shirt wet with her tears.\n\nHe led her into the house and closed and locked the door, grabbing a nearby box of tissues that he kept on a hallway shelf along the way.\n\n\"You okay?\" Micah said gently as he stroked her back softly with his hands.\n\n\"Yeah...do you have any alcohol in this house?\" She asked, half-smiling through her soggy face. It was a delirious sort of cuteness in the face of a storm.\n\nMicah escaped momentarily to the fridge and came back with a six-pack of IPA's.\n\n\"This is all I have currently...oh and the last half bottle of my Woodford Reserve is in my room.\" He said.\n\n\"That'll work. Let's drink.\" She said it in a somber but stoically determined sort of way. Jessica was ready to get fucked up.\n\n\"Do you work tomorrow?\" Micah asked.\n\n\"No. Do you?\" She said in return.\n\n\"Yeah, but not 'til 5.\" He assured her.\n\nThey sat down on his bed together and she began in on the whole story. She cried a little bit, and they made their way through their first few beers rather quickly as she explained the whole debacle to her incredibly reliable friend.\n\nThen after she was done cathartically finishing her rant about the douchprickle, they decided a shot certainly couldn't hurt.\n\n\"Ahhh, burns so good!\" Jessica joked, as the whiskey traveled down her throat. Micah refilled their shot glasses and they downed them one more time as they both made the appropriate faces all throughout.\n\nMicah flipped on an episode of the Office from his Netflix account and they cracked up laughing together as they sat against the pillowed leaned up against the headboard of Micah's bed and snuggled together under one of his throw blankets.\n\nJessica put her head on Micah's shoulder and he loved the way her raspberry lotion seemed to waft over him slowly. She was so sexy and feminine even in her moments of raw unpreparedness.\n\nAfter they'd laughed their way through an episode they cracked open another beer and Micah flipped off the TV so they could talk some more. They'd both scooted down so they were fully laying on the bed now. Jessica lay against Micah's chest as they stared up at the ceiling and talked about all sorts of various topics, only lifting their heads when they needed to take a swig of their hoppy tonic.\n\nAt some point the topic drifted back over to Jessica's taintwad of a boyfriend, which Micah really had been hoping to avoid, but the topic specifically related to sex, so he didn't immediately steer Jessica away from this. He was too curious to learn about her sex life with this loser she had stuck with for so long.\n\n\"And he never wants to have sex!\" Jessica started in angrily again as she lay her hand against Micah's chest and started to complain about this slightly more intimate element of what was wrong with her current boyfriend.\n\n\"Seriously? What guy doesn't want to have sex? That makes ZERO sense to me.\" Micah said, as he knew he should. \"You're sexy as fuck, what the hell is wrong with him??\" Micah said it so casually.\n\nJessica looked up at her friend and beamed at his compliment. She was a little tipsy, and it felt good to have a good-looking guy objectify her a little bit. Her boyfriend certainly hadn't shown any sexual interest in quite some time.\n\n\"I dunno...It's weird. Our sex is good when we actually HAVE it but he has this super low sex drive which sucks because I am like, the opposite. I'm ALWAYS fucking horny!\" Jessica whined, and Micah wondered if the booze was helping with these brave confessions of her most private self.\n\n\"Really? So like, how often do you guys have sex?\" Micah asked, ever intrigued. Jessica thought about it for a second.\n\n\"Probably like...once or twice a week...but that is not even CLOSE to being enough for me. It drives me absolutely crazy.\" Jessica said as she sucked her lips down over the bottle of the IPA and swigged it cutely. She got up and sat cross-legged next to Micah while they talked. She was becoming very animated now.\n\n\"I think I intimidate him a little bit in bed cuz I think guys just aren't used to girls who are so horny or sexually sure of themselves and what they want.\" She said, analyzing her sex life.\n\n\"Yeah, I totally get that,\" Micah said as he got up to sit opposite her in a similar manner. \"But he should be stoked by that...I'd love to date a girl that was always craving my cock or had a super high sex drive!\" Micah smiled at her and she smiled back at him shaking her head as she felt her skin tingle with the mention of Micah's cock.\n\n\"Such a waste of my sexual prime, I can tell you that.\" Jessica said, drinking more of the beer. \"I mean, fucking look at me! Look at this body! It was made to have sex!\" She said, and the friends laughed back and forth with each other as they became more comfortable in their intoxication.\n\nMicah reached over and poured them each one more shot apiece as he handed Jessica her tumbler. \"Cheers to that, Jess!\" They clinked and downed another one.\n\nTheir heads were definitely buzzing now. Jessica yawned and stretched her arms and her sweatshirt rose up her belly a little, which showed off her sexy stomach and soft skin. She felt good in that moment. The alcohol had been a good idea.\n\n\"Micah, thanks for being such a good friend...I don't know what I'd do without you.\"\n\n\"Of course babe. Anytime. I'm still trying to wrap my head around the fact that he didn't want to have more sex with you!\" Micah stated, keeping the topic on sex which he was having quite a lot of fun talking about with this gorgeous girl in his bed.\n\n\"Yeah, well, I think part of it was my confidence, but I think the other problem is that I was just too kinky for him.\" She said this as she licked the lip of her beer bottle absent-mindedly, almost chewing it. She was horny from the alcohol\u2014pissed still, but also definitely horny.\n\nMicah couldn't believe what she had just said. He wondered if he could press her to expand on that but thought better of it. That might be a little too creepy if he asked his good friend what her kinks were that the shnozznozzle wasn't interested in.\n\n\"Hey, do you mind if I crash here? I'm exhausted after this night and I don't want to go back to that apartment and wait for him to get back from the club smelling like cheap vodka and hooker perfume.\" She asked Micah suddenly.\n\n\"It's fine with me babe, but you should probably know know, cheap vodka and hooker perfume is the scent of my fabric softener so you might not enjoy staying here as much as you think.\" Micah joked.\n\nShe reached for a pillow and smacked him in the face with it and he grabbed it and bonked her back as they fell back on the bed together laughing like little kids.\n\n\"You don't mind if I fall asleep with you, do you? I don't want to sleep by myself tonight...please don't do the valiant, 'I'll-sleep-on-the-carpet' thing. I don't need a gentleman or anything. I just wouldn't mind having someone close by me right now.\" She said it so sweetly that you could hardly tell there was some seduction in her voice.\n\n\"Of course. I'll gladly sleep with you, babe.\"\n\nJessica looked at Micah and felt her pussy tingle a little bit. She didn't know if the double entendre was intended, but she liked his use of it anyway. Why the fuck couldn't she seduce her friend into pounding her pussy tonight? She thought. Didn't she deserve a little misbehavior of her own? The alcohol swam through her blood and warmed her skin under her sweats.\n\n\"It's really hot in here, mind if I borrow a thin t-shirt from you to sleep in?\" She asked.\n\nMicah realized she was wearing sweats and a\n\nhoodie and that his room did indeed get a little warm at night without the AC blasting.\n\nHe hopped up from the bed and grabbed an old Queen t-shirt that was too small for him but would probably make a good nighttime shirt for her. If he was being honest with himself, he had some longer shirts he could've given her, but he secretly hoped she wouldn't mind that the shirt only came down to just below her butt cheeks.\n\nShe grabbed it and headed out of his room down the hall to the bathroom. When she came back he noticed that the shirt was all she was wearing. It did an amazing job of JUST covering her legs where he knew her panties would've been. This drove him crazy a little bit. She also wasn't wearing a bra and he could see her perky tits pressing through the fabric of the old shirt that had been through a thousand dryer loads. He really had chosen wisely.\n\n\"I used your mouthwash, I hope that's okay.\" She said, and of course it was.\n\nMicah made a similar trip to the bathroom and washed up, particularly making sure to freshen up certain parts of his body just in case things happened that he couldn't imagine actually might. He peed and brushed his teeth and made sure everything smelled fresh.\n\nHe came back into the room wearing only his boxer briefs (the pair he liked because they tended to outline his package quite well) and a sleep-t-shirt of his own.\n\nWhen he came back into the room he noticed that she was sitting cross-legged on top of the sheets after she'd pulled the comforter all the way down to the end of the bed. She patted the spot next to her and Micah climbed into the bed, which trapped Jessica up against the wall side.\n\n\"I'm tired but I'm like, not tired, ya know?\" She said, and she was feeling squirrely from her beer and whiskey buzz.\n\n\"I'm pretty buzzed right now I think.\" Micah admitted. It had been hours since he'd had dinner and they had downed the six pack and their three shots over only a couple of hours.\n\n\"Oh My God! Me too! I'm so happy I'm not the only one!\" She said, laughing as she touched Micah on the arm and ran her fingers down it softly.\n\n\"So,\" Micah began suddenly, feeling like if they were both drunk enough that this might be the right time to ask about his nagging curiosity. \"You said,\" he began slowly, \"your boyfriend thinks that you're...too kinky?\"\n\n\"Oh fuck, did I say that out loud earlier?!\" Jessica asked as she pressed her face into one of Micah's pillows as her face grew a little red. \"I honestly couldn't remember if I had just thought it or actually said it!\" She giggled again and hiccupped and they both laughed at that. She held her breath to make sure that would be the only one, even though Micah tried to make her laugh the entire time which caused her to slap his bare thigh where he sat next to her. Finally, though it wasn't easy, it seemed that she'd beaten the hiccups.\n\n\"Oh you said it out loud, trust me, I almost said something but thought maybe that might be too personal a question.\" Micah explained.\n\n\"No worries, I actually kind of like being able to talk about it with someone.\" She said, smiling at him. They were close to each other on the bed with their legs Indian style as they faced each other. Their knees naturally touched as you do when having an intimate conversation with someone.\n\nMicah clicked some of his music on and Jessica began to explain what she meant by \"too kinky.\"\n\n\"Basically, I like everything about sex. Kinky sex especially. I like sex toys, role-play, ass play, dirty talk, the works. I like dressing up in sexy lingerie and surprising the boy with outfits and everything.\" Micah was stunned at her honesty. It was always the ones you least expected, he thought to himself.\n\nAs they were talking she leaned back a little bit, which caused her shirt to ride up her torso more. Micah couldn't help but notice her exposed panties. He gasped a little as his eyes drifted over their design as he instantly recognized something very unique about them.\n\nJessica was wearing a pair of low-rise black panties with a little frill along the legs and some lace...but the belt was solid black and there in the middle of the crotch, was a very recognizable black ring that almost blended in with the rest of the soft cotton.\n\nIf most people had seen these panties, they would've just thought they were a cute black thong with an interesting design feature...but Micah had some sexual curiosities of his own that he was particularly taken by, and he knew right away that these particular panties were a brand called 'RodeoH.'\n\nHe had sought out videos many a time on Internet porn sites of girls wearing just such panties while they fucked their willing men up the ass.\n\nBecause these panties also happened to be sexy, strap-on harnesses that actually looked like the type of underwear a girl would wear.\n\nOne of Micah's biggest fantasies in his own sexual treasure box was to be fucked in the ass by a girl who enjoyed wearing a strap-on cock. He wanted to experience being with a girl that was a little dominant in the bedroom.\n\nHe couldn't believe that Jessica was wearing them. The implications were breathtaking.\n\nJessica noticed while they were talking that Micah's eyes had wandered down to her crotch and had stopped on the 0-Ring stitched into the middle of them. It was almost too dark in the room to see it save but for a nearby dresser lamp. Her breath caught a little as she realized something she hadn't even thought of before when she'd headed over to Micah's place earlier that night...she was still wearing her strap-on panties.\n\nShe had actually put them on much earlier in the day because she was doing laundry after a busy two weeks and this was the only comfortable pair she had left in her underwear drawer.\n\nShe suddenly wondered if he had recognized what they were. Could he possibly? No, she thought, Micah had always seemed like such a straight-and-narrow kind of guy. There was no way...but...maybe?\n\n\"So, like, what kind of kinky stuff was your boyfriend not into trying?\" Micah asked as he quickly snapped his eyes away, hoping she hadn't seem him staring. Micah had actually felt his dick start to tingle in his boxers a little. This girl he'd fantasized about a million times over and also most definitely jacked off to a number of times, was in his bed\u2014the same bed he'd jacked off in while thinking about her amazing body.\n\nShe was in his bed and she was wearing sexy strap-on harness panties no less.\n\n\"Mmmm, well, there was lots of stuff, let me think,\" as she said this Jessica folded her legs under her which sort of jutted her crotch out a little bit to really show off her sexy legs. They were lean and shaved and she clearly moisturized them numerous times a day. Micah liked the way her smooth knees felt pressed into against his own crossed legs. The panties were still plainly visible to Micah who assumed she hadn't realized how exposed she was. \"He never liked eating me out, and he especially didn't like it when I would ask him to eat my asshole.\"",
        "Micah gulped. The thought of eating Jessica's asshole was like a three star Michelin culinary booty fantasy. How could any guy not want to shove their face between those glorious cheeks of hers?\n\n\"That blows me away. That's so fucking kinky and hot, I love it!\" Micah stated, truly being honest now. He did love to eat ass.\n\nBoth friends were enjoying this sexual openness as they continued their conversation with an air of excitement.\n\n\"And...he never really liked when I wanted to play with bondage, or like, BDSM stuff.\" She said, watching Micah's face to gage his reaction. He seemed excited by each new word that came out of her mouth.\n\n\"Oh, are you into that kind of stuff?\" Micah asked, trying to hide his dick now along the inside of his leg as it became much more obvious piping running down the inside of his right boxer leg.\n\n\"Oh yeah...I like using ropes or furry handcuffs in bed. I also like blindfolds. I think all of that is hot. Domination and submission and kind of letting yourself go, ya know? I definitely love dirty talk a lot...like A LOT a lot...you've gotta talk in bed, right? Keep things fresh?\" She said, as she ran a hand up to play with a strand of hair that liked to fall over her face. She was radiantly sexy.\n\n\"No I totally get what you mean, very sexy for sure.\" Micah said, and he wondered whether she liked to be tied up, or be the one tying the guy up. His dick pulsed in his boxers. He was horny as fuck now as they talked. This was very unexpected.\n\n\"So were those the main things? Ass-eating and BDSM?\" Micah asked, curious just how much information she'd relinquish.\n\n\"Noooo, there's one more really big kink I have that's kind of embarrassing to admit to but it's like, my number one thing.\" She said, playing with a strand around her finger as she stared at Micah, wondering if she should tell him.\n\n\"Oh no...now you HAVE to tell me! You can't just give me that kinda tease and then just not say it!\" He argued. She looked at him for a few seconds and felt her face getting a little red but the alcohol had pushed her courage much further along than even she realized. She chewed on the end of the hair a bit and then made her decision.\n\n\"Okay, but you have to promise you won't get weirded out or anything, okay?\" She said and Micah of course agreed. He hoped he knew where she was going with this.\n\n\"My biggest sexual kink...\" she began, and she taunted Micah by taking such a long pause.\n\n\"Just tell me you dork!\" Micah said, and she giggled again as he slapped her bare thigh right in front of him just hard enough to make her squeal a bit.\n\n\"OUCH! Okay, okay, okay, my biggest sexual kink is...strap-on sex.\" She said it so comfortably and in a directly seductive way, but she was still red in the cheeks. Micah felt a shiver run up and down his entire spine like a roller coaster that starts one way and then comes back the other.\n\nShe looked at Micah to see how he would react to such a confession. He seemed totally cool with it. He was smiling really big, but in a very supportive way. She was so relieved.\n\n\"I kinda thought you might say that,\" Micah said laughing at her. He was strangely nervous for some reason as he decided to be brave and ask about the underwear.\n\n\"You did?! Why???\" She asked. Then she watched as Micah reached over and ran a finger up her leg until it was just below her shirt hem. He pointed at the O-ring harness in the middle of the silky, black cotton panties.\n\n\"OH MY GOD, YOU ACTUALLY RECOGNIZED THESE?!?\" She flopped back over on the pillow and laughed hysterically. \"Oh my God it's so embarrassing and yet, hilarious at the same time.\" She said. \"I promise I can explain!\" She said, even as the two friends smiled in tipsy joy at each other.\n\n\"No, no, there's no need to, it's totally cool with me.\" Micah said, he was grinning ear-to-ear and enjoying Jessica's clear embarrassment from the situation.\n\n\"No, wait...wait a second...hear me out. I don't just go around wearing my strapon panties all the time...it's just...I was doing laundry today, and my other underwear was all dirty...and...\"\n\n\"And you saw someone you wanted to fuck so you slipped them on and then forgot you were wearing them when you came over!\" Micah finished her sentence as he enjoyed ribbing her. They were both dying now. This was too funny.\n\nBut also, Micah was hard.\n\nAnd Jessica was wet.\n\nThe conversation served two different purposes above and below the surface of their water.\n\n\"Noooo! Okay, first of all, fuck you!\" She said it in the cutest way as she playfully pushed Micah in his face and his head fell back a little in mock protest. \"Look, I know it looks weird but I promise they're just one of my more comfy pair of panties and my hand was definitely forced by the laundry gods. I hadn't even realized I was still wearing them until I looked down just a couple of minutes ago. We all have desperate underwear days, right?\" She said, and Micah gave her a sideways grin as they both giggled at the situation.\n\nAfter they'd settled down and their laughter had dissipated she looked back over at her good friend wearing only his boxer briefs and a shirt. His muscles looked good. He was tanned. His hair was thick and sexy. Why hadn't she ever fucked this guy before? Why was she wasting her time on idiots? All these things went running through her head, including one particularly interesting thought which made her stop to cock an eyebrow at Micah. <br >\n\n\"Wait...wait a second...how did YOU recognize that these were strap-on panties?? These are like, super subtle and they could've just been designed with a ring like that. How would you know what they were unless...unless...ohhhhh,\" Jessica looked up at Micah accusingly, and now his cheeks looked like Washington Apples as a guilty grin escaped sideways out of his mouth.\n\n\"You've got some explaining of your own to do Micah Tate!\"\n\nNow Micah was really trapped. He had two options. He could try to bullshit his way out of this (\"Saw them on a porn! Bought a pair for a white elephant one year! Made a Sherlock Holmes-like deduction based on things I know about the world! Etc, etc.), or, he could tell his sexy, drunk best friend, the truth.\n\n\"Okay, well, I've never told ANYONE this before so you have to promise that you take this to your grave but...I'm also super into the idea of strap-on play.\" When he said it Jessica felt a tingle between her legs. Her pussy was getting warmer.\n\n\"REALLYYYYY?!?!\" She beamed back at him. \"Oh my God I would've NEVER guessed that, you've always seemed kinda like a goody-two-shoes to me, and I mean that in the nicest way possible, babe.\" And it was clear that she really did. Both friends were so very fond of each other, there was nothing but admiration shared between them.\n\nMicah smiled sheepishly. \"I guess I'm a little kinky too,\" he concluded in a handsome sort of way.\n\nThere was no going back now. The topic of conversation was firmly set in place. They couldn't have change the subject to baseball if the Cubs had strolled by the window. They were locked in to this coincidence.\n\n\"Soooo, have you ever actually tried it?\" Jessica asked in a sing-songy sort of way, sitting further up on her knees as she excitedly poked her friend for more details. She was very into all of this. She wanted to know what Micah's experience was. She was VERY interested in what his sexual experience with this was.\n\n\"No, unfortunately I've never dated a single girl who was into it so I've always kinda had to keep it on the down-low. One girl freaked out when I told her and it sort of ruined our relationship from that point on. She just didn't get it. I think she saw me as different or not manly enough for her or something.\" Micah described his reasons for being secretive in his kink.\n\n\"Ugghhh, that's so STUPID, I hate that double standard that exists\u2014boys aren't allowed to be kinky in the same way girls are. People get all weird about it. Like, two girls could make out and fuck during a sleepover and no one would blink an eye, but if two guys fooled around everyone would be like \"oh yeah, they're gay.\" Sorry for all toxic masculinity you have to deal with on the regular. Such silly bullshit.\" She said as she tied her hair up into a cute ponytail with a band from her wrist. This was clearly a topic that Jessica felt strongly about and Micah felt so much better as he heard every positive idea in her response.\n\n\"Yeah, it's nice that I can actually admit this fantasy to a girl...kind of a breath of fresh air, ya know? I appreciate it, Jess.\" He said as he brushed her knee in a friendly sort of gesture.\n\nShe smiled at him and leaned forward to give him a big hug, and he loved the way her body felt against him.\n\n\"Of course, you can totally tell me anything, I hope you know that, Micah. You're one of my absolute best friends.\" She said, and Micah felt unexpectedly emotional from that. He wasn't expecting to get any sexual therapy in this moment. It was cathartic.\n\n\"So, how about you? What do you like to do with a strap-on? How many guys have you played with your strap-on with?\" Micah asked. He wanted to know so much more. He wasn't even fully sure how to phrase the questions so that they continued to sound curious rather than creepy.\n\n\"Well, let's see. I really enjoy the role reversal of it, ya know? But actually I've only fucked one guy with my strap-on. But...since we're putting all of our cards on the table now, you should know that I've also fucked a girl.\" Micah couldn't believe that. It was the sexiest thing she could've said in that moment. Now he had fifty more questions that flooded his brain. He immediately created sexual scenarios in his mind of Jessica with another girl.\n\n\"You fucked a girl with it? So you've had lesbian sex?\" He queried her like a turned-on puppy dog.\n\n\"Yes, oh definitely. I umm, I REALLY like playing with girls. They're a lot of fun in bed and they know how to make me orgasm better than most guys. But...that being said, I had WAY more fun fucking a guy than I did fucking a girl. I think that's my main kink\u2014taking a guy's ass.\" She said it and her face had a foxy sort of devilishness that had come over it.\n\n\"Damn, that's amazing. So...who was the guy?\" Micah wanted to know now.\n\n\"Oh, I don't think you know him...I dated him the first year I was in school right before I met the asshole I'm with now. I found out one night while we were playing in the shower that he liked having his asshole played with while I blew him. My hands were on his ass and he guided me over to play with his asshole. It was very unexpected but also, incredibly sexy to me for some reason. And I guess it sort of unraveled in my mind and led me down this whole strap-on rabbit hole. I ended up surprising him one night while we were playing. I came into the room wearing a sexy skirt and I had a strap-on hiding underneath it. We started making out and when he reached his hand into my skirt he was surprised when he felt the cock sticking out from my harness. I sort of took over from there and totally seduced him and told him I was going to fuck his ass and he was basically putty in my hands for the rest of the night.\" As Jessica continued her detailed story Micah could feel himself growing fully hard in his boxers. This was a scenario he would've died to experience. He was so turned on by her in that moment.\n\nShe continued, \"Then for the rest of our relationship we had a lot of fun with strap-on play. The sex we had in general was, if I'm being honest, sort of just average...but damn, I really liked fucking him and seeing how turned on he got from it. Totally empowering sort of thing to experience. I understood instantly why guys were so horny all the time, ya know? There's something really erotic in having that kind of power, isn't there?\" She said it like she had analyzed herself a thousand times over and knew exactly what she wanted in the bedroom. Micah was so revved up by this girl. His boner made tiny thumps like distant Zulu war drums.\n\nShe turned to look at Micah suddenly, \"I'm sorry...if I had known all this time that you had this big strap-on fantasy I would've gladly come over to help you out in fulfilling it!\" She said it in a very playful way. It was hard to tell where the joking stopped and where the seriousness started.\n\nMicah smiled in an embarrassed way as he looked at Jessica's sultry glare.\n\n\"Ugh...you're SUCH a tease!\" Micah said finally as he slapped her knee again.\n\n\"Unfortunately I only have the panties right now...all of my favorite cocks are back at the apartment, or I'd ask if you wanted to have some fun.\" She looked at Micah and licked her lips a little. Now she looked like she really was being serious. Micah was holding his breath.\n\nHe stared at her for a long time feeling his heart raging out of his chest. He double gulped. She was so fucking sexy in that tiny Queen shirt and her lazy ponytail and those strap-on panties staring back at him.\n\n\"Hmmmm,\" he said, \"that is too bad,\" as he looked at her and felt the throbbing of his cock inside his boxer briefs. He was almost too nervous to do what he did next but...he reached over into the nightstand drawer beside his bed and took out a seven inch dildo and a small bottle of lube that he kept in there. \"I mean...look...you're kind of assuming that I don't have my own toys!\"\n\nThe dildo was smooth and black and had a familiar flat base. Jessica gasped when she saw what he had grabbed.\n\n\"Oh my God...Micah...is that YOUR dildo?\" She asked, purposefully teasing him a little in case he was just playing along with her joke. She could tell how nervous he was now as this back and forth continued and she purposefully ran her hands playfully over the tops of his hands in a friendly way in hopes of steadying his nerves.\n\nHe shook his head yes to her question. She grabbed the dildo out of his hand and inspected it. It was a good size sex toy\u2014probably a solid seven inches with a nice girth, and it turned her on so much to know that he used this toy in his ass. It was the kind of dildo that could be pressed up against something...or...because of the flat base...it was also designed to easily click into place with the average harness ring size of a strap-on.\n\nShe slowly brought the dildo down and slid the ring aside as she pushed the cock through it and locked it into place. It jutted out from her body as the toy curved up like a tasty banana.\n\nShe stroked the silicone dildo with her hand as she stared at Micah. He was breathing heavily as he stared back at her.\n\n\"How do I look?\" She asked him. She wanted to see what he would say. She studied him carefully.\n\n\"You look...fuck. You look fucking hot.\" Micah said. He was so hard in his boxers. Jessica could see the outline of Micah's boner now. There was no more hiding anything.\n\n\"Do you want me to give you a massage?\" She asked in a suddenly flirty sort of tone. Micah was in a zombie haze as he drooled at the sight of the cock sticking out of the crotch of this sexual fantasy girl in his bed.\n\n\"Fuck, yes, that sounds amazing, I'd love a massage.\" Micah wasn't really sure where this was going, but the idea of Jessica giving him a massage in bed was just about enough to make him blow his load in his boxers. It didn't hurt that she was wearing his favorite sex toy at the same time.\n\nHe wondered if she would take the cock out after she'd modeled it for him, but as she had him lay down on his stomach in the middle of the bed, he realized that she was keeping it on. His heart was beating very fast.\n\nJessica reached for the bottle of lotion that Micah had beside his bed. \"Shirt off please.\" She said it very casually, but there was no option in her sentence. He took his shirt off, and now he was down to just his tight boxer briefs.\n\nJessica swung her legs over his and sat right at the top of his thighs where they connected to his butt. Micah loved the fact that she was sitting on him. He was completely hypnotized by wherever she was taking them.\n\nShe squirted the lotion up and down his spine and Micah goosebumped a little from the cold of the lotion.\n\n\"Oops, sorry if that's a little cold, shoulda warned you first,\" she apologized.\n\n\"No, of course not, it feels good.\" He assured her as he looked back over his shoulder at her.\n\n\"Good, I'm glad.\" She said and she pushed his face forward so it was facing down on the bed.\n\n\"Just let me know if I go too hard, okay?\" She said, and he couldn't help hearing the obvious double entendre.\n\nJessica immediately began to massage her hands deeply into his muscles as she spread the lotion all over his toned back muscles. Mmmm, he felt good, she thought. Jessica noticed immediately the efforts of Micah's consistent workout sessions. This boy was getting tastier by the minute, she mused.\n\nShe kneaded her hands all the way up and then all the way back down his back, destroying old knots and causing Micah to occasionally moan in an appreciative baritone. Each time her hands would roll up his back her body would get lower over his and she could smell the musk of his body wash. She had the biggest craving to lick him, but she was currently focused on bigger game.\n\nAs the massage went on she leaned over more which caused the dildo to rest between Micah's boxer clad butt cheeks. He moaned a little when he felt it and Jessica definitely noticed the moan because it was unconnected to any particular muscle group that she working into submission on that pass up his body. Jessica smiled to herself and bit her lip with an intense craving. She was becoming more confident in where she was taking this. But still, she called rather than raised the pot.\n\nShe continued to massage the lotion into Micah's back as it spread out and unwound him like a tin-man receiving his first oil in years. Micah had never been so relaxed and turned on all at the same time. Jessica's fingers were magical on his back and arms and neck.\n\nAs her passes continued, she pushed her legs further into the bottom of his ass as she would bring her hands all the way the way up to his head to run them through his hair. Micah moaned again as he felt the plastic cock firmly pressed up against his crack and enjoyed the way her hands massaged his head. She laid down on him like that to massage his head.\n\nHe could feel her braless tits pressing against his back through his own t-shirt he'd loaned her. Such a good choice of shirt, he thought again.\n\nThen she did something a little different\u2014on her next pass where she brought her body back up and then back down to massage all the way from his lower back up to his head, she gyrated her hips a little into his butt and the toy definitely rubbed against his thinly covered crack with a definite suggestiveness.\n\nShe did this again not so subtly on her next pass. Then she started to do it more. Then she started to do it every single time. She'd sit all the way up and end her massage with her hands running all the way over his boxer-covered buns, and then she'd slide them back up his buns, back, neck, and head. Each time she'd push her hips with a little more intent into his backside.\n\nIt definitely reminded Micah of something very familiar. It reminded him of how he might seduce a girl that he wanted to fuck.\n\nFuck.\n\nJessica wanted to fuck him.\n\nIt was becoming very obvious. Micah was incredibly nervous and turned on all at once. All he could do was wait to see what she did next. Every second grew more exciting as she rubbed him in a sensual sort of way.\n\nThe next time she laid down on him, she brought her lips close to the side of his face and spoke into his ear after he moaned deliriously at one of her deep shoulder rubs.\n\n\"Hey, do you want me to massage your butt?\" She said it in such an innocent tone, there was no way Micah could say no to that. He was DYING for her to play with his ass in that moment.\n\n\"Yes, that sounds incredible,\" he said to her, and she kissed the skin under his ear sweetly as she pulled her self back up from his body.",
        "Jessica was still sitting cowgirl style on the top of Micah's legs. She squeezed his ass once in her hands which Micah loved already and then he felt her put her fingers in the sides of his waistband.\n\n\"These gotta come off, tiger.\" She tugged Micah's boxers down at the sides and he lifted his hips up to help her in getting his underwear off. They caught briefly on his raging hard dick, but he was able to wiggle them past. Micah was still facing directly down on the bed and as Jessica pulled the briefs off of his feet, she picked up the bottle of lotion again. As she squirted the lotion with one hand onto both sides of his round butt cheeks, she brought the boxers over to her nose and quickly turned them inside out so she could smell the crotch.\n\nMicah's boxers had a lot of pre-cum smeared across the front patch, and that was the last piece of information that Jessica needed. She threw them to the floor and scooted up as she began to massage his ass with a dedicated energy.\n\nMicah's moans were walking a tight-rope as they escaped out from under him. He was clearly enjoying having a rarely touched body part massaged, but his moans were slowly crossing over into the sexual category. Jessica loved every single one of them. She spread the lotion all over his amazing ass and worked his cheeks wide so that she could check out his asshole.\n\nHe was neatly trimmed down there which she noticed immediately. There wasn't a patch of unruly hair to get in her way. She always liked when her boys were appropriately manscaped.\n\nShe ran her fingers over his buns and spread them wider and wider with each circle of her knuckles and fingers. Micah sounded hot as his sounds matched her ministrations. She could feel her wetness through her panties and she felt as powerful as she always did wearing these panties. Her brain was on overdrive. He was completely smitten with her in that moment.\n\nHer fingers began to dip down into his crack and she'd run them all the way down his buns to his inner thighs too. Micah's hard-on pressed into his bed as she continued to pass ever so closely to his ball sack. On her next pass, she allowed her fingers to travel back up through his crack, around his hole, and across the soft skin of his perineum.\n\nMicah's breath caught again. He could feel her fingernails running along the sensitive skin of his inner cheeks. She was really focusing just on his crack now, but she'd veer off before touching his puckered asshole, which she could swear was trying to suck her fingers in on each pass. Jessica noticed how Micah's asshole was moving. She was absolutely tickled at how much he wanted it. He had even pressed his ass ever so subtly back towards her. They were both incredibly silent as the drama unfolded.\n\nThen finally, a couple of deep kneads later, Micah felt Jessica's fingers run all the way up the inside of his thighs, where they stopped on the base of his very swelled scrotum, and then he moaned a silent gasp into the sheets as he felt her fingers run directly up his crack until they stopped directly on the skin of his anus.\n\nShe dragged a soft fingertip around his anal ring and Micah moaned in a slightly higher pitch against his bed. They were fully committed now.\n\nJessica did this for a couple of minutes. She lightly caressed his sensitive anal skin and the skin all around it. Micah was incandescent with arousal.\n\nShe loved how much power she seemed to have in this very moment. Jessica felt like she could actually FEEL the hardness of the cock she was wearing.\n\nAfter playing with her friend's cute little hole for a bit, she moved further up his legs until she was sitting right on the edge of his ass. She leaned down with her body again so her weight was fully on top of his so she could talk softly into his ear.\n\n\"Hey, can I rub the strap-on up against your ass? I'm really horny right now and I want you to see how good it feels when the toy rubs against your hole.\"\n\n\"Mmmhmmm.\" Micah moaned back to her and she could feel him pushing back a little with his ass. He really was horny for her cock, she was totally sure of it.\n\nJessica grabbed the bottle of lube that Micah had taken out with the dildo and she popped open the lid. She squeezed some of it out onto her hand and she rubbed the juicy oil all up and down the cock. Then she brought the remaining lube over to rub it copiously up and down Micah's hole. He instantly recognized the sensation of his lube and his heart beat faster than it had all night.\n\nShe was actually lubing him up.\n\nJessica threw the lube to the side and angled the toy so it would slide up through Micah's butt cheeks like a hot dog in a bun. She spread his cheeks apart with her hands and closed them over the girth of the dildo and Micah loved every fucking second of every single thing she was doing.\n\nShe thrust her hips back and forth through the valley of his ass as the toy rubbed every nerve-ending that he had never truly satiated.\n\nJessica noticed that Micah's moans hadn't stopped, but they were now definitely sexually motivated. He didn't seem to be hiding them anymore either. He wanted this just as bad as she did.\n\nThe next time she slid the cock down through his butt, she repositioned the head so it was pushed against the entrance of his ass.\n\nNow Micah could feel the head of the toy pressing against his opening and he cock was absolutely throbbing with anticipation.\n\nJessica continued to rock back and forth, as if she was pretending any of this was still for show. She wanted to drive Micah so insane that he was absolutely begging for it.\n\nShe would lightly press her hips forward and the toy would press against the tight ring of his anus in the most teasing sort of way.\n\nShe leaned back down now while keeping her hips in place with the toy threatening to enter his buns at any moment.\n\n\"You have a really sexy ass, Micah.\" She said into his ear and Micah moaned happily into the bed from this compliment.\n\n\"You're such a good friend to me. You're always there whenever I need you,\" and as she spoke sweetly to him, he felt the head push past his sphincter muscle. The cock was officially inside of him now. \"You always know just what to say to cheer me up. You're really such a great guy.\" And now the toy was a full two inches into his butt as he clenched his teeth and marveled at the powerful pleasure of someone else using his ass however they wanted.\n\nMicah moaned in the naughtiest way he had all night. His butt was pressed back against Jessica's strap-on cock and she continued to slowly press herself into him.\n\nWhen the toy was half-way in she leaned down to kiss his back. She kissed him softly up his neck to his ear and bit him gently.\n\n\"Micah...do you want my cock?\" She asked in the sexiest little voice. He almost died and went to heaven right then and there. He loved that she called it her cock.\n\n\"Mmmhmmmm.\" He moaned into the bed, so ridiculously submissive for Jessica's direction in that moment. He wanted all of it. He stumbled toward her mirage.\n\n\"You want me to take your ass tonight?\" She said to him now, her words carrying more naughty intonations with each twisting syllable. The cacophony of the way she pronounced the word \"cock\" echoed through his mind and made his ass tingle with pleasure even as it was slowly being spread apart by the forward progression of her hips.\n\nHer words seemed to be opening up his mind just as her hips slowly worked his ass open.\n\n\"Yessss,\" Micah moaned again. The strap-on was a full four inches inside of him now and his pre-cum leaked out of his own penis with zero signs of slowing down.\n\nThen suddenly, she pulled the cock back out of his ass. Micah gasped as his ass pulsed like the swimming motions of a jellyfish. Why had she taken it out?!\n\n\"Roll over.\" She said to him suddenly.\n\nAnd Micah realized she was going to see how hard he was, but it obviously didn't matter anymore. He was going to do whatever she told him to do at this point. And he wanted her to see how turned on he was.\n\nMicah rolled over and Jessica immediately spread his legs as she scooted herself up between them. She admired the seven inches of manly arousal jutting up his belly with a granite consistency.\n\n\"Mmmm, that's what I was hoping to see. Glad to know you're as turned on as I am.\" Jessica said with a naughty glee upon seeing how hard Micah's cock was. She was also quite happy to discover that he was well endowed. That would definitely come in handy later, she thought.\n\nShe spread his legs and grabbed the base of the dildo as she pressed it back up against Micah's hole and slowly pushed back in the full four inches she had already gone. Micah moaned loudly and she smiled as she grabbed both of his hips and pulled herself further into him.\n\n\"Mmmm, good job baby.\" She encouraged him in a sultry tone of voice.\n\nThen she leaned down and brought her lips to Micah's, and as he felt her tongue slip inside of his mouth for the first time, Jessica buried the last few inches of the cock into Micah's ass.\n\nHe moaned into her mouth as they kissed sensually. She pressed herself fully into him and kept the cock all the way inside of him as his ass expanded to her size.\n\n\"You're doing really good Micah,\" she said to him as she kissed him again. He felt her start to roll her hips a little, grinding the dick into his ass as her sexy body grinded against his. She was taking him in the missionary position. It was sexy and sweet all at once.\n\nThey made out softly as she slowly introduced him to the feeling of being fucked, and she was absolutely smitten with the noises he made as she fucked him. Jessica had been craving this type of sexual encounter forever. And now here she was fucking a boy's ass for the first time. She was so turned on.\n\nShe broke from his mouth suddenly to smile at him and then returned to a kneeling position between his legs.\n\nNow with more leverage, she began to pull the cock further out before plunging it back in. She was really starting to fuck him now. Micah was actually being fucked by a sexy girl wearing a strap-on. He had never felt his cock this hard before.\n\nAs she began to thrust harder and more consistently he watched as she crossed her arms and peeled the Queen shirt up over her head. She threw it off the bed as her breasts popped out before him.\n\nJessica had these 32 B tits which were just so stinking cute and perfectly perky for her body. They looked like ripe apples just asking to be sucked on. Her nipples were hard pencil erasers that stuck out from her body with dime-sized areolas that just begged to be sucked. She was so damned sexy that Micah hardly knew what to do with himself. The girl next door was fucking him in the ass with a strap-on in his own bed. The cutie that he worked with was now the hottie that was dominating him.\n\nMicah admired Jessica's lower body strength as she pushed into him over and over again. Her cute ponytail bounced along with her thrusts and a bead of sweat formed on her chest and trickled down through her breasts as she completely demolished Micah's buns over and over again.\n\n\"Fucckkk, Ughhh, fughhh,\" Micah moaned into the bed as she fucked him. He brought his hand up to play with his cock but Jessica grabbed it and pushed it away.\n\n\"No, don't touch yourself. I want you to focus on the pleasure from your ass only right now.\" She said, even as she smiled at how badly she knew this was torturing him. His cock was so hard it looked like it might burst at any second and a sticky string of pre-cum smeared from the opening of his tip down to his belly button.\n\n\"Mmmm, fuckk, okayyyy, mmmfff,\" Micah moaned. His eyes were half closed as he stared up at Jessica while she fucked him. He couldn't believe how good it felt to have someone else opening up his ass. Each time she thrust into him his eyes bulged and he moaned\n\nShe was smiling in the sexiest way. It was a naughty little grin that drove him wild. She looked like liquid sex.\n\n\"Good boy,\" She said as she kept going hard into him. \"You're taking my cock really good, Micah. Just keep that ass nice and relaxed for me baby. This is so fucking hot!\"\n\n\"Mmmmm, fuck yes, Jess,\" Micah moaned, his legs clamping around her waist as he enjoyed the way she pounded him immensely.\n\n\"You like that baby?\" Jessica teased him.\n\n\"Yessss, I like it, unnnfff,\" Micah moaned back.\n\n\"You like the way I fuck your ass, Micah?\" She continued to drive his mind crazy with every word that came out of her mouth.\n\n\"Yessssss, ufff, fuckkk meee.\" Micah moaned as she continued her assault.\n\nShe pulled the whole dildo out of him suddenly.\n\n\"Flip over onto your knees, I want to fuck you Doggy-style.\" Micah followed her every instruction and he watched as she grabbed the lube again. She squeezed a generous helping out and rubbed it into his hole with her fingers. He shuddered when he felt her slide two of her fingers inside of him as she fingered him with the new dribbles of lube and got him nice and loose again.\n\nThen she pulled her fingers out and wiped them on his leg.\n\n\"Mmmmm Micah, you have a really nice ass baby.\" She spanked him hard. Micah was leaning on his elbows and he moaned at the sudden rap against his butt.\n\n\"Yeah, good little slut,\" she spread his cheeks apart and brought the toy back to his hole. Then she thrust the entire thing back inside of him as Micah loudly groaned from her force.\n\n\"MMmmmm, I LOVE how you moan from being fucked, baby. Take that cock like the little slut I know you are.\" She said, and then Jessica really began to fuck Micah hard.\n\nThis was something totally knew. She held the handles of his hips and drove the dildo roughly into his wet hole like an unleashed animal as Micah could feel her soft legs slapping against his thighs.\n\nAt some point the pounding was so intense Micah sunk down to his elbows and then he felt her strong legs forcing him fully down onto his stomach. She pushed his legs together and spread hers over his ass as she pushed the large cock in and out of his ass mercilessly.\n\nIf her body had been a video game it would've been Space Invaders because Micah couldn't believe how hard and how far she was able to push the silicone dick into him. He hardly recognized the moans that were coming out of his own mouth as she pummeled his booty like a battering ram against his castle gates.\n\nAs she pounded him further into the bed Micah felt his body being pushed further up until his head was being pounded into the wooden headboard.\n\nJessica wasn't slowing down. Her thrusts came in impressively quick succession now, as if she was trying to make the plastic cock itself cum inside of Micah's ass. Her ass bounced on top of his like a club girl popping her booty. No wonder she was so good at this. She loved to dance.\n\n\"Roll over again, slut.\" She said to him, and Micah smiled like a drunk whore as he rolled over for his dominant friend. She picked up both of his legs and lifted them up onto her shoulders. Then she shoved the cock back inside his exposed asshole.\n\nMicah watched her breasts pressed together between his legs as she gyrated deliciously into him.\n\nHe loved the way the tip of her cock continued rubbing against his male g-spot.\n\nShe reached over and grabbed his cock finally.\n\n\"Mmmmm, you're soooo hard Micah,\" she said appreciatively as she jacked him all the way through her heavy thrusts.\n\nMicah knew he wasn't going to last very long now.\n\n\"Jess, ohfuck, pleasedontstop, pleasedontstop...fuggg...\" Micah was so close.\n\nShe jacked him harder and pounded into him in the straightest line she could.\n\n\"Yeah baby...cum on my cock baby, cum while I fuck you Micah!!! Cum like a little slut for me Micah. Cum Micah! CUM ALL OVER YOURSELF MICAH!! CUM ON MY COCK MICAH!!! CUM ON MY COCK MICAH!!! BE A GOOD LITTLE COCKSLUT FOR ME MICAH!! CUM FOR ME BABY!!! CUM WHILE I FUCK YOU SLUT!!! CUM FOR ME CUMSLUT!!! CUM WHILE I POUND YOU BABY!!!\"\n\nShe had almost folded him over in half now and her fist pumped his swelled cock faster than he could've imagined her arm muscles would allow.\n\nHe exploded like a bag of popcorn. His cum shot out in giant streams of sticky sperm that drenched his chest and neck and even his chin. Jessica smiled happily as she saw how much Micah was cumming. He painted his chest creamy white in his orgasm.\n\n\"Yesss baby....Mmmm, that's so sexy baby, cum babyyyy, cummm for me babyyyy!\"\n\nMicah kept cumming and cumming and cumming. It was the largest cumshot of his entire life.\n\nWhen she had finally slowed down her fist, he thought his cock might retract back up into his body. His balls certainly had. She had drained him like a fully squeezed pack of Capri-Sun.\n\nMicah's crescendo caused his mind to practically black out. His legs were still stretched high above him on Jessica's shoulders as she kept herself pressed all the way into him.\n\nWhen he was finally able to bring himself back down into the atmosphere, Jessica placed his legs at her sides. He felt as she slid the dirty toy out of his ass and then watched as she slid the panties off her legs with the dildo still attached. She pushed them off to the side and then slowly slid herself up Micah's body.\n\nHe went crazy when he felt her bare pussy drag across his still sensitive cock.\n\nShe dragged her glistening lips all over his cum and he could feel how wet she was. His cock was already stirring again.\n\nShe covered her pussy in his cream and then she did the same thing as she slid up his stomach and chest, making sure to stop and grind herself wherever his seed had collected. Her pussy was dripping in his own sperm now.\n\nThat's when he realized what she was doing. She kept crawling until she was sitting over his face, and without giving him the option, she shoved her cum-covered pussy onto his mouth and Micah immediately began to lick her cunt.\n\nHe didn't care that she was covered in his juices. It made the whole thing dirtier and he loved it. She moaned in ecstatic pleasure as his tongue willingly attacked her warm snatch and lapped up his own salty deposit.\n\nShe had definitely found the man of her dreams. He was eating his own cum off of her pussy lips like it was an after-sex sandwich. She loved how naughty he was. She wanted to do all sorts of kinky things with this boy.\n\nShe scooched back down his body and made out with him and now they were kissing in the most dirty way as they enjoyed his cum between their lips. Jessica dragged her tongue out of his mouth as she found some cum along his chin and licked it up, then she dove back in and fed Micah more of his seed. She was the sexiest thing he had ever experienced.\n\nThe energy was electric. Micah could feel his cock returning to its full length and Jessica rubbed her naked sex against his and they both moaned for each other.\n\nShe placed his cock at her lips and sank down onto him as her wet opening enveloped his hardness in a plush glove of her gushing arousal. Micah was so turned on by how wet she was.\n\nJessica loved the way his cock filled her fully. He was the perfect size\u2014big and fat and naughty. She impaled herself completely as her hips rocked on top of his while they kissed. She moaned into his mouth as she ran her hands up through his hair and pulled his head back against the bed.\n\nMicah continued to be blown away by how good she was at this. She was somehow still in control, even as she rode his cock and squeezed his length with her vaginal muscles.\n\nShe sat up again and now she was staring down at Micah like the sexiest cowgirl he had ever seen. She rode him in these achingly good circles as her hips came up and then back and then down and around. This girl would've had no problem lasting eight seconds in the rodeo\u2014the question would be would the damn bull even make it that far?\n\nShe began to bounce up and down now on his lap as Micah's cock slapped wetly into her hungry snatch. She had one hand roughly squeezing a breast as she twisted a nipple with painfully pleasurable wickedness. Her other hand she used to steady herself on Micah's tummy.",
        "\"Micah I'm gonnna cummm, fucckkkkk,\" she moaned deliciously. Her moans were like sexual candy. She sounded like a Sunday School slut being brought to her knees in the conversion of the almighty love of cock.\n\nShe squealed loudly and Micah could feel himself getting close again too.\n\n\"Fuuuuggghhhhhhh!\" She said and he could tell that she was convulsing on him as an orgasm rocked through her and shut down her body like an electromagnetic pulse.\n\n\"Jess I'm gonna cum again, I'm gonna, don't stop riding me, don't stop riding me! Fuck...FUCKKK!\" Micah moaned.\n\nJessica did her duty and rode her favorite new stud with whatever remaining power she could summon. Multiple orgasms were rolling through her body like ocean waves even as her powerful lower body continued to milk Micah's Sasquatch like a zombie.\n\nMicah reached up and grabbed onto both of her breasts as his cum shot out of his cock and filled his best friend's pussy up. She clamped around him like a calf on a fresh nipple.\n\n\"Yesss baby fill me up, cum inside me Micah, give me all of your seed, fuggghhhh,\" She moaned as her hips continued to energetically ride him all the way through his second orgasm of the night.\n\nWhen he was finally done cumming, she dropped back down to his chest and rolled off to the side, his cock half out of her now.\n\nShe half-laughed and half-cried. It was the type of sex that made you want to start a new religion.\n\nThey breathed in an out as their bodies draped over each other. Micah's softening cock slipped from her opening as a river of his cum ran out of her pussy and down her inner thigh.\n\nMicah turned to her and they were on their sides now.\n\nHe kissed her forehead and she purred with him. They kissed each other softly and made tiny little noises against each other as their mutual afterglows set the room ablaze.\n\nMicah's ass was tingly and a little sore. He was going to feel that tomorrow, he already knew.\n\nShe ran a hand over his face as she kissed him in little spurts now.\n\n\"So, how was your first time getting fucked by a strap-on? Did you like it?\" Jessica asked, staring into his eyes and running a hand through the hair above his ear.\n\n\"Mmmm, Jess, that's like, some of the best sex I've ever had. Thank you for doing that for me, I was so turned on the entire time.\" Micah said, already thinking back to the way she had taken charge over him.\n\n\"Oh my God, me too, it was so fucking good. You have a really sexy ass, did you know that?\" She said, her hand tracing down his body and grabbing his butt behind him as she pulled him close.\n\n\"Mmmm, thanks baby, you made me feel really sexy while you were fucking me, I really liked the way you took over.\" Micah was analyzing the crazy thoughts that were swirling through his head. She really had completely nailed his fantasy even as she nailed his ass.\n\n\"So, I wanna ask you something,\" Jessica said.\n\nMicah was staring at this sexy starlet as she looked into his eyes. \"Of course, anything, ask away.\"\n\n\"Well, I think I really like you...and I think I didn't fully realize that until tonight, and I also think I need to dump the loser boyfriend like, yesterday.\" Everything she was saying was making Micah's heart grow bigger and bigger in size.\n\n\"Yeah?\" He beckoned her on.\n\n\"Well, yeah. And, I guess I'm just wondering...if we were to start, ya know, dating or whatever, do you think we could maintain this type of dynamic in a sexual relationship?\" She asked him very seriously. She liked everything that had just happened, and in many ways, she felt like that was what she needed on a regular basis.\n\nMicah's heart was Tubthumping as she spoke to him about her desires. He was thrilled by her need for this. He wanted it badly now too.\n\n\"Yes,\" he responded immediately, \"I could be in a relationship with you, ESPECIALLY if our sexual dynamic involved that type of role reversal that we just enjoyed.\" She smiled like an excited school girl and kissed him again with a happy moan after he said that.\n\n\"Mmmm, I'm so happy to hear you say that,\" she beamed back. \"So, you like the idea of being a slut for me on a regular basis? Of letting me fuck your ass with the strapon whenever I want? Cuz I would probably want to fuck you a lot...you'd be okay with that?\" Micah could literally feel his cock getting hard again as she talked about it. He couldn't believe how perfect this girl was for him. He had fantasized about a dominant girlfriend like this forever.\n\n\"Yes, completely, I'm getting turned on just hearing you talk about it.\" He said, and she dragged her hands down to lightly jack him as they spoke. Micah closed his eyes and sighed happily as she played with him again.\n\n\"It makes me so hot just thinking about it. But I also love how big your cock is. Don't think you won't be fucking me a lot, because you will. I'm horny all the damn time so you'll probably be fucking my pussy as much as I crave fucking your ass.\" She explained herself slowly as she continued jacking him.\n\n\"Mmmm, yes, I like that,\" Micah said, already excited to fuck her again.\n\n\"So...Micah, are you gonna be my little slut?\" Jessica said, as she leaned in and kissed his nose and licked the very tip of his lips.\n\n\"Yes.\" He leaned forward to kiss her but she pulled his hair back as he moaned and smiled from her sudden bossiness.\n\n\"Good boy,\" she said, her tongue dragged down his neck and biting him.\n\n\"Mmmmm,\" Micah moaned again from her power. She was so lithesome and yet so strong\u2014a tigress in his jungle.\n\n\"Do you like it when I call the dildo my cock?\" She asked him, wanting to know more about every detail of their mind-blowing sex.\n\n\"Yes, I really like that, that turns me on a lot,\" Micah said, feeling his own cock vibrating in her fingers as they gently rubbed him up and down.\n\n\"Do you like the idea of cock, Micah?\" She asked him and Micah's cock totally pulsed in her hand. She didn't miss that at all.\n\n\"Yessss,\" he said, and she was jacking him a little firmer now.\n\n\"What do you like about cock, baby?\" She asked, and she knew she was driving him crazy by his facial expressions.\n\n\"I like how big it is, I like how hard it is.\" He said, talking about the toy, but also, if he was being honest with himself, talking about the concept of it in general.\n\n\"Yeah, cock is really fun to play with. It's especially powerful once you find out how much fun an actual cock can be.\" She chose her words carefully. She didn't want to instantly scare him off, but they were being so honest and he clearly wanted to be slutty for her. His body rolled against hers with each new word she said.\n\n\"Yeah, Jess,\" he said, confirming that he wanted her to keep talking\u2014telling her that it was 40-love and she was serving for the match.\n\nA moment of sexy quiet passed between them while she jacked him.\n\n\"Have you ever wondered what it might be like to play with a real cock?\" She said it in such a sweetly honest way that he couldn't help but fall in love with her right then and there.\n\nHe didn't realize it at the time, but that was the exact moment he fell in love with her. That was the window of truth that she opened for him that he didn't even realize she was opening. She was everything to him now. She felt his cock grow very hard as she continued on this conceptual path. She needed to know fully if this was the most perfect sexual match ever.\n\n\"Yesss,\" Micah confessed at her alter.\n\n\"MMmmm you HAVE have you? She said, and everything she said was the hottest damn thing he had ever imagined. It was like her words were enunciated in cursive.\n\n\"Yeah, Jess, I have.\" He said, and she jacked him and kissed him and brought a hand over to spank his ass playfully as she grabbed him.\n\n\"Can I tell you something naughty?\" She said to him as she leaned in very close as they shared this intimate sexual honesty.\n\n\"Mmmmhmmm,\" he moaned, his eyes glazed over.\n\n\"I've always wanted to be with a guy that liked playing with cock,\" she was being very truthful now, and one of Micah's most latent fantasies was being mined from the farthest reaches of his sexual cavern.\n\n\"Ugghhh, fuck.\" He said out loud. She was too perfect to even paint.\n\n\"Do you think you'd ever try playing with another guy's cock? Would you do that for me?\" She asked him, his cock very hard now in her fist.\n\n\"Yessss, I would.\" He said, and of course he would, he would do anything for her. He was so aroused by her kinky mind.\n\n\"Would you kiss another guy's cock?\" She asked, and he pulsed in her hand.\n\n\"Yessss.\" He groaned.\n\n\"Would take a cock in your ass? Would you do that for me if I told you it was biggest fantasy in the world? To have a boyfriend that liked taking cock up his ass?\" She was revealing all of her cards now too. She was wet with his submissive affirmations of her wildest fantasies.\n\n\"If you wanted me to baby, yes, I would do that for you...I'd think I'd be really nervous, but...I'd do that for you.\" He was incredibly turned on and also incredibly nervous from just how much she was accepting of these incredibly secretive kinks.\n\n\"Mmm, Micah, that makes me so happy,\" she kissed him and started to jack him off very hard now.\n\n\"Would you like it if I woke you up in the morning by sliding the strap-on into your ass and fucking you nice and slow?\" She said to him and she knew he was close to cumming again. <br ><br >Micah couldn't believe how hot this girl was. She was already getting him close to cumming again.\n\n\"Yessss, please, fuck yes, fuck me in the morning again, I want it.\" He said to her, feeling desperate to be slutty for her again. He was so pulled in by her wants and needs. He felt his asshole tingling.\n\n\"Ughhh Micah you're so fucking good to me already...FUCK!\" She jacked his cock with two fingers in a jackhammer motion that was her signature I'm-Gonna-Make-You-Cum maneuver.\n\n\"Yeahhhhh fuggghhh, JESSSS IM GONNA CUM AGAIN DON'T STOP, DON'T STOP, DON'T STOP.\"\n\n\"Yeah baby, cum for me again, give me another load of your naughty cum baby...cum Micah...cum hard for me baby, YEAH BABY, GIVE ME YOUR SEXY CUM BABY!\"\n\nMicah felt his cock on the edge of another eruption when she sunk down his body and engulfed him in her mouth and began deep-throating him in a hungry blowjob. Her fingers traced down his balls and thrust back into his asshole as she pushed two digits into his butt and began to curl them up against his anal ceiling.\n\nMicah came for the third time that night in a desperate shudder.\n\nJessica sucked down the much smaller cumshot and swallowed every single drop. She wanted to show him how good she was going to be for him.\n\nShe had found her perfect boy.\n\nHe had found his perfect girl.\n\nThey fell asleep together naked under the top sheet, both of them already thinking of the many kinky things they wanted to do with each other.\n\nMicah was quickly dreaming of being woken up by her morning wood. Jessica was dreaming of seeing Micah being taken by another cock, or by two cocks for that matter.\n\nShe wondered if she could train him. She wondered if she could turn her friend into her ultimate fantasy of a cockslut boyfriend. Or...maybe eventually, a cockslut husband? It's all she'd ever wanted.\n\nCould she push him far enough? Could she take him to glory holes and fuck parties and slut him out as she saw fit?\n\nHer dirty mind settled on one of her favorite fantasies as she drifted off to sleep. In it, Micah was tied up in a sex swing harness at a swanky Beverly Hills swinger party.\n\nThe party was a bisexual bash that was held every New Years. Micah didn't know this yet, but Jessica had been there once already a couple of years back. She had fond memories of both the girls and guys that volunteered to take turns up in the swing.\n\nShe remembered some time later in the night when the first sexy guy had volunteered to be strung up in the swing. She'd sat on a nearby velvet-lined bench of the mansion's master bedroom and enjoyed watching as hung cock after hung cock took their turns fucking this guy in his willing asshole as he moaned in lusty submissiveness. At one point his head had turned to look at her as he was pounded and she was so turned on at the willingness of this sexy man to be used by other men. She knew right then and there the type of man that she needed in this world.\n\nAnd of all the people that she'd dated and fucked since that time...she hadn't even come close to finding her match...\n\n...until now.\n\nThey held each other tightly as the sweat of their bodies dried in the cool night air.\n\nHappiness had found them both. And now they were finally free to start their sexual journey together.\n\nLife was about to become a whole lot more exciting for both of them. They had no idea just how far they would push each other.\n\nThe End."
    ],
    "authorname": "SluttyBisexualGuy",
    "tags": [
        "strap-on",
        "femdom strap-on",
        "seduction",
        "cumplay",
        "dildo",
        "prostate",
        "strapon",
        "pegging",
        "submission",
        "domination"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/strap-on-secrets"
}