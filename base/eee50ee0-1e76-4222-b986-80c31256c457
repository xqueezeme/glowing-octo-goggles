{
    "title": "Hunting the Hunter Ch. 02",
    "pages": [
        "The world in which this story is based and the terminology used is the intellectual property of Bethesda, this is a bit of Elder Scrolls fanfic type fun with a were twist. You can also safely assume that anyone doing anything 'untoward' is of legal age...ect.\n\nNow that that's out of the way...enjoy! Oh, and comments of all creeds and colors are seriously like crack now, so please, be my pusher man.\n\nyours, Enithermon.\n\n**\n\nInanna swore and wiped her hands on her thighs. What was with all the sweating? Normally she was cool as a frost atronach. \n\nThese last couple months she'd felt like she was on fire, more than she normally was that is. Even before she dripped all over that ogre she was feeling like this. She'd seen a healer, but she was apparently fine, now it just seemed to have gotten exponentially worse. She let out a mildly exasperated sigh. She didn't like to wear gloves as she worked, but clearly there was no choice. \n\nShe hopped up into an alcove behind a headless statue and pulled out her thinnest gloves. She needed gloves when she did a lot of shooting, so she always had a couple pairs on hand. This was a stealth mission however, so shooting was going to be out. A little work thrown at her from the fighters guild. Apparently a good customer needed an artifact 'recovered' but it needed to be done in a fashion that wasn't exactly up the fighter guild's alley. She had asked why the client didn't want the thieves guild, and was told that, apparently, they were on very bad terms with one another. \n\nSo here was little old Inanna, playing sneaky thief. It's harder than it looks. The instinct is to just kill the things that get in the way. \n\nShe smirked. She had a feeling she knew the score. At the moment she was in an old fortress north of Skingrad, it was the Skingrad hall that had outsourced to her after all, and she didn't doubt that it was the mysterious Count of Skingrad himself who was the nameless client. She was especially suspicious because who in their right minds wanted to make sure a coven of vampires wasn't hurt...really? \n\nExcept...perhaps...family? She'd gotten around. She'd heard all the rumors, and knew damn well why the Count and the thieves guild weren't exactly on each others 'friendlies' list. A little hint to the unwary, the sentence for theft in Castle Skingrad is death...no doubt by bloodletting, seen to personally by the Count himself. That little tidbit aside, Skingrad was actually quite a pleasant city, and in excellent wine country.\n\nShe really needed to stop sweating, it was going to give her away, they'd smell her from miles off. \"I hate my life.\" she murmured and headed down a side corridor that had collapsed in on itself. There was no way through, but the rich dark earth and tree roots had punched a hole in the stone wall. \n\nTime to play hunter. On second thought, who was she kidding? She loved her life. \n\nShe grabbed a couple handfuls of dirt and piled it, calling up a tiny ball of ice in her palms, which took far more effort than it should...but then she did run hot. She placed the ball on top and then melted it instantly, turning the dirt to mud. The mud would mask her scent as well as dim the glow of her life essence. Not by much of course, but every little bit helped, and if she stayed low, they might assume she was one of the nasty wolves they had prowling around. This would help throw those clever noses off too.\n\nIt was a long day. Endless hours of crouching and waiting; biding ones time in dusty alcoves and dim corners. It wouldn't have been so bad if she really was hunting them. Then at least she'd have that sense of satisfaction when she slipped up on them and went in for the kill. \n\nShe didn't like Vampires much. The ones from home were a nasty brutal lot, even by Dunmer standards...though again the Telvanni were always the exception to the rule. These ones didn't look too different, gaunt, and feral, and red eyed. From the Vampires that is...not the Telvanni. Then again...not much of a difference there either. \n\nBoy, she was thinking about the Telvanni a lot lately. She could have joined that house, a clan friend had offered to find a sponsor for her...but she wasn't really interested. She had other priorities, and locking herself up in a Tel stronghold for a few centuries wasn't one of them. \n\nShe smiled as she looked down on the two vamps below her as she lay belly down on a long wooden log that was meant as a trap, but was currently providing her with excellent cover at the moment. That is provided no one turned on a life detection spell and looked waaaay up. \n\nShe knew damn well why she was thinking about those crazy sorcerers. Her little friend Green eyes. She was still reeling from disbelief over the whole thing. \n\nWell maybe not reeling, but it was quite a head shaker. Not necessarily upsetting mind you. In fact, she'd managed to admit, it had been a lovely evening. She might even try it again some time. Only it had been three weeks and she hadn't seen him around anywhere. She'd even stopped by the lake a couple of times...just in case. It was ridiculous of course, she was acting a little like a young girl with a crush...but she had to admit...she was starting to really miss running into him. It was always interesting at least, and it was getting harder and harder for things to keep her interested. It was going to be hell by the time she was three hundred, she could only hope she'd find something, or someone to keep her from dying of boredom by then. \n\nFinally. The bloodsuckers were wandering off. She waited and sent out a low level life detection of her own, waiting until they were out of range. She wasn't stupid, they'd feel it the moment she started drawing up her magica it if she did it in the same room as them. \n\nThe undead struck her as being more sensitive to unseen powers than the mundane ones. It made sense, they were trapped somewhere between the plains of life and death, that should give them a unique take on both. So even if she didn't have to 'cast' spells, since, like most Dunmer, her magic use was intuitive rather than learned or prescriptive, the signature inherent in it could still be sensed by those sensitive to the movements of unseen powers. \n\nMany couldn't sense intuitive magic, but she didn't want to take the chance that these creeps could. \n\nShe carefully lowered herself to a nearby ledge and dropped with cat like grace into a watchful crouch. She giggled mentally even as her eyes scanned the room intently, green would be proud.\n\nJackpot. Three large chests stood against one wall looking very much like they were full of wonderful toys. She was tasked to liberate as much as she could so it didn't look like she was here for something specific. She got to keep as much as she could carry. Good thing she had invested in a feathering ring then eh? \n\nToo bad she still had to sneak out without getting too many holes in her throat. Like, for instance, any at all. \n\nTwo were unlocked (cocky vamps) and contained all manner of wonderfully light weight and expensive items. Many of which were magical. She didn't take the time to figure out which did what, just took what she could. There was a lovely looking sword in the third, larger trunk, which had been locked, though just barely. It looked Elven, and had a lovely gold hilt with green glass details. A bright shimmering green which stood against the gold like willow leaves in sunlight. She bit her lip. It was probably too heavy to sneak out with....it might get her killed...but it was such a pretty, familiar shade of green. Green on gold. \n\nSelf control was never one of her strengths. She wanted what she wanted, when she wanted it. She sighed and strapped it awkwardly over her shoulder, trying to snug it under her bow without it banging away and letting everyone one know there was a none too sneaky Dunmer crawling around in their secret hideout.\n\nThere was also a nasty looking dagger. It oozed Daedric magic and had red markings scratched onto its black hilt which glowed faintly. She recognized the script, she'd seen it many times in the twisted Daedric temples that proliferated back in Morrowind, but she didn't recognize the language itself. \n\nReaching out with those skills of perception that all Ashlanders were taught along with the sword and the bow she touched the magic of it with her own. She saw red, the red of fire and blood, and her senses were filled with the scent of charred flesh and sulfur. She smirked, smelled like home. It also smelled like one of the four corners of the house of troubles, the lords of chaos and destruction. Molag Bal perhaps...wasn't he supposed to have fathered the vampiric race? \n\nShe shrugged. Either way it was hers now, so long as she could hang onto it at least. Possession was nine tenths of the law after all. Or at least it was in her mind.\n\nThe blade looked more like volcanic glass than anything metallic, and was probably just as sharp. She picked it up using a cloth and wrapped it carefully, laying it inside her satchel snugly so it wouldn't be jostled. She had been told to collect a 'unique black dagger' and she had a feeling this little beauty was precisely what she had been charged to find. She didn't even want to know what it did, so long as it didn't do it to her. She was careful to never make direct contact with the thing, it was always best not to screw with Daedra.\n\nThere was still no sign of the vamps, so she checked around the room for anything interesting. There were a couple of rare books she decided to 'borrow' and a fair amount of gold locked in an ornate looking desk. The place was a dank ruin, but they had decent enough taste to furnish it nicely. The desk was quite handsome, but she couldn't exactly carry that out now could she? A shame too, it would have looked lovely in her new home. Furniture was her favorite part of the non-nomadic lifestyle, the 'only what you can carry rule' made things like tables and chairs rather tricky items to own when you were always moving to new hunting grounds. \n\nShe was about to quit the room when she heard voices again. She edged to the far side of the room and crushed herself up against the wall, behind a narrow support. It wasn't the greatest spot, but it would have to do. Hopefully she could keep her heart from pounding and giving her away. She'd heard that some of these creatures could hear a beating heart if close enough.\n\nShe kept one eye on the vamps as they re-entered, talking lowly, and another on the room trying to find a quick way up and out of their hands if it came to that. She figured if she could get to the desk she could jump up to catch a ledge with her fingers then pull herself up enough to use the other pillar as leverage with her feet. She'd have to be quick, because the alarm would be up by then. They both had their backs to her, and one was moving towards the chests. \n\nAzura take her. She made her move, skirting the wall behind them as softly as she could. Their momentary distraction with the recent robbery actually bought her the time she needed to get to the desk and pull herself up over the rail before they saw her.  \n\nShe blinked and they were gone. They must have spelled themselves invisible. That wasn't good. 'Could they all do that?' she wondered. There was a shout below her, then more in the darkness echoing through the winding catacombs of the ancient fort. The only thing she could do now that was smart was run, and fast. \n\nShe decided she hated playing thief. She tore through the halls, winging past startled vampires and leaping down entire flights of stairs breathing a silent thanks every time she landed well. The last thing she needed was a twisted knee or ankle.\n\nAlmost there, just a little further... \n\nA sword came out of nowhere and she threw herself forward into a dive, feeling the blade breeze over her head. She fell into a roll and then back up onto her feet, pushing off from a crouch into another sprint, this time with a not-so-startled vampire hot on her heels. \n\nThe doors! 'Please let it still be day.' She slammed into the door and squeezed through it the moment she could fit. \n\nOh dear. It wasn't night, but it was close. She had maybe a few minutes before it was safe for these things to be wandering around unprotected. Then again, maybe they had wards. She didn't wait to find out and half ran, half slid down the hill atop which the old fortress stood. She stumbled near the bottom, and took the lull to look back. She couldn't see anything, but then, they may still be invisible. \n\nShe huffed and kept going, her chest tight with exertion and adrenaline. She slowed so she wouldn't stumble again and get herself turned into lunch because of a sprain. How humiliating would that be? \n\nShe spotted a cave ahead and made straight for it. It looked like an old mine. She slipped inside with one last look behind her and pulled out her bow. At least she could kill this stuff she consoled herself. \n\nShe sniffed the air as she moved cautiously deeper into the surprisingly dry cavern, her eyes glancing at the old wooden support beams, waiting for one rotten one to snap and bury her under a ton of rocks. She moved into an open room, dimly lit with torches and sniffed again. Goblins. \n\nShe slipped into an empty looking side hollow when she thought she heard a voice behind her. She frowned and wedged herself behind a big wooden support. The walls were thick with mine dusk and she resisted the urge to cough as she disturbed the old layers of untouched filth and cobwebs. The voice drew nearer. \n\n\"Are you sure? I thought I saw something go around the back of the cave.\"\n\n\"I'm sure I saw something open the door. It was from a distance, but I'm sure of it.\"\n\n\"It could be a goblin. Ugh.\" She smirked. Vampires also had sensitive noses. More so than she even. That one sounded like a Bosmer, so he must be really suffering as he was doubly blessed with sharp senses...or cursed as the case may be. The other one, the smart one who saw her, was female, but that was all she could tell. Human perhaps...or was once. She heard a screech from deep inside the caverns, then more quite close by. Then she heard it much, much closer. \n\nThe vampires swore and started fighting as a small herd of goblins charged into the room. They could only stay unseen if they did nothing, and it was a little late for that. She was grateful the mud, and now dust and dirt, was still covering her scent, not that she would be easy to pick up in this rank cavern. After a good twenty minutes of screaming and cursing the vampires prevailed and decided she wasn't there after all. Of course she was no dummy. An hour and a half later she extracted herself from her very uncomfortable position and decided to go exploring. If they had half a brain they'd wait outside as long as they could just in case. All she had to do was survive until dawn. \n\nShe grinned nastily, with lots of bared teeth, and selected an arrow. \"Here gobby gobby gobby.\" She purred quietly and soft-shoed it down the nearest corridor. The hunt was on. Green would be so proud.\n\n**\n\nDawn broke, and Inanna strutted out of the cave sleepy and feeling very satisfying, though very heavy. As it turned out the goblins had an absolute ton of fun swag they'd been stealing from moron adventurers. 'Horse, here I come.' Maybe she'd even get one of those sleek black ones they kept in Cheydinhal. She didn't much care for horses, but she'd probably look terrific on one of those. Maybe she'd get herself some black leathers as well, then she'd look dangerous. Thankfully the heaviness didn't last long because she was in Skingrad not two hours later. Apparently she'd run a lot farther than she'd thought. The fear of imminent death can have that affect on a person. \n\nShe sold off all the small bits, crystals, uninteresting jewelery, and everything from the goblin caves, but kept the magically infused items, and of course the weapons. She then took a long hot bath, and a long nap and headed over to the fighters guild after meandering a bit just in case anyone was following her. One never knew.\n\nShe got there, she got paid, got rid of the nasty Daedric knife, and all was well. Apparently the client already knew what had been done, surprise, surprise, and was 'at least glad no one was injured', and that no one knew who was responsible, aside from the thief being female of course. No amount of hoods and mud were going to cover this pretty piece of flesh up. \n\nIt probably helped that she hadn't come back right away. That meant there was no trace of her or her loot in Skingrad when the vamps turned up to investigate, no doubt suspecting their old friend his lordship as their primary suspect. It also meant everyone could lie convincingly when they were asked if the weapons had turned up there. \n\n'No sir, no weapons here.'\n\nShe decided to take off before sunset, no doubt they'd be back, and she didn't want to be there when that happened. She was feeling energized, and flush, so she made good time in her high spirits. \n\nIt was still the small hours of the morning, not too much after midnight in fact, when the Imperial spire came into view. She might as well camp there for a bit, get rested and have someone take a look at her new toys for her. She hadn't given up her little shack there yet since it was coming in handy as a way point, and was less costly in the long run than shelling out for room and board every night. She was rounding a familiar bend, eying an Ayleid ruin askance as she passed it. It was known for bandits. The more you killed the more came back; they were as bad as bloody weeds.\n\nShe heard a shout and rolled her eyes, pulling out her bow. Here we go again. It was an awkward movement because she still had the Elvish sword strapped to her back. She turned toward the sound and waited. Oddly it was coming from the opposite side of the road rather than from the ruins. To her surprise a big cat came bounding out of the trees. She couldn't get a good look at it, but she could see an angry red mark running up its side and another near its neck. The cat was about to bound off the road again when it noticed her standing up the rise in the path and turned its head sharply. Her line of sight was suddenly filled with green eyes.\n\nShe grinned, instantly energized by a surprisingly powerful bolt of excitement and pleasure. It was cut off by another shout and a handful of noisy louts barreling through the woods after him. She turned her bow and the arrow slammed into the head of the first man out, pushing him back into the others. Green looked back and intelligently took the opportunity to disappear towards the ruins. \n\nShe fired another two off in succession and made off herself, using their startled confusion as cover. They hadn't seen that coming. \n\nShe slipped down along the lower wall of the ruin, keeping close to the cold stone. She could hear them clamoring around over head, loud enough to wake the dead. She could only hope they did, and were killed for it. She saw something move in the long grass. \n\n\"Muthsera\" she whispered towards the movement. It stopped then shifted, coming towards her. She saw the glimmer of his eyes first. He slipped up next to her, as silent as death and crouched low against the wall. \"You look like hell, Serjo.\" She murmured and touched his face gingerly noticing more than just the two injuries she had seen before. \n\nHe was in no condition to keep fighting like that. No wonder he was using plan B, 'run away.' He didn't look happy about it either. \n\n\"I saw three come out, are there more?\" he nodded then used a claw to draw a line and an x in the soft sand around the base of the ruin. That was a lot. \"I imagine you've already taken out your quota on top of that..\" he nodded once. \n\nHe looked ready to drop. He needed a healer. 'Damn it, why couldn't she have been a healer?' She sighed morosely and looked around, trying to find an effective out. They were close to the water, and the ruin was directly across from the waterfront. She was a good swimmer, and he looked tired but strong enough...\"look,\" she whispered in to his ear so they couldn't be overheard, not as if the shouting overhead would let the hunters overhear anything, \"You're probably not keen on water, but I've got a little place, you can see it from here, and there's a back way right near the water...they might not even see us leave...\" ",
        "He turned away before she could finished and started creeping out toward the water. Good man. He was too smart to play hero and knew when to suck it up. They'd actually made it well over half way before anyone even noticed. The shout of alarm was distant enough that she almost missed it. \n\nThey made it, finally, and slunk out of the water sticking to the shadows. \n\n\"There\" she whispered and pointed to a rickety looking shack with a big wood storage at the back. She slid a panel out of the wood storage and crawled through, moving a second panel. \"You first,\" she whispered, \"I have to close up behind.\" He shuffled through the tight squeeze and she crawled after, fitting the panel and securing it from the inside so no one could follow without damaging it and making a helluva racket in the process. \n\nOnce inside the one room shack she slid a dresser in front of the secret door and ran over to start a fire, the faster they were dry the better. They weren't dripping anymore at least, but they were still soaked. She stripped her now water-heavy leather armor off and tossed it behind the foot of the bed with her gear, then grabbed a blanket from a cupboard and lay it out in front of the fire.\n\nHer damp shirt clung to her and she shivered. She'd better get it off. She could feel rather than hear him pacing about behind her, so she was looking for him when she turned. She was not, however, expecting to find a broad, tanned, muscular chest in front of her. She stumbled and made to scream, but a hand came up over her mouth and tipped her head back. \n\nShe blinked. \n\nHe blinked back. Big green eyes. \n\nHe smiled. \"Quiet Red, you'll wake the neighbors.\"\n\nRed?\n\n\"Green?\" she asked when he released her. He chuckled. \"How...?\" She looked down and interrupted her own question. \"We need to find you a healer...now.\" The waters of the Rumare had washed his body clean of blood, but there were wounds everywhere. He winced and held up a hand.\n\n\"Just give me a moment to catch my breath. It will be fine.\" He gestured to the bed, \"May I?\" She blinked.\n\n\"That's a silly question, of course you can.\" She grabbed his elbow and helped him sit. Wow, those eyes looked even better in this face. His hair was a sandy brown and fell in damp, curling, shoulder length tendrils. It was probably wavy and delectable when dry she mused. The rest of him looked pretty mouth watering as well. He was as big as a Nord, all tanned and muscular...and even better looking. His features were finer, more...Bretonish. He definitely had to have some Mer blood in there she decided.\n\nShe released his arm when she realized she was staring and turned away, digging through her drawers for something dry. She tossed her wet shirt over a bed post and pulled out a clean dry one, pulling off her chest wrap before slipping it over her shoulders. She found some dry underwear as well. Her skin was clammy, but it was warming up slowly. At least she wasn't all sweaty yet. She smirked at herself as she mentally qualified the word 'yet.' Down girl.\n\nShe pulled out a plain looking healer's robe that was too big for her and shook it out. It had belonged to a pilgrim she'd let stay with her a few years back. Apparently celibacy had been optional for his order; lucky her. She'd hung on to it just in case and because she was a bit of a pack rat. Now she was glad she did. Though it might be a touch on the short side...it would have to do. She held it out in front of her and turned around. \n\nHis eyes were closed and he was sitting with his legs open and his big hands resting fingers-in on his knees. Every muscle and tendon seemed to tense and go taunt, as though he was supporting some great weight on his slightly bent shoulders. \n\nHis brow was stern and his square jaw tight with concentration. It was quite the image. She tried to impose his image on that of the lions and found it difficult. Her gut told her it was him, and she felt comfortable with him, and certainly drawn to him in a strange, indescribable way, but she did wonder if this was the same creature who'd taken her by that lake those few weeks ago. \n\nThe memory made her stomach stir with excitement. She could feel her hands dampen against the material of the pilgrims robe.\n\n'I said, down girl.' \n\nWithout warning a gentle, cool, yellowish glow, like sunlight, began to emanate from him, and she watched as the big ugly gash along his side slowly closed up from the inside out and shrunk until it wasn't much more than a deep scratch. The saw no spell and was intrigued. It seemed he understood intuitive magic as well. The other wounds seem to fade as well, leaving only the mildest of scratches and faded bruises here and there. Nothing serious.\n\nShe smirked, she'd done worse to people she liked. But then...Dunmer. 'Seriously, what don't you understand about the word DOWN'? She shook her head at herself and handed the robe to him. \n\nHe looked up. The usual vibrant glow was out of his eyes, he looked terrible. He took the robe and she went about looking for something to eat. There wasn't much and she was a lousy cook. But there was plenty of wine and sujama. Now if she had a little ash yam, a little wickweat, a few stone flowers, and could bind it all with a little resin then viola! He'd be as strong as a blighted Kagouti. Too bad this wasn't Morrowind. \n\n\"Haha!\" she crowed, Flin. Not much was left, but it would do in a pinch. She poured two glasses and gave it to him, scraping a chair across the floor to sit in front of him. She propped her legs up on the bed and crossed her ankles. \"Don't worry, this is the expensive stuff, it won't make you stupid.\" He raised the glass to her in a salute and took a sip. His face screwed up a little. \n\n\"This is the expensive stuff?\"\n\nShe smiled blandly. \"Where I'm from it is. Import laws, you know. \"She waved a hand, then cocked her head at him in appraisal. \"I thought this whole situation was bizarre before. But now...is there a reason you didn't tell me you could...you know...do that?\" he sighed and looked down at his glass.\n\n\"A really good reason?\" \n\nShe chuckled at that. \"I'll take a half decent one.\"\n\n\"Well that's good.\"\n\n\"I bet.\"\n\nHe cleared his throat, he really didn't have a good reason, not at least in light of what happened the last time he'd seen her. \n\n\"We're trying to keep our existence hidden.\"\n\n\"Good job you're doing.\" Damn but she sounded like Mirisa just there. That's why Mirisa doesn't like her, they're too much alike. They'd probably rip each other apart. It might be fun to watch if they weren't both capable of doing real and lasting harm to one another. She smirked and held up her hands, \"I tease. So\" she continued \"you thought I might give you away if I knew what you were? That hardly seems likely. What are you by the way? You know, unless you want to play twenty questions again?\" He couldn't help but smile at that.\n\n\"We're shifters, or sort of.\"\n\n\"Shifters? Like werewolves?\" She'd heard of cases from Solsthiem, though many believed they were just rumors and fairy tales.\n\n\"Not quite. We don't have an 'in between' form, and you can't contract it. You have to be born that way.\" He looked up and saw her rubbing the back of her neck absently and he winced at the reminder. It had a rough few weeks for him. \n\n\"I see. Are the others like you?\" \n\n\"Yes.\"\n\n\"Are there lots?\"\n\n\"Not anymore.\"\n\n\"Oh. I'm sorry. Is it those hunters?\" He nodded. She did look sorry. He knew he could trust her. He nodded again.\n\n\"They've been hunting us down for years, and it just gets worse. We keep having to move from place to place to avoid them, but they keep catching up. Originally we're from the Dragon Tail range, and further north, but we find ourselves being pushed farther east. It's harder because of the little ones.\"\n\n\"Little ones?\" she asked when he paused to take a drink.\n\n\"The children.\"\n\n\"Ah. Do...do you have any?\"\n\n\"A daughter. My mate was killed several years ago. Now there's only a few of us. Mirisa...blue as you call her, lost her mate as well. There is only one mated pair left among us right now.\"\n\n\"So you and Bl-Mirisa, aren't...you know...\" He shook his head, then frowned and wondered if it was wise to say too much.\n\n\"You? Do you have any children, or a...partner?\" he asked steering the conversation away from him. She laughed. \n\n\"I'm a bit young for that.\" \n\nYoung? Hadn't she said she was in her eighties? She was older than him. \n\n\"Then again...I'm getting close...and they say if you sleep with non-Mer it can induce fertility early. I've certainly done my share of that in the last twenty years. You see, we have rather lengthy bouts of infertility in my race...\" She stopped and frowned.\n\n\"What is it?\" She shook her head and looked down at her drink and rubbed her palm on her bare thigh. He'd been trying not to look at them and he winced as he got an eyeful and was forced to tear his gaze away and tried not to breathe too deeply. \n\nHe'd been right about it being painful. He hadn't passed a single night not filled with thoughts of her, and more than a few of which were ended with him waking in a cold sweat. It was all he could do to keep himself from following every time he caught her scent while hunting. It was like a beacon in his brain, pulsing away. And here she was, half naked, drink in hand, and so incredibly, painfully...he gritted his teeth and forced the feelings down. The urge to claim her again was a powerful one, but it would just make it worse for him if he did. She was Not his mate. She'd never consented. He needed to crush the idea and bury it. Deeply. Very deeply.\n\nShe frowned even more and turned her palm up to look at it as if there were something written there, then arched a brow at nothing in particular, muttering something he couldn't understand under her breath. \n\n\"Red?\" he asked when she continued to look lost in thought. Her head snapped up and she open her mouth, then laughed. \n\n\"Is that pay back for calling you Green all the time?\" He smiled back.\n\n\"That, and I don't know your name.\" She blinked. \n\n\"I guess you don't do you. Inanna. It's actually a Khajiit name, but that's a long story.\" She leaned forward over his knee and put out a hand. He took it and felt a little shock run up his arm, though it was not unpleasant by any means. The way her eyes widened ever so slightly, suggested that she felt it too. He took a deep breath to shake it off. It was, for obvious reasons, a huge mistake. He swallowed hard as her scent filled his head and his mouth began to water.\n\n\"Inanna\" he repeated. He hadn't released her hand.\n\n\"And you might be?\" He opened his mouth to respond when a knock came at the door. He was disappointed when she pulled away. Her small hand slipped from his like water through a sieve. \n\n\"Hold that thought.\" She said lowly and jumped to her feet. She slid soundlessly over to the door and peered through a crack in the frame. She said nothing. The knock came again. 'Fetchers' she thought. It was the hunters. She could tell by the expressions on their faces, though she could only see two of them.\n\nShe backed up until she was near the fire. Then gathered her breath waiting for the next knock.\n\n\"Fetch off s'wit.\" She hollered. \"Can't you see I'm not interested.\" She grinned at the surprised look he gave her. 'And here I bet he thought I was a lady.' The knock came again. \"Knock one more time and I'll rip your arm from its socket and feed it to a guar, N'wah.\" They didn't knock, which made her smile. They could tell she was serious. They weren't quite as stupid as she thought. Pity.\n\n\"Open up, we know you're hiding the creature. Give it up and we'll let you go.\" \n\nShe looked at her friend who was watching her from the foot of the bed. \n\n\"Choices, choices,\" she whispered to him with a sly smile. He frowned. He didn't honestly think she'd give him up did he? No matter. \"Do I know you?\" She asked in a saccharine sing-song voice. There was a pause.\n\n\"No\" they answered uncertainly.\n\n\"Are you with the legion?\" Also sing song.\n\n\"No.\" This time irritated.\n\n\"Are you a city guard?\"\n\n\"No!\"\n\n\"Then sod off drunk.\"\n\n\"But the guard is on its way.\" The voice warned. Damn. Inanna felt her smile fade fast. She'd have to think of something. She needed something to sow doubt in their story. But her hair was still wet, he was still covered in fresh scratches, even the healing spell he'd worked on himself couldn't get rid of everything, and they were both tired and worn out. They most certainly looked like they had just got into a fight and swam across the lake. Besides, you did not fight or argue with the guards, so that option was out. The waterfront guards knew her, and some rather well, but if their story didn't sell, then even the ones who liked her weren't gonna buy. 'What was their story?' She thought tapping her teeth,' what could cause scratches, make them sweaty, damp...oh wait...yes, that'. She grinned evilly.\n\n\"You shy?\" she asked under breathe.\n\nHe frowned. \"No.\" \n\n\"Good.\"\n\nFeric almost groaned when she whipped off her shirt and tossed it over a chair. When she did the same with her briefs he stopped breathing. He hadn't forgotten how alluring she was, with her lithe body, wonderfully curved and tightly muscled at once, but the reality was so much better than memories and heated dreams. \n\n\"Get naked.\"\n\n\"What?\"\n\n\"I don't have time to explain and argue just do it. Do you trust me?\"\n\n\"Do I have a choice?\"\n\n\"No.\"\n\n\"Then with my life.\" And my tribes, he added silently and morosely.\n\n\"Good, strip.\" She grinned. He cocked a brow at her, but complied. What else was he to do? Though frankly, a not so tiny voice was thrilled at the prospect and his head was rapidly filling with inappropriate and untimely thoughts. \n\n\"Alright,\" he said standing in front of her, hands on his hips, using every ounce of will to suppress his growing erection, \"now what?\" \n\nShe turned around and cleared the table with one arm, letting a plate smash on the floor then hopped on top and leaned back, spreading her long legs and completely exposing the dark slick folds of her already glistening sex to him. The sight incinerated the last of his will power. He swore under his breath and saw red, or rather red and silvery gray. He had to focus hard to hear the rest of her words.\n\n\"Now you need to take me. The rougher the better, this has to look good. If you need a pick me up there's some suj...\"she looked up at him, then down, and got what he thought could only be described as a feral look in her eye, \"...then again, maybe you don't.\" She met his eye and held an arm out to him, inviting him to join her on the other side of the room. Since every fiber of his being was already desperate to take her, and had been for days, it didn't take any more coaxing than that. \n\nHe was up against her, wrapping her legs around his waist, and pressing his mouth down hard against hers before she had the chance to offer any more encouragement. He realized as he ravished her mouth with his tongue and listened with unending pleasure to her low moans, that this was their first kiss. He tried to make it a good one. She tasted as good as she smelt, so it certainly didn't lack enthusiasm. \n\nHe pulled away breathing hard with a desire that was rapidly flooding his veins and bringing on that dangerous dark fog again. He took a deep breath to clear his mind and grunted as he felt a fist close roughly in his hair to drag him back down to her red, swollen mouth for more.\n\nHe shifted sliding himself against her sex, finding her already wet and hot and ready, and pressed himself eagerly into her. She reached between them to guide him and he groaned against her warm spicy tongue as he was pulled inch by inch inside her. She felt just as good in this form. Better even. He could feel her smooth elastic flesh under his fingers, and the silky brush of skin against skin. He pressed inside of her and she wrapped around him, pressing her fingers and nails into his back, keening low in her throat. \n\nHe closed his eyes and for the moment let himself fall into the fantasy that had plagued him nightly for the last month. He let himself want her, let himself have her, and pretend, for that brief moment at least, that she really was his mate. He nearly died from pleasure.\n\nHe felt so good. She couldn't remember the last man who felt so good. Was there ever one? She panted as he began to thrust into her with long, driving movements, and clung to his shoulders, loving the hard muscle playing beneath her fingers. He felt...heroic, god-like even. Maybe he was Daedra after all, or one of those benign imperial Gods. Only something divine could feel so incredible. Somewhere in her mind she knew it could be the fertility talking. But at this point, who could bring themselves to care?\n\nShe figured it was probably the onset of fertility which had been messing with her body and her head. When he had brought up children it had finally struck her as the likeliest answer. It wasn't too early after all, and she was living in the Province of Cyrodiil now, so more Men than Mer were available to her. Extreme hormones would certainly explain why she was OK with screwing a lion in a...oh lord, but he felt so good. No, fertile or not, he was perfection. \n\nShe ran her tongue up his neck when he buried his face in her hair, pressing her back against the table, which was beginning to groan under the strain of his thrusts. He tasted good too. He growled softly, and she would have laughed if she wasn't so busy letting out whimpering moans of pleasure. What a sexy sound the growl was too, it was sending the most wonderful shivers up her spine. Let's see if she couldn't get him to make it again. Oh my, she could. She growled back and dug her nails in, scoring his back and thrusting her hips up to meet his.\n\nShe could feel him leaving his own finger size bruises on her hips and backside. All the better for when people come charging in looking for answers. And even if it wasn't, she was going to love having a keepsake to remind her later anyway. The marks he left on her neck could be felt, but were impossible to see without two really good mirrors and a flexible spine. Speaking of which...\n\nShe was flat out on her back clutching at the edge of the table for dear life, one leg hooked over his arm, and the other over his shoulder as he pounded mercilessly into her when the knocking started again. He slowed. \n\n\"Don't you dare stop\" she growled and ground her hips against his. He squeezed his eyes shut and made a grimace.\n\n\"As you wish.\" His voice was rough and gravely and made her shiver from her toes to the top of her head.\n\n\"Open up Inanna.\" A voice called from outside. Her lover chuckled darkly and slammed into her hard, making her cry out loud enough for everyone else to hear, so they knew exactly to whom she belonged. \n\n\"Indeed.\" He murmured as he thrust again.\n\n'Oh, you wonderful, naughty...'\n\n\"Inanna. It's Maximus you need to open up, we have reason to believe you're in danger. Please open up, we will use force.\"\n\n\"Go away\" she yelled back breathlessly.\n\nHe leaned even further over her, still pounding, using the table as leverage as he gripped the edge behind her head. Max wasn't the only one using force. She wrapped her arms around him as she felt and heard the door buckle under the first blow...it should only take three, she thought, and she pressed her mouth to his. \n\nAnd she was so enjoying herself. What a horrible waste. That was good though, she wanted to be pissed. She wanted him pissed. They would be. Those fetchers won't know what hit them, and they needed to sell this. The truth sold itself, but she just prayed they'd get to finish it later. If they didn't...someone would die...not a joke. The next slam came, almost knocking the door in. Third times the charm. She heard, or rather felt him begin to growl in her arms. ",
        "\"Easy big fella\" she crooned, running a hand down his neck and back, that was the last thing they needed. \"Remember...not a big mean cat...who's going to rip their throats out...right? That's my job. You're just...an innocent bystander.\" She gasped out between thrusts. \n\nHe nipped her neck where it met her shoulder in silent response, making her shiver again. He was really good at that.\n\n\"If you're good, I'll give you the rest of my neck and let you make me your chew toy again later\" she whispered heatedly in his ear. It was his turn to shiver. 'Oh you like that do you.' She was so lost in the little exchange and the exquisite feel of him moving inside of her that she nearly forgot about the banging on the door. He gave her one last pounding for good measure, making her strangle out a cry just as the door broke in and a guard followed by two hunters stumble through the door. \n\nA second before they knew what they were looking at however, namely a slinky naked Dunmer wrapped around a big, naked piece of heaven, a cup smashed behind the head of one of the hunters and a second was in mid flight, headed for the second hunter's chest. The second hunter ducked to the side then looked back in shock where it shattered over the bed. \"Max!\" Inanna shouted in fury jumping up from the table as soon as Green released her.\n\nHer big mean cat was trying to reign his own fury in, and he was obviously in possessive mode because he shunted her behind him before she could charge off, and let out a menacing sound. Always the gentleman. She bit back a smile. She went around the other side instead, grabbing a dagger off a shelf where she'd left it for this purpose, and marched up to him, Max that is, naked, furious and wild eyed. He was eying the naked man on her heels. It looked like he caught on because he looked down at her finally and gave her a subtly sheepish look. Max always did try to look out for her. \n\nShe got right up into his face and snarled pointing the business end of her dagger at him and poking it into the well polished steel of his cuirass. He knew she wouldn't use it on him, but it emphasized her point...as it were. He looked suitably wary. He knew her well enough for that at least, he was an imperial, not an idiot, though the two things usually overlapped in her opinion. \n\n\"Give me one good reason why I shouldn't flay the lot of you right now.\" She snarled giving the other two looks that would sear the wool off a sheep's back. She even let the fire bubble up with a little barely controlled sizzle in her eyes. They both backed up until they were more or less on the safer side of the doorway. Max cleared his throat. \n\n\"I apologize Ina, these...people, led us to believe you were in danger.\" She glared at him and snorted once the other two were safely intimidated back out the door. She imagined her cat was giving them quite the look as well. She could feel him behind her emanating malice and frustration in heady waves making the hairs on the back of her neck raise up. Oh please let them finish later. \n\n\"You were worried about Me? Seriously Max?\" He sighed. \n\n\"They brought the captain in on it. I wouldn't have let them, you know that.\" She sneered. The new captain was an ass. He was little more than a pasty faced juvenile with an uncle on the council. \n\n\"Tell me, how exactly did they convince junior that I was in danger?\" She put her hands on her hips and leaned forward. He failed to repressed his smirk, and cleared his throat again. \n\n\"They said a..\" he paused and glanced at the big, still naked man glaring at him over her head, \"well that you were harboring a...\"\n\n\"Spit it out.\"\n\n\"Werewolf...or something...of some kind.\"\n\nShe let her face fall into the best 'oh my god what kind of idiot are you, you can't be serious, are you completely brainless' look she could muster. He almost blushed. Score another one for the evil dark elf. Cue the sinister laugh.\n\n\"Max\" she said, softly this time, sweetly even. \n\n\"Would you tell your captain I need a minute to get dressed, then I'll come outside and we can settle this matter, but\" and here her voice hardened, \"if those fetchers take one step in my house again, I will gut them for trespassing and hang their heads over my door as a warning. Got it?\" He didn't look intimidated before, just embarrassed and a little concerned, but now he did. They'd fought together, and he knew well the devastation she could wreak when she had the mind to, and like most people, he was under the impression that she was every bit as hot-headed and reckless as she let on. \n\nHe nodded and left, not taking his eyes off her face until he was out the door. Her big cat leaned in over her shoulder and she felt his breath against her ear.\n\n\"I believe you about that bandit now.\" She whirled around on him giving him a look of mock consternation.\n\n\"And you didn't before?\"\n\nHe grinned. \n\n\"Come on,\" she said, patting his arm, \"put your war face back on, it's time for the second round.\" He sobered and nodded, grabbing his discarded robe as she dug out fresh leathers and a corseted blouse. It was her 'dashing rogue' look. The local boys loved it. Not least of all the straight laced imperial guards. 'I'm sure junior's no different.' She mused. \n\nThen again he might swing in another direction, in which case, that was a bonus for them, because even in a pilgrim's robe her cat looked good enough to eat. On the other hand she wasn't sure she wanted someone else drooling over him but her. She frowned. She was getting possessive. She grinned to herself. Must be love. \n\n\"How do you want me to play this?\" he asked tying his belt. She shrugged.\n\n\"However you feel comfortable. If you want to be the strong silent type that's fine, but if you think you can talk them down...I trust you. What can I say? I'm flexible.\"\n\nHe smirked. \"I noticed.\" He walked past her letting his hand brush lingeringly against her hip. \n\n'Be still my heart it is love. You naughty little...' she bit down another grin and reapplied her pissy look. It wasn't hard, all she had to do was imagine they were going to take him away from her, and she would be left lonely and frustrated. Round two. Fight. \n\nHe strode out first and set up shop in the corner of her little porch, leaning back against the rail with his arms crossed over his chest in a menacing fashion. Strong and silent it is then. He glared them all down with a more than convincing, mostly because it was true, 'I'm going to rip out your hearts because you just kept me from getting laid' look. That was the look she'd been going for after all. \n\nShe noticed with pleasure that not one of the men could look him in the eye, not even the hunters. A man's a man after all, even when he was Mer or beast. They felt his pain. One of the hunters frowned at her. \n\n\"That's her...I'm sure of it.\" He muttered. She was hoping they wouldn't have seen her face earlier. Damn.\n\nShe ignored the hunters and approached the pasty, sallow eyed Captain, and gave him a patient, just for you, type smile. \n\n\"Sir, can I ask why your men just broke down my door and interrupted me with my...guest?\" He already looked uncomfortable and embarrassed, this shouldn't be too hard.\n\n\"Captain, this man is dangerous, we need to take him into custody. He and this...elf girl killed our men and escaped across the Rumare. They need to be arrested.\" One of the hunters said, stepping forward. He was a hard looking Imperial. He was also mercenary, in all senses of the word, she could see the cold flint of it in his eyes. \n\nThis must be their fearless leader. Pretty ballsy of him, making that claim with nothing backing him up but the word of his own men. 'Who's paying you and how much,' she wondered. Must be a lot, this was some dedication for one guy, magnificent though he was, in any form. \n\n'Hands off s'wit, I saw him first.' She growled mentally at him. She gave the man a dry look. \n\n\"And who might you be?\"\n\n\"My name's not important.\" he snarked back.\n\n\"Really? If you're so unimportant than why have you wasted mine and the captain's precious time with foolish fairy tales. If you want to play with undead things, I'm sure I can find you directions that don't involve kicking in the doors of taxpaying citizens.\" \n\n\"How kind\" he sneered.\n\n\"I do love to be of service, Sera.\" \n\n'See, I can be civilized too'. She turned away abruptly and dismissively, filling the captain's vision with her own lithe self and smiled. \"I understand your need to be concerned for the citizens under your watch Captain, but, and forgive me if I offend, it would seem odd to take the word of these...strangers over that of one of your own.\" She let her eyes go a little wide and glassy.\n\nHe blushed and straightened. He is young, she thought. Of course she had laced those last four words with something mildly suggestive. Well perhaps a little more than mildly. She continued before he could speak. \n\n\"I'm sure your lieutenant here can testify that I've been a remarkably upstanding member of the community. Though, with a story about...what was it...werewolves? Well, it certainly makes their claims a tad... dubious. I'm sure you'll find the obvious and most reasonable answer is the correct one. Namely that these people are mistaken, or confused, and have, very rudely, interrupted my night off and destroyed a perfectly good door for nothing.\" She pouted and glared at the lead hunter in a very put out manner.\n\nIt was all true. She'd been helping pay taxes for at least four people on the waterfront since the new ridiculous tax laws were introduced by that S'wit Lex, and she'd helped clear all the goblin dens along the waterfront among other things. Max very helpfully described just that to his superior, who nodded in a wise and thoughtful way that no one was buying. Then, as if by divine intervention her neighbor showed up, one of the ones who tended to drink away his tax money. A sweet imperial drunk who frowned and stumbled over. \n\n\"These Sssssss'wit bothering you, Ina?\" It was so cute how he used Dunmeri curses...she'd taught him after all. \"She's all right now, you leave her alone...you...rrracccists.\" She smiled sweetly. This was just her tax septims hard at work.\n\n\"No love, don't bother yourself. Our captains going to set things straight, don't worry, you go home and get some sleep.\" He grinned and nodded, saluting her and the Captain sloppily. Ha! That ought to cinch it. The little tyke would feel compelled to now. Must put up a good show for the rabble after all. He looked like one of those types who think people need to like you to be an effective leader. Well whatever floats his boat. As an added bonus, people were starting to gather down the street and in doorways. She turned back and gave the Captain a trusting and expectant look. 'So easy'.\n\nMax, she could see, wasn't buying it, but he was already on her side, so who cared, this show wasn't for him. The Captain sighed and cast an irritated look at the hunters for making him look bad in front of his adoring people.\n\n\"I apologize for the inconvenience madam, I will have someone come to rectify the damage in the morning.\"\n\n\"I appreciate that sir.\" the hunters started sputtering and the captain turned on his heel and marched off waving away their objections in irritation. The fearless leader took off after him, and the other three were left standing around and only grudgingly followed when Max told them to shove off, though more politely and officially than she would have. \n\nShe knew they wouldn't go far. That left Max and his little trainee Burt, her, and her unhappy cat. \n\n\"So...what the hell is going on Inanna?\" Ah Max, why can't you just be dumb like everyone else? \n\n\"Why, what makes you think there is?\"\n\n\"I know you.\" He smiled and leaned forward in a real friendly way. She saw Green straighten and saunter over. It was casual...but not too casual. Max caught it too and gave her a little more room. Men.\n\n\"Oh?\"\n\n\"People don't just kick down your door for no reason. Who'd you piss off? And they especially don't do it with bull reasons like werewolves...\" he added \"though with you I wouldn't be completely shocked.\"\n\nShe shrugged. \"Honestly, I don't know.\" She smiled remembering yesterday's adventures, \"Well there was that coven of vampires up north....but they don't know who they're pissed off at.\" He rolled his eyes and shook his head. \"Seriously though, werewolves, couldn't they come up with better? I think they must be loonies or something. That's just nutty. I can't even believe the captain went for that crap, wet as he is.\" She paused for effect to look pensive. \"Maybe though...their more dangerous than they look,\" she said looking off thoughtfully, \"I mean if they actually believe what they're saying...you think I should be worried? What if they come back?\" \n\nShe did look worried. She was worried. She couldn't lie to him, he was too slick, but she could stretch and mold the truth, and she needed him to have their back. \n\nHe bit. How could he not, she was technically telling the truth...enough of it the truth that is.\n\n\"They did seem pretty gung ho.\" She only gnawed her lip and watched the road they had disappeared down.\"Look Inanna, we'll keep an eye out, yes? Can't have strangers picking on one of OURS now can we?\" She smirked at him and he chuckled. \"You worked him pretty quick lady, it was embarrassing to watch.\"\n\n\"Yeah well, he's what, all of ten years old? I've got a few years on him.\"\n\n\"He's thirty.\" \n\nShe shrugged. \"A child either way, and clearly a stranger to the fine art of manipulation.\"\n\n\"Speaking of strangers, are you going to introduce us to your friend?\" she looked up to see the two men staring each other down over her head. Ah, here we go.\n\n\"Sure. Max, friend, friend, Max. Huzza.\" She chewed her lip and looked down the road as if ignoring them in favor of worrying about the crazy werewolf hunters, though she kept them firmly in the corner of her eye. They were giving each other the up and down/test your manly mettle kind of look. It was best not to get involved with this sort of thing. Especially when you've slept with both men. Eventually they seemed to come to some sort of conclusion on their own and both puffed up a little. Green moved first. He held out a hand. \n\n\"Feric.\" It was the first thing he'd said since they'd come out, and the first thing he'd said to anyone besides her. The way he said it told her instantly that it was his actual name. Max shook the proffered hand and nodded in an approving way, apparently also picking up on the truth of it.\n\n\"Maximus Severin. Inanna and I are... old friends. We go back.\" \n\n'You've been fairly warned stranger' Inanna mocked in her head.\n\n\"You got a last name?\"\n\nShe continued to feign disinterest and flay her lip but she caught the smile on the corner of Feric's mouth.\n\n\"Some call me Green.\" She was glad she was looking away and already biting her lip, it made it easier to contain her laugh.\n\n\"That's an odd name.\"\n\n\"An unusual woman gave it to me.\" Well no lie there.\n\n\"So you're a pilgrim are you?' he was looking the man over. \"Don't look like the pilgrimage type.\"\n\n\"More a traveler really. Looking for a new place to settle down. \"\n\n\"And you got stuck with her, huh? Hard luck friend.\" He gave him another up and down look. \"That can get dangerous, traveling on your own.\"\n\n\"Indeed it can.\" \n\n\"You fight?\"\n\n\"When I have to.\"\n\nShe raised her thumb to worry the nail, or rather to look like she was, really she was just covering her smile. 'boys will be boys.' She looked back at the two, looking mildly interested, knowing full well Max's next question. He thinks he's found a new buddy and wants to share his toys.\n\n\"What do you carry?\" 'Hah!' She was so good. Green, Feric...she liked that, Feric, it sounded...masculine, and a little bit dangerous, like...feral. Well he open his manly mouth to answer when she pushed off the rail and interrupted. \n\n\"I'll go get it. You should see it Max, its real pretty.\" They both blinked at her in surprise. She smiled sweetly at Feric as she passed and he frowned slightly in return. \"Don't go anywhere.\" \n\nShe went over to where her gear still lay piled on the floor behind the bed and surveyed the damage. She frowned. The sheathe was still damp. Ah well, she'd take it naked. Most things were better that way. She came out whistling and swung the blade in a jaunty arc. Feric looked at her over his shoulder and raised a brow. Max looked suitably impressed. \n\n\"That is right pretty.\" The glow of magica was restrained but still noticeable. \"What's it do?\" She swung again before anyone could answer and the blade bit into the wood rail sending a stream of ice crystals careening along the banister. So that's what it did. Pretty indeed. Max whistled appreciatively. \"May I?\" he asked looking between them. Feric laced his hands behind his back and gave a placid shrug as she handed it over. \n\nShe had to admire how unperturbed he looked. Cool as a frost atronach. The more she saw of this man the more she liked what she saw.\n\nFeric watched in apprehensive curiosity as the little imp handed the sword over to Maximus. He liked the man. He got that same feeling of trust when he looked at him as he had with Inanna. He was honorable. Inanna liked him, hell she'd slept with him, he could tell, but they were clearly friends for more reasons than that, and he instinctively trusted her judgment. So far she'd not led him astray. \n\nIn fact she just kept proving him right, and in the most delightful fashions. But now he wondered what she was up to. \n\nThe two guards both looked the weapon over admiringly. Feric did too, it was clearly a very fine blade, worth quite a bit. He was curious how she got it, and why she was calling it his. He didn't normally have to use weapons, he came equipped with his own, but he'd figured long ago it couldn't hurt to learn.\n\nHe could probably put that pretty little piece of razor-sharp heaven to good use. He smirked to himself, the sword too.\n\nAfter a fair amount of hefting and commentary the sword was handed back. He could see her moving in. He smiled. She wasn't sure he could use it and was going to try and keep the fact that he couldn't from becoming common knowledge. He got it now. This was just a show for her friend so he'd seem a normal fellow with neat toys. No werewolf there. His trust in her was well placed. He stepped forward, taking the blade before she got the chance to grab it with some sorry excuse about putting it away before it drew attention or some other rubbish...though he had to admit, her lines so far had been well placed. She read people well.\n\nHe hefted the blade lightly. Very light, excellent balance. A fine and dangerous weapon. He turned it once and stood it beside him, having no scabbard, then rested lightly on the pommel and proceeded to ignore it, why should he show interest in his own weapon after all. He did look at Inanna however, whose eyes were positively glowing. Apparently she approved. \n\n\"So,\" he asked. \"should we be worried about them? Is it safe to stay here? I wouldn't want Inanna to be in harm's way because they've mistaken me for some sort of mythical creature.\" The guards wholly approved of that sentiment. Ferric knew they would. He could read people to. \n\n\"We'll post a guard in the area, keep them out of the waterfront till this can get cleared up. Course, like I said, I know you Ina, so if you go sneaking off when no one's looking, none'll be surprised. You like watching your own back, I know.\"\n\n\"Like, perhaps if there were some kind of distraction and I took advantage of it?\"\n\n\"Sure it could happen...like say...an hour?\"\n\n\"That would be convenient.\"\n\n\"Stranger things have happened.\"\n\nFeric looked back between the two and resisted the urge to smile. He wondered how many times he'd done this for her. Who had he gotten involved with? Necromancers, and now Vampires? Remarkable creature. ",
        "An hour and a half later they were over the bridge and on their way towards Cheydinhal. Maximus had lent her his horse to give her a head start, with the promise that she'd leave it with one of his friends at Roxy's Inn. It was big with the Imperial legion. \n\nFeric didn't seem any more comfortable on a horse than she did, so she was glad to be rid of it when they arrived at the Inn. Maybe she'd forget about horses after all. It did cut down on time though, and gave them a lead on the hunters. \n\nThey couldn't have followed to know where they were going anyway. They were too busy being arrested for possession of skooma. That's why you never fought the guards. They knew how to fight dirty. She chuckled darkly in her head and watched the man moving cautiously through the brush ahead of her.\n\nThey'd decided to stick to the bush, and didn't cut onto a road until they were near Lake Atrius, nearly a quarter of a province and a day's trek away from the Imperial city. The first moon was slowly making its way to the sky's apex, casting its dim glow between the leaves in little gray shafts of light. She wondered how his night vision was...from what she could tell it was pretty darn good. Did he see in color? There was an interesting question.\n\nIt wasn't far from there to their final destination, a little know ruin just east of Fanacasecul. She didn't even think it had a name anymore. Of course, she'd been there before. That was where she'd wrecked her ankle killing necromancers. She'd healed of course, but she knew that one hallway would forever give her the creeps. Apparently, he had mentioned, they'd cleared it out after she left, but no one goes down there much. The smell of some things just lingers.\n\nShe was a little surprised he was taking her with him. He'd explained on the way what they'd been dealing with, and how for the last fifty or so years they'd been hunted and picked off one by one, for reasons none knew. They'd become reclusive and distrusting and spent their lives on the run. They'd been slowly been making their way across the continent trying to outpace their pursuers and were rapidly running out of continent. Such a terrible way to live. It bothered her that after explaining how they trusted no one that there she was on her way there. Again.\n\nShe was surprised he hadn't killed her, and said so. He chuckled and agreed, which in hindsight seemed a little ominous.\n\n\"Feric?\" \n\n\"Hm?\"\n\n\"Tell me again why I'm not dead yet?\"\n\nHe chuckled. \"Are you conceding that I could take you out in a fight?\" She giggled back.\n\n\"Not hardly, just wondering why you haven't tried.\"\n\nHe shrugged. \"I got the feeling I didn't have to.\"\n\n\"That it?\"\n\nHe made a waffling motion with his hand. \"I suppose we also might need to start relying on someone outside who knew the area. We're like blind rats in a maze here. We've not done ourselves any favors by being so cut off.\"\n\n\"Ah, a means to an end...that I understand.\" He gave her a dark look over his shoulder. \n\n\"I wouldn't call you that.\"\n\n\"Wouldn't you? I would. I'm an effective tool. I don't mind being put to use, it's what I do for a living after all, what I've always done, and I'm good at it.\" He was still frowning at her. She grinned back.\n\n\"I'll even do it for you for free...because I like you. You know, I'm glad we ran into each other again, I was starting to miss you...though it might be a bad sign that someone always ends up dead when we do get together like this. Now turn around and pay attention, there's undead ahead.\" \n\nHe shook his head at her and turned back with a barely suppressed smile. The undead were just a couple stray skeletal guardians who'd wandered too far from home. She had to admire the way he handled his new sword, she wouldn't have guessed he could, seeing as he was usually all about the tooth and claw...literally. It took all of a minute before they were on their way again. \n\n\"I do you know.\" She said after a bit.\n\n\"What's that?\"\n\n\"Like you.\" She was walking beside him her hands folded behind her back and giving him a sly sideways glance. He stared straight ahead. She leaned in a little. \n\n\"You're supposed to say, I like you too.\" she whispered conspiratorially. His mouth twitched.\n\n\"I like you too.\"\n\n\"REALLY? That means so much. What a sweet fellow you are.\" He let out a low warm laugh that made her hair stand on end and her stomach melt into her boots. She could really get used to that. She shook her head. What was she thinking...'I know what you're thinking you crazy hormonal woman, you're wondering what a lion-Dunmer cross would look like'. She laughed at herself. Well that's life. You take what you can get. Apparently she can get a part time were-lion. Good for a once a month romp of sex and violence. Really, a lot of people back home would consider that a perfect relationship.\n\nThey still didn't get a chance to finish though she groused to herself. Ah! Maybe that's why he's taking her home. One can only hope.\n\n\"You look like you ate the canary.\" He muttered looking over at her.\n\n\"How about you eat the canary pussy cat...and I'll play the canary\" \n\nShe looked at him and his eyes went wide. So did hers and she covered her mouth with her hand, choking on a laugh. She must be getting tired, that had been a private thought.\n\n\"I completely just said that out loud, didn't I?\" He nodded and coughed back his own laugh.\n\n\"Pussy cat?\"\n\nShe fell into a fit of exhaustion induced giggles. \"I'm sorry Serjo, I meant it in the most intimidating, manly way possible.\" He grinned at her and shook his head. \n\n\"What does that mean, Serjo? And..what is it? Muthsera?\"\n\nShe smiled. \"They're Dunmeri titles. Muthsera, or Sera for short, means sir... or madam. It's really only a title of respect. You say it to people you like, or are afraid of, or want something from. Serjo means...hrm, lord...I suppose. That's what you'd call the leader of your group, if you didn't think you could take him that is.\" She grinned. \"It's merely a title of respect as well. I might call my Ashcan Serjo. Or the wise woman. I called my father that when I really wanted something, of course he was too smart to fall for flattery, but it amused him.\"\n\n\"Ashcan?\"\n\n\"Our leader, the head of the clan. It's a position of high honor not least because the one who fills it is expected to be able to keep it. We're within our rights to challenge him, but we better be damn sure we can back up our mouths with our fists. Of course a good leader listens to his people and it doesn't usually come to that. That's what the wise women are there for as well, to bring balance to the authority of the clan leadership.\" He frowned at her.\n\n\"How did you know?\"\n\n\"Know what?\"\n\n\"That I was our alph- or...rather...leader\" A slow smile spread across her face. \n\n\"I didn't Serjo. Though that does explain some things.\"\n\n\"Then why would you call me that?\"\n\n\"Like I said, I like you.\" She winked at him and walked on ahead, letting her hips sway a little more than usual. Knowing his eyes would follow.\n\nFeric watched mesmerized by the hypnotic movement of her swaying body as she moved ahead. He shook his head, tearing his eyes away. He couldn't do this. It was bad enough already with what happened in the city. He needed to just stop. That's it, no more, it was over. He wasn't going to do even so much as shake her hand.\n\nBut he still needed her. They needed her. He didn't want to think he was using her or that she was a tool of some kind, like she'd said.\n\nHe cared about her. He couldn't help that now, in the back of his mind she Was his mate even if she couldn't be in reality. Even if he hadn't done what he did, she was now the closest thing he'd had to a friend outside the tribe since he was a cub. Before all this happened, and everything fell apart. He sighed and followed sullenly after her.\n\nThey were, or rather she, was greeted by a low growl up ahead. He couldn't see who it was, but he'd recognize that sound anywhere. \n\nHe laughed despite himself when Inanna threw her arms open and cried \"Blue! Did you miss me? I missed you.\" Mirisa came out of the brush as he caught up and she gave him a dark look. \n\n\"Cool it Mirisa. We're here...on business.\" If she were in a human form she would have smirked...he could tell. He was serious however. \n\n\"It's getting worse. Get everyone together in the main room, we need to talk.\"\n\n**\n\nInanna sat perched on an old Ayleid cask and looked around. She was in a smaller hall, with nothing in the way of furnishings. Necessarily of course. They'd come here only with what they could carry and no money or way of providing for themselves without drawing attention, hence, he'd explained on the way, why they needed her. It was nice to be feel needed.\n\nThen again not everyone felt that way. Speaking of which, Mirisa, who was now an attractive and well built blond woman, was standing off to the side with a younger but also well built dark haired man. They both wore robes, which made sense considering they were easier to take off in a hurry. Neither of them payed her much attention, except for the occasional suspicious glance, so she felt free to let her mind and eyes wander. There wasn't much to see however. Ayleid ruins were pretty stark, just pale, luminescent walls and columns lit with the blue glow of strategically placed crystals whose enchantments had long outlived the civilization that had created them. It was pretty, in an eerie, depressing sort of way. \n\nFeric returned after not too long, having changed into new clothes, and was escorted by a man and woman. The woman bore a striking resemblance to Feric and she wondered if she was a sister or cousin. The man was fair haired like Mirisa. The two were clearly a couple as they kept brushing against each other as they walked. Well, that's sweet, she thought without the slightest hint of sarcasm. It really was. It was always nice to see a pairing born of mutual respect and desire. That must be the mated pair Feric had mentioned. All of them had the higher, not quite angular Bretonish facial features and strong looking Nord-like bodies. It must be a racial quality. By no means unappealing either. \n\nFeric introduced her and explained that she was going to serve as a contact for them in the cities until they could find a way to get their feet under them. He then proceeded to explain how he'd been ambushed while leading another group away. Apparently they were beginning to catch on. He'd managed to take out five but the numbers were stacked against him, and he'd tried to escape but was trapped in towards the ruins. She remembered him scratching a nine in the sand. \n\n\"Fourteen?\" She asked softly from her perch behind him, he looked over at her and nodded. The others looked at her to. \n\n\"And how many did you get?\" It was Mirisa who asked, looking snide as always. Inanna decided not to rise to the challenge. She had a feeling there was going to be plenty of that later if they still wanted her around. The look Mirisa gave her was territorial in the extreme. She wondered if it was over the place or the man. She shrugged in a non-committal fashion.\n\n\"I killed one.\" It had been a good shot, she'd seen him go down. It would have taken quite the healer to bring him back from that. \"I didn't bother waiting to see the effects of the other shots...I had more important things to worry about. Though they made enough noise to sound like they were only wounded...so if you're looking for an exact body count, I hazard it was only one.\"\n\nShe said nothing in response and turned back to Feric. Inanna looked back as well and caught the other woman, Bellane she was called, still looking at her when everyone else had turned their gaze. Inanna gave her a little smile, which she returned before they both turned their attention to the boss man as he described their flight across the lake and into the city and how she convinced the guards to help them escape afterward. She managed to keep her expression neutral as he very elegantly skipped over the exact technique used to convince them he was just a friend having a visit and that the hunters must be crazy. She almost sniggered though when he described her methods as...effective.\n\nShe didn't of course, she had a better game face than that, even wired, hungry, hormonal and looking for blood. However, if Mirisa didn't stop giving her that look she might just wipe it off for her. \n\n'Easy girl, that's just the fire talking.' She admonished. She still hadn't gotten to finish with Feric, and she was, frankly, exhausted and cranky. Someone was going to have to pay for that. Maybe she'd just march back to the city now that Feric was safe and take it out on those hunters. It was their fault after all. Fetchers.\n\n\"Inanna?\" She blinked and looked up towards the voice. They were all looking at her.\n\n\"Yes?\"\n\n\"I was just asking if you wouldn't mind..\" his hand drifted as if to signify the room. She caught his meaning.\n\n\"Waiting here while you go talk about me in another room? Not in the slightest.\" She smiled mildly. He nodded and gestured to the others to leave. He followed, though not before casting one last look back towards her, giving her a nod. She wasn't sure what it signified and she was too tired to figure it out, so she just nodded back. When they left she scooted back on the chest and leaned back against the wall and stretched her legs out before her. She had grabbed a cowled cloak before they left so she pulled the hood up and down low on her forehead. She crossed her arms and ankles and closed her eyes. It wasn't as good as real sleep, but it felt restful enough until she could finally let herself pass out.\n\nNo sooner had she settled back however, she heard a soft twitter coming from the door. She smiled under her hood but stayed completely still. The twitter was hushed and she heard the light rustle of material coming toward her. From under her hood she saw a small pair of feet come to a stop in front of her and an equally small hand reaching out gingerly to touch her long obsidian bow which leaned against the wall next to her. She waited until his fingers reached the bow and lingered just long enough to feel the vibrations of the enchantment running through it. Long enough to be distracted by it and forget the dark hooded figure...if just for that fraction of a second. She snapped her arm out from under her cloak capturing his wrist and making him leap with a startled cry. She swore if she hadn't been holding him in place her probably would have gone through the roof. \n\nShe chuckled lowly, she couldn't help it, and lifted her head. \n\nShe knew what she must look like with two red eyes gleaming in the darkness of her hood, it could be intimidating to those who weren't used to it. The boy couldn't be more than seven and had a disheveled mop of wheat colored hair. He stared up at her wide eyed, but with more curiosity than fear.\n\n\"tch, tch.\" She clicked with her tongue, \"You have to learn to be sneakier than that my fearless one.\" She released his hand and flicked her eyes behind to see no less than four more children clumped in the door way. He blinked at her a few times then grinned cheekily, apparently pleased with the title. He thrust his hand out. \n\n\"I'm Talon\" he said with an even bigger smile. \n\n\"That's a dangerous sounding name Talon. Do you live up to it?\" she leaned forward slowly, pulling her hood back. He nodded vigorously as she shook his hand back.\n\n\"I haven't lost a rabbit once this year, and I pinned Ambrose.\" \n\n\"I let you.\" Grumbled a voice from across the room. That must be Ambrose. He looked a couple of years older. She beckoned the group over. There were two very little ones who bolted over, only to find themselves timid once they were close. \n\n\"That's Sonja and Serus.\" Talon offered, and motioned to the older children who were walking more cautiously toward them. \"That's Ambrose and Mori\" The lot shied away a moment shuffling nervously, then were simply overcome by their curiosity.\n\n\"What are you?\" the two smallest chirped in unison.\n\n\"What's your name?\" Talon asked before she could answer. \n\nShe held up a hand as all five opened up into a torrent of questions. She laughed. \"One at a time please. To answer your question,\" she gestured to the little ones, \"I'm Dunmer. Have you seen Elvish people before?\" They all shook their heads. \"Well most look like me, but they're a different color, paler. Only we Dunmer are dark. Some call us dark elves.\" She smiled toothily at Talon. \"And my name is Inanna.\"\n\nShe proceeded to answer their questions, which were many since they'd never heard of Morrowind, and had only ever heard of Mer, never seen one. She also explained in a limited way why she was there, not sure how much Feric wanted them to know about the hunters. Ambrose nodded thoughtfully when she explained that she was there to help out and potentially act as a go between. He looked like more of a thinker than a fighter. He also had a strong magica aura about him. He'd be great mages guild material if they ever managed to get integrated into Cyrodiil in any proper fashion, she thought, eying him thoughtfully.\n\n\"The hunters are getting worse. We need to find help, it's too much to keep running like this.\" He sighed. See, smart kid. \n\n\"I leave you for all of five minutes and look at you. Leave her alone already, she's probably tired.\" Inanna looked up to find a pretty fair haired girl with what looked like a nice size chunk of something roasted and a chunk of bread in a cracked bowl.\n\n'Ah, my hero.' She thought as her stomach reacted to the smell of food. \n\n\"Shoo, you lot. Talon can you take the twins back to our room?\" Talon pouted. Inanna saw another figure slip into the room: young, lean, and male, but he kept to the shadows and just watched. Sneaky boy. She pretended not to notice.\n\n\"Ahhhh, why do I gotta watch them?\" he complained even as he vacated the seat he'd taken next to her on the stone box. Mori made a face at him, which the new girl, who must have been somewhere in her mid to late teens, noticed. \n\n\"And you can go make sure he does it Mori.\" The girl made another less pleased face and grudgingly nodded. 'Well, we all know who's in charge here.' Ambrose seemed content to follow along without orders nodding politely to Inanna before leaving. He even has good manners, the mages would eat him up...in a good way of course... the other good way. 'Mind out of the gutter Mer.' \n\nWas she ever going to do some nasty things to those fetching hunters.\n\nThe cute little blond shook her out of her reverie. \"Sorry. They...we don't see many strangers.\"\n\nInanna shrugged. \"It's fine. I don't mind.\" The girl gave her a weak smile and just sort of stared at her for a bit, then blinked and looked down at the bowl, as if suddenly remembering why she'd come there in the first place.\n\n\"Ah, sorry, here.\" She held out the bowl. \"They said you might be hungry.\"\n\n\"Thank you.\" She replied with a nod, accepting the food. \"I'm Inanna by the way.\"\n\n\"Aina.\" \n\nInanna gestured to the space next to her recently vacated by Talon. \"Have a seat Aina. Talon kept it warm for you.\" \n\nAina looked at the spot a little askance, weary of the stranger. She was old enough to be suspicious. Good on her.\n\nEventually she complied and settled herself in neatly, watching Inanna politely out of the corner of her eye. Inanna watched as the shadow at the back of the room seemed to move suddenly when the girl sat. 'Looks like the shadow belongs to someone.'\n\n\"Don't worry Shadow,\" she said, looking up over the top of the bowl, \"I don't bite. Why don't you join us?\" She saw Aina look with mild surprise over to where Inanna was looking. The boy...or rather 'young man' as he was clearly a couple of years older than Aina though not much older, stepped out of the shadows and looked her over with a healthy mix of distrust and calculated appraisal. She liked him already. He was like Mirisa, but without all that hot temper crap. He was going to be smart, fast, and deadly. ",
        "He'd make a great Dunmer, he already had the jet black hair, she noticed idly. He wasn't as fair as most of the rest, no doubt one of the group who'd been adopted by the tribe. He had dark brown eyes, near black, and tanned skin. With Aina's blond hair and blue eyes, he even looked the part of her shadow. He approached and came to hover a few feet away, nodding politely.\n\n\"This is Lucas.\" Aina pipped in after neither of them offered to do more than stare each other down. \"Lucas, this is Inanna.\" Inanna inclined her head, though she was certain Lucas already knew that.\n\n\"How do you do Sera?\" She murmured politely. \"I'd offer you a seat as well, but furniture appears to be at a premium.\" She glanced around the empty room.\n\nHe stiffened visibly. \"We can only keep what we can carry.\" He said tightly.\n\n\"I know.\" She said softly. He didn't seem to know how to answer that, so he just shifted and glanced towards Aina, who cleared her throat.\n\n\"So...so you will be helping us then?\" She asked carefully, tipping her head towards Inanna. Her eyes were light blue, but there was something about the shape of them that looked rather familiar. This must be the daughter he spoke of. Inanna nodded. \n\n\"However I can, if you want me to.\"\n\n\"Why?\" Lucas's voice was still strained. She met his narrowed gaze, her face twisting into a sardonic grin.\n\n\"Why not?\"\n\n\"It...it ah, does seem rather strange that you should put yourself out for complete strangers.\" Aina offered more diplomatically.\n\n'Definitely the daughter of...what? Alpha he was going to say? Yes, the Alpha's daughter. A leader in training.' \n\n\"Well...I consider your father a friend, not a stranger. So it's not so extraordinary.\"\n\nAina blinked at that. \"Friend? Didn't you just meet?\" \n\nInanna shook her head and smiled. \"No, we met over a handful of mutual enemies a few months ago and ran into one another a few times since. I was here before, clearing the cellar, as it were...you didn't know that?\"\n\nThe girl frowned; obviously displeased that something had slipped by her. Lucas looked equally put out. 'Such a difficult age,' she thought, keeping her smile of amusement to herself. But then she considered anyone under thirty to be too young for her. Most of her own people would still consider her young and impetuous, and she was rapidly approaching her first century.\n\n\"I wouldn't worry about it.\" She offered. \"He probably didn't want to mention it until he was a little more sure of me himself.\" It sounded like a reasonable explanation to her. She wondered if he'd told anyone about that first encounter. She assumed Mirisa might know since, as Feric had explained, she was his second. She could only guess that he hadn't mentioned the one at the lake. Aina nodded politely and promptly changed the subject.\n\nAina told her a little more about their people as she finished her food, though she remained careful and politic in what she said, so she told her very little more than what Feric had already explained during the trip back. Lucas remained silent, but hovered nearby at Aina's shoulder. She thanked Aina who gave her a sweet but tired smile. \n\nIt broke Inanna's heart to see such a young person having to worry like these two obviously did. They should be out on the hunt, wild and fearless, not hiding timidly in these pitiful ruins waiting and worrying like old women. The two excused themselves and left, Aina clearly distracted, and Lucas casting a few more covert glances at Inanna before they vanished.\n\nShe wasn't alone too much longer as Feric returned not long after his daughter and her protector had left. He returned alone. She was tired and getting a little edgy, but he was a surprisingly welcome sight and she felt her spirits lighten. She smiled and stood, stretching her arms over her head and listening with satisfaction as the bones of her spine popped and cracked themselves into a more comfortable position.\n\nHe winced.\n\n\"You ok? You look as tired as I feel.\"\n\nHer smiled deepened and she sauntered towards him, laying a hand on his chest and looking up into his eyes. \n\n\"Not too tired.\" She purred. She may have been ready to drop a minute ago, but there was something about this particular man that had her blood pumping. Even hormones didn't explain her intense urge to wrap her legs around him and pin him to the nearest wall. It was like some strange alchemy or enchantment, but her other senses could detect nothing like that. Maybe he was just that good.\n\nFeric held his breath and tried to ignore the hand on his chest and the scorching look in her eyes that screamed 'take me now.' A good portion of him was delighted by the prospect and warmed by the memory of her sleek frame writhing under him, but a tiny sliver was ringing the warning bells and telling him to get as far from her as he could. Whatever remained of his tired mind was howling madly and demanding he take her and crush her body with his so he could sink his teeth back into that delicious flesh.  \n\nHe very carefully reached up and removed her hand and took a step back needing desperately to get space between them.\n\n\"We, ah..probably shouldn't...\" he muttered, and glanced towards the door, thinking he heard something and feeling on edge. She frowned at him. He felt like an asshole as he watched her usual expression of amused confidence slip for a brief second in confusion before she recovered her easy humor and shrugged. He had started this after all, but he knew if he continued he wouldn't be able to walk away as casually as she would once she decided she'd had enough.\n\n\"Sure. You're the boss.\" She turned away and went back to grab her things. She looked back and smirked at him, \"Let me know if you change your mind. I promise I won't tattle.\" She winked as she passed him.\n\n\"Where are you going?\"\n\n\"I've got a place a few hours from here.\" He shook his head.\n\n\"Don't go tonight. We haven't got much, but there's plenty of space. We have sleeping mats, so you can get at least a couple hours sleep first. You won't be as sharp if you go out there this tired.\" He watched her pause to consider it, fighting down his own conflict, and quashing his less reasonable desires to see her stay, the ones that weren't particularly interested in making sure she got sleep that night. \n\nEventually she nodded.\n\n\"Yeah, alright, I might as well. Where do you want me?\" She hadn't put anything suggestive in her tone or words, but he still couldn't help but think of exactly where he wanted her. He clenched his jaw then cleared his throat.\n\n\"Well, if you follow me I'm sure we can find something. \n\nShe followed him through the maze of halls she'd seen at a passing glance the last time she was there and he took her to a smaller ante chamber. There was a fire pit set up and a couple of bed rolls laid out beside it.\n\n\"No one's using the room, so you get it to yourself.\" He gestured to the room. \"Like I said it's not much, but you can get a few hours sleep at least. Feel free to stay as long as you need to.\" She nodded. \n\n\"So they're ok with me then?\" He nodded.\n\n\"Enough for now at least. Everyone understands the need for outside help right now, but it's still unnerving.\"\n\n\"For you?\" She asked curiously.\n\nHe shook his head. \"No.\" His mouth quirked. \"I probably shouldn't admit it, but I trust you.\" Again she was touched. Where she came from trust was an important thing, perhaps the most important, and it was never given easily or lightly. She smiled faintly. But then she trusted him too didn't she? She'd not thought about it, but now, looking at him contemplatively, she knew implicitly that she did. His smirked widened, though there was a certain self-conscious quality to it, it looked a touch forced.\n\n\"This is where you say you trust me too.\" he whispered to her, and she laughed breaking the slight tension that had been created by his admission.\n\n\"I trust you too.\" She answered still laughing. He smiled, his eyes glittering and for a moment it looked like he wanted to say something else. He paused however and his smile faded. He only nodded and looked down, breaking her gaze.\n\n\"Well, I should be letting you get some rest then. Sleep well.\" He nodded to her again, barely making eye contact before turning and leaving the room rather hastily. Hastily in her opinion anyway. She let her mild smile slip off when he left, it was making her face ache. \n\nShe growled low in her throat. She was used to getting what she wanted, and she couldn't think of anything she wanted more right at that moment than the man who'd just walked out the door. A tiny voice questioned the force of that desire, but most of her just wanted to hurt something. She lay down and stretched out on the bed roll and closed her eyes, her mind slipping into sleep with thoughts of all the clever methods she planned on using to eliminate the competition, starting with the hunters. \n\nShe slept deeply and dreamt of spiders in the darkness. It was a good omen. "
    ],
    "authorname": "Enithermon",
    "tags": [
        "nonhuman novella",
        "were",
        "fantasy adventure",
        "supernatural",
        "magic",
        "oblivion",
        "dark elves"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/hunting-the-hunter-ch-02"
}