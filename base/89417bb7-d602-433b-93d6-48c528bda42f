{
    "title": "Coming of the Spell Caster Bk. 01 Ch. 10",
    "pages": [
        "Here is Chapter Ten! Only one more to go! Thanks for all the support and encouragement. Literotica readers are a world apart and I am so very grateful.\n\nThe story starts to transition here to the next novel in the series. Time to establish some rules... and Amber has a reckoning coming...\n\nStay sexy my friends!\n\nEnjoy,\n\nLana Ocean\n\nCanada\n\nThe Coming of the Spell Caster\n\nSpell Caster Series: Book One\n\nChapter Ten\n\nIT TOOK TIME, but the horses were stabled, watered and fed, the supplies were unpacked, and the girls went into Jasmine's bedroom to talk. Amber had shot a furious look at Daniel, standing in the kitchen, before closing the door with a slight bang.\n\nDaniel could hear muted conversation, but not any details. He shrugged, recognising it as not his problem, and set to work preparing supper. Amy had outdone herself. He had asked her to stop by the restaurant and ask for Peter or Mark. He had explained that she would need to tell Mark what had happened in the inn. She didn't understand, and Daniel had revealed how the owner, Peter the waiter, and the trader had conspired that night. She had cried and Daniel had felt horrible. He told her to simply tell Mark how sorry she was and that she was now with Daniel.\n\nShe agreed and Mark had come through. He had accepted her apology and even welcomed her back to dine at the restaurant. She had provided Mark with the list of food items Daniel requested, and Mark had provided it all and told her to tell Daniel the meal was on him.\n\nDaniel's mother had been a lover of fine foods and prepared many delicacies at home. Daniel, from the moment he could look onto the countertop, had watched, and learned from her. It had been years since he could afford the quality of food in front of him. But he hadn't forgotten how to cook.\n\nHe started his prep. He cut up small carrots, leaving a bit of the green stem on top. He oiled some small potatoes and set them aside. He trimmed the green beans and chopped up several cloves of garlic. He chopped up some tarragon and a few shallots. Then he admired the cut of beef. It was the most tender cut. It sat on his table, already trimmed and trussed. He pulled out four bottles of red wine and smiled when he saw they were the same as the one he had ordered for Amy at the restaurant. She will finally get to taste it.\n\nNext, he brought out the fresh salad ingredients. He could feel they were still cool from the restaurant. He frowned. He would need to keep this cool until supper, but he needed it prepped now. Once he was finishing the meal, he wouldn't have time to make the salad.\n\nHe went to his bedroom and flipped through the spell book. He found what he was looking for: Cone of Cold. He read the notes from Eric. It seemed to be quite the violent spell. Daniel only needed a fraction of it to do what he needed. He emptied his clothes chest in his bedroom, lifted it, and brought it out to the kitchen and set it down. He filled a large bowl with water and placed it in the chest and left the lid open. He flipped through the spell book to the right page and read what he needed to do.\n\nHe listened for the girls, and he could hear them still arguing. He smiled and dropped his pants. He grabbed his cock and closed his eyes and started stroking it. He relived his threesome with Amy and Jasmine. He remembered looking down past Amy's pussy to see Jasmine smiling upside down at him. It had been so hot. He felt his balls begin to tighten. He remembered Jasmine licking his balls as he thrust into Amy. He was so close. He focused and channelled the magic and his clarity. He knew he had reduced the spell to the smallest cone of cold he could manage. He thought about what he wanted and cast the spell, pointing his free hand at the open chest in front of him. He felt the magic respond and freezing air blasted from his fingers. He could feel the cold on his hand. He heard a crackle from inside the chest and released the spell. He looked in the chest and saw the bowl of water had frozen solid. Frost covered the inside of the chest.\n\n\"Yeah!\" he exclaimed.\n\nJasmine's bedroom door opened, and Amy looked out. She saw Daniel standing in the kitchen with his hard cock in his hand and her eyes opened wide. What the fuck? she mouthed at him. Daniel blushed and pointed at the chest. Amy looked at it and shook her head at him, looking quizzical.\n\n\"Don't worry about it,\" he said.\n\nHe heard Jasmine in the bedroom. \"What's going on, Amy?\"\n\nDaniel saw the alarm in Amy's face, and she turned back inside the bedroom. \"Nothing.\" She closed the door and Daniel could hear their conversation resume. He heard the word \"circle' and 'heart' but could make out little else.\n\nHe pushed his erection back into his pants and then washed his hands. He closed the lid and hummed in happiness. Spell casting was working out well for him.\n\nHe prepped the salad and placed the bowl into the chest to chill it. Then he made a vinaigrette and placed it in the chest. He looked out the kitchen window and figured it was about two hours until supper.\n\nHe covered the prepped food with towels and headed outside to chop wood. He had already cut the felled tree from the forest into logs. He now had to split the logs. He placed the first log on his splitting log and hefted his axe.\n\nHe took a few practice swings and then started chopping. It minutes, he was soaked in sweat, and he removed his shirt. He kept chopping and a sizeable pile of split wood was building next to him. He finally stopped chopping and turned to see the three girls watching him.\n\nAmy's face was red. Jasmine had a hand to her breast and Amber was scowling. Amy looked like she had just been caught doing something and said something to the others, and they scurried away. Daniel watched them leave and looked at the pile of wood. They could have helped bring in some fucking wood.\n\nDaniel grabbed his log carrier and filled it with logs and kindling. He hefted it and went back inside. He walked past the three girls. They were clustered together with Amber in the middle. They watched him go by and set the wood down by the stove. As he stacked the wood up against the wall, he looked back at the girls. Jasmine was smirking at him. Amber looked angry still. And Amy looked like she wanted to be anywhere but here.\n\nHe stacked the kindling and wood and then built up the stove. He finally stood and turned to the girls. They were still standing there staring at him, holding hands. \"What? By the Gods, you're just standing there staring at me. What is it?\"\n\nAmber looked him up and down. \"Nothing.\"\n\n\"Right.\"\n\nAmber blew air up her nose. \"If you must know, I would appreciate it if you wore a shirt. You are having an effect on Amy and Jasmine.\"\n\n\"No.\"\n\nAmber blinked. \"No?\"\n\n\"I said no. This is my farm. If I chose to not wear a shirt, it's my prerogative. Whatever effect I am having on Amy and Jasmine, well, how is that any of your concern? If they had an issue with me, they would tell me. Is there anything else on your mind, Amber?\" He looked at Amy and Jasmine, they were looking anywhere but at him.\n\nAmber said nothing. She glared at him.\n\n\"Seriously, Amber? What the fuck do you think is going on here? Huh? You ride up here and haven't stopped glaring at me. This is MY fucking house. MY fucking farm. Honestly, if you have a problem, then GET THE FUCK OUT! You're acting like a fucking BITCH!\" Daniel yelled the last word. He was furious. He had told Jasmine he would remain calm around Amber. But by the Gods, she was infuriating. She was worse than Amy ever was.\n\nAmber looked ready to kill him. He stared back at her, hoping she would try. Amber sniffed and looked at Amy and Jasmine. \"I've seen enough. Let's go. I won't stay a moment longer with this man.\" She moved toward the bedroom and stopped when Amy and Jasmine didn't follow her. \"Well?\"\n\nAmy and Jasmine looked at Daniel and then at Amber. Slowly they moved over to stand beside Daniel. They stood on either side of him and held him about the waist.\n\nAmber was shocked. \"You would leave me? Break our circle? For this man? A poor farmer with nothing to offer either of you? Are you insane?\"\n\nAmy squeezed Daniel a little tighter. \"No. We are quite sane. Daniel is not just a poor farmer, Amber. He comes from a family of apothecarists. They were killed, and he came here to start a new life. There is nothing we need from him, though. We have never asked for anything. He just gives.\"\n\n\"Compared to the power we can have? You would throw that away?\"\n\n\"He's more powerful than the three of us. Trust me. I can't share his secret, but our circle is nothing compared to him.\"\n\n\"Powerful? He's nothing.\"\n\nJasmine spoke up. \"No, you are wrong in this Amber. Trust us. We would trust you. Why will you not trust us? We thought you loved us?\"\n\nAmber looked troubled. \"I do love you. That's why I don't understand why you would abandon me for me.\"\n\nJasmine made a hurt noise. \"We aren't abandoning you, Amber. We invited you to join us. We brought you here at Daniel's invitation. It's you who are declaring ultimatums. Making us decide between him and you. All because you hate men. He's not like the others. Look at me, Amber. You know my history. Do you think I would join with Daniel unless he was different?\" Her speech hitched with emotion. \"He's the best thing that has ever happened to me, Amber. Better than you. I lo...\" She gulped. \"I love him.\" Jasmine buried her face in Daniel's side and started to cry.\n\nDaniel looked shocked. He stroked her head. \"Shh, Jasmine. Don't cry. You've nothing to be ashamed of. I love you, too.\"\n\nJasmine looked up and saw the love in his eyes and laughed and stretched up to kiss him. Their lips met, and they kissed. Amy made a noise and Daniel broke his kiss and looked at her. Her chin was trembling, and she looked afraid. He smiled at her.\n\n\"I love you, too, Amy.\"\n\nAmy's face lit up, and she attacked his mouth with hers. Jasmine laughed, and soon they were facing each other and kissing. It was awkward, but it was genuine.\n\nAmber vibrated in the doorway to the bedroom. When they finally looked over to her, she was ready to explode. She opened her mouth to say something when a voice from the doorway interrupted her.\n\n\"By the Gods, that was so sappy. Gah. Too much.\"\n\nThey looked over in surprise to see Grace standing inside the front door with her hip cocked and a smirk on her face.\n\nDaniel was the first to speak. \"Grace! What are you doing here?\"\n\nGrace strolled in, her movements like a dance. Her long black ponytail bounced off her back. She walked over to Amber first and ran a finger along her jawline. \"Aren't you a pretty one? A right fucking bitch, though. I've been watching you all day. You, my dear, need a good cock at least once in your life.\"\n\nAmber opened her mouth to protest, but Grace had a dagger to her throat in a blink.\n\n\"Tut-tut. Not a word. Keep your mouth shut until I say you can speak. Nod if you understand.\"\n\nAmber looked petrified, but she nodded once.\n\nDaniel took a step forward and pushed Amy and Jasmine behind him. \"Grace, what are you doing? You are in my house. Put down the weapon.\"\n\nGrace swivelled to face Daniel; the sides of her purple eyes crinkled with mirth. \"Ah, Daniel. We meet again. It's been a long time. Tell me. What happened to Eric? Be quick, be precise. If I don't like what I hear, all four of you will be plant food in seconds. Tick-tock, answer me. What happened to Eric?\"\n\nDaniel looked surprised and then sighed. \"I found his body in the woods nearby a couple of months ago. He was struck by a tree. If I was to guess, someone hit the tree so it would fall on him. He was crushed and impaled. It had to be quick.\"\n\nGrace studied him a moment. \"And his gear?\"\n\n\"I have it.\"\n\n\"All of it?\"\n\n\"Everything he had on him. I buried him. I can take you there if you wish to pass respects.\"\n\n\"Respects? I hated the man.\"\n\nDaniel nodded. \"Did he try to charm you?\"\n\nGrace's eyes narrowed to slits. \"What was that?\"\n\n\"I figured he tried to charm you and failed. It would explain why you hate him so much.\"\n\nGrace huffed and then walked around the farmhouse, always keeping Amber in her vision. She stopped by the butcher block and lifted the towels. She looked at Daniel with surprise. \"You?\" When he nodded, she moved on. She stopped at the chest and lifted the lid and looked inside. She looked at Daniel closer this time. \"You?\" Daniel hesitated and then nodded. Grace nodded her head, and Daniel wasn't sure, but he thought she looked impressed.\n\n\"Okay, very interesting,\" she stopped by the couch and sniffed. \"Wow, you guys are having a lot of wild sex around here. The whole house smells of pussy and cum. It smells delicious. I'm going to sit here. Daniel, you are going to pour me some of that lovely wine and then you are going to finish making that sumptuous dinner. We will eat and then we will talk. Got it?\"\n\nDaniel nodded. \"Okay girls, please go to your room. I'll let you know when dinner is ready.\"\n\n\"No,\" came Amy's soft reply. \"I'm going to sit with this Grace person and keep an eye on her. If she makes any move on you, I will fucking end her.\"\n\n\"Me, too,\" said Jasmine.\n\n\"Oh, for fuck's sake,\" said Amber, and she entered Jasmine's bedroom and slammed the door.\n\n\"Oh goody,\" purred Grace. \"Company. Come sit, ladies. Daniel, go get Eric's belongings.\"\n\nEric watched the girls sit on either side of Grace on the couch and then went into his bedroom and retrieved the magic bag. He came back in and tossed it to Grace. She caught it and nodded. Daniel watched her look inside the bag when Grace looked up at him. \"My wine?\"\n\nDaniel grunted and opened the wine. He poured four glasses and emptied the bottle. He brought over two glasses and gave one to Amy and Jasmine. Amy smiled at him, and Grace smirked. He brought over the remaining glasses and handed one to Grace and then sat on the coffee table. He motioned to the bag. \"Go ahead. Check out the magic bag. It's all there except for what we spent. About three gold pieces so far.\"\n\n\"I don't care about the money. Magic bag? That's what you call this? It's called a Bag of Holding. An extra-dimensional pocket. It's worth a fortune. Eric had rich parents.\"\n\n\"Duke Garcia of Lanceshire.\"\n\nGrace nodded. She started to pull items out of the bag. She tossed the spell book to Daniel when she pulled it out, surprising him. She then tossed the large pouch to him after she checked the contents. When she reached the small pouch, she stopped and tossed the bag to the floor. She opened the pouch and emptied the marble egg into her palm. She looked pleased. \"This is it.\"\n\n\"A marble egg? That's what you're after?\"\n\n\"It's not a marble egg. It's an egg.\"\n\n\"Like a real egg?\"\n\n\"Yes.\"\n\n\"What kind of egg?\"\n\n\"Nothing to worry your pretty abs over, my dear boy. And they are pretty.\" She looked at Amy and Jasmine. \"Am I right?\"\n\nThey glared at her.\n\nGrace laughed. \"Oh, my Gods, you three are priceless! Brian would LOVE you guys. He could please his goddess in a heartbeat!\"\n\n\"Is the egg what you guys were after when you came through Acron?\"\n\nGrace studied Daniel for a moment. \"You've learned how to spell cast, haven't you?\"\n\nDaniel nodded.\n\n\"How's that working out for you?\"\n\nDaniel felt a little nervous. \"Pretty good.\"\n\n\"What have you cast?\"\n\n\"Um, Pest Control, Levitate, Charm Person, Cone of Frost, and uh, Servant.\"\n\nJasmine looked at Amy when Daniel said Cone of Frost, but Amy shook her head and mouthed \"later\".\n\nGrace growled. \"Charm Person? On whom, and why?\"\n\nAmy raised her hand. \"On me, actually.\"\n\nGrace looked surprised. \"On you? And you just said you loved him?\"\n\n\"Yeah, well. We do.\"\n\n\"Ah! I see. You already loved him, didn't you? When he cast it on you?\"\n\nAmy blushed and looked at Daniel. \"Yes, I did.\"\n\n\"You're one lucky fucker, Daniel. I kill spell casters who manipulate people for their own gain.\"\n\nDaniel flinched. \"Did you kill Eric?\"\n\nGrace laughed. \"No, but I wish I had. I had sworn an oath to the King to assist him in recovering the egg. Eric knew I hated him. And he still kept trying to get into my pants.\"\n\nDaniel noted the information. So the adventurers were working for the King.\n\n\"Okay, so show me.\"\n\n\"Show you what?\"\n\n\"Your spell casting abilities.\"\n\nJasmine laughed into her hand, and Amy joined her. Grace looked at them, confused. \"What's the joke?\" She looked at Daniel and saw him blushing red. \"Daniel, show me.\"\n\n\"I would rather not,\" he said, looking at the floor.\n\n\"Um, it's not a request. Listen, I don't want to throw around threats and what not, but I'm ready to leave all of Eric's shit with you. You want to keep it; prove to me you can use it.\"\n\n\"What about the ice in the chest?\"\n\n\"What ice in the chest?\" asked Jasmine.\n\nAmy laughed. \"He made it earlier. I caught him.\"\n\n\"Oh!\" said Jasmine. \"I wish I had seen that.\"\n\n\"Enough!\" said Grace. \"I don't understand what's going on here, but enough. Daniel show me now. Levitate little Jasmine here.\"\n\n\"Uh, how about something smaller?\"\n\n\"Why? Are you limited by weight?\"\n\n\"Ah, no. Eric thought it was the case. He wrote that what you could physically lift was your limit. I found that logic flawed and have lifted much more than I can physically.\"\n\n\"I'm impressed. You are correct. Magic forms and works based on what you want. There are no limitations other than what you can focus. Enough. Lift Jasmine. Now.\"\n\nAmy snorted. \"Want help, Daniel?\"\n\nDaniel looked at her, thought a really long time, and nodded.\n\nAmy got on her knees in front of Daniel and started untying his belt.\n\nGrace gawked. \"Just what the fuck are you doing?\"\n\nJasmine giggled. \"Getting him ready.\"\n\n\"Ready? Amy, did Daniel convince you that you had to blow him to make his magic work?\"\n\n\"Sort of. He actually needs sexual energy to perform spells.\"\n\n\"What? No, he fucking doesn't.\"\n\nDaniel stared at Grace in confusion. \"No, seriously, I do. It's the only way I can find clarity. I tried for months to find it. And then found it through sex.\"\n\n\"What he means is he used to jerk off a lot,\" laughed Jasmine.\n\n\"Okay, this is fucked up,\" said Grace. \"Spell casters use meditation techniques to discover their clarity. It's about clearing the mind. Opening the pathways to the magic all around us. Sex is not the way to clarity. If anything, it's a massive distraction.\"\n\nDaniel shrugged. \"It's the only way I can do this.\"\n\nGrace sighed. \"Fine, go ahead, show me.\"\n\nDaniel stood up and Amy pulled down his pants. She grabbed his flaccid cock and stroked it. Even soft it was larger than her hand.\n\n\"By the Gods,\" said Grace.\n\n\"I know, right?\" said Jasmine. \"I can barely fit it in my cun... er, ah, pussy. I mean, vagina. My vagina.\" Jasmine giggled.\n\nAmy lifted his cock and continued to stroke it. She lapped at his balls and then looked back at Jasmine and made a head motion. Jasmine laughed and stood up. Grace, with a look of surprise on her face, had to move a little out of the way as Jasmine brushed by and eagerly dropped beside Amy. Jasmine took Daniel's cock and popped it into her mouth. Amy continued to lick his balls.\n\nGrace made a noise. \"That is one fucking big cock. Look at it! The head is enormous!\"\n\nAmy made happy noises and gently sucked a testicle into her mouth. Daniel groaned.\n\n\"Okay,\" he grunted. \"Jasmine, I'm gonna lift you, you ready?\"\n\n\"Yup!\"\n\n\"Okay, here goes!\" Daniel opened his eyes and found his clarity. He focused the magic and cast Levitate on Jasmine. She tried to keep her mouth suctioned around his cock, but Daniel's spell pulled her off with a wet pop. She squealed in delight as she was lifted into the air. Daniel floated her around the room, and Jasmine laughed.",
        "The noise brought Amber out of her room. She took one look at Jasmine floating in the air, and Amy sucking Daniel's balls. \"What the fuck is going on?\"\n\nGrace roared with laughter. \"Oh, this is amazing. Amazing! Daniel, you are the first spell caster to use sex as a channel. Look at you, you're not even breaking out in a sweat. The most senior spell casters would be under tremendous strain at this point. You're smiling, for fuck's sake. This is easy for you, isn't it?\"\n\n\"Yeah. I actually didn't need that much from Amy and Jasmine. Amy could have just stroked my cock.\"\n\nAmy snorted and popped his testicle out of her mouth. \"Bastard.\" She pulled his cock into her mouth and sucked hard.\n\n\"Gods, Amy,\" he grunted.\n\nAmber made a noise. \"Will someone answer me? Amy stop sucking that disgusting cock!\"\n\nJasmine floated by Amber and waved at her.\n\nGrace was no longer watching Jasmine. She was staring at Amy sucking Daniel's cock. \"Finish him, Amy. This is fucking hot.\"\n\nAmy took that as a cue and started to deep throat Daniel. She had missed this and now that she had his cock back in her throat, she wanted his cum. She slammed her nose into his pubic hairs over and over.\n\n\"Oh, my Gods,\" muttered Grace. \"That's some serious dick sucking. I want to see him blow his load. Let it out.\"\n\nAmy sped up. Grace could see her move her hand between her legs and pleasure herself. Then Amy took her wet finger and slipped it between Daniel's ass cheeks. Grace knew what she had done. She could see it on Daniel's face. She turned her head quickly to see Jasmine still flying around the room. His control was amazing. She heard him grunt and turned back just in time to see Amy take his cock in her hand and aim it toward Grace.\n\nDaniel's cock spasmed. A thick, solid stream of cum blasted free directly at Grace. It splashed onto her face and her raised hand. A second rope followed, and Grace had lowered her hand, not expecting more of the same volume. The second rope hit her squarely on the forehead and she gasped in shock. The third rope was intercepted by Amy's mouth surrounding his cock. Grace could see Amy's cheeks swell and Daniel's cock spasm three more times.\n\nWhen he was done, Amy stood up and kissed him. Grace, dripping with cum, could see him swallow. Grace swiped a finger through the cum on her forehead and popped it in her mouth. Her eyes lit up with alarm and then she smiled.\n\nJasmine squealed. \"Daniel, bring me over! I want some!\"\n\nJasmine swung through the air and landed on her feet next to Amy. Amy smiled and kissed Jasmine. Grace felt her pussy fill with wetness.\n\n\"That was DISGUSTING!\" yelled Amber.\n\n\"No, dear,\" murmured Grace. \"That was amazingly hot.\" Grace continued to wipe up Daniel's cum and deposit it in her mouth.\n\nAmy and Jasmine took Amber aside to calm her down. Daniel went to kitchen to prepare dinner. Grace went with him and watched him cook. After he lit the stove, he pulled out pots and put a cast-iron skillet on top of the stove. He placed carrots in a pot and green beans in another. He used the day chamber to put water in the pots and placed them on the butcher block.\n\nThe oiled potatoes went into a ceramic baking dish. He sprinkled salt and pepper on them and tossed the dish into the oven part of the stove. He held his hand inside a moment and adjusted the air flow into the oven.\n\nHe turned back to the butcher block and sprinkled salt and pepper on the piece of meat. He covered the whole piece. He then poured oil in the skillet. He waited a moment and then gently placed the meat in the skilled. It sizzled and popped in the hot oil.\n\nHe pointed at a bottle of wine. \"Grace, could you open that please?\"\n\nGrace opened the bottle with surgical precision while Daniel turned the meat to brown the sides. She splashed more wine in her glass and put the bottle on the butcher block.\n\nIn minutes, the meat was seared all round. Daniel put the meat on the butcher block, and Grace raised her eyebrows. Daniel saw the look. \"It finishes in the oven. The sear seals the juices in.\"\n\n\"It's amazing watching a man cook.\"\n\n\"My mom taught me.\"\n\n\"Fascinating.\"\n\nDaniel put the meat in another baking dish and put it in the oven beside the potatoes. Then Daniel tossed the shallots and garlic into the skillet with a little more oil. He stirred it for a minute and then added wine from the bottle. The skillet sizzled and Daniel scraped all the goodness off the skillet. He then watched it boil. \"It needs to reduce by half.\"\n\nGrace nodded. \"That was pretty impressive how you Levitated Jasmine.\"\n\n\"Was it? It seems so easy.\"\n\n\"That's interesting. What's your plan?\"\n\n\"Plan?\"\n\n\"I seem to remember giving you coin to go to the city to be tested.\"\n\n\"Ah, yes. I'll return it.\"\n\n\"I don't want it back. I want to make sure you go get tested.\"\n\n\"Yes, well. Jasmine, Amy, and I were planning on doing just that. We already bought horses and supplies.\"\n\n\"And Amber.\"\n\n\"No, I don't think so. She hates me.\"\n\n\"Hmm. Yes, she does. She's a pretty hard-core lesbian. I know the type. You'll never be a friend of hers. But she has to go, too.\"\n\n\"Why?\"\n\n\"She's part of the circle. Her, Amy and Jasmine.\"\n\n\"She said that, what's a circle?\"\n\n\"Seriously, you don't know? Amy and Jasmine never said anything?\"\n\n\"No. I have no idea.\"\n\n\"A circle is three or more women who can do witchcraft.\"\n\n\"Witchcraft!? What the fuck? Amy, Jasmine, and Amber are witches? Fuck off they are.\"\n\n\"Notice any strange birthmarks on Amy or Jasmine.\"\n\n\"Yeah, a little heart-shaped one, under their left breasts. They both have one. In the same spot.\"\n\n\"One of them had it first. It transfers to the others when the circle forms. They're in a circle. Usually very lesbian. Just the nature of what they do.\"\n\nDaniel whispered. \"Aren't witches evil?\"\n\nGrace laughed. \"Yes, some are. Most are. So are some spell casters. And clerics. Shit, everyone can be evil, Daniel. But they're hedge witches. Not full witches. Hedge witches are usually in tune with nature. They don't cast spells like spell casters. They observe nature, the winds, and other shit like that. They know a few ceremonies. Under the full moon and shit like that. They make little charms and things for love, avoiding pregnancies, getting people to fuck off when you want them to. Now hedge witches can be trained to be actual witches and cast real spells like a spell caster. The city can provide that. Problem though is that the full circle needs to attend. They likely don't know that. They are tied together for life, Daniel.\"\n\n\"Aw, shit.\"\n\n\"Yes, shit. And that means if you tie yourself to Amy and Jasmine, Amber becomes part of that deal. When Amy and Jasmine sided with you, they cast their vote. They sent a message to Amber that was basically, tough shit, you're coming. They've been in the bedroom all day talking about you. Amber thinks you did something to them. She's the heart of the circle, by the way. Problem is, she thinks that means she's also the boss. Circles can't work that way. They all need to agree. Equal authority. Amy and Jasmine get it. Amber's fighting it. As far as I can tell, only because she fucking hates men.\n\n\"One more thing you should know, Daniel Davies. Because of their nature, hedge witches are drawn to power. Their love for you may be the result of you finding your power.\"\n\nDaniel shook his head. \"I don't think that's the case here. Amy was in love with me long before I found out how to spell cast.\"\n\n\"Okay, good. That does make a difference. But Amber may not believe that. She'll use it against you. Use it to drive a wedge between you and the others.\"\n\n\"Wow, you really don't like her.\"\n\n\"I recognise her.\"\n\n\"You know her?\"\n\n\"No, I used to be just like her. Your sauce is gonna burn.\"\n\nDaniel cursed and pulled the pan off the stove with his bare hands. He was quick enough that he didn't get burned. He quickly put the pots with vegetables on the stove. He turned to the skillet and added the tarragon, a slab of butter, and sprinkled flour all over. He stirred it quickly. In minutes, he had a sauce mixed together. He put it on the edge of the stove to keep warm.\n\nHe watched the stove. \"Can you hand me five dishes, please? In the cupboard there.\"\n\nGrace took out the plates and laid them out on the butcher block. \"What's the sleeping arrangements around here?\"\n\nDaniel laughed out loud. \"No fucking idea.\"\n\n\"How would Amy and Jasmine feel about me sleeping with you?\"\n\nDaniel felt his cock stiffen. Before Amy, Grace had been his muse. Now she was in his house telling him she wanted to have sex with him. But now Amy and Jasmine were in the picture. He shook his head. \"No can do, Grace. But I would love to. Tell you what, convince Amy and Jasmine, and I'm good.\"\n\n\"Strange comment from a man who just came all over me. But challenge accepted.\"\n\n\"What are you exactly?\"\n\n\"What do you mean?\"\n\n\"What kind of adventurer?\"\n\n\"That's complicated. Try and figure it out.\"\n\n\"A rogue, is my guess.\"\n\n\"Nope, and that's your only guess. And an insulting one, but you don't know that yet. I'll let it slide.\"\n\n\"Supper will be ready in a minute. Can you tell the girls?\"\n\nGrace nodded and moved in front of Daniel. She reached down and grabbed his cock. She leaned in and gave him a soft kiss. \"I'll be right back.\"\n\nDaniel panted as soon as she was gone. Oh, my Gods, she's hot. Then he remembered Amy and Jasmine, and he pushed thoughts of Grace aside. Daniel checked the vegetables and pulled them from the stove and drained them. He placed them in bowls, and added salt, pepper, and butter. He put the bowls on the table.\n\nHe swung open the oven door and pulled out the meat and potatoes. He set the meat on the butcher block and tossed the potatoes in some butter and put them in their own bowl on the table.\n\nHe waited a bit and then took out a carving knife and sliced the meat into thick slices. The interior was bright red. Perfect, he thought. He placed the meat on a serving plate and poured the sauce all over it. He placed it on the table and then brought out knives and forks.\n\nHe sat at the table with his wine and waited. Another minute passed and then Amber was shoved out of the room, followed by Grace.\n\n\"He has made you a gourmet dinner, you selfish bitch. Now get your ass out there and fucking eat.\" Grace pushed Amber toward the table. Amy and Jasmine came out holding hands and trying not to laugh.\n\nWhen they got to the table, Amy breathed in Daniel's ear. \"We like Grace.\"\n\nDaniel brightened up and glanced at Jasmine. She stuck her tongue out at him. Jasmine and Amy sat beside him. And Amber and Jasmine looked at the one remaining chair. Grace grabbed Amber's shoulder and directed her into the chair.\n\n\"What about you?\" asked Daniel. \"I'm sorry, I don't have chairs for five.\"\n\nGrace moved up and sat on the butcher block. \"I'll be fine here.\"\n\nAmy and Jasmine scooted their chairs closer to Daniel. It now looked like three on one side and Amber on the other.\n\n\"Dig in people, while it's still hot,\" said Daniel.\n\nAmy served up a dish for Grace and handed it back to her. Jasmine filled Daniel's plate and hers. Amy helped Amber and Daniel fill Amy's.\n\nGrace shook her head.\n\nSoon they were all eating. Amber stopped scowling after the first bite and then slowly devoured her plate. Grace whistled and went back for seconds. In minutes, the food was gone. They all sat back to enjoy their wine.\n\nAmber rose to leave, but Grace tut-tutted her, and she sat back down reluctantly.\n\n\"Okay, people,\" started Grace. \"We have some things to talk about. First, and no argument, you are ALL going to the city to be tested.\" She glared at Amber. \"All of you. I am going to take you there to make sure you all arrive safe and sound. I'm not being nice, it's just I happen to be going there, too.\n\n\"Ladies, I told Daniel you are hedge witches and a circle. Shame on you for not telling him. Secrets like that can hurt relationships. Poor Daniel had no idea why Amber here was being bitchier than her usual bitchy self. That wasn't fair to him. And Amber, dear, you need to know Daniel put a Charm Person spell on Amy. It didn't make her hate him because she already loved him. Think about that a minute. She already loved him. Long before you formed the circle. So don't even think about using that against Daniel.\n\n\"Amy and Jasmine. Hedge witches are drawn to power. You need to be careful of that. Other witches will sense Daniel and want him. They will want to make babies with him. That's how witches make more witches. Witches and spell casters make more witches and spell casters. Now, I think your love for Daniel is real. Real as fuck. That had nothing to do with power. But it might now. Now you know. All this may fuck with your heads. Be careful. Trust one another.\n\n\"Speaking of which, Amber, dear. You will want to fuck Daniel sooner or later. Hell, I want to fuck Daniel right now. If he pulled out his cock and said 'Grace, get your cunt on this' I wouldn't even hesitate. You need to come to terms with that. It's coming. Make it mutual. Men aren't fucking pigs. Some men are pigs, I'll give you that. Some women are pigs, too. You're proof of that. But you are judging an entire sex on some fucked up ideals. Grow the fuck up. You will only hurt yourself.\n\n\"Lastly. We are all going to the city together. I am the boss. I outrank you four idiots by a factor that will stagger your minds. I just hide it really well. Listen to me. Don't question me when I issue orders. The road to the city can be treacherous. I will keep you safe until I can get you to the school.\n\n\"When you get to the school and pass your tests, and you all will, except I want to be there for Daniel's--I wouldn't miss that for the world, you need to be clear to the staff that your circle is already tied to Daniel. They can't separate you. You will be housed together and likely train together.\"\n\nAmy and Jasmine exchanged happy looks.\n\n\"Yes, Amy and Jasmine, which means you get to keep banging the fuck out of Daniel. Which leads me to the end of the conversation. Hedge witches can ward off unwanted pregnancies. I suggest you build your altar or whatever and do that tonight. Seeing the fucking massive amounts of cum Daniel shoots, I wouldn't be surprised if you aren't already pregnant.\"\n\nAmy and Jasmine exchanged shocked looks and then looked at Amber. Amber sat with her head lowered. When she raised it, she looked defeated. She looked at Amy and Jasmine and nodded.\n\n\"Okay, great. That was an amazing meal, Daniel. I know there's more wine somewhere around here, and I mean to find it. Then I'll clean up. Then I'm getting drunk. Then I hope to convince Amy and Jasmine here to let me share Daniel tonight. I'm horny as fuck and I want that monster in my cunt. Think of it as a test of your relationship.\"\n\nAmy and Jasmine smiled at one another and reached under the table and stroked Daniel's cock.\n\n\"Aaaand, I'll take that as a yes. Fantastic. Now, wine?\"\n\nEnd of Chapter Ten\n\nLike I promised before, all the chapters -- read this please moderators: ALL THE CHAPTERS are posted to Literotica and awaiting being published by Literotica.\n\nPlease, please, please dear readers: Rate the story! Leave constructive comments! If you don't like this kind of story and STILL read it, please don't be a %$^&amp; and down rate and slam the story. Just move on to something you like.\n\nI adore Grace. Time for her to push this little group along. Okay so here we go! One more chapter!\n\nLove, Lana.\n\nCopyright \u00a9 2020 Lana Ocean. All rights reserved."
    ],
    "authorname": "Estcher",
    "tags": [
        "fantasy",
        "oral",
        "masturbation",
        "non-consent",
        "magic",
        "elves",
        "dwarves",
        "threesome",
        "group sex",
        "adventurer"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/coming-of-the-spell-caster-bk-01-ch-10"
}