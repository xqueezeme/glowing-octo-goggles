{
    "title": "Valentine's Day Remembered",
    "pages": [
        "There is no sex in this story. It is non-erotic. So if you are looking for a sexual or erotic story you may want to pass on this one. This short story is about one man and his past remembrances of Valentines Day. A big 'Thank You' to Penn Lady and WanderingScot for editing this story and making it a much better read.\n\n*\n\nMost people think that Valentine's Day is only for lovers or young children. I beg to differ with you. It's also a time of remembering the loved ones in your life. My name is Hank Adams and Valentine's day has been my favorite day of the year for as long as I can remember.\n\nI remember way back when I was just a kid, maybe kindergarten through the sixth grade. We would all take a tissue box or a large shoe box and in art class we would decorate it all up. All the kids in the class would give every other kid a card that would say, 'Be my Valentine' or 'Be mine.' For the guys it might say 'Friends forever,' or 'Be my Pal.'\n\nI remember going to the five and dime store with my mom to pick up my cards. For the girls in my class I wanted to make sure it said the right thing. On the back of every card I would sign my name, Henry Adams.\n\nA few of the years we made up our own cards using construction paper. I always made sure that Mary Lou got my best card. Sometimes I would write 'I Love You' on the back of hers.\n\nHere I am in the hospital almost eighty years later thinking about my first Valentine's cards. It was so many years ago, but it seems like just yesterday when I put a card in Mary Lou's tissue box.\n\nShe was my girlfriend in those first few years of school. She lived next door to me and we walked to school together till her family moved away. I missed her but again I was only nine years old when she left.\n\nThroughout the next ten years I saw her from time to time. I always got a little queasiness in my stomach when I saw her. I guess it was because she was the first girl I had ever kissed.\n\nLife went on and I joined the Marines. I spent three years fighting in the Korean conflict in the early 1950's. Hell, we had good men dying and they wouldn't even call it a war. After returning to the states I joined the National Guard. I retired from the Guard with thirty years of service.\n\nI worked for the National Guard, in the maintenance division. We kept up the jeeps and other vehicles for the weekend warriors; that's what we call our part-time Guardsmen. I won't take anything away from them, they were good men and many were sent overseas to fight. Others helped when we had emergencies here at home. They were a damn good group of men and deserved to be called servicemen and soldiers.\n\nAnyway, when I got back to my small town in central Ohio I thought I'd look up some of my old friends. No one had seen Mary Lou for years. They said she hadn't gone to our five-year reunion. I hadn't gone because I wasn't there at the time.\n\nSomething I should mention here is that I went to a public school and Mary Lou went to an all-girls school after she moved. It was a couple of years after our class graduated that the schools combined, so we shared the same reunions.\n\nLife went on and I dated a few girls. We had sex, but it wasn't as open as it is today. I wasn't a kiss and tell kind of guy but I had my share of women.\n\nWhen it was time for our ten-year reunion I decided to go. I hadn't been there five minutes when Mary Lou walked in. I got that queasy feeling as I walked up to her. She saw me and came up to me and gave me a hug.\n\nI began asking questions. \"Where have you been? I've been looking for you since I came back from Korea. I looked in all the local phone books and couldn't find you. How are you? How have you been?\" \n\nShe smiled at me.\n\n\"Henry, slow down, we can talk about our past later. It's just so good to see you.\" She hugged me again.\n\nWe spent the whole evening together. Old classmates thought we might be together. I didn't know most of the girls from her school but she introduced me as an old friend.\n\nShe told me she just went by Mary now. We danced and talked about when we were kids. We laughed a lot. We made a date to get together the following Saturday.\n\nMary told me that the reason I couldn't find her in the phone book is because she had gotten married four years before and her last name was Arndt. She had attended college and moved to Columbus and become a school teacher. She had divorced her husband about three months before, after she'd found out he was cheating on her.\n\nI asked her where she lived now and it turned out she had landed a position at the local school and had just moved back to town. She would be starting her new position at the start of the new semester.\n\nWe started dating. I saw her every chance I could. She wouldn't talk about her divorce, except to say that it really hurt. To be honest here, I wanted to hunt the bastard down and beat the shit out of him for hurting my Mary. That's how I thought of her.\n\nIt was about two months after we started dating that we made love for the first time. It was like no other sexual experience that I have ever felt. I knew it was because I loved Mary and every act of sex I did, I did for her. I didn't worry about what I wanted, only what made her feel good.\n\nAfter our first time together she cried and told me she never knew it could be so good. We both knew that it had to be the connection we had. On Thanksgiving I invited her to my parents' home for dinner. It was there at the dinner table that I proposed to her.\n\nShe said yes and we wanted to set a special day for the wedding. A date we could remember and celebrate. Christmas was too soon and too hectic. New Years was more of a party day then a romance for lovers. So we chose Valentine's Day. February 14.\n\nIt was a day for lovers and one that we decided to always celebrate together. That was fifty-eight years ago. Our life together was wonderful. We had five children, seventeen grandchildren and also have seven great-grandchildren.\n\nEveryone said we were like two peas in a pod. Some said we were joined at the hip. We never liked to be apart. The only time we were ever separated was when I had to go away a couple of weeks each year with the National Guard.\n\nOur kids and grandkids have always said that they have never seen a more compatible couple. If I started a sentence, Mary could finish it. We had our disagreements but we never stayed mad at each other for long.\n\nMary rarely raised her voice. If the kids did something wrong she would always say, \"Wait till your dad gets home.\" I hated that; it made me the bad guy. We often argued about her setting the punishment. I didn't like spanking my kids so we started just taking things away from them.\n\nIt wasn't like today where they have i-Pods, MP3 players, cell phones and all that other stuff they have nowadays. We had a TV but only got three stations. Our phone was on a party line we shared with two other neighbors.\n\nWe took away their bikes, or told them they couldn't talk on the phone. Maybe gave them extra chores. We even told them they couldn't go outside. Today you have to push your kids out to get a little fresh air. All in all my kids were great and still are.\n\nI give Mary the credit for the upbringing of the kids. My daughters and granddaughters can actually cook food; none of that frozen phony stuff. My sons have work ethics. They don't ask for handouts and all earn a good living. We did our best to send them to trade schools and college, wherever they wanted to go.\n\nI am proud of every one of them. They have always been there for us and us for them. That's what real families are all about.\n\nEvery Valentine's Day Mary and I would go out of town and get a room for the night. We would see a movie or play, have a good dinner and a night of fantastic, kid-free sex.\n\nWe never missed a celebration. Even the year before last, when Mary had found out about her illness she still wanted to celebrate. I know it might be hard to believe but up till last year, we still made love on Valentine's day. It might not have been as good or long as years past but we both made the effort.\n\nThey got those pills out now that kind of helps out. I've been using them for a while now.\n\n****\n\nOne story I want to tell you about was one day shortly after we got married. Mary and I went out of town to dinner. I saw her look over at a guy and a young women sitting in a booth. Mary looked very nervous.\n\n\"What is it Mary? Do you know those people?\" I asked.\n\nShe took a deep sigh and said, \"That's Wayne, my ex-husband. That girl he's with is the one I caught him cheating with. Her name is Helen. Rumor is she's had sex with so many men she probably doesn't remember all of them. I told Wayne but he never believed me. He thinks she's a saint, the idiot.\" \n\nI was surprised; Mary didn't often talk like that.\n\n\"Do you still have feelings for him, Mary?\"\n\n\"Oh, no! I love you, Hank. He doesn't hold a candle to you. It's just that... that I always wanted to get even with him but never had any idea what to do.\"\n\nI wanted to do something for my Mary, something that would make her happy. Now you have to understand that I was still in the military and in great shape. This Wayne character, Mary told me, was a car salesman. I knew I could take him.\n\nSomething else you need to know is Mary had been divorced from him for a year or so at this point. That meant that he and his girlfriend had been together for about a year and a half at least.\n\nI know they couldn't see us where we were sitting. I waited until they stood up, then walked over to Helen\u2014 whom I had never met\u2014 and said, \"Helen, baby, it's so good to see you. It's been what? Six months since we were together in Columbus? Damn, that's a night I'll never forget.\"\n\nShe looked totally surprised, almost scared as I took her in my arms and kissed her. A very passionate kiss. I even grabbed her ass. It wasn't such a bad ass either, but I never told Mary that.\n\nI heard Wayne say, \"Hey, buddy, who the hell are you? That's my girl you're kissing.\"\n\nI released Helen and turned to Wayne. Helen didn't say a word and by now a lot of people were looking at us. \n\n\"Shut your fucking pie hole, whoever the fuck you are, or I'll shut it for you. Helen's one of my girlfriends and if you don't like it, we can take this outside. I'll kick your ass into next Tuesday.\"\n\nWayne just stood there as I grabbed Helen and kissed her again. Wayne walked out of the restaurant. \n\n\"What a pussy!\" I said. I made sure my voice was loud enough to carry. After I let Helen go she stared at me. \"You can do a lot better than that asshole,\" I told her. She grabbed her purse and ran after Wayne. I looked back where Mary was sitting and she had a smile on her face.\n\nI walked back and sat down with her. \"I think Helen has some explaining to do.\"\n\n\"Did you know her, Hank?\"\n\n\"Hell no, I did that to mess up their minds. I did it for you, Mary.\"\n\n\"Thank you, but you didn't need to grab her butt,\" said Mary. We both laughed.\n\n****\n\nThat's the way it always was with me and Mary. If some guy messed with her, I messed with him. I know it might be hard to believe but I never cheated on Mary. I'm not saying either of us never had the opportunity but our marriage was always more important than a one-night fling.\n\nThroughout the years we had a big house just outside of town where the kids could enjoy the outdoors. We were a family. We attended everything we could that our kids were in. There were school functions, Scouts, 4-H and a lot of other activities. After they grew up we had our grandchildren and started going to their events.\n\nWe slowed down some by the time we had great-grandchildren but we still tried to make family events.\n\nWhen Mary came down with cancer two years ago it took a lot out of her. As I mentioned we still celebrated Valentine's Day, both for the usual reasons and because it was our anniversary. \n\nWe had slowed down quite a bit. Age and Mary's health did us in. I was so worried about my Mary. Our kids kept telling us for the last couple of years that we needed to get rid of the big house. It was just so big and too much to take care of.\n\nEvery week some of the family came by to help us out. They knew their mother wasn't all that well. Mary and I talked and decided maybe we should start putting things in order and even put the house up for sale, but we didn't want to move. It had been our home most of our life.\n\nWe'd been through so much together. I had had a mild heart attack years ago, and Mary was more scared than I was. Somewhere along the line I became a diabetic but luckily I could handle it with pills.\n\nMary had a number of female problems, and I had no idea what they were. All I knew is that I would take her to the doctor and always be with her. She was diagnosed with cataracts about five years ago. I was so worried about her going blind, but she told me it wasn't that bad.\n\nOf course, the worst was when she found out about the cancer. God, I wish I could have taken her pain away. The best I could do was to be there for her and I was.\n\nIt did go in remission for awhile but shortly after our last Valentine's Day date it came back. She fought so hard. She went on for months having good days and bad. So did I; I couldn't live without my Mary. I even prayed for God to take me first but it didn't happen.\n\nMary was in the hospital for two weeks and I spent every day by her side. One of my kids or grandkids would take me and pick me up at the end of visiting hours.\n\nI was in the hospital holding her hand when she took her last breath. It was the saddest day of my entire life. After the funeral my family convinced me that I couldn't live alone any longer. I stayed at my eldest son John's house until we found a nice room in one of the senior living centers.\n\nMy family gathered together with me at our home and the ladies in the family did all the work sorting out Mary's clothing and personal things. I let the kids and grandkids have whatever they wanted. I just wanted a few personal items and some of the photo albums of Mary and our family.\n\nEverything that was left we sold at auction. Believe me, being together over fifty plus years we had accumulated a lot of junk. But attached to every piece of junk was a memory, which made it sad to see even the junk go.\n\nIt was both happy and sad watching the things sell at the auction. My family members bought a lot of it; I guess it was their memories too.\n\nI divided the money from the auction among my five children. I told them I didn't need any more money. I had a nice room and spending money. Most of my social security and military pension paid for my room and board. It didn't leave me much but I didn't need much either.\n\nOne thing that I was happy about is that one of my grandchildren bought the homestead. He told me the house would be in our family forever. The money was put in a savings account to be divided among my family after my death.\n\n****\n\nMy family visited me most every weekend. I told them not to worry about me; they had families of their own to worry about. I spent my days sitting on the patio of the retirement center and looking at my photographs.\n\nI kept around three albums at the retirement home and someone would bring me another one when I asked them. I can't tell you how many albums we had throughout the years. Twenty, maybe forty; I really don't know but I would stare at each and every picture. \n\nAll I felt I had now were my memories. \"Why, Mary? Why did you have to die?\" I often asked myself.\n\nMost of our siblings were already gone also. We were the last of our generation. My family was good about coming to visit but I knew deep down they felt sorry for me, and if there's one thing an old person hates, it's pity.\n\nThey had activities at the home but I didn't do much. I never thought much of bingo but I did like it when some country-western groups would come in and entertain us. I also liked to listen when someone played the piano. Mary had played the piano.\n\nWe had spent many nights with her playing and me listening and trying to sing to the songs. A couple of my granddaughters played the piano now and would come by and play for me.\n\nI would often picture Mary at the piano when they played, and tears would roll down an old man's cheek. Listening to my granddaughters playing the piano was a highlight in my life.\n\nEvery couple of weekends I was invited over to someone's house for dinner. It usually ended up with a lot of singing and music. I used to play a guitar in my younger days but arthritis kind of took over and it hurt too much to play anymore, but I loved listening to others.\n\nThe holidays were approaching. It would be my first Thanksgiving, Christmas and New Year's without Mary. My family tried hard and I truly appreciated it. I smiled on the outside but on the inside I was dying.\n\nI didn't want to keep telling my kids and grandkids how much I missed Mary. Damn, I knew they missed her too. I did my best to make it through the holidays.\n\nIn late January I started having heart problems. My diabetes was acting up and was getting too high on my daily tests. The doctors kept adjusting my medication but nothing seemed to help. I overheard the doctors tell my son that I was just getting old and there wasn't a lot he could do.\n\nThe second week of February I went in the hospital. The first thing that came into my mind was that Valentine's Day was in two days. Maybe I could spend it with Mary after all. The thought brought a smile to my face.\n\nEveryone in my family came in to see me. I told them that I had led a good life and if God decided it was my time, there wasn't much anyone could do about it. I hugged and kissed every grandchild and great-grandchild. I went to sleep thinking about Mary.\n\nEpilogue:\n\nI'm John, Dad's oldest son. My parents were two of the most beloved people in our town. Everyone always said, \"When one of them dies, the other won't be far behind.\"\n\nWe all knew this was true. Once mom died, dad started going downhill. We did everything we could to cheer him up but we knew what he was dying from. He wasn't having heart failure, he was dying from a broken heart.\n\nThe hospital said that he died shortly after midnight on February 14, Valentine's Day. Every member of our family believes the same thing: that Dad wanted to be with mom on their anniversary.\n\nI know we all feel sad and will miss dad, but at the same time we know his wish came true. As I sit here finishing his story with tears running down my face, I can picture Mom and Dad having dinner together, celebrating their anniversary.\n\nFrom dad, mom, and our whole family - We wish you a very happy Valentine's Day.\n\n*\n\nThank you for reading my story\n\nComments are welcome and appreciated\n\nDG Hear "
    ],
    "authorname": "DG Hear",
    "tags": [
        "mature",
        "love",
        "married",
        "caring"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/valentines-day-remembered-1"
}