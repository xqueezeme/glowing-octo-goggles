{
    "title": "Ploughing the South Forty",
    "pages": [
        "I know it's not exactly a new idea, and it's the punchline to many a joke, but I haven't done a farmer's daughter story yet.... Until now. \n\nI hope you enjoy it. \n\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n I stood in the cool shade under the huge, spreading limbs of the maple tree. It was one of hundreds along this road, and well over a century old, having been planted by the original owner of the area. Back then, the farm had encompassed tens of thousands of acres, and this road had been the driveway. All near twenty miles of it. \n\nNow, however, most of the original driveway was paved, and was a two lane, rural road. The farm had been parceled off, but this end of the property was largely untouched. \n\nWhich was more than I could say for the tree.... or my car, which sat, crumpled, kissing the massive maple intimately. Steam wafted from under the wrinkled hood. The airbag, now deflated, hung like a used whoopee cushion from the steering wheel. It had probably saved me from serious injury. \n\nThe insurance company was never going to believe it. It sounded like a childhood excuse, right up there with 'the dog ate my homework', but in this case, it was true. \n\nA goat. A stupid fucking goat, that had literally appeared out of nowhere, jumping out of the ditch, and causing me to swerve. The tree was just an innocent bystander, and the goat fled the scene uninjured. \n\nThe car wasn't going anywhere but the junkyard, and my cell phone hadn't been availed the same airbag benefits as I had. It now resided on the floor of the passenger side, among the shards of shattered safety glass, equally dead. I was going to have to do this the old fashioned way. \n\nBeing a hot day, I decided to avoid walking the scorched pavement, choosing the more shaded dirt and gravel driveway that stretched over the hill ahead. The mailbox said 'Archer', and I was hoping the driveway wasn't as long as it appeared from the roadway. \n\nNearly twenty minutes later, I reached the crest of the long, gentle hill, and learned it wasn't. It was even longer. Looking ahead seemed further than going back to the road, but shorter than searching out the next nearest other house. \n\nAt least it was downhill, and I could see the finish line. \n\nEventually, I neared the house. It was one of those big, old, square farmhouses, and there was a huge barn behind it. To one side, a corral housed a couple of horses. \n\nAnd a person. Hallelujah. \n\nAs I approached, I saw that the person in the corral, working with one of the horses, was a woman. Dark haired, and tall, my initial impression was that she was attractive, but I was too far away to be sure, and she had her back to me. \n\nCloser still, I could make out her shape, which seemed quite curvy, and that she was wearing coveralls and a t-shirt. The coveralls were quite snug across her firm behind. \n\n\"Excuse me?\" I called, as I reached the spilt-rail fence. \"Miss? Can you help me?\" \n\nShe stopped brushing the horse, and turned her head, revealing a lovely profile; Pouty lips, and a cute, upturned nose. She waved a brush filled hand, and grabbed the horse's halter. A moment later she was on the other side of the horse, still obscured from view, but turning the animal in this direction. \n\nWow, I mouthed silently as she finally came into full view. She wasn't just attractive; she was stunning, and built like a Grecian goddess. No.... that's not quite right, either, as I'd never seen a goddess or statue with a rack like that. Huge and round, those breasts bulged out much wider than her ribcage, and showed around the bib of her overalls. \n\n\"Hi!\" she smiled, extending her hand as she came within range. Her eyes were as dark as her hair, surrounded by extremely long lashes, and sparkling with life. \"I'm Kat,\" she said. \n\n\"Colin,\" I replied as I reached for her hand, a little too quickly for the horse's liking. He was startled, and jostled her, then kicked. \n\nI never saw it coming. In retrospect, it was just my luck. Survive the car wreck, and get knocked out by a horse. \n\nGo figure. \n\n ***\n\n I woke up in the dark. There was a little bit of light still coming in around roller blinds on the windows, but it was really quite dark. I had no idea what time it was, and my watch didn't seem to be lighting up the way it usually did when I lifted my wrist. \n\nI heard footsteps approaching, and the door opened quietly, casting a column of light across the room, and over my chest. I waved my hand in the beam, and heard a sigh of relief. \n\n\"Oh thank goodness,\" she giggled. \"I thought Rusty killed you! How are you feeling?\" \n\nThe woman walked in and sat on the edge of the bed, turning on the bedside lamp as she did. I was expecting Kat, but it wasn't her. \n\nThis woman was older. Not old, by any means, but old-er than Kat, who had appeared much younger, if my fuzzy memory was correct. This woman was equally attractive, in a more mature way, and every bit as top heavy, if not more so. I was able to see the family resemblance. \n\n\"Um, okay I guess,\" I answered. \"I've got a hell of a headache. What happened?\" \n\n\"I'll get you some aspirin, and then I'll answer your questions,\" she smiled, patting my hand. I watched her walk out. Her ass was a little wider than Kat's, but still nice, clad in tight jeans. She was back quickly, with a glass of water, and two tablets. \"Here you go.\" \n\nI tossed the pills in my mouth, and drank. She filled in the blanks. \n\n\"Do you remember meeting my daughter?\" she asked. \n\n\"Yes,\" I nodded, gingerly, as doing so hurt my head. \"Kat. You're her mother?\" \n\nYes, I am. Janine,\" she introduced herself and offered her hand. \n\n\"Colin,\" I said again. No horse kicked me this time. \n\n\"Yes, Kat told me, but I'm glad you remember,\" Janine nodded. \"What else do you remember?\"\n\nI remember your daughter has huge tits, just like yours, I thought, but didn't vocalize. \n\n\"Kat was brushing a horse,\" I said. \"It's a bit fuzzy after that.\" \n\n\"Yes, I imagine it is,\" she smiled. \"The horse was Rusty. He spooks easily. He kicked the fence rail, and you were in the path. When I heard Kat screaming for help and went outside, you were unconscious in the lane flat on your back. We were worried he really hurt you.\"\n\n\"What time is it?\" I asked and lifted my wrist again to look. \"Oh. That's why it didn't light up.\" The face of my watch was cracked, and the display blank. \n\n\"Rusty did a good job,\" Janine nodded. \"It's a little after eight. You've been out for over six hours. What brought you to us anyway?\" \n\n\"Oh yeah,\" I laughed, wincing at the pain when I did. \"Rusty knocked me out before I could tell Kat. I, um, I had a little car accident on the road, by the end of the driveway. More accurately, I hit a tree. Hard. My car is done, and so is my cell phone, so I was hoping to call for help from here.\" \n\n\"Hit a tree? Why?\" she asked, a smirk on her face. \"Did it jump out in front of you?\"\n\n\"No, but a goat did,\" I moaned. Janine rolled her eyes. \n\n\"Let me guess.... a little white goat, with one crooked horn?\" she asked. \n\n\"Yes! How did you know? Is he yours?\" I returned, surprised. \n\n\"Sort of. He's kind of a neighbourhood pet, or pest, depending on the day. His name's Oscar, and he wanders the whole area. He's adopted us,\" she answered. \"Kat will be glad you didn't hit him. She likes the little idiot.\" \n\n\"Kat will be glad you didn't hit who?\" I heard from the doorway, and looked past Janine's chest to see her lovely daughter, just entering the room. Yes. They were certainly related. \n\n\"Oscar,\" Janine answered. \"We have him to thank for Colin's visit. Tomorrow morning, we need to go down to the end of the driveway, and retrieve Colin's car. It's against a tree.\"\n\n\"Okay, Momma,\" Kat replied, now standing behind her mother. \"No problem.\" \n\n\"You're going to need a tow truck,\" I told them. \"It's wrecked. Just leave it there, and call me a taxi. I'll get out of your hair.\" I tried to sit up. \n\n\"Whoa, there, my friend. You just rest,\" Janine said, putting her hand on my chest. Her very strong hand. \"You're our guest now. After what Rusty did, I don't feel comfortable letting you go until I know you're alright. It's the least we can do, so you just lay back, and let us take care of you. I'll call whoever you want to let them know you're alright, if there's someone worried about you, but I won't call you a taxi until you can show me you're okay. Deal?\"\n\nHer tone told me that resistance to her will was going to be met with fierce determination. She was a strong woman, in every way possible.\n\n\"Okay,\" I sighed, laying back. \n\n\"Who do I need to call?\" she asked. \n\n\"No one, really. Nobody in this area who will be missing me for a while, and I don't have a schedule to keep,\" I replied. \n\n\"No wife at home?\" It was Kat, piping up from the back row. \n\n\"No. No wife. No girlfriend,\" I confirmed, and noticed a brief smile cross her face. If I had been paying attention to Janine, I might have seen her smile, too. \"Whose bed am I stealing, here?\" I asked, looking around the room, which looked too 'lived in' to be a guest room \n\n\"You're in my bed,\" Janine said. \n\n\"Where will you and your husband sleep?\" I asked, trying to get up again. \"Put me on the couch.\" Janine's hand was back, planting me firmly on the mattress. \n\n\"It's just Kat and myself here, so you stay put. We can sleep in her room until you're better. Now lay down and rest, or I'll tie you down.\" \n\nKat looked over her mother's shoulder, and nodded. She had such beautiful eyes, so soft, and caring, and huge, with long lashes. Those eyes were telling me to stop fighting, and just accept it. I was hurt. They were going to take care of me. End of discussion. \n\n\"Not necessary,\" I smiled. \"Interesting, but not necessary,\" I repeated, glancing at both of them. I wasn't hurt bad enough not to notice them. I wasn't hurt bad enough not to hear Janine say there were no men in their lives. \n\nI wasn't hurt bad enough not to think about those bodies, and what I'd like to do with them. \n\nJanine laughed, the innuendo not lost on her. \n\n\"Flirting? That's a good sign,\" she smiled, standing up. \"I think he's going to be fine.\" She turned, and walked out, while I tried not to stare at her ass. \n\nThat left me alone in the room with Kat, who was looking at me from a few feet away, standing with her hands clasped in front of her. Her chest didn't need any help to be noticed, but this position provided it anyway. \n\n\"I was very worried,\" she said softly, sitting on the edge of the bed, as her mother had. \"I should never have brought Rusty that close. I'm so sorry you got hurt.\" \n\n\"It was hardly your fault,\" I smiled, \"and I don't blame you. I don't even blame Rusty. He was just being a horse. Oscar, on the other hand....\" \n\n\"Yes,\" she giggled, her smile lighting up. \"He can be a problem, but he's quite the character when you get to know him. Sorry about your car.\" \n\n\"Again, not your fault, unless you planted the tree, and I have a hard time believing you're over a hundred years old,\" I probed. \n\n\"No,\" she smiled, \"I'm only nineteen. My great-great-great-grandfather planted the trees. This whole farm was his. Our family has lived here since he built this house.\"\n\n\"Your father?\" I asked. \n\n\"Killed in an accident when I was seven,\" she answered, sadness in her voice. \"It's been just Momma and me since then.\"\n\n\"The two of you run this whole place?\" \n\n\"Yes. Momma knows her stuff. She and Poppa ran it before me, and when he died, I learned to help real fast. We do pretty well,\" she smiled, proudly. \"We're not as advanced as other farms, but we like doing things the old ways. It's very hands-on. Great exercise.\" \n\nShe lifted an arm, and flexed her bicep. The muscle snapped to attention, and curled into a tight ball impressively. She had guns, on her arms as well as her chest, which I was having a difficult time keeping my eyes off of. Every breath she took stretched the thin cotton of her shirt tighter over the cantaloupe sized globes of her breasts. I could make out the lacey pattern of her bra, which was supporting those massive boobs nicely. She was something to behold. \n\n\"I'm gonna let you get some sleep now,\" she smiled, catching my eyes wandering south. She patted my arm and stood. \"I'm so glad you're not dead.\" A girlish giggle, and she walked slowly out, allowing me a good look at her ass, which filled her overall pants as well as her chest filled her shirt. The door closed behind her. \n\nOther than the damage to my car, which I'm sure would be covered by the insurance company eventually, this trip had gone from boring to promising. I was being nursed back to health by two beautiful, statuesque women, with abundant curves, in a household devoid of men for the last twelve years. \n\nThings were looking up. \n\nI might owe Oscar a debt of gratitude. \n\n ***\n\n Sleep was exactly what I needed, and when I woke up it was morning, and there was light coming in around the blinds. My head felt better, for the moment at least. I carefully sat up, and got out of bed. \n\nThe head-rush hit me like a wave of nausea, but I tried to remain standing, hoping it would pass. It did, and shortly thereafter, the room stopped spinning, letting me walk over to the closest window. I rolled the blind up. \n\nWow, the world was bright out there. It hurt my eyes. It hurt my head. I guess I wasn't quite as ready as I thought to get up. There was a chair by the window, and I crumpled into it. \n\nI was still sitting there, looking out through squinting eyelids, when I noticed a tractor come into view. It was Janine, and being literally dragged behind the huge machine was my car. It didn't look any better today than it had yesterday, when I left it against the tree. \n\nBehind the tractor was a big, red horse. Rusty, the reason my head hurt so much, had Kat on his back. No saddle, just Kat. \n\nMy eyes hurt, but what they saw was very soothing. And arousing. \n\nHorses don't walk smoothly, thank god. If they did, there would have been nothing to watch. \n\nLike Kat's big breasts, for example, jiggling wildly as he cantered along into clear view below my window. She was dressed as before, in a white t-shirt and overalls, but from up here I could see a bit more. The scooped neck of her shirt was pushed out by the volume of her chest, showing some nice cleavage that I hadn't seen yesterday, or might have if Rusty hadn't turned my lights out prematurely. \n\nThe younger generation version deftly dismounted, sticking the landing, and walking over to help her mother unhitch the block of scrap metal from behind her tractor. As she finished, she glanced up, and her smile lit up as she saw me watching. She waved, and grabbed Rusty's reins, walking him quickly into his corral. \n\nI heard footsteps on the stairs. Excited footsteps. Kat burst into the room, her chest heaving with her deep breaths. \n\n\"You're awake! You're up!\" she smiled, clapping her hands. \n\nI suddenly realized that I was in my underwear, and a t-shirt, and wondered how that had happened. Had Janine undressed me, or was it Kat? Oh well. No time for modesty now. \n\n\"Sort of,\" I groaned. \"I probably shouldn't be. The chair saved me.\"\n\n\"Well, let me help you, then,\" she said, stepping closer. I took her hand, which is about as far as I made it before hooves knocked me out. She pulled me to my feet, put her arm around my shoulders, and braced me against her body. \n\nOh. My. \n\nSo soft. \n\nSo big. \n\nSo.... \n\n\"I think I should use the bathroom while I'm up,\" I said softly. It was true. My bladder was bursting, but it had the added benefit of extending my opportunity to feel her body against mine. \n\n\"Okay. This way,\" she smiled steering me out the door and to the right. The bathroom was small, and old, but clean. She elbowed the light switch as we sidled through the door. \"Are you okay on your own?\" \n\nShe surprised me with that one. Dead serious, she was offering to help me pee. \n\nWhile I really wanted to introduce her to my penis at some point, I would rather not have it be for that reason. Besides, after feeling those big tits against me, having her handle my cock would probably result in an erection, which I couldn't pee through. I decided to decline her assistance inside the bathroom, but let her help me back to bed. \n\n\"Yes, thank you. I'll need you to get back to bed, and maybe even to stand up, so stay close,\" I smiled. She nodded, and backed out, closing the door behind her. \n\nA few minutes later, after I called her back in, she helped me up, and held me tight against the side of her huge breast all the way back into the bedroom. As she sat me down, and tucked me in again, she leaned over me. \n\nThere was that cleavage again, and I also noticed the two distinct bumps of her excited nipples, which the bib of her overalls couldn't hide. \n\nNice to know I wasn't the only one who felt it, as I had a serious semi going under the covers. I was pretty sure she saw it, before she buried it under blankets. \n\n\"As long as you're awake, you might want to eat something. Are you hungry?\" she asked. Her smile was lovely, and her eyes were so kind, as well as sexy. She reminded me of someone, but I couldn't put my finger on exactly who. Maybe the concussion was keeping me from figuring it out, and it would come to me soon. \n\n\"Yes, actually. I could eat. My stomach doesn't feel so nauseous today,\" I replied. \"Nothing too heavy, or rich.\" \n\n\"Okay, I'll cancel the souffl\u00e9,\" she giggled, and turned to leave. \"Back in a few minutes.\" \n\nI laid back, relaxing while I waited. My imagination took over, and my mind was filled with visualizations of her curvaceous body, without the overalls, t-shirt, and whatever she was wearing under it that held those huge tits up so deliciously. My dick responded, growing harder, and threatening to tear my underwear asunder. \n\nWhen she returned, she was not naked, much to my disappointment, having not shed her clothes and cooked for me in the nude, as I'd been dreaming. \n\n\"Here you go, Colin,\" she smiled, placing the plate on my lap. Actually, she put it right on my erection, so it didn't balance very well, and she caught it, moving it up to safer ground. Of course, then the plate just held the covers closer to my bulging crotch, making it more obvious. I saw the knowing smirk at the corners of her mouth. \n\nUp to this point, I'm sure any sexual content in our relationship had been purely a product of my libido and imagination. That changed, when she became a more active participant, bending over and reaching around me to stack and fluff up my pillows into a more upright position. \n\nHave a busty woman do that for you in your own head, and see what part of her anatomy is right in your face. Got it? \n\nYes, I was mere inches away from that fabulous chest of hers, which jiggled nicely as she went about her task. I groaned softly, and my cock twitched. \n\n\"There. That's better,\" she said quietly, sitting on the edge of the bed. She picked up the toasted English muffin in her surprisingly delicate yet strong hand, and poised to feed me. \"Not too much butter. You do look better today. For one thing, you're awake.\" \n\nI bit the muffin. It was good, but my thoughts were on another muffin, between her legs, and the melons on her chest, which were still agonizingly close and nicely displayed. The temptation to ogle her was strong, but I managed to keep it down to a few quick glances. \n\n\"I can do this,\" I told her. \"I'm sure you have things to do today. Doesn't your mother need help?\" \n\n\"She's way out by the fence line. I've got the barn shift today, closer to the house,\" she explained. \"That includes you, as long as you're here. Tomorrow, Momma will be taking care of you, and I'll be on the tractor. It's the way we always do it.\" \n\nThe English muffins were gone, and she leaned closer, wiping away crumbs from my lips with a napkin. I usually made a lousy patient when I was sick, but for Kat, I would be happy to accept her attention. I gave her young, beautiful face a closer inspection, and the finally dawned on me who she reminded me of. ",
        "Jordan Carver. \n\nHer hair was darker, but there was something there that definitely resembled the glamour model. \n\nOther than the two massive breasts, that is. Maybe they were the biggest resemblance, no pun intended. \n\n ***\n\n I'm not sure what actually woke me. Maybe it was the sounds, but they were quite subtle, and quiet. Very soft moans, and wet, squishy noises. Even after I heard them, it was difficult to pick them out of the background noise of nighttime countryside crickets, especially since my ears were still ringing, thanks to Rusty. \n\nMaybe it was the scent. There is was, the faint, musky aroma of female arousal. More distinctive than the sounds, it stood out against the backdrop of rural odours. \n\nWhichever one woke me, I opened my eyes slowly. On my side, and facing away from the ambient light of the window, my face was in solid shadow, so I'm sure she couldn't see that I was watching her. Still, whether she knew it or not, I was watching, and she was quite visible to my eyes. \n\nDetails don't translate well in the dark, and her face was partly obscured by shadow, so I wasn't sure which of my female caretakers was sitting in the chair, one leg draped over the arm, legs spread wide. I couldn't tell which buxom beauty was in my room, in the dark, watching me sleep. \n\nI had no idea which woman, long without male companionship, was masturbating quietly, not ten feet from me. \n\nI suppose it really didn't matter, did it? Whether it was the voluptuous, strikingly beautiful Kat, or the equally busty, more experienced Janine, one of the lovely women was inspired enough by my presence to use her fingers on her clit and pussy. Not only was she fantasizing about me, she was boldly doing it in the same room. \n\nI watched her intently, looking for clues to her identity. Dressed in only a t-shirt, her big breasts shook rhythmically in time to the movements of her hand. Barely audible moans of enjoyment wafted across the room to my ears. Neither her boobs, nor her soft voice, helped to distinguish her. Whoever she was, the wet sounds spoke volumes about her excitement level. \n\nMy cock was rock hard, and I managed to get a hand down onto it without letting her know I was awake. If she was going get herself off, I could play along. I silently and slowly eased my shorts down, freeing my rampant staff. It was time to give her something to watch. \n\nI rolled onto my back, and kicked at the covers, pretending to be overheated. The covers were now down below my waist, but just high enough to hide my flagpole. One more shift in position, and I felt cool air on my cock. I made sure my head was turned to the side, so my eyes were still in the shadows. \n\n\"Oh god!\" I heard, a little louder than her previous moans. When I carefully cracked my eyes open again, she was furiously fingering herself. Her free hand was tugging at her nipples through her shirt, and squeezing her breasts desperately. If it was possible for my cock to get harder without bursting open, I swear it did, as I watched her answer her body's call for pleasure. \n\nShe gasped sharply, and stifled her sounds with her hand, while I watched her body spasm violently through the waves of orgasmic bliss. She melted back in the chair as they passed. \n\nI could feel my pulse racing through my cock. I wanted to grab it, and jerk it like a madman. Better yet, I wanted to get up, kneel before her in the chair, and jam my cock deep into her pussy, but doing so would tell her I had been watching. I continued to watch her massive chest heave with her breathing, trying to decide whether I should care enough about being caught to keep from fucking her, when she made it a moot point, silently rising to her feet, and gliding out the door, which clicked closed behind her.... \n\n The click woke me, and I looked around the room. \n\nNothing. I was alone. \n\nI sniffed the cool night air. \n\nNope. No female arousal detected. It must have been a dream, indicating my subconscious opinion of this whole situation. There were two gorgeous, extremely well built women in this house, and I would eagerly welcome either one of them beside me. \n\nUnder me would be even better.\n\n ***\n\n This was my second day at the farm, and I was feeling much better. Despite the attraction of having Kat continue to help me to the bathroom, allowing me to press against her soft but supportive body, I made the trip on my own this time. I was just coming out of the bathroom, when Janine appeared at the top of the stairs. \n\n\"I thought I heard you moving around up here,\" she smiled. I was still wandering around a virtual stranger's house in my underwear, and I saw her eyes flit south, checking out my package. \"I should get you a robe or something, shouldn't I?\" she giggled, and popped into her/my room. She returned with a thick, terrycloth bathrobe. \"Here. Put this on, and I'll help you down to the kitchen. It's time you had something more substantial to eat.\" \n\n\"I was picturing myself in a lacey women's robe,\" I laughed, wrapping myself in the soft fabric. It was a little small, but not too bad. \n\n\"Do I look like a lacey kind of girl to you?\" she giggled, posing with her hand on her hip. \n\n\"No, I don't suppose you do,\" I smiled, cinching the sash tight. \"Lead the way.\" \n\n\"Okay. You.... both hands on the rails. If you're going to fall, I'll catch you,\" she said seriously, backing down the stairs ahead of me. \n\nI believed her. She was still feminine, in a slightly hardened, weathered sort of way, and I bet she carried me up these stairs on her own. \n\nShe was clad in denim today, with tight jeans on her lower half, and a faded denim shirt covering the bountiful curves of her chest. Well, mostly covering them, as the top three snaps of the shirt were undone, giving me something to look at on the way down. Kat obviously came by her cleavage naturally, as her mother had an equally alluring crease to show off, and breasts that appeared nearly as big. \n\n\"That's it. Almost there,\" Janine smiled, watching my feet, which allowed me to watch her chest. Or so I thought. I looked up to her face and saw her looking right back at me, a little grin on her face. \n\n\"Sorry,\" I blushed, caught in the act. \n\n\"Not necessary,\" she smiled, as my feet reached the last step. \"Interesting, but not necessary.\" \n\nI giggled as she mimicked my words from the first night. She was flirting back now. I felt the blood rushing to my dick again. \n\n\"Eggs and bacon sound good?\" she asked, turning away to lead toward the kitchen. Her ass really was delicious, covered in denim that seemed tighter than the ones she wore before. Maybe she had dressed for effect today. It was working. \n\n\"Yes. Thank you so much,\" I replied, following behind her behind. She wasted no time in beginning, reaching into the refrigerator to come out with the fixings, and giving me more to whet my appetite for things other than eggs and bacon. \n\n\"Home grown?\" I asked, taking a seat at the table. \n\n\"The eggs.... Yes,\" she smiled, firing up the stove. \"The bacon is store bought. We don't have pigs, and I'm sure Kat would have issues with eating someone she knew. Coffee?\" \n\n\"Yes, please,\" I answered, and watched her pour a big cup. She reached across the table to pass it to me, giving me an even better peek down her shirt. Mmmmm. \n\nWe chatted about various innocuous subjects while she cooked. The weather, her husband, my lack of significant female companionship, Kat's plans for the future. Come to think of it, the subjects weren't so innocuous after all, and perhaps neither was her interest. \n\n\"For your dining pleasure, sir,\" she smiled placing the plate before me. She leaned across again, and I was treated to even more of her luscious chest on display, as another snap popped open under the weight of her heavy breasts. \"Oops!\" she giggled, but made no move to cover up. Her bra was black, and there was lace across the top of the cups. \n\n\"I stand corrected. You are a lacey girl, after all,\" I smiled in response, causing a laugh from her that shook those big boobs happily. \n\n\"No point in denying the obvious,\" she winked, finally standing up straight. \"The women in my family all have big tits. I hardly even notice them anymore.\" \n\nWell I do, I thought. And I've noticed Kat's lovely pair as well. \n\nThe plate in front of me did little to change the subject. Two eggs, sunny-side-up, sat looking very much like two breasts with nicely centred nipples, and the bacon formed a narrow waist below them. Maybe she was still flirting, or maybe it was my imagination. \n\nJanine sat across from me, sipping her coffee quietly, her blouse still open as before. She really was a very attractive woman, and my cock agreed, pointing skyward under the table. Her eyes were on me, and my eyes were on her, in various locations. I had a feeling she was enjoying herself. Perhaps she missed male attention. \n\nPerhaps I could be of service to ease that deficiency. \n\nPerhaps I should remember that I wasn't quite ready for that yet, as my head was feeling a little fuzzy from being up this long. \n\n\"I think we'd better get you back to bed,\" she said softly, as I finished my meal. \"You're looking a little bit unsteady.\"\n\n\"I think you're right,\" I nodded, and let her help me up. \n\nShe felt as soft and enticing as Kat had, bracing me with her body on the way up the stairs. The robe fell open, and I'm sure she had ample opportunities to check out my bulging crotch along the way. The concussion made my head spin, but the other head was fully functional, and he was telling her what he thought of her body. \n\nWe made it into the bedroom, and she unwrapped my robe, pausing to take in the full view before tucking me in, which involved bending over from the waist, and giving me yet another look at her massive breasts. The bra cradled those globes as they hung, fueling my dreams for the next few hours. \n\n\"You rest. I'll check on you later,\" she smiled, patting my chest, and smoothing the covers over me with her hands, which made a quick, gentle pass over the hard swelling below my waist. \n\n\"Oh yeah, I'll check on you, alright,\" she breathed as she turned away, so quietly I didn't even hear it. \n\n ***\n\n A hand gently pressed against my forehead, waking me. \n\nIt was Kat, back from her foray into the fields today, and looking at me with a concerned smile. She was still wearing her hat, a straw cowboy version that had been reshaped a hundred times, and now complimented her rustic look perfectly. If it was possible to make her even sexier, the hat did so. \n\n\"How are you feeling? Momma said you were up today,\" she asked softly. \n\n\"Getting better. The ringing in my ears has stopped, and I'm a little steadier on my feet. How was your day?\" I smiled, sitting up with relatively little struggle. She waited for me to settle before answering. \n\n\"Just another day on the farm,\" she giggled. \n\n\"Why 'Kat'?\" I asked, feeling clear enough to ask the question that had been in my head for two days. \"Short for Katherine? Kathleen?\" \n\n\"Katerina, actually,\" she blushed, as though the decidedly feminine name embarrassed her. \"Katerina Louise Archer. It was my great-grandmother's name.\"\n\n\"Katerina,\" I repeated. \"It suits you. A beautiful name for a beautiful woman.\" \n\nShe tipped her hat back on her head. This blush was clearly for the compliment, which may have been a bit over the top, but was still true. She was beautiful. In any city, she'd have suitors lined up around the block, fawning over her. Here on the farm, she only had Oscar. \n\nAnd me, of course. For a little while longer. \n\n\"Thank you,\" she smiled. \"Momma always says I'm beautiful, but she's Momma, and she's supposed to say that. It's nice to hear it from someone else.\" She touched my arm. \"I'd better go see if I can help with dinner. I'll come get you when it's ready.\" \n\nShe paused on her way out to look back at me once more, standing in profile. Her breasts were truly huge, projecting well in front of her. My eyes lingered on them. \n\n\"Thank you,\" she said again, and walked out. \n\nYou're welcome, and thank you, I thought, shifting in bed to make room for the erection that was rapidly crowding my underwear. \n\nThat crowding had eased by the time Kat returned. She had released her hair from its ponytail, and brushed it out, which made her look even sexier in my eyes. She picked up the robe, and held it for me to put on. \n\nI took my time, giving her ample chances to take a peek at my crotch, should she wish to do so. \n\nShe was the one backing down the stairs in front of me this time, watching my feet while I was watching her boobs. We made it down without incident, although I briefly thought about intentionally taking a header into those soft cushions. \n\nI was soon seated at the table, while Janine flitted about, completing her preparations. Kat stepped into the fray to help, leaving me to observe the ballet. \n\nIt was a ballet not without hazards, and a collision between the ladies left Kat with a blot of gravy on the bib of her overalls. \n\n\"Sorry, Momma,\" Kat laughed, spinning out of the way on her way to deliver items to the table. She greeted me with a smile on each trip back and forth across the small kitchen. It didn't take long for the two of them to finalize things, and take their seats. \n\nKat was looking down at the gravy on the front panel of her overalls, and just shrugged, un-clipping the straps. The bib fell away, hiding the stain, but leaving me with much more interesting things to occupy my attention, besides the contents of my plate. Without the obstruction, her breasts looked even bigger. Her white shirt was stretched tight across the huge, rounded globes, leaving little to debate about its contents. Her bra was lacey, and quite sexy. I found myself hoping she was a sloppy eater. \n\nAlas, she was not, and I found myself stealing glances at Kat's chest while enjoying a very tasty and hearty meal. Janine, at the other end of the table, was giving me something to look at as well, with her shirt gaping at the top, forced open by her own abundant breasts. \n\nThe dinner conversation was as good as the meal, and I was feeling much better. My head was clear, and I didn't feel the fatigue that had been ever present since the meeting with Rusty's hooves. Maybe I had turned the corner. \n\nOf course, I didn't want to recover too quickly, did I? I had been getting vibes from both Janine and Kat, and didn't want to go anywhere until I knew what those vibes were saying. \n\n ***\n\n I woke up to yet another sunny day. I felt quite good, and got up on my own, going to the bathroom. I looked at myself in the mirror. \n\n\"Good god. I look like hell,\" I told my reflection. It was true. It had been three days since I had shaved, or had a shower. I'm sure I smelled just lovely. \n\nThis simply wouldn't do. How was I supposed to attract the ladies when I smelled and looked like something that lived in their barn? \n\nI stripped, and started the shower, stepping under the warm spray as soon as it reached the desired temperature. I found the razor on the ledge of the tub to be a bit dulled by the leg hair of two women, but managed to use it to scrape away my beard without drawing blood. The shampoo was a bit on the girly side, but it cleaned my hair, and made me smell a whole lot better. \n\nThe door burst open, startling me. I instinctively covered my nudity, despite the fact that the sliding glass doors on the tub were frosted. \n\n\"Colin! Are you trying to get me in trouble?\" Kat said, flustered. She was trying to look away, but needed to be in the room to talk. \"You could slip and fall, or pass out. Momma will kill me if you get hurt on my watch!\" \n\n\"I'm fine, Kat,\" I laughed, relaxing slightly. \"I felt much better, and just needed to get clean. Really, I'm okay.\" \n\n\"Be that as it may,\" she giggled, still trying not to peek at me too much. The water rendered the frosted glass more transparent, and she may have been able to see more than I thought. \"I would still rather you told me you were doing it. For safety reasons, of course,\" she clarified, lest I think she was interested in me for personal reasons. \n\n\"Of course,\" I nodded. \"Well, I do feel safer with you here. Thank you for your concern, Kat.\"\n\nI was looking at her as she turned to face me. \n\n\"You're welcome, Colin,\" she smiled, her gaze on my face, visible above the frosted portion of the glass. Her eyes dropped briefly, and I saw her expression change to one of surprise, and excitement, before she spun to face away. \"I, um, I'll be right here, if you want me. I mean.... need me.... if you need my help,\" she babbled, flustered again. \n\nI smiled. Want and need. Oh yes, I both wanted and needed her. Perhaps a slight nudge might help. \n\n\"Kat? Could you pass me my underwear? I'll wash them in here. They're all I have to wear,\" I suggested. Her hand reached over the glass, and dropped my shorts, then my shirt. She took her position again, facing outward, like a security guard. \n\nI did my laundry, rinsing my jockey shorts and t-shirt, humming happily. I stared at her succulent ass, and also at the angled profile reflected in the mirror. Being naked within such close proximity to her beauty was making me hard. \n\n\"Um, my.... Your Mom's robe, is still in the bedroom. Can you? Please?\" I asked, turning off the water. \n\n\"Oh yes, of course,\" she sighed, and raced off. \n\nI took advantage of her absence to grab a towel, and was just wrapping it around my waist when she returned, narrowly missing the whole show. She looked a little disappointed as she handed me the robe, but still saw the bulge in the towel before she turned her back again. \n\nI dried off with a second towel, and dropped the first one as I wrapped the robe in place. Finally decent, I tapped her on the shoulder. \n\n\"Thanks Kat. Lead the way,\" I smiled. \n\nShe pivoted aside, and gestured with her hand, smiling broadly. She followed me, shooing me along, while giggling playfully. Once I was in my room, she crossed her arms across her huge chest, and tapped her foot, telling me in a not-so-subtle way that I was to stay in bed. I started to drop the robe, then remembered I was naked under it. \n\n\"Um....\" I laughed, gesturing in a circle with my finger. \n\n\"Right,\" she smiled, and turned away, letting me get into bed. \"Done?\" \n\n\"Yes Ma'am,\" I nodded, tucking under the sheets. \n\n\"Good. I'll hang up your laundry,\" she giggled, \"and you stay put. I'm taking this with me,\" she winked, snatching the robe away. \"It's for your own good.\" \n\n\"Okay warden,\" I smiled. \n\n\"I'll get you some bread and water, and be back soon,\" she smiled, playing along. \n\nI sat there, twiddling my thumbs, and giving my cock the occasional stroke, waiting for her return. I was wide awake, so the time passed more slowly than while I was still fuzzy from the concussion. At last, I heard footsteps climbing the stairs, and Kat appeared in the doorway. \n\n\"Here you go,\" she smiled, gliding in quietly, and sitting on the edge of the bed. \"Just something light to tide you over until lunch. The jam is fresh, home made by Momma.\" \n\nI tried to slide up in the bed, so I could sit up, but in so doing, I jostled her arm, and one of the jam-slathered muffins escaped from the plate, landing on my chest. Landing, as jam-slathered toast has a tendency to do, sticky-side down. \n\n\"Oops!\" she giggled. \n\n\"That's not my mouth,\" I chuckled. \"My mouth is up here.\" \n\n\"Yes, I know,\" she smiled putting the plate aside. She reached out with her soft hand, and plucked the gooey item away, leaving a blob of fruit preserves on my chest. I scooped up a finger full and licked it clean. \n\n\"Mmmmm, that's delicious,\" I smiled, scooping up some more. \"Want some?\" I offered. \n\nIt wasn't intended as an overtly sexual comment. Perhaps a mild flirt, but little more than that. It was Kat that turned it into our opening act. ",
        "I'm not sure why she chose then to become an active participant, but I'm glad she did. \n\nShe grabbed my hand, opened her mouth, and enveloped my jam-covered finger with her warm, wet lips. My mouth hung open, as she slid the digit in and out, sucking gently, while using her tongue to clean it up. \n\n\"Ohhhh, Kat,\" I moaned softly, squirming in place, while she continued to blow my finger, gazing into my eyes. She pulled back, and my finger popped as it left her mouth. She grinned, and leaned closer, using her tongue on the remaining residue on my chest. \n\n\"Ohhhhhhhhhhhhhhh, Kat,\" I repeated, laying back and enjoying the attention. My hands caressed her hair, neck, and upper back. Her body was very firm, and I wanted more of it. \n\nShe finished her cleanup, and lifted her head, looking into my eyes again. Her lips were inches from mine, her breathing slightly faster than normal, those huge, dark eyes searching in mine for any indication that I was feeling what she was. \n\nI gripped her hair, and pulled her tight, kissing those plump, bee-stung lips hard, and welcoming her tongue as she returned the urgency. As first kisses go, it was epic, certainly my most memorable ever. I hoped it was only the first of many pleasant memories involving Kat. We made out for several minutes, trading moans of enjoyment as well as saliva. She tasted lovely. Perhaps the jam. Perhaps just Kat. \n\nAt last, she came up for air, and sat back, looking at me with those doe eyes. She stood, and for a brief second, I thought our fun was over, until I heard the metallic click of her un-clipping her straps. \n\nI watched, entranced, as she unbuttoned the metal buttons at each hip, and let her overalls fall to the floor. Her ass was perfect, toned and hard, barely covered by a pair of pink panties. The legs below were long, lean, and surprisingly tanned, considering how much time she spent outside working. Above, her waist would make wasps envious, having been camouflaged by the overalls. \n\nShe looked down past her huge breasts at me, and peeled her t-shirt off over her head, revealing the lacey white bra that supported her rack. Her eyes watched mine wander across those massive globes, and she reached behind her to unfasten the bra. \n\n\"Are you ready?\" she smiled, knowing I had been praying for this moment since the first time I laid eyes on her. Me, and every other man on the planet. I nodded. \n\nThe bra fell quietly to the floor. My jaw made much more noise, crashing down. My god! They're incredible! \n\nFirst, her breasts were big, and perfectly formed, with that rounded, natural teardrop shape really busty women have. Second, they didn't have much sag at all, despite being two handfuls each. Third, her areolas were about four inches across, dusty rose pink in colour, and surrounded nipples that were thick, stubby, and slightly darker. \n\nThe final attraction came from her tan lines, which I personally find very sexy. She surprised me by not having a 'farmer's tan', instead showing signs of a more conventional, bikini babe look. She saw the confused look on my face, and explained. \n\n\"You're wondering about my tan, aren't you? Well, I don't always wear what I've been wearing while you're here. We had guests earlier, the day you arrived, and you caught me before I could strip down. I usually only wear my bra on the tractor. Momma does too. Sometimes she works naked, even,\" Kat teased me, rocking her shoulders side to side. Her breasts swung deliciously, and my imagination pictured Janine bouncing across the fields, stark naked on the tractor. \n\nA playful grin crossed her face, and she picked up two of the english muffins from the plate, slapping them on her nipples. When she removed them, jam clung in place, glazing her areolas for my dining pleasure. \n\n\"Oh my. Look at the mess I've made,\" she giggled. \"If only someone were here to help me clean it up.\" She grabbed her left breast with both hands, and lifted it toward her mouth, extending her tongue toward the nipple that was standing up amid the fruity goop. \n\n\"Oh god, please, let me?\" I whined, like a needy child. \"I'm begging you. Please?\" I knew she was yanking my chain, but wasn't too proud to play along. \n\n\"Well, since you said 'please', how can I refuse?\" she smiled, moving closer, and pressing her sticky breast to my lips. While I suckled her, she eased onto the bed, straddling my crotch. \n\nIt took me several minutes to remove the jam residue from her left breast, and I moved on with her left nipple standing tall and aroused. She moaned as I latched onto the right side. There was a very large tent in the sheets behind her, and her left hand sought it out. She felt my pole through the covers. \n\n\"Jesus, Colin! Where did you get this?\" she hissed, grabbing my shaft firmly. \n\n\"It came with the hands and feet,\" I replied, briefly releasing her nipple from my lips. \"Where'd you get these?\" \n\n\"Momma, Gramma, and great Gramma,\" she smiled, \"to name a few. The Archer women have always been blessed.\" \n\nWell, I'd love to attend your family reunion, I thought. Busty women have always been a particular favourite of mine. \n\nI still had my lips moored on her right breast, working over her nipple with suction and my tongue. I was supposed to be cleaning up the jam, but truthfully, that mission had been accomplished several minutes ago. Call me selfish, but I was indulging my own oral compulsion. I just love suckling big breasts. \n\nI would say Kat was enjoying it, as well, as she was stroking my hair and moaning softly. Her hand was still groping my cock through the covers, until she decided it needed a more personal inspection, and pulled away. My lips popped as her nipple was yanked unwillingly from their grasp. \n\n\"My turn,\" she smiled, rolling on her hip, and sliding lower on the bed. With a slow tug, she pulled the sheets down, until my cock was in view. \"Mmmmm, very nice, Colin.\"\n\n\"You want some jam?\" I laughed, but she was focused, and positioning herself to inhale my shaft. \n\n\"Don't need it,\" she finally giggled. \"This one comes pre-iced.\" \n\nShe was right. The excitement of the morning, her proximity, and her bare breasts had made me hard quite a while ago, and now my cock was covered with leaking pre-cum. She grasped the base of my dick, and took a deep sniff, smiling at the scent. Her mouth opened, and engulfed the head. \n\n\"Oh shit!\" I gasped, as her tongue swirled around the head, collecting my slippery juices. \"Mmmmm, Kat, that's so fucking good. Suck my cock, honey!\" \n\nA few days ago, just before I reached out to shake her hand, I had briefly hoped for a moment like this. I had taken in her exceptional features, her fabulous curves, and her radiant smile, and wondered if I might sometime get to sample more than the sensation of her hand in mine. \n\nThen Rusty changed everything. \n\nNow, I was beginning to understand that my usually fertile imagination was totally inadequate in this case. My view from above showed those pretty pink lips stretched around my cock, and her huge doe eyes staring into mine. In the background were her magnificent breasts, hanging, but pressed between her chest and the bed. That cleavage beckoned, suggesting a titty-fuck might be very enjoyable. \n\nAfter I have the rest of her, of course. \n\nKat's moans vibrated down my shaft, as she worked it in and out of her mouth, with her hand stroking smoothly. Her lips reached further down, nearing the base of my cock. She may be young, but she certainly had skills. Oh boy, did she ever. \n\nI hadn't done any manual release of tension since I arrived on the farm, and my last time prior to that had been over a week before, with a petite little redheaded waitress. In other words, I was very backed up, and about to unleash a tsunami into her mouth. \n\n\"Kat, I feel it only fair to warn you,\" I whispered, trying to hold back the surge. It was an exercise in futility, as she sucked harder, and stroked faster, obviously willing to risk drowning in my cum. \"OH FUCK! Here it CUMS!\" \n\nDays of prolonged excitement and sexual thoughts came, if you'll pardon the pun, to an explosive end. Kat snorted in surprise, then moaned at the warm mouthful of semen I was dispensing, and gulped it down. I was spurting slightly faster than she was swallowing, so leaks began to appear at the corners of her stretched lips, and little streams of cum trickled out slowly. \n\nKat slurped loudly, sucking up the escaping sperm like spaghetti off a fork. I was done, and she licked my softening dick clean with her very agile tongue. \n\n\"Mmmmm mmmmm,\" she smiled, licking her lips. \"Very tasty. Did you enjoy that?\" \n\n\"Oh god, yes!\" I babbled. \"It was just, oh, so fucking good! May I extend the same courtesy to you, darling?\" The term of endearment seemed appropriate, given the circumstances. I rolled onto my knees. \n\nKat laid back and sighed, watching my hands drag her little pink panties off, up her outstretched legs. Once they were tossed aside, those long legs parted smoothly, revealing her pussy to my eyes. \n\nIt seems that most of the women I'd been with lately had been hairless in their nether regions. Shaved or waxed, they had all been bald, which I like. I couldn't actually remember that last time I saw pubic hair. Until now. \n\nKat's kitty was neatly trimmed on the sides, but a fluffy bush of light brown curls resided on top. It was then that I realized that her armpits were likewise fluffy, if somewhat shorter. \n\nWhen I said earlier that I liked my women shaved, I didn't mean to suggest that I only liked my women shaved. In fact, I thought she looked fabulous, but I didn't say it fast enough. \n\n\"You're used to shaved pussy, aren't you?\" she asked, starting to close her thighs. I grabbed them and stopped her. \n\n\"No! Well, yes, but don't worry,\" I smiled, caressing the smooth skin of her strong thighs. \"Yes, I have seen a lot of bald pussies, but it's not necessarily needed.\" \n\n\"I can shave, if you like. I shave my legs, but leaving a little bush is more comfortable,\" she explained. \n\n\"Kat.... No. I like it. It's refreshing, amid all the women who wax themselves to within an inch of their lives, to find someone who likes them self enough to be natural,\" I replied, meaning every word. \"You're fabulous, just as you are.\" \n\n\"Fabulous? Really? Me?\" she giggled, blushing at the compliment, but not her nudity. \"Thank you, Colin. Please, continue.\" \n\n\"Absolutely!\" I smiled, as she relaxed again, stretching her long, luscious legs wide open. I inspected her closely, inhaling her scent, which was quite arousing in itself. Her pubes were not a wild, untended thicket of tangled curls. Rather more like neatly trimmed ground cover, shaped and trained, it didn't hide her sexy slit, but framed it instead. \n\nAnd it was definitely worth framing. As someone once said, I don't know much about art, but I know what I like.... and this, I like. \n\nHer inner lips were swollen, and pouty, pushing open through the protection of her outer labia, and peeking out of the sparse bush that surrounded them. At the top, the hood of her clit was retracted, letting the little button poke out, evidence of her excitement. Tiny drops of pussy dew clung to the curls closest to her vestibule. \n\n\"Oh god, yes!\" she gasped, as I stopped inspecting her, and kissed her clit softly. My tongue went on autopilot, and began to explore her juicy depths, treating me to a taste of her tart, yet sweet gravy. \"Oh Colin, that's so nice. I love a nice, gentle licking. It's so relaxing, and erotic. Don't stop.\" \n\nStop? Why would I stop? I just got here, and after I eat this delicious, delectable little kitty of yours, and make you scream, I plan to plug my cock into it and fuck you, as I've been dreaming of fucking you, for the last few days. I'm going to make this sensational body of yours feel things you may never have felt in your young life, and claim it as my own. Stop? Hell no! I'm just getting started. \n\nMy tongue fluttered across her lips, dipping inside often to draw out more of her syrupy juices. Her bush got wetter and wetter, smearing her slippery lubricants across my face. I added a finger or two, sliding them deep inside her while I concentrated on her clit for a while. \n\nKat purred and squirmed her hips, fucking herself on my probing fingers while I licked her clit like it was an all-day sucker. Appropriate, as I would have gladly spent the entire day here between her legs, slurping up her juices. Her bushy pubes began to take on the appearance of a soggy chia-pet. \n\nThere was plenty for me to explore down here. Kat's cute little moans rose and fell depending on where I was currently browsing. Her clit and ass topped the list, of course, and caused the most interesting reactions. \n\n\"Oh Colin, yes! Lick my cunt! Your tongue is so good! And I Love it when you play with my asshole! More! More, more, more!\"\n\nMore sounds great to me. I buried my face deeper in her juiciness, burrowing my tongue as far as I could reach. Kat helped, grabbing my head with both hands and pulling, then clamping her thighs tight. \n\nThose thighs muffled her screams, from my ears at least, and I held on while she bucked and twisted through her orgasm. A snorkel was sounding like a very good idea, because she was gushing wet, and everything I breathe with was trapped inside her pussy for the duration of her pleasure. \n\nHer thighs were very strong. Just my luck. Survive getting kicked by a horse, only to have my head pop like a ripe melon between her legs while she was in the throes of ecstasy. Just in time, she relaxed, releasing me to gasp for air. She was doing the same, and we both caught our breath in relative silence. \n\n\"Oh god, that was good,\" she smiled, glancing down at my refreshed erection. \"Wanna fuck me, now?\" she asked. \n\n\"Absolutely,\" I nodded, as she rolled off the bed. \n\n\"Sit here, across the corner,\" she directed, pointing me into position. \"Spread a little wider.... that's it. Now lean back a bit, on your hands. Good. Stay there.\" My stiff cock stood up, like a pike.... the spear, not the fish. \n\nKat sat between my legs, on the corner of the mattress, facing me. She braced her hands on my knees behind her, and carefully arranged her legs either side of my body. Once stabilized, she planted her feet, and lifted her hips higher, scooting forward, and collecting the head of my cock into her gaping vestibule. She wriggled closer, slowly impaling herself on my pole, driving it deeper and deeper into her juicy cunt. \n\nI'm sure there's a name for this position. Somewhere, someone has christened this as something other than 'just fucking incredible', but that's what I called it, as she finally seated her pussy fully on my cock. With her arms behind her, as mine were, her huge tits were right there, pulled apart, and jiggling independently as she ground her vagina over my shaft. Her eyes were on mine, and mine were torn between hers, her unbelievable tits, and the sight of her pussy stretched wide open by my thickness. \n\n\"Oh, yeah, that's it,\" she moaned, working her hips back and forth, sawing her cunt front to back, and crushing her clit between us. \"I love that big cock, deep inside me. It's so hot! You like?\" \n\nThis was a first for me. I'd been with a few very athletic, adventurous lovers over the years, but none had pulled this particular position out of their repertoire. It was very easy on me, as I was just sitting there, and she was doing all the work. The strokes were quite short, but balls deep. It was unique, and felt very good. Of course, putting her big, quivering boobs right in front of me, topped with deliciously thick and erect nipples, it was right in my wheelhouse. I liked. \n\n\"Where,\" I grinned, \"did you learn this one?\" \n\n\"Porn!\" she gasped, grinding herself harder. \"Lots and lots of porn! God! I'm gonna cum! Oh FUCK! I'M GONNA CUM!\" \n\nHer eyes blazed as her hands desperately grabbed my shoulders, one at a time, and she sawed herself furiously, making those massive tits shudder against my chest. Her face contorted into a snarl of ecstasy, eyes shut tight, and she lolled her head back, screaming in joy. \n\n\"Ohhhhhhhhhhhhhhh Yessssssssssssssssssssss! Oh yes! Oh! Oh! Oh yes!\" \n\nHer body twitched, and she lost her grip, nearly falling over, but I caught her wrist and pulled her back up. Her body was pretty limp, breathing hard and moaning softly. I guess she liked the position, too. \n\nHer arms wrapped around my neck, allowing me to grab her ass with both hands, and carefully stand up, still deep in her juicy sheath. The pressure on her clit made her moan louder, until I laid her on her back on the bed. She relaxed, and wilted, her arms dropping to her sides. \n\n\"Fuck me,\" she breathed, barely audible. \"Go ahead, fuck me.\" \n\nIt will be my distinct pleasure. \n\nI pulled back, and drove my cock back into her smoothly, causing a groan of acknowledgement from her. She was wrecked by her orgasm, but still with me. I happily established a brisk rhythm of long thrusts, slamming into her pussy deep and hard. Kat's moans grew louder, and she wrapped her legs high around my waist, become an active participant, if still a bit woozy. \n\n\"That's it Colin! Yeah! Fuck my cunt! Jam that big fucking piece of meat into me! I love it! Keep fucking me! Keep fucking me!\" \n\n\"Ahem!\" I heard from the doorway, and cringed. \"Colin! What the fuck are you doing to my daughter?\" I froze. \n\nThe answer was pretty obvious, as I was on top of Kat, with my cock buried balls deep in her succulent pussy. I didn't even answer, nor did I pull out. \n\n\"And you, young lady,\" Janine continued, stepping closer, while Kat looked up at me with an expression of shame. Janine's feet appeared in the edge of my vision, stopping beside the bed. \n\n\"I thought we decided that I was going to have first dibs on him,\" she continued. \"You just couldn't keep your grubby paws off him, could you?\" \n\n\"No Momma,\" Kat said quietly. \"I'm sorry, Momma.\" \n\nI was a little behind. My mind was trying to make sense of what my ears were telling it. Caught fucking young daughter. Check. Expecting big shit-storm of drama. What? No shit-storm? Janine had first dibs? Wait! What? First dibs on me? What the fuck? \n\n\"Well, whatever. Tell me about it. What's his cock like?\" Janine demanded. \n\n\"Oh, it's just so good! So big and thick! It feels wonderful, Momma!\" Kat answered, with a smile. \n\n\"You guys realize I'm right here,\" I laughed, relieved I wasn't going to be run through with a pitchfork, and used to fertilize a corn field. \"I can hear you. You want to fill me in a little?\" \n\n\"Oh, fine,\" Janine dismissed me with a wave. \"We have a deal. We share men from time to time, and since you are closer to my age, I called for the right to have you first,\" she giggled, emphasizing the word 'first', and shaking a finger at her daughter. \"I suppose it's partly my fault. I had a chance to jump you yesterday, and got cold feet. I should have done it when I had the opportunity.\" \n\n\"Or you could have told me, and we'd all have fun,\" I replied. \n\n\"What? And miss the look on your face when you thought you were in trouble? Not a chance! That's half the fun!\" she laughed. \"Now, is there room in there for me, or do I have to kick her out?\"\n\nJanine grabbed the front of her denim shirt, and pulled it wide open, the snaps popping like little firecrackers. All the Archer women have been blessed, Kat said. Yup. Those are nice tits too. A little less in the forward projection department, but fuller, and very round. Janine's bra was black, sexy, and barely covered her areolas, which were bigger and darker than her daughter's. She shed the shirt, and dropped her jeans to the floor, showing that she had indeed done some nude field work, as her tan was quite even. Within seconds, the bra was on the floor, and her panties were sliding down her long legs. ",
        "I looked down at Kat, who had remained impaled by my cock throughout this whole scenario. She shrugged and smiled. Glancing back at her mother, standing naked a few feet away, and knowing she was next on my dance card, I laughed. \n\n\"Um, that won't be necessary. I think I'll be done with her in a minute or two, or ten. Please, come join us,\" I smiled, and started to shaft Kat again, giving her long, deep strokes that had her moaning within seconds. We had been at it for several minutes before Janine interrupted us, resetting the clock. I had to start over, but Kat was quick to reach her plateau again, panting and describing her feelings for her mother's benefit. \n\n\"Oh, fuck! God, Momma, his cock is so good! I love the way it stretches my pussy open, and reaches so deep inside me! He's gonna make me cum, Momma!\"\n\nJanine was kneeling beside me, her hand caressing my ass as it rose and fell, driving my cock into her daughter's succulent cunt. She watched closely, nodding as she saw the length and thickness of the shaft, coated with Kat's abundant juices. She leaned closer, pressing her own big breasts against my shoulder, and whispered in my ear. \n\n\"Mmmmm, that's so hot. I love the way that big cock of yours looks, splitting my little girl's cunt open like that. I can't wait until it's my turn. I want you to fuck me, Colin. Fuck me like you're fucking my baby, right now. My pussy is so wet. I've been thinking about you for days, ever since I had to undress you, and put you in my bed. I looked at your cock, and I wanted it. I'm so glad you're feeling better, because now it's time to really have some fun.... \"\n\nShe kissed my ear, and patted my ass, urging me to finish Kat off, so she could have her turn. All her narration in my ear had been quite inspiring, and I was thrashing Kat furiously now, which had been the point all along, I'm sure. \n\nLooking down at the younger Archer, her huge tits rippling with each crushing thrust, I knew she was close to cumming. Her head was back, eyes shut tight, and mouth agape, hissing a gurgling sound of bliss. While I watched, her tight midsection clenched, followed by her entire body, which blushed red. Her eyes opened wide, and she screamed. \n\n\"I'm cumming, Momma! I'm CUMMING!\" \n\nShe bucked like Rusty had, that fateful day, nearly tossing me aside, but I held on, grinding the base of my cock hard against her clit, as she shrieked through several waves of pleasure. At last, her pussy stopped squeezing my cock, and she wilted, panting, her tits quivering with each breath. \n\n\"Oh fuck.... oh fuck.... oh fuck.... so good,\" she muttered quietly. \"So good. Fuck Momma now. So good.\"\n\nI leaned down and kissed her soft lips, which barely twitched in response. She wasn't going to miss me. Time to do Momma. \n\nI looked at Janine. \n\n\"I'm a country girl. I like to ride. On your back, please,\" she directed, throwing her leg over me as I did. She also sported a nice, fluffy bush around her pussy, which looked decidedly more experienced than her daughter's youthful crevice. Thick labia dangled open, awaiting my intruder. \n\nHer hand grabbed my pre-lubricated shaft, and held it in place while she nestled it into her pussy, easing down to engulf it completely. She was pretty juicy, herself, and snug as well. \n\nShe sat up tall, thrusting her ample chest out at me. It was a very nice chest. Not quite as firm and high as her daughter's magnificent, youthful pair, but still very impressive, and mouthwatering. Janine's nipples showed the effects of having given birth to Kat, with darker areolas, and tall spires as thick as a fingertip. As she started to bounce on my cock, her boobs became very mobile, drawing my eyes. \n\n\"You like my tits?\" she asked, slowing her pace. She leaned closer, dragging a nipple across my face. I answered by grabbing her globes with both hands, and suckling the nipples furiously. \"Mmmmm, I think that's a 'yes'. Well, you go ahead, honey, and suck all you want to. I love it. Always have had a thing for getting my nipples sucked, and chewed on. It gets me really hot, and this big cock doesn't hurt any, either.\"\n\nShe looked over at her daughter, who was still laying on her back, eyes closed. Kat's breathing had normalized, so her big tits were rising and falling gently now. An expression of satisfied bliss was on her face. \n\n\"Kat, honey? You still with us?\" Janine asked quietly, still humping my dick. \n\nKat's eyes opened slowly. \n\n\"Mmmmm hmmm,\" she smiled, licking her lips, and ruffling her long hair. \"I'm alive. Just barely. Be careful, Momma. He's pretty dangerous.\" She rolled on her side to watch us fuck. \n\nJanine was getting wound up, and was fucking me harder, bouncing her big breasts in my face. It was making it difficult to keep a grip on the tasty nipple I had between my lips. She was moaning louder, and I could feel her beginning to shudder a little. \n\n\"Oh fuck!\" she gasped, and grabbed my head, pulling it tight against her left breast. \"Suck it! Suck it harder! I'm gonna cum! Please, make me cum! Oh... oh.... oh yes! YES! YESSSS!\" \n\nShe came, grunting and grinding her cunt down over my cock, while Kat smiled at us from her position of nearby spectator. \n\n\"That was pretty good,\" Kat observed. \"Now fuck her brains out like you did to me, and it'll be my turn again.\" \n\nOh boy. I should have met these two when I was younger. Keeping up with a young hottie and a hungry cougar was going to be a stern test of my middle-aged cock. \n\nAnd test me they did.... all night long, taking turns using me for their pleasure. Finally, even they had had enough, and we slept in a loving tangle of arms and legs. \n\n ***\n\n I woke up a little later the next morning. For some strange reason, I was pretty drained, and needed the extra sleep. \n\nThere were no women in bed with me, so I did have a brief moment of panic, thinking the whole thing might have been a dream, until I looked and saw three pillows on the bed. Three pillows.... three people. It had happened. \n\nThe house was very quiet, and I hit the bathroom to relieve my bladder, expecting one of my luscious ladies to greet me when I opened the door again, but no one was there. I grabbed the robe, for some unknown reason, as everyone here had done more than merely see me naked. \n\n\"Where is everyone?\" I mumbled, reaching the foot of the stairs. Wandering into the kitchen, I found an answer, in the form of a note. \n\n\"Colin, if you wake up before I get back, don't worry. You're not abandoned. Kat is working the fields today, as usual, and I had to run into town for a few things,\" I read aloud. \"Be back soon. Kisses, Janine.\" \n\nI heard the popping on tires on gravel, and saw a car glide past the kitchen window. It was a nice, Mercedes sedan, not exactly the vehicle you'd expect for a farm girl to drive, and it pulled into the barn, accounting for why I hadn't seen it before. Moments later, the kitchen door opened. \n\n\"Oh! You're awake! Great!\" Janine smiled. \"You saw my note?\" I nodded. \"Hungry?\" \n\n\"Starving,\" I laughed. \"Can't understand why?\" \n\n\"Yes, well, thank you for last night. Kat says the same. It's been a while for both of us, although she's had more luck lately,\" she grinned, stepping closer. She kissed me softly, and reached inside the robe to grab my cock. \"We'd better feed this thing then, hadn't we?\" \n\n\"Yes Ma'am,\" I smiled. \"Can I help, at all?\" \n\n\"You sit, and save your energy,\" she directed, pushing me into a chair. \"Cooking is not a problem for me. I'll take your help with things I can't do myself,\" she giggled, \"if you get my drift?\"\n\nAh yes, drift understood. I drifted you a couple of times last night, and Kat too. That's why I slept in, and why I need food desperately. \n\nA heaping plate was soon placed in front of me, and Janine sat across from me, her dark, expressive eyes peering at me over the rim of her coffee cup. \n\n\"I guess you'll be leaving us soon, then,\" she said softly. \"You're obviously recovered from Rusty's assault. Who should I call?\" \n\nI had a mouthful of hash browns and egg, so my response was delayed long enough to let me think it through. \n\n\"Well, that depends,\" I began, putting my fork down and giving her my undivided attention. \"Yes, I think I've recovered; no headaches, no ringing in my ears, no double vision. I can leave, if that's what you want me to do, but I don't have to. Rusty aside, I'm rather enjoying my time on the farm with you. Not just for the obvious reasons like last night, either.\"\n\nThe coffee cup which had obscured her face, was placed gently on the table, revealing a wide smile. \n\n\"And I've enjoyed having you around, as well. So, you'll stay, then?\" she asked. \"For a few more days, at least?\" \n\n\"I'd love to,\" I smiled back, picking up my fork. \"If you keep feeding me like this, I might stay for good.\"\n\n\"If you keep feeding ME, like you did last night, I might ask you to,\" she giggled, her eyes dancing happily. I nodded, and clinked my fork to her cup, toasting the agreement. \n\n\"I wouldn't mind getting out of the house, though,\" I said, quietly. \"Getting a little stir crazy.\"\n\n\"Wanna help me around the complex? You haven't seen it yet,\" she offered. \n\n\"Sure. What will I wear?\" I asked. \n\nThe look in her eyes told me that 'nothing' would be perfectly acceptable, but she still had a verbal reply. \n\n\"I think I might have something. They've been in storage for a long time, but they should do the job,\" she said, and stood, her boots grating on the kitchen floor. \"I'll be back in a minute.\"\n\nI wolfed down the rest of the plate, and gave it a quick rinse in the sink, anticipating Janine's return. She didn't, so I headed upstairs. \n\n\"No, I haven't fucked him again yet today,\" Janine's voice said softly. \"Because he just woke up, that's why! Jeez, we can't wear the poor guy out on the first day!.... No, you keep your ass on that tractor. Today is mine. You had him twice yesterday.... Okay, you had him four times yesterday. That's my point!\" \n\nShe glanced over and saw me at the doorway, gesturing to the pile of clothes on the bed. \n\n\"Okay. Gotta go. See you later,\" she smiled, and ended the call. \"Kat.\" She explained, pointing at her phone. \n\n\"I figured,\" I laughed. \n\n\"She's glad you're staying, too,\" she giggled. \"So.... Clothes for Colin. Try these,\" she deflected, blushing at the sexual tension of being caught in that conversation with her daughter. I let her off the hook, for now. \n\nA few minutes later, I was wearing a country bumpkin costume. I gotta say, it looked a whole lot better on Kat than it did on me, but the overalls from storage fit reasonably well. The shirt was another matter, as it was way too small. \n\n\"Well, it's a start,\" Janine laughed, \"and there's less to take off, later.\" Her smile told me she was looking forward to it. \n\nI followed her outside, and we made a stop by Rusty's corral. He actually seemed apologetic, and we made our peace. Next was the shed behind the barn, where the chickens lived. We wandered from building to building, going all around the area surrounding the barn itself. We didn't do much more than tour, while Janine told me about the buildings, and who among her ancestors built them. \n\n\"What about the barn?\" I asked. \n\n\"Oldest building here. My great-great-grandfather built it. They did things well back then. It's still solid as a rock,\" she smiled, heading in that direction. I watched her ass in her jeans. She really was a country girl, totally at ease here among the rustic structures. \n\n\"What's in it?\" I probed. \n\n\"Stuff,\" she giggled, avoiding an answer. \"Hay loft, storage, garage space.\"\n\n\"I saw your car. Mercedes? A bit luxurious for a farm girl, isn't it?\" \n\n\"Hey, I like nice things,\" she defended herself. \"Don't let the dust fool you. We just don't go overboard, and we look after them.\" \n\n\"Them?\" I asked. \n\nJanine smiled, and pulled back on the huge door. Behind it was the Mercedes. Beside the Mercedes was a new Cadillac, then a truck, and a Jaguar convertible. I whistled. \n\n\"Nice,\" I nodded, caressing the Cadillac's fender. \n\n\"That's Kat's car,\" she explained. \"Her baby. The truck is for hauling, of course.\"\n\n\"The Jag?\"\n\n\"Mine as well. A gift from my husband, before he passed away,\" she replied, somewhat sadly. \n\n\"Sorry,\" I said softly. Part of me wanted to hold her, but that might be inappropriate. \n\n\"Follow me,\" she smiled, and turned up a narrow staircase. I fell in behind, watching her sexy rear end wiggle up ahead of me, as she led up to the second level. \"Storage, galore,\" she gestured, and continued, arriving at the foot of a long ladder. She started up, and I followed. \n\nIt wasn't a short climb. Easily three or four stories, the ladder ended on a platform, with a small door. Along the way, the temperature went from comfortable, to 'please baste me, and put me back in the oven'. \n\n\"Holy shit, it's hot up here,\" I observed redundantly as I joined her on the platform. \n\n\"Yeah. Farmer's sauna,\" she giggled, pulling her shirt open wide. She leaned against the door, and it opened. \n\nWe stepped out onto a larger platform, above the hay loft, which was nearly full. It was not much cooler in here, but the gable door was open, letting a slight breeze in. \n\nOn the floor was a big pile of loose straw, with a canvas covering on it. Janine looked at me hopefully. \n\n\"I come up here to think, and get a good sweat in,\" she said, removing her shirt. The bra followed, and then it was boots, jeans and panties. Once she was naked, she turned to me, a glow of sweat already glistening on her body. \"Like I said.... Less to take off,\" she giggled, un-clipping the straps and kissing my bare chest. \n\n\"Think and sweat?\" I laughed, arching my eyebrows, and gesturing to the 'mattress', where a decidedly body-shaped dent and sweat stain spoke of several days like this. \n\n\"Well, sometimes I think about sex,\" she said sheepishly, \"and I like to lay down when I masturbate. The sweat really feels good.\"\n\nBy now, I was nude as well, and she was snuggling into my chest happily. We were both getting slippery and sweaty already, and we hadn't even started yet. She pulled me down onto the 'bed', and kissed me passionately. \n\nWe made out for quite a while, and let me tell you, it was hot, in ways which covered both the temperature and sexual meanings of the word. Janine pressed her curvaceous body against mine, and together we slithered across each other on a film on combined perspiration. I especially loved the way her big boobs felt, sliding back and forth, trapped between our bodies. It was like oil wrestling, but easier to clean up, and very, very arousing. \n\n\"Please, fuck me, Colin,\" she asked politely. \"My pussy has been dripping all day, so I'm quite ready for you. Just take that big dick of yours, and stuff it inside me, like you did so well last night.\"\n\nOw! Stop twisting my arm, already! \n\nI raised up, aimed, and buried my shaft deep into her very juicy cunt. She wasn't kidding about being wet, as her vagina actually made a sucking noise as I pulled back, and let out a cute little farty sound when I plunged it back in, reaching bottom this time. Her legs wrapped around me, and I started to pound her. The floorboards of the platform squeaked under our motions, raising questions in my mind about the structural soundness of the ancient barn. Janine didn't seem concerned, so I figured we were safe. \n\nSpeaking of Janine.... her screams were echoing through the barn, and sweat was dripping off my nose and chin onto her. \n\n\"Hot.... Too hot,\" she panted. \"Off me, please.\" \n\nShe was right. It was too hot, and two bodies pressed together like this didn't make it any better. I rolled off, and she immediately stood, bent at the waist, grasping the two-by-four railing around the platform. She glanced at me over her shoulder. \n\nNo explanation was necessary. I stood behind her, and plugged into her again. \n\n\"Oh, that's better,\" she smiled, bracing herself against my thrusts. \"More breeze, same cock.\"\n\nI could see her breasts swinging in circles. Even from behind, those big globes jutted out, wider than her ribcage, and their motions made them show even more. Fucking her like this, with my hands on her sweaty waist, holding her tight, the view of my cock splitting her labia open was very exciting. Every surface of her body glistened with a sheen that showed her curves, reflecting the light. Through it all, she shrieked happily. \n\n\"Oh yes! Fuck, yes! Yes, yes, yes! Oh fuck me! Fuck me hard! GIMME THAT BIG COCK! POUND MY PUSSY, YOU STUD! OH, I'M GONNA CUM! I'M GONNA CUM!\" \n\nHer knuckles went white, trying to reduce the wood in her grasp to sawdust, as the waves hit her. Her body shook, causing a sprinkling of sweaty drops to fall from her breasts to the dusty floorboards, sparkling in the sunbeam. \n\n\"Oooooooooo, fuck, that was goooooood,\" she groaned, pulling her dripping pussy off my cock. She turned, and knelt before me, swallowing my frothy dick immediately. \"Mmmmm. Mmmmm. Mmmmm.\" \n\nShe gazed up at me, a glint in her eye that led me to believe her intent was to finish me off. I was fine with that, and stood patiently, enjoying her very effective technique. She could really suck cock, and her greater experience made a comparison with her daughter's enthusiasm a close one. \n\n\"Oh yeah.... Suck my cock, honey. Suck it. That's it. Gonna cum, baby. Get ready....\" \n\nShe pulled my cock from her lips, and jerked it madly, aiming it at her face and chest. Seconds later, she got her wish, as I spurted thick semen all over her. \n\n\"Shit! Yeah, baby! Shoot that hot jizz on me! Fuck yeah! Cum on my face, and cum on my tits! Treat me like a cheap slut!\" she cheered, pumping my shaft furiously. Semen flew wildly, landing on her chest, face, and in her hair. Drops adorned her arms as well. She was speckled with goo, which was sliding across her sweaty skin, heading south. \n\nShe collected the majority of it with her fingers, dripping it into her open mouth. \"Mmmmm. Seasoned by sweat. Very nice.\" \n\nI sat back heavily on the straw pile / mattress, and watched her cleanup. She soon joined me, cuddling close in silence. \n\nWe laid there, holding each other, dripping with sweat and cum. Janine toyed with my chest playfully. \n\n\"Colin, what do you do?\" she asked. \"I mean, when you're not sexually satisfying farm widows and their daughters. What pays your bills?\" \n\n\"Fair question. I'm an independent financial advisor,\" I replied, caressing her hip and rump. \n\n\"Really?\" she sat up, surprised, and shook her head. \"Fuck me!\" \n\n\"I think I just did,\" I laughed, pointing at the globs of semen sliding slowly across her sweaty breasts. \n\n\"Yes you did, and it was fantastic,\" she smiled. \"What I meant was more along the lines of an expression of surprise. You see, I need a new advisor. My old one has lost my trust. We need to talk.\"\n\n\"Sure. How much are we talking about, here?\" I asked, putting on my business hat. \n\n\"Well, it's not what it was. The markets haven't been kind, have they?\" she commented. \"Current value is a little over forty.\" \n\n\"Thousand?\" I assumed, since they were still working the farm, but part of me wondered about the cars, which were worth more than that. \n\n\"God no!\" she gasped. \"The market hasn't been that bad! Million, darling. Forty million.\"\n\nMaybe the sweat was in my ears. Did you say forty million? \n\n\"Janine? You have forty million dollars?\" I asked, stunned. I was naked, in the loft of a barn, having just fucked this beautiful woman.... and now she's telling me she's also my dream client, as well as being a dream lover? And then there's Kat, who would be back soon, and want more of the same? Did I just fall into the twilight zone? \n\n\"Yes. Don't forget.... My family has lived here for over a hundred and fifty years. This farm used to be in the neighbourhood of fifty-thousand acres, but it's been sold off around the edges for generations,\" explaining the source of her wealth. \"We sold about a hundred acres just last year, for a housing development. Land prices keep going up, so there's plenty of profit still to be had.\" ",
        "I had to ask the obvious question. \n\n\"Why are you still living here?\" As soon as the words left my mouth, I knew I needed to rephrase it, in a softer manner. \"No disrespect to your family, Janine. I suppose I already know why you're still here. It just seems like you could be more comfortable, if you wanted to.\"\n\n\"Yes, I could, but I grew up here. It's home. It's Kat's home. I absolutely can't bring myself to tear down the house my ancestors built with their bare hands, and having two houses seems wasteful,\" she smiled, with a shrug. \"I guess I'm just a simple country girl, with simple tastes.\"\n\n\"And a couple of sweet cars,\" I smiled. \n\n\"Yes. My one indulgence,\" she nodded. \"We should go, before Kat gets back. Join me in the shower?\" She stood, and offered her hand to help me up. \n\nI looked up at this beautiful, sexy creature, glistening with sweat from head to toe. The sheen made her look even more curvaceous, and the few smears of my cum still oozing slowly across her skin showed her bad-girl side. I had been leaning toward maintaining a relationship with the two ladies already, but now it was a given. \n\nTalk about combining business and pleasure. \n\nIt took us longer to make it down the ladder, tossing our clothes down ahead of us, and we were outside, nude, enjoying the cool breeze on our overheated bodies soon after. Janine's nipples puckered tight and stood tall as perspiration evaporated off her. \n\n\"Ha! Been visiting the loft, I see,\" Kat laughed, brushing dust off herself as she approached. Her eyes gave her mother's body a quick scan, noting the semen residue on her breasts. She stopped in front of me, and sniffed me, moaning softly. \"Now that's a man's scent! Save anything for me?\" \n\nA bleating noise made me look over her shoulder. \n\nThere, a few yards away, was a small white goat. \n\nWith one crooked horn. \n\nI looked behind him, where my car was laying, dead, in a pile. A glance to the side, and I saw lusciously naked Janine, her sexy ass jiggling as she walked toward the house. Between us was Kat, smiling at me, looking just so beautiful, and ready for action. I had a feeling I'd be visiting often, taking exceptional care of my two favourite new clients. The fringe benefits were off the chart. \n\nI looked down at the goat, again. \n\n \"Thanks Oscar. I definitely owe you one.\" \n\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \n\n Yeah, I know, I know.... but I have to ask anyway. \n\nDo you want some more from Colin, Janine, and Kat? \n\nWell, then cast those votes, and click those favourites, especially the Favourite author ones. Send me Comments and Feedback with suggestions for future chapters. \n\nThanks for reading."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "big tits",
        "mother and daughter",
        "younger woman",
        "older man",
        "shared partners",
        "oral sex",
        "three way"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/ploughing-the-south-forty"
}