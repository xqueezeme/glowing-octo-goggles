{
    "title": "Frozen Mothballs Ch. 02",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 7 - Inquiries\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded MILF reporterette from in front of the State Crime Lab building north of the University Campus at 7:00am, Thursday, February 16th. \"Channel Two News has learned that recent arrests by the Town & County Police Department has led to the discovery of deadly chemicals!\"\n\nI closed my eyes and groaned as I listened. Bettina happily continued: \"Sources tell Channel Two News that substances found during the arrest were tested and found to be deadly poisons! The State Crime Lab will not provide any details, and have said only that they have turned their findings over to the Town & County Police and the FBI. The TCPD has declined to make any statement, and the FBI will not confirm that they received any information from the State Crime Lab!\"\n\nI felt Cindy pat my shoulder as we listened in MCD. She had seen my face, as had the other Detectives in the room.\n\n\"The Town & County Police will not confirm that the three persons arrested are part of a nationally organized white supremacy group, nor that they were turned over to the custody of the FBI. Commander Donald Troy, who sources tell Channel Two News discovered the danger of the chemicals, has not returned repeated calls for comment.\"\n\n\"That's what happens when you're out of Town all dayyyyy.\" drawled the Chief, who had just come in. \"I'm sure Bettina only wanted to ask you for a date, Commanderrr.\" Joanne giggled, in spite of the pall in the room.\n\n\"She's gonna get a 'date', all right, Chief.\" I said. \"With the FBI. We have the right of free speech, but we can't yell 'FIRE!' in a crowded theater. They have their Free Press rights, but that doesn't give them the right to give out sensitive information about poison agents and scare the hell out of the Public.\"\n\n\"More coffee, Mr. Crowbarrrr.\" said the Chief. \"That's the prescription. The Press is going to do most harmful thing it can, no matter what. They have no sense of responsibility to the Public they claim to serrrrrve.\"\n\n\"Is it a requirement of Command to hate the Press?\" asked Joanne Warner. \"Because I've got a headstart if it is.\"\n\n\"Not that big of one.\" said Teddy Parker. \"I hate them, too.\"\n\n\"And none of you are anywhere close to me in hatred of the Press.\" I said. \"So don't get your hopes up of taking my office away from me just yet.\"\n\n* * * * * * * * * * * * * * * *\n\n\"There are leaks, and then there are leaks.\" I said to Cindy as we sat in my office. We'd just watched KSTD's morning news report. Priya had mentioned the three perps being taken into Federal custody, but had not mentioned the poison gas mothballs... and we know she watches Bettina and reports the same things an hour later.\n\n\"How Bettina found out about that, I don't know.\" I said. \"But for her to report that... Jesus Christ almighty! Even Priya had the good fucking sense to not mention it!\"\n\n\"You're worked up about this one.\" Cindy said.\n\n\"Hell yeah, I am!\" I spluttered. \"Now we have nearly 100,000 people in this area wondering if they're going to be subjected to a poison gas attack! That was just so fucking... stupid of that bitch!\"\n\nCindy looked shocked at my comment about Bettina. \"Do I need to call your wife to take some blood samples?\" she asked pointedly.\n\n\"If you want to.\" I said, giving it right back. \"Bettina's crossed the line. I need to talk to Brick now.\" 'Brick' was Captain Briscoe, the Press Relations Officer.\n\n\"Ooo-kay.\" she said, getting up. \"I'll go get some more coffee... and put on a pot of decaf for you.\"\n\n* * * * * * * * * * * * * * * *\n\n\"I have good news, and bad news.\" said the Chief as we sat in his office. \"Wayne LaCroix served your subpoena yesterday, to appear for questioning before the Board of Inquiry this after-noooon.\"\n\n\"Sheesh, how about a little notice?\" I asked as I looked at the document.\n\n\"Unfortunately, 24 hours is considered 'sufficient' in this matter.\" said the Chief. \"He also sent a letter earlier, warning you about it. The good news is that I did tell your Union rep yesterday, and he's ready to go.\"\n\n\"Okay.\" I said, then remembered my manners. \"Thanks, sir.\"\n\n\"What's on your mind, Mr. Crowbar?\" asked the Chief.\n\n\"That visit to the camp and the sanitarium.\" I said. \"I need to call Jack Muscone.\"\n\n* * * * * * * * * * * * * * * *\n\n\"So no one came and bothered you at either location?\" Muscone asked as he sat in my office with me, drinking coffee.\n\n\"No.\" I said. \"And I was halfway expecting someone to come, local Sheriff or something, just to check up.\"\n\n\"So...\" said Jack, \"did you find anything?\"\n\n\"Not much, at least not yet.\" I said. \"But it did occur to me who might have been using the Millwakee Camp as a hideout... a certain disgraced and now former SBI Agent who has a lot of reason to hide from my crowbar, not to mention my FBI friend whose girlfriend was thrown out of her wheelchair by said disgraced SBI Agent...\"\n\n\"Ferrell?\" Jack asked, his ears and every other part of him perking up at the name. \"So you think he's hiding there?\"\n\n\"Probably not any more.\" I said. \"But it was a great location for a while. He could just go north to get to Waguli, then west to that facility near the Burke home. Not much traffic through there at all.\"\n\n\"I'll check in with my boss and see if we can put some surveillance on the place.\" said Muscone. \"Tripwire sensors and the like. Maybe the bastard will go back... and if he does, I'll be right there to get him.\"\n\n\"You've got dibs on him, if I can help it.\" I said. \"So, did you get anything new on that Federal facility north of the State line?\"\n\n\"No.\" said Jack. \"I asked Lindy to look into it, and she did. She came back with a red screen saying she was touching upon the verboten. So I had a look, got the same screen, then got a call from Homeland Security in Washington, wanting to know why we were trying to get information on the site.\"\n\n\"What did you tell them?\"\n\n\"I told them we had two ongoing cases down here, and cases involving multiple murders, and that that facility was in the vicinity of both.\" said Jack. \"They said it had nothing to do with the cases, and I asked how they could possibly know that. That's when they asked for my boss's name.\"\n\n\"And you told them?\"\n\n\"You betcha.\" Jack said. \"And he'd told me that if something like this happened, to let him know. Anyway, Homeland Security said to cease and desist inquiring about the facility, and I asked them what they were trying to hide. They hung up on me, and I called my boss... all of ten seconds before they did.\"\n\n\"Better double up on your armor.\" I said. I was not kidding.\n\n\"You got that right.\" Jack replied. \"Anyway, my boss was called... by the Secretary of Homeland Security himself, and it generated a meeting of a lot of high level people. I still don't know what it's all about, but it's now officially above my pay grade.\"\n\n\"And would be above mine,\" I said, \"except now is the most dangerous time for us... if they can eliminate us before there's any real publicity, they'll do it.\"\n\n\"You know, Don,\" Jack said to me, \"It scares me the way you think, sometimes. If it weren't for the fact I actually was there when you were found being tortured by the CIA... I'd think you're a paranoid S.O.B.\"\n\n\"It ain't paranoia when they really are out to get you.\" I replied with a Chief Griswold truism.\n\n* * * * * * * * * * * * * * * *\n\n\"The Inquisition, let's begin,\n\nThe Inquisition, look out sin...\n\n---- \"The Inquisition\", History of the World, Pt.1.\n\nI went into the Chamber of the Board of Inquiry, attended by my Union rep. I was wearing my Duty Dress uniform with the three metal-bordered rectangles, and not wearing the Medal of Valor medal.\n\nA three-member panel was seated up on the 'bench', and Wayne LaCroix was at the table on the other side, as if he were a prosecuting attorney. He didn't look much better than what Cindy had described of how he'd looked the other day.\n\nAs the proceedings began, my rep stood up. \"Members of the Board,\" he said, \"I am bringing an objection and a complaint to these proceedings. My client and I have not been informed by Mr. LaCroix of the nature of the proceedings, of what is to be discussed at the proceedings, and Mr. LaCroix has been evasive when directly asked for information. We have added a formal complaint within the last hour, which you may not have received yet, that Mr. LaCroix's handling of this is at best irregular and at worst and more realistically, extremely unprofessional. We ask that Mr. LaCroix be immediately relieved of any participation in these proceedings.\"\n\n\"We did get that complaint.\" said the Inquiry Board's leader, the older black man who'd been on several Boards of Inquiry in which I'd had to testify, to include Medal of Valor nominations of my various Angels. \"We are taking the issue of Mr. LaCroix's conduct under advisement, but will continue with him at this time, as changing attorneys to someone who is not familiar with the situation would be ill-advised.\"\n\n\"Sir,\" the Union rep said with some anger, \"WE are not familiar with this situation, thanks to Mr. LaCroix's evasiveness. For you to say it's okay for him to be informed but us to not be is a double standard at best, and a violation of my client's rights, at worst.\"\n\n\"I'll say this one more time.\" said the Inquiry leader. \"We are taking it under advisement. Mr. LaCroix says he did fully advise you of the nature of these proceedings, is that not right Mr. LaCroix?\"\n\n\"That is correct, Your Honor.\" said LaCroix.\n\n\"Your Honor,\" I said, even though the Board leader was not a judge, \"I would like Mr. LaCroix to make that statement under oath. If he won't, you should regard his statement as a falsehood. I will testify under oath that LaCroix has not properly informed me of the nature of this proceeding; he only subpoenaed me to attend.\"\n\n\"I'll testify likewise, sir.\" said the Union rep.\n\n\"This is starting to get out of hand.\" said the second board member. \"Let's bring this to order and get on with it.\"\n\n\"At the expense of my client's rights?\" said the Union rep. I have to admit it was refreshing to see a Union guy so strongly taking my side, for a welcome change.\n\n\"Okay, okay,\" said the presiding Board member. \"Mr. LaCroix, would you now state the nature of these proceedings?\"\n\n\"I intend to determine why Commander Troy did not pursue an immediate investigation of the Walnut Prep Academy when evidence arose that teachers and students were having sexual relations. Furthermore, Commander Troy later recused himself from the investigation of that matter, and I want to determine why he did so.\"\n\n\"Now you know.\" said the Board leader. \"Can we proceed?\"\n\n\"No.\" I said. \"I wish to confer privately with my Union rep before continuing this hearing.\"\n\n\"I object to that.\" said LaCroix sanctimoniously. \"Commander Troy does not need to confer with anyone. He needs to get on the witness stand and answer my questions under oath.\"\n\n\"Mr. LaCroix,\" said the third Board member before I or my rep could say anything, \"you really are beginning to violate the Commander's rights with that statement. Maybe you're just trying to coerce him into taking the Fifth, but we're not going to play that game here. Gentlemen,\" he said to the other Board members, \"I believe we can give the Commander and his rep a few minutes.\"\n\n* * * * * * * * * * * * * * * *\n\nWe where shown into a small room near the Board chamber. As we sat down at the table, the rep began talking.\n\n\"This is the craziest thing I've ever seen, Commander.\" he said. \"I know you and the Union have been at odds at times, but I've never seen anything like the violation of your rights taking place here.\"\n\n\"Yeah, I know.\" I said. I instinctively reached inside my jacket pocket and switched on my anti-bugging device as I said \"Even the Board members can see LaCroix is shredding the Constitution as he goes along. The question is 'why?' of course. I get the idea that LaCroix----\"\n\nJust then, we were totally shocked when the door flew open and LaCroix barreled in, followed by the Sheriff's Deputy that had been in the Chambers for the hearing. \"What the hell is going on?\" he asked, looking around at the ceiling.\n\nBus-ted.\n\nHe must have bugs in the room, was trying to listen in, then my device blacked them out, I realized. Before he was aware of it, I was up and moving, and now had the door blocked. What's more, I'd pressed a pager, and Cindy Ross was now at the door, as well.\n\n\"Okay, LaCroix, you are busted.\" I said. \"Captain Ross, handcuff Mr. LaCroix.\n\n\"What is going on?\" asked the Deputy.\n\n\"I'm arresting LaCroix on suspicion of bugging this room.\" I said.\n\n\"You can't do that. I order you to let him go!\" shouted the Deputy. I confronted him.\n\n\"YOU are ordering ME?\" I said menacingly. \"Do you realize how far I outrank you? Not to mention you can be arrested for conspiring with LaCroix if you try to help him any further?\" That last part was a stretch, but it didn't matter; the intimidation worked, and the Deputy conceded.\n\nI began searching. My bug-detector device, the second half of the my pair of gold discs, found a bug under the eaves of the table. Two more were found in the fluorescent light assembly. They were bagged and tagged as evidence.\n\n\"Take him to Headquarters and book him, Ross.\" I told Cindy.\n\n\"Rudistan and Morton are on their way, sir.\" Cindy replied.\n\n\"What the hell is going on?\" asked the lead Board member as he and his fellow panelists came to the door. I showed them the bugs, now sealed in evidence bags. (Oh, I might note that Cindy and the Union rep both videoed the whole thing with their cellphones.)\n\n\"LaCroix tried to listen in on privileged conversations.\" I said. \"He gave himself away when he came in to find out why the bugs weren't working. He is now under arrest.\"\n\n\"I want my hearings right now.\" said LaCroix. \"Take me to Judge Nance now.\"\n\n\"Oh, how about a Federal judge, LaCroix?\" I threatened. \"Bugging a Government building at any level, for the purpose of listening to privileged conversations? That's a Federal rap in addition to a State charge. And your buddy Judge Nance won't be able to help you in Federal Court. But thanks for telling us who your marked card is.\" For the first time, LaCroix looked like he was going to shit in his pants.\n\n\"The stupidity of some people never ceases to amaze me, Commander.\" said Sergeant Rudistan as he came in. \"But I think Mr. LaCroix here gets bonus points.\"\n\n\"That doesn't get him much in my jails, Sergeant.\" I replied. \"Take this piece of filth to them.\"\n\nPart 8 - Frozen Hornets\n\n\"Oh wow, oh wow, oh wow.\" said Chief Moynahan quietly as we sat in his office, along with Della Harlow and Cindy Ross. It was now 3:30pm, Thursday, February 16th. \"You have really torn the lid off this time, Mr. Crowbarrrr.\"\n\n\"Yes sir.\" I said. \"Folsom has specifically prohibited Nance from having any part of LaCroix's hearings, nor can Nance be part of anything to do with Walnut Prep now. Folsom said LaCroix's comments were sufficient grounds to question Nance's impartiality.\"\n\n\"How did Nance take that?\" asked the Chief.\n\n\"I don't know sir,\" I said, \"but Nance is pretty wily. I imagine he just said 'okay' and went about his business.\"\n\n\"And LaCroix?\"\n\n\"I haven't gotten to interrogate him yet.\" I said.\n\n\"And you won't.\" said the Chief. \"Sheriff Allgood has relieved that Deputy of his duties, pending a full-scale investigation of his involvement with LaCroix. The Deputy has already asked for a lawyer, but I understand it's with the idea of figuring out where he stands and what kind of deal he can make. But the Sheriff also said he wants you to take a background role in this from now on. Let your people ask the questions. Prep them if you want, but you won't be the one in therrrrre.\"\n\n\"No problem, Chief.\" said Cindy Ross with an all-too-happy smile on her face. \"I get to play Iron Hornet today, and stir up that little nest in LaCroix's head.\"\n\n\"Hoo boy.\" said the Chief. \"Out of the frying pan, into the fire.\" I laughed, knowing the Chief was joking. It took Cindy a few more seconds to catch on.\n\n* * * * * * * * * * * * * * * *\n\nInside Interrogation-2 sat LaCroix and his legal representation, Mr. Garner of Succup & Payne, P.C., personal attorneys. Mr. Garner had been the late Nathan Allen's attorney in the past.\n\nCaptain Cindy Ross and Detective Jermaine Davis entered I-2, and Patrolman Morton was the Uniformed presence. The Chief and I were in the anteroom, watching through the one-way glass. Ross and Davis sat down and, before saying any other words, Cindy read LaCroix his legal rights.\n\n\"Do you understand the rights?\" she asked at the end. LaCroix didn't answer, so she held up the card to the video camera and said \"Let the record show that his rights were read to him, and he does not have to consent out loud for my duty to have been done. Okay, this is Detective Davis, and I am Captain Ross. You are being charged with attempting to listen in on privileged conversations, and conspiracy to bug a Government office that was meant to be used for private and privileged conversations.\"\n\n\"Why don't you send the Iron Crowbar in here?\" snarled LaCroix. \"Let that asshole question me himself.\"\n\nCindy turned to Jerome. \"This is an example of a perp trying to create a legal loophole, Detective Davis. Commander Troy is being held back because he was an involved party that led up to the charges against Mr. LaCroix, here. His finding the bugs is perfectly admissible as evidence, but we won't help Mr. LaCroix's legal representation by having Commander Troy directly involved in the questioning.\"\n\nJerome nodded. LaCroix's lawyer looked resigned. LaCroix looked furious... that his ruse didn't work.\n\nCindy went on: \"Before you formally invoke, Mr. LaCroix, you need to understand that corresponding Federal charges are going to be sought in Federal Court, and you may be transferred to Federal custody in conjunction with the filing of those charges and a Federal indictment. Once that happens, there is little I can do to help you in any way, nor will I have any inclination to help you. However, you should consult with your attorney now about discussing with us who put you up to this, who gave you the bugging devices to use, and also why you were abusing the process of the Board of Inquiry.\"\n\n\"I'll add more.\" said Jerome, as instructed to do. \"The Iron Crowbar? He can be vindictive. He's not letting this waste of his time go unpunished. He intends to have you disbarred, Mr. LaCroix. He intends to make sure you never work in the legal profession in this State again. And he does intend for you to see prison time, if you don't come correct on what you've been trying to do through the Board of Inquiry process.\"\n\n\"I need to talk with my attorney.\" said LaCroix.\n\n* * * * * * * * * * * * * * * *\n\n\"You did great.\" I said to Jerome. \"I think he got a little intimidated when you told him what I intended to do.\"\n\n\"Thanks, sir.\" said Jerome.\n\n\"He did get intimidated.\" said Cindy. \"I could feel the vibe. He got nervous when we started talking about the Feds. He got outright scared when Jerome started talking about disbarring him.\"",
        "\"Good.\" I said. \"Maybe he'll talk.\"\n\n\"What do you think he'll tell us, sir?\" asked Jerome, who was in full-on 'learning' mode, I was happy to see.\n\n\"Who put him up to this.\" I said. \"It's political corruption, if I read the cards correctly. I just hope we can get a name, bust someone up.\"\n\n* * * * * * * * * * * * * * * *\n\nThirty minutes later, LaCroix and his lawyer were still talking.\n\n\"Think they're stalling?\" Cindy asked as we watched from the anteroom.\n\n\"Yes and no.\" I said \"I think LaCroix would love to drag it out, so that if we say anything, he can accuse us of what he was being accused of when he tried to not give me sufficient time to talk to the Union rep.\"\n\n\"At the same time,\" I continued, \"I get the sense they're haggling over just what to do. Take any kind of deal, and LaCroix is open to being asked anything about anything. I'll bet in the end he doesn't take a deal.\"\n\n\"What then?\" asked Paulina Patterson, who had just come in. \"Folsom will personally hear the arraignment and all the other procedures if LaCroix doesn't wave anything, but I'll tell you now: unless you have one of your patented bombshells, LaCroix is going to get bail, nothing heavy, and he may or may not get ankle monitoring.\"\n\n\"Work hard to get him ankle monitored as a flight risk.\" I said. \"And try to get the bail as high as you can... just so we can see who pays it.\"\n\n* * * * * * * * * * * * * * * *\n\nCindy knocked on the glass, then went into I-2. \"Just wanted to tell you that it's nearly suppertime, and your client will be taken to the cells to eat. He also won't get any hearings until your conference with him is over. Not denying you the time you need; talk as long as you want.\" With that, she withdrew from the room.\n\nThe lawyer banged on the glass less than one minute later. When Cindy and Paulina went in, Wayne LaCroix looked at them as if he were three-sheets-to-the-wind drunk, and said \"I am invoking my Fifth Amendment rights. I want my hearing immediately.\"\n\n\"It's late; we'll see if we can fit you in, or if you'll have to wait until morning.\" said Paulina, making the loser pay for wasting our time.\n\n* * * * * * * * * * * * * * * *\n\nJudge Folsom would've worked 3am Night Court to handle this one. Wayne LaCroix was brought into the Courthouse complex's smallest Courtroom.\n\n\"So let me be clear here, Ms. Patterson.\" said Judge Folsom. \"Mr. LaCroix here barged into the room where Commander Troy was having a privileged conversation with a Union official. That in itself is a near-miracle... the Iron Crowbar talking to a Union rep, that is.\"\n\n\"Commander Troy is entitled to his Constitutional rights, Your Honor.\" Paulina said, either not catching the judge's attempt at humor, or not liking it. In any case, Folsom looked at her with something resembling a glare.\n\n\"Yes, yes he does.\" said the Judge. \"So the defendant came into the room, looking around, which gave Commander Troy probable cause to search for bugs... and Commander Troy found those bugs. Now you understand that the defense is going to to have a field day asking how Commander Troy knew to look, had a device that could find them, and so on.\"\n\n\"We are ready to answer those questions at the proper time, Your Honor.\" said Paulina.\n\n\"Your Honor,\" said the defense lawyer, \"we will not be waiving any preliminary hearings, and will be requiring Commander Troy to 'show cause' for all of his actions at City Hall today.\"\n\n\"Fine, fine.\" said Judge Folsom. \"Then your client will be spending the night at Police Headquarters, or County Jail if the Police prefer that. I can't have a bail hearing until all that is cleared up, of course.\"\n\n\"Your Honor, we're asking that the defendant be released on his own recognizance until any hearings are scheduled, and that there be no bail at all.\" said the wily defense attorney.\n\n\"Prosecution?\" asked the Judge.\n\n\"Your Honor,\" said Paulina, \"we consider the defendant to be an enormous flight risk. He has no ties to the community, and every reason to flee the jurisdiction. We therefore ask that he be detained until the show-cause hearing can be held, and in any bail situation we'll be asking for ankle monitoring and the maximum bail allowable under the law.\"\n\nThe Judge nodded. \"I'm not saying every law and every case is not important in our System of Criminal Justice, but this one has to rank among the smaller ones. If it weren't for the issue of the FBI filing papers already to keep Mr. LaCroix detained while Federal charges are being filed, I would only require ankle monitoring. As it is, bail will be set, and at $100,000. That bail can be revoked at any time formal Federal charges are filed, so I'd suggest you stay at home, Mr. LaCroix. And yes, ankle monitoring will be required.\"\n\nThe judge set hearing times for Monday morning, then banged his gavel. All rose as he left the Courtroom.\n\nTen minutes later, LaCroix's bail was met. Lawyers Jay Swenson and Ken Eidex had paid the bail on behalf of Citizens For Police Accountability.\n\nPart 9 - Frozen Legislation\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redheaded MILF reporterette at 7:00am, Friday, February 17th, from in front of the Courthouse. \"Channel Two News has learned that Board of Inquiry lawyer Wayne LaCroix was arrested after using bugs in a room to listen in on privileged conversations between a Police Officer and his Union rep yesterday!\"\n\n\"Listening equipment was found near the Board of Inquiry chamber, and bugs were found in the room where the Police Officer and his Union rep were talking. The Board of Inquiry has suspended Mr. LaCroix pending a further investigation, while criminal charges and possible Federal charges are being pursued. Commander Donald Troy has also filed a petition with the State Bar to have Wayne LaCroix disbarred. Mr. LaCroix will face formal hearings on Monday. His extremely high bail was met, paid for by a group of concerned citizens.\"\n\n\"But it is State news that our viewers are watching,\" said Bettina, \"and it is the battle in the Legislature over the budget and the SBI bill that are beginning to wear on the People's patience. There is still no breakthrough, no compromise. Republican Wilson Hammonds's attempt to introduce the Democrat plan for the SBI as part of the budget in his Ways & Means Committee was shot down by First District Representative Billy Williams and a coalition of hardline Conservatives.\"\n\n\"Telling us what wears on our patience.\" I said in MCD. \"Bettina telling us how WE feel. Telling us what to feel, and what to think.\"\n\n\"And what part of this surprises you?\" asked Cindy Ross, somewhat acidly. I deduced she was getting tired of my bitching.\n\n\"Yeah, I know.\" I said. \"I'll go vent in my office.\" I refilled my coffee cup and was about to go, when Joanne Warner stopped me.\n\n\"Sir!\" she said loudly. \"Why wouldn't Bettina name the 'Police Officer' who was being bugged. We know it was you, sir, and that you found the bugs.\"\n\n\"It was me.\" I said, coming back into the room. \"So let's look at it... why did Bettina frame things the way she did? Why didn't she mention my name... at this time?\"\n\n\"She didn't want to give you credit for finding the bugs?\" guessed Theo.\n\n\"That is part of of it... small part, though.\" I replied. Everyone else was stymied, it seemed.\n\n\"I'm not sure exactly why.\" said Cindy. \"But I think she's setting up something to spring on you later.\"\n\n\"Ahhhhh.\" I said. \"The Green Crowbar is close, very close.\" I think my comment startled Cindy as much as anyone, but got the Detectives to thinking again. Just then, the Miltons came in and poured coffee. Theo replayed Bettina's comments that we'd DVR'd (we'd gotten in the habit of DVR'ing the Bettina Broadcast every week-morning), and the discussion continued.\n\n\"Oh, I get it.\" said Mary Mahoney Milton. \"You guys have to realize we know a lot more about Police and Court matters than most people out there. When they hear that a 'Police Officer and Union Rep are facing a Board of Inquiry, they immediately are going to think it's bad for that Police Officer, that he's in trouble.\"\n\n\"Ah, Goth Girl catches on fast.\" I said with a smile. \"So what does that mean?\"\n\n\"Ohhhhhhhh.\" said Joanne. \"By not mentioning your name, it sounds like they're hiding it from the Public... so when it comes out later, it sounds even worse for you, Commander.\"\n\n\"Eggg-zactly.\" I said. \"My name was mentioned only is trying to get LaCroix disbarred, which is certainly true. Bettina plans to come out later with my name as the one under the Board of Inquiry, then makes it look like I'm retaliating against poor Wayne LaCroix for doing his job to inquire about me.\"\n\n\"It's not like you weren't inquired about twice before.\" said Cindy. \"Particularly the two times you were awarded the Medal of Valor.\" There was agreement with that.\n\n\"And like Mary said... the Public does not realize that, or will not remember it.\" I said. \"Okay, let's get to work. Mary, Myron, if you'll come to my office, please...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Yes sir,\" said Myron, \"we're still working on the Citizens For Police Accountability. Well, we have flags on their known bank accounts. But we'll have to get a brand new warrant, with brand new probable cause, if they open any new bank accounts. There is no money flowing through the ones we're monitoring. Where the $10,000 came from to make the ten percent of that $100,000 bail, I don't know, but it wasn't those accounts.\"\n\n\"It could've been cash.\" I said. \"But they're the ones... at least Eidex and Swenson are the ones. Anything new on them?\"\n\n\"No sir.\" said Myron. \"They've had credit hits... but that just means their credit was hard-checked. They've rented an apartment near University Avenue, in Jay Swenson's name. So it looks like they're here for a while, at least.\"\n\n\"No surprise there.\" I said. \"Okay, anything else? I'm going to the City with Captain Ross today. As scary as this is, you are technically in charge of MCD, Supervisor Milton. Don't let the power go to your head, and don't be swayed by your lovely wife's feminine wiles to do something naughty.\"\n\n\"Oh, that's a lost cause, sir.\" said Myron with a grin. Mary was laughing so hard she couldn't speak for a moment.\n\n* * * * * * * * * * * * * * * *\n\n\"So why aren't we going to Westphalia?\" asked Cindy. \"Moe Molinari's district is Westphalia and Eastphalia.\"\n\n\"True,\" I said, \"but he maintains an office in the Wright Building in the City, which he uses for what he calls 'quiet' business. Meeting with Jimmy Cerone is definitely something he wants kept on the 'down-low'.\"\n\n\"Cerone...\" Cindy said, then went into a reverie. She came out and said \"The SBI bill... something must be going on with that.\"\n\n\"I hope so, anyway.\" I said. \"By the way, I need to call Jack Muscone and his FBI peeps.\" I placed that call...\n\n* * * * * * * * * * * * * * * *\n\nThe Wright Building was just west of the Cannon Building, the skyscraper from which Henry R. Wargrave had fallen to his most very timely death. Cindy and I were in plainclothes, and were logged in as SBI Reservists solely so we could carry guns in the City without problems. We both had Federal Firearms Permits, but the City had restrictions that infringed upon the 2nd Amendment.\n\nAs we got out of the elevator, we saw two groups of men in suits, looking at us warily.\n\n\"Sorry, you can't go in with weapons.\" one man said.\n\n\"You're kidding.\" I said. They all began to square up to me.\n\n\"It's all right, guys.\" said a voice behind them. It was State Senator Moe Molinari. \"The Iron Crowbar and his partner are extremely trusted people.\"\n\n\"Yes.\" said State Senator Jimmy Cerone from the same doorway. \"You guys trying to get hurt facing off against the Iron Crowbar? Let them in, let them in...\" We were allowed to go past the bodyguards, who actually apologized for inconveniencing us.\n\nOnce in the office, I swept for bugs, finding none. \"I did that earlier today, but I don't mind you coming in behind me and doing that.\" said Molinari. \"And I heard about you catching that LaCroix bum, as well. You'd think they'd learn by now, wouldn't you?\"\n\n\"Yes, Senator.\" I said. \"But they don't learn, and that makes it easier for me to catch them. So, gentlemen, how can we be of service to you today?\"\n\n\"Please, have a seat.\" said Molinari. \"Would you care for something to drink? Water? Coca-Cola?\" We politely refused as we sat down. Molinari and Cerone sat opposite each other at the round table, with Molinari's back to the window behind his desk, which gave a nice view of the Cannon Building. I sat to Molinari's right, Cindy to his left.\n\n\"What we've asked you to come here for,\" said Molinari, \"is that Mr. Cerone and I have eaten a lot of good lasagna and a lot of good steaks... and we have written an SBI compromise bill that will be accepted by most in both parties. We have not shared it with the Governor yet; that is why we've asked the two of you here. And of course to get your own inputs. Captain Ross's voice is important to us, as well as yours, Commander.\"\n\n\"Great!\" I said. \"We'll only have to get her up to speed on how good the lasagna is. So what's the plan?\"\n\n\"Here you go.\" said Cerone, sliding copies of a document to each of us. \"Read it at leisure.\"\n\nTo save time, a synopsis will be posted here, to wit:\n\n1. The SBI would be broken down into the six regions of the State corresponding with the State Department of Justice (SDOJ) regions. SBI Agents would be assigned regionally. They would not come into a local jurisdiction (professionally) unless asked for by that County's Sheriff or a Town Mayor or Police Chief within that county, and they would never have jurisdiction over a local case.\n\n2. The SBI could send Agents to other regions if requested, in a similar manner to SBI Reservists being requested. Those Agents would have to be requested by name(s), and would be under the same conditions as within their own jurisdiction.\n\n3. Regional SDOJ Directors would have a measure of control over the SBI, and would have the authority to force the SBI to stand down from any investigation at the request of a local jurisdiction; however, the Attorney General or Governor could restore the investigation if there was evidence to show corruption at the local level, and they would do this through the SBI Office of Ethics and Review, which would remain semi-autonomous, as SBI \"Internal Affairs\" as well as an agency that could investigate corruption at State and Local levels.\n\n4. The Narcotics Task Force (NTF) would also have to work through regions, though they would expect to coordinate and cooperate more throughout the State. There would be an NTF office within the SBI Director's offices in Midtown, where a limited number of agents would command and coordinate the NTF. They would be restricted within local jurisdictions to support of LEOs, and any independent actions they take would have to be shown to cross County lines.\n\n5. The SBI Reserve would be maintained as it is currently, but local jurisdictions would be encouraged to call Regional Agents from outside regions first. This was mostly because local jurisdictions didn't like having their best people leave for SBI investigations on the other side of the State. However, it would be available as always for those locals that would never trust the SBI, no matter what.\n\nAs I read the bill, I nodded. \"It's good.\" I said. \"It breaks the SBI down into regions, thereby devolving it to some extent; it puts curbs on the NTF, which is the bee in my bonnet; and the Governor-controlled SDOJ has some input with them. Very nice, gentlemen.\"\n\n\"Thank you, Commander.\" said Jimmy Cerone. \"But we do want to hear any negatives about it, as well. Speak now, or forever hold your peace, as the saying goes.\"\n\nI smiled. \"Yes sir. I am remembering the saying by George Washington that this will 'depend upon the wise and the honest' in order to work. It has a lot more checks and balances, and it's harder for someone to actually use the SBI as a corrupt force now, but get enough people in the right places that want to use it for oppressive power, and they can still do it.\"\n\n\"That issue was brought up to us.\" said Molinari. \"So we strengthened the State OER Office, and we put that bit about the Regional DOJ Directors being able to intervene. In actual practice, conflicts might end up in Court, but that's okay; they'll get some light-of-day on the problem.\" I nodded. \n\n\"Captain Ross?\" said Molinari. \"I know you might not be as familiar as your Police partner with all this, but that's what we want... what's your immediate thinking on this, unvarnished, and not tainted by our politics?\"\n\nCindy smiled. \"It looks to be like a reasonable compromise, at least for now. I think you guys will be back at it in a couple of years, though. And I'm also agreeing with Commander Troy, but more specifically: I'm thinking about dirtbags like Ferrell. How do we stop that kind of crap in the future. This should work on paper, but there's theory and then there's actual practice.\"\n\n\"Like the Iron Crowbar, and General Washington before him said, we have to count on the wise and the honest.\" said Molinari. \"Yes, we need to 'drain the swamp' that the SBI has become, but all we Legislators can do is give the Governor the tools to do that; it's going to be up to him and good people like you to carry it through.\"\n\n\"That's true.\" said Jimmy 'Coffin' Cerone. \"My Democrat colleagues, for the most part, want an honest SBI. They've seen how people have turned against an overbearing, overzealous SBI, and after what happened to that U.S. Marine, I can hardly blame people. They'll accept the regional plan, as long as the NTF still has room to operate.\"\n\nCindy looked over at me and I shrugged, knowing this might be all we were going to get. The other alternative, I knew, is that Republicans like Wilson Hammonds would cave in, and in fact were eager to do so.\n\nJust then, I saw a flash of red. A dot appeared on Cerone's right shoulder for just a second, then flitted away.\n\n\"What the fuck?\" I gasped out. Cindy had seen it too, and was already out of her chair.\n\n\"Gentlemen, please hit the floor!\" I said as I drew my gun and went towards the window. \"Captain, get their bodyguards in here!\" With Molinari and Cerone on the floor, Cindy went to the door and called in the bodyguards. They saw a red beam flitting around the room, and immediately covered their respective Senators.\n\n\"Okay, now for the test.\" I said. I was crouched under the window and to one side. I put my Tilley Hat on my crowbar and raised it to the window, twisting it to make the hat move as if I were looking around.\n\n*CRASH!*\n\nThe glass of the window came shattering into the room. I dove away from it, fortunately unhurt.\n\nLucky. Lucky Iron Crowbar.\n\n\"Don!\" cried out Cindy. \"Are you okay?\"\n\n\"Just fine.\" I said. I got my cellphone out and speed-dialed Muscone. \"Jack! We're under attack! Sniper on the roof of the Cannon Building. Get the Cannon Building sealed off!\"\n\n\"Roger that.\" said Muscone. \"We're sending in drones, too.\"\n\nAs Molinari and Cerone's men got them to the safety of an inside hallway, I got a polished metal plaque from the wall and used it to look over the edge of the window. I could see the roof of the Cannon Building, but no one on it.\n\n\"Stay away from the window.\" I whispered as Cindy came up to the other side of it. Then I saw drones flying in from different angles. I risked a quick peek.\n\n\"Drones are overhead. I'm seeing no one...\" said Muscone on the phone. \"What the...?\"\n\nI looked out. Two drones over the Cannon Building dropped out of the sky and crashed on the roof, much like the helicopter with me and Pastor Westboro had. Then other drones coming in started dropping... and some were going to hit the street!\n\n\"Call off the drones!\" I said to Jack in my cellphone. \"They're being disabled and are falling out of the sky. People on the street might get hurt!\"",
        "\"Roger that.\" said Muscone. \"We've lost eight already.\"\n\nI heard the wails of Police car sirens. Police came up and began locking down the Cannon Building, followed by FBI Agents from the Federal Building coming over. But for all of their efforts, the sniper would not be found, nor anyone with equipment that could disable and destroy drones.\n\n* * * * * * * * * * * * * * * *\n\n\"The Cannon Building people were very, very slow to respond when we called them to lock down the building.\" said Jack Muscone. \"Their security guards did almost nothing, even though they could've quickly had every door locked and the entire building quarantined. The security cameras show nothing, either.\"\n\nWe were sitting in the Conference Room of the FBI Offices in the City Federal Building. The FBI DepDirector had just arrived in the City from the Airport, and his helicopter ride had been aborted because of the shooting. In addition to the DepDirector and Jack's team, Senators Molinari and Cerone were also in the room with us.\n\n\"Very rare for you to be sitting in an FBI office, Senator Cerone.\" I said, joking with him. He didn't like it much, but nodded in acquiescence.\n\n\"Missing my lasagna, too.\" he said simply.\n\nNow in present time, I said \"Yes, the perp was gone quickly, and the Cannon Building people did nothing to help that. But someone in this area, maybe not in that building, but somewhere around here, took out eight FBI drones. They didn't just lose signal and hover and descend to the ground... those things got put out of action and destroyed.\"\n\nI then turned to Molinari and Cerone. \"And I need to say this. I know Senators Molinari and Cerone have not been friends in the past. And their working together on legislation has been an exercise in overcoming mountains of distrust. So I will say to both of you that this was not an action by either of your people, nor by a third-party Organized Crime group against either of you. And I am not sure that either of you were the primary target of the attack.\"\n\n\"Thank you for saying that, Commander.\" said Jimmy Cerone. \"And you're right... we were lucky today our bodyguards didn't go after each other. But who was the target?\"\n\n\"Probably me or Captain Ross.\" I said.\n\n\"If I may ask,\" said Sandra Speer, \"why DO you think it wasn't the Senators?\"\n\n\"The drones.\" I said. \"That was serious sophistication to take those drones out. With all due respect to these State Senators, they could be assassinated in the halls of the State Capitol, or driving to Midtown. But whoever knew how to wax those drones? They're trying to protect something... something Captain Ross and I have been looking into.\"\n\nThe meeting broke up, with the DepDirector thanking the Senators for coming in to talk. Afterwards, Cindy and Jack's team talked while Jack and I were brought into the DepDirector's office. I noted that it was really getting a 'lived in' look these days.\n\n\"Let me channel my inner Crowbar,\" said the DepDirector once we were all seated, \"and say that you think this has to do with that Federal installation you've been looking into.\"\n\n\"The thought did cross my mind, sir.\" I said. \"Though I'm not totally certain. There's all that with the Burkes being killed, also. None of the Superior Bloodlines issues have gone away.\"\n\n\"So let's just work through this.\" said the DepDirector. \"Here is what you have on your plate, Commander: you have the Jeanine Burke killing, the Michael Burke killing, the Black Velvet killings, the nerve gas attempt, the riots, a dirty lawyer using the System to fuck with you and bugging you, too, and of course your involvement with the SBI legislation, which has now caused shots to be fired at you yet again. Did I miss anything?\"\n\n\"I don't think so, sir.\" I said. \"So... what can you tell me about the Federal installation, sir? I did get word the radio communications there have shut down completely. No blurps, no nothing.\"\n\nThe DepDirector exhaled. \"You're right. Whatever was there, and I have no clue what was, has been taken out and the facility totally abandoned. I did ask if there was anything that could help with these serial killings, and was told 'no'. They're starting to classify the place almost to the level of Area 51, now that the City and the SBI Reserve are aware of it, and the genie cannot be put back into the bottle.\"\n\n\"And then this assassination attempt.\" said Muscone. \"Think they might try again?\"\n\n\"Maybe.\" I said, going introspective. \"But I'll tell you something interesting, something that is nagging at me. The drone kills. I get the feeling that this sniper attack was somewhat in the works, then someone came along and said 'Let us see how our drone-killing technology works!'. And now they know it works very well.\"\n\n\"You got that right.\" said Muscone.\n\n\"By the way,\" said the DepDirector, \"I've asked Les Craig to work with us on the Federal side of these murders. Lindy has some information on that, as well. Get with her before you leave today.\"\n\nPart 10 - Frozen Meat\n\nWe ended the meeting and went back to the conference room. The DepDirector said \"You needed to see me, Captain Ross?\"\n\n\"Yes sir.\" Cindy said, getting up and walking past me. She went with the DepDirector back to his office.\n\nI looked around the room, seeing the downcast faces of Jack's FBI team. And I smiled. A smile of immense relief.\n\n\"Lindy,\" I said, \"you had some information on the Black Velvet situation?\"\n\n\"Yes.\" said Lindy. She handed me a jump drive as well as a sealed folder. I opened it and sat down to begin reading.\n\n\"As you can see,\" Lindy said, \"the ownership of the Millwakee facility was with Power Properties, LLC., a shell group, and hoops of other legal steel protecting it. It's a Nevada corporation; I couldn't get the names of any people.\"\n\n\"We then searched for anything related to Dr. Yarborough.\" said Lindy. \"Any staff at the facility was paid for by the School, and the taxes paid through them, but there's nothing specific for the school; they kept it off the record books very effectively by going through the school.\"\n\nLindy said \"But I did have some luck in researching Dr. Yarborough's grad students and undergrad students that worked with him a lot. And we've got two names. One is John Meadows, now Headmaster of Walnut Prep. The other is a man named George Aurus. I checked, it's not a fake name.\" I smiled at that.\n\n\"I know I'm being politically incorrect to say this, but George Aurus is a midget. He stands at 4 feet, 2 inches tall, and that might be stretching it. I'm trying to find a record of it, but Aurus might've been a patient, or inmate or what have you, at Millwakee. He was definitely a runaway and a street urchin, as they called him at Child Protective Services. Their records of him were spotty, but nothing very positive there.\"\n\n\"So George ended up traveling with Gypsies for a while; he may have known your uncle, Dr. Eckhart, when Dr. Eckhart was a youngster and was with them. George was a show act, then for two years was with a big national Circus organization. Then he ended up at City University, working with Dr. Yarborough again. After Yarborough died, George essentially fell off the grid.\"\n\n\"Anything more on Headmaster Meadows?\" I asked. \"He doesn't seem old enough.\"\n\n\"Not much.\" said Lindy. \"He was very young when he was doing a doctoral thesis on teaching the underprivileged. And Dr. Yarborough was his professor, but died before Meadows finished his thesis. Meadows never was reassigned to another professor, and he never got a Ph.D. from anywhere.\"\n\n\"Hmmm, interesting.\" I said. Just then, Cindy came back, followed by the DepDirector. \n\n\"Commander, are you staying here while the investigation is going on, or going home?\" asked the DepDirector.\n\n\"I need to get Captain Ross back home.\" I said. We made our goodbyes and left.\n\n* * * * * * * * * * * * * * * *\n\nAs we drove back, I noticed that Cindy's face was one of inner peace, of a weight that had been on her shoulders now gone.\n\n\"So,\" I said as I drove, \"you turned down the FBI job.\" A platinum blonde head turned sharply in my direction. The look on Cindy's face was now priceless.\n\n\"How in the hell?!?!...\" she started, then said \"They told you, didn't they? They said they weren't going to, but---\" I was shaking my head vigorously.\n\n\"No one told me anything.\" I said. \"At least not today. Several months ago, back last year, the Deputy Director and Jack Muscone talked with me about coming to the FBI full time. Of course I said I was happy where I am now. Then they said they wanted to offer you a place on their team, with or without me. I gave them my heartiest recommendation and praise for you, and told them they could ask you, and I'd say nothing.\"\n\n\"Wha... you didn't try to stop them?\" Cindy said. \"Do you want me to join them?\"\n\n\"Hell no!\" I exclaimed. \"But I've heard from Molly how it was your childhood dream to be in the FBI, and they were offering you the chance. No way I was going to interfere with that! What is that adage? 'If you love something, set it free. If it comes back to you, it's yours; if it doesn't, it never was.' Of course I want you with me in the TCPD, but I'll never stand in the way of your happiness.\"\n\n\"I appreciate that. Very much.\" Cindy said. \"And I did want to say 'yes', and I really thought about it. But I'm a Consultant with them as it is. And you want to know the real reason I turned them down?\"\n\n\"Sure.\" I said.\n\n\"You.\" Cindy said. \"I realized how great it is to be working with the best Detective I'll ever meet. But more than that... when you went and got Mikey Towson and brought him home... it just reconfirmed what I already knew: that you were not only a great man, but a good man. And I knew then that I wanted nothing more than to be working at your side, wherever we are.\"\n\nI was very touched by Cindy's comments, which I knew came from her heart. \"Well, you are now stuck with the Town & County Police Commander, until they kick both of us to the kerb. And there's no one I'd rather be stuck with than you... Green Crowbar.\"\n\nNot much more was said as we drove into the sunset towards home. No more was needed to be said out loud.\n\n* * * * * * * * * * * * * * * *\n\nAt 6:30am, Saturday, February 18th, my Police cellphone rang. Bowser barked his head off, until my daughter Carole said \"Hush, Bowser!\", whereupon the barking stopped.\n\n\"Troy.\" I said as I answered the phone as Laura went to attend Carole.\n\n\"Duty Desk, Commander.\" said the voice on the line. \"Some suspicious activity near King & Ebenezer Food Industries was reported, and a patrol checked it out. They want you to come down and look. They found some bodies.\"\n\n* * * * * * * * * * * * * * * *\n\n(Author's Note: see Case of the Black Badge, Ch. 02 at the beginning, for more on the below comments.)\n\nI had a flashback to three years before, when the bodies of Carroll and Blondie were found hanging at King & Ebenezer, and Tanya Perlman just standing and looking at them when I entered. Today was almost exactly the same: two bodies were hanging on tenterhooks, and Tanya was observing them... but sitting in a wheelchair, a painful reminder of all we'd been through since the Case of the Black Badge.\n\n\"Ever get a sense of d\u00e9j\u00e0 vu, Commander?\" asked Tanya as I came up.\n\n\"Only when someone is obviously trying to copycat previous crimes,\" I said, \"which is sheer stupidity on their part. But I should be grateful for their stupidity. Makes our jobs much, much easier.\"\n\n\"True, sir.\" said Tanya. \"These bodies are not exactly the same, though. No Colombian neckties. Their eyes were gouged out, and I think that was done very early in their torture process. They were tied up, their cocks cut off and stuffed in their mouths, and then they were summarily disemboweled.\"\n\n\"Who are they?\" I asked. \"Oh, shit... the fat one is LaCroix!\" I was recognizing the out-of-shape LaCroix, mostly by the gray hair around the abused face.\n\nThe other man was taller, apparently pretty fit and muscular, and had a full head of black hair. But his face was in horrible condition, and I did not recognize him at all.\n\n\"And they didn't bleed out here, so they were imported.\" I said, seeing the floor, and the lack of bodily fluids on it. Tanya agreed.\n\n\"Okay, let's get your Crime Lab team in here.\" I said.\n\n* * * * * * * * * * * * * * * *\n\n\"It was Johnson and Goodwright that answered the call, sir.\" said Sergeant Rudistan, who'd just arrived. \"The Duty Desk put out a radio call of activity reported at King & Ebenezer Food Industries. The phone that called in was a burner, and the tower it pinged was the one closest to here.\"\n\n\"Johnson, Goodwright,\" I said to the two officers. \"Did you see anything?\"\n\n\"Sir,\" said Johnson, \"we came up Riverside Drive from the south. We didn't see any vans or large vehicles. The gate was open when we pulled in. There were no other cars here. We stopped in front of those tracks, and the Crime Lab is photographing them and getting impressions.\"\n\n\"Good.\" I said. \"Anything else?\"\n\n\"Faint footprints up to the warehouse door, sir.\" said Goodwright. \"We came to clear the warehouse first, though. When we came in, there was no one, but when my light hit those bodies... well, sir, I might have screamed.\"\n\n\"Both of us were shocked, sir.\" said Johnson. \"We called it in right away.\"\n\n\"Good work.\" I said. \"Okay, secure the perimeter, take the bodies straight to the morgue, and have some Patrolmen search the property and around the perimeter---\"\n\nA Police SUV barreled through the outer perimeter and stopped with a screech of tires. The notoriously fast driver was the daughter of Dr. P. Harvey Eckhart, notoriously fast in his own driving habits.\n\n\"You better have a good reason for mowing down half my Police Force.\" I told Cindy. Then I saw who was getting out of the passenger side: Captain Teresa Croyle.\n\n\"Sir!\" Teresa said loudly as she got out of the SUV. \"You are exposing yourself to possible sniper fire. I must ask you to add more protection and come to a place of better safety.\"\n\n\"Like a State Senator's office?\" I asked. Seeing Teresa's face get more worried, I said \"I appreciate your concern, Captain, and you're doing your job. But I've got a crime scene to look at.\" Neither of my Angels were mollified until I went and got into my Police SUV. Cindy got in the shotgun seat and Teresa in the backseat.\n\n\"I think one of the bodies is Wayne LaCroix.\" I said. \"Croyle, send units to check out his location. Also, it's a longshot, but have someone go up to the Fire Department range and see if there's any sign that this was done there.\" Teresa got on the radio and put out the calls.\n\n\"Someone cleaning up a mess?\" Cindy asked as we watched the Crime Lab people at work.\n\n\"Making one, actually.\" I said. \"But to your point: yes, someone is cleaning up. LaCroix made a huge mess of things, and they took him out before he could talk. Ohhhhhh... wait a minute...\"\n\nI got out of the SUV as the bodies were being brought out. A moment later, Tanya was loading herself into her State Crime Lab van. As she locked her wheelchair in place, I stuck my head in the door.\n\n\"Tanya!\" I said. \"You still have the DNA profiles from Terry Schultz's killer, and the DNA under Jeanine Burke's fingernails?\"\n\n\"Sure do.\" she said. \"Ohhhh... you think...\"\n\n\"Yes I do.\" I said. \"I will not come over all shocked if the other dead body here is that of Jeff Fuqua...\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/frozen-mothballs-ch-02"
}