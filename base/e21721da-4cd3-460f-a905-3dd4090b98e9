{
    "title": "Wheels In Motion Ch. 01",
    "pages": [
        "*** This series was awarded the Most Literary/Genre Transcending award in the . Thank you to all my readers and all who voted. ***\n\nHello friend. Welcome to my series, Wheels In Motion.\n\nThis is a slow-building lesbian romance story. There is no sex in the first few chapters. If that's not your groove, please feel free to skip it and go find something else that works for you. I promise I won't be hurt, and you'll be happier. It's win-win!\n\nYou don't have to have read my other works to enjoy this story; you certainly won't be lost here if you haven't. However, if you have read my other stories, you'll get a little bit more out of this series because you'll have some background knowledge you might not otherwise have. Then you'll get to feel superior to those who aren't in the know! Also, this story contains massive spoilers for my Hard Landing series. You've been warned.\n\nSpecial thanks to my beta-readers, Salandar and ArmyGal33, and my editors, VixGiovanni and AwkwardMD. Without their help and support, this series wouldn't have gotten off the ground.\n\nI hope you enjoy. Leave me a comment if you care to.\n\n~~ Pentagon City, Virginia, October ~~\n\nI had no reason for the butterflies in my stomach. There was no doubt in my mind I could do this, but the noise from the thirty thousand or so people lined up behind me wasn't helping me with the nerves that came from lining up for my first ten-mile race.\n\nThree UH-60 Blackhawks did a pre-race flyover in formation. The crowd ooh-ed and aah-ed while I suppressed a yawn and adjusted my sports bra. I'd flown as a flight medic on a Blackhawk for more than two years, so I was less than dazzled. My therapist at Walter Reed had suggested that seeing them up close again might cause me anxiety issues, but so far, I'd had no problems.\n\nWhen the Army Golden Knights parachute team dropped in carrying the American flag for the pre-race National Anthem, I was more suitably impressed. The six jumpers landed one after another on a bullseye three feet across after dropping from five thousand feet above the Pentagon. That was nothing to yawn at.\n\nThe worst part for me was the playing of the National Anthem. When the opening bars started, the urge to jump to my feet was overwhelming. Three years in the Army had drummed it into me that I should be at attention, saluting the colors, but I wasn't in uniform anymore. Nor was I standing. I had to be satisfied with sitting up straight, hand on my heart.\n\nWhen the last note faded away, I listened to the cheers of the crowd behind me while I put on my baseball cap and adjusted my ponytail. I donned my sports sunglasses to shade my eyes from the brilliant fall sunshine, checked that the Velcro wrist straps on my gloves were snug, and then grabbed the push wheels of my wheelchair and rolled closer to the start line.\n\nThe Wounded Warriors, as they called us wheelchair athletes, were always in the first of the ten waves of the Army Ten-Miler race. It made sense, really. It took me a little bit to get up to speed, but once I got going on flat ground I was faster than most runners. I'd looked up the winning times for the wheelchair competitors from the year before. The first-place finisher had done it in forty-four minutes. An average of almost a four-and-a-half-minute mile for ten miles. Not too many people could do that on foot. Since this was my first Ten-Miler, I had no delusions about finishing in under an hour, but I'd been hitting over ten miles easily for the last few weeks in my training runs and I knew I could at least do the distance.\n\nI pulled up next to a truly impressively-built man wearing a sleeveless Marine Force Recon t-shirt. He probably would have been six-four had he been standing. His arms looked as big around as my waist and the one closest to me sported an Eagle, Globe and Anchor tattoo. His racing chair was the same model as mine, just two sizes bigger.\n\n\"Ooh-rah, Recon,\" I said. He looked over at me and I saw his eyes go to the Eighty-Second Airborne patch on my hat.\n\n\"Hooah, Airborne,\" the Marine replied.\n\n\"Have you done this race before?\" I asked him.\n\n\"Yeah, it's my fifth time.\"\n\n\"This is my first. Any advice?\"\n\n\"You're going to be tempted to slack off going up the hill towards the Capitol, but if you push through to the top, you can coast for almost a mile and recover while coming back down. Nice chair, by the way.\"\n\n\"Thanks, I just got it a few months ago. I'm Liz Charles.\" I offered my hand and he shook it. My hand disappeared in his gigantic fist.\n\n\"Mark Graziano.\"\n\nDespite his monster muscles, he was cute. I had thoughts of offering him my number for about a half-second, but as a general rule I didn't date Marines.\n\n\"How do you like your chair?\" I asked.\n\n\"It's one of the best on the market. I tried some of the cheaper ones but you gets what you pays for. You made a good choice for your first.\"\n\n\"I can't take the credit. My PT at Reed recommended it to me.\"\n\n\"Well, you--\" Mark was interrupted by the PA announcer calling for the first wave to take their places. \"Sorry, race time. Maybe I'll see you when you get to the finish line,\" he said. The gun sounded and he took off without looking back.\n\nI really hadn't planned to get competitive for this race, I just wanted to finish, but I suddenly got pissed off. 'See you when you get to the finish line' my ass. I grabbed my wheels and started pushing myself after him. I guessed there were maybe a hundred wheelchairs in the race but he was so big that it was easy to keep an eye on him as I kept pace with him from about fifty feet back.\n\nI'd only had my racing chair, an Invacare Preliminator, for a couple of months, which really wasn't much time for getting used to any chair. It was a really sweet piece of tech though; so much better than the ones at Walter Reed that I'd started training on, and half their weight. The two main wheels were canted out away from the seat, giving me a better angle to push, and the bearings were so smooth it felt like it would glide forever when I was coasting. Instead of two front wheels, there was a strut that projected between my legs more than three feet out in front of my knees, with a single wheel on a shock absorber. Whenever I was in my everyday chair, I missed how easily this one rolled.\n\nOnce we got out of the immediate area of the Pentagon and were cruising up Richmond Highway towards Rosslyn, I coasted for a moment while I put in one of my Bluetooth earbuds. Technically, headphones weren't allowed in the Ten-Miler, but I'd been told people used them all the time anyway. I needed some beats if I was going to be pushing my chair for an hour or more. My phone was in a holder I'd strapped around my thigh so I could keep an eye on the MapMyRun app as we went through the course. I switched over to Spotify, pulled up my favorite racing playlist, switched back to my running app, and then settled into the tedious task of pushing my wheels over and over. And over... and over.\n\nI noticed from the start that the fastest wheelchair athletes weren't very large people. The ones with the slim, swimmer-looking upper-body build were the racers who had immediately pulled away from the pack. I found it easy to keep pace with the big Marine. In fact, within the first mile I knew I could probably pass him anytime I wanted to, but I decided to play a tactical game. I followed him over the Key Bridge, then down the Whitehurst Freeway through Georgetown and towards the Kennedy Center, conserving my energy.\n\nAs we came around the backside of the Lincoln Memorial I started keeping an eye on the side of the road where my friends had told me they were going to camp out. I spotted them standing on the curb, cheering on the other racers, before they saw me. I let out a sharp whistle to get their attention about fifty yards before I reached them, and angled myself towards the side of the road.\n\nThey were pretty easy to pick out of the crowd. One was a tall, thin woman with long, bright blue hair standing next to a shorter woman, solidly built, like a CrossFit enthusiast, with a purple flat-top haircut. The taller woman, Jill, was holding up a sign that read, \"Liz puts the 'Special' in 'Specialist'!\" She started yelling, \"W-o-o-o-o-o!\" when she saw me.\n\nThe shorter woman, Jo, was ringing a cowbell with her right hand and leaning out from the curb, holding out her left hand to me for a high-five and yelling, \"Go Liz! You got this!\"\n\nI yelled out as I rolled up to them, \"Can't stop, I'm running down that jarhead!\" and pointed out the Marine ahead of me. He turned his head in surprise as he heard me call out, and then sped up. I held out a hand and slapped Jo's as I flew past, yelling, \"Thanks, Chief!\"\n\n\"You beat that Navy rent-a-soldier and drinks are on me tonight, Liz!\" Jo yelled after me. \"See you at the finish!\" I spared myself enough breath for a laugh as I worked to re-close the gap between me and the Marine. I wanted to be right on his tail when we started the climb towards the Capitol building.\n\nAs I'd expected, when we started up the mile-and-a-half long hill he slowed down. He was easily more than three hundred pounds of meat and chair, whereas my total weight was probably under one-fifty. As we started up the hill, I made my move.\n\n\"Maybe I'll see you when you cross the finish line,\" I said, as I passed him, then saved my breath and focused on the road. I decided not to look back the entire hill, but focus on my wheels and my breathing. The Marine had been right; I wanted to ease up on the climb--it was brutal--but I followed his advice and powered through to the top.\n\nWhen I made the loop at the top of the hill and started back down the other side of the street towards the left turn onto the Nineteenth Street bridge, I didn't see him at first. There was a moment's panic that he was right on my tail but then, as I coasted into the turn toward the bridge, I caught a glimpse of him still climbing the hill, huffing and puffing. He was being passed by two more smaller guys in wheelchairs, and I was at least three hundred yards ahead of him. I grinned and redoubled my efforts. No way I was going to let that jarhead run me down the last few miles.\n\nAs I cruised into the area around the Pentagon with maybe a half-dozen other wheelchairs and two of the fastest distance runners I think I'd ever seen, the crowds on the sides of the roads increased in size as well as volume. There were more cowbells than I could count, and I found myself wondering where that particular race tradition had come from.\n\nDozens of people on the sides of the course were holding out hands to offer high fives to racers, but I didn't slow down to give any. I didn't want to be that person who let up and got passed right at the finish, so I poured on everything I had left in my tank for the last few hundred yards and kept pushing until I sailed under the finish line archway at full speed, chest heaving with every breath. I looked up at the race clock as I passed it. 1:03:35. Not bad. My best ten-mile time yet, in fact.\n\nI was in the finish area, looking around for Jill and Jo, when the Marine rolled up to me. His face was red and he was drenched in sweat. He held out his hand and, as I shook it, he said, \"Hell of a race for your first time out, Army.\"\n\n\"Thanks, Recon.\"\n\nHe grinned ruefully at me. \"I expect you might win the women's class in a couple of years if you keep at it.\"\n\nI arched an eyebrow at him. \"The women's class? After I blew your doors off you're still going to underestimate me, Marine?\"\n\n~~ Fort Bragg, North Carolina, October ~~\n\nIn some ways, I had been looking forward to coming back to the base. In other ways, I'd been dreading it. I wasn't sure if I'd have come at all if Jo hadn't offered to let me ride down with her and Jill.\n\nOur unit was redeploying back to Fort Bragg after a year in Afghanistan the week after the Army Ten-Miler and we were here for the homecoming ceremony.\n\nJo and I had been deployed with the unit to Afghanistan the previous October. Our helicopter was shot down by a hidden Taliban gun emplacement in April. The crash left my spine severed at the T9-T10 level and I could no longer move or feel my legs. Chief Warrant Officer Jo Collins was one of the two aircraft pilots, and our commander. She took a round in the leg in the initial burst of fire, but she managed to crash land us after we'd lost both turbines. If she had been a less-skilled pilot, we'd probably all have been killed. She lessened the impact enough to save some of us, but we lost Sgt. Jackson and Jo's copilot, Chief Nguyen. No one escaped unscathed. Jo suffered a skull injury, and was in a coma for three weeks; she also lost her left leg from mid-calf down. Our crew chief, Sgt. Ehrens, suffered multiple fractures of both legs and a couple of cracked vertebrae, but in the intervening months he had almost healed up and was ready to go back to active duty.\n\nI'd managed to get my dress uniform mostly in place at the hotel, but I wasn't inspection ready. It was just too hard to get everything settled right while dressing myself lying on a bed. Sliding my ass into my chair had made it worse. But as usual, the Chief had my back.\n\nShe'd pulled my chair out of the back of her red Jeep Renegade in the parking lot at the base, unfolded it and set it next to the back door of the SUV. Then she waited for me to slide myself into it and called Jill over.\n\n\"Alright Liz, let's get you up,\" she said, as she and Jill each put a shoulder under one of my arms and lifted me. They leaned down while holding me up, straightening the wrinkles in my uniform pants and making sure they were bloused into my jump boots just right, tucking and smoothing everything just so, and then set me carefully back down in my wheelchair. I eyed myself critically. Squared away, no wrinkles or creases. Jo had seen my need and addressed it without making a big deal of it.\n\n\"Thanks, Chief,\" I said gratefully.\n\n\"No problem, Specialist Ch... Ch... Charles. We don't want some sergeant major dinging you on your dress uniform, today of all days,\" she said, handing me my maroon beret from the back seat. Since the crash and her coma, she'd had trouble saying people's last names. Lingering neurological trauma, they'd told her, but she'd been getting better all year.\n\nJo straightened her own dress jacket, squared up her beret, and we headed to the parade ground. Jo's limp from her prosthetic leg was barely noticeable now. She'd also had her flat top haircut dyed from purple back to a normal regulation blonde earlier in the week. Not that she'd had to. She and I had both been medically retired. We were in uniform for the ceremony because we wanted to be. Her fianc\u00e9, Jill, was wearing a dress befitting a military spouse; a pale yellow number that came down to mid-calf and was set off, rather magnificently, by her brilliant blue hair.\n\nSgt. Ehrens was waiting for us at the parade grounds. He snapped off a picture-perfect salute to Jo as she walked up to him. She returned it, then embraced him warmly.\n\n\"Good to see you up and about, Chief.\" He hadn't seen either of us since we'd all been in the hospital together at Ramstein Airbase.\n\n\"Thanks, Billy. You're looking good. Going back active soon?\"\n\n\"Next month, they tell me.\" He turned and gave me a hug. \"Good to see you too, Liz.\"\n\n\"Thanks, Billy. Good to be back. Sorta,\" I said.\n\n\"I hear you.\"\n\nThe Sarge had been a great crew chief. I was going to miss flying with him, which was not to say I was going to miss flying. Jo was trying to get medically cleared to fly again in the civilian world, but I was pretty sure I'd never willingly get in a helicopter again for the rest of my life.\n\nWe found seats in the bleachers together, after the Chief and the Sarge had chased off some PFCs from the front row so I could park my chair next to them. I'd been to a few of these, so it felt familiar and comforting to listen to the battalion commander, Lieutenant Colonel Wilson, as he went through the motions of welcoming the unit back to the States, recognizing our efforts toward the mission, lauding our praises at making a difference.\n\nThat last bit caused me to exchange a glance with the Chief. It hadn't really felt like much was different in-country, between the start of our deployment and now. Or the start of the war and now, for that matter. None of us would say that, though. Not here. Not now.\n\nThe moment in the program came when the Lt. Col. paused to recognize those we'd lost over the last year. Twelve names, including Jackson and Nguyen. I struggled to remain impassive until I noticed a tear sliding down the Chief's face; then I let myself feel for a moment.\n\nBoth Sgt. Ehrens and Sgt. Jackson had taken me under their wings when I'd joined Jo's crew. Jo was a hell of a pilot, and had been an outstanding commander, but she expected excellence from her crew. There had definitely been a learning curve to adjust to the high expectations of everyone on our bird.\n\nA year of hard work, listening and learning from Sgt. Jackson... Ben... had been its own reward. He'd shaped me into an integral part of the crew, and a better soldier than I'd have been under another sergeant. The nods of respect that E6's and E7's had given me when I was introduced as the flight medic on Chief Collins' bird, regardless of me being a lowly specialist, had always been gratifying. Jo had always held her head high and walked tall, and she expected everyone on her crew to do the same. There'd been no better example of that for me than Ben Jackson.\n\nDuring the awards presentations, I was shocked when the Lt. Col. called out \"Specialist, Elizabeth Joan Charles.\"\n\nJo and I both gave Sgt. Ehrens a dirty look and I heard Jo hiss at him, \"You told them we'd be here?!\" but he just grinned at us.\n\nI nervously rolled up to the front. A thousand eyes were on me as Lt. Col. Wilson announced that I'd been awarded the Military Order of the Purple Heart as well as a Bronze Star. He saluted me, presented me with a fancy box holding the medals, and then he shook my hand and thanked me for my service and sacrifice.\n\nJo and I had both already been presented with the Purple Heart and Bronze Star when we'd been at Reed, but it was different to get official recognition in front of my unit and my peers. Special.\n\nThe next name called was, \"Chief Warrant Officer Three, Jocelyn Marie Collins.\" She didn't look happy as I passed her on my way back to the bleachers. The Chief was the type who just wanted to do the job and not get applauded for doing it, but I was happy she was being awarded with her fianc\u00e9 present. Jill was so in love with Jo, and it was nice for her to see Jo getting recognized in front of the battalion.\n\nWhen she got up to the commander, he read off her awards. Purple Heart. Bronze Star. Then he announced that it had taken more time for approval but she was also being awarded with the Army Air Medal, with the \"V\" device to denote an act of heroism; specifically, for controlling her helicopter's descent and saving the lives of two of her crew despite being gravely wounded by enemy fire. The Lt. Col. went on to announce that Chief Warrant Officer Two Eric Nguyen was also being awarded the same honor, posthumously.\n\nWhen she returned to her seat, Jo didn't speak. She just sat with a stone-faced expression, a look I'd come to recognize at Reed that she used when she was dealing with her emotions. I took it as a positive sign that when Jill reached out for Jo's hand, Jo returned the gesture and gripped her hand tightly.\n\nThe reception afterwards was a fairly boisterous affair, with a lot of celebrating for those who didn't depart immediately to go home with their families. Our commander in Afghanistan, Major Seely, came and sat at our table, holding a beer. Jo and I had both tried to salute him when he arrived but he'd waved us off.",
        "\"I should be saluting you two. I sat at a desk most of the year,\" he said.\n\n\"Major, I'll be saluting you for the rest of my life after your help with GW,\" I said.\n\nI'd been flown to Walter Reed from the hospital at Ramstein Airbase at the end of May. By the time I realized I was going to be free to start attending college in the fall, I'd missed all the application deadlines. I found out later that shortly after I'd mentioned that fact to my old command sergeant major in an email, he'd told the major, who had then called the admissions office at George Washington University, where he was an alumnus and where I'd wanted to apply. He'd informed them that the school would be worse off if I wasn't enrolled in classes that fall.\n\nWhen that didn't work, they received a package with twenty letters of recommendation from various sergeants, lieutenants, and even a colonel who had been on the hospital staff at Bagram who'd taken a shine to me. When that didn't work, they'd gotten a call from the Major General in command of the Eighty-Second, who also happened to have gotten a master's degree there, recommending that GW get off the pot and make sure I was enrolled for the fall semester.\n\nThe day after that, I'd gotten a call from the admissions office telling me that I needed to get down there as soon as possible so they would have time to get a full schedule of classes set up for me for the fall semester. I didn't know about any of this until later, but the entire effort had been Major Seely's doing from an air base in Afghanistan. The major's good people.\n\n\"You don't have to thank me for that Liz,\" he said, then took a swig of his beer. \"Just don't waste it.\"\n\n\"I won't, sir. After all the college work I've been doing while I've been in the Army, I'm only five semesters away from my bachelor's degree. Four, if I can test out of a few more courses.\"\n\n\"You're telling me you started college this fall and you're already a junior? Almost a senior? What's your major?\"\n\n\"Biology/pre-med, sir.\"\n\n\"Dr. Charles, huh? I like the sound of that. Make sure you keep me up to speed on your career, Liz. You're going to make us all proud.\"\n\n<p align=\"center\">~~ FOUR YEARS LATER ~~</p>\n\n~~ George Washington Hospital, Washington DC, January ~~\n\nThe man in bed three gave a loud yelp of pain and started cursing as I rolled up to his bedside. \"Can someone else please come do this?!\" he snapped.\n\n\"Sir, please calm down. You being tense doesn't make this any easier for me,\" the young man wearing a white lab coat said. I'd heard the new first year resident had started this week, but this was my first time meeting him.\n\n\"Everything okay?\" I asked.\n\n\"Hell no! This quack has stuck me four times now!\" the man in the bed exclaimed.\n\n\"Nurse Hayden?\" I said to the nurse on the other side of the bed.\n\nShe looked back at me and her eyes told me all I needed to know, but she covered by saying \"Mr. Stevens is really dehydrated, so his veins are pretty flat. It's a tough stick.\"\n\n\"It's fine! I'll get it this time,\" Dr. Andrews said. I watched him prep a new site, line up the IV cannula, concentrate, then poke the needle into the back of the man's hand again. I winced as I watched his placement. There was no flash of blood in the collar, indicating he'd missed the vein again. Mr. Stevens started cursing once more, which turned into a hacking cough.\n\n\"Okay, Dr. Andrews, take a break.\" I said and rolled my chair up next to the bed. Nurse Hayden pressed the control to lower the bed to a better height for me, forcing him to step back with an exasperated look.\n\n\"Hey! What do you think you're doing? I'm the doctor here!\" he exclaimed, obviously annoyed. I rolled my eyes as I pulled out a fresh line kit and started prepping the back of Mr. Stevens' hand again.\n\n\"Listen, maybe I don't need an IV. Can we please just not do this anymore right now?\" Mr. Stevens asked Nurse Hayden.\n\n\"If you want to stop, we can Mr. Stevens, but she's already got your line in,\" Nurse Hayden said.\n\n\"What?\" Mr. Stevens said, looking down at his hand.\n\n\"What?!\" Dr. Andrews said, looking over my shoulder as I taped the line down to Mr. Stevens's wrist.\n\n\"I barely felt that!\" my patient exclaimed.\n\n\"There you go Mr. Stevens, you're all set. Nurse Hayden, let's get a liter in him then recheck his vitals please. We'll be back to check on you in a bit Mr. Stevens.\" I smiled at him as I patted his knee then turned my chair to roll out into the hall as Dr. Andrews followed me.\n\n\"Hey, that was bullshit! Where does a nurse get off pushing me out of the way?!\" he said, walking behind my chair. I guess it wasn't entirely his fault. I rarely wore a lab coat since they tended to hang over the side of my chair and get caught in my wheels. I could admit my scrubs and the long sleeved, waffle-patterned Henley that was my usual work attire looked like what most of the nurses in the E.R. wore.\n\n\"Is there a problem Dr. Andrews?\" Dr. Jaya Chandra, the attending physician asked as she appeared, blocking our path. \"I'm taking it you two just met?\"\n\n\"This nurse elbowed me out of the way and performed an unauthorized needle stick!\" Andrews said, with some satisfaction in his voice.\n\n\"Let me make introductions, then. Liz, this is Jimmy Andrews, first year, who started this week.\"\n\n\"Dr. Andrews!\" he exclaimed, then stopped sheepishly at the look Dr. Chandra gave him.\n\nShe continued. \"Dr. Andrews, this is Dr. Liz Charles, second year resident, who is going to be in charge of some of your training rotations, including tonight.\"\n\n\"Ah...\" His face took on the color of a sickly tomato.\n\n\"Yes, 'Ah'. So, Dr. Andrews, I expect you to listen to everything she says and do everything she asks you to do. You won't find a better example to follow in the hospital if you want to succeed here.\" She walked off down the hall and I made a mental note to buy her one of her beloved chai soy lattes tomorrow.\n\n\"I, uh... I...\" he stammered. He couldn't meet my eyes.\n\nI turned my chair to face him. \"It's okay, Jimmy, all first years have at least one big screw-up at some point. You just got one out of the way early, so now you have nowhere to go but up!\"\n\n\"Right... I'm, uh, I'm really sorry. If I'd known you were a doctor--\" he started but I cut him off.\n\n\"That's the wrong lesson, Jimmy. The lesson isn't to figure out who you have to treat with respect and who you don't. The lesson is to treat everyone in this hospital with respect. That goes for doctors, nurses, patients, custodial staff, the baristas at Starbucks, everyone. I have a hard candy shell, so I can let your little faux pas slide off me this time, but if I ever catch you speaking to the nursing staff or a patient the way you spoke to me you'll be emptying bedpans for a week. Are we clear?\"\n\n\"Yes,\" he said gulping.\n\n\"Yes...?\" I said with a raised eyebrow.\n\n\"Yes, Dr. Charles.\"\n\n\"Very good, Dr. Andrews. Now, go work up the gentleman in exam one, then recheck Mr. Stevens in about thirty minutes please.\"\n\nI turned and rolled away from him down the hall. As I passed the nurses' station I saw Nurse Hayden and Nurse Navarro trying to hold in laughter. Nurse Hayden followed me into the doctor's lounge and closed the door before cracking up.\n\n\"That was classic, Liz! I wish I had a video of that to show to all first years when they arrive.\"\n\n\"Jesus, I hate entitled pricks. I hope it's not going to take too much work to beat that out of him,\" I said, pouring myself a cup of hot tea.\n\n\"The expression on his face when you started that line without the patient noticing was priceless! You really are the best stick in the hospital.\"\n\n\"When you learn how to do it while bouncing around in the back of a helicopter at night with only a head lamp for lighting, doing it in the E.R. should be pretty easy.\"\n\n\"Still, good job.\"\n\n\"Thanks, Kat. Let me know if he starts giving the nursing staff any shit, okay?\"\n\n\"This is why you aren't popular with the other residents, you know. You're friends with too many nurses. Well, that and you keep making them look mediocre by comparison.\"\n\n\"I spent three years as a flight medic with doctors looking down their noses at me when I brought in guys I'd kept alive on the flight to the hospital. I'm not going to put up with that shit on my watch. I can't do anything about the attendings, yet, but I'll be damned if I stand by and watch the other residents pick up that bullshit habit.\"\n\nKat's phone buzzed, and she pulled it out of her pocket to look at it.\n\n\"It's the home office, one sec.\" She touched the screen and answered it. \"Hey... Yeah, I should be home around eight. Right now? I'm hanging out with your favorite doctor. Sure, hang on...\"\n\n\"You've been requested,\" she said. She hit the button for FaceTime and handed me the phone.\n\nAn adolescent girl, who looked like a younger version of Kat, appeared on the screen. Her hair color was hard to make out, as most of her head was covered in what looked like flour.\n\n\"Hey, Dr. Liz!\"\n\n\"Hi, Caitlyn. What's up?\"\n\n\"We're making pizza dough! Do you want to come and have pizza with us tonight?\"\n\n\"I wish I could, sweetie. I'm on hour eleven of a twenty-four-hour shift.\"\n\n\"That's crazy! I can't believe they make you work so long!\"\n\n\"Tell me about it. Uh, Cait, you've got a little something right there,\" I said, making a gesture to my own hair.\n\n\"Mom-Megs started it!\"\n\nI looked up at Kat, who was trying not to laugh.\n\nA second face took Caitlyn's place on the screen \"Vicious lies, Liz! It's all Cait's fault!\" Mom-Megs was a pretty woman, in her early thirties like Kat, with a silver nose stud and shaggy black hair. Which was also mostly covered in flour.\n\n\"Hi, Megan. Looks more like some mutually-assured destruction going on to me.\"\n\n\"Is that some kind of army thing Liz? Make love, not war!\" Megan said.\n\n\"War's more fun!\" Caitlyn's voice said, off-screen, then another big poof of flour hit Megan in the face.\n\n\"Ack! Brat! Your pizza is going to have anchovies on it now!\"\n\nKat took her phone back from me and looked at the screen. \"If there's flour all over my kitchen again when I get home, my wife and daughter will both be lucky to not get anchovies the next five pizza nights.\"\n\nI heard Caitlyn giggle, as Megan yelled, \"Jeez, it's the cops! To the getaway car, Cait!\" Then the call disconnected.\n\n\"Cait's growing like a weed. Isn't her birthday soon?\" I asked.\n\n\"She'll be twelve next month. Her birthday party is the Friday after Valentine's Day, by the way. You'd better ask off for it. She'll never forgive you if you don't come.\"\n\n\"Text me the date, and I'll put it on my calendar. Honestly, I wish I could come over for pizza tonight. I'm starving.\"\n\n\"You need me to grab you something before I head out?\"\n\n\"No, I want to get some air. I'm going to make a quick check on everyone, including the new baby doctor, then roll down the way to Eddie's and grab a sandwich.\" Eddie's Sandwich Shoppe was a block from the hospital, and had the best sandwiches I'd ever found.\n\n\"I don't know how you can eat those as often as you do and not weigh two hundred pounds,\" Kat marveled.\n\n\"Lucky genetics and thirty miles a week in my racing chair.\"\n\nKat snorted a laugh as I rolled away down the hall.\n\nAfter checking on Dr. Andrews and the two new patients who'd arrived in the last hour, I just barely had time to get there before they closed. I grabbed my North Face jacket out of my locker and shrugged it on as I rolled towards the side entrance nearest to Twenty-Third street.\n\nIt had been sleeting when I arrived at work that morning, and conditions had only deteriorated since then. Frozen rain was coming down, and everything in sight was covered in ice. For a moment I thought about going back inside and hitting the cafeteria instead. One of my main problems with weather was I couldn't tell if my feet were getting too cold, since I couldn't feel them. I could easily get frostbite without even knowing it. I was wearing thermal underwear under my scrubs, but the wind was cutting through my winter jacket. My scrubs and sneakers had no chance of keeping my legs warm.\n\nOn the other hand, it was only a block away, and I really wanted a turkey and stuffing sandwich. Thinking of Eddie's cranberry sauce, I decided to go for it.\n\nI immediately regretted my decision. As I rolled down the long wheelchair ramp that led from the side entrance down to the sidewalk, I started skidding, and grabbed my wheels to stop myself. My wheels themselves stopped rolling, but my chair kept sliding down the icy ramp. In a last-ditch effort, I locked the brakes then flailed my arms trying to grab one of the railings, but they were just as slick.\n\nI looked ahead with alarm. If I didn't slow down, I was going to slide right across the sidewalk and out into traffic. Worse, I wasn't slowing; I was picking up speed.\n\n\"Little help!\" I yelled as I approached the end of the ramp. There were a few passers-by on the sidewalk as I got near. Two of them looked up in alarm and jumped out of the way. Thanks a lot, assholes, I thought. I started to consider throwing myself out of my chair to try to stop.\n\nThe third person looked up, saw me coming and her eyes widened. She dropped her briefcase, took two steps towards me, and threw her arms around me and my chair. The momentum of her impact changed my course enough that instead of sliding out into the street, we both banged into one of the metal boxes found on every corner in DC that held stacks of the free Post Express and real estate magazines. We hit with a heavy thump just as a WMATA bus roared past on the street.\n\n\"Ow!\" the woman said.\n\nI hadn't felt too much of an impact, but I knew that didn't mean much. \"Holy shit, are you okay?\" I exclaimed, staring after the bus. My adrenaline was pumping and my heart was beating a hundred miles an hour. \"I think you may have literally just saved my life!\"\n\nShe straightened with a groan. \"I think so. I whacked my elbow pretty good. How about you, are you alright?\"\n\n\"I don't know yet. My feet were the only thing that hit. I won't know until I can have them checked out.\" I leaned down and ran my hands over my lower legs, not feeling any obvious injury. \"I can't thank you enough, you really saved me.\"\n\n\"No worries, glad I could help.\" She stretched her arm and flexed her elbow painfully. She looked around, spotted her briefcase, and bent over to retrieve it.\n\nShe was tall, taller than I would have been standing, with green eyes and high cheekbones. Her hair was an incredibly pale blonde rolled into dreadlocks, gathered into a ponytail as thick as my forearm, and reaching down past her shoulder blades. Her eyebrows were almost white, hinting at a Norwegian or Swedish background maybe. She was well-dressed, wearing a suit under a knee-length camel hair coat, and was maybe a year or two older than I was. Obviously, a professional woman.\n\n\"I feel like I owe you dinner or coffee, or something for your heroics.\"\n\nShe smiled. \"Thanks. I think I'd enjoy that, but I gotta run. I'm glad you're okay.\"\n\n\"Thanks again.\"\n\nShe turned and walked away down the street. Checked my watch. I still had enough time to make it to the sandwich shop, but I had a sinking feeling I needed to get back inside and get myself checked out. I looked and saw my savior turning the corner around the front of the hospital, dreadlocks swinging behind her back.\n\nI made a move to start back up the ramp, then thought better of it and turned and followed in dreadlock woman's footsteps. The front entrance was at the ground floor, and I didn't need a ramp to get in there.\n\n\"Your diagnosis, Dr. Andrews?\" I asked, a half-hour later.\n\n\"Um, are you sure you don't want the attending to look at this?\"\n\n\"Dr. Andrews, this is your job now. No time like the present. Besides, your patient literally can't feel any pain at the injury site, and I guarantee there's going to be a second opinion. You can't mess this up. So, what's your diagnosis?\"\n\nHe cleared his throat, looking at my X-Ray on the monitor. \"Well, you have a non-displaced fracture of the left tibia. That will need a cast. You also broke your second and third toes on your left foot, and they'll need to be set too. They're pretty bad. I'd recommend splints instead of just tape.\" He looked at me for my reaction.\n\n\"Treatment instructions for the patient?\"\n\n\"Uh, ice on the toes and ibuprofen every eight hours, follow-up with an orthopedist.\"\n\n\"Painkillers and ice for a lower limb injury in a paraplegic?\" I asked skeptically.\n\n\"Yes, it'll help with the swelling even if you don't need pain management.\"\n\n\"Very good, Dr.!\" I turned to the man standing in the doorway, watching. \"Nurse Navarro, can you get Dr. Andrews the supplies for a cast and some splints so he can set my toes, please? And ask facilities to get some salt on the handicap ramp on Twenty-Third street if you wouldn't mind.\"\n\nHe nodded and left the room.\n\n\"Me?\" Dr. Andrews yelped. \"What about you getting a second opinion first?\"\n\n\"My opinion is the second one. Your diagnosis was right on the money. So, let's follow through with the treatment. You and I have a lot more patients to get to tonight.\"\n\nI rolled up to the nurse's station later that night, grumpy that I still hadn't gotten to eat anything other than one of the granola bars from the stash I kept in the backpack that hung from the back of my wheelchair.\n\nNurse Angel Navarro looked down at the bright pink fiberglass cast I now wore on my left foot in place of my usual Nike sneaker. The silver splints on my two toes wrapped in tape poking out of the end of the cast completed the look.\n\n\"Looks like he did a good job. I'm kind of surprised you let him do it,\" Angel said.\n\n\"Something I learned from my old crew chief. Show him I trust him to do a job he's supposed to be able to do after chewing him out for something else. Show a little trust, gain a lot of trust. He's been following me around for the last two hours trying to do everything he can to keep winning my approval. This was an opportunity, and it might have taken me a month to pound that into him otherwise.\"\n\n\"What if he'd messed up casting your leg or setting your toes?\" he asked me.\n\n\"I was right there watching him. I mean obviously, it's my foot. What do I care if my toes heal crooked anyways? Not like I'd even notice. But he's got potential, for sure. What's next?\" I held out my hand and Angel handed me a chart.\n\n\"Thirty-six-year-old female, blunt force injuries to the face in number six.\"\n\nI made a face. \"Domestic violence?\" I asked.\n\nHe nodded. \"Yeah, Doris brought her in. She's with her now.\"\n\n\"Okay, thanks.\" I rolled down the hall, chart in my lap, to exam room six. I hated these cases. Taking a deep breath to calm my stomach, I rolled into the room. I knew the police woman, which made this a little easier for me.\n\n\"Good evening, I'm Dr. Charles, how're we doing tonight?\"\n\nThe woman sitting on the bed didn't look up. Her face was battered and bloody, one of her eyes blackened and swollen shut.\n\nThe police woman spoke up for her. \"Hey Doc, this is Mrs. Gonzales. She's had a tough night.\"\n\n\"Thank you, Officer Green. Give us a minute, would you?\"\n\nI completed my exam quickly and cleaned up her injuries. The cut over her eye wasn't bad enough for a suture and I closed it with a butterfly bandage, and then called Doris back in. She came in with her notepad out.\n\n\"No sign of a concussion, but she's got a supraorbital fracture above her left eye. It might need surgery,\" I told her, as she made notes for her police report.\n\n\"Jaunita, you've got to get away from him,\" she said. \"He's escalating and one of these times you're not going to the hospital, you're gonna be dead.\"\n\n\"Si... I know. I don't know how to, though. What do I do? Where do I go?\" She had tears in her eyes.",
        "\"There's someone here from women's legal services. Can she come in and talk to you? She's out in the hall.\"\n\n\"Si.\" Mrs. Gonzalez looked like the worst of her pain wasn't on the outside.\n\nDoris opened the door and beckoned out into the hall. My eyes widened, as the dreadlocked woman who saved me on the street walked in.\n\n\"Hello again!\" I blurted out.\n\n\"I'm here to see Juanita Gonzales?\" she said, giving me a smile, but turning her attention to my patient.\n\nI looked sheepishly at Doris and Mrs. Gonzalez. \"Yes, of course, sorry. Mrs. Gonzales, the nurse will be in shortly with discharge papers and a referral to a specialist for your eye.\"\n\n\"Thank you, Dr.,\" she said as I rolled out of the room.\n\nAngel met me down the hall with my next chart.\n\n\"Who's the dreadlocks in six?\" I asked him. \"I haven't seen her here before.\"\n\n\"Oh, she's a new women's legal advocate. She got assigned to our hospital this week, I think. I've seen her once or twice since Monday.\"\n\n\"Do me a favor, would you? Don't let her leave without talking to me first.\"\n\nAngel raised his eyebrows. \"You got a beef with her?\"\n\n\"No, just the opposite, actually. She's the one who kept me from sliding off the curb into a bus an hour ago. If she's going to be hanging around here, I'd like to introduce myself properly.\"\n\n\"You got it. Fifty-seven-year-old female, with a wet cough and one-oh-three fever in two,\" he said, handing me the chart.\n\n\"Great,\" I said, and reached for a surgical mask from a dispenser at the nurse's station as I rolled past.\n\nI was in the hall at the computer next to the nurse's station entering notes for a chart when I heard a voice behind me.\n\n\"Hey Wheels, I heard you wanted to talk to me?\"\n\nI scowled and turned my chair, ready to tear someone a new one, when I saw it was my dreadlocked heroine.\n\n\"Oh, uh, hey. Hi. Yeah, I was surprised to see you again tonight. Nurse Navarro said he thought you were going to be visiting often so I thought we should actually introduce ourselves.\"\n\n\"I'm Addison, with Lampedo Women's Legal Services. GW's on my new beat, so yeah, you'll probably see me around a bit.\"\n\n\"Addison, it's nice to meet you. Officially, that is. I'm Liz.\"\n\nShe looked down at the cast on my foot and frowned. \"Are you okay? I didn't realize you were injured. You seemed fine out on the street.\"\n\n\"It's pretty bad. Broken in six places. They're probably going to have to amputate,\" I said, with a grave face.\n\nShe looked horrified for a moment. Then, as I couldn't stop the corner of my mouth from turning up, she stamped her foot and said, \"Oh, that was mean!\" then laughed.\n\n\"Sorry, I'm kidding. It's a minor fracture. I promise it won't inconvenience me at all, other than putting an end to my potato-sack racing career.\" She smiled at that. \"Can I buy you a cup of coffee?\" I asked.\n\nShe pulled out her phone and looked at the screen. \"It's almost midnight,\" she said, looking amused.\n\n\"I'm on for another eight-and-a-half hours, so caffeine is a necessity for me. How about a muffin? Our cafeteria isn't the best but they make a killer banana nut muffin. The secret ingredients are bananas and sugar.\"\n\nShe laughed. \"Well, that sounds like an offer I can't refuse. Lead the way.\"\n\nI stopped to tell Angel I'd be back in twenty minutes and for him to page me if anything dire came in, and then I led Addison through the labyrinthine hallways of the hospital in search of baked goods and the magic bean-juice that twenty-four-hour shifts required.\n\n\"So, after I graduated from Wisconsin law school, I had it in my head I'd come to DC, work for some Congress-critter and change the world,\" Addison was saying, as we sat at a table in the deserted cafeteria.\n\n\"What happened?\"\n\n\"I like helping actual people too much. That's considered a waste of precious time working on the Hill. 'Why waste time helping one when you can help a million?' I started doing a little pro-bono work on the side for LWLS to feed my altruistic hunger. They ended up offering me a full-time gig and here I am.\"\n\n\"How is it compared to working for a Congress-critter?\"\n\n\"Well the hours are way worse, but at least I got a huge pay cut to make up for it.\"\n\nI laughed. \"My friend Megan is an attorney for LWLS in Arlington. Have you met her? Megan Winerock?\"\n\nShe thought for a moment and said, \"I've heard the name, but if she's in Arlington she's probably working out of the Northern Virginia office in Seven Corners. I work out of the DC office and I've only been here a couple of months.\"\n\n\"I hope you meet her sometime, she's great. Her wife works here in the E.R. as a nurse. So, you like your change of careers, huh?\"\n\n\"I love being able to help women who need an advocate. Plus, I'm getting litigation experience now. All in all, it's been the right career move for me. Certainly, a satisfying one.\"\n\nMy Apple Watch vibrated on my wrist. \"Damn,\" I said, reading the text message.\n\n\"Have to go?\"\n\n\"Yeah, we've got an MVA coming in. I can't leave that to my newbie. Hey, do you like Lebanese food?\"\n\n\"I don't know, I've never had it.\"\n\n\"Want to let me buy you dinner at Lebanese Taverna this weekend? As a thanks for saving me from decorating the front of that bus tonight? It's in Woodley Park, right across the street from the Metro.\"\n\n\"I'd love that.\"\n\nThrough the cafeteria windows I heard the buzz from the rotors of the Life-Flight helicopter approaching the hospital. \"Shit, I gotta go. I'll call you to find a time that works. It was really good to meet you!\"\n\n\"What's an MV-?\" she started to ask but I'd already grabbed my wheels and shot out of the cafeteria.\n\nAn hour later, I slumped in my chair in the locker room, exhausted. It had been a near thing, but Dr. Chandra and I had stabilized the motor vehicle accident victim. Dr. Andrews had hovered over my shoulder, watching with wide eyes while I treated the man's pneumothorax, inserting an eight-inch needle between his ribs to release the air trapped inside his chest wall that had been collapsing his lung, while Dr. Chandra methodically and efficiently found and sutured severed arteries. After getting eight units of blood, the patient had a decent chance if he made it through the night in the ICU.\n\nI looked down at my scrubs, blood spatters all over my pants, then at the clock on the wall. Five-and-a-half hours left on my shift. Guess I needed to change.\n\nThe laborious process of changing scrubs while in a wheelchair left me even more exhausted. I rolled out of the locker room to find Angel waiting for me.\n\n\"Oh no, no more charts! Unless someone is about to die in the next five minutes, give whatever it is to the newbie!\"\n\n\"He's sleeping in the lounge. Besides, we've got nothing new right this second believe it or not. I came to tell you two things. One is that Dr. Rivers said he can hold down the fort so you can grab some shut-eye. I'll wake you if we need you. And two, here.\" He handed me a business card.\n\n\"What's this?\" I asked.\n\n\"Dreadlocks lady wanted me to give it to you. She said you took off without getting her number.\"\n\n\"Oh!\" I'd been in such a hurry to get back to the E.R., I hadn't stopped to think about how I'd get in touch with her. I slipped the card in my shirt pocket. \"Thanks, Angel. I'll be in exam two if anything pops.\"\n\n\"Why do you always pick exam two?\"\n\n\"It has the best mattress, obviously. How do you not know that?\"\n\n\"Because we nurses never sleep on the job?\"\n\n\"You should start working twenty-four-hour shifts too, then you can start trying all the beds.\"\n\n\"No, thanks!\"\n\nI turned off the lights in exam two and lowered the bed all the way down so I could more easily slide from my chair onto the aforementioned very comfortable mattress.\n\nI lay in the dark, eyes closed, trying to drift off but, unusually for me, sleep was evasive. After a few minutes I gave up, pulled the business card out of the pocket of my scrubs, and angled it so I could read it in the light coming in from the hallway.\n\n<p align=\"center\">Addison Wagner</p>\n\n<p align=\"center\">Attorney, Lampedo Women's Legal Services.</p>\n\nNext to her name and title was the logo of the non-profit, a stylized image of an Amazon warrior holding up her shield to protect a kneeling woman with two young children.\n\nThe agency's motto was printed along the bottom of the card: \"I am my sister's keeper.\"\n\nThat made me smile. Kat's wife Megan had that tattooed on her shoulder. I'd seen it when I'd gone kayaking on the Potomac River with Kat and her family last summer.\n\nI flipped the card over and found handwriting on the back.\n\n\"See you this weekend Wheels.\"\n\nI frowned. I'd have to set her straight on that next time I saw her.\n\nI hated being called \"Wheels.\"\n\n~~ Woodley Park, Washington DC ~~\n\nThe weather on Sunday was the opposite of the night I'd met Addison. It was still below freezing, but the day had been clear and sunny without a breath of wind; my favorite kind of weather. It was my first night off in two weeks, so I was especially appreciative.\n\nThe sun had set a few hours before, as I waited outside the Lebanese Taverna on the brightly lit sidewalk of Connecticut Avenue. I passed the time admiring the few stars that had the temerity to shine their light down through the glow of the city. Mars was putting on an especially brilliant display as it sank down behind the Omni Hotel across the street.\n\nI saw her come up the Woodley Park Metro escalator across the street from me and I waved to her. Her blonde dreadlocks made it easy to pick her out of the crowd. She waved back and went to the crosswalk, waiting for the light to change.\n\nI frowned. She was really dressed up, wearing what looked like an angora sweater with a beautiful silver necklace under her camel hair coat, a pair of brown tweed pants, and a stylish pair of suede boots. Her dreads were loose tonight with a bunch of them hanging over her shoulders down the front of her coat.\n\nI looked down at my own outfit, jeans and a blue-and-gold GW fleece pullover under my North Face jacket. The thick sock I'd stretched over the open toe of my pink cast didn't add much to my outfit either, nor did it match the hiking boot I wore on the other foot. For warmth, not because of all the hiking I was planning on doing. I suddenly felt like a slob.\n\nShe crossed the street and walked up to me. \"Hey Liz! How are you?\" she said, then startled me by leaning down to give me a hug as a greeting.\n\n\"I'm good! You're right on time,\" I said. \"Our reservation is for right now.\" I turned my chair and rolled towards the door of the restaurant.\n\n\"Sounds great, Wheels, I'm starving.\"\n\nI skidded to a stop with a small screech of rubber on the sidewalk. \"Hey listen, I'm sure you don't mean anything by it, but I really don't like being called that. Liz is fine. Or Elizabeth if you prefer, but...\"\n\n\"Sorry, I got it, no nicknames, my apologies Liz,\" She said, looking embarrassed.\n\n\"It's fine.\" I gave myself a push and glided towards the door as she walked beside me. \"I didn't say no nicknames. I like nicknames just fine. Just not that one.\" The hostess seated us at a small table by the front window, taking one of the chairs away so I could roll right up to the table.\n\nI asked her if she liked red wine, before I ordered a bottle of Chateau Kefraya, from the Bekaa Valley of Lebanon, one of my favorites. Our waiter opened the bottle with a flourish and poured me a taste. After my nod of approval, he filled our glasses and left us to peruse the menu.\n\n\"I have no idea what any of this is,\" Addison said after a few minutes. She closed her menu. \"I'm going to just put myself in your hands. You know what's good here, you order for both of us.\"\n\n\"Okay.\" I looked over my favorites. \"Are you a vegetarian or anything?\"\n\n\"I grew up in Wisconsin, the land of cheese and brats. Order anything you like.\"\n\nI laughed, then ordered a hummus and olive plate for an appetizer, and two of my favorite entrees, lamb skewers and falafel, figuring we could share.\n\nSoon we were deep in conversation, her telling me stories about law school, me about my decision to join the Army. She seemed truly shocked to learn I was a veteran.\n\n\"But you're so...\"\n\n\"So... what?\"\n\n\"I don't know. Pretty, slim, feminine... you don't seem like a soldier.\"\n\n\"Well, I was a flight medic on a helicopter crew. It's not like I was carrying around a fifty-pound pack. I mean, I have, but not that often since basic. I did keep an M-4 strapped next to my jump seat.\"\n\n\"I'm sorry, I'm stereotyping terribly. Is that how... I'm sorry, is it okay if I ask if that's how you ended up in your wheelchair?\"\n\n\"It's fine. My helicopter was shot down in Afghanistan. We crashed, two of our crew died. My crew chief's legs were all busted up, my pilot lost her leg and was in a coma for a while. Jo and I, she was the pilot, were both medically retired from the Army, and I went to school. That was four years ago this month.\"\n\n\"Wait... your crash was... four years ago? But you're an E.R. doctor now. How did you do that so fast?\"\n\n\"I'm still in medical school, technically, since I'm a resident. I took a lot of college courses while I was in the Army. Then I tested out of a bunch of classes when I started at GW. I only ended up needing four semesters to get my undergrad, so a year and a summer. Two years of medical school, then residency. I started my second year of residency about three months ago.\n\nShe looked at me thoughtfully. \"So, Dr. Charles, just how smart are you?\"\n\nI grinned. \"I can brain.\"\n\n\"Clearly. So... obviously it's a touchy subject, but what's the deal with the nickname 'wheels'? I think I can guess, but I'd like to hear it from you.\"\n\n\"Because I don't want my identity bound up in my disability. I don't want the word people use to identify me in their minds to be short for 'wheelchair', a word that people think of when you say 'paraplegic'.\"\n\n\"That's kind of what I thought. I'm really sorry I called you that. It seemed cute but I was being terribly insensitive.\"\n\n\"It's okay, you didn't know. I'm just more than a handicapped person. I'm a doctor, a student, an athlete, a lover of wine and ethnic foods, a woman who loves to dance.\"\n\n\"You dance?\" She asked with a raised eyebrow.\n\n\"Oh, you should see me on the dance floor. I can make this chair move and spin like nobody's business. I'll pop a wheelie for you when we get outside.\"\n\nShe grinned at me. \"You're quite the woman, Dr. Liz. How is it you aren't taken by now?\"\n\nI wasn't really sure how she guessed I wasn't seeing anyone, but she was right.\n\n\"I don't know,\" I sighed, \"It's really hard dating as a resident. I sometimes work over a hundred hours a week at GW. And being in this chair has its own... difficulties. I've only had two relationships since I got hurt, and they both ended at least partly due to complications from... this.\" I gestured to my chair. \"So, I haven't put much effort into that area since I started my residency, and no one's asked me out so...\"\n\n\"I find that really hard to believe,\" she said with a warm smile, \"You seem like quite the catch.\" She reached across the table and took my hand, gently rubbing her thumb across the back of it.\n\nOh, crap. Pieces started falling into place in my head.\n\n\"Uh... wow, I, uh, I think I may owe you a big apology, Addison.\"\n\n\"What?\" She said, straightening up in her seat, \"What do you mean? An apology for what?\"\n\n\"I'm, uh... Forgive me if I'm misreading what's going on here, Addison, but... I'm, uh, I'm straight.\"\n\n\"Oh...\" She withdrew her hand like she'd touched a hot stove, and looked away from me. The look of disappointment and embarrassment on her face... I had not been misreading what was happening.\n\n\"I'm so sorry, I didn't... I... Addison, I'm really, so sorry.\"\n\n\"No, it's... it's not your fault. I mean neither of us ever said 'date', or talked about any of this, I just assumed that since you asked me to dinner... You really just asked me out to pay me back for saving you?\" She looked crushed.\n\n\"No! Not just because of that! I liked talking to you and I thought... I thought maybe we could be friends. I don't... have a lot of friends outside the hospital.\"\n\nWe both sat in awkward silence until our waiter appeared and asked if we needed anything else. I looked at Addison and said, \"The Turkish coffee is really good. Or do you want to go?\" I heard the pain in my voice. I was really upset that I'd hurt her. I also wasn't lying about wanting to be friends. I had so few of them outside of work. And I really did like her.\n\nShe sat staring into the flame of the tiny oil lamp in the center of our table for a moment, then raised her eyes and said to the waiter, \"Two Turkish coffees, please.\"\n\nOur conversation was strained until the check came. I paid the bill and we went out into the cold, clear night.\n\n\"Well, thank you for the dinner,\" Addison said, clearly ready to flee across the street to the Metro.\n\n\"You're welcome... Addison, I...\" I paused.\n\n\"What?\" she asked me.\n\nI looked up at her while I pulled on my gloves. \"I'm really sorry for the misunderstanding. And I'm really flattered. And I really would like to be your friend. If you aren't interested in that, I get it. But if you think you have room in your life for being friends with a straight girl, I was going to wheel down to Cleveland Park and hit the Fro-Yo place. If you want to come, I'm buying.\"\n\nShe stood, looking at me inscrutably, then said, \"It's not fair.\"\n\nI didn't know what to say to that. \"What's not fair?\"\n\n\"You get to roll all the way down Connecticut in your comfy chair, but I'll have to walk. That's hardly fair to me.\"\n\nI stared at her for a second, and then burst out laughing. \"Yes! I clearly have the advantage here!\" I popped a wheelie in my chair, then dropped back down on all four wheels. She wasn't able to hold her smile back any longer.\n\nWe headed down Connecticut Avenue together, laughing at the absurdity of our social misunderstanding, the tension between us easing.\n\n\"Tonight was almost like a bad episode of Friends,\" she said.\n\n\"More like a great episode of Will and Grace!\" I retorted.\n\n\"Ha! I think you hit that on the nose!\"\n\n\"Nah, I was in the Army. If I hit you on the nose it'd hurt, not make you laugh,\" I joked.\n\n\"Well, I don' t know about my nose, but my feet are killing me from all this walking. And there you sit in your comfy chair!\"\n\n\"Enough with the complaining!\" I said, grinning. I grabbed her arm, pulling her down onto my lap and she shrieked with laughter as I took off down the street.\n\n\"Oh my god, how can you go this fast?!\" She hooked an arm around my neck and held on for dear life, leaning over so I could see around her as I flew down the sidewalk, past the Connecticut Avenue entrance to the National Zoo. A few minutes later, I coasted to a stop in the parking lot of the frozen yogurt place.\n\n\"Okay, if being your friend means I'll get to ride instead of having to walk when we're together, then friends it is.\" She stood up, straightening her clothes.\n\n\"Oh, that's going to be an everyday thing, is it?\" I asked, a little breathless from my efforts\n\n\"That's my price for friendship,\" she said with a laugh.\n\n\"Small price to pay.\" I held out my hand and she slapped it with a smile.\n\n~~ Arlington, Virginia, February ~~\n\n\"You killed me again!\"\n\n\"Don't take it personally, Cait. It's my Army training. I'm a lean, mean, killing machine,\" I said.\n\n\"I can't believe a grownup is this good at Call of Duty,\" Caitlyn grumbled as she waited to respawn.\n\n\"Don't feel bad, you just got your Xbox a week ago. My roommate at Ft. Bragg was an COD addict.\"\n\n\"There's a guy behind that tank,\" she said, pointing at my half of the screen.\n\n\"Thanks,\" I said. I circled my character around and dispatched the guy in question.",
        "\"I wish we could've gone with my moms to dinner.\"\n\n\"After the birthday party they threw for you last week they deserve a night out together, don't you think? I never had a party that was as cool as yours when I was a kid.\"\n\n\"I guess it was pretty cool to get wished a happy birthday on the Jumbo-tron. It was Mom-Megs' idea to take us all to the Capitol's game. She had to work on Mom for a month to talk her into it though.\"\n\n\"Well, I get where Kat was coming from, I bet that was expensive. Especially since she had to get twelve seats on the mezzanine level near the handicapped seats so I could... Ack!\" Another player ambushed me from behind and took me out. \"Stinkin' shotguns!\"\n\n\"Wouldn't you rather have gone out to the Mexican place with them than waste your night off babysitting me, though?\"\n\n\"Hanging out with you is never a waste, munchkin.\" I reached over and ruffled her hair. \"Okay, one more game then it's off to bed with you,\" I said as we waited for the next Free-For-All match to start. \"Your moms said you should be in bed by ten and it's ten-fifteen.\"\n\n\"But Liz--\"\n\n\"Hey, none of that, Cait. Rules are rules.\"\n\n\"Okay. But I'm definitely going to kill you this time.\"\n\nCait did manage to kill me four times to my killing her twice in the last game. Turned out she was pretty good with a sniper rifle. I sent her off to bed while I browsed Netflix looking for something to watch. I had so little down time that I didn't have any TV shows I watched regularly and I got caught in a decision paralysis loop. I was still clicking around trying to land on a choice when Kat and Megan stumbled in the door of their condo, laughing and holding each other up.\n\n\"Ladies, you look like you hit the margaritas pretty hard tonight.\"\n\n\"The prickly pear is my weakness, it's so good!\" said Megan.\n\n\"Everything go okay?\" Kat asked. She was noticeably less tipsy than Megan. Kat rarely got messy drunk, an after-effect from her party days she'd told me. Apparently in the years before Caitlyn came along she'd been quite the drinker, but when she became a single mom she had embraced responsibility and raised Cait by herself while getting a nursing degree. She and Megan had met when Cait was four. Cait had turned out pretty great so far, so I guess Kat did it right. With a lot of help from Mom-Megs in the intervening years.\n\n\"She got a little grumpy at how many times I beat her in Call of Duty.\"\n\n\"Wow, you can actually play that game?\" Megan asked, \"I get motion sick every time I try to play with her.\"\n\nI slid off their couch and into my wheelchair. Megan and Kat took my place, collapsing into a ball together, Megan throwing her legs over Kat's lap as soon as she sat down.\n\n\"Motion sickness and helicopters don't go together. Anyway, I can see Megan is getting handsy so I'll leave you two alone so you can enjoy the rest of your date night.\"\n\n\"You don't have to go so soon!\" Kat said, but the hand she was rubbing on Megan's thigh suggested she was ready to take her wife to bed.\n\n\"It's okay. I'm meeting Addison for a late drink over in my neighborhood.\"\n\n\"Oh, so you've got a hot date too!\" Megan giggled.\n\n\"Megan,\" Kat said admonishingly.\n\n\"Megan, you can ship us all you want. Still not a lesbian,\" I said, amused.\n\n\"I'm just sayin', for all the time you've spent with her since you met, you might as well be dating. Besides, Kat was straight when we met,\" Megan said, twirling a lock of Kat's hair around her finger.\n\n\"Megs!\" Kat hissed at her.\n\n\"Kitty-Kat!\" Megan hissed back playfully.\n\nI laughed. They were the most adorable couple I knew.\n\n\"We just have fun hanging out, that's all,\" I said, \"Anyway, she's waiting at a bar near DuPont Circle, so I should get going. Some musical act she likes is playing tonight.\"\n\n\"Alright. See you on Monday, Dr. Charles. Thanks for watching Cait,\" Kat said, throwing Megan's legs off her lap and getting up to walk me to the door.\n\n\"Monday then, Nurse Hayden.\" Kat leaned down and hugged me goodbye before I took the elevator down to the street.\n\nThe best thing about being paralyzed is the parking. My green Kia Soul was parked in a handicapped spot right in front of Kat and Megan's high-rise condo building in Ballston. I could have taken the Metro which was three blocks away, but I wasn't thrilled with the idea of doing so by myself after eleven at night, or having to change trains at Metro Center. My condo was on the Red Line, near DuPont Circle; a few quick stops and a train change to the Orange Line from Foggy Bottom where GW hospital was, and I rarely drove, so tonight was an exception.\n\nOne of the worst things about being paralyzed was getting in and out of my car. I opened my door and hoisted myself into the driver's seat, then folded my chair and muscled it onto the electric lift I'd had installed where the back seat behind me used to be, hit the button for the lift to bring my chair inside, then pressed the button that swung the modified rear suicide-door shut. I'd been surprised when I was researching cars for paraplegics to find out this sporty little Kia was on a top ten list of cars to modify for handicapped drivers. I'd been rather pleased, actually. When I'd first contemplated getting a car after my crash, I'd thought I'd be stuck with a van. Having a smaller car was definitely a plus in DC. Also, it came in a color that almost matched the neon green paint on my wheelchair.\n\nTraffic on I-66 into DC was pretty sparse late on a Saturday evening. Twenty minutes later, I pulled into my space in the basement parking garage of my condo, reversed the process to get my chair out, and wheeled down the street. The bar was four blocks away, but I was planning on having a drink or two and didn't want to drive afterwards. Operating a car modified to be driven with only hand controls was tricky enough at times, and a DUI would be a quick end to my medical career.\n\nThe first time Addison and I had met after our first 'date/not-a-date', she had picked the restaurant. When I arrived, she was outside waiting for me, looking embarrassed. She'd picked an establishment not realizing it was in an old building with steps up into it. The building had been old enough to be grandfathered into not needing a ramp, so we'd moved down the block to find a different bar while she fell all over herself apologizing for not thinking ahead. It took me until the appetizer had arrived to convince her I hadn't been offended.\n\nTonight, she'd picked a better place. The bar was on the ground floor, and I was able to roll right in the door. There was a musician on a small stage in the corner; a young man playing guitar and crooning a pop song. He ended his song and announced he was going to take a fifteen-minute break just as I rolled in. I spotted Addison waving to me on the far side of the bar. She'd already had one of the chairs removed so I could roll right up to the table.\n\n\"Hey girl! How was babysitting?\" she asked, holding out her fist. I bumped it with mine.\n\n\"It was good! If I ever have a kid I hope she's half as well behaved and fun to be around as Cait is. What are you drinking?\"\n\n\"Water for now. I didn't want to get sloppy drunk before you showed up.\"\n\n\"I appreciate that,\" I said dryly. The waitress appeared next to me.\n\n\"Can I get a Hendrick's martini, up with three olives, please?\" Addison asked her.\n\n\"Hmmm... that sounds good. I'll have... no... no, I'll just have a Guinness, please.\" The waitress nodded and left\n\n\"No martinis?\" She said, tilting her head to one side.\n\n\"If I had one of those, that's all I could have, and I'd like the option to stay out a little longer than one drink.\"\n\n\"Why could you only have one? You told me this is your first full weekend off in two months.\"\n\n\"It's...\" I looked around to see if any other table was in earshot. \"This is one of those 'might be TMI' situations, so let's just say that getting drunk can make logistics really tough on me.\"\n\n\"You don't have to tell me Liz. I'm sorry I asked.\"\n\n\"Addison, it's fine. I'm not embarrassed and I'll tell you if you want. You kind of lose your sense of shame over this stuff after a while. People just sometimes get... weird hearing about it. In fact, stuff like this is what ended up weirding out the last guy I dated.\"\n\n\"Really? Okay, now I do want you to tell me. I mean, if you don't mind. What could scare a guy off prime girlfriend material such as yourself?\"\n\nI laughed. \"Well, okay. But if I get too gross for you, just stop me.\"\n\nI paused as the waitress came back with our drinks. I took a sip of my beer then continued, \"Ahh, that's good. So, I'm... 'fortunate', I guess, that my back injury is as low as it is. I can't move my legs, but I have some control of my bladder. Some. It's not something that comes up in casual conversation, but I have to wear an adult diaper in case I have, uh, issues. And that's not really sexy. And if I drink a lot, I have to go more often, and then it's more of a problem, because if I'm drunk, getting back and forth from my chair to the toilet is a bigger challenge.\"\n\nI'd had this discussion with almost every one of my friends and family, because people are curious and ask questions and I mostly felt that answering them was less awkward than letting people imagine what really went on in my life. I'd known Addison about a month, and her question came on pretty much on the normal schedule as other friends I'd had.\n\n\"I see,\" she said. \"So, you can have a couple beers and be okay with your... logistics, but two or three gin martinis and...\"\n\n\"Yeah, my tolerance isn't that high anymore. Getting really drunk can end up badly for me. The last time it happened, I fell trying to get onto the toilet.\n\n\"But why would that scare off a boyfriend? That's not that big of a deal, is it?\"\n\nI cringed inwardly. My usual openness notwithstanding, this had veered into a territory I hadn't anticipated discussing with Addison this soon. Or ever.\n\n\"Well, like I said, the location of my injury gives me some bladder control. It also means I'm... sort of... fully functional, if you get me.\"\n\n\"Oh! So, you can--\"\n\n\"I can still have an orgasm, but it isn't easy. It takes time and a lot of work. With the only two boyfriends I've had since my crash, I'd kind of, you know... taken care of them, then just taken care of myself later.\"\n\n\"What do you mean?\"\n\n\"I mean it takes a lot of patience to get me there. Patience guys don't seem to have, I guess. My last boyfriend, Josh, believed he was God's gift to oral sex, and that he could take care of me where others guys couldn't, or something like that.\"\n\n\"Sounds like a real winner.\"\n\n\"He meant well. We'd been out drinking and then later he was doing his thing, trying to get me off, and well...\"\n\n\"What? What happened?\"\n\n\"I told you, I have some bladder control.\" I picked up my beer and sipped it, looking anywhere but at Addison.\n\n\"Oh no!\" Addison smothered a laugh with her hand. \"You mean...\"\n\n\"Yeah. I couldn't feel it coming and he got a face full. And well... that was that.\"\n\n\"Are you serious! He dumped you over that?!\" Addison said, genuinely angry. \"What an asshole!\"\n\n\"We were probably going to break up soon anyway. We were okay together, but just okay. I was about to start my first year of residency, working eighty to hundred-hour weeks. It probably would've ended then anyways.\"\n\n\"That's no fucking excuse! Breaking up with you over something you have no control over? If I ever meet that shitheel...\"\n\nHer anger on my behalf warmed my heart.\n\n\"Addison, it's okay. That isn't the whole story. I mean, it was pretty humiliating that that was the event that caused the breakup fight, but I'm realistic. We had pretty different interests and goals. Also, when you have a partner, you want sex to be a mutual thing. I have no problem letting my boyfriends fuck me when things get hot and heavy so they can get off, but that does almost nothing for me physically anymore. Those particular nerves just don't... When your man is going at you and you don't feel anything, it's a huge turn off for them. I mean, it's a turn off for me too. Sex is supposed to be an act you do together, not 'I'll do it to you, then you do it to me' every single time.\"\n\n\"That's... that's really sad Liz. I'm so sorry it's like that for you. That your boyfriends couldn't be better for you. I hope you find one who's more...\" she trailed off. She looked genuinely upset.\n\n\"Thanks, Addison. I mean it's not all gloom and doom. Josh didn't complain too much. I got pretty good at blowjobs.\"\n\n\"Ewww, ick! Okay, that's TMI! Guy cum is disgusting, full stop!\"\n\nI saw the waitress's head swivel as she walked by our table and I shushed Addison as I laughed, then said more quietly, \"A lesbian grossed out by guy's cum, that's so shocking! How do you even know that it's gross anyway?\"\n\n\"I'm not a gold star lesbian. Ugh, I can't even...\" she took a long sip of her martini.\n\n\"What does 'gold star lesbian' mean?\"\n\n\"It's a lesbian who's never been with a man. It took me awhile to come to grips with who I was, small town Wisconsin not being the best place to grow up gay, so I've had some experience with your weirdo heterosexual practices.\"\n\n\"My heterosexual practices? How did I end up taking ownership for all of the straights?\"\n\n\"Hey, you're the one who likes guy's cum. Ugh!\"\n\n\"I didn't say I liked it. It's just... you know when you make a living examining people's bodies you learn to ignore a lot. I had a semester cutting up a cadaver in anatomy class. I've had my hands inside a guy's abdomen trying to keep his intestines from coming out on a medevac flight. Compared to that, putting up with a little splooge to make my guy happy isn't a big deal.\"\n\n\"Oh god, ugh, change the subject. Or at least veer back to my comfort zone. So, if a guy can't ring your bell with fucking, what does he have to do?\"\n\n\"Let's, uh, let's just say I should be a major share-holder in the Hitachi corporation.\"\n\n\"Ah, so you can still feel a vibrator?\"\n\n\"A little. It has to be a strong one. Like I said, it takes a lot of patience to get me off. Honestly, I'm more of a self-service girl now. The boyfriend before Nick spent forever trying to get me off, but never got the hang of it. I got to be a pretty good actress after a while.\"\n\n\"That's so sad, Liz. Well if you ever switch to my side of the street, never fake it. Either your partner should know what your body needs or they should learn.\"\n\n\"Don't be holding your breath for that. You'd be the girl lying in the corner, with the blue face.\" I finished my beer and raised my empty glass at the waitress as she passed by again. Addison signaled for a second as well.\n\n\"So, what are you doing tomorrow, with your rare two-day weekend? Want to go to Kramer Books for brunch?\"\n\nI frowned. \"No, I hate that place.\"\n\n\"You hate Kramer Books? Wow, I'm not sure we can be friends anymore. I can spend all day in a bookshop.\"\n\n\"It's not that I don't like book stores. That store's just so old, the aisles are tiny and cramped, and the restaurant part is multi-level with lots of steps. I can't really get around inside there, especially when it's crowded like it is for Sunday brunch. I'll go there with you when it gets warm this spring and we can sit on the sidewalk patio.\"\n\n\"Oh. That never occurred to me. You know, hanging out with you is really starting to change the way I look at the world.\"\n\n\"Glad I can broaden your horizons,\" I said, then picked up the fresh beer that the waitress dropped off.\n\n\"So, what are you doing tomorrow, if not having brunch with me?\" she asked me.\n\n\"Taking advantage of the weather.\" Sunday was supposed to be an unseasonably warm fifty degrees, before dropping below freezing again on Monday. \"I'm going to take my racing chair out. I need to get some miles in.\"\n\n\"You have a different chair for racing? I thought you just used this one.\"\n\n\"No, my racing chair is a totally different beast. I'd fall over dead if I tried to push this thing ten miles.\"\n\n\"Can I come?\"\n\n\"I'd love for you to, but I go about twice as fast as most people run, and I can't give you a ride in my racing chair. That's only for when we're walking and you start complaining about your aching feet.\"\n\n\"I don't run anyway, genius. I can bring my bike.\"\n\n\"Oh! Okay, that could work. So, should we meet at your place or mine?\"\n\n\"How about yours?\"\n\n\"Sounds like a plan.\"\n\n~~ DuPont Circle, Washington DC ~\n\nI sat in my racing chair outside my condo building on Sunday morning, waiting for Addison. I was early, but I hadn't gotten out on the road for a couple of weeks and I was anxious to get started. My job and the weather hadn't been cooperating with my desire for exercise lately. Ten minutes after nine, Addison rolled up on a well-used road touring bike.\n\n\"Sorry I'm late. Two gin martinis last night you know.\"\n\n\"Told you so,\" I joked, eyeing her outfit. She was wearing running tights and a Dri-Fit t-shirt under a light running jacket. I had on similar tights and sneakers, but I was wearing a sleeveless racing shirt. I was cold, but I knew after a few minutes of pushing my chair I'd be perfectly comfortable.\n\n\"You weren't kidding about your racing chair being different, it's really... holy crap.\" She stopped and stared at me.\n\n\"What?\" I looked down at myself, finding nothing out of place.\n\n\"Liz, you're... ripped!\"\n\n\"Oh. Thanks,\" I chuckled. \"My legs are atrophied, but I try to make up for it with road work in my racing chair. Plus, my friend Jo designs workouts for me I can do in my chair.\n\n\"It's working, your arms are cut!\" Addison gave me a worried look. \"Now I don't know if I'll be able to keep up with you.\"\n\n\"You should be fine. I fall somewhere in-between the pace of a really good runner and a decent bike rider.\"\n\n\"If you say so. If you get ahead of me, you'll be easy to spot,\" she said, nodding at the little red-and-blue 82 Airborne flag mounted on a six-foot antenna behind my seat.\n\n\"Yeah, it helps a little with the idiots who don't pay attention. Makes me a little more visible. I don't usually have it for races, but for road work it's mandatory safety equipment. Okay, you ready?\"\n\n\"As I'll ever be. Where do you want to go?\"\n\n\"My plan was to go down to the Mall, around the Lincoln Memorial, up to the Capitol and back home.\"\n\nShe swallowed. \"Um, okay.\"\n\nI looked at her with my poker face. \"I know, it's only about six miles, but I haven't been out in a while. Maybe we should push it a bit. We could go across the Roosevelt Bridge, around Arlington Cemetery and the Pentagon then back up the mall from there. That'd be a good ten-mile ride.\"\n\n\"Uh...\" She blanched, until I let the corner of my mouth curl up in a grin and she stamped her foot at me. \"Damn it, you always get me! How is it you can always fool me, but you never fall for it when I try to pull your leg?\"\n\n\"Because I can't feel it when you pull my leg,\" I said, gesturing at my chair.\n\n\"Oh my god, that was terrible. Come here, let me punch you where you can feel it.\"\n\n\"Alright, let's rock,\" I said. I'd learned while making runs in my racing chair around DC that it was a bad idea to have earbuds in, as they blocked out the sounds of cars getting ready to run you over. As a solution, I'd hung a small Bluetooth speaker on the back of my chair. That way I could play my racing tunes and still hear oncoming cars.\n\nI looked down at my phone in the holder strapped around my thigh and started my favorite playlist for the road, then switched over to MapMyRun. We started off down the street to the sounds of Andrew WK's Party Hard, an excellent workout song to get the juices flowing.\n\nI took off quickly as I usually did. Addison fell behind at first, but after going up through her gears, she fell in beside me.\n\n\"That speaker is a great idea,\" she said, as No Doubt's Just A Girl came on. \"Good tunes, too.\"",
        "\"Thanks,\" I said, the slightest huff in my voice. \"It's actually the playlist for a local cover band. I can send you the link to it when we get back if you want. The pilot, Jo, who managed to crash land our chopper when we got shot at? She's the guitarist. They're pretty great. I'll have to take you to see them sometime.\"\n\n\"What are they called?\"\n\n\"The Rotors. They play in Northern Virginia a lot, although I don't think they've done a show since their keyboard player had her baby in December. She's Jo's wife. They're doing a show in a few weeks in Alexandria. I'm trying to switch shifts so I can go.\"\n\n\"Sounds fun! Boy, you sure do hang out with a lot of lesbians. Are you sure you're straight?\" she asked with a grin.\n\n\"Ha ha. I can't help who my friends are.\"\n\nWhen we got to the climb up Capitol Hill, we both fell into silence, conserving our breath. A few times I looked over, watching Addison as she focused on her breathing and the road ahead. Her dreadlocks swung behind her as she pumped her pedals.\n\nI found myself thinking about how quickly Addison had become my best friend in the month since we'd met. Our conversations were always familiar, our sense of humor extremely compatible. She stopped in the E.R. to say hi to me every time she was in the hospital to see a client, which seemed like it happened every day. Which meant I saw her more than any of my other friends, other than Kat who actually worked with me.\n\nAnd now here she was, cruising along beside me, easily inserting herself into another part of my life. I'd never had a friend who showed any interest in going out on the road with me. Road work had always been a solitary exercise, except when I was doing a race.\n\nAs we reached the crest at the top of Capitol Hill, she raised both arms, fists above her head, balancing her bike as she pedaled and yelled, \"Yes! We are triumphant!\" Then, as we took the left onto First Street, she started singing,\n\nWe are the champions, w-e-e-e-e are the champions!\n\nI shook my head at her, smiling as we cruised between the Supreme Court and the towering dome of the Capitol building. I hit the pause for the music on my phone then started singing with her.\n\nNo time for losers, 'cause we are the champions!\n\nOf the w-o-o-o-r-l-d!\n\nAs we zipped into the downtown area, sticking to the bike lanes, I realized being Addison's friend was going to make it harder than ever for me to find a boyfriend I'd be happy with. Hanging out with her was making any guy I dated have to measure up to a much higher standard.\n\nNot for the first time, I found myself thinking, Sometimes I feel like it's too bad I'm not gay.\n\nTo be continued...\n\nFor those of you who haven't read my series, Hard Landing, Liz's racing playlist is called 'The Set List' and is a collection of songs performed by The Rotors in that series. It's available on Spotify and the link to the playlist can be found in the 'CONTACT' tab of my author page. I always appreciate getting follows on my playlist."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "gay",
        "gay romance",
        "lesbian",
        "lesbian romance",
        "love story",
        "romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/wheels-in-motion-ch-01"
}