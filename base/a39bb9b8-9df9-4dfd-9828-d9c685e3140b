{
    "title": "Results and Consequences",
    "pages": [
        "Notes from the author: Hi again everyone. First of all, I wish to thank those who encourage me to keep on writing. No matter how modest one claims to be, it is always gratifying to read such praise. Second, because I don't want to revisit a theme when I write, this is probably the last story where I will be able to draw upon personal experience or memories to ground the fantasy. This will be a sort of teacher's pet story... of course, since I am the author, you know it will be corny and with a happy ending, hi hi! After that one, who knows... do you have suggestions? Anyway, as always, I hope you have a pleasant and rewarding read.\n\nP.S.: Contrary to my earlier \"infatuation\" storylines, in this story the relationship lingers somewhat. As a result, this is one of my longer stories. You have been warned! :)\n\n1. The first date\n\n\"Am I really doing this? God, I feel pathetic...\"\n\nIt was in this anxious and depressed mood that Gerald Anderson was thinking out loud in front of his hotel room's mirror, looking dejectedly at himself. The reflection was not the problem: as a private practice lawyer, he knew the value of a professional appearance and as a student who had earned a varsity letter in crew, he had the wisdom and discipline to keep fit. As he also believed in quality over quantity, he had decided tonight was worthy of wearing one of his Italian silk dinner jackets... no one had ever spent enough time with him to realize he owned only two of them.\n\nSo, the reflection was not the problem; in fact, Gerald was a striking 28 years-old young man endowed with a tall, strong, springy grace; his deep-set and expressive green eyes emphasized his natural empathy; no, tonight, the problem lay in the uncertainty and shame he felt for what was about to happen. The shame both for his appraisal of the morality of his future actions and also for denying to himself that he was excited about them all the same. When he couldn't bear watching himself anymore, he left his room and headed for the elevator.\n\nGerald walked about in the elegant lobby of the Hotel Lafayette and stopped dead in his tracks in front of the doorway of the Lafayette Brewing Co. restaurant. He immediately recognized his date for the evening, an exceptionally beautiful young woman, barely an adult, whose appearance for tonight traded erotic for elegance. In her short heels, she was just as tall as he - so around 5ft. 10in. - and she wore her jacket and skirt ensemble to perfection. Her shirt was opened enough to be enticing without being revealing, her makeup, glasses, hairstyle and jewelry were a symphony a good taste... in short, the two of them looked more like a legal team about to plead a case than a couple on a first date.\n\n(Wow! There she is... no turning back now... let's go Gerry.)\n\nGerald was both terrified and completely hooked. He summoned his courage and walked up to her.\n\n\"Dana?\"\n\nShe turned her lovely head and her hazel eyes sparkled upon recognizing him, like he was the most welcome sight in the universe. Gerald stopped breathing and he could swear he saw the swivel of her long golden-blonde hair in slow motion. He was mesmerized.\n\n\"Gerald! It is you! And, I must say... wow! Your picture does not do you justice: in fact, you don't look like a Gerald at all! Can I please call you Gerry?\" He had offered a handshake, which she promptly set aside for two very decorous and expressive kisses on the cheeks.\n\n\"Ha! That makes you a woman after my dad's heart! Sure you can!\" Dana was surprised by the booming, cheerful and hearty voice, which ill-fitted the sophisticated look of her date.\n\n\"Why do you say that, Gerry?\"\n\n\"Because Dad was a HUMONGOUS fan of Supermarionation! In fact, when I was still a kid and he was 45 years old, we watched together ALL the original Thunderbirds episodes, and he was involved and full of researched lore! And I have an older sister so, of course, I'm Gerry and she's Sylvia Anderson. But I suggest we go inside, before I start my own geeky rant about the Thunderbird 2 take-off sequence and you run away!\"\n\n\"Not a chance, Gerry... but I am hungry, so yes... let's please go in.\" She was perplexed and amused; she would look up the topic later.\n\nThey were both seated at their reserved table, far from the \"bar-cade\" as requested. That caught Dana's attention and, when she asked about it, got Gerald to laugh, and again its sound was hearty and warm. \"Forgive me; I took for granted you would not be the type to play pinball or shuffleboard!\"\n\nDana was a little unsettled, and her own smile dimmed somewhat. \"Gerry... it's your date... we can do what you want... really.\"\n\nHer awkwardness proved to be contagious. \"Right... of course... I'm sorry, Dana, I've never done this before. Here... I believe this is what we agreed upon.\" He was blushing deep-red, his voice had a shameful tone and he handed her discreetly an envelope; it was thick and laden with a thousand dollars, which Dana counted and placed in her purse. She then, silently and efficiently, produced a receipt and handed it to him.\n\n\"Thank you Gerry. Is it your first time here too?\" He nodded in agreement. \"Same for me. And it looks like a great choice, so can we please return to enjoying ourselves?\"\n\nThey were thankfully interrupted by the waiter, and Gerald would have kissed him for it. \"Dana, do we indulge in wine or do we sample the local beer?\"\n\n\"Beer is fine with me... I would like a Rough Rider Robust Porter please.\" Gerald raised an eyebrow but perused quickly over the menu and ordered a Roosevelt Red for himself.\n\n\"YOU, Dana, are a young woman of surprises and mysteries... and a very convincing liar... I will have to keep my eye on you!\" Gerald said so in a mocking tone, but it was evidently heartfelt.\n\n\"And why would you say that, Gerry?\"\n\n\"You obviously enjoy pinball and shuffleboard, you have enough beauty to induce a heart attack and enough class to belong in an executive boardroom if you wish, you have enough poise and presence to belie your age, you know your dark beer and have obviously been here before.\"\n\nDana felt both flattered and a little hurt. \"Yes... you're right. I'm sorry. I play the innocent card sometimes, to reassure insecure dates. I will say though, in my defense, that you're not quite as I expected and I am struggling to get a handle on your expectations; I know it's not very professional on my part, but can we play our game with an open hand for just a minute, please?\" That candor caught Gerald off guard.\n\n\"Very well... you start and I follow your lead.\"\n\n\"You hired me, Gerry. Dana Deep, transgender escort, fully functional and first-class all the way. It's obviously your first time at this. You clearly don't want your ego stroked and I don't see any peers to impress. Yet, we're not already naked in your room, so it's not all about my tits-and-dick either. Have I got something wrong so far?\" Gerald was transfixed but, for some strange reason, also relieved.\n\n\"No Dana. You really are first-class. Yes, I hired you. For me and me alone. And - the fact that you dazzle me notwithstanding - I'm absolutely not proud of it.\"\n\nAfter a short pause to collect his thoughts, he carried on. \"You should know about me that, almost right after I started my practice, I had to become the live-in caretaker of my ailing dad, which pretty much stunted my social life for some years. During the lonely nights, I eventually streamed porn videos online; and the shemale - I know the term is improper but it is what it is - the shemale category became a recurrent source of arousal for me. And that planted something in me... I don't know what it is but it's powerful enough to impact my recent dating attempts after dad passed away. So I have to know: call it self-discovery, call it curiosity. But how do you approach an unknown woman when your prime interest is a research project in her anatomy? So I... huh... altered my searching strategy... and as soon as I saw your site, I knew it HAD to be you. You had me captivated on the spot. I want you, Dana; but I also need a date. I want to know you before I get to know you biblically. And I want both of us to enjoy this... this very short-term couple of ours.\"\n\nHe didn't see her heart flutter; she really was good at this.\n\n\"My condolences for your loss... and I suppose your mother is also gone?\"\n\n\"Lung cancer... I was still young when that happened.\"\n\n\"You do understand this is not Pretty Woman, right? I am not to be saved and there is no ever after for us.\"\n\n\"The thought had never crossed my mind, Dana... the saving you part, at least. You are obviously focused and in control of your life. I have neither a clue to your motives nor any right to judge them. If I had to venture a guess, I would say you're currently in college, getting ready, quite on your own, for something better.\"\n\n\"Touche, Gerry. Junior BFA communication design. And your moral stance does your ethics lecturer position proud.\"\n\n\"You know about...\"\n\n\"Of course I do... I always screen my first-timers beforehand. I congratulate you for your online discretion, but your website could really use some vamping up. Anyway, since we're talking about ourselves, could you please tell me what a probate lawyer is?\"\n\n\"Probate law is the practice surrounding the recognition of wills and the management of estates, Dana.\"\n\n\"Again, not what I expected... you should give Mickey Haller a run for his money instead... you could be a hunk seducing juries with these eyes of yours; but let ME guess now: your mom or dad had succession problems?\"\n\n\"Indeed... I'll spare you the legalese so, in short, Mom went to Heaven and Dad went through Hell and back right afterwards. Granted, probate law and its jurisprudence are not very appealing at face value, but most cases are poignant, with clients at their most vulnerable - a little like me right now - and the dramas I live do not require a courtroom novel villain. That sits very well with me. On the other hand, you, young lady, have a truly bang-up website... do you want me to send a reference to your teacher for extra credit?\"\n\n(What the f... less than 30 minutes with me and he's trading quips!)\n\nFor once, Dana was the one blushing and destabilized. \"No thank you, smartass... you DO realize it's not Dana Deep that studies at SUNY Buffalo State?\"\n\n\"To the titanic regret of the fraternity houses I'm sure! Now, since you've already been here, do you think the two of us sharing a large BBQ chicken pizza is a good idea?\" Gerald was noticing the waiter coming in with their beer.\n\n\"Yummy! Gerry, you read my mind!!!\"\n\n\"For real? You're not just trying to please?\"\n\n\"For real, Gerry... look, I got your point and for you, tonight, it's as you wish: a one-night couple with no bullshit, OK? What you see is what you get!\"\n\n\"Super! And, in case I forget, thank you in advance for a lovely evening... because if I do get all that I'm seeing, I might not be coherent by the time the carriage reverts to a pumpkin.\"\n\n(Cut it out, Gerry! This is not a fairy tale... please don't get hurt...)\n\n\"Enough flirting before the meal, sir... please order and propose a toast.\"\n\nAfter the order, Gerald gave it a thought and raised his glass. \"To us, for tonight!\"\n\n\"Cheers!\" After her sip, she added \"...a very good and appropriate toast!\"\n\nFrom then on, it was all joy. They enjoyed their beer, they enjoyed their meal, they enjoyed getting to know one another - albeit superficially for the Dana persona, of course - they also enjoyed sharing a French onion soup after the pizza, feeding themselves spoonfuls and making a mess with the melted cheese.\n\n\"Gerry, thank you... the meal was absolutely great! Now, I'm very sorry, but addiction calls... do you want to stick with me while I smoke one outside or do you wait for me here?\"\n\n\"I'm right behind you; right after I settle the check.\"\n\nShe was in the process of lighting up when he joined her. Gerald noticed her brand of Natural American Spirit cigarettes and chuckled. \"You know, smoking organic tobacco does not make it safer.\"\n\nShe looked at him irked, but only saw a good-natured smiling face that just couldn't be any less judgmental or condescending. He was really something else. \"I know, Gerry... it says so on the label.\" But she was still trying to decipher his look, as he just stood there and watched her quietly while she smoked outside of their venue; she was sure it was regret.\n\n\"Look, Gerry, thank you for your effort in not judging... I mean, I know, it's a disgusting habit and all, but... well... I like it and don't want to stop. I figure if I don't die from smoking, I will have died of something else beforehand...\" Dana delivered her well-rehearsed and often-used litany but suddenly felt like an ass doing it. \"... but... huh... I don't suppose your mother's lung cancer came from asbestos?\"\n\nGerald had a benevolent and forgiving smile. \"No, you guessed right... mom was a heavy smoker right to her last breath; and she told me the only times she ever tried to quit - emphasis on tried - were during her pregnancies. But what also saddens me is that you have dismissed a very valid ethical conundrum about self-determination with a self-evident postulate.\" Again, a chuckle.\n\n\"But of course! What was I thinking? I apologize if my smoking gets in the way of properly resolving an ethical conundrum!\" Now he laughed. And she felt good about it.\n\n\"You're not supposed to resolve it, Dana... that's why it's called a conundrum.\"\n\n\"God help me, I sense a lecture coming... what do you do if you don't resolve it?\"\n\n\"The trailer version of the lecture only, promised. You do your best, basically: you figure your motivations, ponder the expected results with your moral standards, you make an imperfect choice and live with the consequences.\"\n\n\"Wow! Free ethical advice from a pro... thank you!\" True, Dana had a knack for repartee that made her always seem in command of the situation, but this date was truly becoming out of the ordinary. She was involved in the banter, not regurgitating one or the other of her client conversation protocols. Standing there with him outside was effortless, even though the fall evening air was cold and she had already finished her cigarette. Even more gratifying, she was sure Gerry felt the very same way, completely oblivious to the passing time or the pecuniary nature of their encounter.\n\nShe started chewing a piece of gum and felt compelled to explain. \"Bubble-gum flavor, Gerry... the best for masking odor, according to my dad who's in waste management.\"\n\n\"And she's also a pro at masking odors... there are truly no limits to your talents, young lady. Tell you what then: why don't I let you beat the crap out of me in the bar-cade?\"\n\n\"Thanks Gerry! That would be great! Lead the way!\" Despite the fact that limits in Dana's talents were embarrassingly revealed while playing shuffleboard and several pinball machines, that playful time was a delightful addition to their joy together.\n\nAfter another humiliating defeat, Dana hugged Gerald closely for mock comfort... only to remain there long enough to feel sincerity and emotion in their closeness. \"Gerryyy, why don't we go up to your room?\" Her voice had morphed in such a sultry and alluring low tone that Gerald was startled. He silently agreed and they both walked out of the restaurant clinging to one another.\n\nShe could hear his heavy breathing while they were in the elevator. \"Gerry, are you OK? You don't sound too good...\"\n\nGerald smiled meekly. \"I guess that, no matter how wonderful our date is so far, I still feel nervous about... you know...\"\n\nShe gave him a quick kiss on the cheek. \"Just relax, Gerry... look, do I excite you?\"\n\n\"You know you do, Dana. For one thing, I chose you. Plus, you're even more a knockout than I expected. And to top it all off, you're super-fun to hang around with. So yes, Dana, you excite me... quite a bit.\"\n\nShe took his hand and placed it on the barely concealed bulge between her legs. \"Now feel me, Gerry. You're a great guy, you're sexy as hell and you turn me on. I can't fake this. We are about to have a wonderful time together, all right?\" The elevator doors opened, forcing the end of her hands-on pep talk.\n\nThey walked casually, hand in hand, toward his room. As she felt him balking at opening the door, she gave him a soft kiss on his lips to urge him inside. Once in the small atrium, he returned the kiss with an intensity that startled her. His lips were moist and extremely soft. And they were channeling heartfelt emotions.\n\n(Dammit! Don't fall for me, Gerry!)\n\nIt was no use... Dana was won over by their kiss and got into it, probing his tongue with her own and signaling her own arousal. She ended the kiss before losing herself in it and asked, in a formal tone to regain control, if she should undress. She literally saw his heart bursting as he silently acquiesced.\n\nIt was not as lurid as a strip-tease... but it was more tantalizing than a wardrobe change. Dana slowly removed her jacket, her skirt, her shirt, her glasses and, after some hesitation, even her wig. The result was nothing short of a metamorphosis. Dana was now clad in black sheer lace lingerie and sported a short, wild, chestnut brown haircut. She did not revamp her makeup and looked up to Gerald, expectantly, before very slowly removing her panties and setting her penis free. It was already hard and ridged with gorged veins.\n\nHe took in the sight of her: the slender legs and neck, the shaved erection, the thin hourglass figure, the pert breasts, the self-assured poise. She was inviting and forbidden at the same time. But so amazingly beautiful. \"Well, Gerry... just as promised, this is me without bullshit. I am 22 years old, I am healthy and I always perform safe sex. Do I still turn you on, lover?\"\n\n\"Oh God yes! Dana, you're so hot it almost hurts just to look at you. May I caress you, please?\"\n\n\"You're still quite overdressed to cross that line, Gerry.\" She said it tenderly, still intent on reassuring and calming her client. And she never let go of his gaze while he removed his jacket and the rest of his clothing, with clinical efficiency. She was pleasantly surprised by the bulge straining his briefs and lusted for the moment he would reveal his own family jewels. Not that she had to wait long for it. She gasped at the sight of his penis, a large, thick, hard, pale and uncircumcised rod. In fact, it was so hard by now that the prepuce was pulled back, exposing a pink bulbous gland that was already moist to a shine with precum.\n\nMore tantalizing to her was the fact that this hardness was matched by the one of his buttocks and groins, strong and lean. \"Wow! Gerry, you are blessed and I am going to enjoy you!\"\n\n\"I bet you say that to all the guys... and probably girls.\"\n\n(Shit...)\n\n\"Well... as a matter of fact I do. But I intend to show quite clearly that I mean it, Gerry... now tell me: what do you want to experience with me? Are you a virgin?\"\n\n\"With a woman like you, absolutely... and I wish to do it all, Dana: caress you, suck you, penetrate you. I also want you to penetrate me and I do hope I will be good enough for you to enjoy it.\"\n\n\"I am sure you will be. You can caress me now, Gerry...\"\n\nGerald placed himself behind Dana, and gently let his hands discover her shoulders while kissing the back of her neck. She could also feel him deeply inhaling her aroma - a mixture of vanilla lavender perfume and bubble gum breath. He was worshiping her so much she almost felt the need to remind him she was a sure thing... but that would be denying that she did enjoy his pampering.\n\nGerald was focused both on listening to her relaxed breathing and on feeling the tingle in his fingertips from wandering all along the velvety smoothness of her arms and shoulders. He was now more relaxed and was tightly spooning her. She felt his chest on her back and the pressure of his erection on her tushy... and relished it.",
        "(Mmmmhhh... he feels GOOD!)\n\nGerald then let go of her arms to remove her bra and softly discover the flesh of her bosoms. He just cupped them at first, without pressure, like he was enjoying the weight and the fit of her breasts in his hands. He then let his fingers wander, most of them caressing her nipples, and that made Dana whisper a soft moan in satisfaction.\n\n\"Do you like my tits, Gerry?\"\n\n\"Yes I do... Dana, you have magnificent breasts. Are they sensitive? Will you like it if I kiss your nipples? Bite them maybe?\"\n\n\"Hooouuu! Even though my 32Cs are man-made, they are sensitive and I will love it if you kiss and massage them... no need to bite or maul. Would you have preferred bigger ones?\"\n\n\"No Dana... I chose YOU... and I am a firm believer that bigger than a handful is wasteful. You are just absolutely perfect.\" He massaged her breasts and ever so softly pinched her nipples to press his point.\n\n\"Hmmppff! Ho! You are indeed firm, hi hi!\" Dana was enjoying Gerald's caresses and wiggled her tushy to accentuate her contact with his very hard penis. She then turned around to face him, and Gerald gasped at the sight of her wearing nothing but her garter belt and her pantyhose. She used the opportunity to bring his lips to her nipples... in no time he was practically nibbling them. For the second time now, Dana felt like losing herself in the comfort of his loving. She gently pushed him back. \"Wow! Lover, you are doing great! Now follow me, please, we need to shower before going further into it.\"\n\n\"Of course, Dana... I'm right with you.\"\n\nWhatever Dana had achieved in relaxing Gerald was crushed to nothing in the shower. Despite the warm water, she could feel him shiver at her touch. She was cleaning him properly and planning their upcoming sexual exploration while Gerald, for his part, was living an life-changing epiphany. Despite his better judgment and her own warning, he was inexorably falling for her.\n\n\"Dana, yours is the softest skin I have ever touched and you are the most amazing woman I have ever met. God! You are so beautiful! And that includes that magnificent penis of yours. I'm afraid I'm fall...\"\n\nDana cursed inwardly and hushed him with a finger on his lips. \"Don't say something we will both regret, lover, and focus on this instead.\" With her free hand, she was gently stroking his shaft, feeling her palm tingle all along his wet skin, and then caressed lovingly his glans, spreading his precum. When she fondled his balls, she noticed they were just as closely shaved as hers were. \"Gerry, you have an amazing cock and it's obviously ready for me... let's start with this.\" She then guided his shaft on top of her own cock and mingled their hardness in her hand.\n\n\"Houuu WOOOW!\" Gerald moaned and went straight for her lips. Dana could not avoid the kiss and, although she disapproved, she was startled by the passion in it. His lips were warm and gorged. His tongue was everywhere inside her mouth, caressing wherever it could reach. Never had she ever felt so intimate; she could hardly believe he was a first-timer. But no matter how loving the moment, Gerald was obviously failing at channeling his excitement and Dana felt he would cum in no time if she kept this up... and yet she did. She was caught up in their moment and wanted it to reach its logical conclusion. She returned the kiss with abandon and frotted their cocks with vigor, aided by the cascading water.\n\nFrom that moment on, the shower was a crescendo of quickening grunts and moans, as they remained locked in their kiss for dear life. Dana's hand was spurred on by the cadence of Gerald's moans and soon was a piston of lust intent on reaching climax. She managed to mumble without forsaking her kiss. \"Mmmmhhh... are you cumming soon, baby?\"\n\nGerald was in pure heaven, overcome with lust and arousal; his hands were busy scanning, mapping and caressing the skin of her back and buttocks. He followed her lead and answered while still kissing her. \"Mmhhh! Yea baby! Ohmyyy! Cumming soooon! ... Youuuu?\"\n\nThat willingness to share the moment somehow sidetracked her control and she was startled to feel herself the familiar rush of oncoming orgasm. \"Mmmhh! Yeaaa babyyy! Me tooo! Mmmh!\" She also felt a hand of his on their cocks, partaking in the frottage. That was a first for her. They were still kissing and moaning non-stop when they came, within seconds of each other. Caught up in the passion, Gerald pushed forward their mingled bodies so hard that the shower door opened behind them, forcing a startling return to reality and a common explosion of laughter while they rinsed each other clean.\n\nAfterwards, Gerald shut off the water and they both cuddled each other while drying themselves with the fluff hotel towels.\n\nThey were still laughing together when Gerald made it to the room's bed. \"Dana, I must thank you. That was fantastic and beautiful... and it wasn't even sex yet! I just can't wait for what's next!!!\" In sole immediate response, he heard the gargling sound of an obvious mouth washing ritual.\n\n\"You're very welcome, Gerry... I just hope I haven't ruined you for the rest of the evening.\" She slowly walked towards him, the fluid motion of her every step designed to arouse and her lustful gaze locked on his eyes. Without a word, she gently stroked Gerald's cock which stiffened in her palm in mere instants. Gerald's breathing was deep and heavy and a soft moan was escaping from his throat. \"Are you ready for my ass, lover?\"\n\n\"Uh huh... tell me what to do... please...\"\n\n\"Go meet my asshole, then... kiss it, lick it.\" Like mythical warriors when they were charmed by an enchantress, Gerald moved mechanically in enraptured response to her magical command. He kneeled behind Dana, softly grabbed her buttocks and spread them apart to improve his access to her sphincter. He kissed it, kissed it again with more ardor and then presented his tongue; timidly at first, just a lapping, then he penetrated her brown entrance, got into a groove and kept at it, moaning enthusiastically in the process.\n\nAnd the enthusiasm was quite shared. \"Oh yea baby... just like that... mmhhm! That feels good... oh yes yes yes! Hooouuuuuu baby yeaaa!\" Again, she was losing herself in the moment, telling herself she ought to let him tongue her for hours. But she had a contract to fulfill and, regretfully, she kept things moving along.\n\nShe spread her legs and bent forward, her arms on the bed, and called him to action. \"Gerry, now you should use your finger in my ass. Get a feel for my rectum, baby, rub my prostate, then put some lube all over there.\" Gerry did so. Timidly, as if he feared breaking her insides, which made her chuckle. \"You're cute, baby... go on... a little harder... I won't break... further, a little furYESSS! RIGHT THEEEERE! Keep rubbinnnng babyyy! Oughhhh! Hooo that's good! OK baby, use the fffinnnger for the lube... mmmghmmm... now pleaaase!\"\n\nAgain, Gerald brought a laugh to her, spreading the glycerin lubricant methodically like if he was applying paint primer on a wall. \"Gerry you REALLY are cute! My ass is super primed up, trust me... let's get a condom on that ramrod of yours, OK?\" Although Gerald had brought some with him, she preferred one from her own supplies and gently coated his awaiting penis.\n\n\"OK baby... it's time... put all of that thing in there and, when you're used to the tightness, go ahead and fuck my brains out...\" After a pause, she ad-libbed \"... please. Also, when you're comfortable, you can jerk me off as well... it will drive me bonkers, OK?\" She heard him gasp.\n\nGerald stood up behind her, caressed her ass for a moment and finally took a deep breath while positioning his gloved intruder. Just this once, Dana felt that maybe her flushed skin had nothing to do with her preparations but rather with her own trepidation. All thoughts went on hold, for both of them; the contact between condom and rectum was established. \"Ready Dana? Here I go...\" The dual lubrication - glycerin and condom - made for an easy entry, but his girth made for a reciprocating pressure each struggled with. The winces and moans were rapid successions of pain, discomfort and jolts of pleasure.\n\nGerald kept pushing in, as instructed, and when he was stuffing her colon up to his balls, he relaxed and let himself be flooded by the ecstasy of her insides, whose heat he felt even through the latex coating. \"Am I hurting you, Dana? I'm all in, you know, and right now... my shaft feels wonderful. YOU have an amazing ass.\"\n\nDana was shortly at a loss for words. \"Yes, lover, that mammoth of yours feels... mmmgh... super in there. Now FUCK ME, baby! Hard!\" Again, she heard him gasp.\n\n\"Dana, I'm afraid I won't last...\"\n\n\"It's all right, baby... this is for you to experience... and don't forget my own dick... as soon as you can! Get to it!!!\"\n\nGerald pulled back, all the while looking at his massive cock exiting her stretched sphincter. He pushed back in, again watching it disappear inside her. Dana cooed in encouragement and then Gerald speared her in a single thrust. The cooing changed into a one-syllable yell. Whether it was from her command or his own arousal, Gerald then pounded her ass with his big white covered cock, and also pounded his balls on her ass in the process. He grabbed it with both his hands and started a frenetic doggy style in which he poured all his strength.\n\n(Atta boy, Gerry!!! God you're GOOD!)\n\nSoon, Dana was yelling in pleasure at the same cadence of his thrusting. She was thrilled to feel one of his hands let go of her ass and reach her own dangling dick, just like she asked. He stroked awkwardly at first, but he once again got into his groove and was soon jerking her off in harmony with his own shafting. Dana was now overwhelmed by competing waves of bliss. Just then, Gerald used his remaining hand to slap her butt cheeks and he quickened his cadence, totally immersed in feral lust. He was indeed fucking her brains out. Gerald felt he was grunting but he could only hear Dana's own yells and quick moans. Her voice kept rising in pitch until it reached falsetto and then cracked, and yet her moans would not stop.\n\nSoon, though, Dana felt throbbing in both cocks. But her breathing was so quick and shallow, between all her grunts, that she was unable to articulate anything other than a strident \"cuuummm!!!\"\n\nShe felt her cock erupting in Gerald's hand and heard a \"Cumming with youuuu...\" that was matched by the pulses of his own cock filling the condom. The last slap on her butt made her yelp and leap from the ground, then Dana collapsed forward on the bed, alone. She struggled to catch both her breath and her wits; she was also wondering what was Gerald up to, until the murmur of fumbling footsteps revealed he was disposing of the condom; he sounded as sated and spent as she was.\n\nGerald slumped on the bed right beside Dana. He lied on his side, watching her intently and caressing her back. \"Dana, sweetheart, you have just completely changed my world... I hope it was also good to you.\"\n\nShe was still panting. His loving caresses felt wonderful, but they were not helping... and she still had to perform. \"You... betcha babe... now please lick my cock back to life before I pass out... softly please... it will be super-sensitive...\"\n\nGerald was shocked still. \"You... are amazing... please turn around.\" She did so, with an encouraging smile. While he was stocking up on courage, Gerald took in the sight of her, still somewhat panting. Her penis had softened and was still oozing some semen... it would be a messy first experience.\n\n(Come on, Gerry! You know you want it... please take me...)\n\n\"You know, Gerry, if it's too much, we could juUUUSSTT...\" Dana was interrupted by a tongue lapping her penis lengthwise. To say Gerald treated her softly would be a euphemism; like nitroglycerin would be a more apt metaphor. He was barely touching her foreskin now, cleaning her glans with the tip of its tongue. Gerald was careful, yes, but he was also sorting his feelings and desires in the process.\n\nIn any case, considering how sensitive Dana's cock was, he had unwittingly found the exact way to treat her well. She felt a tingling that reached her brain at each one of his gentle licks. He was making her hard again, and it was not hurting... she didn't have to concentrate or search her lewd imagination for inspiration; she was astonished.\n\n(Oh! My! God! This is unbelievable!)\n\n\"Gerry... are you really sure you've never done this? Because... oughhh... you're really gooOOOD! You can take it all now... aaaah... and go quicker if you want... mmmphhh!\"\n\n\"Why, Dana? This is a very tasty Popsicle that's not going to melt... and I intend to enjoy it... unless you don't like it, of course.\"\n\nShe guffawed and got in on the banter. \"Oh I like this alright, babe... you can lick my Popsicle all you want before eating it... ohhh yeaaa... just like that!\"\n\nGerald was now licking her stiffening shaft from glans to balls, and was covering her entire surface... his tongue was a brush and he was painting a solid coat of saliva on her cock. It was now completely hard, with an upward arc, and glistening in drool. Even her glans and her shaved balls were shiny and wet. Gerald was over her, completely focused on her penis, and Dana saw his head lower in front of it. She could now only see his light brown hair but what she felt shocked her wild: the same gorged lips that had won her over in a kiss were now coating her glans. Those lips, timidly moving back and forth, were as expressive as a two-pages speech: she felt his urge, she felt his fear, she felt his lust, and she was overwhelmed by his desire to please. To please HER.\n\nAs always since the beginning of their coupling, Gerald found his groove and got passed his fear. That's when she felt his lips lower along her shaft. Slowly, as if to taste the slick motion of her skin. Then his tongue started caressing her absorbed glans. Gerald moaned in pleasure and Dana felt its vibrations being channeled from his lips to her dick like a current. And it was electrifying. His lips drew back and then, more firmly this time, glided down her shaft. Dana then felt a moist contact on her balls: she was all in his mouth. His breathing was still calm and comfortable. Her length was just right for his mouth. She was in absolute heaven. Then it stopped.\n\n\"Dana, are you enjoying this? Should I do something differently?\"\n\n\"Oh don't stop, Gerry... you're amazing!!! You're going to make me...\" but then she took hold of herself. \"No, no... wait... stop it now, Gerry, or else you're going to make me cum. You're too good for my own good! Let me lube you up and claim that lean ass of yours... I'm sure it's gonna be fucking tight!\"\n\n\"As you wish... how do you want me?\"\n\nThat question proved to be a dilemma. On all fours is more comfortable and gives a better hold for intense fucking. However, on his back, she would rub his prostate better and see his bliss. Why she chose the latter would haunt her for some time but, in the heat of the moment, her choice was clear and made without hesitation.\n\nDana first kissed and licked his sphincter. \"Mmmmmhh... your ass is beautiful and delicious, Gerry. Are you really sure you want to give me your cherry?\"\n\n\"Oh God yes! Be good to me Dana, claim me! I'm all yours, baby!\" Dana gasped and was pretty sure her heart skipped a beat or two.\n\n(No you're not! Stop this! You're going to get hurt, you idiot!)\n\nBut, if anything, Dana was a professional. She let his passionate outburst slide and introduced a lubricated finger in his rectum. This time, she tried to keep it clinical and to avoid his loving gaze. \"Am I hurting you, Gerry?\"\n\nHis smile was dimmed by a slight wince. \"It's OK so far... mmmh... I feel pulses under my balls... is that my prostate?\"\n\n\"Yes, Gerry, I'm massaging it now... do you like it?\"\n\n\"HouHOUU! Yeaaa! Oh! It's goood! Wow! Wow! Now please fuck me, baby!\" Dana closed her eyes and quietly sighed in despair.\n\n\"You want me?\"\n\n\"More than anything!\"\n\nShe quietly kept applying lubricant with her fingers while wrapping a condom over her cock with her other hand. Then she positioned Gerald near the end of the bed, placed a pillow under his coccyx and raised his legs.\n\n\"Are you comfortable, Gerry?\"\n\n\"I'm OK...\"\n\n\"Very well then, try to relax... if you do, my cock shouldn't hurt you. It's not as big as your juggernaut.\"\n\nShe placed her domed penis in front of his lubed rectum and pushed forward. The pressure was thrilling - Dana always enjoyed breaking in virgin asses - and the lubrication allowed for a painless entry. She pushed in slowly, with a diametrically opposed reaction: each one of his winces of discomfort was met by one of her moans of excitement.\n\n\"Gerry, I have to tell you: your ass is soooo tight! I'm going to looove fucking that thing! How about you, lover? Are you still up for it?\"\n\nGerald was breathing hard, grimacing and failing at staying relaxed. But when he heard her voice, Dana could have sworn he calmed down on the spot, he opened his eyes and met her challenging gaze. His own look was of gratitude. \"Yes, Dana... come on! Break my cherry! Make us cum again!\"\n\n(Geez! He just won't quit!)\n\n\"All right, bitch! You're going to feel my cock plowing your boy pussy... hold on tight!\" But Dana could not fool herself: for all her dominating sneer and bravado, she had lost control of the date; completely.\n\nShe grabbed Gerald's feet, both for her leverage and to spread him as much as possible. Her first push was relatively gentle and Gerald moaned - it was a mixture of discomfort and wonder. By the second push, as Dana was comfortable, she speared him in a single strong thrust and he screamed - that sound was unmistakable pleasure.\n\nMere seconds after Dana had started giving the ride she promised him, Gerald raised his arms to spread his legs himself and beckoned her. \"OhWow! Dana, this is so amaaaazing! OHHHH! OhWow! Keeep going! Ummphhff! Kiss me pleaaaase!\"\n\n(No! Don't!)\n\nShe knew she shouldn't. She told herself she shouldn't. But her heart fluttered and, at seeing him so ecstatic with tears in his eyes, it melted away all good sense in her. She lunged forward, grabbed his neck with her free hands and almost violently pressed her lips to his. Their tongues mingled and almost battled: Dana lost herself in their coupling and put all her strength in her kiss and in her shafting. She had to be mindful of her hold on his neck, as erotic choking was not part of their contract. Besides, this was no longer a fuck. It was more.\n\nGerald was grunting and, more than the sound, the vibrations in his mouth channeled the pleasure he felt. Dana was getting the message loud and clear through their kiss and she could feel her own heart bursting from the thrill of it all.\n\n\"Ohhh! Baby! I LOVE... fucking... your tight assss! You... are a... happy... place... for my dick! Cum... soon!\" She knew she had the stamina the make it last. She told herself she should slow down. But she didn't want to. She wanted to cum; with him; NOW. It was eerie: she realized he was her bitch but she was the one possessed.\n\nWhen Dana felt his huge cock starting to throb, wedged between their chests, she traded their kiss for a handjob. She rose up, kept skewering his asshole and used both hands to jerk him off to oblivion. She pumped in frenzy, from his balls to his glans, and Gerald became completely incoherent. His arms quivered from the spasms of pleasure while holding his legs apart. He screamed in rhythm grunts of bliss, to the top of his lungs.\n\nThen Gerald screamed a long, sustained, moan. Dana knew he was trying to hold back his climax to the end. Not a chance. She kept on pumping and increased the force in her hands, heightening the friction, and then she was stunned. Gerald yelled and she felt a wet stream of cum hit her cheek. Another scream, and this time the stream of cum hit her breast. Another scream, and this time it felt like a beam of cum painted her chest in a straight line. More screams followed, with ropes of cum surging from his glans and flowing all along her hands. It was almost scary. She stopped pumping his cock and just milked it now, and his screams were morphing into laments, the last one almost a squeal. Poor Gerald was obliviously trying to beg her to stop and could not utter the words.",
        "Never before had Dana felt such power over a man. It was inebriating. And she decided to return the favor, upon feeling her own throbbing cock: she pulled out, deftly yanked away the condom and jerked herself on top of him.\n\n\"My turn, babyyyYYY!!!\"\n\nFor a third climax, she was surprised at the amount of her cum that erupted all over his chest. That sight pleased her to no end. She kept on painting her man... except he was not hers. She gently collapsed besides him, panting, sated, drained... but not happy. Her smile had also already dimmed. Gerald was caressing her breasts and she found the willpower to gently hold his hand. He did not oppose her. It was understood between them: their time together was up. And Dana heard an inside voice lament in despair within her broken heart.\n\nThey silently got out of bed, stumbled to the shower and washed themselves. This time it was courteous and polite. After drying themselves, she took him by the hand, picked up her cigarettes and led him with her to the balcony, both of them in bathrobes.\n\nShe lit up. Gerald stayed close to her, mute. Both seemed oblivious to the cold.\n\n\"Gerry, we have to talk.\"\n\n\"I agree.\"\n\nDana drew heavily on her cigarette, searching for the right words.\n\n\"I hope you had the experience you were looking for. I also hope you had a good time. For my part, I had an absolutely great time. I am convinced you will make someone happy forever, Gerry. But it cannot be me.\"\n\n\"Even if I want it to be?\"\n\n\"You are not listening to me...\"\n\n\"But I am, Dana. I hear you loud and clear and you are absolutely right. You gave me the short-term couple I wished for and it was glorious. Now that it's over, I don't how it feels for you and I refuse to guess. But, for me, it feels pretty much like a breakup... and I deserve it.\"\n\nThat last admission startled her. \"Why on Earth would you think that?\"\n\n\"Remember what I told you about results and consequences? The difference between them is that results are what we expect and consequences are what we get. You have been nothing but amazing and true to our... agreement. And you had the common sense and judgment to warn me all along. I... well, I expected some self-discovery without unduly hurting anyone... I have now affirmation of what I want. That I would hurt myself in the process serves me just right.\"\n\n\"Come on, Gerry...\"\n\n\"No, No, let me beat myself up. You deserve nothing less from me than a permanent extension of our No-bullshit clause. I guess you will go on with your life and your studies, and I wish you all the best. I will live the rest of my life with the question of how it might have been if I had met you differently, and not as a client. You know, there is nothing deterministic or even ethical about the heart... it wants what it wants and that's why it sometimes drives people to feats or excesses. I did not want to fall for you. You did not want me to fall for you. But I have. And it's my loss.\"\n\n\"Stop this Gerry, please. For one thing, maybe you feel nothing more than an excited crush after some very amazing sex. And even if it is as strong as you feel, you HAVE to get over it. Gerry, my heart cannot belong to anyone right now, nor do I want it to. Even if we had met under other circumstances and you had wooed me - and I can tell you're a super-great guy - we would still be in this cul-de-sac. For what it's worth, Gerry, the loss is mutual, not just yours.\"\n\nDana spoke with tenderness. Gerry felt she really wanted to let him fall softly. But he also saw her rub her eyes and wince in discomfort. \"Are you OK, Dana? Can I get you anything?\" She pursed her lips and pondered her choice of answer.\n\n(Well, he did ask for no bullshit... and maybe it will help him deal with this.)\n\n\"Nothing serious, Gerry. I often get headaches after I take Viagra. I'll just go get my Advils and I'll be fine.\"\n\n\"Viagra?\"\n\n\"Yes, Gerry. For me, it works. On the big jobs, it cuts my down time. But I get headaches, flushed skin and pretty much all that is written on the warning label... except the four-hour-long erections, obviously.\" She smiled sardonically and sneered.\n\nGerald had an embarrassed look. \"Oh... huh... did you take anything else?\"\n\n\"As a matter of fact, sometimes I also use Ecstasy... but tonight I had so much fun that I was already in the mood on my own. No bullshit, Gerry... I mean that.\"\n\nGerald sighed. \"I understand. Let me get some of my Tylenol for you, then.\"\n\nDana was puzzled. \"I told you I...\"\n\n\"Use an anti-inflammatory pain reliever, on top of a vasodilator and smoking... yes, I heard. Look, I know it's not a hazardous combination like Viagra and Nitro, but I fear your heart rate will still be all over the place. I know Tylenol is not nearly as potent, but it's much safer for you right now, so humor me, OK?\"\n\n(He really cares... you poor blind fool, my heart rate has nothing to do with drugs right now!)\n\n\"Well well well, are you a probate lawyer or a doctor, Gerry?\"\n\n\"Former live-in caretaker, remember? I have gotten pretty much the whole gamut of First Aid training available to non-professionals in Health Care.\" The banter was back in his voice and Gerald was now calmer. He returned to the room to get his offered assistance and she followed him in.\n\nAfter she took his pain reliever and while she was dressing, Dana noticed that Gerald eyed her in despair. He obviously did not want her to go. However, Dana found it in her to end this, rather than hustle some more money out of him, which he obviously would have agreed to.\n\n\"Thank you for everything, Gerry. I had a lovely time. You know, all good things must come to an end. And this was a VERY good thing. Have a good life, Gerry. And you can obviously call on my services again if you want to... or need to.\" She kissed him softly on the cheek and opened the door.\n\n\"Wait... take this... it's my card. Please call me if you need more Tylenol or anything else, all right?\"\n\n\"I don't think that would be a good idea...\"\n\n\"So it's in line with all I've done this evening. Call it a token of unrequited friendship if you must, but you cannot refuse me this. Please.\"\n\nShe flinched... and took the card. She made the point of carefully inserting it in her pocket-book in front of him. \"Goodbye, Gerry.\"\n\n\"Goodbye Dana, have a happy life.\" Gerald watched her, in mournful silence, walk away towards the elevators. When she was out of sight, he entered the room and slouched on the bed. He replayed the evening's events in his mind. Twice. Then he rose, got dressed, cleaned up the room and checked out, indifferent to the late hour.\n\n2. The lecture\n\nIt was a cold, snowy January day in Buffalo but Gerald Anderson was carefree. Sure, winter means shivers, slush, boots, heavy coats and a hiatus in his beloved rowing activities, but to Gerald winter also means lecturing, a sideline to his work that he would never do without. Plus, today he seemed in luck. On this day, the first day of the trimester, he was pleasantly surprised to find no last minute venue change, no scheduling error, and no problem of any kind with the student list or any other of the typical first-day irritations that he usually puts up with. He was walking leisurely to his classroom, with plenty of time to spare.\n\n(Imagine that... a glitch-free trimester so far...)\n\nLittle did he know, while entering the classroom, that he was walking into the biggest glitch of his life!\n\nShe was there. In the classroom, sitting in the first row. From that moment, Gerald greeted the students already present and proceeded to his desk on autopilot. His mind was in a complete frenzy.\n\n(Dana! No, not Dana, you idiot! She's here! Shit, shit, shit shit, shit... SHIT!)\n\nWhile sorting his documents and readying his computer slideshow, he discreetly checked himself out. His shirt was tucked in correctly; his sweater was lint-free; his pants were recently ironed and spotless; his shoes were polished clean. Good.\n\nNow he dared discreet glances toward her while appraising his class. Just as his current casual look had nothing to do with the one of their first and only date, the object of his affection could hardly look more different: she wore a rainbow colored t-shirt with a gaudy label saying \"FLUSH BATHROOM BILLS\", her short hair was gelled and slightly spiked, her jeans were loose-fitting and well-worn, her glasses were of minimal frame and her makeup seemed non-existent; she looked so young and rambunctious, Gerald was almost expecting her to chew gum and sport a backward baseball cap! And yet, he was self-conscious and careful not to ogle, so beautiful he still found her.\n\nFor once, he was literally saved by the bell. He focused on the task at hand, a little more nervous than usual owing to his audience.\n\n\"Good morning, class, and welcome to the winter 2016 edition of PHI 314 Contemporary Ethics. My name is Gerald Anderson and you can call me Gerry. Before we begin with the syllabus, the agreement on grading and our first academic discussion, let me briefly introduce myself. I am 28 years old, single and when I don't lecture or grade papers here, I have my own practice as a probate lawyer. In fact, this is why you will find my business card on the desk and I encourage you to take one... not to advertise my services for your will, obviously, but to better reach me, as I am seldom on campus. This winter trimester will mark my third time teaching this course and I find it, as always, a privilege.\"\n\n\"Now, right off the bat, I will say that my personal objective for this course, the one above and beyond those of the syllabus, is for you to become better moral thinkers. It sounds lofty, probably a little pretentious, but it is what it is. Today's society has a multitude of ethical conundrums and challenges in just about every aspect of living - work, business, health, love and what not - and the combination of two hundred years of guaranteed freedom of thought and conscience, coupled with the separation of Church and State, has given you the opportunity to choose freely your own moral compass; sadly, I believe that few put a lot of thought into this.\"\n\n\"As you have probably surmised, I have no PhDs in philosophy and I do not publish on this subject, so I will NEVER EVER consider my lectures as axioms or absolutes. You will be welcome to disagree with me. As long as your ethical position is coherent, that is fine by me and, in fact, will make me happy. I am here to teach, not to preach.\"\n\n\"Another thing in this preamble of mine: you will notice that most of the required readings are current publications or novels. If you expected comparative remarks between the ethical musings of Kant, Mills, Hume, Socrates, Rousseau, Epicure, Rawls and other superstars of the discipline, I urge you to transfer to the History of Ethics class - I know for a fact that professor Lowenberg is absolutely superb and you will not be disappointed. Likewise, if you expect our ethical discussions to spill into policy-making, I'm sure there are excellent classes in political science to that end.\"\n\nWhile addressing that last remark, Gerald was looking directly at his Dana's t-shirt. She got the hint and replied \"... got it!\"\n\n\"Very well... miss?\"\n\n\"Winters, Paula.\" He glanced quickly: the name was in his student roster. That made him giddy.\n\n(So she isn't just here to drop by and say hello!)\n\n\"Excellent, Miss Winters. Now, lastly, to all of you I pledge to make a serious effort to remember you by name before the end of our time together... unfortunately, I will most likely succeed only shortly before the end.\"\n\n\"Okayyy! You probably all know already that ethics is the field of philosophy dealing with morality. Now, it is generally recognized that there are two main approaches to the discipline, one being meta-ethics and the other normative ethics. In this course, we will spend almost exclusively our time on the latter and... yes, Mister?\" A student had chuckled and raised his hand.\n\n\"Butler. Why are we even still working on meta-ethics today? Is it still even relevant?\"\n\n(As usual, a PHI major who thumps his chest...)\n\n\"I cannot say how much of an effort is still spent on the field but to call it irrelevant is a rash statement, Mister Butler. For those of you who take this course as an outside elective, I will just state that meta-ethics deal with the very definition of good. Now, Mister Butler, even though we are all a well-educated bunch in the 21st Century, can you tell me what good is without resorting to a tautology?\"\n\n\"I could try, but my point is precisely that it is beside the point. I don't have to be able to articulate what good is, I have the innate knowledge of what it is!\"\n\n\"Wow! I am impressed, Mister Butler... although your answer was given for all the wrong reasons, I thank you for speaking your mind openly and, in fact, stumbling into a very valid argument. You, sir, have actually quoted almost word for word a Canadian Supreme Justice. The only difference being that Judge Sopinka was tasked with defining decency at the time. Now, Rousseau postulated that we are born good, not that we know what it is... so where would your innate knowledge of good come from? Nature or culture? Do we all have this knowledge? Is it identical to all? Should it be? To these questions, I have no established answer. But I hope, Mr. Butler, that we can at least agree that the people who choose to research these fields of thought are not irrelevant, especially in our current world of religious zealotry and realpolitics. Now, don't worry people, these few abstract moments were probably the last we will devote ourselves to this topic.\"\n\n\"Now, to introduce our own future course material on normative ethics, I would require a volunteer that is here as an outside elective and currently studying a professional field.\" Three persons raised their hands. Gerald pointed at a young lady near the back row. \"Miss?\"\n\n\"Devers, Allison. Engineering.\"\n\n\"Fantastic! And I thank you for being here. Miss Devers, suppose that, in a couple of years, you are tasked to inspect a bridge for a Government Agency. You realize that the structure is gravely flawed, probably a safety hazard. Now you know that the procurement process for repairs, the environmental assessments and all that sort of thing, will take time. So you decide to warn people - let's say for argument's sake that you accept a news media interview and flat out admit that the bridge is dangerous. If you behaved just like my outlandish scenario, what would likely happen to you?\"\n\nThe student was startled and, after a thought, replied. \"I would probably lose my job... at the very least be cited in front of the Board of Engineers.\"\n\n\"Why? You have just performed a great public service!\"\n\n\"Well... they did teach us in deontology that we're supposed to keep the confidentiality of our client. But we are also required to promote safety and denounce malpractice, so maybe I would be OK?\"\n\n\"A superb answer! Wow! I seem to be blessed with a gifted cohort this year! Miss Devers has just stated the fundamental distinction between deontology and an ethical dilemma. Deontology - which means the science of duty - only deals with the act in itself. However, when working with normative ethics, which also have the goal of defining how one should act or react, one MUST always take into account the circumstances, the stakes, the act and the outcome. Thank you, Miss Devers, and I can tell you, before we go on, that if your Board of Engineers behaves like the Bar Association, your appraisal is correct: you would be reprimanded and fined, maybe even suspended. It is a sad fact of modern life that ethical behavior sometimes exacts a price.\"\n\n\"All right then, let's return to our syllabus...\" and the three hours seemed to whiz by. As they always do when Gerald gets into his teaching mindset. No amount of stress, illness or exertion ever dampened his enthusiasm for teaching, even this odd course which he accepted after his own probate law lectures were cancelled for lack of student enrollment.\n\nThe class, while leaving at the end of the period, seemed enthusiastic about the upcoming trimester, and so was Gerald. He also noticed that Dana... no, Paula... was taking her sweet time in packing her belongings.\n\n(Please stay behind! Pretty please!)\n\nHe got his wish. They were both alone in the classroom and Paula noticed he was excited about it. \"Hi Gerry.\"\n\n\"Hello. It's a pleasure to meet you, Paula. And to have you here, of course. How have you been?\" Once more, he offered his hand. This time, she shook it firmly.\n\n\"I have been good... actually, I should say I'm doing better. The Holidays are always a little hard on me so I'm truly happy to be back in class. And you?\"\n\n\"Also doing better. The Holidays, alone at home and with extra-bereaved clients at work, have always been the low point of my recent years. But teaching always perks me up and having you in my class is a splendid boon. What made you choose my course?\"\n\n\"The teacher, of course! Do you know that you are one of the best reviewed guest lecturer on campus?\"\n\n\"Baaah! That's because the workload is not too heavy and the average grade is high.\"\n\n\"All the more reason to take the course, then... I must say, though, that when we last met I never got around to ask why you ended up with this lecture. The Powers that be had nothing for you at law school?\"\n\n\"Indeed. Probate law has not much sex appeal to students, I'm afraid... regardless of current legal and demographic trends. And I was told, when they gave me a shot at this lecture, that I was following two teacher changes in two straight years. One was deemed too rhetorical, the other too legal. I guess I'm lucky I found the right tone with the students.\"\n\n\"Right tone, huh? Are you oblivious to the swooning looks of the female and gay male class population? You, sir, are one seriously hunky teacher. That poor Miss Devers will be dreaming about tunnels of love, not bridges, tonight!\" There was that mischievous look again. Whatever her mood, Gerald found her company intoxicating. He would have to be careful.\n\n\"Swooning... really? Then I suppose I am unaware... but I am not oblivious. Regardless of my feelings for any student, equity must be my only goal and caution my only attitude. Even though I teach adults, a simple misunderstanding can still ruin my teaching career, and ultimately even affect my legal standing.\" Both had sorrowful looks while he stated this, as if silently understanding the implication for both of them and agreeing to it.\n\n\"Then I should not linger and make a bad impression. I'm happy to see you again Gerry. And don't worry about me... I will never be the subject of a... misunderstanding.\"\n\n\"Thank you for making it clear but, in truth, that thought had not crossed my mind in the least. I trust you, Paula.\" But, just then, Gerald reacted to outside noises and checked his watch. \"We should leave; the next class is soon due. See you next week?\"\n\n\"Oh, you'll see me all right, Gerry.\"\n\n---\n\n(Hang in there, Gerry, only two more papers to go!)\n\nGerald walked to the bathroom hall, washed his hands and rinsed his eyes, then returned to his small office. He was reminding himself, as he frequently does, that the teaching he does for free, the salary is for the grading of papers. He chided himself for complaining while it was still early in the trimester and started reading and commenting the second last paper, an essay on the ethics of patriotism and freedom of expression. It was a good thing the other lecturer who shared this office had gone home, as the papers sprawled all over the desk area. Well, it was late... but Gerald, whenever he could, always tried to grade homework in a single sitting.\n\nHe was already focused on his task, so Gerald was startled to hear a knock on the door. He raised his head and was delighted to see Paula, waiting to be welcomed in... with the same deference than the vampires of legend.",
        "\"Good evening, Mr. Anderson, can I trouble you for a couple of minutes?\"\n\n\"Of course, Miss Winters, come in, please.\"\n\nWhile he hurriedly piled the papers and made room for her to sit, Gerald noticed that she wore another of her militant t-shirts - this one a memento of the 2015 Pride Parade - and that she was chewing nervously her bubble gum as she closed the office door behind her. The aroma of her perfume and breath instantly brought back vivid and fond memories; Gerald also felt a stir in his pants.\n\n\"What can I do for you?\" He was moving in his chair to sit straight and, unsuccessfully, mask his excitement.\n\n\"Explain me this, please.\" She handed him over a graded paper, her first in his class, with a scornful and belligerent expression.\n\n\"Do you think I graded you unfairly?\"\n\n\"I don't know about unfair, but I poured my heart out in this paper and I hoped for better than a B+, that's for sure! And all those complimentary comments about the research and the analysis of the Bedford vs Canada decision, to then be told my ethical examination is shallow!!!\" She was exasperated by Gerald's puzzled expression, but he replied in earnest.\n\n\"I mean exactly what I wrote in there, Paula, the paper was a superb research on the decision by the Supreme Court of Canada to unanimously strike down the anti-prostitution dispositions of their Criminal Code. If anything, I ought to keep it in my legal library it's so good. But this is not a law course. And there are a lot more ethics at stake than the security of the sex workers, as you must well know...\" he paused, because he knew that he would not get away with that last remark.\n\n\"You're kidding, right? You want me to write about MY experiences? Are you a voyeur or something, Gerry?\" He let that one slide... he deserved it.\n\n\"Not write about it... but let it infuse your reflection. Look, we were commenting Starship Troopers this week in class. Tell me this: do you think Robert Heinlein would have written the same classic in 1968, while we were embroiled in Vietnam, or in 1983, when the stage was set for mutual assured destruction, instead of 1959, deep in the nuclear race?\"\n\n\"I don't know, Gerry, I never met the guy! Where are you going with this?\"\n\n\"Good! Even when you're mad, you can still think objectively! You're better than I am! I obviously don't know for sure either, but I don't think so. I always prefer Hume to Kant when discussing choices, because Hume postulates that everyone is motivated in some way, and that always affects our choices. So, just like Heinlein used the History and Moral Philosophy courses in his book to settle some scores with his pacifist peers, use your own soul searching and experiences to reach and communicate your own ethical conclusion, not just the legal one of nine Justices.\"\n\nShe stayed silent.\n\n\"Answer me this, then: would you have been just as likely to choose my class if we hadn't met last fall?\" That got her wide-eyed in stupor.\n\n\"Right... Gerry, you're telling me, in your thoughtful tact, that karma is a bitch. You're heading back to your results and consequences routine. Christ, you hammer that one in class almost every week! How do I relate this to my paper, help me see!!!\"\n\n\"Okayyy... let's talk security, the very topic of the Court decision you researched so well. Tell me: if a contract of yours goes sour because of uncalled-for violence and your escort activities are 100% legal, do you file a complaint for a rape or for a breach of contract?\"\n\n\"Huh?\"\n\n\"Don't play dumb now! And, by the way, do you apply for an OSHA workplace accident if you're hurt?\" She was still stunned in silence. \"Could one coherently reconcile a capital criminal offense and a workplace safety program?\"\n\n\"Really! No comment? Than how about family structure? Accidents do happen... how do you deal with pregnancy? Do you write pre-sex agreements just like prenups? Without being unduly prudish, did you ask yourself if a couple can share their life and strive while one or both of its member are in the sex trade business? In reverse, should a deontology code order sex trade workers to forsake emotional attachments until their retirement... as you once so abundantly made clear, to me... and could such a code be conceivable, constitutional or enforceable?\" They were both a little choked up.\n\n\"Come on! Cat got your tongue? Fight a little! How about equity? Is it fair that dumb lummoxes who happen to be great athletes - and I concede they do work very hard at it - get access to a prime education and to a 31.9 million dollars budget for NCAA teams in our University, while you who are devastatingly beautiful - and God knows what you must have endured to achieve it - must behave as a criminal to benefit from that asset and get educated in the process?\"\n\nShe raised her hands in surrender. \"I get it... OK... stop it, please... but you lost me, Gerry: you were all over the place in that rant of yours; are you telling me you're for or against...\"\n\n\"I don't know, Paula, but I'm not the one trying for an A+ paper on self-determination and the sex trade. What did I once tell you about ethical conundrums and imperfect choices? You, of all people, are the only one who knows what my imperfect choice was once...\"\n\nShe finished his sentence \"... and what were the results and consequences. Yes, Gerry, I remember.\" But just then, something stirred in Paula. She scanned around and a playful spark showed in her gaze.\n\n\"You really think all our choices have consequences, do you?\"\n\n\"Yes...\" Gerald looked drained.\n\n\"You know what? To thank you for your tutoring, I will try to prove you wrong, Mr. Anderson...\"\n\n\"I beg your pardon?\" She was actively looking for something in her purse and now had a lustful grin.\n\n\"Mister Anderson, I will be your teacher's pet and, when - and only when - I feel like it, I will relieve that beautiful cock of yours... and that will happen with no expectations and no consequences whatsoever... other than you proving me right at the end of your lecture.\" She was already in front of him, like a nymph, and Gerald was powerless, and also quite unwilling, to resist her. He was hearing his belt being unbuckled and felt his heart race. He was feeling his briefs lowered and his breathing stopped. He moaned... none could tell if it was a protest or an encouragement.\n\nAnd then he felt it. Paula... no, Dana... had a glove on her hand and was getting re-acquainted with his large and engorged penis. \"What a beautiful thing you have there, Mr. Anderson. Not quite your best asset, but an impressive one just the same!\"\n\n\"Dana... please...\" it was a pitiful attempt and it was obviously not heartfelt.\n\n\"I do not recall asking your permission, Mr. Anderson...\" she was getting high again, from the buzz of the power she had over him. She missed that. She started stroking his granite-hard cock, slowly, gently, and carried on \"... and, judging by your reaction, I don't think I need it. Now, I don't think that the class lesbian twit spending time for tutoring late in your office will raise suspicions, but I still suggest you try to remain quiet... hmmmm.\"\n\nHer first handjob on him was slow and tender. They both could feel the passage of her glove on the veins and ridges of his gorged penis. His glans felt the gentle slide of the glove, lubricated by its seminal fluids. In almost no time, they both could feel throbbing and Dana got out a tissue to prepare for the upcoming milking. Just as she heard Gerald hold back the yell signaling his climax, she slowed down her tempo instead of quickening and relaxed the pressure of her gloved hand. A little frustration never hurts a cumshot, after all... and then it happened. The first spurts had high velocity and went much further than where she held her tissue and they landed right on her t-shirt, at breast level. Annoyed, she then milked his cock mercilessly and it really soaked her tissue. Gerald looked sated and looked like he was searching for words to thank her. Not a chance.\n\nShe whispered, now confident she was in total domination over him. \"Wow! Look at how backed up the poor guy was... and the mess you made! Now I'll have to clean up... so I have to concede round one to you, Mr. Anderson. But, you know the saying: if at first you don't succeed, try and try again!\"\n\nIn fact, she has never really stopped caressing his softening penis, and now she was picking up her tempo and increasing the pressure. There would be no tenderness this time, she was jerking him off to a second climax whether Gerald wanted to or not.\n\n\"aaAAAH!\" It was still sensitive.\n\n\"Sssshhht!\" She placed her free hand on his mouth and kept on jerking. \"I just can't do this every time, you know... I'm not to blame if you neglect your poor not-so-little dick... so now hush and let me make sure it's properly drained.\"\n\nThey both remained silent for the rest of the ritual. Dana jerked Gerald's cock back to hardness and kept miming encouragement. Gerald was so overwhelmed by what was happening he might as well be dead. Dana used her free hand to caress the soft skin of his cheek. She also gently grabbed his neck... she missed that as well. And then it happened again: HE was the slave, SHE became the puppet. She was jerking him like a blur and, in spite of herself, she rose to his lips to steal a kiss. A kiss of true love, just like the fairy tale; a kiss that brought Gerald back to life and a kiss that was returned with unabashed passion. His mouth had become a trap from which Dana found no escape, no matter how much her tongue searched. He even stole her piece of gum and kept it like a guarded treasure!\n\nShe heard him gently moan his climax into their kiss; she also felt the moistness of his cum dripping from her gloved hand. She let go of his cock before her experiment became painful to him... but she could not yet let go of his mouth. They hung on to their kiss until both felt a gush of emotion that could not be denied. \"Wow! Whheew! OhGod...\" were whispered in unison. Their wet eyes were speaking volumes and remained deadlocked.\n\nOnce more, she found it in her to end this. She shut her eyes and spoke, in a playful tone. \"All right, Mr. Anderson, I also concede round two. Guess I'll need to keep on trying, then... good night, Mr. Anderson... I need to go home, now.\" She left and closed the door so promptly, Gerald was not even 100% sure she was properly dressed.\n\nBut he didn't care. Just like after their date, he felt alone, empty and abandoned. So much, in fact, that he was haunted by her last remark: was she going home to relieve herself, to rest, or was a client waiting for her? Gerald knew he was jealous but he cursed himself because he knew he had no right to be, and he wallowed in self-pity. The last two papers would wait for later.\n\n---\n\nPaula once mockingly said she passed as the class lesbian twit. The fact is, she played that role to a tee during class. So, of course, as befits her status, she was the last one finishing her final exam on the last day. When she was sure they were alone in the classroom, she slowly walked to lock the door. She then walked beyond the door's viewpoint and motioned Gerald to come close to her with a simple motion of her finger.\n\nFor one magical night and now for the past 11 weeks, poor Gerald was nothing more than a possessed plaything under her spell. He once pondered if the spell was Paula's or Dana's and decided it didn't matter. When he was in front of her, him standing in a back row of tables and her sitting in a chair, she mischievously handed him her final essay and taunted \"you know I aced this, don't you?\"\n\n\"I have no doubt, Miss Winters...\" and that was not faint praise, as she had indeed proved to be a smart, a fearless and an insightful moral analyst. Both of them kept it hidden from the class, but she had quickly become one of his star pupils.\n\n\"So you know that what is about to happen has nothing to do with your grading or my upcoming excellent mark...\"\n\n\"That depends on what is about to happen...\" he really tried to get in on her banter, but the fact that this was their last time was making it difficult.\n\nShe had already lowered his briefs and set his massive cock free. It was already hard and pointing upward at her hungry gaze. \"Nice try, Gerry... look, I'm having a hard time too, OK? Lucky for me, I can depend on HIM to get us both in the mood... now let's try something different today, if you don't mind.\"\n\nNow that she mentioned it, Gerald did notice that she did not have her glove on and she fondled his balls, obviously enjoying the feeling of his shaved skin on her fingers and palm. \"Hmmm...I missed that... tell me Gerry, have you been good? Or have you finally gotten around feeding this marvelous dick of yours some ass or some pussy?\" Her voice was sultry and a little menacing. Gerald gasped.\n\n\"Dana... or Paula... ever since last fall there has been only you... and I think you know that.\"\n\n(Dammit, Gerry! Why must I always be the bitch?)\n\n\"Gooood! Now look at me, Gerry.\" She then locked her gaze into his and kissed the bulbous glans of his hard cock. Gerald was enraptured and he moaned in excitement, as she had never before sucked him. But now... well, it was difficult to judge if more arousal was channeled from her tongue or her eyes. Dana had obviously set her sight on a very sensual blowjob. She never swallowed him whole, as that would deprive them of eye contact. Gerald would always see her intense gaze, loving and lustful, focused on him, while her tongue slowly lapped the underside of his shaft or caressed his glans. He was assaulted by jolts of ecstasy from the warmness of her hand fondling his balls, from the wetness of her tongue polishing his skin and gently tripping on the ridges of his gorged veins, and also the from the feral lust channeled in her gaze.\n\nShe did not utter a single sound and let her eyes do the talking. She kissed and even bit ever so softly the nerve ending linking his glans to the rest of his shaft. Gerald was wild and clenching to the desk with all his strength to keep a hold on his breathing. Never had he been so intimately loved before and, behind the bliss, he felt a twinge of agony for not having the right to act on it. Then a huge jolt of pleasure shocked him back to the present moment: Dana had just snuck a finger inside his rectum.\n\nShe was still silent and both their loving gaze were locked together. Mindful of the passing time, again she found it in her to end this. She massaged his balls and his prostate a little firmer, she licked his shaft in one warm slurp and finished with a wet kiss on his glans that waited for his orgasm. Gerald, ever her slave, did not disappoint and climaxed on cue, whispering his withheld yell of joy. He spurted twice on her hair and constantly erupted on her lips for several seconds. By the time he regained his composure, her face and both her hands were soaked with his cum.\n\nShe licked herself clean and looked wicked doing so. \"Mmmmm... you know Gerry, you don't taste half bad... here, you try it.\" And she kissed him; to her amazement, he welcomed it... all of it: her wet sticky hands on his neck, her kiss, her tongue mingling with his and mixing his cum in their mutual saliva. When she ended the kiss, he swallowed all in silence. They were both blushing.\n\n\"Thank you... that moment was pure magic...\"\n\n\"Thank YOU, Mr. Anderson. You taught me some things this trimester and told me some other things I needed to hear... and during all my time with you, I felt great. This is another VERY, VERY good thing that must come to an end. I trust you still have my number... call me for anything.\"\n\n(So, this is really Dana talking right now...)\n\nGerald felt his heart crack a little. \"Of course! You take care, now, Dana. Good luck with the remainder of your studies and with your upcoming career... have a happy life.\" She somehow felt his underlying pain.\n\nJust before opening the door and walking out, she replied, forlorn \"... it seems you were right, Mr. Anderson, I guess there are always consequences after all...\" and she closed the door behind her.\n\n3. The river\n\n\"I'll talk to them, Paula, promise... I'll reaaaally try to get them to see you! Are you sure you're gonna be OK?\"\n\nPaula was a little irritated, but mostly tired. \"Yes, sis... I'll be fine. And don't force the issue with dad... one shunned daughter is enough. Now will you just go and let the nurse do her job, please?\" She forced a smile, mimed a kiss and shooed away her sister, who silently accepted her dismissal. Her departure coincided with the arrival of the duty nurse.\n\n\"Good evening, Ms. Winters.\" The nurse's voice was tender but a little mechanical. It was obvious that, in her round, she had other patients with much bigger health concerns that occupied her thoughts. \"I see the scarring is doing great... how about the headache? And are you still drowsy?\"\n\n\"Since the last round, I haven't felt like puking... which is nice... but the headache is still pounding.\"\n\n\"That really can't be helped, I'm afraid... I see your vitals are all good and stable, so I'll get you some more acetaminophen for the headache. For what it's worth, I've heard we might discharge you tomorrow and your concussion symptoms should have fully subsided by the end of the week. Also, before I go, I have to ask if you're up for an additional visitor.\"\n\nSince she couldn't leave yet, what she really wanted was to rest. \"Who? Police again?\"\n\n\"No... a tall young man is waiting outside, a Mr. Anderson. He seems very worried but also made very clear he would return later if you needed some time for yourself.\"\n\nHer heart leapt... but her excitement was kept in check by a sting of pain from her headache. \"Oh! Sure, please let him in... and thank you.\"\n\nShe was taking her pain medication when he walked in, looking like a lawyer who just stepped out of a roller coaster. His collar was unbuttoned and his silk tie was loosened; he looked like he had been wearing his shirt forever. But Paula was disconcerted by the look on his face, a mixture of concern and guilt. \"Heeey, Gerry! Here you are and I'm taking Tylenol again... what's with that?\"\n\n\"Hello, Paula. I'm sorry for the late hour, I got here as soon as I heard and was able...\"\n\n\"It's quite alright, Gerry. I'm happy to see you but a bit surprised... how did you know?\"\n\n\"The police interviewed me just as I stepped out of Court this afternoon.\"\n\n(Crap!!! His business card!)\n\nThat revelation was an added hammer to her headache. \"Oh my... I'm so sorry, Gerry...\"\n\n\"Don't fret... I'm glad I got to know about this and it accounts for my being here... but all this time, no one would tell me how you're doing. How are you, Paula? You look like...\"\n\n\"I've got beaten up? As a matter of fact, someone kicked the merry shit out of me.\"\n\n\"Dear Lord... anything broken? I don't see any drips, just the usual monitors...\"\n\n\"I've been told it's all big bruises; face and ribs. Plus a concussion, which accounts for my stay in observation tonight... and my headache.\"\n\nGerald had moved closer to her and was now holding her hand. \"Then maybe I should go and let you rest. I can be here tomorrow to bring you hom...\"\n\n\"No no, Gerry... please stay a while. In fact, you know what? Why don't you wheel me outside so I can smoke one?\"\n\n\"Sure... whatever you want.\" And Gerald, recalling on years of practice, proceeded to help her rise out of bed, dress and get comfortable on her wheelchair. Paula could simply not believe his tenderness and devotion towards her. He rolled her out of the room, informed the nurse and they proceeded to the main entrance. She lit up as soon as they were a couple of feet passed the door.\n\nGerald stayed silent as Paula dragged with desperation on her cigarette. \"Don't look at me like that, Gerry... I really need this cigarette, OK! Not to feel guilty about it!\"",
        "\"Sorry about that... but the smoking has nothing to do with it, though... what happened, Paula?\"\n\n\"I remember toasting with other students the end of the winter trimester... and the bar we had chosen was not rowdy at all. Next thing I know, I hurt all over, my head explodes and some doctor I already don't remember the name tells me I have gamma-something in my urine...\"\n\n\"Gamma-hydroxybutyric acid, Paula... that's GHB, a date-rape drug.\"\n\n\"Well, well, well! Are you a lawyer or a chemist, Gerry?\" It felt good to jest with him once more, but not enough to overpower her headache. She winced.\n\n\"My first internship was with the DA's office. I researched for three rape cases during that time. Would you believe I even practiced pronouncing the name in case I went to Court? So... I suppose whoever did this undressed you and... huh...\"\n\n\"Got a nasty surprise? Yeaa, that's one assumption the police is working on. The other being a deliberate act: hate, revenge or something like that. Not that they'll get very far.\"\n\n\"Why would you think that? Lord knows I'm not a specialist on the matter, but I thought I was interviewed rather thoroughly.\"\n\n\"Right! Tell me, how did that go?\"\n\n\"Well... they informed me I was not a suspect, but since my business card was in your pocket book... and since I kept asking how you were and not what happened to you... I guess I unwittingly raised a couple of red flags. But the campus cameras confirmed my presence at grading your final exams, plus my hands were without any bruising, so I was cleared to go, and worried as hell. Then I dashed to see you.\"\n\nShe lit up another one. Gerald had never seen her smoke that much before. \"Look, Gerry... just in case I'm asked, how much did you disclose about... us?\"\n\n\"All of it, Paula... that I once retained Dana's services, that you were a student at my winter lecture, and very militant about LGBT issues, that I pine for you and would not harm a hair on your body.\" He sighed in relief.\n\n\"Why on Earth would you say all that? That could get you...\"\n\n\"Nothing I don't deserve for what I've done. Plus, since most of what we did was on record, the police might have found out, on its own. It already knew about Dana Deep's website. And, according to your literary recommendation, once you lie to the police, they have you... that written advice stayed with me the entire time, so...\"\n\n\"What advice are you talking about, Gerry? My head must be more damaged than I thought!\"\n\n\"Mickey Haller! Ever since our first date I've been reading Michael Connelly. The Lincoln Lawyer stories first, then the Jack MacEvoy ones... I might start up on Harry Bosch soon.\"\n\nShe remembered. \"Ha! Funny!\"\n\n\"In any case, congratulations on your A in ethics.\"\n\n\"Thank you, Mr. Anderson... and thank you for being here, Gerry, it feels great to be with you again.\" They both noticed a lights-out on several floor of the hospital. \"Guess I should head back to bed...\"\n\n\"Sure... say, I know I'm nosy, but I noticed someone with you before the nurse came in, was that your sister?\"\n\n\"Cathryn, yes... deaaar Cathryn...\"\n\n\"Woow! Someone else than me has sister issues?!?\"\n\nWhen they were in the elevator, alone, she told quickly the tale of how Cathryn, during one of her run-of-the-mill teenager arguments, had blurted out the source of Paula's \"scholarship\" and thus disgraced her to her parents, who had supported her so far, especially during her transition.\n\n\"I'm sorry Paula...\"\n\n\"Hey, no biggie... results and consequences, right? Just like now?\"\n\nBy then, they were back in her room and her roommates were resting. Gerald knew his time was short so he had to whisper and hurry, all the while helping her change and get into bed. \"Don't do this.\"\n\n\"What, Gerry?\"\n\n\"Play the deserving victim. Remember the Heinlein quote: the universe is how it is and not how we think it should be. Sometimes, life just happens and that's what occurred yesterday: no expected results... only consequences that are up to you. Sleep on that please, I have to go... see you tomorrow?\"\n\n\"Don't you have Court or something tomorrow?\" The nurse was now peeking in the room and ready to throw Gerald out.\n\nHe kissed her quickly, on the lips, before going. \"One nice thing about estate management cases is that continuances don't really hurt anyone... good night!\"\n\n---\n\nPaula Winters was indeed released from Mercy Hospital the next morning. And she became the very reluctant recipient of Gerald's care, who took her home and dropped by, every evening, to check up on her and cook a warm meal. By the end of the third day, she found the strength in her to end this domestic charade.\n\n\"Gerry, I can't thank you enough for all that you did. Really. And I feel better now. You know, I start an internship tomorrow and, thanks in large part to your care, I won't start late or bent out of shape. But I really ought to take back control over my daily routine, now, you know?\"\n\nGerald, in fact, heard a howl from the deepest core of his soul and wanted to sob on the spot. But he put up a brave front. \"Very well, milady... I won't impose. It was a pleasure to help you. Now... I know it's none of my business, but is it only Paula who will be working... or also Dana?\" That blunt question shook the diplomacy right out of her.\n\n\"It IS none of your business, Gerry... unless you're looking for a date, of course.\" That blunt answer leeched almost all benevolence out of Gerald, but he chose to hold on to his last spark.\n\n\"As a matter of fact, I am!!! Sleep tight and good luck with the internship tomorrow... I'll call Dana later to discuss details, OK?\" He promptly left and kissed her cheek while closing the door behind him. Paula took a deep breath and sighed in worry.\n\n(Gerry, Gerry, Gerry... what are you doing?)\n\n---\n\nIt was a warm and beautiful May evening and Gerald, while waiting for Dana, enjoyed gazing at the sunset over the Buffalo River. He was also fidgeting about his upcoming date and, once again, trying to sidestep his guilty conscience.\n\nHe saw her ruby-red car, a very tidy and recent GM Cruze, approaching the grounds of the Buffalo Scholastic Rowing Club and she playfully honked while parking. It seemed that Dana had a wardrobe set in store for absolutely every occasion: clad in her Nautica sweater, knee-high blue cotton shorts and immaculate leather dock shoes, she looked better dressed for the outing than Gerald was. And, as usual, she took his breath away.\n\n\"You keep surprising me, Gerry...\" she kissed him on the cheek \"... this is NOT what I expected for a sunset outdoor date!\"\n\n\"Thank you, Dana, because I will take that as a compliment. I must say that you look amazing this evening, as always.\"\n\n\"Thank youuuu! And YOU look positively scrumptious! Do you need any help with that?\"\n\n\"Wait a second...\" he then proceeded with the envelope-and-receipt ritual. With that out of the way, he carried on as if nothing happened. \"THAT is called a shell and your help is appreciated, thank you. Just grab it here... and away we go!\"\n\n\"Wow! This is light! Are you sure we won't go through?\" That made him laugh.\n\n\"Positive... if we wanted, we could try for the Olympics on that shell. It's made of carbon fiber reinforced polymer.\" She noticed he was carrying only one set of oars.\n\n\"Don't I get one of these also?\"\n\n\"Normally, you should, as this is a double scull, but tonight I thought I would just row you around... it's the closest I can manage to a gondola ride.\" He was laughing shyly.\n\n\"My my! Aren't we romantic this evening! And this place is really nice.\"\n\n\"We are actually planning for a new boat house but, yes, we are rather proud of the place.\"\n\nAs they made their way towards the dock, they crossed path with a young man, obviously closing down the installation. \"Good evening Mr. Anderson! You're out late this evening!\"\n\n\"Good evening, Dave. Yes, tonight, it's a late initiation row. I'll close up shop when we're done.\"\n\n\"OK then! Good evening Mr. Anderson, and good evening to you too Miss! I hope you two enjoy yourselves and that Mr. Lowenberg will not be too jealous!\"\n\n\"Thanks, Dave... and I'm pretty sure he will be.\"\n\n\"HA!!!\"\n\nDana had a flash of recognition while they were seating themselves in the scull. \"Wait... Mr. Lowenberg? Isn't that the name you mentioned for another ethics teacher?\"\n\n\"Good memory! Yes, Ari and I are both founding members and we met here. We normally row together on this double scull and we frequently crew together in coxed eight events. We've been friends for years and, as you probably have guessed by now, he's the one who arranged for my first tryout at your ethics course.\"\n\n\"Wow... I guess it's a small world after all...\"\n\n\"Actually, my dad would have disagreed with you on this... but he always maintained, especially when I was wondering what to do with myself in my teen years, that you have to just get out there, no matter what... you always meet people and things happen... he always defended the notion of serendipity. I guess my life trajectory would prove him right... of course, these days, people connect differently, so I suppose his paradigm is getting outdated.\"\n\nBy now, they were set and ready to leave on the river. \"Now, Dana, you can probably feel just how close to the water is our center of gravity; the rule here is no sudden movements unless you wish for a swim.\"\n\n\"So what do I do, Gerry? You're behind me...\"\n\n\"Enjoy the water, enjoy the view... I always do; and rowing is a quiet sport, so if you want to chit chat or sing, that's also going to be great.\" And Gerald started gentle strokes to get warmed up, and then reached his routine rowing stroke.\n\nThere was not a wisp of wind and the water was calm as oil.\n\nDana was pleasantly surprised. For one thing, they were making good speed; but her main astonishment was the view at dusk. She was neither born nor raised in Buffalo and never cared for this part of town, whose history and outlook were marked by the Buffalo shipping canal; but, from here, these old buildings and factories had a quaint nobility to them. Soon they were cruising under Ohio Street, as Gerald was rowing upstream, and she realized, from her new vantage point, the splendor of the Buffalo emerging nightline.\n\nJust about then, Dana heard a tune being hummed behind her. \"Ro-wing, ro-wing, ro-wing down the river...\"\n\n\"Oh no you don't, Gerry! You DO NOT get to desecrate CCR! I got this covered...\" and while he rowed, she sang Proud Mary, from start to finish, an ode to her childhood memories of evenings in the family house when her mom would play CCR CDs while her dad watched the TV news. That just warmed her heart so much.\n\n\"Wow! Thank you very much, Dana; that was lovely.\" Gerald was starting to turn around and row downstream.\n\n\"You're welcome, Gerry... and so is this, by the way... you really like rowing that much, don't you?\"\n\n\"Even more than that, Dana... rowing is now part of my very being. Dad always dreamed to be a boater and move upstate where the good lakes are... but that was never really in the cards. Still, we shared plenty of fishing and waterfront camping. So when I discovered rowing at college, it was such an amazing escape from the academic tensions and such a bridge to my youth! As a plus, it's also great exercise...\"\n\n\"You don't have to tell me... I'm so tempted to turn around and just watch you hunk around on those oars... just the thought of it makes me wet!\" She had reverted to her sultry voice. The one from their first date and their office frolicking.\n\nGerald was flustered. \"With encouragement like that, young lady, I just might row right down to Niagara Falls!\" Indeed, Dana heard an increased tempo in his rowing.\n\n\"Ha ha ha, very funny, mister... but, huh... seriously now, Gerry... there's no chance of us...\"\n\n\"HAAA!!! No, silly! I was just kidding! It's a good 20 miles to the falls and there is a reason why marathons are run, not rowed!\"\n\n\"Good...\"\n\n\"Still, I must admit that it would make for a nice sight, the both of us on top of the nighttime falls, don't you agree?\"\n\nDana was suddenly talking in a shy, embarrassed voice. \"I wouldn't know, Gerry...\"\n\n\"You've never seen the falls at night? Or the fireworks?\"\n\nBy now, she was sounding sullen. \"Gerry, my nighttime knowledge of Niagara Falls pretty much amounts to honeymoon suites.\"\n\n\"Oh...\" Dana noticed the rowing had halted. She turned around cautiously and noticed Gerald checking his watch and miming calculations at the tip of his lips. She then heard \"... change of plans...\" and gasped at the intensity of his renewed rowing, obviously his top competition cadence. She intuitively understood that he was now fully focused on his stroke and waited for later to ask about the new plans.\n\nThey were stowing the scull and oars when she gave it a shot. \"Gerry, what are our new plans?\"\n\n\"Niagara Falls, of course! It's a lovely evening and about a half-hour road trip. We should make it by ten for the fireworks.\"\n\nDana stayed silent. That trip meant he was forfeiting any decent amount of time for a sexcapade and he obviously knew it. And yet, there was such hope and thrill in his voice, as if this new plan was such a better prospect. She felt a twinge in her head, not so much a relapse of her symptoms, but a reminder that, all along their boat ride, she had remained pain-free. The twinge moved down to her heart.\n\n(What IS IT with me and this guy?)\n\nThey drove together in his Ford Fiesta. \"Nice car, Gerry.\"\n\n\"Thank you... now, please tell me about your first days at that internship of yours.\"\n\nShe did, for a good part of the road trip. She was working for a small ad agency and, despite her early misgivings, she admitted enjoying the artistic freedom entrusted in her, as she quickly realized she was pretty much the whole of their Internet products department.\n\n\"That's super Dana... you're gonna make yourself invaluable and they will just HAVE to offer you a permanent position!\"\n\n\"You really think so, Gerry?\"\n\n\"I KNOW so... that's serendipity for you...\"\n\n\"Hmmm... then maybe you should include that in your syllabus for next year.\" After a short silence, she offered her rendition of Have you Ever Seen the Rain and, by the time she was done, Gerry was navigating within the city of Niagara Falls and making good time.\n\n\"Dana, you have a magical singing voice... thank you very much for sharing it with me.\" He held her hand and she blushed, but the moment was short-lived as Gerry was now parking near the Niagara Falls observation deck.\n\nThey walked briskly and quietly, hand-in-hand and with minutes to spare, to get as close as possible to the American falls. Talking would have been almost useless anyway, such was the white noise of the falls' rumble.\n\nGerald stopped near the end of the Prospect Point walking path, hugged Dana from behind and remained motionless, so she was free to admire... no, to be captivated... by the majesty of the falls, right in front of them and brightly colored by the neon lighting; she could also gaze at the horseshoe falls further down to her right, on the Canadian side of the river. She felt the tingle of the falls' mist add to the one in her soul. Every moment with him was special, but this one was pure Heaven. The brief fireworks show was just icing on the cake. She knew those precious minutes would be branded in her heart and mind forever.\n\nWhen the fireworks show was over, nothing needed to be said. As other sightseers were calling it a night, she turned towards him and Gerald was stunned to see tears inkling down her beautiful face. He did not have time to wipe her eyes as she gently palmed both his cheeks and kissed him. Their lips were moist and the kiss remained tender, bare, and honest; it was another kiss of true love. Her hands were now caressing his shoulders, his strong arms and his soft hair. And then Gerald hugged her even closer, bringing in contact both of the compact bulges in their loins.\n\nDana opened her eyes in shock; that was no accident. \"Stay close to me...\" she whispered and then she anchored herself on his shoulders and she started to sway her hips, rubbing their hardness together. She felt the rush of arousal within her and heard him moan in bliss. At that point, it felt like an explosion of passion. Gerald kissed her furiously, his tongue trying to merge with hers, and he cupped he firm buttocks; after a few strong caresses, almost a mauling, he strengthened his grip and lifted her, to perfectly align their crotches.\n\nStartled, Dana clasped her legs around him and now she humped him furiously, each rub punctuated by a deep breath and a grunt they both could feel inside their kiss. Within mere moments, Gerald got a feel for her rhythm and contributed to her humping in complete harmony. He was ecstatic about this: they were both going to cum on top of the Niagara Falls.\n\n\"Hmmmm... Dana baby, this is amazing, hmmmm.... Cum with me honeyyyy... hmmm... I love you...\"\n\n(NOOOO! Gerry, you CAN'T love Dana!)\n\n\"Yea baby... ooooh... you feel great... mmmh... cumming soon... with you!\"\n\nGerald was strong and Dana was relatively lightweight so they kept at it, just like that: Dana clinging to him for dear life, both of them kissing with abandon and humping to climax. They were oblivious to the world around them but, luckily for them, they had the falls all to themselves by then.\n\nWith each frot, Gerald felt a pulse build in his balls and every nerve in him screamed to go faster. Dana was not better off, feeling the constant caress of his large bulge and every time having the mental image of her ass being actually impaled on that marvelous cock of his. And she wanted to cum NOW.\n\nIt got to a point they could not kiss anymore and could only manage to mumble words of encouragement between moans of pleasure. They kept on humping under a soft chorus of \"gooood\" \"cummm\" \"greaaat\" \"soooon\" and \"amaaazing\". Then, at the culmination of this coupling, Gerald froze still, crushing her ass on him and winced almost as if he was in pain. Dana felt the pulses of his spurts on her own shaft and balls and that knocked off her bearings. She barely muffled a huge \"Ohmygooood!\" on his sweater and felt her own eruption just as he was loosening the pressure on her body.\n\nThey were panting, with sweat mingling with the mist, and looking at each other in a loving gaze of wonder. They silently agreed it was time to let go and Dana was wobbly on her legs, still clinging to Gerald.\n\n\"Gerry... that... that... was fucking... awesome!\"\n\n\"You took... the words... right out of my shorts!\"\n\n\"Dumbass... and I mean that literally!\"\n\n\"Hi hi! We should go back at the observation tower to clean up a bit...\"\n\n\"Can't we stay a little longer here, please? I want to see the falls some more...\" Gerald silently agreed and stayed put as long as she wanted. She was admiring the falls, he was ogling her.\n\nRight after they got out of the restrooms and Dana smoked a cigarette, Gerald reached the top of his imaginary roller coaster and dived again, while walking to his car. \"You know, Dana, if you're free tomorrow, we could stay here and spend our Saturday together at the Aquarium and other places in Niagara. I know the city pretty well... it was our fun destination, dad and I.\"\n\n(Damn you to Hell, Gerry! Must I always hurt you?)\n\n\"Actually, Gerry, I have plans tomorrow... I'm extremely sorry. You have no idea how much your offer means to me.\"\n\n(like... THAT was so lame!!!)\n\n\"Of course, Dana, I understand... say no more and let me drive you back to your car. Actually, you know what? Do you think I could have a piece of that bubble gum of yours? I think you got me hooked on those things... my pack is already empty.\"\n\n\"Funny, I never ever see you chew...\"\n\n\"I guess the aroma reminds me of you when you're not around...\"\n\n(That's it, you bastard! Keep on salting the wound! I deserve it.)",
        "\"There you go...\"\n\n\"Thank you.\"\n\nFor the return drive, Gerald put on a brave face and talked almost non-stop about the childhood memories of his frequent trips to Niagara Falls with his dad, with the wonder of the Aquarium and the thrill of kissing a sea lion at a premium. Also, he talked about their wine tasting expeditions, when they both got older, down the Niagara Valley wine route in Canada. This time, there was no innuendo, no flirting, no undertone... just a trusted friend bearing open his soul. Gerald was still at it when they parked back at the rowing club, marking the end of their date. For the first time, he found it in him to end it.\n\nHe kissed her on the cheek and remained at the wheel. \"Thank you Dana... I had an amazing time tonight. Please be careful returning home and good luck with your internship this summer. Good night.\"\n\nDana felt so violently repulsed she might as well have been sitting on an ejector seat. She withheld tears. \"Thank YOU, Gerry... I always have a fantastic time with you... please, please call again. Good night.\"\n\nAs she watched his Ford disappear in the horizon and smoked alone beside her car, every instinct of hers foretold that her last wish fell on deaf ears. She had been on the river, went on top of the falls and tumbled down. She then drove home in despair, with a suddenly huge headache.\n\n4. The Christmas bombing pause\n\n\"Yes, Sylvia... I understand... no no! No problem, it's all set... yes, I have the address... don't worry, I'll figure out the navigation... yes, yes, see you soon! Bye now...\" Gerald finally hung up, feeling like someone capping a Genie in his bottle. He almost felt tired. Mostly, he felt anxious.\n\nHe looked outside from his closed window and realized his heart felt as bleak as the grey skies and snowy cityscape outside.\n\n(Face it, Gerry... you need her... but then again, what good is moral support if you always feel like crap afterwards... not to mention broke!)\n\nHe allowed himself to think on it while doing his daily workout on his rowing machine. He was still thinking on it while purchasing the required supplies for this upcoming trip. Again while he got his car prepared and also while he checked his office schedule for the Holidays period. Then, one evening in December, there was nothing left for him to do to postpone the inevitable... he dialed.\n\n\"Hello...\" There was the sultry voice... he had not heard it once in seven months.\n\n\"Good evening Paula, it's Gerry... is this a good time to call?\" An uncomfortable silence ensued.\n\n\"This is Dana Deep on the phone, what can I do for you?\" His heart sank to abyssal depths, but at least he was thankful she was being straight with him and did not end the call.\n\n\"I would like you to accompany me on another road trip, Dana... yes... Staten Island... three days, four at the very most... Christmas time, if you're free... oh, I understand, of course... what? You will! That's super! Yes... my sister Sylvia. All right, we can talk again later for the details... ok then... good night.\"\n\n(Now you've done it! And why was she in a hurry to hang up? Did she have a date tonight? And why did she waver: is she mad at me or will she be canceling already planned dates?)\n\nTalking to Dana was akin to crossing a marked minefield under fire but, whatever his misgivings, Gerald could not deny he was excited. Tonight, he would be going to bed with his dildo, his butt-plug, and just allow himself to feel his need, his thrill of expecting to see her again.\n\n---\n\nHe was happy he did not have an accident on the way to her home... that's how excited he was on his way to pick her up. And Dana, standing outside at 2h AM with a tuque, mittens and a parka, looked like a snow queen. Her beaming smile could melt snow and he was as dazzled as ever by her. She tried to dust herself before stepping in the car, to no avail... powdery snow followed her in. The very instant she was sitting down, Gerald felt her frosty cold lips on his; they were still moist and soft. \"Hi, Gerry!!! Did you miss meeee?\"\n\n\"Yes, Dana, I missed you terribly... are you all set?\"\n\n\"Indeed! Drive, Gerald!\" She spoke with a caricature of a British accent and was obviously in a playful mood. The fact they had settled the transaction ahead of time helped, as it allowed them to avoid that usual awkward moment.\n\n\"All right then... have a good trip!\" He was caressing her thigh saying so... it just felt so right. She did not resist or appear startled.\n\n\"You too...\" She kissed him again, a quick peck on the cheek. \"Now, explain to me why we are driving six hours instead of flying?\"\n\n\"Because you obviously have no concept of flying to New-York for the Holidays... also because the back is full of paint and I was weary of declaring that sort of liquid to an airline. There are so many restrictions these days.\"\n\n\"Ah... so I heard you right... we are going painting; Gerry, if I ever write the memoirs of Dana Deep, the chapter on unusual dates will be devoted solely to you!\"\n\n\"No, Dana, WE are not painting, I AM painting. Sylvia will not stand the vapors and, even though I'm bringing several odor absorbers, I expect her to step out. I don't mind that though, I'm good at painting. When I told you my dad was a painter, I didn't mean an artist; he was a blue-collar city worker: he painted arenas, community centers and offices for almost 40 years and I like to think I'm a little chip off the old block...\"\n\n\"OK, Gerry, so I'm here to... give your sister a good time?\"\n\n\"NOOOO, you nympho! She's a mess and I'm her moral support. You're going to be MY moral support!\"\n\n\"Are you kidding?\"\n\n\"Of course not, Dana... there is no one I would rather have with me to face this.\" It was very heartfelt and Gerald heard Dana skip a breath.\n\n\"Well... thank you but... come on, Gerry, how hard can this be?\"\n\n\"I have, in fact, been searching for a proper image to picture you this adequately... and the Christmas bombing pause always comes to mind, to tell you the truth.\"\n\n\"You DID NOT just compare your relation to your sister with a chapter in the McNamara book on Vietnam!!!\"\n\n\"I'm always amazed by the quality of your memory...\"\n\n\"Don't sell yourself short; your required readings were almost all pleasant surprises. And they did turn me into a 60s History buff. I've read Dean Rusk, Ted Sorensen and Arthur Schlesinger since then... but that's beside the point... how can you picture your situation with Sylvia so bleakly?!?\"\n\n\"Because my sister issues are deep-rooted and without solution. She's eleven years older than I am and Destiny gave her the raw deal in our family, through and through. Mom died at the onset of her teens and dad... well... he was comfortable with boy things and boy issues. So she gets married as soon as she can date husband material instead of immature jerks, and that anchors the rest of her life. There was a chasm early in the marriage but she fought like hell to hold it together, for her sake and especially Chloe's, my niece. The few times we spoke while I was in College, I kept urging her to leave Steve before she irrevocably hated him and it would be too late for her to rebuild her life, to the expected barrage of denial and verbal abuse on her part. And now it turns out I was right... and she's down for the count. I'm not going over there to gloat, Dana... I'm picking up the pieces and I don't have any glue.\"\n\nHer hand was on his. She was already needed. \"Still, you're describing me a tragedy, not warfare...\"\n\n\"Because I have empathy now doesn't mean I had sympathy then, Dana. When dad got sick and all our lives went to the crapper, she was caught up fighting for Steve and also with Chloe in a full rebellion phase. She let me hang out to dry, with choice words of detachment about dad and his favorite son as a bonus. It was ugly. Really ugly. When we halted communication, it was more of a truce and mutually agreed so we would not completely annihilate our relationship.\"\n\n\"I get it... and she needs you now?\"\n\n\"Yes... we've been sporadically keeping in touch since dad's funeral. Her divorce was recently finalized, Chloe left for College and it just hit her that she's now living alone. So she tries to restart living as one instead; she told me she sold her Manhattan condo and bought a nice little house in the St. George district, within walking distance of the ferry. For her to choose to reside in a heritage zone, I suppose she intends to restore the building... that ought to keep her busy for some time. In any case, she asked me to paint and spend Christmas. And I want you there with me. End of story.\"\n\nShe was petrified and unsure how to react. \"Well, well, well, are you a lawyer or a therapist, Gerry?\"\n\nHe chuckled. \"A lawyer who listened when HE went to therapy.\"\n\n\"The chasm, as you called it... what was it? Did he cheat?\"\n\n\"I wish! That would have been easy! Steve did not want any more children after Chloe. I don't know if his motives were health-related, financial, altruist or self-serving, but he was intractable on the issue. And Sylvia wanted kids. Plural. Even when I was too young to have a clue about the facts of life, I was aware of that yearning of hers. She should have never compromised on such a big deal to her, but she insisted it was her choice to make... and she was right and, now, here we are.\"\n\n\"And of course, she's your big sister, so you're diving back in there...\"\n\nHe grumbled in agreement and, after a short pause, he carried on. \"There is also the upside of a possible pleasant Christmas for the first time in years... and I recalled what you also said about the Holidays, when we spoke last winter... so I figured maybe we could be lucky and also share this.\" He turned his free hand around to return her grip while saying this.\n\n\"Gerry... that's very sweet of you... I don't know what to say...\"\n\n\"Say nothing more... I'm glad that you appreciate the thought and... you know what? I hope we do have a good time; we deserve it!\"\n\nDana was blushing deep red and kept her grip on his hand, which was slightly shaking. \"I agree, Gerry! Fuck it! Let's have a good time... provided you get us there alive, of course. This pocket rocket of yours is not exactly winter rally material!\"\n\n\"No worries there... I have some winter driving experience and, also, I have invested in winter tires. We should be fine and on time.\"\n\n\"Winter tires... wow! That's very Canadian of you, hi hi!\"\n\n\"Eh? Before you start calling me a hoser, maybe you could choose a selection on the iPod for the tunes. It's already connected to the stereo.\"\n\nShe had a puzzled look, obviously not catching his Bob and Doug Mackenzie humor, and strolled down the playlist titles after a brief moment getting familiar with the stereo controls.\n\n\"Gerry... you have a playlist with my name?\"\n\n(ShiiIIITTTT!)\n\n\"Yes, Dana... it's... euh... oh, well... you'll hear it for yourself.\"\n\nUpon hearing the soft bass intro of Lou Reed's Walk on the Wild Side, she cooed \"ouhouuuu, naughty boy! I love that song...\"\n\nShe was perplexed by the next song, a ballad. The screen on the car stereo said I Don't Know How to Love Him, sung by Yvonne Elliman on the Jesus-Christ Superstar Album. She repeated the song. \"This is really beautiful, Gerry... what does it represent?\"\n\n\"Yvonne Elliman plays Mary Magdalene and sings that lament while Jesus-Christ is asleep, on the night after he entered Jerusalem and chased the merchants from the temple...\"\n\n\"Oh... so of course I'm Mary?\"\n\n\"Actually, when I listen to the song I really identify with her words... no bullshit.\"\n\nShe repeated the song again before asking \"could we share?\"\n\n\"Of course, Dana.\" But that answer was almost drowned by Haddaway's What is Love, and they both set out to swing frantically and sing the lyrics at the top of their lungs. Gerald thought they nearly mimicked a Saturday Night Live Roxbury Guys sketch, but kept it to himself.\n\nWhile I'm Not in Love from 10cc was playing, a couple of titles later, Dana said \"I love my playlist, Gerry, thank you...\" before dosing off on her seat. She did not see Gerald shed a tear while he listened to Annie Lennox singing Waiting in Vain, soon afterwards.\n\nIt was still dark when she stirred and woke up. \"HMmmm... hey, Gerry... how long have I been snoozing?\"\n\n\"About three hours; we're approaching Binghamton, do you need a smoking break?\"\n\n\"Naaah, I quit!!!\" She was beaming with pride. \"We can go a little further along and stop for breakfast.\"\n\n\"OK then, we stop at Scranton for breakfast; and congratulations for quitting! Was it as hard as they say?\"\n\n\"Brutal! Even with the help of therapy and prescriptions, for me, in the end it all came down to force of will. But I wanted it hard enough and I'm very proud of myself. You know, last summer, after the beating, I ended up almost chain-smoking; that got me to think about your mother... and I worried.\"\n\n\"Then you ought to be praised! And I'm really proud of you!\"\n\n\"Thank you, Gerry... coming from you, it means a lot.\" She took his free hand into hers. He softly returned the grip.\n\n---\n\nThe decision for a night trip paid off; they had an eventless drive and arrived on schedule at the small house on Montgomery Avenue. Sylvia was waiting for them and fiercely hugged her brother as soon as he stepped out of the car. To Dana's great relief, they both immediately, and effusively, quashed all past grievances; Gerald then wasted no time setting himself up to paint all day.\n\n\"Thank you for all the pictures you sent me, Sylvia... it really helped my planning and your instructions are quite clear. Are you sure you two are going to be all right while I do this?\"\n\nSylvia guffawed. \"Seriously, Gerry? Two girls; New-York; Christmas shopping... WE are going to be great! Right, Paula?\"\n\n\"Absolutely!!! See you later alligator!\" She gave him a quick kiss before running away in jest. \"Come on, Sylvia... and just where, exactly, did you had in mind?\"\n\n---\n\n\"Wow! Ger-ry! You weren't kidding! You ROCK at painting!\" They had returned just before dinner time and were astonished to see that Gerald had finished all his paint work with the roll, in the entire house, and was finishing his cut-out work with the brush in the master bedroom.\n\n\"Paula's right, Gerald... thank you very VERY much! This is a huge deal! You would have done dad proud.\"\n\n\"You're quite welcome, ladies... of course, the single-coat paint has a lot to do with it. Sylvia, are you sure you're going to be all right with the air quality? We can't really open all the windows wide in December...\"\n\n\"We ought to be all right. Now, Gerald, I'm calling the pizza right now. Your girlfriend told me about her choice of toppings already. You're still up for double-pepperoni with a cold beer?\"\n\n\"Mmmm! Like you wouldn't believe!!!\"\n\nGerald was done painting by the time the pizza arrived and the three of them had a small but lively pizza party. He keeled over and went to sleep on a couch almost right after eating, apologizing for deserting them before the cleanup and wishing them a fun evening without him.\n\n---\n\n\"Come on, wake-up, you poor beast of burden! Time to go to bed!\"\n\nGerald remained lethargic. \"Mmmhhh... wheeerrrre?\"\n\n\"Come with me, baby, I got you...\" and Dana led Gerald to one of the two rooms that the ladies had hastily put together for the night.\n\nGerald changed mechanically into his briefs and slumped down on the floor-level matress just like timber. Dana looked on tenderly and joined him under the sheets - it would be a cold night with the windows partially open.\n\nShe was nervous about their first night together, even though it would clearly be a platonic affair. Insofar as emotional intimacy was concerned, they had never been further than kisses during sex; never cuddled; never hogged the blankets; never soothed sore muscles; never cared for one another.\n\n(No, don't think that... HE always cared.)\n\nShe spooned behind him and hugged him snuggly; that brought some life back in Gerald. \"Mmmm... you feel nice.\"\n\n\"Thank you, Gerry... now go on resting... tomorrow's Christmas Eve and it will be another long day.\" She was whispering in his ear.\n\n\"Did you have a nice evening with my sister?\"\n\n\"Yes, we talked, cleaned up and set up some minimum comfort in the rooms.\"\n\n\"Did you give her a good time, mmmmh?\" She punched him on the shoulder. \"Ooow!\"\n\n\"Smartass!\"\n\n\"Ok, ok, seriously... what did you talk about?\"\n\n\"She kept repeating just how happy she was you were here... you really did good by her, Gerry...\"\n\n\"mmm... that's good...\"\n\n\"We also talked about us; oh and we also talked about sex!\"\n\n\"Mphh... why is it that girls always talk about sex?\"\n\n\"And guys don't?\"\n\n\"Nope... even the most libertine and lecherous macho douchebag will brag about his past conquests, rave about who he is luring in and, especially, crow about his current trophy... but, honestly, guys never really speak about the deed. Just how graphic were you?\"\n\n\"Don't worry... just enough... both our virtues are quite safe.\"\n\n\"Thank youuu...\"\n\n\"She also said she was reassured that such a loving couple - that's us - met online; she's about to try dating again and is nervous about it, you know?\"\n\n\"Too much information Danaaa... she's my sisterrr!\"\n\n\"Sorry, Gerry, hi hi!\"\n\n\"No, Dana... actually, I'm the one who's sorry. Careful... I'm going to turn around...\" Dana let him turn around and they were now facing each other. Even though Gerald's eyes were half open, his gaze expressed pure happiness. \"... Dana, I believe this is my first time ever at pillow talk and it's a very very nice experience. Thank you very much for this. I hope we get to do it again.\" Her heart skipped a beat.\n\n\"Say no more, baby, just rest...\" she kissed him good night and looked expectantly as he drifted back into sleep. Somewhere in the back of his mind, Gerald knew that she cut short the conversation, probably for a reason; he was just too tired to bring himself to care.\n\n---\n\nGerald woke up first and had plenty of time to get himself familiar with Sylvia's new kitchen; he prepared bacon and egg breakfasts for the ladies, assorted with fruit slices and coffees with Bailey's cream. The aroma woke them up and Gerald was quickly sandwiched between two very grateful kisses on the cheeks.\n\nThe rest of the December 24 morning was all household business, spent refurnishing the freshly painted rooms. The afternoon was more leisurely, with Sylvia preparing a turkey dinner and Gerald and Dana both putting finishing touches in the living room, and then decorating the Christmas tree. It was all done in an atmosphere of Christmas carols and eggnogs. By dinner time, Gerald had found some wood and managed to get the old fireplace going; gift packages and greeting cards had also surreptitiously appeared at the base of the tree.\n\nThis reconstituted, and very alternative, family ended up having quite a loving Norman Rockwell Christmas Eve. After returning from attending mass at Christ Church New Brighton, all three warmly wished themselves good night.\n\nGerald, who was about to prepare the bed, was redirected by Dana. \"No wayyy, Gerry! We are NOT just cuddling for Christmas... to the shower we go, baby!\" She had such a playful, mischievous expression that Gerald just stood there and sighed; he felt the urge to just grab her in a bear hug but he kept it in check. Once again the warrior, enraptured by his enchantress, followed her dutifully.\n\nThe guest shower, an obvious addition during the life of the house, was minuscule, so Dana went in first. When Gerald was done washing and drying himself, he returned to the bed and was transfixed. Dana was on the bed, in a tucked position, wearing absolutely nothing but a large red ribbon over her head; she was watching Gerald, stunned in place, with the nervous smile of one trying to please her lover.\n\n\"Merry Christmas, Gerald... open your present and be careful with the wrapping, please...\" her voice was low, sultry and slightly musical; Dana was going for the full Marilyn Monroe effect. Gerald was still paralyzed."
    ],
    "authorname": "Fred190666",
    "tags": [],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/results-and-consequences"
}