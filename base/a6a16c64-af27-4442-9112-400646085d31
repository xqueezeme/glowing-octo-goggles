{
    "title": "Tucker's Studio Ch. 15",
    "pages": [
        "All people and places are fictional. All characters are over eighteen.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nSin City\n\nTucker's inbox was flooded with comments every time he posted a scene on the website that featured Kelsey. \"More please!\" pretty much summed up everyone's feelings about her. He was thrilled with his new girl, and she was pretty high on life.\n\nHer first semester at art school was a whirlwind. Dorm life was fun and relaxing, with an ever expanding gaggle of friends with benefits. Her roommate Hannah had gradually gotten used to Kelsey's naturist ways, and the two of them rarely wore clothes when they were in their room. For Kelsey it was unremarkable, but for Hannah it made her first foray into living away from home thrilling beyond belief. By chance she'd ended up with a nudist, sex-loving, budding pornstar for a roommate. It didn't take long for Hannah to start shedding her clothes at the dorm parties almost as easily as Kelsey did, which is to say, they were naked a lot, and cute boys with nice cocks were everywhere. It was a new and exciting life for someone who'd grown up with conservative, religious parents. She had hoped college would be fun, but wow!\n\nKelsey loved school too. All the classes were challenging and fun, but Digital Illustration was her favorite. The professor was a handsome guy, a very low-key thirty-four-year-old named Kyle. Kelsey caught his married eye on day one. She'd really enjoyed her time with Brie's dad \u2014 the older man thing made her happy \u2014 so she wasted no time seducing her way into an affair with Kyle. It was a first for him, falling in with a student, or anyone for that matter, since he'd been married.\n\nAnd then there was Kelsey's job. Tucker gave her as much work as she could handle, but he knew she needed time for school and time to be a youngster, so he tried to space out her scenes \u2014 one a week or so.\n\nWhen she'd first taken the job she told her mother right away. Kay didn't give away much emotion on the phone. Kelsey thought her mom might be excited for her, and she was, but Kay kept it to herself at first. She knew that in the Mothering Handbook being excited for your daughter's new pornstar job would be considered wrong with a capital 'W' and an exclamation point, so she tried to reign in her excitement and talk calmly on the phone.\n\n\"Are they nice people?\" she asked. \"Do they treat you with respect?\"\n\n\"They're so nice mom,\" Kelsey said. \"It's like a family. There's a Jamaican guy that does the camera work, and some acting too. My first scene's gonna be with him.\"\n\n\"Oh honey!\" Kay said, in a quiet, wistful tone. \" A few years ago...well...someday I'll tell you a story.\"\n\nBobby was a little less enthusiastic about his daughter's job when Kay told him about it, but he knew his wife well, and he was well aware of all the genetic material Kelsey had inherited from her mom. Kelsey being sexual in a big, open way was almost predestined. It was just life playing out as it was meant to be. Kay and Bobby did decide, though, to drive up for a visit. They wanted to meet Tucker and have a look around, to make sure it wasn't a sleaze factory with lines of cocaine on every flat surface.\n\nSo what happened? Tucker was just as smitten with mother as he was with daughter. He offered work to both Kay and Bobby. Beautiful sexy kids are made by beautiful sexy parents after all. Nothing came of his offer, but they drove back home feeling good about Tucker's studio and the people who work there.\n\nBrie drove over for a visit too. She wasn't happy at school and blew off a bunch of classes off to spend a week with her old friend. She slept in Kelsey's bed with her the first two nights, Hannah's the third, and then it was just a big jumble of flesh, all of them falling asleep wherever they happened to be after too many orgasms. Kelsey and Hannah brought Brie to one of the dorm get-togethers to play with boys, and Kelsey brought her to meet Kyle too, at a staff lounge in the back of one of the college's ivy covered buildings. It had a lock on the door that they used to keep the nighttime cleaning crew out. Kelsey and the professor met there often.\n\n\"You should transfer here,\" Kelsey said. She and Kyle and Brie were sprawled on an old leather couch catching their breath after some threeway action.\n\n\"Oh my God, I wish I could,\" Brie said, sounding sad about her situation. \"It's more expensive here though, and my parents would never go for it anyway. Word's gotten around about you. My mom knows. She didn't say it right out, but she knows. Dad too I think.\"\n\n\"Knows what?\" Kyle asked.\n\n\"Ooookaaayyy,\" Kelsey said quietly. \"I figured I'd have to tell you this before too much longer.\"\n\n\"Oh my God Kel!\" Brie said, looking horrified. \"I'm sorry!\"\n\n\"No biggie Brie. Like I said, it's time,\" Kelsey said. She turned to Kyle. \"So, my handsome professor, you know that job of mine?\"\n\n\"Yeah,\" Kyle said. \"Working at the warehouse downtown?\"\n\n\"Right,\" Kelsey said. \"It's not a warehouse anymore. It's an adult entertainment production facility.\"\n\nKelsey had heard Tucker describe the place that way one time, and kinda liked the ring of it.\n\n\"I'm an adult perform...oh, fuck it. I make porn. I fuck on camera.\"\n\nKyle didn't say anything. His expression was unusual, sort of confused. He started to smile. He laughed a little.\n\n\"Kelsey! What the fuck!\" he said, still smiling skeptically. \"You do not! Do you?\"\n\n\"I do, and I'm pretty good at it,\" she said. \"Do you hate me?\"\n\n\"Fuck!\" he said, laughing even more. \"I mean I knew you seemed really experienced for your age but...a porn girl? I'm having an affair with a porn girl?\"\n\n\"Porn star\" Brie said proudly. \"She's up for a big award this year. What is it? Best new...\"\n\n\"Most Promising Newcummer,\" Kelsey said, with an adorable smile on her face. \"My producer submitted me, that's all, but it's kind of a big deal. He said his friends in the business think I've got a shot at it.\"\n\n\"Oh my God you're cute,\" Kyle said, laughing again. \"I can't believe I'm laughing at this, but it's kind of hilarious. My first affair, and...well, if a guy's gonna go he might as well go big, right?\" Kyle grabbed Kelsey, nuzzled his face between her big tits and palmed her sweet little ass in his hand. \"Fuck you're hot!\" he said. \"And I'm a goner.\"\n\nThe fucking reached epic proportions that night in the faculty lounge. Kyle had always tried to keep things quiet when he and Kelsey were in there, but that night he just couldn't help himself and the girls really cut loose too. The cleaning lady got an earful through the door.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe next day, after two morning classes, Kelsey took Brie to the studio to meet Tucker and have a look around.\n\n\"This is nothing like what I expected,\" Brie said as Tucker gave them a tour. \"This is gonna sound stupid, but...I thought it'd be...sticky.\"\n\nTucker laughed. They went into the women's dressing room to meet Marsha, who had stopped in that day to organize wardrobe that had come back from the dry-cleaner. Kelsey and Brie quickly reverted to giggling teenagers as they pawed through the racks of lingerie and dresses.\n\n\"I'll let you guys play,\" Tucker said as he turned toward the hallway. \"It was great meetin' you Brie. My offer stands \u2014 anytime you want work, just give me a call.\"\n\nBrie blushed, the same way she had twenty minutes before when Tucker first made the offer.\n\n\"He's nice isn't he?\" she said after he left.\n\n\"This'd look so good on you,\" Marsha said, holding a flowery purple bra up against Brie's shirt. \"Look how it works with her eyes,\" Marsha said to Kelsey.\n\n\"Wow,\" Kelsey said. \"You gotta put that on. You do that set and I'll do this one.\" She held a see-through green bra and panties up to herself that looked fabulous with her cinnamon red hair.\n\n\"No, we shouldn't. They just came back from the cleaners,\" Brie said, but the excitement of doing something naughty in a porn studio showed clearly on her face.\n\n\"Don't worry about that,\" Marsha said. \"It's not like anybody's gonna squirt cum all over you.\"\n\nBrie giggled and shrugged her shoulders. Pretty soon she and Kelsey were looking resplendent in the tiny garments, and they were pulling things off the rack in Marsha's size. Kelsey held a blood-red bra and pantie set in front of her.\n\n\"I can't just parade around here like that,\" Marsha said. \"I work here.\"\n\n\"There's nobody here but Tucker,\" Kelsey said, with a twinkle in her eye. She knew Tucker and Marsha had crushes on each other.\n\n\"You're trouble!\" Marsha said with a sly grin. \n\nShe grabbed the hanger from Kelsey and looked at the dark-red satin and lace. Marsha's time in front of the cameras with Jamar and Dave and the bartender girls had opened her eyes to her latent love of exhibitionism. So what if Tucker got a glimpse again. That wouldn't be the worst thing in the world, would it? When she started stripping Kelsey smiled.\n\n\"Come with me,\" Kelsey said to Brie. She took her hand and led her out the door.\n\n\"Hey!\" Marsha said. \"Where are you going?\"\n\n\"Put that on or I'll be mad. Stockings too,\" Kelsey yelled as she and Brie disappeared down the dark hallway.\n\nMarsha knew she shouldn't, but she followed Kelsey's orders. She looked herself over in the big mirror before sheepishly looking down the dark hallway. There was a dim light in the corner of the studio. Marsha was drawn to it, slowly, nervously. It was the hotel room set, with one little bedside lamp on, an oasis of warm light in the huge old warehouse. Kelsey and Brie were already rolling around on the big bed, kissing and fondling.\n\nMarsha didn't join them immediately, but there'd be no turning back on that day. The memory of her time with Kat and Lori the bartender girls swirled freely in her head as she stood in the dark. Her hand drifted across her thigh, landing on the smooth satin covering her pussy lips. The damp heat she felt there was the last straw. Truth be told, there weren't many straws.\n\n\"Play with us Marsha,\" Kelsey said when she saw her.\n\n\"I knew you were trouble the first day I met you,\" Marsha said, looking around nervously to see if Tucker was anywhere in sight.\n\n\"I can't tell if you want him to see you or you don't,\" Kelsey said, smiling slyly at Marsha.\n\n\"You!\" Marsha exclaimed quietly. Her skin was all goosebumpy.\n\n\"Come here. We'll warm you up,\" Kelsey said, extending her hand.\n\nMarsha walked to the edge of the bed and skittered on.\n\n\"You're bad,\" she whispered as she joined the giggly young girls. \n\nKelsey's first touch nearly gave Marsha an orgasm. It was a combination of things that fueled the feeling \u2014 sex with her husband had dried up lately, she kind of loved the girl-on-girl thing ever since Kat drew her into it that first time, and there was the possibility of Tucker watching from the darkness. Yup, that was a biggie, and Marsha's eyes glanced around to see if she could see any sign of him. There was nothing. She didn't know if she was relieved or disappointed.\n\nKelsey and Brie quickly overwhelmed Marsha's senses. Thoughts of Tucker drifted out of her mind, at least for the moment. Kelsey was thrilled to have Marsha join them, and it wasn't long before tits and pussies were everywhere on the big bed. Kelsey and Brie knew each other intimately, and had both become experts in the female orgasmic arts, so Marsha was in good hands. She was in good mouths too. With Kelsey devouring the womanly taste of her pussy and Brie ravishing her soft tits, a big, beautiful orgasm was inevitable. The heavenly noise roused Tucker from his desk. He remembered that sound \u2014 Marsha's soft, lovely voice rising to a soft, lovely cry.\n\nThe girls took turns double-teaming each other, and the dreamy orgasms flowed freely. Marsha got so caught up in the playtime she completely forgot about Tucker, but when the girls were ravishing her for the second time she remembered.\n\nIt was a lovely chain of femininity \u2014 Marsha on her hands and knees over Kelsey on her back, both of them sucking the others tits, and Brie on her stomach, her arms wrapped around Marsha's thighs, her mouth massaging Marsha's pussy in an exquisite way, soft tongue warm against engorged clitoris, dancing it's way to tender asshole and back again.\n\nTucker stood at the end of the hallway leading to his office, leaning casually against a wall. The hallway wasn't lit, but the light from his office outlined him in dim silhouette. He'd been there for a while, but Marsha noticed him just as her orgasm was building. What happened was similar to throwing gasoline on a smoldering fire...\n\n\"Oh my God!\" she whimpered as the explosion consumed her.\n\n\"Wow!\" Kelsey said as Marsha came back to earth, still nibbling the hard nipples on Marsha's pendulous tits. \"You cum beautiful!\"\n\nMarsha didn't know what to do. Her body was still vibrating with energy. Having such a powerful orgasm with Tucker watching was thrilling, but she knew it was wrong. She gathered her wits and thanked the girls.\n\n\"It's getting late,\" she said. \"I was supposed to be somewhere half-an-hour ago.\"\n\n\"Oh, okay Marsha,\" Kelsey said. \"This was fun. Maybe we can do it again sometime?\"\n\n\"I'd like that,\" Marsha said. She kissed both the girls and got up off the bed. She stood proud, shoulders back, glancing at Tucker as she walked back to the dressing room, her lovely tits swaying in the dimming light.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"You got it sweetheart,\" Tucker said on the phone. \"You've been nominated for Most Promising Newcummer.\"\n\n\"Really? Oh my God!\" Kelsey said.\n\n\"You up for a trip to Vegas for the awards ceremony?\"\n\n\"Yes!\" Kelsey said. \"Oh my God, this is exciting! I can't wait to tell my mom!\"\n\n\"Ha!\" Tucker laughed. \"Yeah, she'll love it won't she. I want you to have a good time, so you can bring a guest with you, all right? All expenses paid.\"\n\n\"Oh. Yeah, that's...Wow, really? That's so nice of you Tucker! Maybe...Marsha? She could do my hair and makeup.\"\n\n\"Oh. Yeah, but, wouldn't you rather have a friend go with you?\" Tucker said. \"I'll tell you what, we'll bring Marsha to fix you up nice, and you bring along a friend too, okay?\"\n\n\"Okay!\" Kelsey said. \n\nBy the time she hung up the phone she was already conjuring up all the 'Marsha and Tucker in Vegas' possibilities, but she kept all that to herself in the coming days. Raymond immediately came to mind as her companion. She knew it would blow his mind and they'd have lots of fun together. He nervously accepted the invitation.\n\n\u2014\n\nLas Vegas. A crystalline desert night, lit with a million colored lights. Kelsey stepped out of a cab and looked around. \n\n\"Holy shit!\" she said.\n\n\"Crap!\" Raymond said, with a look of wonder on his face.\n\n\"So this is Vegas,\" Marsha said, looking at the explosion of neon. \n\n\"They used to call it Sin City,\" Tucker said, joining the others after paying the cab driver.\n\n\"That's Cinnamon's nickname, so I guess I'm in the right place,\" Kelsey said.\n\nRaymond laughed nervously. His clothing choices had improved some since Kelsey had introduced him to the world of girls, but he was still unmistakably a computer geek, and his tall gangly body and old-fashioned glasses looked a bit out of place amongst the neon lights of Vegas.\n\n\"Sin,\" he chuckled.\n\n\"That's right Ray,\" Kelsey smirked. \"More sin than you've ever dreamt of.\"\n\nMarsha glanced at Tucker. She looked uncomfortable, so she changed the subject.\n\n\"So Raymond,\" Marsha said, \"you haven't mentioned Kelsey's hair.\"\n\n\"Oh. Yeah. I mean it's...\" Raymond said. \"Did you do it?\"\n\n\"Yeah. Tucker wasn't happy about it,\" Marsha said.\n\n\"I never said that,\" Tucker said. \"Now that I'm used to it it's kinda wicked hot.\"\n\n\"Why thank you boss!\" Kelsey smiled. She ran her hand behind her neck and let the wavy red tresses flow through her fingers. \"Do you like it Raymond?\"\n\n\"I...love it,\" he said shyly, blushing bright red.\n\n\"Want me to rub it all over you later?\" Kelsey said. There was plenty of mischief in her eyes. The haircut still felt new to her when she ran her fingers through it. Marsha had only lopped off about a foot of length, but it took it from below her waist to halfway up her back; from wild redheaded cave woman to wildly sexy college girl. It curled a little more than it used to, and Tucker was right \u2014 it looked wicked hot. Marsha had only cut it two days before, and he was anxious to shoot some scenes with the new look.\n\n\u2014\n\nThe casino hotel where the awards were held was buzzing with activity. After an amazing dinner and some time in the casino Kelsey was ready to wind down.\n\n\"All that traveling really took it out of me, and this noise is wearing me out,\" Kelsey said. \"Can we get room service snacks and have a drink where it's quiet?\"\n\n\"Sure sweetheart,\" Tucker said. \"This is your weekend, you call the shots. You two wanna be alone?\"\n\n\"No, let's all have a drink,\" she said, holding tight to Raymond's arm.\n\n\"I've had plenty,\" Marsha said. \"You guys go.\"\n\n\"Party pooper!\" Kelsey said. \"Tucker says I call the shots.\"\n\n\"Just one drink!\" Marsha said firmly.\n\nMarsha was well aware of what might happen in Kelsey's room. She'd tried hard to get her husband to join her for the trip, but his lack of interest was just one more chink in the armor of what Marsha was coming to realize was a failing marriage. Strong suspicions about one of his female work partners had bubbled to the surface in recent weeks, and the way he'd acted about the trip was telling. Marsha could tell he was happy to have her go without him. So she did. \n\n\"Wow! Tucker, you went all out on these rooms!\" Marsha said when they walked into Kelsey and Raymond's suite. \"My God, look at that bed!\"\n\nIt was a massive thing, nearly round and placed in a bowed-out section of french doors. With them all open as they were on that warm night it was as if the big bed was out on the balcony.\n\n\"I guess there's no shy people in Vegas, huh?\" she said.\n\n\"Sin City,\" Raymond chuckled.\n\n\"Why Ray!\" Marsha smiled. \"Are you a sinner?\"\n\nRaymond swallowed hard and his smile faded. He was in way over his head.\n\n\"Raymond and I have been friends since we were four,\" Kelsey said. \"He was always kinda shy around girls, but we got that straightened out last summer, right Ray?\"\n\n\"I'm...gettin' there,\" Raymond said.\n\n\"Gettin' where?\" Tucker asked. He'd been on the phone ordering chips and dip, a sandwich platter and three bottles of Champagne.\n\n\"Kelsey was just telling us about Ray's fascinating summer last year,\" Marsha said.\n\n\"Oh, cool,\" Tucker said. \"What'd you guys do?\"\n\n\"Orgies at my friend Brie's pool,\" Kelsey said.\n\n\"Oh my God!\" Marsha said. \"Ray! You did have a summer, didn't you?\"\n\n\"Yeah,\" he said shyly. His smile was back, and this time he couldn't get rid of it.\n\n\"We taught him all kinds of stuff. It was so fun. One time we had sixteen people.\"\n\n\"Ohhh myyyy Godddd!\" Marsha said quietly, trying to imagine what that must have been like. \"Is that what eighteen-year-olds do these days?\" she asked, sounding astonished.\n\n\"You should come visit next summer Marsha,\" Kelsey said. \"Our friends would love you, right Ray?\"\n\n\"Oh. Yeah,\" Raymond said, glancing at Marsha nervously. Kelsey giggled.\n\n\"So Kel, I saw you talkin' to some producers downstairs,\" Tucker said. \"I'm assuming they're all tryin' to steal you away from me.\"\n\n\"Oh, you saw? Yeah, I don't know how serious they are.\"\n\n\"Oh, they're serious,\" Tucker said.\n\n\"Two of them offered to double my salary. Said they'd put me with their best men right away. Don't worry though, I told them about school and stuff. And I wouldn't leave you anyway. I love you guys. Mom and Dad love you. I think you're stuck with me.\"\n\n\"Thanks sweetheart. That's good to hear,\" Tucker said. \"And the Mom and Dad thing still makes me laugh,\" he chuckled. \"That's a first for sure.\"\n\n\"You mean you're not a beacon of hope to parents everywhere?\" Marsha laughed.",
        "The room service was delivered and the Champagne flowed. Marsha's \"one drink\" declaration was forgotten. The conversation was free-flowing \u2014 it always is when Kelsey's involved \u2014 and Raymond slowly loosened up, finally feeling comfortable with Tucker and Marsha. Three bottles of Champagne turned into four, and then five. The gang was feeling no pain.\n\n\"Marsh, how can you stand working with all those beautiful naked men without...you know?\" Kelsey asked. \"I wouldn't be able to keep my hands off 'em.\"\n\n\"I held out as long as I could,\" Marsha said, looking coy.\n\n\"What do you mean!\" Kelsey gasped. \"Did I miss something good?\"\n\n\"Let's just say that day with you and Brie at the studio wasn't my first time with girls,\" Marsha said. She gave Tucker a quick glance. \n\n\"Oh. Yeah, I could kinda tell,\" Kelsey said.\n\n\"And it might have been with the cameras rolling...and two of the guys might have been there,\" Marsha blurted out. Her eyes were big, like she'd just told a secret she shouldn't have told.\n\n\"Oh my God!\" Kelsey said, her own eyes big with surprise. \"Who was it? Were you there?\" she asked, turning to Tucker.\n\n\"I was, but I'm not tellin',\" he said. \"That's Marsha's story to tell, if she wants to.\"\n\n\"You want me to tell all of it?\" Marsha asked Tucker.\n\n\"Sure. We're among friends. You guys can keep this under your hat, right?\"\n\nKelsey and Raymond both agreed, and were treated to Marsha's champagne lubricated story about that sizzling day at the studio with Kat and Lori from the bar, and Dave and Jamar. Once Marsha got going with the story it was like a floodgate was opened and she spared no details.\n\n\"God it feels good to tell someone!\" she said. \"It's one of the biggest things that's ever happened to me and I haven't told a soul up 'till now.\"\n\n\"Wow! That's so hot!\" Kelsey said. \"And Tucker! You naughty boy! If I was old enough to go to bars I'd go give Kat a high-five! She sounds hot!\"\n\n\"Oh, she's that,\" Tucker said. \"You know, you can go see bands there, as long as you don't drink. I'll take you sometime.\"\n\n\"Cool!\" Kelsey said, suddenly sounding like a normal teenager. \"So Marsh...Dave and Jamar! I haven't had both of them at once yet. I can't even! Sounds like you killed it.\"\n\n\"Ha!\" Marsha laughed. \"If that means I lost my mind then yeah, I killed it!\"\n\n\"Oh she killed it all right,\" Tucker said with a smile. \"I missed a lot of it in person, but I edited the footage. I told her the next day I'd add her to the talent pool, but she turned me down.\"\n\nMarsha suddenly looked shy. \n\n\"Damn girl!\" Kelsey said. \"You look so cute! I wanna lick your pussy right now.\"\n\nMarsha downed her glass of champagne in one gulp. \"What are you waitin' for?\" she said, her eyes twinkling at Kelsey as her bluejean clad legs spread a little wider. She was thoroughly intoxicated, and thoroughly excited.\n\n\"Fuck!\" Kelsey said quietly. \"Is she hot, or is it just me?\" she asked no one in particular.\n\nTucker and Raymond sat quietly, both of them eager to see what would happen next. Kelsey got up off her chair, knelt in front of Marsha, pulled her jeans down to her ankles and started gently gnawing at her damp panties. Marsha leaned her head back and closed her eyes.\n\n\"You shaved! I like it!\" Kelsey said. She had the panties pulled aside and her tongue lapped up through the fleshy wetness. \"Fuck you taste good...\" she sighed.\n\nMarsha's eyes opened. The white ceiling was a swirling blur. Her hands went to the long red hair on Kelsey's head, pressing the eager youngster's mouth hard against her clit, and she moaned. It was a long, deep, open-mouthed moan that sent the men's blood pressure soaring.\n\nMarsha knew she'd crossed over the line. The crazy-train was barreling toward a full blown orgy, with the man she'd long been attracted to and a boy she found oddly sexy. She was starting to realize that when Kelsey was involved she had very little desire to say no.\n\nTucker seemed to be in the same boat. There was no doubt in his mind that Marsha was hands-off. She was married, a fabulous employee that he didn't want to lose, and a sweet woman he didn't want to confuse. Kelsey, too, was hands-off. He'd always given his employees that space, out of professionalism and respect. But damn, Kelsey just had a magic about her. A care-free, sex is nothin' but fun attitude that was contagious. Marsha had already been infected on that warm, star-filled Las Vegas night, and Tucker was breathing in the germ. \n\nKelsey's mouth was relentless. Her soft lips and warm tongue drove Marsha right over the edge. Tucker could smell her steaming hot pussy when she came, her head thrown back, mouth open wide, a soft cry spilling out into the quiet room.\n\n\"God I love the way you cum,\" Kelsey said quietly. \"You're super wet tonight.\"\n\nMarsha was mumbling quietly, her head still spinning. She pulled Kelsey up to her and gave the sexy girl a sloppy kiss.\n\n\"I want all three of you to make me cum,\" Kelsey announced. She smiled at Tucker. \"I get to call the shots, right?\"\n\n\"It's your weekend honey,\" Tucker said.\n\nKelsey stood up and stripped while everyone watched. Marsha was still limp in the chair, her legs still spread, her wet pussy still peaking out from the panties Kelsey had pulled askew. The sight of the young sprite shedding her clothes so casually in front of everyone took her breath away \u2014 what little breath she had left anyway. Tucker and Raymond were speechless too. They all watched as Kelsey strode across the room to the open french doors. Out on the balcony her skin seemed to glow as she took in the sight of the city lights. She turned and climbed onto the big round bed like a cat, on all fours, looking at her mesmerized companions.\n\n\"Did you guys drink too much? Come on! It's fun time!\"\n\nMarsha pushed the jeans off her ankles, stood and took Tucker's hand.\n\n\"Come on Raymond. Show me that nice body of yours,\" she said to the boy as she led Tucker to the bed. \n\n\"Jeez, you guys are movin' slow tonight,\" Kelsey said as Raymond approached her. \"I guess us girls are gonna have to help you outta your clothes.\"\n\n\"What's that old saying?\" Marsha said as she started to unbutton Tucker's shirt. \"What happens in Vegas stays in Vegas?\"\n\n\"That's the one,\" Tucker said.\n\nTheir heads moved in unison, as if a strong magnetic force drew their lips together. Marsha moaned loudly as the electricity began to flow between them. It was a steady current, the kind that starts fires, and it flowed enough that night to spin the dial off the electric meter.\n\n\"Tucker! Nice cock! You hide that in your pants every day?\" Kelsey said, verbalizing what Marsha was thinking when she flipped the hard thing out of his jeans.\n\nMarsha giggled at her young friend's ease with all things sexual, but that night it all felt pretty easy and free flowing for Marsha too. She mumbled an unintelligible \"Oh God!\" when Tucker's cock slid into her mouth. It felt like heaven on a stick.\n\nTucker's \"Oh God!\" was much more discernible, and Kelsey liked it.\n\n\"Yeah, I like that sound!\" she said as she was about to engulf Raymond's hardness. \"The boss is happy!\"\n\n\"I'm nobody's boss tonight, okay?\" Tucker said, Marsha's nice mouth already making it hard for him to speak.\n\nKelsey answered with a mouthful mumble of her own, and Raymond completed the happy-noise circle with a groan. Even though Kelsey had shown him the ways of the sexual world before he left for school, he hadn't gotten up the nerve to ask a girl out yet, so her mouth felt insanely good after his dry spell. How did I get so lucky, he wondered, as he watched his cock slide into the mouth of one of the porn world's hottest new stars.\n\nPretty soon his attention was diverted to Marsha, newly naked and on her back. Tucker was licking her juicy pussy, making her tits jiggle beautifully on her heaving chest.\n\n\"You like?\" Kelsey said when she saw where Raymond's eyes were. \"She's sexy, isn't she? Oh, you haven't been with an older girl yet, have you?\" she said, looking excited. \"Marsha, you're Ray's first older woman!\"\n\n\"Oh my God!\" Marsha sighed, clearly overwhelmed by everything that was happening. Her chest heaved even more, her big hard nipples pointing at the ceiling.\n\n\"Ha ha!\" Kelsey giggled. \"This is so fun!\"\n\nShe wanted to give Tucker and Marsha a little time by themselves, so she took Raymond's hand and led him to the balcony railing. It was only three steps from the bed. Ray was a little freaked out by the move, standing there in the great wide open, naked with a raging hard-on. Kelsey giggled at him, and looked at the two naked bodies going at it on the bed.\n\n\"Look how beautiful,\" she said, and then she whispered in Raymond's ear... \"They love each other you know.\" She kissed Ray and lowered herself to a squat, her hands sliding down his sides as she went down.\n\nRaymond still wasn't used to seeing Kelsey that way. Naked. Sexual. Being best friends since they were little, with a girl he always thought of as a tomboy, well, it did absolutely nothing to prepare him for the oversexed young woman Kelsey had become. Watching his hard cock slide into her mouth was surprising every time, shocking even, especially there, on a balcony overlooking the Las Vegas strip, with two sexy adults fucking to a quick, noisy orgasm just steps away.\n\n\"Fuck yeah!\" Kelsey said, pulling her mouth off Raymond's slippery cock for a moment. \"Go for it Marsha!\"\n\nMarsha laughed as the orgasm ripped through her. The combination of champagne and Tucker's cock blew her mind, and Kelsey's happy encouragement just took it over the top. Way over the top. It was the happiest, most astonishing orgasm she'd ever had.\n\nKelsey loved the orgasmic laughter. She giggled as she took Raymond's cock in her mouth again. The magic switch flipped in her brain, and she went ravenous on him, much more so than the last time they were together. Kelsey had learned about blowjobs from watching her mom, who was a ravenous cock sucker. It took Kelsey a while to get there, to get comfortable with really going for it, but all her time at the studio and the sex at the dorm parties and with Professor Kyle had turned her from talented novice to seasoned expert. Raymond was astonished at her skill and enthusiasm. Needless to say, it didn't take him long to cum. Kelsey wanted to swallow it, but she had an idea at the last moment \u2014 she pulled off just as Raymond let out a bellowing groan, aimed his cock over the railing, and watched in awe as ribbons of cum drifted down to the busy street below.\n\n\"Oh my God!\" she giggled happily. \"That's so fuckin' awesome!\"\n\n\"You two gonna join us?\" Marsha asked, her voice relaxed and sexy.\n\n\"Raymond just came all over the city,\" Kelsey said proudly.\n\nShe sat him down on the bed next to Marsha. He looked a little shell-shocked, but had a nice champagne-buzz smile on his face.\n\n\"Naughty boy!\" Marsha said, reaching for his soft, youthful skin. \"Wanna cum all over me?\"\n\nThe smile left his face, replaced by surprise. Kelsey giggled again.\n\nMarsha took his half-hard cock in her hand and he responded, hardening up quickly. It was as much her sexy smile as her soft touch that got to him.\n\n\"Any sexy teachers at your school Ray?\" Kelsey asked. \"After Marsha maybe you'll get a thing for older girls.\"\n\n\"And how about you?\" Kelsey said to Tucker as she flopped down on top of him. She gave him a soft kiss. \"Do you like younger girls too?\"\n\nHe rolled them so he was on top, and went wild on her beautiful tits.\n\n\"Ohhh, I guess sooo!\" she purred.\n\n\"You still want all three of us to make you cum?\" Tucker asked, his voice sounding much more like a lover than a boss. His fingers slipped down Kelsey's belly, right into her pussy.\n\n\"Yes!\" she said, her voice a gasping whimper.\n\nMarsha liked the sound of that. Tucker rolled off to give the others room.\n\n\"Why don't you lick her pussy honey,\" Marsha said to Raymond.\n\nHis alcohol buzzed brain didn't object. Kelsey moaned when she felt his hands on her thighs and his tongue between her legs. She loved the special thrill she got from her childhood friend touching her sexually. Marsha kissed Tucker before they joined in. Kelsey pulled Tucker's cock to her mouth, and Marsha played with those beautiful freckled tits.\n\n\"Fuck yeah!\" Kelsey sighed when she took a breather from blowing Tucker, stroking his slippery hardness with her tiny fist.\n\nTucker straddled her head, fucking her mouth gently as the tit play and clit tickling reached their zenith. Kelsey groaned loudly onto the thrusting cock as she came. It was a heady, full-bodied orgasm that took her out of this world.\n\n\"Fuuucckkk!\" she whispered on a long breath after the intensity had passed, her body still writhing gently. The three playmates were mesmerized by her almost magical sensuality. \"Fuck me Tucker,\" she said with a breathy whisper. \"Fuck me the way you've always wanted to.\"\n\nHe picked her little body up and set her down on her feet out on the balcony. Arms up on the wall, back arched, long hair hanging down to the crack of her perfect ass. She went up on her tip-toes so Tucker could enter. They both groaned as his throbbing cock slid in.\n\nMarsha got on her hands and knees on the bed, positioned so she and Raymond could watch the action on the balcony. She smiled an open-mouthed smile as the youngster entered her.\n\n\"Ohhh Rayyy!\" she sighed. \"Fuck me nice and slow baby.\"\n\nRaymond's first 'older woman' experience was way beyond his wildest dreams. Marsha's pussy massaged him beautifully while the two of them watched Tucker lose his mind in Kelsey's young tightness, with the lights of Las Vegas casting them all in it's colorful glow. Sin City was living up to its name.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nKelsey won the next night, and looked surprised but radiant on the big stage as she collected her award. She thanked Tucker and everyone at the studio. \"It's the best place in all the world to work!\" she enthused, sounding like an excited teenager. She thanked Raymond, pointing him out at their table, saying, \"One of you girls should snap him up. He's gonna invent somethin' important someday, and he fucks real nice.\" The big crowd laughed and Raymond blushed redder than red. She also thanked her parents, something that wasn't often done at the porn awards. \"They're swingers, and they didn't know it, but I learned a lot about sexuality from them. I watched when I shouldn't have been watching, and saw first hand how much fun sex can be. This is for you Mom and Dad!\" she said, holding the statuette up high. \n\nLater that night, after they'd all polished off a few more bottles of champagne, Kelsey wanted to celebrate by getting a little wild. Tucker said they could do whatever she wanted. They ended up at a fancy strip club, with a packed house of enthusiastic men. Kelsey had it in her head that she wanted to try stripping, so Tucker found the manager and explained the situation. Ten minutes later the guy was introducing her...\n\n\"I've got a special treat for you all tonight. I'm sure a lot of you know the adult video industry is holding their awards show in town this weekend. Well, we've got a little lady here tonight who just won the award for Most Promising Newcummer, and she wants to take off her clothes for you all!\"\n\nThe place went crazy. It sounded like an out-of-control saloon in the wild west. You couldn't even hear it when he said, \"Cinnamon Sugar everybody!\" Kelsey walked out onto the stage looking a little stunned, but some throbbing music started, she swiveled her hips, the crowd went even more wild and she smiled. Tucker laughed, Marsha looked amazed, and Raymond, well, he just couldn't believe his eyes.\n\nHer sexy party dress was off in no time, her little bra hit the floor, and her dazzling little body danced like it was possessed by Cyd Charisse. It was stunning.\n\n\"I didn't know she could dance!\" Tucker said.\n\n\"Yeah, she used to take a lot of classes and stuff,\" Raymond said.\n\n\"Holy shit!\" Tucker said.\n\nKelsey danced to the corner of the stage closest to Tucker and the gang and called for Marsha.\n\n\"Get up here!\" she yelled, holding out her hand for her.\n\n\"Did you ever dream about being wild?\" Tucker said in Marsha's ear. \"Now's your chance.\"\n\nMarsha did it. She didn't know why. Probably never will. There was just something about Kelsey \u2014 she had an energy about her that was hard to deny. Less than a minute later the two of them were dancing together to the throbbing beat. Kelsey's smile beamed. Marsha's was slightly stunned. When Kelsey lowered the zipper on Marsha's dress the crowd went wild again, and Marsha went a little loopy too. It was one of those out-of-body experiences, where nothing seems real. When her dress was gone Kesley danced up against the front of her, grinding their pussies together through their lacy panties. Kelsey reached around her, unhooked her bra and slipped it off her arms.\n\n\"Fuck! Can you believe this?\" Tucker asked Raymond when Marsha's nice tits went on display. Tucker's eyes never left the stage. Raymond didn't answer. He was speechless.\n\nAfter some more sensuous, body-rubbing dancing, the song ended. Kelsey held Marsha's hand and they took a giggly bow in front of the cheering audience, their big tits wobbling beautifully. When they picked up their clothes Kelsey bent over, pulled her panties down to her knees and wiggled her ass and pussy at the exuberant crowd. It was a fitting encore to a wild weekend.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nRaymond went back to school on Monday, telling all his computer geek friends, \"Yeah, it was pretty fun.\" It was the understatement of the century."
    ],
    "authorname": "riverboy",
    "tags": [
        "group sex",
        "las vegas",
        "married woman",
        "cheating",
        "porn",
        "stripping",
        "nerd",
        "geek",
        "college professor"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/tuckers-studio-ch-15"
}