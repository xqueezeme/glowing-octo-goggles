{
    "title": "Camp of Blessing Ch. 06",
    "pages": [
        "For Sister Beth the morning started like any other. Wake up, say the prayers, change clothes, drink her delicious orange juice and then go for the main breakfast. Well, maybe the day wasn't so normal, after all. The Sister woke up and felt her newly acquired member hard, with raging morning wood.\n\nWhen she knelt to pray she remembered last night, the image of choking on thick sperm, being covered in it. She could still smell it on her hair even after the shower, she could smell it in the room. Her lips would say the prayers, but her mind was thinking of much less holy things. Thinking of the warm feeling of being bathed in the \"thick blessing\" of the mysterious \"angel\". Her gaze would often escape to the black dildo. She could remember it vibrating so tenderly inside her. It now sat next to her on the dresser, as if teasing her, tempting her. Sister Beth just continued to pray, feeling a shiver up her spine.\n\nWhile the nun got dressed it was almost as if her actions were not her own. She was being driven by some force that caused her to touch herself in ways she had never done before. Until a day ago she would have fought those feelings and thoughts, thinking that temptation was of the devil, nothing but a test from God for her purity. But now she accepted it as his will. The episode from yesterday had shown her things she thought to be impossible. Miracles that altered her body, who could do something like that if not God? \n\nShe left the room to go work on her daily chores, the black dildo was inside her, held in by her panties. She walked carefully through the corridors feeling the object vibrate against her clit and, depending on the angle, her newly acquired ball sack. As she walked past the door next to hers, the one that had been locked for years, she considered opening it. She stared in doubt at the door handle for several seconds, conflicting thoughts running through her mind. Her hand even reached for the handle ready to try and open it. But she pulled it back at the last second, \"The Lord rewards those who have faith!\" She repeated in her mind, moving on.\n\nWith a smile on her face, she greeted the other nuns as if everything was the same. It was indeed a bit complicated to hide her hard member in her underwear, but the dark and loose nun outfit made it easier to conceal her nine inches erection. Her male parts paled in comparison to the size of the God-sent angel she drank from the previous night. Nevertheless, it was bigger than many men out there. Not that Sister Beth would know such things.\n\nArriving at her small office, she began inspecting the mail of all the girls. Even if her mind was distracted by the constant stimulation from the dildo inside her, she could still reason enough to do her work. Occasionally she would adjust her member in her underwear and just feel the strong sensation of her touch. Shivering and letting out a sigh of pleasure here and there she went by as she could.\n\nSuddenly, the sister heard a voice in her head, \"This gift bestowed upon you was meant to be used, my child. Do not shy away from it.\" The nun looked around at her empty office, there was no one there but herself. Her heart raced, God was talking to her! It had to be! She replied to it out loud as her body shivered once again from a particularly well-placed vibration from her toy, \"As you wish, m-my lord! I'll follow your guidance!\" In all her years of praying, she had never really heard the voice of God! Her excitement was impossible to describe!\n\nAs the morning continued, sister Beth assisted with classes and helped the other nuns and teachers organize. As she saw all the students going by, she couldn't help but watch them. Never before all these girls had looked so pretty, their skirts and cute outfits, the way they talked and moved. In particular, the sister was mesmerized by one of the students with red hair. She was the newest student in school, Kristanna. And her body was simply out of this world. Even with the biggest size of the uniforms, her voluptuous body filled her clothes, and as she walked around everything jiggled firmly.\n\nSeveral times between classes, sister Beth caught herself staring at the girls. And when Kristanna was among them she stole her gaze completely. The nun resisted the urge to touch the rock hard member under her habit, but it was getting harder by the minute. She once more heard the voice of God in her head, \"They are impure, they need to receive my blessings, as you did\", the nun shook it off, unsure of how she could obey such command.\n\nBefore lunchtime, sister Beth found herself rushing back to her bedroom. She disrobed so fast she practically threw her habit on the floor, keeping only her underwear. As she removed her panties the black dildo wiggled out of her pussy and onto the floor. The nun faced her hard dick in the mirror once more, as if she was afraid of it. Unable to contain herself, she guided her firm hands to her cock with eagerness, wrapping one of them around it. Almost without realizing she stroke herself, slowly at first, but quickly taking a furious rhythm. She pictured all those young students in her mind, prancing around the school. Soon the nun was rocking her hips in the air, thrusting against an invisible partner, squeezing her cock with both hands.\n\nIn less than a minute the nun felt the orgasm, she rolled her eyes, her legs trembled as she fell on her knees. The warm cum shot out of her prick in thick ropes, hitting the floor in front of her. She let the experience and the new feelings flow through her, pleasure washed over her body as she trembled with her eyes closed. The shocks of pleasure went through her, she gasped and moaned in ecstasy from the pleasure she never felt before. When she opened her eyes, she saw the splatters of cum on the wooden floor, a generous load, way beyond what any man could cum in a single orgasm. It was nothing, however, compared to the bath she took from her \"angel\" last night.\n\nAs all of the built-up tension left her mind, the nun felt remorse. She let go of her penis as if she was scared of it and looked at herself in the mirror. Wearing just the headcover of her habit and a bra, her dick dripping cum on the floor. The nun noticed that her skin was much smoother, no more sunspots on her arms, age marks were severely reduced. She caressed her arms and just felt her skin silky and smooth as never before, another welcome change from her angel. She remembered the voice of God telling her to purify those girls and bless them, but she was hesitant to act, \"Is this what you want, my Lord? Is this who I am supposed to be? Will this agony plague me every day until I give in to the needs of the flesh?\"\n\nThere was no answer this time, the nun simply smashed her fist on the ground getting up. She cleaned herself and the floor the best she could before going back to her chores. She was able to go the whole afternoon without having to masturbate once, but after dinner, she felt overwhelmed again. There was nothing in her mind except those girls, their breasts, their swaying hips. She wanted to have them, to do unspeakable things to their young, beautiful bodies. Images of acts she couldn't possibly fathom ran through her mind. She day-dreamed about sex, fucking all these girls, plunging her cock inside them and letting out her load. She knelt on her altar and prayed, trying to push these thoughts away.\n\nOn the other side of the wall and into the other room, Kristanna lied on the bed naked. Her flaccid prick rested on her lower abdomen, covered in partially dried cum. Next to her and sleeping deeply was Aisha, equally drenched in spunk. In her slumber, she caressed her cum filled belly. So distended it made her look nine months pregnant, were not for the fact that occasionally a blob of thick spunk would pour out of her asshole, revealing the true contents of her swelling.\n\nThe two friends had managed to sneak back into the \"Secret Room\" as they now called it, taking with them some cleaning equipment. This way they could have their fun in private and clean up after themselves. As Kristanna looked up at the ceiling, basking in her fully energized state, she heard whispers coming from the wardrobe again, \"Sister Beth is praying! I should listen\" she thought while getting up silently and going to the wardrobe.\n\nBetween traditional prayers and several repetitions, Kristanna would hear the sister's desperation, \"Help me, Lord! Send your angel to give me clarity\" among other requests for guidance.\n\nSitting behind the wall Kristanna couldn't pass on this opportunity to influence the sister further. She didn't want to talk or reveal her gender for fear of being identified, but now she felt like the risk might be worth it. After last night there were no repercussions, and during the day she had felt the hungry gaze of sister Beth moving through all the students. More than once she caught the nun staring at her while she moved about. It seemed like the sister was falling for her spell even without realizing it.\n\nFeeling her heartbeat growing with nervousness, Kristanna knocked on the wall a couple of times. The nun gasped with surprise in her room, \"My angel!\" She responded as she immediately began to detach the cross from the wall, opening the hole into the darkness.\n\n\"Am I an angel now?\" The redhead thought. It seemed like the nun had attributed some holy meaning to her. This could be useful. Kristanna spoke with a whispering voice, so she would be harder to identify, \"What is your affliction, child?\" She asked trying to be as brief as possible, keeping the aura of mystery to feed into the nun's fantasy. Sister Beth began to talk, eagerness and desperation in her voice, \"I am... confused about my role in the Lord's plan. It's the gift he bestowed upon me, the male organ. It gives me desires of the flesh... feelings I never had. I know I was supposed to use it as an instrument of holiness, but I couldn't help myself and give in to my desires, I spilled my seed!\"\n\nKristanna gasped as she heard the words \"male organ\". The nun had grown a dick! It was a much more extreme change compared to what had happened to Aisha. The redhead waited a few seconds, figuring out what to say before she whispered again through the hole, \"The desire you feel is to be expected. Don't deny it.\" The redhead said vaguely, it was the best she could do when improvising. Sister Beth seemed calmer but equally confused as she responded, \"So... are you saying it's ok to indulge in pleasure? I don't understand... isn't temptation always of the devil?\"\n\nThis was a difficult one, she didn't want to get in a theological debate with a nun. Kristanna thought she would distract her until she could come up with something. She stood up and pushed her dick in the hole, the semi-erect shaft almost hit the nun's face as it dangled inside her room. The redhead continued her whispers \"Y-you must use your gift as I do mine, to bring pleasure and bliss. Tell me, what do you feel when you see it?\" The redhead whispered, she could see the nun's aura through the wall, burning up with desire.\n\nSister Beth swallowed nervously, her mouth watered as she stared at the veiny prick throbbing mere inches from her face, exhaling the strong musk of Kristanna's cum. \"I... I want more of it... your blessing. I want to feel what I felt yesterday.\"\n\nThe redhead smiled, she was tempting the nun as planned, \"Your feelings are honest, they can't be wrong. Your feelings are not of the devil.\" She fed into the nun's narrative, trying to help her justify her actions as holy. And it worked, as she felt the sister's fingers softly caressing her cock head. Either that or the nun just couldn't resist what was in front of her as she began lapping up some of the precum on the head and taking it to her lips.\n\nAs Sister Beth got a taste for that precum once more, she let out a moan, her body trembled, she felt her skin crawl. Like a junkie getting her dosage she wrapped both hands around the girth of the dangling cock and began to stroke it, approaching her mouth to the tip. In no time she was making out with Kristanna's cock, french kissing the glans and sucking on the precum that oozed out. Her dick was so hard it hurt, also dripping precum on the floor. But she ignored it, for now, fixated in extracting more nectar from the giant cock in her hands.\n\nKristanna trembled with that delicious touch. She softly pushed her prick into the hole, her cock advanced like a threatening animal. Sister Beth understood the message and responded by pushing her head forward, trying her best to swallow more of the cock. But she had no practice in this, hesitating whenever the cock head hit the back of her throat, unable to swallow much beyond the fat glans, it was simply too big, \"You need to let go, Beth. Surrender to the will of the Lord.\" Kristanna whispered the encouraging words from behind the wall.\n\nThe nun nodded, wrapping her mind around what she was about to do. She took a deep breath, closed her eyes, relaxed her jaw and her entire body. Letting go of self-preservation, having faith in her angel she took the head into her mouth once more. The next hip thrust pushed Kristanna's cock past the nun's throat and down her neck, bulging it with its girth. Sister Beth choked, coughing with the dick in her mouth. Tears began to roll down her cheeks, she did her best to ignore the desire to pull back, controlling her gagging reflexes. The cock moved forward, bent down pushing past her neck and into the nun's chest. Sister Beth imagined she would be feeling terrible pain, but it wasn't half as bad as she thought it would be. Somehow, her body was enduring this inhuman violation. This was another piece of evidence proving it could only be the Lord. Nothing else could protect her and give her body the resilience it needed to endure this deepthroat penetration.\n\nThe wet sounds of choking continued as Kristanna moved her hips back and forth, using the nun's throat. In time sister Beth let go of the dick and grabbed her cock with one hand, her other hand caressing her pussy from behind. She pleasured both her genitals while serving as a vessel for the holy prick down her throat. Knelt in her room, head angled up as the arm-long monster slid in and out of her throat. It was as if she had turned into an instrument of pleasure. The bulge moved down her neck and into her chest, then back up. She stuck her tongue out licking the underside of that massive dick, pushing her head towards the wall. With dedication she managed to almost touch the wall with her lips, engulfing the entire cock down her esophagus.\n\nA few minutes and a lot of choking later, Kristanna grunted as a mind-blowing orgasm came upon her. The massive prick erupted in the nun's throat, thick seed shot straight down her gullet, into her stomach. It filled her belly in mere seconds, then began to make it's way up her throat. With a particularly powerful gush, the cum blocked her breathing tubes and came out her nose as well as the corners of her mouth. Sister Beth could taste the goo-like sperm as it filled every nook and cranny of her body. She rolled her eyes, the delicious nectar and the air deprivation amplified her orgasm tenfold. She grunted in ecstasy, bubbles of cum forming on her nose as she tried to breathe. Her body practically convulsed as she shot her load on the altar in front of her.\n\nIn that blissful situation, sister Beth felt like she was having an out-of-body experience. Her member was getting thicker in her hand, harder to grasp. But she could barely notice the swelling now as her mind could only think of swallowing more cum. Running out of air, the nun had to pull her head back, falling on the floor and coughing out sperm. She attempted to clear her throat so she could breathe, not an easy task given how dense Kristanna's seed was. The redhead's cock still shoot jets of cum in the air, finishing her load all over the nun and the floor. When she sperm finally stopped flowing out the cock remained hard and throbbing. But the redhead thought better not to push her luck and retrieved back into the room.\n\nSeveral minutes later Sister Beth recovered her senses, looking up to see an empty hole on the wall. The angel was gone, but the aftermath of it's \"blessing\" was everywhere. She looked down to her dick to see it had grown, easily reaching eleven inches in length and proportionally thicker. Her scrotum had swollen bigger as well. The nun cleaned some of the thick cum on her face and smiled, \"What my body endured, the bliss I felt. This can only be of the Lord... I need to have more of it, and I will share it with everyone I can!\" The thought brought a huge smile to the nun's face.\n\nIn the other room, Kristanna heard as sister Beth woke up, then proceeded to masturbate. Her moans got louder and more wild over time. Until Kristanna had to leave the room with Aisha she heard the nun going crazy in her bedroom, her stamina seemed to have no end and the extremes she went to please herself seemed to only increase. It was clear that the sister was now addicted to pleasure. It was a matter of time before Kristanna could reveal herself.\n\n---------------------------------\n\nMorning came the next day, classes were boring as usual, and the Camp seemed to be functioning as intended. Kristanna had just left the afternoon prayers after a long day of study and activities. As usual, she didn't pray at all but reflected on what to do next. She planned on observing sister Beth. To try and see how far she had gone, and if it was safe to reveal herself as \"the angel\". After dinner, sister Beth left to her room as usual. As Kristanna tried to follow the nun out of the dining area, she bumped into big breasts. For a moment she even enjoyed their softness, until she realized they were Valery's. \n\nThe bully and her cronies blocked Kristanna's way and cornered her against the wall just outside the food court. Renata on her left, Julie on her right and Valery facing her, \"Hey, long time no see, bimbo.\" Said the blond with a sarcastic smile.\n\nKristanna's blood boiled, but she took a deep breath keeping her cool. The last thing she wanted was to get in a fight and draw attention to herself, \"What do you want? I've done what you asked, haven't I?\"\n\nValery giggled, \"Yes you have. Honestly, I didn't think you would have the guts to go through with it. But you surprised me, and the doctor could barely stand at the examination, you must have done a number on him!\" Her mocking couldn't get through to Kristanna, she didn't regret any of that, even felt proud. The blond girl continued, \"The fact is, I still know your little friend Aisha sneaks out of her room often, even if her roommate is now discredited with the nuns. The guards could still get an \"anonymous tip\", to watch her isle more thoroughly during the night. And you know, catch her sneaking out. I know I wouldn't want her to live with that fear. Would you?\"\n\nKristanna just stared, she knew it was true, but she wanted to see where this was going before speaking up. Valery backed away slightly but continued to speak, \"If you want to prevent this, I need you to do something for me once more\".\n\nThe redhead let out a sigh, anger building up in her voice. \"And what would that be?\"\n\n\"I have an arrangement, with the guard at the gatehouse. I should have received a package a couple of days ago, but I got nothing. The nuns here know I influence the girls, they don't let us out of their sight. But you are no one, you can escape. Sneak out and go to the gatehouse, talk to Jackie, ask about the packages for the blonde. If you don't do it in a week, or if you tell this to anyone, I will make the life of your only friend here hell, starting with her sneaking out. If you rat me to the nuns, my friends here will know and they will make sure she suffers anyway.\"\n\nThere was an almost pleasurable tone in Valery's voice, she wasn't lying. Kristanna tried bluffing as her last resource, \"What tells you she is my friend? Maybe I don't care.\"",
        "Valery just smiled and stared at Kristanna, \"Try me\". She whispered, then walked away with Julie and Renata following.\n\nThe redhead leaned on the wall behind her and cursed under her breath. \"Fucking shit, I need to get this bitch out of my ass!\"\n\nLooking across the central yard Kristanna could see the door to sister Beth's room, \"Well, maybe there is a way\", a wicked grin formed on the girl's lips as she ran towards her bedroom. She grabbed a piece of paper and wrote on it with different handwriting, \"Valery is impure, check her room. Corruption taints this school, it all needs to be cleansed\".\n\nShe planned to place that in the nun's room through the hole in the wall when she wasn't there. Valery had mentioned packages she got, maybe she was hiding things. If she managed to get sister Beth to search her room she might fight something. And if she could use it to blackmail Valery into submission, Kristanna would have a smoking gun to never worry about those girls again. They wouldn't want to get their smuggling business demolished.\n\nThe next day, when she sneaked in Sister Beth's room to place her precum in her orange juice, as usual, she planted the note at the altar. Then she went about her business. During class, she told Aisha not to risk sneaking out to the Secret Room anymore, explaining the situation. She needed to wait until the coast was clear. Kristanna was worried, spending most of the day quiet and wondering if her plan would even work. The nun seemed pretty horny and eager to fuck, but would she go this far? Would she abuse one of the students? Kristanna was giving her a push but it might not be enough.\n\n--------------------------------------------\n\nA couple of hours passed, the girls were now all in class and sister Beth had to deliver the mail as well as do security inspection in the rooms. She placed everything on a little cart, like the ones you see in supermarkets, and left for the dormitories. With all the keys for the rooms in hand, sister Beth opened door by door and went in, picking packages from her cart to deliver at certain rooms. She went into the rooms and looked around searching for any suspicious activity, opened some wardrobes to make sure nothing was being hidden.\n\nAll was fine for the first rooms, but when she reached a particular one, the one where Valery slept, she stopped and pulled a note out of her pocket. Reading what Kristanna had planted there the nun took a deep breath, \"I will not fail you, my angel\" she thought before going in the room and conducting a thorough search. \n\nIt didn't take much to find what she looked for, letters from an unknown sender under all Valery's clothes in a drawer. She guessed it was someone important, a boyfriend, family or something of the sort. But as she read the letters she realized what was going on. It was from a certain \"Doctor\", that was how he was referred to in the letters. It informed the date of the blood test and the particular sentence at the end of one letter that called sister Beth's attention was \"So, everything set with the girl right? Otherwise, our deal is off\".\n\nAs Beth read the other letters it became clear that Valery had been communicating with Doctor Schubert and in exchange for favors from a girl in the institution he had promised to alter the blood test results for all girls.\n\nQuickly sister Beth took the letters with her. This information was shocking, even coming from Valery. She had a clear thought in her mind to simply report this offense to Mother Grace and pursue immediate action! But as she walked out of the room and closed the door the voice of God spoke once again in her head, \"How did these letters get to her? She isn't doing this alone\".\n\nNow she understood what the message from her angel meant, there was corruption going on at the camp. Until she could find out how deep it went she couldn't trust anyone, \"Yes... yes, I see now my Lord! I will find out more about this!\"\n\nDuring the day Kristanna observed the nun as she could. Mostly in between classes, she would occasionally see sister Beth staring at the students as before. It was hard to tell if the nun had acted on her message. As usual, the real activity happened after dinner. So as soon as she finished her meal Kristanna lingered at the food court to watch the nun. Her behavior was normal but her aura showed a red color like Kristanna had never seen before, it was dark, almost purple, indicating an extreme excitement. Yet, Sister Beth seemed to be fully in control and fine on the outside.\n\nKristanna watched as Sister Beth finished her meal and stood up walking towards another table. The redhead's curiosity was now peaked. The table that sister Beth stopped by was the one where Valery sat with her friends. The blonde amazon turned to talk to the nun with her usual, almost disrespectful attitude. Soon Valery's expression turned serious and the girl widened her eyes as Sister Beth bent forward and spoke something in the girl's ear. The blonde excused herself and stood up, leaving the hall with the nun, \"It worked!\" Kristanna thought as she witnessed the scene. She had to follow them. \n\nAt the school corridors, she saw as sister Beth escorted Valery into her chambers. The redhead wasted no time and walked to the Secret Room right beside Beth's. Now the door was permanently unlocked, but only she and Aisha had that information. No one even tried to open that door anyway. Kristanna took off her shoes and opened the wardrobe, sitting behind the same spot on the wall from the previous evening. She placed her ear on the wall, listening to the Sister's conversation.\n\nShe had arrived in time to pick up pretty much the entire exchange, hearing Valery speak with a certain tension on her voice, \"... this doesn't prove anything!\"\n\n\"Oh, young lady, quite on the contrary!\" Replied Beth with her usual sweet and calm voice, \"These letters prove you conspired to change the results on the recent blood exam, if Mother Grace were to lay eyes upon these letters you would be in serious trouble, and so would that corrupt doctor. This is almost criminal. There is mention of a girl here, only God knows what kind of forbidden things you did to that man to get him to cooperate! And how long has this been going on for?\"\n\nValery's tone changed very quickly to a voice that almost begged for mercy. She could be quite manipulative, \"Alright! Alright... but please sister Beth! I promise we will never do something like this again! I'll give you something, I'll be nice! My parents would kill me if they knew of this, they will put me in an actual convent! You can't tell Mother Grace!\"\n\nThere was silence for a few seconds, Valery was pretty much in tears from the sound of her voice. Kristanna had a wicked smirk on her face hearing the girl beg on the other side, the annoying blonde was probably on her knees now and the thought even aroused Kristanna a bit. Sister Beth finally replied, \"Well... there is something that would make me overlook this, at least for now. I believe it would cleanse you from all of those... evil thoughts you have, and help you become a better girl!\"\n\nThere was enthusiasm on Sister Beth's voice, she believed what she was saying. Kristanna listened carefully from the other side of the wall as Valery replied, \"What is it? I'll do it, sister! Please just don't tell anyone about the letters!\"\n\nTo Valery, it sounded like Sister Beth was going to give her chores to do. She was admittedly afraid of what was to come, but certainly, it couldn't be this bad. Sister Beth, however, remained silent. She just walked to the door of the bedroom and locked it. She seemed hesitant and nervous. Valery kept trying to persuade the nun, \"I promise Sister Beth. I'll clean the rooms, I'll help with the mail, I'll iron all your clothes!\"\n\n\"Oh dear, I won't have you do any of that. I am talking about spiritual cleansing, surrendering to the will of God!\"\n\n\"Hmm... ok, well. What do you want me to do then?\"\n\nValery stood in the middle of the room. The nun gently grabbed her shoulders, making sure she had her back to the altar, \"Stay here, and close your eyes. Pray to the Lord while I prepare things.\n\nKristanna realized where this could go already, the nun was going to go through with it! The redhead couldn't help but wonder if her cum had caused this personality shift in sister Beth or if maybe it just helped reveal something that was already there. She had no answers now, either way, she could hear as sister Beth cleared up the altar right under the cross on the wall and moved it aside. Kristanna swiftly removed her skirt and the pantyhose undressing fully, feeling the relief as she allowed her member and heavy ball sack to hang free. \n\nThe nun continued to instruct Valery. Sister Beth didn't seem to care about how uncomfortable the girl was, she simply watched to make sure she wasn't looking. The young student was oblivious to the fact that under those black robes the nun had a raging boner, barely contained by her underpants. Pre-cum leaked from her newly acquired member, drenching the cloth. It was as if her cock was trying to break free.\n\nSister Beth continued, raising her hands in a praying stance, closing her eyes and facing the roof, \"Lord, please bless us tonight once again with one of your angels! Help me cleanse this sinner from all evil, through flesh she will repent and take on a righteous path as I have!\" The nun walked to the cross behind Valery and pulled it from the wall. Without failure and as expected Kristanna's huge, semi-erect member flopped out of it. A string of sticky precum already dripping from the head towards the floor. Valery was unaware of what was happening, confused and clueless she just stayed in place as ordered.\n\nIn the other room, Kristanna's heart raced as she pushed her hips against the wall getting her cock through, grabbing the handles above her head as she had done last night and preparing herself. She felt her member fill up with blood, pulsating and growing harder, leaking pre-cum with her arousal. Her breasts pressed against the cold wall. Sister Beth grabbed a chalice on her dresser and moved behind Valery, in between her and the pulsing meat pole that surged from the wall, \"Do not look back child, close your eyes, remember I have the letters, do as I say.\"\n\n\"Y-yes sister...\" Valery complied closing her eyes.\n\nThe nun bent forward and positioned the chalice under Kristanna's cock, caressing the member with her hand, running the fingers over the veins. As she did the redhead bit her lower lip in the other room letting out the air in her lungs. Quickly her cock raised to full size at her twenty-inches, throbbing every second with her heartbeat, oozing thick pre-cum all over the chalice. Sister Beth ran her hand under the member, pressing the urethra and making sure more fluids leaked in the chalice until it was filled to half.\n\nThe nun stood in front of Valery, holding the chalice in front of her face with both hands as if it was a sacred object, \"Drink this, my child. It will purify your body.\"\n\n\"What... what is this sister Beth?\" Valery opened her eyes and grabbed the chalice.\n\n\"Just holy water, my dear. Drink it all at once.\" Valery hesitated, but finally complied and chugged the contents of the chalice. It didn't go down as smoothly as she expected though. The liquid was not water, it was much thicker and had a strong, salty taste as it filled her mouth. It was too late to spit it out though, so she swallowed it, coughing a bit. She felt some of it spill on her lips and gooey strings connected her face to the edge of the chalice.\n\nValery rubbed her hand over her mouth with a face of disgust, \"Oh my God! What the fuck did you just give me!\"\n\n\"Shhh... quiet honey, just feel it, feel it cleanse you inside!\" Valery felt it already, her body heating up, in a matter of seconds she was as horny as she had never been before, even slightly dizzy from the sudden surge of pleasure. Was it some kind of drug? The student did not know, but she could feel her moisture growing, legs shaking as they grew weaker. Her face went warm and red with desire. \"Ah...ah... s-sister, what is happening t-to me!\"\n\n\"Your body and mind are being cleansed my child, so you can receive the holy blessings from the angel of the Lord!\"\n\n\"No... that's not what's happening at all... I don't know...\"\n\n\"It's normal to question yourself my dear, I did the same. But have Faith! I assure you this is the holy spirit in your body! Feel it's bliss!\"\n\nSister Beth began to undress Valery gently. As she pulled her blouse the girl tried to protest, but the rough cloth against her nipples tickled her too much, made her arms weak. She wanted to get away, but the more the nun touched her, the more her body betrayed her. Sister Beth pushed the naked Valery back a bit and forced her towards Kristanna's cock until it was between the girl's legs but still not touching her.\n\nAll the nun had to do was to grab the thick member and point it up. As it touched Valery's ass the girl gasped, opening her eyes wide. Kristanna enjoyed the feeling of the warm skin against her cock head. Giving the blonde no time to think, sister Beth pushed her back. The thick member rubbed against Valery's butt crack aimlessly but after some ups and downs ended up pressing against her asshole. As the student moved backward the thick head forced its way inside her.\n\nValery began to scream but her mouth was quickly covered by the nun as she spread the girl's legs with her feet. The blonde lost her balance and wrapped her arms around sister Beth's neck in a reflex, placing her feet further apart to try and balance herself. She screamed in fear and pain as her asshole was stretched open by Kristanna's obscene girth. Valery was an anal virgin and Kristanna was as thick as a soda bottle stretching her open beyond belief. The nun still muffled the girl's cries with her hand. \"Shhh, my dear! Contain yourself! Resist and spread your legs, the pain will go away soon, have faith!\"\n\nThere was excitement in the nun's voice as she impaled Valery in Kristanna's dick, pushing until it couldn't go much deeper anymore. But the cock was barely half-way in at this point. The redhead in the other room wanted to thrust forward, but her heavy ball sack was already hitting against the wall, so was her pelvis. Her abdomen spasmed a bit forcing her to thrust forward involuntarily, banging against the wall with loud thumping noises. All she could do now was wait until Sister Beth pushed the student further against her dick.\n\n\"You hear that, my dear? Our angel is eager to cleanse you!\" sister Beth said with enthusiasm as she heard the thumping on the wall. Valery rolled her eyes and moaned against the nun's body, protesting, but feeling too weak and horny to put up a fight. She could barely move her legs, the rush of conflicting emotions stunning her. Her knees wobbled, she felt her cunt juices sliding down her inner thighs as that massive member made its way in. The pain began to fade, turning into a pleasant feeling. Valery had no clue how she was handling so much cock this easily. And on top of it, she was starting to enjoy it.\n\nFor a couple of minutes, sister Beth just covered Valery's mouth and held her in place, making sure she wouldn't escape. She noticed Valery's protests calming down and her arms resting, her screams were turning into moans. Her eyelids falling half down as her muscles relaxed. Sister Beth let go of Valery's mouth, slowly releasing her grasp. Valery still had her arms around the nun's neck, but her hips moved on their own, pushing back against the massive cock. \n\nKristanna thick monster spread Valery's ass cheeks wide, it carved its path in that tight asshole. As it made it's way deeper, it pushed Valery's hipbones apart with its girth. Kristanna's precum was at full effect now, turning the blonde's head to only feel bliss and delight. Valery, like most of the girls in this institution, had not had any real sex in ages, making her particularly vulnerable to the aphrodisiac effects of Kristanna's cum. With just a push Valery was falling deep into a trance of desire.\n\nSister Beth continued with her instructions, \"Good girl! Now, spread your legs a bit more and bend forward, push back on your own, I'll help!\" Valery moaned and obeyed, leaning against sister Beth and taking small steps back. She slowly backed up against the wall and caused inch by inch of Kristanna's cock to slide inside her asshole. Sister Beth made sure the girl pushed until her ass touched the wall, engulfing Kristanna's cock for her satisfaction.\n\nValery let out a long moan feeling her legs tremble. Her belly bulged with the outline of the cock, her heavy tits hanging in front of her, jiggling. There was no doubt that Valery's tits were her most sexy feature, the DD cups trembled and swayed beautifully as the girl felt her insides being stirred and ravaged by the \"holy\" cock.\n\nPulling back for a minute, Sister Beth noticed that Valery now was motioning to impale herself on Kristanna's cock, she no longer needed incentive. The nun clasped her hands together speaking out loud in a gesture of prayer, \"Oh, Angel of the Lord! Is it your will to cleanse this sinner? Did I act righteously?\" Kristanna cleared her throat on the other side of the room realizing she needed to reply something, with her whisper voice she replied, \"Yes\".\n\nImmediately sister Beth smiled in pure happiness as her question was answered. The nun could not contain her excitement, she paced left and right watching Valery moaning and pushing her ass against the wall, spreading her ass cheeks with both hands. The nun eventually stopped pacing, paying attention to the scene in front of her. She was almost hypnotized by Valery's breasts clapping against each other as she moved. The room was smelling of sex, warm with the perfume of sweaty bodies. Almost without realizing, sister Beth began to disrobe until she was completely naked.\n\nThe nun walked to the dresser and grabbed the black dildo inside the drawer walking towards Valery. Her erection was still raging, dripping precum on the floor and swinging side to side as she walked. When Beth approached Valery the blond girl turned her attention forward to see the cock throbbing in front of her face. She gasped in surprise, \"S-Sister Beth! You have a dick!\"\n\nIn the other room Kristanna smiled, the nun was joining the action. Worrying about herself the redhead kept smashing her pelvis on the wall, feeling her ball sack swing back and forth hitting the cold wood. Sister Beth placed the black dildo against her pussy from behind and turned the vibration on, slowly pushing it in her already drenched cunt. She moaned enjoying the feeling, then took a few steps forward and pressed herself against Valery, lifting her torso and pressing the girl's back against the wall. The blonde was now trapped in between Kristanna's dick and Sister Beth. The change in angle caused Kristanna's cock to poke outwards like an alien was trying to break out of Valery's belly. She moaned in pleasure and fear as she saw her distended abdomen.\n\nWithout warning the nun pushed her cock inside Valery's pussy at once, letting out a loud moan as her male virginity was now lost. She looked inside the girl's eyes, savoring her expression of fear and uncertainty mixed with bliss, \"I can see the spark of God in your eyes, my child! It... it's beautiful!\" She whispered as she began thrusting against Valery's cunt. Her hips smashed with power but rather clumsily, the nun was still new to all of this, but she was a quick learner.\n\nKristanna took a more stable stance, spreading her legs apart and feeling her fat ass cheeks push against each other. She adjusted her tits against the wall so her nipples rubbed nicely against the rough wood, getting caressed and stimulated. She could feel her pussy juices sliding down her legs as well as the back of her ball sack.",
        "Grabbing the handles firmly, the redhead began to pull her hips back and then shove forward with vengeance, knowing that Valery was now held against the wall by the nun. She rolled her eyes and moaned loudly, feeling that delicious asshole squeeze her massive dick. Kristanna looked down and got a glimpse of the pink flesh from Valery's asshole, clenching around her cock like a second skin. It was almost pulled back inside the hole by the massive cock, only to be shoved back inside with the next thrust. Her balls churned and grew heavier by the second underneath her.\n\nValery felt her asshole practically prolapsing when the thick monster pulled back. The void it left inside her body lasted a second or less, then it was filled once again as that monster claimed it's room in her guts. Valery's belly bulged out so obscenely that Sister Beth could feel it poking her belly. The nun held Valery up, pressing her small breasts against Valery's generous jugs and shoving her cock inside the girl's pussy. \n\nValery was used to being the dominant one in all her sexual relationships. But now she felt like a mere toy, rammed against a wall, violated in every possible way. She moaned in pure ecstasy and bliss, feeling her insides completely reshaped. It was as if she wasn't herself anymore, something inside her had been broken and couldn't be fixed, not until she was satisfied and the fire inside her was put out.\n\nSister Beth moaned pushing herself against Valery. Her body was smaller than the tall amazon, she was an older woman. But somehow she had it in herself to overpower the student and hold her up while ravaging her cunt. Her hips moved in a snake-like motion as she fucked that pussy as eagerly as a virgin teenager. Nothing but pleasure in her mind. Who she was fucking, how she felt, none of it mattered. All she needed was a wet, warm pussy around her cock. Sister Beth couldn't believe she went all her life without ever feeling this sensation. She imagined this bliss was what it felt like to spend eternity next to the Lord, paradise should be something like this, \"God will not regret giving me this gift! I promise!\" She thought while ravaging Valery's pussy without mercy, increasing the speed at every thrust.\n\nThe room turned into a symphony of moans mixed with the sounds of bodies hitting each other and the wall. The blonde girl's moans turned into desperate cries of pleasured and sheer confusion as she experienced the most intense orgasm of her life. Hugging the nun in front of her, Valery just felt every muscle in her body spasm. Both her cunt and asshole began milking the members inside her. The involuntary contractions raged through her body. The massaging felt even better than before, stretching her holes more, which triggered yet another climax. Valery went down into a spiral of multiple orgasms that removed her sense of time and her surroundings. Minutes went by and she couldn't stop cumming. Her tongue stuck out of her mouth and her eyes rolled to the back of her head. She laughed, cried, moaned, and gurgled on her saliva while she drooled like a crazed animal, used as a fuck doll.\n\nKristanna drained all the immense energy emanating from both Valery and sister Beth. Having her cock massaged by an asshole like that eventually drove Kristanna to the edge. She grabbed the handles above her head and with a final thrust her cock erupted inside Valery's spasming asshole. Immediately her football-sized testicles pushed up against her crotch and pumped their load of thick white cream inside Valery's guts. The massive cock grew even thicker as cum traveled through it and shot out like a broken hydrant. Valery's belly rapidly swelled with cum. The redhead could hear the \"rain\" sounds of her cunt juices washing the floor behind her in unison with her cock. To complete the mess, her breasts lactated all over the wall in front of her, this time much more powerfully than the last. The milk slid down the wall to the floor.\n\nSurprised by the unexpected hard contractions around her inexperienced cock, sister Beth could not hold back any longer. The nun continued to hump against the blonde girl moaning and rolling her eyes as she shot her load inside her cunt. Beth pressed Valery hard against the wall, feeling the girl's belly bulge and swell against her as Kristanna filled it up. The nun's load was big enough that it overflew out of Valery's cunt lips and dripped onto the floor.\n\nValery's legs went limp, she would have collapsed to the floor if not for the monster impaling her from behind and the horny nun pushing her against the wall. All three of them panted and moaned, drowning in ecstasy. But they were far from done, as evidenced by the fact that sister Beth refused to stop thrusting and started to pick up the pace once more, her cock still hard.\n\nThe same was true for Kristanna as she humped and smashed her pelvis against the wall even harder after cumming. With each invasion of her impaling cock, some of the cum inside Valery's ass would spill out, expelled from her bloated insides by the invading flesh. The two dicks kept taking turns inside the girl's holes, pounding like tireless machines. Valery felt as if two animals were fighting for room inside her, stirring up all the cum in her belly which now looked like it was nine months pregnant with jizz.\n\nFor the next hour, both Kristanna and Sister Beth came inside Valery multiple times. The redhead could feed on both, and as she did her stamina was renewed, enabling her next orgasm to be as powerful as the last. With her brain completely taken by raw pleasure, sister Beth grabbed Valery's ass cheeks and pulled her off of Kristanna's cock. Immediately a torrent of thick spunk squirted out of the blonde's gaping asshole, drenching the wall. Beth switched places with the blond, she flexed her knees and backed up against the redhead's cock, swallowing it with her cunt.\n\nThe nun couldn't contain her excitement when she felt the massive shaft invading her pussy, breaking through her cervix and entering her womb. She laughed maniacally when the massive bulge surged out of her abdomen with the shape of Kristanna's cock, caressing it like a pet before it began moving in and out with Kristanna's eager thrusts. Valery was released by the nun, she had no strength left in her legs so she simply fell on her knees, bloated with cum and half awake. Sister Beth didn't give her a break, though. She grabbed the blonde's head and forced her to suck on her dick while she leaned on the wall and took the full impact of Kristanna's thrusts in her womb.\n\nWhen sister Beth was finally driven to an orgasm she held Valery's head with both hands, forcing the girl's nose against her crotch and forcing her cock entirely down her throat. The load exploded inside, adding to Valery's already cum-filled belly. The blonde could barely react, trying to breathe and taking the cock in her mouth. Beth's torso began to swell with Kristanna's next torrent of cum. The nun rolled her eyes and let out a scream, the air in her lungs completely gone. She was a mess of sweat, drool and cum, trembling against the wall as she convulsed.\n\nThe evening only ended when both Beth and Valery were exhausted on the floor. They worshiped Kristanna's cum-dripping cock, kneeling in front of it and rubbing their faces against the sides and the head. Both women licked all the fluids coating the veiny skin. As the redhead came one last time she showered both of them in her cum from head to toe. Sister Beth's room had most of its floor coated in white goo. Both the nun and Valery sported massively swollen abdomens, flooded with cum and leaking it from every hole.\n\nKristanna slowly came to her senses, but only because she realized that sister Beth and Valery were no longer tending to her cock. She pulled her cock back and looked into the hole to see that both had passed out while making out with each other on the floor. Kristanna stumbling out of the wardrobe, the floor underneath her was covered in a pool of fluids, a mix of her cunt juices and milk. She dressed as she could and woke up Aisha, who was so deep into sleep she missed all of the fun. Both eventually left going back to their rooms."
    ],
    "authorname": "Kristanna",
    "tags": [
        "excessive cum",
        "cum inflation",
        "squirting",
        "lactation",
        "futa on female",
        "glory hole",
        "corruption",
        "double penetration",
        "futa on futa",
        "cum bath"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/camp-of-blessing-ch-06"
}