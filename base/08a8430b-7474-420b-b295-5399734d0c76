{
    "title": "Quaranteam Ch. 20",
    "pages": [
        "Chapter 20\n\nAfter Niko helped Andy get Piper off of him, they scrounged around the room before they simply gave up and put Andy's jacket on her. There wasn't any clothing in the room, not even a bedsheet. Just a bucket in the corner, filled with excrement. She wasn't difficult for them to carry, although neither of them had much experience carrying an unconscious person before.\n\nOnce they got her up to the car, Andy regretted that they had brought the roadster. The vehicle did have four seats, but the back seat was very cramped, and they were going to have to lay Piper over people's laps, because he refused to put her in the trunk, even if she was unconscious.\n\nWaiting at the car was Dr. Charlotte Varma and her daughter Asha. \"Thank you for saving us from this, Niko,\" Charlotte said to her, the woman's accent definitely French. She was dressed in a long flowing summer dress, with a jacket thrown on over it, billowy fabric over her womanly figure, her long blonde hair swept back behind her ears, hanging down to the middle of her back. She looked less like a doctor and more like a hippie, but she had a warm smile that put him at ease. \"And you, Mr. Rook.\"\n\n\"Please,\" he said, \"call me Andy.\" He unlocked the car, then popped the trunk to load Charlotte's suitcase into it, followed by Asha's and Piper's, which one of Covington's servants had clearly brought up while Andy was tending to the athlete's needs. \"Let's get out of here, and we can talk on the way over to the house.\"\n\nAs Asha got in the backseat, she bumped fists with Niko. \"Thanks, Neeks,\" Asha said, her accent definitely British, despite her exotic looking features. Her long wavy black hair was drawn back into a ponytail that barely hung past the nape of her neck, the tie high on her head, her skin several shades darker than her mother's. She wore black knee high leather boots, black pantyhose, a black leather skirt that was playfully short and a purple silk shirt that was still tight enough on her that he could the outline of her lacy bra through the material. It was also cut high enough to show some midriff, including a little silver musical note belly piercing. \"Good looking out.\"\n\nThey laid Piper atop of their lap before Niko got into the front passenger's seat and Andy got into the driver's seat. Before, the driveway had been a showroom of deluxe and expensive cars, but now everyone else had already gone home.\n\nThe house's external lights were still on, but it was clear that Covington had already gone to bed, so it was with no fanfare that Andy slowly drove the electric car off the property, heading back towards his place. It was approaching one AM and as Andy felt the cool breeze blowing across his shaved head, he definitely regretted bringing the Roadster.\n\n\"So this is your old man, Neeks?\" Asha asked. \"And he's gonna be my old man too? A'ight, I can get wit' tha'.\" Asha's accent was mostly British, but Andy could hear hints of her mother's French accent, as well as what he imagined was probably hints of her late father's Indian accent. Niko had told him that the Varmas had only moved to the US a year ago from London, and that Charlotte's late husband had died in one of the first fatalities to the virus.\n\n\"You'll like Andy, Asha,\" Niko said to her. \"He's the best man I've ever met.\"\n\n\"He's also sitting right here,\" Andy said with a soft laugh.\n\n\"I wanted to talk to you about this, Niko,\" Charlotte said. \"I am very thankful that you did rescue us, but I think it is rather unbecoming for a woman to share her lover with her daughter, don't you?\"\n\nAndy let out a soft sigh of relief, speaking before Niko did. \"Absolutely. If you would rather, Dr. Varma, I could talk to one of my friends and see if they might be a better home for your daughter, so you might avoid that situation.\"\n\n\"Oh. Ah. Oh. Yes, I think you've misunderstood me, Mr. Rook,\" Charlotte said, a hint of embarrassment on her face. \"I think my daughter should definitely stay in *your* company, but *I'm* not attracted to white men. Not to be ungrateful, but I was hoping maybe I could be paired up with your friend Mr. Pak. He's always seemed like a very nice man. Very strong and muscular.\" She giggled a little, a sound almost uncharacteristic of a woman in her early forties. \"And gossip is that he is quite well endowed.\"\n\n\"I can't speak to that part, but I'm sure Phil wouldn't mind,\" Niko said. \"Andy or I can give him a call in the morning and arrange it.\"\n\n\"I might have to owe Phil a favor or something,\" Andy said, \"but that's okay. He can just put it on my tab. I probably owe him only a couple hundred at this point.\"\n\n\"Wait,\" Asha said, just picking up on Andy's misunderstanding, \"what's wrong wit' me that you don't want me?\"\n\nIt was Andy's turn to blush. \"That isn't what I meant to say.\"\n\nNiko smirked, reaching back to pat Asha on one of her thighs. \"He's afraid either he's too old for you, or you're too young for him. I love Andy to death, but he's a little insecure from time to time.\"\n\nAsha reached one of her hands forward, curving her arm around the seat to smooth her fingertips along Andy's chest through his shirt. \"I'm old enough to know better, but too young to give a fuck, luv,\" she purred. \"In fact, if my mum wasn't in this car, I'd give you a bit of the ol' road head so I didn't have to wait until I got home.\"\n\n\"Don't let my presence stop you, Asha,\" Charlotte said, a warm smile on her lips. \"I feel that need in my belly quite fiercely so I imagine it is rather remarkable in yours, seeing as it affects younger women more quickly. If you want to go after Andrew right now, I don't see why not. This community is extremely open about its sexuality.\"\n\nAsha's eyes widened a little, her deep tan skin darkening with red, as if she wasn't sure which she was more embarrassed by, being called out by her mother or backing down in front of her mother. After a moment, though, it was clear the hunger inside of her won out, as she moved Piper's unconscious form to sit up, then laid her back down on the seat behind her, as she started to worm her way between the seats, as Andy slowed the card down, bringing it to a stop at a local streetlight that had turned red.\n\n\"You have to kiss him first, Asha,\" Niko said to her. \"Otherwise he's not gonna let ya.\"\n\n\"I haven't said I'm going to let her anyway,\" Andy said, defensively.\n\nNiko reached over and patted his thigh, a playful smirk on her lips. \"Oh, you are, Andy. I know you too well. And I know Asha. She's a voracious little slut when she wants to be. And she's gotten jealous from all the stories I've been telling her when she's been around to visit her mom.\"\n\nBefore he could reply, Asha turned his head and pressed her lips against his hungrily. She tasted of cinnamon and spice, as her tongue insisted on visiting the inside of his mouth before they parted the kiss. \"I'm not sure you want to do this *now*, Asha,\" Andy said. \"I just fucked poor Piper back there a little bit ago, and she hasn't bathed in a week. My cock probably smells of dirty pussy.\"\n\nAsha smirked at him, sliding her hand down to unbutton his jeans. \"Then your newest teenage fucktoy had better clean i' off for you, sir,\" she purred, kissing at his neck. \"Eyes on the road, and don't go too fast now.\"\n\nAndy thought she was kidding, but as the light turned green, she stopped and nodded for him to go, even as she was drawing the zipper down. As soon as he started the Tesla in motion again, Asha's lean fingers reached into his pants, pulling out his cock, stroking it slowly.\n\n\"See, if I do this now, then you can't reconsider,\" she said, her fingers moving along his shaft. \"You can't get in your own head about it, you can't be worried if I may be too young, too wild, too out of control, too feral. So I will get i' out of your head by *giving* you the best damn head of your life. It'll be fine.\" She slipped her head down and wrapped her lips around the tip of his cock, letting her tongue slather over it slowly, as a sultry, wanton moan poured from her throat over his dick.\n\n\"No turning back now, hon,\" Niko purred at him. \"She's gotten a taste of you. She's gonna latch down like a leech until you give her what she's owed.\" Her hand brushed along Asha's ponytail, pushing her head down a bit more. \"She's a Rookie, through and through.\"\n\n\"Oh god,\" Andy groaned, shaking his head. \"You've got a nickname for yourselves. Next thing you'll be unionizing.\"\n\n\"We already have, dear,\" Niko giggled. \"We're Local Amalgamated Cocksuckers, Chapter 69.\"\n\nAndy rolled his eyes, turning the card at a stop sign, heading into the section of New Eden that housed his mansion. It was growing increasingly hard to focus, as Asha bobbed her head in his lap, pushing and pulling her face along his dick, her tongue lashing over every inch of it as she hummed, her fingernails sinking into his inner thighs.\n\n\"Who is it she reminds me, Charlotte?\" Niko asked, looking back over her shoulder.\n\n\"A lot of people say she looks like a younger version of one of the people who was on Great British Bake-Off.\"\n\nNiko nodded. \"That's who it was. How's it going, Andy? Need me to take the wheel?\"\n\n\"You, ah... you might have to,\" he said. \"I don't know how long I can keep my head clear.\"\n\nAsha popped her head off his cock and turned her brown eyes up to look at him. \"Then don't, daddy,\" she moaned at him. \"Let me have wha' I want. Let me have that cum in my belly. Claim me. I wanna feel the best orgasm of my life.\"\n\nShe looked back down and pushed her mouth onto his dick once more, forcing it as deep as she could into her throat, humming on it, and finally he just couldn't resist, and fired a load of cum into her mouth. Her whole body thrashed, but as she pulled her head up and off his cock, she swallowed that load, laying her head down against his thighs, his softening cock laying across her nose, as the girl began to murmur \"imprinting\" quietly for a few moments before falling still.\n\nNiko helped him ease the car to a stop long enough for him slide Asha back into the back seat once more, two slumped girls braced against one another as Charlotte tried to keep them from falling over too much. Then Andy tucked his cock away, tugged up his jeans and started the vehicle moving forward once more.\n\n\"I appreciate you being understanding about this, Andy,\" Charlotte said to him. \"I didn't know how to tell Niko that you weren't my type without risking the chances that you wouldn't try and extract us from Mr. Covington's household.\"\n\n\"Not gonna lie,\" Niko said. \"I don't enjoy being lied to, Charlotte. But I still would've tried to get you out even if you'd told me in advance.\"\n\n\"And I am sorry about that, Niko, but I simply couldn't risk it. You've met Covington. You can only imagine what kinds of depravity he would've subjected myself and my daughter to.\" Charlotte shivered, the thoughts searing her brain for a moment. \"It's extremely unpleasant even to think about it.\"\n\nThe car reached the gate, and Niko pushed the button to open make it open. Unlike many of the other homes in New Eden, Andy couldn't stand the thought of having security on the premises. Even the idea of an automatic gate wasn't pleasant, but it had come with the home, and he'd wanted to avoid kicking up a fuss until he was better settled.\n\nAs he brought the car up the driveway, he saw Aisling was sitting on the front porch in her pajamas, a blanket pulled around her, keeping her warm from the cool November air. Andy brought the car to stop by the front door, as Niko hopped out and moved over to Ash, giving her a hug.\n\n\"Did the good guys win?\" Aisling asked.\n\nNiko nodded, holding Ash in the hug for a long moment before pulling away. \"Andy got them out safely. Charlotte's not going to stay with us, though.\"\n\n\"Oh no!\" Aisling said. \"Why not?\"\n\n\"She's not into me,\" Andy said as he hopped out of the car, leaving the door open so Charlotte could slide out, leaving the two unconscious girls in the back seat for the moment. \"Had to happen sooner or later,\" he chuckled, \"and frankly, I'm surprised it took this long.\"\n\n\"Her loss then,\" Aisling giggled, moving over to the car, peering in the back seat at the slumped forms of Piper and Asha. \"Looks like you got two hot young things to add anyway.\" She cocked her head to one side, looking at Piper for a second. \"Why do I know her?\"\n\n\"Imagine her doing a little wiggle dance before she goes to play volleyball.\"\n\nAsh narrowed her eyes for a second, then those blues widened suddenly as she gasped, bringing her fingertips to her lips. \"Shut up! What is even happening!\"\n\nAndy popped the trunk and pulled out Charlotte's suitcase, then Asha's, carrying them into the house before coming back out. \"I'm gonna need a hand hauling them into the house, though.\"\n\nAsh nodded. \"Where are we going to put them? In the master bedroom?\"\n\nAndy shook his head. \"We've got plenty of extra bedrooms upstairs, and Piper was nearly catatonic before I imprinted her, so the last thing I want is her waking up surrounded by tons of unfamiliar people. We'll let her have a bedroom to herself, although I think you should probably give her a shower quick before you put her into a bed.\"\n\nNiko nodded, helping Aisling pick Piper up. \"Good idea. She really is pretty ripe right now. C'mon Ash, let's go hose her down.\" The two women lugged Piper into the house, leaving Andy with Charlotte and Asha.\n\n\"If you can give me a hand, you and your daughter can crash for the night in one of the spare bedrooms and in the morning, I'll give Phil a call, and we'll get him over for you to join his family.\"\n\nCharlotte leaned in and kissed his cheek. \"Thank you, Andy. You and Niko will be good for Asha. Don't judge her too harshly. She's still young and that means she can tend to be reckless. She'll love you with all her heart, but she's going to have moments of sadness about her father, so please be understanding about her mood swings.\"\n\n\"I'll do my best,\" he told her, as the two moved to scoop up Asha. She was light enough and small that Andy was able to carry her on his own.\n\n\"That's all anyone can ask.\"\n\nAfter getting Charlotte and Asha squared away in one bedroom, Andy headed in to check on Aisling and Niko, who were sliding Piper into a bed in one of the bedrooms no one was using. When they'd moved into the mansion, Andy had told all the girls that if they wanted to claim one of the bedrooms as their own, they should do so. Ash had insisted she never wanted to sleep anywhere Andy wasn't, and Niko and Lauren had agreed, although Niko had converted one of the bedrooms into an office space that all three of the girls shared. But that still left several bedrooms that were decorated, and Andy checked four of them before he found them, as they pulled the sheets up over Piper's unconscious body.\n\n\"Everything go okay?\" he asked them, as they headed towards the door.\n\n\"Sure, no problem, but she definitely needed to be hosed off,\" Niko said. \"I'll bring her bag up here so she can get dressed in the morning.\"\n\n\"Thanks,\" Andy said, leaning down to give her a soft kiss. \"I'm glad I didn't let you down.\"\n\n\"You couldn't have, even if you'd lost,\" she said, heading towards the stairs.\n\n\"So how many more people are we expecting, and did you find a way to get that bitchy ex of yours out of our family?\" Aisling said to him, as they both stepped out of the bedroom, closing the door behind them.\n\n\"Someone'll be coming by to pick up Erin tomorrow,\" Andy said, \"and in addition to Sheridan staying here, there'll be another three getting dropped off tomorrow.\"\n\n\"Oh good,\" she said, as they headed down the stairs together. \"I like Sheridan. She's feisty, but in a good way. She was showing me how to stretch out and be more limber. Are you going to imprint her tonight?\"\n\nAndy shook his head. \"God no. Piper was in such a state when we found her that my first load didn't start her imprinting process. It just didn't take first time, so we had to go again.\"\n\nAisling stopped walking. \"Wait, what? You mean it didn't take?\"\n\n\"I mean I came in her mouth and she pushed me onto the floor and crawled on top of me and fucked me like I hadn't even given her a drop. After I pumped a load into her pussy, though, she slumped on top of me and it seemed to take that time.\"\n\n\"Well, we can't let the girls go too long before getting imprinted then, if it's going to come to that,\" she said, starting to walk again. \"Covington's a real prick, isn't he?\"\n\n\"More than you can even imagine.\" Andy rubbed his eyes. \"I have to go tell Erin she's leaving in the morning, don't I?\"\n\n\"It's late, Andy. You can wait until morning, ya git. Hopefully both she and Sheridan are already asleep in the pool house. Lauren's already completely passed out in bed. She's got to go in tomorrow to work with the team. Apparently they're going to try and hold a football game in a month, which means she needs to be sure the players are all in tip top shape.\"\n\nThey walked down and into the kitchen, where Niko had poured them each a glass of ice water. It was too late for soda or booze, but Niko knew he wanted something to calm his nerves. They also found a note from the staff. \"Hope you're not keeping that bitch Erin. She doesn't deserve you. Love, Nicolette, Katie &amp; Jenny.\" The three of them had a good laugh over that as they enjoyed their water. Andy made sure to pocket the note. Half an hour later, they were crawling into bed next to Lauren.\n\nWhen Andy awoke the next morning, Lauren had already left for the day and Niko was up exercising, leaving just Aisling snuggled in against him, Taylor asleep at the foot of the bed. He did his best to try and slip out of bed without waking either of them up, but just as he was laying Ash's arm back down, she stirred. \"Oh no, Mr. Rook. No getting up without me.\"\n\n\"I didn't want to wake you, Ash,\" Andy said. \"I need to shit, shave and shower, then call Phil to see about him taking in Charlotte. I don't think he'll complain too much. I seem to remember him having a thing for French women.\"\n\n\"You've also got to tell you ex to bugger off, and tell Sheridan she's welcome to stay, see about getting her imprinted.\"\n\nAndy groaned, standing in the doorway to the bathroom. \"I swear to you, never once in my life before this year did I think there was such a thing as too much sex. You wanna shower with me?\"\n\nShe grumbled. \"No.\" She raised a hand, a single finger pointing upwards. \"Yes?\" She put her hand down and started to force herself off the bed like she was doing a push-up, then suddenly fell back onto the bed. \"No.\" Just as Andy was about to turn, she rolled off the bed and onto the floor with a loud thump, then stood up, groggily. \"Yes. Let's shower.\"\n\nTwenty minutes later, Andy left Aisling drying her hair, having gotten dressed in a large Doctor Who shirt and a pair of very baggy, almost Madchester style jeans. He headed downstairs and out into the back, where he found Niko and Sheridan on the patio by the pool, both in sports bras and leggings, doing yoga together, although Sheridan was far more bendy than Niko was.\n\n\"Tell her to stop showing off, Andy!\" Niko whined at him, although the smile on her face made it clear she was kidding.\n\n\"Sorry about all the chaos yesterday, Sheridan,\" Andy said to her as he moved over to stand in front of her. \"So, you're welcome to stay here if you want to join the family.\"\n\nShe smiled at him, balancing on one foot, her other leg perpendicular pointing out, doing some weird combination of the splits and standing like a flamingo. \"Of course I want to stay. I chose you, and Niko couldn't shut up about what a great guy you are, so I'm totes all in. You wanna do it now or wait until later?\" She had an easy, relaxed grace to her, a sort of Midwestern friendliness mixed with a California hippie laid back vibe. \"You've got quite the dance card ahead of you, so I'm good if you need a few days, although Neeks says I'll start to feel a gnarly need chewing at me soon enough.\"",
        "Andy looked over at Niko and mouthed \"Neeks?\" to her, only to see Niko shrug and smile. Then he turned back to Sheridan. \"Well, it looks like you've got a pretty clear head right now, so why don't we wait and see how all the others who show up today are, make sure nobody's in a fuck frenzy with their brain unscrewed.\"\n\nSheridan raised one of her blonde eyebrows, her frizzy curly hair mostly bound together in a bun atop of her head. \"That's a real thing?\"\n\nNiko couldn't help but giggle. \"He got tackled last night. Pinned down to the ground and forced to just take it until he gave it up.\"\n\nThe blonde smirked. \"Sick. Sounds hella fun. Can I at least move out of the beach house now? That other chick's on my last damn nerve.\"\n\n\"Don't worry, she'll be heading out before the day's over. You're welcome to move your things into the master bedroom or take one of the empty bedrooms as your own,\" he said. \"The girls converted one into their studio, and I made one into my own little office, but that leaves ten others to choose from, although I did put Piper in one, so maybe nine.\"\n\n\"Seven, actually,\" Niko said to him as she finally stopped stretching and moved over to get closer to the two of them. \"Piper and Charlotte are in one, and Lauren decided it wasn't fair of her to always be waking you up every morning, so she and Taylor are going to take one of the other bedrooms on nights you don't want them in bed.\"\n\n\"God that sounds cold,\" Andy grumbled. \"I hope they don't think that...\"\n\nNiko shook her head. \"Get out of your own head about it, Andy. They know you're only human and you've only got so much cum to go around, so nobody's mad, nobody's jealous. They're just thinking practically. Besides, I got the impression that after Taylor's punishment is over, Lauren's gonna run her pretty ragged for a while, if you know what I mean. Some lady lovin' to get caught up on.\"\n\n\"Who's Taylor?\" Sheridan asked, finally lowering her leg, standing back on two feet.\n\n\"Another one of my partners,\" Andy said, \"but she used to be Lauren's ex, and apparently she cheated on Lauren, which led to them breaking up. All of that happened before the pandemic. But Taylor wanted to get back with Lauren, so she pushed to get assigned to my household once she got vaccinated. Lauren agreed, but decided as punishment, she was going to make Taylor the house bitch for a month.\"\n\nSheridan cocked her head as she started to towel off. \"What's *that* mean?\"\n\n\"It means she's walking around the house naked except for a collar on her hands and knees for the month, eating her food out of a bowl, sleeping at the foot of beds.\"\n\nThe blonde giggled a little. \"Remind me not to piss Lauren off then.\" She tossed the towel around her neck. \"Yeah, I'll take my own bedroom then, but I'm definitely going to want to sleep in the middle of the fuck pile every now and again. That sounds hella fun. Ash and Neeks are both dope, so I can't wait to sleep with endless arms and legs just folded over me.\"\n\n\"Any time you want,\" Andy said with a nod. He stepped in close, leaned down and gave her a soft kiss, tender and welcoming. \"You've got until you're imprinted if you want to change your mind, but after that, you're stuck with me.\"\n\nSheridan wiggled a finger in his direction. \"No no, *you're* stuck with *me*, but Neeks can tell you, I'm hella worth the hassle.\"\n\n\"Why do you think you're a hassle?\"\n\n\"Oh, because I love surprise sex,\" she said, rolling up her yoga mat with a playful grin. \"One minute, you're gonna be focused on watching television, or writing your next novel, or eating dinner, and then suddenly... BAM! You're gonna be hilt deep in my cunt, and you won't even see it coming. That's when I'm really having fun.\" She tossed a wink his way and then moved over to grab her suitcase, heading into the main house.\n\n\"You want me to come with you to deal with the harpy?\" Niko said, toweling herself off. \"I imagine she's going to be quite the shrieker.\"\n\n\"Only one way to find out.\"\n\nThe two headed into the pool house to find Erin sitting on a couch, watching television, although the look on her face seemed to imply that she wasn't paying much attention to it, more using it as a distraction to keep her mind busy. As they walked over towards the couch, she turned off the television and sighed. \"Am I really so awful, Andrew?\"\n\n\"Look, Erin,\" Andy said. \"You don't want me. You never wanted me. You had this ideal life planned in your head before you met me, and every time I did something that didn't fit into your predetermined plan for me, you got angry and yelled at me. And you were *always* yelling at me.\"\n\n\"Because you could be doing so much better for yourself, Andrew, don't you see that?\"\n\n\"Erin. Look. Look. I'm happy with my life the way it is. I've gotten very lucky in all of this, getting partnered up with amazing, extraordinary women who love me for me, for who I am and how I behave, not how they think I should behave. Sometimes I'm in charge and sometimes they are, but not once have they ever told me to quit writing. Not once have they ever told me that I shouldn't do what I want with my life. Not once have they ever lied to me and expected me to just mystically know they were lying and to call them on it.\"\n\n\"Andrew, listen...\"\n\n\"No, Erin, you listen. You want something else. You want *someone* else. In less than a day here, you've managed to piss off Aisling, Lauren and Niko, as well as the staff, all of whom I like a whole hell of a lot better than you.\"\n\n\"They're just the hired help, Andy. Their opinions don't matter.\"\n\nHe snapped his fingers, pointing at it. \"That, right there, that's it in a nutshell. You think you're better than everybody else, and I can't fucking stand that. I come from blue collar roots too, Erin, and when I found out this home came with a staff, I was so upset about it, because I didn't want anyone having to scrape and grovel on my behalf. I don't need any fucking toadies in my life, whereas you want everyone to toady up to you. The staff likes being submissive to me, and I'm *still* trying to wrap my head around that, but that doesn't mean I'm going to treat them like they're subhuman. So I went out of my way to make sure they're completely happy here, that they're getting what they want out of this and not what they don't. You, on the other hand. Since you've gotten here, have you given one thought to anyone's happiness except your own?\"\n\n\"Other people's happiness isn't my concern, Andrew.\"\n\n\"See, that's exactly why nobody likes you, bitch,\" Niko said to her. \"You can't even put Andy's happiness over yours! You just assumed that he was going to do whatever you told him to.\"\n\n\"Niko,\" he said with a soft smile, \"I got this.\" He turned his attention back to Erin. \"You are not going to be a part of this family. You are not welcome in this house until you've gotten yourself partnered up with someone else, which shouldn't be a problem, because someone's going to be picking you up today, and you're going to be partnered with them.\"\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\"You are *not* just shoving me aside like some cheap floozy, Andrew, because you can't handle a strong woman!\"\n\nAndy laughed. \"Oh, I can handle a strong woman. I've got a whole houseful of them. What I can't handle is someone who puts their own happiness over the happiness of the household. That isn't going to fly here. And besides, you're going to be much happier with this other guy.\"\n\n\"I will have what I *want*, Andrew, and I want *you*.\"\n\n\"No, Erin. You don't. You want wealth. You want power. You want status. That's why I know you're going to be much happier with the other guy.\" This was probably how Andrew should've started the conversation off, but he'd wanted Erin to stew a bit in her self-pity before giving her the carrot. \"You're going to be partnered up with Nathaniel Watkins.\"\n\nAt that, her ears perked up, and her facial expression changed in a moment. \"Sir Nathaniel Watkins? The billionaire tech investor?\"\n\n\"The one and the same. I saw him last night, and we arranged to make an exchange of sorts, and you will be joining his household, and someone whom he'd been paired up with will be joining mine instead. He should be here sometime today to make the exchange.\"\n\nErin looked down at her hands, considering her expensively manicured nails, before looking up at him. \"I really don't make you happy, Andrew? Did I ever?\" For a moment, she actually looked fragile, as if the thought of leaving him genuinely hurt her. Andy suspected it was more her being bothered at failed at something, at her inability to just demand that things go her way and then them falling into place. Erin had never been good at taking no from anyone or anything.\n\n\"Erin, you and I want completely different things in life. Neither of us knew that about each other when we first hooked up, but the longer we were together, the more miserable I became. I was happy. At first. Briefly. But that was fleeting, as we both dropped our masks and stopped pretending we were people other than who we really were.\" He sighed, reaching over, patting his hand atop of hers. \"And you genuinely didn't like my writing. That's a dealbreaker. That was always going to be a dealbreaker.\"\n\nShe sniffed a little, trying to stifle back a tear. \"I'm sorry, Andrew, I just don't like fantasy.\"\n\n\"And that's fine, Erin. It really is. But it's why we were never going to work. C'mon, get your things together, and we can go wait out front of Mr. Watkins to arrive.\"\n\n\"I suppose there are worse things in life than being married to someone on the Forbes Top 100 Wealthiest Individuals list,\" she said, as she slid her hands out from under his and started to gather up her things.\n\nFifteen minutes later, the three of them had been joined by Aisling on the front porch, where they waited for the cars to show up. The first vehicle to arrive was an oversized yellow H3 Humvee, driving up the driveway like a tank. Andy didn't know what anyone drove, so he wasn't sure exactly who it was until the vehicle got close enough for him to read the plates. BIGVIK. Ah, Vikovic had arrived first, but he still didn't know who the man was ferrying to his house. Other than Charlotte and her daughter, Andy didn't know who had been originally assigned to whom.\n\nThe vehicle stopped in front of the house, and Andy rose from the little couch he'd been sitting in with Niko and Ash, as the driver's side door opened, and Gregor Vikovic stepped out. \"This was hardest loss of my life, Rook,\" he said, \"but I suppose this may have worked out for best. She would've been so unhappy if she'd found out you were here and not with her. Apparently she's a fan of yours.\" Vikovic walked around the vehicle and opened the passenger door, and Sarah Washington practically bolted out of the car at him.\n\nShe was even more lovely in person, almost half a foot taller than he was, her red locks partially braided and wrapped around her head, the rest hanging over her shoulders. She had a girl next door vibe to her, although he'd always imagined her height must have driven more skittish guys away. She had a loose button up green blouse on, as well as a flowing billowy jade skirt, deep blue eyes intently focused on him, as she charged at him, wrapping her arms around Andy, sliding one hand along the back of his head and she pressed her lips against his in a warm, affectionate kiss.\n\nIt was quite difficult than how any of the other girls had kissed him on their first time. With each of them, he'd felt lust, hunger, a sort of uncontrollable wanton need burning in the kiss, but here, this was... he couldn't place his finger on it, but it was almost like his first kiss back in high school, that moment when he'd wanted to confess to Samantha Davis his eternal love for her. That was it, he realized. This wasn't a kiss of lust. This was one of love. The realization surprised the hell out of him.\n\n\"Oh my god, you're totally, really you,\" she said as she broke the kiss.\n\n\"Of *course* it's her,\" Erin groaned, rolling her green eyes.\n\n\"I am... absolutely me,\" Andy said, intending to say more, but Sarah kissed him again, her body pressed against his, her arms holding him close, like she was afraid he might slip out of her grasp if she gave him even an inch. When the kiss finally broke, she leaned down to bury her face in his neck, holding onto him for dear life, even as he could feel she was crying. \"Are you okay?\"\n\n\"I am never going to be more fucking okay than I am right here, right now,\" she said, sniffling a little bit. \"Can you just hold me for a bit? So I know this is real and not some sort of fucked up fever dream from the vaccine?\"\n\n\"Sure?\" Andy said.\n\nVikovic had unloaded four large suitcases from the back of the hummer, setting them on the porch, before he reached forward and peeled one of Andy's hands off Sarah's back, so he could shake it. \"I vill not repeat this, Andrew, but it felt damn good watching someone kick Covington in the teeth for once. Dasvidanya, comrade.\"\n\nWith that Gregor got back into the humvee, starting to head back down the driveway as a stretch limo began to drive up it.\n\nIt was at least a minute before Andy got the nerve up to speak again. \"You want to tell me what's going on?\" he said to Sarah.\n\nShe giggled girlishly, shaking her head a bit, her face not leaving its spot, buried in his neck. \"Nope. Not fucking yet. Too fucking happy.\"\n\n\"Well, you're happy, so that's a good start at least,\" Andy said.\n\n\"Are you gonna tell her?\" Niko asked.\n\n\"Hush up, Niko,\" he scolded with a grin.\n\nThe limo pulled up to rest in front of the house, and the limo driver hopped out, moving around the vehicle, heading towards the back. Andy sort of suspected who this way, but as soon the back door opened, his suspicions were confirmed and Sir Nathaniel Watkins stepped out of the back.\n\n\"Hey, Andy,\" Watkins said. \"I'm here to honor our deal.\"\n\n\"Yummy,\" Erin said quietly, although not so quiet that Andy couldn't hear her, even with Sarah still pressed up against his body.\n\n\"Omigod, Sares?!\" the voice of Emily Stevens said as she hopped out of the limo, rushing over towards them.\n\nThat was the point when Sarah let go of him, turning around, catching Emily's tiny British form in her arms, lifting her up, spinning her around. \"Omigod, Ems!\" she said, suddenly hugging her tightly. \"I'm totally dead, aren't I? Life is never this fucking good to me. It always goes to shit somehow. Are you really real, bitch?\"\n\nEmily giggled, infectious and warm, her voice posh within an inch of its life. \"I am absolutely here for all of it, Sares!\" She gasped, and then begin to giggle even more. \"No way!\" There was something about a posh English accent and the way it sounded saying a long O sound that sent delicious chills up Andy's spine.\n\nShe'd just turned thirty less than a few months ago, but still had a very vibrant youthful exuberance to her. He knew there were angry, jealous men all across the world hating him right now who had grown up watching Emily Stevens grow up on film. She had begun starring in movies just barely in her teens where she'd played the book-smart love interest of the protagonist of a series of sci-fi bounty hunting school movies called \"The Dagger Academy.\" After those, she'd gone on to try a number of various arthouse roles, trying to shake being forever associated with the role of Dahlia Hairtrigger, but she hadn't had the best of luck.\n\n\"Are you serious, Sares?\" she said, while the large redhead continued to bearhug her. \"We're together forever? And we're really going to get paired up with your Mister Big?\"\n\n\"Mister Big?\" Andy said, his eyebrows raising high.\n\n\"Oh, hasn't she told you yet?\" Emily giggled, that laugh forcing him to smile, no matter how much he felt off guard. \"You're at the top of her List.\"\n\n\"List?\"\n\nSarah put Emily down and turned to look at him, her face having gone nearly as red as her hair. \"Gosh, fuck me, how do I even say this?\" she said, looking down at her feet suddenly, as if trying to look at him while talking was making it even more complicated. \"Em, can you tell him? I'm fucking scared now, that it's gonna freak him out or some shit.\"\n\nEmily's deep blue eyes twinkled. She was wearing a big blue DKNY t-shirt over a pair of capri pants, a bright diamond bracelet on one wrist, a silver teardrop pendant hanging down from her neck. Her skin was pale like alabaster, her blonde hair hanging just past her shoulders in wavy blonde curls, her lips bright red with freshly put on lipstick. \"I'll tell him, but we're fine, Sares, we're fine we're fine we're fine we're *fine*. Trust me on this! Em knows best.\" Emily squeezed Sarah's hand in her own, walking back over to Andy, almost leading Sarah along behind her, like she was a naughty child with her hand caught in the cookie jar. \"Most people have a hall pass list, you know,\" she said, her voice again doing that thing with the O sound that sent goosebumps along his skin. \"It's supposed to be a list of people you can fuck at any time, and your partner just gives it a wave.\" She had a coy smile on her face, as she brought Sarah back within reach of Andy. \"Well, you are the top person on Sarah's list, Andy Rook, or should I say, Mr. Blake Conrad?\"\n\n\"You're... you're a fan of my writing?\" Andy said, almost unable to bring himself to force the words from his mouth. \"*MY* writing? The Druid Gunslinger books?\"\n\n\"Tell him about OmegaCon, Sares,\" Emily said, nudging the much taller girl in the ribs. Emily was nearly a foot shorter than Sarah, and while both were fit, Emily was slender like a ballerina, while Sarah almost seemed more like an Amazon warrior. There were rumors that Sarah had been in consideration for the Wonder Woman role, but that her tendency to swear and be adorkably awkward at press junkets had kept her out of the role. \"If you won't tell him, I will,\" she teased.\n\n\"Oh fuckbeans, you totally would, wouldn't you, bitch?\" Sarah hissed, closing her eyes, wringing her hands together. \"So I was totally at your fucking panel at OmegaCon last year, in September.\"\n\n\"I highly doubt that,\" Andy said. \"I can't imagine an actress like you wouldn't have turned every head in the room the minute she walked in. I would've definitely remembered.\"\n\n\"I was...\" she mumbled before Emily prodded her again, a wide impish grin on Emily's adorable English face. \"I was in costume, okay? Ems and I wanted to be able to just walk around the convention like normal people, so we were cosplaying so nobody would recognize us. I was in a Chewbacca costume, and I got up in the Q&amp;A line and asked you if you ever imagined actors when you were writing your fiction.\"\n\n\"No!\" Andy said, gasping suddenly.\n\n\"See, I told you he'd fucking hate me, Ems?\" Sarah said, looking like she was about to cry. \"And you said you totally imagined actors for every fucking character you'd ever written, like casting them and everything or whatever. And then you said...\"\n\n\"I said I'd always sort of seen Christian Kane playing the Gunslinger himself.\"\n\nShe nodded. \"Do you remember what else you said?\"\n\nAndy tilted his head, struggling to remember whatever else he might have said, but he'd done half a dozen conventions last year, and many of the Q&amp;A sessions blended together. \"I don't. Oh god, I'm so sorry, what did I say?\"\n\n\"You said that you'd imagined Olivia Munn playing Doctor Erika Shirow and... and Sarah Washington, I mean, *me*, playing Layla Heartseye, the Elven barbarian queen,\" Sarah said.\n\n\"We spent three days at the convention in costume, but had to leave early right after your panel finished,\" Emily said, \"because she took me back to our hotel room after that and masturbated for nearly an entire hour, thinking about you saying that. She still has the video of you answering her question on her phone. I was recording your answer for her. I was dressed as Greedo, by the by.\" Emily pulled Sarah in even closer. \"She's been trying to get her agent and your agent to set up a meeting for a year now, so she could talk to you about the book rights, and if she could play Layla Heartseye, but I've always thought she was really just doing it so she could get into your pants.\"",
        "\"One of us definitely needs to fire our agent then,\" he muttered. \"No way in hell I'd have turned down that meeting.\"\n\n\"Wait, are you two... together?\" Aisling said, pointing at the two actresses.\n\n\"We are,\" Emily said, beaming proudly, \"but we both enjoy more than a bit of cock as well, so we're known to dally outside of each other.\"\n\n\"I thought you were with that director,\" Andy said to Sarah. \"Dennis Jacobson.\"\n\n\"That was totally over fucking years ago,\" Sarah said, still unable to lift her head up, her eyes fixated on Andy's feet.\n\n\"And I thought you were with that soccer player,\" Andy said to Emily. \"Georgie Stewart.\"\n\nEmily waved her hand in the air at him, her smile unwavering in its million watt intensity. \"That was done with long ago. I did go on a couple of dates with Jeff DeHavelin last year, but it turns out, he is utterly prudish, and that I simply cannot abide by. He doesn't even go down on partners! How do people like that even live today? But now we're going to be with you for the rest of our lives, so that doesn't matter!\" She clapped her hands together excitedly, as the limo driver set the last of Emily's four suitcases on the porch. \"I, for one, couldn't be more excited! How about you, Mr. Rook? Or may I call you Andy?\"\n\nAisling was struggling not to erupt into a fit of giggles, but it was getting harder and harder for her to contain it all in, as she was mostly just shaking, threatening to burst out before she finally forced the words out of his mouth. \"Tell her, Andy!\" The words were a struggle, the laughter seeping into all of them. \"You've gotta fucking tell her.\"\n\nAndy sighed, realizing there wasn't anything that could embarrass him at this point. \"Sarah,\" he said, smoothing his fingertip along her chin, forcing her to tilt her head up and look at him. \"You're number one on *my* list.\"\n\n\"No fucking way. You're fucking making fun of me, aren't you?\" Sarah, her blue eyes welled up with tears, as if she'd thought Andy was actually going to send her away.\n\nHe leaned in and kissed her, trying to put as much emotion into it as she had when she'd kissed him earlier. \"Number. One. With a bullet. Sarah. Washington.\"\n\n\"He's not kidding,\" Erin groaned. \"Ever since he saw you twelve years ago in that movie where you were a quirky airline co-pilot. I'm his ex-girlfriend. Believe me, I know. He watched that movie like a dozen times in the theater.\"\n\n\"You saw 'Airway Mishaps'?\" she whispered, wrapping her arms around him again, but still extremely shy. \"That's super fucked up. Nobody fucking saw that movie.\"\n\n\"You got nominated for an Oscar for it, Sares,\" Emily said, smoothing one of her hands along Sarah's back.. \"That means tens, maybe even *hundreds* of people saw it.\" Niko giggled a little at Emily's teasing. \"And I'm sure he's too old to be a fan of the Dagger Academy movies, so I'll just have to make him fall for me the old fashioned way.\"\n\nNiko cleared her throat, devilish amusement on her face, and Andy glared over his shoulder at her. Oh, how he wanted to bend her over his knee right now and paddle her ass red.\n\n\"Omigod, I'm on your list too?\" Emily said, giggling all over, blushing herself this time. \"I had no idea! I assumed you were far too old to grow up with the Dagger Academy films.\"\n\n\"He fell for you in 'The Last Graverobber,' where you played that heiress,\" Aisling said. \"Although he did eventually watch the Dagger Academy movies after that. He'd never seen them before last Christmas, although we rewatched them together a few months ago. He said it was still a little strange seeing you so young in the first one. So while he didn't grow up on them, he's familiar with your work. You're number three on his list.\"\n\n\"Who's number two?\" Emily said, putting her hands on her hips in mock annoyance.\n\n\"Alice Karteaux,\" Andy said. \"I mean, after 'Winding Bullets,' anyone who isn't aroused by her isn't anyone I want to know.\"\n\n\"Oh, that's totally fine,\" Sarah said, her hands starting to slide along Andy's back. \"She's on Emily's list as well, so the slut can't say shit about you wanting to bang her.\"\n\n\"Well, you're not on *my* list, Andy,\" Emily said, \"but that doesn't mean I'm not going to fuck your brains out, all the while having my best girl by my side. So let's get to it.\"\n\n\"What, now?\" Andy said.\n\n\"I'm not sure she's going to let go of you until you do, babe,\" Emily said, taking one of his hands in hers. \"She's read every book you've written a dozen bloody times. She even found that silly porn story you wrote on the internet under a pen name earlier this year.\"\n\n\"You read that? You *found* that?\"\n\nSarah nodded, finally getting her tears under control. \"I recognized the sentence structure.\"\n\n\"My... sentence structure?\"\n\n\"It's a very distinct sentence structure,\" she giggled. \"Plus, like, there's a fuckton of swearing, and you have that in all your writing.\"\n\n\"Not *that* much,\" he laughed.\n\n\"Oh shut the fuck up already,\" Sarah said, smiling against his neck. \"Take the win.\"\n\n\"Okay, look, why don't you two go upstairs and get settled in the master bedroom, and I'll be up in just a little bit, and we can see about getting you two imprinted, since you both seem to want that,\" Andy said. \"I apparently need to talk to Mr. Watkins briefly, so head up and I'll be along in just a few.\"\n\n\"Okay,\" Emily said, trying to pull Sarah from her grasp on Andy. \"C'mon, Sares, let's go upstairs.\"\n\n\"Can I kiss him one more time before we go?\"\n\n\"It's going to be just a few minutes, babes.\"\n\n\"Please?\"\n\nEmily rolled her eyes, smiling. \"Fine. One more kiss.\"\n\nSarah locked lips with him once more, and Andy could feel her nipples hard as rocks pressed against his collarbone through the blouse. Eventually she pulled back and away from him, although her arms were the last thing to release him. \"Don't keep us waiting long, okay?\" she said to him. \"You owe us at least two good fuckings. One good fucking for me, and one good fucking for her. Because we are not getting out of that bed until we get fuh-uh-uh-uh-ucked. Got it?\"\n\nEmily started pushing her into the house, rolling her light blue eyes. \"He's got it, Sares, now let's gooooooo.\" She was about to head into the house, then turned back, darted over to Andy, threw her arm around his neck and kissed him fiercely, grinding her hips against him before she pulled back, giving him a saucy little wink, slapping his ass on the way back. \"I couldn't bear the thought that you might've thought that I didn't want this just as much as she does. Don't dilly dally or we'll start without you.\" She gave him a playful little wave and then skipped into the house.\n\nAndy turned to glance over at Aisling and Niko, who were gossiping between themselves. \"They're gonna be so much fun, aren't they?\" Ash said to Niko.\n\n\"I didn't talk that much to Sarah, but I've spent quite a bit of time chatting with Emily, and she is a hoot,\" Niko said. \"I kinda love her.\"\n\n\"Oh, I'm sure you'll get your chance.\"\n\nAndy turned to see Watkins standing at the bottom of the stairs, so he walked down to meet him, even as he saw Watkins' limo driver loading Erin's bag into the limo. Erin had apparently gotten into the limo at some point while he'd been talking with Emily and Sarah. \"Careful with that one,\" Andy said, his voice quiet enough that the conversation was just between the two of them. \"I'm not saying she's a gold digger but...\"\n\n\"But she ain't messin' with no broke,\" Watkins said, laughing a little bit. \"I hear you. I think she'll be alright, though. She'll have her own little staff to boss around. Maybe having her own private fiefdom will tamp down her more destructive urges.\"\n\n\"For your sake I hope so.\"\n\n\"So, we have one more matter to discuss I'm afraid, Andrew.\" Watkins sighed, shaking his head a little. \"I'm afraid I can't bring you Deborah Barnes, and for that I'm truly sorry. My son, it seems, imprinted her while I was at the poker game. I can't tell you how furious I am with him.\"\n\n\"Hey, it's okay, Nathaniel,\" Andy said, almost a touch relieved. \"This is already a lot of women to keep track of, so I'm not angry about having one less.\"\n\nWatkins shook his head. \"Except that I can't let my son go unpunished for this kind of transgression. If the damn kid doesn't learn that he can't go around doing whatever he wants, that's exactly what he's going to do, so what I'm going to do is have him bring the next woman assigned to him over here and have him give her to you.\"\n\n\"Nathaniel,\" Andy tried to interrupt, \"that's really not--\"\n\n\"It absolutely is, Andrew. He's nearly eighteen, and if he doesn't learn now, then when?\" It was clear Watkins was violently unhappy with his son over all of this. \"His refusal to follow agreements doesn't just reflect on him; it, more importantly, reflects upon me, and once the other men in this community find out, if I haven't come down hard on the boy, they're going to think I'm soft. I cannot abide that.\"\n\n\"How would they even know?\"\n\n\"Because! Because, Andrew!\" Watkins said, throwing his hands up into the air. \"Because he likes to strut around town like he earned my wealth, not me! All it would take it for one of our little poker friends to see Deborah with him and they'll know something is amiss and the gossip will start. I'm going to get ahead of this, and will tell our fellow players all about it before they find out inadvertently. Later this week, my son is going to be delivered a girl he has been lusted after for nearly a year now, and then he's going to have to immediately march her over here and present her to you, as means of apology.\"\n\nAndy sighed, trying to figure out what to say next and failing a few times before finally deciding to stop resisting. It was clear Watkins mind was made up. \"Is the lady going to be okay with this? I'm sure she'd much rather have a teenage boy instead of, well, me.\"\n\n\"She'll probably be relieved, if I'm honest, Andrew,\" Watkins said, lowering his voice a bit. \"She was Benny's AP Trigonometry tutor last year, and has been helping him with remote tutoring this year for AP Calculus. She was supposed to be a freshman at Stanford this year, but what with the campus closed down, they haven't started classes up, so she'll be going next year when they reopen. I think my son may have hit on her a few times, but she'd declined his advances, so you taking her in is in her best interests, as well as yours and mine. I suppose the people on the base thought they were doing me a favor by assigning her to my son, knowing his lusts for her. They weren't, and hopefully this will discourage them from helping my son any in an attempt to broker favor with me. My son will have something both for you and for her with him as well when they show up Friday, on the 6<sup>th</sup>.\"\n\n\"Okay, well, if she doesn't want to be with him, we can see if she wants to be with me instead.\"\n\n\"She will, Andrew,\" Watkins said, a hint of amusement in his voice. \"She likes older men. She hit on me once during The Before Times, but back then I believed I was a one woman kind of man, and I didn't want to hurt my son's feelings. She is... quite beautiful, and obviously very smart. She likes intelligent, strong willed, dependable men. She might be initially fooled, as I was, by the appearance of meekness you can give off on first impression, but I'll tell her in the car ride over that you're not a man to be underestimated. Covington's made that mistake. I have as well. I won't let my son do the same.\" He tilted his head to one side. \"I suppose it would be too much of me to ask for you to make him ... watch as you imprinted her?\"\n\n\"God yes! Nathan! Jesus, how can you even suggest such a thing?\"\n\nWatkins sniffed, clearly disappointed. \"Fine, fine. Then I insist you open and read the envelopes that Benny, that's my son's name, will be bringing with him when he shows up on Friday. Make sure he stands there as you tell him exactly what's in them.\"\n\n\"What *is* in them?\"\n\n\"A little bit more punishment for him, and a little more compensation for you,\" he said. \"I won't let you refuse me this, so you'll just have to abide by it, but once you accept the envelopes and Hannah, that's the girl's name, once you accept all of that, I will consider the boy's debt paid in full. I'm sure he's going to bitch and moan about it, but the little brat is lucky I didn't just throw him out on his ear, out of both the family and New Eden. But he is my only son. Maybe I've simply been too lenient in the past, and it is time for him to get the stick instead of the carrot.\"\n\n\"Family's a bitch,\" Andy said.\n\n\"Indeed it can be.\"\n\n\"Nate, I want to leave!\" Erin said, poking her head out of the back of the limo. \"Can we go now?\"\n\n\"I've made a horrible mistake bringing her into my house, haven't I?\" Watkins said, giving Andy a pained smile.\n\n\"Give her her own wing of your mansion and some staff to boss around, like you said you were going to, and you'll probably be fine,\" Andy said, shaking the man's hand. \"Just don't let her think she's in charge of the rest of your wives. Give her an inch and she'll take every mile she can.\"\n\n\"You're too good for this place, Andrew,\" Watkins said, returning the shake. \"May this nest of vipers never break your noble spirit.\"\n\n\"You say that,\" Andy laughed, \"but I've got to go upstairs and fuck two people off People Magazine's Top 100 Most Beautiful People list at the same time after we're done here, so if this is a nest of vipers, I gotta tell you, they spared *no* expense on the gilding.\"\n\nWatkins laughed with him, heading towards the limo. \"I'll see you on Friday, then. I'll bring Benny and Hannah over myself, just to make sure he doesn't try and screw this up too.\"\n\n\"They never would've worked together anyway,\" Andy said, as Watkins stopped at the limo and looked back. \"Benny and Hannah? People would've been making horrible Japanese steakhouse jokes at their expense non-stop their entire lives.\"\n\n\"God, you're right,\" Watkin said, a wide smile on his face. \"I can't believe I didn't even think of it before now.\" He started to get into the back of the limo, sitting down next to Erin, shaking his head. \"Benihana's. Fuck *me*.\" And then he closed the door and the limo drove off.\n\nThat left Andy with Niko and Aisling, who had been watching the whole time.\n\n\"I live the weirdest life on the planet,\" Andy said to them, walking back up the stairs. It looked like each of the girls had taken one suitcase with them, but left three more each on the patio. \"Guess I'd better haul these in.\"\n\nHe started to move towards the suitcases, but Aisling had stood up already and stepped in between him and them. \"Nah, we got it, Starfucker,\" she said, pushing him by the chest. \"You've gotta go lock in those two beauties before they run off.\"\n\n\"Yeah,\" Niko said, moving to stand next to Aisling, blocking Andy's path to the suitcases, leaving only the door inside the mansion as his exit. \"I wanna a turn in the sack with Emily, but you need to make her part of the family first.\"\n\n\"Someone's got a crush, I think,\" Ash said, nudging Niko in the ribs.\n\n\"Are you kidding?\" Niko said. \"Seeing her in that fourth Dagger Academy movie, 'Castle of Galaxies,' when she was in that evening gown for the school ball...\" She shook her head, a little embarrassed smile on her face. \"Well, that's when I realized I was bi.\"\n\n\"Maybe if you ask her really nicely, she'll wear the gown for you, love,\" Ash said to Niko, who visibly shuddered with excitement, playing out the moment in her head.\n\n\"Go on, go!\" Niko said to him. \"We'll crash in another room for the night if we have to, so you damn well better not come out of that room until both of those girls are imprinted, or I will beat the living shit out of you.\"\n\n\"Yes ma'am, 2<sup>nd</sup> Lieutenant Red Wolf,\" Andy said, mocking a salute, which made her smack him on the shoulder. \"God, I hope I don't get performance anxiety.\"\n\n\"You're not the third guy in 'History Of The World Part I,' Andy,\" Niko said.\n\n\"He is a eunuch,\" Aisling said, acting out the bit.\n\n\"*He* is a eunuch,\" Niko said, continuing it.\n\n\"He is *DEAD*,\" the two girls said together, collapsing into a fit of giggles.\n\n\"Now go in there and give those two beauties the best fucking orgasms of their lives,\" Aisling said, grabbing one of his belt loops on his jeans, yanking him towards the doorway.\n\n\"How did I ever get so lucky?\" he said, kissing Niko, then Aisling.\n\n\"By being the best damn man any of us have ever met,\" Niko said, rubbing the back of his neck.\n\n\"I love hearing you say that. I'm sure it's not true, but thanks.\"\n\n\"It is,\" Ash said, \"but we're not gonna stand here all night stroking your ego. If you don't go upstairs and fuck those two lucky bitches senseless right now, I'm going to have Niko kick your ass.\"\n\n\"Okay! Okay!\" Andy laughed. \"I'm going, I'm going!\"\n\nHe hadn't been entirely joking about the possibility of having trouble getting it up, not because he didn't want to, but because he still considered himself way below their league. Each step through the hallway, up the stairs and down the other hallway were slightly plagued with nervousness. But all that of that was dropping away with each step, as he remembered that kiss from Sarah, how intense and inviting it had been, and that minx-like smile of Emily's, toying and yet also welcoming, maybe even laced with a hint of thankfulness.\n\nA few hours ago, he'd been terrified that he'd end up striking an adversarial relationship with these two supremely talented actresses, and now he was worried that he'd not live up to their expectations. Their expectations. Of *him*.\n\nThe life he lived was not meant to be believed.\n\nAs he got to the door to the bedroom, he cocked his head, finding the door closed, something rather uncommon in the house. He'd never felt the need to close the master bedroom door before now, so he thought this might even be the first time he'd seen the door actually closed.\n\nHe was about to knock on the door, his hand raised, about to rap his knuckles on the wood, when he looked at his own hand quizzically. \"The hell am I doing?\" he muttered to himself and then moved to open the door.\n\nThere, on the bed, were Sarah and Emily. They were locked in a kiss, Emily sitting on Sarah's lap, the tiny girl's hands tugging ever so slightly on the unbraided portion of Sarah's red locks, their lips pressed together heatedly, making out as though they hadn't even heard him enter.\n\nThey'd also changed clothes since he'd seen them just a little bit ago. Both girls were dressed in white Oxford button up shirts, violet and purple neckties loose but still hanging around their necks, black skirts that hung down to the middle of their thighs, black thigh high stockings with violet and purple trim at the top of them clinging to their legs. They looked a little like British private school uniforms, but Andy knew that specific color code of trims. They were Dagger Academy uniforms.\n\nThe Dagger Academy movies had been oddly huge successes, following five different students growing up through several years of a bounty hunter college, set in a land \"across the stars.\" The first one had been expected to do alright, but the five lead actors, one of which was Emily, had all been so winningly charming, that audiences had looked past the sometimes clunky special effects and fallen in love with the story.\n\nFrom the time she was thirteen until she was twenty-three, Emily had starred in six Dagger Academy movies, and all said and done, they'd grossed over a billion dollars. He was more than a little surprised she was wearing the school outfit from it now. He'd figured she'd never want to even think about those films again, considering how much of her life they had eaten up.\n\n\"Oh, Professor Rook,\" Emily said, looking over her shoulder at him, still grinding a little bit against Sarah. \"Miss Heartseye and I seem to have been bitten by a... what was it?\" She nudged Sarah.",
        "Sarah giggled a little, licking her lips, her blue eyes fixated on him like she wanted to eat him alive. \"By a roxtreaux beast,\" she purred. \"It's so fucking hard to think straight right now, Professor.\"\n\nAndy's eyes widened a little bit. She hadn't been kidding. She actually *had* found that story he'd written early on in the pandemic, months before even Aisling had come into his life.\n\nAfter about two months of quarantine, Andy had gotten frustrated with trying to work on another Druid Gunslinger novel, and had decided what the hell, to write a bit of porn fanfic, just to flex his writing skills, something to take his mind off of the whole lockdown. He'd written a bit of fanfic set in the Dagger Academy series, sometime after the last movie, when Dahlia Hairtrigger's boyfriend had died heroically saving the galaxy, leaving her to go her last year at the Dagger Academy alone.\n\nHe'd introduced a new friend to Dahlia, a woman named Raven Doomeye, but he'd clearly described the character very much like how Sarah actually looked. In the fanfic, the two bounty hunter students had been out on a wild hunt after a target, who'd sicced a herd of wild roxtreaux on them. The roxtreaux, as he'd written it, disarmed their prey by injecting them with an aphrodisiac venom that fogged their minds with lust. It had mostly been an excuse to write a bit of porn using a handful of his favorite actresses, starting off as a lesbian scene between Hairtrigger and Doomeye until a member of the school faculty, Professor Deathwhisper, came to save them. Deathwhisper was an invented character as well, and he'd modeled her after Alice Karteaux. He'd thought about introducing a male proxy for himself in the story, but decided just to let it lie as it did, posting it to some random corner of the internet under some silly name he'd made up. He'd never expected anyone to actually read it.\n\nIt seemed like both Emily and Sarah had read it, but read that story very well, because they had the details down to a tee, even going to far as to have Emily's shirt with a jagged rip just above her waist on one side, a rip in Sarah's left stocking just above the ankle, both the places where the roxtreaux had bitten them in the story. Emily turned on Sarah's lap, her back to her girlfriend's chest, rolling her hips in his direction, that skirt still concealing most of her legs from him. \"You have to help us, Professor,\" Emily whimpered. \"I don't want to die here on this desolate rock, before I've even finished school.\" She raked her nails along the back of Sarah's neck, her other hand smoothing along one of her own thighs, tugging a little on that skirt, as if she was torn between trying to pull it down or up. \"But I feel so very strange, like parts of my body are on fire. My naughty parts especially.\"\n\n\"Well, Miss Hairtrigger, the only antidote to roxtreaux venom is to ride it out,\" Andy said, stepping into the room, closing the door behind him. He tried to affect a British accent, but immediately abandoned it, deciding just to stick to his own voice. \"Vigorous exercise will help, as it encourages the body to fight off the neurotoxins.\"\n\nEmily nodded, her face a contorted mix of fear and lust. \"Just tell us what to do and we'll do it, Professor. Whatever it is! You're our only hope.\"\n\n\"Just remain there for the moment, and I'll begin administering some treatment,\" he said, moving to the edge of the bed, sliding down onto his knees, as he made sure both Sarah and Emily had their legs spread, his hands slowly pushing up Emily's skirt, revealing that alabaster flesh of her thighs before exposing that she hadn't put on panties, a small brownish triangle of curls atop her dripping wet pussy. A lesser man might've thought Emily dyed her blonde locks, but Andy knew better, himself a blonde (when he wasn't shaving his head, which was almost never these days) with brown pubic hair. \"Remember, whatever you feel, it's perfectly natural,\" he said, as he lowered his lips down to flick his tongue along her snatch.\n\n\"Oh. OH. OH my!\" she groaned, her hips pushing up towards his face, as he sunk two fingers inside of her cunt, his tongue continuing to draw shapes along her clit. \"Fuck, Professor! You're... quite the cunning linguist!\"\n\nAndy almost wanted to groan at the pun, but decided instead to focus on the work in front of him. When Emily had said her last boyfriend hadn't gone down on her, Andy had almost taken offense to that, and decided it was going to be the first thing he did with her. He could feel her body squirming and writhing against his face, her hands moving to hold onto his head. Her whole body erupted in a quick spasm when he dragged the soft hairs of his goatee across her clit, her thighs clamping on his ears for a moment. She kept him pinned there for several seconds before she relaxed a little bit, whimpering in tiny little chipmunk squeaks. \"Fuck, sir, that was amazing,\" her British tinged voice purred at him. \"I've never cum so quick before. You're *very* good at that...\"\n\nHe looked up from between her thighs, noticing that somewhere in the middle of it, Sarah had unbuttoned Emily's shirt, opening it, although the tie still remained dangling around her neck, resting between her small, pert tits. Emily brought a hand up, folding an arm across her chest, a touch self consciously.\n\n\"They aren't as large as they should be, sir, I know,\" she said, looking down. He couldn't tell if she was still playing a part, or was genuine nervous about how he might look at her body. He wanted to put that to rest as quickly as possible. Andy stood up, moving in closer, lifting Emily's chin up, turning her eyes back to his, as he pressed a kiss to her lips, letting her taste herself on his face.\n\n\"You are perfect exactly as you are,\" he said, \"both of you.\" He moved to one side and leaned in to kiss Sarah, as he felt Emily's hands unbuttoning his jeans. \"Any man who's told you that you need bigger tits can come tell me, and I will beat him to a pulp before of your very eyes, or fall trying.\"\n\n\"Can we have more, sir?\" Emily asked. \"Of you?\"\n\nSarah nodded enthusiastically. \"I fucking want some too. My brain's on fucking fire.\"\n\n\"Alright, but let me tell you this,\" Andy said, trying to weave his knowledge about the vaccine into the storyline they were playing out. \"Whoever goes first in getting a dose of serum will be completely unable to help the other when it comes to her turn. Once you get your dose, you will, ah, go into a healing coma, which will burn the last of the neurotoxin from your system. You two are such close friends, you should decide who you want to get dosed first, and whom you want to go second.\"\n\nHe took a step back and Emily slid off Sarah's lap, moving down onto her knees in front of him, before she pulled the giant redhead down to join her. They made such a contrast, the blonde and the redhead, the pixie and the amazon, but the one commonality they shared was that utter adoration they had for him in their eyes.\n\nEmily tugged his baggy jeans and boxers down to his knees, letting his thick cock spring free and slap Sarah in the face, causing the redhead to giggle fiercely, her nose scrunching up in amusement. \"Quite the weapon you wield, professor,\" Emily said, reaching up to give his fat dick a soft stroke, moving it to keep it away from Sarah's lips. \"I heard a rumor from a member of the faculty, Professor Red Wolf, sir. About the very first taste of the serum. Is it true? Let's find out!\" she said with a giggle.\n\nAt that, Emily held onto his cock by the base with one hand, her other hand moving to grab Sarah's head, pushing the redhead's mouth onto his shaft, that large dollop of precum dripping onto Sarah's tongue as soon as her lips enveloped his cock.\n\nThe minute that precum hit her tongue, Sarah's hands clamped onto his hips, and her body immediately began vibrating like she'd just been hooked up to a car battery, her blue eyes rolling back into her head as a gurgling moan chirped in staccato bursts of sound that buzzed along his cock, her lips refusing to give even a millimeter of space between them and him.\n\nAfter several seconds, Sarah's breathing resumed a more normal rhythm and she forced her blue eyes open once more, looking up at him, tears at the edges of them, as she slowly pulled her head back to let her lips pop off his cock. \"Oh. My. Fucking. God,\" she whispered. \"What the fuck was that, Ems? What the fuck just fucking happened? How did that make me cum so fucking hard? I'm still fucking shaking. What the literal fuck?\"\n\nEmily giggled again. \"Oh my god, it's true, it's actually fucking true. Let me have my first taste,\" she said, cradling his balls with one hand, stroking his shaft with the other, coaxing another droplet of precum to the tip of his dick. As soon as that milky white pearl emerged, she pushed her mouth over the head of his cock, not taking it deep, mostly just keeping the first few inches past her lips as her tongue swiped along the tip of his cock, gathering up that taste. As soon as her tongue lashed along that dollop, he felt her tiny body lock up, her finely manicured fingernails sinking hard into his ass, her eyes looking up at him, almost in deification, worshiping the sight of him while the orgasm shredded through her, Sarah looking on, somewhere between concern, fascination and jealousy.\n\n\"Is it... is it always like this?\" Sarah asked him, as Emily finally started to come down from her initial taste, both women now primed to him.\n\n\"The first orgasm is always the strongest,\" Andy said to her, his hand stroking along the top of her head, as she turned to look up at him. \"Other than the imprinting orgasm, which all the girls have described as something unlike anything they've ever encountered. But I think Ash told me that all of her orgasms now are about ten times stronger than they were in the Before Times. Niko and Lauren both said that was about right. Niko's said a number of times that she never knew what cumming was like before me.\" He chuckled softly. \"I wish I could say I was that good, but I think it's mostly the vaccine.\"\n\n\"Less men, better orgasms, the new world has so much to offer women...\" Emily moaned, reaching over to unbutton Sarah's shirt. Neither girl had put on a bra, and Andy was a little surprised that Sarah's breasts were plumper than he'd thought, rounder and fuller with large aerolas and stiff pink nipples standing at attention. She'd never done a nude scene before. Neither of them had. And now, here they both were, in a half-state of undress. \"Sares, do you want to go first?\"\n\n\"Totally, but I don't fucking know if I can, Ems,\" Sarah said to her. \"But I think I fucking have to, I think I have to fucking go first, so I'm fucking locked in, so I can't back down. I'm just fucking scared I won't be good enough for him, that he won't fucking love me like I fucking love him. He's, like, my fucking hero, as a writer.\"\n\nAndy wanted to point out that both of the women were already completely locked in *now*, having gotten a taste of his semen to prime them for imprinting, but was afraid that might make things even more awkward for them, so he kept quiet.\n\n\"It's okay, Sares, it's fine, it's fine, it's absolutely fine,\" Emily said to Sarah. \"I'll be with you the entire time. Here, I know what we can do.\" She stood up again, pulling Sarah to her feet with her. The two of them moved around Andy's body, turning him around so his back was towards the bed, then Emily pushed him sharply, forcing him to fall onto the bed face up. \"Climb on top of him.\"\n\n\"Ems, I'm... I'm not fucking sure...\"\n\nEmily stepped in behind her and slipped one of her hands up and under Sarah's skirt, rubbing her hand against the redhead's pussy beneath the fabric, obscured from Andy's view. \"Sares, you are literally drenching my hand right now. You nearly fingered yourself until your hand dropped off after that time at the convention, and now, here he is, the man you wanted, and he's told you, quite explicitly, that he wants to fuck you. Now get out of your own way and climb atop that cock of his. This is your favorite dream. Look at him.\" Her other hand reached up and grabbed Sarah's hair, forcing her to look at him, while Emily carried on, her posh English accent almost making her seem even more dominating. \"He wants you, you daft bitch. He's probably jerked off thinking about you, haven't you, Andy?\"\n\nAndy reddened a little bit, then nodded. \"More than a few times.\"\n\n\"You see?\" Emily's grip in Sarah's hair loosened a little bit, and Andy could see the lust building up behind Sarah's dark blue eyes, rising up to meet the levels of love already present there. \"I'll do you one better. I'm going to give you to the count of five to get on top of the love of your life, and if you don't, I'm going to fuck him first, a fact I will surely lord over you for the rest of all our days.\"\n\n\"Oh my fucking god, you totally would, wouldn't you, you bitch? The number one person on my 'I Wanna Fuck So Bad' list, and you'd totally fuck them before me, wouldn't you? I so fucking hate you right now!\"\n\n\"Five...\"\n\n\"You know I'd totally hate you, like, forever and longer.\"\n\n\"Four...\"\n\n\"Four?! It was just, like, five, only a second ago.\"\n\n\"Three...\"\n\n\"Oh no you fucking don't,\" Sarah said, tugging Emily's hand out from under her skirt. \"You can have him after I've fucked him. He's mine first.\"\n\nSarah slowly peeled away from Emily and moved one knee up on one side of Andy's thighs, bringing the other up to straddle him, leaning over him, her heavy tits swinging beneath her, her eyes holding on his face.\n\n\"That's okay, isn't it, Andy?\" she said, bending down to kiss him. \"That I want to be here?\" She kissed him again. \"With you?\" Again, only longer. \"That I love you?\" She wriggled her hips, and he could feel her reaching down beneath her skirt to grab his cock, rubbing the tip of it along her pussy. \"That I wanna fuck you?\"\n\nEmily peeled off her shirt, but left the tie hanging loose around her neck, as she crawled up on the bed alongside Andy, turning his head one side so she could take a turn kissing him. \"That *we* want to fuck you,\" she said. \"For ever and ever...\"\n\n\"That's totally okay, right?\" Sarah said, turning his eyes back to her. \"Because if it's not, then, well...\" she said, pausing for a second, breaking eye contact for a moment before their eyes met again, resolve hardening behind them, \"then I guess it's better to beg for forgiveness than to ask permission.\" Her hips slammed down on top of his, punching his cock deep into her drenched cunt, a sluttish moan bubbling up from her throat. \"'Cause momma's gotta fucking eat. Fuck, you feel too fucking good. Shit, I'm fucking cumming already, shit shit shit shit shitSHITSHIT!\"\n\nSarah's fingernails raked hard against his chest, not quite deep enough to draw blood, but enough to raise red lines of tender flesh, visible through the dark thatch of blonde curls on his chest. Her eyes watered up as she trembled atop of him, her head thrashing about to make those coppery curls swipe back and forth like a matador's cape in the wind. For several seconds, she just stayed there, impaled on his cock, vibrating in quivers, until finally the sensations eased up and she leaned forward, Emily reaching to wipe the tears from Sarah's eyes. \"You okay Sares?\"\n\n\"This is the greatest fucking day of my life,\" she whimpered, her voice tiny and dumbstruck. \"But I need more. I want more.\" She looked down at Andy, then leaned in to kiss him. \"I need to feel more than just that oh so fat dick of yours inside me. You know what I fucking need, don't you?\" Her lips kept returning to his in between every sentence. \"I need you to pump a hot load of jizz right inside of my cute little fuckhole.\" This time she lifted her head up and kissed Emily right in front of his eyes, their tongues tangling up, until Emily tilted her head a little, and leaned them both down, until all three of them were kissing in one big mess, a weave of tongues and lips.\n\nSarah started to grind her hips on his lap, finally leaning back until she sat upright, and Andy could place his hands on her body, one on her hip, the other over one of those round tits of hers, feeling her nipple hard as a rock against his palm.\n\n\"Tell me I'm pretty,\" she pleaded to him.\n\n\"You're fucking gorgeous,\" he told her.\n\n\"Tell me I'm smart.\"\n\n\"Brilliant, witty and charming.\"\n\n\"Tell me that it's okay that I'm a big dork.\"\n\n\"I *love* the fact that you're a big dork.\"\n\nShe bit her bottom lip nervously, glancing over at Emily, who nodded to her with that coy smile of hers. \"Tell me I'm *your* big dork.\"\n\n\"You're my big dork,\" Andy laughed.\n\n\"Again,\" Sarah said, starting to ride him harder, her ass smacking down on the tops of his thighs each time she bucked into him.\n\n\"You're *my* big dork.\"\n\n\"What am I?\"\n\nEmily squeezed his shoulder, nibbling on his ear, her teeth tugging on his earlobe. \"Say it. She wants to hear it. Cum in her tight little pussy and say it.\"\n\nSarah's rhythm was frantic now, her cunt clamping and squeezing on his cock, trying to get that release from him, her hair a complete mess now, the braids having partially come undone, threatening to spill everywhere, her hands on his chest making her arms press her tits together, as if presenting them for him to see, her deep dark blue eyes never once looking away from him, imploring him, as if she wanted something she couldn't bear to ask for.\n\nThe image was so erotic, Andy knew he couldn't resist, not that he wanted to. So when he felt that tightening up in his body, his hands grabbed onto her hips and held her down, his cock impaled hilt deep inside of her snatch beneath that skirt, as his green eyes held her gaze, while he said \"You're *mine*.\"\n\nAt that last word, his balls drew up and his cock blasted Sarah's snatch so full of cum, he was certain he could feel it dripping out onto his balls, seven or eight squirts of heavy cream inside of her, her eyes immediately rolling back in her skull, as she flopped atop of him like someone had just flipped a switch inside of her and turned her off. Andy barely had time to pull his head to one side so that Sarah's face fell safely into the pillow, her tits mashed against his chest, as she started mumbling \"imprinting\" over and over against into the pillow.\n\n\"Oh my god,\" Emily whispered into his ear, \"that is the hottest fucking thing that I have ever seen with my own eyes.\" Emily reached up and brushed part of Sarah's hair out of her face for her, seeing her muttering. \"How long is she going to do that?\"\n\n\"For a couple of minutes,\" Andy said, slowly moving to roll Sarah off him, laying her down on the side of him opposite of Emily. The skirt had hiked up and he could see a small landing strip of copper curls above her snatch, so he tugged the skirt back down for her. \"Then she'll just fall very still. She'll wake up in about twelve to sixteen hours.\"\n\n\"That's all it takes?\" Emily said. \"Now she's just permanently bonded to you forever?\"\n\n\"Well, not forever, I'm sure,\" Andy said, as Emily moved him so that each of them were laying on their sides facing each other. He must've looked a little nervous, because Emily took one of his hands in hers and interlaced his bulky fingers with her slender ones. \"I'm sure once we're out of this crisis, science will come up with some sort of solution so that people aren't quite so chemically dependent on each other, but for the time being, yeah, she's bonded to me, and she'll need to absorb some of my cum once every couple of weeks.\"\n\n\"That won't be a problem,\" Emily giggled. \"She's a wildcat. I swear to God, she might even be a nymphomaniac, not that you'll mind, although you're going to have to go with us on movie shoots from now on. We'll work it all out, I'm certain.\" She leaned in and pressed a tiny kiss on his nose. \"Ready for me yet?\"",
        "\"I don't think you've met a man in your entire life who's been ready for you,\" he said, which made her laugh in amusement. \"Me included. You're really sure you're okay with all of this?\"\n\n\"Can I tell you a secret?\" she said, that impish smile widening on her face a little bit. \"I sort of help set all this up.\"\n\nAndy narrowed his eyes. \"I don't know how that's even possible.\"\n\n\"When Sarah and I arrived on the base two weeks ago, we were put in a sort of group quarantine, and were mostly only allow to see people who had already been vaccinated and were with partners, a few staff members aside. Sarah was very nervous that someone would find out we were together, so we just acted like acquaintances, actors who didn't know each other but knew of each other,\" Emily said, not letting him pull his hand away, in fact bringing it to rest on her chest, just above her heart. \"So while Sarah was having panic attacks and thinking our lives were over, I got to know some of the people who were on guard duty for us.\"\n\n\"Niko...\" Andy groaned, grinning in spite of himself.\n\n\"Well, yes, Niko, but not *just* Niko,\" Emily said. \"Also, I met one of Mister Covington's family, Rachel. And so I hatched a plan.\"\n\n\"I don't understand why you even needed to,\" Andy said. \"They partner you women up with men you want to be with, don't they?\"\n\n\"Is that what they've told you?\" she gasped. \"No! Oh my god, no! No, that's not it at all, Andrew. I mean, it might have started that way, but since the foundation of New Eden, any woman that a man wants and asks for is brought here and imprinted, to be part of his new family. Maybe that's not true for all of the women, but it most certainly is for some of us! Did... did you really not know that? Have you truly not asked for anyone specific?\"\n\n\"I didn't even know that I could, not that I think I would. Why wouldn't Niko tell me that?\"\n\n\"Maybe she doesn't even know,\" Emily said. \"We were told not to talk about the process at all, to anyone. But I'm a little busybody, so I poked around a bit, and Rachel told me a lot more than I think she intended to. I also talked to Niko about the various men who were in the community already. She said she really didn't know that many of them, other than her partner and his friends, so I asked her to tell me about them.\"\n\n\"Oh lord...\"\n\n\"Once I found out you were, well, *you*, and that Niko had such a high opinion of you ... you really should marry all of your girls, Andrew, but my God, would Niko especially do literally *anything* for you ... I decided that I had to get Sarah into your family, no matter what. I knew how she felt about you, and if she'd found out you were here and she couldn't fuck you, well, it might've sent her into an uncontrollable spiral of depression, and I would not allow that to happen. She's had struggles with depression much of her life, and her love for you is deeper than the Pacific. If I could get myself into your family as well, all the better, but if Sarah and I simply lived in the same town, even with different male partners, we could still be together regularly enough, so I had to ensure she made her way to you, and that was the bare minimum of what I would accept.\"\n\n\"What did you do?\"\n\n\"So Rachel controls the distribution process at the vaccination center. She determines how women are sent to their partners and at what speed. She is also, like, the biggest Dagger Academy fan, thank god for that. I got all of this done with just a few autographs and a few selfies with her. I don't like trading in on my fame, but I decided that just this one time, I would bend my moral compass, to ensure that Sarah and I weren't miserable.\"\n\n\"What does that mean?\"\n\n\"It means, I convinced Rachel to send out women in batches of two, because the other thing Rachel had told me was that her partner, that prick Covington, liked to gamble with women, so I made sure that he would see this as an opportunity to hold one of his poker games, and that both Sarah and I would be available as prizes in them. Niko said you'd never been invited to one before, so I also needed to make sure there was a reason for you to get involved.\"\n\n\"Christ, if I'd have known you and Sarah were in it, I might have gone in on that alone.\"\n\n\"Oh, bless Andrew, but no, you wouldn't have,\" Emily said, kissing his nose. \"You're too scrupulous. Niko made it exceptionally clear to me that you saw your partners as people not property, another part of the reason I so wanted to ensure Sarah made her way to you. But that meant convincing you that you were rescuing someone, and hoping you would also give in to temptation when it was presented to you on a silver platter. So when they started vaccinating us all with the inoculation, I bumped that doctor, Charlotte, and made her accidentally inject herself. That meant she had to get partnered up with someone within a few weeks, and I knew that Charlotte wouldn't leave her daughter behind. I also knew that Charlotte was a friend of Niko's, and that Rachel had been told by Covington to watch out for a mother-daughter pairing he could get his hands on, that sick fuck.\"\n\n\"This is like some kind of fucking heist movie!\" Andy said in amazement.\n\n\"What I didn't know was that Charlotte was so heartbroken over the death of her husband, that she wouldn't care who she was assigned to. I had wanted Charlotte to be assigned to you and her daughter to be assigned to Covington, so you would feel the need to rescue her daughter and when you did, you would likely also take Sarah and I.\"\n\n\"What the hell happened?\"\n\n\"Rachel got them both assigned to Covington instead, but thankfully, Niko decided on her own that she was going to make sure you were at that card game to rescue both of them, because she and the Doctor had become work friends. Niko convinced Rachel that you were a great cardplayer, and also made sure that one of their usual players dropped out. She's quite clever, your girl. I also put a bug in her ear that if she thought you were such a wonderful man, maybe you should consider trying to get Sarah as well.\"\n\n\"You didn't mention yourself?\"\n\n\"I didn't want to overtax you, but I hoped that maybe I might be pretty enough to pull your eye.\"\n\n\"Every woman here is pretty, Emily,\" Andy chuckled. \"But you're also clever and well-rounded. I've seen some of your interviews, and you're a very thoughtful person. I couldn't bear the thought of you being stuck with someone you hated. That's why I brought you here, so that if I wasn't your type, you could bond with one of my friends instead.\"\n\n\"Oh, I know, I know, Andrew,\" she said, kissing him again, just for a moment. \"And I love that about you. You're a fundamentally good person at heart.\"\n\n\"You only had Niko's word for that.\"\n\n\"Well, no,\" she said, squeezing his hand again. \"I also talked with your ex quite a lot. Everyone looks at me and thinks 'oh, she's so friendly, I'll just talk her ear off,' not realizing I'm taking all of that in and using it for my own advantage.\"\n\n\"You're like Littlefinger.\"\n\n\"Oh, except I won't get caught with my hand in the cupboard, love,\" she giggled. \"And I use my manipulation powers mostly for good.\"\n\n\"I can't imagine Erin had much good to say about me, though.\"\n\n\"It wasn't what she was saying, it was how she was saying it.\" Andy obviously looked confused, because Emily continued. \"She told me that even when you broke it off with her a decade or so ago, you spent so much time telling her why it wouldn't work, what was wrong with your relationship, how she wanted something different than what you were. And even while she was complaining that you wouldn't do what she asked, I could hear her telling me again and again that even though she'd done such horrible things to you, you were still trying to *help* her. If a man will do those kinds of things for a woman he used to love, imagine what he'll do for a woman he currently loves, I thought.\"\n\n\"Heaven and Earth...\"\n\n\"Precisely. By this point, Niko and I had become friends, so when she told me that she had set up a plan to get you invited to the card game, I knew that *my* plan was working and that you would get Sarah into your family. If the doctor and her daughter hadn't been enough of a convincer, I was going to go to Niko and tell her that I also needed rescue, but it didn't come to that, thank god. Still, little did I know you were going to muck all of my meticulous planning on the day of!\" she said, laughing.\n\nAndy's eyebrows raised even further. \"I'm... sorry? ... How did I muck it up?\"\n\n\"I had convinced Rachel to talk Covington's usual dealer, a girl named Veronica, into cheating on your behalf. It was a chance for Rachel and Veronica to get back at Covington for how he'd been treating them. Veronica would help you with key cards at pivotal moments, so that you would finish first, and thus have the pick of the women. Knowing that you would get five women in first place, I felt confident that you would pick Sarah in addition to the Doctor and her daughter. If I got included also, all the better. But as Mr. Watkins told me on the ride over...\"\n\n\"...I convinced them not to use her as a dealer, because I was afraid she might cheat *for* Covington. Oh god, I'm so sorry.\"\n\nShe giggled furiously, her face scrunching up in amusement. \"I mean, I'm not angry. It's fine, it's fine it's fine it's fine. You're even a better card player than Niko said you were, apparently. Sarah made it here, I made it here, the Doctor and her daughter made it here. Everything all worked out in the end. You're crazy principled, but I admire that about you. Sarah is now with the man she loves, and I'm falling in love with that same man myself more every minute.\"\n\n\"The Doctor won't be staying, though.\"\n\n\"Oh no!\" Emily said, genuinely looking a little saddened by the news. \"Why not?\"\n\n\"She's not into white guys.\" That made Emily smirk. \"So my friend Phil Pak will take her in, although her daughter Asha's staying here. The good Doctor didn't think it wise for a woman to be paired with the same man her mother's paired with. She'll still be around regularly, though, as Phil and I see each other at least once a week.\"\n\n\"My goodness, I must say I rather agree with her assessment,\" Emily said. \"Now, not to be too blunt about it, but I rather think you'd better get around to fucking me rather soon, don't you? Pardon my coarse language.\" At that, Andy had a good open laugh. \"What's so funny?\"\n\n\"So you may have spent a lot of time talking about me with Niko, you must've never once asked her about what I like in bed, because she would've told you one thing first and foremost...\"\n\n\"What's that, soon-to-be husband-of-mine?\"\n\nThat took Andy aback for a second before he said, \"Women who swear are my biggest turn on. I love profanity, dirty talk. It revs my engine something crazy. That might've been one of the things that first turned me on to Sarah, was how casually she swore in interviews, and still made it sound so charming.\"\n\n\"Well,\" Emily said, widening her pale blue eyes for a moment, \"if that's true, then perhaps I should tell you one of my biggest turn ons in return.\"\n\n\"Oh, by all means,\" Andy said. \"I want to make sure you're enjoying it as much as I am.\"\n\n\"This does not leave our house, however, understand? What happens in our bedroom is between those of us who sleep in it and no one else.\"\n\n\"Absolutely. The things I've called my girls in bed, I'd never say that shit out in public. How we act in the bedroom isn't how we act in life.\"\n\n\"Bless your heart, Andy,\" she said, giving his hand another squeeze. \"The two biggest things I love in life are romance and sex. Sometimes I want them together, sometimes I want them apart. As long as you can respect that, we'll get on like a house on fire.\"\n\n\"As long as you tell me what you're in the mood for when, I'm happy to deliver, Emily.\"\n\n\"That's more than most of the men and women I've dated can say.\"\n\n\"Well, did you tell them?\"\n\n\"Tell them?\" she asked, cocking her head to one side.\n\n\"Yeah, tell them what you were in the mood for, when you were in the mood for it. If you don't tell your partners what you want, and when you want it, they're going to guess wrong from time to time. You can't expect me to just guess, not for a long while anyway. You'll have to tell me.\"\n\nShe looked pleasantly taken aback, then brought one of her hands up to her temple, pinching her fingers together before exploding them, a mind blown gesture. \"No! You know, I never thought of it that way! I'm going to have to do that from now on, and if I don't tell you, you must ask me, so I remember! I can be such a scatterbrain sometimes.\"\n\n\"So you were telling me about your turn on?\"\n\n\"Oh. Yes.\" She smiled, almost as if she realized she'd gotten off track. \"Sometimes in bed, I just want to be plowed. Drilled. Hammered. Just fucked within an inch of consciousness. Tossed around the bed like a ragdoll. Not broken, mind you, but used, and still with an eye towards my pleasure also! Pull my hair. Spank my ass. Pinch my nipples. Nothing that will leave a mark, but make me feel it, like I've gotten the blood to your loins so strong, you simply have to ravish me.\" She grinned a bit. \"Sorry, you simply have to *fuck* me.\" She traced a fingertip along his cheek. \"I'll work on getting my language in line with what you like, if you can get in line with what I want. I'll never swear quite as much as Sarah does, not that I think that's possible, but I don't mind getting a bit more filthy in my language if that makes you happy.\"\n\n\"When you're happy, I'm happy,\" he chuckled.\n\n\"Great. Yes. Excellent. Now that you've hopefully had time to regain your stamina, do you think you could do me the great honor of fucking my cunt until my brains are leaking out of my ears and my legs are too wobbly to stand on?\" Her youthful exuberance, tinged with that spritely accent of hers, made it even harder for him to swallow his next breath. \"I'm rather in dire need of that right now.\"\n\n\"Start rough, finish romantic?\"\n\n\"Precisely.\"\n\n\"As you wish, m'lady.\"\n\nEmily looked over, noticing that Sarah was now completely zonked out on the bed, not even muttering any more, the imprinting process past the stage where it needed to be announced, the vaccine now making fundamental changes to the redhead's neurochemistry, giving her full immunity to the virus, but also making her dependent on Andy's cum. \"Thank heavens. I wanted her not to be talking when you and I were having our first go. It would've seemed so out of place hearing her mumbling the entire time you were ramming me. So go on, fuck me like a whore and then love me like a princess.\"\n\nAndy moved to sit up, slowly moving to climb over Emily, who began to roll onto her back, those light blue eyes looking up at him, not entirely sure what he was going to do next. Hell, he wasn't even entirely sure himself. But he had a few ideas. She'd asked for a rough start, and he was sure he could deliver, and that if he went too hard, she'd ask him to stop.\n\nHe leaned down and pressed his lips against hers, and was a little surprised by the intensity with which she kissed him back. If Sarah had been warm and soulful, Emily was hot and hungry. Her slender fingers clutched to his shoulders, her willowy arms pressed against his skin.\n\nWith a sudden motion, he broke from the kiss and flipped her over beneath him, pushing her on her belly down onto the mattress, right next to Sarah's unconscious form, her face pressed against the pillow. Once he had her prone, he pushed her legs apart, moving to rub the head of his cock across the back of one of her thighs.\n\nEmily placed one of her hands against the bed, pushing to lift her chest up off of it, but Andy took the palm of his hand and shoved between her shoulder blades and pushed her back onto the mattress, a wild, almost delirious giggle rolling from her lips as she flopped back onto the sheets. \"God yes,\" she hissed. \"Do it, you magnificent brute.\"\n\nHe grabbed onto her hips and pulled her back suddenly, pushing her knees underneath her, bringing her up to her hands and knees, pushing the skirt up and over her ass, as he shifted on his own knees, getting positioned, rubbing the tip of his cock against her pussy, not thrusting into her, even as he felt her squirming, trying to push herself back onto him.\n\n\"Come *on*,\" she whined. \"You've got me positioned like a bitch. Now are you going to fuck me like one or what?\"\n\n\"Like a whatnow?\" Andy said, grinning as he kept dipping his hips backwards every time she tried to slide onto him.\n\n\"Like a bitch, I want you to fuck me like a bitch, damn you,\" she groaned, leaning her weight against him, but he was bigger and stronger and could keep her exactly in place.\n\n\"I think you're missing a word there, and until I hear it, maybe I'll just keep on teasing you like this,\" he said, giving his hips a quick dip and thrust, so the top of his cock grazed along her slit, causing her to whine.\n\n\"A word?\"\n\n\"A word,\" he said. \"One single solitary word.\"\n\nShe looked back over her shoulder at him, her blue eyes searching in his for some direction when it dawned on her, and her smile widened. \"Oh, I see.\" She licked her lips, then nodded, more eagerly than Andy had expected her to. \"Yes yes, I can do that.\" She lifted one hand up and brushed a few stray blonde hairs that had fallen into her face behind her ear. \"I want that, so do it to me, sir.\" Her breath was hissy, tinged with a razor-edge excitement. \"Fuck me like a bitch. No, your bitch. That's what you want, isn't it? Then I want it too. Do it. Do it! Make me *your* bitch!\"\n\nOn that, Andy did exactly as she asked.\n\nHe thrust in deep and hard, his hands on her hips pulling her back onto his dick, slotting it as deep inside of her as he could, feeling her tight walls quivering, her whole body shaking when he finally pushed far enough for his balls to swing forward and thwack against her clit. On that first penetration, she trembled hard, fists balling up in clenched handfuls of sheets as her head shook from one side to the other, tossing all that hair back into her face again, as he felt her ankles pressing on the outside of his thighs, her toes curled up in the stockings before she finally inhaled a long breath, the moaned at him once more. \"Fuuuuuhhhhhuuuuucccckkkkk that feels so fucking good. I've never cum so fucking good before and all you did is slide it in... I'm going to be a goddamn addict, aren't I? Your little Hollywood whore, itching for her next fix, a fucking junkie for your spunk... god, I fucking want that... I fucking need it... I came like a trollop from you just putting that wide cock inside of me... Now I think I'm fucking cumming all over again, dammit... Carve your name in my little pussy... make it *your* fucking pussy... paint my tight young cunt white with your spunk... I fucking need it... I fucking need you to fuck me...\"\n\nAndy's hips drew back and then thrust forward again, starting a rough and steady rhythm, pulling her lithe form back into him over and over again, making sure his cock bottomed out inside of her pussy each time, his fingernails raking on her hips. He lifted a hand up to give her asscheek a slap, and felt her tighten up on his cock when that skin reddened beneath his touch. He reached up and grabbed a fistful of her light blonde locks and yanked on them to make her head lift, a sound halfway between a squeal and a giggle bubbling from her lips. \"God yes, you savage! Fuck me until I'm crying! Pound me until I feel your brand on my very fucking soul! Turn me into a rutting slut, turn me into *your* slut! Fuck me on that marvelous fucking dick! Harder, you beautiful goddamned beast! Rail me! Fuck the living shit out of me! Fuck the life from your newest whore! Make me take it all! Make me take that cum! Make me your whore!\"\n\nShe was shouting loud enough that Andy half suspected some of the girls were outside of the door, their ears pressed to the wood, listening in and maybe even enjoying themselves. Sarah had mostly kept her volume down, but it seemed like Emily had been fixated on going the other direction, almost like she wanted Niko to know how much she was enjoying herself.",
        "\"This is glorious,\" she whimpered, \"but I want it, I need it... I need to feel you cumming inside of my sweet young cunt. I've cum three or four times already while you've fucked me stupid, but you have a greedy little slut, Master, and she wants more, oh so very much more.\" She leaned her face down and kissed Sarah's unconscious lips, before pulling back. \"She needs to be part of your family, like this one is.\" Her fingers stroked ginger curls away from Sarah's face, before she looked back over her shoulder at him once more, her face a mask of lusty fuck frenzy. \"Make me yours. Claim me, like you did my other lover. Own us both, Master. Own us! Make me *yours.*\"\n\nAndy felt an involuntary shiver of delight at her calling him that. He couldn't help himself. But she'd also said she wanted to be \"loved like a princess\" at the end, and he didn't want to disappoint her, because this memory was going to be seared in her brain.\n\nHe pulled his hips away, sliding his cock out of her, hearing an unsatisfied whine melting from her lips for just a moment before he flipped her over onto her back, his hand closing around her neck for just a moment, giving it a tiny squeeze, watching her eyes widen as she nodded at him before his hand slipped away from it. Her slender legs lifted up to wrap around his waist, the soft fabric of the stockings smoothing along his skin as he moved to line himself up once more, pushing his cock back into her snatch, hearing those sloppy noises when he did. Her heels were pressed into his body, not letting him pull too far back, as if she didn't want to feel his cock slipping out from her twat even for a moment, so mostly he was just churning his cock inside of her.\n\n\"Tell me you're at least as half as good a man as you seem like you are,\" she whispered, his forehead resting against hers.\n\n\"I try.\"\n\n\"Tell me you're going to be a good husband for Sarah, and also for me.\"\n\n\"I promise to try my best.\"\n\n\"Tell me you'll love me at least half as much as you love her,\" she said, taking Sarah's limp hand within her own, folding their fingers together.\n\n\"I'll love you both with all of my heart.\"\n\n\"Then kiss me, and cum in me, and we can claim each other. You've made me into such a wanton slut for you, but now make me an honest woman. Make me *your* honest woman, your slut, your wife or whatever in-between. Bring me into your wonderful fucking family. Cum inside of my needy little cunt so hard you feel like I do, like this is all you've ever wanted your entire fucking life. I love you, Andy Rook, I love you so fucking much, so just *claim me already!*\"\n\nHer lips shoved against his, one of her hands still holding onto Sarah's, the other squeezing the back of his neck as she clenched onto him with her stocking clad legs, her tongue demanding the presence of his as his body finally could resist no further, and he blasted a barrage of spurts of cum into her twat, a rat-a-tat series of jets, her feet giving frantic little kicks of her heels against his ass as her body accepted the injection of cum, and the process began, although she stayed locked in a vice around his waist for much longer than he expected her to. Eventually, however, the process did what it always did, and her limbs fell limp and slipped away from him, as she sunk into the bed like a dead weight.\n\nShe was, naturally, mumbling \"imprinting\" over and over again, but unlike any of the other women he'd imprinted before now, she had a broad smile from ear-to-ear on her face while she did, her fingers still intertwined with Sarah's.\n\nAs much as he wanted to lay down and fall asleep with them, it wasn't even dark outside yet. He glanced at his watch and saw it was barely past 2 in the afternoon. He felt like could just sleep for a short nap if he tried, but his curiosity got the better of him, and so slipped off the bed and moved his way over to the door, standing right at it before he opened it suddenly, swinging it inward, finding Niko and Aisling standing there, big grins on their faces.\n\nNiko immediately sprinted past him, her phone in her hand, as she slid up on the bed and immediately took a photo of Emily and Sarah's unconscious faces, framing it so their intertwined hands were framed right in the middle of it. \"God, she's smiling while she mumbles!\" she said, not lowering her voice at all, because she knew how completely unconscious the two women were. \"I've never seen that before. They even wore the Dagger Academy outfits for you. Fuck me, you lucky bastard.\"\n\n\"Emily asked her to take a picture of them while they were imprinting, so they could see what they looked like adrift on bliss,\" Ash said to him, giggling at how wobbly he was standing. \"Looks like they did quite a number on you, though. You about to fall over?\"\n\n\"Oh, don't pretend like you weren't listening outside of the door,\" he grinned.\n\n\"We weren't, until Emily was yelling loud enough for the whole damn house to hear.\"\n\nNiko moved to pull up a sheet over the two women, then the comforter, to make sure they wouldn't be cold while the vaccine and Andy's semen mixed inside of their bodies, bonding them to him on a cellular level, fundamentally altering their very biology. She slipped back and off the bed, moving back over to Andy. \"If you aren't crawling in bed with that mass of pale perfection tonight, then I sure as fuck am,\" she laughed.\n\n\"If I'm honest, I think Sarah would be worried if she didn't wake up with me in bed with her and Emily, so I'll come back and crawl in bed with them later tonight. You're both welcome to join me, obviously.\"\n\n\"I am physically incapable of saying no to that,\" Niko said.\n\n\"Same,\" Aisling echoed. \"But Phil's going to be here in about an hour, so you should probably go and get another shower in. As much as I personally like you smelling like high end perfume and wanton pussy, I think he'd rather you'd washed up first.\"\n\nAndy laughed and nodded. \"Yeah, fair enough.\"\n\n\"We'll come shower with you,\" Niko said.\n\n\"We both want to hear all about the Hollywood additions to our family,\" Aisling added.\n\n\"Okay, but if you touch my dick and it breaks off, you two have nobody but yourselves to blame.\""
    ],
    "authorname": "CorruptingPower",
    "tags": [
        "science-fiction",
        "orgy",
        "cosplay"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/quaranteam-ch-20"
}