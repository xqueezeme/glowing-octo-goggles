{
    "title": "A Short Disclaimer",
    "pages": [
        "<center>DISCLAIMER:</center>\n\nI know how some readers hate long disclaimers at the beginning of a story, so I'll keep this really quick and to the point. \n\nThe story you are about to read is fiction intended for adult entertainment, which you probably already figured out given the site you're reading it on, but just to be on the safe side: \"adult entertainment\" means that you're probably going to masturbate hard enough to the powerfully erotic scenes herein presented that you may be at risk of personal injury and other side-effects. Trust me, it's going to get that hot. Pursuant to which the author accepts no responsibility for any instances of:\n\nchafing,\n\npulled muscles, \n\ndizziness, \n\ndisorientation, \n\nexistential dread, \n\nhemorrhaging (internal or external), \n\nspontaneous combustion, \n\npsychotic breaks, \n\naccidental levitation, \n\nunplanned interdimensional travel or time-hopping,\n\nmetamorphosis (into giant insect, tentacle monster or hyper-intelligent root vegetable forms),\n\nsummoning of god-like intergalactic sex tourists with enormous clusters of plantains and mangoes for private parts.\n\nThat last one may sound weirdly specific, but it's more common than a lot of people think. You know, you may feel certain it's never going to happen to you? But I knew a woman once who attracted the attention of just such beings -- called The Immortal Mangonels by certain parazoologists -- with the sound of her moans as she masturbated to a copy of All About Beards Weekly, and as she described it the ensuing gang-bang was messy as hell, though admittedly flavourful, and an experience that on the whole she probably would not recommend to all readers (although it should be noted some of her friends are of the opinion that she just wants to keep The Immortal Mangonels to herself). \n\nPoint is, if you don't want to chance it, the author recommends the use of a silicone-based lube and not to let anyone tell you that Canola oil or spit are acceptable substitutes. Safety first!\n\nAll characters and situations in this story are entirely fictional and the creations of the author, and resemblance to existing persons living or dead is purely coincidental. \n\nAlmost purely. \n\nI mean, okay, the sexy cat burglar and socialite extraordinaire we meet in Chapter 23 is pretty obviously based on Jessica Alba. I'll level with you. It's going to be easy to see from the way I dwell on her full, kissable lips, toned but ever-so-slightly rounded belly, sensuous curves and limpid gaze that I'm thinking about Jessica Alba. There's at least five solid paragraphs in there that I literally wrote one-handed while switching back and forth from my story document to pictures of Jessica Alba, but can you blame me? My God, the woman is a beauty and style icon for a reason. In a world with any justice she would have eclipsed Audrey Hepburn long ago, so I really don't think I should be judged for that.\n\nNot that I don't fap to Audrey Hepburn either, just to clarify. Love me some Audrey Hepburn. I regard \"Breakfast at Tiffany's\" as an erotic classic. But no characters inspired by Audrey Hepburn appear in this story, unless you count the whimsical foreign Duchess who briefly turns up in the orgy sequence in Chapter 12, but I could barely even call that a cameo given that she spends the entire time slathered in the hot, dripping semen of the alien time bandits.\n\nOh, another heads-up: \"the hot, dripping semen of the alien time bandits\" is a phrase you can expect to encounter pretty frequently, so this is definitely a trigger warning for alien time bandits and hot, dripping semen.\n\nOther than that, though, all characters and situations are entirely fictional.\n\nWell, wait. I almost forgot about Lord Vorkorgosian, the Dildonic Empyrean Overlord who menaces our heroines in Chapter 7. I'm not going to lie to you, he's directly based on Barry, my downstairs neighbour, who is a real dick. Like, there was one time when I dropped a cigarette off my balcony totally by accident, I didn't even mean anything by it, and this motherfucker comes charging upstairs and bangs on my door and I open it up and there's this two hundred pound skinhead -- well, not really a skinhead, I think he's just bald -- there's this two hundred pound bald guy standing there all like: \"Are you fucking with me?\" Dude! I'm not fucking with you. Actually he's not the worst guy, we get along okay these days, but at the time of writing I was totally like \"Barry is such a dick\" and that energy really comes through in the sequences where he ties the protagonists to the giant serpentine robot vibrators and sends them off into the jungles of the Planet Zrthr -- not to mention that my description of Lord Vorkorgosian matches Barry exactly -- so in case Barry ever reads this I might as well just come clean. \n\nAlso, the story contains a glaring absence of father figures. Like, every time you come across a passage of wild, rough, kinky, deep-dicking hair-pulling name-calling grudge-fucking anal madness and think to yourself, \"You know, the money shot up the horny heroine's poop chute would have been a lot hotter if there was a father figure watching\"? That absence you're noticing represents my dad. \n\nBut I won't go into that.\n\n...\n\nOkay, if you're going to drag it out of me, he left when I was six, alright? And I might as well get this off my chest: I blame him directly for the lifestyle of promiscuity and heavy drug use I've pursued ever since. Anytime I wake up in a strange apartment next to a woman I can't remember meeting with cocaine dust all over my shirt and the rich stink of shameful, emotionally unfulfilling fornication in my nostrils, and I quietly make my exit and take the walk of shame to the bus stop, and go back home to my lonely apartment and wonder why it burns when I pee, I think to myself: \"Fuck you, dad. You could've been there, you know? One school play. One little league game. Anything. Just... fuck.\" You know? And now here I am writing porn where sadomasochistic alien Venus flytraps get it on with sexy bubble-butt starlets who look suspiciously like Kim Kardashian. \n\nThere. Aren't you glad you asked? (Nosy jerks.)\n\nAnyway. Not that there are any characters in the story who are directly inspired by Kim Kardashian. But at certain points in Chapter 9, when the rocket ship full of slave girls crash lands in the swamps of Jurassic-era Earth only find it overrun by an Alien Breeding Force from the Thirteenth Dimension, you could be forgiven for thinking the sultry, slutty brunette with with the 38-27-41 measurements was based on a certain someone. I'm denying it, mind you, but I can see how you could get there.\n\n(I don't make a habit of including measurements for the female characters, just to be clear. Because annoying, right? It's just the once. I can't actually remember why. (Well, come to think of it, actually I do include measurements for the busty Martian sex commando who confronts and seduces the sexy cat burglar and introduces her to an ancient ritualized Martian squirting contest in Chapter 27. That's on account of I had to make it clear just how busty she was. But that's it. (Okay: actually I just re-read the story, and it turns out that not only I do introduce pretty much every female character by immediately mentioning her measurements, but about a quarter of them don't even have names. Just measurements. I guess I was going through a bit of a phase there, so if that's the sort of thing that might put you off, fair warning.)))\n\nBack to it. This story contains extreme violence, extreme sexual situations, extreme sports, extreme philosophical polemics and extreme shopping, the last of which combines all four of the \"extremes\" preceding it into the dominant set-piece of Chapter 15 (the wild romp of Lilara the Barbarian Epistemologist of Thura XII through a mall full of priapic p-zombies). I'm pretty proud of that one; it's actually worth hanging in through the Merchants of Fellatio sequence in the four chapters preceding it which, to be totally honest, gets a little on the repetitive side even for me, the writer, so I imagine it will be a bit of a slog for some readers. If you feel that way, just hold on and think: \"Pretty soon and I'll be reading about Lilara cutting like a steel tornado through a grasping crowd of masturbating p-zombies with the mythical Axe of Retribution clasped in the mighty muscles of her well-trimmed pussy!\" Totally worth the wait.\n\nAs for the extreme sexual situations, let's put it this way. You ever hear of a porn star named Audrey Hollander? Go look up some of her videos on the Internet. Now try to imagine gang-bangs involving so many dicks that Audrey freaking Hollander would be like: \"Whoa. That's a few too many dicks, you guys. This is getting a little extreme.\" That's how extreme the sexual situations get. (Interesting side-note: Audrey was actually a beta reader for this story. I met her at a porn convention once, real nice lady, and I was like: \"Think I could interest you in taking a look at some of my erotic writing?\" And she gave me her e-mail address and everything. When she finished reading this story, she wrote me a message that simply read: \"Get help and may God have mercy on your soul.\" Heh, that Audrey! Quite the joker.)\n\nThere's no non-con, though. Unless you count the sequence in Chapter 46 where 36DD-22-36 Blonde and 32A-23-35 Redhead seduce the Fungus Warriors of the Undercity of Harkam, because they're mushrooms and don't really speak any known language and have no way of communicating consent, so I could see that being a little dubious for some readers. On the plus side, though, if you've never fantasized about a sex scene featuring multiple bipedal fungus monsters getting pegged with gigantic strap-on dildoes until they spray out spores like gigantic penises cumming all over the eldritch landscape of the Underdark... well, let's just say you have a pretty fantastic journey in your future.\n\nThe extreme sports content does merit a trigger warning for vertigo, flak cannons and exploding mice, due to the acrobatic butt-fucking skydive sequence featuring the nubile sky pirate Jolly Rogers and the every-ready men of the Cloud Nine Skydiving Performers in Chapter 39, which takes place over the countryside of an alternate Nazi Germany run entirely by flying squirrels. \n\n(It's a lot less confusing than it sounds, honest.\n\n(And about the exploding mice: no animals were harmed in the writing of this story, except for the several dozen mice I blew up with firecrackers in the process of researching what an exploding mouse would look like, which, I'm not totally sure why I did that or why I kept feeling the need to yell \"Take that, dad!\" after each explosion; the human heart is a mysterious thing. But it's not like mice are endangered or something, you know? So let's not make a big thing out of it.))\n\nAs for the extreme philosophical polemic, don't let it scare you off. It's really well-integrated with the sex and it's pretty educational to boot. Let me give you an out-take from Chapter 52, some dialogue I didn't use from a scene where Zoe Bangsalot the Nymphomaniac Christian Existentialist Hooker confronts a street gang called the Continentals, which is entirely made up of resurrected European philosophers who -- due to the high-velocity protoblood in their undead veins -- are doomed to constantly fuck women in order to relieve the unnaturally accelerated build-up of sperm in their bodies. In this scene, Zoe has made a bet with a group of the Continentals that she can suck them all dry while simultaneously arguing for the existence of God. It goes kind of like this:\n\nZoe Bangsalot swirled her tongue around the head of Undead Jean-Paul Sartre's meaty cock, slathering it in spit as she looked up at him while she stroked the pricks of Undead Andre Gide and Undead Merleau-Ponty on either side of her. \n\nShe said: \"Look, we can neither prove nor disprove the existence of God, who can only be approached through faith -- but that if we have the freedom to choose faith, its source can only be God.\" And then she swallowed Undead Sartre's cock with a moan of pure lust.\n\n\"I... ahhh...\" Undead Sartre moaned, running his finger's through the slender brunette's long hair as she bobbed her wet mouth up and down his meat-stick. He thrust his hips, making her gag briefly as he said: \"Um... I find your reasoning... circular. Why should not freedom be... uhhh... be most properly the effect of the absence of God? We are radically free precisely because... because there's... uhhh... where was I going with this... ahhh...\"\n\n\"Few monsters warrant the fear we have of them,\" said Undead Gide, gritting his teeth as Zoe tickled his balls. \"God least of all, for God is... ahem... mmm... is achieved only through Man.\"\n\n\"There is,\" said Undead Merleau-Ponty: \"A transcendent immanence in men which might answer to the name of God, but it is both more and less than God, for it is total-being on a constant journey into the nothingness which claims each human life... ahhh... I think I really need your mouth...\"\n\nZoe popped Undead Sartre's cock out and gave Undead Merleau-Ponty a wicked grin. \"Faith can fairly be called the radical choice of each human soul, the selection of being over nothingness which begets the authentic self,\" she said: \"And can indeed be called God, both transcendent and immanent. To the extent we have that choice, what therefore should compel us toward being if not God?\"\n\nWith that, she spat on Undead Merleau-Ponty's prick and swallowed it aggressively as the Continental creature groaned in appreciation...\n\nThere's a lot more where that came from. Like I said: extreme.\n\nCompared to all that, I guess I'd have to say the extreme violence isn't really that extreme. You can probably see worse in your average action movie. (Like, is it anywhere close to the violence in something like John Wick? That guy whacks more than six dozen people avenging his freaking dog. I mean, it's a cute dog and all, but... Jesus. I'd say by comparison with that, the scene in Chapter 32 where Jenny McGurley takes on an army of shambling meat droids with a shotgun and a katana is pretty tasteful and restrained. (Also, she's got a kick-ass catch phrase. I toyed around with a few possibilities, like:\n\n\"I guess you boys just can't cut it!\"\n\n\"Shotgun to the balls! That had to hurt!\"\n\n\"When my titties bounce, bad guys get trounced!\"\n\n\"Like the Good Book says: chop til you drop!\"\n\n\"You guys want to buy a farm? Why not start with a couple of achers!\"\n\nBut in the end I settled on: \"Bleed, dad! Pay for your empty freedom and bleed like the bastard you are!*\" It just came to me out of the blue one day, like so many of the most classic and iconic ideas do, and I'm not sure why but it had a certain ring to it. Jenny says it every time she kills a meat droid, and there are a lot of them -- that one scene goes for about forty-six thousand words -- but I figure one meat droid is worth about one-tenth of a human life and by that reckoning, she's technically still just under John Wick's body count.)))\n\n* Hey, you know, I just realized something. This catch-phrase is almost a direct quote of Dutch's famous \"Bleed, bastard\" line from the original Predator movie! Funny how these things can bubble to the surface of your brain, isn't it?\n\nAll characters depicted in sexual situations are over the age of eighteen. \n\nAnd I'm just giving that last one to you straight. That's it, whew! That's the end of the disclai\n\nmm\n\niopafh niosa cpfpuvg\n\nkllllllllllllllllllllllllllllll\n\nWhoops, hah, feel asleep on the keyboard there for a second! \n\nKind of a cool effect, though, like concrete poetry or something, I think I'll keep it. \n\n(I have this thing where I'll sometimes just conk out like right in the middle of doing something, like having sex or driving a car, which is why I don't drive cars anymore and you'll notice I made a reference to taking a bus earlier? That's why. One time I passed out and plowed straight through a Shakespeare in the Park production and into a river, it's actually a miracle nobody was killed.)\n\nAnyway. While I'm here I guess I should clarify about the \"age of eighteen\" thing, because it might confuse some readers that some of the characters' ages are given in Borphusian Years rather than using our calendar system. The Borphusian calendar counts simultaneously backwards from the time of an anticipated future phallusteroid impact with the planet Borphus -- a phallusteroid is basically an asteroid, only shaped like a dick -- and forward from the historic landing of J. Gordon Strongarm on his steam-powered rocket-ship, and it's traditional to give people's ages as a \"chronological imprint\" made up of the difference between these two numbers minus the number of Borphusian Years they themselves have been alive (a Borphusian Year is an Earth year times Pie, which in turn is pi times the depth in Borphusian finger-talons of a pie plate manufactured in the coastal city of Prnang-Prnang). So basically when the text says that the sultry bikini girl running toward us across the red sand beaches of Io-Io has a BCI of 568043.34, you can basically trust that I've already run the calculations to make sure that's the equivalent of her being at least eighteen. (Or nineteen or maybe even twenty -- because who doesn't love MILFs, amirite**?)\n\nOkay, that about wraps it all up. Now, without further ado, hold on to your butts for The Erotic Adventures of the Gang-Bang Anal Space Nymphos, Saga One: The Search for the Abandoned Little Boy Who Grew Up to Be an Extremely Bitter Middle-Aged Man, Chapter One.\n\nThis shit is going to blow... you... away.\n\nLet's do this.\n\nIn 10... 9... 8... 7... 6... 4... 3... 2...\n\nOh hang on, I missed one. Let's try that again.\n\nIn 10... 9... 8... 7... 6... 5... 4... 3...\n\n2...\n\n1...\n\nLIFT-OFF!\n\n...\n\n!!!!!!\n\nHere it comes!\n\nComing right at you.\n\n...\n\n\"One small fap for man, one giant load for mankind.\"\n\n...\n\n...\n\n.......\n\n. . . . . . .\n\nOkay, so something I maybe should have mentioned earlier. The story is kind of a work in progress? There isn't actually anything for you to read right now. I guess you could say I've kind of been stalling. My therapist tells me it's avoidant behaviour on account of my issues with separation anxiety and \n\nPSYCHE!\n\nHahahaha, got you! You should've seen the look on your face!\n\nOf course I can't afford a therapist. Uh, I mean, of course there's a story.\n\nAnyway, I've really enjoyed this chance to bond with you, the reader. I feel like this is a very special moment we're not going to get back once the Gang-Bang Anal Space Babe action starts. Keep a place in your heart for this romantic age of the Disclaimer, a more innocent age before you get to the passage in Chapter 29 where 33C-26-36 Brunette eats a Centaurian Slug out of her sister's butt-hole. Because trust me, that shit is going to scar you for life.\n\nEnjoy!\n\n(** Especially you, dad.)"
    ],
    "authorname": "CyranoJ",
    "tags": [
        "hot, dripping semen of the alien time bandits",
        "some minor digressions",
        "the borphusian chronological imprint",
        "gang bang anal space nymphos",
        "daddy issues like you wouldn't believe"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/a-short-disclaimer"
}