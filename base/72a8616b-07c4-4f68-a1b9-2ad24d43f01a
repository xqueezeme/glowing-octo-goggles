{
    "title": "Breaking My Own Rules Ch. 07",
    "pages": [
        "He untied me, massaged my wrists. Still, it was a while before I was back in the here and now. I stumbled as he led me into the outer room, and he settled me on a couch, before disappearing. I looked around, not really focusing. It seemed that the only things in the room were the couch and a desk a few feet in front of me. That desk had a keyboard and a very large monitor on it. That monitor was showing maybe six views from security cameras. It took a while for my brain to kick in, and he was back, pulling an undershirt over my head, as I was trying to make sense of the computer display. He tried to wrestle my lifeless arms into the sleeves, even as I was trying without success to point to the monitor.\n\n\"That's this building, the security system,\" I said, gesturing vaguely in the general direction of the monitor. Actually pointing a finger was totally beyond my capabilities at the moment. He glanced over at the screen.\n\n\"Yes. It is.\"\n\n\"You hacked the security system?\" I demanded, feeling suddenly, if briefly energized.\n\n\"No.\" A simple, straightforward answer. Except it was followed by, \"A friend did it for me.\"\n\n\"That's how you know when I...\" My brain was stumbling again, tying my tongue in knots. I started over. \"That's how you keep showing up...\" I felt like I was getting closer, but then he was pulling me to my feet and toward the door. I tugged at the undershirt, trying to get it down below my rear end. When we reached the door, I grabbed hold on the door jamb. \"Why?\" I blurted out. The smart part of my brain was saying, \"Who cares, get out of here.\" But the stupid part just kept saying, \"Why?\"\n\nHe turned in exasperation and looked at me. \"You're talking without permission. Do I need to put you back on the spanking bench?\"\n\n\"No, Sir,\" I whispered, and let him lead me to the stairs. A few moments later, we were in front of my door. He pulled my key \u2013 wait, MY key \u2013 from his pocket and unlocked the door. He pushed me inside, then handed me my blouse, bra and shoes. I hadn't even realized he was carrying them. Since I was standing there, staring at him dumbfounded, he pulled my key out of the door, dropped it on the floor at my feet, then left, pulling the door shut behind him.\n\nI'm not sure how much longer I stood there, but eventually, I locked the door and crawled into bed for the final three hours remaining of the night.\n\n****\n\nI was pacing outside my cubicle at work. One of the IT guys, the one I called Nice IT Guy, was fiddling with my misbehaving computer. The reason I called him Nice IT Guy was because he was the only IT guy (or girl) who didn't automatically blame me when my computer acted up. They might as well have \"User Error\" tattooed on their forehead. Nice IT Guy might be thinking it, but at least he didn't say it every time. If it hadn't been for niceness, I probably would have dubbed him Gangly IT Guy. He was very tall, all arms and legs. When he seemed to be waiting for the computer to download something, I leaned against the cubicle wall.\n\n\"Um, how easy is it to hack into a video security system?\"\n\n\"Huh?\" he said, with a puzzled frown.\n\n\"I was just curious,\" I said with a casual shrug.\n\nHis eyes flashed back to the computer when it pinged. He glanced at me askance as he typed some command in. \"Depends on the system, whose running it. If you're talking about the system here, it'd be almost impossible. It's tied into the whole security system, on its own server, not tied in with the network, run by people specifically trained in cybersecurity. If you're talking about the gas station down the street, not so much.\" I marveled at his ability to talk to me about that while rapidly typing commands into the computer and reading results. \"Most places, they call in the installers, run it through the same network they do everything else on, and never bother to change the factory preset passwords. There. You're fixed.\"\n\n\"I didn't know I was broken,\" I joked. He gave me that puzzled frown again.\n\n\"Sorry. Hey, could you recommend a good repair shop? My laptop had a little... accident.\"\n\n\"Bring it in. I'll look at it.\"\n\n\"I can't ask you to do that!\"\n\nHe shrugged. \"It's probably just a loose connection.\"\n\nHe stood up just as Exotic, my ridiculously gorgeous friend walked by and punched me in the arm. \"Kavanaugh's, Friday night, 9:00. If you don't show up, we'll track you down and drag you there bodily.\" She proceeded on her way as Nice IT Guy stared at her swaying hips.\n\n\"You guys go to Kavanaugh's?\" he asked.\n\n\"Apparently so,\" I drawled, wondering if he was going to start drooling. I was rubbing my arm where she had punched me.\n\nHe looked back at me. \"I have a friend that really wants to hook up with Shawna. Would you mind if we showed up?\"\n\n\"Hook up with who?\"\n\nPuzzled frown again. \"Your friend,\" he said, gesturing in the direction that Exotic had disappeared. Oh, right. She had a real name.\n\n\"Sure, the more the merrier.\"\n\n\"So you'll bring your laptop in tomorrow?\" He picked up a tool kit that he hadn't used.\n\n\"Yeah, if you're positive you don't mind.\"\n\n\"Nope. See you tomorrow.\"\n\n****\n\nOn Friday, Blondie went home with me just to be sure I didn't chicken out, apparently. We picked up some Chinese takeout and pigged out, then dressed. Somewhere in the back of my closet, she had found shoes with spike heels, from a bridesmaid stint, if I remembered correctly. I hate heels. But Blondie can be absolutely exhausting when she sets her mind on something, and she had set her mind on me wearing heels to the bar. I gave in, figuring I could kick them off as soon as we sat down. Blondie insisted on doing my makeup. She wasn't as good as Exotic, but then pretty much anybody was better than me, so I humored her. \n\nThroughout it all, she kept asking if I was still seeing \"that guy.\" I had never figured out a way to explain to my friends that I was sort of addicted to him, or at least to the orgasms he gave me. I just quit talking about him and they usually had far more interesting things to talk about anyway, so it had worked out pretty well, until tonight. I finally suggested that we hit the bar early because I was running out of ways to duck her inquisition. Even though the bar was only about five blocks from my apartment, we hopped a bus rather than teeter in heels all that way.\n\nThe place was crowded, and I was worrying about finding a table as we stood at the bar waiting for our drinks. I heard someone shouting \"Sky!\" and looked around for the source. It turned out to be Nice IT Guy. I told myself I probably should find out his real name one of these days. When he had worked his way through the crowd, he told me that he and his friends \u2013 I noticed it was now plural and I wondered just how many friends we were talking about \u2013 were holding one of the large corner tables for us. I nodded rather than try to shout above the noise. I had expected him to go back to the table, but he hung around until our drinks came and led the way. When we got to the table there were at least four other guys, mostly from the IT department. There were a number of glasses, so maybe there were even more somewhere around. Leave it to the chance of a night out with Exotic to draw a crowd. I was beginning to have misgivings, but it turned out when you got enough alcohol in IT guys they were almost just like real people. By the time Exotic and Brunette showed up, we were all laughing up a storm, even though the IT guys had to explain most of their jokes to Blondie and me. I actually found the explanations funnier than the jokes.\n\nThere was a mass seating rearrangement to accommodate Exotic and Brunette. I found myself sandwiched between Nice IT Guy and Thick Glasses IT Guy, whose hand kept 'accidently' falling onto my knee. I cursed Blondie for insisting I wear such a short dress, but other than that, I was having a really good time. With such a crowd, Blondie and the others couldn't quiz me about my mystery doctor. And I know it's not very feminist of me, but the guys wouldn't let us buy any of our drinks after the first one, and I didn't feel too guilty, because I was pretty damned sure they made a whole lot more money than we did. It was also possibly the first time out with my friends that I didn't feel like the tag along little sister. Guys were actually paying attention to me and not in a she's-probably-the-best-I'll-be-able-to-do-tonight way.\n\nAt some point, one of the IT guys said he could get us into the club just down the street. I was skeptical. At this time on a Friday night, I wasn't sure even Exotic could get us in, but he claimed he worked for them on the side. He typed a text into his phone, and a moment later showed the response to Brunette and Blondie who were sitting on either side of him. They proceeded to squeal and in short order we were migrating like a flock of geese, albeit a very short migration. Sure enough, he showed his phone to the bouncer, who basically only had eyes for Exotic anyway and just like that, our little crowd was inside.\n\nSome of our group headed straight to the bar, but Blondie was pulling me to the dance floor and several of the guys were following. I started swaying to the music and almost immediately, Thick Glasses IT Guy was in front of me, dancing like, well, an IT guy. I smiled at him anyway. After a moment, I felt hands on my hips and someone was dancing behind me. I figured it couldn't be one of the IT guys, because this dude had moves. It wasn't the usual hump or grind that most guys employed when they got that close to a woman's ass. He was moving with me, not pressing into me, but following every motion of my hips with his own. I could feel his heat radiating all up and down my back. I put my hands over his, where they rested lightly on my hips, and I closed my eyes, savoring the warmth that was spreading from my ass to my nether regions. \n\nMy Tom, Thomas, Dr. Harker, whoever he was, had told me in no uncertain terms that I wasn't allowed to make myself come, but he never said anything about some stranger on the dance floor. I was thinking that was just where this could lead. Throw a hot salsa number on and I'd be gone by the second stanza. Except that Brunette had grabbed my arm and was yanking me away. \"Come on,\" she was trying to shout over the music. \"We found a table and we're all doing shots.\" I wobbled on my heels, trying to keep up with her. I was beyond annoyed. She knows I don't do shots, number one, and number two, by the time I'd recovered my balance from her yank and looked over my shoulder to discover my forever dance partner, there was just a sea of shimmying bodies. Blondie and some of the IT guys were following us to the table. I was only slightly mollified by the fact that when we reached the table, there was my customary glass of wine amongst the shot glasses.\n\nIt was one of those standing only tables, because they want you dancing and getting thirsty. I was itching to get back to the dance floor, even though my feet were already beginning to hurt, but I politely drank my wine since someone else had paid for it. When I finally did get back to the dance floor, all I found were the typical humpers and grinders, and it wasn't long before I was ready to call it quits. I like to make quiet getaways, so I usually just texted my friends that I was leaving, but Nice IT Guy caught me trying to slip out and he followed. Once we were beyond the racket of the club, he explained that he just wanted to walk me home to make sure I was safe, and then he would know where I lived so he could bring my laptop back to me in the morning. I tried to tell him that Monday was more than soon enough, but he was going on and on about he couldn't live without his computer for a whole weekend and yadda, yadda, yadda, so I gave in and let him walk with me. It gave me an opportunity to get his real name so I could tell the doorman to let him in tomorrow. It was Randy Something. One name at a time, I told myself.\n\n****\n\nSo I get to my apartment door and guess who is waiting for me. I tried to remember if his security cam feed covered the front of the building, where I'd just said goodbye to my IT friend. It wasn't as if we'd kissed or anything. Plus I was left hot and horny by that non-climactic dance routine, so maybe for once I wouldn't be in trouble. And maybe I'd get some relief from the delicious promise of earlier. I let him follow me into the apartment, like I'd ever had any luck keeping him out before. In the living room, I kicked off the god-awful heels, almost taking out a lamp with one, and reached down to pull my dress over my head. He stopped me, though, his hands on my wrists.\n\n\"Let me look, first,\" he murmured, backing away. \"Turn, slowly.\" He eyed me with a critical expression. \"You look very beautiful, cherie.\" I didn't remember him saying that to me before. It seemed... odd. I waited for instructions. He nodded. \"Now you may remove the dress.\"\n\nI pulled the stretchy material over my head and removed my bra. When I hooked my thumbs in my panties, I looked at him for permission before lowering them. He nodded, and I pulled them slowly off. I stood before him, feet spread, arms at my sides, eyes downcast. \n\n\"You have grown,\" he said, in appreciation. \"Your submission has become your strength.\"\n\n\"Huh?\" most of my voices said in unison.\n\n\"Come in to the bedroom, cherie, I want to fuck you.\" Well, duh. I wanted to be fucked, so that was all working out rather nicely.\n\nHe had me lay on my back on the bed and used the rope that was already attached to the bedposts at the head of the bed to bind my wrists toward each corner. I was all ready breathing fast and undoubtedly dripping a bit, too. Mental note; going to have to wash the bed spread tomorrow. Next, he undid the ropes from the bottom feet of the bed and attached them to the bedposts at the head, which seemed a tad redundant to me. But I was keeping my mouth shut, determined to make this all pleasure and no punishment. He pulled those ropes up behind the headboard and over. I'm sure I had a puzzled expression on my face, because he seemed to find it amusing as he gazed down at me.\n\nHe made some sort of fancy loop at the end of the rope. I was never a girl scout, so I had no idea what he was doing, but then he lifted my leg on that side, slid the loop over my foot and pulled. I found myself staring straight up at my toes and wishing I'd kept up with those yoga classes. He did the same with my other foot, then he climbed onto the bed, knelt at my ass, with his knees to either side of my hips. He reached for my left foot and pushed it even further toward the corner of the headboard, lifting my hips in the process and stretching my leg straight. He pulled on one part of the rope and then another, until it tightened to hold my foot pointing ballet-like at the top corner of the headboard. The right foot followed suit. I was glad I'd had a number of drinks, because I don't think I could have managed the position without sufficient alcohol lubrication. When he was satisfied with my feet, he reached for my waist and pulled me down the bed, against the bindings at my wrists, which lifted my hips even higher. Now I was really, really wishing that I'd kept going to those yoga classes.\n\nFinally satisfied, he got off the bed to undress. I was left to wonder how being so exposed and helpless could also feel so damn hot. He hadn't even touched me in a sexual way, yet I was undeniably dripping, my juices running down past my asshole, to drip onto the bed, or continue on down my back. There was absolutely no hiding my arousal. Worse, I couldn't move. I tried, but with no give in my elbows or my knees, there was just no place to go. Even my nipples were so hard they hurt. And he knew exactly what he was doing to me. He watched with a smirk on his face that taunted me.\n\nEventually, he climbed back onto the bed, his cock rock hard. He slid his knees under my raised hips and leaned over me, arms on the outside of my legs despite how wide they were spread, hands resting on the mattress, his weight bearing down on my thighs, stretching ligaments and tendons that were wondering what they had ever done to deserve such treatment. But when his cock pressed at my entrance, all was forgiven. All I cared about was that cock inside me, filling me, ramming me, even. Anything to release the pressure that was building to meltdown inside me. I bit my lip. I wanted so bad to beg him to fuck me, but that was against his rules. And I was sure he was waiting for me to break a rule, or five or six. I couldn't even push back against him in this position. When he simply remained like that, unmoving, I wanted to cry or scream in frustration, call him names, whatever it took to get him to shove that glorious cock inside me.\n\nI was breathing in pants now, and drawing blood from my lip. I didn't know how much more I could take. Even water-boarding couldn't be this torturous, I told myself. Then, miracle of miracles, the head of his cock began to push its way into me. Slowly, too slowly, he sank in, then retreated. He repeated that slow motion fuck one more time, then he pulled out. I know I was making an 'uh, uh, uh' sound over and over again. I couldn't stop, so I tried to make it as soft as possible, you know, in case he was wearing ear plugs. Maybe he wouldn't hear me. Yeah, right.\n\nThen his tip was at my ass hole. I sucked in a breath. I'd never had a cock back there without at least some preparation, and he was big. I was in for a major test of that whole pain/pleasure thing. Was I needy enough that even that much sudden, painful stretching wouldn't prevent me from coming? God, he was moving so slow. I desperately wanted/needed him to move faster, but I was terrified that he would, all at the same time. He pushed at my asshole for a moment then plunged once, but hard, into my pussy. Then he was back at my asshole, pushing lightly. Now my breath was coming more in whimpers than pants. He repeated the pattern five more times, and on the last time, he pushed hard enough to breach my ass, then stilled. My eyes were screwed tight shut, though I could feel him staring down at me. I also felt my ass clutching at him, trying to suck him deeper. What was he waiting for?\n\nI opened my eyes and he started slowly pushing deeper, almost gently. Then I remembered. He was always wanting me to keep my eyes open. Crap, was he not going to let me come unless I did? Well, I may not be able to keep them open when I was coming, but I could keep them open until then. After that, it would be just too late, though it might mean punishment later. So I stared up at him, and he filled my ass and then some until I was panting again. How could there possibly be so many nerve endings down there? His cock was throbbing inside me, and I swear I felt it all the way to my toes, which were curling tightly, somewhere above my head. The fact that I couldn't move, between the bindings and the way his arms were pinning me was maddening. I couldn't possibly have less control over what was happening inside my body. I almost wished he had gagged me, because I was pretty sure that when he finally let me come, I was going to scream so loud, the neighbors would have a topic of discussion for weeks to come. \n\nSuddenly, the light bulb came on. The more intently I stared at him, the faster he moved, the deeper he sank. I did have some control! I poured every ounce of what little concentration I had left into maintaining that eye contact, and he began moving rhythmically, pushing deep. Maybe three strokes like that and I was lost. Because I couldn't move, couldn't ease the explosive force in any way, it went on and on and on. And unbelievably, my eyes stayed open, watching him, meeting his dark gaze as he came, too.\n\nLater, when he had untied me and massaged life back into my hands and feet, he sat on the edge of the bed looking down at me with an almost fond expression. \"I am very pleased, cherie. You have been so obedient, tonight. How shall I reward you? You may speak.\"",
        "\"Um, answer some questions?\" I suggested, in what I'd come to think of as my little girl voice. He seemed to bring that out in me.\n\nHe smiled indulgently. \"Perhaps. What would you like to know?\"\n\n\"Why do you call me cherie?\"\n\n\"It means darling.\"\n\n\"But why not my name?\"\n\nHe shrugged. \"You are a sub. Why do you give nicknames to your friends?\"\n\nI shrugged. \"They're just someone to party with.\"\n\n\"Exactly,\" he replied. \"You are just someone for me to 'party' with.\"\n\n\"Oh.\" I wasn't sure if I like that at all.\n\n\"What else do you want to know?\" he prompted.\n\n\"Where do you go, when you disappear for weeks at a time?\"\n\nHe gazed at me for a long moment and frowned. \"I am called away often.\"\n\n\"Do you have other subs, where you are called away to?\" I blurted out, feeling courageous.\n\n\"Yes.\" He answered, still frowning.\n\n\"So then I can have other lovers?\" \n\nI was proud of myself for trapping him with my logic, at least until he said, \"No. You are a sub.\" Well, it wasn't as if I knew who my dance partner had been, anyway, or if he'd be as good in bed as on the club floor.\n\n\"What kind of doctor are you?\"\n\n\"Enough questions. It is time for me to leave and you to sleep.\"\n\nI followed him out to lock the door behind him. It had occurred to me, when I had tried to google him before, that I had localized it. If he travelled a lot, maybe I needed to broaden my search. Maybe he didn't even live here beyond that apartment he'd taken a few floors up. And it certainly didn't look lived in. When I got my computer back tomorrow, I would do some more searching.\n\n****\n\nNice IT Guy \u2013 Randy, I reminded myself \u2013 showed up right on time, my laptop under his arm. I'd even cleaned the apartment, well, the dining table where I kept my laptop, anyway. He set it down where I indicated, then settled in. \"I just want to make sure you get back on your network all right. I cleaned up some stuff for you, too and tweaked your security settings. I hope you don't mind?\"\n\n\"Are you kidding! Can you come by every weekend and do that for me?\" That generated a warm smile that I found rather pleasant. In a fit of generosity, I asked, \"You want a beer?\"\n\n\"Sure,\" he said, staring at the screen. I brought us both one. My hangover could use a little help with its recovery phase. I sat at the table next to him and marveled at myself. Before my mystery doctor, I had never brought guys to my apartment. It was one of my rules. Now I'd broken it twice with Tom Whatever-his-real-name-was and now Randy. I had to admit, Randy wasn't nearly as heart-pounding exciting, but neither was he anywhere near as threatening.\n\nWhen he finished with my computer, we sat back and gossiped about work until he finished his beer, then he asked to use the bathroom before he left. I waved toward the bedroom, returning the beer bottles to the kitchen. When he emerged a few minutes later, I walked him to the door, still thanking him profusely and then I shocked the hell out of myself by giving him a friendly hug. That was so not me, but apparently he was perfectly comfortable with the notion. He hugged me back and walked over to the elevator. 'Wait, IT guys hug?' one of my voices was saying in astonishment. \"That one does,\" I answered back, and immediately slapped my hand to my mouth. One of my other rules was to never, ever talk back to my voices. You have no idea how people stare when you do that, even now in the age of Bluetooth earphones.\n\nI sauntered into the bedroom to gather my Saturday laundry project and stopped dead in my tracks. The ropes from last night were still draped over my headboard and laying on the floor, impossible not to see. Then I was flying back out to the living/dining/kitchen room to my newly returned computer. The one he had so thoughtfully cleaned up for me. The one with god only knew what on the browser and search histories, not to mention anything I might have downloaded recently. Quite frankly, I hadn't used the thing for much of anything recently but research into the kinks of my 'boyfriend.\" Searches for things like BDSM, domination, bondage, submission, sadism, masochism, you name it.\n\nMy fingers flew across the keyboard. Shit, he'd even cleaned all the crumbs out of the keyboard. The browser history was empty. How would he know it needed to be emptied unless he'd looked first? But then, he didn't say anything while he was here. And one look around my apartment should have convinced him that blackmail was not going to net him more than a saggy couch. Unless, he was saving the information for work. Oh, my god. Maybe that was why all those IT guys showed up at the bar. Maybe it wasn't to be with Exotic, maybe it was to witness firsthand the Kink Girl. I knew it was weird how much attention they were paying to me. And now, he had confirmation; had probably even taken a picture of my bed to show all his buddies. Oh, god. How could I go to work on Monday? On the other hand, how could I not, thinking of my poor starving bank account? There was only one answer. I had to find a new job, and I had to tough it out at work until I could. I immediately set about filling my empty browser history with craigslist searches.\n\n****\n\nOn Monday, I slunk into work at the very last minute, ducked into my cubicle and became more productive at data entry than I'd ever been before, not looking up for anything or anybody until the boss walked by. He'd taken a really weird interest in me in the last few months. I had no idea why. This day, he glanced at my screen and said, \"Really good work, Sky. Keep it up.\" Then he sauntered away. I stared after him. There was no way in hell he could tell from my screen whether it was good work or not. Well, I guess he could tell I was doing data entry and not browsing porn sites, not that the IT department would allow such a thing on company time. I cringed at that thought. Oh, god. Please, please, please someone call about my resume. At thirty seconds till my break time, I was getting ready to make a mad dash to the coffee room. On work days, I made a point of letting the company pay for my caffeine fix, to save money. And today I was in desperate need.\n\nFive, four, three, two, one. I was up and walking really fast towards the break room. Nothing to see here, just a chick in need of a cup of Joe. My own coffee cup had disappeared a few weeks ago. Hazards of a communal break room. I dug around in the cupboard until I found something that could hold hot coffee, and moved to the coffee machine. The carafe was, of course, empty. I swore under my breath, refilled the filter chamber, pushed the appropriate button and stared at the carafe, willing it to fill faster than the dismal drip, drip, drip. Someone stepped up beside me, empty coffee cup in their hand. It was Nice IT Guy; maybe, probably, not so nice anymore.\n\n\"Um,\" I said, part of my brilliant repartee. I'm sure I was blushing beet red. \"Don't you guys have a coffee room on your own floor?\"\n\n\"Sure,\" he replied. \"But I was looking for you. I was hoping you'd go to lunch with me today.\"\n\nAll I could think of was that he wanted to rub salt in the wound. \"Why?\" I demanded. Wow, look at me being assertive.\n\n\"Because I think we should talk,\" he said in a low voice that reminded me of something. I hugged myself as if it was cold in the room. \"Your secrets are safe with me,\" he said, and I was trying to remember what song that was from as he took my stand-in coffee cup and filled it from the carafe. He gave it back to me, filled his own, then said, \"I will be back here at 12:30 to take you to lunch.\"\n\nOne of my voices was screaming, 'Whaaaaa!' I ignored it, staring at him. I took a big gulp of coffee. It hit my stomach and brain at almost the same time. Okay, Alicia Keys, Diary. I was making headway. So next step. Was the lunch thing a threat or a... What? While all that was rolling around in my head, he had turned on his heel and left. \n\nAnd of course, Office Cut-up, the premier gossip, walked in at that moment. He looked at my vivid blush and cocked an eyebrow. \"Fall asleep in the tanning booth?\" Then, as if putting two and two together, he turned and looked after Nice IT Guy. He turned back and leered at me. \"You're seeing randy Randy?\"\n\n\"Randy Randy?\" I asked before the mouth filter kicked in. Broken rule. Never ask the office gossip for information.\n\n\"Even I can't believe what people say about him,\" he said, shaking his head as he filled his coffee cup.\n\n\"What do they say?\" Once I'd gotten started, I couldn't seem to shut up.\n\n\"I've heard he goes clubbing. A lot. And I don't mean dance clubs. Stay away from him, Sky. He's trouble.\"\n\nI bumped my chin on the floor when my mouth fell open. The last thing I ever expected from Office Cut-up was any concern about my reputation. He was usually all too happy to spread rumors about me and most anyone else in the department. He had to be playing with my mind. IT guys and players were mutually exclusive. He had to have some ulterior motive for keeping me away from Nice IT Guy. But why? When I saw Blondie headed toward me, I scurried back to my desk. I didn't need her inquisition this morning after all the other full frontal assaults I'd had. I was feeling like Bozo the Bop Clown.\n\nAt 12:30 sharp, Nice IT Guy \u2013 randy Randy? \u2013 was standing at my desk. I was wondering if I should tell someone where I was going, just in case I didn't come back. But the only one nearby who hadn't left for lunch already was Office Cut-up and like hell I was going to tell him. In fact, I was really hoping to sneak out without him seeing. Fat chance. \"See you later, Sky,\" he called as I tiptoed away from my desk.\n\nWe wound up at a deli a few blocks down the street. I kept looking around to see if anyone from the office was there. Randy seemed oblivious. We took a small table against the wall and I picked at my food, waiting for him to say something. He seemed to be watching me and waiting for me to say something. Finally, in exasperation, I said, \"You wanted to talk.\"\n\nHe put his sandwich down, rested his elbows on the table and folded his hands, looking at me thoughtfully over the top of them. \"I'm a live and let live kind of guy,\" he began. \"What you do on your own time is your business.\"\n\n\"Thank you,\" I said sarcastically.\n\nHe just kept eyeing me evenly. \"I just want to be sure your being safe.\"\n\n\"Are we talking about condoms here? Because I learned all this in sex ed.\" I thought I was being pretty clever, until I noticed people around us glancing at me. I scrunched down in my seat.\n\nHe just kept looking at me the same way. \"Sky,\" he said softly. \"You're playing with fire. You're a sweet girl. I don't want you to get hurt.\"\n\n\"Because you've hurt someone?\" I challenged. God, I really needed to get my mouth filter fixed.\n\nHis eyes narrowed and suddenly, he didn't look all that much like a nerdy IT guy. My stomach did a little bit of a flip flop. \"No. I haven't hurt anyone,\" he replied quietly.\n\nI lowered my eyes and picked at my food some more. \"I don't know what you expect me to say. Are you asking me to tell you all about my love life?\"\n\nHe sighed. \"Love? Is there any love involved?\"\n\n\"Jesus. Seriously?\" I demanded. \"It's the twenty-first century. I can have sex for sex's sake.\" I carefully didn't look to see how many people might be staring at me. I wouldn't have thought it possible, but his eyes narrowed even more. I pulled a piece of cheese out of my sandwich and nibbled on it intently. This person sitting across from me was not the same person who came to fix my computer at work and smiled shyly at me. Body double?\n\n\"There's nothing wrong with having sex,\" he said patiently, though his eyes were still dark and narrowed. \"There's nothing wrong with being into the BDSM scene.\" He paused for several beats. \"As long as you are being safe. Are you being safe, Sky?\"\n\nSuddenly I felt like a little kid being lectured by a teacher. I even squirmed in my seat, just like in grade school, during that spit ball episode. \"I don't know what you're talking about,\" I said with a frivolous shake of my head. First defense is always denial.\n\n\"What's your safe word?\" he asked, just like we weren't sitting in the middle of a crowded deli. Okay, I started it with the sex talk, but still... \"What are your hard limits?\"\n\n\"How do you know I'm not the Domme?\" I challenged.\n\nHe just rolled his eyes. Was it that obvious? He continued, \"Do you have a contract? Anything in writing?\" I started picking at my sandwich again, and he reached over and grabbed my wrists. \"Sky, you're going to get hurt. It's going to get heavier and heavier, until your limits are exceeded and then it will be too late. Walk away now.\"\n\nI straightened in my seat to hide the fact that his hands, wrapped tightly around my wrists, had sent that same zing straight to my nether regions that Tom Whats-his-name 's touch did. Jesus, what was the matter with me?\n\n\"I can handle it,\" I said softly.\n\n\"Look at me and say that.\" I looked up at him, but my vocal cords weren't of a mind to cooperate. \"Walk away, Sky.\"\n\n\"I can't,\" I muttered.\n\n\"Why not? Do you need help? A restraining order? What do you need?\" I sat back, pulling against his grip on my wrists. He reluctantly released them. \"What do you need?\" he repeated.\n\n\"Sex,\" I whispered, barely audible.\n\nThis time, he was the one who sat back, studying me. \"It doesn't have to be from him,\" he finally said.\n\nI looked up in surprise. \"You know him?\"\n\nHe shook his head. \"I know his type. He's not a Dom, Sky. No true Dom would put you at risk. Their entire responsibility is to keep you safe. Did he tell you he was a Dom?\"\n\nI shrugged. \"He said I was his sub.\"\n\n\"But not that he was your Dom,\" he concluded. \"He was taking no responsibility.\" He sat forward, leaning across the table toward me. \"Do you like it? Being a sub?\" I shrugged, then nodded. He smiled. What if we find you a real Dom? One who will respect your needs and keep you safe.\" I frowned at him. \"I want you to come to a club with me Wednesday night. See what the real thing looks like.\"\n\n\"So the rumors about you were true?\" It was his turn to frown.\n\n\"Rumors usually have a kernel of truth. Just don't assume you know which kernel is the truth.\"\n\nI smiled at him. \"Very profound.\"\n\nHe smiled back, looking like the nerdy IT guy again. \"Are you going to eat any of that sandwich or should we head back?\"\n\nI shook my head and stood up, realizing at least half of the deli crowd were looking at us. \"And if you liked that scene, be sure to catch the whole play at the Southerland Playhouse Thursday through Sunday,\" I announced. There was actually a smattering of applause. I felt pleased with myself as we walked back to work, so when he asked again about Wednesday night, I was feeling agreeable. We made arrangements and went to our separate floors.\n\n****\n\nCome Wednesday night, I was wondering why the hell I had agreed to this. Randy had assured me we were just going to look and talk to people, but I was still nervous as hell. I'd spent probably an hour trying to decide what to wear. The last thing I wanted to look like was a player, but I didn't want to stick out like a sore thumb, either. I finally settled on some tight jeans and a camisole top with a denim jacket over it. When Randy arrived, we hopped the subway to the south end. I was surprised when he led me to a strip joint. He explained that the club, aka dungeon, was in the basement and membership only. He may have picked up on my fierce case of nerves, because he put an arm around my waist as he led me to a dark hall, preventing my escape. He nodded at the bouncer \u2013 no membership card needed \u2013 and we moved on to a theme decorated elevator. It was all pseudo-stone walls and flickering lights. When I paused at the threshold, his arm tightened around my waist. \"It's just to set the mood,\" he said lightly.\n\n\"It's the mood I'm worried about,\" I muttered.\n\nWhen the elevator doors opened on the dungeon, we were in a large lobby sort of room, although still with the castle dungeon theme on the walls. The furnishings were much more mundane and actually comfortable looking. There was a bar to one side, but rather than tables and chairs, there were soft couches and low tables, definitely designed for mingling. And mingling was going on. While not crowded, there were a couple dozen people talking, drinking and wandering in and out of halls that spoked off the room. Many of them were dressed in fetish gear, but not all, so I wasn't totally out of place.\n\nRandy took me over to the bar and I ordered a glass of wine. He asked the bartender for paperwork, which was readily handed over. I stared at Randy. \"I have to sign something?\"\n\nHe laughed. \"No, not unless you decide you want to use one of the rooms. I just thought you'd like to see the sorts of things that should be discussed and agreed to before anything takes place. If two people hit it off here, they both fill out this paperwork, saying what they are willing to do in a scene. Each person knows exactly where the lines are, the dungeon knows where the lines are and the monitors know where the lines are to keep everybody safe. There are always safe words. This is how it's supposed to be.\"\n\nI heard a scream and jumped. \"It's okay,\" he assured me, tucking the papers under his arm, picking up his beer and taking my hand. \"Come on, I want you to see.\" I was pretty sure I didn't want to see, but I followed him down one of the halls. \"These are public scenes,\" he explained. \"There are private rooms, too. People like to come here, because there is furniture like spanking benches, crosses, suspension equipment, stuff they don't have room for at home. A lot of these people are in committed D/s relationships. Some are looking for one time hook ups or maybe their partner has a hard limit that they want to explore so they can find a willing sub or Dom just for that activity.\" He paused in front of a room. A woman in lacy underwear and stilettos was cuffed to a cross and being hit with a cane by a man dressed in leather pants. Each blow raised a red welt on her back. She was moaning and writhing in pain.\n\nI shook my head and looked away. \"She signed something saying she wanted this?\"\n\n\"Yes. Some people enjoy it.\"\n\n\"I can't imagine,\" I said.\n\n\"Really?\" he asked. \"Not even with your Master? What if he decided this was what he wanted? Would you, could you say no?\"\n\n\"He wouldn't...,\" I started to say, but then I remembered the cupboard, remembered him making me chose what he punished me with.\n\n\"How bad is it?\" he asked softly. \"What's the worst he's done to you?\" I hugged myself. \"What has he used on you?\" Randy asked, his voice low and insistent.\n\n\"A crop, a flogger,\" I answered, and wondered why.\n\n\"Did you want it? Did you like it?\"\n\nI shook my head. \"He was punishing me. It was my fault. I broke his rules.\"\n\n\"Did he at least tell you how you would be punished if you broke a rule?\"\n\n\"No,\" I answered in my little girl voice. Why was that coming out now, here?\n\nRandy ran his hands through his hair. He seemed angry. The woman in the dungeon room was screaming now as the blows crisscrossed previous welts.\n\n\"I want to go now. Can we go?\" I asked.\n\n\"Not yet. I want you to meet someone.\" But he was leading me back to the lobby and fetching another glass of wine for me. I didn't even remember finishing the first one. He led me to a sofa. \"They'll be here in a minute,\" he told me.\n\n\"So are you a Dom?\" I asked. He nodded. \"So you do stuff like that?\" I gestured back to the hall we'd been in. \n\n\"Not like that, no. That's my hard limit. For some people it's more psychological, about control, about willingly giving up control. For some people, it's about pain, giving or receiving. For most people, it's somewhere in between. That's why negotiation is so important; to sort all that out. And there absolutely has to be trust. The submissive has to trust the person they give control up to and the dominant has to trust the submissive to let them know when they've reached their limits. All of this should have been explained to you.\"",
        "\"I did research on the internet,\" I protested, feeling like I was being accused of naivety and it was somehow my fault.\n\nHe smiled at me. \"Did anything you read on the internet approach the reality you just saw back there?\"\n\n\"Um, no. It was so intense, even just watching.\"\n\n\"That's the point of BDSM,\" Randy said. \"It's not just about sex. It's about the intensity. Everything is more intense; the pain, the pleasure, the trust. It's about reaching for your limits. Ah,\" he said as a couple walked up beside him. The woman knelt on the carpet next to Randy and the man settled onto the sofa on the other side of her.\n\n\"Sky, I would like you to meet my sub. This is DeDe. And this is my friend Alex.\" They nodded politely at me. He looked fondly down at DeDe. \"So, how was it?\"\n\nHer eyes were sparkling and she didn't seem capable of erasing the smile on her face. \"It was heavenly,\" she breathed. She leaned up toward him and whispered, \"I even came.\" He ran his hand over her hair.\n\n\"I'm glad.\" He looked over at me. \"DeDe likes to be spanked. A lot. By hand.\" He held his hands out and smiled ruefully. \"I find it difficult to type the next day, if I've satisfied her craving. I loaned her to my friend, Alex, who happens to enjoy delivering as much as she enjoys receiving.\"\n\n\"Oh,\" I said, noticing that DeDe was wearing a short dress and was kneeling in such a way as to prevent her undoubtedly sore ass from coming into contact with the floor. Yet she was positively beaming. I looked over at Alex who just shrugged.\n\nRandy looked at me. \"Do you have any questions you'd like to ask DeDe or Alex?\"\n\nI licked my lips nervously and looked at Randy. \"I can ask anything?\"\n\n\"Of course,\" he agreed.\n\nI looked at DeDe. \"You don't call Randy Sir?\"\n\nShe shook her head. \"We agreed. I don't call him Sir and he doesn't call me slut.\"\n\n\"Does he... punish you if you break a rule?\"\n\n\"Of course.\" Then she snickered. \"Usually, if I break a rule, it's on purpose. Randy can be very imaginative with punishment.\"\n\n\"And she can be incorrigible,\" he said with a grin.\n\n\"My favorite was when he said I couldn't come until he'd come at least five times.\" DeDe laughed.\n\nRandy groaned. \"She was brutal. Every time I turned around, she was coming up with new ways to seduce me so I'd hit magic number five and she could come again.\"\n\nI looked over at Alex. \"Do you have a sub?\"\n\n\"I'm a switch,\" he explained. \"I play both roles. I was a Dom for DeDe tonight. I prefer sub, though.\"\n\n\"Oh. Do you have a Domme, then?\"\n\n\"Not at the moment. I'm actually in the market for either. Bisexual and switch. I got all the bases covered,\" he said with a smile. \n\nRandy looked at me. \"I need to put DeDe in a taxi. Do you want to wait here? I'll just be a minute.\"\n\n\"Okay,\" I agreed. He waved at the bartender and pointed to my wine glass, then he helped DeDe stand up and they disappeared into the elevator. I looked over at Alex. \"Do you come here often?\" He shrugged. \n\n\"It's a good, safe way to meet people in the lifestyle, do the things you enjoy, maybe find a partner. The dungeon is only open on Wednesdays and Saturdays. There's a lot more people on Saturdays, but then it's harder to get a room. If people are hitting it off, they often arrange to meet on Wednesdays when it's easier to talk or if you're with someone new and nervous about how it'll go, you know a monitor will be close by and not as likely to be tied up with some other situation.\"\n\nSuddenly, the tip of a crop was under his chin. I looked up in alarm to see a woman dressed in latex, studying Alex intently. \"Coming?\" she said. \n\nHe winked at me. \"Gotta go!\"\n\nThe bartender brought me another glass of wine. I sipped at it, watching the people still in the lobby. There weren't as many as before and I wondered if that was because they were pairing up into rooms. I glanced toward one of the corridors and froze. He was there, my Doctor Tom. And he was staring right at me, his eyes dark and stormy. He started my way just as Randy came out of the elevator. I jumped up and ran to him.\n\n\"Jesus, Sky. What's the matter? You look like you've seen a ghost. Did someone say something to you?\" I looked around past Randy, but he was gone. Randy had wrapped his long arms about me, and he followed my gaze, but saw nothing. He lifted my chin. \"Talk to me,\" he ordered, using the low, stern tone I had come to call the Dom voice. \n\n\"It was him. He was here.\"\n\n\"Where? Where did he go?\"\n\n\"I don't know. I didn't see. I just want to go home, okay.\"\n\nHe peered down into my eyes. \"You asked me about someone hacking a video security system.\" I nodded. \"Then you're coming home with me tonight. We'll sort this out tomorrow. Shit. I thought I was taking you someplace safe.\"\n\n\"But what about DeDe?\" I said, trying to pull away.\n\n\"She has her own place. We get together on the weekends. Come on.\" He pulled me into the elevator. When we reached the street, I kept looking back at the entrance, expecting to see him, as Randy hailed a cab."
    ],
    "authorname": "Chimera44",
    "tags": [
        "bondage",
        "anal",
        "caning",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/breaking-my-own-rules-ch-07"
}