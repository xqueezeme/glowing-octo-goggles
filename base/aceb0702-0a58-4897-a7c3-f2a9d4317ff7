{
    "title": "My One True Christmas Wish",
    "pages": [
        "Author's Note: Hey y'all...this is my entry for the Winter Holidays Story Contest 2015. For those of you familiar with my stories, you know that I try to develop the story and characters first and build up to the \"good stuff\"...for you newer readers - be advised this is not a quickie. As always, this tale includes sexually explicit material and is intended for adults, so if you are not at least 18 years of age or are offended by sexual material - you should probably get out now while you still can... For the rest of you - thank you for reading!\n\nI hope you enjoy...feedback is welcome and please remember to vote!\n\nHappy Holidays!\n\n--loverofFUN\n\nMy One True Christmas Wish\n\nI actually knew Aubrey from college.\n\nWell...I didn't exactly 'know-know' her, but rather knew of her. She was two years ahead of me in school and was a big presence on the college party scene. Not that she was like the campus drunk or a slut or anything - at least not that I was aware of, but basically if you happen to be one of the hottest girls on campus - which meant you were one of the hottest girls in the whole college town - then people tended to pay attention to pretty much everything you did. Those same people also liked to comment on Aubrey...and gossip about her...and cater their own plans around what she did. I thought it was silly and kind of weird that some of the people I hung out with were so interested in whether Aubrey was going to a particular bar...or if she was at a certain function...or if they had heard from a friend of a friend that she may or may not be going to a party or not...yeah, you get the drift.\n\nAnyways, I never got caught up in the whole Aubrey-watch thing. I basically just partied wherever I felt like going and with whoever happened to be there and had fun...but not too much fun. I also didn't date much because I honestly didn't see the point in complicating my life with a boyfriend. I'd never even had a serious relationship. I suppose I wasn't all that interested in one because I'd just never met the right guy. I got asked out often enough, but no one triggered the desire in me to get all serious and committed. I mean, I dated and went out and had fun...but like I said, nothing serious.\n\nBesides, my focus was on my education and school wasn't cheap. I was mature enough to understand that every class, lecture and book was a cost to my parents. They worked hard to send their only child to this expensive private college. I figured that if they were going to go out of their way for me to attend college and not have the burden of student loans when I earned my degree, the very least I could do was work hard at being a good student. This might be one of the reasons why I graduated Magna Cum Laude. My parents were very proud of me for that...and I was too.\n\nApparently prospective employers weren't nearly as impressed with my accomplishment as I hoped they would be. I mean it was mentioned as \"impressive\" in more than a couple of interviews, but I quickly discovered that actual \"real-world work experience\" was much more preferable. So for the summer months after graduation I kept busy with a couple of part-time jobs while I continued my job search. I loved my job at the animal rescue, but absolutely abhorred working retail. I'd much rather spend my time caring for dogs rather than seeing the worst of people as they shopped for clothes...but it paid the rent.\n\nFall and winter are my favorite seasons of the year, so as summer came to a close I refused to let myself get discouraged despite my failure of finding full-time employment in the career field I'd just spent the past four years of my life learning how to do. I knew it was only a matter of time before someone gave me a chance, and when they did I was going to run with it. I kept working and filling out applications and going to interviews and during the middle of October I had what I thought was an 'okay' interview. I was actually surprised when the recruiter called me a week later for a follow-up interview. I tried to temper my excitement and not get my hopes up, but I have to say I ended up nailing that second interview. The company offered me the job right there on the spot...I was over-the-moon thrilled that I finally landed a job in my field.\n\nMy new job also happened to be how Aubrey and I crossed paths again.\n\nLike I said, we really didn't 'know-know' each other so after I was hired to work in the marketing department for this large distribution company, you can imagine my surprise. It was my first day of work after working my two weeks' notice at my other jobs. I had just finished filling out all of my new-hire paperwork in the office of the HR manager when my new boss popped in. He wanted to welcome me and take me on an official tour. My first impression of the Director of Marketing was that he came across as a nice guy. I made sure to pay attention as he introduced me to my new co-workers. Everyone at the company he introduced me to seemed to genuinely like him...I took that as a good sign that my instincts about my new boss were right.\n\nMy tour meant we ended up walking around the entire company campus which consisted of two office buildings, a warehouse and a fabrication shop. I met and shook hands with every single employee who worked at the corporate location, but my boss saved the formal introduction to the actual Marketing Team for last. I followed him into the designated section of the second floor of the main office building into what was considered the Marketing Department proper. Yep, there was Aubrey, sitting at her work station. I had no clue that she'd been a marketing major same as me.\n\nI was introduced to everyone on the team as the new marketing specialist and Aubrey greeted me warmly with a smile that included a hint of recognition when we were introduced. I was also shown around our little part of the company world. It was good to know where the restrooms were, where the coffee service was and the supply room that was exclusive to marketing. It also didn't take a rocket scientist to realize that the only empty chair was right next to Aubrey's. So after getting a lay of the land, shaking everyone's hand, repeating my name about a dozen times and trying to remember everyone else's, I was formally shown to my work station.\n\nAubrey was working on some kind of excel spreadsheet as I sat down next to her, but she stopped and turned to me with a hint of a smile and one of those knowing squints of recognition. \"Wildcat?\"\n\n\"I am,\" I smiled.\n\n\"I thought I recognized you,\" she nodded and her smile grew.\n\n\"Yeah, I thought I recognized you too,\" I nodded. \"Small world, I guess.\"\n\n\"Definitely,\" she laughed. \"When did you graduate?\"\n\n\"This past June...class of 2015,\" and I blushed but wasn't sure why. \"Is it that obvious?\"\n\n\"Not at all,\" she shook her head and then smiled again.\n\nTwo things were running through my mind at that moment. The first was that there should be someone standing around handing out sunglasses to prepare people for this girl's dazzling smile. That and I think I had an inkling of understanding of why people liked to hang around her back in college. She had this effortless way of putting you at ease without really trying.\n\n\"Welcome aboard,\" she sat up straight and extended her hand. \"I'm Aubrey.\"\n\n\"Thanks,\" I nodded and shook her hand. \"Meghan.\"\n\n\"You're going to love it here, Meghan,\" she raised her eyebrows knowingly. \"This is an awesome place to work.\"\n\n\"Yeah, it seems really great so far,\" I agreed with her even though I didn't have the first clue about what it was like to be an employee here. I had been on the job for like two hours, but I guess I was just going to take her word for it.\n\nAubrey turned back to her spreadsheet with one final smile so I went through the process of booting up my laptop. Everyone in the Marketing Department had a company supplied laptop with a docking station at their desk. Made it so easy - you had the flexibility and mobility of a laptop, but you could dock it and use the mouse, keyboard and large flat screen at your work station whenever you were in the office.\n\nI settled in and remembered that I had been politely instructed by HR that I absolutely had to complete my mandatory new hire training on the company intranet by no later than my third day of employment. I was eager to start actually working so I went ahead and followed the instructions on the home page and fired up the first video. When I was finished 25 minutes later a five question quiz popped up on my screen. I aced it. So that was how this was going to work...you had to watch videos and then take a brief test that showed that you actually watched the video and paid attention. I looked at the que of my assigned training, did the math in my head and realized I'd be watching videos for the rest of the day and most of tomorrow. The videos ranged in subject matter from how to request paid time off, to how to evacuate the building in case of an emergency as well as Slips, Trips and Falls safety and what the proper dress code was in various types of weather. There was a training video for pretty much every conceivable work-related topic I could think of.\n\nI sighed quietly to myself as I started up the next video lesson.\n\nMy first day was a haze of videos and quizzes. I don't even remember going out for lunch or what I ate. Finally, the clock seemed to be winding ever closer to the end of the work day, but I was still steady at it. I wanted to get these training videos out of the way so I could get my feet wet with some real marketing work. I had just finished up another module and while stretching my neck glanced at Aubrey. I realized that with the curve of the counter as it turned the corner that acted as the table / desk of our work stations that my seat was at a slight angle and behind hers. If we were both sitting straight on facing our computers, I could turn my head to the right and basically see over Aubrey's shoulder to whatever she was working on...and she was currently busy texting on her cell phone. I ignored her and turned my attention back to my own pc and started the next training video. Out of the corner of my eye I saw her look slyly over her shoulder at me to see if I was watching her. She smiled.\n\nHuh...she seemed to be acting like, I don't know...like she was up to something? Whatever...I clicked the button to start my next video.\n\n****\n\nBefore I knew it, my first week was in the books and Aubrey had been right - I really liked it here. The people were great, the company was awesome and as a sales driven organization, they kept the marketing department very busy. My first assignment was a simple sales report for the previous quarter and I knocked it out of the park in a few hours. I guess that was going to be my one and only \"introductory\" assignment because after that my workload was just like everybody else's in my department - crazy busy. But I loved it - I thrived in that whole multi-tasking, deadline looming environment and that's pretty much what I did every day.\n\nI also ended up learning a little more about the meaning behind Aubrey's sly little smile that first day.\n\nI was busy working on a campaign proposal towards the end of my second week. I was frustrated as I tried to think of some alternative sales slogans for this campaign. We were going to start offering a new product from one of our vendors and I was trying to get my brain to think outside of the box, so I just kind of let my eyes wander around my work station. I ended up looking at Aubrey or rather over her shoulder as she was playing with her phone. She was leaned back in her chair and I could see her screen. She was texting and from what I could see it looked like she was sending someone a picture.\n\nAbsentmindedly I went ahead and let my eyes focus on the screen of her phone. Huh...a selfie? Surprise, surprise...yep, definitely a picture of Aubrey...wearing the same outfit she had on today...only in the picture she was in the ladies room (I recognized the color of the walls)...and she had her shirt unbuttoned flashing her bra covered boobs to the camera. I couldn't help but lean forward a little and stare. Uh...wow...but in my head it was more like WOW.\n\nIt was about the only word I could think of.\n\nI'm not a lesbian or bi or anything, but there was no denying the girl is drop-dead gorgeous - like movie star level gorgeous. First off, she has this long, thick mane of amazing chestnut-brown hair and these deep, amber-brown eyes. Plump, pouty lips and the kind of flawless face you see on TV...like I said, gorgeous. Secondly, I don't know if she owns her own tanning bed or what, but she has this really great tan complexion. Okay. Good for her, right? Oh, but the topper is this chick's body...I mean, give me a break already - it's one thing to have an unbelievable ass - which Aubrey does. I'm talking a world-class ass...but did she also have to be blessed with big boobs? Like perfectly shaped, just freaking awesome big boobs from what I could see of that picture.\n\nI mean, c'mon, man - in what universe is that even remotely fair?\n\nI was so busy creeping over her shoulder at that picture that I was completely unaware that she had turned her head and busted me. When I finally realized she was looking at me, I sat back and could feel my face get really hot from what I knew was the blush creeping up my cheeks. Oops. I felt like such an asshole. I mumbled an apology and turned back towards my computer when I felt something nudge my shoulder. It was Aubrey's hand holding her phone. She nudged me again like she wanted me to take her phone.\n\n\"Is this too much?\" she asked with raised eyebrows and that same sly smile I had seen my first day on the job. \"Honest opinion.\"\n\n\"Uh...okay,\" I slowly took the phone and glanced down at the picture again. My goodness, but this chick was freakin' built. I cleared my throat and then looked up into those mischievous brown eyes. Was she just trying to show off or did she really want my opinion? \"I guess it kind of depends on what you're going for.\"\n\n\"I was going for tease,\" Aubrey whispered with an uncertain look on her face. She took the phone back and cast a quick glance over her shoulder towards the Marketing Director's office to make sure his door was still closed. She bit her lip and with another quick glance at me, started manipulating buttons on her phone. After a minute she seemed to find what she was looking for and passed the phone to me again.\n\nI took it from her and looked at the screen and saw that she had opened up a gallery of pics. There were five different pics and based on the outfit and background, they were all taken today in the ladies room. I scrolled through them and saw that it was basically a photographic progression of her shirt being unbuttoned, exposing her bra a little more in each image and then in the final pic (the one I had seen over her shoulder) she was pulling her shirt open to reveal both of her bra-clad breasts. I probably stared at that picture for a little longer than I should have, but I was so envious. I mean, damn!\n\n\"So?\" She finally interrupted my pervy examination of her pictures. The uncertainty in her tone of voice and the apprehensive look on her face seemed out of place from the perception of Aubrey I had in my head from college. \"Which, uh, which one?\"\n\n\"Well,\" I replied slowly and had to clear my throat. \"If you're going for tease, then...I think the third one.\"\n\n\"Really?\" Aubrey seemed surprised. She took the phone back and looked at the image I had indicated with a slight scowl. The picture was the one where she had almost all of her buttons undone and the viewer could see obvious cleavage and the front part of her bra...but only a hint of the actual bra cups and the mind-boggling boobs they held in them. \"I thought that one was...I don't know, kind of tame.\"\n\n\"Well...think about it from the viewer's perspective,\" I explained and noticed she was listening intently. \"You're giving whoever this person is looking at it just enough of a suggestive glimpse. You said you wanted to tease them, so don't give away too much. Leave'em wanting more...it'll drive them crazy.\"\n\n\"Crazy, huh?\" Aubrey considered what I said for a moment and then the thoughtful expression on her face slowly changed into a grin. \"Okay...yeah, I like that. Thanks, Meghan.\"\n\n\"Anytime,\" I shrugged and turned back towards my computer.\n\nA few hours later Aubrey invited me to go to lunch with her and since I didn't have any plans, I agreed.\n\nI think we were both surprised at just how much fun that meal was and how well we got along. It turned out we actually had a lot in common. We went out to lunch again the next day and it was the same. So we started going out for lunch all the time and we even began sitting together in the break room whenever we happened to pack our lunches. It didn't take long before we were pretty much inseparable at work...and as clich\u00e9 as it sounds it was once again proven to me that you just can't judge a book by its cover.\n\nThe more I got to know Aubrey the more I realized that under all that incredible beauty and sexual hotness was a genuinely nice person. I mean, she was really great and I really liked her. She went out of her way to make sure I knew everything I needed to know in our department to be successful...who you could bullshit and who you couldn't, how and when you could slack off for a short break. I never expected it, but Aubrey ended up being one of the sweetest and most thoughtful people I had ever known.\n\nNow I'm not considered unattractive by any stretch of the imagination. Blonde, blue-eyed, I'm very petite with a nice figure if I do say so myself. I've basically been called cute and pretty my entire life ever since I hit puberty...but it was really amusing to be a first-hand witness to all of the attention Aubrey got whenever we were out. I became pretty much invisible. It was crazy how both men and women would just fall all over themselves to help her or take her order or get her whatever she needed. I guess maybe since she looked just as attractive as the celebrities on TV and the internet that most people just kind of assumed she was one. Most of the time Aubrey acted like she didn't notice it, but she wasn't above taking advantage of the preferential treatment every now and then...especially if it meant a better table at a restaurant or someone buying her drinks. She didn't act like it was a big deal, so who was I to complain about it?\n\nHanging out at work was a no-brainer since we literally sat next to each other, but then we started going out after work and it didn't take too long before we started hanging out on the weekends, too. I found myself really enjoying spending time with Aubrey. She made even the simplest things like just sitting around and watching TV fun...but when we did decide to go out? Man, she was an absolute blast to party with. I don't know if she was just used to getting away with stuff or what, but I learned pretty quickly that when this chick got a little too much alcohol in her she became something of a wild child...and a troublemaker. More than once I ended up being the voice of reason and would get her home safely before she ended up doing something she regretted.\n\nIn just a short amount of time we became not just work friends, but really good friends.\n\n****\n\nShortly after we had started hanging out away from the office, Aubrey got invited to what was supposed to be this really cool party by some guy she had met at some bar. There was kind of a social lull among the crowd we usually hung out with now that Halloween had come and gone, but Thanksgiving was still a week away. Aubrey thought it would be fun and since neither of us really had anything else to do she insisted that I go with her. It turned out that this party was downtown in the penthouse suite of one of the high-rise buildings in what I knew to be extremely pricey condos, really fancy-schmancy. We got all dressed up and it did end up being pretty cool...we met some nice people, the food was crazy good and they had a full-service bar and a DJ. What was not to like?",
        "We were definitely intent on enjoying our evening as both Aubrey and I were drinking, her maybe just a skosh too much. I slowed down my intake and made it a point to keep my eye on her. After a while I'm standing there just kind of watching her as she stood with her back to the bar amidst a small crowd of people. She was of course the center of attention. I occasionally nodded my head to the guy next to me as he droned on and on about his boat. Really? Dude, its November....but I was trying to be polite so I stood there and half-listened. My eyes moved down the bar away from Aubrey and for some reason I settled my gaze on the host of this party. I watched as he concentrated on putting together a tray of shots. I guess what got my attention was the fact he was using real glass shot glasses and not plastic cups.\n\nI continued watching with a little more interest when I saw him look around over both shoulders, but in a sneaky kind of way...like that wasn't suspicious. I scowled as I watched this douchebag empty the contents from what looked like a small vial or some kind of pill bottle into one of the shots. I found myself stepping away from my would-be suitor in mid-sentence. I began to walk across the room, stepping around party guests and mumbling 'excuse me' while keeping my eyes glued to the asshole host as he carried that tray of shots over to a group of people. The same group of people who were hanging around Aubrey. I was having a hard time believing that this was actually happening as I approached the group.\n\nUnreal. He actually did it...I literally watched him do it. He made sure Aubrey got the doctored shot. I didn't have time to explain or intervene, so I did the only thing I could think of - I lunged into the middle of these people and slapped the shot glass out of Aubrey's hand. I actually slapped her hand a little harder than I meant to as she yelped and immediately clutched her hand to her chest in pain. She looked up at me in shock and I started to reach towards her to explain when the wannabe rapist prick blew his top.\n\n\"Hey!\" the douchebag-host stepped in front of me and looked at me like I had lost my mind. \"What the fuck?\"\n\n\"She's my friend,\" I replied a little too loudly. As far as explanations went that really didn't make a lot of sense, but my adrenaline was pumping. I leaned to the side of him so I could look at Aubrey. \"Come on, time to go.\"\n\n\"Oh, hell no!\" the asshole glared down at me and raised his voice. \"Bitch, I'm telling you right now that you aren't going any-fucking-where until you clean this up.\"\n\n\"Yeah, about that,\" I raised my voice and turned my full attention to this motherfucker who just happened to be about a foot taller than me and twice as big. I didn't care. I was furious and a little drunk. \"I could care less about your fucking carpet since you were trying to drug my friend with that shot...bitch!\"\n\nThe crowd around us within earshot of my voice immediately got a lot quieter and turned all of their attention to the scene unfolding in front of them.\n\n\"What?\" the host replied and he suddenly seemed more nervous than pissed. \"I don't know what the hell you're talking about...but you're gonna pay to have my carpet cleaned.\"\n\n\"You really think so?\" I asked doubtfully. I reached down and picked up the shot glass that still had some remnants in it. \"Huh. I wonder if the cops can test this...you know, see what all is in it.\"\n\nHe started to laugh, but then his hand shot out and grabbed my wrist hard enough that it made me drop the shot glass. With a jerk on my arm he pulled me in closer and lowered his voice. \"Whose fucking house do you think this is?\"\n\n\"Let...go.\" I demanded quietly and tried to pull away. He just smirked at me as he held on. I looked him square in the eye and told him straight out, \"You're hurting my arm. I'm asking you for the last time...let go of me.\"\n\nWith an even bigger smirk the asshole nodded his head and did as I asked. He let go by giving my arm a push which sent my little ass tumbling backwards to the floor. Everyone just stood there in shock and a few people let out a quiet \"hey\" in protest. I started to get up and was all prepared to try and kick him in the balls when a large brown hand shot in from stage left of this little drama and grabbed the douchebag by the throat. The guy froze and his eyes got really big. He reached up to grab on to the hand that was around his throat, but it didn't look like he was doing much but hanging on. I glanced down and saw that he was being lifted up onto his tippy-toes.\n\nMy eyes followed that large brown hand to the brown face it belonged to and hey, it was that nice, unbelievably humungous guy that I had chatted with earlier. I thought he was really nice. During our conversation I remember he mentioned that he was Samoan...and, oh yeah, I think he also mentioned that he played for one of the NFL teams.\n\n\"You hurt?\" he asked me simply. My arm would probably end up being bruised, but nothing serious. I shook my head no.\n\n\"You?\" he next asked Aubrey. She was wide-eyed and slowly shook her head.\n\n\"You ready to apologize?\" he asked the piece of crap in his grip.\n\nDouchebag managed to sort of nod his head and then croaked a strangled, \"Sorry.\"\n\nHumungous Samoan dude let go of the guy's throat and the douchebag immediately went to his knees. He brought both of his hands up to hover protectively near his damaged throat as he started coughing and gagging. The whole party erupted into applause and people started high fiving the pro football player. I turned to Aubrey. She nodded. It was definitely time to go. We made a beeline for the door and I called a cab from the elevator. We were both a little shook up, but we still managed to laugh at the fact that chivalry was not dead.\n\nWe got in the cab and I gave the driver Aubrey's address to drop her off first. She told me to just stay at her place tonight. We could do a late breakfast in the morning. I hesitated, but then she asked me to please stay, that she didn't feel like being alone after all that bullshit at the party. I finally agreed and we both just kind of rested in a comfortable silence in the back of the taxi as it headed towards her apartment. I ended up having to help Aubrey up the steps...she was a little drunker than I thought.\n\nIt was also later than I thought.\n\nI was exhausted and asked Aubrey if I could borrow a t-shirt to sleep in. She nodded towards a drawer as she headed for the shower. She announced that she wasn't going to wash her hair as she put her long tresses up into a ponytail-bun, but she wanted to wash the stink of that party off of her. I stripped down to just my bra and panties and threw the oversized t-shirt on. I was crawling under the sheets of Aubrey's queen size bed when I heard the shower shut off.\n\nI settled down under the fluffy comforter and was in the process of reaching up to flip the pillow over so that I could lay my head against the cool side of it when Aubrey walked into her bedroom with a just a towel wrapped around her. I could see from the glow of the little night-lite by the door that the tan skin of her shoulders glittered from little droplets of shining water on them as she walked around to the side of the bed I was lying on. She sat down next to me on the edge of the bed and silently looked down at me for a moment. She smiled and I could tell she was still buzzed. Suddenly there were tears in her eyes.\n\n\"Meg...\" Aubrey whispered as she tried not to cry. \"I just wanted to say thanks.\"\n\n\"Hey,\" I sat up and wiped away a tear from her cheek with my thumb. \"No worries, hon.\"\n\n\"I'm serious,\" Aubrey insisted as another tear ran down her cheek.\n\n\"So am I,\" I smiled and wiped that tear away and then took her in my arms in a reassuring hug. \"I got your back, Aubs. That's what friends do...they look out for each other.\"\n\n\"Thank you,\" Aubrey whispered and then stood up. She gave me another tired smile as she walked back around to her side of the bed. She took the towel off and wiped her face with it and then crawled into the bed next to me...without a stitch of clothing on.\n\nI was stunned. I mean, it wasn't like I had never shared a bed with another girl before. It certainly wasn't the first time I had seen one of my friends naked either. Hell, it wasn't even the first time I had slept in the same bed with a naked girl...it was just Aubrey without clothes on was - fuck, I don't even know how to describe it. A work of art? Beautiful beyond description? I mean she was utterly stunning.\n\n\"I really appreciate you being my friend, Meg,\" Aubrey whispered as she faced me. \"I really do.\"\n\nI turned towards her and whispered back, \"I really appreciate you too, friend.\"\n\nShe grinned and then let out a big yawn. \"I'm really tired.\"\n\n\"I know, baby,\" I whispered. Baby? Why did I call her baby? \"Just try to get some sleep.\"\n\n\"Mmmhmmm,\" she mumbled in agreement and turned over on to her other side facing away from me.\n\nI was still kind of in shock from seeing my goddess-like friend completely naked. Wow...Aubrey was ridiculously good-looking and extremely attractive with clothes on, but naked? Holy smokes - that's like a whole other level of hotness. I closed my eyes and mentally shook my head at the events of the evening when I felt Aubrey scooch back into me. I gently started to move backwards away from her when she wiggled her ass until it was pressed right up against my groin area. She reached behind her and grabbed one of my arms and then pulled it around her so that I was spooning her tightly.\n\nI tensed up for a moment, but then relaxed and with a small sigh snuggled her close to me. My friend needed to know that I had her back and I was there for her. She obviously needed to be comforted right now...she needed to feel safe and loved. I was also still kind of buzzed...that was what I was telling myself.\n\nYep...I was totally chalking up that little tingling feeling in my panties to the alcohol.\n\n****\n\nI was warm...and comfortable...and slightly hungover.\n\nI managed to open one of my eyes and found myself staring directly into the tangle of Aubrey's hair. I did a quick inventory without moving. Stomach just the littlest bit queasy, but I think after I had something to eat I would feel better. My head hurt and my arm was a little sore, but not unbearably so. Ibuprofen or aspirin would help that. Uh, wow, I became aware that part of that warmth and comfort was due to all of the intimate body to body contact. My leg was kind of thrown over Aubrey's leg and she had her naked butt nestled right up against my lady parts. My arm was draped over and kind of around her waist and...yup, that was definitely a handful of Aubrey's large breast resting in my palm. Her breast was heavier than I would have thought...and really firm, but still really soft. It actually felt quite nice.\n\nI can honestly say that I'm not really sure exactly why I did what I did...I think it was probably due to the fact that I had never felt another woman's breast before. I mean not like felt 'for real' in such an intimate setting as the one I was in now, all cuddled up with my naked friend in her bed. So yeah...I did it. I gave Aubrey's breast a nice squeeze as I closed my eye and dozed back off.\n\nI have no idea how much later it was when I woke up again, but I didn't feel quite as rough and the space next to me in Aubrey's bed was empty. I gradually managed to sit up and swing my legs around so that my feet were on the floor. I was still hungover, but not as bad as I expected to be. I definitely needed food and something for my headache and my sore arm. I stood up and took two steps towards the bathroom when the door opened and Aubrey stepped out dressed in yoga pants and a t-shirt drying her hair with a towel. It amazed me that she could look that good with no make-up on and wet hair.\n\nShe immediately smiled at me and quietly said, \"Good morning.\"\n\n\"Morning,\" I smiled back and went to move past her so that I could relieve my screaming bladder, but Aubrey stopped me with a quick hug. I hugged her back and then she stepped away with another smile and I moved into the bathroom to use the facilities. I decided to go ahead and jump in the shower and the hot water helped...every minute I stood under the hot spray it seemed like I felt a little less hungover. I reluctantly shut the water off feeling a whole lot better than I did when I woke up. I was just about to call out to Aubrey and ask for a towel when I opened the shower door and saw that sitting on the edge of the sink was a stack of clothes and a fresh towel.\n\nI grabbed the towel and quickly dried off and then started going through the clothes. Underwear, sweat pants, a tank top and a sweatshirt. Obviously she wasn't going to loan me a bra (I figured Aubrey had to be at least a DD cup), but how thoughtful was that? I got dressed, choosing to go with just the tank top rather than the bra I wore last night. Everything fit okay if just a little bit too big, but I was super comfy and you were not going to hear me complain.\n\nI emerged clean, comfortable and ready to go to breakfast. Aubrey came over to me with one hand closed and the other holding a bottle of water. I gratefully took the four Advil tablets from her with a tired grin and downed them with half the bottle of water. As soon I finished swallowing, she asked me if I wanted to wear a pair of her ballet shoes or flip-flops.\n\nHmmm...I tried on the Rainbows and was surprised to find we wore the same size shoe. \"These work for me.\"\n\n\"Cool,\" she nodded as she pulled a polar fleece jacket on over her t-shirt.\n\nWe headed out to a little bistro-diner place that was right around the corner from Aubrey's apartment. Twenty minutes later we were a couple of happy girls now that we were elbow deep in eggs, bacon, french toast and coffee. We were not the least bit concerned with manners or looking dainty or lady-like either - at least I wasn't. I was throwing down on all that yummy, greasy goodness, and I think Aubrey was doing a heck of a job of keeping up with me.\n\nFinally stuffed to the brim with all of the fat and carbs we could stand, we both sat back on our respective sides of the booth satiated. From the look on Aubrey's face she was feeling like I was and that meant much better than when we first woke up. We just kind of sat there for a few moments in a comfortable silence. I was enjoying the last few swallows of what I had decided would be my last cup of the bistro's house-blend when Aubrey cleared her throat. I glanced up to find that she was looking at me with a semi-serious expression on her face like she had something important to say.\n\nI sat up and gave her my full attention.\n\n\"I uh, kind of remember saying something last night,\" Aubrey smiled and then looked down self-consciously. \"But I want you to know that I'm truly thankful you were there for me last night.\"\n\n\"I told you last night and I'll tell you again in the light of day, all sober and whatnot,\" I grinned and then pointed my finger at her like a pistol. \"I've got your back, chick.\"\n\n\"No one has ever done anything like that for me before...\" Aubrey looked back up at me. \"I mean, you stood up to that asshole and I don't know...it looked like you were willing to get your ass kicked trying to protect me or whatever.\"\n\n\"I don't know about that,\" I joked. \"I think I could have taken him.\"\n\n\"I'm serious, Meghan,\" Aubrey reached out with a very somber look on her face and placed her hand on top of mine. \"I've never known another friend much less a female friend who looked out for me like you do. I want you to know...I really, really appreciate it. And I appreciate you...a lot.\"\n\n\"Back at ya,\" I smiled and squeezed her hand. \"Seriously...I think the world of you. I'm happy we've become such good friends.\"\n\nAubrey nodded and then bit her lip, which was like cuter than a whole litter of puppies and I swear it looked like she might start tearing up again. She didn't. Instead, she sat up straight and motioned for the waitress. She insisted on picking up the check. We went back to her place and lounged around on her couch for a while watching reruns of The Walking Dead. I loved spending time with Aubrey...but before long I knew I had to get going. I still had laundry to do if I was going to have anything to wear to work on Monday. We hugged goodbye, but not before I promised that I would definitely come back over to her apartment the next day for Chinese food and more TV time.\n\nI started the drive back to my place and two things suddenly stood out to me. I was in a really good mood and felt like despite all the drama, Friday night and the sleepover and this morning's breakfast had been a lot of fun. I enjoyed all of it immensely...and I kind of missed hanging out with Aubrey already. Was that ridiculous or what? I wasn't even home yet. I found myself smiling in anticipation of tomorrow afternoon. I was actually really looking forward to curling up with Aubrey on her couch and enjoying spring rolls and a movie.\n\nI don't know if I can tell you the exact date and time when it occurred to me, but it wasn't too long after that weekend that I realized Aubrey had become my best friend.\n\n****\n\nAfter that weekend, there was a noticeable change to my relationship with Aubrey. It was kind of subtle and I don't think I gave it much thought, but Aubrey started treating me differently. I think she felt our friendship was growing into that next level of 'best friendship' and looking back on it now, I don't think she'd ever had like a real female best friend before...not one that she could trust anyways. I'm not going to psychoanalyze it, but Aubrey began to confide in me and ask my advice about pretty much everything.\n\nI of course reciprocated - I loved Aubrey. She was awesome.\n\nI think she also began to really appreciate the fact that I wasn't overwhelmed by her looks and I wasn't about to bow down to her will - I told her the truth and gave her my honest opinion whether she wanted to hear it or not. Aubrey was the kind of person that needed that. Believe it or not, she was actually kind of insecure about a few areas of her life - especially guys. Again, I know it sounds clich\u00e9, but it turns out it was true in this case - the prettiest girls don't get asked out all the time because most guys are intimidated by their looks or don't even bother trying. Most of the guys she did end up going out with were pompous assholes that were only concerned with getting into her pants...and I wasn't shy about telling Aubrey that either.\n\nThe day started off as just an average day at work - well as average as a Friday can be the week before Thanksgiving. We were both super busy trying to finish up last minute projects and reports on all things marketing before the holiday. I was concentrating on a power point presentation when Aubrey nudged me and gave me that look that I knew meant \"follow me.\" I mentally sighed. It was Friday and I had to finish this presentation before a meeting later that afternoon. I held up a finger so I could finish the slide I was working on. Once I had it done and made one small grammatical correction to it, I proceeded to get up and follow Aubrey out of our little work area and around the corner to the marketing supply room. She ducked into the supply room and dragged me in after her and locked the door behind us.\n\n\"Meg, I need your help,\" Aubrey whispered dramatically and then took a deep breath and let it out slowly as if she was getting ready for an Olympic high dive or something.\n\n\"Alright,\" I shrugged. \"What's up?\"\n\n\"Well...I met this guy,\" she started to explain, but then stopped and scowled at me when I groaned and rolled my eyes.\n\n\"Seriously, Aubs?\"\n\n\"Yes, seriously,\" she insisted.\n\nI looked into those expectant amber-brown eyes and finally let out a small sigh as I mentally submitted and prepared myself to try and listen patiently. \"Okay, okay...I'm listening.\"",
        "\"I knew I could count on you,\" Aubrey smiled in relief and then a look of something flashed across that beautiful, flawless face that I'm not sure I had ever seen before.\n\n\"What is it?\"\n\n\"What is what?\" she tried to act innocent and I could swear if she wasn't so tan she might have been blushing.\n\n\"What's...that?\" I clarified by moving my finger in the air in front of her indicating her face. \"What's got you acting all shy and embarrassed like...come on, Aubs - spit it out.\"\n\n\"Fine...look,\" she finally replied and blew out a breath in apparent frustration. \"I'm just...I'm like really horny and I haven't had sex in forever and I met this cute guy and you know how I like to do the whole texting tease thing...\"\n\nI held my hand out in a calming gesture and spoke slowly since Aubrey had been talking really, really fast. \"And?\"\n\n\"And I know I'm gonna go too far,\" she whined. She was like the only person I knew who was actually cute when they whined. \"I'm like fixin to bust I'm so friggin' horny and I don't want to give away too much in the pics or else...he won't want to go out with me for me or whatever. He'll think I'm too eager and...it'll just be about sex like you're always lecturing me about.\"\n\n\"Okay,\" I repeated just as slowly. \"And?\"\n\n\"Can you just take the pictures?\" she asked and held out her phone to me. \"Please?\"\n\nI looked from her phone to her half-wincing, half-anticipatory expression and finally sighed. \"Fine.\"\n\n\"Thanks, Meg,\" Aubrey breathed a sigh of relief and after handing me her phone, started to unbutton her shirt. \"I knew you'd have my back.\"\n\n\"Yeah...I do,\" I agreed quietly as I held up her phone and tapped the camera feature and then looked at what she was doing. \"Hey, slow down there, hot-to-trot...tease him, remember?\"\n\n\"Oh...right, right, right,\" Aubrey mumbled and refastened a couple of her buttons. She pulled on the lapels of her blouse so that her shirt gaped open revealing a pretty beige bra speckled with little white polka dots and lace around the top of the cups.\n\n\"Better,\" I replied as I took a few pictures from different angles. \"Cute bra...is that new?\"\n\n\"It is,\" she smiled and pulled her shirt open wider so I could get a better look at it...damn, I thought to myself as Aubrey revealed more of her body, this guy has no idea how lucky he is.\n\n\"It's too bad you are the proverbial brick house,\" I advised her as I took the last picture and then held her camera out to her, \"because if that fit me I would totally steal your unmentionables.\"\n\n\"I always figured you to be a panty thief,\" Aubrey cracked.\n\n\"I'd only steal your bras,\" I corrected her. \"My panties are way cuter than yours.\"\n\n\"Pishaw!\" she scoffed and pulled the waistband of her pants down far enough to expose the top of her panties so that I could see they were part of a set. \"I totally match and you know these are damned cute.\"\n\n\"Ah...well, I stand corrected,\" I announced with my hand over my heart. \"Your rump covering is in fact the cutest.\"\n\n\"Thanks,\" Aubrey smiled and pretended to pull up an imaginary skirt and curtsy. She then batted her eyes which made me giggle.\n\nSuddenly we heard a noise from right outside the supply room door which made me giggle even louder.\n\n\"Shhhh,\" she shushed me and moved closer as if that would make me stop laughing. \"You're going to get us busted.\"\n\nI couldn't help myself as I kept laughing. I'm one of those people that once I get tickled over something, I have a really hard time stopping.\n\nAubrey shushed me again and put her hand over my mouth and forced me up against the wall. Our eyes met and she was fighting hard not to join me in laughing. I stopped giggling, but not because I got control over myself or because of her efforts...well, actually it was because of her efforts. She had me pinned against the wall with her body and I don't know whether she realized it or not, but her big breasts were pressed up against mine and I could feel how hard her nipples were because they were poking into my boobs.\n\nI suddenly felt really warm and even a bit dizzy as I looked into her eyes.\n\nWe just stood there like that for maybe another ten seconds with our bodies pressed together...her face right next to mine...and her hand over my mouth. She finally took her hand away and stepped back with a quiet giggle and started buttoning her shirt back up. \"I think the coast is clear.\"\n\n\"Uh-huh,\" I agreed dumbly as I just stood there against the wall.\n\n\"We should probably get back to work.\"\n\n\"Absolutely,\" I agreed, but still in a daze. \"Just so you know - if I get fired for taking titty shots for you, I'm going to be totally pissed.\"\n\n\"You aren't going to get fired,\" she turned her head and whispered in my ear as she opened the door. She planted a kiss on my cheek and said, \"But even if you did - you'd still love me.\"\n\nAnd then she was gone, heading back to her work station. I shook my head as I watched her turn the corner and even then a part of me knew that she was right.\n\n****\n\nWe had already decided during lunch which restaurant we were going to later that night for dinner and then which club we would hit after that. I finished my project and had just sat down in the conference room with a group of the national sales people when my phone vibrated. Aubrey and I had become like a couple of ninjas when it came to checking our phones and texting during meetings. No one had a clue what we were doing either. We were that good at it.\n\nI surreptitiously looked at my phone in my lap. It was a text from Aubrey. She had attached a couple of the pics from the supply room and wanted me to help her decide which one to send this guy she had been flirting with. I took a long look at both of the pictures and had to admit that they were both smoking hot and seductive. She was just so ridiculously gorgeous. I quickly texted her back and told her which one she should send and I felt...funny. It was kind of weird and I don't think I really wanted to admit it to myself, but I was actually kind of jealous that she was sending seductive pictures of herself to some dude.\n\nI was probably just being over-protective. I put my phone away and refocused my attention on the meeting. My power-point presentation wasn't until the end of the meeting. I felt my phone buzz again. It was Aubrey. Just a quick text asking me if everything was okay...I typed out a quick reply without even looking at my keyboard letting her know I was with a simple 'I'm fine'. She continued to text me asking me if I was upset about something or mad at her to which I kept replying 'no, I'm good'. I finally just had to ignore her and focus on my meeting.\n\nAfter the meeting she was sitting at her work station looking more than a little unhappy.\n\nAs soon as I dumped my laptop, my notepads and file folders on the counter Aubrey turned in her chair before I even had the chance to sit down and asked me what was up. I told her nothing was up as I reconnected my laptop to my docking station. I heard her sigh a little too loudly after I logged in and started checking my email. She scooted her chair over next to mine and damn it, she was wearing Rapture, that Victoria's Secret perfume that smelled so good on her. I quietly took a deep breath of the intoxicating scent of vanilla, amber and just a hint of jasmine and closed my eyes for a second. I finally shook my head. What the hell was wrong with me?\n\n\"Why were you ignoring my texts?\"\n\n\"I wasn't ignoring your texts,\" I replied as I typed out my response to an email. \"I sent you like a thousand texts.\"\n\n\"I know, but...\" Aubrey started to argue, but then stopped. I felt rather than saw that she was about to say something else, but then she changed the subject. \"So, how did the presentation go?\"\n\n\"It went well,\" I smiled and turned my head to look at her. She was giving me a funny look.\n\n\"Cool,\" she smiled back. \"So everyone liked it?\"\n\n\"Yeah,\" I confirmed as I answered another email. \"They're going to go ahead and use my second idea so I've got to start putting together mock-ups.\"\n\n\"Cool,\" I could see Aubrey nod her head out of the corner of my eye. I continued typing for another minute and then she asked, \"What time are you picking me up tonight?\"\n\n\"Hmmm...the reservation is for eight,\" I thought out loud, \"so I guess...seven fifteen-ish?\"\n\n\"Sounds good,\" Aubrey agreed quietly and turned back to her computer.\n\n****\n\nI picked Aubrey up right on schedule.\n\nWell, I didn't really pick her up so much as I parked my car in the lot of her apartment building and I called a cab. That way we could both have fun and not worry about trying to do something stupid like drive under the influence or worry about one of us being the designated driver. I was waiting in the front part of her building when Aubrey glided into view. Wow. She looked absolutely stunning in a simple LBD that really showed off her curves. We hugged and I told her how great she looked and she told me the same.\n\nI thought maybe I was exaggerating in my head about how great Aubrey looked, but she started turning heads as soon as we got out of the taxi. I might as well have been going to dinner with a pin-up girl. I had gone with a more casual teal cocktail mini-dress. Even though Aubrey was the first thing everyone saw, I still managed to get a few appreciative glances which was a nice little ego boost for me. I had to admit we made quite a good-looking couple of twentysomethings out and about for a night on the town. Dinner at our favorite sushi restaurant was spectacular as usual and it seemed like we were both back to our usual friendly selves. I was relieved. Without talking about it we seemed to have gotten past all of our weirdness from earlier in the day.\n\nI had actually given some thought to that weirdness earlier as I was getting ready. I was in the middle of applying my mascara when I came to the conclusion that we were simply in the 'growing pains' stage of our quickly developing best friendship...just silly miscommunications. That's how relationships worked...you continuously learned about each other. There was this weird, vague concern in the back of my mind that we had somehow sort of been acting like a couple earlier. That thought flitted around the edges of my thoughts a few times, but I quickly dismissed it as nonsense. I mean that was silly...we weren't a couple, we were best friends. Right?\n\nAfter dinner we took another cab to one of Aubrey's favorite bars. The club was crowded and as usual, Aubrey drew a lot of attention. We danced and drank and then two different groups of guys started buying us drinks and shots. It got to the point that I started giving mine away, so it wasn't too big of a surprise that Aubrey ended up getting hammered. I was a little more buzzed than I had intended to get, but still pretty much in control. Wild-child not so much...by the time she wanted to get up and dance on the bar I knew it was time to call it a night.\n\nIt was rather chilly as we left the bar from what it was earlier in the evening...but that was the South. This time of year as Thanksgiving and Christmas rolled around we often got forty and even fifty degree temperature swings once the sun went down. We were both shivering as we climbed into the back of the taxi and I gave the driver Aubrey's address. We huddled together for warmth and Aubrey leaned her head on my shoulder and asked me to stay the night at her place. I knew I didn't need to be driving anytime soon, so I agreed. I even had an overnight bag in the trunk of my car. I had kind of figured out that my best friend had an issue with being by herself sometimes and that desire to not be alone tended to get worse when she drank. I didn't mind one bit, though. I loved sleeping over at Aub's and going out for breakfast on Saturday mornings. It had kind of become our thing.\n\nThe cab dropped us off and I paid the driver. After a quick detour to grab my overnight bag out of my car, we helped each other up the front steps to the lower-level hallway of her building, shivering, giggling and laughing the whole way. We finally managed to stagger to her apartment, unlock the door and get inside without either of us ending up on our asses. Thank goodness her apartment was nice and warm. We shook off the cold and as per her normal I'm-drunk-routine, Aubrey announced she was taking a shower.\n\nI ignored the trail of clothing she left on her way to the master bathroom and used the guest bathroom to wash my face and brush my teeth. I considered taking my turn in the shower, but gave up on that idea. I was just too tired. I changed into my pj's which consisted of nothing more than a t-shirt and a clean pair of panties. I went into the kitchen and helped myself to a bottle of water out of the fridge. When I got back to the bedroom, Aubrey had the bathroom door open and was standing at the sink brushing her teeth wrapped in a towel.\n\nI took a long drink of water and set the water bottle on the night stand and then climbed into what was basically \"my side\" of Aubrey's bed. She rinsed and spit and then kind of stumbled over to her side. I was used to Aubrey sleeping in the buff, so it wasn't anything new when she simply dropped her towel and crawled in under the covers beside me. Now just so we're clear - that didn't mean I didn't appreciate the view. I mean, I think everyone should take the time to appreciate undeniable beauty when the opportunity presented itself.\n\nWe squirmed around a bit until I finally ended up flat on my back with my arm under Aubrey's head as she was half turned towards me, half sprawled out across most of the queen-sized mattress. She fidgeted around a bit more and exclaimed \"hot\" as she pushed the comforter off so that she was only covered with the top sheet. Eventually she settled down and my breathing evened out as I started to relax. My eyes were getting really heavy. I think I was just about to doze off when Aubrey decided in her state of drunkenness that she felt like whisper-chatting.\n\n\"Meg,\" Aubrey staged whispered. \"Meggity-Meg.\"\n\n\"What?\"\n\n\"I gots drunk ta'night,\" she confided in me and giggled.\n\n\"Really?\" I mumbled. \"Are you sure?\"\n\n\"Ab-suh-laatool...Ab-sta-loot-tuh...\" she declared with each syllable over-pronunciated as she tried so hard to say the word. I felt her shake her head. \"Mmyep...I'm sure.\"\n\n\"Then you should go to sleep,\" I advised quietly with my eyes still closed. \"It'll make you feel better.\"\n\n\"Meg,\" she whispered instead and I could feel her gently poke me in the ribs. \"I'm gots drunk, but didn't not get lucky...no luckity duckity.\"\n\n\"I know, hon,\" I sighed. \"Just try to go to sleep now.\"\n\n\"But...it's been suh-long,\" she whispered-whined.\n\n\"Uh-huh,\" I mumbled with my eyes still closed.\n\n\"I...I really need to...y'know,\" she whispered again after a long pause and didn't sound quite as drunk.\n\n\"Uh-huh,\" I automatically repeated, but didn't move.\n\n\"Okay...I'm going to go ahead then...\" Aubrey announced quietly and shifted her position slightly, but then seemed to pause again. \"Is'at, um... going to bother you?\"\n\nI still had a pretty decent buzz going and I was way too tired to move, but Aubrey's words had perked me right up from actually going to sleep. What did she mean 'go ahead then'? Is she talking about masturbating? Is she really going to rub one out right here in bed with me? Seriously? I kept my eyes closed and thought about what she had said...would she really? Maybe she'd go to sleep and this was all just drunk-talk.\n\nApparently my silent contemplation must have given Aubrey the impression that I'd dozed off...because before I could say anything, I felt her arm closest to me start to move. I peeked my eyes open and wow...okay...there was my best friend lying right next to me with the sheet pushed down to her waist. Nothing too weird about that, except for the fact she slept in the buff...oh, and that she was slowly rubbing and massaging her large breasts. I suddenly felt like I couldn't breathe and realized I was holding my breath. I slowly exhaled as I watched her fingertips slowly trace along the outer contours of her breasts and then she slid her palms up and over to take both of those beautiful, tan globes in her hands. She pushed them together and then gave them a nice squeeze. Damn, she hadn't been kidding - she was going to go ahead and get herself off.\n\nI was kind of fascinated. I'd never watched another girl masturbate before. I just laid there in my faux sleep posture and continued to watch as Aubrey rubbed her unbelievably gorgeous breasts. The thought kind of popped into my head that I really couldn't blame her - I distinctly remembered what those breasts felt like and if I had a pair like that, I'd probably be tempted to play with them too. After a few minutes she switched it up and began toying with her nipples, lightly pinching them and tugging on them. Okay...I guess I had to admit that I was actually more than fascinated, I was utterly freaking captivated. This was probably one of the hottest, most erotic things I'd ever seen. I could feel the flesh of my areolas pucker as my own nipples hardened.\n\nThe next thing Aubrey did took me by surprise.\n\nApparently we had different approaches to our methods of self-love. I had been under the assumption that when I masturbated, I did it, I don't know, kind of normally...but I guess I had never considered - is there really a 'normal'? Up until tonight, I naively thought there was i.e. whenever I did \"it\" I would lay on my back, play with my tits for a little while and then rub my pussy until I was super turned on. Once I reached the point of being turned on just enough, I would focus on my clit with one hand while I put a finger or two inside myself with the other hand. For me personally, it was a tried and true formula for success. I really don't know why I figured that everyone else - or at least every other woman - must do it pretty much the same way, right?\n\nYeah...I was wrong.\n\nAubrey showed me that there could much more to masturbation then simply lying on your back and diddling away. After playing with her breasts, my best friend rolled over onto her stomach. At first she just kind of laid there, gently grinding her hips down into the mattress. She had her head turned away from me so I was given an unobstructed view. I saw one of Aubrey's hands disappear down underneath her and quickly realized that she had to be rubbing her pussy by the way her grinding became more of a humping motion...and it's not like she was just lying on her stomach touching herself. I mean, it was like her whole body was into it. Her legs would change position as her hips moved up and down while her other hand was grabbing the edge of the mattress. It seemed like she was also rubbing her chest against the bed too with the way her upper body undulated.\n\nDamn...I didn't think there was a living soul that wouldn't have agreed that she looked beyond sexy...I couldn't help but start getting turned on myself and I knew my panties were soaked. I was seriously considering sliding a hand down to start playing when Aubrey changed things up again. She brought her knees up so that now she was kind of on all fours, but still had her head down on the bed. I was speechless. With the little night-lite she had over by her bathroom door, I could see her quite clearly. She looked like the word 'erotic' personified. Her knees were spread and her amazing ass was sticking up in the air. I could also see that one of her hands was nestled between her legs. She brought her other hand over and stuck it underneath her upper body so she could grab a handful of one of her boobs. She was gasping and had started to quietly moan as her hips moved and it seemed like she had moved into this kind of zone where she was completely oblivious to me...either that or she didn't care that I was watching her.",
        "Aubrey changed positions again by getting up off of the bed so that she was sitting upright on her knees. I felt my mouth go dry...she was captivatingly beautiful. She was cupping one of her big, round tits with her finger and thumb extended up so she could pull on and pinch her nipple with one hand while the other was buried between her legs. She didn't just sit there either...it was like her body couldn't be still as her hips continued to pump and she flexed her thigh muscles so that her knees slid out a little and then back in with the same rhythm of her pelvis. Maybe the influence of the alcohol was romanticizing this scene, but I felt like I was watching a woman who had totally given herself over to the pleasure she was giving herself. It was like she was fully committed to reaching her climax. There was no subtlety now, no conscious effort not to wake her bedmate...she was well on her way to her peak and would not be denied.\n\nI already said this once, but it's worth saying again because now I knew without a doubt - this was by far the absolute hottest, most erotic thing I had ever seen. I couldn't help but smell Aubrey's musky, feminine scent and I could definitely hear the distinctively wet, squelching sound of fingers rubbing and fingering wet, slick feminine folds. I found myself with handfuls of sheet balled up in my fists and I was squeezing my thighs together in the same rhythm that Aubrey was moving her hips. She suddenly took her hand off of her tit and reached out to grab the headboard. She used it to steady herself as her ass and hips moved, rocking her body onto the hand that was furiously rubbing her pussy. She tossed her long brown mane back and forth a few times and then she stopped and arched her back.\n\nAubrey moaned, but she kept her lips together so it came out sounding more like a low humming sound. Her entire body tensed up and then jerked a few times. I could see that her eyes were closed and her pouty lips were curled up in the ghost of a smile. I realized I was tensing up right along with her and I couldn't take my eyes away from her face. I was completely focused on every little expression. I knew she was deep into her rapture and I wanted to soak in every detail from the way her breasts bounced and slightly swayed with every movement to the way she gasped and took in shallow, sharp breaths. Gradually she began to relax and loosened her grip on the headboard. I forced myself to relax my own grip on the sheets.\n\nI kept up my fa\u00e7ade of sleep as I watched her with my eyes barely cracked open. I watched Aubrey relax and take a deep, satisfied breath as she sat back on her haunches. I watched her run her hands up the front of her thighs, and on up to cup her breasts briefly and then move so that her arms were wrapped around her body. It looked very much like she literally gave herself a hug. Then I watched her bring the hand that had been deep in her sex to her mouth and she took her time to lick every finger clean, savoring her nectar. She seemed totally relaxed and at peace. Then she silently slid off the bed and disappeared into the bathroom.\n\nI just laid there, my senses overwhelmed. I was awestruck - I had never in my life seen someone give themselves so completely over to pleasure like that. Aubrey seemed totally in tune and in sync with her body in a way that I don't think I had ever experienced. No, check that - I knew for a fact that I had never experienced anything the way Aubrey just had. I closed my eyes and my mind was racing...for a number of reasons. Apparently tonight seemed to be all about new experiences...it wasn't a very big one, but it was definitely a good one.\n\nI had had my own orgasm at the same time Aubrey did without ever even touching myself.\n\n****\n\nWe both ended up sleeping in a little later than usual, but our hangovers weren't too hideous. We ate at our favorite place, the same little bistro-diner that we went to every Saturday morning. Breakfast was delicious and after filling our bellies we both felt a lot better. We headed back to Aubrey's place and cuddled under a blanket and binge-watched episodes of Supernatural on Netflix. We giggled and chatted quietly the whole time. It was fun and thoroughly enjoyable. It was our routine and all seemed right in the world.\n\nExcept...I couldn't get images of my naked best friend pleasuring herself out of my head. It was like I couldn't even look at Aubrey without my eyes automatically glancing at her generous breasts or her perfectly rounded ass or when I thought she wasn't looking, the crotch of her exercise pants. It was still cold outside, but Aubrey kept the thermostat in her apartment up pretty high so it was actually really warm. So warm that she ran around dressed like it was summer...and the skintight yoga pants and flimsy little tank-top she was wearing sans bra didn't really do a whole lot to discourage my wandering gaze either. What the hell was wrong with me? I think I needed to go home and spend some 'quality time' with myself...I figured if I just gave myself a really good orgasm, I would snap out of it.\n\nAfter the last episode we were watching ended, I announced that I needed to head home and get some laundry done. It was an excuse, but I actually did need to do a couple of loads...so I didn't feel like I was out-and-out lying. Aubrey protested that she wanted me to stay a little longer. She begged for one more episode, but I held firm. I needed to go. Aubrey decided that if she crawled up on my lap then I wouldn't be able to leave. I tried to escape, so she countered and ended up basically trapping me on the couch by straddling me.\n\n\"Do you really have to go?\" she asked quietly.\n\n\"I do,\" I sighed and felt terrible for being so selfish...but if I didn't go home and 'take care of business' then I honestly didn't know what would happen.\n\n\"You can't stay?\" Aubrey pleaded and leaned forward, putting her hands up on the back of the couch and tilting her head down until our foreheads were touching. \"Just a little longer?\"\n\n\"I...uh...okay-okay,\" I managed to stutter. I glanced down and honestly didn't think Aubrey was aware that by leaning forward she had basically set her large breasts down to rest on the top of my boobs. It didn't seem like a big deal, but I was hyper-aware of the volume and weight of Aubrey's chest touching mine...and the breast to breast contact was making me feel really confused. I was about to protest, but when I looked up I noticed how close her mouth was to mine. I could feel the blush rising in my cheeks and it wasn't from embarrassment. \"I, uh...I'll stay for one more episode.\"\n\n\"Yes!\" she exclaimed triumphantly\n\n\"On one condition.\"\n\n\"Anything,\" she smiled excitedly.\n\n\"I'll stay if you get off of me,\" I replied and I really should have stopped to choose my words more carefully, because what I said came out more harshly than I had intended it to.\n\n\"Oh,\" Aubrey flinched and sat up. She immediately pushed up on the back of the couch and quickly got off of my lap. \"I'm sorry, I was just...I didn't realize...\"\n\n\"No, no, no,\" I shook my head and stood up. I held my arms open and stepped forward to give her a hug. She stiffened for a second as I wrapped my arms around her and I squeezed a little tighter to try and show her I hadn't meant what I said. Wow, the way she felt in my arms was...stop, I mentally chastised myself. I was totally making this creepy. \"I apologize, Aubs...I didn't mean it.\"\n\n\"Its fine,\" she replied over my shoulder and by the tone of her voice I could tell her feelings were hurt.\n\n\"Nope, not fine,\" I corrected and loosened my hug so that I could lean back and look deeply into her eyes. \"I sincerely apologize...that was rude and I one hundred percent did not mean it the way it sounded.\"\n\nAt first she wouldn't look at me, but then finally she moved her eyes up. \"You really didn't mean it?\"\n\n\"I swear,\" I nodded. She was still in my arms in a loose kind of hug. \"Forgive me?\"\n\n\"Okay,\" she nodded back. \"Apology accepted.\"\n\n\"Thank you,\" I sighed in relief and then pulled her closer for another full-on hug. \"I'm just being grouchy.\"\n\n\"Yeah,\" Aubrey agreed. \"That was kind of grouchy.\"\n\n\"I know,\" I confirmed. \"I didn't mean it the way it sounded.\"\n\n\"Did I do something wrong? I was just playing around.\"\n\n\"Nope,\" I shook my head as I finally ended the embrace. \"Not at all...I promise it was all me.\"\n\n\"All you, huh?\" Aubrey replied and stepped back to retake her seat on the couch. She pulled her legs up and got comfortable. \"What's going on?\"\n\n\"It's nothing...not a big deal,\" I tried to downplay it and avoid any further discussion.\n\n\"Well, It's obviously a big enough deal to make you snap at me,\" Aubrey observed with one eyebrow raised. \"Come on, talk to me.\"\n\n\"No, it's nothing...seriously,\" I continued being evasive. I looked over at Aubrey and realized she was looking at me expectantly. \"Look...let's just watch the show and then I'll take care of myself...\" Wow - did I really just say that? \"I mean, I can take care of me...\" Okay, I really need to stop talking now. \"I'll take care of it...I'll just...take care of it when I get home.\"\n\nBy now both of Aubrey's eyebrows were raised. I could feel how hot my face was with what I knew was a deep crimson blush. I had finally stopped talking and just kind of sat there in all my embarrassment looking sheepishly at Aubrey. I started to wonder if maybe I could still make a break for it when I saw something click in those amber-brown eyes as realization settled on Aubrey's face.\n\n\"Meg...wait...is this about last night?\" she asked suspiciously and cocked her head. Without waiting for an answer she must have seen the truth in my expression. \"It is! Awww...Meg, I'm --\"\n\n\"NO!\" I practically shouted. \"I mean, no, its fine...you don't have to explain.\"\n\n\"Meg,\" Aubrey said my name again and had the most sympathetic look on her face as she scooted across the couch. She moved closer until she was sitting right next to me. She put her arm around my shoulder and she even had her plump lower lip pouted out which was like one of the cutest things I had ever seen in my entire life. \"My poor little Meg...\"\n\n\"Aubrey,\" I sighed and closed my eyes, using every bit of my self-control not to acknowledge or pay attention to the feel of her heavy breast pressing against my arm. \"Seriously...its fine.\"\n\n\"Hey...I totally get it,\" she moved her shoulders and nudged me and lowered her voice conspiratorially. \"How long has it been?\"\n\n\"How...what?\"\n\n\"You know,\" she nudged me again. For Pete's sake, did she even realize she was nudging me with her boob? \"Since you got off? Sorry if I was too loud and woke you up or whatever, but I've been in such a dry spell...I just had to do something about it.\"\n\n\"Oh...yeah...\" I slowly nodded and then jumped on the chance to play along. \"No, pppssht, I get it. I'm with ya, I mean...sometimes you just have to...and, uh...yeah.\"\n\n\"Exactly,\" Aubrey nodded with a huge grin. \"You know, you could have done it, too.\"\n\n\"I'm sorry - could have what?\" I asked, but I knew exactly what she meant. I was so confused with everything that was going on in my head that I wasn't really sure how to act.\n\n\"You know,\" Aubrey grinned again and this time when she went to nudge me I turned just a little bit so that her big breast bumped into my breast instead of my arm. Was it immature for me to do that? Very. Cheap thrill? Yep...but did it send goosebumps up and down my arms? Absolutely.\n\n\"Oh,\" I widened my eyes in surprise. \"You're saying that last night...I should have - what? Joined you?\"\n\n\"Well, yeah,\" Aubrey nodded matter-of-factly. \"If you were feeling it I wouldn't have minded one bit. It would have been fun.\"\n\nI raised my eyebrows in surprise.\n\n\"I mean, you're my best friend...I trust you completely,\" she continued. \"I feel like we can tell each other anything, so that means we can, I don't know, do anything together without getting all weirded out about it. Ya know?\"\n\n\"You really feel that way, Aubs?\" I looked at her and for some reason felt like I might cry.\n\n\"You know I do,\" Aubrey's adoring smile practically lit up the room. \"You're the dearest and absolute best friend I've ever had...I love you, Meg.\"\n\n\"I love you, too,\" I smiled and pouted my bottom lip out back at her. How is it possible that her smile seemed to get even brighter as I said that?\n\nAubrey turned and pulled me into a hug. I hugged her back tightly and I actually felt better. The moment that Aubrey had opened up and said those words, I made a spur of the moment decision to take all of my confused-mixed up-thoughts and just put them away. I forced those odd feelings into a little compartmentalized place in my brain and locked that door. I just didn't want to think about it...not right now.\n\n\"I have an idea,\" Aubrey pulled away and her expression turned into one of excitement. She reached down and grabbed my hand. \"Come with me.\"\n\n****\n\nI got up and let Aubrey drag me down the hall to her bedroom. She led me over to stand by her bed and then told me to close my eyes. I turned around to face her and let out a heavy sigh. \"Aubs, what are you doing?\"\n\n\"Just trust me,\" she grinned as she flitted about the room. She suddenly stopped and put her hands on her hips. \"I thought I told you to close your eyes?\"\n\n\"Why?\"\n\n\"Because I asked you to,\" Aubrey replied stubbornly and just stood there looking at me until I threw my hands up in the air.\n\n\"Fine,\" I closed my eyes. I heard Aubrey giggle in triumph and then some shuffling sounds and a maybe a drawer opening. I was seriously tempted to open my eyes when I heard a scratching sound and immediately smelled the tell-tale aroma of sulfur dioxide. Instead of peeking I stayed true to her request and kept them shut.\n\n\"Okay,\" Aubrey announced and I felt her hands on my shoulders as she gently pushed me backwards until I felt the edge of her bed hit me in the back of my knees and sat down. \"Open your eyes.\"\n\nI opened them to find Aubrey's bedroom lit up in the glow of three strategically placed candles. I caught the slightest hint of gingerbread and caramel in the air. The smells were obviously from the scented candles. Definitely a holiday-ish feel to it, but they were very subtle and I had to admit they did give her bedroom a warm and inviting aroma. Aubrey was standing in front of me, her curvaceous figure dramatically lit by the illumination of the candles. She had the most affectionate, endearing smile on her face.\n\n\"Do you like it?\" she asked with what seemed a quiet eagerness.\n\nI nodded my head as I looked around, feeling a little nervous for some reason. \"Uh...yeah. I do.\"\n\n\"Awesome,\" Aubrey's smile grew a little wider. She stepped forward and put her arms around me and gave me another one of her awesome Aubrey-hugs. I instinctively put my arms around her in return and my eyes closed automatically as I enjoyed the sensation of being pulled into all of my best friend's sensuous curves.\n\nAubrey ended the hug and stepped back and gave me another smile as she brought her hands up to her waist and hooked her thumbs into the waistband of her yoga pants. She slowly started pulling them down and I held my breath. Aubrey hesitated for a moment with the top of her yoga pants pulled down just far enough to reveal the top of her powder blue panties. I couldn't take my eyes off of her hands. Now I honestly don't know if my mind was playing tricks on me or if Aubrey just naturally moved with the sensuality of a professional stripper...but the oh-so-subtle way she slowly wiggled her hips back and forth a few times to get the elastic waistband of her exercise pants over the swell of her hips would have had the stage raining with dollar bills in any gentlemen's club in the world.\n\nAfter she got the pants over her hips and ass, she continued to peel them down her thighs. She bent over to take them the rest of the way down her legs which gave me an enticing view down her tank top at her generous cleavage. She quite cutely kicked her feet a few times to finally be free of the garment as she straightened back up. She was wearing a really cute pair of lacy boy-short panties that I just now noticed matched her tank-top. I almost chuckled at the fact that her fashion sense was on point even when she was just bumming around her apartment. She had just grabbed the hem of her skimpy top when she stopped and looked at me expectantly.\n\n\"What are you waiting for?\"\n\n\"Huh?\" I replied, still in somewhat of a daze. \"What am I...what?\"\n\n\"Get undressed, Meg,\" Aubrey giggled. \"Unless you're seriously planning on leaving your clothes on.\"\n\n\"Um,\" I was finally paying attention to what was happening right now. \"And what are we doing right now?\"\n\n\"You know,\" Aubrey nodded her chin and raised her eyebrows. \"We're going to do our thing.\"\n\n\"Aubs,\" I half shrugged my shoulders. \"I don't think I exactly understand...what 'thing'?\"\n\nAubrey smiled at me again in some unknown understanding that I apparently wasn't in on. She came over to me and took my hand and then sat down beside me on the bed.\n\n\"We're going to do what we should have done last night,\" Aubrey whispered excitedly. \"You know...we're going to masturbate. Together!\"\n\n\"What?\" I asked as the realization hit me about our conversation in the living room and this whole trip to her bedroom. \"Aubrey...I...I appreciate it, but no. It's cool. We don't have to do this.\"\n\n\"Meghan,\" Aubrey continued smiling and held my hand as she cocked her head at me with this knowing look on her face. \"I know you need this. I want to...and I know you want to, too.\"\n\n\"Oh, I do, huh?\" I replied skeptically.\n\n\"Yeah, I think you do,\" Aubrey confirmed with sincere confidence. \"So...just trust me on this one.\"\n\nI laughed nervously, but she didn't join in. My laughter quickly faded. O-kay...so she really wasn't kidding. I looked down at the floor, blushing like crazy and before I could think of anything else, my mouth went ahead without my authority or written approval or anything and I heard myself say, \"Okay...\"\n\n\"Really?\"\n\n\"Yeah, I think you're right...and I do trust you.\"\n\n\"Cool,\" Aubrey smiled. She climbed up further on the bed and I looked up to see what she was doing.\n\nAubrey had crawled to the middle of the bed and had gotten up on her knees. I immediately flashed back to how incredible she looked last night when she was in that same position touching herself. She grabbed the hem of her tank-top and lifted it up an inch or two, but then stopped as she looked at me. I raised my eyebrows in question.\n\n\"Um,\" she pursed her lips. \"It might help if you kind of got naked.\"\n\n\"Oh...right,\" I nodded and stood up.\n\nI faced the bed as I put my fingertips in the waistband of my sweatpants and nervously pushed them down. They were baggy enough so that they fell down my legs and I stepped out of them as my eyes moved back up and my gaze was immediately glued to Aubrey again. She had crossed her arms and was once again pulling her flimsy shirt up by the hem. I licked my lips in anticipation as that piece of material traveled upwards, revealing first her tan, toned stomach and then a peek at her significant under-boob. She stopped there to check on my progress, so I quickly slid my t-shirt up and off.\n\nI just kind of stood there in my bra and panties as she finished pulling her shirt off. Her large, round breasts bounced slightly as they came free from being covered up by the shirt. My breath caught. I don't think I would ever get used to being this physically close to someone who was as exceedingly beautiful as my best friend...well, at least not when they were in the process of getting naked with the intention of masturbating in front of me. Uh, correction - with me...gulp...I don't think the whole mutual part of this little scenario had quite sunk in for me just yet.",
        "I looked back up into Aubrey's face and the expression she wore stopped me short. Her look was one of expectancy - but not like I would have thought. It was more about the fact that right now she was completely trusting me and her expectation was that I was going to do the same. Yeah, yeah, I know - I'm waxing philosophical when we were fixin to rub our pussies...but I guess you had to be there to understand it. It was deep.\n\nSomething clicked. I'm not sure if I can accurately describe what exactly it was that clicked into place in my brain, but I was ready to give myself completely over to what Aubrey wanted. I was ready to commit to this bonding of best friends...to this utterly feminine experience of exploring and touching our bodies to bring ourselves pleasure. Together. I reached my arms up behind my back and shyly returned Aubrey's smile as I unhooked my bra and then slid it off, dropping it on the floor with the rest of my clothes. I climbed up on the bed, still committed to going through with this, but also very self-conscious of my almost naked body in such close proximity to Aubrey's.\n\nI normally don't let myself succumb to such negative, petty comparisons - we as women are all beautiful in our own right. I truly believe that...but trust me, that is a concept that isn't quite as easy to cling to when you suddenly find yourself exposed two feet from a living, breathing centerfold. I was up on my knees in the same position as Aubrey. I covered my much smaller breasts with my hands and kind of looked around the bed, not really sure what to do. Aubrey saved the day and her timing could not have been better.\n\n\"Oh, wow,\" she said earnestly as she looked me up and down. \"Meg...you are just so beautiful.\"\n\n\"What?\" I giggled nervously.\n\n\"I mean you're obviously pretty and have a gorgeous figure and all,\" Aubrey replied and then shook her head as if in amazement. \"But...damn...I had no idea how stunning you would be without your clothes on.\"\n\n\"Seriously?\" I arched an eyebrow at her. \"The ultimate model for pin-up girl art thinks I'm stunning?\"\n\n\"Of course,\" Aubrey looked at me like I was crazy and her tone of voice reaffirmed it. \"Meg...wow - just look at yourself.\" Aubrey emphasized her point by reaching out and gently grabbing both of my wrists and pulled my arms out wide so that I was effectively on display. \"I mean, my word, girl - I would kill for your stomach. And your boobs are like...perfect.\"\n\nI looked down to see if I could actually see what she was talking about. My body was definitely in direct contrast to Aubrey's unbelievable curves. I was more lean and athletic, but I still had curves in all the right places. I think we were going to have to agree to disagree about my boobs - especially compared to hers. But I guess my little six-pack was kind of nice looking...I looked back up and we both smiled and I of course blushed at her comments. Aubrey released my wrists and then we just kind of mutually agreed without actually saying anything to lie down. We were side by side and I don't think three seconds went by before we both got a case of the giggles.\n\nI'm pretty sure the silliness was a direct result of nervousness, but after we finally got it out of our systems, Aubrey got things started by reaching up and laying her hands on her breasts. She let out a deep sigh and then very slowly began moving her hands as she whispered to me. \"This is so exciting.\"\n\n\"Yeah, I guess it is,\" I agreed and without putting too much thought behind it raised a shaky hand up and let it rest on top of my breast.\n\n\"Are you nervous?\"\n\n\"A little bit,\" I confessed.\n\n\"Nervous is okay...but not scared, right?\" She asked and then pulled her legs up until her toes were pointed straight up in the air. She kind of titled her pelvis up for a moment and in one motion stripped off her underwear. She flung them across the room in the general direction of her hamper and then turned her head towards me. She smiled and cocked an eyebrow at me. I knew what that meant.\n\n\"No,\" I replied and pulled my panties off, but with nowhere near as much flair. I leaned over to the edge of the bed and dropped them on the floor in the pile with the rest of my clothes. \"I'm not scared...not really. I'm with you, so nothing to be scared of, right?\"\n\n\"Exactly!\" Aubrey's face lit up. She continued smiling at me with her head turned as her hands went back to her breasts. She began rubbing and massaging them more aggressively. \"Just do whatever feels good...and enjoy it.\"\n\nSo I did.\n\nWell...at least I tried. As outside of the box of what my expectations were for this Saturday afternoon, you could say that it started off with good intentions. I eventually got over my shyness and started rubbing my breasts and playing with my nipples. It felt good and I knew I was getting wet...but I felt awkward and even though I made a valiant effort not to watch what Aubrey was doing, I really couldn't help myself...but can you blame me? So what started out as \"normal\" (there's that blasted word again) - turned into Aubrey and I touching ourselves as we watched each other.\n\nNothing was said or planned or anything like that...things just kind of escalated. As soon as Aubrey really got going, she just did what Aubrey does when she got into it - which is she moved around, changed positions and got up on her knees again only this time she was facing me. She motivated me to move around as well. I basically just mirrored everything she did. We both ended up on our knees, our hands on our pussies, rubbing, fingering, tasting our nectar...on a side note I had never done that before, but she did it like literally right in front of my face and I felt compelled to follow her lead. Wise decision on my part - I loved it.\n\nWhen we reached our orgasms it was almost at the same time, but she beat me to the punch by about ten seconds. When she came, she instinctively reached out to steady herself and ended up using my shoulder to brace against. This brought our bodies really, really close together. We didn't physically touch other than her hand on my shoulder, but her heaving breasts were like less than an inch from mine and her face right there in front of me. It was amazing.\n\nI have to confess, watching Aubrey from such an extremely close vantage point as she orgasmed was over-the-top exciting...I mean seeing the little nuances of the look on her face and being able to witness the way her body trembled and moved during her orgasm was nothing short of spectacularly beautiful...but when she touched me? When her hand physically made contact with my skin? That was what drove me over the edge. It was the strongest orgasm of my life.\n\nWatching Aubrey cum and then knowing she was watching me while I came? I realized that this trumped the other experience and had now officially become the new, absolute hottest thing that had ever happened to me or that I had ever been a part of...and it made me cum again.\n\n****\n\nOf course our relationship changed again after that weekend...for the better.\n\nWe were now unconditionally the bestest of friends. The more we hung out and got to know each other on different levels, more intimate levels, the more I came to love and admire Aubrey. What was not to love? I mean, she was funny, smart, witty, silly and of course drop-dead gorgeous. I found myself enjoying the time we spent together more than I have ever enjoyed being around another human being.\n\nOf course Thanksgiving meant spending time with our families, but we did it together. Half the day was spent with Aubrey's family which was wild and crazy with all of her aunts and uncles and cousins. The food was ridiculous and I had a blast listening to all of their stories about when Aubrey was little. We played board games and ate until we couldn't move. It was so enjoyable and we had the absolute best time. I loved her family.\n\nMy family on the other hand was much smaller since I didn't have as many extended relatives. Since it was normally just me and my parents, we usually didn't make that big of a deal out of Thanksgiving. Not like Aubrey's family did...but I had promised my mother we'd be there. I was actually kind of excited when I found out we would have a special guest this year. I really wanted Aubrey to meet one of my favorite people in the whole wide world, my Auntie Kate. So we left her parent's house and spent the rest of the day with my family.\n\nAuntie Kate often traveled during the holidays, but this year she was spending both Thanksgiving and Christmas with us. She was actually my mom's Aunt so technically she was my Great Aunt, but I called her Auntie Kate anyways. She was like the coolest, most fun person I knew and ever since I was a teenager I felt like I could always confide in her without judgement. I seriously didn't even know how old she was. She wouldn't say and she certainly didn't look or act like she was in her seventies which I knew she had to be. I just respected and loved her so much and was so excited to introduce her to Aubrey.\n\nI was actually pleasantly surprised at the spread my Mom put on. I had the feeling Auntie Kate probably had a hand or two in making sure the menu was up to snuff. Either way, the two of them went to a lot of trouble so of course we both felt obligated to eat again. I even had seconds of dessert at my Auntie's insistence. The food was great and afterwards my dad made a fire in the fireplace. We just kind of sat around and chatted. Both of my parents seemed to like Aubrey well enough and I could tell Auntie Kate just loved her to pieces. It made the whole day so much fun. With Auntie Kate here it was the first time in quite a few years I actually enjoyed Thanksgiving. It even made me start to look forward to Christmas.\n\nAubrey seemed to be having the time of her life. I studied her when she wasn't looking. This was all sort of new to her since she'd never had a real best friend before. To be honest, this felt pretty new to me too since I had never been as close to anyone as I was to Aubrey. The more I looked at my best friend, the more it sunk in that her being happy made me happy. I guess this is what it meant to really love someone...as a friend of course.\n\nAs weird as this may sound, but being Aubrey's best friend and Aubrey being Aubrey also meant that masturbating together was not a one-time thing. The second time it happened was that same holiday weekend. Somehow I let her talk me into going shopping on Black Friday...a first for me and I still rue that decision. Later on after a well-deserved nap, we went out to dinner and then stopped by a club where we both got tipsy. We had a lot of fun dancing, drinking and just talking to people. It was kind of funny that when we finally decided to call it a night, we took a cab back to Aubrey's apartment for our weekly sleepover without even discussing it. I guess we both just assumed that that was the plan.\n\nAgain, we did our routine thing with Aubrey taking her quick shower. Neither of us felt like watching TV, so we just decided to go to bed. I wasn't going to say anything or bring it up, but in the back of my mind I was definitely curious to see if...maybe? Yeah, there was no maybe involved as Aubrey initiated it as we were getting ready for bed. She just threw it out there like it was no big deal: Hey, so do you want to get off with me? Of course I did. I wasn't nearly as hesitant or shy this time around thanks to the alcohol, but it still felt surreal. I suppose I felt just a little bit awkward at first, but once we were both naked, it was game on.\n\nIt was also just as blazing hot as the first time and we both came really hard.\n\nThe third time actually happened the following morning...but ended up being a little different. We slept in and just kind of lounged around in Aubrey's bed for a while, chatting about nothing really. I had finally let Aubrey talk me into skipping the whole pajama thing like she did and I had to admit sleeping naked felt incredible. I wasn't sure what was better - the feel of clean, cool sheets against my skin when I first got in bed or the luxurious warmth of waking up warm and naked under the covers first thing in the morning. Either way - I was now a firm supporter of slumbering in the buff.\n\nAnyways...it was Saturday morning. We were lazing about in Aubrey's bed trying to work up the motivation to physically get up and take showers so we could hit our favorite little place for a late breakfast. The only problem was the temperature had dropped overnight and between the warmth of Aubrey's fluffy comforter and our cozy little den of body heat under the covers, neither one of us really felt like moving. I had just worked up the fortitude to jump up and make a naked dash for the bathroom when Aubrey put her arms above her head in a big yawn and a stretch that ended in a giggle.\n\n\"What?\" I turned my head.\n\n\"Mmmm,\" Aubrey stretched again, only this time she didn't end the stretch in a giggle. She ended it by pushing the blanket and sheet down and cupping her breasts as she purred, \"I'm still horny.\"\n\n\"Is that right?\"\n\n\"Mmmhmm,\" she blinked at me as her right hand left her breast and eased its way over her stomach until it disappeared under the sheet. I saw the lump under the blanket start slowly moving right at the point where I guesstimated her vagina would be.\n\n\"Alrighty then,\" I chuckled. \"Well, you do your thing while I take a shower.\"\n\n\"Awww,\" Aubrey gave me a sad face, but then grinned. \"Come on...do it with me.\"\n\n\"I, uh...\" I started to say, but then Aubrey closed her eyes in obvious pleasure and I glanced down. I couldn't help but watch the way she was softly rolling her nipple between her thumb and finger. Her other hand was still moving under the blankets.\n\n\"Please?\" Aubrey's eyes were still closed, but she was pouting her bottom lip out.\n\nIf she would have opened them she would have seen that she didn't have to beg. I had already laid back and had my hands on my breasts. I gently started rubbing and kneading my modest boobs and then took my very erect nipples in between my fingers and was able to squeeze both of them at the same time while still massaging my breasts. Aubrey opened her eyes and watched me for a moment with a big smile on her face.\n\nI closed my eyes and let my right hand wander down the flat of my stomach until I was lightly cupping my mound. I knew I was already wet. I could smell Aubrey's musky sweet scent and it only turned me on even more. I opened my eyes and found Aubrey looking back at me through a heavy lidded squint. She arched her back a little and by doing so changed her position in that she moved closer to me. Our shoulders were actually touching as she settled back into her pillow. I could feel the tiny little vibrations of the movements of her hand on her pussy through that skin to skin contact. I couldn't help myself as I let out a moan and ran my fingers down through my trimmed pubic hair to touch my labia.\n\n\"Mmm...fuck yes,\" Aubrey whispered to me in response to my moan.\n\n\"Uh-huh,\" I agreed as I wiggled my finger to part my swollen inner lips. I shuddered as I dipped the tip of my finger into just the entrance of my slippery core and then traced that finger back up to my clit. I teased myself with just the softest touch on my pearl and had to bite my lip.\n\nOur movements had caused the sheet to move down until it was bunched up around our knees. We were both completely exposed to each other...and we weren't being shy about out-and-out looking at each other, either. I couldn't help but notice that Aubrey was much more relaxed and subdued. It wasn't that she wasn't enjoying herself - her moans and groans made it pretty obvious that she was. It just seemed like she was making this more about us this time rather than just getting herself off.\n\nThis morning felt different...there was a feeling of intimacy between us.\n\nYeah, this time was definitely different...but not a bad different at all. It just seemed like this was the first time we were being deliberate...we were intentionally masturbating for each other rather than two girls who happened to be masturbating at the same time. We were watching each other...almost performing for each other...and I don't know, just enjoying each other. It made it that much more exciting. I know for me, it was a huge turn on lying so close to Aubrey as we touched ourselves. Our shoulders and now our upper arms were in constant contact and it felt...whew, just so fucking hot. The occasional wave of pleasure would make my eyes close for a moment or two, but I tried to keep them open so that I could continue to watch Aubrey play with her breasts and rub her pussy.\n\nI was just starting to ride the outer edge of my orgasm when I switched from my right to my left hand. I was really starting to feel it and it was going to be a big one. I had just finished sucking my nectar off of my fingers and had put my right hand down by my side to rest it for a minute. Without a word Aubrey took her hand off of her breast and reached down. She grabbed my hand and adjusted hers so that our fingers were intertwined as she started to gasp.\n\n\"I'm...I'm...so close, Meg.\"\n\n\"Yes,\" I encouraged her and wondered where I had suddenly found my voice. I'm guessing my newfound courage could easily be attributed to endorphins because I was really, really turned on. I decided to just go with it. I squeezed Aubrey's hand as I rubbed my clit faster. \"Yes...cum for me, Aubs. Cum for me.\"\n\n\"Uh-huh...uh-huh,\" she gasped her agreement and turned her head towards me. Her face had a look of utter concentration on it and her hand was a blur.\n\n\"Cum for me, baby,\" I whispered.\n\nThat request seemed to do it for her...Aubrey's lips parted and she kind of let out this quiet moan as she lifted her hips up slightly. Her muscles seemed to go rigid as she held that position, her hand still moving on her pussy as her legs and breasts began to quiver with her spasms. She suddenly dropped her hips to the bed as her breathing came in shallow gasps and then she went rigid again and lifted her hips back up almost towards me like she wanted me to really see her. After what seemed like a really long time, but was probably only about ten seconds, she collapsed back onto the bed with her eyes closed and her large chest heaving up and down. I continued to hold her hand as I watched her every movement.\n\nMy fingers made faster and faster circular motions around my swollen clit. I was lost in my own efforts when Aubrey opened her eyes and whispered, \"Are you close?\"\n\nThe sound of her voice was the last little push I needed.\n\nI nodded my head and then boom-shaka-laka. My whole body shuddered and I moaned loudly as my orgasm rocketed through me. My muscles clenched and then released as fireworks went off somewhere deep inside of me. The pleasure was unreal as it seemed to continue longer than usual, rolling over me in what felt like waves, one after another. I turned towards Aubrey and curled up on my side into the fetal position as the throbs of pleasure finally started to decrease in intensity. I didn't even realize how close I was to Aubrey as a result of rolling over or that I was still holding her hand as little aftershocks made my legs twitch and jump.\n\n\"Wow!\" Aubrey whispered excitedly into my face. She had mimicked me by rolling on to her side towards me and was running her hand soothingly up and down my back. \"That must have been a good one.\"\n\n\"Uh-huh,\" I mumbled and felt numb all over...but I wasn't numb enough that I didn't feel Aubrey's body against mine. We were practically touching from head to toe. I opened my eyes when Aubrey put her free arm around me. She rested her face right beside mine so that we were literally cheek to cheek. I became aware of the weight of her heavy breasts pressed right up against mine. I closed my eyes and put my free arm around her waist and just let myself linger in the warmth of her skin touching mine and her scent in my nose. She smelled wonderful.",
        "She finally ended the embrace by kissing my cheek and rolling on to her back with a sigh. I couldn't help but marvel once again at just how perfect her big breasts were...or how the sun streaming in from the cracks in the blinds lit up her face in profile, highlighting just how beautiful she was. I felt the sudden urge to do something, but the spell broke when she yawned and sat up. She stretched out her arms and then moved her head around to work out some kinks in her neck. I hadn't moved yet...hell, after that climax I wasn't really sure I could. Aubrey stood up and announced that she was starving and sashayed her way to the bathroom.\n\nI'm not really sure that I was even aware that my eyes were following her every move until she disappeared behind the bathroom door.\n\n****\n\nIt didn't take me long to figure out that the month of December was the slowest time of the year for my new company.\n\nSlow as in not a lot to do...as in not enough work to pass the time...as in bored to tears. For some reason the closer the calendar crawled towards the Christmas holiday, the slower it got. In fact, quite a few of the veteran employees saved their vacation days so that they could take the whole week or even two weeks off for Christmas. Being that I had only been here for a couple of months, I of course didn't' have any vacation time banked yet. The company did give all of its employees Christmas Eve day, Christmas day and the day after Christmas off as paid holidays so that was something to look forward to. In the meantime I was stuck having to go to the office every day. Aubrey had used up most of her vacation on a beach trip over the summer, so at least I wasn't lonely.\n\nAt first not having a lot to do drove me crazy with boredom especially with how quiet our part of the building was since well over half of our department including the Director were on vacation. Lucky for me this wasn't Aubrey's first rodeo, so even though we might not have been work-busy...we managed to entertain ourselves by texting each other, playing games, watching videos and just hanging out. I guess it was kind of nice to goof off a little, but I should have figured that Candy Crush and YouTube would only go so far before my best friend's inner 'wild child' decided to show up.\n\nI was lounged back in my chair trying to get to the next level of some mindless game on my phone when the icon popped up in the corner indicating I had a new text. I paused my game and opened the message. Of course it was from Aubrey. Follow me right quick. I turned my head to look at her, but she was already up and walking away. With a shrug and nothing else better to do I got up and followed her.\n\nWe ended up in our favorite little hidey hole - the Marketing Department's supply room.\n\nI shut the door behind me and turned to Aubrey and whispered, \"What's up?\"\n\n\"I'm freakin' bored,\" Aubrey announced. She looked really cute today. She was wearing this form-fitting dress that was made to look like a long sweater with buttons all the way up the front. It really showed off her curves.\n\n\"Okay,\" I smirked. \"Join the club.\"\n\n\"And I'm horny,\" she grinned and began to slowly unbutton the front of her dress.\n\n\"Oh, great,\" I sighed. \"So I get to play lookout?\"\n\n\"Nope,\" she shook her head and took a step closer to me. She stopped what she was doing and reached out her hands and unbuttoned the top button of my long sleeved blouse.\n\n\"Um,\" I gulped and looked down at her hands. \"What...are, uh...what are we doing right now?\"\n\n\"Come on,\" Aubrey whispered and bit her bottom lip as she unbuttoned the next button of my shirt. \"This will be fun...and really hot.\"\n\nThe marketing storage room had two light switches, one for each row of fluorescent lights. Aubrey took her hands off of my blouse and reached over and flipped one of the switches. The row of lights directly above us went out so that we were now partially cast in shadow. Aubrey's hands went back to her sweater dress and unbuttoned another button. I watched in anticipation as the now dramatic lighting cast some incredible shadows on her generous cleavage. The next button undone revealed the center part of her bra. Aubrey paused at the next button and looked up at me with that cute little grin of hers.\n\n\"Do it with me...please, Meg?\"\n\n\"Fine,\" I sighed and rolled my eyes as my fingers fumbled with the next button on my shirt. \"Why in the world I let you talk me into this stuff, I'll never know.\"\n\n\"Cause I'm your best friend and you love me,\" Aubrey giggled quietly and after unfastening the last of her buttons pushed the front of her dress apart.\n\n\"Oh, wow...I love those!\" I exclaimed. I couldn't take my eyes off the bra and panty set she was wearing. It had to be new as I'd never seen it before...okay, I guess I have to admit I wasn't so much captivated by the bra or the matching panties so much as what they were covering. \"Where did you get them?\"\n\n\"They're Wacoal,\" Aubrey replied and looked down at her bra. She slowly ran her hands over the sheer, lacy cups of the peach colored bra. She looked back up at me. \"I bought them online. You really like them?\"\n\n\"They're super cute,\" I murmured as I watched her hands continue to move along the outside of her large breasts. My shirt was completely unbuttoned and I glanced down to see my own hands moving up my rib cage to lightly stroke the underside of my simple black bra as if they had minds of their own.\n\n\"You should check out the website,\" Aubrey's voice was just above a whisper as she took a step towards me. She ran her hands down her stomach and then along the waistband of her matching panties. \"They have really good prices.\"\n\n\"They do?\" I asked quietly as she took another step closer to me. Her right hand had moved down so that she was cupping her mound while the other hand had moved back up to squeeze one of her breasts. I unbuttoned my pants and put my hand down the front of them so that I could mirror her actions. The gusset of my panties was already soaking wet.\n\n\"Mmmhmm,\" Aubrey nodded and then pulled the cups of her bra down, first one and then the other so that her ample breasts were exposed. I did the same and my nipples were painfully hard. Aubrey lifted her hand up off of her sex so that she could slide it down her stomach and inside of the waistband of her panties. I followed her lead and exposed my breasts before slipping my hand inside my panties. Aubrey moved just a little closer so that she was standing right in front of me. \"I got them...for...sixty percent off.\"\n\n\"Oh, wow,\" I groaned as my fingers slid down through my trimmed hair and I gently pressed them against my labia. I pushed my hand further down so that I could draw my middle finger upwards to part my swollen inner lips. My hand was already drenched with my slippery juices as I ran my fingertips slowly up and down my slit. \"That sounds like a really great deal.\"\n\n\"It...was,\" Aubrey panted. She removed her hand from her pussy and popped her fingers into her mouth to taste herself. I couldn't help but moan since she was standing close enough that I got a very good whiff of her scent. Her hand went right back to her pussy and I looked down as her other hand began pinching and pulling on her rock-hard nipple.\n\nMy hand moved up and I did the same to my breast. I watched her fingers gently tug on her nipple...her nipple that was only about three inches away from my nipple. I watched in slow motion as her hard little summit moved forward and then it was lightly touching my boob. I could feel the rubbery texture of it against the sensitive inside curve of my breast as my eyes shot up. I looked directly at Aubrey who was now leaning in toward me. Both of her exposed breasts pressed up against mine...which also happened to mean that her right breast was not only pressed up against my breast but it was also pushed up against my left hand that was still on my breast. Aubrey's breast felt warm and heavy against the back of my hand.\n\nI nervously licked my lips as her face got closer and closer to mine and... Wait...was she about to...was she going to kiss me? Aubrey continued leaning in and then her face bypassed mine to the side until she could whisper in my ear.\n\n\"I think we should try and do it together this time.\"\n\n\"You do?\" I croaked as she continued leaning in against me so she could maintain her whisper-in-my-ear position. My head was spinning and I felt like I couldn't do anything but just stand there. Aubrey was close enough that the back of her hand that was rubbing her pussy was starting to bump against the back of my hand that was doing the same thing.\n\n\"Yes,\" she hissed softly. \"I think it would be really hot...if we came at the same time.\"\n\n\"Okay,\" I managed to whisper.\n\nShe moved her head back a little and gently rested her forehead against mine. Her eyes were closed, but I know she had to realize that our breasts were still touching and our hands kept making contact. I could feel her hand start to move faster and she let out a little moan.\n\n\"Are you close?\" she asked in a raspy voice. She began to slowly move her hips which caused her body to shift and her nipples to scrape against mine.\n\n\"Uh-huh,\" I mumbled through a small groan. I had been on the verge of losing it as soon as our boobs touched the first time...now I was practically bursting.\n\n\"Me too,\" Aubrey murmured and reached up and grabbed the shelf above my head with her left hand which pushed her body more firmly against mine. She still had her eyes closed. She was breathing heavier and I could feel the movements of her hand pick up even more speed. Her heavy breasts were now rubbing up and down against mine. \"Are...are you ready?\"\n\n\"Uh-huh,\" I gasped and realized that I had started to move too. I was not only rubbing my clit, but I was basically grinding my body against Aubrey's.\n\n\"Cumming!\" she cried out in a short, quiet bark of a voice and tensed up with her body pressed up against mine. I immediately felt my own orgasm start to course through me and I pushed my hips forward so that our masturbation hands were so close together it was hard to know where hers started and mine stopped. Our bodies were touching from our thighs to our tits and I honestly couldn't tell which shivers and trembles were mine and which ones were Aubrey's. I suddenly felt Aubrey kind of sag against me. It was the change in her posture that caused my mind to fully grasp the fact that while we were cumming, my hand had shifted from squeezing my own breast and had been firmly grasping and massaging Aubrey's boob.\n\n\"Holy...fuck!\" Aubrey panted as she lifted her arms up to hug me. I moved my arms, one hand moving off of my pussy and the other letting go of Aubrey's breast, and hugged her in return. I was quite cognizant of our barely dressed bodies pulled together tightly by the hug. The contact of our breasts pressed together and our hips touching was only making me feel even more confused...I could not deny how incredible Aubrey felt in my arms.\n\n\"Agreed,\" I breathed. My back was beginning to hurt from leaning on the shelves behind me, so I pushed my body forward a little.\n\n\"Thank you,\" Aubrey whispered into my ear with that cute little giggle of hers. She kissed me on the cheek and stepped back effectively ending the embrace.\n\nI just kind of stood there for a moment with my shirt unbuttoned, my bra cups pushed down and only now became aware that my slacks had fallen down around my knees. I watched as my best friend adjusted her bra and began refastening the buttons on the front of her dress. I came out of my daze and pulled up my slacks and got my clothing situated. We stepped to the door of the storage room together and then took one last pause to make sure our clothing was straightened up and we both looked presentable. Aubrey grinned at me and I smiled back.\n\n\"I think that was the best one yet,\" she nodded confidently and winked at me right before she opened the door.\n\nI completely agreed.\n\n****\n\nI walked around in a very confused haze for the next couple of hours. What just happened? At one point Aubrey even asked me if I was feeling alright or if something was wrong. I put on my happy face and explained it away as just a small head-ache. Aubrey was acting normal. Totally normal like what had happened in the storage closet was just not a big deal...so...I decided I would to. She acted like that was just typical behavior for best friends...so I decided I'd act that way as well. Overall, Aubrey seemed to be in a really good mood. I took all of my confused feelings and stuffed them into what I now imagined was this closet in my head. Hmph. I had a hard time mentally closing that imaginary door - the closet seemed to be getting kind of full...but I did it and forced myself to be in a good mood.\n\nThe rest of the week was just boring work stuff, but then Friday finally rolled around. We went out and took a long lunch. We ate slices of pizza and then stopped by the mall that was down the street from work so we could do a little Christmas shopping. It was fun. At one point as we strolled in front of all the decorated shops I came to the realization that I was completely at ease and comfortable around Aubrey. Like comfortable in a way I don't think I had ever been before. Huh...in fact I couldn't think of one other person I'd rather spend time with. I shook off those thoughts as we chatted and made plans to go out later.\n\nI drove over to Aubrey's apartment complex and then we took a cab to this Italian place we'd heard about. If it was even the least bit possible I swear I would have packed up all of my stuff and moved in with that lasagna. It was that good. I had never tasted anything that delicious in my entire life. Aubrey had the chicken picatta and while there is no doubt whatsoever that it was absolutely scrumptious - it didn't stand a chance against how good my lasagna was. We also shared a bottle of wine and by the time we left the restaurant to go to the bar I think we were both on our way to being a little tipsy.\n\nThe bar was crazy crowded and the entire place was of course all decked out in Christmas decorations. We saw some people we knew as regulars and had a drink with them. It was raucous and fun, but after a few more shots and an hour of being groped and jostled on the dance floor I was ready to call it a night. Aubrey wanted to stay, so of course I waited on her. She danced and drank. She was being really flirty and guys were buying her shots left and right. I was drunker than I usually allow myself to get, so I knew Aubrey was headed to sloppy drunk any shot now. I finally decided enough was enough and managed to corral her and help her outside. We grabbed a taxi and headed back to her apartment.\n\nPhysically getting from the cab to her apartment was a little more difficult than usual, but we managed to make it inside without any falls or puking incidents. Aubrey did her usual thing of heading straight to the shower leaving the usual wake of scattered clothes as she started undressing as soon as her front door closed. I followed after her and picked them up and tossed them into her hamper as her naked self shut the bathroom door. I shook my head with a smile as I got undressed and crawled under the covers of Aubrey's bed. I guess I was still buzzing pretty hard because I fell asleep flat on my back as soon as my head hit the pillow.\n\n\"Meg,\" Aubrey whispered.\n\n\"What?\" I croaked. I finally got one of my eyelids to cooperate and it opened a crack. Aubrey was leaning over me with a big silly smile on her face.\n\n\"Are you tired, sleepy-head?\" Aubrey giggled and then tickled me in my ribs. It's funny, but the fact we were both naked didn't even seem like a big deal now that I was used to it.\n\n\"Me?\" I said louder this time as I cringed away from her. I was very ticklish and she knew it. \"Why would you think that?\"\n\n\"Are you too tired to play?\" Aubrey whispered and giggled again.\n\n\"I'm up,\" I grumble-mumbled, but closed my eyes again.\n\n\"Awwww,\" Aubrey pouted and I felt her hand lightly tickle its way up over my ribs and briefly touched the underside of my boob as she tried to wiggle her fingers under my arm. \"You're gonna miss all the fun.\"\n\n\"Mmph...I'm up,\" I replied, but I don't think my lips even moved.\n\nI could tell that Aubrey was on her side facing me. I cracked my eye back open and she was lying there propped up on her elbow. Her free hand was making a circuitous route of her body...her fingertips lightly running down her side and over her hip and then back up to trace the contour of each of those lovely large orbs. She had this little smile on her face as if she was just exploring her own body and was pleased with what she discovered. I couldn't fault her there. In the dim light cast by her night-lite, she looked breathtaking. Her long chestnut hair was pushed back to flow down and over her shoulder. Her flawless, tanned skin looked almost bronze in the shadows. I opened my other eye and visually followed her hand over the luscious curve of her hip and up to the swell of her breasts that were perfectly accentuated by her trim waist.\n\nMy goodness, but my best friend was beautiful.\n\nI was getting excited so I brought my hands up and let my fingertips dance around my chest. They touched the outer sweep of my breasts and then I ran my fingers down to the sensitive underside of my boobs. I lingered there at the pleasurable sensations that gave me. I let my hands sweep up to run lightly up and down the modest valley between my breasts. My fingers move outward in a circular motion to kind of trace the outline of my boobs in opposite directions at the same time. My fingertip route grew smaller until just the very tips of my fingers were circling my areolas. They puckered and hardened at the attention and I could feel my nipples swell. Aubrey had been watching me intently.\n\n\"I'm glad you decided to join me,\" she had leaned right over me to bring her lips to my ear and it once again brought our bodies into contact. Her heavy bosom rested on my right breast and shoulder as she paused after her whisper and I could almost swear I thought I felt her kiss the side of my neck.\n\n\"Well, I couldn't let you have all the fun,\" I whispered with a grin as I brought my hands down to rub up and down my stomach.\n\n\"I really think...\" Aubrey pulled her head back to look me in the face as she whispered...but she didn't move her body off of me. She was still kind of on her side but leaning against me as she reached her hand down between her legs. I could feel her thigh pressed firmly up against mine and the side of her hand was rubbing against my hip as she began to slowly move it up and down her sex. \"...that we should do it again.\"\n\n\"Do what?\" I asked and my mouth suddenly felt dry.\n\n\"You know...this,\" Aubrey replied as her hips began slowly undulating which caused her breasts to rub back and forth against my shoulder and boob a little bit. \"So we can cum together like we did at work. Okay?\"\n\n\"Okay,\" I immediately agreed without even thinking about it. I was so completely turned on right now that I was one hundred percent committed to doing whatever she wanted without question. My hand was on my pussy, but I was just lightly running my fingers up and down my slit, teasing myself. I was trying to hold off, waiting for Aubrey to let me know when she was close...because I swear the moment I touched my clit I was just going to explode right then and there.\n\n\"Damn, Meg,\" Aubrey moaned and pushed her hips forward so that it forced her hand to be trapped between my hip bone and her pussy. She sort of started to grind on me - well, grind on her hand but with my assistance if that makes sense. She then purposely moved her shoulders to rub her breasts back and forth against me since she didn't have a free hand to touch them. \"Doing this...together...is just such a huge fucking turn on, isn't it?\"",
        "\"Absolutely,\" I agreed quietly and found myself pushing my chest kind of towards Aubrey so that her breasts were really rubbing up against me.\n\n\"It...feels so good,\" Aubrey announced before she suddenly switched positions and laid down flat on her back right next to me. She scooted over so that from head to toe our bodies were touching on the side closest to each other. I was a little disappointed that she wasn't rubbing her breasts against me anymore, but then a huge thrill ran up my spine when she picked up the leg closest to me and draped it over mine.\n\n\"Aubs, are you getting close?\" I gasped and forced my hand to stop moving on my pussy before I lost it. I could feel my heartbeat pulsing through my slick lips as my fingers stopped moving.\n\n\"Mmmhmm, I am,\" Aubrey was breathing hard now too. I could see her fingers working her clit and thought the wet little sounds were just as sexy as hell. I glanced down and saw that she was reaching for my hand, but my right hand was kind of occupied. I felt her fingers trace down my arm as she continued rubbing her pussy and then she moaned and her hand gripped the very top of my thigh...the spot on my leg that was dangerously close to my pussy.\n\n\"Cumming...I'm...cumming,\" Aubrey announced through clenched teeth and I could feel her body almost begin to vibrate. Her hand gripped my leg tighter so that her knuckles were touching my hand as I rubbed my clit. \"Meg! Cum with me...\"\n\n\"Yes...YES!\" I told her and my voice trailed off as my orgasm bubbled over my consciousness.\n\nI remember my eyes closed. I remember how good Aubrey felt against me as she came. I also remember that I felt a sudden surge of electric pleasure emanate from my clit. It felt so unbelievably good that it was almost painful as that pleasure jolted what seemed like every nerve ending in my body...and that's about all I remember. I mean, it was a truly mind-bending, off-the-chart orgasm...so big that I guess I sort of blacked out for a little while.\n\nI finally opened my eyes and found myself looking directly into Aubrey's. We were lying on our sides facing each other like before. She had scooted up so that we were sharing a pillow. Her flawless face was just right there in front of me about six inches away. I was suddenly a little embarrassed and didn't know whether to smile or cry or what, but suddenly Aubrey's infectious grin was lighting up her face and I couldn't help but smile back at her.\n\n\"Holy shit!\" she squealed excitedly and put her arm around me. \"That was fucking awesome!\"\n\nI could only nod as speech seemed to allude me.\n\nShe leaned on me and cuddled into me with a hug so that she was practically lying on top of me. It was like she was trying to get as physically close to me as she possibly could. My mind was overwhelmed with sensations. Her large breasts were pressed tightly against my chest and I could feel her hard nipples poking into my breasts. She had instinctively shifted her legs to fit close to me which made our thighs go in between each other's legs. I not only felt her wetness on top of my thigh, but I could feel the soft folds of her pussy against it, too...and I was all too aware that my own still very wet sex was pressed directly against her thigh as well. I felt a funny butterfly kind of feeling in the pit of my stomach.\n\nI honestly don't know who moved first or exactly how it started...but somehow, some way we both started to slowly hump ourselves against each other's thighs. Neither of us said a word to each other. We were still hugging each other tightly. My face was kind of in between Aubrey's head and her shoulder that she was lying on and Aubrey had her face buried in the burrow of my neck. Her lips were close to my ear and I could hear her breathing grow heavier as I felt her pussy move against my thigh.\n\nIt didn't take long for either of us to pick up the tempo. I mean it didn't take long at all before we were really thrusting and pumping our hips, grinding away against each other's thighs. This was so confusing to me...this was beyond masturbating and feeling good together, but I've never been more turned on in my life. I could feel her juices running down my leg and I knew I was just as wet. We were both starting to gasp and had worked up a sweat so that our chests were slick with perspiration. The movement of our bodies was causing this really pleasant warm friction as our breasts rubbed together.\n\nI could hear Aubrey whimpering in my ear and then she was whispering to me. \"I'm close...I'm close...cum with me, Meg. Please...cum with me.\"\n\nIt was almost magical. Aubrey started to cum with her pussy firmly planted against my thigh and mine against hers, our upper bodies hugging tightly and then my orgasm began right on the heels of hers. We shook and grasped to hold each other tighter as we came, panting into each other's neck. To gain a better purchase in our embrace I felt her hand slide down my back and firmly grab my ass cheek. It felt amazing and extended my orgasm even longer. My mind was kind of reeling as I really didn't know what to think...but without a doubt I've never felt closer to someone. We both finally just kind of collapsed in a loose embrace, our bodies twitching slightly with the little aftershocks of our orgasms.\n\nI was really glad when she finally broke the silence because I didn't' have the first clue as to what to say after something like that.\n\n\"I just love you so much,\" Aubrey whispered and leaned back from our intimate embrace to give me the most genuine smile of affection. She leaned forward and softly pressed her lips against mine in a brief, soft kiss and then pulled back again with a satisfied sigh as she added, \"my best friend.\"\n\nI was once again speechless, but managed to smile at her. The last thing I remember was snuggling into each other as we fell asleep.\n\n****\n\nUgh. The one and only thing I wanted to know was how in the hell did Monday get here so fast?\n\nI trudged my way through the almost empty parking lot, keeping my head down against the cold. The temperature had taken a serious nosedive last night and I was freezing. I scanned my key card to unlock the door and then wearily walked up the flight of stairs to the second floor. I knew there were only three days until the 24<sup>th</sup> and even though I was really looking forward to a five day weekend, these two days at the office were going to totally suck. Aubrey had to use her last couple of days of vacation or else she would lose them come the first of January...so I was stuck at work without my best friend to keep me company and make the mind-numbing boredom more tolerable.\n\nIt didn't help matters too much that I was in a bad mood...and to be honest, as bored as I might get - I was conflicted. Just the thought of being apart from Aubrey made my stomach hurt, but then secretly I was sort of glad that I wouldn't see her for a couple of days. I knew I had a lot of thinking to do, but the inconsistency of my thoughts and feelings was maddening. I inwardly knew that my ill temperament centered around the fact that the mental closet in my head was full. I couldn't force any more of these confused feelings and mixed up emotions into it even if I tried.\n\nI took a deep breath and sighed as I set my bag down at my work station. My cell phone vibrated. Aubrey was calling me. Not now, Meg, I told myself. I had been avoiding her calls and not answering her texts since leaving her apartment yesterday morning. It was more than obvious that we needed to talk and avoiding her was just rude...but I didn't know what to say. I needed to sort my sorry self out first. I sighed again.\n\nI docked my laptop, hit the power button and while it went through the process of booting up, I got myself situated for the day. I plugged in my phone charger and then hooked my phone up to charge. After sitting down and getting comfy, I logged in and read my new emails and took the time to respond to a few of them. Alrighty then...there was five minutes of my day. I sighed yet again and settled back in my chair to surf the web for a while. Nope, wasn't working. My mind kept coming back around to Aubrey. My phone vibrated again. It was Aubrey so I let it go to voicemail. I felt like I was at war with myself.\n\nIs she or is she not your best friend? Of course she is. Then why won't you talk to her? I just...need some time to think. Do you care about her? Obviously - thus the whole best friend thing. Do you love her? Again, of course I do. She's the closest friend I've ever had. Okay...but do you love-love her? What? Why would you ask that? I'm not a lesbian. That may be...but you didn't answer the question, did you? Enough...just shut up.\n\nI stood up in frustration from all these questions bouncing around in my head and decided I needed a cup of coffee. I walked across our work area and out of the marketing department section of the second floor. I headed to the little kitchenette / coffee service area that was over near the restrooms. I looked up and saw that Ted from the National Sales team was carefully constructing a large mug of coffee. He was busy adding cream and sugar and some flavor add-in syrup that I never touched. He was wearing a ridiculous looking Santa hat on his head.\n\nI patiently stood behind him and waited my turn.\n\nHe glanced over his shoulder, saw me and gave me a big smile. \"Morning, Meghan.\"\n\n\"Good morning,\" I nodded politely.\n\n\"How are you today?\"\n\n\"I'm good, Ted...and you?\"\n\n\"I'm just as jolly as can be,\" he chuckled and licked a couple of his fingers clean from his coffee mess. He moved his big head around on his thick neck as if he were searching for something which made the little snowball on the end of his hat bounce around. \"Hey, uh...where's your partner?\"\n\nI felt my stomach drop at his use of the word 'partner'. Isn't that what gay couples called each other when they were in a serious relationship or married or whatever?\n\n\"Excuse me?\"\n\n\"Oh, uh, I was just asking about Aubrey,\" Ted clarified in kind of a sing-song voice. \"You know, with you two where there's one there's usually the other.\"\n\n\"What's that supposed to mean?\" I snapped and folded my arms across my chest.\n\n\"Oh...well, I, uh, just meant that I usually see you two together,\" Ted immediately turned around with a confused look forming on his face.\n\n\"We're not always together,\" I shot back defensively and I could hear the shrillness creeping into my voice.\n\n\"Okay,\" he nodded slowly and picked up his mug. He started to walk around me in a wide berth and then cautiously asked, \"Is, uh, everything okay, Meghan?\"\n\n\"Yes,\" I sighed miserably and stepped forward and grabbed a cup. \"Everything's fine.\"\n\n\"Oh...okay,\" Ted kept his distance. Just before he walked off he called out, \"Well, uh, Merry Christmas.\"\n\n\"Merry Christmas, Ted,\" I mumbled almost to myself and dumped out the cup of coffee I had just poured into the sink. I didn't want coffee. I just wanted to go home.\n\nI went back to my desk and sent my boss and the HR manager a quick email claiming that I wasn't feeling well and needed to go home. I didn't care if I got paid or not, I just wanted to go home and crawl under the covers.\n\n****\n\nI hardly even remembered driving home. My body was on autopilot as my mind seemed a jumble of sharp edged emotion and overwhelming turmoil. I parked and went inside. I felt restless. I paced and I ranted to myself as I wandered aimlessly around my apartment trying to think. I also kept avoiding Aubrey's texts and calls. My mind kept coming back to the same question over and over again. What do I want? I couldn't seem to come up with any kind of real answer. I was tired, but didn't sleep, couldn't sleep. I just continued to aimlessly walk around my apartment for a while and then out of frustration I'd sit down and flip through TV channels. I lost all track of time as I continued to marinade in this emotional quagmire.\n\nAt some point I looked at the clock and realized it was Tuesday. Really? Already? How did that happen?\n\nIt was only 5:30am, but I went ahead and called in sick to work again. I hope I would still have a job come New Year's. I also continued to ignore Aubrey's efforts to try and get hold of me. I was driving myself crazy and at some point later that morning I was so exhausted that I finally fell asleep on the couch. I ended up sleeping for most of the day, but it was a fitful slumber so I woke up still feeling fatigued. I couldn't seem to settle my thoughts. As a result of my exhaustion I finally just zoned out under a blanket and watched old Christmas movies. Even though I'd seen it at least a hundred times, I cried myself silly when I watched It's a Wonderful Life.\n\nI was making myself miserable. I was miserable. Out of frustration I yelled at my empty apartment until I was hoarse and then beat up one of my throw pillows. I was tired of all of the confusion and indecision in my head. Why couldn't this just be simple? I finally just kind of flopped back into a corner of the couch. I ended up watching another old black and white movie. I could not tell you what it was called or what it was about. I honestly don't even remember calling, but somehow I ended up eating Chinese takeout.\n\nI fell asleep on the couch again in that same position. I woke with a start and winced at the crick in my neck. I blinked my eyes around my dark apartment and squinted at the cable box. It was Wednesday morning...Christmas Eve day. I looked at the food containers on my coffee table along with the empty bottle of wine. I was a mess. My mouth tasted like the bottom of a trash can, my hair was a tangled bird's nest. I was still in the wrinkled work outfit from Monday. I smelled horrible and I had stains on my blouse. I needed some help. I got up and headed straight to the shower. After emerging clean and feeling somewhat better, I threw on my comfiest sweats and grabbed my car keys.\n\nI had to talk to the only person I knew would understand.\n\n****\n\nI walked up the front steps of my parent's house and didn't bother knocking. I opened the front door and was met with the heavenly smells of something delicious baking. My mouth watered as I looked around at the empty living room.\n\n\"In here, Sug,\" Auntie Kate called out from the kitchen.\n\nShe always called me Sug which was short for \"sugar\". I was her one and only great-niece and she had always doted on me since the day I was born. I found out that my Mom and Dad were at some volunteer event to serve breakfast at one of the homeless shelters and then afterwards they were going to do some last minute Christmas shopping. Auntie Kate had stayed behind to make some of her world famous goodies for Christmas Eve. She had the whole house smelling of cinnamon and vanilla.\n\n\"Sit down,\" she instructed by pointing a spatula at one of the stool seats at the island.\n\nI did as I was told and as soon as I sat down she put a bowl of what was once icing in front of me. It obviously needed to be cleaned up. I took my finger and ran it down the edge like I used to do when I was little and then sucked the remnants off my finger. My great aunt watched me continue licking the bowl for a moment. I nervously avoided making eye contact. I wasn't sure what to say. I saw her smile out of the corner of my eye and then turn back to whatever deliciousness she had been working on.\n\n\"So...\" Auntie Kate said without turning around from the counter where she was spooning raspberry preserves into delicate little cups of half-baked pastry dough. \"Tell me.\"\n\n\"I, uh...\" I started to say and stopped. As soon as I my mouth opened my eyes went all blurry with hot tears. Auntie Kate always knew when something was bothering me and could get to the heart of things quicker than anyone I knew. I started to say something else and then just broke down and began sobbing in earnest.\n\nMy Aunt wiped her hands on her apron and took me in her comfortably familiar arms. She put my head on her soft bosom and rocked me gently back and forth and soothed her hand through my hair until I was all cried out. When I finally got control of myself, she fetched me a glass of water for my crying-induced hiccups and then wiped my face clean with a damp cloth. She rested her hand lovingly against my check and smiled warmly at me.\n\n\"Feel better?\"\n\n\"Yes, ma'am,\" I hiccupped and then felt like I might start crying again. \"No...not really.\"\n\n\"Tell me,\" Auntie Kate said again and then took my face in both of her hands and kissed my forehead. \"From the beginning, Sug.\"\n\nSo I did. I mean, I left out some of the details of course (you know, the sex stuff), but I told her everything from my first day at work and meeting Aubrey all the way up to the conversation with Ted at the coffee service Monday morning. I didn't hold anything back. I not only told her the actual stuff, but also how I felt. I mean I just let everything from that mental closet come out...all of it. She simply listened as she put together more pastries, nodding her head as I talked. I knew she was listening closely to every word I said. When I ran out of words, she slid one of her freshly baked treats in front of me and lovingly stroked the top of my head.\n\n\"What should I do?\"\n\n\"Well...I can't rightly say, Sug,\" Auntie Kate shrugged and just gave me a sympathetic smile. \"You're the only one who knows that answer for sure...and you know that.\"\n\n\"Yes, but --\"\n\nKate held up a finger, cutting me off. She walked over to me and gave me another warm hug. It made me feel immediately better. She finally released me and walked over to the kitchen table. She grabbed the humongous bag that served as her purse and opened it up. She gave me another smile as she dug a very old leather bound folder out of the oversized pocketbook. She brought the folder over to the island and carefully pulled a piece of very fancy, expensive looking stationery out of it. She laid the piece of paper gently on the countertop in front of me and then produced a matching envelope from the folder. Lastly, she dug around in the pocket of her apron and then handed me a very expensive looking fountain pen.\n\n\"Do you remember this?\"\n\nI nodded.\n\n\"Have y'all been keeping up with it?\"\n\n\"Not really,\" I admitted with a shrug. \"I guess it's been a few years.\"\n\n\"Well, now that you're grown, I think you should go on and rekindle it,\" Auntie Kate decided for me.\n\nShe was referring to an old family tradition that we used to do when I was a child. During the week of Christmas each person in the family would write down their deepest wish for the coming year. It was supposed to be that one thing that they didn't think they could live without. Auntie Kate had always insisted that you had to be honest and only write down \"that which you most truly desired\" was how she had always put it. Then we would put the written wish in an envelope, seal it and leave it in our stockings for Santa on Christmas Eve.\n\nShe called it our One True Christmas Wish.\n\nI chewed my bottom lip as I stared into Auntie Kate's twinkling blue eyes. I looked back down at the piece of stationery and slowly picked up the fountain pen.\n\n\"Ah-ah-ah,\" Auntie Kate laid her hand on my arm with a chuckle. \"You have to give it some thought, Sug. Remember - it has to be the one thing that you want more than anything else.\"\n\n****\n\nI went back to my apartment, but not before Auntie Kate had packed me up a little Christmas tin full of her freshly baked goodies. I kissed her on the cheek and promised her I would come back over later that evening. Funny, but I didn't even realize that I had kept one hand on top of that tin for the entire ride back to my place until I pulled into my parking space. I sat in my car for a few moments holding that tin of cookies and pastries and then looked at the stationary and envelope I had set beside it. I gathered up my things and went inside.",
        "I sat down on my couch and rested my arms on my knees with my hands folded in front of me. I stared at my hands for a while. Okay...enough. This wasn't me. I've never acted like this before in my life, so why the hell was I doing it now? It was time to stop acting like the scared, indecisive little girl that I had been for the past three days and start acting like the capable, independent woman that I truly was. I had finally come to a decision.\n\nI closed my eyes and took a deep breath. I stood up and fetched Auntie Kate's piece of expensive stationary with the matching envelope. I set them down on the couch cushion and then got busy cleaning up the mess I had made out of my coffee table. I quickly washed the few dishes in the sink, tidied up my living room and then sat back down on the couch. I carefully placed that almost mystical piece of paper on the coffee table in front of me. I lined up the envelope right next to it and then dug the fountain pen out of my purse and set it down gently next to the blank stationary. I took a deep breath and let it out slowly.\n\nI knew exactly what I needed to do.\n\n****\n\nSatisfied, I sealed the envelope. I got undressed and decided I was going to take another shower. I took my time washing and conditioning my hair and then scrubbed the fatigue out of my body with my shower sponge thingy. I took my time doing my hair and make-up. I checked the clock on my phone while I curled my hair. I swear it felt like I had been up for hours, but it was only 8:51am. I couldn't wait any longer. I reached over and hit a button on my phone and put it on speaker. I wrapped another piece of hair around the curling iron while I listened to the satellite connect or whatever, but Aubrey must have turned her phone off because it went straight to vm...that or she wasn't taking my calls. I nodded. If that was the case, I understood. I deserved it.\n\nI stood naked in front of my closet. I wanted to dress up. I took my time and chose a very pretty bra and panty set that Aubrey had helped me pick out. I slipped them on and then spritzed myself with some of my favorite perfume - again that Aubrey had helped me pick out. I went through my closet and decided on a nice skirt and sweater outfit. I put on some matching tights and finished it off with a pair of really cute boots. It was really cold outside and I was dressed weather-appropriately, but I also looked damned good, too.\n\nI tried calling Aubrey again...no answer. I sent her a text...no response.\n\nI knew it was my own fault she wasn't responding to me. I just hoped I could make her understand why I had been so distant the last couple of days. I called Aubrey again on my way to her apartment. I also tried her again as I waited in the drive-thru of Starbucks. I tried Aubrey one last time from her parking lot before I finally decided I would probably have better luck by simply knocking on her door.\n\nI wrapped my knuckles on her door. No answer. I knocked harder. I knew she was home as I caught the faint sound of a slamming door from somewhere inside. I pounded my fist on the door again and waited. I patiently asked her to please answer the door over and over again. I finally ended up pleading and begging. I finally announced that we needed to talk and I wasn't leaving until she opened the door.\n\nI waited and waited outside of her apartment. I paced around a little and stamped my feet to keep warm. I was technically \"inside\" her building, but the hallway was really more like a tunnel that ran completely through her apartment building from one side to the other. It was maybe ten degrees warmer than the temperature outside. I finally ended up huddling down next to her door and hugging my knees to my chest. I was starting to get really cold by the time Aubrey cracked her apartment door open. I had been sitting outside for at least thirty minutes.\n\nIt took me a minute to get my frozen joints to cooperate before I could stand up and face her. She wouldn't look me in the eye, but I could tell she'd been crying. I asked her if I could come in for a minute. She shook her head, but I softly asked her to please just hear me out for a minute and then I would leave if she wanted me to. Without a word she finally stepped aside and held the door open.\n\nAubrey took the tray of cups from me and set it on the kitchen table. She walked over to the microwave and stuck one of the cups in it. She punched a button and just stood there, silently avoiding eye contact until the microwave finally beeped. She took the cup of coffee out and unceremoniously handed it to me. I was grateful for the warmth on my numb fingers as I followed her into the living room. I watched Aubrey sit down on her couch and I sat across from her in the chair. She still wouldn't meet my gaze.\n\n\"Aubrey,\" I began quietly and had to clear my throat. \"I want you to know how truly sorry I am.\"\n\nShe didn't say anything. She just shrugged one of her shoulders and continued not looking at me.\n\n\"Aubrey,\" I pleaded softly. \"Please? I just...can you please talk to me?\"\n\nShe signaled her disapproval with a small grunt and shook her head as if she couldn't believe I had the nerve to ask her that.\n\n\"I understand you're upset...you have every right to be,\" I continued rambling. \"If I could just...if you would let me explain --\"\n\n\"You know what?\" Aubrey suddenly spoke up. \"I don't care.\" She shook her head again and said almost as if to herself, \"I should've known better.\"\n\n\"Should've known better...how?\"\n\n\"That it was too good to be true.\"\n\n\"What was?\"\n\nAubrey just shook her head as she stared in the opposite direction.\n\n\"What was?\" I insisted. \"What was too good to be true?\"\n\n\"You,\" she said accusingly, \"being my friend.\"\n\n\"Aubrey,\" I replied patiently. \"I am your friend and you know it.\"\n\n\"Whatever,\" she scoffed and crossed her arms across her chest.\n\n\"Aubrey,\" I sighed, but she cut me off.\n\n\"You're just like everybody else I've ever trusted, Meghan,\" she shook her head as she said that and I thought I saw a tear roll down her cheek. I knew she had meant that to sound bitchy, but I thought it sounded sad.\n\n\"No, Aubrey,\" I replied and leaned forward in my seat. \"I'm not.\"\n\n\"Really?\" she asked incredulously. \"Well, gee - you kind of snuck out of here Sunday without so much as a goodbye...and then you just totally blew me off.\"\n\n\"I know,\" I closed my eyes and dropped my head in shame. \"I'm really sorry...I just...\"\n\n\"Just what?\" she snapped and looked in my direction for a brief moment. She looked away again and continued. \"I really needed to talk to you...and guess what? You weren't there for me, were you?\"\n\nI didn't say anything as I stared at my boots.\n\n\"Were you?\" she demanded.\n\nI reluctantly shook my head. \"No.\"\n\n\"Exactly,\" she pointed out and was at least looking in my direction if not at me as she chastised me. \"You wouldn't take my calls. You didn't answer my texts. So how does that make you different?\"\n\nI reached into my purse and pulled out the sealed envelope. I extended my arm towards Aubrey.\n\n\"Whatever that is,\" Aubrey turned her head away from me, \"I don't want it.\"\n\n\"Aubrey,\" I pleaded. \"Please take it.\"\n\n\"Forget it,\" she sighed and slumped back deeper into the cushions of the couch like she was exhausted. \"I think you should go.\"\n\n\"Aubrey --\"\n\n\"Just...\" she said more firmly and still wouldn't look at me. \"Go.\"\n\n\"Aubs,\" I whispered still holding the envelope towards her. \"Please?\"\n\nShe just turned her head further away from me and crossed her arms again.\n\nI stood up and slowly walked to the door. I stopped and looked at her. \"I wanted to tell you that my family has this tradition --\"\n\n\"Meghan,\" she sighed heavily. \"I don't care --\".\n\n\"Let me finish,\" I raised my voice a little, speaking over her protest firmly. She fell silent and I took that as permission to continue. \"See, my Auntie Kate reminded me of it this morning. We had this thing we used to do when I was a kid that she called our One True Christmas Wish. The week of Christmas we were supposed to write down that 'one thing which we most truly desired' was how she always put it. We would seal it in an envelope and on Christmas Eve we were supposed to put it in our stocking.\"\n\nAubrey didn't say anything, but at least she was sort of looking in my general direction again as she listened.\n\n\"Auntie Kate thought I should get back to that tradition,\" I explained. \"At first I thought it was silly...but then...I don't know, the more I thought about it the more I realized that those envelopes were always gone on Christmas morning. Even when Auntie Kate wasn't with us on Christmas, they somehow disappeared...I guess I never paid all that much attention to it with presents to open and everything.\"\n\nI took a deep breath before I continued. \"And the more I thought about it, the more I realized that when I took a step back... Well, I'm not really sure how to say it, but back when I - I don't know, I guess - believed? Anyways...those years that I did that and I wrote down what in fact was what I wanted most of all way deep down in my heart? It occurred to me that more often than not, in one way or another...my Christmas wishes always ended up coming true.\"\n\nAubrey was now finally looking directly at me with this neutral expression on her face. I held the envelope up so I was sure she saw it and then carefully placed it on the little catch-all table next to her door.\n\n\"You can open it...you can throw it away...or you can burn it,\" I instructed her. I grabbed the handle of the door and pulled it open. \"But I just wanted you to know that I'm sorry it took me so long to figure things out...but I finally did.\"\n\nI hesitated a moment longer to try and keep my voice from breaking. \"Merry Christmas, Aubs.\"\n\nWith that I turned around and walked out the door without another word, shutting it behind me. By the time I walked down the hall-tunnel to the front entrance of her building I felt like my heart was literally breaking into pieces. I pushed the heavy exit door open and somewhere deep in my brain it registered that it had started snowing again. Some of the big, fat snowflakes were landing on my face and immediately melted on my flushed cheeks and mixed with my tears. I slowly started walking in the general direction of my car, but everything looked blurry as the tears came faster.\n\n\"Wait!\" I heard Aubrey call out from behind me. \"Meg! Wait!\"\n\nI turned around to see her running after me. I also saw that she was barefoot and hadn't even bothered to put a jacket on. I immediately took a step towards her in concern. \"Are you crazy? You're gonna freeze!\"\n\nAubrey didn't answer as she practically slammed into me, her arms grabbing me in a fierce hug that almost took both of us off of our feet. I saw that she had opened the envelope and had the piece of paper clutched tightly in her fist. We hugged for a long time and then she pulled back and looked into my eyes, tears running down her face too.\n\n\"Did you mean it?\" she asked breathlessly.\n\nI nodded and we both started crying harder and resumed our hug.\n\nWe held each other like we would never let go, but then my common sense finally kicked back in and I shooed her back towards her apartment. She wouldn't take her arms from around me, so the walk was awkward and slow. Her teeth were chattering by the time we got inside. I sat her down on the couch and hurried to her linen closet and grabbed a couple of blankets and wrapped her up in them. She was still clutching that fancy piece of paper in her trembling hand. I looked down at it and read my own handwriting.\n\nMy One True Christmas Wish is...Aubrey.\n\nShe looked up at me and managed to ask through her chills. \"W-why d-didn't you t-tell me?\"\n\n\"I don't know,\" I shrugged and looked down at my boots. \"To be honest...I really didn't even know how to tell myself.\"\n\nAubrey smiled and leaned forward so that her head was resting against my stomach. I put my arms around her shoulders and held her. I shuffled my feet and managed to sit down beside her while continuing to hold her. I kept my hands busy rubbing her back and arms as I tried to help her warm up. She finally stopped shivering and we just kind of sat there leaning against each other with our arms around each other. I pulled away from her a little and took a deep breath. She turned her head and I looked directly into her eyes.\n\n\"Look, Aubs...I'm not a lesbian. I'm not attracted to women,\" I informed her in a quiet, serious voice and I thought I saw a brief flash of confusion in her eyes. For a second I thought she was going to say something, but then she must have thought better of it when she realized I wasn't finished.\n\n\"I just know that...\" I continued. \"That I am attracted to you...very attracted. So if that makes me gay, then I guess I'm gay. I don't care and I honestly don't have it all figured out, but I the one thing that I do know for sure is...I love you.\"\n\nThere...I'd said it. I was not only able to admit it to myself out loud, but I'd confessed it to Aubrey. I found it hard to swallow. My heart was laid bare and it was out there to be accepted...or you know, to be shattered into a million pieces. I held my breath.\n\n\"Meg,\" Aubrey said quietly and those amber-brown eyes looked at me without blinking. She was doing that oh-so-cute little lip-biting thing that I found adorable and was pretty sure she didn't even know she was doing. She shrugged off the blankets and adjusted her position a little so that she was facing me.\n\nRuh-roh...warning bells of impending doom started going off in my head...Danger, Will Robinson, danger!\n\n\"I love you, too.\"\n\nMy heart felt like it had just fallen into the pit of my stomach as I watched the slightest grin pull at the corners of those pouty lips. Wait...what did she just say?\n\n\"What?\"\n\nInstead of replying she scooted over a few more inches until she was sitting right beside me on the couch. She brought her hands up tentatively and hesitated. We looked into each other's eyes for a few moments. Before I knew what was happening she was gently taking my face in her hands and our heads moved forward like it was in slow motion and then... Then our mouths pressed together and Aubrey's full, pouty lips seemed to fit perfectly against mine. We were sharing our first real kiss.\n\nThat kiss was...whew (which you can take the definition of whew to mean WOW...Holy freaking smokes!). I mean, as gorgeous and voluptuous and utterly sensual as everything about Aubrey is, I probably should not have been surprised by our first kiss...but I was. I've never been kissed like that before. Our mouths opened slightly at the same time and Aubrey's felt so delicate and soft. I was completely unprepared by how intimate and passionate it would be to kiss this person who had completely captured my heart. I let out this tiny little sigh as my head started spinning and the whole world just kind of faded away for a few minutes.\n\nWe finally broke the kiss and pulled apart. I looked at Aubrey breathlessly.\n\n\"I said,\" she smiled and affectionately kissed the tip of my nose, \"that I love you, too.\"\n\n\"Seriously?\" I could feel the silly grin spreading across my face. \"You do?\"\n\n\"Uh, it's kind of obvious,\" Aubrey rolled her eyes and smiled. \"That's kind of why I needed to talk to you.\"\n\nMy eyes grew wide and then I jumped and started yelping. She was tickling my ribs as she added with a fake growl, \"You know, when you wouldn't return my calls.\"\n\n\"I'm so sorry,\" I replied and made a sad face, but she stopped me by putting a finger to my lips.\n\n\"No more apologies,\" she insisted. She pulled her finger away, but replaced it with her mouth and we kissed again. She ended the case way too soon in my humble opinion. \"I get it...I understand you had to figure this out. I did, too...I guess it just didn't take me as long.\"\n\nI smiled and felt like maybe I wouldn't be able to stop anytime soon. \"I feel like we should...I don't know, go out and celebrate or something.\"\n\n\"Uh-uh...nope,\" Aubrey shook her head firmly like she had already decided. \"We don't have time...Christmas Eve, remember? We have to go to my parents' house and then over to see your family.\"\n\n\"Oh...right,\" I slumped as that realization hit me. \"Soooo...rain check?\"\n\nAubrey stood up. Even though she didn't have any make-up on and her eyes were still a little swollen from crying and her feet and the bottom part of her calves were kinda dirty from running outside barefoot in the snow and her hair was kind of a mess...even with all that, when she looked at me and held her hand out for me to take it? She had never looked more beautiful.\n\n\"I have a better idea.\"\n\n****\n\nDespite the many times we had played around, seen each other naked and had our \"fun\", I still felt really nervous when Aubrey took my hand and led me down the hall towards her bathroom. I had no idea what was going to happen, but was kind of relieved when she lit a candle and kept the lights off. It gave the entire bathroom a comfortable feel and helped me relax. I stood and watched as she pulled the glass shower door open and turned on the water.\n\nAubrey turned back towards me with this coy little smile on her face. She stepped closer to me and took hold of the hem of my sweater. My hands were shaking as I lifted my arms and let her pull it up and over my head. I was scared, but a good scared. It was more like overly excited, but at the same time I wanted to do everything right for her. I leaned over and tried to help her out by unzipping my boots, but she playfully slapped my hands away and insisted on taking them off herself. Next, off came my skirt, then my tights until I was standing in front of her in just my bra and panties. Aubrey paused to give me a light kiss on my lips which nearly made me swoon. While she was kissing me she unhooked my bra and gently slid the shoulder straps down my arms.\n\nThe bathroom was starting to fill with steam so I wasn't cold, but my nipples were like hard little pebbles. I shivered as her fingers danced along my hip bones and then she slipped those fingers into the sides of the waistband of my panties. I took a shuddering breath as she slowly slid them over my hips and down my thighs, Aubrey going to her knees in front of me as she did so. She was focused on untangling the underwear from around my feet, but once that was done she looked up at me. I watched her face expectantly as I felt her hands slide up along the outside of my thighs. She smiled up at me as her hands traced around to the back of my thighs and then she gently cupped both cheeks of my ass and pulled me closer.\n\nI couldn't help the gasp that escaped my throat when she kissed me on my lower abdomen right above my mons. Her lips felt soft and warm on my skin. Aubrey kissed higher towards my bellybutton as she began to stand up and kissed me again right between my breasts as she fully regained her feet. She let her hands gently caress up my back and then over to run up and down my arms a few times before leaning in and lightly kissing me on the lips again. Then she took a step back and extended her arms towards me.\n\nIt was my turn.\n\nI took a deep steadying breath and decided I'd had enough of my jittery nerves. Aubrey was here with me because she wanted to be...and I wanted to be with her. I boldly stepped a little closer and grabbed the bottom edge of her long-sleeved t-shirt. She helpfully put her arms up over her head without being asked and I slipped her shirt up and off. I put my arms around her and ran my nails up and down her naked back which caused her to shudder and I glanced down to watch her nipples harden through the sheer material of her bra. I boldly unhooked it and then pulled it down off of her shoulders. I leaned back and was once again amazed all over again as her large, rounded breasts were revealed to me.",
        "Without asking and without any hesitation I lifted my hands up and ever so softly cupped the heavy orbs in my hands. I lifted them, smiling at the weight and volume of them in my palms. I think I surprised Aubrey as I released them as I expect she thought I'd linger for a while. Instead, my fingertips trailed down her sides and I smoothly hooked them inside the waistband of both her yoga pants and her panties. I followed her lead by sliding them both off over her hips and ass and down her smooth thighs. I lowered myself down to kneel on the floor as I did so.\n\nI focused my attention on getting her clothes clear of her cute little feet. I knew my face was mere inches away from Aubrey's sex. I was holding my breath and as brave as I was trying to be, this was a big moment. I neatly folded Aubrey's yoga pants and then her panties. I knew I was stalling as I set them down on the floor with her shirt and her bra. I kept my eyes down on the floor as I took another deep breath. I raised my head and I was looking directly at Aubrey's pussy. It was just right there in front of my face. I mean I had sort of seen it when we were playing together, but this was different. This was much more intimate.\n\nI leaned a little closer. I hadn't really ever taken the time to look at another woman's vagina before - not from this angle and not this closely. Aubrey's dark pubic hair was very well groomed and for the first time I saw that she shaved her labia and everything below her mons. I couldn't remember what that was called with just the patch of hair above her vagina, but I was fascinated. Aubrey's perfectly proportioned outer lips were slightly parted revealing her almost delicate looking inner lips that were lighter in color. Without asking Aubrey widened her feet a little so that I could just see the glistening hint of her opening. She was already wet. That made me smile. She was wet for me. My eyes trailed up to see that her clit was swollen and starting to peek out from its cute little hood. Just like everything else about Aubrey, I thought her pussy was just beautiful.\n\nI licked my lips and without thinking about what I was doing, I brought my face closer and I guess I just kind of kissed Aubrey right on the pussy. She moaned when I did that. I smiled up at her and stood back up. I slipped my arms around her at the same time that she was reaching for me and we embraced. The warmth of her skin on mine, our breasts pressed together, the heat of our most intimate places pushing closer to each other's was just indescribably erotic to me. I felt...like this was where I was supposed to be...where I belonged.\n\nWe kissed again.\n\nWith my eyes closed I opened my mouth and felt Aubrey's tongue flicker against my lower lip. I opened my mouth wider inviting her in. Her mouth and tongue were so very soft and it felt like she was massaging the inside of my mouth as she began to tentatively explore. On instinct I reciprocated by softly stroking Aubrey's tongue with my own. Our kiss deepened as our tongues continued to tease and caress and soon her hands were running up and down my back. She cupped both cheeks of my ass and pulled me in tighter. I think I moaned or maybe she did. Either way it made Aubrey smile and then I smiled and we couldn't possibly maintain our kiss.\n\nWe pulled apart and she giggled at me as she stepped into the shower. She beckoned me to follow her with a little crook of her finger and that might have been the absolutely sexiest thing I'd ever seen her do. I stepped in under the hot spray of the shower beside her and we couldn't keep our hands off of each other. We touched each other, caressed each other's bodies and mutually explored every inch and curve. We did manage to actually shower and I thought I was in heaven when she washed my hair. I returned the favor and I have to admit that with every switch of position and shift of our bodies her large breasts would sway and bump into mine and for some reason that excited me to no end.\n\nI took my time soaping up Aubrey's body and in that darkened shower I savored the way the soap suds streamed over her curves. I really hoped she was as turned on as I was. I finally grew bold enough that I pushed her against the tiles of the shower wall and I grinned at her as I lowered my face to her chest. I kissed the top of each of her generous breasts and then lowered my head until my mouth found her erect nipple. I heard her gasp as I took it between my lips. I reached up with my hand and cupped her other boob filling my palm with as much of her tit as I could fit in it. I began to massage and squeeze it as I sucked harder on her nipple, tickling it by flicking it with my tongue.\n\nAubrey brought her hands up to hold my head as I began alternating licking and sucking one nipple and then I moved my head over and did the same to her other nipple. I just could not get over how big and round and perfectly shaped Aubrey's breasts were. Aubrey pulled on my hair a little until I relented and stood back up straight to face her. She brought her hungry mouth to mine and we kissed again, but there was much passion and need in it this time. She caught me a little by surprise when she kind of man-handled me by turning me around so that now I was the one pinned against the wall.\n\nAubrey kissed her way down my neck and now it was her turn to lavish attention on my breasts. The sensations of her mouth on my sensitive skin made gooseflesh pop up all over my body and my already hard nipples tightened and swelled even further. I bit my lip as I felt her mouth close around my right summit and I could not stifle the moan when she suckled me. My palm slapped against the tile of the shower when she gently bit down, the brief flash of pain turning quickly into an overwhelming sensation of pleasure as her tongue swirled around my nipple in tight little circles.\n\nShe continued to lick, suck and nibble on my nipple as her other hand ran up my inner thigh and I spread my legs to give her better access. Aubrey ran her finger up and down my slit a few times and then she easily slipped it inside of me. I was panting as she slowly withdrew her finger and then slid it back in even deeper. She did it again and then again and then as she drove her finger even deeper into my core she moved her thumb up and began using the pad to start massaging my clit.\n\nAubrey took her mouth off of my breast and straightened up to press her lips against mine. She brought her other hand up to my breast and began to softly pinch and pull on my nipple as she kissed me and continued to fuck my pussy with her finger. The hot spray of the shower beat down on both of us as we passionately kissed. It felt like Aubrey's mouth owned mine as she began pinching my nipple harder and she increased the tempo of her finger-fucking. When she added a second finger inside of me I lost it. I came hard. She even had to hold me up when my knees buckled as my orgasm washed over me.\n\nI sagged against her as she gently kissed my neck. When I finally managed to stand up straight she gave her hair one final rinse and turned off the shower. She reached out to the hook beside the shower stall and grabbed a large fluffy towel. We carefully dried each other off and kept stealing kisses every few seconds like a couple of smitten teenagers. We held hands as we walked towards her bedroom.\n\nFor the next few hours Aubrey and I made love. Twice...well, three times if you're keeping score...each. We almost lost track of time, but managed to jump up and get ready so that we wouldn't be late to celebrate the holiday with our families.\n\n****\n\nTo say that Christmas was memorable would definitely be an understatement.\n\nAubrey and I ended up coming out to our families that Christmas Eve. Keep in mind that this was all very new and we hadn't even had time to figure out exactly what 'we' were just yet...but we also weren't shy about letting both of our families know we were together and head over heels in love. Aubrey's family was overjoyed and supportive and celebrated their daughter's happiness. I was overwhelmed by how accepted and loved I felt by her parents and aunts and uncles and cousins.\n\nMy parents were a little more on the shocked and \"what? are you sure? when did this happen?\" side of things. My mom even cried a little bit, but I think once they saw how happy Aubrey and I were together it didn't seem like the end of the world after all. I knew they would be fine...they just needed a little time to process it. Of course, having Auntie Kate's unwavering support helped quite a bit. She was amazing. That ageless beauty of a woman who I admired so much and looked up to could not have been any happier for me.\n\nBest of all, she totally approved of Aubrey...but not just in the sexual preference sense. She could have given a hoot about that...no, Auntie Kate enthusiastically approved of Aubrey as a good person with strong character. Someone she thought was worthy of the love of her favorite great-niece.\n\nAuntie Kate's approval meant the world to me.\n\nWaking up in Aubrey's arms Christmas morning was absolutely the best gift I could have asked for. My eyes slowly blinked open and her beautiful face was right in front of mine with the happiest, most contented smile on it. That smile...oh, my...that smile made my heart flutter and sent the butterflies in my stomach into a gymnastics routine. Yep, that smile confirmed to me that My One True Christmas Wish had truly been granted.\n\nSeeing that I was awake, Aubrey scooted her voluptuous curves a little closer and wrapped her arms around me. I wiggle-wormed my body even closer until we were just this intertwined tangle of female bodies. It felt perfect. After cuddling as close together as physically possible, we just kind of laid there and basked in each other's presence for a while. I knew that life and work and problems would eventually show up, but as long as I knew that at the end of the day I could come back to this...no matter what, everything would be okay.\n\nThe sun started to sneak up over the horizon and as it slowly crawled higher in the sky it began lightening up the darkness of the bedroom by slipping through the gaps in the blinds. It was Christmas morning. Aubrey picked her head up and looked into my eyes for a moment. She leaned her face a little closer to mine and gave me the softest, sweetest kiss in the history of kisses. She pulled back and rested her head back down on the pillow. Her smile grew even bigger.\n\n\"Merry Christmas,\" she whispered.\n\n\"Yes,\" I whispered back with a smile. \"Indeed it is, my love. Indeed it is.\"\n\n****"
    ],
    "authorname": "loverofFUN",
    "tags": [
        "lesbian romance",
        "masturbation",
        "large breasts",
        "first time lesbian",
        "best friends"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/my-one-true-christmas-wish"
}