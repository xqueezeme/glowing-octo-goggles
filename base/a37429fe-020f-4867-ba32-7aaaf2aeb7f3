{
    "title": "There and Back Again Ch. 061-062",
    "pages": [
        "Chapter Sixty-One: Recruitment Plans\n\n Wynne looked about to object, so I signalled her to stop and follow me. We went just a little ways out of camp, her judgemental gaze never leaving me as we walked. I held my hand up to forestall her.\n\n \"I know. You don't approve. You don't trust Anders, because he keeps trying to escape. Honestly, the only thing that surprises me is that there aren't dozens of escapees. Wynne, you have to admit, the Tower is hard on young mages. Some templars abuse their power, and not everyone was raised religious, they don't get the same comfort from faith that you do. Some of those kids remember their families, and they didn't all have bad experiences. You can't expect everyone to accept being locked in a tower with good grace. Even you won't stay there when there's another option. \n\n \"Look, I know Anders. I know exactly what he's capable of, both for good and for bad. I think there's a chance that if we catch it now, and do it right, we can avoid much of the bad part I mentioned. If we wait, he will still end up a Grey Warden, only his animosity towards the Chantry will have increased by that much more by then. Please, trust me. I'll vouch for him. I'll take personal responsibility for what happens. Please, Wynne. Will you help me help him?\"\n\n She looked thoughtful, but eventually nodded unconsciously even as she asked, \"If he succumbs to blood magic or a demon, will you use your templar abilities to stop him?\"\n\n \"He won't. He hates blood magic even more than you do. But yes, should he become an abomination, I will do whatever is necessary to stop him.\"\n\n \"Very well. I shall not stand in your way, but I will not recommend his conscription either.\"\n\n I leaned over and kissed her cheek. \"Thanks, Mom.\"\n\n She patted my cheek and grinned. \"Cheeky child. I'm old enough to be your grandmother.\"\n\n \"Not where I'm from, unless you and Avernus have more in common than I'd expect. Not even here \u2013 Rhys isn't that much older than me, I'd think, unless my math has issues. Will you ever tell me actually how old you are, anyway?\"\n\n \"No.\" She didn't hesitate, and her tone brooked no argument. I had to laugh; apparently that vanity was the same among all women, whether mage or lady, elf or human, from Earth or from Thedas. The corners of her mouth tugged upwards at my laugh, and we headed back to camp together.\n\n I pulled Tomas aside, gesturing at Aedan and Alistair to join us. I told them the basics \u2013 Anders was a mage, a healer, who was very unhappy in the Circle and currently serving a year in solitary for recurrent escapes. Eventually he would end up at Vigil's Keep when the darkspawn attacked and would be recruited. I didn't tell them about Justice, or Anders eventually leaving the Wardens \u2013 I was still hopeful that some of that could change. In fact, I was hoping to keep Kristoff alive, and perhaps, with luck, Justice would never leave the Fade. Telling everyone about all of the possible bad outcomes seemed somehow cruel to Anders; he should have a chance to be a Warden without everyone prejudging him for things he wouldn't do of his own accord.\n\n The three Wardens seemed to sense that I wasn't telling them the whole story, but I didn't give them much chance to pry. I sure as hell wasn't going to explain me romancing Anders in DA2; explaining that there was a DA2 had been difficult enough, back in Denerim. Though a small, petty part of me wanted to tell Alistair in hopes that it would hurt him. I quashed that part ruthlessly; I was not going to turn into some harridan because I was spurned.\n\n \"So, anyway, you're going to have to use the rite of conscription. Greagoir's already mostly convinced he's a maleficar; he will never let him go otherwise.\"\n\n Tomas looked thoughtful. \"I will need Irving to help. And probably something to use as a bribe.\" Alistair's face turned red, and Tomas hurriedly explained, \"For Irving, not for Greagoir. Aiding me in this is going to give him a lot of trouble; it would only be fair he demand something in return.\"\n\n We all thought about it, but it only took a second for me to realise I had exactly what he'd need. I took a few more seconds to try to think about the ramifications, but couldn't come up with a better option.\n\n \"I know what to give him.\" At Tomas' questioning look, I continued. \"Greagoir too, for that matter. What does a mage like Irving value more than anything? Knowledge. I can tell them about Avernus' theory on templar abilities. And I can show Greagoir my abilities, promise to teach him once the blight is over. It's something they'll both want \u2013 Irving will be willing to help Anders, I suspect, since he's the one who keeps convincing Greagoir not to execute him; add in a little knowledge and the chance to see the dumbfounded look on Greagoir's face when he learns the Chantry doesn't know everything? No problem.\"\n\n Tomas looked intrigued, and even Aedan's expression was slightly impressed. Alistair, on the other hand, was furious. \"Are you mad? I know you're angry with me, but is it really bad enough to justify a death wish? You go in there and show Greagoir what you can do, he may never let you leave. And if you think having templar abilities will be enough to prevent them from assuming you're a mage when you disappear, you've got another thing coming. They'll torture you to determine where you learned your skills. There is absolutely no chance you are walking in there and showing off. None.\"\n\n My face had become more and more flushed as he spoke, but I controlled my temper enough to avoid screaming right back at him.\n\n \"Alistair, you are not my father, and you have no right to tell me what I can and cannot do. Everything is not always about you! You will back down this instant, or so help me, I will throw you out of the boat in full plate when we get there. I am a big girl, and I make my own decisions, isn't that what you said? Stop being a hypocrite then, and put your money where your mouth is. It's fine and dandy to agree with me when you also agree with my decision, or it's too late to change it. But the minute you disagree with something I plan to do, that all falls by the wayside, doesn't it?\n\n \"I am aware that Greagoir will have suspicions when we meet. I am prepared for that. I will simply tell him the truth. I don't actually believe he will have me tortured; he'll throw me in a cell, at the worst, and then I'll just have to wish to go home and I'll be fine.\" A frown appeared on Aedan's face, and Alistair grimaced. I didn't stop to inquire. \"If I never go back there, they won't be able to do anything to me. He can bring in Tanar to verify my story, and Irving can tell him about whatever it was that I did up in the Harrowing chamber. It will help if we take Wynne with us; Greagoir trusts her. She won't help us free Anders, but I know she will protect me.\"\n\n Tomas spoke up. \"We will bring enough of a force to the meeting to give them pause should they wish to take Sierra. In addition to which, if it becomes necessary, I will tell them she is a Grey Warden. We will have them come over to shore for the meeting, bringing Tanar and Irving and whoever else Greagoir feels needs to be there. We can do this safely, Alistair. And if it means we recruit another mage, especially a healer who happens to be male...we are going to need all the help we can get in the Deep Roads. We cannot take Wynne with us.\"\n\n Alistair ran his hand through his hair, ruffling it and making it stand up. He reminded me of a little hedgehog, with his bristles all standing on end. I almost laughed. Finally he pinched the bridge of his nose with his thumb and forefinger. \"Fine. Just...fine. I'll be the first to admit I was wrong if this works out well. But I'll also be there to say 'I told you so' when you're planning a jailbreak.\"\n\n Aedan smirked. \"As long as you help with the jailbreak, I agree.\"\n\n \"You joking? A chance to poke the Chantry in the eye? Wouldn't miss it.\"\n\n \"I have a question.\" Three pairs of eyes swivelled to me expectantly. \"I want to tell Greagoir about Meredith. About the situation in Kirkwall. I feel like the Chantry should have the chance to remove her on their own.\"\n\n Tomas smiled. \"I didn't hear a question.\"\n\n I rolled my eyes dramatically. \"What do you think? Is it a good idea?\"\n\n Tomas considered. \"I don't see that it could hurt. The worst that will happen is they ignore you, and Kirkwall remains unchanged.\"\n\n Aedan added, \"And if it would help, it seems worth it. She sounds like a real nightmare.\"\n\n Alistair spoke very quietly, \"I met her once, I think, in Denerim. You said the red Lyrium is what's going to push her over, but I'm not convinced the push needs to be very big. She's a zealot, and she hates mages. Making them Tranquil seems positively moderate for her. But they won't get rid of her. Templars are never dismissed, rarely punished; at worst they'll shuffle her somewhere else.\"\n\n \"But if that gets her away from the mages...she could be a fabulous bodyguard for the Divine, or something. Anything that keeps her out of a Circle.\"\n\n He sighed. \"I have no objections. Less templar abuse of power is better. Like Tomas said, the worst case is that nothing improves.\"\n\n After that, we finally said our goodnights and headed to bed. Tomas took me aside briefly as I was getting up. \"Sierra...you don't have to sleep alone, if you don't want. I can make room for you in my tent.\"\n\n \"Are you propositioning me, Warden Commander?\" I smirked at him and raised one eyebrow suggestively.\n\n He sputtered. \"No! Maker.\" He put his face in his hands, and I wondered if I'd even be able to see a blush against his dark complexion.\n\n \"Shame. Another time, perhaps?\"\n\n He glared at me, and I laughed. He growled, \"Be serious! I know you find it difficult to sleep.\"\n\n I stopped laughing, suddenly very serious. \"I do. But I will learn. It's time to stand on my own two feet, Tomas.\"\n\n \"That's why the sparring? And wanting to take a watch?\" I nodded. \"I can respect that. Fair enough. Just know the offer is open should you need a friend.\"\n\n \"I'll keep that in mind.\"\n\n When I got into my tent, I found that someone had adjusted it to make it stand better. I was annoyed, but mostly at myself for not being able to put up a tent properly. When I saw my phone in the middle of my bedroll, I sighed. I changed, then sat down to meditate and try to find some inner calm before picking the thing up. \n\n I turned it on and found a note written in the notes app, to my shock. It was brief and to the point.\n\n I'm sorry. I won't stop worrying about you, but I will try to stop being your father. I said try, because I know I'm not perfect, and I'll screw up again, I'm sure. You won't believe me, but I'm aware it's not about me. I promise.\n\nThis song is for you. Just so you know. And that one line? I'll never move on, but if you need to believe it, I will let you.\n\nI love you.\n\nForever,\n\nYour Alistair\n\nI sighed again. I wasn't truly that angry at Alistair for his outburst \u2013 he was right, and I could be in danger at the Tower, and I didn't expect him not to worry. I did, however, expect him not to treat me like a child. It seemed he got the message, though how long that would last was anyone's guess.\n\nI closed the app, and started the music playing. I had the presence of mind to check the volume first, this time, and so when the first strains of music flowed out, no one would be able to hear but me. I flopped back on the bedroll and closed my eyes as I listened to the sweet voice of Dido singing White Flag. A few of the lyrics jumped out at me, and I could almost hear Alistair saying them to me.\n\nI know you think that I shouldn't still love you, or tell you that\nBut if I didn't say it, I'd still have felt it, where's the sense in that?\nI promise I'm not trying to make your life harder or return to where we were\nBut I will go down with this ship\nAnd I won't put my hands up and surrender\nThere will be no white flag above my door\nI'm in love, and always will be\n\nI cried, again. And then I was suddenly angry. What right did he have to drag my emotions over the coals, again and again? I scrubbed the tears away angrily, and rolled over to try to go to sleep. I wasn't successful; I laid there and stewed, frustrated and angry, until I had a thought. I sat up, grabbed the phone, picked a song, and set it up to play. Relieved that I had found a come-back, I finally slept.\n\nI had the last watch in the morning, and while I was still tired, my Warden stamina was more than enough to allow me to overcome it. When I thought about how bad my stamina had been before, I was embarrassed. Shale was up, as she always was, and we had a quiet conversation while we waited for everyone else to wake. She told me golems didn't sleep, which I assumed, but that she could do something akin to meditation, where she could clear her mind and just watch the stars, or the fire, for hours without being bored. It was a good thing; I couldn't imagine being awake all night, every night, while everyone around me slept.\n\nI made breakfast, and people started stumbling out of tents when the smell became obvious. I'd sliced and fried up some of the jerky, as though it was bacon, to have with the porridge, and I knew I could rely on Warden appetites to do the rest. Once everyone had their fill, we packed up to get moving. Alistair, to my annoyance, grabbed my tent from me, tucking it with his own, and stole the heavier of my two packs as well. At least he let me pack my own things, for once. I growled at him, and he smirked in my direction before walking off. Leliana actually giggled at me, and I flipped her the finger. The confused look was priceless, but not quite what I'd been going for. I sighed and followed after Sten, grumbling to myself quietly.\n\nAt some point while walking, Aedan pulled me to the back where no one else could hear me.\n\n\"Home?\" he asked.\n\n\"What?\" I had absolutely no idea what he was talking about.\n\n\"Last night. You said you could wish to go home, and you'd be free from the dungeon.\"\n\n\"Uh. Oh, I didn't even notice.\"\n\n\"So is Earth home, now?\"\n\nI could see anxiety and insecurity on his face. \"No. With you is home. Really, I just don't exactly know what to call it. 'Where I'm from' gets to be a mouthful, and I don't know of a word for the place you grew up but isn't home anymore.\"\n\n\"So given the chance...\"\n\n\"You mean, if I got to pick? Stay here, or stay back there for good?\" He nodded. \"Here, without a doubt. Alistair's an idiot, but he's not going to chase me away from my family.\"\n\nAedan smiled, a wide, joyous grin, and took my hand. I squeezed it, and we walked like that for the rest of the day.\n\nThat night we took up sparring again, and Tomas beat me around a small clearing near camp, though I managed to avoid all but a few bruises. He praised me, and then told me he was going to start using a sword next time. I almost cried \u2013 in fear. If I'd been in that much pain the first time from just his shield, I couldn't imagine what would happen when he used a sword. Aedan watched, but didn't even glower.\n\nAfter supper, I heard Alistair say he was heading off to a nearby stream to clean up a little. The other men immediately joined him, but Leliana confronted them before they could go and insisted on rock-paper-scissors to decide whether the men or the women got to bathe first. Leliana won, as usual. I wonder when they're going to realise she always wins? She's like a mind reader. She could make a fortune in Vegas. The men grumbled, but sat down to wait while Leliana, Morrigan, Wynne and I headed down to the river. Prince joined us, and we took the opportunity to wash blood and Maker-knew-what else out of his fur, much to his dismay. The stream was shallow and too cold for soaking, but we all managed to get more-or-less clean. Cleaner, anyway.\n\nWhen we got back to camp, I waited until the men headed out, and Leliana and Wynne weren't looking, then ducked into Alistair's tent \u2013 right beside the one he'd erected for me, as usual \u2013 and put the phone in the middle of his bedroll. I figured he'd know to push play, so I didn't leave a note. After that, I crawled into bed. Apparently last watch was going to be mine semi-permanently, so early to bed sounded good.\n\nSadly, my best-laid plans didn't work out. It was too early, and I couldn't fall asleep. I tossed and turned for a while, wishing I had my phone back. And then the men came back into camp; no matter how they tried, they weren't that quiet, really. I heard Alistair shuffle into the tent next to mine, and I couldn't help but try to listen for his reaction to the phone. I perked up my ears, and then heard the song I'd chosen start. It was the Dixie Chicks, and about as angry a song as I had in my playlist \u2013 \"Not Ready to Make Nice\". There was a bit in the middle that didn't really relate, but I thought he'd get the picture from the first verse and the chorus.\n\nForgive sounds good; forget, I'm not sure I could.\nThey say time heals everything, but I'm still waiting.\nI'm through with doubt; there's nothing left for me to figure out.\nI've paid a price, and I'll keep paying.\n\nI'm not ready to make nice, I'm not ready to back down.\nI'm still mad as hell and I don't have time to go round and round and round.\nIt's too late to make it right, I probably wouldn't if I could,\nCause I'm mad as hell, can't bring myself to do what it is you think I should.\n\nWhen the song stopped, all was silent from the direction of his tent. I, on the other hand, was on the verge of sobbing, again. And this time the only one to blame is me. I finally fell asleep with tears still streaming down my face.\n\nAedan woke me before the first rays of dawn, and after putting on my armour, I crept out to the fire with my blanket still tucked around myself. I nodded to Shale gratefully as she brought over an armful of wood so I could build up the fire. The mornings were getting noticeably chillier. I debated repeating the previous day's breakfast, but I just wasn't in the mood. I was tired and dispirited. The Alistair situation was getting out of hand, and I didn't know what to do about it. \n\nI sat by the fire and brooded until the others started rising. I actually found myself wondering what nickname Varric would have given me if he'd seen me, and decided 'Sulky' wasn't something I was comfortable with. When everyone woke, I put in a concerted effort to be pleasant and light-hearted. It seemed to help, some. Everyone was smiling a little more, and despite red eyes with black circles under them, even Alistair offered me a small grin. I made a concerted effort not to scowl. I think it worked.\n\nI found my phone sitting on top of the pack I was being allowed to carry after breakfast. I tucked it in my pocket, determined not to look or listen where anyone could observe. When I finally got a quick break to pee in the bushes, I pulled it out, surreptitiously looking around before checking what song he had queued up. There was no note, this time; I didn't push play \u2013 there wasn't a song on the phone that I didn't know the words to by heart, so just looking was enough.\n\nI've never been a huge fan of easy-listening music, nor of music from the fifties or sixties, but there was the odd song that I just couldn't avoid. \"(I can't help) Falling in Love With You\" by Elvis, for example, and the occasional Roy Orbison ballad; the song Alistair chose was one of that genre, though a much less popular piece overall \u2013 \"I Will Wait For You\" by Andy Williams. The words had always pulled at me, and this was no exception, as they ran through my head.\n\nIf it takes forever I will wait for you\nFor a thousand summers I will wait for you\nTill you're back beside me, till I'm holding you\nTill I hear you sigh here in my arms\n\nI managed to avoid releasing the tears that threatened. Why? Why is he tormenting me? I shook my head to clear it, shoved the phone back in my pocket, and caught up to my travelling companions. I'm guessing my eyes must have been red-rimmed; Leliana gave me a curious look, and Aedan a sympathetic one. I pretended not to notice.",
        "By the time we camped, I was irritated again, and I hastily pulled out the phone before sparring with Tomas. I selected a song, tossed the offending device through the flap of Alistair's tent, and stomped off to spar.\n\nAn area for sparring had been set aside, but to my never-ending surprise, when I went over and readied my daggers, it wasn't Tomas I was facing. Alistair stepped into the middle of the trampled grass, holding sword and shield in a defensive posture. \n\nChapter Sixty-Two: Abandonment and Knighthood\n\nAlistair stepped into the middle of the trampled grass, holding sword and shield in a defensive posture. I wanted to refuse; I didn't want anything to do with the bastard, and learning from him seemed impossible. But refusing would have opened it up for discussion, and I wanted that even less.\n\nI noticed that, purposely I assumed, only Aedan and Tomas were there to witness us. We were a little bit outside of camp, where those at the fire couldn't see. I sighed and went on the offensive. I circled around Alistair, feinting a few times, testing his reflexes. He was fast; almost as fast as Tomas, and stronger to boot. I knew I couldn't afford to get hit with his shield at all.\n\nMy performance at first was lackluster; I was emotionally off-balance fighting Alistair. He didn't even try to shield bash me, but it took no effort whatsoever for him to block my attacks. Tomas and Aedan tried calling out suggestions, even taunting me and calling me feeble, trying to get my temper up, to make me get serious. It didn't work; I tried, but the more I thought about it, the less well I performed.\n\nAfter a bit of this, Alistair sighed. He dropped his sword and propped his shield up against a nearby tree, then turned his vulnerable back to me, unarmed.\n\n\"Maybe you can hit me now? Give it a go, princess.\"\n\nI knew in my head it was a calculated move to get under my skin; I knew it, but it still worked. Immediately my back went up, my temper now running the show, and I dropped into a more aggressive stance that Zev had demonstrated previously. I didn't hold back; it was a good thing the blades had been enchanted to be dull \u2013 a blessing from Sandal, of course \u2013 because suddenly I was furious. \n\nI went on the attack, dropping low and aiming at his knees, spinning after an attack to begin a new one. I didn't pull my punches; the enchanted blades didn't pierce his armour, but I hit him hard, anyway, and I was leaving bruises if his surprised grunt was anything to go by. After the first few moments of me actually trying to hit him, he sprinted away and grabbed his shield. I didn't give him time to grab his sword, or to properly equip the enormous bulwark, but just kept attacking.\n\nPut your shield down with me, will you? Turn your back? I stabbed and spun, dropped and did it again at a different height, and he was forced to use both hands on the edges of the shield to try to block my fury. I didn't even realise when any skill I possessed went out the window, and I was just stabbing uselessly at the by-now dented shield and sobbing in rage and hurt.\n\nAlistair didn't move, didn't try to stop me; he stood there and withstood it, let me hit him as hard and as often as I needed until the anger finally fled. I realised we were alone; Aedan and Tomas had obviously opted for discretion, and gone away. My exhausted arms finally fell to my sides and I dropped the practice daggers; I staggered back, out of breath and breathless both. It turns out those are two separate things, one physical, one emotional. Who knew?\n\nI didn't bother to wipe the tears or stop them; I looked up at my former lover, dropped my shoulders in defeat, and finally spoke directly to him.\n\n\"Why?\" It was all I could think of to ask. I couldn't get the rest of the words out. Why did you break my heart, why did you walk away, what did I do to make you believe I could be that monster, why are you tormenting me now?\n\nBy the saddening of his carefully controlled expression, I could tell he heard the words I didn't say. He took a deep breath and answered.\n\n\"Insecurity. Not believing in what I had in front of me, not trusting you, but instead believing the lessons I learned in childhood. Stupidity. You name it, and the insult applies to me. And now? I just wanted the chance to say I'm sorry. And I am, Sierra. I know I will sound like the biggest idiot you can imagine, but I wasn't actually trying to break things off with you. I was so absorbed in my own stupid feelings that I didn't realise what that would look like to you, what not trusting you would do to you. And now, all I can do is be here and hope that I can somehow, eventually, undo what I did.\"\n\nI turned away, speaking softly over my shoulder. \"I'm not sure that's possible.\"\n\nI saw him nod in my peripheral vision. \"I'll be waiting. Just in case.\"\n\nI walked away without another word. I went straight to my tent, crawling in and collapsing on my bedroll. I barely managed to unbuckle my chest piece before I passed out.\n\nI didn't hear anything for the rest of the night, but my subconscious must have been listening, because when the song I'd chosen was played in the tent next to mine, it haunted my dreams. I couldn't remember the images when I woke, but the melody of Shania Twain's \"It only hurts when I'm breathing\" was stuck in my head.\n\nAnd it only hurts when I'm breathing\nMy heart only breaks when it's beating\nMy dreams only die when I'm dreaming\nSo, I hold my breath \u2013 to forget\n\n\nWhen I opened my eyes, I expected to see Aedan's face at my dark tent flap; instead, there was light streaming in from the sun, and it wasn't dawn light, either. I sighed. I'd slept through my watch and half the morning, if the angle of the sun's rays were anything to go by.\n\nI finally crawled out of the tent, and my eyes widened in confusion. Most of the camp was just...missing. Leliana was sitting by the fire with Prince, singing softly to herself; Morrigan was reading from her mother's grimoire, as far away from Leliana as she could get without leaving camp. Dariel sat, trying not to look like he was listening avidly to Leli's singing. Gorim was practicing some sort of sword forms, likely trying to build up the stamina he'd lost while injured. Zevran emerged from the edge of the copse of trees nearby. And that was it. There were no tents except my own, only a few small packs, and no Grey Wardens.\n\nLeliana looked up as I emerged, and smiled at me sympathetically.\n\n\"Don't panic, Sierra. They haven't abandoned you.\"\n\nEver eloquent, I squinted and drawled \"What?\" before I even had a chance to isolate the sensation in my chest when I saw everyone gone. Yep, Leliana nailed it, that's abandonment I'm feeling. How strange \u2013 I haven't felt that in years.\n\n\"Tomas felt we should let you sleep as long as you could. We know you haven't been sleeping well, these past few days. So they went ahead, they said they had to cross to the Tower and come back, and had some arrangements to make. They figured we would catch up to them before they got back from the Tower. They said they needed Alistair, Aedan, Tomas, and Wynne at the Tower, and Sten and Shale to set up and protect a camp near shore. So we waited to accompany you.\"\n\nThe discomfort in my chest eased, and I smiled in gratitude. Once convinced Aedan was fine, and hadn't really left me, I was actually sort of happy to be alone with the small group, no need to act okay and no...Alistair. At least for a couple of hours, I wouldn't have to face him after the debacle the night before, wouldn't have to feel the weight of his gaze on me. I stretched and then sat by Leli, smiling in greeting at the others who'd waited with me.\n\nI ate cold porridge and nibbled a piece of jerky; since becoming a Warden, I was a lot less picky about what I'd eat, I noticed. Once done, I quickly packed my things and got ready to go. Since no one else had a full pack, everyone distributed my things evenly among us, except Morrigan who, as usual, would be flying above us to scout. \n\nI'd found my phone among the packs sitting outside; I tucked it into a pocket without a word. I couldn't bear to know what song Alistair had chosen to send me a message with this time; not yet, anyway.\n\nIt was a pleasant morning, and even the endless walking didn't seem quite so bad. It wasn't precisely warm, but the sun was up and took the worst of the chill out of the air, and the humidity rose the closer we got to Lake Calenhad. I thought ahead to reaching the lake, and decided I'd try to find time to really get clean before we got on a boat to Redcliffe. Though I supposed I could also requisition a bath after the boat ride.\n\nWe arrived at the lakeshore before long, and followed Morrigan's piercing cry towards a camp occupied by only Sten and Shale. The golem was quiet, as usual, but Sten actually looked a little bit happy to see us. I wondered if he was suffering from fear of abandonment too, not that I would have asked him that. I didn't want to die, after all.\n\nWe didn't know how long we would have to wait for them to come back, hopefully with Irving and Greagoir in tow; we set up camp, and Zev slipped off to do some hunting. We might be able to get supplies in the Tower or in Redcliffe, but extra meat would never be a bad thing, with now four Grey Wardens to feed. I decided to have my bath, and Leli came with; we searched along the rocky shoreline until we found a little inlet protected by a stand of trees for privacy.\n\nThe water near the shore was very shallow, and the sun directly overhead had managed to warm it, a little; it was very pleasant, sinking into the water, submerged except for nose and mouth. I washed my hair twice, revelling in the luxury, and then crawled out to a large rock, sitting naked, allowing the sun to dry me before dressing. The beautiful bard, who I was more than a touch envious of, reclined on her own rock.\n\nWe chatted amiably for a few minutes before suddenly Leliana went very still. She gestured at me to be quiet, and then pointed at the copse of trees behind us. She indicated to me she wanted me to stay put, and then silently rolled onto all fours, grabbing a dagger and her damp tunic off the ground, then snuck into the woods barefoot. I tried to stay still, pretend like I didn't know something was wrong, but it took everything that I had not to grab for my clothes and my own daggers.\n\nAnd then I heard a thump, a squeal, and some cursing in Antivan. I rolled my eyes; Zevran. I should have known. I turned around to see a naked Leliana behind Zev, with her tunic wrapped around his eyes and her dagger held to his neck. I stood up and raised my eyebrow at Leli.\n\n\"It would seem we have a peeping Tom,\" I drawled.\n\nLeli giggled. \"He wishes. He didn't get anywhere near close enough to peep at anything.\"\n\nZev objected. \"I wasn't peeping! I was...checking on your safety, yes? The Warden would be displeased with me if something happened to you while he was away.\"\n\nI tsk'd at him. \"If you're going to lie, at least make it convincing, Zevran.\" \n\nI knew, when I thought about it, that he hadn't actually been trying that hard; he was more capable than Leli of moving silently and in hand-to-hand combat. There's no way that we'd have known he was there, or that Leli could have overpowered him, unless he'd let it happen. \n\nLeli asked, \"So what are we going to do about him now?\"\n\nZevran replied, \"I can offer some suggestions, if you're having trouble thinking of appropriate punishments, belissima.\"\n\nI chuckled. \"I think a little payback, perhaps. Is that blindfold on tight, Leli?\" I winked and she nodded. \"Zev, Leli's still got her dagger right to your jugular. You move and she'll use it, you understand?\"\n\nClearly nervous now, Zev stuttered. \"Mia sorella? Please, I...\"\n\n\"Oh, no, don't you 'sister' me, Zevran. You tried to peep; now put on your big boy pants and take your punishment.\"\n\nI walked up to him, still naked, smirking at Leli. I stopped a fraction of an inch from him, going on tip-toes and leaning forward to whisper in his ear. \"Your punishment, dear brother, is to have to live knowing that Leli and I were this close to you,\" Leli pressed up to him from behind, and I blew warmly on his ear, \"both of us naked, and that you could neither see nor touch. And if it happens again, or if you don't go straight back to camp without peeking, I'll tell Aedan exactly what you were up to.\"\n\nHis jaw dropped open, and Leli's laugh tinkled out through the clearing. \"You are most torturously devious, bella donna. Consider me appropriately chastised. I will keep my eyes closed until you are clear, and go back to camp without peeking. This I swear.\"\n\nTrue to his word, he kept his eyes closed as Leli and I gathered our things and moved off along the beach to somewhere out of sight. Seeing the incredulous look on Leli's face, I cracked up, sinking down to sit, bare-assed, on the sandy beach. Leli joined me, also giggling, and we laughed together at Zevran's expense.\n\n\"You know you've only dared him to try again, don't you? He's not going to give up.\"\n\n\"There was never a chance he'd give up. He has a reputation to maintain, after all! He's not trying very hard, honestly. It's just a game. And it cheered me up, which I'm sure was his plan...\"\n\n\"Speaking of cheering up, dare I ask, what has been happening with you and Alistair and your phone? It seems to be travelling back and forth between you, but no one is actually listening to music.\"\n\nI sighed. \"He is trying to apologise. I'm trying to make him go away. We seem to be having a little battle, choosing songs to send each other instead of talking.\" Leliana eyed me with one eyebrow raised, and I flushed defensively. \"He started it! I finally got mad after the first two and sent him a response. He won't take the hint.\"\n\n\"What songs?\"\n\nI told her, singing brief snatches from each one, and she nodded; she'd listened to my entire library more than once, I was sure, and could probably sing most of the songs in it. She smiled softly at his selections, but gently admonished me about mine. \n\n\"You really are angry with him! Poor Alistair.\"\n\n\"Are you joking?\" I scowled at her, only half serious. \"You feel sorry for him?\"\n\n\"Sierra...if you wanted him truly to go away, the best method would be not to respond at all. I do not think you are so dedicated to staying away from him as you believe yourself to be. Responding, especially with a bit of humour, is definitely going to encourage him. Even if your song choices are angry.\"\n\nI scowled deeper. \"If he takes \"I'm not ready to make nice\" as encouragement, he's got bigger problems.\" \n\nI stood, now dry, and pulled my clothes on; the phone, still in my pocket, called to me. With a sigh, I sat down and turned it on. I was inexplicably irritated with Leli, though I knew that wasn't rational, but it was sort of nice to have someone with me when I found out what song he'd left for me this time.\n\nI wasn't expecting, of all the songs he could have chosen, Celine Dion's 'I'll be waiting for you.\"\n\nTake me back into the arms I love; need me like you did before\nTouch me once again, and remember when\nThere was no one that you wanted more\n\nI'll be waiting for you here inside my heart\nI'm the one who wants to love you more\nYou will see I can give you everything you need\nLet me be the one to love you more\n\n\nLeliana held me as I cried, and her voice was soft when she finally spoke. \"I feel sorry for him, but I am also sorry for you, my friend. This is hurting you both more than it needs to. I will make him stop, if you wish it.\"\n\nI snivelled, wiping my tears off with the back of my hand. \"I just...I need to think. Don't do anything, for now, okay? I'll let you know.\"\n\nWhen I finally had myself together again, we headed back to camp. We arranged a clearing around the fire with logs scattered around for sitting. Dariel had gone off into the woods a little ways, not eager to be around any templar, never mind the Knight Commander; Morrigan flew overhead to warn us when Aedan and the rest approached.\n\nI sat curled on a blanket, thinking about Alistair, and everything Leliana and Wynne had said to me. My thoughts were a whirlwind, and I was only too glad to be interrupted by Morrigan's cawing as she flew through the camp. Shale and Sten elected to stay on the edge of camp, to keep watch; everyone else stood and turned towards the shore. Within a few minutes, a group of people came in sight; as they came closer, I could recognise the faces of my brother and my companions, but also Irving, Tanar, Greagoir, a young elf who I assumed was a mage by the robes he wore, and one more templar in full plate, including a helmet. Irving and Tanar looked excited, while Greagoir's expression was far more sour. I couldn't wait to change it.\n\nAedan came up to me and gave me a hug, apologising for leaving me in the morning. I hugged him back, and he whispered to me.\n\n\"Irving knows what we are after. Greagoir only knows we asked to meet. Don't demonstrate anything until he's agreed to let you go free, and to allow the conscription.\"\n\nI nodded, and followed him over to the fire. Our companions who weren't immediately involved in the process spread out through camp, cleaning armour, sharpening blades, and generally entertaining themselves; Alistair, Tomas, Wynne, and Leliana joined Aedan and I, followed by our guests. Alistair refused to make eye contact with me, and although I was grateful \u2013 I didn't relish the thought of looking into those piercing orbs \u2013 I was also curious as hell. Now's not the time, Sierra.\n\nWe all settled around the fire; the anonymous templar wouldn't sit, but instead stood behind Greagoir, hand on the pommel of his sword. I shared a log with Aedan, who immediately put his arm around my shoulders. Once everyone was seated, we started the introductions. The young elf was introduced only as Alim, which perked my ears up, but I couldn't do anything about it before figuring out everything else. I shook my head; there was no chance Greagoir was going to let us leave with two mages, and Anders was just more urgent. I did wonder why Alim was with them, but waited to find out. The templar wasn't named, and never even removed his helmet. I wanted to scowl at him, but resisted. I need Greagoir on my side; don't piss him off over minutia, Sierra.\n\nAt Tomas' nod, I spoke.\n\n\"My name is Sierra Jones.\"\n\n\"Cousland.\" Aedan spoke up. \"She's a Cousland, from Highever.\"\n\nI rolled my eyes and continued. \"I am going to tell you a story that you won't believe, but I hope I can change your mind. Everyone here is convinced of the truth of this story. I tell you this with an ulterior motive; I want something from you. Once I have told you my story, I will tell you what I want, and what I have to trade for it.\" I turned to Greagoir. \"I assure you I am no mage, and should you require it, I am prepared to allow you to verify that fact. Before I tell you anything more, though, I need a promise. I require a promise that, pending your verification of my non-mage status, you will not attempt to detain me to learn what I know.\"\n\nGreagoir looked around himself. \"I am in the middle of a well-armed camp. It would be suicide to try, I suspect.\"\n\nI nodded. \"Likely. But I don't relish the thought of being hunted.\" I softened my tone. \"Look, I can promise you, I intend no harm to you, the Circle, the templars, the Chantry, or anyone else in Thedas except the darkspawn.\"\n\n\"Assuming I believe you when this is done, I agree.\"\n\nIt was the best I was going to get, and I knew it. I sighed and began my story.\n\n\"As my dear brother said, I was born in Highever. When I was born, though, something happened. No one knows what, or how, but my...soul, let's call it, the essence of what makes me, me,\" I looked around to ensure no one looked too confused, \"somehow was transported elsewhere. Somehow, this essence ended up as a newborn baby, on a distant world. And I do mean world; I was not on Thedas. ",
        "\"I grew up in a place with no magic, no mages, no elves or dwarves. We had advanced abilities to build things to make our lives easier, but no magic. One of the people there, I believe, somehow had access to the Fade, or something similar. He was able to see into Thedas from the distant world, and to see future events as they could unfold. Believing this to be a dream, he wrote a book about it. The book, believed to be a work of fiction, was widely published and well-known to those who enjoy such stories.\"\n\nWe had previously agreed that calling the game a book was going to save a lot of time, rather than go into my usual long-winded explanation of a theatre performance.\n\n\"I read the book, several times, in fact. I learned about Thedas, and the events that would take place throughout the fifth Blight. I thought it an entertaining story, nothing more. And then, one day, without explanation, my soul came back to Ferelden. I found myself living in the story. Stuck here, I eventually decided that since I knew what was going to happen, I was going to try to change it. I didn't like the outcome, and I decided to make a difference. I found the Grey Wardens, and have been using my knowledge to try to help them achieve their goal \u2013 to end the blight.\"\n\nI began passing around my collection of Earth artifacts. I allowed all four men to examine my clothes, my Zippo, and the other bits and pieces I had brought over. When they were done, I pulled out my phone. I played them a video, and some music; took pictures of them with the camera, and showed them. And then I settled down to allow them to think about what they'd learned. Irving looked ecstatic; he and Tanar began whispering back and forth eagerly, until Greagoir finally interrupted them by clearing his throat.\n\n\"Do you believe me?\" I asked.\n\nThe mages indicated they did, nodding eagerly. Greagoir looked somewhat disturbed. \"You're afraid I'm a blood mage, and that I am making you see things that aren't there.\"\n\nHe nodded, having the grace to look at least a little bit apologetic. I grinned. \"I expected that. If you come with me away from everyone here, you can go ahead and smite me, if it will make you feel better.\"\n\nHe looked shocked. \"Young lady, I wouldn't volunteer for that if I were you.\"\n\n\"It's quite alright. It won't be my first time. Seriously.\" \n\nGreagoir gave Alistair a skeptical look, and he grinned sheepishly. \"She made me do it.\"\n\nI laughed, and turned back to Greagoir. \"Let's go over there. Will that be far enough away?\"\n\n\"There is no need. I can narrow my smite to include only you.\" \n\nOf course you can. I nodded. \"Go for it, then.\"\n\nAedan tightened his arm around me, but he couldn't stop me from spasming in his arms. The pain wasn't pleasant, but it wasn't as bad as when Alistair did it, and it didn't hold a candle to the Joining. I shuddered one more time, and then focused back on the Knight Commander.\n\n\"So?\"\n\n\"You are not a mage.\" He looked shocked. \"I apologise for disbelieving you.\"\n\n\"Don't worry about it. Think you can believe my crazy story now?\"\n\nHe took one more look at my phone, now sitting silently on the ground, and avoided the question. \"I fail to see what all of this has to do with me.\"\n\n\"There's more. Because it turns out that I am not a mage, I'm a templar. Without training, without Lyrium, and without the Chantry.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-61-62"
}