{
    "title": "Ignore the Warning Label Pt. 02",
    "pages": [
        "Author's Note:\n\nThis is NOT the kind of Part 2 that is designed to stand alone. You will be very lost without having read Part 1.\n\nI had an outline of things I wanted to describe in Part 2, as well as some general guidelines for how I want the next sections to unfold. However, in putting Part 2 together, it ended up somewhat shifting into two episodes. It's still the events I wanted to have as the second instillation, but... well, you'll see. I think of them as parts 2 and 2.5. I think it's worth mentioning because it may impact how people space out reading this.\n\nAs before, I love feedback. Thanks a lot to all the people who have reached out to me so far. I'm very much trying to figure out what works and what doesn't in my writing. It's hard to know unless people tell me.\n\nEDIT April 16, 2019: Edits and helpful guidance provided by EGRI.\n\n*\n\nMalcolm had to leave early the next morning to get back across the city to an office hours review session for Cyber Security Compliance. It was sweet, the way he eased himself out of bed, trying not to disturb me, and attempted to dress without turning the lights on. But I work out early anyway and I wasn't about to let him sneak away without saying goodbye, so I hugged him from behind and made a show of feeling up his chest while \"helping\" him with his buttons.\n\nMalcolm yawned mightily. He's useless until he's got some caffeine in him. Mumbling a farewell and intention to see me online later, he rushed out the door without realizing I'd hidden his tie under my pillow. I had plans for that tie.\n\nBut first, leg day. Everybody moans about leg day, like they'd rather be banging their heads against a wall. Those are the people destined to walk around with flat asses forever. It's easily my favorite workout.\n\nHalf of it is for the looks. The looks from all the gym rats and muscle monsters who see me pull up to the squat rack and assume that they're going to have to waste their time waiting for me and my bitch weights. Then they notice my ass. Purely lecherously at first, but slowly taking in my glutes and quads as I load up the bar. I imagine them thinking \"all right, maybe this chick can actually lift.\" Then, when I start getting into it, with full downward motion and perfect form despite my height, those maybe-s turn to definitely-s. That transition is what does it for me. The little nods of respect from people who started out looking down on me.\n\nThe other half is personal satisfaction. There's nobody in the world I'm more competitive with than myself. I love seeing the weights on the bar in the mirror as I squat down and lift them up again. I love feeling my muscles strain as I work myself, just a little bit harder than last week. I love the feeling of lightness that comes, despite the exhaustion, right after racking the bar. It's exhilarating! I spend most of my professional life writing code or analyzing data sets on a computer screen. Being able to really use my muscles, sweat buckets and feel my heart thud hard inside me makes me feel deliciously alive.\n\nAs I went through the familiar routine of circling the gym floor to hit each muscle of my legs, visions of last night played over in my head. It had all happened so fast! Malcolm had arrived last night as my best friend and left this morning as my... lover? Boyfriend? Dom? Still best friend but also those other three? Fuck labels, it had been fantastic and I wanted more.\n\nHad I really been nervous about it? About asking him, about performing as a submissive, about facing down rejection? I grinned at myself in the mirror, remembering. Of course I had been, but it had all gone so well that it was hard to even imagine feeling anything negative.\n\nIt took all of two minutes to walk home from the gym. That's why I chose that tiny studio to live in; location. I could have gotten a bigger space for less money, but the proximity to work, food and entertainment was worth some sacrifices.\n\n7:40. 'Perfect.' I quickly peeled my sweat drenched clothes off, grabbed my scissors and bush trimming mirror, and set about fulfilling Malcolm's shaving command. Shaving cream and a supply of razors were my weapons of choice for keeping my legs and pits smooth, but I was bushier than I'd expected, and it took time. 8:10... 8:15... 'Not so perfect. Oh well, being on time to work is overrated anyway.' It's a very high-risk area to be using a razor! Surely my boss would understand.\n\nA quick shower, then I grabbed Malcolm's tie and remembered that I had no idea how to tie it. 'Shit!' Seems I'm not the only one who's father never taught them, as googling \"how to t\" suggests \"how to tie a tie\" as the first result.\n\n'Right! Shaved: check. Naked: check. Tie: check. Showtime.' I set the timer on my camera and posed, thrusting my hips forward to show off my newly extremely naked pussy while cupping my breasts close around Malcolm's tie. I wanted to get the look just right. 'Horny and mischievous, playful enough to let him know you're fun but serious enough to show him you want his cock.' I tried my best to duplicate the erotic expression Reddit's Gone Wild models wear so naturally. It took several tries before I was happy with it.\n\nI sent the picture to Malcolm's phone.\n\nDevyn: you forgot something sir\n\nDevyn: i think ill wear it to work\n\nDevyn: like my outfit?\n\nDevyn: :D\n\n'That's right, we're fucking sexting now! Get on my level!' It was totally worth being late.\n\nMalcolm did get on my level, but not quite in the revealing selfie way I'd expected. And maybe hoped for, just a little. Instead, over the next few days, he gave me homework. That's how he presented it -- \"Homework.\"\n\n\"Some educational material to dispel certain bedroom myths.\" It wasn't porn. Contrary to what one might expect given the start of our friendship, it certainly wasn't porn. In fact, it was a very far cry from what we'd shared before. He sent me articles on the effects of power exchange play on internal chemistry and the brain. Long essays compiled from Fetlife users about the ins and outs of spanking, being tied up, things like that. The intention was to talk about what I liked and was interested in trying\n\nI've read far more than my fair share of smut. These articles were certainly far from erotica. They were more informational and emphasizing reality. It brought home a sense of just how real this all was. Like, Malcolm was sharing spanking information with me because we were talking about him spanking me. Actually smacking my physical ass in the real world. It was a hard shift to wrap my head around. Fantasies feel safe and let your imagination run wild. After all, they're not real and there's no expectation that they'll ever be real. Reading this stuff from my Dom, imagining what it would feel like took on a very different tone. I'd know firsthand very soon.\n\nBefore our first night, I'd been worried about being able to do what he would want me to. I wasn't anymore. It was easy. As obvious as it might sound, all I had to do was obey. I often drifted back to how closely connected I'd felt with him as we gazed into each other's eyes. Me kneeling under him, his firm grip in my hair, so incredibly open to him while he was his perfect full self for me...\n\nI wanted to feel that again. More. In every possible variation. We were supposed to be setting limits, but so many things sounded appealing to try! Everything that would involve his hands on me and that look of delighted pleasure on his face was something I was open to. That to-do list expanded much faster than the turn-offs and limits.\n\nAside from wanting to enable Malcolm's dominance, one thing I was especially interested in was marks. There's a certain kind of kinky image that had always been my favorite. The image of a submissive woman, smiling and happy and proud, showing off the marks on her body she's received from whatever she's just endured. I like the positivity, bruises on somebody who's clearly miserable don't do it for me at all. I wanted to be one of those strong, determined women I was attracted to, someone who could take a whooping and wear her bruises as trophies with a genuine smile!\n\nBut as much as I read and we talked, it quickly became clear we'd need some experience to set benchmarks. For example, although I liked the idea of doing it with Malcolm, I'd never been spanked before. How much was a heavy ass beating to me? 5 spanks? 50? 500? I had no idea. Similarly, I'd never even experimented with handcuffs before. Would I freak out feeling any restraints like that? On the other extreme, would I enjoy being covered in ropes? At that point, it was all just theory.\n\nWe crafted a scene together. Well, he planned it out in his head. I mostly contributed excited affirmations when he suggested certain themes. It was very exciting! The process felt kind of like we were making a stir-fry. We went shopping for the ingredients together, then he cooked them into something delicious for us to share.\n\nThis would be our first time. Our real first time. I'd convinced him that last time didn't really count because we hadn't fucked. He laughed and asked how the 'sex' part of 'oral sex' didn't count, but let himself be talked around.\n\nThinking about it made it hard to keep my hands off of myself. Remembering his mouth on my clit, his hands squeezing my tits, and thinking about everything that might come next got me very worked up.\n\nBut Malcolm's first rule to me had been that my sexuality was his to play with, my orgasms his to control. It didn't come up again, but I hadn't forgotten, and I was determined to keep to it. It would be my special sauce contribution to our stir fry, arriving to the scene already wet and horny for him. Well, even wetter and hornier for him than I normally would have been.\n\nHe would be busy with study sessions and paper writing that week until Friday, so we decided to meet over the weekend and have a proper romantic date then go to his place and... have some fun. A small, nagging voice in the back of my head whispered that I was forgetting something. Something important. Maybe it would have clicked if I'd looked at a calendar. Or hell, even if I'd just thought of it as the second week of the month instead of three generic days away. But I didn't. All I thought was: 'Three days!?! What the hell am I supposed to do to make three days pass?'\n\n----------\n\nThe enemy Draven stealthily made his way into the brush at the far end of our lane. Foolishly thinking himself concealed, he waited for Lee Sin to make his way through the jungle to gank us. Sitting in our respective apartments seven miles apart, Malcolm and I grinned in unison. We moved together, Malcom's Alistar diving in headfirst to stun Draven against the wall before tossing him into the air while my Jinx blasted him down. We laughed together over Discord as the Draven player complained in chat about his support not keeping track of our wards.\n\nIt was a small thing, but it felt meaningful to me. Call it confirmation bias or whatever, but I swear we were flowing together better. Before, maybe he would have wasted a second saying something like \"I'm going in,\" or I might have burned time reacting to him rather than anticipating. We were a well oiled machine in bottom lane and Draven and Thresh were our bitches.\n\nI found it difficult to describe, even to myself. Parts of our relationship were changing as we became more sexual, but other things stayed the same. Like this. Something as simple as connecting together to play League of Legends, poke fun at each other and gossip about our days. It was just a thing we did. Something we'd done for years, but still, the ease with which it continued into our changing dynamic made me happy. Very, very happy.\n\nIt wasn't like I'd been worried we'd become so weighted down by sexual tension that the friendship part of us would fall apart. Alright, maybe just a little concerned... But no, instead we felt tighter and more comfortable relaxing together than ever.\n\n\"You were telling me about inviting Nicole over?\" Malcolm prodded me to continue my story.\n\n\"Oh yeah, like I was saying, she kinda invited herself over. She found me on Facebook and we were messaging. She asked what I was doing, I said 'Nothing,' and she was like 'Great! I'll bring some beers over.'\"\n\n\"Oh yeah, that's definitely Nicole. You must have really made an impression on her.\"\n\n\"I don't know what I did! I was a little shocked, I mean like, the fuck? Who does that? But it turned out fine. She's really easy to get along with.\"\n\n***\n\n\"I come bearing gifts!\" Nicole said, proudly presenting a six pack of some craft beer I'd never heard of.\n\n\"Hey. Thanks! Come in.\"\n\nDressed casually with a Rolling Stones t-shirt and cargo shorts, she wasted no time cracking open two of the beers and offering me one. \"I figured you for a lager type girl. If it's crap, I'll happily double fist these.\"\n\n\"Am I that obvious?\" I took a speculative sip.\n\n\"Nah, it's just my super power. I see a sexy lady and I just know how to get her drunk.\" It wasn't crap. Whatever it was, it was actually pretty good.\n\nNicole cast a critical eye around my one room apartment. I'd done a better job cleaning up than I had for Malcolm. Perhaps not exactly \"tidy\" as such, but there wasn't anything too embarrassing laying around. My mother might have objected to calling my bed \"made,\" but it was neat enough to pass millennial's standards. \"Give me a tour?\" she asked.\n\n\"A tour? Five hundred sixty square feet, what you see is kinda what you get.\"\n\nShe smiled warmly, \"Indulge me.\"\n\nShe was interested in everything. Well, not quite everything. She was willing to accept that much of my furniture was Ikea crap that every twenty-something year old starting professional is obliged to own. However, She stopped to investigate everything that represented some aspect of myself. Nicole latched onto my bookshelf, pouring over each title with the enthusiasm of a kindred spirit.\n\n\"Oh! You like Terry Pratchett too!\" she exclaimed. \"And Mistborn? Name of the Wind... Uprooted... Foundryside...\" She appreciatively ran her fingers over a few of the more worn titles. \"But very little set on planet Earth. One might almost think you like worlds of fantasy more than real life.\"\n\n***\n\nMalcolm laughed, \"she might have you there.\"\n\nI rolled my eyes, briefly forgetting that he couldn't see. \"Everybody should prefer fantasy. The real world just doesn't have enough epic quests and magical powers.\"\n\n\"Did she give you her Harry Potter rant?\"\n\n\"No. What's that?\"\n\n\"Nicole's famous literary thesis on why Harry Potter Seven is the worst book ever written.\"\n\n\"Wow, that's bold. Not just the low point of the series, but actually the worst of all time?\"\n\n\"Yep, she's actually quite convincing. Don't worry, keep hanging around with her and you'll hear it soon enough.\" I filed that away for later. It seemed like a good conversation starter.\n\n***\n\nNicole sat at my desk and reached for various things on it, like she was trying to get a feel for me by immersing herself in my natural habitat. I took the opportunity to eye her up a bit. 'Only fair if she's going to be investigating all my stuff!'\n\nAmusingly, the difference in our heights meant her heels dangled inches from the floor and she had to slouch forward to reach my keyboard and mouse. Up close, the light from my desk lamp caught her red hair and made it shine. She idly played with her ear piercings as she tried, unsuccessfully, to find some kind of order in the chaos of stuff scattered in front of her. She had chosen red metal hoops, which seemed to create a natural flow of warm color all around her face.\n\nI wondered what she might look like if she went all out with the theme. Red nails, maybe some kind of fiery outfit. The Rolling Stones' red tongue and lips on her shirt matched quite well, but I was thinking or something deeper and more flowing.\n\n\"You know,' Nicole turned and grinned as she caught me staring, \"if Sam found my desk this cluttered, she'd spank me.\"\n\nI laughed, \"she likes turning you into your Firefly mode?\"\n\n\"Yeah,\" she giggled mischievously, \"maybe that's why I never seem to remember to clean up.\"\n\n***\n\n\"You know,\" Malcolm said thoughtfully, \"Samantha might have a good idea there. You might really benefit from some incentive to be more organized.\" My gut lurched in panic.\n\n\"No fucking way! We can't do that, your hands would fall off. Besides, I volunteered the information, doesn't using it against me violate the Bill of Rights or something?\"\n\n\"Nope,\" I could hear the smile in his voice, \"that's not how the Fifth Amendment works. Once you've said it, I'm free to do whatever I want with the information.\"\n\n\"Curses. Well, as my lawyer, you should have advised me of that.\"\n\n\"Not graduated yet. You're still on your own.\"\n\n***\n\nShe settled on the couch as I fetched another pair of beers for us. \"You have a lot of open wall space,\" she observed.\n\n\"Yeah, I've never really got around to finding anything I really like to hang up.\" Her face lit up like I'd given her a quest. \"I donno... I spend most of my free time either at the gym or on the computer, I never really felt the need to decorate.\"\n\n\"You lift, brah?\" She flexed and tried her best frat douche imitation, which clashed hilariously with her feminine voice and puffed out breasts.\n\n\"Totally dude,\" I laughed. \"You?\"\n\n\"Nah, I prefer being outdoors.\"\n\n\"Isn't that hard living in the city?\"\n\n\"Yeah. There's not really to much within easy driving distance, but I do get to have some adventures on long weekends.\" She shifted gears abruptly, \"speaking of adventures, how did your night with Malcolm finish up?\"\n\nMy eyes unconsciously flicked across the room to my bed. I wasn't sure how much I wanted to share with her. As much as she made it easy to feel comfortable around her, we had really only just met. She changed her mind, though, and saved me from having to decide.\n\n\"Wait, scratch that, that's starting the story at the very end. Let's go back to the beginning. How did you two meet? Malcolm told some absurd story a while back about his best friend and a high school project?\"\n\nI grinned knowingly, 'absurd, eh?' and told her.\n\n***\n\n\"I bet she loved that,\" said Malcolm.\n\n\"She fucking died laughing. Apparently, it was either the most or the least romantic thing she'd ever heard, and she couldn't decide which. Seems your version left out some of the better details.\"\n\n\"I was trying to make it believable! They already couldn't believe you didn't run away screaming.\" Well, to be fair, if I'd been anybody else, they probably would have.\n\n\"What?\" I teased, \"Doesn't everybody have a perv friend sending them kinky porn all the time?\"\n\n\"By 'perv porn obsessed friend', are you referring to me or to yourself?\"\n\n\"Touch\u00e9\"\n\n***\n\n\"That's excellent,\" Nicole slowly recovered her breath from laughter, \"so now, at long last, you two got together?\"\n\nI clucked my tongue in mock disapproval, \"Quid pro quo, Clarice. Your turn to tell me a story.\"\n\nShe rolled her eyes. \"Yes, Dr. Lecter. But my origin story isn't nearly as cool as yours.\" I gave her an encouraging smile, settling in to listen. She tilted her head and bit her lip, looking very cute as she gazed off into space thinking of where to begin.\n\n\"Senior year of college, I needed to find somebody to split rent with in like two weeks. I'd had the same room mate for three years, but things got weird when I came out to her. I think she felt guilty about her own homophobia and she tried to be good, but neither of us felt comfortable in our own home after a while so we split. She was a bitch anyway. PMS like you wouldn't believe.\n\n\"Sam just so happened to be the first one to answer my Craigslist post. We decided to meet up at a Starbucks to see if we liked each other enough to tolerate splitting an apartment. Now, I had pretty much decided I'd take her no matter what. I mean, rent was due very soon and I was broke. Still am pretty much broke as a matter of fact, but such is life.\" She took a big gulp of beer, tilting it skyward to get the bottom of the bottle. \"Another for you?\"",
        "\"Not quite yet.\" 'She's pretty good at emptying bottles.'\n\n\"So, I went through a pretty hardcore butch phase after I came out. To put it mildly, I wasn't exactly subtle. I wanted to seem confident and out there, yaknow? But I was actually pretty nervous. I mean, I'd already had one roomie leave because of it. It would have been a pretty big blow to get rejected again.\n\n\"In comes Samantha. Picture, if you will, the average Victoria's Secret billboard.\"\n\n\"Thirty-six, twenty-four, thirty-six figure,\" I guessed, \"photoshopped thigh gap, professionally made up, lingerie, runway ass swinging stride, that kind of thing?\"\n\nNicole laughed, \"You've got it! She looked like she'd just walked out of a commercial. Well, she was wearing more than just some underwear, but you get the point. I'm not trying to say that I hated her on the spot, but she sure did look a whole hell of a lot like other bitches I've hated before. You can imagine my surprise when she looks me over and calmly says 'you should probably know that I'm gay. I trust that won't be a problem.'\"\n\nI cracked up, \"no wonder you two got along, she sounds as blunt as you.\"\n\n\"Yep! We actually didn't hook up for a long time afterwards. I met somebody and she was dating one of her TAs.\"\n\n\"Wait, what? Aren't you not supposed to do that?\"\n\n\"Nope, but nobody tells Sam what to do. Anyway, I wasn't really attracted to her. I wasn't into femmes, but at the same time I felt like there was something missing in my relationship. More specifically, in the bedroom. Like... some itch that I couldn't explain to my girlfriend how to scratch. Sam and I both ended up breaking up at nearly the same time. One night, after lots of booze and sexual tension and validating the fuck out of each other, Sam and I started kissing. She was... well... she was fucking rough and wild. And I loved it. It scratched that itch and I wanted more.\n\n\"So yeah,\" Nicole shrugged, \"fast forward a few years and she got a job in the city, so we moved out here.\"\n\n***\n\nWe were at the cleanup phase of our League game. Two inhibitors down, pushing the third, just waiting for the sweet reward of destroying the Nexus. Pretty much auto pilot from here on out.\n\n\"Samantha is an interesting person. I'm curious what you'll think of her. I often feel like everything is a tug of war with her.\"\n\n\"You keep calling her that, but Nicole always says Sam.\" I observed.\n\n\"That's part of it!\" Malcolm laughed, \"I've always thought it's respectful to use people's names, but she hates hers. She knows I mean it well, and she likes that, but at the same time she hates the sound of it. She's never told me to stop and I think that internal struggle is hilarious, so I keep using it.\"\n\n\"So she's big on respect?\" I wanted to get a feel for how to make a good impression on another of Malcolm's Fetlife friends.\n\n\"Honestly? I'm never really sure what to make of her. We get along fine, but I get the impression she doesn't like men very much as a general proposition.\"\n\nThat was intimidating. If he couldn't figure somebody out, I felt grossly under qualified.\n\n\"Nicole said they're going to a chocolate bar in the city on Saturday. Tomorrow now, I guess.\"\n\n\"What's a chocolate bar?\"\n\n\"That was my first question! Apparently it's exactly what it sounds like, there's a place near Union Square that serves alcohol and a shit ton of chocolate. She invited us to join her and this other couple, but we have our plans.\"\n\n\"Who else are they going with?\" Malcolm asked with interest.\n\n\"I can't remember their names... They're the ones who host those parties you mentioned before?\"\n\n\"Jeff and Natalie! Yeah, they have a really nice apartment in Manhattan that's perfect for entertaining. I was hoping to introduce you to them too. Ah well, we'll have to take a rain check.\"\n\n***\n\nWe ended up sharing the last beer. We sat close together on the couch passing it back and forth while watching Dave Chappelle be absurd on Netflix. It was a nice, easy way to round things out. Laughing at Chappelle's stories, pausing to share our own tales, just generally being buzzed jokesters.\n\nShe caught me staring when she played with her earrings, \"You like these?\" she asked, batting at them like a cat.\n\n\"Yeah. I've thought about getting some myself, but my office is kind of uptight about anything fun.\"\n\n\"That's a shame. You'd look even hotter if you did.\" I smiled at her complement, liking her attention. \"You know, I actually have six piercings total,\" Nicole casually tossed out, slightly leaning back onto the couch to give me a view down her body.\n\nSix total? Counting the two that were visible, that would put another four under her clothes somewhere? The grin on her face said she knew just what I was imagining as we laughed at Chappelle's impression of his friend Chip getting away with drunk driving. We kept it up until close to midnight, when Nicole realized she needed to get up for work in seven hours.\n\nJust before she left, Nicole hugged me tight to her. Closer than the chaste hugs of greeting or farewell I was used to. She pressed herself into me like she was trying to turn me on and said, \"I really like you, Devyn. We should get together again soon.\" I wasn't sure if it was meant to be sexual or not, but I'd had a good time so I agreed.\n\n***\n\n\"Would you like me to tell you the answer to that little riddle, or would you like to figure her out yourself?\" Malcolm asked.\n\n\"You tell me. Like, really, it felt flirty, and so did a lot of the rest. It wasn't uncomfortable at all, it's just like, we'd just been talking about our significant others!\"\n\n\"Nicole isn't looking to cheat or pull you into cheating on me, although it will probably sound like that. She and Samantha like group play. It's just fun with hot bodies to them, rather than the intimate sex they share with each other... How to explain it...\" He paused to consider. \"Imagine you own a restaurant.\"\n\nBeing accustomed to his apparent non-sequiturs panning out to something relevant, I went with it. \"What kind of restaurant?\"\n\n\"Sushi. Nice place with tasteful decorations, low mood lighting and reasonable prices to attract young people on date night.\"\n\n\"Fuck tasteful, I want my sushi place to be bold and edgy.\"\n\nMalcolm laughed, \"you tried for that, but the architect insisted that would alienate too much of your clientele. Anyway, you've got a core of loyal regulars who come in every week or two. They think you have the best sushi and they can't get enough of it. Now, this being the food business and people liking to experiment the way that they do, your regulars naturally go to other restaurants too. They like some other places, which fill some other niches in their pallets, but they keep coming back to eat your sushi. How might that make you feel?\"\n\nI started to see where Malcolm was going with this. \"Pretty great. Better than if they just came to my restaurant exclusively, that would be like winning by default. Eating at other restaurants validates that I'm the best because they have others to compare against.\"\n\n\"Exactly. It's not really an apples to apples comparison, but that's kind of how Samantha feels about letting Nicole fool around with other women. Samantha feels powerful knowing that Nicole can fuck any other sexy woman in the world, but she will always be the one that turns Nicole on the most. Plus, on top of that, typically it's a three or foursome scene with both Samantha and Nicole together, which adds all kinds of opportunities for dom and sub games.\"\n\nIt was a hard perspective to wrap my head around. I kind of understood what Malcolm was saying on an intellectual level, I'd had more than enough purely physical fun hookups to know that there was a world of difference between orgasms and emotionally fulfilling sex. Still, it felt weird to me. \"That sounds like it would take a lot of trust,\" I stammered.\n\n\"It does. Absolute trust. You need to be able to toss your partner away from yourself like a boomerang with the complete faith that they will come back and things will be completely normal afterwards. Full knowledge and consent is vital from everybody. If anybody feels deceived at all, it can start feeling like cheating very fast.\"\n\n\"And she wants me to join them?\" I asked, \"Or us, rather?\"\n\n\"I think so. She's attracted to you and you're attracted to her. From her perspective, it makes sense to lay the groundwork.\"\n\nI felt my color rise a little from the matter of fact way my boyfriend declared me interested in somebody else. \"Who says I'm attracted to her!\"\n\nHe chuckled, \"Well, Devyn, you've described her hair, features and body several times in this story, to say nothing about any tells she picked up on.\" He paused a second, realizing why I sounded agitated, \"I don't mean that in an accusatory or negative way at all, you know. It's part of the human condition, we feel attracted to attractive people. It's better to have it out in the open than to bottle it up and pretend otherwise.\"\n\nI felt a little embarrassed. Of course, he was right. Then it hit me, he'd carefully framed all this as Nicole and Samantha's activity. 'But then why would she assume my boyfriend would be fine with it?'\n\nI asked and he hesitated before explaining.\n\n\"I have done such things in the past, but I didn't lead on that because knowing might bias you towards feeling obligated to have us do it. I want to be absolutely clear on this, there is zero pressure on you to do anything with anybody else. It only works if both of us want it, and you can't go into something like that just wanting to please me. Also, I'm a little angry at Nicole for taking aim at you so quickly. It isn't that I don't trust you, you know I do, but we've barely started ourselves! She should know better.\"\n\nIt was one shock after another. What was I supposed to think about all of this? I really wasn't in fucking Kansas anymore, was I? That first night, Nicole tried to tell me how far subs will go to please their doms. Just then, despite Malcolm's deadly serious words and tone, part of me felt, 'He likes it, so I have to give it to him.' It wasn't even a power exchange thing, it's just my instinct when it came to him. Like I was naturally predisposed to aligning my desires to his.\n\nBut how did I feel about the idea, just for myself? I didn't know. I had a lot of very strong feelings pulling me in different directions, ranging from monogamous loyalty to Malcolm, to desire to have my bisexual cake and eat it too, to guilt at feeling that last one, to reminding myself that the guilt wasn't the right mindset for what he'd tried to explain, and back again. Would sex with Nicole impact how I felt about Malcolm? No. I was completely certain about that. I'd casually hooked up with hot bodies for years without forming an emotional connection with any of them. But still, it couldn't possibly be that easy. Could it?\n\nWhat if it was the other way around? I trusted Malcolm with my life, but would I be okay with him fucking somebody else? The punch to my gut was answer enough.\n\n\"I don't think I like the idea,\" I finally said, \"can't we just focus on each other?\"\n\n\"Of course we can. I'm looking forward to exactly that tomorrow.\" The sincerity in his voice alleviated the doubts circling my mind and made me feel warm. It made me feel respected, in a way I only ever had with him. He wasn't putting an a show of being caring, he really meant it. My comfort and feelings meant more to him than the threesome fantasy all men seem to have with their bi girlfriends. 'Just another way he's unique among all the people I've ever been with.'\n\n----------\n\nSaturday morning dawned with red splotches on my thighs and soul crushing cramps. 'Ah... that's what I was forgetting. How could I fucking forget this? It's been thirteen years of the same damn monthly pattern. FUCK!'\n\nSeriously, fuck Aunt Flo. Fuck her raw up the ass with a big rubber dick.\n\n'It's fine. Fine.' I told myself, 'This is happening, just gotta be calm and come to peace with it.' I sighed deep, trying to exhale out the disappointment welling up inside me. It wouldn't have been so bad if I hadn't worked myself up expecting something magical to happen today. Something magical involving heavenly sensations in my pussy, the polar opposite of blood and cramping. 'For fucks sake, what's a girl gotta do to get laid!'\n\nI sighed again and groped for my phone. 'Might as well get the bad news out of the way.'\n\nDevyn: hey malcolm... i kinda got my period\n\nHe texted back quickly.\n\nMalcolm: Oh no! Why do the good always have to leave us so young? Would you like to do something special for your last day on Earth, or should I just call hospice for you?\n\nMy jaw dropped. 'He's a jackass. The guy I've been crushing on all my life is a total jackass.'\n\nDevyn: WTF!\n\nDevyn: im cramping, not fucking dying\n\nMalcolm: They say the first stage is denial.\n\nDevyn: BITE ME!\n\nMalcolm: Then comes anger.\n\nI forced myself to take deep breaths and delete the next three texts before sending them. He was just trying to make me laugh instead of dwelling in negativity, and it was the kind of humor that I would usually enjoy. Rationally, I knew it was just hormones making me want to claw his eyes out.\n\nDevyn: look\n\nDevyn: can we just talk about what to do today?\n\nDevyn: and no that doesnt count as bargaining\n\nFortunately for Malcolm and his eyes, he took the hint and stopped poking at me.\n\nMalcolm: Sure. Well, I'm fine with keeping our plans, but I imagine you probably would prefer to push it back a few days? Totally up to you.\n\nWhat did I want? The red wave has an annoyingly contradictory impact on my sex life. Years ago, I had a really embarrassing experience involving bleeding on someone's penis. He'd claimed he was fine with period sex beforehand, but I guess he'd changed his mind midway through because he got seriously grossed out. Lots of name calling and one breakup later, I became very self-conscious of my entire vaginal region at this time of the month. I'd had very supportive lovers since then, Malcolm himself had done a lot to reassure me that that Tyler was a jerk and I should feel comfortable in my own skin, but I still couldn't quite shake it.\n\nThat's the negative side of the coin. The other side is that I get really fucking horny. I'm pretty level through my cycle with this one spike when I'm bitchy, cramping, self-conscious and infertile. It confused me for years because it makes zero sense in terms of evolutionary biology, but then I had a girlfriend who was the same way. Apparently, it's actually pretty common, linked to progesterone levels dropping off a cliff.\n\nBut I digress. Long story short, I knew I wanted to see Malcolm, that I'd be really turned on the entire time, but that I wouldn't want to take my panties off. It was a familiar conundrum, one that had made my Aunt Flo actually popular with my partners because it usually led to me throwing myself at them and giving them head in an misguided attempt to relieve my frustration.\n\n my uterus clenched painfully, reminding me of her needs. Sudden and irrational hunger surged through me. Carbs. God, I wanted all the carbs in the world...\n\nDevyn: yeah, new plan\n\nDevyn: i want to see you and my uterus is demanding pizza\n\nDevyn: want to split one and watch something dumb on netflix?\n\nMalcolm: Relaxing with pizza sounds nice, but I might have an idea for something more exciting than crap TV. See you soon!\n\nI forced myself out of bed and into the shower, and then into some workout clothes. The gym always makes me feel better. It gets oxygen flowing through my blood to relieve cramping muscles, as well as being a therapeutic venting outlet onto inanimate objects. I have to be doing something, even if it sucks to do. I just can't stand hiding under covers in a frumpy sweater feeling sorry for myself. Something about it just makes me feel like a wounded animal hiding in a cave hoping predators pass me by.\n\n----------\n\nMalcolm was waiting for my outside my apartment door when I returned. The pizza box balanced in one hand contrasted his clean white collared shirt and shiny looking watch. I suppose he would call it casual because of the khakis and undone top button, but it still made me smile.\n\n\"You've got to be the best dressed pizza delivery guy I've ever had,\" I said.\n\nHe raised his eyebrows, \"you see a lot of them?\"\n\n\"About twelve every year.\" It was hard to decide which was more attractive to me, his happy to see me smile or the cardboard box he was holding. He was quite attractive, leaning casually against the wall like that... but that was garlic, onion and bacon I was smelling, hot and fresh from the box! Greasy salty carb wonderfulness just waiting to fill my mouth with joy!\n\n'Yeah, definitely the box.' Transfixed as I was on it, I didn't realize how he was coming towards me until I felt myself pinned against the wall. Slowly, my gaze rose up his arm to his eyes, suddenly inches from mine. All those tiny rays of yellow, blue and teal radiating warmly out from the dark black core in the middle held me.\n\n\"You know, it is customary to tip,\" his casual tone carried much more ominous weight from his proximity. What had I been thinking about before? Something distractingly silly? He pressed his body into mine, one leg coming between mine and his chest lightly pressuring my breasts.\n\n\"I'm all sweaty!\" I complained, self-conscious about how dirty I felt and how it must be turning him off.\n\nIt didn't seem to be. On the contrary, he came in even closer, brushing a few strands of my hair away from my face and possessively caressing around my ear. \"I knew what I signed up for dating a gym rat.\" He kissed me, quickly, just enough to take my breath away before breaking off. It was like he'd found the accelerator on my libido and pushed it to the floor. That one heartbeat of contact, his hot wet lips pressed against mine, set my blood on fire. I wanted more. Needed more.\n\nI chased him, leaning forward to reach his lips, but he held me back! He had snuck his hand from my ear behind my head and now held me firmly, gripping my hair and pretty much fully constraining how I could move. It was just like he'd done that first night while stripping me.\n\n\"This is a thing for you, isn't it?\" I leaned into his grip to let him know what I meant.\n\n\"Yep. I like dictating the terms of engagement. Holding you like this is nice because it's a weak point. Your physical strength counts for very little, I can hold you firm with so little effort.\" He brought me to within an inch of another kiss and held me there to emphasize his point. I strained forward again, so close and yet...\n\n\"You damn te\u2014\" He dove into my open mouth, driving his tongue between my lips and pinning mine. I had a flashing thought that it sucked we had to break eye contact to kiss, but it was quickly swept away in the rush. Pedal to the floor on my emotions again, my heart beat pounded and I imagined I could feel his pulse keeping up. I flung my arms around him, determined this time not to let him get away so easily. I'd missed him. Missed this, this feeling of being joined together with him. My hands roamed freely, feeling all of him, wanting to experience it all at once. His back, his shoulders, his neck and hair, his abs through the silk of his shirt, the bulge in his pants between his legs.\n\nWe were both panting when we came up for air.\n\n\"You were about to call me something?\"\n\n\"Was I?\" I dreamily looked back into his very close eyes again, still feeling the places within me where he'd pressed his tongue.",
        "\"Yeah. Something with a 'T'?\" He cocked his head to one side, feigning polite curiosity.\n\n\"You are a tease!\" I laughed, \"don't even try to deny it.\"\n\n\"Oh that,\" he made a dismissive gesture, \"that's not news, you've always known that.\"\n\nI gave him a playful little shove, careful to avoid jostling the pizza box. Had he really been balancing that the entire time we made out? \"Yeah, you've always liked screwing with me.\" I fumbled in my pocket for my keys.\n\n\"It's sort of like building a fire,\" Malcolm sounded thoughtful, \"there's something beautiful about a big, roaring bonfire, you know? I feel kind of like that when I'm with you. Seeing your emotions and passion smoldering inside you makes me want to turn it into a blaze. Then, once I've added enough fuel and poked it around to make sure there's enough air flow and you're really hot, I get to enjoy watching you try to contain it all. It's like a game, and if you explode and throw your arms around me like you did just now, I win.\"\n\nI'd been following his analogy, wondering quietly what I'd done to impress him so much. Did he really see that much inside me? It seemed hard to believe, but I liked it. He made me feel very special, like he wanted me for the most... well, \"myself\" parts of me and was infatuated with them. But the part at the end made me burst out in incredulity, \"What! How does that make sense? Doesn't that mean you get burned by the fire?\"\n\nI could practically hear the self-satisfied smile on his face behind me, \"It doesn't have to make sense, I'm the dom. I get to make the rules.\"\n\n\"Riiiight. I'm sure Icarus felt like a real winner in those moments after his wings melted before he struck the ground.\" I finally got the door open.\n\n\"Icarus didn't play safe. But that goes to show you! The theme goes back to Greek mythology! Everybody likes playing with fire.\" I had to admit, he had a point there. I've got a pyro streak myself.\n\nThe burst of coolness from my air conditioning reminded me that I really needed a shower. I hurriedly told Malcolm not to touch the pizza without me and dashed into the bathroom. As I peeled off my sweaty gym clothes, I felt acutely my own grossness. How the hell had Malcolm just made out with me like this? How had he pressed his clean outfit into me? I shuddered in self revulsion just as a cramp hit me. It reminded me to be suspicious of my own negativity. He really hadn't seemed grossed out... was he?\n\nIt hit me while I was toweling myself off and looking for my pads under the sink. He wasn't acting. Malcolm never pretended, at least not to me. And it wasn't just about some gym sweat, it was about my period. He was trying to do better than just telling me, he was trying to show me that he really was comfortable with it. What had he said after the episode with Tyler? \"It's just a little blood. It's what makes life work, I've got a gallon and a half of the stuff in me. It isn't like sex is clinically clean anyway.\" He was right, of course. And, the more I thought about it, the more it seemed like it wasn't really about the sex. He didn't like seeing me feeling shitty about myself and he wanted to help. Doing it this way let me feel accepted without the pressure to spread my legs that talking about it might have brought.\n\nStill, though... my college dorm room flashed before my eyes. The visceral revulsion on Tyler's face as he'd looked from the mess between us, to me, and back again. He'd looked like he would rather have found a cockroach in his next meal than ever have to touch me again. The names he'd thrown at me as he'd dashed out the door...\n\nI didn't want to think about it. I wanted my first time with Malcolm to be special. Perfect. It was worth waiting a few days. I'd deal with the scars of bastard boyfriends past later.\n\nI peeked through the doorway to where Malcolm sat. He had his laptop open and was muttering to himself the way he did when trying to navigate crafting a problematic sentence in an essay. My emotions swung like a pendulum and I felt a swell of affection for him. 'He's a keeper. Maybe a bit of a butt sometimes, but a keeper.'\n\nHe'd started my engine. Set the kindling and lit a match, as he'd thought of it. I wanted to make him happy. Wanted to show him that I appreciated him and everything he did for me. I also wanted his cock. I wanted to feel it, taste it, make him cum for me. 'Look at him sitting there, all innocent like. Thinking he can just toy with me and not get burned. Just cuz my cunt is out of commission doesn't mean you're safe!' Without any more thought, guided only by my desires for him, I tossed the door open and, dressed in just my panties, crossed the room and closed his laptop.\n\n\"You know, up until last week, I'd never seen you naked,\" he sounded amused, my breasts were perfectly aligned with where his laptop screen had been a second ago. \"Now you're boldly tossing yourself at me.\"\n\n\"It's your fault, sir. You did shove your tongue down my throat.\" I settled myself in front of him in the same kneeling position I'd so recently held to suck him off. The same position, but It felt different. I'd initiated it. It was about me being a cock hungry slut, not him and his direction. 'Does he feel it too? Damnit, I've fucked it up!' Doubt crept around the edges of my impulsively horny mood, 'maybe I should have thought this through a little more.'\n\nMalcolm easily put me back in my place. He crossed one leg over the other and casually gestured to my left, \"You'll find a present waiting for you there.\" Sure enough, there was a wrapped package sitting on the ground near where I'd placed myself. When had that gotten there? I looked at it, to Malcolm, and back again. 'No way. No fucking way.'\n\n\"You knew!\"\n\nHe cocked his head, trying and failing to look just as innocent as before. \"Knew what?\"\n\n\"Knew that I'd end up right here! How? I mean, it was an impulse.\" My eyes grew wider looking up at him. It had been my idea to kneel here naked, hunting his dick. Right?\n\n\"I've known you for quite a while, Devyn. It isn't too much of a stretch to imagine how you'll react to someone 'shoving his tongue down your throat,' as you put it. I challenged you to burn me, and you never back down from a challenge. Unfortunately for you, I think you'll agree that I win this round too.\" He smiled mischievously, gesturing again to the package. \"Open it.\"\n\nI felt genuinely meek. Like a puppet who believed herself human but has just been shown her strings. His smile and his eyes seemed to laugh into my head. 'I guess this is what happens when you submit to a dom who has been your confidant forever.' Under my breath, I muttered, \"This is the kind of shit that makes people call you a wizard.\"\n\nIt was a small cardboard box that unfolded to reveal a pair of black leather bands. They were beautiful, intricately stitched with patterns of rose petals and thorny stems intertwined, winding around the buckles that adjusted their tightness. They were clearly cuffs. Wrist cuffs meant to hold somebody. Me. These, added to Malcolm perfectly anticipating me, took me even deeper. A few seconds before, I'd worried that I was overstepping. Now, it was like I had fallen backwards and Malcolm had caught me. Safe in his control. Dominated. Submissive...\n\n\"The most important rule for these is to loosen them immediately if you start feeling tingly in your hands. That means you're cutting off blood flow and that's bad.\" He took my hands in his and brought them up between us. Gently, almost tenderly, he wrapped his grip around my wrists. The warmth of his contact, the emotion on his face and my own feelings made it difficult to focus. All I knew was that I liked being held by him, physically and figuratively.\n\nHe put both cuffs on me, pulling the adjustable straps just enough to make them secure but not tight. They felt gentle and warm on my wrists. Just like his hands had been. As he sat back and watched me adjust to them, it was almost like I could feel him still gripping me. The feel of the cuffs -- it was so easy to feel like they were an extension of his body and will holding me tight. I loved them. Plus, they looked absolutely wonderful against my skin. The dark of the leather contrasting the light stitched pattern? Yes, they were definitely my new favorite things.\n\nI flexed slightly, feeling the cuff's strength connecting my hands. Really, they were mostly symbolic. There were spots for locks, but none there now. I could take them off if I wanted to and anyway, with my arms in front of me, my motion wasn't really constricted very much. The effect was psychological. In my head, it really felt like I was being constantly embraced. Each movement made me aware of them, which came with a new reminder that Malcolm was here over me.\n\nA clicking sound caught me off guard. Malcolm had his phone out and had clearly just taken a picture. \"Sorry, but your expression was too perfect.\" He showed me the screen and I blushed. 'So that's what I look like from up there. No wonder he gets off on it, I look just as submissive as it makes me feel.' I had this amusingly sloppy grin on my face as I regarded the leather on my wrists. Not quite Gollum with The Ring, but close. \"I take it you like them,\" Malcolm teased.\n\n\"Yes, Sir. They're wonderful.\"\n\n\"Good. You should get used to the feel of them on your own, it will make using them for real bondage less of a shock.\" The hungry wolf expression flickered across his face, the look that let me know he was seriously turned on. But it only flashed a moment before it was gone. It seemed like he was trying to hold it back. Why?\n\n\"Do we have to wait, sir?\" I was excited for more and I didn't want Malcolm holding back. He'd done a very good job of putting me in my place, but I was still hungry for his cock. Hell, if anything, he'd made me even hungrier. \"Don't worry about overwhelming me or anything, I'm ready.\"\n\nHe smiled, amused but controlled, \"enthusiastic as always--\"\n\n\"Hell yeah!\"\n\n\"--and much though I love it,\" he chuckled, \"the setup I had prepared is at my place, and trust me, it is better to ease into bondage. I really did intend to simply give you those and let you get used to wearing them on your own first. This whole thing with you finding it on the floor only hit me when you went to the shower and I couldn't resist.\" I did trust his judgment, but more than that, I trusted him with my body and I couldn't help myself. I gave him my best seductive horny look, meeting his eyes while batting my eyelashes then deliberately looking down to his crotch. I smiled, met his eyes again and slowly licked my lips.\n\nThat did it! His desire overcame his restraint and he rose to his feet. \"But, since you are such an enabler, perhaps a little sample. Stand.\" I instantly rose, surprising myself with how much more awkward it felt with my hands bound together. Malcolm unclipped the connecting piece between my cuffs and stepped behind me, bringing my arms around with him. He held me like that, arms behind me and whispered in my ear from over my shoulder, \"Do you like feeling helpless?\"\n\n\"I like the effect it has on you, sir.\" My hands were perfectly positioned to feel him getting hard. Without thinking, I felt him through his pants. 'YASS! Rise for me!' He leaned farther into me, wrapping his arms around me and taking hold of my breasts.\n\n\"So you like anything that turns me on?\" He lightly brushed my nipples, drawing them to hardened points as pleasure rippled through my chest. I strained to press them into his hands while keeping contact with his cock. It was difficult to stroke him properly with my hands trapped between us and all the cloth in the way, but I'd gotten a rhythm going up and down, pressing into the top of his shaft.\n\n\"Yes, sir. I do.\" I thought I knew what was coming and I braced myself. 'Fool me once, shame on you. Fool me twice...' He stepped around to face me again and slowly increased the pressure on my nipples. Determined, I held his gaze. It was true what I'd said. More than anything about the dom/sub dynamic that I enjoyed myself, his enjoyment of it turned me on. He seemed to come fully alive in a way that I'd only seen shadows and impressions of all our friendship before, and I wanted to enable it.\n\nI didn't try to hide anything as his fingers transitioned from teasing to firm fondling to light squeezing. I wanted him to see, I wanted to show him and to see it reflected in him. Uncomfortable... painful... I let out an involuntary hiss of breath, dutifully holding myself for him to play with.\n\n\"Anything can involve a lot of things. Not all of them feel pleasant.\" Harder still, it really hurt! My nipples throbbed hard, crying out for release from between his strong fingers. I clenched my teeth and flexed my muscles, trying to distract myself. My arms wanted to come up, but Malcolm had refastened the cuffs behind me. I was really bound now, helpless to defend myself. Immediately, I felt a part of myself relax. 'Wow, I really have shit self-preservation instinct.' The helplessness really helped! Contradictory though it seemed, it freed me to let my own self-control drop and simply let Malcolm's control take over. I could let myself squirm and strain, pant and shudder without worrying about interfering with his sadistic pleasure.\n\nI didn't want him to let go. His expression was so beautiful, I wanted to keep it going. I saw lust there - more than just for my body, he wanted me. Satisfaction - more than just sexual fun, he owned me and he loved knowing that. Pride - both in himself and in me, and a whole host of other things painted his face like a flowing flag of positivity. It made it very easy to ignore my body and bask in his glow.\n\nBut there was also concern. Little wisps of uncertainty playing across what should have been pure enjoyment. 'He's still worried about hurting me. Silly boy.' I could have just told him, but words were difficult and breathing was getting harder. So I kissed him instead. Yeah, that didn't make a whole lot of sense. Short on breath while going in for a kiss? It didn't last long, just a peck on his lips then a slightly fuller smooch, but it was electrifying. He let go of my tits, my nipples sighing in relief, and hugged me tight.\n\n\"You're amazing. You know that, right?\" I beamed, happily leaning into his embrace. It felt odd to be wrapped up in his arms without being able to hug him back, again, I just let go and let myself feel overcome by him. I wanted to say something mock defiant like 'flattery will get you nowhere!' but I really did love his praise, and I lost my chance when he kissed me. Deeper, more probing, more authoritative and much more intimate.\n\nMalcolm continued his thought, \"when you use your strength like that, it's like you're giving it to me. It elevates me.\" There was the pride again. It was a real mind fuck, feeling wrapped up by his body and submissive to his will but simultaneously energized with lust and the desire to jump on him. I nearly fell over leaning into him so hard without being able to stead myself.\n\nMalcolm caught me easily with a laugh, \"see, it does take some getting used to. You naturally use your arms for balance more than you think.\" Instead of setting me straight again, he guided me back to my knees. Slowly, teasingly deliberately, he undid his belt. \"Is this what you came rushing out here for?\"\n\n\"What? You didn't think one taste a week ago would be enough, did you?\"\n\nHe laughed, \"No, I suppose not.\" Still infuriatingly slowly, he peeled his pants and boxers down. \"If that's the case, I'll have to give you a more thorough helping this time.\" Lower... I held my breath as his pubic hair came mostly visible and his very hard cock tented his boxers out. In one motion, his cock sprang free and he grabbed his familiar spot in my hair. Finally free! Beautifully thick and masculine, right in front of my eyes, hypnotically waving very slightly in time with his heart beat, with a very slight clear liquid sheen right at the tip. I licked my lips, feeling my eyes get wider and realizing just how damp my panties felt. \"Now let's see if we can't teach you to be careful what you wish for.\"\n\nMalcolm straddled my kneeling form, his legs outside of mine, and lined his penis head up with my mouth. It was probably the most smothered by him I'd yet been. His legs hugged my sides, he gripped my hair behind me, his cock stood tall and thick in my face and the mass of his upper body towered above me. All in all, there was a whole lot of Malcolm in my personal space. If I wasn't already feeling comfortably submissive, it would probably have been overwhelming. As it was, it was great! I opened my mouth and stuck out my tongue, giving him a landing strip for his dick to arrive in on.\n\nOur first blowjob had been mostly driven by me. I'd knelt before Malcolm and he had guided me, but I'd mostly been responsible for pleasuring him. This was much different. Malcolm eased himself into my mouth with a satisfying sigh of pleasure. Before I could set to work licking and sucking, he pulled out and thrust in again. Again and again, his hips swinging back and forth like a pendulum, fucking my mouth!\n\nSaying \"fucking my mouth\" conjures up images out of terrible porn with crying, drooling women getting their throats demolished by monster cocks. That's a very far way away from what was happening. Malcolm rocked his hips a few inches at a time, feeling out my mouth and gauging the distance to my throat. He carefully never thrust into my gag reflex, always leaving two or so inches of his shaft out of my mouth. I mentally braced myself to try my best to suppress it, but Malcolm's control prevented it from ever happening.\n\nAt the same time, he was literally swinging his hips to work his cock in and out of me. \"Fucking\" did seem the appropriate verb to the little corner of my mind capable of coherent thought and not taken up by struggling to stay afloat of all the sensations.\n\nBlurs of pelvis, abs and balls flew in my very limited range of vision. The taste and smell of cock rocketed through my head and seemed to meet up with my hard nipples and wet cunt, building my arousal a little more every time his cock slid between my lips and over my tongue. I tried to make it as wet and tight and pleasurable for him as I could, sucking him as hard as I could while keeping my teeth out of the way. I coated him in spit, licked up and down him in time with his rhythm, moaned freely to vibrate his dick and tried my best to keep my lips sealed and breathe through my nose.\n\n\"Tried\" being the key word. Mostly, all I could do was hang on for dear life as Malcolm had his way with me.\n\nNot having my hands made the whole experience much more intense. I'm mostly a cock sucking purist. Blowjobs are with my mouth and not my hands, but it's nice to be able to take a breath while stroking him off for a few seconds. Little things like being able to keep my hair out of my eyes and mouth were impossible with my arms trapped behind me.\n\nBefore I started to really struggle, Malcolm pulled me back off him. He started to say something about collecting my breath, but I didn't need any of that. I needed more of him, more of his cock in my mouth, more of his taste and his hard presence and his masculine scent. I dove forward, surprising him so much that he lost his grip on my hair, and took him back in my mouth.\n\n\"Ha\u2014Ugh\u2014mmm,\" Malcolm's half laugh, half surprise, half moan made me smile wide around his throbbing member. He was starting to throb harder, driving his head into the roof of my mouth as he engorged with passion. It had an amplifying effect on me, my own hips rocked slightly and my nipples cried out to be played with again. The more I got, the more I wanted. I wanted to make him cum. I wanted to feel it with him all around me like this, feel his shudders and spasms and groans rip through him and into me.",
        "I moved into him, trying to get even more of his cock with each of his thrusts. We hit my throat a few times, not quite hard enough to gag but enough to make me worry. 'Fucking reflex, go away!' Soon, noticeably more salt flavor flowed over my tongue from his precum and his breathing turned ragged. I thought I could feel his throbs start in his legs, trace all the way through his thighs against my chest and finally burst up against my lips and cheeks in a little puff of precum.\n\nEither it kept getting faster or I lost track of things, either is entirely possible. Part of my thinking quieted to nothing and I sort of just watched myself from inside myself, feeling Malcolm's and my own pleasure more acutely while my discomfort dimmed.\n\nI gasped for breath when he pulled out of me again, surprising myself with how much I'd needed air. He was close to cumming, His cock was distinctly redder and slightly thicker and taller.\n\n\"Please, Sir,\" I panted, \"I want to feel you cum.\" Finally having some room, I wanted to see more of him. From my position between his legs, he looked and felt like a colossal statue of some ancient god. His expression was so powerful, full of majesty, full of passion in his work, but strangely calm in his dominance. Shivers ran down my spine. 'Oh fuck! That's what I do for him!' I felt like I'd created something beautiful. Like we'd created it together.\n\nHe must have seen something moving in me as well because he was fit to burst the second he got back inside me. His rocked in and out faster and faster, making me smile and moan along with his primal groans and sighs. Yet somehow, he maintained his focus and control to always stop just short of hitting my throat. 'To him, being dominant isn't about just holding control over me. It's about being responsible for both of us.' He had tried to explain it before, but it hit home through his actions. 'Dominating me is only fun for him if it's fun for me. It wouldn't be fun for him if I was choking and miserable.'\n\nI didn't have capacity to appreciate how amazing he was. He tensed in stages, squeezing me between his legs and slightly pulling my hair in spasms of muscles tensing. I got ready for it, swallowing all my spit out of the way and licking like mad under his head. His breath and core muscles locked up together and a flood of boiling hot cum poured into me. It was natural to take it all into myself. Just one more aspect of Malcolm to envelope me.\n\nNatural, but at the same time, it felt incredibly intense for me, trapped in the middle of it all. The restraints seemed to amplify the effect, like I was tied down in the middle of a tornado feeling the wind trying to rip me away. I felt every throb and spasm course through his body and erupt into my mouth. It was incredibly erotically satisfying. I felt an integral part of his orgasm, like his pleasure intended beyond his cock and I got to experience the joy of it too through our connection. I licked and swallowed and licked and swallowed until, with a visceral groan of contentment, he was spent.\n\nAfter, there was an interesting sort of calm. It was very different from the satisfaction I feel after a strong orgasm myself, I still felt horny as fuck, but more similar to the feeling after maxing out at the gym. My body felt achy and tired, but full of achievement and satisfaction from doing something heavy. I felt like I'd had a strong emotional release. It's hard to describe how it was different from an orgasm because it felt similar, but distinctly different.\n\nWe slowly disentangled from each other, at least physically. In an odd way, even after his limp penis left my body and he helped me to my feet, I still felt like he was all around me. Like I could float and be supported by nothing but him. It was a weird sense that was punctuated by the screaming in my legs, shoulders, arms, jaw, and basically everywhere else after Malcolm freed me and I stretched them out.\n\nMalcolm smiled at my groans, \"Yeah, your muscles work hard when you're tied up. How do your hands feel?\"\n\n\"Fine. Not numb at all. That was really fucking awesome!\" That made him smile wider.\n\n\"I'm happy you think so too, I was worried that getting blown might have biased my perception. What about it felt good to you?\"\n\n\"All of it! Well, I don't know, I liked feeling like\u2014\" I tried to describe it, the feelings, the mindspace in the cuffs, the connection between us, all of it at once. He didn't interrupt me, letting me bounce between thoughts as I got frustrated with my words feeling incapable of communicating quite what I wanted them to. He warmed up the pizza in the oven and stretched out on the couch.\n\n\"\u2014 Then you were like... you're not allowed to use this against me, alright? Like a god, so fucking huge up there. Just the perspective, you know! Okay, maybe not just that... that's how you felt.\u2014\"\n\nHe handed me a slice of pizza and I realized my mouth still felt like thick goo and salt.\n\n\"\u2014the way we were close let me feel your body really well. Shit, I don't want cum flavored pizza. I've gotta brush my teeth. --\"\n\nWe ended up on the couch together, trying to lean intimately into each other without spilling grease and toppings over ourselves.\n\n\"\u2014it was like we were together, you know? Like something out of a shitty hippy song about peace and being as one. Like... I don't know. Do you know? I loved it, that's all I know. I want more of that.\"\n\n\"I think I know what you're trying to say. I felt it too. Kind of like how you forget the rest of the world exists and all the energy you would have spent on everything else gets focused onto the two of us.\" He sighed and absent mindedly brushed his hand back and forth over my leg, \"there's lots of stuff written about it, but I know what you mean, it never sounds right. I think of it as the payoff for all the trust you place in me and I hold safe for you.\"\n\nI liked the sound of that. It sounded much better than anything I'd come up with.\n\n\"You make it easy to trust you. I mean, you just fucked my mouth and you never made me gag! That's like me sticking my head in a lion's mouth.\"\n\n\"I think it's probably easier when people start out as friends and transition into sex, rather than starting out sexual and having to build a friendship. There's a foundation of trust already in place. Still, though, some parts of this surprise me.\"\n\n\"Like what\"\n\n\"Like this, for example. This feels natural to me. How many times have we sat on a couch together? Hundreds? Close, but never intimate. We never even held hands before. Now you're basically naked cuddling into my shoulder, talking about the sex we just had like it's nothing. And you know what? It doesn't feel weird at all.\"\n\nI snuggled a little harder into him. He was right, it did feel so natural that it hadn't occurred to me to wonder about it. Even with him petting my thigh close to my pussy and nature of the conversation, I hadn't felt a norm shock.\n\n\"It's just how we are. We've always been open books to each other.\" As I said it, a cramp gripped my abdomen and out of nowhere a hormonally negative voice whispered in my head: 'Except that isn't true for you, it is? You've bitched to him about all your shitty boy and girlfriends, but you couldn't stand to even talk about him with someone else. Jealous bitch. You locked yourself away from a whole world that is his lifeblood because you couldn't bear to think about him and Chloe. He's got a whole host of friends you've never even heard of because you got bitchy whenever he brought her up.' I tried to drown it out, make the romantic moment cuddling with Malcolm last, but it was relentless. 'Then, when he was alone and needed someone, you left him out in the cold.'\n\nIt wasn't true. I told myself it wasn't true and I could almost half believe it. I hadn't abandoned him after his breakup, I'd done everything I could think of to try to draw him out of himself. Everything... except fucking talk to him about it. About her. It hurt because too much of it was true.\n\nI held his hand tight 'I'll do better. I promise, I'll be better for you!'\n\n----------\n\n\"So, how do you feel about archery?\" Malcolm asked.\n\nPleasantly full of food and good company, I tried to figure out how this would transform into something sexual. \"I feel like it was probably a good way to hunt stuff a thousand years ago.\"\n\n\"Want to try it out?\"\n\n'Maybe the arrow is his cock and the target is me... then what's the bow? And doesn't that mean that he'd be sharp at the end?' That didn't seem right. \"Are we talking about shooting actual physical bows and arrows at targets?\"\n\n\"Yeah, what else? Mind out of the gutter, Devyn.\" He squeezed my breast playfully. \"There's a place that does it nearby in The Heights, I thought it might be fun.\"\n\n\"That's not nearby, The Heights is like an hour away!\"\n\n\"I checked, it's 35 minutes walking. Unless you were serious about wanting to chill here and watch bad Netflix?\"\n\nI was intrigued. I admit, I had a few Katniss, Hawkeye and Legolas fantasies growing up. I'd always assumed that archery was a super expensive hobby, like fencing and riding horses and collecting fine art and everything else that came out of the middle ages.\n\n\"It isn't,\" Malcolm told me, \"at least, not if you're just trying it out. Twenty-five bucks to rent their equipment and for an introductory lesson. I've no idea how much it would cost to buy your own bow.\" It did sound like a lot more fun than trying to agree on a season of How I Met Your Mother to binge. Still, I was slightly suspicious.\n\n\"Have you ever done it before? This isn't going to be another bowling incident, is it?\"\n\nHe laughed heartily, \"I haven't thought of that in years! You've got to admit, given where we are now, it's a good thing your parents already like me.\" He squeezed my breast again possessively when he said 'where we are now'. I smiled, liking the feeling of being possessed by him. \"No, I have never shot before. Anyway, not everything needs to be a contest, you know.\"\n\n\"That's easy to say when you win,\" I grumbled.\n\nWe got dressed and started walking, happily bickering over the details of the first time Malcolm had ever gone bowling.\n\nMalcolm and I went to different colleges a long way apart, so getting time to hang out over breaks and holidays was a big deal. Unfortunately, most actual holidays that brought both of us home involved a lot of family obligations, like Thanksgiving Dinner and Christmas quality time with my grandparents. One such family tradition is the Christmas trip to the same local bowling ally my grandparents went to on their first date back in the 50s.\n\nI suck at bowling. Well, by the actual rules of bowling, I suck at it. By my own success criterial, I think I do damn well. I throw the ball faster and, when I do hit, make the pins fly higher than anyone else. The score at the end? Just a distraction. Why else do they give you a 12 pound spherical rock to throw if the goal isn't destruction? If they wanted me to make precision shots, give me a basketball. I'll make strikes as easily as I sink 3-pointers if I had my basketball.\n\nAnyway, Grandma overheard me complaining about not being able to spend time with Malcolm, so she suggested I invite him along. That prompted Mom to wonder why I'd never introduced them to this boy I was so friendly with.\n\n\"That's a good question,\" Malcolm asked, \"why did it take a year and a half to get an invite over to your place?\" It felt good to hold his hand while walking. It made something mundane feel special.\n\n\"Are you kidding? That's the year you gave me a LovinglyHandmadePornography subscription for Christmas. A whole lot of basic questions might have been really fucking awkward.\" I impersonated my grandmother's voice, \"How did you two meet? What do you do for fun? Well, since you ask, Grandma, Malcolm here just bought me access to sensual spanking and cunt busting videos! Yes, that is exactly what it sounds like.\"\n\nMalcolm laughed, \"I remember that! We both liked how they showed off a positive tone to BDSM. But we had a lot more in common than that!\"\n\n\"Sure we did, but you gotta admit, my hesitation was justified.\"\n\n\"I was great that night. It's not my fault they liked me too much.\"\n\nMalcolm arrived dressed up like himself, trademark friendly smile and confident aura on full display. As I intruded him all around, my younger sister Kara gave me a look that seemed to say \"how the hell are YOU friends with someone this HOT?\" In the months since graduating high school, I had forgotten that Malcolm was the guy who could fit in with any clique. Five minutes in, he was laughing and exchanging stories like he'd known all of us for years. It was like watching a chameleon, his tone and word choice shifted slightly going between my grandparents, parents and sister. He can talk to anybody about anything, football with my dad, retirement home social politics with my grandmother, even that awful British boy band Kara was obsessed with.\n\n\"Ah come on, One Direction were bad but they had some mildly catchy tunes.\"\n\nI gave him a withering look, \"you only get to say that because you didn't live across the hall from someone with their albums on repeat. If they all die in a fire, it'll be too kind.\"\n\nIt was his first time bowling. I smiled as my grandfather gave Malcolm all the sage bowling advice he'd tried unsuccessfully to instill in me. They all assured him that it was just a fun activity to have as an excuse to be together, it didn't matter if he sent all the balls into the gutter. Little did they know that Malcolm is one of those people who is infuriatingly good at everything.\n\n\"Not everything,\" he insisted, \"If you hadn't spoon fed me calculus, I would have flunked the class.\"\n\n\"Normal people don't throw One-Forty their first time touching a bowling ball!\"\n\n\"That wasn't until the last round. I'd had two terrible rounds before that to practice.\"\n\nTrue, his first few balls went in the gutter. But he learned very fast and was soon picking up spares with a fluid, graceful motion. He ended up narrowly beating me out in two out of three games. His first time out, he beat me at something I'd been doing for years. True, it wasn't something I liked... but the competitive part of me never let it go. I wasn't sure if I was annoyed at myself for losing or proud of him for the impressed looks from my family.\n\nAfterwards, my family laid into me with one not-so-subtle comment after the other. 'He seems like such a nice boy!' 'He's really friendly, you should have him come over more often.' 'He seems much more put together than that last guy you were with.' It was like they all wanted to date Malcolm vicariously through me.\n\nWe both laughed at that, \"Okay, in retrospect, it is actually pretty funny,\" I said. \"But I sure didn't think so at the time. At the time, I was just like 'can't a girl have any male friends!'\"\n\nJersey City Archery sits in a hulk of a building that must have had a past life as a manufacturing plant of some kind. It's the kind of steel and concrete construction that looks like you could douse the whole place in gasoline, toss in a match and see no difference afterwards. Malcolm squeezed my hand, \"this time we're both newbies. If you're going to insist on turning our first date into a contest, then may the best beginner's luck win.\"\n\nMy heart skipped a beat. \"That's what this is! This is our first date?\" I quickly kissed his cheek, whispering in his ear, \"then I'll definitely have to kick your ass!\"\n\nMy good mood took a hit when we got inside. The instructor was an attractive, willowy Asian woman who took one look at Malcolm, chose to overlook his hand in mine, and deliberately bent over the tablet she was using to check people in, drawing attention right down her low-cut shirt. She only spoke to him the entire time, only giving me a few obligatory glances while taking my credit card. It wasn't that I felt threatened, it was her blatant disregard for me that pissed me off! My uterus, clearly offended as well, chose that moment to start cramping again. 'Wonderful.'\n\nShe droned on about safety and obeying her instructions about when to fire and when to retrieve our arrows. Basically, a bunch of obvious stuff about avoiding being in a Darwin Awards YouTube video. I just wanted to shoot! The bow felt light in my hand and I was excited to try it out. After two minutes of being lectured, Malcolm leaned over and, in a gruff Patches O'houlihan voice, whispered, \"if you can dodge an arrow, you can dodge a ball!\"\n\nI did pay attention when we moved on to technique. It reminded me a lot of shooting a basketball foul shot, keeping my form steady and consistent each shot. 'Repetition and stability, that's how you sink buckets.' Clip the arrow in. One finger on the string above the arrow, two fingers below it. Bow arm up, string pulled just below my chin. Aim.\n\nAim? There was nothing to aim with! Wasn't there supposed to be a crosshair or something? Or was that just guns? 'Trial and error it is, I guess.' I lined the tip of my arrow up with the center of the target, steadied my arm, and released! The bow thrummed satisfyingly and the arrow leapt away in a burst of speed, flying through the air to strike a good six feet above the target. 'Damnit!'\n\nSurprisingly, I'd done better than half of the other seven novice shooters. One had managed to drop his arrow, and another must have clipped it on wrong as it had landed a few feet in front of him. Next to me, Malcolm's shot had sailed over the target stand entirely and hit the netting against the back wall.\n\nI went through the motions again, trying to remember exactly what the details had been. Where on my chin had I pulled back to? Was my shoulder up or down? This time, instead of lining the arrow tip up against the center of the target, I went for the very bottom of the lowest circle. Better! Only four feet over the target. I sighed, just how low was I going to have to go? At least my shots were more or less aligned, if I could get the height correct then the left/right component was good.\n\nIt took the rest of the first five arrows to finally hit the target. On the fifth arrow, somewhat exasperated, I was lining up the arrowhead with a spot on the floor in front of the target. But it worked! I hit the red ring outside the center yellow! Eight points! That, and I was confident I could do it again. 'Doesn't have to be pretty, just has to work!'\n\nWe retrieved our arrows. After his wild miss on the first shot, Malcolm had managed to hit the target twice. However, where my shots formed a vertical line from my experiments with height, Malcolm's arrows were scattered all over the place. It was weirdly symbolic of our two styles in most things, I analyze things and build a plan with a framework whereas he goes by feel. Probably why I ended up as a programmer and he's going to be a lawyer.\n\nI felt more and more confident as we continued shooting. It still felt very weird aiming against a spot on the floor, I'm pretty sure Katniss didn't do it this way, but it got me the results I wanted! Soon, all my shots were on target. Then, most of my arrows landed within the blue, red or yellow stripes.\n\nAn hour later, my fingertips were red and my arms and shoulders were feeling drained from all they'd been through that day, but I was happily clutching our paper targets that we got to keep as souvenirs. Malcolm had done well, but he'd stayed somewhat erratic and my target was much more damaged in the middle.\n\nI'd like to be able to say that I was as humble in victory as Malcolm regularly is... but that would be a boldface lie. I was shit talking the entire way out and promising to hang up our targets as trophies in my apartment. Malcolm was much more of a sportsman than I, smiling and letting me have my fun.",
        "----------\n\nThere's a ton of stereotypes about living in New Jersey. Most are grossly exaggerated, but there are some quintessential Jersey City moments every resident knows well. For example, what do you do for fun in Jersey City? You leave Jersey behind and go into New York.\n\nMy morning's carb craving having been satisfied, my body decided it would go ahead and demand sugar. Malcolm suggested we join the group Nicole had talked about getting together for the chocolate bar. I don't usually have a sweet tooth, but the prospect of hot melted coco made Aunt Flo very happy.\n\nNicole laughed when we called her, joking that this was twice now and clearly we didn't know what to do with ourselves without her.\n\nSo we made our way across the river to the Union Square area. Anybody who has ever seen a movie set in New York with a shot of skateboarders doing tricks in an open park area has probably seen where we were. It's a great place to kill time, great people watching and lots of shopping, including a huge Barns and Noble to wander around.\n\n\"Do you think they ever get discouraged? I'm pretty sure that guy with the Afro hasn't landed a trick in half an hour.\" We watched as, once again, the large haired guy raced his board fast towards a set of steps and attempted to do a kickflip down them. Once again, the board flew out from under his feet and he landed hard on his ass. His ass had taken quite a beating since we started watching.\n\n\"It must be why they're filming themselves. Actually sticking it is so rare that nobody would believe them without the evidence.\"\n\nWe sat under a tree on a lawn crowded with mostly families and other couples, one of which was tossing a Frisbee and coming precariously close to trampling their neighbors. It was nice to be there with Malcolm and feel a part of it. I'd been in similar spots and felt uncomfortably alone many times before. We weren't really doing anything, just chilling in the shade and making up stories about the people around us.\n\nWe imagined the guy throwing the Frisbee wildly was actually a pro. He could throw it directly on target if he wanted, but he kept making his date run and jump hoping that her sundress would fly up.\n\nThe family sitting on a blanket with a picnic basket were, we thought, clearly time travelers out of the 70s. Where else would they have gotten an antique folding basket like that?\n\nWe got really into it and lost track of time until Nicole called us asking if we'd changed our minds about coming. There was a crowd visible across the park gathered outside Max Brenner's Chocolate Bar. It was completely overrun and had a sign saying that the wait time for walk ins was 90 minutes.\n\n\"Good thing she got us on her reservation,\" Malcolm observed. The smell of sugar hit us as soon as we walked in. Despite the crowd, it was easy to pick out Nicole's bright red hair a few tables in. The tables, floor and ceiling design made it feel a little vintage, while the dishes in front of everybody felt inspired by Willy Wonka's Factory. There was a drink that seemed popular, which came in a huge glass and wafted misty steam. Passing by one table that had a pair of them, alcohol momentarily mixed with the chocolate we smelled.\n\nMy mouth watered immediately and my craving intensified. \"We have to try that!\"\n\nThere were three other people sitting with Nicole. I was pretty sure one must be her Mistress Sam, which was confirmed when Malcolm made introductions around the table. Sam was hot. Seriously hot. Just like Nicole had described, she looked like she'd just stepped off a runway. Long, elegant black hair framed a face that looked like it hadn't ever heard of acne, perfect eyebrows and deceptively natural looking makeup. She wore a fashionable, close fitting sundress that accentuated her curves. She wasn't my type at all, far too femme and not at all rugged enough, but she was the perfect image of what straight men fawn over.\n\nThe other two were much older than all the rest of us. In their early 40s? Somewhere thereabout. Jeff Valmont was big enough to make me feel small, which was rare enough to really stand out. At least five inches taller than me and easily 100 pounds heavier, he looked a lot like Wilson Fisk from the Netflix version of Daredevil, only slightly less villainous. Where Jeff's bald head and resting stern face gave a mildly unfriendly impression, his wife, Natalie, seemed to exude motherly warmth. Rather than shaking my hand as Sam and Jeff had, she pulled me into a hug.\n\n\"And, of course, you're already fast friends with Nicole here,\" Malcolm finished.\n\nSam, who had winced very slightly when Malcolm introduced her as Samantha, laughed and said, \"she was just telling us about The Grand Magus reappearing out of nowhere.\" She turned to me and added, \"I hope my Firefly hasn't given you any trouble. She can be a bit of a handful.\" She grabbed a handful of Nicole, as though to demonstrate, and pulled her close.\n\nSam's revenge for Malcolm using her full name amused me, so I played along, \"Wow, you're 'Grand' now? Congratulations on your elevation from simple wizardry.\"\n\n\"Do you know why we call him that?\" Sam asked, eager to tell.\n\n\"Yeah, Nicole already showed me the video.\"\n\n\"She did what?!?\" both Sam and Natalie exclaimed at the same time.\n\n\"What! You were totally about to tell her that story!\" Nicole blushed slightly as she defended herself.\n\n\"Yeah, tell her about it! It didn't strike you as maybe just a little bit weird to show her a video of her man making his ex cum? Especially on the first night they were together?\" Sam shook her head disapprovingly, \"I swear, I can't let you out of my sight for a minute.\"\n\n\"In her defense, it is pretty amazing. I probably wouldn't have believed it if I hadn't seen it,\" I said. Turning to Nicole and trying to change the subject, I added, \"so, I'm told you have strong feelings about Harry Potter?\" Instead of taking heat off of Nicole, the rest of the table groaned and collectively condemned both Nicole being allowed to go into that again and Malcolm for planting the seed in me.\n\n\"Yall are a bunch of haters!\" Nicole fired back.\n\n\"Isn't the whole point that you're hating on one of the best-selling books of all time,\" Jeff pointed out.\n\n\"Aren't we supposed to be gorging ourselves on chocolate?\" Nicole countered.\n\n\"Yes!\" I agreed, \"I want one of whatever those drinks that steam in the huge glasses is.\"\n\n\"We've had one of those before. They're great. Basically a chocolate milkshake that gets you buzzed.\" Jeff voice didn't match my first impression of him, he sounded warm and melodious.\n\n\"It's why we wanted to come back,\" Natalie added.\n\nI let myself fade to the background of the conversation. It was nice to take a breather after being socially \"on\" constantly for hours. I also wanted to see Malcolm in this group. There was the expected catch up talk, polite interest in his classes and upcoming summer internship.\n\nSam's dynamic with Malcolm was interesting. The way she moved and positioned her body seemed like she was used to holding men's attention. It seemed to work on Jeff, whose eyes would get caught on her chest and legs while seeming to unconsciously accept whatever she was saying. A momentary smugness would flash across her face when this happened. Something about that made it feel different than the way most women like to feel attractive. She liked the power her looks gave her over men, especially when they happened to be dominants themselves.\n\nI thought about what Malcolm had said about her not liking men in general. Was there maybe something else there too? A little bit of contempt for someone who thinks with his cock? Or was I just seeing what I expected to? I wasn't sure.\n\nMalcolm was a completely different story. I chuckled to myself watching him politely meet her eyes and completely ignore everything else. The things Sam was doing were the kinds of things I'd tried on him unsuccessfully for years. True, I did it because I wanted him to see me as attractive and Sam did it because she wanted to hold power over him, but it was still fun watching her struggle.\n\n'Does that mean he isn't playing her game? Or is he winning it?' One way or another, it made his arm around me feel that much more special. I felt warm and happy, far happier than I'd expected to feel when Aunt Flo came knocking this morning. My sugar craving was being indulged to the fullest, I was feeling slightly tipsy from the drink Malcolm and I were sharing, and I found myself liking them. They seemed like the kind of people who could laugh at themselves without taking it personally and were comfortable sharing themselves, even with a newcomer like me.\n\nNatalie drew me back into the conversation, asking politely about who I was, where I was from and what I did. As such conversations so often do, I ended up outlining my job and then complaining about it.\n\n\"The real problem with working with data is that nobody in management gets it. Like, they all think it's magic. Do a basic VLookUp in Excel and you get the same reaction as if you've created a predictive model to automate asset movement based on stock market trends.\"\n\n\"Have you ever done that?\" Sam asked, sounding impressed.\n\n\"What? Oh, move company money? No way. I'm just an analyst code monkey. They barely trust me with access to get into the building, never mind permissions to design anything big like that. I'm just saying, they look at really basic things as the same as really hard stuff.\"\n\n\"Is that a bad thing, though?\" Wondered Natalie, \"If everything you do is magic, then that means your boss likes you for everything you do.\"\n\n\"Yes and no. It's a problem when they ask for things that are impossible and they don't understand why.\"\n\n\"I think I may be part of that problem,\" Jeff admitted. \"It's hard for us businessmen to keep up with you techies! Everything changes every two years.\"\n\n\"My parents are the same way.\" said Nicole, \"We've only just convinced dad that Facebook is the old people social media choice and he won't get infected by us youngins by posting.\"\n\nJeff and Natalie both laughed, \"Well, we are old enough to be your parents,\" Jeff pointed out.\n\n\"How young do you think we are!\" Sam asked indignantly, \"Your kids are what? Eighteen now?\"\n\n\"Yeah, we're sending them off to college in the fall.\" Natalie said proudly.\n\n\"Congratulations and all that, but you would have needed to get knocked up in high school to have kids our age.\"\n\n\"You know, I seem to recall that nearly happened a few times,\" Natalie said with a smirk.\n\n\"You two!?! You, who lecture us about being safe?\" Nicole said with clearly mock disbelief.\n\n\"Believe it or not, we used to be cool. Your parents probably were too before you arrived and forced them to become responsible.\" Jeff shared his wife's smirk, meeting her eye and chuckling at shared memories.\n\n\"Because teenage pregnancy is the height of being cool,\" Sam muttered sarcastically under her breath.\n\n\"Does that mean that you're going to go back to being cool after Mike and Jen have left the nest?\" Nicole asked hopefully, \"It's been a while since you've had a party.\"\n\n\"Actually, since you mention it, they're having a camping weekend with their friends pretty soon. We were thinking of hosting something then.\"\n\n\"That'd be great!\" Nicole grabbed Sam's arm, \"We could perform for them!\"\n\n\"That would be excellent. There is something else, though. Susan -- you all remember Susan?\" Jeff glanced around the table for confirmation.\n\n\"Shy Asian woman who was at a few of your events?\" Malcolm asked, \"the one whose boyfriend wouldn't stop talking about Tom Brady?\"\n\n\"That's her. She has a sister named Vivian, and she wants to introduce her to us.\" Jeff paused to consider before continuing, \"Susan said she wants to show her sister a more positive view of BDSM. I kind of got the impression that she's worried about Vivian.\"\n\n\"You think she's in a bad relationship?\"\n\n\"I don't want to speak out of turn, but that was my guess. I'll get more details from her, but I think what Susan wants is to try to show her sister that power exchange relationships can be better than what she has now.\" Jeff gestured to Sam and Nicole, then to Malcolm and myself, \"it would be great if all of you are interested in being there.\"\n\nAt the time, it was impossible to know just how important this would end up being. I couldn't know how close Vivian and I would become, or how much sleep I would lose trying to help her escape her abusive relationship. It simply passed through my mind as another crowd of kinky people I'd meet.\n\nIt struck Malcolm differently. He tensed and darkly muttered, \"Yeah, because I'm the poster child for happy endings to shitty relationships.\" It was just loud enough to carry across the table.\n\n\"Are you really still beating yourself up over that?\" Sam said with some exasperation.\n\n\"\u2014Sam!\u2014\" Natalie tried to cut her off, but she plowed ahead.\n\n\"She cheated on you, Malcolm. Twice. That was her choice and you handled it much better than anybody else would have. Just because you're the dom, it doesn't mean you're at fault for everything.\"\n\nI was shocked. The exchange happened so fast, nobody knew quite how to react. Fury at Sam boiled up. How dare she! Sure, her words were supportive, but the way she delivered it felt almost disdainful of Malcolm for feeling like he did. I could have hissed and spat venom at her. On top of that, it was a huge revelation. That's what happened to Malcolm and Chloe. Twice? Did he forgive her after the first time, then have her betray him again? No wonder it hurt him so much...\n\nEventually, Jeff broke the silence.\n\n\"I think what Sam is trying to say, albeit roughly, is that none of us think you could have done anything better with Chloe. I suspect that, deep down, that includes yourself. Some relationships end, despite people's best intentions. It doesn't need to mean that people don't care about each other. Sometimes they simply are not meant to be, and both people come out the other side stronger.\" He gestured to me, \"which you have. It's great to have you with us again, Malcolm. Anyway, I think that is a message that might help Vivian, and I hope you decide to join us for that too.\"\n\n\"Yeah, I'm sorry I came off harshly,\" Sam said quickly, \"I didn't mean to be a bitch.\"\n\n\"It's okay. I understand, and thank you. You're all good friends.\" Malcolm sounded his usual self again, which probably fooled everybody at the table except me.\n\nTalk returned to more upbeat matters, but I kept returning to what Sam and Jeff said. It reminded me of what Malcolm had told me at dinner after I'd confessed my feelings. I promised myself that I'd do a better job of being there for him. I hated hearing that dark, depressed tone when his recent past came up. I could face my own demons and talk about Chloe with him if it meant helping to save him from that pain. Right? Fucking A, right! 'But still, why couldn't it be something easy? Like getting my nails pulled out with pliers?'\n\nA little while and a few thousands of chocolaty calories later, we said our goodbyes. Once we were on our own, I brought it up, \"About what Sam said earlier. If you don't want to talk about it, that's totally fine and I understand, but I want you to know that I'm here for you now if you do.\"\n\nHe sighed. It felt like he wanted to, but he was hesitant. \"I don't want to make you uncomfortable.\"\n\n\"You won't\"\n\n\"I know you've never liked talking about my girlfriends. Especially not Chloe.\"\n\n\"It's fine\u2014\" I started, but realized he would see it as me putting a brave face on for his sake. Which was true, but still better to be honest. \"\u2014You're right, and I'm very sorry for that. I feel like I've missed so much of what's important to you because of my jealousy.\"\n\n\"It's fine.\" He chuckled a little, \"we're both saying that, trying to reassure one another. I knew you didn't like that topic, but I didn't realize how you felt about me. In hindsight, that seems pretty dumb of me.\"\n\nI smiled. 'About time he realized that.' He was opening up and I let him take his time doing it.\n\n\"The thing is, I know they're right,\" Malcolm said. \"Logically speaking, I know it. But emotionally, I have a hard time really internalizing it. Part of me feels like I should have done something different to prevent it from happening.\"\n\n\"Her cheating on you?\" I was careful to phrase it as \"hers\" rather than something neutral like \"the cheating.\"\n\n\"Yeah. She never said why she did it. Honestly, I'm not positive she knew herself. She was absolutely miserable afterwards.\" He didn't look or sound depressed. More confused. Like somebody had told him a riddle then gone away without sharing the answer. \"I think it was because part of her resented my control. Some small part of her wanted to exert autonomy away from me. But then again, that doesn't make any sense because she was the one always pushing to do more and more extreme things. More time together, more of our time spent in BDSM character, tighter bondage, harder impact play, always looking for more. If she wanted some space, all she needed to do was slow down a little.\"\n\n\"Is that why you spent some much time away from BDSM afterwards?\" We had been making our way towards the subway but we stopped at a bench just outside the station.\n\n\"That's half of the story. I thought things were better after the first time. I actually think it hurt her more than it hurt me, she tortured herself trying to make it up to me. I was pretty angry myself, of course, and our trust took a major hit, but I was actually proud of how we handled it. But then, after she did it again three months later, I lost my temper.\"\n\n\"You did?\" I said, surprised. \"I don't think I've ever seen you do that. I mean, it's totally justified, but still.\"\n\n\"Yeah, it was bad. I... said things I'm not proud of. Very hurtful things, deliberately playing into her insecurities that she trusted me with. It really hurt her.\" Now he sounded worse, haunted even. I'd always admired how he could make himself vulnerable talking about difficult things, but this was hard for him. I squeezed his hand reassuringly.\n\n\"It's okay. Most people would have lost their heads the first time, never mind the second. We all say things we regret during a fight. God knows I have.\"\n\n\"I know, like I said, it's just hard to forgive myself. Almost like I'm taking the easy way out by letting it go. I don't know... anyway, it's what happened after that screwed with my head.\"\n\n\"What happened?\"\n\n\"Chloe wanted to keep going with me. Like, rebuild our trust and stay together. After she confessed what had happened and I responded by reducing her to an incoherent mess of tears and snot.\" He sighed deeply, \"something about that... I don't know... it felt like she was handing me a blank check to be as abusive to her as I wanted, and she would be okay with it as long as I forgave her. That just can't be healthy, can it? We hadn't resolved anything, just taken turns hurting each other. What really frightened me, though, was that there was a part of me that wanted to do it. Part of the sadist in me wanted to take that permission and just go at her with reckless abandon.\n\n\"That's what made me try to give it up. I stepped back and thought about how messed up it is that I get horny by hurting and controlling the ones I care about most. If you say it like that without the somewhat accepted labels 'BDSM' or 'power exchange,' it sounds pretty screwy.\"\n\n'Fuck that's a lot to take in,' I thought, 'no wonder he wasn't acting like himself for so long.'\n\nOut loud, I said, \"those things are not just labels, they are what make it different. It's like you said earlier today, what we do is only fun if both of us enjoy it.\" I pulled him close into my arms for emphasis. \"You're not a monster fixated on inflicting pain on others. You care so much about everyone around you. Take me for instance! You care more about making me comfortable than I do.\"",
        "He relaxed into me. Surrounded by constant noise and motion as people rushed in and out of the station, it was almost like we were on our own in a bubble.\n\n\"It makes me nervous,\" Malcolm confessed.\n\n\"What does?\"\n\n\"Hurting you.\"\n\n\"I'm tough, you know. I can take far more than you've dished out so far.\"\n\n\"We'll have to see about that,\" he chuckled, \"but I'm not talking about whips in the bedroom. I mean that... well... if I push you too far and seriously emotionally hurt you, it would probably ruin me.\"\n\n\"You won't.\" I said, as firmly as I could, locking eyes with him for emphasis. \"Because I won't let you. That's what our second law is for, to make sure I let you know long before that happens. Malcolm, it's like Sam said, even if she was rude about it. Submissives have responsibility too. I'm not saying you and Chloe had bad communication, obviously I don't know, but at some point, it's on her to tell you if something was wrong for her.\"\n\n\"Thanks,\" he murmured into my ear.\n\n\"I feel safe with you, but if I ever didn't, I promise you that I'll tell you. I want you to be everything you want with me. It's like one of those FetLife essays you sent me said. Part of my role in that is shouldering that responsibility for myself, so that you feel can safe not to second guess yourself and what you want.\"\n\n\"That's part of what made me decide to come back into it. You've been tossing my BS back at me for years. I know you have no problem sticking up for yourself.\" He sounded warmer, more genuinely so than when he's been acting for the others.\n\n\"You make it easy,\" I said with complete honesty, \"because you're always willing to listen.\"\n\nWe sat with our own thoughts for a few minutes, watching people bustle up and down the subway steps. I was reminding myself how I'd felt when I was in my more submissive mode and how natural it seemed to let Malcolm take the lead. It would be hard to break out of that, but I was confident that I could if I really needed to.\n\nAnother couple had paused a little way away. The guy seemed to be trying to convince his date not to get on a train and to come back to his place instead. We watched, trying to hide our amusement. Her refusals started as polite excuses but gradually transitioned to shouted insults. He just didn't seem to get the message until it was far too late. Apparently, he was shit to their waiter, had shit taste in wine, and had shit for brains if he thought he was good looking enough to get into her pants.\n\n\"I had a great time with you today,\" Malcolm commented ironically as she stormed off.\n\n\"I did too. This has been easily the best period date I've ever been on.\" I leaned into his ear and whispered, \"I think you might just be good enough for a second date.\"\n\n\"That's good to hear. We've got some unfinished business.\" His arm snaked its way from around my back down towards my ass, letting me know just what kind of business he had in mind.\n\n\"Mmm,\" I purred, oblivious to everybody outside our imaginary bubble, \"you know I've been soaking wet for you ever since you left that first morning? But I've been a good sub for you, Sir. I've been obeying your first rule.\"\n\n\"Oh? Remind me, what was that?\"\n\n\"My sexuality is yours, Sir. I only cum when you command.\"\n\nSitting on the bench, he couldn't properly grip my ass, but he let me feel his appreciation by slipping inside the band of my panties. Just a quick tease for a second, and then his fingers were gone. \"Oh Devyn,\" his husky voice contrasted the filth of his words, \"Once you're off the red wave, I'm going to fuck you so hard, your tough girl exterior will crumble to dust.\"\n\nI grinned and felt my body respond. I could just imagine it, being spread and mounted, feeling completely full up with his beautiful cock... Ahh! \"You really know just how to woo me.\"\n\n----------\n\nHe picked me up from work on Friday. Yes, Friday. It had taken a full week for my biology and our schedules to behave again. A week of anticipation, even more buildup, and sadistic levels of teasing from him. Maybe it had been a mistake to let slip that that bit about him controlling when and if I cum. Maybe that was a bit like giving a fox the keys to the henhouse and then being surprised to find no hens the next morning.\n\nHe sent me erotica to read before bed that he'd annotated with thoughts on what he'd do to me if we were in the stories. I'd wake up to voicemails from him with distinctive wet stroking sounds where he described how good it felt to jerk off and cum. Suggestive text messages throughout the day gave me no reprieve and I found myself in a perpetual lusting simmer counting down the hours to release.\n\nI was a little wound up to say the least. My period had ended and, instead of my pads getting drier, their soaking had simply changed colors. I ran to my boyfriend and half way tackled him into a hug against a column, squeezing him as tight as I could, actually cracking his back.\n\n\"A good afternoon to you too, madam,\" his formality joked at my enthusiasm.\n\n\"Shut up and fuck me.\"\n\n\"Patience!\" He laughed, \"all in good time.\"\n\n\"I don't want to be patient anymore! I was promised the fucking of a lifetime and I intent to have it!\" I pouted and pulled him around the column out of direct line of sight of my coworkers going home. I kissed him and thrust my hips against his, letting him feel just a bit of how fucking horny he'd made me.\n\n\"Well then, fair is fair, let's start things off right now.\" Malcolm pulled a pair of dark sunglasses out of his pocket and handed them to me, \"put these on.\"\n\nThey weren't just dark, they were completely black. No light at all got past their frames, which curved a little to connect with my face around my eyes. They weren't just a lack of sight, like if I'd closed my eyes in the sunlight, they were actual darkness. I might as well have been wearing a blindfold.\n\nI didn't know about the specifics of the scene we were going to have. We'd talked about the main themes to include together but he planned out the details, keeping them mysterious to me. The first theme was trust. \"What am I supposed to do with these?\" I asked, thinking I could guess and half dreading being right.\n\n\"Keep them on while we go back to my place.\" Behind their dark prisons, my eyes grew wide. He said it casually! Like it was as simple as walking to the corner store for milk. It wasn't! Getting to Malcolm's house in Williamsburg, Brooklyn from Jersey City involved walking to the train station, taking the train into Manhattan, walking a few blocks to another train, taking that into Brooklyn, then walking ten more minutes. 'Holy fucking shit!'\n\n\"You're serious...\" I wasn't panicking. I wasn't!\n\nMalcolm wrapped his arm around mine and held my hand tightly. \"I'll be with you,\" he said reassuringly, \"right beside you the entire way. One step at a time.\"\n\nI took a very tentative step, Malcolm alongside me. Then another, and another. Cars raced somewhere ahead of me, lots of people chattered all around, another step, someone's dog barked off to the left, a pollster was asking if people could spare a few seconds to talk about the environment, I was sure I was about to crash into something, somebody honked their horn, crash into any one of them, all of them at once --\n\n\"Take a deep breath,\" Malcolm's calm voice seemed to drown out the rest for a second. I realized I was gripping his hand with all my strength. I forced myself to untense and let out the breath I'd been holding. \"You're safe, I'm here with you. Just keep focusing on my voice in your head and my arm by your side and everything will be okay.\"\n\nWe'd kept walking while he spoke. I found it easier when I ignored all the noise and just did as he said, focusing on him and his calming voice and relaxed hand.\n\n\"Imagine us walking down a nice, scenic path in the country. It's just you and I, walking on. The path is smooth underfoot and a little winding. It's night, but you can make out the moon and stars through the trees above us.\" He kept speaking continually as we walked, smooth and calm and evenly paced, painting a picture in my head with his words. \"You can see a clearing up ahead, filled with flowers. Red roses and yellow tulips seem vibrant in the starlight. We'll get there in a few seconds, just a few more steps, then we'll stop and smell them. Three, two, one, and stop.\"\n\nI felt hard bumps through my shoes under my feet, the ones put there to let actual blind people know they're about to walk into the street. 'Don't think about that, just keep listening.' I preferred imagining Malcolm's fantasy nighttime stroll much more than the alternative, the reality that I was about to wander blind into a busy street full of rush hour traffic.\n\n\"Breath deeply, smell the roses. Breath in through your nose, slow, one, two, three.\" I thought I could really smell one! \"Hold it inside you, one, two, three, and breath out.\" Something soft brushed my lips and I got blasted by scent again when he repeated the slow, counting breath instruction.\n\n\"Hey! Using a real rose is cheating!\"\n\n\"Oh? Why shouldn't I have plucked a rose for my girlfriend?\"\n\n\"Way to play into stereotypes, Sir.\" I tried to downplay the flutters of excitement inside me.\n\n\"It's only bad if you don't think things like that are romantic. And I happen to know for a fact that you do, tough guy.\" I couldn't believe he remembered that. I only admitted it once, ages ago, on a drunken night of gaming where I complained that my boyfriend at the time never did anything cute for me.\n\nIt made me feel paradoxically empty and full at the same time. Full of his attention, evidently reciprocating all I'd given him over the years. Also empty. Specifically, there was a hole in my vagina that was crying out to be filled.\n\n\"It's nice to get away after a long day of work behind you. The Each step we take carries you further away from your cares and responsibilities. Each step takes you into relaxation and calm. You feel it as we walk, you're becoming calmer and more relaxed against my side here. Keep breathing fully. In -- one, two, three -- hold it -- one, two, three -- and out -- one, two, three. Let more of the calm surrounding us come inside you with each inhale -- one, two, three -- and let your tension leave as you exhale -- one, two, three --\"\n\nMalcolm's words seemed to blend together, guiding me through a world of his creation that overlapped with the real world just enough to guide me around obstacles. We picked our way through a \"tangle of bushes\" that corresponded with the PATH train turnstiles. Down \"a hill towards a lake we can see sparkling in the moonlight,\" lining up with the stairs underground. Finally, we settled into seats \"on the boat tethered by the water's edge,\" feeling hard and plastic and not well suited for an evening's cruise on a lake, but so be it.\n\nI had held close to his side the entire way. It took a conscious effort because we were walking slower than I typically would have. The few times I unconsciously sped up, I very quickly realized I had no idea where I was or where we were going. I had to keep making the deliberate choice to slow myself down and let Malcolm guide me. It became easier as we walked. By the time we settled down on the boat -- train -- I was totally in the follower headspace.\n\nThe story Malcolm told had shifted a bit too. He stopped counting off my breathing, for example, but I realized that was because I was following the very slow and deep rhythm myself. I really did feel calm. Far calmer than I should have been while blindfolded and surrounded by chaos with no real notion of where I was. Malcolm was my shepherd. Was it bad to say that I was happy being his sheep?\n\nThat didn't quite fit, though. Despite the physical contact between us, I felt sort of free and floaty. Kind of like I was a leaf and Malcolm was the wind, sweeping me wherever he willed. The more his words seemed to flow together, the less they felt like words and the more they felt like a breeze of thoughts going through my head. It was easy to just go with the flow, letting myself be swept along.\n\nOn we went, \"We'll get to the foot of the hill soon, in a few yards we'll start climbing. You'll be happy to get to the top, you can see it's brighter and clearer, and you'll be glad to leave this behind you.\" It wasn't that I really believed what he was saying. I knew we were climbing stairs out of the subway. But it wasn't really about being believable. It was about filling my darkness with something. Something special, a private world for just the two of us.\n\nBut, at the same time, there was enough overlap to make it believable. Like, when he described something new, he gave me some bit of positive feedback with it that I could hear or feel. Changing directions, going up or downhill, stopping to wait for something -- it wasn't much but it was something. More and more, I found my mind defaulting to the suggestions Malcolm was giving me. Like, as Malcolm's shifting tapestry flowed across my mind, I almost felt it taking shape before my eyes.\n\nI genuinely didn't notice the sounds of the city when we got to the top of Malcolm's hill and out of the subway. Time passed wandering onwards, floating in Malcolm's voice, one step after the next. Five minutes? An hour? Longer? I wasn't quite sure.\n\nEventually, I became aware that we'd been stopped longer than usual and Malcolm was counting down.\n\n\"\u2014Four, consciousness coming back to the surface. Three, climbing upwards, back to the real world. Two, you're waking up, becoming more aware of everything around you. And... one! Wake up, Devyn.\"\n\nLight flared through me like fire, blinding me just as effectively as the glasses that had just been removed. It sort of felt like I'd just woken up from a lazy Sunday afternoon nap. I frantically rubbed at my eyes, trying to dispel the fog and stop myself from mentally hitting snooze. My entire body felt comfortably lethargic, leaning heavily against Malcolm for support.\n\n\"What was that?\" I asked, bewildered.\n\n\"That was a trance. Now, before you jump to any conclusions, trance isn't magic or mind control or anything like that. You've done it to yourself many times before. You know that feeling you get when you're reading a book? You stop seeing the words on the page and their meaning seems to slip directly into your thoughts and you seem to drift away to wherever you're reading about? That's a trance. It's the same sections of the brain firing.\"\n\nUnconvinced, I muttered, \"I suppose it did feel kind of similar. A little.\" Forget what he said, Malcolm was a wizard and what he'd just done to me was magic. \"Is that what you did to make Chloe cum by talking to her?\"\n\n\"Yes-ish. You need a lot of repetitions before we'll be able to do that. Think of it like Pavlov training his dog. There's a concept of trigger words that I'll try to make you associate with feeling something or doing something. At first, you'll just go through the motions, but the more times we repeat it, the more it will work. Today was just about introducing the notion of you feeling calm, cool and relaxed listening to my voice.\" He chuckled a little bit, \"although, I suppose, what we just did wasn't necessarily the most relaxing situation for you. I'm impressed with how well you handled it.\"\n\nThe floaty feeling slowly faded as I came more back to myself, like the details of a dream slip away after waking. Just like a dream, the main themes stayed with me. I landed -- if that's the right way to think of it -- still feeling deeply submissive to my shepherd.\n\nMy eyes adjusted enough to squint through without being shielded. Malcolm's apartment is much different than mine. There are multiple rooms for one thing. For another, he had inherited a lot of furniture from various family members, which were somewhat the worse for decades of ware but much more personal feeling than my Ikea collection. He also had huge bay windows, which unfortunately didn't overlook anything too exciting but did give him a ton of natural sunlight. I flopped down into a favorite overstuffed reclining chair while Malcolm took long gulps of water. 'He much be parched after talking nonstop.'\n\nAs though his fire passed through our connected eyes, it started my own engines reawakening. Fast.\n\n\"You remember our safe words?\" Malcolm stood over me, rolling up his sleeves deliberately.\n\n\"Red to stop and yellow to slow down, Sir.\" I watched his fingers work over the buttons of his shirt cuffs. The way they nimbly maneuvered the small button nubs through the hole make my clit tingle.\n\n\"And what is your responsibility during check ins?\" He rolled his sleeves up and neatly adjusted the wrinkles out.\n\n\"To always be honest.\"\n\n\"Excellent.\" He offered me his hand, \"then we should do something about your clothing problem.\"\n\nI took it and stood up, \"what's wrong with my clothes?\" I played along.\n\n\"You're wearing far too much of them.\"\n\nI couldn't help laughing, despite the erotic mood, \"you are so corny, Sir!\"\n\nMalcolm couldn't disagree. He unbuttoned my shirt as he pointed out that I'd set up the lob for his corny remark, which apparently made me just as corny as he was. I stood passively, watching his fingers dance as they undressed me. 'Those would be so excellent in my pussy...'\n\n\"Have you been an obedient sub, Devyn?\"\n\n\"Yes, sir,\" I let the arousal I was feeling seep into my voice, \"I've stayed a wet and horny slut for you.\" Malcolm doesn't typically like the word 'slut,' but sometimes there's no better word. \"It was really hard when you kept teasing me, sir, but I'm your loyal and obedient sub.\"\n\nHe was annoyingly efficient, getting my clothes off without even stopping to fondle me. I mean like, what a jerk! He gave my nipples just enough of a grin to let me know he recognized how hard they were, then passed them for my pants without so much as a pinch.\n\n\"You think so? Well then perhaps you would care to explain this?\" He was trying to sound ominous, but there was an amused twitch in the corners of his mouth as he pulled a piece of paper out of his pocket. It was a printout of the selfie I'd sent him after I shaved my bush, way back after our first night together. It had 'EXHIBIT-1' printed across the top.\n\n\"Uh, what?\"\n\n\"You stole my tie.\" 'Oh yeah! I did do that, didn't I.' Malcolm tisked in disapproval. He smacked my now bare ass, hard enough to sting a little, \"you'll have to be punished.\"\n\nI yelped a little, but I didn't dislike it. In fact, I kinda liked the burst of sharp sensation. \"But sir, it was for a good cause!\"\n\n\"True enough, you'll get some credit for that, but it won't save your ass. Come.\" I followed my dom meekly as he lead me into his bedroom to my first spanking.\n\nHe sat at the head of his bed, comfortably set up with his pillows between him and the headboard. I was draped over his legs, face down and butt up, my legs spread just wide enough for my pussy to be on display. 'The bar just keeps getting raised,' I thought, 'he keeps finding new Most-Revealing-Position-Yet-s.' I couldn't see anything, could only feel as his idly traced over my thighs and ass.\n\n\"You weren't exaggerating, you really are a fountain down here,\" he spread wet pussy juice from my upper thighs further across my legs. My face glowed red into the bed. 'Yeah, that's what happens when you take a woman who's used to cumming every day and make her wait for two weeks!'\n\nHis hands felt amazing. I shivered at his touch, half tensing in preparation for what was coming and half relaxing into his caresses. He was toying with me. Enjoying my submission by playing with my body. I loved it.",
        "\"Want to know a secret?\" Malcolm asked rhetorically as he took a firm squeeze of my ass. \"I've wanted to do this for years.\" I gasped and raised my hips up into his hands. As I did, a light smack hit me right across both butt cheeks. It startled me more than actually hurting. Chastised, I lowered myself back down to his lap.\n\n\"Really, Sir? You never let on. Never even eyed me up.\"\n\n\"Only a blind man could fail to see the results of all those squats you do,\" he chuckled and slapped my ass again, playfully light, and continued peppering me with swats in a steady rhythm. He was literally warming me up, I felt my butt physically heating the longer he went.\n\nSlap-slap-slap-slap. I sighed into the bed, feeling deeply exposed and defenseless, supported once again my trust in Malcolm.\n\nI wasn't sure if he was increasing the intensity or if my resistance was wearing down. How many had I taken? 20? 40? My sighs became heavier, turning into groans. It hadn't really been that unpleasant to start with, the warmth had felt strangely pleasant in an achy stingy type way, but it was quickly getting more intense. I stopped trying to keep track of time and gave into the sensations, letting them rush through me. Just as it was starting to make the transition into being painful, he gave me two more sharp, loud smacks, one on each cheek, then stopped.\n\nI panted, trying to get my breath back, but barely had the chance before I felt my pussy get filled and intense pressure on my clit. All the air I'd recovered escaped in a huge, involuntary moan.\n\n\"How are you feeling?\" Malcolm asked. It was hard to focus on anything beyond the fingers inside me and swirling around my clit. My hips rocked into them, trying to get more friction.\n\n\"I feel like your toy, Sir,\" I said, \"your plaything to spank and finger and fuck and lead and control and whatever else you want.\" He spanked me again just after I said the word, which made my vaginal muscles clench hard around his probing fingers. \"And I like it!\"\n\nIt was true. With anybody else, bent over their lap being spanked, I would have been humiliated beyond words. With Malcolm, I felt intimately submissive. With anybody else, I would have felt vulnerable to the point of panic. With Malcolm, I felt safe to let go and allow myself to be free for his whims.\n\nHe sped up, increasing the pressure on my clit.\n\n\"Tell me when you're going to cum.\" It didn't take very long. I tried to control myself and gain some pride for my stamina, but feeling his cock growing hard through his pants underneath my rocking pelvis doomed me.\n\n\"Please Sir, can I cum?\" I tried to request politely, but it came out sounding desperate.\n\nFor answer, all the stimulation vanished from my cunt and I felt a hard SPANK envelope my ass. He must have used both hands, because I felt it across every inch at once. That stopped my orgasm like it had run into a tree. Still, the pleasurable heat that had risen from my clit and pussy through my core didn't die down. As Malcolm continued spanking, much less gently than before, the stinging heat of his impacts joined with it. Erotic heat and stingy bursts competed for my attention at once! It was very intense.\n\nSpank!\n\nMy clit throbbed, still optimistically hopeful that she would find something to hump and get to release all the pressure built up inside her.\n\nSpank!\n\nMy ass continued to heat as the stinging on my skin intensified and the underlying muscle started to ache under the assault.\n\nSpank!\n\nI groaned, wishing I could see Malcolm's face.\n\nSPANK!\n\nThe last impact was again much harder and made my whole body react. The \"Ouch!\" I'd been holding back ripped free and my back arched reflexively.\n\n\"I'm okay, Sir,\" I said hurriedly, disappointed in my body for its lack of discipline. Naturally, he responded by finger fucking me. He hammered my g-spot from within me while hitting my clit from outside, effectively ripping my attention away from my ass and back to my lust driven NEED to cum!\n\nMalcolm was learning fast. The closer I got to orgasm, the slower and lighter his fingers got. I was purring deep, reveling in the sensations of pleasure blossoming through me when he pulled out, gave my clit a few light caresses, and stopped.\n\n\"Did I have you on edge?\" He asked.\n\n\"Very close to the edge, Sir. A little longer and I would have been there.\" I thought I felt his cock throb through his pants. So close to me, so close to my cunt that wanted it so badly...\n\n\"You contract a lot when you're close. That's going to feel really good.\" Yep, that was definitely throbbing! \"Shift over.\" Malcolm moved me off the bed completely and stood me up facing him with my back to the mirror. Fashionista that he is, Malcolm naturally has a full-length mirror in his bedroom.\n\nStanding facing each other, bodies pressed intimately close with my arms around him and his hands massaging my ass, I could finally see him again. Pleasure from being in control played freely across his face. Even though we stood on the same level, eye to eye, there was no doubt who was dominant. He knew I was his as certainly as I knew I never wanted him to let me go.\n\n\"Count down from ten.\"\n\n\"Yes, Sir.\" I braced myself and his eyes shifted over my shoulder to the mirror.\n\nThe impact was hard and loud, taking my breath away and making me grit my teeth. Pain raced through my right cheek, the stinging only slightly soothed by his continued gentle kneading.\n\n\"Ten,\" I gasped. Then my left cheek exploded, just as loud and intense. \"Nine!\" The sadistic gleam shone in his eyes alongside the same look of pride he'd shown me before. His gaze shifted back and forth between my face and my ass, delighting in seeing the physical and emotional impact of his spanking. \"Eight!\" I didn't try to hold back the feelings, I let them flood across my face and into my voice, \"Seven!\" It hurt. It hurt a lot! I gripped him hard, needing to feel his support as well as give my muscles some outlet. I could take it for him. Looking into his eyes, I could take anything.\n\n\"I love seeing you like this. So strong, just for me.\" The pride and dominance shone brighter in his eyes, just as the next stroke hit, along with another just a second later.\n\n\"Six! FIVE!\" We fed off of each other -- My pain feeding his excitement, his excitement feeding my determination and submission to him, which elevated him as my dominant.\n\n\"Four!\" Around and around in a loop, our feelings resonating as we passed them back and forth. Little wisps of the light, floaty feeling returned to me, making me feel somehow suspended by him.\n\n\"Three!\" More and more intense, I felt incredibly connected to him. Bound to him by the intensity of the feelings he gave to me and I bore for him, then rewarded by the depth of the emotion I felt in return.\n\n\"TWO!\" It was beautiful. A little physical hurt didn't matter, it was so worth it for this.\n\n\"ONE!\" I almost didn't want him to stop. The last few had felt like daggers ripping through me, but I didn't want the connected feeling to end.\n\n\"Look at yourself,\" Malcolm nodded to the mirror.\n\n\"Holy shit,\" I gasped. My ass was covered in pink and red, darker shades seeming to form the outlines of fingers against the paler backdrop. I tenderly probed myself, surprised by how sensitive I felt and how physically hot my skin felt. 'I really took all of that?' I grinned, immensely pleased with myself. \"Can I take a picture, Sir?\"\n\n\"Proud of yourself?\" He smiled too and nodded, \"well, you've earned it, those last ten were hard. Go ahead and grab your phone, and get your cuffs while you're at it.\"\n\nI had marks! Damn right I was proud. I've seen hundreds of similar pictures online, maybe even thousands, but this one was mine! Maybe they weren't the most hardcore in the world, I'd earned these stripes! They were my souvenir, my trophy, even if they did still sting like a bitch.\n\n\"All this just because of a tie, Sir?\"\n\n\"I like that tie! And you still have not returned it.\"\n\n\"What would I get if I went home wearing one of your shirts?\"\n\nMalcolm smiled wider, clearly knowing I was thinking of awesome marks when I asked what I would get, rather than worrying about a punishment. \"I'm sure I could think of something suitable for your breasts.\"\n\n'Oh my god, my tits!' My nipples tingled as I thought of how they might look surrounded by the same coloring now on my ass, 'yeah, one of those fancy shirts has got to be mine. Then I'll just need some pants, shoes and a jacket from him to complete the set!'\n\nMalcolm wrapped the leather of our cuffs around my wrists. I'd started to think of them like that -- \"our\" cuffs. They were another way that we joined ourselves together. Just like the spanking had made me feel connected to him, and the hot sting I felt from his hands was a symbol of that. Just like the long blind walk before it, and the lingering feelings of Malcolm being my light in the darkness.\n\nBut that was all foreplay. He kissed me softly on the lips and settled me down on his bed. It was finally time for the main event!\n\nHe secured our cuffs to facets in the headboard above me. There were pillows under my head and butt, which made me feel both comfortably pampered and securely set in place. I was getting used to being naked while Malcolm was clothed, and even lying back with my legs spread and my wet, engorged cunt on full display didn't feel embarrassing. Still, I didn't think that watching him strip would ever get old. I licked my lips and felt my blood pump in my veins as he pulled his shirt off and undid his belt.\n\nHe moved slowly and deliberately, but with unmistakable purpose. Everything about him -- from the lust on his face to the movement of his muscles as he removed his clothes to his focus on my womanhood -- seemed dedicated to it. The simplest and most primal reason for his cock to be rock hard, standing proudly in the air. He was about to fuck me. My pussy throbbed in anticipation, seemingly trying to open herself wider, crying out to his beautiful penis.\n\n\"You see what you do to me?\" He traced the head of his cock, showing me a string in precum sticking to his finger.\n\n\"No more than what you do to me, Sir.\" I stared, transfixed, as the string extended and snapped. I didn't want kids at that point in my life. I'd had an IUD ever since I became sexually active and I had regularly used condoms on top of that. But some evolutionary part of me wanted that cum. Wanted all the cum in his balls deep inside me.\n\nHe mounted me and laid himself out over me, letting me feel his naked legs between my thighs, his bare chest against my breasts, his cock resting on my mound. He caressed my cheek as we breathed each other in. Feeling his bare skin up and down my body was electrifying! I shivered, trying to feel as much of it as I could, wanting to feel it rubbing me all over. He kissed me again, tenderly, fully, amplifying the feeling of closeness even further.\n\nWith his lips locked with mine and his tongue in my mouth, he slowly pushed forward, effortlessly sliding past my drenched labia and into me. He thrust at an angle, using my elevated hips to press upwards from below, his head rubbing along the entire front wall of my pussy and directly against my g-spot. He sheathed himself all the way to the hilt with my clit pressing hard between us.\n\nI lost it. My eyes rolled back in my head and I moaned for all I was worth into his mouth. I thought I had a good idea of his proportions from sucking him off twice, but I felt so insanely FULL! It was truly overwhelming, the pleasure surging through me, the feeling of literally being connected with him, our bodies joined together. It was too much to try to process. I kissed him back furiously as we both enjoyed our union.\n\nEventually our kiss broke and our eyes met. His pupils were enormously dilated gazing back at me, just like he had said mine where before our first kiss. 'That means he's just as turned on as I am!' That almost made me cum. If I'd had much more stimulation on my clit, I would have.\n\nI uselessly struggled to wrap my arms around him, straining against my bonds for a second before falling back. Of course, I wasn't here to do anything except get fucked. A wave of submissiveness swept over me and I moaned again, consumed by feeling full of and enveloped by the man smothering me with his body and will.\n\nHe rocked his hips, just a little at first, sliding in and out enough to stimulate us while leaving him still mostly inside me. He was like a burning hot rod in my pussy, my insides feeling drawn to it like moths to a flame. I gripped his cock like a vise and spasmed around it, trying to hug tighter.\n\n\"Uhh -- That feels fantastic,\" He sped up, thrusting hard into my clenching pussy, every stroke hitting my g-spot and clit directly. It overloaded me with sensation. I cursed and writhed and flexed my muscles trying to cope with it all.\n\nI was babbling, \"I'm gonna cum, I'm gonna cum, I'm --\" Malcolm shifted himself and slowed, steadily pumping but deliberately missing my clit.\n\n\"Not yet.\" He grabbed his spot in my hair and pulled my face closer to his, \"stay with me, don't cum.\"\n\nI bit my lip and nodded, feeling my hair tug slightly on his grip. It was symbolic, I was already completely immobilized, but the control and having his arm to rub my cheek against helped. Fuck it was hard! My pussy screamed for release! My clit throbbed enormously, feeling so good with each pulse of blood that I thought I'd cum without touching it. It was intensely pleasurable, feeling his cock push into my cunt, feeling him throb against my vaginal walls and his shudders of pleasure spasm all over my body.\n\nI drew as much determination from him as I could and endured the torture of relentless blissful pleasure. Fuck, what a paradox! Malcolm's eyes never left my face, watching my struggle play out across my features like he enjoyed so much. I held on for him, holding myself on the edge, feeling my pelvic floor contract around him and watching with delight as his pleasure rose. Tension gripped his body in stages and his movements become more urgent. Need overcame the control in his eyes.\n\n\"We're going to cum together.\" He lowered his hips again and thrust hard into my g-spot and clit, cock throbbing mightily from deep within his balls, \"cum with me, Devyn!\"\n\nCoherent thought left me. My consciousness left my brain and took a trip down to see the fireworks in my pussy. Each contraction hit me like a bomb, rocketing pleasure through my core to every corner of my body and back again. I gripped his dick so hard I imagined I could feel every curve and vein. I could have made a mold of it! My clit joyfully exploded against the base of his cock, finally releasing all the pent up lost that had kept her erect for so long.\n\nAnd then, just as I thought I couldn't feel any better, Malcolm's cock throbbed hard back against me. He was cumming! He was cumming into me! His face absolutely contorted with sexual exuberance, his possessive grip still in my hair, he buried himself balls deep inside me filling me up with his cum.\n\nIt set me off again. I came, harder, as if my pussy was determined to milk every drop of sperm from his balls. Every throb from him triggered a contraction from me as our orgasms resonated, each of our pleasure enhancing the other's. It was one orgasm we shared together. Ours. Not two people's simultaneous orgasms, it felt like we shared each other's bodies and we were able to experience each other cumming firsthand.\n\nIt was perfect.\n\n----------\n\nLate that night, after a ton of cuddling and a shower and some food and even more cuddling, I struggled to keep my eyes open. It was silly, but I wanted to say something out loud and I wasn't sure if I should wake him up or not. I traced the outlines of his closed sleeping eyes with my fingertips, enjoying our shared warmth under the covers.\n\nI don't know when it had happened. Maybe it was years ago and I hadn't realized what it was, or maybe it just happened today. One way or another, I was sure how I felt now. It hit me while watching him sleeping peacefully beside me and it felt right.\n\nI didn't wake him up. He would have been half asleep and would have forgotten by morning. But I wanted to say it anyway. I kissed him very lightly and breathed out the words, \"I love you.\""
    ],
    "authorname": "Lydra",
    "tags": [
        "consensual",
        "female submissive",
        "fsub",
        "male dominant",
        "mdom",
        "oral sex",
        "romance",
        "spanking",
        "tease and denial"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ignore-the-warning-label-pt-02"
}