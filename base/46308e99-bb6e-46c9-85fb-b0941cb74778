{
    "title": "There and Back Again Ch. 089-090",
    "pages": [
        "Chapter Eighty-Nine: *Arming and Disarming \n\nAfter making love on and off all night, we finally fell into an exhausted sleep in the early hours of the morning. Someone pounding on the door woke us sometime later; the room was pitch dark, and I had absolutely no idea what time it was. \n\nAlistair slipped out of bed and fumbled for some trousers, swearing as he banged his shin in the dark. \"This better be an emergency,\" he growled as he opened the door, while I hid under the covers. \n\nI heard Zevran's voice. \"It's always an emergency when Grey Wardens haven't eaten all day, no?\" \n\n\"We ate earlier. Sometime. What time is it, anyway?\" \n\n\"Mid-afternoon, sleepyheads. Time to get up! There's an armourer here to measure Sierra, and Duncan wants her to go talk to some weaponsmith about a weapon idea she had?\" \n\nI swore. It did need to be done, but did it have to be done today? \"So why are you standing there instead of Duncan? You offered, I bet. Hoping to catch a peek at something, you pervert?\" \n\n\"I'd say I already caught a peek at something, Bellissima, but it isn't you.\" \n\nI heard Alistair mutter something uncomplimentary, and I laughed. \"Go away and let me change, Zevran!\" \n\nHe laughed. \"I very much doubt you have anything on that needs changing, but I suppose you might want to get dressed.\" \n\nAlistair slammed the door behind him, and then fumbled for the arcane lamp we'd left beside the door. Bluish light blossomed, and I crawled out of bed to see Alistair standing near the door with only low-riding trousers. I gave him an appreciative once-over: mussed up hair, hickeys, fingernail marks...oh yes, Zevran got an eyeful, alright. \n\n\"Do we have to get out of bed?\" I whined. \n\nHe was looking at me naked, and his eyes darkened. \"If you don't want me keeping you in until tomorrow, you better put something on quick,\" he teased. \n\n\"Eep!\" I scrambled for a pair of panties and a bra, getting a whiff of myself as I struggled into them. \"Oh, ugh. I need a bath. What I wouldn't give for a shower! I smell like stale sex and unwashed human. Though I suppose that's better than wet dog.\" \n\nAlistair came over and pulled me into a hug, sniffing me as he did. \"Smells good to me.\" \n\n\"That's because I smell like sex with you! That poor armourer...\" \n\n\"He'll live. He's probably worked with Oghren before, after all.\" \n\n\"Point. Even stale sex smells better than that!\" \n\nFinally ready, I headed out into the main room with Alistair on my heels. I wore the clothes I usually wore under my armour, trousers and a shirt; Alistair was dressed similarly, though his were looser fitting, since he didn't need new armour. There was a dwarf waiting impatiently for us, ignoring the chaos as people came in and out around him. He was neatly dressed, with carefully coifed hair, a neatly groomed beard, and a waxed moustache that rivalled that of any villain from a 1920's silent film on Earth. \n\nHe looked...prissy. If there was such a thing as Orlesian dwarves, he would be one. \n\nMistress Leta introduced us; his name was Paider, and he was not pleased to meet me. He followed me to the library, since I wasn't about to take him into my room, which smelled of sex and looked like a hurricane had landed there. Solona was sitting with a book in her lap, and she watched in amusement as the man measured me, almost without speaking at all. He pushed or pinched when he needed me to move something, had me bend over and twist, and then asked a few terse questions about my fighting style. \n\n\"And what is this you are wearing?\" \n\nI looked down. \"This? I put on what I wear under my armour. I thought that would be helpful.\" \n\n\"This? You wear this under armour? Do you not have proper arming clothes?\" \n\n\"Um...\" \n\n\"Ach! I cannot be expected to work like this.\" He paced and muttered to himself; for a prissy sort, he swore like a sailor. Must be a dwarven thing. \"I shall make new arming clothes as well. And I suppose the rest of your...friends, need arming clothes as well?\" \n\n\"I suppose? They all wear the same as me, more or less. Half the time, Alistair wears pyjamas.\" \n\nSolona started laughing outright at the dwarf's outrage. \n\n\"I must do measurements. Go! Go! Send the first one up, while I measure this one.\" \n\nHe stomped over to Solona, demanding she get up. \n\n\"What? But I don't wear armour! I don't need arming clothes under my robes.\" Solona looked decidedly less amused now that the dwarf's attention was on her. \"Hey, stop pinching!\" \n\nI laughed all the way to the dining room, where I organised those present into a lineup to get measured. I did a mental head count: Zevran and I both needed new leathers after the Deep Roads, and Leliana could use some as well. Duncan needed an updated set of mail, and Faren's plate was mostly scavenged crap, though I wondered how the prissy little armourer would deal with measuring a Casteless. The others mostly needed new arming clothes, apparently, but I thought that Sten and perhaps Bel and Oghren might benefit from new gear too. In fact, Alistair and Aedan, plus the mages, were possibly the only ones who didn't need new armour. I briefly felt sorry for the armourer, until one of the bruises where he'd pinched me started to ache. \n\nWhen I got everyone organised, I realised one was missing - my brother. \"Zev? Where's Aedan?\" \n\n\"The Warden, shall we say, overindulged last night. He is...resting, I believe.\" \n\n\"Resting? You came and woke me this morning, but Aedan's still resting?\" \n\nI turned and headed to their room, ignoring Zev's protests. I didn't knock, but just barged in; the door wasn't locked. \"Aedan?\" I spoke loudly, teasing the poor hung-over fool. \n\n\"Fuck off.\" The mumble came from underneath a mound of blankets on the bed. I reached over and pulled, making Aedan scramble to catch one and hold it over himself like a shield. \"What are you doing here? Get out!\" \n\n\"Your boyfriend woke me from my well-deserved sleep; you can blame him.\" \n\n\"Sierra, seriously, get out. I'm naked!\" \n\n\"I gathered. You have a blanket, so just relax.\" \n\nHe flopped back on the bed, groaning theatrically. \"I hate you.\" \n\nI sat on the edge of the bed. \"I told you, blame Zev. He even tried to get a peek at me naked, I think. Got an eyeful of Alistair instead.\" \n\nHe groaned again. \"I didn't need to know that!\" \n\nI laughed. \"If I can handle the thought of you and Zev, you can cope with me and Alistair. Hey, at least we're going to be legitimate, one of these days...\" \n\n\"Zev and I are as legitimate as we're likely to get.\" \n\n\"I know. Stupid. Why won't the Chantry let two men marry? No one else gets their knickers in a knot about it here, why should they?\" \n\n\"Could we not discuss this now, while I'm, you know, naked?\" \n\nI chuckled. \"Fine. Look, I just wanted to see how you're doing. We haven't had a chance to talk much lately.\" \n\nHe sighed. \"You mean, am I okay with you and Alistair and the whole marriage thing.\" \n\n\"Well, sure, that, but also just in general. With Duncan like...\" I just couldn't continue that sentence. \"Well, a lot more responsibility is falling on your shoulders again.\" \n\n\"I'm fine. Really. It's not the first time I've had to lead, and it won't be the last. I'm even trained for it. And, for the record, I'm fine with you and Alistair, though I will murder him if he does something stupid to hurt you again. As long as you don't share the details about your sex life, I'm good.\" He sat up, taking my hand. \"I'm happy for you, sis. You deserve to be happy.\" \n\nI hugged him tightly and then stood. \"You need to get measured for arming clothes, I've been informed. So get your ass out of bed, will you? If you don't, I'm sending Sten in here next.\" \n\nHe threw a pillow at me that bounced harmlessly off onto the floor. I stuck my tongue out at him, and he laughed. \"Fine, fine. I'll be down in a few minutes.\" \n\nI left him and went to find Duncan, who'd pulled rank, been measured first, and was waiting for me. \"Sereda told me the name of a weaponsmith who might be able to make a - what did you call them? Bola launcher? If you're agreeable, we could go now.\" \n\nI agreed. \"But I need to change first. I'm fine with everyone here seeing me in this, but I'm not going out in stained tight cotton trousers. Two minutes?\" \n\nHe nodded, and I headed to my room, stopping to grab a bucket of warm water to wash up with on my way. I scrubbed myself down, changed into a clean, if not fancy dress, put my hair in a ponytail, and met up with Duncan in the dining room. He offered me his arm, and we left together after I received a quick kiss from Alistair. Aedan was at the back of the line for being measured, and waved as I left. \n\nThe weaponsmith, a dwarf named Dallard, was quite possibly wider than he was tall, and he had a shop just off the main market. There were crossbows on display in the front area, but when he showed us unto the back, I stopped, amazed. There were a variety of ballistae, essentially giant spear launchers, as well as trebuchets and other siege weaponry in various states of assembly. And behind that was a range for testing weapons. The place was huge. \n\nDallard looked at Duncan, ignoring me entirely. Duncan explained the problem - bringing down a flying dragon so it could be killed on the ground - and then gestured to me. Dallard looked at me skeptically, and I sighed. \n\n\"Where I come from, there's a weapon called a bola. Essentially, it's a couple rocks tied together with rope. When thrown, the rope will tangle around the legs of a creature and make it fall. I'm wondering if a ballista or something like it can be altered to launch a bola hard enough to tangle around a dragon's wings.\" \n\nHe looked somewhat intrigued, but still confused. He found some rope somewhere, and a variety of what looked like small stone cannonballs. I didn't even ask what they were normally used for. He handed me the rope, which I stared at in shock. I hadn't the foggiest idea how to make a bola, really; I'd only seen them in National Geographic television specials about South American aboriginal cultures. \n\n\"Um, okay well, keep in mind I've never made one of these before. I've only seen pictures. But if you can tie a rock to the end there? And I'll tie one here...\" \n\nIt turns out that tying a rock on the end of a rope is harder than it sounds. In the end, I tied two loops, forming a little basket to hold the rock. Dallard did something similar on his end. \n\n\"Okay, so if I remember correctly, you hold the rope in the middle,\" I hoisted the heavy rope, \"swing it around like this, and then throw it in the direction you want it to go.\" \n\nI tossed the rope towards a practice dummy, missing entirely; Dallard laughed, and even Duncan chuckled. \n\n\"Fine, smarty pants, you try.\" I retrieved the weapon and handed Duncan the rope. \n\nHe spun it a couple of times, testing its weight, and then launched it towards the dummy. One of the rocks struck the thing dead on, and the other pulled the rope off to the side. He collected the bola and tried again, finally getting the rope to tangle around the dummy like I'd predicted. \n\n\"I've heard you can make them with three or more balls, though why that's better than two I'm not sure. I think, if you add a third rope here,\" I pointed at the centre of the rope being held by Dallard, \"you spin it with the third rock in your hand. Though I could be wrong. And apparently they alter the weight of the rocks, sometimes using uneven weights to make it tangle better. But I thought that if you could somehow load two rocks into a ballista-type thing, and fire them simultaneously, you might be able to bring down a dragon.\" \n\n\"And it would need to be mobile, unlike a ballista. Perhaps mounted on a cart, or carried by hand. Maybe more like a crossbow than a ballista?\" Duncan added. \n\nDallard was nodding, but by the vacant look on his face, I could tell he wasn't listening. He was thinking. He fiddled with one of the rocks, lifting the rope to test its weight, maybe; I wasn't really sure, he could have just been fidgeting. Finally he turned to me. \n\n\"How much do you want?\" he asked, his voice rough and gravelly. \n\n\"Uh, pardon? How many of them do we need? I don't know. I guess it depends how hard they are to make, and how big they are-\" \n\n\"No. How much do you want to sell me this idea? Exclusively, obviously. I won't pay for something you're going to sell to others.\" \n\n\"I, uh, Duncan?\" \n\nI turned to Duncan, confused; his expression was amused, and he appeared to be holding in a laugh. \"I forget you've never dealt with dwarves before. Would you like me to negotiate for you?\" \n\n\"Please?\" I don't even know what you're negotiating for. \n\nDuncan turned to Dallard. \"How much do you think you can sell a unit for?\" \n\n\"Well, that depends on the demand, I suppose. Won't be that much need - Nevarrans, maybe, and Grey Wardens, obviously; might be able to adapt the design for more conventional uses as well, I suppose.\" \n\n\"Come now, my friend. How much?\" \n\n\"Perhaps...ten sovereigns per unit?\" \n\n\"So twenty, then.\" The dwarf grimaced, and Duncan smiled. \"And that means at least fifteen of that is pure profit. I'd say twenty-five percent of the profit might be a reasonable starting place...\" \n\nI tuned it out as the men haggled. I wasn't trying to make money on the deal, I just wanted to increase the chances of my family escaping a battle with the Archdemon alive. I examined the other weaponry mindlessly while they debated. Finally Duncan came over to me. \n\n\"You have a choice. You can take a lump sum payment now of two hundred fifty sovereigns, or you can take three sovereigns per unit he is able to sell for perpetuity. It's up to you.\" He dropped his voice and whispered, \"If I were you, I'd take the three sovereigns per unit. It'll take a while to get the same amount of money, but based on how hard he's pushing the lump sum, he knows he can sell much more than that.\" \n\nI was shocked. Two hundred fifty sovereigns was an enormous fortune. That was probably the equivalent of millions on Earth. And some dwarf was going to hand me that much based on an idea alone? How did a random weaponsmith even have that much coin? But then...if I took three sovereigns per unit sold, that could provide me a solid income for years. I'd be less likely to lose it, have it stolen, or use it all and be left poor. And I might make more in the long-run... \n\nHow does telling someone else about an idea that wasn't even mine make me rich? This isn't supposed to be that sort of fairy tale. \n\n\"Throw in a handful of the launchers for the Grey Wardens, and I'll take the three sovereigns per.\" \n\nDallard grimaced, but nodded. \"I'll do you one better, missy. Instead of giving them to the Wardens, I'll sell them to her Highness Queen Sereda for her army, and even train some of her men to use them. She can bring them to the surface when the army leaves to combat the Blight, and you and I can make a little profit off it while we're at it.\" \n\nI laughed. Duncan nodded, so I agreed as well. \n\n\"Now remember, we have an exclusive deal. You can't sell this idea to anyone else.\" \n\nThat was an easy promise to make. As long as the Archdemon was defeated, the rest was just gravy. \n\nThe measuring had all been done by the time we arrived back at the estate, and we had a surprise guest: Sereda. She was wearing fine clothes - trousers and a jacket that looked surprisingly feminine while still being more practical than a dress - and was lounging in the dining room, talking to Aedan and Gorim while everyone ate dinner. Duncan joined them, while I cornered Leliana and began stuffing my face. \n\nI gestured to Sereda. \"Leli, could I pull off that outfit?\" \n\nLeliana, sitting with an armful of rather smug-looking nug, inspected it critically. \"If the design was altered for your slighter frame, I suppose. You want something like that?\" \n\n\"Eventually, I think. Everyone keeps telling me I have to accept being a noblewoman, but I hate all those stinking dresses. I need something different, something still stylish, but not so...girly.\" \n\n\"I'll work on it, my friend.\" \n\n\"Thanks, Leli.\" I stopped, looking around. \"Hey, where's Solona?\" \n\nAs one of so few female companions, her absence stuck out. \n\n\"I think she and Anders are talking. Up in the library.\" \n\n\"Oh, Maker, I'd better go check that she hasn't lit him on fire.\" \n\nI kissed Alistair briefly, then headed upstairs. I walked down the hallway, listening intently for voices. I didn't want to interrupt if the discussion was going well, but I wanted to be able to intervene if things got ugly. \n\nNo one was in the library when I arrived, however; deciding against looking any further, I grabbed a book on griffons and curled up on a chaise in the back corner. There was a little alcove, lit by an arcane lamp similar to those at Soldier's Peak, and a comfy chair. I could almost believe I was on Earth, sitting in my tiny spare room surrounded by my books. \n\nMy mind wandered as I flipped through the griffon book. My ring caught the light and sparkled brilliantly, and got me thinking about my wedding. Which was sort of surreal - how did one even plan a wedding in Thedas? We haven't discussed dates, and I assume we'll wait until after the Blight, but perhaps Alistair wants to do it sooner? I daydreamed for a little while, about a time when the darkspawn were quiescent, and Alistair and I could live quietly, with our friends and whatever new Wardens we could acquire, just being normal for a brief time. \n\nWho am I kidding? We'd get bored in a minute. Still, the concept held a certain appeal, to be sure. \n\nAs I sat not really reading, I heard raised voices, but couldn't make them out until they were right outside the library door. \n\n\"...trying to protect you, 'Lona,\" Anders was saying. \n\n\"Protect me? I fail to see how this story has anything to do with me.\" Solona was in tears, I could tell, and my heart ached. They came through the library door, but hidden as I was in the alcove and dwarfed by the chaise, they didn't notice me. I debated - should I stand up, announce my presence, and try to sneak away unobtrusively? I didn't want to - the two were finally talking, after Maker-knew how long, and I wasn't about to interrupt. I decided to slump down even further and breathe very, very quietly. If I get caught, I'll pretend to be sleeping. \n\n\"Danielle would have done anything to protect me. It was the same for me with you. Do you really think the templars would have hesitated to use you to get to me? They'd have threatened you, maybe thrown you in solitary, maybe tortured you...do you really think they'd have hesitated to make you Tranquil if they thought it would get me to cooperate?\" \n\nHis voice wavered. \"I wanted to find a way for both of us to get out of there, Solona. But I couldn't do that without escaping. And if the templars knew how I felt about you, they'd have used you to trap me. I'd have been made Tranquil, and maybe so would you, or maybe you'd just be trapped still. But I was too selfish to stay away from you...so my only alternative was to make them think you were just a casual fling. Like everyone else.\" \n\n\"I was just a casual fling to you, Anders, don't you see? If you loved me at all, you'd have told me what you were up to, and we could have found a way. Together. But it was always just about you, wasn't it? You wanted out, you wanted me, you wanted free reign to have sex with whoever caught your fancy...I heard the stories, you know, from the other girls. Even some of the boys. About Anders and his marvellous technique, or his magic tongue. You left a string of broken hearts behind you every time you escaped, and mine was only one of many.\" \n\n\"Solona, I-\" \n\n\"Just stop, Anders. Stop. I can accept that you thought you loved me. All that means to me is that you don't know what love is. And I don't know what's worse.\" ",
        "I heard rustling, as though someone had stood in a rush, but then a grunt, and...kissing? \n\n\"I love you Solona. I made mistakes, made the wrong choices...I won't walk away now. I don't know how to make you believe, but maybe this will show you.\" \n\nI rolled my eyes. Leave it to Anders to try to fix his mistakes with kissing. \n\nAnd then I realised it seemed to be working. There was more kissing, and a soft moan, followed by a thud and an oath. When I heard a voice next, it was clear that it came from someone laying on the low coffee table in the middle of the room. \n\n\"This isn't me forgiving you.\" Solona sounded amused, but still angry. An odd combination. \n\n\"I know. And I don't expect you to. I just want to remind you how I can make you feel.\" \n\n\"Sex was never the problem we had, Anders.\" She sounded more angry, but broke off with a ragged gasp. I heard some more rustling, and the sound of wooden table legs protesting their mistreatment, and then Solona's robe came flying carelessly over to land on the settee near my feet. I jumped, but managed to stifle my startled squeak and stay quiet. \n\nI felt magic flare - Anders, by the feel - and suddenly Solona was panting and moaning continuously. I risked a peek over the top of the chaise to see Solona reclining, naked, on the table, spread-eagled, while Anders knelt on the floor, leaning over her. His hands roamed her perfect, pale skin, stopping to tweak a nipple periodically; sparks shot out from his hands to run along her skin, covering her with brilliant, flashing spots of white light that looked like tiny jewels embedded in her skin. She gasped and writhed as his fingers meandered from her shoulders to her knees, skipping only over her core as the sparks followed in trails behind his hands. \n\nI should have known that if sex magic was real, Anders would be the one to have figured it out. \n\n\"You're so beautiful, my darling Solona,\" Anders murmured, and I was forced to agree. Slightly more rounded than I, her figure was curvy in all the right ways, her skin alabaster and flawless except for a light smattering of freckles over her chest and shoulders. Her nipples were rosy and jutting up proudly, her hands with long, beautiful nails clenched at her sides, her perfect toes curled as the magic stimulated her, and I was suddenly, surprisingly green with envy. \n\nSolona arched her back, gasping, lifting her legs up onto the table, spread wide, opening herself to Anders' gaze. She whispered, \"Just shut up, Anders. Better yet, I can think of a much more appropriate use for that mouth of yours.\" She reached out and ran her fingers through the blond mage's hair, loosing it from the leather thong it was tied back with, and then pulled his face towards her slit. He licked his lips, not at all reluctant, and I ducked back down as she squealed. \n\nIt suddenly occurred to me that I was blatantly watching two of my friends making love, and instead of being disgusted or embarrassed, or even worried about how this would play out for them, I was horrendously aroused. Though my intentions had been good, I should have been mortified at what I was witnessing, but all I could do was rub my thighs together, wanting some sort of stimulation but too afraid to move lest I be caught in my unintentional voyeurism. \n\nFrom the sounds I couldn't block out, Anders was humming with enjoyment as he performed cunnilingus, and Solona's gasps and cries of encouragement indicated he was good at it as well. I listened, tormented with arousal, as he teased her over and over, bringing her close to her peak - based on the heavy breathing and string of chanted curse words - again and again without allowing her the release she so clearly wanted. I began chanting in time, internally, wishing for it to be over so I could escape, though I wasn't sure whether I wanted to just get away, or get enough privacy to soothe the burning ache in my core. \n\nSolona finally orgasmed, her cries muffled by her hand, and she panted and shuddered through aftershocks as Anders noisily suckled on her flesh and then slowly withdrew, allowing her to settle. She uttered a shaky laugh and the table groaned again as I assume she stood. \"You certainly haven't lost any skills,\" she giggled, and Anders snorted in amusement. \n\nA slender hand came into view and grabbed her robes; I uttered a - strictly internal - sigh of relief that she didn't look behind her as she retrieved the garment. I heard more rustling as she got dressed. \n\nAnders finally spoke. \"Solona, I-\" \n\nHe stopped, and I figured she must have gestured. \"Don't make this out to be more than it was, Anders. Nothing has changed. I'm sorry I let this get out of hand - it was a mistake. I can't...\" I heard her voice crack, and then she regained control. \"It was just sex. I hope you got some enjoyment out of it as well.\" \n\nHer voice sounded further away as she continued. \"Goodnight, Anders.\" \n\nAnd then she was gone, and shortly thereafter I was alone in the library, and desperately, desperately in need of Alistair. \n\nI took a moment to compose myself, and then headed down to find out where my fianc\u00e9 had gotten to. I found him playing cards with Faren, Leli, Aedan, and Zev in the main hall, and losing. Not badly, he still had a pile of coins beside him, but it was much smaller than Aedan's and a little smaller than everyone else's. I pulled over a bench to sit beside him, and he looked over, still distracted by his hand. \n\n\"Hey, Love. You here to help me stop losing at cards?\" \n\n\"Not precisely, no.\" \n\nHe looked at me more carefully, and frowned thoughtfully. \"Are you alright?\" \n\nI licked my lips, antsy but not wanting my agitation to show. \"Yup. Don't let me interrupt you.\" \n\nHe stared at me for a few more seconds, and I watched as his gaze travelled across my face before settling on my eyes. I must have looked strange, or something, because his eyes darkened, and without a word he dropped his cards on the table. \"I fold.\" \n\nThere was good natured grumbling at that pronouncement, which he ignored to climb off the bench he was sitting on, offer me a hand, and escort me towards our room. It took all of my willpower not to run. \n\n\"You didn't have to stop on my account.\" \n\n\"I was just wasting time waiting for you, anyway. And you looked like...you sure nothing's wrong?\" \n\nWe reached our room as he asked, and I avoided answering until he'd kicked the door shut behind him. And then I was on him, slamming him against the door, up on my tiptoes, arms wrapped around his neck, pulling him into a deep kiss. His arms wrapped around me reflexively, and I moaned my approval as he held me close. I explored his mouth with my tongue, teasing and stroking his own, nipping his lower lip with my teeth. \n\nHe broke away with a gasp. \"What in the world has come over you?\" \n\nI didn't bother answering, capturing his lips again. With one hand I began undoing laces on my dress, and I stopped only briefly to toss it off over my head before kissing him again. I attacked his clothes next, getting my hands on his torso and stroking his warm skin before pulling the shirt over his head, then going for the laces on his trousers. \n\nHe was hard and ready for me, when I snaked my hand inside to grasp him; he may have been confused, but his body was more than willing. He groaned as I pumped him slowly, teasing him, then whined as I let go to wrap my arms around his neck again. I hitched my knee up by his hip, and he took the hint; he reached down and lifted me, holding me to him as I wrapped my legs around his waist. His hands gripped my panty-clad ass, which served to inflame me more as his bulge pressed against my mound. He stumbled over towards the bed and dropped me on it; I shucked my panties and slid up onto the pillows while he divested himself of trousers and smalls both. He climbed onto the bed and crawled towards me, and I reached up to run my hands through his soft sandy hair. \n\nI was never comfortable with dirty talk, as much as Zevran claimed it was part of the enjoyment of sex; it was awkward and I felt like an idiot when I tried. Which meant that I didn't really know how to ask for what I wanted, even though I definitely knew what it was I wanted. I tugged his hair and whispered, \"Please.\" \n\nHe leaned over to press a kiss to my belly, drawing a gasp. \"Please what, Love?\" His expression was mischievous, telling me he knew exactly what I wanted, but he was going to make me say it. \n\nI pulled his hair again, guiding his head down towards my aching centre. \"Please, Alistair.\" When he just looked at me, blinking slowly, I sighed. \"Please, lick me.\" \n\nHe touched his tongue to the spot he'd just kissed. It was soft, but the texture of his tongue was rough, and it made my heart speed up even more. So close... \n\n\"Like that?\" His grin was evil, full of delight at my discomfort and neediness. \n\nI growled. Fine, I can play his little game. \"Lick my cunt,\" I demanded, \"right now!\" And I couldn't think of it as anything else, in that moment; normally I hated the 'C' word, but it was the only one that felt like it accurately portrayed the deep need inside right then. \n\nHis eyes went almost black, his pupils blown, and he took a shaky breath. Maybe Zevran was right? \"My pleasure,\" he answered, drawing out the last syllable in the word pleasure, rolling the r and dragging a moan of pure animalistic need from my throat. \"Why didn't you just say that in the first place?\" \n\nAnd then I watched as he settled himself on his belly, my feet over his shoulders, and slowly, ever so slowly descended to lap at my drenched folds. \"Someone's eager,\" he commented, licking his lips in apparent satisfaction, and I bucked my hips, trying to get more - more contact, more tongue, more relief from the raging desire coursing through me. \"All right, settle down...\" \n\nHe licked me softly again, then used his fingers to spread me open and ran his tongue from my opening to my throbbing clit. I hissed out a \"Yes!\" and clenched my hand in his hair, tugging it, pulling him closer. He licked again, swirling around my clit, and then delved his tongue deep inside me, over and over again, driving my breath from my lungs and leaving me lightheaded with pure ecstasy. His nose pressed against my pearl, his breath puffing against my sensitive tissues, and I shrieked and thrashed under his ministrations. He grabbed my hips with both hands, holding me down. \n\nImages kept flooding my mind: Solona, ethereal beauty on display as she arched into Anders' touch; Alistair, clothes askew and hair tousled, smiling at me with lust in his eyes; Alistair again, but in a tuxedo, and wearing a wedding ring. My orgasm overtook me and I rode it, unaware of anything around me as white-hot fire raced through my veins. \n\nAlistair climbed up beside me as I came down from my peak, holding me and stroking my skin softly, murmuring words of love as I shuddered through aftershocks. Finally he relaxed onto his back, with me curled up against his side, boneless. \n\n\"So are you going to tell me what that was about?\" \n\nI opened my mouth to decline, but changed my mind. As embarrassing as it was, I didn't want any secrets between us. And honestly, it really was hilarious. \n\n\"I saw Anders and Solona,\" I mumbled. \n\n\"What? Saw them? What does that have to do with anything?\" \n\nI flushed. \"I saw them...you know.\" His eyes widened with realisation and shock. \"It wasn't on purpose! I was reading in the library, and they didn't see me sitting there...and then I wasn't about to interrupt once they'd started!\" \n\nHe chuckled. \"So all this was because you saw Anders naked?\" His expression was amused, to my surprise; I'd expected anger, or maybe jealousy. \n\n\"Maker no! He was fully dressed. She was naked, and he...and it just made me, well, need you. Immediately.\" \n\nHe laughed then, a full belly laugh. \"You know, when Zevran said that at brothels like the Pearl you can actually pay others to have sex while you watch as a form of foreplay, I thought he was joking. But if it gets these sort of results, I guess maybe he was right.\" \n\n\"You're not upset?\" \n\n\"Why would I be upset? Unless you plan to leave me like this...\" He gestured down at himself, and I glanced down to see his impressive erection standing straight up, bobbing with his heartbeat. \n\n\"Me? Never.\" I leaned up to kiss him, and then swung my leg over, straddling his hips. I sank down on him in one swift move, hissing in pleasure at being filled, and proceeded to ride him until he came, triggering my own orgasm and leaving me collapsed against his chest, exhausted. \n\nChapter Ninety: Confession \n\nOnce I had recovered again, I began to feel guilty. Not only had I - unintentionally, but still - watched my friends being intimate, which was entirely inappropriate, but afterwards instead of consoling her when I knew she'd be upset, I couldn't even control myself for five minutes without having sex myself. Despite my total lassitude and complete lack of a spinal column, I sighed and sat up. \n\n\"Love?\" Alistair sounded half asleep, and I smiled at his drowsy frown. \n\n\"I'm fine. Have a nap - I'm just going to go check on Solona.\" \n\nHe rolled to his side, watching me get dressed with dark eyes. \"Check on her?\" \n\n\"Ha, whoops, I didn't tell you the rest of the story. It wasn't make-up sex. It was...I don't know. Solona was telling him off, and then he kissed her, and then they, well, you know...And then she told him it didn't mean anything, that it was a mistake, and left him there. She hasn't forgiven him, not by a long shot.\" \n\n\"But then...why?\" \n\n\"I don't know. To say goodbye? To show off what he can't have? Because she was lonely? I'm not sure. What I do know is she isn't going to be feeling good right now.\" \n\n\"Want me to come with?\" \n\n\"Thanks, but no. I think a little girl talk, perhaps.\" \n\n\"I love you.\" \n\nI leaned over, now fully dressed, and kissed him. \"Love you too.\" \n\nI snuck up to Solona's room, hoping not to be seen; I didn't want anyone prying into what had happened. I knocked on the door, and there was no response. \n\n\"Solona? It's Sierra. Can I come in?\" \n\nThere was a pause, and then the door opened just a little. I went in, closing it behind me, to see a red, swollen-eyed Solona standing by the door, her hair a mess, wearing just a nighty and clinging to a blanket. She looked so vulnerable, so pitiful, that I just walked up to her and pulled her into a hug. She stiffened for a moment, then relaxed and started sobbing on my shoulder. I let her cry, rubbing her back lightly. She stuttered out apologies a couple of times until I shushed her and led her to the bed. Her arms were freezing cold, so I took the blanket from her hand and wrapped it around her, then sat down beside her. \n\n\"I know what happened. It's okay.\" \n\n\"You do? How do...he told you?\" Her voice skipped about two octaves up, and I briefly worried she'd shatter any nearby glass. \n\n\"No, no, of course not. I don't imagine he'll talk to anyone about that.\" \n\n\"Then how?\" \n\n\"You don't want to know. Just trust me.\" She blushed, and I gathered she'd guessed that I must have seen her. \"It doesn't matter. I just figured maybe you could use a friend?\" \n\nShe nodded, sniffling miserably. \"I don't want to be a bother...\" \n\n\"Hey, it's no bother. We're friends. Sisters-in-law, even, since you're my betrothed's 'sister'.\" Of course, she was mine as well, being a Warden too, but we hadn't admitted that to anyone yet. \"Did you know, you, Morrigan, and Leliana are the only girls I've ever been friends with? I really don't mind.\" \n\nShe smiled, a small sad smile, and then fell quiet. I waited for her to rage or vent, but nothing came out for a couple of minutes. I was about to ask if she wanted me to go get Leli instead, when she finally began. \n\n\"That bastard!\" The exclamation was loud and sudden, and made me jump. \"He got me feeling sorry for him, for Andraste's sake. I actually felt bad for being angry, for not just leaping into his arms, when he's the one who cheated. He's the one who fucked anything that moved.\" \n\n\"I know, Solona. I know. There's no question he's a complete moron, and you are perfectly within your rights to hate him. Just because something bad happened to him, doesn't mean he has an excuse to hurt you like that. Which just begs the question...why? Why tonight?\" \n\nShe sighed. \"I was lonely. Missing basic human contact. Don't get me wrong, you're all nice, but it's not the same. I let him kiss me, and then got swept away like I always have.\" \n\nI sat back quietly, waiting for the rest of the rant, trying to be a good listener instead of the one spouting off. \n\n\"I think I remember when it happened.\" She sat back, expression distant. \"We hadn't been together long. He'd been with other people before me, I knew that; there was one guy, Karl, who I knew had feelings for him before he got transferred. There was an uproar in the tower, not that I ever heard any details, and after that he was a bit...needy. He got paranoid about getting caught by the templars. And sometimes he'd cry, after we...when he thought I was sleeping. I thought he missed Karl.\" \n\n\"I think he's always played it a bit close to the chest. If no one knows him, no one can hurt him.\" \n\nShe nodded. \"Yes. It didn't matter to me; I loved him. He was so kind, so caring; a little possessive, which is why I assumed it would only ever be the two of us. Until it wasn't.\" \n\n\"What would you have done if he'd come to you and told you his plan? To escape?\" \n\n\"Gone with him,\" she replied, without hesitation. \n\n\"And what do you think would have happened if you had?\" \n\nShe laughed, a dry cackle that didn't sound at all humourous. \"Oh, we'd both have been caught. Likely separated to different Circles, maybe made Tranquil...I'm not sure even Irving could have saved us.\" \n\n\"And maybe that's...\" \n\n\"I know.\" She sighed. \"He's right, of course. They would have used me against him. Punished me for his crimes. And I'd have hated it - he'd have stayed for me. He wasn't meant to be caged, I don't think. In fact, it won't be long before he starts seeing the Grey Wardens as a prison too. His greatest care is his own personal freedom.\" \n\n\"It won't always be that way.\" \n\n\"No? You seem pretty sure about that.\" \n\nI'd thought about this a lot, and realised that the only way to prevent Anders from starting the end of the world was to have someone else on my side. Someone who cared enough about him to want to help instead of eliminate the threat. I couldn't rely on going it alone; I could die, and then nothing would prevent Anders from merging with Justice. \n\n\"I am. He...in the game, he makes a friend, eventually. A spirit of Justice, brought unwillingly through the veil and forced to reside in a human corpse. He develops a need, a cause, I suppose, to free all mages; Justice agrees with him, and he allows Justice to possess him, since the body he's inhabiting is decaying. They - the two of them - start a mage rebellion.\" \n\nShe was looking at me like I had two heads. \"Anders? The healer, who's never physically hurt anyone? The one who thinks blood mages are worse than templars? The same Anders who was caught last time because he spent too long having his fun in a brothel in Denerim? Anders, who only wants 'a pretty girl, and the right to shoot lightning at fools'?\" \n\nI laughed. \"Maybe it's the lightning part that pushes him over. I don't know. But you're right about him seeing the Grey Wardens as a cage. That's part of it too. And the fade spirit, Justice, when exposed to his anger, essentially turns into a demon of Vengeance, so that doesn't help either.\" \n\n\"The mage rebellion - it doesn't end well, does it?\" \n\n\"How could it? He kills hundreds of innocents to start the rebellion. The Knight-Commander declares the Right of Annulment on the Circle even though Anders wasn't a Circle mage and admitted to the crime right in front of her; there's a battle, half the mages turn to blood magic or become abominations...and then other Circles start rising up. The templars break themselves away from the Chantry, deciding it is too lenient on mages, and start hunting down and killing mages, while the mages retreat and hole up to try to defend themselves. I don't actually know what happens in the end - that part hadn't been written yet when I left. But I can't imagine it's good...\" ",
        "\"I thought you...Leliana said you told her it was a templar who caused the war.\" \n\n\"It was, sort of. It's a long story. The Knight Commander in Kirkwall is, well, crazy, and then she gets exposed to toxic red Lyrium and completely loses it. Starts making Harrowed mages Tranquil for tiny transgressions, allows her templars to abuse them...it gets really ugly. A bunch of mages turn to blood magic because it's that, Tranquility, or death. What Anders does is in response to that. I've warned Greagoir about it, and I'm hoping he can find a way to do something about Meredith before it gets that bad. And I've recruited Anders early, before his next escape would have been in the game, hoping to change what will happen in the end. Also, if I have any say, Justice will never be released from the Fade. But I have realised that there are too many balls in the air right now, and if something happens to me, it'll all come crashing down.\" \n\n\"He doesn't know?\" She looked appalled, and I flushed, feeling defensive. \n\n\"I didn't want him to have to live with thinking that's inevitable. And I didn't tell anyone else, because I didn't want them judging him for something he hasn't even done yet. I decided...I know you're angry with him, and with good reason, but despite that I knew you might be the only person who wants to just change his future instead of killing him on the spot to make sure it never happens.\" \n\n\"Why don't you want to kill him? It seems like the easiest solution, for someone who has no reason to care.\" \n\n\"Solona, he's my friend. Even in the game, he was my friend. Underneath the rage and what Justice does to him, he's a good person, if a little misguided.\" She gave me a look, and I chuckled. \"A lot misguided, then. But he doesn't deserve death for wanting mages to be free from abuse, free to use their powers without being treated like plague-carriers. We just need to make sure Vengeance never exists, and then perhaps he can help reform the Circles or something, instead of starting a war. And if Meredith can be removed before she can do too much harm, and maybe we can make sure she never gets the Red Lyrium, that should calm things down too.\" \n\n\"I just...\" she trailed off, biting her lip, and then abruptly punched me in the arm. \"Why did you wait so long to tell me? It would have been so much easier before we...before I let him back in, even a little.\" \n\n\"Aha, so you admit you let him in?\" \n\n\"Of course I did. I'm not a complete idiot - I can see clearly enough to know how spectacularly... What's that term you used? Oh yes, screwed. I know how screwed I am. I hold no illusions that he's not going to worm his way back into my good graces eventually. Not that I'm letting him in willingly, but I've never been able to say no to him. Tonight I was supposed to be telling him off for good, and look where that got me! If he persists - and I think he will - he'll succeed again, and again. Making me laugh, making me want...and then I'll take him back, eventually. \n\n\"It's not that I don't understand why he acted like that, after what happened with Danielle. He told you about that?\" I nodded, and she continued, \"Things like that happen in the Circle, and it causes trauma for everyone around, not just those directly involved. Love is a liability when you live in a cage. But as much as I wouldn't want to be the reason that he stayed miserable in the Circle, I resent him leaving, too. It's not rational, but it's there. If he really loved me, shouldn't he have stayed to be with me? Or let me risk coming with him?\" \n\nShe sighed, pushing her blond hair out of her face irritably. \"I will help, in any way I can. Tell me what I can do to stop him, and I'll do it.\" \n\n\"Thanks, Solona. We've got some time, so when we get closer, we'll talk. But I really do want to keep this from him, if possible. No one should have to live with that hanging over their head.\" \n\n\"I agree...for now. I'll think about it, but if at some point I think he should be told, will you agree?\" \n\nI studied her tear-stained face for a few moments. \"Okay. You know him better. You can decide if he needs to know.\" I touched her shoulder sympathetically, and she smiled tiredly. \n\n\"The one good thing about what happened is I'm likely to sleep tonight, for a change.\" \n\nI laughed and grinned, and she chuckled back. \n\n\"He does love you, Solona. He's dumber than toast, I admit, and he needs a good swift kick, but he does love you. I hope that's at least some consolation.\" \n\n\"I know. Sometimes...it just feels like sometimes that's not enough.\" \n\nI gave her a last hug, tucked her into bed with her quilt, and blew out the candle, closing the door behind me as I left. Two steps out into the hallway, I turned to head towards the main hall and a snack, when I caught a glimpse of long blond hair booking it around the corner in front of me. I glanced at Solona's door and decided against calling out to the mage, instead hustling down the hall to catch up. When I turned the corner I'd seen him rounding, I deemed myself far enough away from Solona's door to risk it. \n\n\"Anders!\" \n\nHe'd almost made it to the stairs down, but he paused to let me catch up, schooling his features to impassivity, regarding me with vague curiosity. He's going to try to pretend he wasn't listening outside Solona's door when he's been caught red-handed? Impossible! \n\nI stepped up beside him with a vapid smile, then reached up and grabbed his ear, like I used to with the foster children I was tasked with taking care of as a young teenager, and pulled his head down to the level of my ear. Damn tall people! \n\n\"We need to talk, Anders.\" My tone was menacing, and my expression had morphed to one of righteous fury. Anders blanched, but nodded as best he could with my grip still on his ear. I released him and turned to head back toward the library, before pausing. I didn't need the reminder of what he'd been up to earlier. I turned back to him. \"Your room,\" I demanded, and he gestured listlessly without objection. \n\nOnce in his room, I turned to him, eyes flashing with rage. \"How much did you hear?\" \n\n\"Nothing,\" he grumbled, looking like a petulant child. \"Door was too thick and I knew you'd feel it if I eavesdropped with magic.\" \n\n\"Oh stop sulking, you big baby. You're just mad you got caught without at least being able to get anything out of it first.\" \n\nHe smirked at that, and I growled. \n\n\"Anders, what the hell were you thinking?\" \n\nHe looked up, surprised and defensive. \"What do you mean?\" \n\n\"Don't play stupid. You aren't a good enough liar. I know, Anders. I was there.\" He looked confused at that, and I sighed and rolled my eyes. \"I was in the library earlier, reading.\" \n\nHis look of confusion slowly changed to horror. \"You saw that?\" \n\n\"Yes. So I repeat, what the hell were you thinking? Honestly, you have to be the stupidest man I've ever met. I thought you were supposed to be good with women?\" \n\n\"That's what it said in your performance, did it?\" he asked, obviously trying to change subjects. And then he smirked again, enraging me. \n\n\"Yes, I suppose it is. But considering that, in the performance, Solona was either dead, Tranquil, or in Aeonar, I guess you could be a little more carefree with your affections.\" It was a cruel blow, and I knew it, but he needed to hear it. \n\nHe paled, and then sat heavily on his bed, burying his face in his hands. \"I should have been there. I could have stopped her. Gotten Jowan out somehow else, without her getting caught. Damn Greagoir! Damn Jowan to the void!\" \n\n\"Right, because that's the biggest issue here right now. Seriously. Sex, to fix your screwed up relationship? That's what you thought was going to help?\" \n\n\"I wasn't thinking, okay? It wasn't exactly a plan. It just...happened.\" \n\n\"I think sex 'just happens' to you a lot, which is exactly the problem. Asshat.\" \n\n\"Did you just call me an asshat?\" \n\n\"It's like if you wore your own ass as a hat. It's fairly self-explanatory, I thought.\" \n\n\"I gathered that, thanks. Anyway, you notice she didn't say no!\" \n\n\"No, she didn't. She's lonely, and she hates herself for allowing it. That's what you gave her today - a reason to be disgusted with herself. If you want her back...actually, wait. Do you want her back?\" \n\n\"Yes, of course.\" \n\n\"Not of course. You need to put some thought into this, you idiot. Do you really, truly want her back? Knowing it's going to take a lot of work, and you may not succeed? Knowing that if you succeed and then screw it up again, I'll track you down and kill you myself? Only one woman for the rest of your life, to spend your entire life trying to make happy? Do you want her back?\" \n\n\"Yes.\" His pale face was earnest, his expression sincere. \"More than anything. I would do absolutely anything. Whatever it takes.\" \n\n\"Can I make a suggestion?\" \n\n\"Like I could stop you?\" He quirked a smile, and I turned away, irritated. \"Wait. No, please, tell me. I'm obviously hopeless at this. Tell me.\" \n\nI sighed. \"Why don't you start by trying to convince her that you don't always think with only the little head? No sex jokes. No offers. You find yourself alone with her, you restrain yourself to kissing her hand, and not the rest of her.\" He flushed. \"Even if she doesn't say no, it's not what she needs from you. She needs to know you can keep your dick in your pants, be trustworthy and reliable and helpful, not lecherous. She's a pretty girl - she's got enough men ogling her. No whores, no other women - or men, for that matter - that she has to wonder about. Why don't you try being her friend, and letting her learn to trust you again? Talk to her like she's a person. Spend time with her. And then see if you can patch things up after that? Let her come to you when she wants to be intimate, not the other way around.\" \n\nHe had regained the colour in his face, flushing when I mentioned the whores; at least, he looked like he'd listened to my little diatribe. I blushed slightly thinking about how preachy I'd just been. I'm going to be worse than Wynne! I pushed off the wall I'd been leaning against, stepping up to him and putting my hand on his shoulder. \n\n\"She loves you. If you'd stop being such a jerk, you might be able to fix this.\" I took my hand off his shoulder and slapped him upside the head once, hard; he swore and rubbed his scalp ruefully. \"That's for using sex as manipulation. And for not checking to see if the library was empty before you undressed someone on the coffee table.\" \n\nHe finally chuckled, and I turned to leave. \n\n\"Why are you helping me?\" \n\nI looked back at him over my shoulder. \"Because, despite your apparent intermittent bouts of stupidity, you're not a bad person. You deserve to be happy, and Solona deserves more than what you've given her so far.\" \n\nHe nodded, and I left. I took a deep breath, then headed down to the kitchen. I'd missed supper again. Mistress Leta was puttering about, I guessed readying meals for the morning; I helped myself to a tray, some plates, some bread and cheese, and some leftover meat from supper, piling enough sandwiches on the tray to feed three starving bears, or two Grey Wardens. Mistress Leta handed me a bottle of wine and a couple of glasses; piling it all on my tray, I headed back to my room. I ran into Aedan and Zev with a few of the other Wardens on their way out to Tapsters; I waved off the invitation and gave Aedan a kiss on the cheek. \n\nI backed through the door to our room, my hands full with the tray; I set it down on a table to find Alistair awake, standing beside the bed, getting dressed. He wore only his low-riding pants, his tunic held in his hands; it was a look that never failed to arouse me. His skin was golden in the firelight, scattered white scars over his torso providing a startling contrast, his muscles flexing and bulging underneath, a light trail of hair leading from his slightly furry chest down past his navel, disappearing below his waistband. \n\nHe looked up at me and smiled. \"I was just going to look for you. Oh, you brought food? Perfect.\" He stopped, taking in my slack-jawed appreciation of his half-naked form, and dropped the tunic on the bed with a smirk. \"So, food later, then?\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-89-90"
}