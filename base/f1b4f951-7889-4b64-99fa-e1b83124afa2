{
    "title": "Second Coming - My Second Visit",
    "pages": [
        "After my first experience at the glory hole I kind of told myself that it was a onetime thing. It had been a fantasy and I checked that particular one from my list and that was that...or so I thought. As it turns out every time I drove anywhere near that dirty old bookstore I would think about that night and about all those hard stranger cocks and how it good it felt to have all that attention. Just driving past caused a twinge between my thighs.\n\nI would think about Gwen's Daddy and his huge cock and about how Gwen had unknowingly went down on him. I would start to wonder if she had been back, and if so, had she sucked him off again? Maybe he fucked her through the hole? Maybe he busted a load inside his daughter's cunt just as he did mine!\n\nIt was about 3 or 4 weeks after my first night before I would finally return. I just couldn't help myself so once again I dolled myself up and made the drive out to Route 6. The closer I got the hornier I got and by the time I pulled into the parking lot my pussy was salivating. The sound of my heels clicked against the black-top as each step brought me closer and closer.\n\nI dressed more on the sluttier side this time, so much to the point that it had to be pretty obvious as to why I was there. Clunky platform heels, fishnet thigh highs that stopped several inches short of my skirt, a red satin thong that matched the corset that was currently trying it's best to contain my breasts. I looked like a whore and that was what I was going for.\n\nThe guy at the door asked for my I.D. same as last time. I was a little put off. I guess I expected him to remember me but I figure he sees a lot of people on a daily basis. He scrutinized my license more this time then last though. To be fair the first time I was dressed more cute/slutty as opposed to all out slut as I was this time.\n\n\"Just barely, huh?\" he huffed as he handed me back my license. I didn't know what he meant at first but then it dawned on me that he was referring to my age. I had just turned 18 two months ago. I smiled and started towards the back of the store.\n\nIt was still kind of early but there were several people milling about the isles of porn movies and sex toys. It felt like everyone was staring at me and at first it made me nervous, then it made me hornier. I smiled at one man as I passed through the red velvet curtain and into the dark corridor that led to the movie booths. It took a few moments for my eyes to adjust to the darkness but when they did I made my way down to hall a found a door with a red \"X\" one it. I fed money into the machine and selected a movie, an older man with a HUGE cock plowing into a petite teenage girl that was pleading \"fuck me harder Daddy!\". It made me think about Gwen's Daddy again.\n\nThe first time it was almost like I could have cock just as soon as I was ready but this time it seemed to take forever for anyone to occupy the booths on either side of me. Maybe I had chosen one too far down the hall? I was close to switching booths when I finally hear the door next to mine open and then close. The noise of the machine accepting money, a flash of light and the sounds of a porn movie mixed with the one I was watching. I smiled.\n\n\"Cum for me Daddy!\" the girl on my screen begged as the man portraying her Dad shot his load all over her face.\n\n\"Hey what channel is that?\" a deep voice boomed from next door. It took a moment to register that he was talking to me.\n\n\"Um, channel 7.\" I answered.\n\n\"You a girl?\" I guess my voice had given me away.\n\n\"Yeah.\" I quickly answered.\n\nNot a word was said, instead I happened to look at the slot in the wall just in time to see his cock poking through. I couldn't help but moan as I took this stranger's dick in my hand and started stroking him. He wasn't really all that big but he wasn't what you would call small either.\n\nI could feel his pre-cum drooling from his swollen head as I got to my knees and started licking at his throbbing erection. Sliding my tongue around the head, licking up and down the length before taking it into my mouth.\n\n\"MMMM fuck yeah! That's it girl, suck that fucking dick.\" He moaned as I worked up and down his length. I could feel him starting to thrust, trying to fuck my mouth as I bobbed my head up and down his shaft. I managed to get my hand into my thong and work on my needy cunt as this strange man used my mouth.\n\n\"You like sucking Daddy's cock, don't you slut?\" he grunted in obvious reference to the fact that we were watching the same porno. At first it kind of caught me off guard, but then it made me think of Gwen and her Daddy...and then oddly about my own Daddy. \n\n\"MMMM love sucking on Daddy's fat cock.\" I purred and continued slobbering up and down his hardness.\n\n\"MMMM that's it slut! Fuck! Make me fucking cum! Make Daddy pop!\" I went to work with a renewed vigor. My mouth sliding up and down, wetness seeping from the corners of my lips and dripping down my face. My fingers must have been a blur as I frigged my soaked cunt faster and faster.\n\n\"Ungh! Fuck! Do it! Cum! I want your cum!\" I heard myself almost begging as I jerked this stranger off faster and faster until he finally let loose with a thick stream of semen that splashed against my cheeks and then into my mouth. I kept milking him trying to get every last drop until he finally had to pull himself away from me.\n\n\"Thanks.\" He muttered and then I heard the door slam.\n\nI knelt there for a few minutes cleaning his load from my hand and feeling it drip down my face. I thought it best to undo my corset but as I started to I felt a hand touching my back. I spun around to see a hand. I pressed up against it and he roughly groped me through my corset.\n\n\"Hiya.\" I giggled.\n\n\"Well hello there.\" He was pawing at my covered tits roughly then started tugging at my corset so I undid it and let it fall from my body. His fingers immediately dug into the milky flesh of my young tits, paying especially close attention to my hardened nipples.\n\n\"MMMM you like big tits?\" I literally purred as he was pinching and pulling on my nipples.\n\n\"Oh I do, but I wanna feel your pussy.\" To say I was wet was a huge understatement. I backed my ass up to the slot in the wall and felt him pulling my thong away then his fingers roaming all over my shaved mound before finally shoving two fingers deep inside me.\n\n\"Oh fuck!\" I screamed and started playing with my tits as he finger fucked my wet slit.\n\n\"Your pussy get wet from sucking cock?\" he groaned at me from the other side of the wall.\n\n\"YES!\" I screamed as felt him slamming his fingers into my needy cunt.\n\n\"Why? Because you're a filthy fucking whore? Shameless little slut?\" his tone was as rough as his finger plowing my dripping gash.\n\n\"YES! YES! OHHHH FUCK YES!\" I was cumming. I had to put my hands against the wall to brace myself as this stranger finger fucked me into my first, much needed, orgasm of the night. My pressed tighter against the wall and I felt his fingers pull away only to be replaced by what I imagined was his tongue.\n\n\"MMMM tasty little pussy too.\" He moaned while his tongue was sliding up and down my slit and his finger threatened to penetrate my ass.\n\n\"Ohhh fuck yes, do it Mister! Eat me and finger my ass!\" my body was twitching as this man brought me to orgasm again with his tongue. The way I was positioned my tits were kind of hanging down right at the slot on the other side of the booth and I looked down just as a hand was sliding in to grab at them. The sensation of being felt, and used by two unknown men was pushing me over the edge big time and I soon felt my own juices running down my thigh.\n\nMy head was spinning but that didn't stop the one man to shove his cock through the hole and I immediately started sucking on it like it was my last meal. The man on the other side kept liking my cunt then started to tongue fuck my asshole before I felt the head of his dick pushing against my sloppy little fuckhole.\n\n\"Tight cunt for such a shameless whore.\" He announced as he started pounding into my teenage pussy. The man on the other side had just started fucking my mouth so I was just standing there while these two unknown men used me from both ends.\n\nThe man in my mouth forced his entire length in so that his balls were pressed up against my lips. I hear him muttering something but couldn't make out what it was. On the other end the guy fucking my pussy was loud and clear.\n\n\"That's it you fucking bitch! Take this cock! Filthy fucking whore!\" my free hand found my clit and I started grinding it furiously as these two guys used my holes. It wasn't long before the guy in my pussy started beating in the wall almost as hard as he was slamming his dick into my greedy little cunt. I was ready, willing and waiting for him to unload in my pussy so I was disappointed when I felt him pull out. Instinct took over and I spun around and swallowed his cock whole, tasting myself on him. The entire time I continued to stroke the man that was in my mouth.\n\n\"I'm gonna cum in your fucking mouth!\" I heard a groan and the guy started to shoot. I felt it hitting the back of my throat and I tried to keep pace with the sheer amount but there was just so much that it started to leak from my lips. Then, just like that, he withdrew and was gone. I turned back to the other cock and started to suck and slurp on his balls. Then I heard him tapping on the wall.\n\nHis load didn't have near the velocity of the other guy and his cum just sort of flowed from the head and down the shaft to where my lips were nestled against his balls. I felt it coating my face even as he pulled back through the wall. As I knelt there, licking cum from my hand and lips I felt a desperate need to feel it inside me. I had hoped that the one guy would get off into my pussy and when he didn't it left a burning need inside me. I wanted to get fucked again and I wanted to feel a huge load shot into my cunt.\n\nIt was a good 15 minutes before anyone else entered the rooms on either side of me and I had all but given up hope when a nice, thick, long hard cock slowly slid through. I moaned as I saw it and eagerly dropped to my knees to admire the swollen head. I half expected to see two freckles indicating that Gwen's Daddy was here again but when I didn't see them I was content in the thought that this huge cock was going to be inside me.\n\n\"MMMMM such a big yummy cock you have Mister.\" I was holding it up and licking at the base then slowly dragging my tongue up to the head. I could feel him throbbing as my tongue swirled around and tasted his pre-cum.\n\n\"You like getting your cock sucked by slutty little high school girls?\" I purred as I slid my tits around his thick shaft and licked the underside of the head.\n\n\"Oh fuck!\" was all he said so I started taking as much of him as I could. I would take a bit then pull back then take a little bit more as I tried to deep throat his huge dick. I soon found myself wanting to feel his hands on my head, forcing it down...making me take it.\n\n\"MMMM you wanna come over and really feed me your cock?\" again I knew that this took away from the anonymity of it but I needed to feel him being rough and making me take every inch.\n\nWhen he opened the door I guess I half expected for him to be someone I knew. Maybe a teacher, one of my friends Dads (hot) or even a friend of my Daddy's (even hotter) but the reality was that I had never seen this guy before in my life. All I knew was that he was hung, and that was all I needed to know.\n\n\"MMMM well you're a hot little slut, aren't you?\" he stared at me kneeling there as he stroked his massive dick.\n\n\"Uh huh...now come here and fuck my mouth.\"\n\nTwo steps was all it took and his fat cock was once again between my lips. He seemed to hold back and took some encouragement but soon he had both hands on my head and he was pushing himself into my throat.\n\n\"Little school girl slut huh?\" I nodded with a mouthful of cock. He grunted as he pushed another inch, then another until he was rooted in my mouth. I felt a beam of pride having had taken every bit of that monster cock. I looked up at him with tears in my eyes and he had a look on face that said he was enjoying it as much as me...but I wanted to feel it somewhere else.\n\nI pulled back and gasped for air as his dick slipped from my mouth. I know I was drooling all over myself but he seemed to enjoy that. I bit my lip as I slid one hand between my thighs and the other slapped against my tits.\n\n\"MMMMM you wanna fuck me? MMMM feel that big cock inside my little cunt and fuck me like a little whore?\" my panties were still on but I had them pulled aside to show off my pretty pussy. As he was staring at my cunt I was staring at his thick cock, seeing it dripping with my spit.\n\nHe quickly sat down, huge cock standing straight up, and I crawled towards him. I rested my hands on his thighs and my hair fell down as I started to suck his cock again. He pushed my hair away as if to watch this young teenage slut blowing him.\n\n\"MMM fuck this.\" He moaned and pulled me up by my hair. I gasped in shock at his roughness but loved it all the same. This was what I was here for after all, to be used as nothing more than a warm, wet place for some stranger to shove his cock.\n\n\"Fuck! Big! So fucking big!\" I screamed as he impaled my tight pussy onto his thick dick and pulled me down so that every inch was throbbing inside my cum hungry little hole.\n\n\"You like that big fucking cock? Huh? Answer me you slutty fucking whore!\" his hand roughly grabbed my neck, and his words seeped through gritted teeth. I nodded my head then he slapped me across the face. I loved it.\n\n\"YES! Yes you big dick motherfucker! Use me! Screw my slutty fucking cunt! Hurt me with that big dick!\" I was riding him wildly now. Feeling every thick inch of his cock as I slid up and then again as I slammed myself down onto his thighs, causing my tits to bounce around wildly. I knew I was would probably be sore tomorrow.\n\nMaybe it was my preoccupation with the sheer size of this man's cock and desperately wanting it inside me but along the way neither of us had bothered to lock the door. I realized this when I looked up and saw another man standing there watching. I had no clue how long he had been there but I did know that his own cock was hard.\n\n\"What the fuck? In or out man just shut the fucking door!\" the guy fucking me screamed as I kept riding him roughly. The other guy didn't seem to know what to do exactly but eventually stepped inside, closed and locked the door.\n\n\"Ungh...pull...pull it out\" I gasped while rubbing his swollen bulge through his pants.\n\n\"You want two cocks?\" man #1 one asked. I nodded. \"Go ahead man, I bet the little whore loves it up the ass. Don't you bitch?\" he growled at me.\n\nI had had anal and I was no stranger to taking more than one cock at a time but it had been a little while and I was a little apprehensive. I thought about just sucking one while fucking the other but apparently that choice wasn't mine to make any longer. \n\nMan #2 stepped behind me and I soon felt his wet cockhead pushing at my tightest of holes. The sensation and thought of getting fucked in my ass and cunt by two strangers unleashed my inner slut completely.\n\n\"Yes! Do it! Take my fucking ass Mister! Fucking use my holes!\" I screamed as he shoved himself ball deep up my asshole. He had his hands on my shoulders as he humped his dick up into me all while Man #1 was still pounding my dripping cunt.\n\nIt took some doing but eventually the two men found a perfect rhythm and in no time they were both slamming into their respective holes and I was screaming and cumming to the point that I thought I was going to pas out.\n\n\"Fuck! I'm going to cum! I'm going to cum in your fucking ass, whore!\" he grunted.\n\n\"Yes! Yes! Do it! Both of you fill me up! Fill my sloppy fucking whore holes!\" I was almost babbling but it must have been what they wanted to hear because almost simultaneously both men started to cum.\n\nMan #1 pulled me down hard and I felt him erupting his load into my cunt. At the same time Man #2 rooted his own cock deep into my ass and became blowing his seed. When they were down they simply pulled out and both walked out leaving me gasping and dripping with cum. My throat was a little sore from screaming and being choked.\n\n\"Wow that was fucking hot.\" A voice from the other side of the wall moaned. Apparently he had been watching me getting fucked.\n\n\"You got some cum for me too Mister?\" my voice was raspy and I had kind of thought I was done but the thought that there was another man ready to feed me his cum was too much to ignore. His cock slid through the slot and just like that I was back on my knees, lips wrapped around his cock as he pumped a load of cum down my throat.\n\n\"OK. That's enough for now.\" I thought to myself as I started to gather up my clothes. My panties were a mess, as were my pussy and ass, but I put them back on if for no other reason than to keep that stranger cum from dripping down my thighs. My corset had streaks of cum on it as well but the more I thought about it the more I liked the thought of people seeing me walk out of here and knowing that this girl just got fucked...not that they wouldn't be able to tell from my hair. It was a mess and there was cum in it as well. I was just about to open the door when I saw a hand slide through the slot. \"Maybe one more couldn't hurt.\" I whispered as I knelt down.\n\n\"Oh!\" I exclaimed as a nice thick cock poked through and almost hit me in the eye. There was a familiarity about it that made me smile. Those two telltale freckles still looked like a face to me as I my hand around Gwen's Daddy's rigid pole. \"MMMM I remember you.\" I purred loud enough so that he could hear.\n\n\"You do huh?\" he was still getting hard as I spit on his growing member.\n\n\"Uh huh, I've had this cock before.\" I giggled. I knew that despite my sore pussy I was going to fuck Gwen's Daddy again. I opened my mouth and let my lips slowly slide down his shaft all while working my tongue on him.\n\n\"HMMMMMM fuck that's good. You going to be a naughty little slut for me again?\" he was just starting to thrust into my mouth.\n\n\"MMMMM yes Daddy! MMMM I'll be filthy little fuck slut for Daddy!\" I moaned and took him back into my mouth. The image of Gwen doing the same thing filled my mind and I started to wonder if he fucked her through the wall. That image fueled me as I slurped up and down his stiff meat with reckless abandon.\n\n\"That's it, suck that fucking cock! Shit you are a little slut, huh?\" I didn't even bother to answer, instead I took him down to the base and wiggled my head around with his swollen, throbbing head in my throat. When I finally pulled back I had spit streaming form his body to my lips.\n\n\"MMMM I'm going to make this big fucking dick cum so fucking hard for me. You have a big load saved up for me?\"\n\n\"I have a huge load for you baby.\"\n\n\"MMMM wanna come over here and give it to me?\"\n\n\"Ohhhhh, I do remember you.\" He smiled down at me as he entered the room, cock still out.\n\n\"Be hard to forget me.\" I teased as I gulped his hard-on back into my mouth and he soon started fucking my face and playing with my tits through my corset.\n\n\"Anyone fucked you tonight little girl?\" I looked up at him and nodded. \"MMMMM good, then Daddy won't feel about this.\" He pulled me up from the floor by my hair and bent me over the plastic chair. His hands spanking my ass even as he ripped my thong from my body and forced his entire cock ball deep into my sloppy, used little cunt. \"You like having Daddy's cock inside you slut?\" he was playing the role and I loved it.\n\n\"Ohhhh fuck yessss! Do it Daddy! Fuck me! Fuck your little girl! Pound your slutty daughter's worthless whore cunt Daddy!\" he yanked hard on my hair. \"Ohhhhhhhh Daddy! Your cock is so big and fat, make me take it all Daddy!\"",
        "\"MMMM you have cum leaking from your ass to. How many cocks have fucked you tonight?\"\n\n\"Ohhh so many Daddy!\" I lied but I was playing up to what I thought he wanted.\n\n\"MMMM I love that you're such a little cock slut.\" He pounded into me with each word.\n\n\"Make me be a whore Daddy! Make me be Daddy's whore!\" I don't even think he even remembered my name. To him I was just some young teen slut willing to let him fuck me like a cheap slut. I was just a hot, wet place for him to shove his thick cock into and I was absolutely fine with that.\n\nHe wrapped my hair around his hand and yanked back hard causing me to scream. He really seemed to like that.\n\n\"Oh yeah! Get loud for me bitch! Scream for me! Scream for Daddy!\" his pace quickened and I felt his balls slapping against my clit in such a way that made my pussy start to gush.\n\n\"Ohhhhhhhh Daddyyyyyy! Yes! Yes! Yes Daddy! Fuck that pussy! Fuck your slut daughter's whore cunt! Hurt me! Hurt my little pussy!\" I felt my own cum starting to flow down my thighs.\n\n\"Such a slut, cumming with your Daddy's cock in your sloppy used cunt.\" His free hand starting slapping my ass then I felt his fingers working against my cum filled asshole.\n\n\"Wait! My bag.\" I was sex drunk and kind of babbling as I was still mid-orgasm.\n\n\"What?\" I reached down to my back and pulled out the ass plug I had brought with. He snatched it from me and growled as it slid up into my ass. The sensation of being stretched like that again was intoxicating.\n\nHe had let go of my hair and grabbed hold of my ass with both hands. His fingers dug into my flesh as he pulled me back to him while at the same time he was slamming his dick deeper and rougher into my used gash. Long, hard, deep strokes. Faster and faster until his skin was slapping loudly against mine then he slammed in hard and stayed there as I felt him starting to cum. Spurt after spurt shooting from his swollen cockhead splashing into my cunt, invading my womb as I worked myself around him wanting every last drop.\n\nAfter about a minute he slipped out of my dripping slit and I turned to face him. He was panting and I was staring at his dick.\n\n\"MMMM Daddy. You're cock is wet.\"\n\n\"Suck it clean for me. Clean Daddy's cock off.\" He moaned as he sat down on that plastic lawn chair. I was more than happy to taste myself off of his semi-hard on, taking it in my mouth then licking down to suck his balls clean. I felt his hand on my head pushing me down further. I moaned as I let my tongue tease his asshole, pressing against it.\n\n\"Fuck! You are an incredible fuck.\" He moaned.\n\nEventually we started to gather our clothes and I realized at that point that my panties were ruined. He had ripped them completely form me and my pussy was literally dripping cum as I stood there trying to figure out what to do. I knew my legs would be covered in cum by the time I made it to the door let alone back to my car. Realizing what he did he grabbed my tattered thong and stuffed it into my cunt then offered to let me shower at his place. Apparently he kept an apartment close by that his wife didn't know about.\n\nNot wanting to ruin my car's seats and really not wanting to return home smelling like a used condom I took him up on his offer. I showered and we chatted a bit and when I told him I was in high school he asked which one. I was honest and told him and he told me his daughter went there. He fucked me again before I left, this time blowing his load on my face as I ate out his ass.\n\nWhen I got home I was exhausted. My pussy was sore and I knew I wouldn't be able to have anal sex for a couple of days. But as I laid there in bed drifting off to sleep I couldn't help but think about everything I had done that night. I started to rub my clit as I thought about Gwen's daddy, then about Gwen...and then, for the first time, I started thinking about my own Daddy."
    ],
    "authorname": "lillyjones1402",
    "tags": [
        "teen",
        "gloryhole",
        "amateur",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/second-coming-my-second-visit"
}