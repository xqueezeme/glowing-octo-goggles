{
    "title": "The Girlfriend Experience Ch. 04",
    "pages": [
        "Author's Note: This story is a collaboration with my friend and editor, Harvey. We both contributed equally to its content and we hope you enjoy it. Additionally we'd like to thank Jim (Mojavejoe420) for his contributions to this chapter.\n\n \n\n- - - - -\n\n\"Hi, sweetheart!\"\n\nI'd barely stepped out of my car when my Dad wrapped me up in a big bear hug in the driveway. I closed my eyes and melted into his strong arms.\n\nIt was a long drive from Las Vegas to my childhood home in Glendale, California, right outside of Los Angeles. I'd been working steadily for Dana for the last month, going on one and sometimes two dates a weekend. Even though I could've used the money, I'd decided to take this weekend off and spend it with my father. I knew he needed me and there was always next weekend to work and add to my growing bank account.\n\n\"Daddy, mmm, you feel so good!\"\n\n\"You do too,\" and he squeezed me again. We walked into the house with his arm around me and he asked about the drive, my car, and my classes.\n\nThe house seemed too big, though, too empty. I noticed some of the artwork was gone, and some of Mom's crystal collection, too. Daddy saw me looking around as I took in all the new and not-so-good changes. I thought of asking him about it, but decided against it. Perhaps after I get settled in, I thought. We sat down on the couch in the living room after my father got a couple of beers out of the fridge.\n\n\"I love when you visit me; how long will you be able to stay?\" he said longingly.\n\n\"I have to leave Sunday at about noon. I have classes Monday morning that I can't miss.\"\n\nI saw the hurt look in his eyes. I knew he wanted me to stay longer, but it was an impossibility. \"I understand, sweetheart, you're busy with school, and I'll just enjoy the time that I have you here with me.\"\n\nHe asked me again about my classes and my 'part-time job' at the school bookstore. I hated lying to him but I knew he'd never be able to handle the truth of how I was really paying my bills now that he could no longer assist me. Once we'd caught up a little, I hit him with a serious topic that I hoped he'd be okay talking about.\n\n\"So, how are things going with Elaine?\"\n\nI knew that she and my Dad had been getting closer lately. I was glad for him; he'd been in quite a dry spell ever since my mother passed away suddenly three years ago. He'd loved her dearly and it took him a couple of years to move past losing her and try to 'get back out there again' and meet someone new. Just as things had started to get better for him he'd lost his job, and of course being unemployed wasn't a big selling point with the ladies. When he met Elaine I thought things had finally started looking up for him.\n\n\"I'd planned on you meeting her today, but we had a falling out and that won't be happening,\" he said solemnly.\n\nMy heart sank and I reached out, took his hand, and gave it a gentle squeeze. \"I'm sorry, Daddy. I thought everything was going well with her.\"\n\n\"Everything was going great, until ... ummm ... last night.\" I waited patiently for him to continue as he collected his thoughts. \"This is really difficult to talk about with my daughter. I know you're a grown woman ... but ... still ...\" His voice trailed off as the picture became a bit clearer.\n\n\"Daddy, you know you can talk to me, right? I'm kinda grown up now. I even know about,\" I looked around the room and then whispered, \"s-e-x.\"\n\nWorking for Dana, I'd quickly learned that humor could diffuse any potentially awkward situation with her clients. It always worked with them, and it worked on my Dad as well.\n\nHe gave me a big laugh. \"Well, all right, then, you asked for it. It was about s-e-x. I wanted it and she didn't.\"\n\nI broke into a little scowl. \"You weren't pressuring her too quickly, were you? I thought you'd been going out a while?\"\n\n\"Elisa, we'd been going out for four months, but she's ... you know ... Catholic. After she got divorced she didn't want to have sex until she got married again, and I guess I wasn't willing to wait for her.\"\n\nThis was a complicated situation, more complicated than I'd envisioned. I didn't blame my Dad for wanting sex without being married. However, I also respected Elaine's decision to abstain because of her religious convictions.\n\nMore than anything, I felt sorry for my Dad. He looked so dejected. Poor guy, I'm sure he really needs to get laid. Again, I tried to use humor to cheer him up. \"Well, maybe it's for the best. She's probably lousy in bed and wouldn't give you head.\"\n\nHe coughed, and when he regained his composure he apologized. \"Sorry, I wasn't expecting that from you and you kind of caught me off guard there. It's a moot point now, we had a huge fight last night and she was really pissed when she left.\"\n\nI tried to put a positive spin on the deterioration of his sexual prospects. \"Daddy, maybe it's for the best. Good sex is important in a relationship.\" Trust me, I know. Most of the men I see every weekend pay me to do things for them that their wives won't.\n\n\"Yeah, I guess that's true.\" He paused for a moment to collect his thoughts. \"Since I'm being so forthright with you about the shitty state of my love life, how about you tell me what you've been up to. Are you seeing anybody? Having good sex? Giving good--\" He stopped suddenly. I think he shocked himself with what he almost said.\n\nYes, Daddy, I've given good head every weekend for the last month. And I swallow, too. What's the point of doing all the work and not enjoying the taste?\n\nOf course, I couldn't admit any of that to my father, so I just smiled for a few moments before formulating my usual lie about what I'd been doing for the past few weekends. \"I'm too busy with my school work, but every now and then I'll go out on a date.\"\n\nWhat I was also discovering, working for Dana, that I couldn't share with my Dad was that I liked being with men, not boys that were my age. They were more mature, more respectful, and more willing to return the pleasure that I gave them. Of course, there were some exceptions. A couple of them had been way past their prime and a lot more work to please, but overall I'd learned through my weekend experiences that guys my age were now of little interest to me.\n\nThe next few hours were great. We talked and laughed about some of his brothers and sisters, and we reminisced about my mother and some of my childhood experiences. Then we talked politics in relation to one of my classes. I always appreciated his take on things and he really understood that there usually wasn't just a black or white definition or solution to a problem. He liked to consider all sides of a situation and he wanted to make sure that I always did, too. He's one of the smartest people I know.\n\nWe had a great weekend together, and when I left on Sunday I promised to come back as soon as I could. My weekend with him also caused me to feel a bit conflicted. He'd said he was getting by just fine, but the insides of the cabinets and fridge were pretty barren. He'd already sold off the BMW, and he'd talked about selling the Infiniti next.\n\nI had extra money that I was more than willing to give him, but I knew he'd never accept it from me. Additionally, it would blow apart my lie about working in the college bookstore for minimum wage, and it would force me to be truthful about what I was really doing on the weekends. His little girl seeing men on the weekends for money, that was information that I knew he was in no way ready to handle.\n\nHis lack of a love life also concerned me. He's very good-looking and quite a catch; he's kept himself in great shape despite the unemployment. He wasn't one to just sit around and feel sorry for himself. Pretty women would be flocking to him if he could just find another job. Maybe I could get an escort for him? Would that even be good for him?\n\n \n\nThat was kind of weird, thinking about my Dad with one of Dana's girls. I've seen all their pictures; I wonder which one he'd like. And would they be good to him like I'm good to my clients? I'd want him to have somebody who wouldn't just go through the motions. I'd want him to feel passion again, and she'd have to put in the work with him just like I did when I saw my clients. It was an interesting thought, but one that I was in no way ready to act on.\n\n- - - - -\n\nI'd just filled my gas tank in Barstow and gotten back on the freeway when my phone chirped me out of my reverie. I was surprised to see it was Dana on the caller ID. Normally we only texted and rarely spoke on the phone.\n\n\"Hello?\"\n\n\"Hello, Elisa, it's Dana. Is this a good time?\"\n\n\"Sure, I'm in my car by myself. What can I do for you?\"\n\n\"In your car, well, can you pull over somewhere for a few minutes? Or maybe call me later?\"\n\n\"Give me just a second.\" Luckily I was a quarter of a mile from a rest area. I took the exit and parked my car.\n\n\"Okay, I'm off the freeway and I can talk. Is anything wrong?\"\n\n\"Oh, gosh, no. Quite the opposite, in fact. Somebody is getting quite popular!\"\n\n\"Really ... ummm ... I guess that's a good thing, right?\n\n\"It's a very good thing for both of us.\"\n\nI know it's a good thing for you, you've been getting a large share of my earnings. Of course, I kept that snide little thought to myself.\n\n\"So what's new?\"\n\n\"Well, two things, actually two clients, and they're both pretty interesting and potentially lucrative. I'll start with the shorter date. We have Steven, a thirty-nine-year-old accountant who would like to book you for four hours on Saturday night. It sounds nice, actually. Dancing and drinks at the Tao nightclub, then a few hours of sex afterwards. He's checked most of the normal boxes, but he has a request we don't actually have a box for.\"\n\nI took a deep breath and was almost afraid to ask my next question. \"Okay, and what would that be?\"\n\n\"It's his wife's birthday and he'd like you to be his present to her.\"\n\nMy jaw dropped open and I was thankful we were on the phone instead of talking face-to-face. \"I ... ummm ... I don't know.\"\n\nThe hesitancy in my voice was quite evident and she quickly stepped in. \"Before you say no, just hear me out.\"\n\n\"Okay,\" I said cautiously.\n\n\"He will be there, but mostly as an observer. He wants you to have a few drinks, dance with her, pursue her, and then have sex with her. He wants to help her relive her college days, something along those lines.\"\n\n\"How old is she?\"\n\nI could hear her typing on her computer, looking up the information I'd requested. \"You'd be meeting them on her 30th birthday.\"\n\nMy mind was running wild with possibilities. Seeing ... being with ... taking care of older men, that was something I could handle, something I was getting good at and growing accustomed to. But this ... what she was asking of me ... this request was on a whole other level.\n\n\"I know you're apprehensive, Elisa, but let's talk about it, okay?\"\n\n\"Okay,\" I said in a voice barely above a whisper.\n\n\"During your interview we never talked about this type of date because, frankly, our clients rarely request it.\"\n\n\"Okay, but why me?\"\n\n\"She loves your pictures and he loves your glowing reviews. Especially your 'willingness to ensure your clients leave satisfied,' as your last date put it.\"\n\n\"I ... ummm ... I'm just ... ummm ... not sure.\" My head was still spinning, and it was as if my brain refused to form a coherent thought.\n\n\"Tell me what you're thinking,\" she said.\n\nI took a deep breath, cleared my head, and willed myself to respond to my boss with a cogent answer. \"You've always expected a lot from me and I've always delivered for you and our clients, I think we can agree on that, right?\"\n\n\"I completely agree with that.\"\n\n\"What if I agreed to this and wasn't able to meet her expectations?\"\n\n\"Have you had many experiences with women?\"\n\n\"I've had a few, but let's just say that it's been limited.\"\n\nThat was the understatement of the year. During my freshman year I met a girl who lived in my dorm. We became friends and went out together. When our night of hard partying was over, we went back to her room and her libido was in overdrive. She hit on me, which led to us making out, me going down on her, and me getting her off multiple times. Unfortunately, she fell asleep before she could reciprocate, which left me turned on and incredibly frustrated.\n\nTo make matters worse, when I saw her the following day she pretended nothing had happened. I was actually dumb enough to let it happen again, hoping for a different outcome. Finally, I put my foot down and rebuffed her advances, which led to the end of our friendship. I was fairly certain she'd loved what I did to her, because I just mimicked what guys always did to me. Since then I've always been into guys and never considered myself to be anything other than heterosexual.\n\nWhich brought me back to the question. Would my ... ummm ... very limited skill-set even come close to meeting an experienced bisexual woman's expectations or that of her rich husband? Dana's voice broke me out of my thoughts and back to the now.\n\n\"Listen, Elisa, out of all my employees they specifically requested you. If you say no they'll look elsewhere. But I believe in you, and like you said you've never let me down. I know this time won't be any different.\"\n\nNow she's handling me. For better or worse, her kind words and her faith in me won me over. \"Okay, I'll do this.\"\n\n\"Excellent, I know you'll have a great evening with them. His name is Steven and his wife's name is Lynn, and they have a couple of kids. While I have you on the phone I'll send you a picture of them.\"\n\n\"Okay, but let me ask you, she's had a lot of experiences with women?\" I tried to sound confident, but I was afraid my inquiry might betray my lingering self-doubt. A couple of seconds later my phone chirped and I looked at the picture while Dana answered me.\n\n\"Steven told me that she'd been with quite a few girls during college but once they'd married and had children her opportunities dried up. Lynn's greatest fantasy is to be with a hot young college girl and have, what did I write down here ... oh, yes. She wants crazy and wild and romantic love-sex. I guess it'd be up to you to interpret what that means.\"\n\nDana was talking but I was only half-listening; I was staring at the photo she'd sent me. They were on a beach, under a palm tree, and his arm was securely around her, holding her tight against his body. He was wearing long surfer-type board shorts and she was in a little blue bikini.\n\nI quickly came to the conclusion that Lynn was gorgeous. Not the 'she passes for cute' variety, but she could be a model, type gorgeous. She had long blonde hair, high cheekbones, and puffy, pouty, sexy lips. He looked every bit his almost forty years, but she could pass for one of the girls I went to class with every day. And her body ... This woman has had children? Bullshit, I wouldn't believe it until I saw them. My eyes slowly gravitated towards him. He was handsome enough, but I'd be willing to bet he had rich parents to land a stunner like her.\n\n\"So, did you get the pic? What do you think?\" she said.\n\nAny notion of this date not being a complete and utter disaster had evaporated after seeing that picture. Of course, like always, I hid my true feelings from my boss. \"They're a cute couple.\"\n\n\"I know, right?\" She's really pretty, isn't she?\"\n\n\"She is.\" She's Miss-Fucking-America, Boss; how do I even begin to sexually please a woman like that?\n\n \n\n\"Steven said she also likes playing with toys. He really didn't elaborate, so just be ready for it, okay?\"\n\nOf course she likes toys ... what blonde supermodel goddess doesn't? I thought sarcastically. \"If she likes that, it's no problem.\"\n\n\"I knew you wouldn't have a problem with it,\" she said gleefully.\n\n\"And you said this would be a four-hour date?\"\n\n\"Yes, Steven would like to watch and then join in at some point.\"\n\nPleasing a forty-year-old man, finally something I can actually handle. \"Him joining us is fine.\"\n\n\"This will be a great night for you. Your take will be $4,900.\"\n\n\"I like the sound of that. But you said you have a second date to tell me about?\"\n\n\"Yes, I do. You remember Edward from a couple weeks ago, right?\"\n\nI thought for a moment. Edward ... yeah ... the guy who'd wanted me to see his son and ... ummm ... teach him a few things. As Dana said, that had been a few weeks ago, and I had thought he'd forgotten about it or had changed his mind.\n\n\"Yeah, I remember him, what's he up to?\" I asked, hoping he'd agreed to go forward with his plans.\n\n\"He wants to book his son for a twenty-four hour-date in five weeks. Will you be available then?\"\n\nI couldn't answer fast enough. \"Yes! I'm available.\" I couldn't think straight; how much money would that be? \"Wait, my period is when?\" Dana tracked all of our periods on her computer. I was on the pill, of course, which gave me regular cycles of shorter duration.\n\n\"I already checked, and you're in the clear. He said he'd already discussed this with you and you're actually going to be his son's birthday present, is that right?\"\n\n\"Yes, I'm supposed to turn his boy into a man. It should be kinda fun, the kid is an honest-to-God virgin, unless something's happened since I saw Edward, and from what he told me that probably hasn't changed.\"\n\n\"Interesting. Well, he's checked all your boxes for that date, and I was willing to negotiate a discount on the usual fees because of how long the date would be, so it would come to ... let me click to that screen again ... yes. Seventeen thousand five hundred for you.\"\n\nI shivered for a moment. \"Se-seventeen?\" I asked with an unsteady voice. It was actually difficult to imagine someone paying me that much for twenty-four hours of my time.\n\n\"Seventeen five, Elisa.\"\n\nI took a deep breath. \"I think I can live with that,\" I gushed.\n\nDana chuckled into the phone. \"I thought you'd be okay with that figure. Can I tell you something, Elisa?\"\n\n\"Of course.\"\n\n\"Well, it's just that I'm very proud of you, dear. I had a feeling about you, and look at how well you're doing. I'm kicking around the idea of raising your rates to keep up with the demand.\"\n\nI giggled. \"I'll leave that up to you, Boss.\"\n\nWhat she'd said was true, though. I had about fifteen requests for dates in my in-box. When I originally agreed to work for her, I told her I could work one night a week so I'd have plenty of time to study and keep up with my classes. However, because of all of the glowing reviews I'd received, I did seem to be in high demand, and that was a little disconcerting. Dana had promised she'd never pressure me into taking on more than I could handle, and I hoped that wouldn't change.\n\nWe chatted a little more about the particulars of the upcoming couple-date and then disconnected. I did some math in my head.\n\nSeventeen-five for the all-day date and almost five for the other is exactly twenty-two four for me, and maybe a raise after that. This could really set me up well.\n\n- - - - -\n\nWhen I got back into Las Vegas I found that my small two-bedroom apartment was empty. Then I remembered that my roommate, Lexi, was having dinner with her folks in Mesquite, about an hour and a half up the road. It was only about four in the afternoon, so I figured I had a two-to-three-hour window of privacy. I went to my bedroom and sat at my little desk that was normally reserved for doing my school-work.\n\nI never really watched porn, the real thing was always so much better to me. Before I started working for Dana, I'd occasionally, maybe once a month, pick some lucky random guy from one of my classes and hook up. But now, having sex once and sometimes twice a week more than scratched that itch, and it was almost as if the more I got the more I wanted. On the occasional times when I did touch myself, the image in my head was always of a guy, one who I'd plan to pursue. However, today felt different. I pulled out my phone and pulled up the image Dana had sent me. There she is again ... that beautiful blonde on the beach with her husband's arm around her. As sexy as that image was, I'd need a little more stimulus if I was going to get myself off.",
        "I flipped my laptop open, searched for Lipstick Lesbian, and checked out the videos on the list.\n\nWell that's a bust. It was just a bunch of YouTube videos that featured very masculine-looking girls discussing their conquests of Lipstick Lesbians. I needed more than talk, so I tried Romantic Lesbians.\n\nThat search produced gorgeous female couples in fairly long clips. I chose one that featured two very pretty girls, Malena Morgan and Mia Malkova. It was about fifteen minutes long and I clicked the full-screen button. I quickly discovered there was no plot, and I was okay with that because I wasn't looking for one. When the clip began both women were naked, outdoors and by a swimming pool. They were passionately kissing while running their hands up and down each other's body.\n\nI set the laptop on my bed and tilted the screen so I could easily see it. As the video played, and the girls cooed softly, I shut the blinds, darkening the room. I dug out an opened bottle of Pinot Grigio from my small fridge and emptied the remaining contents into my coffee cup.\n\nYeah, that's nice, I thought, savoring the cool, crisp taste. The effect was almost immediate; the cold wine turned warm as I swallowed, and I felt a little glow radiating through my chest. Watching the porn girls slide their tongues in and out of each other's mouth gave my pussy a little tingle. I set the cup down on my desk next to the bed, slipped out of my clothes, and slid into the bed with my laptop in front of me.\n\nMy vagina moistened in anticipation. The video girls weren't wasting any time. One of them had two of her fingers inside the other while she moaned in appreciation.\n\nDamn, that is so sexy. I pinched and pulled my nipples until they stood proudly off my breasts. You'll want me to do that to you, won't you, Lynn? You'll want me to please you, just like that.\n\nMy fingers continued to pinch and pull my nipples, sending little tingles through my stomach. So many guys my age go straight for my pussy. I teased them more, languorously, as I slowly turned myself on. You wouldn't do that, would you, Lynn? You'd play with my breasts, you'd work me up, have me dripping wet, and have me begging for you to touch my pussy before you ever did. \n\nMy pussy felt like it was on fire and I could feel my secretions oozing out of my vagina. As the video continued to play, my thoughts, my fantasies went wild. You'll be wearing a sexy little thong for me, Lynn, won't you? What should I do with it? Should I put it in my mouth? Or, better yet, would you make me put it in my mouth?\n\nThat thought generated a whole wave of tingles that were reverberating between my legs. One of the girls was moaning now because the other had her tongue buried deep in her vagina. However, that was no longer what I was interested in. I closed my laptop, grabbed my phone, and again stared at the picture. Then I propped the phone up, leaned back on my pillows, and began teasing my pussy.\n\nI just want to fantasize about you, Lynn ... only you ... you and me, together. \n\nMy fingers teased my little hood for a few moments, and the warm sensations radiated throughout my body. The lips of my vagina were red, puffy, and engorged, and my juices were gathering on them and making the tips of my fingers nice and slippery. Slowly, I dipped one and then two fingers inside. I couldn't resist, I slipped my wet fingers inside my mouth.\n\nYou'll want to taste me, Lynn, won't you? You'll love how I taste, won't you? I hope you will.\n\nI was worked up and already very close. I thought of using my fingers to finish myself off but decided against it. I reached into my nightstand and pulled out my favorite vibrator. It was long, about seven inches, and black.\n\n \n\nHave you ever had a black man, Lynn? Has a black man run his hands over your flawless porcelain skin or run his fingers through your long, beautiful blonde hair? That was something I'd never experienced ... maybe someday. \n\nI twisted the bottom of the big vibe, powering it on, and I felt it pulse on my hand. I let the tip slide over each of my erect nipples and I let out a low, deep moan. When I looked down, there was a large wet spot between my legs, soiling the sheets.\n\nWe're going to get each other off, aren't we, Lynn? Right in front of your husband. I'm going to show him what his wife's body is capable of. I'm going to show him that I can make you come over and over, like only another woman can. \n\n \n\nOkay, let's make this happen.\n\nI moved the vibe down and used the tip to split my wet lips open. With one long hard thrust I slid nearly all of it inside me. \"Fuck, yesss,\" I moaned. I worked it in and out of my pussy harder and faster, picking up the pace. Then I adjusted the angle so it perfectly pulsated against my clit while I continued to slam it and out of my vagina.\n\nMy orgasm hit me hard and fast. The sudden build-up of pressure and the intense, explosive climax took my breath away. Wave after wave hit me and it felt as if I couldn't keep air in my lungs. My head lolled from side to side and I sank deep into my bed. Almost involuntarily, I withdrew the buzzing vibrator from my vagina so it would no longer make contact with my now-very-sensitive clit.\n\nIt took another minute or so before I was able to catch my breath. That was kinda hot, I thought to myself, but nowhere near as good as the real thing. After my senses were back about me, all my anxiety and self-doubt once again flooded my mind. Can I pull this off? Is it even possible for me to please this experienced, sophisticated woman, in front of her husband, no less? Dana had always demanded so much from me, and somehow I'd always been able to meet her, and her clients', high expectations. Will this be the first time I let her down? Will the evening I spend with this couple even come close to my fantasies?\n\nI wished I was meeting them that night so I could get this anxiety-ridden date over with and put it behind me. Unfortunately, I had an entire week to wait before I'd find out if I was up to this task.  \n\n- - - - -\n\nIt was Saturday night and my knees were knocking together. My stomach was queasy and I was not entirely sure that the small Cobb salad I'd eaten for dinner would remain there. Steven had requested a late start time for our date, ten o'clock. That made sense, because most clubs don't really fill up and get going until later in the evening. I didn't know how much we'd be drinking so I'd booked an Uber to take me to the Venetian instead of driving my car.\n\nI must have tried on ten different outfits once I got out of the shower. What the hell do I wear when I'm going on a date and meeting an older couple for the first time? After what felt like hours in front of the mirror, I finally settled on a black, strappy-back, sleeveless cocktail dress. I also chose to wear two-inch kitten heels that went perfectly with the short little frock. Normally, I wore tall high heels when I met clients, but Dana had told me that Lynn loved to dance so I knew we'd be spending at least part of the evening out on the dance floor. The shorter heels didn't give my legs the long-and-leggy, well-defined look that my clients always appreciated, but I always found it difficult dancing in four-inch heels and I hoped my couple would let it slide. To complete the look I selected a black silk thong, and because most of my back was exposed I didn't wear a bra.\n\nI'd spent the entire week trying to keep this evening off of my mind as I attended my classes and did my homework. Steven was an older man and exactly what I was now growing accustomed to. However, his wife was a completely different situation, and I was filled with anxiety, apprehension, and self-doubt about my abilities to please an older, experienced bisexual woman.\n\nIt was 9:45 and I was waiting about a hundred feet from the entrance of the Tao nightclub. I was sitting at a large bank of slot machines, nursing my watered-down drink and attempting to blend in with the other gamblers. I resisted the almost overwhelming temptation to look at my watch for the tenth time. Will they be the first client to actually stand me up? That would be difficult to envision, but maybe ... just maybe ... if nothing else, it would get me out of this potentially precarious situation. Then my hopes were dashed.\n\nI saw a couple walking towards the entrance of Tao and quickly recognized Steven and Lynn from their picture. She was wearing a little black miniskirt with a cute white lace top, a brown cardigan sweater, and black ankle boots with two-inch heels. Her flowing blonde hair was actually a little longer than in the picture Dana had sent me. It was styled in gentle loose curls that fell perfectly around her ample breasts; she truly looked stunning. Seeing her in person also made me realize how tall she was. She had to be at least 5'9\" and combined with the added height of her boots she had to be close to six feet. She reminded me of a mythical amazon goddess that would devour anyone or anything in her sight, and that only added to the butterflies that were nervously churning in my stomach.\n\nSlowly, my eyes gravitated to the older man who had his arm wrapped around her. Steve was very handsome in an almost unassuming way. He had brown eyes and wavy brown hair in a short, professional-type cut. He looked to be about six feet tall and maybe 165 pounds. I could tell that he was in good shape and had a bit of muscle, but not in an overdone-jock type of way. When I saw them together they looked like the perfect couple, and I dreaded the thought that I'd turn into some type of third wheel who'd just get in their way and ruin their evening.\n\nPart of me wanted to turn and run away, but I knew I couldn't. Summoning every ounce of courage I could muster, I stood up and slowly walked towards them until they saw me. When she recognized me, her eyes lit up.\n\n\"Elisa?\" she said.\n\n\"Yes,\" I said shyly.\n\nBoldly, she pulled me towards her and gave me a big hug and a little kiss on the cheek. Then she whispered in my ear, \"You're more beautiful than I'd ever imagined, honey.\"\n\n\"Thank you so much,\" I whispered back. \"You're stunning, Lynn, even more beautiful than the picture I saw,\" I said sincerely.\n\n\"Awww, thank you. She looked deep into my eyes and read me perfectly. \"Please don't be nervous, okay, we're going to have an amazing evening, I promise.\"\n\nIn an instant, all my dread and anxiety seemed to magically vanish. \"Okay,\" I said softly.\n\nIt was a very different feeling and like none of my previous dates. Normally, I was the one who was struggling to build rapport and finding a way to connect with my client. But tonight, she was the one who was calming me down and settling my nerves. She made me feel like a little girl and I wasn't quite sure what to make of it.\n\nShe took my hand and gave it a little squeeze. \"Elisa, this is my husband, Steve.\"\n\nHis eyes were looking down, at my breasts, and slowly they met mine. He'd done a decent job of disguising the little look of lust in his eyes, but it was still etched in his expression. \"It's so nice to meet you, and I have to say you come highly recommended.\"\n\nI felt a little blush break over my face. \"It's really nice to meet you too,\" I said shyly.\n\n\"So, ladies, should we get our party started?\"\n\n\"Yes,\" we both giggled in unison.\n\nWe took a few steps until we were standing in front of a young man dressed smartly in a very stylish black suit.\n\n\"How may I help you, Sir?\"\n\n\"I'm Steven Pilson and we have reservations for a VIP skybox, and am I correct in assuming you have bottle service?\"\n\nHe tapped his iPad several times. I have your reservation, Sir, and we do offer bottle service,\" the young man stated. \"If you'll please follow me?\"\n\nWe followed him into the club. The music was thumping loudly and the hundreds of lights were changing color in time to the beat of the music. I always loved clubbing and it felt like I was home. The enormous club could accommodate nearly two-thousand people and had two levels. There were booths and tables on the lower level that surrounded the massive dance floor and an upper VIP level with eight skyboxes featuring balconies that overlooked the entire club below. I had been to Tao a few times, but never to the upper VIP level. It wasn't uncommon to see celebrities, from actors to hip-hop artists, on the second level.\n\nWe climbed the stairs and the host seated us at a booth within the skybox. I sat in the middle and Lynn sat beside me, so close that our thighs touched, and Steven sat a couple of feet to my right. Almost immediately, a pretty server approached the booth to take our drink order. \"What can I get you, Sir?\" she purred sexily.\n\nSteve looked into my eyes, \"Are you a tequila drinker, Elisa?\"\n\n\"Tequila sounds great,\" I said enthusiastically. In reality, I didn't really like the taste of tequila and I rarely drank it. However, I assumed they did, so naturally I went along.\n\n\"We'll take a bottle of Patron, a bottle of Dom Perignon, and three bottles of water.\"\n\n\"Coming right up,\" she said before scurrying away to fetch the drinks.\n\n\"So, Elisa, Steve told me you're a college student,\" Lynn said.\n\n\"I am, I'm studying political science and I hope to get into law school once I get my degree.\"\n\nI wasn't normally that forthright so quickly when I was with clients, but she had a way of putting me at ease. Maybe I'm sharing too much too quickly, I thought.\n\n\"Steve has his own accounting firm and I'm a stay-at-home mother.\"\n\nI shot her a little smile. \"I'm betting your job is tougher than his.\"\n\nShe giggled. \"Our children are eight and six, so it can be demanding at times, but it's a lot of fun and I really love it.\"\n\n\"So, have you been working for Dana long?\" he asked while stealthily gauging my response.\n\nI was just about to answer his question when the cocktail server appeared again carrying a large tray with our drinks. After putting the bottles on the table, she said, \"If you need anything else, just let me know, sweetie.\"\n\nWhile Steve opened the champagne, filled the flutes, and poured shots of tequila, I decided to answer his question. \"I've only been working for her for a few weeks, but I really love it.\"\n\nLynn gently rubbed my thigh, which sent a little tingle through my body. \"It must be so exciting, seeing different men like that,\" she said with a little gleam in her eye.\n\n\"All of my experiences have been really positive so far, and I really do enjoy it.\"\n\n\"I'd better be careful,\" he said while handing me and Lynn the little shot glasses and flutes of champagne, \"or my wife might be Dana's next employee.\"\n\nI wasn't sure what to make of his comment at first, but when Lynn giggled at his little joke I decided it was okay to laugh with her, and it only made me more curious about the inner workings of their marriage.\n\n\"She'd be lucky to have such a beautiful woman working for her,\" I said sexily.\n\nUnder his semi-lecherous gaze, Lynn moved her hand to the inside of my thigh and gently rubbed as a little grin split his lips. \"Thank you, honey,\" she purred.\n\nAlready, I could tell he loved his wife's interactions with me. Then he picked up his shot glass. \"To a fun evening with the two most beautiful women in the club.\"\n\nWe touched the little glasses together and then downed the tequila, and I felt it burn all the way down to my toes.\n\nLynn looked into my eyes. \"Are you ready to hit the floor, pretty girl?\"\n\n\"I'd love that.\"\n\nWe both stood up and she removed her sweater. For the first time I could tell she wasn't wearing a bra and her large breasts looked incredibly firm. She had tight, toned arms and legs and her long blonde hair fell perfectly over her shoulder. \"C'mon, let's go,\" she said.\n\nShe took my hand in hers and we walked down the stairs to the dance floor. The DJ was playing typical club-type house music that was loudly thumping through the large speakers. \"Are you ready, honey?\" she asked.\n\n\"You bet, let's do this.\"\n\nWe walked out to the dance floor and began slowly moving our bodies to the thumping beat, and I quickly discovered she was an amazing dancer. After a few seconds she moved closer, and we wrapped our arms around each other and moved in unison to the beat of the seductive rhythm. I was glad to see there were a couple of other same-sex couples dancing together. However, I noticed that we were getting quite a few lustful, gawking stares from people around us, and that was something she must have picked up on too.\n\nShe pulled me in closer and whispered into my ear, \"Don't worry about them, baby, this evening is about us, only us.\" Lynn's hands moved lower and she began squeezing and rubbing my ass as we moved in perfect unison. Our eyes met and she leaned in, and we shared a soft, romantic kiss. I slid closer to her and felt our breasts crush together, and we began to make out in earnest. Our tongues gently played in each other's mouths as we ground our bodies together to the sensual rhythm.\n\nMy head was spinning. Kissing her was nothing like kissing my drunk college friend. Lynn kissed me with passion, with purpose, and I felt her hands move up and down my body as our tongues melded together. Maybe I should have been hesitant, or uncomfortable at the hundreds of desirous eyes that were fixed on us, but I wasn't. The only thing that consumed my thoughts was the beautiful woman in front of me who I very quickly wasn't able to get enough of.\n\nDuring the next song she took a bit more control. She pulled me in close and spun me around so I was facing away from her. She put her hands on my hips and 'twerked' her vagina into my ass. I bent my body at th4e waist and pushed back against her, grinding us together. I could feel hundreds of sets of eyes on us, but I didn't care about any of them. It was like it was only me and her in that expansive room.\n\nThe third song was slower and we held each other tight, grinding our bodies together, and made out while our hands roamed up and down each other's body. In all my years of clubbing, I'd never danced with anyone in such an overt, sexual way. I was smitten with her, and having her sexy body so close to mine was a feeling, an exhilarating experience, that I couldn't even begin to describe. When the music stopped, sweat was softly glistening on our bodies.\n\n\"I could use a break,\" she said, \"wanna sit the next song out?\"\n\n\"Yeah, that sounds like a good idea.\"\n\nShe took my hand and we walked off the dance floor and sat at a small table. We slid the chairs together and she quickly flagged down a passing server and ordered two bottles of water.\n\nAfter taking my hand in hers, she said, \"You're an amazing dancer.\"\n\n\"You've got some great moves yourself, girl.\"\n\nShe thought for a moment. \"I didn't realize how much I've missed this, missed being with another woman.\"\n\nAt first I wasn't sure how to respond, but she made me feel so comfortable I thought she'd be okay with my next question. \"Steve told Dana that you'd had quite a few ... ummm ... experiences ... in college.\"\n\nShe giggled. \"I was what my friends called a LUG.\"\n\nMy eyes got wide, and she could tell from my blank expression that I had no idea what that was.\n\n\"Lesbian Until Graduation.\"\n\nI laughed. \"I've never heard that expression.\"\n\nThe server reappeared and set the bottles of water on the table. Lynn pulled a keycard out of her skirt pocket and gave it to the server, who scanned it, charging the drinks to their room.\n\nHer earlier statement had piqued my curiosity and I wanted to know more. \"So after thousands of lesbian conquests you married Steve?\"",
        "She chuckled at my little joke. \"We met at the end of my senior year and he pursued me with a vengeance.\" She reflected for a moment. \"I wanted a family, children, and maybe a more normal life, I guess.\"\n\n\"And you have it, you have everything you wanted, right?\"\n\n\"We have a great marriage, amazing kids, I'm very happy, but ...\"\n\n\"You miss it, huh?\"\n\nShe thought for a moment. \"We have a mortgage, a successful business, car payments ... we vote Republican, for Christ's sake, but yeah, sometimes I feel like I'm getting old and yes, I miss it.\"\n\nI squeezed her hand in mine. \"You're stunning and you have it all,\" I said truthfully.\n\n\"We had to pay a pretty college girl to be with us this evening because I'm too scared to get out and meet someone.\"\n\n\"Lynn, you could have anyone you wanted, in this club or anywhere else, you know that, right?\"\n\nI couldn't believe the beautiful woman in front of me had any type of self-doubt or anxiety. But it made me realize that she was just like the rest of humanity, or, more specifically, just like me.\n\n\"It's not that easy, honey. All of our friends, Steve's business associates, his clients, are all very conservative. If anyone ever found out about this ... what we're going to do later ...\"\n\nSince I'd been working for Dana I'd never really felt like a therapist until now. \"No one will ever find out about this, Lynn, no one.\"\n\nShe smiled. \"Thank you, honey.\"\n\nWe each took a sip of our water and enjoyed a few seconds of comfortable silence. \"Can I ask you something, something personal?\"\n\n\"Of course.\"\n\n\"What's it like working for your service, what's it really like?\"\n\nThat was a tough one and it took several seconds to formulate my answer. \"It's been exhilarating at times, challenging at times, but more than anything it's fun, and I feel like I'm settling into it, getting into a groove, and I really love it.\"\n\nOf course, she focused on the negative. \"Challenging how?\"\n\n\"A couple of weeks ago I was with an older man, a very older man. He had a difficult time getting a ... you know ...\"\n\n\"Getting it up?\"\n\n\"Yeah.\" I thought for a moment, \" He was old, frail, and weak, but I ... I had to act like I loved everything he did. I had to pretend like I loved his clammy, cold hands touching me. There were times when I just wanted to cringe and it was very difficult for me, but I got through it.\"\n\nIt surprised me how good it felt to unburden my soul to someone. I realized that I had no one to talk to about any of this and it felt amazing to open up to another person, someone who I believed would understand and not judge me.\n\n\"How did you ever get through that?\"\n\n\"You pretend, you think of other things, in my mind I'm somewhere else, and you get good at faking all of the passion they think you're feeling for them.\"\n\n\"I don't know how you did it, but it turned out okay?\"\n\n\"He gave me an amazing review and actually requested me for another evening.\"\n\n\"Will you see him again?\"\n\n\"To be honest, I'm not sure. I have other offers that are much more ... you know ... lucrative. I only spent an hour with him, so I'm not sure if he's worth my time again.\"\n\n\"How often do you work?\"\n\n\"Once, sometimes twice a week.\"\n\nWe each took another sip of water. \"Tell me about a good experience, a time you loved.\"\n\nAt first I thought of my father's friend, Brian. Damn, that was fun. Strong, dominant, took total control of me, insatiable. But then my mind gravitated towards Edward. He'll be easier to talk about.\n\n\"A couple weekends ago, I was with an older guy--\"\n\n\"How old, girl, I need specifics here.\"\n\nWe both broke into big smiles. \"Mid-forties.\"\n\n\"And what was he like? You gotta dish here, girl.\"\n\n\"He was really tall, really, really handsome, and really ...\"\n\n\"Oh my God ... hung?\"\n\n\"Like a horse, I'd never had one before that was that ... you know.\"\n\n\"Damn, and he could use it?\"\n\n\"He was a real cocksman, no other way to describe it.\"\n\nShe giggled. \"Did he also ... you know ...\" she looked down between her legs.\n\n\"Oh, yeah, and he got me off so many ... well, quite a few times.\"\n\n\"All of that, and you got paid for it ... I'm going to be living vicariously through you for the next decade.\"\n\nWe both burst out laughing. \"Dates with guys like him more than make up for the dates that aren't so great.\" I thought for a moment. \"I've always really enjoyed sex, so at least for now this job is a good fit for me.\"\n\nI looked up to the skybox and saw that Steve was looking down, watching us. \"Can I ask you something?\" I said hesitantly. I'd been so forthright with her about my experiences, I hoped she'd be willing to open up a little and expand on that LUG comment.\n\n\"You can ask me anything.\"\n\n\"Was Steve your first ... you know ... guy?\"\n\n\"I was with two guys in high school, both during my last year. But it was ... you know ... high school sex and it didn't really do much for me.\" She thought for a moment before continuing. \"That's probably why I was so into women in college; I didn't really know how good sex could be with a man until I met Steve.\"\n\n\"He's ... you know ... really handsome,\" I said honestly.\n\n\"Yes, he is, and he's a really good lover. I hope you'll enjoy being with both of us,\" she said flirtatiously.\n\nI hope I will too, I thought. Of course, I didn't say that. \"I know I'll love it.\" Again, I looked deep into her eyes. \"Have you ever ... you know ... done anything like this with him?\"\n\n\"We haven't, but we've talked about it for a long time. He loves hearing about my college days.\"\n\n\"I have to admit, I was very hesitant at first before I agreed to meet you.\"\n\n\"Why?\" she asked incredulously.\n\n\"I've never had to deal with a couple's dynamic before, I was afraid there might be jealousy, resentment, something along those lines.\"\n\n\"Elisa, I promise there won't be any of that tonight; just think of him as your lover, okay?\"\n\nI smiled. \"Okay.\"\n\nShe thought for a moment. \"What you said kinda surprises me, though, about being hesitant to agree to meet us. Any other reasons?\"\n\nThis was the point where on every other date I'd lie and tell my client what I thought they'd want to hear. But with her, I chose to be honest. \"I was intimidated by you.\"\n\nA look of shock broke over her face. \"Why, honey?\"\n\n\"That picture I saw, you're ... you're beautiful, Lynn, and you had so many experiences with women in college that I haven't. I wanted to be able to please you, give you everything you've wanted, and I ... I still have some of those doubts, even now.\"\n\n\"Listen to me, okay? This is the first time in a long time that I've felt ... you make me feel alive again, like I'm twenty-two again. That's because of you, okay?\"\n\nI grinned. \"Okay.\"\n\nWe took another drink of our waters, which drained the bottles. She leaned in and we shared another passionate, open-mouth kiss. Feeling her lips on mine, her body against mine, was intoxicating and it was something that I couldn't get enough of.\n\n\"Okay, one last question and you'd better not lie to me, because if you do I'll know.\" Another little smile broke across her face. \"You're not ... you know ... faking it with me now, right?\"\n\nI looked around and hoped no one was watching us. Then I took her hand and guided it under my dress. I felt the tips of her fingers trace across the lips of my vagina through my thong that was soaked all the way through.\n\nHer hungry, lustful eyes met mine. \"No, I'd say you're not.\"\n\n\"Tonight I'm yours, birthday girl, and I want this, I want you, more than I've wanted anything in a long time.\"\n\n- - - - -\n\nOnce we'd finished our conversation, I thought Lynn might want to dance again, but she told me that she wanted to go back upstairs to check on Steve and make sure he was doing okay. As she stood up and took my hand, I couldn't help but think that she was in charge of the evening and everything we were doing.\n\nHand-in-hand, we made our way back up to the skybox where Steve was waiting. Once we were there, she released my hand and gave her husband a slow, lingering kiss.\n\n\"So, have you ladies been enjoying your evening?\" Again, I sat down in the booth in between my couple.\n\n\"We've been having an amazing time,\" she gushed.\n\n\"You looked so sexy out on the floor, dancing with each other.\"\n\n\"Your wife is an incredible dancer,\" I added shyly.\n\n\"She likes you, Elisa, I can tell.\"\n\nLynn moved her hand down to my inner thigh and began to gently rub. \"I think the feeling's mutual.\"\n\n\"Would you like another drink, ladies?\"\n\n\"Yes, let's do some shots!\" Lynn purred.\n\nSteve filled the little glasses again and we ended up doing three more tequila shots that we chased with the champagne. It wasn't long before I had a nice, mellow buzz going. I'd never consumed so much alcohol on any of my previous dates, and it was loosening me up.\n\n\"So, what did you ladies talk about after you danced?\"\n\n\"Oh you know, just girl talk ... getting-to-know-you chit-chat, that kinda thing,\" Lynn said.\n\nSteve's eyes were fixed on my thighs as his wife continued to run her hands over them. Since he was footing the bill for the evening, I thought it was time to include him. I slid closer to him, leaned in, and we exchanged a hot, sensual kiss. I opened my mouth, he slid his tongue inside, and we made out for a few seconds. While we kissed, I let my hand slip down between his legs and I gently rubbed the 'tent' that had formed in his trousers.\n\nWhen we broke the passionate embrace, I looked over at Lynn to gauge her reaction and make sure she was okay with what I'd just done. \"God, that's so sexy,\" she said. \"I could watch you two make out all evening.\"\n\nYeah, she's okay with this. \"I have a feeling we'll be doing a lot more than kissing before the night's over,\" I said saucily.\n\n\"Yes, honey, you will,\" she said flirtatiously.\n\nI agreed to do one more shot with them. I had a really strong buzz going from the tequila and champagne but I didn't want to drink to the point of not being able to take care of them. Like most of my clients, they seemed to like being in control, so I decided to let them choose what would happen next.\n\n\"Are you going to hit the dance floor again?\" he asked.\n\n\"I think we're ready to go up to the room, if Elisa's okay with that,\" Lynn said.\n\n\"I'd love that,\" I said shyly.\n\n- - - - -\n\nWith my hand securely in Lynn's, we walked out of Tao to the large bank of elevators. Then we went up to the 35th floor. I watched as Steve pulled a keycard out of his pocket and opened the door. When I stepped into the room I saw that they'd gotten a suite. The living area had a large couch and two chairs separated by a coffee table. Against the wall was a large armoire with a built-in television that I was pretty sure we wouldn't be watching. The walls were painted off-brown and adorned with extravagant crown moldings. There was also a large picture window with open curtains that offered amazing views of the Strip.\n\nJust as I'd finished taking in the beautiful, extravagant suite, I felt Lynn tugging my hand and exuberantly pulling me towards the bedroom.\n\n\"Why don't you two ladies get started, and I'll join you in a few minutes,\" Steve said with a little grin.\n\n\"Yeah, that's a good idea,\" Lynn yelled once she'd gotten me inside the bedroom. As I tried to take in the enormous room, I found that to be an impossibility when she leaned in and hungrily kissed me. In an instant, our situation became more urgent.\n\nWe each kicked off our shoes and tore at each other's clothing. My hands were busy removing her top while she was sliding my dress down my thighs. Our hands were all over each other while our lips met in one hot, passionate kiss after another. Once I had her top off, my eyes gravitated towards her breasts.\n\n\"God, Lynn, they're ... you know ... amazing.\"\n\nHer face broke into a little blush. \"Thank you, honey ... not too bad for breast-feeding two kids, huh?\"\n\nHer breasts were nearly perfect. Perfect, natural 36D's topped with pink nipples that were proudly standing off her chest. I did notice just a slight bit of sag, which was to be expected after having two children, but overall they were amazing.\n\nWhen she'd gotten my dress off, she commented on mine. \"Oh, baby, I love them, God, they're so perky and sexy.\"\n\n\"Thank you,\" I said shyly. \"The girls aren't quite as big as yours.\"\n\n\"They're perfect, and I love them.\" My eyes gravitated south and I noticed that she had a sexy little light brown 'landing strip' of hair above her vagina. However, the rest of her vulva was smooth.\n\nShe must have noticed where my eyes were looking. \"I like having just a little hair there, it's always made me feel sexy,\" she said.\n\n\"It's beautiful, just like the rest of you.\"\n\nShe playfully pushed me back onto the bed and she fell on top of me. I wrapped my legs around her as we kissed with a sense of passionate urgency. We were kissing each other so hard, and with such reckless abandon, I thought our lips would be bruised. She leaned back and broke our sensual embrace.\n\n\"What do you want me to do to you now, pretty girl?\" she teased.\n\nMy mind was so wracked with lust for this beautiful woman, it was as if I couldn't form a coherent thought. \"Please, Lynn ... please put your mouth on me,\" I pleaded.\n\nShe broke into a devious little smile. \"Where ... what part of your body, pretty girl?\"\n\nI quickly got the sense that she loved to hear me beg, and I was getting a feeling that she loved being in control of everything we were doing. Instinctively, I complied. \"My pussy ... I need to feel your mouth on my wet pussy.\"\n\nShe gave me one more open-mouth kiss and then slid down my body. I opened my legs for her and she quickly slid between them. Then she ran the tip of her finger over my inner thighs.\n\n\"Oh ... you're so wet for me, aren't you?\" she cooed.\n\nMy pussy felt like a warm, wet swamp and I knew my secretions were oozing out of me. \"Please, Lynn, please ...\" I whimpered.\n\nShe gently bit and then licked my inner thigh, causing me to tense up. She was masterful at the art of the tease and it was driving me crazy with lust. \"Are you sure you want my mouth on you?\" she sensually taunted.\n\nMy body felt like it was on fire, and again my lust-addled brain was barely able to form words. \"Please, honey, please ... put your mouth on me.\"\n\nI thought she might tease me again and toy with me, but she didn't. In one swift motion, she sank her tongue deep inside me. I gasped and my ass involuntarily rose off the bed, and I ground my pubis into her mouth. Taking control, she wrapped her arms around my thighs and held me still as she licked the walls of my vagina. Instantly, my body began to climb. She used her tongue to pierce my vagina over and over, taking me closer to going over the edge.\n\n\"Yes, Jesus, that feels so good,\" I moaned.\n\nShe must have known I was close, because just as I began to go over the cliff she withdrew her mouth from me. I was taking deep, heavy gasps of air and trying to get my breathing under control.\n\n\"Where do you want my mouth now?\"\n\n\"Please, Lynn, please,\" I begged.\n\nShe giggled. \"Tell me or I won't do it.\"\n\nThis was nothing like being with a man. It was as if she was inside my head and could read my body perfectly. It was nothing like I'd ever experienced before. I took too long responding to her and she gently bit the tender flesh on my inner thigh again, causing me to let out a low, deep moan.\n\n\"You'd better speak up, little girl, because I'm not going to get you off until you do.\"\n\n\"My clit,\" I begged, \"please ... put your mouth on my clit.\"\n\nWithout a warning she attached her mouth to my clitoris and began to lick and then suck. My hips began to buck wildly, and again she wrapped her arms around my thighs to hold me still. It felt as if I was on a beach, lying in the sand, as wave after wave of my orgasm crashed into me. My body convulsed and it felt as if I couldn't keep air in my lungs.\n\nWhen I began to come down and my senses were back about me, I looked between my legs and she was licking the secretions from my inner thighs. My juices covered her face and she shot me a little smile.\n\n\"I love how you taste, Elisa.\"\n\nPlayfully, I squeezed her head gently between my thighs. \"I want more.\"\n\n\"You're just my greedy little girl, aren't you?\" she teased.\n\nI'd never been this demanding with any of my other clients. Steve was paying me to please her, not the other way around, and I hoped I wasn't overstepping my bounds. However, I could tell she loved being in control and making me beg for pleasure. I'd never thought that Lynn would be tapping into my submissive nature, but she was.\n\n\"I'm yours, and I love being your little girl.\"\n\n\"So you're open to letting me do whatever I want with your sexy little body?\"\n\n\"Yes, honey, I am.\"\n\n\"I think you're going to like this, then.\"\n\nAgain without giving me warning she inserted two fingers into my pussy, which simultaneously opened and filled me. Once they were inside me she curled them upwards, putting pressure on my G-spot. Then she attached her mouth to my clit, making delicious little circles with the tip of her tongue.\n\n\"Oh, God,\" I moaned.\n\nI tried in desperation to hold still, but involuntarily my pussy began to grind on her face. Her other hand moved up to my breast and she kneaded it with her fingers before gently pulling on my hard nipple. It was almost as if she could make me climax at will.\n\n\"Yeah, baby, just like that ... just a little more,\" I moaned.\n\nMy orgasm hit like a train, knocking the air out of my body, and I shook and convulsed as I went over the edge. When I had recovered I realized she was kissing and gently nibbling my inner thighs. After a minute or so I was finally able to catch my breath to the point of being able to speak.\n\n\"God ... you're ... you're ... amazing.\"\n\n\"So, what you're saying is I still have it?\" she teased.\n\n\"I'd say that's an accurate statement.\"\n\nShe broke into a big smile. \"I could spend the rest of the evening between your legs, but now it's my turn, pretty girl.\"\n\n\"Yes, it definitely is.\"\n\nOver the past week I'd fantasized so many times about this moment. Even though I was a bit hesitant and unsure of my abilities, my primary focus now was returning the pleasure that this stunning woman had given me.\n\nShe got up from between my legs and stood on the bed straddling me. I watched as she slowly lowered her vagina onto my waiting mouth. I extended my tongue and it disappeared inside her. I heard her moan and gasp and she took hold of the headboard of the bed to steady herself, then she gently began to grind herself onto my mouth and tongue. She was the most exquisite thing I had ever tasted, and it took only seconds for her sodden pussy to cover my face with her juices.\n\nI kept my tongue long and flat as Lynn moved around on my face, working my tongue in and out of her body, pushing herself closer to the edge. Her moves were raw and animalistic, yet still somehow inexplicably gentle and tender.\n\nAfter grinding her pussy into my mouth for a couple of minutes, I heard her speak. \"I'm almost there, baby ... my clit ... lick my clit.\"\n\nI withdrew my tongue from inside her vagina and obeyed her request. I began to suck on her little bud. It only took a few seconds and she was moaning and shuddering on top of me. Her hips were bucking wildly and I tried desperately to keep my mouth on her, but with an admittedly small degree of success. Once I was sure she'd reached orgasm, I withdrew my tongue because I knew how sensitive I got after an orgasm.\n\nAfter thirty seconds or so she collapsed on top of me, and I wrapped my arms around her and held her tight while she caught her breath. Once her breathing returned to normal, she gently took my face in her hand and we shared a long, passionate kiss. I felt a little embarrassed because I knew she had to taste herself on my mouth, but she didn't seem to mind in the slightest.",
        "\"God, that was so good, honey, and you were worried you wouldn't please me,\" she gently teased.\n\n\"It was really okay?\" I said shyly.\n\n\"It was perfect, everything about you is perfect, Elisa.\"\n\nShe lovingly ran her hand through my hair and I closed my eyes, reveling in the new, romantic feelings I was experiencing. This has been nothing like any of my other dates, I thought. Then I remembered that, even though I'd loved everything we'd done so far, she was still my client and I needed to take care of her.\n\n\"I'd love to do that again, would that be alright?\" I said demurely.\n\n\"Yes, baby, I'd love that.\"\n\nShe slid off of me and lay by my side. I moved her long blonde hair out of her face and kissed her hard as our tongues explored each other's mouths. Then I positioned my body on top of hers. I reached down her thigh and felt her legs instantly open for me, and I gently ran the tips of my fingers over her little landing strip.\n\n\"Oh, that feels so good,\" she moaned.\n\nI slid my knee between her legs, rubbing it up and down the lips of her vagina, feeling her wetness. As we kissed harder, I pressed my body into hers, feeling our breasts sexily crush together. I broke the kiss and heard her moan as I sensually licked and then kissed her neck while I ran my fingers over the lips of her vagina. As I gently nibbled on her neck, I felt her fingers move through my long brown hair, which only turned me on more. I used my knee to keep constant pressure on her pussy and continued to rub it up and down her sex.\n\nI pulled away and looked down at her breasts. They were round and full, with very light brown quarter-sized areolas topped by tiny pink nipples.\n\n\"God, your breasts are beautiful,\" I whispered huskily as I took one of her nipples into my mouth and felt it grow hard. I moved my hand to her other breast, letting her stiffening nipple run through the tips of my fingers.\n\n\"Thank you, baby, I'm so glad you like them,\" she cooed.\n\nMy friend that I'd played around with during my freshman year had smaller breasts like mine, so this very welcome change only got me more excited. I gently sucked and then let her nipple slip out of my mouth, and I saw my saliva slide slowly off of it as I took the other one in my mouth, sucking gently and then harder. A loud moan escaped her lips and her head thrashed against the pillow. She let out a little grunt as I gently bit her nipple and leaned back just a bit, teasing her, before the hard nub of flesh slipped out of my mouth.\n\n\"Please ... baby ... please,\" she moaned as she gently pushed my head down her body.\n\nI moved along her body, causing my knee to finally break contact with her vagina. I kissed down her toned stomach and she gasped when my mouth made contact with her navel. I dipped my tongue in and out, teasing her. After a minute or so, I could feel her hands in my hair again as she pushed my head lower. I was just experimenting and improvising, doing some of the things that men had always done to me, and it gave me satisfaction to know this slow tease was working. As I kissed lower I took in a deep breath, smelling her womanly, musky scent.\n\nI nestled between her legs as she opened them wide for me. Just like she'd done to me earlier, I began to gently kiss her inner thighs, and she let out another deep moan. I knew what she wanted, but I wanted to tease her and make her wait. She shivered when I gently bit and then licked her inner thighs, continuing with the tease of getting closer to her pussy but denying her my mouth where she wanted it. After a few moments of this teasing, she finally broke down.\n\n\"Fuck ... put your mouth on me ... please,\" she whimpered and begged.\n\nI took a second to look at her beautiful pussy. She had light brown outer lips that were engorged and puffy. I gently pried them apart with my fingers to reveal her glistening pink inner lips. I heard her moan loudly when I extended my tongue and sank it inside her, feeling her hands slowly run through my hair. She tasted tangy and sweet, and nothing like I remembered of my college friend.\n\nI moved my hands up to her breasts and gently kneaded them as I simultaneously worked my tongue in and out of her, slowly licking the walls of her vagina, just like she'd done with me. Her hips were slowly grinding on my mouth as she pushed her pussy harder into my face. She was warm and very wet, and her secretions were now covering my face. I kept my tongue long and flat as I dipped it into her again and again while she gasped and moaned, grinding herself harder into my mouth.\n\nI slid back, breaking the contact between my mouth and her vagina. She was soaked with a combination of her juice and my saliva. I removed my hands from her breasts and gently pulled her inner lips apart, exposing her clit. I moved my head forward and ran the tip of my tongue lightly over the little nub, and I felt her body tense up. She pulled my hair as she screamed and her body started to shake and convulse. I held her thighs tight, never letting my mouth break contact with her vagina, until I could tell she was starting to come down and regain control.\n\nLike she'd done with me, I licked her secretions from her inner thighs until her breathing returned to normal. \"God, Elisa, are you sure you're not a lesbian?\"\n\nI beamed. \"I promise, I'm definitely not.\"\n\n\"And you were worried about not being able to please me.\"\n\n\"I'm so glad you liked it,\" I said shyly.\n\nI heard some shuffling from the corner of the room. When I looked over, Steve was naked, sitting in one of the chairs and stroking his cock. He had a fairly impressive member. It looked to be about six inches and a long string of pre-cum was oozing from the head. I'd been so into everything that Lynn and I had been doing I'd almost forgotten he was in the room with us.\n\n\"You two look so good together,\" he said lustfully.\n\nI broke into a shy little smile while Lynn answered him. \"Would you like to join us, honey?\"\n\n\"You know I would.\"\n\nHe stood up and walked over to the bed. I wasn't sure what they wanted to happen next so I waited to see what him 'joining us' would look like. I didn't have to wait long for my answer.\n\n\"Elisa, will you get on your hands and knees?\" he said somewhat more sternly.\n\n\"Yes, of course,\" I said demurely.\n\nI slid away from Lynn and positioned myself in the middle of the bed. He got onto the bed behind me, and I let out a little moan when I felt the tips of his fingers run along the wet lips of my vagina.\n\n\"She has a beautiful pussy, doesn't she, baby?\" Lynn purred.\n\nHe eased a finger inside me and I let out a little whimper. \"She's so tight and wet. It's pretty obvious that you haven't lost any of your skills since your days in college.\"\n\nThey were talking about me like I wasn't even in the room, and that only made me want him more. Slowly, he worked his finger in and out of me. \"Did you enjoy being with my wife, Elisa?\"\n\n\"She's an amazing lover, I loved being with her,\" I said honestly.\n\nHe withdrew his finger from inside me and I heard loud, pronounced slurping sounds from behind me. \"She tastes sweet, like a peach, doesn't she, Lynn?\"\n\nLynn had moved in front of me and was lying against the headboard of the bed with a couple of pillows behind her, and my eyes met hers. \"She's delectable, every inch of her is perfect.\"\n\nI could feel my secretions begin to drip down my inner thighs. I felt like a lab specimen that two scientists were objectively examining. It may have been a little objectifying, but it turned me on to the point that I had to force myself not to touch my pussy.\n\n\"What do you want, Elisa?\" he said in a low, throaty tone.\n\n\"I want you to fuck me, hard and deep. I want you to make me come,\" I said in a voice barely above a whisper.\n\n\"You want me to fuck you in front of my wife?\"\n\nI'm so wet and worked up, I'd let you fuck me in the middle of the casino while a thousand people watched. Of course, I didn't say that. Both of them seemed to love to tease, and I wanted to play into that with them.\n\n\"Yes, I want to feel your big cock inside me and I want your beautiful, sexy wife to watch you do it,\" I purred.\n\nHe moved in closer and I felt the head of his cock rub up and down the lips of my vagina. As he prepared to enter me, Lynn opened her legs and slowly ran the tips of her fingers over her clit. Steve put one hand on my ass and slowly guided himself inside me. He was taking his time and it gave me the feeling that he was savoring each second while he slowly opened and filled me. A few seconds later, I felt our bodies rest together and I knew he was fully inside me.\n\n\"How does she feel, honey, do you like it?\" Lynn said while looking directly into my eyes.\n\n\"Her pussy is so tight ... she feels like a glove,\" he murmured.\n\nUnder Lynn's lecherous stare, Steve slowly picked up the pace and put both hands on my ass for additional leverage. She was rubbing her pussy harder while she watched us, and I felt my breasts gently swaying back and forth as he moved in and out of me.\n\n\"Do you like how my husband's big cock feels, baby?\"\n\nLittle earthquakes were going off in the pit of my stomach as his penis rubbed perfectly against my clit, and I found it almost impossible to answer her question.\n\n\"His cock feels so good,\" I moaned.\n\nAlmost involuntarily, I moved my hand between my legs and began rubbing my clit for additional stimulation, something that didn't go unnoticed by Lynn.\n\n\"My mouth will feel much better than your fingers, honey, would you like that?\" she teased.\n\nMy body was rapidly climbing and I withdrew my fingers to delay my orgasm. \"Yes ... please ... yes ... put your mouth on me,\" I begged.\n\nShe leaned forward, gave me a long, passionate kiss, and then quickly turned and moved underneath me so her mouth was under my steaming pussy and her vagina was under my face. Steve tightened his grip on my ass and began to pound me hard and deep. I had only a couple of seconds to lick Lynn's engorged pussy lips before she flicked her tongue over my clit and then began gently sucking on it. My body exploded in orgasm.\n\nAs my senses slowly came back about me, I heard Lynn say from beneath me, \"Come in my mouth, honey, I want to taste you too.\"\n\nSteve was savagely rutting inside me; I heard his breathing change and he began moaning and grunting. Then he slipped out of me and I remained motionless. I couldn't see either of them, but I was fairly certain what was taking place beneath me. A full minute elapsed before Lynn slid backwards and out from under me.\n\nIt took a few seconds to realize why she didn't say anything to me. She looked up longingly into my eyes, and from the expression on her face I knew what she wanted. I lowered my head and we exchanged a long, deep kiss, and she used her tongue to push some of Steve's semen into my mouth. As we continued to kiss, we exchanged his semen back and forth several times until each of us swallowed what was in our mouths. When we finally finished, we exchanged knowing smiles.\n\n\"He tastes great, doesn't he?\" she said, giving me a little wink.\n\n\"I love how he tastes, Lynn.\"\n\nWe exchanged another hot, romantic kiss. I loved feeling her body close to mine and I knew I no longer needed to worry about building rapport, at least with her, like I did with some of my other clients.\n\n\"I could really use some water, what about you?\" she said.\n\n\"That would be great.\"\n\n\"Steve, we could use some water, can you get some for us?\"\n\nHe'd moved off the bed and was sitting back in the chair, still trying to catch his breath. \"Coming right up, birthday girl.\" He got up and went into the main room, presumably to the mini-bar.\n\n\"You've got a great husband, huh?\" I said.\n\n\"He's really wonderful, see how he dotes on me?\"\n\n\"I noticed that, does he have a brother?\"\n\nWe both giggled. \"I've really enjoyed this, Elisa, this is the best night I've had in years.\"\n\n\"I've loved it too, birthday girl, and we're not done yet, are we?\"\n\nShe broke into a little smile. \"No, we're definitely not.\"\n\nSteve brought us the water, and Lynn and I lay on the bed and talked while Steve sat back down in the chair. He was pretending to give us some privacy, but I had a feeling that he was listening intently to everything we said.\n\nShe was so easy to talk to. We spoke of our shared college experiences and she told me a little about their children. She asked why I'd decided to work for Dana and I told her how my father had lost his job and could no longer help with my college expenses. I'd only known her for a couple of hours, but it felt like we'd known each other for years.\n\nOnce we'd finished our water and gotten our second wind, I could tell she was ready to continue. \"So, what's next on our agenda, pretty girl?\" I said playfully.\n\n\"Would you be willing to try something with me?\" she asked hesitantly.\n\nI had no idea what she had in mind, but we'd established such a connection I felt I could trust her. \"Yes, we can do whatever you like, Lynn.\"\n\nShe looked over at Steve. \"Baby, could you get the toy out of our suitcase?\"\n\n\"Of course.\" He got up, dug around in their suitcase, and then handed the toy to Lynn. She held it up so I could see it.\n\n\"What do you think?\"\n\nMy eyes got wide. \"What the hell is it?\"\n\n\"It's called a Feeldoe.\"\n\n\"I've ... ummm ... I've never seen anything like it; can I ... you know ... hold it?\"\n\n\"Of course.\"\n\nShe handed it to me and I examined it. It kinda looked like a 'strap-on' dildo, yet, there was no 'strap'. It was made of silicone and bent at a ninety-degree angle. One end looked like an egg and there were little nubs that would rub the clitoris once it was inserted into the vagina. The other end looked like a standard dildo and was shaped like a penis. This Feeldoe was black, it looked to be almost seven inches long, and it was really thick, much thicker than a normal cock. I handed it back to her.\n\n\"And just what are we going to do with this?\" I teased.\n\n\"Would you let me use it on you?\" she asked hopefully.\n\nI leaned in and gave her a slow, hot, lingering kiss. \"Yes, baby, you can.\"\n\nShe giggled. \"Thank you, honey.\"\n\n\"Of course ... now let's give that big thing a go before I change my mind, okay?\" I teased. \"How do you want me?\"\n\n\"On your back, I want to be looking at your beautiful face while we do this.\"\n\nI broke into a little smile. \"Okay.\"\n\nI grabbed a couple of pillows and moved to the center of the bed while Lynn took the toy with her to the foot of the bed. I propped the pillows under my head and opened my legs wide for her. I watched in amazement as she opened her legs, took the big toy in her hand, and slowly inserted the 'egg' portion into her vagina.\n\nWhen our eyes met, she playfully wiggled her ass; the penis portion of the toy shook from side to side and I giggled.\n\n\"So what do you think?\" she asked.\n\n\"It's different,\" I had to admit, \"but you look so sexy.\" I thought for a moment. \"Is that even ... you know ... comfortable?\" It was an disparate look, a beautiful woman with flowing blonde hair, an hourglass figure, sexy round hips, large perfect breasts, with a big thick cock protruding out of her. I didn't want to upset her, but I found it difficult not to laugh at the very ... ummm ... interesting ... sight in front of me.\n\n\"It's actually pretty comfortable, but it's not something I'd wear outside the house.\"\n\nI giggled. \"Yeah, I'm not sure what your neighbors would think.\"\n\nShe laughed at my little joke, and then the vibe in the room changed. I saw her hungry, lust-filled eyes traveling over my naked body. \"Are you ready to try this, Elisa?\" she said wantonly.\n\n\"Yes, I am.\"\n\nShe slid onto the bed and got between my legs. \"You have such beautiful feet, do you know that?\" she said.\n\nMy eyes got wide. No one had ever commented on my feet before, and honestly I didn't even know that was a thing. Regardless, if she was into feet I wanted to play along.\n\n\"Do you really like them?\" I said sexily.\n\n\"Oh, I love them, Elisa,\" she purred.\n\nI pulled my leg up and grabbed my thigh so I could control it better, and then I ran my toes over her breast. Immediately, she let out a low, deep moan.\n\n\"Yeah, that feels so good,\" she groaned.\n\nI moved my toes to her nipple and pulled on it, gently at first and then harder, applying more pressure. She closed her eyes and let out another moan. Her other nipple was hardening and I was certain she loved what I was doing. Taking me by surprise, she took my foot in her hand and began sucking on my big toe like it was a little cock. Immediately, my vagina began to moisten. Maybe she isn't the only one who likes foot-play, I thought.\n\nFor the next minute or so she fellated each of my toes until her saliva was dripping down my foot and had almost reached my ankle. My pussy was sopping wet and I couldn't take any more of her tantalizing tease.\n\n\"Please, Lynn, please, put that big thing inside me,\" I begged.\n\nShe let my soaked foot slip out of her hand and it fell back onto the mattress. \"You think you're ready to be fucked now?\" she purred.\n\n\"Yes ... please, I need to feel you inside me,\" I whimpered.\n\nShe took the big cock in her hand and ran the head up and down the lips of my vagina, wetting the tip with my secretions. When she found my aperture, she gently eased it inside me.\n\n\"Oh, God,\" I groaned in pleasure.\n\nShe kept pushing forward, making steady progress, opening and filling me until our bodies rested together. I put my hands on her shoulders and our eyes met. \"That's really thick, so slow at first, okay?\"\n\nShe began to slowly rock in and out of me and a thin film of sweat covered our bodies. \"Yeah, Lynn, just like that, just a little faster now.\"\n\nShe picked up the pace just a bit and surges of electricity coursed through my body. \"I love how your pussy is gripping that big cock,\" she grunted between long deep strokes.\n\n\"Put your weight on me, all your weight, push me down into the mattress,\" I moaned.\n\nShe collapsed on top of me as her pelvis continued to thrust back and forth. I wrapped my arms and legs around her and our sweat sensually mixed together. I moved my body under hers, meeting her hard, deep thrusts, and my orgasm started to build. \"Just a little more, Lynn, just a little more,\" I moaned.\n\nI gently bit her shoulder as my orgasm overwhelmed me and my world went dark for several seconds. When I started to come back around, we were both struggling to catch our breath. Once we'd somewhat recovered, we shared a long, hot open-mouth kiss.\n\n\"Was that okay for you too, Lynn, were you able to--\"\n\n\"I loved it, baby,\" she cooed. \"Those little nubs rubbed my clit while we made love, and yes ... it was amazing for me.\n\n\"Okay ... ummm ... good.\" I'd loved what we just did, but I wanted to ensure that she was getting something out of this as well.\n\nFor the next couple of minutes she lay on top of me and we exchanged hot little kisses. I loved feeling her body in such close proximity to mine. This experience was so intimate, so sexy, it was like nothing I'd ever done before, and this was turning into one of the best evenings of my life. It was also a very different feeling, having the big cock inside me as we lay together. I was used to men going soft once they were finished, but obviously that wasn't the case here.\n\nOnce we'd rested for a bit, she gave me another little kiss and looked deep into my eyes. \"Can you handle one more time?\" she asked hopefully.\n\nI was already getting a bit sore from him and now her, but I wasn't going to let her down. \"I'm up for it if you are.\"\n\nShe giggled. \"Thank you.\"\n\nShe rose off of me while managing to keep the cock deep inside me. Slowly, she started rotating her hips forward and then back with long, deep strokes. Her large breasts were gently swaying back and forth as her body gyrated. I reached up and took them in my hands.",
        "\"That feels so good, Elisa, she purred. \"Play with my nipples.\"\n\nI let her stiff nipples slide between my fingers, then gently rubbed and pulled them.\n\n\"Oh, God, I love that, it feels amazing,\" she gushed.\n\n\"Harder, baby, hard and deep now, make me really feel it.\"\n\nTaking me by surprise, she wrapped her arms around my thighs, holding them up, and the gloves came off. She began thrusting into me with long, powerful strokes. My body immediately began to climb.\n\n\"Yes ... God ... yes ... just like that ... pound me out,\" I said between loud, deep grunts.\n\nThe angle was perfect. The big thick toy was rubbing against my clit, sending me closer to the edge. \"Just a little more, just a little more,\" I moaned.\n\nMy orgasm knocked the air out of my body as it overwhelmed me. As I slowly began to come around, Lynn had collapsed on top of me again, and I wrapped my arms around her and held her tight.\n\nOnce we had our wind again, we exchanged a soft, gentle kiss. \"Did you really like that?\" she asked hopefully.\n\nI smiled up at her. \"Yes, I loved it, and I'll have to get one of those for myself.\" I wasn't exactly sure who'd I'd be using it with if I did purchase one, but it seemed like an appropriate thing to say.\n\nShe giggled again. \"It was so much fun, and I'm glad you enjoyed it.\"\n\nLynn moved to my side, which extracted the cock from my pussy. Then she slid the big toy out of her vagina, and we held each other tight for a couple of minutes and talked while we continued to recover. Again, there was a rustling in the corner of the room, and we looked over and saw Steve. He had another big erection, from watching us, I presumed. It was getting late, but even though I was slowing down and getting tired I knew my evening with my new favorite couple wasn't quite over yet.\n\n\"I put a bottle of water on the nightstand, if you're thirsty,\" he said.\n\n\"Thank you, honey.\"\n\nShe reached over and grabbed the water. After she opened it and took a big swig, she handed it to me and I took a long drink that drained the bottle.\n\nThen Lynn looked over at Steve. \"So, it looks like you're ready for another go,\" she said playfully while looking at his hard cock. \"Which one of us would you like?\"\n\nI inwardly cringed. There was a dull ache radiating from between my legs. His cock and that big, thick toy had already made me sore and I knew I'd be feeling the effects of our evening together when I woke up tomorrow morning. However, they were my clients, and if he wanted me again I wouldn't refuse him. But his choice surprised me.\n\nAfter longingly looking over my body, he said, \"I want the birthday girl, of course.\"\n\nHad his wife not been in the room, I was fairly certain his choice would have been different. However, given the state of my vagina, I was more than happy with his decision.\n\n\"Get over here, then, and let me take care of you,\" she said saucily.\n\nShe grabbed a pillow, moved to the center of the bed, and then put it under her butt, which elevated her hips. Then she opened her long legs for him. He crawled between them on his knees, stroked his cock for a few seconds until he was fully erect, and then eased himself inside her.\n\nI wasn't exactly sure what they expected me to do while they made love, but I wanted to somehow involve myself in their coupling. I slid over to Lynn, sat on my bottom, and scooted myself up against her so the back of her head was resting against my stomach. She wrapped her arms around my thighs and I reached down and caressed her breasts. His gentle, easy thrusts were rocking her against me and I listened to her little moans and pants while he pushed himself in and out of her.\n\nI'd never been in a threesome or watched as a couple had sex, and I actually found it very erotic. I'd never considered myself to be a voyeur, but this was turning me on more than I expected. I loved the way her pussy gripped him, how it expanded and contracted around his big cock, and how her wetness coated his shaft.\n\n\"Your pussy looks so sexy, Lynn,\" I cooed.\n\nShe was deep in the moment and I'm not even sure she heard me. I wanted to somehow be more involved in their passion, so I slid my hand down her stomach and then lightly rubbed her clit while my fingers gently pinched and pulled her nipple. That additional stimulus brought her back to me.\n\n\"Rub my clit harder, Elisa,\" she moaned, \"get me there.\"\n\nI rubbed the little nub harder and the additional stimulus quickly brought her off. Her body shook and shivered between my legs as she released. It was one of the most sensual, erotic things I'd ever witnessed. Undeterred, Steve maintained his slow, gentle thrusts and continued to fuck her through her orgasm. My nipples and clit always got sensitive after an orgasm, so I quickly withdrew my hands and gently rubbed her stomach. A few seconds later, her powers of speech returned.\n\n\"Lie on top of me, baby, I want to taste your pussy again,\" she begged.\n\nI was only too happy to comply with her request. I stretched out on Lynn in a sixty-nine position, which put his cock and her pussy right in my face. I extended my tongue and ran it over her clit and then up along his shaft. I guess Lynn decided that there was no need for teasing or foreplay as she attached her mouth to my clit and began to suck.\n\n\"Oh ... God ... yes ... just like that ... right there,\" I moaned as my body began to climb.\n\nHer talented tongue was making it increasingly difficult to keep my mouth on both of them, so I decided to concentrate my efforts on her. Using the tip of my tongue, I made little circles on her clit, and she immediately tensed up.\n\n\"Let it go, Elisa,\" she moaned. \"Come with me, baby.\"\n\nI felt her body tremble beneath mine as we came together in perfect unison. When my senses were back about me, Steve had picked up the pace and his breathing had changed, so I knew he was getting close. Apparently, that was something Lynn also picked up on.\n\n\"Come in her mouth, baby,\" she said from behind me.\n\nHe withdrew his cock from her pussy, and I took him into my mouth and gently sucked on the head. Seconds later, volley after volley spurted onto my tongue and the back of my throat. I kept my lips locked tightly around him. Once the powerful bursts subsided, I looked up into his eyes, took a little breath, and then swallowed his semen.\n\n- - - - -\n\nThe three of us collapsed on the king-size bed and our limbs were tangled together as we all struggled to catch our breaths and recover. I'd never had such a physically exhausting evening, but I'd loved every second of it.\n\n\"This was amazing, you're amazing, Elisa,\" he said.\n\n\"Thank you,\" I said shyly, \"I really loved it.\"\n\n\"I can see now why you come so highly recommended,\" he stated matter-of-factly, \"and I'll be adding another stellar review to go along with all the others.\"\n\nI gave him a little smile. \"Thank you, I'd really appreciate that.\"\n\n\"I can't even hold my eyes open, so I'm going to get a little sleep and let you two say good-bye.\" Then he added, \"Don't forget to give her the tip before she goes.\"\n\nI was sticky from head to toe and I hoped they'd be okay with me grabbing a shower before I left. I looked at Lynn. \"I'm sure you guys want a little privacy, and I'll get going, but could I take a quick shower first?\"\n\n\"Of course you can, but ... ummm ... could we talk first?\"\n\n\"Sure, I'm not in a rush.\" We were already a half an hour over our four-hour date time, but I didn't mind. I looked over and Steve's breathing had already changed, so I knew he was asleep.\n\nWe got up out of bed and she dug into their suitcase. She pulled out one of his t-shirts for me to wear and she slipped into a nightshirt. We made our way out into the living room and Lynn said, \"Have a seat on the couch, and I'll get us some water.\"\n\n\"Okay.\"\n\nShe walked over to the mini-bar and pulled out two bottles of water. Her hair was a tangled mess and I was sure that mine probably looked just like hers. However, I'd never seen anyone look more beautiful. She sat down next to me and our legs gently touched.\n\n\"I've ... I've never had such a good time with anyone, honey.\" she said.\n\n\"I really loved it too, this has been one of my best dates,\" I said honestly.\n\nHer eyes met mine. \"Do you like me?\"\n\n\"Of course I do, what kind of question is that?\"\n\nShe paused for a moment. \"Enough to see me again?\"\n\n\"Of course. Whenever you and Steve are ready to do this again, just have him contact Dana and we will.\"\n\nShe took a deep breath. I could tell she was trying to formulate her thoughts and figure out how to proceed. \"No, that's not what I meant. Would you like to see ... me ... ummm ... outside of work?\"\n\nMy eyes got wide. \"I ... ummm ... I never even considered the possibility of you wanting something like that.\"\n\n\"I have a few friends, Elisa, but they're more like acquaintances. Women that I know from our children's school, women who I serve on the PTA with, and wives I've met through Steve's work. I don't have any real friends who are mine.\"\n\nMy head was swimming as I continued to process her request. She continued, \"I'd love to have someone to go shopping with, hang out with, and ... you know ... have intimate experiences with.\" She took a sip of her water. \"What do you think?\"\n\nThis was all coming at me so fast, I wasn't sure how to respond. However, it also made me realize that in many ways I was in the same predicament. I didn't have anyone to talk to about what I was doing on the weekends, and aside from a couple of girls in my classes I didn't have any real female friends either. Is this actually a good idea?\n\n\"I'm open to this, but I do have a couple of concerns,\" I said hesitantly.\n\n\"Let's talk about them.\"\n\n\"I'm not sure how to say this, or how you'll react to it, but outside of ... you know ... work, I don't really have the desire to see any additional men.\"\n\n\"I totally understand, and this would be about us, not Steve. He would in no way be involved in anything we do.\"\n\n\"Would he be okay with that?\"\n\nShe giggled. \"He will be if he wants to continue having sex with me.\"\n\nI laughed, and I knew she was teasing, but that sounded a little ominous. \"Are you sure? This mustn't in any way negatively affect your marriage; I couldn't live with that.\"\n\n\"Honey, it won't, I promise you that.\"\n\n\"Okay, but I have to be honest with you, between classes and ... you know ... my work, I don't have a lot of extra time. But I want this, just as much as you do.\" I thought for a moment. \"If you're willing to work around my schedule, I'll make time for you, for us.\"\n\n\"I have a fairly hectic schedule too, but I know we can make this work.\"\n\nWe exchanged little smiles, and then she slid closer to me and we shared a long, lingering kiss. When we broke the passionate embrace, she said, \"Would you like a little company in the shower? I could really use one too.\"\n\n\"I'd love that, Lynn.\"\n\nWe showered together and scrubbed each other clean. After we'd dried each other off, I got dressed and we handed each other our phones and exchanged numbers. Then she walked me to the door.\n\n\"Oh, I almost forgot.\" She walked over to the couch and pulled a thick envelope out of her purse. \"This is for the Elisa Fields college fund, honey, you earned every cent of it.\"\n\n\"Thank you,\" I said shyly.\n\n\"Text me when you get home so I know you got there safely, okay?\"\n\n\"I will.\"\n\nWe exchanged one more little kiss and she shut the door. On my elevator ride down, I opened the envelope and counted twenty crisp, new hundred-dollar bills. Damn, nice.\n\nI pulled out my phone, requested an Uber, and wondered what Dana would think of this. My first thought was to hide it from her, but I decided against it. I reasoned that she might not approve, or would try to discourage me, but this was something I'd fight for if I needed to. I was one of her best employees and this was going to be something that she'd have to accept. In the end, I figured she would. Lynn wasn't a man and I'd be seeing her as a friend on my own time. I needed this, and she'd want to keep me in her service, so I knew she'd relent.\n\nIt had been one wild, crazy evening, but one I'd loved. On the Uber ride home, I set my sights on Edward, or, more specifically, his son. I knew he'd be a challenge, but I felt more than ready to take on that task and turn him into a respectful young man and a decent lover.\n\n- - - - -\n\nTo Be Continued ...\n\n \n"
    ],
    "authorname": "melanieatplay",
    "tags": [
        "escort",
        "las vegas",
        "lesbian",
        "college girl"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-girlfriend-experience-ch-04-1"
}