{
    "title": "Lady in Red Pt. 02 Ch. 15",
    "pages": [
        "You're not thinking about going to Paris without Charlie and me, are you?\" asked Jordan as soon as Gwen had announced her intentions.\n\n\"Oh, Jordan! I hate to ask anyone to go to funerals. This isn't going to be a fun, romantic trip,\" pointed out Gwen. \"If you'd like to come with us, we'd be extremely glad to have you! I should've known that you'd want to help those poor kids. You're a true friend.\"\n\n\"And don't forget it!\" kidded Jordan before turning to Charlie. \"We need to get some clothes packed and be ready to go. I seem to recall meeting a really sweet guy in Paris a few years back. Even a sad trip to Paris will bring back some very nice memories.\"\n\n\"Hey, I have memories of Paris, too. Plus, I'd like to make some new ones with Chip, so save us a couple of seats,\" insisted Kate as she held Chip's hand.\n\n\"It looks like we're going to have a full aircraft,\" added Paula. \"Let's just get a count of who's going so we know how many helicopters we'll need to get us all to the airport.\n\nEight hours later, Gwen, Steve and their group landed at Charles de Gaulle in Paris. An hour after that, their van pulled to a stop a few blocks from the orphanage that had been bombed. The streets were blocked so that traffic could get no closer.\n\n\"We can get a cab to take us back to the hotel,\" suggested Gwen as she stepped onto the sidewalk. \"I know Lisa and Jason need to take care of Theresa and the rest of you are exhausted. Jordan, Charlie, Steve and I will join you guys at the hotel before too long. We just want to see if we can be any help here.\"\n\nThe foursome had only walked a short distance up the sidewalk when they were stopped by a gendarme. \"My friends and I are here to see if we can help in some way,\" explained Steve in fluent French. \"We came from The United States as soon as we heard about the tragedy. We're...\"\n\n\"You're Steve Hammer! These beautiful ladies are Jordan Quick and Gwen Anderson, and you are Charles Burns!\" exclaimed the policeman. \"Allow me to ask my superior if I may permit you access.\"\n\n\"You may continue,\" stated the officer after a brief conversation on his communication device. \"Your appearance here is most welcome. This has been a terrible time.\"\n\nThe group walked another block and turned a corner. They were stunned to see large chunks of brick and debris littered across the sidewalk and the narrow street. There were police everywhere. The building that housed the orphanage had one end completely missing. Jagged boards and concrete extended from the section of the building that remained standing. On the western side of the building was a fenced in playground area. Gwen's heart lurched when she saw children of various ages with bloody bandages occupying benches and sitting on the cold ground.\n\nA well dressed man with a name tag approached and introduced himself in English. \"I am Inspector Jacques Bordeaux. Your concern is greatly appreciated, but I don't know what you could possibly do to help the situation.\" \n\n\"Sir, who owns this building? Who's in charge of the orphanage? Where are the children sleeping now? I think we can help if you allow us the opportunity,\" insisted Gwen as she surveyed the destruction all around.\n\n\"The lady in the green jacket over by the van is the supervisor. She can answer those questions for you, if you speak French,\" answered Inspector Bordeaux.\n\nAs they approached the woman, it was evident that she was having a very bad day. She was on a cell phone cajoling and then threatening the person on the other end of the conversation. When she looked up to see Gwen and Jordan standing in front of her, she disconnected her call and dropped the phone into a pocket.\n\n\"La Dame en Rouge!\" proclaimed the woman as she first hugged Gwen and then Jordan before turning her attention to Charlie and Steve. She hugged the two men and gave them kisses on both cheeks. Then she started speaking rapidly in French.\n\nSteve quickly explained that he'd be required to translate for everyone, so she needed to speak more slowly. It didn't take long for Gwen to ask the question that was on her mind.\n\n\"What are you going to do with the children that survived? Do you have somewhere to place them?\" repeated Steve once Gwen had finished speaking.\n\n\"I'm trying to get the government to allow use of the old hospital on Rue Lepic. It was recently replaced by a larger one three blocks north. The owners are asking far more than we can afford. We depend on government assistance and donations and have very little reserves. I am hoping the government will intervene and force the owners to allow us temporary use of the facilities. It would suit our needs perfectly, with only minor alterations.\"\n\n\"Can you give me contact information for the owners?\" asked Steve, knowing where Gwen had been headed with her questioning.\n\n\"Certainly, I have spoken to them several times today. I thought this tragedy would have softened their hearts, but such is not the case. They are holding firm on their price,\" replied the woman as she handed Steve a slip of paper with the information he requested.\n\nJordan, Charlie, and Gwen smiled at each other as Steve made the call. They had global calling plans on their cell phones so Steve had no difficulty reaching the owners. While they did not speak French, Gwen and Jordan were able to easily follow the conversation by Steve's tone and gestures. After a few minutes discussion, Steve disconnected.\n\n\"Let's get over to their office on Champs-Elysees and get this done right now,\" urged Steve. \"They agreed to drop the asking price sixteen percent for a fast cash transaction.\n\n\"Madam, we'll acquire ownership of that building as fast as possible and then we'll donate it to your organization to use. We were thinking that we'd also buy this damaged building from you and refurbish it. Please find out how much you'll ask for it and let me know. Here's my card,\" offered Steve to the flabbergasted woman.\n\nAn hour later, Lady in Red Productions had a contract to purchase the old hospital, including the right to begin immediate repairs and upgrades. While they had been walking the ten blocks to the office on Champs-Elysees, Gwen had called Michelle D'Anjou and explained what they were trying to accomplish. Though her father was no longer French president, he was very well connected in Paris and quickly recommended a builder. By the time they had a signed agreement, the contractor had been hired to begin immediate renovations.\n\nMichelle D'Anjou had been caught completely by surprise when Gwen laid out the plans for the old hospital. She was no stranger to real estate values in Paris and had a very good idea how much money Lady in Red Productions had to spend to gain ownership of the building.\n\nLike everyone else in France, the terrorist bombing of the orphanage had disgusted and saddened Michelle. Gwen's call had been the first bit of good news she had received in what seemed like forever. Her American friends were actually making a difference and she marveled at their generosity.\n\nHaving completed the negotiations and signed the necessary documents, Steve phoned the lady in charge of the orphanage and told her what they had done. He asked her to meet with the contractor at the building so she could have input into what the orphanage would require in the way of renovations. Then he asked if the children needed a temporary place to stay. He was assured that the government had stepped in and supplied living space for the children. Tired, but content, Steve, Gwen, Charlie, and Jordan returned to the hotel, where they found the rest of their group having dinner.\n\n\"Well, Kate and Lisa, we just spent a big chunk of your money,\" began Gwen as she took a seat next to her mother.\n\n\"You should try the croissants,\" replied Kate. \"They're to die for!\"\n\n\"Don't you want to know what we did with your money, and how much we spent?\" asked Gwen. \"We spent a lot more than just a shopping spree.\"\n\n\"I wouldn't blame you guys if you spent every last nickel,\" answered Kate as she filled her plate. \"You're the ones that earn it. I know that you wouldn't do anything stupid, but would probably do something extremely generous. We were trying guess what you guys would do, and what it would cost.\n\n\"Lisa said you'd pay for the funerals since the kids were orphans. Mom thought that you'd put the kids up in hotels until their place is rebuilt. I told them you'd probably buy another building to house the orphanage,\" finished Kate as she bit into her third croissant.\n\n\"You're right, Kate, but I like Lisa's and Paula's ideas, too,\" admitted Jordan. \"Thanks, Kate and Lisa, for being so understanding of what we're trying to do with the company. We do make lots of money, but we're trying to do good deeds with it. I'm so glad all of us see these things the same way.\"\n\n\"So fill us in on what you guys managed in a few hours in Paris,\" coaxed Lisa. \"We had a nap with the baby and Mom's going to take care of her while Kate, Stephanie, Chip, Jason, and I go sightseeing. Do you want to go with us?\"\n\n\"I'm bushed,\" confessed Gwen. \"By the time I finish eating, I'll be ready for a hot shower and some personal time with my guy. This time change thing has me out of kilter. It's only ten in the morning back home, but it sure feels later.\"\n\n\"Charlie and I are planning on getting some rest,\" added Jordan. \"It's very tiring spending large sums of other peoples' money.\"\n\n\"So tell us what we bought and how much we spent,\" insisted Kate. \"I need to know if I can still go shopping in these high fashion boutiques. Last time we were here, we had a couple hundred dollar allowance for the whole week.\"\n\n\"We didn't spend that much,\" assured Steve. \"You can still go shopping to your heart's content. I can see that Chip's looking forward to it. They will serve wine and champagne to the better customers, Chip.\"\n\n\"How about beer?\" asked Chip while the others laughed at his discomfort. \"I'm hoping that not being able to speak French will limit Kate's shopping abilities.\"\n\n\"Not likely,\" laughed Paula. \"They say that love is the universal language, but you'll find that when money talks, everyone listens, and understands, regardless of language barriers.\" \n\nSteve and Gwen went to their room, made love, and then fell asleep. By nine PM, Paris time, they were wide awake again. \n\n\"Let's go see if Mom and Dad are still up,\" suggested Gwen. \"If Theresa is awake, I'll get to play with her. She sure is cute.\"\n\n\"She is that,\" agreed Steve. \"I don't think there's ever been homely girl in your family. She's going to be a heart breaker.\"\n\n\"I never told you, but Lisa wanted to name her after you, but I talked her out of it,\" admitted Gwen. \"I told Lisa that our first child, be it a boy or a girl, would have your first name. That would make it confusing if there were two little 'Steves' or 'Stevies' running around Grandma's house. I'm worried about every woman we know wanting to name their kid after you before we have one.\"\n\n\"I doubt if it's that bad,\" chuckled Steve. \"It would really feed the gossip columns if there were half a dozen babies named 'Steve' in our group.\"\n\n\"Sometimes I wonder if you have any idea how my female friends and relatives feel about you. They'd all have your babies if they thought it wouldn't cause any problems with the dynamics of our group,\" asserted Gwen.\n\n\"But we both know that it would cause serious problems, so it simply won't happen,\" insisted Steve as he led Gwen down the hall to her parents room and knocked on their door. \"You're the only mother any kids of mine will have. You can take that to the bank.\" \n\n\"You're so smooth,\" replied Gwen as she pulled Steve's face down for a lingering kiss as the door opened.\n\n\"Perhaps you should go back to your room for round two, or three, or whatever the count is,\" suggested Paula with a smile as she waited for the couple to disengage. \"Come on in. There's some interesting stuff on TV, but we can't tell exactly what's being said.\"\n\nLisa, Kate, Stephanie, Jason, and Chip were already seated when Steve and Gwen entered the living area of the suite. Steve listened to the talking heads on TV for a few minutes before reporting to the others.\n\n\"The press has already discovered that Lady in Red Productions has purchased the old hospital. They know it's going to be renovated quickly and then become the new home for the orphans. The government has announced that it will cover all funeral and hospital expenses that resulted from the attack and will supply temporary living space for the kids. There's an uneasy feeling in the city that terrorists may make more attempts to murder and create mayhem,\" added Steve.\n\n\"What about all of those people that were interviewed?\" asked Kate. \"I heard your names mentioned a few times. What was that about?\"\n\n\"It seems that a lot of the people in Paris approved of our decision to help the orphanage. They were expressing their gratitude.\"\n\n\"Okay, now what about some of the things the American politicians were saying? They didn't play what they said in English, but that guy looked like the cat just crapped in his oatmeal,\" opined Chip as he pointed to Senate Majority Leader Danson's face on the screen.\n\n\"Well, they seem to feel that those of us with Lady in Red Productions, and Gwen in particular, are trying to take advantage of the situation. They always see things through political glasses, while we're simply trying to help kids that really need it. Both Danson and the Speaker of the House Lancer have taken great pains to explain to the citizens of the US and France that we do not represent the U.S. Government,\" replied Steve. \"They'll be leading the official American delegation that comes to Paris for the funerals. They've pointed out that we're not included in that delegation.\"\n\n\"Why is that so important to them?\" wondered Gwen. \"Who cares about things like that?\"\n\n\"Professional politicians,\" responded Ted. \"They don't know any other way to act. You're an unknown quantity to them. They understand politics and how to curry favor with the voting public. They assume that since you're getting good press here in Paris, it's politically motivated. It's all they understand.\"\n\nDuring the discussion, Steve had picked up Theresa and carried her around the room. Lisa watched and smiled broadly. \"You promised that you'd love my kids. It looks like you're keeping that promise. You'll make a great father.\"\n\n\"If and when he gets married,\" added Paula. \"He seems to have honorable intentions, but I expect to see a ring on my daughter's hand before he becomes a father, at least of a grandchild of mine.\"\n\n\"We were just talking about that, Mom. Steve told me that I'd be the only mother his kids would ever have. Unless there's a trick in that statement someplace, I think it means that I'm the only woman that'll be giving birth to his children. That's a commitment, don't you think?\"\n\n\"Not really, at least not in my book,\" responded Paula. \"A commitment slides on your finger and declares you legally and morally bound to each other forever. Lisa and Jason are committed.\"\n\n\"How about Chip and me?\" asked Kate. \"I've already told him that I'll be having his kids.\"\n\n\"Once again, that isn't the commitment that I'm talking about,\" repeated Paula.\n\n\"Mom, you know Gwen wants to finish med school, and I want to finish law school before we get married. You'll scare these guys off if you keep talking about marriage,\" warned Kate.\n\n\"No fear here,\" responded Chip immediately. \"And from what Steve's been telling me ever since I met him, I'd say he looks forward to the day he and Gwen get hitched. Don't worry about us getting cold feet. We just worry that you ladies will realize that you can do better and drop us like bad habits.\"\n\nGwen's phone chimed, so she left the room to answer it. She was back a few minutes later with a serious face.\n\n\"That was Michelle D\"Anjou. Emotions are running pretty high in Paris now. The French want to show the world that they will not be bullied or threatened by terrorists. There are plans for a bunch of speeches, and what she calls preening by politicians at the site of the bombed orphanage on Tuesday. The Mayor, who is one of her father's better friends, feels it is not enough and it doesn't involve the public properly. \n\n\"He, along with local civic leaders, has asked if we would give a performance here in Paris in honor of the killed and injured children, as well as the courage and determination of the French people.\"\n\n\"From what I've read and been told by my history teachers, that would be a damn short performance,\" joked Chip.\n\n\"I know you thought you were being funny, but that was really in poor taste,\" chastised Kate. \"These people are fighting for their identity, their pride, and their way of life. They can either live in fear or decide that they won't go silently into the night.\"\n\n\"Are you trying to quote 'Independence Day' or Dylan Thomas?\" laughed Gwen. \"Chip can make jokes like that when it's just family because we know his sense of humor, but please don't say things like that where you might be heard by others, and quoted.\" \n\n\"The band would never get here and get set up in time, would they?\" asked Steve. \"Where does he want to hold it, and how long does he want us to perform?\"\n\n\"Michelle said that there are a lot of very good musicians in the city that would love to play for us. The weather is supposed to be unseasonably warm for the next few days, so they are thinking of an outside venue that could accommodate large numbers of spectators.\"\n\n\"If you're game, I'll give it a shot,\" agreed Steve, \"especially if Charlie and Jordan will go along with it. I need to run it by Senator Chatham. I'm supposed to be with her on Tuesday. I'll call her now. Where would it be held?\"\n\n\"The Mayor has been talking to the business and political leaders in Paris. He said that if we agree to perform, he'll have us set up at the Arc de Triomphe! Every major road in Paris goes through there, or so it seems. It'll be a traffic nightmare, but they'll shut down traffic for the show. People will have to walk quite a ways, but the Mayor feels strongly that they'll come if we perform. Michelle and her dad agree. It would be a night like they've never seen in 'The City of Light'. Michelle told me that the mayor referenced our concert in Kiev, and the one in Washington, and felt that Paris would be the perfect city for another.\n\n\"They hope to take donations from the people at the event, find corporate sponsors, plus sell the movie and TV rights with all proceeds going to the orphanage fund. Of course, they asked us to donate our services. I promised I'd get back to Michelle as soon as possible,\" finished Gwen. \n\n\"I'll call the senator right now,\" promised Steve as he stepped into the next room. Almost five minutes later, he returned.\n\n\"It's a good thing I asked the Senator. She said there's a bit of a shit storm, her words, not mine, over Gwen being here in Paris. The politicians in Congress feel that she's stealing their thunder. They were wishing they could have her called back to the US, like she was a diplomat or something. Both parties have been complaining to President Hanson. Senator Chatham called Hanson to see if he'd have a problem with us doing a concert.\n\n\"Here's the good part. President Hanson thought it was great idea, but he's asking a favor of us. He'd like to be able to tell the French government and the press that we're his personal representatives for the funerals. He'd like to be the one to announce that we're performing here Tuesday night in a show of support and unity with the people of France.\n\n\"In short, he's asking to bask in some of the good press this should create. He's not going to concern himself much about the politicians and their self-serving attitudes. That's the good part about being a lame duck. I told Senator Chatham that we'd have to speak to Charlie and Jordan before we can agree to anything like that.",
        "\"Let me give Charlie a call and see if he's around,\" offered Gwen. \"He's the musical brains of this operation and we need him in order to get this right.\"\n\nGwen was only on her cell for a few seconds before she disconnected. \"Charlie said they'll be right up. They were just entering the lobby.\"\n\nA short time later, there was a knock on the door. Kate opened it to allow Jordan and Charlie access to the suite. \n\n\"We woke up and went for a little walk,\" explained Jordan. \"It's all over Paris that Lady in Red is buying the old hospital for use by the orphans. People were stopping us and telling us how grateful they were. It makes me feel proud of our company, and the great things we do, mostly because of Steve and Gwen.\"\n\n\"We're not going to have that discussion again,\" insisted Gwen. \"You two are right there with us in everything we do and we're proud of you both. But we have bigger fish to fry. Michelle D'Anjou called to tell me that the mayor and city fathers would like us to give a concert Tuesday evening. They think it'll help heal the city as well as lift everyone's spirits. They want to set it up at the Arc de Triomphe, if you can imagine that!\"\n\n\"We don't have the band here. They're scattered all over the place on vacation. I don't think we can get them here in time to begin to prepare for this,\" worried Charlie.\n\n\"Michelle said that she could round up some excellent musicians for the event. She flat our guaranteed that they'd be the best, and we'd be very pleased with them,\" countered Gwen to Charlie's objection.\n\n\"Let's do it, Charlie!\" gushed Jordan. \"This'll be big, like the show in D.C. a few weeks back, or even the one we did in Kiev. I assume it'll be televised here in Paris?\"\n\n\"The proceeds from donations, corporate sponsors, and TV and movie rights will all go to the orphanage fund,\" replied Gwen. \"We'd be donating our time and talent.\"\n\n\"That just may be why God gave us the time and talent!\" enthused Jordan. \"I feel like the luckiest person in the world sometimes. I love to help others when I can, and this looks like a great opportunity. What do you think, Charlie?\"\n\n\"Have I ever gone against you, when you really wanted to do something, especially something that helps so many others?\" asked Charlie rhetorically. \"Depending on how good the musicians are that back us, it might be a bit sketchy, but I'm in if you want to do it.\"\n\n\"Now for the rest of it. You need to know that President Hanson wants to have us represent the White House at these funerals, and he wants to be the one to announce that we're doing the concert to show unity and support for the people of France,\" finished Gwen.\n\n\"I like President Hanson. He's been very nice to me, so I'm fine with that. Will it be a problem for your position in Congress, Gwen?\" asked a concerned Jordan.\n\n\"If doing a good thing is a problem for someone, so be it. I can't spend my life worrying about the feelings of these dinosaurs we have in Congress,\" insisted Gwen. \"Let's just agree to do this because it's the right thing and if it helps President Hanson, that's fine, too.\" \n\n\"Hello, Michelle?\" greeted Gwen on her cell a minute later. \"Tell the Mayor and your father that we'll do it! Let them know that President Hanson will be announcing it, along with the fact that we are representing the White House at the funerals for the children that were killed. We didn't think you'd mind.\n\n\"Please be sure you give us talented musicians. That's why we sound good most of the time. We always have excellent talent around us. We'll plan on doing the show Tuesday evening. You get everything ready and we'll be there.\" \n\nJordan waited for Gwen to disconnect before making another observation. \"Almost every magazine in the city has a picture of Gwen coming out of the cold river after saving Hardy. It's pretty obvious that they have less strict codes here about showing nipples. That sheer bra was totally transparent. You looked about as sexy as a woman can look. I bet those magazines are selling like hotcakes. In addition, 'Diana' is showing in almost every theater in the city and people are lined up to see it. Stephanie, just how big was the opening weekend?\"\n\n\"We set records for a January opening,\" bragged Stephanie. \"It's very unlikely that you'll spend as much on the orphanage as your movie makes for us in France this week. Other actors go on talk shows to promote a movie. Steve and Gwen do heroic deeds instead, and it seems to work quite well. Cynics would argue that you made money when you bought that hospital for the orphans simply because of the excellent PR, and it's brought even more attention to your movie. Of course, everyone in this room knows you did it to help the kids and have no real concern about promoting yourselves. This concert you're planning, without consulting me, I might add, will just blow the socks off France. You guys are conquering another country!\"\n\n\"We didn't come here to win anyone over,\" corrected Gwen. \"We're here to show our support and concern for the city, and country after a horrible terrorist attack. You should have seen those children with bandages and dressings on their little bodies earlier today. Have they determined how many children were killed in the attack?\"\n\n\"A little while ago, they said that twenty one orphans had died, with three more in critical condition, and six others with non life threatening injuries. It would have been worse if most of the kids hadn't been in the auditorium watching a movie,\" revealed Paula. \"It was a horrible thing.\"\n\n\"There's nothing good about terrorism. We all know that firsthand. That's one of the reasons I'm so determined to help victims. It's a terrible thing to feel so vulnerable, and so violated,\" replied Gwen with emotion. \n\nThe next morning saw everyone well rested and eager to start the day. The entire group was gathered for breakfast in the hotel dining area. \n\n\"I finally got to make love with the Eiffel Tower in the background,\" sighed Kate as Chip began to fidget. \"I can cross that off my bucket list. Gwen was so lucky to have that for her first time.\"\n\n\"I met Charlie on our first Paris trip, but we weren't romantically involved back then. We made up for it last night, wouldn't you say, Charlie?\" asked Jordan to a grinning Charlie.\n\n\"It was romantic, wasn't it?\" agreed Lisa as Jason blushed. \"I can see why Gwen waited so long now!\"\n\n\"I don't think Ted and I need to hear about our daughters' love lives,\" complained Paula, but with a smile. \"But it's nice to hear that you're all feeling well loved this morning. It certainly is a romantic setting.\"\n\n\"Mom! Not you, too!\" laughed Kate. \"Every woman in the family was getting it on last night!\"\n\n\"If only that were true,\" griped Stephanie. \"I feel like the proverbial fifth wheel around here. I can see where I need to pick up my game and find a big strong, studly guy like everyone else in the family. Do any of you guys have an unmarried brother?\"\n\n\"What about Becky and me?\" questioned Ashley. \"I fell asleep after that long plane ride and slept around the clock. Becky and I could use some romance, too.\"\n\n\"Well, that isn't exactly true,\" smiled Becky as she clutched Pete's hand. \"I'm not complaining, so don't include me in your old maid scenarios. Seeing the Eiffel Tower all lit up outside your window does add a lot to the occasion. Pete and I had a 'Steve and Gwen' first time, sort of. At least it was the first time for us together. I'm not trying to brag or anything, but it was wonderful!\"\n\nPete had turned all kinds of colors as he stared down at his empty plate and fidgeted with his napkin while everyone else 'oohed' and 'aahed' in good humor.\n\n\"Great! Even my little sister found a good guy before me,\" lamented Ashley in mock disappointment. \"The truth is, I'm not surprised. You seemed to like the guy even before he saved our lives. It must have been his sweet talk the first time you met him. I'm really happy for you both. Mom will be excited, especially if you wind up married and give her grandchildren. I think that she's given up on me.\" \n\n\"I may be able to help,\" suggested Chip. \"I have a cousin on my mother's side. He's going to be released soon and he'll be looking for female companionship after spending the last three years solely in the company of males.\"\n\n\"Okay, introduce us!\" exclaimed Ashley, which caused everyone at the table break into more laughter.\n\n\"Look on that TV over on the far wall,\" pointed out Kate. \"That woman is talking about Steve. I heard his name, along with a bunch of stuff I couldn't understand. What's she saying?\"\n\n\"She's the mother of one of the kids that were kidnapped by the terrorists in Iraq,\" explained Steve. \"She's giving her somewhat inflated opinion of my dashing good looks and unmatched courage. She was the one parent that seemed willing to sacrifice more than my life to save her daughter.\" \n\n\"I hope they're listening to her!\" exclaimed Gwen. \"I'm still pissed about that deal. You almost lost your head. You did save all of those kids. They really should be singing your praises all over the place!\"\n\n\"But Steve did lose his head over you,\" observed Kate. \"Are you going to apologize to him?\"\n\n\"No, but I've been singing his praises all over the place,\" retorted Gwen with a smile. \"Nobody does it better!\"\n\n\"It seems to me that you can't really say that unless you've had a few more experiences to compare to Steve's paltry skills, and less than impressive equipment,\" began Chip before feeling Kate's eyes boring into his head. \"With that in mind, Jason or Pete may be willing to help you out. I'm not interested, so don't ask me!\"\n\n\"You're on your own, Old Salt!\" declared Jason. \"My wife firmly believes I'm the best, and I'm secure with that position. I have nothing left to prove, and I certainly wouldn't want to do anything to weaken Steve's self esteem, nor harm Gwen's illusions.\" \n\n\"That's my guy!\" praised Lisa. \"He's always considerate of others. That and not wanting to end up neutered caused him to make the correct decision.\"\n\n\"I don't think this should be a competition,\" reasoned Kate. \"Let's agree that since Gwen isn't going to try out other studs, and since she won't allow Steve to sample the many delights available to him, she shouldn't be saying he's the best anymore. There's no way she can know that, so it's simply a very presumptive and provocative statement.\"\n\n\"I agree with the first part that Steve and I won't be test driving anyone else, but I'll stand by my belief that he's the best,\" insisted Gwen as she kissed Steve's cheek.\n\n\"Okay, I think Jason's the best,\" insisted Lisa.\n\n\"It's Charlie, hands down, or hands all over everything, or whatever. You know what I mean,\" added Jordan with a big smile.\n\n\"Well, I think that Chip's probably the best, or at least pretty good,\" joked Kate as she watched Chip's smile disappear as she qualified her statement.\n\n\"Thanks for that ringing endorsement!\" cracked Chip as he hugged Kate. \"Now you've gone and done it. I was saving my best stuff for our wedding night, but I'll be bringing my whole bag of tricks to bed tonight.\"\n\n\"Uh oh, Kate! I've seen what he carries in that bag,\" worried Steve. \"Whips, gags, gels, assorted leather devices, and the unabridged Kama Sutra were in that bag when we spent a weekend in Berlin.\" \n\n\"Now we're talking!\" responded Kate as she arched her eyebrows several times. \"Does anyone know if I should tie Chip up before I use that stuff on him?\"\n\n\"You're going to have to tie me up, and knock me out, if you think you're going to use any of it on me,\" stated Chip emphatically.\n\n\"You're no fun. Steve would you let me tie you up and use that stuff with you?\" asked Kate with a wicked grin.\n\n\"Your rope or mine?\" responded Steve immediately. \"I know Gwen would go along with it, if only to end this senseless discussion over who's better. Once you agree with her, the debate would be over. I'd be doing it for peace and harmony.\"\n\n\"Yeah, I can go along with you doing it for a 'piece', but believe me, there'd be no harmony,\" predicted Gwen. \"Besides, why would you want to make Chip feel bad?\"\n\n\"It's more about making Kate feel good,\" quickly pointed out Steve.\n\n\"How would convincing her that you're the best lover in the world make her feel good, at least for any more than the few hours you'd spend doing it?\" shot back Gwen. \"How would she ever settle for Chip again after sampling you?\"\n\n\"Did you girls ever hear your father and me talk like this?\" asked Paula while acting shocked. \"There'll be no comparing, sampling, gelling, or tying anyone up. In fact, I think I'd better confiscate that bag of tricks right now.\"\n\n\"Mom, we're talking about a mental bag of tricks, and I suspect that you and Dad already have one of your own,\" replied Lisa. \"All these years I thought you two had stopped having sex nine months before Kate was born. Now I have to revise my timeline to about twenty years from now. That really gives me a lot to look forward to!\" \n\n\"I won't comment on any 'tricks' we may employ from time to time, but I have to admit that since you girls have grown up and become such beautiful, successful and sexual young ladies, we've been having a bit of a second honeymoon, wouldn't you say, Ted?\"\n\n\"I don't know how to respond to that. I've spent my entire married life believing that any discussion of our personal life would get me shut off for a year or two, and to be quite honest, I'm not willing to risk it,\" admitted Ted as everyone laughed at his obvious concern. \n\n\"See what a cool family we're part of?\" laughed Becky as she hugged Pete's arm to her chest. \"We can talk and joke about anything without jealousy or discord. That's how families should be. We don't try to pretend that sex isn't fun, or that we never do it. In fact, it's quite the opposite, and Paula and Ted are as bad as any of us. They're the coolest parents!\" \n\n\"As much fun as this discussion is, we'd better hurry up and eat,\" pointed out Jordan. \"We're scheduled to rehearse with the musicians Michelle rounded up for us in less than an hour. It's kind of daunting to perform in front of thousands of live fans and millions on TV without knowing exactly how your musicians are going to perform. I hope they're as good as Michelle promised.\"\n\nAfter several hours of rehearsing the songs they intended to perform, Charlie was all smiles. \"Michelle was right on! We have some really good musicians here. I think we can use all seven of them. We've never had a sax player before, but did you hear that girl play that thing?\"\n\n\"I did and I was wondering if you were as impressed as I was,\" answered Steve. \"They're all good, but she's unbelievable. She really puts her heart and soul into everything she plays, and she's extremely talented!\"\n\n\"Charlie, you had a great idea about taking advantage of the full moon tomorrow night,\" enthused Gwen. \"I think those 'moon' songs will go over great!\"\n\nThe group took an hour off for lunch and then worked a few more hours on the songs they expected to perform. All of the musicians were excited about the opportunity to appear in concert with the most famous and successful singers in the world. Their enthusiasm was evident from the effort they put into their music.\n\n\"Things are looking up!\" beamed Jordan once the rehearsal was over. \"These folks are packing some major talent. That Jodie girl, on the sax, was incredible. She'll be a big star before long, or my name isn't Jordan Quick Burns.\"\n\nIt was late afternoon by the time the Jordan, Gwen, Charlie, and Steve left the studio. They decided on doing some sightseeing for an hour or two before returning to the hotel. Everywhere they went, they were recognized by fans. They spent most of their time signing autographs and posing for pictures. \n\nSome fans used their phones to get pictures of them with the Eiffel Tower in the background. \"I have nothing but good memories of that tower,\" beamed Gwen as she clutched Steve's arm. \"Remember how we could see it out our window the first time we made love? That was the best possible way to lose my virginity.\"\n\nFans were asking about the concert and what songs they were doing. They also expressed their appreciation for all of the kindness from Lady in Red and the talented individuals that owned the company and donated so much time and talent to charitable events.\n\n\"I guess President Hanson has made the announcement,\" concluded Steve after having his picture taken with some teenage girls. \"Everyone seems to be looking forward to the show. I like the fact that with these good musicians, Charlie and I can spend more time singing with you ladies. Gwen and I are working on a little dance or two that we'll try out in front of a few million people. I just hope I don't drop her.\"\n\n\"You'd better not drop me! I just got a text from Michelle. They're constructing a stage on the top of the Arc de Triomphe for us! We'll be able to see and be seen a full 360 degrees. \n\n\"They're setting up at least a dozen Jumbotrons, but there are a dozen avenues leading from Place de l'Etoile. If they put one at the juncture of every two avenues, that'll require six. That leaves six to be set up farther down each avenue. I think LiR needs to get at least six more here,\" reasoned Gwen. \"They need to have them in time to set them up by tomorrow afternoon. Our guys can do it!\" \n\nThe four friends rejoined the rest of their group for dinner at their hotel. \"The whole city is on edge about the attack on the orphanage,\" stated Lisa. \"Everyone's talking about it. They haven't caught any suspects yet and people worry that it might happen again. It's a beautiful city, but this situation has cast a dark shadow over the City of Light.\"\n\n\"Well, tomorrow night, Jordan, Gwen, and these two handsome guys will light it up!\" declared Kate. \"That's the other thing everyone's talking about. Paris has seen a lot of cool stuff over the centuries, but it's about to see how we Americans put on a show. I can't tell you how proud I am of you guys!\"\n\n\"Wait until you see Steve and Gwen dance and sing! You'll love it,\" predicted Jordan. \"We'll be on the top of the Arc de Triomphe, and Steve will be holding Gwen over his head as the second dance ends. It's going to be a real Kodak moment. I bet it'll be on every newspaper and magazine cover in the country on Wednesday.\" \n\n\"You're going to dance?\" questioned Paula. \"Except for your special Lady in Red dance, you two never dance at concerts. What's changed?\"\n\n\"I can take the blame, or more appropriately, the credit,\" volunteered Stephanie. \"They'll have enough musicians so that Steve and Charlie won't have to play any instruments, unless they want to, of course. Since we have a dance movie scheduled for next year, it seems like a good idea to begin whetting some appetites, and these dances will do it. Mom told me how great they dance them, so I asked them to practice a few times, and if they feel comfortable, perform them with the world watching!\n\n\"That leads me to more good news. 'Diana' is a box office smash! We did the early release in L.A. when we saw how good it was, just so that it could be considered for a few Oscars this year. The 'buzz' is that it probably won't be nominated for best picture, mostly because it's about comic book people, which I think is stupid. But I don't get to vote. However, it's likely that Jordan and Charlie will be nominated again for both the score and original song! It's also possible that Gwen will get the nod for best actress, and there's even some talk about Naomi being nominated in her supporting role. None of the guys, except Charlie, appear to be in the running for any nominations,\" added Stephanie. \n\n\"That's created mixed emotions,\" admitted Gwen. \"I'm proud that they might consider Naomi and me, but the guys did a great job, and I feel like they'd be cheated if they don't get nominated. Of course, Jordan and Charlie should win, hands down. They wrote some great music.\"",
        "\"You're telling me that we four are going to host the show, and that three of us may be nominated for awards, but one of us is coming up short?\" asked Steve. \"If that's the case, I'll be the only one of us that can claim to have three dear friends being considered for Academy Awards. You guys deserve them.\"\n\n\"I still won't have as many nominations as you, Smart Guy. You won twice for two of the 'Sparta' movies you wrote, and you were nominated for best actor in 'Rise of the Warrior'. I won once for 'Rise of the Queen', was nominated for 'Rise of the Empire', and Jordan and Charlie won for their song, 'Midnight Lights'. We're still trying to catch up.\n\n\"Besides, I know you. Awards and honors don't really mean that much to you. You're a humble guy. You'd stay out of the spotlight entirely if it were possible for a man that looks as good as you, and does all of the great things that you do, to go unnoticed,\" insisted Gwen. \"But, you're representing President Hanson the next couple of days. You'll be noticed then, for sure!\" \n\n\"I didn't intend to start anything,\" interrupted Stephanie. \"I was merely pointing out how well things are going for 'Lady in Red' at the moment. Representing President Hanson here, performing tomorrow, hosting, and possibly winning at the Academy Awards is a heck of a lot of positive PR. It makes my job easy.\"\n\n\"Speaking of easy, Jason is going to get so lucky again tonight,\" proclaimed Lisa as she pointed to a necklace she was wearing. \"He bought this for me today in a jewelry store on Champs-Elysees! It's the only thing I'll be wearing to bed tonight!\"\n\nThere was silence as the men stared at Lisa. \"Okay, that's enough!\" stated Paula. \"You guys are like vultures looking at road kill. I'd suggest that you don't make statements like that, Lisa. Men are very visual and you just planted a vision in their heads that won't soon go away.\" \n\n\"I'll be erasing it from Chip's little brain, if not from his little head, as soon as we get to our room,\" declared Kate. \"He won't remember anything but this cowgirl...\"\n\n\"Okay, Kate!\" interrupted Chip. \"Let's talk about something else since we have your mother and father here with us. We don't get to see them that often. How are you enjoying Paris, Mrs. Anderson?\"\n\n\"A minute ago, I thought I was having a great time here, but Kate's made me wonder. Cowgirl?\" asked Paula as Kate finally blushed a little. \"To think that Ted keeps insisting on 'reverse cowgirl' all of the time!\"\n\n\"Mom!\" gasped her daughters in unison, while Ted, along with the rest of the group, broke into gales of laughter. \n\nThe next morning was the day of the funeral service. At first, it was thought that there would be two services because of the number of deaths and the difficulty in identifying some of the bodies. But with all of the children's' DNA's on record, identification was quickly accomplished. \n\nThere were numerous world leaders attending and the French government was concerned about their safety. The terrorists had been identified as a small cell of about ten, but none of them had been apprehended thus far. Jordan, Charlie, Gwen, and Steve were joined by Senator Chatham for a working breakfast.\n\n\"There are more than a few pissed off politicians here in Paris today,\" began Chatham. \"They complained bitterly about a freshman Congresswoman, a Navy Lieutenant, and a couple of singers representing President Hanson. He decided on you for several reasons. The number one reason is sitting next to you, Gwen. Steve is known to be certain death on terrorists and that means a lot to a city suffering from a horrendous terrorist act. Secondly, you're loved all around the world, and no where more than here in France. Then there's the fact that you have no party affiliation, so this can't be considered a political move. Finally, Jordan and Charlie are extremely popular here, especially their music. It all adds up to a no brainer for Hanson.\n\n\"You'll be asked to speak and I suggest that Steve do most of it since he's fluent in French and that's huge to the people in this country. Don't be controversial and don't promise anything from the U.S. Just be sympathetic. I don't have to tell you what to say. I've never seen anyone that can say the right thing at the right time the way all of you do.\"\n\n\"Are we expected to smile and be all warm and friendly with the politicians that have been bashing Gwen so badly?\" asked Jordan. \"Personally, I don't think we need them, or their approval. Gwen and Steve are at the top, and the rest of them are just playing catch-up, and not doing a very good job.\"\n\n\"You're right, but when you represent President Hanson and the U.S., you have to always be patient and courteous to everyone, regardless of what they really deserve. Please be kind, and always be civil in public.\"\n\n\"I think we understand what you're saying and we'll do our best,\" promised Gwen. \"This is for President Hanson and the U.S. and the people of France, and not for any sleazy politicians. We promised Michelle we'd meet her there well before the services, so we could discuss the plans for today and tonight. Would you care to join us, Senator?\" \n\n\"Absolutely!\" replied Senator Chatham. \"I want to see you young people work your magic in person. You make news wherever you go. Just tagging along with you is good for my image,\" admitted Chatham. \"Let's go!\"\n\nThe group arrived several hours before the services were going to be held. Afterward, they were going to join in a procession from the bombed orphanage to the church to commemorate the lost and injured children and to show unity. Within half an hour of their arrival, news crews began showing up. Steve and his friends stood around speaking with Michelle, her father, and civic leaders. A dozen policemen patrolled the area, which served to remind everyone that the terrorists had not yet been apprehended. People were chatting in small groups and in low voices when they heard several loud reports. \n\nThe streets had been blocked off for the procession to the church, so everyone was surprised to see an automobile turn the corner a block away and drive away from them for a short distance. Then it stopped and began backing rapidly their way!\n\n\"Everyone, get down!\" ordered Steve as he moved in front of the gathering to face the car backing toward them. The automobile stopped about fifty feet from Steve. A man suddenly appeared through the sun roof and threw something at the group. The driver then gunned the engine and peeled rubber as he sped away.\n\nSteve immediately recognized the danger that they all faced. The man had thrown a grenade at them! Steve knew that there would be an explosion within seconds, and the carnage would be extensive. He instinctively moved to his right and snatched the missile in mid-flight.\n\nGwen, along with many others, watched in stunned silence as Steve made the catch. Then he immediately stepped forward and rifled the object back in the direction of the car. Gwen was certain that he threw it so hard that it would land well in front of the speeding automobile, even as it accelerated up the street. \n\nBecause Steve threw it hard and on a low trajectory, it was only airborne for a couple of seconds. Many of the observers gasped as they saw the small object somehow drop through the open sunroof of the speeding car!\n\nA second later, everyone was knocked backward by a powerful concussion as the car exploded before their eyes. Debris flew high into the air before settling harmlessly in the street and on the deserted sidewalk. Smoke began billowing from the shell of the automobile as gendarmes raced around the same corner the car had so recently turned. They had guns drawn, but slowed to a walk as they surveyed the charred metal that had been an automobile only a few seconds earlier.\n\nSeveral officers continued on to consult the officers that had been patrolling the area. There was a quick exchange before one of the gendarmes approached Steve and shook his hand before questioning him about the encounter. Steve and the officer walked away from the group as he described his actions. He also asked the officer about the apparent gun shots that sounded shortly before the car appeared.\n\nA few minutes, Steve returned to his friends. \"There were four men in that car. They shot the two policemen that were charged with keeping the street closed, but both are expected to live. The guys that were in the car are scattered all to hell and gone. They might have had other explosives with them because that was quite a blast for one grenade to make.\"\n\nBy the time Steve finished his synopsis to his friends; several reporters were in front of him, asking questions. Steve patiently responded to every question, responding in French when the reporters asked in French and in English to the English speaking reporters.\n\n\"Your young man certainly came through for us,\" praised Senator Chatham as she wiped the perspiration from her brow. \"That was some fast thinking. The rest of us were frozen in place, but he knew exactly what to do, and how to do it. I still can't believe he managed to drop the grenade inside that car when it was going so fast, and was so far away!\"\n\n\"He's an extremely fast thinker,\" agreed Gwen with obvious pride. \"His instincts take over in times of danger. He's a great athlete, and with U.S. Navy SEAL training, he's honed his skills even more. He's a wonderfully gentle man most of the time, but he's hell on terrorists. That's for sure!\" \n\nIt was decided that the original schedule for the service would be followed, in spite of the failed attack. Many of the people in French law enforcement felt it would even be beneficial if the news showed the burned out husk of the car as a deterrent to future attacks. Near the end of the memorial, Jordan and Charlie were asked to speak. Jordan spoke for them both.\n\n\"Charlie and I are proud to be here to help represent the President of the United States at this most somber of occasions. We share your grief, and your anger. Children are precious, as is all human life. We pray that these children finally find the love and peace they sought all of their lives, and which they so richly deserve. \n\n\"Tonight, the people of Paris and the world are invited to join us as we celebrate the lives of these children that were taken from this world far too soon. We ask that you remember what happened here and consider ways to improve the world so that it never happens again. This evening, we dedicate our performance to the children of the world. May they enjoy a life without famine, war, disease, or intolerance!\"\n\nIt was obvious that the crowd wanted to applaud Jordan, but the somber attitude of the occasion muted the reaction from the audience. Most watchers simply nodded and wiped tears from their eyes.\n\n\"I'm always impressed by how well Jordan speaks and how meaningful and insightful her speeches are,\" remarked Gwen to Steve as they prepared to be introduced.\n\nEveryone in the crowd knew the actions Steve had taken earlier and was excited to hear him speak. When he and Gwen were introduced, those in attendance struggled to control their enthusiasm.\n\n\"Thank you!\" began Gwen, before gesturing toward Steve. \"He's amazing, isn't he? We didn't come here to praise Steve, but rather to say our farewells to these precious souls that were taken so violently from us. We feel your loss. We all lost something the day these children died, as we all lose every time senseless acts of violence are committed. \n\n\"We, all of us citizens of the world, need to strive to eliminate the causes for these unspeakable crimes against humanity. We need to end hunger and disease, educate the intolerant, and help the least among us to prosper. Of course, if that were easy, it would already have been done. \n\n\"People need food. We can provide it short term, but for the long term, we have to find ways to raise it everywhere that people live. We need to provide vaccines and health care to the less fortunate, especially children. We have to educate people, not so they think the same as us, but so they learn to determine their own destinies. All people want these things for their children and loved ones. All people deserve the opportunity to be safe and happy. All of us need to do our part. We have to remove the causes of terrorism, and help the less fortunate. This is our challenge. The people of the world must determine their response.\" \n\nThe crowd had been very quiet as Gwen spoke. As she finished, they were once again nodding agreement. Then Steve stepped in front of the microphone and spoke in fluent French. His speech was short and very much to the point.\n\n\"We were asked by our President to represent him here today. We were asked to convey his deepest sympathy for these innocents that were taken from us. While the U.S. does believe that we must all work together to end intolerance, we also pledge that we will never yield to terrorism, nor will we allow it to go unpunished. We will do all we can to improve the lot of people around the world, but we will also pursue justice for these cowardly, despicable acts against innocent victims. That's our pledge to you!\"\n\nThe French President spoke next. When he concluded his short speech the mourners lined up about twenty across for the slow procession to the church. It was intended to be a sign of unity and determination by leaders from around the world. Steve found himself in the front line, to the right of the wife of President Marchant of France, and left of the Chancellor of Germany. He was able to converse with both ladies as they walked, thus allowing him interesting discussions with both women as they proceeded to the funeral.\n\nGwen was delighted to find herself walking between President Marchant and the British Prime Minister, while Jordan was on the other side of the British Prime Minister with the Italian Prime Minister to her left. Charlie was also in the front line between the wives of the Prime Ministers of Italy and England. \n\nThe procession moved slowly and took over an hour to reach the church. As they walked, thousands of people watched from behind barriers. Cameras and phones were in constant use. Seldom would the general public have the opportunity to see so many famous figures in one place.\n\nGwen, Jordan, Charlie and Steve were seated near the front for the funeral services. Steve chuckled to himself when he saw the rest of the American delegation sitting near the back of the huge church. After the service, Senator Chatham confirmed what Steve had suspected.\n\n\"There are some very pissed off American politicians in Paris today. They wouldn't even speak to me since you're my attach\u00e9, although it feels more and more like I'm your assistant,\" whispered Senator Chatham as she and Steve met up after the service. \"I'm staying at your hotel again tonight and I'll be watching your concert from the rooftop of a business on the Champs-Elysees. The French are expecting a huge turnout this evening, so bring your A-game.\" \n\nIt was a little before seven PM, Paris time when the foursome stepped into the elevator to ride to the top of the French national monument. Their volunteer band had gone up an hour earlier to be certain their instruments and equipment were in place and properly set up.\n\nGwen was wearing a short red dress that also displayed a fair amount of cleavage as it clung to her body. Steve and Charlie wore tight shirts and jeans while Jordan was dressed in a dark blue, low cut dress with spaghetti straps. As he rode to the top, Steve wondered if the material of the dress would be able to contain her ample breasts.\n\nOnce out of the elevator, the foursome climbed the makeshift steps to the large round platform sitting in the center of the monument's roof. Four cameramen were seated on crane-like devises that could each move left and right in a thirty degree arc. The four cameras would be able to broadcast the faces, or at least the profiles of the singers, regardless of which direction they faced. All four performers had been instructed to keep moving and to face in all directions as equally as possible since fans were crowded out from the Arc de Triomphe in every direction.\n\nOnce on the stage, Gwen felt her knees grow weak for a few seconds. All of Paris was aglow. The Eiffel Tower was clearly visible and appeared surprisingly close. Then she lowered her eyes to the crowd below. She slowly turned as she looked over the sea of humanity. In every direction, on every avenue, people were standing as far as her eyes could see!\n\n\"My God!\" gasped the usually imperturbable Jordan. \"Look at all of the people! This is huge!\"\n\nSteve felt some jitters as he passed out the wireless microphones to his friends. He forced himself to take deep breaths as he mentally prepared himself for the introduction, which fell on him since he spoke French.\n\nThe Jumbotrons showed his dazzling smile in detail before switching to Gwen's beautiful face. Next Jordan and Charlie were seen as they walked with Steve and Gwen to the center of the circular platform.\n\n\"Hello, Paris! We're here to entertain you, but more importantly, we're here tonight to remember the children that lost their lives in an horrendous act of terrorism. We celebrate their lives, and mourn their passing. Let's please have a moment of silence for those beautiful children,\" requested Steve before bowing his head for a short time.\n\n\"We'd like to start the evening with a couple of songs dedicated to those children that survived the attack. Know that this city, this country, and the entire world love you and want nothing but the best for all of you.\"\n\nSteve was joined by his friends as they once again performed 'Bridge Over Troubled Water', with Jordan and Gwen singing in perfect harmony as Steve and Charlie backed them. The crowd was obviously emotional as faces of people in the crowd were flashed on the huge screens from time to time. Once the applause died down for that song, the two couples joined to sing 'Let It Be' which Steve and Gwen had also sung at the memorial service for their friends that were killed in the attack in Sparta years earlier. Hundreds of thousands of voices joined theirs in the refrain. Once again, tears flowed on every avenue.\n\nThen the stage went dark for a minute or so, before the driving drum beat told the crowd that the show was set to begin. Although they now had numerous hit records, the four friends knew that people expected and wanted 'We Will Rock You' to open the show. It had become their much anticipated opening number over the years.\n\nGwen sang lead, but with no instruments to play, Jordan, Charlie, and Steve participated more in backing Gwen.\n\nJordan then delivered one of her early hits. France had a surprising appreciation of country music and Jordan delivered them as well as anyone. The crowd loved it. The friends took turns with their personal hits and concert favorites. They made a conscious effort to keep moving on the platform so they faced all of the fans at various points in the performance.\n\nEarly in the show, Steve and Charlie picked up guitars and performed 'Bad Moon Rising' as the full moon appeared above the skyline. Once they finished, Jordan came forward to perform one of her biggest hits, 'Stand By Me'. The Jumbotrons showed her singing with the moon directly behind her. When the applause died down, Charlie sang Van Morrison's 'Moon Dance' with Jordan backing him. Steve and Gwen performed a very lively dance as their friends sang. Many of the thousands watching began dancing as well.\n\nThe applause was long and loud as the audience showed its approval of the singing and the dancing. Then Steve and Gwen came forward to join in singing 'Moon River' with the cameras moving to show the full moon behind the couple in the foreground as they sang. Once again the huge crowd demonstrated its appreciation at the end of the song. They seldom heard Gwen and Steve harmonize on a song, and they had just done so beautifully.",
        "The audience responded enthusiastically to the music. Many people sang along or danced in the streets from that point forward. Near the end of the evening, Steve and Gwen performed their special dance. The song was 'The Time of My Life'. Gwen and Steve sang as they reproduced the dance from the movie 'Dirty Dancing'. They had to change a few of the steps because of the restrictions of their location, but the crowd reacted loudly as soon as they realized what song they were performing.\n\nSteve and Gwen were shown on every big screen in the city as they 'dirty danced' with the backdrop of Paris shining brightly with the huge moon overhead. It was obvious that they had to be in excellent shape to be able to sing while engaged in such a vigorous dance. Excitement built as everyone anticipated the moment when Gwen would run and jump as Steve lifted her high above his head. He held her there as he slowly turned in a full circle so that Gwen briefly faced every point of the compass. The cameras moved in their limited arcs, capturing the couple smiling broadly as the Eiffel Tower shone beautifully in the background. Finally, Steve slowly lowered Gwen so her remarkable chest was in his face for a few seconds before she was lowered enough to wrap her arms around his neck. Then she kissed him long and hard as crowd's cheers and whistles echoed across the city. \n\nAlthough the evening had begun to cool down by the time the show concluded at midnight, the four friends were sweaty and exhausted. Before leaving, they took the time to thank the musicians personally for their excellent play. \n\n\"Thanks for introducing us during the show,\" gushed the pretty female saxophonist. \"Playing Paris with you guys in front of millions of fans was the coolest thing I've ever done. I'll never be able to top that, no matter what I do. I just hope that people remember our names and we get some jobs out of this, but even if we don't, I had the time of my life!\n\n\"By the way, that dance was the most incredible single performance I've ever seen! I watched the monitors when I wasn't playing and you two looked and sounded incredible! When you held Gwen over your head with the Eiffel Tower and the full moon shining in the background, I felt like crying, it was so beautiful!\"\n\nBy the time they returned to the hotel, it was almost one AM. Steve was surprised to see so many people still up and enjoying themselves in the hotel's restaurant and bars. As they walked to their reserved table, patrons and staff began clapping vigorously for them. They were joined by their family and friends when they took their seats.\n\n\"I really doubt that you guys have any idea what you did tonight,\" began Stephanie. \"That show was huge! Almost half of all the TV's in Europe were tuned to you! It's going to be broadcast in an hour back on the east coast and central U.S. and a couple hours later on the west coast. Some of the reviews on the internet are calling it the best concert of all time. Everyone agrees that your 'dirty dancing' was perfect, and super sexy! They absolutely loved it here, and everywhere else.\" \n\n\"I spoke with President Hanson a short while ago,\" interjected Senator Chatham. \"Once again, you young people made him look very good. He watched most of the concert, as well as your speeches at the orphanage, and was delighted. He told me that he had received a personal call from President Marchant expressing his appreciation for sending you.\n\n\"Hanson was even chuckling about how pissed off many members of Congress were, from both parties! He's not apologizing to anyone. He told me that they can't argue with the results. Who did the French people want to see and hear? Not American politicians, that's for sure!\"\n\n\"Michelle has friends that own a building on Avenue Victor Hugo, so we were able to watch from the rooftop of that building,\" interjected Lisa. \"Theresa got to see her Aunts Jordan and Gwen, along with Uncles Charlie and Steve give the concert of the century! We could feel the energy of the crowd. Michelle told us that they estimated way over a million people watched it live and who knows how many millions on TV! When you two did that second dance, I almost wet myself. I was so nervous and excited for you, but it was perfect. Diane's really going to be proud of her star pupils.\"\n\n\"I've got to admit it. I was impressed,\" revealed Chip as he slapped Steve on the back. \"Did you tell everyone that I taught you that grenade trick you used earlier in the day? You would've been blown all to hell if I hadn't prepared you for it!\" \n\n\"You taught me to not trust you!\" insisted Steve with a grin before explaining to everyone what Chip had meant. \"I was sitting on my bunk one day when this grenade dropped through an open window and rolled to a stop by my feet. I was pretty worried. All I could think of was to grab it and throw it back out the window.\"\n\n\"That was about the time I decided to take a peak in and see how Steve was reacting to the grenade. Just as I peeked over the window sill, the damn grenade smacked me right in the forehead and bounced back into the room. It almost knocked me out!\" admitted Chip as he remembered the incident and rubbed his head just thinking about it.\n\n\"What happened to the grenade?\" asked Kate. \"Obviously you two weren't blown up. How did you survive it?\"\n\n\"The dummy used a dummy grenade. After that fiasco, we'd play 'hot potato' with it every now and then, tossing it around until someone dropped it and then they were 'blown up'. It evolved into a game where we had to toss it into a basket to be safe. We eventually put the basket in a cart and started it rolling down a hill and we'd have to toss it in while the basket was moving.\"\n\n\"Toward the end, we were throwing it into moving vehicles from fifty or more feet,\" added Chip. \"It shows how bored we were at times. Steve could put the damn thing into a jeep doing fifty miles an hour from a couple hundred feet away. I think it was all the football training he had.\"\n\n\"So that wasn't blind luck today, like you told the reporters?\" quizzed Jordan. \"It was something you'd actually practiced before?\"\n\n\"It was mostly luck,\" replied Steve. \"That car was going pretty fast and the sunroof wasn't much of a target.\"\n\n\"But you were trying to throw it into the car, weren't you?\" persisted Jordan. \"I thought it was an amazing coincidence, but it was deliberate, and it was perfect!\"\n\n\"Every now and then, I'm reminded that men are just big boys,\" observed Paula, shaking her head after listening to Chip and Steve recount their grenade play. \n\n\"Yeah, and 'big' is the operative word with my boy,\" added Gwen. \"We're flying back to Washington in the morning, so I think we need to eat and get to bed. I have to thank this guy properly for not dropping me off the roof tonight.\"\n\n\"You should apologize for almost poking his eyes out when he lowered you,\" insisted Kate. \"I was worried you'd blind him, or possibly suffocate him with those girls of yours.\"\n\n\"Really? Does that look like a face that's been abused by breasts?\" asked Gwen as she ran her hand over Steve's cheek. \n\n\"Now that you mention it, I think I see where a nipple was dragged across his lip,\" quipped Kate as she pretended to examine Steve's face.\n\n\"I doubt you see that, ... Yet. But check him in an hour if you think he looks bad now. His face will be all scarred up with nipple marks,\" promised Gwen as she clutched Steve's arm.\n\n\"Once again, I find it necessary to caution one of my daughters about the visual she's creating. Look at these men sitting here all quiet and misty eyed. Each one of them has a vision of poor Steve taking that abuse,\" pointed out Paula. \"You can guess what's going through their minds.\"\n\n\"Let's hurry and eat so we can go to bed!\" insisted Charlie to a grinning Jordan.\n\n\"We ate earlier,\" stated Jason to Lisa. \"Let's give Theresa to your mom and get upstairs!\" \n\n\"Come on, Kate!\" demanded Chip as he tugged on Kate's hand. \"It's past our bed time!\"\n\n\"Becky and I are exhausted, so we'll turn in now,\" managed Pete with a nearly straight face.\n\n\"Stephanie, why don't you watch Theresa for Lisa and Jason? Paula's pretty tired and needs her rest,\" added Ted as he flashed a wicked grin.\n\n\"Not you, too!\" groaned Stephanie. \"I've got to get a boyfriend!\"\n\n\"Tell me about it,\" commiserated Ashley as everyone laughed long and hard. \n\nThe Red Lady set down in Washington just before noon on Wednesday. Gwen planned on going to her office on Capitol Hill before flying back to Stanford the following day. By the time they passed through customs and made their back to the hotel to change and freshen up, a horde of reporters was waiting for them in the lobby.\n\nAt the request of management, Steve and Gwen asked the reporters to adjourn to a meeting room supplied by the hotel. Once there, the couple spent an hour responding to questions. They were asked about the river rescue, the new movie's success, the funerals in France, as well as the tremendously successful concert. Steve had to answer numerous questions about how he so quickly thwarted the terrorist with the grenade. That evening news on the networks devoted most of their time to the events of the past few days and the major roles that Gwen and Steve had played in them. American politicians, including President Hanson, were hardly mentioned and never shown. \n\nAmber Stahl called Gwen and asked if she and Steve would consent to a sit down interview that evening to be broadcast live in prime time, and they agreed. The couple responded thoughtfully to every question posed by Amber and made no attempt to duck or avoid a single issue. Amber posed what she felt might be a difficult question near the end of the interview.\n\n\"Gwen, you and Steve performed before a million plus fans in Paris last night. You not only sang, but you also danced a couple of times. Critics say that you used this tragedy to promote your company, your movies, and your music. How do you respond to that?\"\n\n\"It's a 'catch 22' situation for us. Jordan, Charlie, Steve, and I were asked to perform, mostly because we're so well known. By agreeing to donate our time and talent, we raised millions of dollars for the orphanage that was attacked. We asked for no compensation. Not now, nor in the form of residuals in the future. We gave our time freely and quite willingly. \n\n\"By so doing, it appears that we became even more famous, and more popular than we were before the concert. How could we prevent that from happening, if for some reason, that was our desire? Give a bad show? Do something foolish? What would our critics have us do? Lady in Red exists to help people all over the world. It's a privately owned company, but we're doing our best to give help where it's needed, anywhere in the country and the world. Obviously, we're limited by time, distance, knowledge, and funds, but we're honestly doing our best.\n\n\"We do make movies and music to provide income for the company, and also because we love doing it. If we do a good deed, it gives us positive press and we make more money, which we intend to spend where we feel it'll do the most good. Steve has done some very courageous and heroic actions, but never to gain praise, or press. He's a very special and extremely competent man, and people all over the world respond to him. Jordan and Charlie are incredible talents, extremely attractive, and have tremendous charisma. I somehow managed to pique Steve's interest years ago, and he's carried me along with him on this incredible journey. \n\n\"To sum it up, Jordan, Charlie, Steve, and I will continue to conduct ourselves with honor and pride, help those we can, and apologize to no one for our success and good fortune. This is America and we're living the American dream!\"\n\nThat evening, the entire extended family spent a very pleasant last dinner together before everyone had to return to their regular lives. Perhaps because she knew she wouldn't be seeing Steve for awhile, Gwen was extremely passionate and demanding in bed that night. Steve responded with heat of his own and when the couple finally fell asleep, they were totally exhausted, but sated.\n\nGwen returned to Stanford the following day, while Ashley, with Becky's assistance, managed the Washington office while keeping Gwen very well informed. Members of Congress began drifting toward one of two schools of thought. Many were openly supportive of Gwen and her actions, while others missed no opportunity to point out any shortcomings, real or imagined that Gwen might have. Almost no one in Washington was neutral on the subject of Gwen Anderson. \n\nWhen Steve, Kate, Becky, Naomi, Chip, and Pete got together for dinner Tuesday evening of the following week, Steve asked about Ashley's whereabouts.\n\n\"Don't worry,\" replied Becky. \"She's fine, and she's bringing company. In fact, here she is now.\"\n\nAshley approached the table with a small blonde girl. She placed an extra cushion on a chair, lifted the girl into her seat, and then sat next to her.\n\n\"Hey, Ingrid! Are you having dinner with us tonight?\" asked Steve as he smiled to the small girl. \"You look very nice tonight. Is that a new dress?\"\n\n\"Yep, Miss Ashley gave it to me,\" beamed the child. \"She's been helping my father with his new job. I'm staying with Miss Ashley tonight!\"\n\n\"I should have mentioned that I was bringing Ingrid. Is it okay with everybody?\" asked a somewhat nervous Ashley.\n\n\"You're really hitting it off with this beautiful little girl,\" observed Kate. \"We love her and wouldn't dream of complaining about her coming to dinner. Can we assume that you're getting along okay with her father?\"\n\nAshley blushed as she responded. \"I've been helping him get set up. We found a two bedroom apartment for him and Ingrid. He's busy getting some furniture for it tonight. That's why Ingrid's staying with me. We're having a sleep over!\"\n\n\"Sis, is it just Ingrid that's sleeping over?\" asked Becky with a straight face.\n\n\"Yes! I know that I'm kind of pathetic. It's pretty obvious that I'm a little taken with Ingrid's dad. I'm so afraid of screwing up again, but he seems like a really good man. What do you think, Steve?\"\n\n\"I lost any right to advise you after that disaster with the fake Mark Neary. You're a smart, capable woman and will make the right decision. What I will do is let you know if any concerns or objections crop up,\" promised Steve.\n\n\"Okay, but I don't blame you for what happened with Mark. You're still the one I depend on, and that won't change,\" replied Ashley. \"I really enjoy Ingrid. That's a good thing, don't you think?\n\n\"Ashley, it's a very good thing,\" assured Naomi. \"She's a little doll and you're lucky to spend time with her. She's a treasure.\n\n\"Not to change the subject, but I just found out a couple days ago that I'm going to Hungary, too. Being an attach\u00e9 has its advantages. I'm going to pack tonight so I can sleep well tomorrow night and be ready to take off early the next morning. I've never been to Hungary!\"\n\n\"Neither have I, but I've heard some great stuff about it,\" replied Steve. \"The food is supposed to be extremely good. The Danube is amazing and the government's fairly progressive. I'm told that Budapest is especially beautiful at night. Maybe we can get together and do some sightseeing while we're there.\"\n\n\"Mr. Hammer, are you asking me for a date?\" teased Naomi. \n\n\"Well, yes I am,\" grinned Steve. \"I would be honored if you'd accompany me on a tour of Budapest when we have some time off.\"\n\n\"Allow me to consult my calendar, as well as my boyfriend,\" responded Naomi as she blinked her eyes in an exaggerated gesture. \"He should be available to take my call right now.\"\n\nEven as she spoke, Naomi was scrolling through her contacts. \"Hey, Jared? You know that I'm scheduled to go to Budapest? A handsome SEAL just asked me on a date. He wants me to do some sightseeing with him, but I think he may try to ply me with liquor and have his way with me. He looks like the type. Yes, he's the one with the girlfriend with the big ass and small boobs. You think so? Wouldn't that ruin him for his girlfriend? You know better than anyone that once a man spends time with me, he'd never be satisfied with any other woman. Okay, if you're certain. I promise I'll tell you everything, and then I'll show you everything when I see you next. Bye, Lover!\" \n\n\"He's disturbingly fine with it,\" admitted Naomi. \"I just have to tell him all about what we do and then show him exactly what we did the next time we're together. You'd better give me something to work with! Now, for one more call.\n\n\"Hello, Gwen? I'm going to Budapest and your boyfriend's already hitting on me. It's pretty obvious what he wants. He's already asked me to go sightseeing with him, but we both know he'll try to lure me back to his room. I just want you to know about it so you won't think we're running around behind your back. Jared knows and he's fine with it. He did say something about 'fair play' and 'sauce for the goose', so that may mean that he'd expect some sort of pay back.\n\n\"You're way too willing! I don't think I want your big butt anywhere near my boyfriend. Forget the whole thing! Steve will have to go without, at least from me, and I'll make sure he doesn't try for any strange. I don't want him having fun without me,\" pointed out Naomi as she disconnected.\n\n\"I'm afraid that Gwen and Jared have some sort of agreement,\" stated Naomi as she made an effort to look worried. \"If you get lucky with me, they think it would be a green light for them to perform various acts against nature, which have been outlawed in most civilized nations. We can go sightseeing, but I'm afraid you won't be able to sample the goodies. That's why the sneaky guy wanted me to tell him everything! He was planning on doing the same thing with your girl. What a weasel! What do you call a guy like that?\"\n\n\"Normal? Opportunistic? Funny? A dreamer?\" rattled off Steve as Naomi laughed.\n\nA couple of days later, Steve and Naomi landed in Budapest. They attended meetings with their respective senators during the day, but were free in the evenings. They enjoyed a casual dinner in the 'Buda' half of the city the first night. \n\n\"That was delicious!\" exclaimed Naomi. \"The Creme Brulee was fantastic. This was a great idea.\"\n\n\"Let's go dancing now. Then tomorrow, for our second date, I'm going to take you on a dinner cruise on The Danube,\" promised Steve as he paid for the dinner. \"I already made the reservations for tomorrow night.\"\n\n\"If I didn't know better, I'd think you were trying to get into my little panties,\" responded Naomi as she took Steve's arm. \"You're a very good boyfriend. Did Gwen train you, or did you know all of this before you met her?\"\n\n\"Gwen gets most of the credit for any social graces I may have, although my mother did her best to teach me the basics before she died,\" admitted Steve. \"Being with a beautiful lady like you brings out the romantic in me.\"\n\n\"I know Gwen didn't teach you those smooth lines that you use all of the time,\" retorted Naomi. \"I can't wait to have every dance with you tonight. You'd better try to slide your hand down on my ass now and then. I'd be insulted if you didn't.\"\n\n\"I certainly wouldn't want to hurt your feelings,\" grinned Steve as he patted Naomi's round ass a couple times as they headed back to their hotel lounge.\n\nA short time later, Steve and Naomi joined others on the crowded dance floor. \"I have to get some pictures for Mom. She'll probably be disappointed if I don't seduce you. My own mother thinks I should take you for a spin at least once before we both get married to someone else. What kind of mom would even suggest such a thing?\"\n\n\"My kind? Or was that a trick question?\" asked Steve as he pulled Naomi a little closer. \"Your mom's one of my favorite people. She was always really good to me when I knew her in Cuba.\"",
        "'Yeah? Well, she'd be even better to you now if she gets the chance,\" warned Naomi. \"Middle age seems to be making her more sexual for some reason. Jared and I discuss you all of the time. He feels that meeting you in high school really helped him in his career path. He saw what a good guy you were, yet you never took any crap from anyone. When he took those bullets intended for Gwen, he was thinking about how you'd react if you had been there.\n\n\"Being friends with you and your entire group has been one of the highlights of my life. I have a great boyfriend and some great guys that are friends. You have no idea how nice it is to be able to do things, like dance with you, knowing that I don't have to keep pushing you away, or resist your advances. Is that your hand on my ass?\n\n\"I'm proud of Jared and how the other women in our group like and respect him. He's been naked in hot tubs a few times with Gwen and some of the other girls and they aren't uncomfortable about it. We feel like friends and not just 'black friends'. You and Gwen and the others really don't seem to care about race at all. I wish the whole world worked that way.\"\n\n\"I learned to respect Jared when we played football together,\" revealed Steve. \"He worked hard and treated all of the guys good, even though he was the toughest guy on the team. When he saved Gwen's life, he became my brother. I'll do anything I can to help him any way I can, and I feel he'll do the same for me. All sound relationships have to be built on trust. Men have to be able to trust each other in order to be true friends. I think the world of you, but I would never betray Gwen or Jared, or my own principles. You're the same way and we both know it. You're a beautiful woman that values honor and trust. That's why I like you so much.\" \n\n\"And all this time I thought it was my good looks, big boobs, and tiny ass,\" replied Naomi with a laugh.\n\n\"Those attributes have not gone unnoticed, I assure you,\" responded Steve as he made a production of leering at Naomi's cleavage.\n\n\"Lieutenant Hammer, are you trying to seduce my attach\u00e9?\" asked Senator Elizabeth Mason as she danced close to the couple.\n\n\"Senator, all he has to do is ask, or even whistle,\" replied Naomi quickly. \"You know how to whistle, don't you, Steve? Just put your lips together and blow?\"\n\n\"I'm tempted to show you how well I whistle,\" threatened Steve, but with a smile. \"And I won't be whistling Dixie, that's for sure.\"\n\nSteve and Naomi were asked to Join Senator Mason and her husband at their table. They had only been seated a few minutes when Steve was approached by a man in a suit.\n\n\"Sir, I apologize for disturbing you, but I feel I would be remiss if I did not take a chance here tonight. Many of the patrons have asked if you were going to sing with our little band this evening. The hotel, as well as our clientele, would be most appreciative. I understand if you choose not to perform, but if I didn't ask, I would forever wonder what might have been,\" stated the man as he waited for Steve to respond.\n\n\"If you ladies would excuse me, I'd like to try it. That 'little band' is quite good and it sounds like fun. Do you mind, Naomi?\" asked Steve.\n\n\"Mind? My date for the night wants to serenade me, along with a hundred other people, and I should complain? I can't wait to hear how you do with the older songs they're playing.\"\n\nSteve was greeted warmly by the five piece band when he stepped onto the small stage they occupied. One of the members spoke very good English.\n\n\"We all watched that performance from Paris. It was incredible. We really don't play rock and roll, if that's a problem.\"\n\n\"No problem,\" assured Steve. \"Just give the music with the lyrics and we'll see what we can do.\"\n\nSteve spent five minutes lining up the songs they agreed on and then he stepped up to the microphone standing on the stage. \"We're going to do our best to entertain everyone. Please be patience since we just met and obviously never practiced any of this. We'll start with 'Summer Wind' and go from there.\"\n\nThe band played the intro for several seconds before Steve began to sing. He managed to get as far as the phrase 'from across the sea' before the room broke into serious applause. He stopped singing and the band played in circles for a few minutes before it quieted down. Then Steve picked up where he left off. He was smiling broadly as he acknowledged the crowd's appreciation with a wave of his hand as he continued to sing.\n\nWhen the song ended, Steve was surprised at the enthusiasm of the crowd. He had little time to consider it as the band started another Sinatra song, 'When I was Seventeen'. Steve had grown up listening to and singing along with Sinatra. His mother had been a huge fan and she passed the appreciation on to her son.\n\nHe sang for a full hour, mostly performing songs from The Great American Songbook. Steve had a great time singing with the surprisingly talented musicians. 'Mack the Knife' was also extremely well received. A full hour later, Steve ended his stint with another Sinatra favorite, 'My Way'. He was surprised when the couples stopped and simply stood on the dance floor listening to him sing. Many of the women had tears in their eyes when he finished!\n\nAfter a thunderous ovation, Steve thanked the band and the audience before returning to sit next to Naomi at Senator Mason's table. He was surprised to see Naomi's eyes were misty and Senator Mason was wiping tears from her cheeks.\n\n\"I had no idea you could sing so well!\" blurted Senator Chatham as she sat down in an empty chair near Steve. \"I knew you were good with rock and roll and some ballads, but that was incredible. I'm no marketing whiz, but I'd suggest that you record more songs like that. I know I'd pay for them.\"\n\n\"I streamed your performance to Gwen and Stephanie with my IPad,\" revealed Naomi. \"Gwen had Stephanie instruct the people that run your web sites to stream it live over the internet for free. There were over five million viewers by the time you wrapped it up! People can now download it off your site and watch it any time they want. \n\n\"That was some great singing. Dad always talked about Sinatra, Nat King Cole, Ray Charles, and a few others. He said that singers today couldn't hold a candle to the singers from back when. I texted him and suggested that he check out your performance this evening. Mom wrote back and said you're the best singer she's ever heard, and that if I don't jump your bones, she will!\"\n\n\"I see,\" replied Steve as he pretended to be deep in thought. \"Suppose you jump my bones, but don't tell your mom? Then she'll feel compelled to do it when we get back to Sparta.\"\n\n\"What is it with you guys and our mothers?\" demanded Naomi. \"Most guys would be happy having me, but you're trying to bed me, and my mother. I'd complain to Gwen, but she already knows how you are. How all of you guys are. How come you're all so attracted to cougars?\"\n\n\"Excuse me? Did I understand you correctly?\" asked Senator Mason, flashing an wicked grin. \"Steve is one of those young men that falls prey to cougars? That's useful information.\"\n\n\"We're going to cut our stay here short,\" interrupted Senator Chatham. \"We'll be leaving for Kiev the day after tomorrow. Tensions are rising between Russian and Ukraine governments. Secretary Rosen will meet us there. You know he's announced that he's resigning at the end of the month. It's no secret that he plans on campaigning for the presidency.\n\n\"Our entire delegation will be going, but President Hanson and Secretary Rosen made it quite clear that you're the person they want on the ground, Steve. You've cultivated a very good relationship with both governments and Rosen will be leaning on you to help forge some sort of agreement. He's done a total about face from when you first met him in Russia. Remember how livid he was? Rumor in the halls of Congress had it at the time that he besmirched Gwen's good name, and you called him on it in front of everyone at that summit. Now he's asking you to attend. He's trying to be more presidential, and if he defuses this powder keg, he'll use that success when he campaigns.\" \n\n\"So 'my date' for the evening not only sings and dances, but solves world crises, too?\" teased Naomi. \"You're going to get so lucky tonight!\"\n\n\"Miss Wilson, I hope that I don't have to point out the code of conduct that we insist our people follow,\" warned Senator Mason.\n\n\"Not really, Senator,\" complained Naomi. \"Steve has an even higher moral code than the Navy, so it's not an issue. I couldn't get him into my bed, even if I tried. That's what makes the trying so much fun. If any of us girls, other than Gwen, tease or flirt with him, he's a perfect gentleman. He's like one of the guards at Buckingham Palace.\"\n\n\"Are you saying that a beautiful woman like you can't even get a reaction of him?\" asked an incredulous Senator Mason.\n\n\"Oh, there's a reaction alright!\" laughed Naomi. \"It's a rather big reaction, really. He just doesn't let it control him. He has great discipline.\"\n\n\"I'm sitting next to you and can hear every word you're saying,\" pointed out Steve. \"Proper protocol requires that you only talk about me when I'm not around. It seems like everyone keeps forgetting that.\" \n\nIt was an interesting time in Budapest. The following morning the city newspaper had an article about Steve singing at the local hotel. There were two photos in the paper. One featured Naomi and Steve dancing, while the other showed him singing with the band. The next afternoon, Naomi learned that she had been nominated for an Academy Award for best supporting actress for her role in 'Diana', while Gwen had received one for best actress. As expected, Jordan and Charlie were nominated for best original score and best original song.\n\nSteve went on Skype with Gwen. She had to study for an exam, but they managed ten minutes of personal time. Steve discovered that Gwen took the nomination in stride. She was proud of the nomination, but insisted that she'd trade it all for good marks and better comprehension of her difficult courses. Steve knew that both Gwen and Charlotte were extremely bright, yet they worked very long hours to keep up with their studies. It was very obvious to Steve that med school required extreme dedication, discipline, and hard work.\n\nThe delegation landed in Kiev the next day. Steve and Naomi accompanied the senators to a briefing of the situation by Secretary Rosen. They were warmly greeted by Rosen when they entered the room.\n\n\"It's good to see you Steve. It's always a pleasure, Lieutenant Wilson,\" smiled Rosen. \"I've taken the liberty to tell the Russian and Ukraine governments that you would be attending our discussions tomorrow and they were both pleased. I'm not making the same mistake I made last time we discussed this situation. Will Lieutenant Wilson be attending with you, Steve?\"\n\nSteve instantly picked up on the effort of the Secretary to be respectful and conciliatory. \"Sir, we would greatly appreciate that consideration. Lieutenant Wilson is extremely well versed on this part of the world. She has a thorough understanding of the history, politics and geography of Eastern Europe. I would be better able to assist you if she were present to help guide me.\"\n\n\"Really?\" asked a mildly surprised Rosen. \"That's high praise, especially coming from someone as informed as you are. You surround yourself with unusually talented and intelligent people. I look forward to your input in the upcoming discussions.\"\n\nSenators Chatham and Mason had known that Steve's presence was requested by the Secretary, but other members of the delegation were surprised at the high regard the two Navy Lieutenants were awarded.\n\n\"Secretary Rosen! You have members of Congress here today that have been in office over twenty years. You're not suggesting that you value these Naval officers' opinions more highly than ours, are you?\" asked the most senior senator present. \n\nSteve turned his attention back to Rosen to await his response. If he were to be considered a serious contender for the Presidency, he needed to be able to handle situations like these.\n\n\"Of course not, Senator!\" replied Rosen quickly before weighing his next words carefully. \"However, the indisputable fact is that both governments trust and respect this young man. If he is the link that could allow us to find a solution to these issues, then we need to utilize the popularity he has with both parties. I know of no one else as highly regarded by both the Russian and Ukraine governments as Lieutenant Hammer. I would never suggest that his knowledge of foreign affairs compares to yours in any way.\"\n\n\"Yet you insist on having these young officers involved in such serious discussions? They're actors, not diplomats. There are photos circulating on the internet of the two of them naked in a hot tub! Is the United States to be represented by people with such lose morals? She's little more than a...\" \n\n\"Senator!\" interrupted Rosen forcefully. \"It behooves you to be more circumspect with your comments. I once made the regrettable mistake of demeaning Ms. Anderson in front of Lieutenant Hammer. He will not tolerate disrespect to ladies, for any reason.\"\n\nSenator Chatham had quickly stepped in front of Steve when she realized where Senator Larson's comments were headed. She placed a hand on Steve's chest before he could stand and spoke quietly to him until he relaxed in his seat.\n\n\"Look at what a young hothead he is!\" continued the Senator. \"He hasn't grown up enough to sit at a table with men.\" \n\n\"His code of conduct is one of the reasons he's so well received in this part of the world,\" responded Rosen. \"Women aren't always treated the best here, but these cultures respect men like Steve. He's open and direct. He avoids subterfuge. He's a man of honor, and lives by his code. I didn't understand it when I first met him, but now I do, and to be honest, I try to be more like him. I strongly urge you to refrain from derogatory remarks about any ladies.\"\n\n\"You can be sure that the President, as well as the press, will hear about this!\" retorted the still annoyed Senator Larson. \"He's been the media's darling since he was in high school, but this is the real world. It's unforgiving when you screw up. We're involved in a very critical situation here and we need experienced people working for solutions. What we don't need are youngsters still wet behind the ears!\"\n\n\"I take direction from President Hanson,\" replied Rosen calmly. \"He's the person you need to address with your concerns. Until I am told differently, these young officers will be at my side during these talks. We'll get together at seven tomorrow morning to prepare for our nine o'clock meeting with the Russians and Ukrainians.\"\n\nSteve wasn't surprised to find Nadiya waiting for him when they arrived at their hotel. She immediately wrapped her arms around his neck and gave him a smoldering kiss.\n\n\"It is so good to have you back in Kiev! I told my father that you would be having dinner with us. He was pleased, but not as much as my mother. She has been watching all of your films and videos. When she first met you, she had no idea how accomplished you were. Now she knows. She thinks you would make a good husband for me. I told her I was willing, but your heart belonged to that dark haired witch. I told Mother that Gwen has cast a spell over you.\n\n\"You are traveling with Naomi this time? You don't go anywhere without a beautiful woman. Naomi, would you join Steve and my family for dinner tonight? My parents would love to hear about your movie career and how you enjoyed your famous love scene with Steve in the 'Warrior' movie.\"\n\n\"I'd be honored to have dinner with your folks, but you don't need me to tell you what it's like to be naked with Steve. You know how good that is. Wait! From the look on your face, you've never stripped down with Steve. You poor girl! I don't know how you can endure it,\" teased Naomi. \"We'll have to remedy that embarrassing problem.\"\n\nNadiya's parents were extremely pleased to have the two famous Americans visit them for dinner. As expected, the conversation centered on the movies Naomi and Steve had appeared in, as well as Naomi's nomination for an Oscar.\n\n\"I told you that Mother would want to hear all about your big love scene. She's also seen that photo on the internet of you and Steve in that hot tub. She was very impressed,\" grinned Nadiya.\n\n\"Your daughter tells me that she has never been naked with Steve,\" responded Naomi, taking care to speak slowly since Nadiya's mother was not overly fluent in English. \"She's missing an experience of a lifetime. I am going to speak to Gwen and see if I can arrange it. Then Nadiya will be able to tell you her own stories about Steve.\"\n\nNadiya's mother looked at Steve's blushing face before breaking into laughter as she vigorously nodded her head. \"I think Nadiya would like that!\"\n\n\"This is not proper talk for dinner,\" insisted Nadiya's father. \"My daughter does not take her clothes off, even for Steve.\"\n\n\"That's too bad because I was going to ask Gwen if she would care to join me in a hot tub with Nadiya's big, strong father. But if you feel it's wrong,...\"\n\n\"Perhaps I was hasty,\" admitted Mr. Misko quickly. \"I suppose if Nadiya kept the bottom to her suit on and Steve promised to not take advantage, we might be able to work something out.\"\n\n\"Father! You would trade your daughter's modesty for a chance to ogle these big breasted Americans? Mother, what sort of man did you marry?\" asked Nadiya of her mother, first in English and then in Ukrainian, so her mother better understood the question. \n\n\"The same as I hope you will marry,\" replied her mother as she affectionately rubbed her husband's arm. \"A man that appreciates beauty, especially in a woman. He can look, but he knows that he will not fare well if he partakes in any others.\"\n\n\"You are all the woman I want,\" declared her husband. \"I was merely trying to be polite to our company by leading her to think that seeing her and Gwen Anderson in a hot tub would be something I would enjoy.\"\n\nThat conversation set the mood for the dinner, but as dessert was served, Nadiya's father turned the conversation to the problems with Russia. Steve and Naomi listened carefully as Mr. Misko explained his country's position and the issues they had with Russian policy. Nadiya would join in on occasion to clarify or accentuate a point.\n\nBy the time the Americans left the Misko's residence, they had a much better understanding of the situation. Steve had discovered that there was a great deal he did not know about the history and origins of the dispute between the two nations.\n\n\"Steve, that Nadiya is really sharp! She plays the dumb blonde to the hilt in public, but she's extremely knowledgeable on national and international affairs,\" declared Naomi once the two entered their hotel. \"This dispute between Ukraine and Russia is a long time in the making and runs pretty deep. This may be a difficult task.\"\n\n\"I'm just beginning to learn how much I don't know about this part of the world,\" observed Steve. \"I need to read more and listen better. This was a lesson in humility for me tonight. I'm glad you were there to help fill me in on the background of the problems.\"\n\n\"You can't be expected to know everything about everything,\" responded Naomi. \"Look at the bright side. Nadiya and her mother both think you're the cat's pajamas. That girl's as beautiful a woman as I've ever seen.\"\n\n\"Haven't you ever looked in a mirror?\" asked Steve. \"You're second to none in the looks department. Then toss in that amazing brain and that round ass and you're the whole package.\"\n\n\"No wonder Gwen fell for you,\" cooed Naomi. \"Even if your eyesight is weak. My ass isn't all that round. You think I'm attractive? As beautiful as Nadiya?\"",
        "\"That's the very question I always try to avoid answering,\" replied Steve cautiously. \"Since we're alone, I feel that I can be truthful. You're as beautiful as any woman I've ever seen. There are no qualifiers with that statement. You're gorgeous. I thought so the first time I saw you in class in Cuba. You've only gotten lovelier over the years.\"\n\nNaomi's smile lit up the room. She reached up and pulled Steve down for a quick kiss. \"I just wish that I knew then what I know now. I'd have been your girlfriend for sure.\" \n\n\"I like to think that we're really good friends, and that we always will be,\" responded Steve as they walked to their rooms. \"True friends are rare commodities. I consider you to be one of my very best friends. If you ever need anything I can help you with, just let me know.\"\n\nThe next morning, Steve and Naomi joined the others for the discussions the Ukrainians were to have with the Russians. Steve and Naomi were seated next to Secretary Rosen, but remained quiet and listened intently to the proceedings. The rest of the American delegation sat quietly in chairs away from the conference table. As he listened, Steve realized that Secretary Rosen was extremely well versed on all facets of the dispute. \n\nNadiya's father was a participant in the discussions. Steve also recognized Anatoly Suchkov. Varvara's father was heading up the Russian delegation. There was an hour lunch break and then the parties were back in the conference room. By day's end, most of the issues had been resolved, but Russia insisted on the right to patrol the skies over Ukraine. The Ukraine delegation flatly refused to accept that proposal. Neither side would budge on it and it appeared that it would block the success of the other negotiations.\n\n\"Lieutenant Hammer?\" boomed the voice of Anatoly Suchkov. \"Do you feel that Russia is being unreasonable in its demands?\"\n\nSteve slowly looked around the room before responding. Everyone was waiting for him to speak. He responded in fluent Russian.\n\n\"Actually, I do. There's no doubt that you have superior military forces. That doesn't mean that other nations will not resist your efforts to dominate them. History has shown us time and again that people will fight for their families, their land, and for their pride.\n\n\"Everyone here knows that Russia has no real need to fly over Ukraine land. It's simply making a statement. That proposal cannot be accepted by Ukraine. I'm sure you must realize that,\" finished Steve.\n\nSteve's bluntness stunned most of those in attendance. No one spoke so frankly at such important discussions between feuding nations. Secretary Rosen felt his blood pressure creep up as he listened to the translation of Steve's response. \n\n\"It would appear that our young American friend feels that Russia has no business patrolling over Ukraine. Some would think that Mr. Hammer has been persuaded to see things from the Ukraine point of view. Russia has considered him and his group to be friends since their memorable visit a few years back. Now we are beginning to wonder.\n\n\"We have all seen the new hospital Lieutenant Hammer and his group are completing in Kiev. That was an extremely noble gesture. It has greatly improved the economy of that city. It will also save thousands of sick and injured children in Kiev and all of Ukraine. We only wish that Lieutenant Hammer held Russia in as high esteem. If he could convince Russia that he felt as concerned about Russia as he does about Ukraine, we might consider his opinion about avoiding Ukraine air space.\" \n\nSteve was confused at the last comment by Suchkov. He seemed to want Steve to prove that he personally liked Russia and Ukraine equally. The problem was that 'Lady in Red Productions' had constructed a beautiful new hospital in Kiev, but they had built nothing in Moscow. Apparently, Russia felt slighted by that fact. \n\nSteve quickly considered the situation. How could such an act of generosity create an international problem? What was Anatoly really saying? Then it suddenly came to him!\n\n\"As a matter of fact, my friends and I have been considering a similar project in Moscow,\" revealed Steve. \"We love Russia and would like to build something similar to the hospital in Kiev. Jordan Quick, Gwen Anderson, and her sisters Kate and Lisa have been pushing Charlie Burns and me to agree to a project of that nature in Moscow. \n\n\"I explained to them that we've spent about three hundred million dollars on the hospital in Kiev and will spend almost that amount every five years in operating expenses. If we invested that sort of money in Russia, we'd have to be certain that it was appreciated. We're trying very hard to help people live longer, and healthier.\" \n\n\"I understand your concern,\" replied Anatoly Suchkov. \"My government would consider a request for a project like that. In fact, my government may consider avoiding Ukraine air space as a sign of appreciation, if it was convinced that a similar hospital would be constructed to treat the children of Moscow.\"\n\nThere it was. Steve realized that the Russian delegation had played him like a fiddle. They wanted what Kiev had; a new hospital funded by Americans. The economic impact of the construction, as well as the jobs created once it was completed would be a shot in the arm for the Russian economy. Then there was the added benefit of good health care for the children of the city.\n\nAll eyes were once again on Steve. Russia wanted a new hospital. Ukraine wanted to forge an agreement that did not allow Russia to control its air space. \"Sir, Lady in Red Productions will build and operate a state of the art children's hospital in Moscow, if Russia can find a way to avoid Ukraine sovereign air space. It will be very similar to the one we are completing in Kiev this spring. I give my word.\"\n\nAnatoly Suchkov never blinked as he studied Steve's face for what seemed like minutes; but Steve knew it was closer to ten seconds. \"Russia will not fly over Ukraine. We look forward to the construction of the new hospital.\"\n\n\"Thank you, Mr. Suchkov!\" exclaimed a very relived Secretary Rosen. \"We have an agreement! It will be drawn up tonight. We will meet to sign it tomorrow at noon. The United States is grateful to both Russia and Ukraine for the constructive dialogue and fruitful negotiations.\"\n\n\"I would like to speak with Lieutenant Hammer in private, if I may,\" stated Anatoly Suchkov firmly. \n\nRosen looked at Steve, who nodded in agreement. \"Thanks, Steve. I've never seen a country negotiate with a private business while in discussions with another nation. You've just spent a lot of money to help stabilize this part of the world.\"\n\nSteve took Naomi's arm and escorted her as he walked across the room to meet with Suchkov, who spoke to Steve in Russian. \"My wife and daughter ask that you join us for dinner at our hotel. Your lovely lady friend is invited as well. Would you honor us?\"\n\n\"It would be our great pleasure. What time would you like us to arrive?\" responded Steve in fluent Russian.\n\n\"I imagine you will need an hour or so to explain to your friends how you just spent so much of their money,\" chuckled the Russian. \"Come to my hotel at six. There will be a dining room reserved, and you will be escorted to it.\"\n\nSteve and Naomi then returned to the conference room the American delegation had been using as a base of operations. Senators Chatham and Mason greeted them immediately.\n\n\"Steve! I can't believe that you just promised the Russians that your company would spend hundreds of millions of dollars on a hospital in Russia. I didn't even realize that was what he was hinting at until you made the offer,\" marveled Senator Chatham. \"They were envious of Ukraine and the hospital you built there. They wanted you at the discussions today so they could force you into making the offer. They knew that other nations would oppose that fly-over policy. They tossed it in so they had something they would be able to give up if you offered a new hospital.\"\n\n\"I've been involved in difficult negotiations before, but I've never seen a country include a private corporation before,\" added Senator Mason. \"Can you actually afford that sort of expenditure?\"\n\n\"I wouldn't have offered it if we couldn't afford it,\" replied Steve. \"The real question is this; how will my partners feel about me making such a commitment without consulting them first? Please excuse me while I make some calls.\"\n\nSteve placed a call to Stephanie, who worked out of the company headquarters in Sparta. He explained that he needed a conference call with Jordan, Charlie, Gwen, Kate, and Lisa. She promised that she'd make it happen. A short while later, Steve was notified that everyone was on the line.\n\n\"Steph, stay on the line, too,\" insisted Steve. \"You need to know about this. I don't know how to tell you guys this, but I just promised the Russians that we'd built a hospital in Moscow similar to the one we're doing in Kiev. I had no right to make that promise without consulting you first, but it was at a critical point in the negotiations and Suchkov had me against the wall. \n\n\"If you'll agree to it, I'll forgo any share of any monies the company makes for as long as it takes to gain that money back. I'll even give up my share of the company if you guys think I should. I'll do about anything you ask to enable me to keep my word to the Russians on this deal.\" \n\n\"You want us to approve an offer you just made to build a hospital in Moscow? The one in Kiev has cost about three hundred million and will probably cost that much every few years in operating expenses, according to the last accounting statement I read,\" responded Jordan. \"You made that offer without even consulting any of us? Not even Gwen?\"\n\n\"Yes, and I apologize, Jordan. I had no right,\" replied Steve.\n\n\"Gwen's being awfully quiet,\" observed Kate. \"Personally, I think this is the coolest, greatest demonstration of your faith in us that anyone could ever imagine. I'd back you on anything, Steve. I'm just proud that our company can do this, that we will do this, and that you trust us enough to make that promise knowing that we'll support you right to the gates of hell.\"\n\n\"Kate's right,\" agreed Lisa. \"I'd never complain about anything you wanted to do with the money the company makes. You, Gwen, Jordan, and Charlie make almost all of it, but that doesn't even matter. We're partners and we're family. If you felt it was the right thing to do, I'm good with it. In fact, I'm more than good. I'm proud as hell.\"\n\n\"Charlie's laughing in the background,\" revealed Jordan. \"He thinks it's funny that you could even consider it possible that any of us wouldn't support you in anything you want. You and Gwen are the straw that stirs the drink that we call Lady in Red Productions. We're in, and next time you don't even have to ask.\"\n\n\"Stephanie, can we afford that sort of expenditure?\" asked Gwen.\n\n\"Easily, and a lot more,\" replied Stephanie. \"Haven't you been looking at the reports I email to you?\"\n\n\"I'm way too busy trying to pass my exams to worry about the finances of the company. That's why we have you,\" kidded Gwen. \"I don't think anyone on this conversation will be surprised that I support Steve's offer totally. I'd give away every last dime before I'd ever embarrass Steve in any way. We can make more money, but we sure can't find another Steve. I love him. Everything I have, and everything I am is his to use as he sees fit.\"\n\n\"It seems to be unanimous, and I would have been shocked if it had been otherwise,\" concluded Stephanie. \"The strength of Lady in Red Productions is its generosity, and the absolute trust you have in each other. The fact that you make block buster movies, hit songs, have a clothing line that's growing by leaps and bounds, and give so much to so many, doesn't hurt either.\n\n\"Changing the subject, I've been informed that one of the beer companies has decided to drop two minutes of commercials that it had reserved for the Super Bowl. I agreed to buy them. I didn't ask any of you because it's my job and I feel strongly that's it's a great opportunity. You can fire me anytime you like, but I don't think you will. \n\n\"I need all of you back in Sparta the weekend of the fifteenth to make some commercials. We're doing four thirty second segments. We'll advertise our lingerie and swim suits, our movies, and our music. None of you will be paid for the modeling, acting, and singing since you're all owners. I plan on making these the most discussed commercials the Super Bowl has ever seen.\"\n\n\"I really like the way Steph takes charge,\" laughed Steve. \"I have to thank all of you for being so understanding and supportive. It just makes me love all of you even more. I'll be in Sparta that weekend, Steph. See all of you then. Gwen, I love you! So long.\"\n\nNaomi and Steve arrived at Suchkov's hotel a few minutes before six and were shown to a private dining room. Varvara rushed to Steve and hugged him as soon as he entered the room.\n\n\"It's so good to see you again! Gwen is not with you, yet you still have a beautiful woman on your arm. Have you been able to reconcile your generous offer with your friends?\" asked Varvara.\n\n\"My friends support this venture unequivocally. It wasn't really necessary to threaten Ukraine to persuade us to build a hospital in Moscow. You should have called us and asked,\" suggested Steve. \"Mrs. Suchkov, it is nice to see you again! I hope you are feeling well.\"\n\n\"Thanks to you, I am doing very well. Sometimes I have bad dreams about those two Chechens that attempted to kidnap me in Washington, but mostly I remember how easily you saved me from those killers and feel relief. I did not want Anatoly to force you into building a hospital, but he had his orders.\" \n\n\"You would put that amount of money into Moscow if we had asked?\" asked Suchkov incredulously. \"That's difficult to believe. We in the Russian government felt that Ukraine must have found a way to force you to build the hospital. No one considered the possibility that you simply wanted to do such an incredibly generous act. Our government will never consider that a possibility. We are very pleased to have squeezed you into building a hospital in Moscow.\n\n\"President Novokov approved today's ploy to gain your willingness to build the hospital. He felt your generosity had limits and that you would need a bit of a push,\" concluded Suchkov.\n\n\"He should know better, but it's all good,\" reasoned Steve. \"We're very fond of Russia and its people, and we're pleased to be involved in the project.\"\n\n\"President Novokov wanted me to ask you and your friends to perform for the people of Moscow when the weather is warmer this spring or summer,\" added Suchkov. \"We saw how well you were received in Paris. We would expect a larger crowd in Moscow. Not everyone has the opportunity to perform in Red Square!\" \n\n\"Sir, we would certainly be interested, but obviously, I have to consult my friends and our manager to determine if our schedules will allow it. It sounds very exciting. I think my people should have a response for you before month's end,\" promised Steve. \"We'll do our best to get it set up. We really enjoyed our visits to Russia.\"\n\nOnce again, Steve and Naomi had a lively discussion when they returned to their hotel. \"That was some interesting day! You committed your company to make a six hundred million dollar expenditure, and that's not counting what it will cost to operate years from now. You've been asked by the Russian government to perform in Red Square when the weather warms up. Tomorrow we're going to tour the new hospital your company built for the children of Kiev and Eastern Europe. They'll probably want you to perform at the grand opening. They sure love your music here.\"\n\n\"That's a good idea,\" nodded Steve. \"We can try to arrange covering these commitments on the same trip. It isn't much more difficult to do two shows than one.\"\n\nThe next morning, Steve went down to meet Naomi for breakfast. He wasn't surprised to find Senators Mason and Chatham sitting at the table with her. \n\n\"President Hanson was stunned to hear that part of the negotiations was for your company to build a new hospital in Moscow,\" informed Senator Chatham. \"He was extremely grateful that you agreed to the request. There are very few people in the entire world that help settle international conflicts by spending huge amounts of money on humanitarian endeavors.\n\n\"The American delegation will be touring the new hospital today with you. The Ukraine government invited them. The Ukrainians are extremely proud and want to show it off. I don't have to tell you that Larson and some of the others aren't too keen on touring the hospital that you and Gwen built, but there was no way they could refuse without insulting our hosts. You need to be aware that you and Gwen are making a few dangerous enemies in Washington and a huge number of fans and admirers around the world.\" \n\nSteve and Naomi were treated like royalty as they toured the almost completed hospital the following day. Steve didn't know exactly what all of the equipment was used for, but it appeared to be state of the art, and expensive. Finishing touches, like painting, trim, and hanging doors, signage, and the computer system remained to be installed. Steve was assured that it would be ready to open before June.\n\n\"I'm so proud of my friends for funding this amazing building and all of this equipment!\" praised Naomi. \"I can see why the Russians wanted a hospital like this. It's so modern and well equipped. This is amazing!\"\n\nEven the harshest critics of Gwen's and Steve's were impressed with the structure and the modern machinery. There could be no doubt that the hospital was going to be a major factor in improving the health and welfare of children in Kiev, Ukraine, and all of Eastern Europe.\n\nBy the time the delegation returned to Washington, the media was having a field day with Lady in Red Production's decision to fund a modern hospital in Russia. Gwen was interviewed on several stations as she was making her way to and from her medical school classes. The angle of Gwen becoming a doctor while funding entire hospitals was heavily played up.\n\nBill Hardy came back to the anchor chair the same evening that Steve returned to Washington from his trip to Eastern Europe. With his arm in a cast, Hardy thanked his friends and family for helping him through his recovery from the helicopter crash in the Potomac. Then he commented on Steve and Gwen's generosity.\n\n\"What us Americans need to ask is this. Why is Lady in Red Productions spending so much money in Communist countries? The United States could use the jobs as well as the medical facilities. Don't we Americans deserve to be treated at least as well by American companies as people in foreign lands? How much money does Gwen Anderson make, and is it legal for a sitting member of Congress to use her position to increase her personal wealth? Has she filed all of the required forms? How much does she pay in income tax? What is the extent of her wealth? How much did she spend to gain her seat?\" persisted Hardy. \"Have we become a nation where the wealthy can buy anything, including political office, and public favor?\""
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "paris",
        "eiffel tower",
        "kiev",
        "arc de triomphe",
        "dirty dancing",
        "hospitals",
        "grenade",
        "orphanage"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-02-ch-15"
}