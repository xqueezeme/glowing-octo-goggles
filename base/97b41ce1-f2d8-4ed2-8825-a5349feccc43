{
    "title": "Transformations: Morpheus Ch. 03",
    "pages": [
        "Transformations: Morpheus Ch. 3\n\nComments welcome!\n\n------------------------------------------------------\n\nMelody wasn't sure when Evie had left her in the bed. She fell asleep.\n\nBut she knew when Evie returned. Her alarm clock said 6:30 AM, an hour and a half before Maria would start the first shift.\n\nMelody smiled and rolled over when she felt Evie's hands on her naked back.\n\n\"Morning, sunshine,\" Evie whispered. She had stripped naked and slid under the covers with Melody.\n\n\"Won't Maria be mad you ended your shift early?\" Melody asked.\n\nEvie giggled. \"Oh, I don't think so.\" She kissed Melody and then turned her head to the side.\n\nMaria was standing by her bed with one eyebrow raised.\n\nEvie nibbled Melody's ear. \"Maria and I want to make sure we understand all this.\"\n\n\"O... Okay?\"\n\nEvie grinned. \"So, you're in love with Eric?\"\n\n\"Yes,\" Melody said.\n\nMaria's face was inscrutable.\n\n\"And, last night you decided you liked girls too?\" Evie said in Melody's ear.\n\nMelody moaned - Evie's hot breath in her ear was making her melt. \"Yes.\"\n\n\"You are bisexual,\" Maria said.\n\n\"I... suppose.\"\n\n\"Was not question. Was observation.\"\n\n\"Sorry?\"\n\nEvie laughed and kissed Melody's neck. \"Don't pay attention to her, Melody. She's just messing with your head because of what you said to her yesterday.\"\n\n\"I'm really sorry about that, Maria,\" Melody said. \"I just didn't want you to get me in trouble over Eric.\"\n\nMaria smiled for an instant before the stoic Russian detachment returned.\n\n\"She wasn't going to get you in trouble. She was just trying to get you to be more careful,\" Evie said and tickled Melody's ear.\n\n\"Really?\"\n\nMaria turned away and walked to the dresser. \"Yes.\"\n\n\"So, everything's okay?\" Melody asked.\n\nEvie giggled. \"Oh, better than okay. We came here to show you something.\"\n\n\"What?\"\n\nMaria reached behind her and unzipped the back of her dress.\n\n\"The eighth wonder of the world,\" Evie said.\n\n\"Stop it,\" Maria said as she let the dress fall.\n\nMelody gasped.\n\nMaria Marapova's body looked like she was carved from alabaster. Her hips were perfectly heart shaped and muscles stood out on her back. Like Evie, she wasn't wearing panties, only the white stockings and garter belt.\n\nHer almost white hair cascaded halfway down her back.\n\n\"Yeah, I know. I could look at her all day,\" Evie whispered.\n\nShe turned around and undid her lace bra, revealing large breasts that belonged on a much younger woman.\n\nHer face that had always seemed cold to Melody now seemed only beautiful with a hint of sadness.\n\nShe walked toward the bed, slipping off her shoes.\n\nMaria stood over her and she found herself drawn to look at the woman's sparse, nearly translucent pubic hair.\n\nMaria knelt down and Melody stared at the big breasts.\n\nWhen Maria stood back up, she was pulling something made from elastic straps up her long legs.\n\nThere was a plastic cock attached to it.\n\n\"What is that?\"\n\n\"It's called a strap-on,\" Evie said.\n\n\"What's it for?\"\n\nEvie laughed in her ear. \"You know damned well what it's for.\" She rolled Melody onto her back and kissed her as Maria climbed onto the bed.\n\n\"Open your legs,\" Evie whispered.\n\nMelody stared deep into Maria's almond shaped eyes and let her thighs part.\n\nMaria smiled.\n\nEvie reached out and stroked the plastic cock. \"Is he bigger than this?\"\n\nMelody nodded. \"It's almost eleven inches I think.\"\n\n\"Closer to twelve,\" Maria corrected.\n\nEvie and Melody both looked at her.\n\nMaria shrugged. \"He showers with door open. I am a lesbian, but not so much I wouldn't look. He is a beautiful man.\"\n\nEvie laughed. \"You are full of surprises, Maria.\"\n\nShe smiled and grasped Melody's thighs. Then she leaned down and began kissing her pussy.\n\nMelody gasped and her body went rigid.\n\n\"Relax,\" Evie whispered as she caressed Melody's hard nipples.\n\nMelody put her hand over her mouth as Maria sucked her clit.\n\nEvie pulled Melody's hand away. \"Door's closed and the walls are soundproof, remember. Let it out.\"\n\nMelody cried out and ran her fingers through Maria's beautiful hair. She rubbed her crotch hard against the woman's amazing mouth.\n\n\"Yeah, that's right,\" Evie said. Then she leaned over and began sucking Melody's nipples.\n\n\"Oh, God!\" Melody cried out.\n\nShe came, knowing her fluids were pouring onto Maria's face.\n\nShe threw her head back and screamed through gritted teeth.\n\nWhen Maria slid up her body, she threw herself into a passionate kiss.\n\nShe moaned into Maria's mouth as she felt the plastic cock press against her and then slide deep inside.\n\nShe wrapped her legs around Maria's waist as the woman's powerful hips drove the dildo in and out.\n\nEvie stroked Melody's hair and the small of Maria's back. She leaned in and kissed them both.\n\n\"God, God!\" Melody cried out as she came again and fell asleep in their arms.\n\n***\n\n\"He's affecting them, isn't he?\" Stafford asked.\n\nDr. Thompson nodded.\n\nThey were watching the sapphic three-way going on in Melody's room on the black and white monitor.\n\n\"It's hormones, I believe. Perhaps even his brain waves. Just being in close proximity to him is causing them to change,\" Thompson said.\n\n\"The other two were degenerates before,\" Stafford said. \"But the Hutchins girl was normal. His hormones or brainwaves or whatever they are drove her to perversion.\"\n\nThompson sighed. \"Do you ever get tired of being a Neanderthal, Stafford? You actually see these three women as perverted degenerates?\"\n\n\"Makes me wonder about you that you don't, doctor.\"\n\n\"Perhaps they're simply evolving.\"\n\n\"Jesus Christ,\" Stafford said. \"We can debate morality at a different date, doctor. For now, we need to limit people's exposure to Eric Morrison, so we don't have anybody else 'evolving'.\"\n\nThompson nodded. \"On this we are in agreement.\"\n\n***\n\nShe woke up with Evie curled against her, breathing steadily.\n\nMaria was putting her uniform back on. She looked over her shoulder at Melody. \"My shift starts.\"\n\n\"Maria, what should I do?\" Melody asked.\n\nMaria shrugged as she adjusted her cap. \"Sleep here with Evie till your shift starts.\"\n\n\"No, I mean...\"\n\nMaria laughed. She turned and leaned on the dresser. \"I know what you meant, darling. I make a joke.\" She walked over and sat on the edge of the bed. She ran her fingers through Melody's blonde hair. \"Tell him.\"\n\n\"You think I should? What if...?\"\n\n\"Melody, my love. There are men you could tell about this who would crucify you, call you names, toss you away. Your Eric is not such a man. He is the kind of man who will accept you and love you.\"\n\nMelody smiled and kissed her hand.\n\n\"Now, sleep.\"\n\nMelody closed her eyes and Maria closed the door behind her.\n\n***\n\nMorpheus\n\nI had dispensed with wearing the pajama top. It was too tight, and I felt like an idiot wearing it. I can't imagine how I must have appeared to Stafford and Thompson as I stood shirtless wearing only tight blue pajama bottoms in front of my blackboard.\n\nThey were standing as far away as possible, pressed against the wall.\n\n\"Any breakthroughs overnight?\" Thompson asked.\n\nI chuckled. \"Doctor, you don't honestly believe I could solve this that quickly, do you?\"\n\n\"No.\"\n\n\"I have some thoughts if you'd like to hear them?\" I said.\n\n\"Please,\" Thompson said.\n\n\"First, a question: does anyone outside the United States know about this?\"\n\n\"A few of our allies,\" Stafford said.\n\n\"You must tell every government on earth, Colonel.\"\n\n\"Are you out of your goddamned mind?\"\n\nI sighed. \"Secrecy will doom us, Colonel. There needs to be a global effort to solve this.\"\n\n\"What are we supposed to do? Share intel with the Russians? The goddamned red Chinese?\"\n\nI turned and glared at him. \"Yes, Colonel. They're going to die too. Have you even warned the Russians about the dangers of detonating another Neptunium bomb?\"\n\nStafford stared at me. \"No.\"\n\nI laughed. \"Colonel, the mutations caused by the detonation of one of those bombs have doomed humanity to a slow death. More detonations might cause different mutations that will kill us in a matter of weeks. Don't you think we should make sure that doesn't happen?\"\n\nThompson held up his hand. \"I'll speak to the President, Eric. The decision is his.\"\n\nI nodded.\n\n\"Beyond alerting the world governments, what else can we do?\"\n\n\"Start looking for people who are immune. To do that, we'll need a way to test for the mutation. It will take us at least a decade to create such a test given current technology.\"\n\n\"Wait, you're saying there are people who are immune to the mutation?\"\n\n\"Yes. Statistically there have to be. I would place the numbers at one-one hundredth of one percent of the world population - approximately 350,000 people. These people will need to be identified and selectively bred...\"\n\n\"Selective breeding? Are you out of your goddamned mind, Morrison?\" Stafford asked. \"This is the United States. The people aren't going to go for a 'selective breeding' program.\"\n\n\"They will if they want to save the human race. Gentlemen, in a hundred years, the decreasing birth rate will be evident to anyone who looks at the figures.\"\n\n\"Are there other things we can do, Eric?\" Thompson asked.\n\nI nodded. \"Suspended animation until we can find a way to cure this.\"\n\nStafford laughed. \"People in freezers. Jesus, this is your genius, Thompson? Who goes in them, Morrison? Who decides?\"\n\nI shook my head. \"To save the world, perhaps I have to change it.\"\n\n\"What?\" Thompson asked.\n\n\"Every stop gap measure I present, you counter with the right of people to free will. Perhaps that needs to be taken away. Sometimes I wonder if I couldn't build a better civilization without your fucking morality and convention, Stafford?\"\n\nStafford went pale, and it was at that point I finally realized he was truly afraid of me. For someone like Stafford, that must have been an alien feeling.\n\n\"What the fuck is he talking about, Thompson?\" Stafford hissed.\n\n\"Merely postulating, Colonel. A daydream. Speaking off the top of my head,\" I said. But was I? \"Or I could make humanity immortal.\"\n\nThey were both silent.\n\n\"Hmm... there's something to ponder.\"\n\n\"What are you talking about, Morrison?\" Stafford asked.\n\n\"Simply this: The Ambrosia I was given was unrefined. It was created millennia ago and stored in those vessels - if it was created at all. Perhaps it bubbled up from the earth and was bottled. Or perhaps it was a gift from some advanced civilization that visited us at the dawn of time.\"\n\n\"An extraterrestrial origin?\" Thompson asked.\n\n\"Or extradimensional. Some traveler, not unlike Pike, traveling from some other plane of existence with a gift for us, perhaps? In any event, the Ambrosia we have is a broadsword, not a scalpel - it's unrefined and it kills more people than it can imbue with godlike powers. If we could refine it? Understand how it works? We might be able to isolate the mechanism of immortality.\"\n\n\"What mechanism of immortality, Eric?\" Thompson asked.\n\nI turned and stared at him. \"I'm immortal now. Didn't you know? Of course not.\" I laughed. \"I only figured it out at 4:47 AM this morning. I keep forgetting you're lagging behind me, doctor. My apologies.\"\n\n\"You're immortal?!\" Stafford asked.\n\nI laughed. \"Yes, Colonel. When you are dead and dust in your grave, I will still be alive and well. If anything, I've grown younger in the last few days. Yes, I will need the rest of the Ambrosia. You can bring it to me, can't you?\"\n\n\"The fuck we will!\" Stafford spat. \"You think we're going to give the most important substance on earth to you?\"\n\n\"Eric, you really think you can make people immortal?\" Thompson asked.\n\n\"I'm counting on it. I'm in love with Melody Hutchins. I want her by my side forever.\"\n\n***\n\n\"Jesus, what the fuck have we done?\" Stafford asked as he walked down the hall with Thompson.\n\n\"Stafford, if he can make humanity immortal, the world would be saved. We would have millennia to solve the reproduction problem.\"\n\n\"Who'd get to be immortal, doctor?\"\n\n\"Everyone.\"\n\nStafford laughed. \"You're delusional. Immortality would become the new gold, the most valuable commodity on earth. Would we give it to the commies? If we didn't, would they start World War III over it? I know I fucking would.\"\n\n\"Stafford, we have to get beyond these... police actions and cloak and dagger bullshit. He can change the world, make it better for all of us.\"\n\nStafford pointed back at Eric's room. \"Absolute power in the hands of that man, doctor? Think about it. You think Eric Morrison should wield that kind of power over the world? You think he's going to create a utopia? He'll build a living hell and sit on the satanic throne.\"\n\nThompson grabbed Stafford's arm. \"Colonel, that man is the only chance we have to save this world!\"\n\nStafford jerked his arm away. \"I should have shot him in the face on the first night.\"\n\n***\n\nMorpheus\n\nIn that one moment speaking with Thompson and Stafford, I knew I could not save the world their way. Once the powers that be saw me as immortal, they would destroy me out of pure jealousy. If I gave them the gift of immortality, they would fight never-ending wars over ideologies and religions. If I gave immortality to only one ideology, those who were left out would destroy the world out of spite.\n\nThe Staffords of the world were too many. The Thompsons too few.\n\nAnd at that moment she came into the room.\n\nSmiling, beaming in her white uniform. I didn't have to look away from the board to know it was her. I simply held out my hand.\n\nMelody ran to me, clasping my hand, drawing close to me.\n\nI put my arm around her and drew her tight against my side.\n\n\"You're taller,\" she said.\n\n\"Am I?\"\n\n\"Your pajamas are knee pants. You look ridiculous.\"\n\nI slid them down my hips and stood naked.\n\nShe laughed. \"Eric? Do you want clothes?\"\n\nI looked down at her. \"Why?\"\n\n\"Somebody might see.\" She giggled.\n\n\"Let them look. Take off your clothes.\"\n\n\"What?! No! It's too early, anybody could come in, Eric!\" But all the while she was taking off her little white nurse's hat and unzipping her uniform.\n\n\"Leave the stockings and garter belt. I like them - they make you look more naked.\" I smiled. She had left the panties in her room.\n\n\"Okay, I...\" She stopped and her eyes grew wide as she looked down at herself. \"I'm naked! Why did I do that?\" She crossed her hands over her breasts.\n\nI smiled. \"You should only wear lingerie. Nothing else. Women are too beautiful to walk around in dresses and uniforms.\"\n\nShe hesitated looking down at her clothes.\n\nI laughed. \"Go ahead. Put them back on.\"\n\nShe knelt down and pulled her uniform back up. \"Help me?\"\n\nI zipped her up.\n\n\"How did you do that?\" She asked.\n\nI pulled her back under my arm. \"I believe I've developed a new power. The closer you are to me, the more you are compelled to do what I ask.\"\n\nShe closed her eyes. \"Eric, I have to tell you something.\"\n\nI looked down at her. \"What?\"\n\n\"Last night. I... I don't know why... But I seduced... I seduced Evie.\"\n\n\"Really? Hmm,\" I said and smiled.\n\nShe stared up at me. \"That's all you can say? I tell you I seduced a woman and you say 'Hmm'?\"\n\n\"Did you enjoy yourself?\"\n\n\"Eric! I made love to Evie. I had lesbian sex.\"\n\n\"Are you saying you're leaving me?\" I asked.\n\n\"What?! No!\" She hugged me tight. \"No! I love you. I don't love...\"\n\n\"Of course you love her. That's why you chose her to be intimate with, isn't it?\"\n\n\"I... God, I'm so confused.\" She hid her face in my chest. \"I messed everything up. It's all my fault.\"\n\nI laughed. \"No. You haven't messed anything up. And it's my fault.\"\n\n\"What?\"\n\n\"Remember what I told you last night when you told me about Evie and Maria? I said, 'You should try it sometime.'\"\n\nHer eyes grew wide as she realized what had happened. \"You bastard!\"\n\n\"I'm sorry, I didn't even realize I had that power last night. I figured it out this morning.\"\n\n\"I can't believe you did that to me?\"\n\n\"I didn't mean to.\" I stroked her face. \"Would you like me to undo it? I can if you like. I can make you 100% straight again if you like.\"\n\nI saw the hesitation in her eye and barely held back a laugh. \"It's okay if you liked it, Melody. It really is okay.\"\n\n\"But it wasn't real! You made me...\"\n\nI smiled and shook my head. \"No, I made you try it. I didn't make you like it. That's all you. I just made you think about it. The choice was yours.\"\n\nShe punched my shoulder. \"Don't ever make me try something again! I mean it!\"\n\n\"I won't, I didn't mean to last night. It's dangerous being around me, babe. Especially now. I don't know my own strength.\"\n\n\"You're okay if I do things... with girls?\"\n\n\"Yes.\"\n\n\"Why? Why are you okay with it?\"\n\nI picked her up. \"Because I love you and I trust you. I trust that you love me, and I want you to be happy.\"\n\nShe held on tight. I could tell she was looking at the blackboard. \"The symbols look different.\"\n\n\"Yes.\"\n\n\"Why?\"\n\n\"I switched to code.\" I said and then I kissed her.\n\n\"You're writing in code?\"\n\n\"I am.\"\n\n\"Why?\"\n\n\"Because I found the camera last night.\"\n\nShe looked at me. \"What camera?!\"\n\n\"Not so loud. There's a microphone as well. I suspected Stafford and Thompson had the rooms bugged. I was correct.\"\n\n\"Oh, my God! They've seen...\"\n\n\"Everything. Including what you did last night with Evie, I imagine.\"\n\nShe laid her head on my shoulder. \"They'll ruin me.\"\n\n\"Nonsense. They won't say a word. If they did anything to upset you, I'd stop helping them. Besides, they won't take the risk of anything getting out about Project Olympus.\" I carried her to the bed.\n\n\"What are you doing?\" She whispered.\n\n\"What do you think I'm doing?\"\n\n\"But they're...\"\n\n\"Watching. Yes. They've been watching. They've watched everything we've done. Let them watch.\"\n\n\"You're terrible!\" She whispered, but she was smiling.\n\n\"Yes, and I'm also horny. My libido is skyrocketing, and I can only masturbate so many times a day.\"\n\nShe giggled uncontrollably.\n\nI set her on the bed and grabbed her ankles, pushing them against her chest. The hem of her uniform rode up and exposed the top of her stockings and the garter belt.\n\n\"Wait, stop!\" She said.\n\n\"Oh, God, what now?\"\n\n\"I... I have to confess something else...\"\n\nI reached down and touched the fine down of her blonde pubes. I held up my fingers and she tried to focus on what I had pulled from her bush.\n\nIt was a long white hair.\n\n\"You fucked Maria as well I see? That was brave.\" I grinned lewdly.\n\nShe shrugged. \"It was Evie's idea.\"\n\n\"Always someone else's idea with you isn't it, Nurse Hutchins?\" I leaned over her and kissed her.\n\nShe giggled in my mouth and then gasped as my cock brushed against her clit.\n\nMelody reached down and guided me into her. \"Don't be gentle this time,\" she whispered.\n\nI slid into her.\n\n\"Oh! Okay a little gentle!\"\n\nI laughed as I moved slowly inside her, bottoming out in her at eight inches and taking care not to push too hard.\n\nThis is the part where I tell you how gentlemanly I was as I made love to her. How I didn't delve into her mind - that ultimate betrayal of trust.\n\nI could tell you that, but I would be lying.\n\nI'm a telepath, and as I made love to her, Melody's mind opened to me just like her womanhood. Humans are a mass of insecurities, a tapestry of old emotional wounds. When we look at someone else, we see them as a beautiful whole. But, when we look at ourselves? We see all our faults, all our imperfections under a microscope.\n\nNo one is truly free. We are our own slave masters.\n\nSo I looked into Melody's mind and I eliminated each insecurity as I found it. I felt her relax in my arms as each worry faded from her conscious mind and she focused only on the moment.\n\nWhen she came, she screamed out my name, her legs squeezing my hips as her nails dug into my back.",
        "I came as well - one moment of beautiful harmony. For an instant, there was only one of us, one organism with two halves that was complete.\n\nAnd I knew that was the highest level I would ever attain as a god. This was the end of the road, the frog in the pot finally boiled. This was my transcendence, my ascendence. The only thing that made me a god was her, and as I held her I knew she was destiny. I glimpsed Nirvana, Pike's door to the twelfth dimension, and I saw that the only way I would ever transcend this plane was with her at my side.\n\nShe looked into my eyes and I swear she was glowing.\n\nI have never loved so completely and purely.\n\nAnd I never will again.\n\n***\n\nStafford opened his eyes in his room and knew once again someone was there. He reached for the gun and it was there.\n\nHe turned on the bedside lamp and leveled the .45.\n\nConstance Balenger was looking at him in terror from the doorway. \"I... The door wasn't locked...\" She stared at the gun.\n\nHe set it down on his nightstand. \"Somebody broke the goddamned lock last night.\"\n\n\"You could have killed me!\"\n\nStafford lay back in his bed. \"What the fuck do you want, Constance?\"\n\n\"I came here to fuck, but now I need a change of underwear.\"\n\nHe threw back the covers. \"Get over here.\"\n\nShe climbed into bed.\n\nHe squinted at her. \"The fuck are you wearing?\"\n\n\"Raincoat,\" she said.\n\nHe untied the belt. \"Kind of stupid putting on a raincoat when you can't leave the building.\"\n\n\"Don't be mean.\"\n\n\"You like me mean.\" He flipped open the coat to reveal her naked, curvy body beneath. He smiled. \"You're a good looking woman, Constance.\"\n\n\"See? Did it kill you to say something nice?\" She pushed her right hand into his boxers.\n\nHe groaned as she took possession of his cock.\n\n\"Simon is so pathetically small. It's like being fucked with a number two pencil.\"\n\n\"Price you pay to live in luxury, slut.\"\n\n\"Be nice.\"\n\n\"What the fuck do you want from me, Constance? You looking for love? You're nothing to me but mouth, tits, cunt, and ass.\"\n\nShe laughed. \"I think that's what I like about you.\"\n\n\"Maybe you're looking to be punished for being such a nasty slut?\"\n\nShe smiled. \"Maybe.\"\n\n\"Fine. Get up.\"\n\nShe got quickly out of bed.\n\n\"Lose the coat.\"\n\nConstance was breathing hard as she let the coat fall on the floor.\n\nStafford rolled onto his feet and sat on the edge of the bed. \"Lay across my knees.\"\n\n\"Wh... What are you going to do?\"\n\nHe grabbed her wrist and made her lay on her stomach across his lap.\n\nShe yelped in fear.\n\nHe raised his left hand over her buttocks. \"You want discipline or not?\"\n\nShe nodded.\n\nHe brought his palm down hard and her ass cheeks jiggled.\n\nShe grabbed the pillow off the bed and pressed her face into it as she screamed.\n\nStafford laughed. \"More?\"\n\nShe pulled the pillow away. \"Yes!\"\n\nStafford brought his hand down again and again as Constance bit and screamed into the pillow.\n\nOutside the door, Simon Balenger stood with his fists clenched as Stafford spanked his wife.\n\nHe stood there as the bed springs began to squeak.\n\nHe didn't walk away until he heard her cry out Stafford's name.\n\nSimon looked at his palms as he walked alone back to his room. They were bloody from where his nails dug into his flesh.\n\n***\n\nMorpheus\n\nLooking back with clearer eyes, I see now that my 'becoming' effected everyone in that building during the Summer of Love. Weeks passed and there was a social and sexual awakening going on outside the building as well as inside.\n\nMelody, Evie, and Maria became bolder the longer they took turns tending to my needs. They kissed openly in the halls.\n\nMelody spent more and more time in the room with me, and when she wasn't, she was in bed with Maria and Evie. Their libidos were matching mine, which was to say the four of us were insatiable.\n\nEventually, I knew that the four of us sharing Melody would lead to the four of us in bed together. But I left that for Melody to initiate - it didn't feel right to press the issue, and I was in no hurry.\n\nEvie would have gotten in bed with Melody and I the first night Melody seduced her. And she was constantly staring at my crotch when she came into my room.\n\nI even caught the inscrutable Maria staring at me at times.\n\nWhile I could see the effect I was having on these three beautiful women, it was the effect on the other members of our 'household' that I overlooked.\n\nThe Ambrosia had enhanced what I naturally possessed, and that strange 'radiation' I was now giving off was acting in the same way on the others.\n\nMelody was sweet and kind and loving, and she became more so.\n\nEvie was adventurous, a sex kitten, and those qualities grew.\n\nMaria was bold and courageous, a natural born leader. My becoming strengthened these traits.\n\nOf course, in Melody, Evie, and Maria's cases, their evolution was being spurred along by something more than just my 'radiation'. I'll tell you more about that later.\n\nAs for the others, Constance's infatuation with being dominated and disciplined became an obsession.\n\nDr. Balenger grew more morose, more brooding as he was cuckolded by his wife.\n\nStafford grew more paranoid, more violent.\n\nOnly Dr. Thompson seemed to remain the constant in my equation. He was a good man and he remained... remains... one. He never stopped believing I would save the world.\n\nIn those first days, faced with a world controlled by Stafford and his ilk? I thought about letting it die. I had a plan to save my chosen people, and, for me, it would have been enough.\n\nWhat kept me working toward a solution was the influence of Melody and Thompson. The prospect of not saving the world would be impossible for Melody to accept. For her sake, I had to be the hero.\n\nAnd Thompson's blind faith in my nobility was humbling.\n\nI never shared his faith.\n\n***\n\nI stood in the empty room next to mine and stared at what $2 billion on a NASA contract could buy in the early fall of 1967.\n\nIt was a steel tank painted gray, about seven feet long and three feet in diameter. There was a one foot by one foot window on the top of the tank on one end.\n\nIt was hooked up to tanks of liquid nitrogen.\n\n\"It doesn't work,\" I said.\n\n\"No. It doesn't,\" Dr. Thompson said. \"They can quick freeze a living being but defrosting and reviving them doesn't work. The cells...\"\n\n\"The cell structure is compromised by the freezing process. Upon defrosting, the cells break down. They're attempting to develop an 'antifreeze' which will allow the body to be cooled below freezing,\" I said.\n\n\"Yes. With your help...\"\n\n\"I can't help them. It won't work.\"\n\n\"What? But you asked for the prototype?!\" Thompson stammered.\n\n\"I can adapt it to my uses. Freezing people to put them in suspended animation is a waste of time. We need to chill the body to just above freezing and submerge it in a nutrient solution which I have designed. The chemicals are easy to come by, save one: Ambrosia.\"\n\nThompson sighed. \"Look, as I told you: LBJ said no...\"\n\n\"Yes, no to the Ambrosia, no to warning the world. The man is a fool. Let's hope his successor has a higher IQ.\" I stared into his eyes. \"Dr. Thompson, how much of the Ambrosia can you acquire before arousing suspicion?\"\n\nHis eyes went unfocused as I pushed my will into his brain. \"A... liter. Any more than that would require authorization from the NSC.\"\n\n\"Secure the liter for me. I would extract it from my own cum, but it would take longer.\"\n\nThompson frowned. \"Your... cum?\"\n\n\"Yes, doctor. I'm afraid Dr. Balenger isn't quite the scientist you think he is. If he was, he would have detected from my semen samples that my cum has Ambrosia in it. It's not quite the same compound as the Ambrosia I drank, but it is very potent. Haven't you noticed that Melody is becoming even more beautiful? That's my Ambrosia. Oh, and I'm making sure she's taking back my cum in her pussy when she sleeps with her girlfriends. In a few months, you'll have three goddesses on your hands, Thompson.\"\n\n\"I... why didn't you tell me?\" His eyes were half-closed.\n\n\"Because you would have isolated me from Melody.\"\n\n\"You knowingly exposed her!\" Thompson said through gritted teeth.\n\n\"I only figured it out a few days ago. If my Ambrosia was going to harm her? It already would have,\" I said. \"Also, we're going to need five more of the suspended animation pods.\"\n\n\"For what?\"\n\n\"Contingencies, doctor. Contingencies. Now, I'm going to count down from five. When I reach zero? You're going to remember to get me the Ambrosia and the pods, but you're going to forget everything I've talked about in the last three minutes.\"\n\n\"Eric, why are you doing this?\"\n\n\"Five...\"\n\n***\n\nMaria walked into Melody's room - though, to be honest, it was now the room the three of them shared. Pretenses no longer seemed necessary.\n\nMelody and Evie were both naked, leaning over a small table by the open window.\n\nEvie had her hand behind her back, stroking the pink plastic dildo from the strap-on in and out of her swollen, pink pussy.\n\n\"Don't you think you should close the curtains?\" Maria said.\n\nEvie giggled in her sex-kitten voice. \"We like it when they look, don't we, Melody?\"\n\nMelody could only laugh.\n\nMaria walked up to the window to see a small group of frat boys standing in the quad below and staring up at the two naked nurses.\n\nShe shook her head and drew the curtains. \"Honestly, the two of you.\"\n\n\"You're no fun,\" Evie giggled.\n\nMaria kissed her and then slapped her hand away from the plastic dong. She took over pistoning it in and out of Evie's overheated cunny.\n\nMaria looked down at the table.\n\nEvie's uniform was laid out on it... but a great deal of it was missing.\n\nMelody was working with scissors, pins, and needle and thread.\n\n\"What in the fuck?\" Maria said.\n\n\"We're making the uniforms prettier. Mine first, then Melody's. Yours can be next.\"\n\nFully a foot of cloth had been removed from the hem of the garment.\n\n\"Oh, darlings, you mustn't,\" Maria said gently.\n\n\"Yes, we can!\" Evie whined and bounced up and down with the dildo still in her pussy. Her boobs bounced and jiggled - she seemed to have gone up a cup size in the past few days.\n\nAnd she was turning into a brat.\n\n\"You've turned it into a micro-minidress! If you bend over even slightly, your whole ass will be on display,\" Maria said and shook her head.\n\nMelody smiled. \"More than that. Look? We slit it up to the waist on both sides.\"\n\nEvie went into a fit of giggles again. \"So our garter belt and stockings will show.\"\n\n\"Jesus,\" Maria whispered. But the thought of seeing the two of them in those outfits was pushing all her buttons. She had always had a powerful sex drive, but since coming on this strange job her libido was through the roof.\n\nShe looked at Melody as she made Evie bend farther over the table and arch her back. \"I expect this behavior from Evie, but I thought you had a more level head, Melody.\"\n\nMelody grinned. \"Why shouldn't we be as free as Eric? He doesn't even wear clothes anymore. He's beyond all the trappings of the old world.\"\n\nMaria rolled her eyes as she fucked Evie harder with the dildo. \"You sound like his apostle.\"\n\n\"Maybe I am,\" Melody said as she idly ran her index finger along Evie's spine, between her taught butt cheeks, and finally caressed her little asshole. \"Why shouldn't I be? Eric is right - this world is insane, Maria. How many old, fat men would tell us we were sinning by making love to Evie?\"\n\n\"Golly,\" Evie whispered. Then she bit her lip and moaned as Melody gently slid her finger into the woman's ass while Maria shifted and placed the base of the dildo against her crotch.\n\nMaria used her hips to push the dildo harder.\n\n\"Two! Two, Melody! I want two.\" Evie moaned.\n\nMelody smiled down at her and gently rubbed Evie's back with her free hand. \"Evie, honey? What do you say when you want something?\"\n\n\"Two fingers, mistress! Two fingers in my ass, please!\"\n\nMelody looked up at Maria and winked.\n\n\"That's new,\" Maria said.\n\nMelody added her middle finger to her index and Evie's little hole opened wide to accept them. \"We're changing. All of us. I'm changing faster because I'm right there with him.\" She stared at Maria's lips. \"I think we should all be closer to him, Maria.\"\n\nMaria leaned over and kissed her. \"I will bow to no man, darling.\"\n\n\"He doesn't want you to bow. That's not who Eric is. He wants us to be like him.\"\n\n\"I'm ready,\" Evie moaned.\n\nMaria smirked. \"Ready to cum this soon?\"\n\n\"N... No... ready to get closer to Eric. I wanna be Super Evie. Fuck me harder!\"\n\nMelody spanked her ass as she assfucked her with the other hand. \"What do we say?\"\n\n\"Fuck me harder, please, mistress! Okay, mistresses? Fuck, you guys are the pits sometimes.\"\n\nMaria and Melody loved her faster and harder, and Evie screamed out, squirting girl lube on the floor, and gripping the table so hard her knuckles were white.\n\n***\n\nMorpheus\n\nI was working on modifications to the suspended animation tank when Melody walked into what I now called the lab - the room beside mine.\n\nI looked up and did a double take.\n\nHer white nurse's dress was now cut short, ending above her stocking tops. It was slit up both sides.\n\nFrom my angle kneeling by the tank, her blonde pussy was on full display.\n\nShe had removed the sleeves from her outfit. Her braless breasts had grown again, straining the white cotton. She had modified the outfit by giving it a plunging neckline.\n\nTo say she was breathtaking as she stared down at me with her big, green eyes was the height of understatement. On anyone else, such an outfit would have looked like a joke - some fetish Halloween costume.\n\nShe walked to me, one foot in front of the other, her hips swaying.\n\n\"You like this, don't you? The curves, moving and shifting? This look turns you on, doesn't it?\"\n\nShe stood over me, my lips inches from her pussy. I nodded, my mouth open - hardly a look for a god. Then I thought back to Zeus and his romantic conquests and thought, maybe I'm just like him?\n\nMelody stroked my hair. \"You're doing things to me, aren't you?\"\n\n\"Yes.\"\n\n\"Is it against my will?\"\n\nI shrugged. \"I honestly don't know. Being near me? It has hazards. Even if I try to hold back? My subconscious doesn't.\"\n\nShe smiled. \"Loving you is interesting, Mr. Morrison.\"\n\nI took her hand and kissed it. \"I will never hurt you.\"\n\nShe pulled me against her crotch, and I kissed her blonde fringed lips.\n\n\"I know you won't. You've opened my mind, Eric. I would never go back.\"\n\nI licked her clit and she moaned.\n\nThen she eased me back.\n\n\"I need something from you,\" she said.\n\n\"What?\"\n\n\"I want a family. Not the traditional kind. I want to be with everyone I love, forever.\" She glanced over her shoulder.\n\nEvie came into the room, looking uncharacteristically shy. Her uniform had been modified the same as Melody's. \"Hi.\"\n\n\"Hi,\" I said.\n\n\"I love you, Eric,\" Melody said. \"And I love Evie.\"\n\n\"I know.\"\n\n\"Package deal.\"\n\n\"I'm okay with that.\"\n\nMelody laughed. \"I somehow didn't think I'd have to twist your arm.\"\n\n\"I love you guys!\" Evie exclaimed. \"I was just waiting for the opportunity to be with both of you. But I have total respect for Melody - R-E-S-P-E-C-T like Aretha Franklin sings...\"\n\nMelody looked at me mischievously. \"Shush, Evie.\"\n\nEvie clamped her lips together and curtsied. Then she said, \"Yes, mistress!\"\n\nI looked at Evie like she had a third eye.\n\nMelody took her hand and pulled her in front of me. \"I know. Not sure why I'm suddenly her mistress? But... here we are.\"\n\nI ran my hand up the back of Evie's leg and then leaned forward and kissed her thighs.\n\n\"Ooo,\" she murmured.\n\nMelody looked over her shoulder. She paused looking at the hallway. Then she turned back to me and sighed.\n\n\"Something wrong?\"\n\n\"No.\"\n\nEvie frowned. \"She didn't come, did she?\"\n\nMelody kissed Evie's cheek. \"I guess not.\"\n\n\"I am here,\" Maria said in her comical accent.\n\nShe walked into the room in the ridiculous outfit - an outfit I think my subconscious mind had a hand in creating.\n\nShe was a tower of pale, stone perfection. Muscles rippled in her thighs and arms. How three women could wear identical outfits and yet be utterly different is amazing to me. Evie looked like a sex kitten ready to hop in your bed. Melody looked like a curvy goddess you would want to spend all eternity with.\n\nMaria looked like an Amazon warrior ready to do battle.\n\nShe stared down at me, her mouth in its perpetual frown. \"I will not kneel to you.\" Her frown broke though. I saw fear.\n\nI held out my hand and she took it. \"I would never ask you to kneel in front of me, Maria Anastasia Marapova.\"\n\nShe stared at me, the frown gone. Now there was surprise. \"How do you know my full name?\"\n\n\"I've been in your mind. It's very beautiful.\"\n\nI stood up, still holding her hand. Then I hugged her tight, my lips by her ear. \"I know your pain. Feeling pain isn't weakness. Hold onto your humanity - gods like us need to keep our humanity for as long as we can,\" I whispered. Then I kissed her cheek and tasted a tear.\n\nMelody was looking up at us with a look of pure love.\n\nThen Evie put her small arms around all of us as best she could and squeezed.\n\nMaria's icy stare returned. \"Uggh, you squeeze too tight.\"\n\n\"Squeeze her harder, Evie,\" Melody laughed.\n\nEvie tried. \"Are we husband and wives now?\"\n\nMelody looked up at me with a questioning stare.\n\n\"No,\" I said. \"That's the old way. We're more of an equal partnership. Like a union...\"\n\n\"A coven,\" Melody said. \"We'll call it a coven.\"\n\n\"My coven,\" Evie whispered, her eyes closed.\n\n***\n\n\"Fucking degenerates,\" Stafford hissed as he watched them on the monitor.\n\n\"Jealousy, Colonel?\" Dr. Thompson asked.\n\n\"This is getting away from you, doctor. Eric Morrison is out of your control. He's taken possession of those women. You let him do it.\"\n\n\"They don't seem upset about it,\" Dr. Balenger said as he leaned closer and stared at the four lovers laughing on the black and white monitor.\n\n\"They're not,\" Thompson said. \"They're choosing to come together because they love each other.\"\n\nStafford chuckled. \"That's not love. That's perversion.\"\n\n\"There are all sorts of perversion, Colonel,\" Balenger said. \"I can think of things much worse than four people being in love.\"\n\nBehind them, Constance Balenger peered around the open doorframe and watched the love story unfold on the small monitor. Soon, her left hand was reaching beneath the front of her skirt and touching herself.\n\n***\n\nMorpheus\n\nThis was not my first experience with group sex. As Evie lay down on Melody in a 69 a few feet from the suspended animation tank, I had a sense of deja vu. I had done this before.\n\nSome men will tell you the thought of their loved one locked in a sapphic embrace with a lover disgusts them. They are either fools or liars. We are wired to respond to that image of soft bodies entwined, fingers, lips, and tongues exploring. Some comedian once said, \"It's two girls, and I agree with both of them.\"\n\nSo I lay down behind Evie's quivering buttocks and looked into Melody's eyes as she kissed and sucked the sex kitten's clit. I kissed Melody's forehead and then tongued Evie's cute little ass.\n\nMelody moaned loudly into Evie's pussy.\n\nI looked down Evie's body to see Maria's white hair - she was laying on the opposite end, helping Evie please Melody in the same way I was helping Melody please Evie.\n\nI smiled. Strange how lovers instinctively become synchronized, speeding up or slowing down given the audible cues from the one we are pleasing. Maria and I were driving them both mad, just as they were doing the same to each other.\n\n\"Cock please!\" Evie giggled.\n\nI got on my knees and looked down into Melody's eyes. Did I need to ask permission? Probably not. Did I ask with my eyes? Yes.",
        "And she answered: the corner of her eyes clamped between Evie's straining thighs turned up in a smile.\n\nI held the base of my cock tight and guided the tip to Evie's pink hole.\n\nI eased into her pussy.\n\nShe cried out into Melody's pussy, the sound muffled.\n\nMaria reached out with both hands and raked her long nails up Evie's sides.\n\nEvie cried out again as I slid a little deeper.\n\nMaria did the fingernail move on Melody next and I heard her scream between my thighs.\n\nI looked up to see Maria's chin resting on top of Evie's red hair. She was smiling at me, actually smiling.\n\nThen she winked.\n\nI could tell she was doing something to Melody because Melody shrieked and tongued my balls.\n\nI raised up higher, angling my cock down in Evie's tight pussy. I wanted to see what Maria was doing.\n\nMaria grinned and held up her right hand. She formed her fingers into a cone and dropped it down to floor level between Melody's widespread thighs.\n\nMelody shrieked and stopped sucking Evie's clit.\n\n\"All my fingers,\" Maria whispered. \"She wants to be able to take all of you, let's help her, shall we?\"\n\nI could feel Melody thrashing her head from side to side beneath me.\n\nThe muscles in Maria's right shoulder worked as she pushed four fingers and a thumb into Melody's tight pussy.\n\n\"Evie can take you, Eric. I do this to her all the time. Give it all to her.\"\n\nI grasped Evie's thighs and pushed in deep.\n\nEvie raised her head and screamed.\n\nMaria kissed her.\n\nI matched my rhythm to Maria's shoulder movements as she French kissed the moaning Evie.\n\nSome people think being with more than one woman is a power trip for a man. In my experience, it is not. They are pure sensuality and we, no matter our prowess, are equal to them in bed but not above them. I was not a god on the floor of that nearly empty building. I was only one quarter of a beautiful organism.\n\nOne half of that organism, Melody and Evie, came simultaneously, crying out my and Maria's names as their bodies were rocked in the storm of our passion.\n\nAs Evie came down off her high, I withdrew gently from her tight pussy.\n\nThen I rolled her onto her side, curled in a ball beside Melody.\n\nMaria beckoned me and I crab walked around Melody's other side.\n\nMaria beamed up at me and looked down.\n\nI gasped. Melody's blonde fringed pussy was stuffed full of Maria's hand past the wrist.\n\nShe pulled back gently, the stretched lips stretching even more as the fat part of Maria's hand tried to pass through.\n\nMelody gritted her teeth and thrashed.\n\nEvie went into action, kissing Melody and stroking her hair.\n\nAnd then Maria's hand was free.\n\nMaria moaned. \"I love it when they gape like that,\" she said in a throaty whisper.\n\nI could see deep inside Melody, her pussy dilated by the fisting.\n\nMaria and I dove on her pussy, sucking and kissing the swollen lips and erect clit.\n\nI had to laugh as Evie skittered down Melody's side and did her best to push her face in with ours, like a hungry kitten fighting for a mother's teat.\n\nMelody was cumming again.\n\nMaria raised up and let Evie in to feast on Melody's love. \"Fuck her, Eric.\"\n\nI spun around and Evie pulled away, giving me access.\n\n\"No,\" Melody moaned. She raised her head and grinned at Evie. She beckoned her with a nod of her head.\n\nEvie scrambled up to face her.\n\nMelody leaned up and whispered in her ear.\n\nEvie giggled and nodded.\n\nMaria and I knelt side by side as Melody and Evie faced us on their haunches.\n\n\"Somebody was neglected,\" Evie laughed.\n\n\"We want a show,\" Melody said with a mischievous grin.\n\nMaria and I turned and looked at each other at the same time.\n\n\"Do you want to?\" I whispered.\n\nThose strange eyes of hers. They're haunting. She smiled gently and nodded. \"Yes, Eric. Very much.\"\n\n\"Gonna be hard if you're not going to kneel, Maria,\" Evie whispered.\n\n\"I won't have that,\" I said. I put my hands on Maria's strong muscled upper arms.\n\nWe stood together and embraced as Melody and Evie gasped in approval.\n\nMaria pulled me forward as she backed up, only stopping when her back was against the wall.\n\nShe raised her right leg and hooked it around my waist.\n\nI encircled her hard muscled abs with my hands and raised her up.\n\nShe threw her left leg around me, crossing her ankles behind me as I raised her higher, my cock sliding over her belly.\n\nI could feel her soaking pussy against the tip of my cock and I gently eased her down. I slid into her, feeling her open herself for me.\n\nWe stared into each other's eyes, our muscles straining to push my cock deep inside her, but not so far as to hurt her.\n\nShe smiled when we found the depth she wanted.\n\nI smiled back and pressed her against the wall.\n\n\"Perfect, it's perfect,\" she whispered and then she was speaking Russian, moaning in my ear as our bodies worked in unison.\n\nI could feel Melody's and Evie's hands on our thighs, reaching higher caressing the spot where our bodies joined.\n\nWe moved faster and Maria kissed me deeply, moaning into my mouth and I into hers as we danced against the wall.\n\nShe pulled her head back, teeth and eyes clenched.\n\nI felt her cum, inner muscles milking my cock.\n\nAnd I gave her body what it told me it wanted: I came deep inside her, my cock pumping hard as I cried out.\n\nBelow us, Melody and Evie were laughing and moaning along with us.\n\nI knelt slowly, my strength gone, and laid us both gently on the floor.\n\nMaria's eyes jerked open and I laughed as Melody and Evie dove between our thighs. My cock was pulled from Maria's pussy, and then a warm mouth closed on me.\n\nEvie and Melody sucked and moaned as they drank down our combined juices.\n\nI stroked Maria's white hair as she smiled.\n\n***\n\nThe floor was quite comfortable when you had a blonde and a redhead clinging to each other between you and an Amazon princess.\n\nMelody and Evie embraced in their sleep while I spooned Melody and Maria spooned Evie.\n\nI reached over and ran my fingers through Maria's hair.\n\nShe opened her eyes and smiled. \"You are changing us, yes?\"\n\n\"Yes. Though honestly I don't have much conscious control over it.\"\n\n\"Every morning I look in the mirror and my wrinkles are fading. I am stronger, aches and pains of old wounds are leaving me.\"\n\n\"You're growing younger,\" I whispered.\n\n\"Will I be like you?\"\n\n\"I think so. It's just going to take time. When I have a large amount of Ambrosia, I'll be able to refine it. I'll be able to transform people with a shot.\"\n\nShe smiled. \"You want to change the world.\"\n\n\"I do. Would you like to help me?\"\n\nShe laughed softly and stroked the curve of Evie's hip. \"I am old, Eric. I have followed many who wanted to change the world. They brought only death and destruction.\"\n\n\"I'm not going to do that, Maria,\" I whispered.\n\n\"You won't mean to, but you will,\" she smiled and kissed the back of Evie's neck. \"However, this world is fucked up.\"\n\n\"Too many Staffords,\" I said.\n\n\"Staffords, Stalins, Hitlers - they will destroy us all in nuclear fire or chemical fog or biological plague. So, why not follow god who tells me to make sweet love to beautiful girls and to love everyone? Even if I go to hell? At least I will enjoy the trip.\"\n\n\"That's a very Russian outlook.\"\n\nShe nodded and smiled. \"We make the best of utter catastrophe.\" She stared into my eyes. \"I have fallen in love with you, Eric Morrison. I have not had that feeling for a man in a very long time.\"\n\nI smiled back. \"I love you too. I love all of you.\"\n\nShe shook her head. \"How can that lead to world destruction, eh?\"\n\nI laughed. \"Do me a favor?\"\n\n\"Anything, my love.\"\n\n\"Keep reminding me that I'm only a man. Be my memento mori - my reminder that even a god is only human?\"\n\n\"Yes, Eric... and you must do the same for me.\"\n\nMelody jerked awake in my arms. \"Oh, God! Something's wrong!\"\n\n\"What?! What is it?\" I said.\n\n\"My... chest is wet.\"\n\nI leaned over her. White drops were dripping from her nipples.\n\nAs I watched, a thick pearlescent drop fell on Evie's exposed left breast.\n\nEvie arched her back and cried out, \"Oh, God! Cumming! I'm cumming!\" She hyperventilated as Maria held her tight. \"N... No fair making me cum when I'm asleep! You guys!\"\n\nI smiled.\n\nMelody turned her head and looked at me. \"This isn't funny! Something's wrong...\"\n\n\"Nothing's wrong,\" I said.\n\n\"Golly, Melody, you're lactating! Are you pregnant?\" Evie said as she came down from her cum.\n\n\"No,\" I said. \"I expected this might happen, Melody. You're starting to produce your own Ambrosia - don't worry, it's a weakened form. It's in my cum.\"\n\n\"I'm turning into a goddess?\" She whispered.\n\n\"Yes,\" I whispered and kissed the side of her neck.\n\nEvie was staring entranced at the dripping milk.\n\n\"Suck, Evie,\" I said. \"Go on, you know you want to. Suckle from Melody and catch up with her.\"\n\nMelody rolled onto her back slightly. I gently guided Evie's pretty face down to Melody's left nipple.\n\nEvie stuck out her tongue and let a drop fall on it. Another orgasm had her squeezing her thighs together and moaning.\n\nI pushed her more insistently against Melody's nipple.\n\nShe obediently opened her mouth and pulled it in.\n\nMaria had to hold her as she bucked and spasmed, but Evie latched on and began to suckle. Her tremors subsided and she settled into nursing.\n\n\"Oh, God, that feels good,\" Melody whispered.\n\nI looked at Maria. \"You should nurse too.\"\n\nMaria shook her head. \"No.\"\n\nMelody took her index finger and caught a drop from her right nipple. She held it under Maria's nose. \"Open.\"\n\n\"Melody...\"\n\n\"Open. Don't make me cross,\" Melody said with a smile.\n\nMaria laughed and opened her mouth.\n\nMelody let the drop fall on Maria's tongue.\n\nMaria went rigid and I had to grab her to keep her from jerking across the floor.\n\nI pulled her closer. \"Don't fight it, honey.\"\n\nMaria needed no more encouragement. She leaned over Evie and latched onto Melody's right nipple, sucking in mouthfuls.\n\nMelody threw her head back and moaned out loud. \"Fuck! So fucking good! Gonna cum, Eric! Oh, Jesus!\"\n\nI spun around and put my head between Melody's thighs from behind and sucked her clit.\n\nThe girls moaned and writhed around me and we lost ourselves in each other.\n\n***\n\n\"Goddamn, I need to fix that fucking lock,\" Stafford growled as he stepped into his room and closed the door behind him.\n\nConstance Balenger was naked on her knees on his bed, thighs spread wide and dainty hands holding her asscheeks apart.\n\nHer jet black bush glistened with moisture.\n\nShe had her head on the mattress, but she craned her neck around to look at him. \"I saw them on the monitor. What's wrong with them?\" she asked.\n\n\"Eavesdropping on us is a federal crime. I can have you put under a prison. I can send you to the gas chamber for it. National security is no joke, slut.\"\n\nShe smiled and wiggled. \"Punish me then. But prison would be a waste, wouldn't it?\" Her index finger toyed with her asshole.\n\nHe put his hand on the small of her back, then he drew back and slapped her exposed crotch hard. \"Like that?\"\n\nShe bit her pillow. \"Yes! Just like that!\"\n\nHe slapped her again, feeling the moisture from her pussy coating his hand. Jesus, this bitch is twisted, he thought.\n\n\"Unnh,\" she moaned. With each slap he delivered, she would grunt again. \"It was so... unnh... fucking beautiful... unnh... what's wrong with them? Unnh...\"\n\n\"It's classified.\"\n\n\"Unnh, can I play with them?\"\n\nHe leaned forward and pushed his middle finger up her ass without warning.\n\n\"Aiggh!\" She cried, but then she began to move her ass in a slow circle.\n\n\"You stay away from those freaks.\"\n\nShe laughed. \"Says the man with his finger up my ass.\"\n\nHe leaned farther over her and gripped her neck with one hand while adding his index finger to the middle finger of his other hand in her stretched ass. He squeezed her throat. \"You listen to me, you fucking slut. The last thing you want to be is anywhere near that sideshow. They aren't leaving this building alive.\"\n\nUnable to breathe, Constance nodded as best she could.\n\nHe released her throat and roughly flipped her onto her back, still ass fucking her with his right hand.\n\nShe gasped and rubbed her throat.\n\n\"Those people are a cancer, Constance. This experiment is a total failure. That hippie is bent on world domination. He'll make Stalin look like the tooth fairy.\"\n\n\"Y... Yes, sir,\" she whispered and nodded in agreement.\n\n\"He'll infect the entire world with his disease if I let him. What you saw today? Everybody on earth would be like them, just freaks and degenerates.\"\n\nShe nodded quickly. \"Yes, sir.\"\n\nHis gaze softened and he took hold of her ankles and lifted them.\n\nHe pulled his fingers from her ass then grasped the base of his cock. He pushed it into her gaping asshole.\n\nConstance smiled up at him and closed her eyes, letting him fuck her and imagining it might be love.\n\n***\n\nMorpheus\n\nDr. Balenger came into our room - I thought of it as our room now, because Melody, Evie, and Maria were spending all their time with me. He was carrying a blood draw kit.\n\n\"I can do that, doctor,\" Melody said as she stood up from the small chair.\n\nI could see Balenger's eyes travel from her quickly glimpsed bush as she rose to her large round breasts that tried to peak out of the plunge neckline.\n\nI had to smile. Melody's shyness was gone. She was confident in her sexuality - as a matter of fact, she reveled in it. I wondered idly if this is what Aphrodite was like?\n\nSeeing that confidence made me love her even more.\n\n\"I... that's okay, nurse...\" Balenger stammered.\n\n\"Oh, call me Melody.\"\n\n\"I... okay, Melody.\" He smiled quickly. \"I'll do the draw today.\"\n\nMelody reached out and touched his hand. \"Certainly.\"\n\nI saw the look in his eye: lust and overpowering fear.\n\nBalenger had always been a nervous man, but now he was terrified of us.\n\nHe had no reason to be, but I suppose he felt like we might accidentally do something horrible to him. That was a natural fear.\n\nMelody went back to her chair and I saw Balenger do his best not to stare, but the tantalizing possibility of seeing her beautiful naked ass in the revealing uniform got the best of him.\n\nHe wasn't disappointed.\n\nMelody sat down in the chair on her knees, the skirt rising just as she intended to show him her curves.\n\nHe stared open mouthed.\n\nBalenger reluctantly turned around to find me standing right behind him with my arm outstretched.\n\nI smiled down into his pale, terrified face. \"Simon, you don't have to be afraid of us. We like you.\"\n\n\"What? No... I'm not.\"\n\n\"Simon,\" I whispered. \"Melody wanted you to see. You don't have to feel bad for looking.\"\n\nHe turned back to see Melody smiling at him, her skirt still raised above her buttocks.\n\nSimon smiled back and turned away. \"I should take your blood now.\"\n\n\"Yes, Simon.\"\n\nThe veins in my arms were very pronounced after the muscle growth, so he had no problem finding one. However, he was hesitant.\n\n\"What's on your mind, Simon?\" I could have simply looked inside his head, but I was trying to respect at least a few boundaries.\n\n\"Hmm? Oh, nothing.\" He looked back at the three women in the room. They were laughing and talking, Maria and Evie sitting on the bed and Melody in the chair.\n\n\"It's okay, Simon. Say what's on your mind.\"\n\nHe looked back at me. \"How do you do it?\"\n\nI cocked my head.\n\n\"All of them. How do you satisfy them all?\"\n\nI smiled. \"Simple. I don't. I couldn't. No one could. Instead? We satisfy each other.\"\n\n\"He's fucking my wife,\" Simon said.\n\nI sighed.\n\n\"Stafford is fucking her. Almost everyday. She goes to him whenever she thinks I won't notice - God, sometimes even when she knows I will. I'm going to lose my wife.\"\n\n\"You never had her, Simon,\" I said.\n\nHe looked like I had slapped him. \"What?!\"\n\n\"Simon, we don't own one another. We shouldn't...\"\n\n\"But she's breaking my heart,\" Simon whispered.\n\n\"Yes, and that's wrong. She lied to you. That's on her.\"\n\nHe looked over his shoulder at my coven. \"What you did to them? Could you do it to Constance? Could you make her come back to me? Make her leave him?\"\n\n\"Why would you want that?\" I asked.\n\n\"How can you ask me that? I love her, Eric!\" He raised his voice.\n\nMaria eyed him warily. I saw her rising from the bed. She was ready to come to my aid.\n\nI smiled at her and shook my head.\n\nShe sat back down but stared directly at Simon.\n\nAll the color had drained out of Simon's face as he looked away from the murderous Amazon.\n\n\"I imagine she would be pretty amazing in a bar fight. I think she killed a lot of Nazis during the war. I'm betting with her thighs.\"\n\nHe stared at me.\n\n\"Seriously, she could break rocks with those thighs.\"\n\nI saw her smile at me and then she turned back to Evie.\n\nI smiled at Eric. \"I know you love Constance, Simon. But she doesn't love you. I won't make someone love me or anyone else.\"\n\n\"He hurts her,\" he said quickly.\n\n\"How?\"\n\n\"He... spanks her. Maybe other things.\"\n\nI tried not to laugh. \"Simon, people are turned on by different things. Sometimes they're things we find disturbing.\"\n\n\"I'm begging you. If you won't change her? Then change me. Make me what she needs.\"\n\n\"That doesn't mean she'll choose you.\"\n\n\"No, it doesn't. But at least I'll have a chance.\" He stood up straighter. \"I'm ready.\" He closed his eyes.\n\nI laughed. \"Simon, I need to know what she needs first.\"\n\n\"She wants to be spanked, obviously.\"\n\nI turned around. \"Evie, honey? Come here, please?\"\n\nShe jumped off the bed and skipped across the floor. \"Hi, Simon,\" she said and looked up at him with her big eyes.\n\nHe looked at her in confusion.\n\n\"Evie, Simon and I were talking about spanking. Do you like spanking?\" I asked.\n\n\"Sure! Bend over Simon, I'll spank you till you walk funny.\" She said as she blinked and smiled.\n\nHe looked at her in horror.\n\n\"No, Evie. I think he wants to be the spanker not the spankee.\"\n\n\"Oh!\" She leaned with her hands against the wall. \"I love to be spanked. Maria spanks me a lot. Sometimes I do bad things just so she'll spank me. Don't I, Maria?\"\n\nMaria smiled from the bed. \"You are bratty little bitch.\"\n\nI reached down and lifted the back of her uniform exposing her ass framed by the garter belt.\n\n\"Mmm,\" Evie moaned as she leaned her face against the wall. \"Start slow, but really make me feel it by the end, okay, Simon?\"\n\n\"W... Why do you want that?\"\n\nShe opened her eyes and stared at him with her brow wrinkled. \"Because it's fun. Makes the blood flow. Stings a little. I get really wet.\"\n\nSimon rubbed the fingers of his right hand together. \"I... I'm not sure I can.\"\n\nEvie rolled her eyes and grabbed his hand. She pressed it against her ass. \"Now spank.\"\n\nHis fingers caressed her buttock. \"I... what if I hurt you?\"\n\n\"You're swatting me with your hand, not a baseball bat. Go on, try.\"\n\n\"I shouldn't. I'm married.\"\n\n\"Given the situation, I don't think you're doing anything wrong, Simon. Do you?\" I asked.\n\n\"Oh, this is about your wife getting fucked by Stafford?\" Evie asked.\n\nSimon pulled his hand away and turned red.\n\nEvie turned around away from the wall and hugged him. \"Sorry.\"\n\n\"It's okay,\" Simon said.\n\nShe whispered in his ear. \"Go ahead and try. I want you to.\" She turned back to the wall and braced herself.\n\nSimon reached out with his left hand and gently raised the back of her uniform again.\n\nHe cupped her right buttock with his right hand.\n\n\"Mmm, I like that,\" she whispered.\n\nHe brought his hand back and lightly slapped her.\n\nShe gasped. \"You got bigger hands than Maria.\"\n\n\"Was that too hard?\"\n\n\"Naah, I can take it.\"\n\nSlap.\n\nI smiled and stepped away as Simon began to slap her ass harder.\n\nEvie was whispering encouragement as he spanked her.\n\nHe began to talk to her, calling her a slut and a whore - I was pretty sure this was at Evie's instigation, but he was a willing participant.",
        "Melody and Maria stood by me and leaned against me as we watched him spank her.\n\nShe grew silent but Simon grew more verbal, his voice harsher.\n\nEvie arched her back as her buttocks began to turn red.\n\nShe looked over her shoulder at him and smiled.\n\nI reached down and stroked Melody and Maria's inner thighs, sliding up to their sexes.\n\n\"Change him,\" Melody whispered. \"I want to see what you make him into.\"\n\nI looked down at her.\n\n\"Tell me you don't want to?\" She whispered. \"All the things you can do? What we will be able to do soon?\"\n\nMaria's hand grasped my cock and gently stroked me.\n\nEvie collapsed against the wall and Simon stopped spanking.\n\nHe pulled her close. \"Are you okay?\"\n\nShe looked at him with a sleepy smile. \"Yes, Simon. I'm fine. I came.\"\n\n\"What? From being spanked?\"\n\n\"Yes. You made me cum. It'd be nice for you to hold me for awhile - that's what Maria does.\"\n\nSimon smiled and nodded. \"Of course I will.\"\n\nHe sat down on the floor and she curled up in his lap.\n\n***\n\n\"It's wrong to change him,\" I said.\n\n\"You had no issues changing us,\" Maria said.\n\nThe four of us sat on the floor of the room. Simon had left a few minutes before, his nervous demeanor returning and embarrassment at what he had done to Evie kicking in.\n\n\"That was my subconscious. I didn't knowingly set out to change you.\"\n\n\"Maybe not at first,\" Melody said. \"But you're deluding yourself if you think it was your subconscious later.\"\n\n\"We are all guilty,\" Maria said. \"Have you not noticed our little Evie is becoming a complete giggly bimbo?\"\n\n\"Hey! Who ya callin' a bimbo?\" Evie said.\n\n\"You. Because, babushka, we made you one.\"\n\n\"Huh?\" Evie asked.\n\n\"I am turned on by submissive, mischievous, bratty girls and you became my desire.\"\n\n\"How would that work? You're no more a goddess than I am yet,\" Evie asked. And then she pouted.\n\n\"Look at little pouty lip. Adorable.\"\n\nMelody smiled. \"It's all of us together. Eric and I picked up on Maria's desire.\"\n\n\"And Evie's desire to please Maria,\" I added.\n\nMelody nodded. \"Then all of us together influenced Evie.\"\n\n\"Including Evie herself,\" I said.\n\n\"I did?\" Evie asked. \"I chose to be a bimbo?\"\n\n\"Adorable bimbo.\" Maria said, the word coming out as 'beembo'.\n\nEvie broke into giggles.\n\n\"What is funny?\" Maria asked.\n\n\"I'm a beembo.\" Evie said and rolled onto her side laughing.\n\n\"Go ahead, make fun. English is hard language. None of the sounds make sense.\"\n\nMelody and I looked at each other.\n\n\"You really want to lose your accent?\" Melody asked.\n\n\"I have been trying for decade,\" Maria grumbled.\n\nI stood up and walked over to the TV. Once it warmed up I started changing channels. I smiled when I saw Raquel Welch in Fantastic Voyage. \"How about her voice?\"\n\nMelody smiled and nodded. \"What do you think, Maria?\"\n\n\"What do I think about what?\"\n\nOn screen, Raquel was wearing her white rubber skin diving suit and talking to Donald Pleasence in her wholesome, midwestern accent.\n\n\"Her voice,\" I said. \"How would you like to speak with her voice?\"\n\nMaria looked at the screen and began to smile. \"You think?\"\n\nI rushed over and took Melody's hand then Evie's. They both held Maria's hand.\n\n\"Listen to her voice. Concentrate,\" I said.\n\n\"I like her outfit,\" Evie said.\n\n\"Concentrate, Evie,\" I said. \"Think about Maria talking in that voice.\"\n\nIt's hard to describe entering someone's mind. You concentrate and imagine stepping inside but there's this nagging feeling that it won't work. This premonition that it's all just hocus pocus mumbo jumbo.\n\nAnd then you go in and it feels just like falling. It's startling and you almost fight against it. But if you just let it flow, mind control can be beautiful.\n\nNothing is more beautiful than going into someone's mind with someone else by your side.\n\nThree of us went into Maria's mind - four if you count Raquel Welch.\n\nTime means nothing in a mind. We rerouted internal wiring together, flipping switches, unlearning some things and re-learning others.\n\nAnd through it all we heard Raquel Welch talking to Donald Pleasence on a late night showing of a movie that had only come out the year before.\n\nRaquel Welch in a white wet suit.\n\nI saw that white wet suit as we left Maria's altered mind.\n\nWe opened our eyes.\n\n\"You okay, Maria?\" Evie asked.\n\nShe blinked. \"I don't think it worked.\"\n\nThe three of us almost fell over.\n\n\"What?\"\n\n\"Maria? Your voice.\"\n\n\"What about my voice? It sounds...\" Then she heard herself.\n\nRaquel Welch's voice came out of Maria Anastasia Marapova.\n\n\"Fuck,\" Maria said. \"So that's how articles work? Huh? I really missed all those 'the's? How the fuck did I miss those?\"\n\nWe all laughed.\n\n\"Thank you,\" Maria said.\n\n\"I was scared you were gonna come out sounding like Donald Pleasence,\" Melody said.\n\n\"So was I,\" I said.\n\n\"You mean like this?\" Maria said in a perfect imitation of the actor's voice.\n\n\"Shit,\" I said.\n\n\"Yes, well, I'll choose to talk like the bombshell instead,\" Maria said in a mild mannered English accent. \"Better?\" She finished as Raquel.\n\n\"Lots!\" Evie said.\n\n\"We're powerful,\" Melody said.\n\n\"And dangerous,\" I added.\n\n\"Are we going to help Simon?\" Evie asked.\n\n\"Maybe we shouldn't,\" I said. \"I mean, giving Maria voice lessons is one thing. We'd be changing Simon sexually.\"\n\n\"He asked us to change him,\" Melody said.\n\n\"He's awful sad,\" Evie said. \"We have to help him.\"\n\n\"Well, I say we vote,\" Maria said. \"All those in favor of taking a... fantastic voyage through Simon Balenger's brain, raise your hand.\" Her hand went up.\n\nMelody and Evie raised theirs as well.\n\nI looked at them and raised mine.\n\nIt was going to be a long night.\n\n***\n\nConstance Balenger returned to the room she shared with her husband just before 3:00 AM. The rest of the world was caught up in the hippie counterculture, and Constance was caught up in the strange happenings going on in the quarantined building that was now her pseudo-prison.\n\nShe had given herself completely to Colonel Stafford.\n\nConstance had always had two weaknesses: love of money and love of dominant, aggressive men.\n\nNow, Simon was her sugar daddy and Stafford was her owner. He was her master, her sir.\n\nHer only complaint was Stafford's focus on fucking her in the ass.\n\nThis relationship was all about his pleasure.\n\nShe smiled. Not that she wasn't getting pleasure - there was something to be said for being used. Part of her felt bad about that, but the using turned her on.\n\nShe opened the door to the room and light flooded the darkened space.\n\nSimon was sitting on the room's only chair staring at her.\n\nShe stopped just inside the doorframe. \"You're awake.\"\n\n\"What am I supposed to do, Constance? Just sit back and watch it happen? Accept it? Is that what you want?\"\n\n\"I don't know what you're talking about,\" she said as she began getting undressed. She took off her skirt and blouse and stood only in her lace bra and panties.\n\n\"You're fucking Stafford.\"\n\n\"You're overreacting.\"\n\nSimon laughed. \"Come here.\"\n\n\"Why, Simon? What's the point? If you divorce me, I'll take half of everything you own.\"\n\n\"I said, 'Come here.'\"\n\n\"Or what, Simon?\"\n\nHe stood up and walked to her.\n\nShe shrank back. \"What are you doing?\"\n\n\"Saving our marriage.\" He grabbed her wrist and dragged her back to the chair.\n\n\"Ow! What's wrong with you? Have you lost your mind?\"\n\nSimon sat down and dragged her across his lap. \"Isn't this what you want? Isn't this what he does to you?\"\n\nConstance laughed at him. \"What, Simon? You think you can do what he does to me? You can't, Simon. You're lacking the guts and the proper equipment.\"\n\nShe stopped laughing when he ripped her panties down the back and flung them across the room. \"Stop it!\"\n\n\"Jesus, fuck.\" He grabbed her ass roughly. \"You're black and blue. You let him beat you black and blue? You twisted bitch.\"\n\nShe grunted. \"You see? You couldn't possibly compete...\"\n\nHe brought his hand down across the bottom of her buttocks and upper thighs with a sharp crack!\n\n\"Goddamn you!\" Constance shrieked and jerked her ass away from his hand.\n\nHe brought his hand down again, this time his fingers made contact with her pussy. \"Disgusting! Are you just wet or did he cum in you?\"\n\nHer voice cracked. \"Not in my pussy. He never cums in my pussy. Just my ass.\"\n\nShe struggled as he parted the cheeks of her ass and pushed his finger inside.\n\n\"Uggh, nasty whore.\" He yanked his finger out making her yelp and then leaned over and put it to her lips.\n\n\"What do you want...\"\n\nHis finger pushed between her lips.\n\n\"Suck, slut! Eat his cum. Remember the taste because you'll never taste Stafford again.\"\n\nAs soon as he ordered, Constance obeyed, licking and sucking the cum covered digit.\n\nShe moaned when he yanked it away, then cried out as his hand came down hard on the tender spot between the bottom of her ass and her upper thighs. \"Simon, stop! You're hurting me!\"\n\nHe slapped her left buttock even harder. \"From now on when we're alone? You will address me as Doctor, do you understand?\" He began raining blows on each cheek, one after another.\n\n\"Y... Yes, Doctor!\"\n\n\"And your new name is Cunt. Nurse Cunt - you'll be my assistant from now on. Now tell me your name!\" Slap.\n\n\"Cunt! My name is Cunt! Nurse Cunt! Unnh!\"\n\nHe shoved two fingers up her pussy. \"You came?! You nasty little whore! You came from me treating you like a slut, didn't you?\"\n\nShe had. Her thighs trembled as her pussy muscles clenched. She came so hard it felt like her brain was on fire! She spun around on his lap and wrapped her arms around his neck. \"Simon, oh God, Simon. Better than him. You are so much better than he ever was!\"\n\nHe grabbed the back of her hair and pulled hard. \"What did you call me, Cunt?\"\n\n\"Doctor!\" She squealed. \"You're Doctor and I'm Nurse Cunt and I love you!\"\n\nHe pulled her close, his tongue going down her throat.\n\nShe pulled back and smiled. Then she laid her head in the crook of his neck.\n\nThe strange people from the experiment were standing in the doorway, naked. The man and the tall woman with white hair stood in the back while the blonde and redhead stood in front of them.\n\nThe redhead was grinning at her and fingering her clit.\n\n\"Who are they, Si... Doctor?\" Constance whispered.\n\n\"Our friends, Cunt,\" Simon said and smiled toward them. \"Did you do this to her?\"\n\nConstance jumped like she had been electrocuted and stared up at him. \"Did what to me?\"\n\nThe man smirked. \"No, doctor. That's who she is.\"\n\n\"It's much worse,\" the white haired woman said with a scowl. \"She likes doctors because they're rich. But she could just as easily have chosen lawyers to prey upon. She gets turned on thinking about a mad doctor experimenting on her.\"\n\nConstance gasped. \"How do you know that?\"\n\nThe redhead stopped fingering herself and then licked her finger. \"Because we've been inside your head looking around... weirdo.\" Then she laughed and winked.\n\n\"They're psychic,\" Simon said. \"They're going to turn you into my slave, Cunt. You'd like that, wouldn't you?\"\n\nShe stared into his eyes.\n\nHe was totally serious.\n\n\"Yes, Doctor.\"\n\n\"That means I will decide who you fuck and when you fuck - and you will never be with Colonel Stafford again.\"\n\nShe smiled. \"Yes, Doctor.\"\n\nThere was a hum inside her skull, like thousands of loud voices fighting for dominance. Images flashed by too fast for her to process them.\n\nConstance collapsed against Simon's chest. Her head felt like it weighed a hundred pounds and her eyelids were half closed. She could see Simon's own face, his eyes darting left and right.\n\nWhatever they were doing to her? They were doing to him as well.\n\nThen she passed out.\n\n***\n\nMorpheus\n\nWe walked down the hallway in silence. I was in shock at what we had done. It was one thing to change Maria's voice, but this?\n\nWe left Simon and Constance passed out on their bed, naked and entwined in an embrace.\n\n\"They're not really Simon and Constance anymore,\" Melody whispered. She leaned against me and held on tight.\n\n\"What we did?\" Maria said. \"We must never, ever do that again. It's... monstrous.\"\n\n\"We twisted the fuck out of those fuckers,\" Evie said and gripped Maria's hand tight.\n\n\"It's what they both wanted,\" I said as we entered the stairwell and headed down toward our floor.\n\n\"Yes, but,\" Maria whispered. \"How we did it? We added things, Eric. Things from our own subconscious. Dark things from deep inside my soul I thought I had left behind during the war.\"\n\nI looked at her. She was crying.\n\nI reached over and wiped away the tear.\n\n\"We're monsters,\" Melody whispered.\n\n\"No,\" I said. \"We just... made them more extreme versions of what they were. That's all.\" I kissed her hair. \"But Maria is right. We can't ever do that again. It's wrong to do that to someone, even if they want it.\"\n\nMaria smiled weakly and nodded.\n\nIn our room, we had managed to push two beds together.\n\nBut that night, we clung together so tightly there was plenty of room.\n\n***\n\n\"What the fuck?\" Stafford whispered.\n\nThompson simply stared.\n\nDr. Balenger stood in front of Thompson's desk. His entire demeanor was different. He stood straighter with a jaw of granite and eyes that seemed to stare right through you. \"Constance will be acting as my nurse and assistant from this point on, gentlemen. I see no point in her simply acting like some idle rich bitch. I intend to make sure she makes herself useful.\"\n\nStafford and Thompson stared at Constance Balenger.\n\nShe stood stick straight - her normally flowing black hair was done up in a tight bun under her white nurse's cap. Her makeup gave her a pale appearance - offset by thick black eyeliner and blood red lipstick. Her eyes were as big as saucers as she stared glassily at the wall over Thompson's head. Her uniform was normal length, but too tight.\n\nHer waist looked cinched in like she was wearing a tight corset.\n\n\"Is that what you want, Constance?\" Dr. Thompson asked as he looked up at her from his desk.\n\n\"Yes, Dr. Thompson. Whatever Dr. Balenger wants is fine with me.\"\n\nBalenger looked at her and smiled. Then he turned toward the door. \"Come, nurse.\"\n\nStafford saw a momentary look of panic in Constance's eyes as if she were unsure what to do.\n\nBalenger turned and put his hand on her shoulder. \"No, nurse. Come with an 'O', meaning accompany me... the other will wait till I allow it.\"\n\nThe panicked expression went away, and the blank stare returned. \"Yes, Doctor.\" She turned stiffly as if there was something attached to her crotch or inserted in her ass.\n\nShe followed Dr. Balenger. The stiffness of her gait was matched by the exaggerated sway of her hips.\n\nBalenger paused at the door and looked over his shoulder at Stafford. \"Oh, one other thing, Colonel. Constance will be far too busy attending to her duties and my needs from now on to fuck you. I want to thank you for taking care of her urges for the past few weeks, but I'll take it from here.\" He turned away and the two of them left the room.\n\nStafford squeezed his eyes shut and blinked. \"What the fuck just happened?\"\n\n***\n\nDr. Allen Thompson sat alone in his office and spoke into his dictation unit. \"The changes in Simon and Constance Balenger are extreme. Simon Balenger has overnight changed from a mild, timid man into a Marquis De Sade and he is exercising that control over his own wife - a woman who previously was in complete control of him.\"\n\nHe paused the recording and then continued. \"Constance Balenger had the expression and motions of a robot, blindly following any command her husband gave her. I found it...\"\n\nHe paused the recording. How did he find it? The sight of her in that outfit, her mind locked away somewhere deep inside herself?\n\nHe squeezed his eyes shut, willing the image of Constance's hips swiveling below her corseted waist like some burlesque dancer was burned on his brain.\n\nHow did that make him feel?\n\nHard. That's how he felt. His cock was iron down the left leg of his pants and he knew there would be a stain on the fabric.\n\nHe shook his head and started the dictaphone again. \"I found it disturbing. This is more than the effect of having Eric Morrison in direct proximity. I believe he deliberately reached inside their minds and changed them. That prospect is terrifying. No man, no god should wield such a power. I don't dare relate my fears to Stafford or I believe he will take measures...\"\n\nSomeone knocked on the door. He stopped the machine. \"Come in.\"\n\nMelody Hutchins opened the door.\n\nShe had already been a pretty nurse, but now she was breathtaking. And the outfit with its plunging neckline and brief hemline would stop traffic.\n\nShe smiled and held up a cup of coffee. \"Coffee time.\"\n\n\"Oh, Melody, you don't have to bring me coffee every morning like this.\"\n\n\"I like bringing you coffee, Dr. Thompson.\" She set the cup on his desk.\n\nMelody leaned forward to do so and Thompson found himself staring into the delicious void between her large breasts.\n\nHe looked up quickly only to see her smiling at him.\n\nThompson blushed.\n\nMelody bit her lower lip and sat on the edge of his desk. Was she purposely showing her upper thigh?\n\nHe found himself staring at the sleek line of her leg leading to the curve of her hip.\n\nThis time she laughed out loud. \"I'm sorry, doctor. I'm being awful to you aren't I?\"\n\nThompson looked away. \"No. No, Melody. I envy your freedom.\" He picked up the coffee cup and took a drink. \"Mmm, you make the best coffee.\"\n\n\"The secret's in the cream,\" Melody said.\n\n\"Well, I appreciate you doing this for me, but you really don't have to. Your duties have... changed.\"\n\n\"Transformed, some would say,\" Melody said.\n\nThompson took another sip and then another. \"How's Eric doing today?\"\n\n\"Puzzling over something. We fuck all night and he works all day... oh! I'm sorry. It's just hard to censor myself for normals now.\"\n\nThompson shook his head as he took another drink. \"No, don't apologize. I'm intrigued by your arrangement.\"\n\n\"You mean the coven?\"\n\n\"Yes. How do you avoid jealousy?\"\n\nMelody smiled. \"We don't avoid anything. We're just mindful of each other's feelings.\"\n\n\"Melody, I need to ask you something. Did Eric... coerce you in some way to enter into this group relationship?\"\n\nMelody smiled and looked at him sideways. \"You mean like reach into my mind and shuffle things around till I was exactly what he wanted?\"\n\nThompson just stared at her.\n\nMelody laughed. \"No! He didn't. The three of us were just there with him and his becoming changed us as well.\"\n\nThompson nodded. \"Yes, but do you think he has that power now? I'll just come out and say it: did Eric go into Simon and Constance Balenger's minds and turn them into some sort of... bondage fetishists?\"\n\n\"Yes, we did.\"\n\nThompson sighed. \"I thought so. Melody, Eric shouldn't...\" He stopped and stared into Melody's green eyes. \"Wait. Did you say we?\"\n\nMelody winked. \"Yes, doctor. We changed the Balengers. Honestly, we scared ourselves - Constance is like a zombie. Eric thinks that will pass but we didn't sleep well.\"\n\nThompson swallowed hard. \"Then you are...\"\n\n\"A goddess? I don't know. I guess. Maria and Evie now as well.\" She laughed. \"Eric has told you this several times, but he keeps erasing the discussion from your memory.\"\n\n\"He's been in my head?\" Thompson had the sudden impulse to run away from the beautiful blonde perched on the side of his desk.\n\n\"Yes, but only small things. He hasn't changed your thoughts or feelings, doctor. We wouldn't do that. We really like you. And don't worry: we're taking responsibility for Simon and Constance as well. They're officially part of the coven and when we leave? They'll go with us.\"",
        "\"You're leaving?\"\n\n\"Yes. We are. Stafford can't stop us. No one could.\" She smiled. \"How are you feeling doctor?\"\n\n\"I'm... Melody I'm afraid.\"\n\n\"Of me?\"\n\n\"Yes.\"\n\n\"Drink your coffee, doctor. A big drink this time.\"\n\nThompson reached out and took the mug. He drank down a mouthful.\n\nHe almost dropped the mug on the floor before Melody rescued it from his hands. His cock spasmed and shot cum down his pants leg. \"God! Oh, God!\"\n\n\"Ambrosia. Small amounts in your coffee for weeks now.\"\n\n\"W... Why? How? Melody, Ambrosia is dangerous!\"\n\n\"Not mine.\"\n\nHe stared at her. \"What do you mean 'not yours'?\"\n\nShe stood up and walked around the desk.\n\nMelody put her hands on Thompson's shoulder and pushed him back in his desk chair.\n\n\"What are you doing?\"\n\nShe sat down on his lap. \"You asked about jealousy earlier? We don't avoid it, but there isn't any. We simply love each other.\" She kissed his forehead. \"And you're going to be one of us, Allen. Because we love you. You are one of the good people that Eric is going to save.\"\n\n\"Good people? No, Melody. He has to save everyone.\"\n\nMelody smiled and pulled apart the front of her outfit. Her big right breast slipped out of the fabric.\n\n\"M... Melody? I'm twice your age...\"\n\nShe laughed. \"Silly, Allen. We're immortal. There is no age. No death.\"\n\nShe cradled his head and guided him to her moist, turgid nipple.\n\n\"N... No. Melody,\" he whispered, but his lips were already parting to take her into his mouth.\n\nHis lips closed on her and he sucked a mouthful of the cream into his mouth.\n\nHis cock spasmed again.\n\nHe saw the door open, but he couldn't register anything other than the taste of the sweet, warm ambrosia pouring down his throat.\n\n\"Evie, I need help,\" Melody said.\n\nEvie skipped across the floor and slid onto her knees. She unzipped his pants. \"Whoo... Doc? Who knew?\"\n\nEric laughed as he sat down in the chair across from the desk.\n\nMaria closed the door behind her and locked it.\n\nMaria leaned over the desk and smiled. \"How big is it, Evie?\"\n\nShe licked the knob. \"Mmm, at least eleven.\" She slid down his length and he came again. She rose off him, cum dripping off her lips. She giggled. \"Lot of cum too.\"\n\n\"Sorry for all the subterfuge, doctor,\" Eric said as he pulled Maria into his lap. His cock slid easily into her pussy and Maria laughed. \"I wanted to tell you weeks ago, but I still had things to figure out.\"\n\nMelody's nipple slipped from Thompson's mouth and she kissed the top of his head.\n\nAmbrosia dripping from his lips, he looked down at the beautiful redhead bobbing contentedly on his cock. He groaned and stroked her hair. \"What are you doing to me? Why?\"\n\n\"Doctor,\" Eric said. \"I'm going to make us immortal - I'm already immortal, but I want all our coven, and the other covens to come to be immortal as well. This world can't survive as it is. There are too many evil men doing too many evil things. This world is corrupted. If I don't do something to stop all this insanity? They will destroy themselves and my transformed as well. I will not allow that.\"\n\n\"Why... me?\" Thompson moaned.\n\nMelody smiled and slid down onto the floor. Her face beside Evie's, she smiled up at him. \"I told you. Because you're a good person. And we are going to surround ourselves with good people.\" She nuzzled his balls and kissed them.\n\nMaria stood up and then lay down on her back on Thompson's desk, pushing his dictaphone to the side. \"Come to me,\" she said.\n\nAnd Eric laid down on top of her, sliding his length into her.\n\nShe hung her head off the back of the desk and smiled at Thompson. \"Don't fight it, doctor. The... benefits are amazing.\"\n\n\"We need to get out of here and find someplace safe where I can complete my research - with your help and Balenger's, of course. I may be an encyclopedia of medical knowledge, but I've never held a scalpel in my hand. The two of you have.\" He began to thrust into Maria.\n\nEvie stopped sucking his cock with a wet pop and climbed onto his lap, her thighs spread. She guided him to her wet pussy with one hand. \"So let's review: we're transforming you because we love you. We need you because you're a doctor. I think you're super cute. You're not too old because, well, look at Maria's face. She's older than you. Haven't ya noticed her wrinkles are gone?\"\n\nHe glanced down at Maria - her face was smooth. She looked thirty. Maybe younger.\n\nEvie shrugged as Melody continued to kiss his balls and Evie's ass. \"Doc, just relax and fuck. We're going to save the world.\"\n\nThompson closed his eyes and arched his back as Evie's tight pussy slid down his length.\n\n***\n\nColonel Stafford sat on a bench in Golden Gate Park smelling body odor and weed. The smell was wafting over from a crowd of a few dozen hippies on the other side of the walkway.\n\nA man sat down beside him on the bench.\n\n\"Fucking lousy place to have a clandestine meeting,\" Stafford said.\n\nThe man smiled and looked at the hippies. \"Why? The hippies? They're good cover.\"\n\n\"You know, when you work for the NRO and your boss says he wants to meet you in the park? You're either being given a gun or just a bullet. Which is it, Jerry?\"\n\nJerry laughed. \"No bullet today, Carl.\"\n\n\"The gun then?\"\n\n\"The gun. Washington read your report. LBJ agreed... strike that. LBJ's advisors agreed. The president has no idea what's going on here. Is that clear?\"\n\n\"Deniability. Got it.\"\n\n\"In any event, the White House is in agreement. Terminate with extreme prejudice.\" Jerry looked at him. \"This Morrison? Is he as dangerous as you're saying he is?\"\n\n\"Worse. He's pure evil. Corrupts everything he's around. And he's making others in his own image. Mark my words, Jerry: if we don't stop him now? We'll be fighting tens of thousands like him in fifty years. They'll make the Reds look like creampuffs.\"\n\n\"Just so we're clear? The sanction is for all of them. Morrison, the nurses, Thompson... and the Balengers. Both of them. Is that going to be a problem?\"\n\n\"You know better than to ask me that question. I'll put one in her head with a smile on my face, Jerry.\"\n\n***\n\nEvie was curled up in Thompson's lap running her fingers through his hair. Eric, Melody, and Maria were passed out on the floor.\n\n\"What a strange new world,\" Thompson whispered.\n\nEvie stretched and smiled. \"Happy?\"\n\n\"Yes,\" he said. \"You don't even realize you've neglected yourself until something like this happens. Sex has a way of clearing all the synapses.\" He caressed her face. Then he laughed. \"I think I'm too old for all this, Evie - maybe I won't be too old physically, but I think maybe mentally I'm just too old. I can barely understand any of this.\"\n\nShe put a finger against his lips. \"It's simple. I love you and I'm going to make love to you. Do you love me?\" She removed her finger from his lips.\n\n\"Well, yes, I guess I...\"\n\nShe shushed him with her finger again. \"The pretty blonde over there with her lips around Maria's big nipple? That's Melody and she loves you too - now, she's joined with Eric. No one will ever be more in her heart than he is, but that doesn't mean she won't make love to you. We have enough love inside us for everyone equally. Do you understand that?\" she asked, taking her finger away.\n\n\"I... think so.\"\n\nThe finger went back to his lips. \"The big blonde amazon princess? She loves you too. She's a lesbian but she loves you just as much as I do. She can make love to you and still love girls. Again, we simply have more love in us than we did before, and it has to go somewhere. Understand?\"\n\nThompson nodded and kissed her finger.\n\nShe smiled. \"Better.\" She nodded toward the three on the floor again. \"The Adonis lying between the two goddesses? He loves you too - but don't worry: he isn't going to make love to you. He would die for you, he'd die for all of us and we would die for him. He's just not that way, and I really don't think you are - but, hey, if you are? That's cool. Until we add another guy, Maria will happily oblige with her strapon.\"\n\nThompson laughed. \"Not necessary.\"\n\nShe kissed his forehead. \"See? Being a god is going to be easy.\" She pushed her right nipple against his lips. \"Suck. Keep sucking till I start giving Ambrosia like Melody. Should be any time now.\"\n\nThompson drew her beautiful breast into his mouth and sucked.\n\nEvie shifted in his lap and wrapped her hand around his hardening prick.\n\n***\n\n \n"
    ],
    "authorname": "wayneandanntriskelion",
    "tags": [
        "anal",
        "coven",
        "discipline",
        "lesbian",
        "oral",
        "orgy",
        "strap-on",
        "threesome"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/transformations-morpheus-ch-03"
}