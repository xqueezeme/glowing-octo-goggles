{
    "title": "The Twelve Vitali Ch. 31",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they continue to mean the world to me and have brightened my days. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\nMatteo looked once again at the contents of the package the courier had delivered. Spread out across his desk were documents, a news clipping, and a thinly veiled threat from the Grandfather. He had ensured that Cat had no packages and that Arturo would intercept anything that arrived today and send it to him instead, then he had called a meeting of the table. He checked his watch. Everybody should be there within the hour, but his gut churned at the implications of what was happening.\n\nRicco sat opposite Matteo in quiet contemplation. While his head told him one thing, his gut told him another, and he was still in the process of sorting out which was more reliable at any given time. Once again, he wondered why he had thought he could just step into the role of Oracle. He had no great gift of foresight; his feelings and intuitions were often led astray by emotion, especially when the situation involved the people he loved most in this world.\n\n\"I need to talk to Theo,\" Matteo said for the tenth time. \"There is no way he is aware of what Mario and Giovanni are doing and why they are having such a run of bad luck in their business dealings.\"\n\n\"I know he's your friend, but what if he does know, not about the bad luck or the targeting by the Tatar, but about Mario and Giovanni,\" Ricco cautioned. \"He'd never admit to it, and you could be giving them more ammunition to attack us through the thirteenth table.\"\n\n\"Theo is a friend, I trust him,\" Matteo was adamant. \"But if we lay it all out to Papa and his gut agrees with yours, I won't say anything to him, we need some sort of consensus though, and a meeting is necessary at his point.\"\n\n\"When do we tell Cat?\" Ricco asked. \"It's bound to be on the news tonight, she will find out eventually.\"\n\n\"I think this is something David needs to do. She doesn't like discussing that part of her life with us. If she cries or mourns him, she will think we are judging her. If she doesn't, she will appear heartless. She needs David because he truly knew Ned, the good and the bad,\" Matteo said sadly. \"He's on his way over now.\"\n\n\"I guess, but it would be better if we were nearby, surely,\" Ricco argued.\n\n\"You know she will withdraw to think about it, and she will be grateful for the space. We can go up with David and tell her we are in the building if she needs us. I honestly believe it's better this way,\" Matteo knew in his gut that this was what Cat needed and wondered at Ricco's assessment of the situation. He was the Oracle and over-ruling his feelings could be risky to them all. His phone buzzed on his desk and he picked it up.\n\n\"She knows,\" Arturo said as soon as Mateo answered. \"She went to sit out in her thinking chair on the deck.\"\n\n\"How did she find out?\" Matteo frowned.\n\n\"Facebook, I think. She still has the same account she had during the time she was with him,\" Arturo said. \"Either way she knows, and she has asked to be left alone for a while.\"\n\n\"Her brother's on his way, she will see him,\" Matteo sighed, looking up at Ricco and nodding. \"No packages?\"\n\n\"Not yet, but I have reception stopping any couriers and telling them Mrs. Vitali is unavailable today,\" he said with the clipped voice of efficiency.\n\n\"We'll bring David up, and then we'll be in a meeting for the rest of the day,\" Matteo said. \"Thanks for letting me know.\"\n\n\"Hey, Bossman, what's up?\" David said, strolling into office with a flustered looking Hilary following behind him.\n\nMatteo stood to greet him and smiled as Ricco gathered the documents on the desk into a pile with the news article sitting on top.\n\n\"Hey, Dave. Listen, I have a meeting to get to, so I'll make this brief. Cat got some news today. We're not sure how she will take it, and you know the situation far better than me,\" Matteo began. \"Ned's dead.\"\n\n\"Yeah? Can't say I'm sad about it, but I'm sure someone might be,\" David said. \"Cat will be fine. It should be a relief for her.\"\n\n\"I hope it is, but she's not looking happy, and I doubt she will talk to us about it, so...\" Matteo said.\n\n\"I'm fired if I don't get her to talk to you? How well did that work out for you the last time you tried it?\" David laughed. \"Yeah, I'll go up to see her, but I think you're overreacting. I don't think she'll be that upset about it. Even if she is, I don't think I'm the right guy for the job. She talked to me the other night about the baby, and I didn't know what to say. I'm no good at the girly emotional stuff. Mostly I just wanted to knock Ned out and get her away from him, she knew I hated him.\"\n\nMatteo's phone buzzed again, and he answered it, snapping at the caller. He hung up without saying a word.\n\n\"Let's go see her anyway,\" Matteo said. \"She called Frankie. Still think it wouldn't be affecting her?\"\n\n\"Frankie's here?\" David asked. \"That's great. He could always get her to smile when Ned was being a prick.\" Matteo raised an eyebrow but said nothing. He sometimes forgot that David was almost the same age as the little geniuses. It was a lot to expect a young guy like him to understand exactly what Cat had been through at the hands of Ned. They had both said that Cat protected David from most of her hardships. When David had found her after the rape, he had called for help because he couldn't handle being the responsible sibling. He'd always had her to rely on, and now he had Frankie and his family.\n\nMatteo realised that he had perhaps been expecting too much from David where Cat was concerned. They loved each other, he knew that much, and David was protective of her, but he didn't know her intimately, as most siblings would. Cat had never shared her highs and lows with him, she had been protective, like a mother, and kept the harsh realities of her life from him.\n\nCat was sitting with Frankie, crying into his massive shoulder when they arrived in the penthouse. Seeing them, she quickly pulled herself together, and Matteo saw the moment her mask of happiness came down over her features.\n\n\"David! What are you doing here?\" she asked, coming in from the deck with Frankie close behind her.\n\n\"Thought you might want to talk about it,\" David said with a shrug. \"You put up with Ned's shit for so long, it must be a relief now, huh?\"\n\n\"Yeah,\" she smiled lopsidedly at David. \"It's weird, he was just always there, and now he's not.\"\n\n\"We're here for you if you need us,\" Ricco said, quietly stepping forward to fold her in his arms. \"We have an important meeting, but we'll be just downstairs if you need anything at all.\" He murmured in her ear.\n\n\"Oh, I'm fine. Ned was old news, and I am a married woman now, starting a family of my own,\" Cat gave a small laugh that didn't reach her eyes. She dismissed the concern with a roll of her eyes at David. \"Did he threaten to fire you again?\"\n\n\"Not this time,\" David chuckled. \"I don't exactly argue with him when he summons me, though.\"\n\n\"Go back to work, David, I'm perfectly fine,\" she hugged him, hiding her face in the closeness of the contact.\n\n\"Ricco, take the file down to the meeting and get Knox to deliver David back to work,\" Matteo sighed. \"I'm sorry, I thought he would help when we told you, but you found out before he got here.\"\n\n\"You have to stop bossing my brother around just because you can,\" Cat scolded him without any real anger.\n\n\"Yeah, but I'm naturally bossy, we all know that,\" he shrugged and smiled at her. \"Especially where you are concerned.\"\n\n\"Come talk to me while I change my shirt,\" he held out his hand to her. \"We'll just be a minute,\" he spoke to Frankie, expecting David and Ricco to do as he asked. Cat took his hand with some trepidation and followed him into the bedroom.\n\n\"Matteo, I...\" Cat began once the door was closed.\n\n\"Don't do that!\" his said more harshly than he had meant to. \"Don't manage me the way you manage David and Ricco. You were with the guy for years. He was who you turned to when your mother died. You told me you would have had no chance of keeping David out of foster care if not for Ned. He was a prick who treated you badly, but I get that you loved him on some level too. You don't have to act like you don't care!\"\n\nCat gaped at him, stunned by the gentle tirade. She felt her tears welling in her eyes again as the happy and in control of her life mask fell away.\n\n\"It's okay to care that he died, Cat. No one would blame you or judge you for caring that a man you had a long-term relationship with died, no matter what a massive asshole he was in the end,\" Matteo gathered her in his arms. \"It was a mistake asking David to come over, I see that now. I am glad you called Frankie. Frankie knew Ned, I gather?\" he held her as she nodded silently.\n\nCat couldn't believe that this good, kind and wonderfully understanding man loved her the way he did, and she clung to him as she cried. She had loved Ned, and, as Matteo had rightly said, without Ned she didn't know what would have happened to David or herself when her mother died and they were evicted from the tiny council flat. She'd gone to court and put him in jail to protect David, not for herself, because in some dark recess of her mind she did care about him, despite everything he had done to her.\n\nHe had always been there as a stop-gap between homelessness and starvation and being able to hold down a job and provide for David. Now that stop-gap was gone, and if she ever got evicted from this family, if anything ever happened to Matteo, what would she do? Frankie had given her clarity. She had a family now, and not one member of his family would ever see her destitute, and even if she didn't stay with the Vitali, the Donati or Gambaro family would welcome her with open arms, or at least she thought they would.\n\n\"It's okay to mourn him, Kitten,\" Matteo kissed the top of her head. \"I will take you to the funeral so you can have some closure, if that is what you want.\"\n\n\"You would do that for me?\" she asked, stunned by the offer. She hadn't even thought of attending a funeral, if there was going to be one.\n\n\"There is very little I wouldn't do for you, Kitten,\" he said, softly stroking his thumb over her tear stained cheek. \"I love you, it's that simple. I love your past and your present and the future we will create together. I just love you, and you have to start believing that there is nothing that could ever change that.\"\n\n\"I love you too, every single little bit of you, even the crazy and overbearing parts,\" she gave a soft smile. \"I can't believe you pulled David off work again.\" Cat rolled her eyes. \"I thought you had an important meeting to go to?\"\n\n\"I do, but a fresh shirt always helps me feel in control. Pick one for me,\" he smiled, feeling like she was over the hurdle. He felt better having been the one to talk to her rather than leaving her to withdraw or speak to David, who was clearly not equipped to deal with her feelings for the man who had treated her so badly.\n\n*****\n\n\"The Tatar don't kill. They curse or they haunt you, so you never forget a slight made against them, but they don't kill!\" Roberto said adamantly. \"To claim this death is against all of their laws and traditions. Life is sacred to them.\"\n\n\"So, what does that leave us with? Both packages have been fake?\" Lucca asked with a frown, feeling bad for Cat if that was the case.\n\n\"The question is, who would want to do this, and why?\" Matteo said, looking at the group. \"I have a theory, if you want to indulge me for a few minutes.\"\n\n\"I'm open to suggestions,\" Roberto sat back in his chair, steepling his fingers.\n\n\"Since the attack on the Donati family and the great losses suffered, not only to their family but to all of the tables, each family has suffered an attack where presumably the Suebi had sought out a weak link in the family and exploited it. On more than one occasion they have pitted one family against another. I do not blame her in any way, but Vanessa has been our weak link in her relationship with Mario. If we retaliate now, or throw these allegations around based on anonymously delivered packages and thinly veiled threats, the Martino's will be forced to defend their Savoy cousins. If that happens, the rift between our two families will widen again, and this time it could cause even greater division in the tables,\" Matteo worked through what he had to say. \"I agree with Papa, the Tatar wouldn't claim the killing of Ned Kelso as their own doing. It's not their way.\"\n\n\"The logical thing to do would be to send the information directly to Theo and let him investigate it,\" Cobi said. \"If you are up front and tell him how it came to you, and what happened to Cat, he will take care of it rather than risk a war between our families because of the deeds of a few again.\"\n\n\"No matter which way you slice it, they look like the guilty party here,\" Zion added. \"Unless they accuse us of framing them.\"\n\n\"Do we have any contacts in the Tatar to warn them that they are being used as a scapegoat here? If, indeed, they are being used as such,\" Cobi considered all the angles where trouble could come from if they shared this information.\n\n\"I do,\" Stefano said. \"Ricco and I will make the necessary contacts. Get us a copy of the material to take with us. Regardless of what is decided here, that contact needs to be made, and answers sought for Catriona's peace of mind.\"\n\nRicco didn't argue. It would ease Cat's mind if he went and found out for himself if the paternity test run on her was true or false. He merely nodded his agreement and said nothing, despite the look Matteo gave him. They were truly a team these days and making decisions like this alone was a rare occurrence.\n\n\"Matteo and I will meet with Theo and his father,\" Roberto announced. \"We will pose it as if we don't believe the accusations and give them the chance to do an internal investigation. They at least need to know the threat is there and that it doesn't come from us.\"\n\n\"It might be better to meet at the Battaglia stronghold and have Marcus arbitrate the situation. If the situation with Giovanni and Mario is true, we don't want them going into hiding or destroying any evidence Theo and his team might uncover,\" Thomas murmured, considering the question after a brief whispered conversation with Lucca.\n\n\"We probably also want to protect Vanessa... maybe send her to visit Arlo and Louis for the Milan fashion season. Maybe Trista could go with her?\" Lucca suggested.\n\n\"I'll talk to Theresa,\" Roberto nodded. \"Trista would jump at the chance and sending Vanessa as a chaperone wouldn't seem out of the ordinary.\"\n\n\"This doesn't mean we stop our own investigation,\" Cosimo said. \"We may have a plan for the moment, but we haven't found any evidence to either corroborate or dispute what the packages are claiming. All we know is that we are being fed a story that could cause old feuds to be reignited, not only between our families, but between the Martinos' and Savoys'.\"\n\nThe discussion went on regarding the death of Ned Kelso and the very real information they had been able to gather about that, as well as the threat in the second letter that had arrived. The letter had claimed that the Grandfather had ordered the death of Ned because of his crimes against Cat, and that if they did not move against Giovanni and Mario, he would take matters into his own hands there too.\n\n*****\n\nCatriona sat in the HQ restaurant with Stefano and Roberto, curious as to why Theresa and the men she loved were not eating with them. They made pleasant small talk about the house on the hill and the creation of her family home, as well as her stalled career and her plans for future artworks.\n\n\"I'm not sure when I will have time to paint again,\" Cat sighed, realising how much she wanted to reclaim her artistic creativity. \"I thought maybe I could do a mural for the nursery if things settle down for us, but, every time I think that, something else comes along to keep our attention away from what we want to do.\"\n\n\"Do you feel that Ricco and Matteo are delaying the tasks they wish to accomplish?\" Roberto asked.\n\n\"I think Matteo, particularly, gives up a lot to cater to my needs,\" she said honestly. \"Ricco is the one who picks up the slack when Matteo stops his life for me. Well, him and Lucca. I'm not sure how we would have survived the first half of this year without Lucca being there for us, no matter what.\"\n\n\"Lucca has always idolised Matteo,\" Stefano said with a genuine smile of affection. \"He is a good boy who would do what was needed for any member of our family. He has a very deep affection for you especially, Catriona. We are very proud of all of our children, and my heart aches that you never had the opportunity to know who your father was. The letters, we believe, are not real, but rather a ruse to cause strife between our table and another.\"\n\n\"I see,\" Cat couldn't hide the disappointment from her face or voice.\n\n\"To be sure, Stefano and Ricco are going to seek out a woman we know who has contacts within the Tatar. They are a secretive and particularly closed community. We hope, however, that because they are being drawn in as the catalyst to a family feud, Ricco and Stefano will be allowed to speak with their matriarchs,\" Roberto explained. \"If that happens they will be able to confirm for sure whether the letters you and Matteo received are true or false.\"\n\nCat considered Roberto and the small flicker of hope that remained with his words. They hadn't given up on the idea completely, and they were prepared to go to the source and ask for the truth.\n\n\"Matteo and I will go to meet with the other family involved at a neutral place,\" Roberto continued.\n\n\"Both Matt and Ricco will be leaving?\" she asked, surprised. She didn't think they would ever leave her completely alone for more than an hour or two at a time.\n\n\"Yes, we thought it would be a good time for you to spend some time with Theresa. There is far more to being the mother of our table than perhaps you realise, and I know Sebastian has introduced her and Zion to a new program that was gifted to you from Peri Donati to make your life easier. Now is the time to start becoming the woman you are destined to be, rather than the safely protected version Matteo and Ricco would encourage you to be,\" Roberto continued.\n\n\"While we are away, Zion and Lucca will step up with the assistance of the rest of the table, they will need your support to find their feet. They have always had their older brothers to lead the way, and the fact that Cobi will not be asked to step up will be difficult for them all. You must support them and their decisions, it is important,\" Stefano said seriously.\n\n\"When will you leave?\" Catriona asked.\n\n\"Ricco and I will leave tonight,\" Stefano said. \"He is upstairs packing.\"\n\n\"So soon?\" Cat gasped.\n\n\"Matteo received another letter that has forced our hand. We must act swiftly now,\" Roberto informed her. \"We needed you to know that we do not believe the writer of these letters is in any way related to you. Those tests can be easily forged, samples tampered with or exchanged. If, while we are away, this person tries to contact you, we need you to be wary and alert.\"\n\nAs if the reason she had been called to meet with these men became suddenly clear, Cat sat back and eyed both men carefully, thinking through all they had said. They were treating her like a meek and mild family woman who would do just as they asked, and she contemplated exactly how to word what she would say next.\n\n\"Can I just recap to make sure I understand what you are saying?\" she asked thoughtfully.\n\n\"You can,\" Roberto drew out the words in a slow way and nodded, an odd look on his face.\n\n\"Matteo received a second letter that I have not seen, which you feel has forced your hand to act against the sender. As you don't know who the sender is, exactly, except that you do not believe it is my grandfather. You feel you must go to the other family named in these letters to avert a threat that could cause a destructive war, not only between two tables, but two dynasties,\" she summarised her understanding of what they were saying.",
        "\"In a nutshell,\" Roberto agreed.\n\n\"And...\" she continued as she became more certain of her assumptions. \"Ricco is packing, so he has agreed to your plan. I am guessing it must be Matteo who doesn't like this plan, and the one you would like me to convince to go with you. Tell me, is he upset that you have dictated the plan and he feels he has no control over what is happening? Or is it that he will have to leave me alone and, in his eyes, unprotected that has made him refuse to go along with want you want?\"\n\n\"Both, possibly, but I also think he is annoyed at Ricco for agreeing to leave without talking it over with his brother first,\" Stefano gave her a sly smile.\n\n\"I have never been able to convince him to give me any form of extra freedom since the wedding. Ricco always manages to talk him around if he is being too controlling. You are asking the wrong person to do this for you,\" she shrugged.\n\n\"No, we aren't. Matteo and Ricco are together talking about the situation as we speak,\" Stefano chuckled. \"You will still be a crucial voice in this plan though, and if you ask him to stay, he will.\"\n\n\"I know,\" she said honestly. \"I think you haven't factored in how much I need Ricco's wisdom, as well as Matt's. I think I will go up and help him pack. I will bear everything you have said in mind, but I won't influence Matteo's decisions if he is determined not to go. I would never send him away just because you told me to. However, if, as you hope, Ricco has convinced him of the importance of this plan, I will not stop him from going either.\"\n\n\"That's fair,\" Stefano admitted.\n\n\"If he agrees to go, I would like a different security man, any of the others will do, but I don't want Bradbury to remain with me. I have never been comfortable with him,\" Cat admitted. \"Bradbury said I reminded him of someone he used to know, but the story he gave me didn't ring true,\" she shrugged.\n\n\"If you were familiar to him, and the story of the Tatar is true, then perhaps having him with us would be for the best,\" Stefano mused. \"If he is with the people behind the subterfuge, then we will find out soon enough. If he is an innocent man, then no harm is done. You are an intelligent girl, Catriona. Trust in that and your gut feelings, and Matteo will too, in time.\"\n\n\"Maybe, but I don't mind his protective nature, it's comforting to me. I think I will go now, thank you for telling me what was happening,\" she smiled and stood from the table, walking toward the exit.\n\nThe two men watched the hulking Bradbury fall into step behind her, alert and sweeping the room with his gaze. Stefano couldn't feel any malice from the bodyguard; in fact, he felt nothing at all from the big man, which was strange.\n\n*****\n\n\"Well, that was interesting!\" Cat had walked determinedly into Matteo's office where both he and Ricco sat talking quietly, surprising them both with her statement. \"This day has been a rollercoaster, and your fathers are worried that you are going to have a tantrum and refuse to leave unless I scold you like a naughty boy! I'm not your mother, Matteo, I shouldn't have to do this! You are the Chair, and you need to do what is necessary to keep this family safe without people having to tell you to suck it up and trust me to be safe here without you watching my every step!\"\n\n\"I was just...\" Ricco started, but she cut him off.\n\n\"As for you,\" she turned on Ricco. \"You're a team, closer than any two brothers can be! Why would you just accede to anyone's wishes without taking Matt and me into consideration? They can ask, but we, the three of us, should have been able to at least discuss it! The outcome wouldn't have changed, but this, what's happening right now, could have been a very different farewell!\" she ran out of steam as she looked at them both, clearly not happy with either of them.\n\nMatteo said nothing, getting up from his chair and coming around his desk to pull her into his arms and hold her close.\n\n\"Neither of you thought dealing with Ned's death was enough of a drama for me to deal with today? You had to put me through that late lunch with your fathers?\" Cat asked sullenly.\n\n\"I'm sorry,\" Matteo said contritely. \"The thought of leaving you here alone, even for just a few days...\" he stopped, stepping back to look at her as she laughed derisively.\n\n\"I haven't been alone since I met you! This family doesn't even understand the meaning of the word! I bet your brothers and cousins are downstairs right now drawing straws to find out who gets babysitting duty first!\" she laughed mirthlessly.\n\n\"None of them feels that way,\" Ricco interceded, seeing her becoming angrier with them. \"We just want to keep you safe, and so do they. They would be volunteering, not drawing straws,\" he corrected her.\n\n\"Come sit with us, and we'll talk now,\" Matteo pulled her gently towards his chair and pulled her into his lap, holding her possessively as if he was scared to let her go again.\n\n\"What's the point?\" she asked with a sigh. \"Your fathers have already decided on the best course of action, and you have both agreed to it. Even reluctantly you have agreed, or they wouldn't have asked me to encourage you or make it easy for you by supporting the decisions made about what would happen while you are gone. I just wish I had heard it from you.\"\n\n\"I'm sorry,\" Matteo said contritely again. \"There was a second letter, and we are trying to avoid the threat it implies. What we are going to do is important, if that helps at all.\"\n\n\"I know neither of you would leave if it weren't important,\" Cat's tone softened. \"You're the Chair now, or you will be. It's your responsibility to do this, regardless of your personal feelings of leaving me alone,\" she shook her head as if her being alone in this family would ever happen. \"Ricco, too. You were right to agree to go, because you need to go make sure of the situation and smooth the way with the Tatar if they are being used as a catalyst without their knowledge. It was that you didn't stop to think about us before you said yes to your father's plan.\"\n\n\"You were all I thought of!\" Ricco exclaimed. \"This is the only way to find out for sure if the grandfather is real or not. At the moment we are assuming it is some elaborate hoax for someone else's agenda. There is always that little bit of hope though, and I want to find out for sure, for you and your peace of mind. That sliver of hope could drive you crazy with wondering if we don't follow this through. We've reached out in the normal ways, but the Tatar hasn't responded, so we must go to them now and risk insulting them by going into their territory uninvited.\"\n\n\"He already explained to me why he accepted the plan so quickly,\" Matteo said gently. \"I will go as well. You're right, it is important, not only for our family but for the Martino's. We don't even know if their table is aware of the accusations, let alone if they are true. We don't want a feud that feeds back through the tables, dividing the families. Ours has always been a difficult relationship with the Martino's because we are so close in location and business dealings.\"\n\n\"Then what was with the late lunch and your fathers?\" she asked confused.\n\n\"Matteo may have not been as accepting of the situation, initially,\" Ricco chuckled.\n\nCat considered Ricco. What he had done, and what he had been doing for the last few months was handling Matteo. It was what he did for them all. He had spent his life studying his siblings, and, as she thought about him, she knew that he managed them all. He knew how to approach them, what to say to ease anxiety and tension, as well as how to get them to talk about the things they didn't share with anyone else.\n\nRicco had grown up with the certainty that his twin, Jacobi, would be the Chair and he would be Oracle. While Jacobi could see problems in situations and fix them for the better, Ricco could do the same with his family and the people close to the family. He had taught himself the skills and created those bonds with his siblings with the Oracle position in mind. He could read and manage Matteo's authoritative and controlling personality especially well, and she wondered how she would survive without having him here to lean on every day.\n\n\"Everything, okay?\" he asked, noticing her staring at him deep in thought.\n\n\"Do you know how long you will be away?\" Cat asked quietly.\n\n\"I don't know,\" he said honestly. \"As long as it takes, would be my guess.\"\n\nA soft knock at the door made them all turn to look at Lisa, who stood there quietly. She waited for an acknowledgement before speaking and seemed genuinely apologetic.\n\n\"Lisa?\" Matteo said, inclining his head toward her.\n\n\"Your father is here and asking to speak with you, Master Matteo,\" she said softly.\n\n\"Show him in,\" Ricco said before Matteo could speak. \"I need to shower and finish packing if I am leaving tonight.\" He looked at Cat, smiling, planning on taking her to help him with both the packing and the shower. \"Shall we?\" he stood holding his hand out to Cat.\n\n\"Sure,\" she smiled. \"You know where to find us when you're done,\" she kissed Matteo lightly and slipped from his lap. She took Ricco's hand and squealed as he lifted her into his arms and carried her toward the door.\n\n\"I'm not going to pretend I'm not happy to have a few minutes alone with you before I leave,\" he chuckled. \"See you in there, bro, don't take too long.\" Ricco grinned and began walking to the bedroom. \"You know he'll hurry through that meeting, and we'll be interrupted soon,\" he grinned, placing her on her feet, closing the door behind him and unzipping the dress she wore. He leaned down to kiss her as he slid the dress off her shoulders.\n\n\"Shower,\" she wrinkled her nose at him, making him chuckle and drag her with him into the bathroom.\n\n\"I'm going to miss you so much,\" Ricco said as he stripped and ran the water, turning with a smile to see her fully naked andeager. He pulled her into the shower with him to hold her close and kiss her deeply.\n\nHe stepped back and picked up the soap, taking a moment to admire her body as he began to slide the soap over her shoulder and across her breasts. He had always loved her svelte curves, and he was looking forward to those curves becoming more pronounced with each stage of her pregnancy. He hated to miss a moment of that time with her. He knew that without this amazing, beautiful, and loving woman the successes he was experiencing both professionally and personally might not have occurred.\n\nHe spent more time than was necessary soaping her breasts until she sighed in pleasure and took the soap from his hands. She began to follow the same path as his soapy hands remained on her breasts for the moment.\n\n\"What am I going to do without you here?\" Cat sighed.\n\n\"You can never truly be without me now, you belong to me in a way no one else ever could, and I, you. I will never leave you, even when you left me last year I never stopped loving you. Don't start doubting that now,\" he murmured and pulled her close, smacking her wet ass. It echoed loudly in the large shower, and he smacked her again just to hear it as he kissed her deeply. Ricco took the soap and quickly soaped up most of his body as Cat watched, admiring the glistening beads of water and bubbles of soap that dripped down his chest and stomach towards his cock which showed his arousal.\n\nCat closed the gap between them as he rinsed off the grime of the day. She kissed him tenderly, and his hands went around her, still holding the soap to glide smoothly over her ass. He bent his head to nibble at her neck, and, as he felt her hand wrap around his cock, he slid his hand between her legs. Cat moaned softly as his fingers began to work into her, rubbing the soapy slipperiness against her clit. The water splashed over them in the big shower as they each used their hands on the other, building their arousal to the point of urgency.\n\nRicco leaned back against the tiled wall, picking up her leg to curl over his hip and bending his legs to enter her slowly and delicately, treasuring the feeling of her hot wet cunt as he sheathed himself within her. The soap in his hand ran between the cheeks of her ass as they ground against each other until he was fully embedded.\n\n\"Make some room, and I'll help you with that if you like. You seem to be struggling with such a hot package, little brother,\" Matteo chuckled as he stepped into the large shower, lifting Cat's other leg and stepping close to her, taking some of the weight.\n\n\"You need the soap more than we do,\" Cat said breathlessly, not surprised hearing his voice behind her.\n\n\"You could be right about that,\" he caressed the open cheeks of her ass, making her purr softly into Ricco's neck. He took the soap from Ricco's hand and stepped under the water, taking the spray away from Ricco, who gripped Cat's ass with both hands and began to move her up and down on his cock.\n\nMinutes later Cat gasped when she felt the soap move between her ass cheeks again. Opening her eyes, she saw Ricco smile tightly, watching the mixture of emotions play across her face as Matteo coerced the tight anal muscle open with his soapy fingers. She whimpered and gasped for breath and could feel Ricco pull her cheeks wider as Matteo embedded his fingers deep inside her.\n\nRicco leaned forward and kissed her deeply, feeling her arms tighten around his neck as she rocked with the movement of the fingers invading her ass. He loved the sounds she made, and the look of simultaneous pain and pleasure on her face as Matteo worked to open her up to him.\n\nCat felt a strange mix of sensation as she was held between the two men she loved. She felt the fingers withdraw from her, and Matteo step up behind her. She broke the kiss with Ricco and lifted her head slightly, bracing for what was to come as her eyes locked on Ricco's. She could see the heat and lust in his eyes as he studied her face. She could also feel the hardness of Matteo's cock as he rubbed it against her ass, its slippery surface mixing with the soap that coated her now inside and out, and she knew at that moment she wanted this more than any other time they had both penetrated her at the same time.\n\nMatteo pressed up against her, finding the right position and moving his hands between her body and Ricco's to grip her breasts as he began to push his way slowly into her ass. It was unbelievably tight, and he groaned as the head of his cock popped through the barrier and her tight ring threatened to strangle him below it. It was an awkward position, but it felt so good, he gave her barely a minute to adjust before pushing further into her, listening to her mewl loudly as she tried not to cry out in painful pleasure.\n\n\"Fuck!\" Ricco growled, his eyes glued to Cat's face as he felt his brother's cock enter her ass through the thin membrane that separated them. Unable to help himself, he bucked his hips, feeling the awkwardness of the position, and groaned loudly.\n\nCat felt the strength and power of the two men, and at that moment gave herself over to the sensation of not only their cocks but their hands and bodies that pressed against her. She felt Matteo's cheek caress hers as he leaned in, his body curving to her position. She turned her head and kissed him as they started to move, the awkward position hampering them at first until they found some rhythm. She started to come, and, floating on a cloud of painful pleasure, she trembled and spasmed as they held her in place, one coming after the other, filling her to overfull.\n\nMatteo staggered back, leaning against the wall underneath the streaming water as Ricco's legs buckled, carrying him and Cat to the floor of the shower stall. Matteo cleaned himself again before helping Cat to her feet and tenderly holding her and helping her wash off the evidence of their lovemaking before making room for Ricco. They towelled off slowly, both helping Cat as she took the time to come down from the high she still felt. They lay on the bed together for a few moments before Ricco moved to get up and dress, knowing he had a time limit to pack and join Stefano for the trip inland.\n\n*****\n\nDespite her protestations, neither Ricco nor Matteo had budged on removing Bradbury from his position of guarding Cat, a fact she had been less than happy about when Matteo had left the following day for Canberra. She had felt at an immediate loss once they were gone, and she knew they weren't just downstairs in their company offices, only minutes away if she ever needed them. For the first time since meeting Matteo, she felt truly alone, despite the people around her.\n\nTheresa had arrived with her assistant within an hour of Matteo and Roberto leaving, and called Arturo in to sit with them as they went over the schedule she had mapped out for the follow weeks now that Cat was back in the city until the renovations and building at the house of the hill were mostly complete.\n\nCat insisted that Arturo carve out some painting time each day, despite the calendar Theresa seemed hell-bent on creating for her. It seemed that each of her brothers-in-law, and most of the other men of the table, had sent lunch and or dinner invitations for the following days.\n\n\"I'm going to be as big as a house if I accept all the invitations and events that Theresa wants me to,\" Cat sighed, as Arturo sent the latest revision of her calendar diary.\n\n\"Can I give you some advice? You can take it or tell me to shove it, but...\" he trailed off.\n\n\"Everyone else is, there is no reason you shouldn't!\" Cat rolled her eyes and immediately regretted her abruptness. \"I'm sorry, I didn't mean that. Please, tell me what you're thinking.\"\n\n\"How brave are you feeling?\" Arturo asked, changing his mind and realising he would need to say what he needed to say where she would be more receptive to it.\n\n\"Why? What do you have in mind?\" Cat frowned at him.\n\n\"I have said right from the beginning that if you gave me this job and the chance to be part of this family in a very real way that I would be loyal to you, not to Matt or Ric, loyal to you. I haven't always understood what that will entail, or who you were as a person, but I believe I do now, and I want you to trust me to always have your best interests at heart,\" Arturo said. \"Now, how brave are you feeling?\"\n\n\"Pretty brave. What do you have in mind?\" she asked again.\n\n\"We're going out for a little while, and, before you protest, Knox can drive, Bradbury can escort, and, if you really feel the need, we can take Lucca or Zion with us,\" Arturo said.\n\n\"Where are we going?\" she asked again.\n\n\"Football training, so you might want to change,\" he eyed the designer dress she wore.\n\n\"Why?\" she asked, shocked by his answer.\n\n\"It's important. Can you just trust me, please?\" Arturo asked, seeing a spark of curiosity in her expression now. \"I'll call Knox and Bradbury while you change.\"\n\n\"Okay,\" she said slowly, showing her uncertainty. She knew David was helping Frankie train a team of troubled boys now, and she had been wanting to go and watch, the way she used to when he had been playing for the club himself. \"If we are going to the Football club there is no need to worry Lucca or Zion about it.\"\n\n\"Worry Lucca about what?\" Lucca asked, walking into the office Cat shared with Arturo unannounced.\n\n\"Arturo and I were going to go and watch Frankie and David's team practice,\" Cat said. \"Bradbury and Knox will go with us, so there is no need to worry.\"\n\n\"Sounds like fun, I'm in,\" Lucca said. \"Maybe we can pick up some burgers on the way for dinner. I'm so tired of this moonboot, getting out to the footy club would be great.\"\n\nHalf an hour later Cat sat in the back of the car between Arturo and Lucca, dressed in jeans and an oversized jersey she had found in Ricco's closet. They'd arrived and surprised Frankie and David as they climbed up into the bleachers to watch their training session. Cat enjoyed the session, as old friends who had been longtime members of the club came to greet her and talk to her, many of them unsympathetic about Ned's demise and happy for her good fortune in her marriage.",
        "\"I forgot how cold it was out here,\" Cat said, rubbing her hands together.\n\n\"Let's walk around the oval for a bit, that should warm you up,\" Arturo said, signalling Bradbury, who stood at the bottom of the bleachers, seemingly alert to everything and everyone approaching Cat and the two men she sat with. \"David will be finished soon, and we can take him with us to eat if you like, or head back to his place and order Chinese or something. You know this area better than me. What's good to eat around here?\"\n\n\"We used to go to the local pub to eat after training,\" Cat shrugged.\n\n\"Great, let's do that!\" Arturo said enthusiastically.\n\n\"I'm not so sure,\" Cat said as they started walking around the edge of the oval the young men were training on, with Bradbury shadowing them. \"I used to work there, and I haven't been back since I quit and went to Queensland.\"\n\n\"All the more reason to revisit, it's good to go back to old haunts and remind yourself of where you have come from to get to where you are now,\" Arturo said. This was exactly the type of place he had been thinking of when he asked her to come back to her old neighbourhood. He needed all of this fresh in her mind before he gave her the advice he wanted. This trip down memory lane was going to make it all the more potent when he brought it up. \"I'd like to see the place. It's one thing to know where you spent your childhood, but it's another thing entirely to be here and experience it.\"\n\n\"It's very different from when I was a kid. The new estates have cleared out most of the government welfare housing,\" she said. \"It's much nicer now than it was even five years ago.\"\n\n\"It doesn't matter that it's changed. This club, that local bar, even the estates, all went into creating the woman who captured the heart of one of the countries most eligible bachelors. You've never shied away from that fact. Matteo has certainly never attempted to gloss over the fact that you don't come from the same social set as his family. Why would you be concerned about owning it here when you aren't concerned with any of the family or their friends?\" Arturo asked. \"Upside down snobbery?\"\n\n\"No!\" she denied what she had taken as an accusation.\n\n\"I guess I am trying to work out what happened to this girl. I saw glimpses of her during the last week of the gathering, but you let Theresa walk all over you today and dictate which charities you will support without even asking any questions. I had thought you were going to talk to the other younger women and decide for yourself which charities you would patronise,\" Arturo said.\n\n\"I am,\" she frowned, not understanding what he was saying.\n\n\"You agreed to attend three charities events this week. Once you go, you will be seen as a patron, and those that run the charities will be eager to use your image and your name to entice others who want to hobnob with the A-list crowd to also attend the functions and donate to that charity. Whether you like it or not, as Matteo's wife you hold power and influence, and that can be used secondarily.\" Arturo explained patiently.\n\n\"I really haven't done much about being the mother, and I thought Theresa was just trying to help me,\" she seemed to consider what he was saying. \"I still haven't met with Sebastian and Zion about the software or talked to the younger women. Things that I should have prioritized time to.\"\n\n\"You have had a few other considerations, so don't be too hard on yourself. Without Matt and Ric here, though, it's a chance for you to stop and think about what it is you want, and how you want to represent this family,\" he advised.\n\n\"Ah, this was the advice you wanted to give me,\" Cat nodded.\n\n\"Part of it, possibly; more so I wanted you to remember who you were at heart, the woman that the Vitali men have all fallen in love with. That woman is not like the Vitali women, and letting those women turn you into a carbon-copy of them is wrong. That's not who you are meant to be. You are meant to be the girl from Acacia Estates, strong, compassionate and unexpected,\" Arturo pushed her. \"If you want to support those charities you agreed to today, great, but at least ask questions about them, so you know what you are putting your image and name to.\"\n\n\"I hear you,\" Cat said, and gave him a small smile. \"You're wrong though. I've changed dramatically over the last six months. The girl from Acacia Estates doesn't exist anymore, but neither does Catriona Vitali. I'm stuck in a nowhere land because I don't fit into either world now. The rest of the family accepts me because of Matteo. They have no choice, and, while I have certainly built bridges and created some friendships, I'm not accepted as anything other than that girl who creates drama wherever she goes. Lucca was hurt because of me, though he says he doesn't blame me. The truth is that it wouldn't have happened if he wasn't with me.\"\n\n\"That's not true,\" Arturo said, surprised by her words. \"You are loved by the people in this neighbourhood. Tonight should have shown you that, if nothing else. As for the family, they all love you, and I would even bet that that guy over there loves you more than he should for a brother-in-law. We probably need to find him a girlfriend sooner rather than later.\"\n\n\"He looks cold, maybe we should head back and see if David's almost done,\" Cat suggested rather than respond to what Arturo had said. She understood what he was saying, and he had given her a lot to think about, but whether it was his advice or Theresa's advice, or even the advice of anyone in the family, she still had people trying to handle her and make decisions for her. The one thing Arturo was right about is that she needed to be more careful about what she agreed to do, no matter who was making the suggestion. There were things she wanted to do and charities she wanted to either support or create if she couldn't find one to suit her needs.\n\nArturo wondered if this trip had been a good idea after all. He'd wanted to remind her that she didn't have to become the uneducated socialite he assumed he would be working for originally. He wanted her to embrace the highly intelligent and compassionate woman he had gotten to know since that time. If this trip backfired and something went wrong, he knew Matteo would fire him, despite the fact he had done it with the best of intentions. He had already used his free pass with Matteo, and he doubted he would put up with him fucking things up again. Maybe having dinner with David and Lucca will help her realise that being between the two worlds meant being loved by both, not that she didn't fit into either.\n\n\"What was the point of this?\" Lucca asked Arturo as he sat watching Cat with another group of people who had known her when she lived in the area. He knew there was more to this trip than just coming to watch Frankie and David in action.\n\n\"Just an idea that wasn't such a good one after all,\" Arturo let out a long slow breath. \"When did you first meet Cat?\"\n\n\"When Papa took on her court case, over a year ago, I guess. She hadn't started dating Ricco then, and had never met Matteo,\" Lucca said. \"She was just a girl who needed Papa's help.\" He thought carefully about that first dinner.\n\n\"So, Roberto asked a client to a family dinner before she had dated Ricco even?\" Arturo asked, astonished by the fact. \"Didn't that seem weird?\"\n\n\"I never really thought about it, to tell you the truth. Cat just seemed to belong, even on that first night,\" Lucca shrugged. \"It was easy to see Ricco had a thing for her, so we just assumed that was why, I suppose. He waited until after the trial to start dating her though.\"\n\n\"Then they broke up, and she quit working for Vanessa and took a job with the Donati family, where she coincidentally met Matteo, and the rest is history,\" Arturo pieced the timeline together without knowing any of the real details.\n\n\"What are you saying, exactly?\" Lucca was confused by what Arturo was getting at.\n\n\"I'm just trying to work it all out. Your mother came today to discuss Cat becoming more involved in women's business, and Cat let herself get railroaded into a few things she had said she wouldn't do. It's like she had no confidence in her own opinions without Matt and Ric here to back her up. I thought she needed to remember who she was and why Matt and Ricco loved her and trusted her,\" Arturo admitted. \"Turns out coming back to the old neighbourhood wasn't such a great idea, after all, I think it shook her confidence even more.\"\n\n\"What do you mean?\" Lucca narrowed his eyes.\n\n\"You didn't notice that she's gotten even more introspective and quiet?\" Arturo asked. \"I thought you noticed everything about that woman.\" He gave a chuckle as Lucca gave him a stunned look. \"Don't even try to deny it; it's obvious to everyone that you're a little in love with your sister-in-law.\"\n\n\"She's amazing,\" Lucca shrugged, not bothering to deny the accusation. \"Your theory was right, I guess, but your timing is all wrong. The guy she lived with for years before leaving this neighbourhood died a couple of days ago. He was the one she put in jail, and coming here, where everyone knew them as a couple... You see where I am going with this? Add to that, the fact that both Matt and Ricco are out of town, and you have given her no choice but to withdraw even further. Matt's the only one who can force her out of one of those moods.\" Lucca considered Cat, and if it was possible for him to make her see herself the way the men who loved her did.\n\n\"Shit. I really fucked this one up, didn't I?\" Arturo said. \"I just wanted her to wake up and stop being pushed into things I know she will regret. Theresa is great, but you know how any charity will use the fact that she patronised one of their events. The publicity machine will start, and her name will be attached to all manner of things before she even realises what has happened.\"\n\n\"I hadn't thought of that,\" Lucca admitted.\n\n\"That's because it's my job to think of these things and try to protect her from the people who would use her kindness and generosity against her,\" Arturo said. \"I really thought coming back here and to show her how strong and capable she had become would have got her thinking about what she wanted for the family.\"\n\n\"I don't think you've fucked anything up yet. Let me talk to her about it when we get back to the penthouse. I have an idea or two, and this wasn't a bad idea, it's that the timing sucks, that's all,\" Lucca clapped Arturo on the shoulder. \"We'll soften her up with some truly awful junk food on the way home. Her love of greasy fried food and burgers is a secret indulgence that Matt has tried to quash and Ricco feeds.\" Lucca chuckled with genuine humour.\n\n*****\n\nMarcus sat silently listening to the leaders of two of the table speak. There were no accusations, just facts given, along with the documentation by the Vitali. For their part, the two Martino men said nothing as they listened to what had been happening, and the implications that Giovanni and Mario were involved in some way.\n\n\"Papa, it's time to put aside old biases and look at what he has become,\" Theo said gently, breaking the long silence that had ensued after Matteo had finished talking and explaining the chain of events that had brought them here. \"They could have gone directly to the thirteen with this,\" he indicated the folders lying open on the table, and the content displayed. \"They chose to come to us so we could prove that our family is in no way involved. You have to know we would never condone anything like this, Matt,\" Theo spoke directly to his friend.\n\n\"You're right. That's why we are here. I cannot believe you, of all people, would purposely countenance any of this,\" Matteo replied with a tight smile for Theo. \"I know you, Theo; I know it isn't in you to do this.\"\n\n\"Papa?\" Theo repeated, as Trevino Martino sat silently staring at Roberto, his face tight as if in anger.\n\n\"Is it true? Is Maria alive?\" Trevino asked finally.\n\n\"Physically, yes, but she is a ghost, and has been for three decades now,\" Roberto said sadly. \"Would you rather she had gone to jail for murdering her eldest son? Where your family could visit her and pity her and she could tell her story about the events leading up to that fateful day?\"\n\n\"You should have told us!\" Trevino growled angrily. \"This,\" he waved his hand at the documents covering the desk, \"may have been avoided if we had known!\"\n\n\"What would you have done differently?\" Roberto challenged. \"How would it have mattered if she was truly dead or not? She will never see the light of day, and no one in the ghost town is allowed visitation except in extreme circumstances by the family who placed them there. There are reasons why people are sent to that facility. Maria didn't just betray your family; she killed my son, and almost killed two of my other children!\" He took a deep breath. \"Would you be so angry if it was Theo who bore the scar of a knife wound on his heart rather than Matteo?\"\n\n\"I would have handled Giovanni's grief differently!\" Trevino's voice got louder in his anger to match Roberto's, and the two men glared at each other across the table, having had a lifetime of bad blood between them caused by Maria and Giovanni.\n\n\"This was a mistake!\" Roberto said through gritted teeth. \"The Martino's have never taken responsibility for their part in the tragedy! Call a meeting of the thirteenth table, Marcus! You have seen the evidence, we have the right to challenge the family for the truth this time!\"\n\n\"Enough!\" Matteo roared, coming to his feet. \"This is my wife, my life and my sanity! What happened with my mother is long past and buried! If you can't move on from what Maria did to face what is happening now, then you need to go and let Theo and I deal with it like reasonable men!\"\n\n\"Papa,\" Theo said in a soft murmur. \"We must deal with it once and for all.\"\n\n\"I will not be dictated to by an arrogant bastard who couldn't care for his wife or children well enough to keep them from harm!\" Trevino spat. \"Call the thirteen and show them how badly you care for your family!\" he challenged Roberto and stood to leave the room.\n\n\"I'll talk to him,\" Theo said to Matteo, and followed his father from the room.\n\n*****\n\n\"We're going to have to stop somewhere for the night soon,\" Ricco murmured, frowning. He looked at his GPS and knew there were no towns in this remote corner of the state. He wondered, not for the first time in the last two days, if his father had lost his mind.\n\n\"We will, trust me,\" Stefano chuckled, enjoying the freedom of being away from his brother and their wife for a few days. \"It's not far now, slow down a little, because if you blink, you'll pass it.\"\n\nTwenty minutes later Ricco slowed down, coming to a T-junction in the road. There was a country pub on one corner and a post office and general store on the other corner. Aside from the two buildings, there didn't seem to be anything else in the vicinity. Ricco pulled up at the pub and stood from the car, stretching his legs. Shielding his eyes from the sun, he looked around. He couldn't even see a farmhouse in the distance. He followed Stefano into the hotel warily and was surprised by the cool well-maintained interior.\n\n\"You're a long way off the beaten track, mate,\" the barman said as they approached.\n\n\"Took a wrong turn at Budapest,\" Stefano chuckled. \"We'll have two beers, two beds, and a chat with a fortune teller who can tell us if we will be lost forever.\"\n\n\"Two beers coming up,\" the man said jovially, ignoring the rest of what Stefano had said. Ricco noted that the few patrons inside the pub had turned to look at them. They took a seat at a table in the corner so they could sit with their backs to the walls.\n\n\"What happens now?\" Ricco asked quietly.\n\n\"We wait, and you tell me all about your love story with Cat, from the beginning,\" Stefano gave him a grin.\n\n*****\n\n\"Oh my god, that was so good!\" Cat said, slurping the last of her thick shake as they rode up in the lift to the penthouse. She had gotten a second thick shake to drink on the drive home. She'd been surprised by Lucca's suggestion to go through the drive-thru at Jacks and grab burgers on the way home. Like Matteo, he worked out every day and ate an extremely healthy diet. Usually, she had to rely on Ricco to indulge her joy in junk food.\n\n\"Glad you enjoyed it,\" Lucca chuckled, shaking his head. \"I am not sure my body is as enthusiastic about the amount of crap I just gave it to digest.\"\n\n\"Poor you, suffering so much to make me happy,\" she leaned over and kissed his cheek. \"Thank you,\" she said sincerely.\n\n\"You're most welcome,\" Lucca said gruffly, affected by her change in mood and the kiss she bestowed on his cheek.\n\n\"Welcome home, Master Zion is waiting for you in Master Matteo's office,\" Lisa said pleasantly as she greeted them.\n\n\"Great,\" Lucca grinned.\n\n\"I think I might go and do a little work too,\" Cat said.\n\n\"Yes, you will, with us,\" Lucca put a hand on the small of her back and guided her gently toward the office. \"Zion is looking forward to seeing you. So much has happened lately, it's been hard for most of us to spend any time with you. Now you don't have an excuse, with Matt and Ricco away.\"\n\n\"Oh, okay,\" Cat frowned and walked with him into the office.\n\n\"Okay, we're all synced up,\" Zion said, looking up from his laptop as they entered the room. \"Hi, Cat, how was practice?\"\n\n\"Cold,\" she laughed lightly. \"I didn't know you were coming over tonight,\" she said, expressing her concern as to why he was there.\n\n\"Sebastian and I have been trying to get on your calendar to go through this software from Peri for weeks. Now that Lucca and I are in charge for a couple of days we can interrupt your evenings to make sure we are all on top of everything. The three of you make working as a team look so easy, but I'm just discovering how hard it truly is to make sure we don't drop any of the balls we are supposed to be juggling. So, tablet?\" he held out his hand.\n\n\"Good grief!\" Cat sighed loudly and stared at Zion. \"I may put up with a lot of this stuff from Matt, and to some degree Ricco, but I am quite capable or organising my own week, thank you! I had Theresa here today filling up my schedule, and now you! Just because Matt isn't here doesn't mean you all get to come in here and boss me around!\"\n\n\"Halleluiah!\" Arturo exclaimed.\n\n\"You misunderstood me,\" Zion laughed. \"I need to change my schedule to suit yours now that you're back in the city. You wanted the software demo, remember? I just thought evenings would be easier for you and stop you missing my big brothers so much, but I'm flexible. Lucca and I told Matt we would stay here anyway to stay close to the temporary athenaeum downstairs for meetings.\"\n\n\"Sorry,\" Cat grumbled and flopped into a chair and sighed. \"I keep thinking I will get my life sorted out when all the drama dies down. But it's not going to die down, is it? I am destined to be a drama queen permanently, aren't I?\"\n\n\"I have a nice crown in the depository you could wear, if it will help you remember that you are the queen in this family, drama or not?\" Zion said with a straight face, making her roll her eyes at him even as her lips curved into a smile. \"Come show me what Mama did to your schedule, and I'll get Lucca to undo it in the morning. He was always her favourite.\"\n\n\"What do you mean 'her favourite'? I'm everyone's favourite child!\" Lucca chuckled. \"Take no notice of him, he has middle child syndrome.\"\n\n\"Middle child syndrome?\" Cat blinked.\n\n\"Well, I'm the oldest of the younger siblings, so naturally I am the much loved responsible one, and the baby boy geniuses are... well, the babies of the family, which leaves him as the forgotten middle child,\" Lucca explained.\n\n\"Your sisters don't count in the mix?\" Cat asked, not for the first time marvelling at how the younger women were loved but treated as only temporary members of the family.",
        "\"Not in this case. Besides, they have their own issues,\" Lucca shrugged and flopped into the chair beside hers.\n\n\"You can take off, Arturo, I have a feeling it's going to be a long day for you tomorrow,\" Zion said. \"We won't mess with the schedule until we talk to Mama in the morning.\" Once he had gone, Zion stood and came to sit on the comfortable chairs with Cat and Lucca. \"Want to tell me what's really going on and what was up with Arturo tonight?\"\n\nZion and Lucca both listened carefully to what she had to say about what had happened that day and what Arturo had said were his reasons for taking her back to her old neighbourhood tonight.\n\n\"Right. So, do you want to work it out by yourself, or would you like some help, suggestions or advice?\" Zion asked, tilting his head. \"If Lucca had his way he'd jump in and fix it all for you, but I get the feeling you want to do it your way, on your own.\"\n\n\"He's just like Matteo,\" Cat indicated Lucca. \"Have you noticed they even have some of the same mannerisms?\"\n\n\"Hero-worship,\" Zion shrugged. \"Lucca always wanted to be Matt when he grew up and got his wish. Now he just needs to find a girl like you to make the picture complete.\"\n\n\"I'm not in any hurry for that, I've got a decade or so before I'm as old as Matt was when he met her,\" Lucca said nonchalantly, not denying the fact that he had always looked up to his oldest brother.\n\n\"I guess it would help to talk through what I want to do eventually. I don't want to be a carbon copy of Theresa, or just accept things because that's the way they have always been done. I mean, I am all for tradition and love this family, but when it comes to the arbitrary, then I would like to make changes. Not just for me, but for the women who will also support the table and the family. At the moment that is just Mia, Maryanne, and Kari, but I expect that will change over the next couple of years, now that the table has been announced and the older members are putting even more pressure on you all to settle down,\" Cat said.\n\n\"True, but you can probably add Aria in the group of women. I don't think she will marry into another table and leave Melbourne. At least, not anytime soon,\" Zion admitted. \"When we go out she picks up women more easily than I do.\"\n\n\"I thought she was just bi-curious,\" Lucca frowned at him. He actually believed that the twins had been experimenting with each other from a young age, and that was why neither of them was seen to be dating much.\n\n\"She is, but I think she finds lesbianism preferable to dating men from other tables where she would have to eventually move away from us all and dating regular guys at her age is a bit of a no-no,\" Zion admitted. \"Mama has tried to get her to visit a few of the tables with eligible table men, but she has resisted so far, for the most part.\"\n\n\"Let's get back on track. Tell us what it is you would like to accomplish this week, and we'll see what we can do to help you get it done. Just help, no hostile takeovers or anything like that,\" Zion gave Lucca a stern look.\n\n\"Zion, I love you,\" Cat smiled and laughed. \"That's exactly what I needed to hear right now.\" She placed her tablet on the coffee table between them, and they began to talk seriously about what she had wanted to do once she had time. Theresa was not retired yet, and she had assumed there wasn't a time limit on when she had to get involved, but Arturo had pointed out the errors in her thinking.\n\nThe night wore on, and both Matteo and Ricco had called her to wish her goodnight and made her promise to get some sleep and not let their brothers keep her up all night. By midnight they had a plan, and she went to bed. The giant bed seemed so cold and strange without the two men she shared it with. She tossed and turned restlessly before she finally got up and went to see if there was an old movie on television she could watch and hopefully fall asleep on the couch.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "family",
        "brothers",
        "menage-a-trois",
        "shower sex",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-31"
}