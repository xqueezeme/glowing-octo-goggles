{
    "title": "Home for Horny Monsters Ch. 80",
    "pages": [
        "Hi all! Annabelle Hawthorne is back!\n\nThe year is 2022 and we're gonna keep that Christmas spirit alive with a trip to the North Pole! I am sure absolutely nothing bad will happen...right?\n\nNew Reader? Just go for it. If you're brave enough to click on Ch. 80 of a story, you should just plow ahead. You've earned it.\n\nReturning Reader? Welcome back! Things are about to get jolly for the Radley crew as they tackle one of the best known holidays in the world while I frantically attempt to dodge copyright infringement (sorry, folks, no red-nosed reindeer for me).\n\nAlso, I wanted to say thanks to people who write me feedback letters. I just discovered a whole batch of them in random pockets of my gmail account dating back to June of 21. I'm more than a little mortified, and very sorry if you asked me something important and thought I blew you off. I'm trying to catch up, but free time is still limited. Ugh.\n\nAnyway, don't forget to check my bio for publishing schedule, and please don't leave without hitting those stars on the way out.\n\nNot a Creature was Stirring\n\nYuki sat in bed with her knees pulled up against her chest. In one hand was an old copy of Alice in Wonderland and in the other was a handful of foxfire. Her bedroom light was off since the foxfire provided plenty of light to read by.\n\nAlice wasn't even open. Instead, she ran her fingers over the well-loved cover, tracing the portrait in the middle. It had been a gift from Emily, the only true love of her life. The two had been inseparable until Emily had fallen under the influence of the shadow and locked Yuki in a tower-world. The last time she had seen Emily alive was when the former Caretaker had returned to steal her eye for a magical ritual.\n\nA single tear fell on the book, and Yuki wiped it away, smearing condensation across the cover. Her relationship with Emily had been a lifetime ago, in human terms, anyway. The hurt was still there, but time had a habit of helping old wounds scar over.\n\nShe opened the book and ran her fingers over the pages. There was once a moment where she had opened this book for the first time. Its pages would have seen a young, vibrant kitsune that was hopeful for a future filled with love and laughter. Later, it bore witness to heartbreak followed by inconsolable rage. The book was like an old friend. It had seen her both at her best and her worst.\n\nMoving the foxfire closer, she wondered how long it would take the book to burn away completely. It was just one of many tendrils remaining that connected her to the past, but it was easily the one that hurt the most.\n\nHer conversation with Naia had been a long one. She hadn't wanted to have it in the backyard where anyone could listen in. However, walking in on Mike and Naia having sex had definitely thrown her off. It wasn't the first time she had seen it, but it was perhaps the longest she had actually watched.\n\n\"What do I want?\" she wondered aloud, then set her book down on the nightstand. She closed her hand, extinguishing the foxfire and plunging the room into darkness. Yuki laid back on the bed, her gaze on the ceiling. More than once, it felt like she was still trapped in that other world while this one kept spinning without her. It was easy enough to put on a brave face, to act like nothing was bothering her. Out of everyone in the house, it was Mike who had seen through the mirage. He seemed to understand exactly what she was going through.\n\nSighing, she pulled a pillow over her face and groaned as she went over her conversation with Naia.\n\n\"Is it okay that I'm ready to move on?\" she asked as she stared blankly at her feet. She sat naked in the tub, her back pressed against Naia's knees as the nymph rubbed her shoulders.\n\n\"That's something only you can know,\" Naia had replied.\n\n\"It's strange, but I feel like I should be happier about it. Forgiveness hasn't been easy, but...\" Yuki shrugged, which sent ripples through the water. \"It's like that gaping hole in the middle of me is finally...okay. It's not great, but I no longer feel like I'm one step away from falling apart.\"\n\nNaia stopped rubbing Yuki's shoulders and started braiding her hair just below the ears. \"I think it's wonderful that you feel that way. It's been over a year since your return. I often thought it would take you much longer to get to where you are today.\"\n\nYuki flicked the water with a finger, releasing just enough of her magic to freeze the water droplet as it formed. It plunked back into the bath, then floated away from her and melted away.\n\n\"Realistically, it should have,\" she replied. \"But I think you know part of the reason why I feel this way.\"\n\nNaia leaned into Yuki, hugging her tightly from behind. \"It's him, isn't it?\" she asked in a low whisper.\n\nYuki said nothing for several moments, then nodded. She had spent so many years with Emily and the others of the house. Her continued sense of loneliness was further aggravated by the fact that she was the only one who had retained memories of their years together. As the only witness to Emily's time as Caretaker, she felt uniquely qualified to assess it. Personal betrayals and corruption aside, Emily had provided a home that was far safer than anywhere else on the planet, to Yuki's knowledge.\n\nComparing Emily to Mike, though, was a no-brainer. Even though Mike's world seemed to be far more dangerous, his successes already far exceeded anything that Emily had ever been capable of. Emily's home had been safe, but she had definitely played favorites. The love in Mike's home was palpable in the way he treated everyone and went out of his way to make time for them. He gave selflessly and treated the others like equals.\n\n\"He gives me hope,\" Yuki finally replied. \"I'm still scared that he will fall from grace, but after what I saw in the spring...\"\n\nShe didn't have to finish the statement, because Naia knew exactly what she referred to. There had been a moment in Oregon when Mike had been surrounded by all the power of the forest. His magic had gone wild, forming behind him like an ominous set of black wings. The darkness had come, ready to twist him into a being of power and fury--if he survived the process. Leeds had taken something precious from Mike, killing a woman he loved for no other reason than to hurt him.\n\nSteeped in such power, Mike had diverted the killing blow at the last moment and poured his magic into revitalizing the land instead. She alone had seen that raw power form above him, spreading apart into wings made of shadows, eager to be unleashed and do his bidding. In the grip of such anger, he had not only found mercy, but had also acted on it.\n\n\"True strength comes from within,\" Yuki whispered, hugging herself tightly. \"It's an ancient lesson that is hard to truly understand, and yet, he does. He proved it to me on the day he saved my life, the same day he gave up a wish for his heart's desire to not just save my life, but restore my heart and mind. He did so again in the forest while gripped by a terrifying wrath. He shows the others a kindness I can't fully describe, giving of himself whenever he is able. I want to be strong like him, to find it in my heart to keep moving forward.\"\n\nNaia ran her hands through Yuki's fur, then filled the tub with more hot water while the two sat in comfortable silence for nearly an hour. Yuki's thoughts were like the tendrils of water vapor rising from the water, easy to see yet difficult to grasp.\n\nEven now, hours later, she still didn't know how to move beyond her past to become a better version of herself. She was stuck.\n\nA loud banging sound from downstairs had her instantly on her feet. She slid into her robes, the fabric cool against her bare skin. Opening the bedroom door, she ran down the hallway. Below, she could hear the others talking, and paused at the railing to take in the sight of a small woman slumped on the ground next to a massive sleigh with Mike squatting over her.\n\n\"I'm just saying, Romeo, that the big man is going to be pissed at you for killing one of his cookie makers.\" Lily stood behind Mike with her arms crossed. Though her tone was comical, there was a defensive set to her shoulders that Yuki didn't like at all.\n\n\"What's happening?\" Yuki demanded as she descended the stairs. \"Are we under attack?\"\n\n\"If we are, it's a weird one.\" Kisa stood next to Death and Tink, who was busy adjusting her dress. \"That weird little bitch down there crashed her sled and passed out.\"\n\n\"Where did the sled come from?\" Yuki asked as she made it to the bottom floor.\n\n\"The fireplace,\" Mike replied. \"And that's not all. Look.\"\n\nHe pointed into the living room. Yuki narrowed her eyes at the sight of Beth frozen on her hands and knees. Her lips were puckered together, but she was like stone.\n\n\"Is it a spell?\" Yuki asked as she moved closer to Beth. She knelt down and poked Beth with a candy cane from the tree. It broke apart without so much as making an impression in Beth's skin.\n\n\"If it is, it's a big one.\" Lily knelt down beside her. \"I was in New York when I felt everything coming to a halt. Would have missed it if I hadn't been balls deep in the Dreamscape having a snack while watching the snow falling outside. Teleported back here in time to see this. I think whatever is happening isn't just occurring here.\"\n\n\"There's one way to find out.\" Yuki moved to the window and looked outside. Swirling flakes of snow were frozen in the air as if the whole world had become a painting.\n\n\"Oh, sparkles.\" The tiny figure on the floor shifted, then pushed herself up to her knees. Yuki blinked when she realized that the figure was dressed as one of Santa's elves. \"Is Tinker's dress back on? I saw...everything.\" She shuddered and then opened her eyes to look at Mike. \"You shouldn't be here,\" she said.\n\n\"I think you just stole my line.\" Mike pointed the poker at her. \"Who the hell are you?\"\n\nThe elf looked woozy for a moment, then held her hand against the sleigh to steady herself.\n\n\"My name is Holly,\" she said, then rubbed at her ears which had gone red. \"And please don't use naughty words around me. I don't want to get--\"\n\n\"Shhhiiitttt.\" Lily stretched the word out as she said it. \"Fuck.\"\n\n\"Oh!\" Holly tipped over as if losing her balance. \"No, really, this isn't a--\"\n\n\"Asshole.\" Lily grinned as Holly hyperventilated. \"Oh, you are too pure. You wanna see a perfect pair of tits?\"\n\n\"Lily.\" Mike's tone of voice was serious. \"Let her talk, please.\"\n\nHolly nodded, the pom-pom on her hat ringing as if it had a bell inside. \"I don't have much time. Well, I have all the time I need, but maybe it's not enough.\"\n\nMike cleared his throat and knelt down by the elf. \"I just want you to know that you wrecked my living room with a magic sled. I request that you be very direct with me in regards to what is going on and how you got in here. The geas should have kept you out, and I need to know how you bypassed it.\"\n\nHolly nodded, then adjusted her hat. \"Okay, where to begin?\"\n\n\"Is this Santa's sled?\" Death was running his fingers over the velvet fabric on the seat. \"And is that his bag? Does it have presents inside?\" He reached for the bag, his eyes burning brightly.\n\nHolly scrambled up onto the sled and slapped Death's hand away from the bag. \"That is not for you,\" she declared. \"So you stay away from those presents!\"\n\n\"But I've been good this year!\" Death hopped up and down, his hood bouncing along his back. \"And the rules say that you get a present if you're good!\"\n\nThe elf rolled her eyes and turned to open the bag. \"If it'll keep you quiet, here.\" She pulled a small box from the bag and handed it to Death. \"To answer your questions, though, this is Santa's sled, this is his bag, and all of the presents in the world are inside.\"\n\n\"Why are you here?\" Yuki glared at the elf and was pleased to see her cower a little in fear. If Holly was indeed a threat, she was likely a weak one. Still, it wouldn't do to underestimate her.\n\n\"I came for her.\" Holly pointed at Tink. \"There's a huge problem at the North Pole, and I know she can help.\"\n\n\"Tink help?\" The goblin looked at Mike and shrugged. \"Maybe. Good at many things, like trick Tink do with her mouth that--\"\n\nHolly pulled a pinch of something white from a pouch around her belt and threw it in Tink's face. Stunned, the goblin took a step back as Mike grabbed the elf by her collar with one hand and lifted her out of the sled to hold her in the air.\n\n\"If you just hurt her,\" he growled, the air around him rippling.\n\n\"No!\" Tink grabbed the hem of Mike's shirt and tugged on it. \"Pointy-ear no hurt Tink, help Tink remember!\"\n\nHolly nodded, a terrified expression on her face. \"That's all it was, it'll help speed things up! You see, Tinker has helped out at the North Pole a couple of times when the furnace breaks down. It won't fix all of our problems, but it'll help!\"\n\n\"What problems?\" Mike lowered Holly into the seat of the sled. \"And why is everything frozen?\"\n\nHolly let out a relieved breath and pulled a thick, crushed velvet hat from beneath the seat. It was the richest red that Yuki had ever seen, and smelled like peppermint.\n\n\"Okay, so this is gonna be hard to believe, but here goes.\" She handed the hat to Mike. \"Santa is missing and the North Pole has gone dark. No elves, no reindeer. It's like everyone just...vanished.\"\n\n\"And so you came here?\" Yuki looked into the living room. \"And what did you do to her? Or everyone, for that matter.\"\n\n\"That's not me. It happens every year.\" Holly moved over to Beth and casually hopped onto her back. \"It's a time lock. Santa activates it so that he can deliver presents to the entire world in a single night. The whole world is frozen right now and will stay that way for, well, until we can find him and undo the lock.\"\n\nYuki frowned and knelt down by Beth. She wasn't breathing, but her skin still held a healthy glow. If it was a stasis spell, she would have turned blue and died by now. \"You say the whole world is frozen in time, but we aren't. You aren't. Explain.\"\n\n\"That's because of the sled. It creates a field, anyone near it who isn't a human gets excluded. This lets Santa have extra helpers if he needs them. Anyone staying at the North Pole is also excluded, this is just an extension of that feature.\" She tilted her head at Mike. \"Though I'm curious why you aren't affected.\"\n\n\"Didn't pay my human union dues,\" Mike explained. \"They took my card away.\"\n\n\"It's a compass!\" Death had opened his gift and held it up proudly. It was a fancy silver compass that looked similar to a pocket watch and was inlaid with a white mother of pearl face with a nautical compass rose painted onto it. \"I've always wanted one of these!\"\n\n\"You have?\" Mike asked.\n\n\"Well, I didn't know that until I had one.\" Death held up the chain that was attached to the compass and then looped it around his neck. \"It is beautiful, thank you.\"\n\n\"Guys, focus!\" Yuki turned back toward Holly. \"Okay, so you needed help and came here...why?\"\n\n\"Pointy ear come for Tink,\" the goblin declared proudly. \"Tink fix furnace, big thing, lots of tunnels!\"\n\n\"Tink is the only one who can fix the furnace, it's true. But the real reason I came here was...\" Holly took a deep breath, then let it out. \"Sheer desperation. I didn't know where else to go, and brought the sled and gifts with me to keep them out of the hands of whoever shut everything down.\"\n\n\"If everything is shut down, how did you manage to escape?\" Lily sneered at the elf, who backed away from the succubus. \"What makes you so special that you didn't just get gobbled up like the rest of them?\"\n\n\"I was on special assignment.\" Holly puffed out her chest. \"That new game console that everyone wants this year? I was busy returning one.\"\n\n\"Returning?\" Mike raised an eyebrow. \"Those things have been sold out for months. Why would you be returning it?\"\n\n\"I had to borrow one.\" For a moment, Holly looked like she was going to be sick. \"I took it from underneath someone's tree two weeks ago and temporarily replaced it with a dummy present. The elves spent several days figuring out how to replicate the design. I was trying to put the real one back, but got stuck hiding it back under the tree. Elves have ways to be invisible to humans, but the family dog fell asleep on the fireplace because they had a lovely fire going. Whenever I got close, it would wake up and growl at me. I hear that we smell like butter cookies.\n\n\"Anyway, I was gone much longer than expected as a result. The dog got up to get a drink, and that's when I ran. Still, I was gone maybe three hours tops, which is why I'm so concerned. Usually, there's a big party while Santa delivers presents, and the only people working are emergency support teams, and even they don't have to do much. But to come home and find the place empty with the furnace shut down...\" She shuddered. \"Real scary stuff. I wandered for a bit, and found the sleigh. I sat with it and waited, knowing that Santa would come. But when the alarm for the time lock went off and he hadn't, I knew something was wrong. The countdown is almost twenty minutes, so pushed the sleigh into the fireplace just before the lock engaged.\"\n\n\"So the whole world is frozen in time until we undo that lock?\" Mike looked over at Beth. \"Is it like a switch, or...\"\n\nHolly shrugged. \"I don't know. I have free access over most of the Workshop, but I've never seen how Santa does it. A friend of mine might know how. He's very old and has seen pretty much everything, but we would have to find him first.\"\n\nYuki sat down on the edge of the sleigh and narrowed her eyes at Holly. \"And I suppose you want us to come back and help?\"\n\nHolly shook her head. \"No. Someone has to stay here and guard the sleigh. It's usually kept in a secure location until Santa puts the bag inside, only he can lift it. The sleigh was still locked up, which means whatever happened occurred right after Santa loaded the sleigh, but before he could leave. I can't think of any reason he would do that. Whatever happens, we cannot let anyone else get their hands on this sleigh.\"\n\n\"Why?\" Lily sat on top of Santa's bag, her arm nearly elbow deep. With a grunt, she pulled out a box wrapped in red and silver ribbon and shook it next to her ear. \"Afraid we'll flood the economy with shitty toys and upset the value of the dollar?\"\n\n\"No.\" Holly climbed onto the sleigh and pulled the present out of Lily's hands. \"This bag is special. If anything happens to it, then Santa can't deliver presents to children all around the world. This is his life's work, and we must preserve it.\"\n\n\"Um, correct me if I'm wrong, but...\" Mike made a face. \"I don't recall ever getting an actual present from Santa. It was usually just my mom.\"\n\nThe elf rolled her eyes. \"Well, duh. That's how Santa's magic works! It keeps him hidden at the North Pole by changing people's memories. So when you find out that Santa isn't 'real,'\" Holly held up finger quotes, \"Your parents are already under the belief that they bought everything for you and Santa's secret is preserved.\"\n\n\"Makes sense,\" Mike muttered. \"Always was surprised that she got me anything for Christmas, much less signed it from Santa.\"\n\n\"That sounds an awful lot like how the geas works.\" Yuki stood and looked at Holly. \"Retroactively changing things to preserve the home's secret.\"\n\n\"That's right!\" Holly stuffed the present back into the bag and pulled the drawstrings shut. \"The same spell that protects Santa also protects this home. It was a gift from Santa to...to...\" She scrunched up her face. \"Well, to whoever built this place.\"\n\n\"He knew the Architect?\" Mike looked at Lily, then Yuki. \"That means he could tell us about who built this house!\"\n\n\"Oh, fuck me.\" Lily rolled her eyes dramatically. Holly jumped as if burned. \"As if we all don't know where this is going.\"",
        "\"Mike.\" Yuki moved toward him and put a hand on his shoulder. \"I want you to keep in mind that whatever is happening here isn't a house problem. If Holly is right, the time lock happens every year and we've never even noticed. If you want to help, I'm with you a hundred percent. But if you want to sit this out, she'll leave and the lock will just end from our perspective. We don't have to get involved at all.\"\n\nHe nodded, then looked at Holly. \"At the very least, you need Tink to get your furnace back online, right? If she goes, I go too.\"\n\n\"And me.\" Kisa crossed her arms. \"Last time I stayed behind, everything went to hell and we needed all hands on deck.\"\n\n\"Ah!\" Holly covered her ears. \"Really, no swearing, please!\"\n\n\"Bad words make pointy-ears horny.\" Tink chortled with glee as she moved closer to Holly. \"Tink remember special time with pointy-ear, way better than fun with hammer.\"\n\n\"Bad words make you horny?\" Lily laughed. \"I have to see this.\"\n\n\"No!\" Holly's eyes went wide in horror. \"Absolutely not! Last time we had an outbreak of naughtiness at the North Pole, it was years before things went back to normal! And bad words don't make us...amorous. They make us mimic the behavior itself. \"\n\n\"It may be prudent of you to stay behind,\" Mike said to Lily with a frown. \"As much as I'd love to have you with me...\"\n\n\"I'm simply too sexy for the North Pole.\" Lily rolled her eyes. \"I get it. Wouldn't want to start an orgy with a bunch of children.\"\n\n\"We are NOT children!\" Holly stomped her foot and looked at Tink. \"We're just petite! Tink, tell her!\n\n\"Stinky demon just jealous of small girls like Tink.\" The goblin threw her arm across Holly's shoulders. \"Come. Go fix furnace, find Santa, get presents!\"\n\n\"I'm coming with you.\" Yuki looked at Mike. \"There will be no objections. Whatever took everyone is still up there, and I'm not letting you go alone.\"\n\n\"Wait.\" Lily frowned. \"I'm not going to stay here and babysit this sled all by myself. If time is locked, I might be here for days while you get shit figured out.\"\n\nHolly let out a low moan, then pulled a pair of earmuffs over her ears. \"Just let me know when you're ready to go,\" she said in a too-loud voice.\n\nMike nodded, then looked at Death. \"Do you think you could do me a huge favor?\"\n\n\"Indeed, Mike Radley.\" The Grim Reaper moved into the driver's seat of the sled, his fiery eyes now glowing green. \"I shall make sure nothing happens to Santa's sled. You can count on me.\"\n\n\"I...thought you would argue, but okay. It should be safe inside the house, the geas will keep out any unwanted visitors, and since time is locked...\" Mike frowned. Yuki could tell he was trying to figure something out, but had no idea what. \"With any luck, we can get things sorted at the North Pole and you both won't have to wait long at all. If we find Santa, he'll have to come here for the sled, which means you'll get to meet him.\"\n\nDeath grinned, the fire in his sockets growing brighter as he picked up the loose reins and held them in his hands. \"You can count on me to do the right thing, Mike Radley. You have my word.\"\n\nNow Yuki was suspicious, but didn't know why.\n\n\"Holly.\" Mike waved at the elf, and she removed a muff from one of her ears. \"Can we use the sled to unlock any of the others?\"\n\nHolly shook her head. \"Whoever is with it when it leaves the North Pole is the only person who stays unlocked. Since I brought it through the fireplace as the lock went up, the field worked on everyone inside your house, but that's it.\"\n\n\"Bloody fucking convenient,\" Lily muttered. \"If this turns out to be a trap, I'm gonna hook that elf's asshole with a giant candy cane and beat her against the wall like a pinata.\"\n\nHolly's whole face turned a violent shade of purple as she tipped into the wall and dry heaved, frantically adjusting her ear muff back into place. Yuki felt bad for the little elf, but agreed with Lily. With most of their housemates locked in time, it had been dumb luck that Yuki had even been at home.\n\nLast Christmas, the others thought she'd retired to her room for the night. Instead, she had gone on a long walk in the park and had spent most of the night staring at a frozen lake and listening to the ice crack as the sun came up. It had been hard being inside the house, remembering so many Christmases with Emily and the others. There were still moments she felt like a complete outsider, especially since she was the only one who held those memories. Christmas was particularly hard, and the only reason she had stuck around after the snowball fight was to talk to Naia.\n\n\"Okay, well, let's make sure nobody else here is caught outside of the lock just to be certain. Team North Pole, I need you to make sure you have everything you need before we leave.\" He looked directly at Yuki. \"You're right that this isn't technically a house problem. Maybe it's stupid, but I feel like I ought to go. I'm a parent now, and would feel like a major piece of shit knowing that I could have helped the big man himself and didn't.\"\n\nYuki frowned. Being honest with herself, she didn't want him to go. If she could get away with it, she would make him stay and go in his place. She would use her magic to force his obedience and would find some way to lock him up until she returned.\n\nBut then she wouldn't get a chance to see that strength of his once more. It wasn't enough to just remember what she had seen in Oregon. He had devoted the last several months to becoming stronger, to becoming the kind of Caretaker the house now needed. If she hoped to walk beside him, she needed to be stronger too.\n\n\"Team North Pole?\" She raised an eyebrow. \"Are we really doing teams?\"\n\n\"They're the home team, we're the North Pole team.\" Mike tilted his head. \"Which team are you playing on?\"\n\n\"Orokana Ningen.\" Yuki crossed her arms. \"You would be lost without me.\"\n\n\"Mike Radley could borrow my compass,\" Death offered, holding up his gift. \"Then you could stay behind. Though I suppose it wouldn't function that well at the North Pole.\" The Grim Reaper contemplated the compass, then tucked it back into his cloak. \"She is right. You would be lost without her.\"\n\n\"Just let me get my coat.\" Yuki moved toward the stairs.\n\n\"Wait.\" Mike's eyes lit up when Yuki looked at him. \"Why would you need a coat? I thought the cold didn't bother you anyway?\"\n\nShe narrowed her eyes at him, annoyed at his stupid attempt at a joke. They had gotten worse recently, and she knew it wasn't because he had been spending time with the dryad, Amymone. Her love of a bad joke was already legendary, but she was in hibernation. No, it was likely someone else was egging him on, or he had decided that his new status as a father entitled him to sink to a new low in comedy.\n\n\"My coat has pockets,\" she told him. \"I can't just pull stuff out of my ass like you do.\"\n\nThis got a genuine laugh from Lily, which brought a smile to Yuki's face.\n\nUp in her bedroom, she gathered up her magical tarot cards and tucked away a few things she thought she might need. As she was about to head back downstairs, she caught sight of Alice sitting on her nightstand.\n\nThere was no telling how long she would be gone. She pondered the book for several long moments before picking it up and tucking it away into her coat. It felt heavier than normal, but she refused to let the past drag her down.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nOnce everyone was ready, Holly had thrown a handful of glitter over everyone who was going and told them to run head first into the fireplace. Tink had led the charge, her toolbox in hand. Kisa had gone next, followed by Yuki. Mike looked at Beth by the tree, frozen mid-kiss, and set his jaw. Was Beth's magic like his own? Would it trigger his desires, filling him with pleasure until he felt like he would burst as his own magic did the same to her?\n\n\"I'm coming back for that kiss,\" he muttered, then ran through the flames. They parted for him, revealing the dimly lit interior of a building that made him think of a conference hall after a convention. Abandoned boxes and tables lay scattered everywhere as if the inhabitants had simply walked away.\n\nMike noticed that it was cold. It wasn't so much that there was a chill in the air, but it almost felt like the heat was being sucked from his body through his feet. Each breath sent a puff of crystals into the air, and he even heard Yuki gasp at his side. When he looked at her, she had sprouted more fur along her body to keep warm. Behind them, Holly came through the fire, her eyes gleaming with determination.\n\nThe space they were in was a giant dome with large glass panels, making Mike think of a snowglobe. Up above, he caught glimpses of the Northern Lights frozen in place across the night sky while snow swirled around the building. He had so many questions about how the time lock worked. Clearly there was a limit to the field around the North Pole, but was it just time on Earth that was frozen? Or was it the whole universe? How could he even see light from distant objects if it could no longer travel to his eyes?\n\n\"Hey.\" Kisa gave his foot a playful kick. \"You're making the face again.\"\n\n\"Yeah, sorry.\" He walked away from the fire, then looked back. It was a gigantic fireplace with hundreds, possibly even thousands of stockings all along the top of the mantel. The names stitched into the stockings were mostly whimsical or Christmas related. The white marble floors beneath were decorated with silver inlays that looked like snowflakes, and he could see the fire's reflection in its smooth surface.\n\n\"I just want to point out that some of these are stripper names.\" Kisa approached one stocking and tapped it. \"Candy? Star? Or what about this one?\" She pulled the stocking down and held it up for Mike to look at.\n\n\"Crystal. Okay, point made.\" He felt a push as Holly shoved past him and snatched the stocking from Kisa.\n\n\"Don't touch these,\" she warned, then put Crystal's stocking back. \"This is essentially our mail system, and each elf knows where their stocking is. Don't mess with them.\"\n\n\"Sorry, Holly.\" He looked at Kisa. \"Let's keep our hands to ourselves for now.\"\n\nKisa snorted. \"Speak for yourself.\" She moved to his side and leaned into him.\n\n\"Oh, sprinkles.\" Holly hugged herself, rubbing her arms. \"The furnace has been off for too long! Much longer and this whole place will freeze!\"\n\n\"Well, I guess we should head there first.\" He gestured for Holly to lead. Instead, Tink took point and walked across the large room over to a set of golden elevator doors.\n\n\"Tink remember,\" she proclaimed proudly. \"Furnace this way.\"\n\n\"It's fucking cold in here.\" Kisa grabbed Mike's arm and hugged it. \"You're way warmer than this coat I grabbed.\"\n\n\"That's not how heat transfer works,\" he replied. \"I'm wearing layers and so are you.\"\n\n\"Maybe it's a mental thing.\" She closed her eyes and rubbed her cheek against his bicep. \"You warm me from the inside.\"\n\nHolly watched the two of them with her mouth slightly ajar. Mike noticed that the frost that formed in front of her mouth often sparkled as if filled with glitter. What sort of creatures were the elves of the North Pole? Emulating naughty behavior seemed a little silly, and he wondered if they had been created that way.\n\nTink pressed the button outside of the elevator and bounced on the balls of her feet. She wore a tiny pair of fur boots that she had made from a pair of Uggs that Beth had given her.\n\n\"So this place is usually busy?\" he asked.\n\nHolly nodded. \"When Santa leaves to do his deliveries, there's still work to be done. But a huge party starts and we spend weeks celebrating while he does his deliveries while the world is frozen. This place should be full of elves right now.\"\n\n\"Weeks? Is that how long Santa takes to deliver everything?\" Mike asked.\n\n\"At least. We think it might be longer for him, but nobody knows for certain. How do you keep track of time when, well, you can't?\" She smiled sadly. \"It's kind of scary wondering what happened to everyone.\"\n\nMike wrapped his arm around Kisa and squeezed. \"Trust me, I know that feeling all too well.\" He couldn't help but think back to what had happened in the spring, when he had left home and the apocalypse had almost started on his lawn. If not for the entire world being frozen in time right now, he wouldn't have even considered coming. \"So time freezes like this every year? Is it something Santa does himself, or is it some kind of magic artifact?\" He really hoped it was something simple, like a switch that could be flipped, though he supposed finding Santa was a priority.\n\nThe elf shrugged, then hugged herself. \"I've heard rumors both ways, but I try to ignore workplace chatter. It's easy to get sucked into gossip.\"\n\n\"Elves gossip?\" Yuki was standing off to the side, peering down a long hallway. \"Doesn't sound very, well, nice of you.\"\n\nHolly frowned. \"It's not like human gossip. We focus on stories, or things we've heard around the Workshop. It's never meant to be derogatory, if that's what you're getting at.\"\n\n\"Like who's dating who?\" Kisa had one arm around Mike's waist now. When she spoke, Holly jumped as if startled.\n\n\"Wow, I forgot you were even there!\" She shook her head in astonishment.\n\n\"I get that a lot,\" Kisa grumbled. She hooked her fingers in one of Mike's belt loops and pulled. \"You don't forget I'm here, right?\"\n\n\"I never do.\" In fact, Mike could have her stand anywhere in the room while closing his eyes and he would know exactly where she stood. He wasn't sure why she needed the reassurance, but was happy to give it to her. \"You doing okay?\"\n\n\"Place gives me the creeps,\" she said. \"Has a bad vibe. Reminds me of when I was homeless.\"\n\nHe gave her another squeeze. While most of her memories were gone, she did have more than a couple regarding her time on the streets. Sometimes she would have a random one and share it with him. He had spent a few months trying to use what little she knew to piece together who she might have been when she was human, but there had never been enough information.\n\n\"Should the elevator be taking this long?\" Yuki was watching Tink, who was zoning out in front of the doors. Mike wondered if the goblin was still drunk, because she stuck her tongue out at Yuki, let out a belch, and then pulled her goggles over her head before forcing the door open.\n\n\"Well?\" Holly bit her lip, then moved behind Tink.\n\n\"Bad news,\" Tink informed them. \"No power.\" She took a step back and let the doors shut. \"Maybe take stairs?\"\n\n\"Ugh, no!\" Holly grabbed at her braids and pulled them tight. \"Stairs aren't really a thing! The elevator is magic, it only looks like it goes up and down.\"\n\n\"Focus on the solution, then.\" Mike put a calming hand on the elf. \"Is there someway to restore magic to the elevator?\"\n\n\"Maybe, I don't know.\" Holly groaned and leaned against the wall next to the elevator, then slid down until she was sitting. \"I don't know how these things work.\"\n\n\"Let me take a look.\" Yuki sighed and pulled the elevator open, then summoned a handful of foxfire that transformed into an orb. She tossed it into the darkness where it hovered in place, illuminating the shaft. \"I see some summoning runes. With a bit of work, I could make the elevator come here manually. Will take some time, though.\"\n\n\"Sounds like a plan.\" Mike looked at Holly. \"Is there somewhere nearby where we could sit, or maybe warm up? Feel kind of dumb just standing here.\"\n\n\"Don't go too far,\" Yuki cautioned. She had summoned a sword with one of her tarot cards and was using it to scratch something along the side walls of the elevator shaft while Tink held the doors open. \"I want you close by in case something happens.\"\n\n\"I know somewhere.\" Holly gestured to a nearby doorway. \"It's the Cocoa Lounge. It would be a great place to get some hot chocolate. In fact, I wonder...\" She walked toward the double doors and pushed them open. Mike made to follow, but looked at Yuki first.\n\n\"Should be fine,\" Yuki said. \"Just stay in the front area and don't go looking for trouble.\"\n\n\"Loud and clear.\" He walked into the Cocoa Lounge with Kisa right behind him and did a double take. The lounge itself was the bastard child of a hotel bar and a Christmas party. Gaudy decorations were hung from the ceiling with care, and the walls were plastered in Christmas cards.\n\n\"Those are real,\" Holly said, seeing where Mike was looking. \"When they get lost in the mail, they come here. We change them every couple of months.\"\n\n\"Interesting.\" He moved toward the closest wall for a better look. The cards weren't organized in any meaningful way, and they were written in different languages. \"So all these people celebrate Christmas?\"\n\n\"Sort of.\" Holly pointed toward the corners. \"Santa is really big on traditional giving, it's just that Christmas is kind of his thing. If you look up there, we have some Kwanzaa cards as well as Chanukah. It's never meant to be a competition, the staff likes to keep them organized by holiday so we can see them all together and appreciate the spirit of the holiday season.\"\n\nMike squeezed into a booth, then pushed the table away so that he could comfortably fit. Based on Holly's dimensions, he supposed eight elves could sit there. \"If Santa is real, does that mean that the Easter bunny is real?\"\n\n\"A rabbit that poops eggs?\" She shook her head. \"Sounds kind of silly, doesn't it?\"\n\n\"That wasn't an answer,\" Kisa replied.\n\n\"You're right, it wasn't.\" Holly winked and disappeared behind the bar. It sounded like she was rummaging around, then she stood with a smile on her face. \"Aha! The cocoa lines are still warm! I can make you a drink if you'd like.\"\n\n\"Please.\" Mike watched Holly move around behind the bar, then turned his attention to the front window of the lounge. From where he sat, he could see Yuki and Tink working on restoring power to the elevator. If the cocoa lines were still warm, then everyone couldn't have been gone too long, right? \"Holly, does this place have an intercom system?\"\n\n\"We do.\" She sighed and put some mugs on the counter. \"And Tinker is the reason why.\"\n\n\"Oh?\"\n\n\"Yeah. You see, the furnace has an enormously large set of vents that direct heat everywhere at the North Pole. She was doing things in the vents that triggered Naughty Sickness in multiple places at once. We realized that an intercom could have been used as an early warning system.\"\n\nMike chuckled, wondering what sort of trouble the goblin had gotten up to. However, he went back to the idea of an intercom. What if an evacuation had been ordered and Holly missed it? Maybe if they could get to the control booth, they would find some answers.\n\n\"Hey, a jukebox!\" Kisa jumped to her feet and moved toward the jukebox. It was carved out of dark wood and full of small vinyl records. She examined it and started pushing the buttons.\n\n\"Yeah, won't work.\" Holly hung her head. \"The lights are self sustaining for emergencies, but that thing runs on the same magic that the elevator does.\"\n\n\"Are you sure magic isn't just elven for electricity?\" Kisa moved behind the jukebox. \"Shit, never mind. No plug.\"\n\nWhen Kisa swore, Holly dropped the mug she was holding, which shattered on the floor.\n\n\"Oh, fudge!\" Holly scowled at Kisa. \"I'll be back, I need a broom.\"\n\nThe elf disappeared into the kitchen, and Kisa looked at Mike. \"Hey, come check this out.\"\n\n\"Check what out?\" He stood and walked to the jukebox. The names of the songs had been written in perfect penmanship on each button, and it was no surprise that they were all Christmas related.\n\n\"She said it runs on magic.\" Kisa threw him a mischievous look, then grabbed him by the hips and pulled him against her. On her tiptoes, her head was at the base of his sternum as she flattened her body against him, using one of her hands to tease his cock through his pants. \"C'mon, let's see some sparks.\"",
        "He was about to tell her that wasn't necessary, but he was still feeling a little frustrated by having his encounter with Beth interrupted. Focusing his magic into his hand, he held it over the jukebox and closed his eyes.\n\nUnsure how the jukebox would respond, he focused on the idea of transferring energy from his body into the device. As the sparks danced along the edges of the jukebox, his senses expanded and revealed the device's inner workings. It wasn't composed of wires or sensors, but a magical crystal in the middle that had gone dormant.\n\n\"Aha!\" He concentrated, pressing his magic against the crystal and feeling it rev up. Immediately, the jukebox clicked to life, revealing Christmas lights that had been embedded in the wood.\n\n\"Yes!\" Kisa exclaimed, then released Mike and perused the selection. He moved back to the booth and sat down. Out in the lobby, Tink and Yuki seemed to be hotly debating something. The goblin was pointing her hammer at Yuki like a magic wand while Yuki drew glowing sigils in the air that rotated. Tink smashed a couple of the sigils, then analyzed one and nodded profusely. Rolling her eyes, Yuki turned her attention back to the elevator.\n\nThe wooden arm inside the jukebox lifted a record free and placed it on the turnstile of the player. When the needle hit, a familiar tune filled the Cocoa Lounge. It wasn't until he heard the words \"Santa, baby,\" that he recognized the song.\n\nThis version had a modern sound with a steady beat, and Kisa swayed her hips from side to side while looking over her shoulder at Mike.\n\n\"Is the power on?\" Holly appeared behind the counter, a broom in hand.\n\n\"Nah, I started this up.\" He kept his attention on Kisa as she danced to the song. Her lithe body moved beneath her coat as if it floated above her frame. \"Who is singing this? It's really good.\"\n\n\"An elf,\" Holly replied. \"We have an in-house band that records our own versions of the songs that mortals write. Each year, they redo all of them so that we at least hear new versions.\"\n\n\"I see.\" It was hard to imagine such a rich voice coming from someone like Holly, but he knew better than to assume anything when it came to magic. As for re-recording the songs each year, he imagined it was for the best. If the elves had to listen to Christmas songs all the time, the least they could do was change it up.\n\nKisa continued her dance, throwing looks at Mike as she swayed. The song came to an end and the record was replaced. Last Christmas started playing, this version sung by a man.\n\nBehind him, he heard Holly singing along quietly as she cleaned up the broken mug. Kisa was doing some sort of impromptu interpretive ballet to the lyrics, her face twisted up in sadness as she reached for Mike longingly. She danced all around the lounge, nimbly moving around chairs and tables as she used the entire floor like a stage.\n\nWhen the song came to an end, he applauded. Behind him, he heard Holly clapping in approval as well. He looked back to see that she was fidgeting with something under the bar, and steam was rising from a nearby vent.\n\nWhen he looked back at Kisa, she was by the jukebox again. She winked, then chose the next song. There was a loud pop of static electricity when she touched the jukebox, and she shook her hand in response. She contemplated her fingers for a moment, a broad grin crossing her face.\n\nIt was All I Want for Christmas. Holly sat down next to him and handed him a pair of mugs. They were decorated like candy canes and topped with whipped cream and sprinkles.\n\n\"The singer sounds just like Mariah Carey,\" he told her.\n\n\"Oh, this one is her,\" Holly replied. \"It's Mrs. Claus' favorite song, so we leave it untouched.\"\n\nThat explains why I hear it every year. He took the mugs and set Kisa's aside before sipping his own. The flavor was rich and warmed him up immediately.\n\n\"Magic cocoa?\" he asked, holding the mug close so he could take in its scent. It was unlike anything he had ever smelled and reminded him of walking into a chocolate shop.\n\nHolly nodded, her eyes on Kisa. The catgirl had moved toward Mike, allowing her coat to slide from her shoulders onto the floor. She put her hands on his knees and lip synced the words as she gyrated her hips behind her. Kisa leaned forward until her face was inches from his own, then stuck her tongue out and licked some of the cream from the top of his cocoa.\n\nHe smiled, feeling her desire wash over him. Ever since she had become his familiar, their bond had been steadily growing. Not only could he sense her presence, but he could often feel her mood as well. Recently, her arousal had become a tangible thing that floated around in the back of his mind, and he remembered how she had grabbed his cock only minutes ago.\n\nMoving forward, he took her by the hands and spun her around until she faced away from him. Pressing her ass against his leg, she ran her hands up and down his thighs.\n\nKisa spun around and hopped onto him, locking her legs around his waist as she gazed into his eyes.\n\n\"That's so...naughty,\" Holly whispered, her mouth hanging open. Mike couldn't help but notice that she wasn't looking away. The music had acquired a background hum that was almost imperceptible, and the elf's eyes were wide.\n\n\"Yeah it is.\" Kisa wiggled her hips and playfully licked Mike's lips. \"How about it, boss? You got any more cream for me?\"\n\n\"Uh...\" Mike threw a glance at Holly. It wasn't like they were home and could just find somewhere private. This was the North Pole, and they were being watched. And why was the jukebox making that sound? Could record players hum like that?\n\n\"Nah, don't worry about her.\" Kisa pressed her groin against his. \"I think she likes it.\"\n\n\"Kisa.\" He tried to sound stern, but his willpower was fading. Feeling Kisa's soft fur against his skin was always a turn-on, but now she was practically humping him through his clothes. It didn't help that his magic was reacting to her, which meant it was two against one.\n\n\"C'mon, Caretaker. It's Christmas. What's a girl gotta do to get you to fill her stocking?\" She buried her face in his neck and purred.\n\n\"Excuse me.\" Holly's cheeks were bright pink, and tiny crystalline shapes had appeared on her skin. \"I can't see if you stand that way.\"\n\n\"Told you.\" Kisa's breath was hot in his ears. \"I think she wants a show.\"\n\n\"Holly?\" He looked at the elf to try and get a sense of what she actually wanted. Holly had shifted in her seat to get a better view, and was clutching her cocoa mug so tightly that her fingers had turned white. Her lips were slightly parted, and her eyes met his. What if their actions had triggered the Naughty Sickness that she had mentioned earlier? \"I'm...we...do you want us to stop?\"\n\n\"Don't mind me,\" she whispered with wide eyes. \"I'm just...watching.\"\n\n\"Ooh, she likes to watch.\" Kisa was crooning in his ear now. \"Wanna show her how you can fuck me without sitting down? I bet she'd like to see that. And don't tell me she doesn't excite you. I've seen you checking out those tights she's in, made me feel a little possessive is all.\"\n\nMike looked out the window to see Yuki and Tink still standing outside the elevator. Whatever they were doing seemed intensive, and he hoped that he could finish before Tink walked in and demanded to join. The last thing he wanted was for poor Yuki to sit outside waiting while he satisfied the goblin.\n\nHe slid his hands beneath Kisa's shirt, lifting it enough to slide his hands along her sides. Her fur was soft and her body warm. Behind her, the multicolored lights of the jukebox had brightened in intensity as the record started the song over instead of turning it off.\n\n\"Yeah, that's it.\" Kisa's tail twitched behind her as he slid his hand down the front of her stretch capris, the tips of his finger teasing the upper folds of her pussy. \"Let's show her how we do things at home.\"\n\nHis head was buzzing now, and it felt like he was lost in a haze. Kisa licked the side of his neck and nibbled on his ear as he teased her clitoris with nimble fingers. Holly was visible from the corner of his eye, the elf panting like she was running on a treadmill.\n\nThe volume of the jukebox increased, and a blue aura formed around it.\n\nAh, shit. Mike moved toward the jukebox as Kisa pressed herself into his hands. He recognized that blue glow, and when he moved his hand toward the jukebox, the air crackled around his fingertips.\n\nIt was his magic. What he had used to kickstart the jukebox had somehow intensified and was creating some sort of sexual feedback loop. It explained the weird sounds and why Kisa was suddenly all over him. Out of all of the women of the house, his own familiar would be the most susceptible to his magic. In his attempts to activate the crystal, his magic was now being broadcast to anyone nearby who could hear it.\n\nAt least, that was his working theory. His brain was operating on a reduced blood supply on account of the massive hard on he was now sporting.\n\n\"Hey,\" he whispered to Kisa. \"So it looks like my magic is kind of doing a weird thing here, and I just need to--\"\n\nThe jukebox let out a crack as the magical aura turned into a series of sparks that jumped into his outstretched fingertips. His muscles tensed up as the magic washed over him, and he sat Kisa down on the jukebox while pushing her legs apart. She was already pushing her pants down and managed to pull one leg free just as he buried his face in her furry snatch.\n\nHer scent surrounded him, and he lapped from her dripping folds. The skin around her labia had a very thin layer of fur that was nearly invisible against her dark skin, and it tickled the edges of his mouth as he slid his tongue over the top of her clit while using his chin to push her open. The music distorted, slowing until the record came to a stop.\n\n\"Yeesss!\" she hissed, her claws digging into the back of his neck without breaking the skin. \"Oh, god, that feels so good.\"\n\nMike couldn't see Holly, and no longer cared. He heard the occasional gasp behind him, but was riding the wave of his own magical backlash. His hands fit perfectly over the smooth contours of Kisa's ass, and he held her against his face as her legs folded over his shoulders and squeezed. Her shirt rode up, revealing the creme-colored fur of her belly.\n\nThe jukebox sputtered back to life as his magic activated it. The song changed, and when the record spun up, it was a familiar instrumental piece with an electric guitar. He tried to remember the name of the band, but that part of his brain no longer functioned. It had been a long time since he had experienced his own backlash, and he made a mental note not to try and infuse any more enchanted objects with his own magic.\n\n\"Oh, fucking...fuck!\" Kisa squeezed his head, her hands slipping up to the back of his head. Her claws dug into his scalp, but he let the pain fuel him as Kisa came on his face. Her thighs contracted hard as she crushed his head between them. The music was now muffled as he sucked her clitoris into his mouth.\n\nWith each spasm, Kisa scratched him. He winced, but wasn't worried. The wounds were superficial and would heal in a matter of hours. What was on his mind, though, was how full his balls felt. His magic demanded release, and he wasn't about to be denied. Mike pulled his head free and tilted his head back and forth to loosen the muscles.\n\n\"Whew.\" Kisa fanned herself with one hand. \"Wow, that one came out of nowhere, it's almost like--\"\n\nWith a yank, he pulled Kisa down and spun her around so that her torso was lying across the top of the machine. He had already undone his pants, revealing his massively engorged cock. She made a goofy face at him over her shoulder, but he pressed himself into her so suddenly that her right eyelid twitched.\n\nBiting down on her lower lip, Kisa held tight to the jukebox as Mike pounded her from behind. Her tail kept hitting him in the face, so he tucked it under one armpit and resumed his grip on Kisa's waist. She wrapped her legs around him, allowing him a better angle.\n\n\"Yeah, that's my good girl.\" He reached under the back of her shirt and started scratching his nails down her furry back. Kisa moaned, then arched her back for him.\n\n\"I hate that I do that, but it feels so good.\" She purred as he fucked her from behind, her claws leaving gouges in the wood. He used one hand on her hip to keep them connected while the other did long, slow drags down her back. Occasionally, he would move a hand along her side and trace his fingers along the underside of her breast. If he thrust into her deep enough, he could briefly tease her nipples with a fingertop.\n\nMike heard Holly gasp. He turned and saw that she had her legs crossed with a hand pinned between her thighs. Her eyes were closed as she rocked back and forth, whispering \"I won't be naughty, I won't be naughty.\"\n\nThe visual pushed him over the edge. Grabbing onto Kisa's hips, he rammed himself into her so hard that the jukebox rocked beneath them. Her pussy gripped him tight every time he slid out, as if reluctant to release him.\n\n\"Yes, yes!\" Her legs squeezed him so hard that his spine popped. He groaned as he felt that first wave of heat flood his belly, then release in a torrent of sticky cum inside of Kisa's womb. His magic concentrated into a ball, then poured itself into the catgirl.\n\nKisa's ears flattened and she let out a yowl of pleasure, then sank her claws into the jukebox so hard that she ripped some of the paneling off. Sparks shot from her body into the jukebox, and the arm malfunctioned, swinging around hard enough that smoke started rising from beneath it.\n\n\"Shit, shit!\" Mike tried to pull Kisa away from the jukebox, only to fall backward onto his butt when she let go. Still connected together, this resulted in Kisa slamming into him so hard that it triggered a second, much smaller orgasm in him. His legs spasmed as she rocked herself back and forth.\n\n\"Yes, yes...yes...damn!\" Kisa groaned, then looked over her shoulder. \"That one got away.\"\n\nMike said nothing. His cock was still pulsating, filling her with micro-bursts of semen. Holly grunted, and he noticed that her teeth were clenched tight as she shuddered, her whole body going still. The Cocoa Lounge filled with the smell of burnt wood as the jukebox let out a whine, and then the protective glass cracked. Tendrils of smoke rose from the speaker as the lights turned off.\n\n\"You really filled me up.\" Kisa wiggled her ass, then looked over her shoulder at him. \"If I'm gonna wander around the North Pole, I'm not doing it with cum soaked panties.\"\n\nHe nodded, then held his arms out as she dismounted and scooted back until she could sit on his face. Her pussy had taken on the musky scent of his spooge with just a slight hint of ozone. When he buried his tongue inside her, Kisa groaned as she did the same for him, licking his cock clean.\n\nA year ago, the thought of doing such a thing had been foreign to him. However, Kisa absolutely loved doing it, and it wasn't like almost everyone else wasn't already eating his sperm for one reason or another.\n\nIt also didn't hurt that it had taken on a semi-sweet taste. He wasn't sure if that was his own magic or a trait he had taken on from someone else. His spooge shimmered like it had glitter because of one of the times he had come inside of a fairy, so why not an improved flavor?\n\nKisa's rough tongue had him clean pretty fast, so she was content to suckle on his cock and moan as he ran his tongue along her inner folds in an attempt to get it all. He ran his fingers over her pubes, stroking them lovingly as he did his best to clean her insides. Her juices were mixed with his own, and the taste of them made him feel like he was floating.\n\n\"They're coming.\" Holly was looking outside as she wiped her hand off on a napkin.\n\n\"We already did.\" Kisa giggled as she squirmed off of Mike and pulled her leggings back up. Mike stood and did his best to adjust his clothes. Holly handed him a napkin.\n\n\"Your face is all shiny,\" the elf told him in awe.\n\n\"Thanks.\" He wiped off his lips and chin, then crumpled the napkin up and threw it in the nearby trash just as the door of the Cocoa Lounge opened. Yuki held the door while Tink strolled in with a smug look on her face.\n\n\"Elevator fixed!\" She declared. \"Tink fix anything!\" Her eyes were still a bit glazed over, but it was clear she was mostly sober now.\n\n\"Hey.\" Yuki looked at Mike, then Kisa. Her nose wrinkled as she sniffed the air, then rolled her eyes in exasperation. \"Seriously? You didn't even make it an hour before fucking at the North Pole? And in front of poor Holly, no less.\"\n\n\"In my defense, it was kind of an accident.\" He gestured at the jukebox. \"Who would have guessed that using my magic to activate the crystal inside would have caused some weird reaction that affected everyone in here?\"\n\nYuki narrowed her eyes. \"Uh huh. Seems like we can't go anywhere without you wanting to stick some part of you inside of something or someone else. We should probably put a warning label on you.\"\n\n\"To be fair, Holly didn't try to stop us.\" Kisa grinned, then winked at the elf. \"I think she liked it.\"\n\nHolly's face turned red as she coughed into her hand and slid out of her seat. \"I just wanted to make cocoa for everyone while we waited.\"\n\n\"Cocoa!\" Tink pushed past Yuki and stormed up to the bar. \"Tink like it hot, with plenty of whipped cream!\"\n\n\"We're short on cream right now,\" Kisa whispered with a giggle. Mike swatted at her playfully, not wanting Tink to overhear. It wasn't so much that she would get jealous, but that she would demand a turn and he didn't think now was a good time for it.\n\n\"Anyway, we can leave now.\" Yuki crossed her arms. \"So let's see about starting that furnace back up, shall we?\"\n\nHolly nodded, then led the way. Mike picked up what was left of his hot cocoa and drained it. It was the perfect temperature, leaving a blazing trail of warmth all the way down into his belly. Kisa offered her cup to Tink, and the goblin frowned.\n\n\"All the cream is gone,\" she complained before drinking it. \"Stupid cat.\"\n\n\"I'm not even mad.\" Kisa chuckled, then left the cocoa lounge.\n\nOnce everyone was out by the elevator door, Yuki had them all get inside. On the back wall of the car were a pair of glowing runes.\n\n\"We can power it with magic,\" she said. \"I would have suggested you give it a try, but now I'm afraid of what would happen.\"\n\nMike nodded. Without a doubt, the last thing he needed to do was trigger an accidental orgy inside the elevator.\n\nYuki put her hands on the runes and closed her eyes. Motes of light hovered around her hands as the door shut. Tink pushed a button near the bottom, and the elevator hummed as it descended.\n\n\"So how big is this place?\" Mike asked Holly. \"And how does it not get spotted?\"\n\nThe elf shrugged. \"Nobody really knows how big it is. From the outside, it looks like rubble ice, and it's still way bigger on the inside. As for why it hasn't been discovered, nobody can come near without the magic chasing them off. Only those who are invited can breach the exterior, but a shortcut like the fireplace network can bring you here as well.\"\n\nThat sounded familiar. Mike's home was similar, only his front yard wasn't the arctic north. When people came knocking for trouble, he usually had to chase them off his lawn.\n\n\"But you're at the North Pole,\" Kisa argued. \"People have specifically come to the North Pole before.\"\n\n\"Magnetic or true?\" Holly grinned. \"And what if I told you that neither of those places was at the top of the world? Kind of hard to pin a place down when it exists on a large chunk of ice, isn't it? It's rare, but sometimes humans get close. We almost had an icebreaker ship breach the perimeter one summer, it was very exciting.\"\n\n\"Wait, a ship?\" Kisa's hair poofed out. \"Is this whole place...just floating on ice? Like, there's nothing but ocean beneath us? We could sink?\"",
        "The elf put a calming hand on Kisa's shoulder. \"Relax. This place is special. The ice outside is magical, and wouldn't melt even on the hottest day. And floating really isn't the right term for it. If you dig into the ice, you'll just keep digging down and down without ever reaching water.\"\n\n\"Almost like it's a separate plane.\" Yuki nodded. \"Think of it like the tower-world. It's a separate place entirely, but has been plugged into our world.\"\n\nKisa crossed her arms and glowered. \"Doesn't make me hate it any less.\"\n\nThe elevator dinged at intervals as it continued its descent. Eventually, it stopped and the doors opened, revealing a chamber full of pipes and vents. At the other side of the room was a gigantic furnace surrounded by abandoned tools on the ground as if they had been dropped when work stopped. The group stepped out of the elevator.\n\n\"Tink come, save day!\" The goblin smacked her hammer on an abandoned cart. The resultant echo made Mike wince.\n\n\"Tinker!\" Holly clapped a hand over the goblin's mouth. \"Someone might hear you!\"\n\n\"Isn't that the point?\" Yuki walked forward, her eyes on the ceiling. \"Might help you figure out where everybody went.\" She took a few steps into the room, then turned to face the elf. \"In fact, what are you worried about, exactly? You said that everyone vanished and you were afraid, but what exactly are you afraid of? It isn't like Santa eats elves or something, is it?\"\n\nHolly opened her mouth to respond, but a sharp metallic ping rang out against a nearby wall. In a moment, Yuki summoned a cluster of icicles and sent them across the room like daggers, pinning a small figure to the wall by the fabric of his overalls. A pair of earmuffs fell off his head and slid across the ground.\n\n\"Allie!\" Holly ran across the room to the trembling figure. It was an elven man with white skin and a massive wrench clutched in his right hand. His eyes were wide as he stared at the group, his gaze lingering on Tink the longest.\n\n\"Holly? Is that you?\" His voice wavered as he struggled to free himself from the ice. \"What are you doing here?\"\n\n\"What do you mean, what am I doing here?\" Holly moved to his side and helped him yank the icicles free. \"Everyone, this is Alabaster. He's the head of security and maintenance here at the Workshop.\"\n\n\"I'm not the head of anything right now!\" Alabaster grumbled as he used his wrench to smash an icicle and free himself. He brushed some dirt off his overalls and then adjusted his hat, which had become crooked. His voice had a thick grumble to it. \"As for what you're doing here, I thought maybe you were with the others.\"\n\n\"I'm not. I was out on assignment. Allie, what happened here?\" Holly took Alabaster's hand in her own. \"I'm really scared!\"\n\n\"As you should be. Do you still have your earmuffs?\"\n\nHolly nodded, then pulled them out of the pouch on her belt. \"I do.\"\n\n\"Good. Keep them ready at all times.\" The elf looked at the others as he moved to pick up his own. \"You all probably won't be affected. If you hear that intercom click on, you make sure to get those over her ears.\"\n\n\"You aren't exactly telling us what's going on.\" Yuki's features had gone hard. \"Or what we're up against.\"\n\n\"I'm not entirely sure,\" he grumbled. \"I happened to be wearing my earmuffs because I was using the forge to repair one of Santa's runners for next year. I needed something from storage, so I didn't bother taking them off. It's a great way to avoid meaningless conversation.\n\n\"Anyway, I came out of storage and see everyone else staring at the speaker like it was the big man himself. I was about to take off my earmuffs to hear what was going on, but their eyes!\" Alabaster shivered. \"It was the early symptoms of severe Naughty Sickness. They dropped everything right where they stood, and started shutting things down. There were a few others like me wearing earmuffs, and they were held down, their earmuffs removed. I hid myself away, nobody knows the Workshop like I do. When they shut the furnace down, I came here to see why, but that's when the power went off.\"\n\n\"Santa's missing, too.\" Holly's eyes were full of tears. \"The world is caught in the time freeze, so it must have happened right before he left.\"\n\n\"Does Santa have any enemies?\" Mike thought it was a perfectly reasonable question, and didn't expect both of the elves to laugh.\n\n\"Boy, does he ever!\" Alabaster chuckled, then his face became serious. \"Several, actually. He's got a good rep with you humans, but he had to step on a lot of toes to get to where he is today.\"\n\nBehind them, the elevator dinged. Mike turned around to see that the dial above the elevator was now moving.\n\n\"That...shouldn't be doing that,\" Yuki said. \"Unless somebody called it.\"\n\n\"Nobody should know that we're down here, right?\" Mike looked at the others, then Alabaster.\n\nThe elf shrugged. \"The power's out, so any surveillance would be magical.\"\n\nThe dial moved all the way to the right, then stopped at a cursive L for lobby.\n\n\"There are dozens of stops on this one,\" Holly explained. \"Maybe they spotted the alterations, but have no idea where we are?\"\n\n\"I think we're going to find out,\" Mike replied as the dial began moving. It rotated through the other floors without stopping, and was nearly on their floor when his whole body filled with icy dread.\n\n\"Everyone! Hide!\" He grabbed Tink and Kisa by the hand and dragged them away from the elevator. Alabaster and Holly put on their earmuffs as they squeezed between a couple of pipes. Thinking Alabaster knew best, he helped Tink and Kisa squeeze into the same space.\n\nHowever, he couldn't fit. Everywhere in the Workshop had been built for someone smaller, and he couldn't think of anywhere to go.\n\n\"What are you doing?\" Mike hissed at Yuki. She had summoned her magic and was using it to build a wall of ice in front of the elevator doors.\n\n\"I should be asking you the same thing!\" She shot back. He turned around and realized that the door to the furnace was big enough that both of them could easily fit inside. It seemed unlikely that someone would casually start it back up, but it also meant that nobody would look for them inside. \"C'mon!\"\n\nHe ran toward the furnace, and was happy to hear Yuki right behind him. The elevator dinged on their floor, and there was a scraping sound as the doors tried to open. He and Yuki were inside the furnace now, and he saw that the walls were covered in large, silver filters. Cold air blasted him from every direction as they ran into the darkness.\n\nBehind them, there was a sound like someone taking in a deep breath, and Mike looked back to see the ice wall explode.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nWelcome to the North Pole, monster lovers!\n\nI hope you enjoyed this chapter, I have been having an absolute blast writing book 6 so far. The sheer volume of mythology has been a real treat to dive into, and it doesn't make you feel all shitty afterward, like eggnog.\n\nStay tuned for next chapter, because things are about to get frosty. As for Lily, Death, and Tick Tock, certainly they won't get into any trouble...right?\n\nMost important of all, don't forget to do something kind for yourself. You matter, and you deserve it.\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "kitsune",
        "elf",
        "catgirl",
        "voyeurism",
        "juke box hero",
        "filling kisas stocking",
        "some hot fucking cocoa",
        "holiday hijinks flashback",
        "all i want for christmas is a new playlist"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-80"
}