{
    "title": "Two Hundred Dollars Ch. 11",
    "pages": [
        "155 Dollars\n\nOn Tuesday afternoon, October 23, they both arrived home a little earlier than usual. With Kent's group project entirely finished and Bailey's subjects cancelling all labs during midterms, neither had a need to stay on campus and both needed to study.\n\nGiven all that, Kent didn't find it surprising that Bailey didn't come by for a spanking the moment she came home. She nervously walked past his door, looking slightly pale, gave him a brief nod and went to her bedroom. As he studied from his notes, he heard her opening her backpack and thumping books on her desk.\n\nHours passed as he studied, intent on getting everything into his head for a Calculus midterm exam the prof had moved up to Thursday.\n\nI've still got Physics on Friday, and someone scheduled Chem on a Saturday morning.\n\nKent let out a breath in frustration, then closed his eyes and tried to calm himself with several deeper, more aware breaths.\n\n\"Hey,\" Bailey said, and Kent opened his eyes to see her at the door.\n\n\"Hey,\" he sighed wearily.\n\n\"Tough go with the studying?\" she asked.\n\n\"Three exams coming up,\" Kent said. \"Same as you.\"\n\n\"Four,\" she pointed out, \"If you count Ethics on Monday.\"\n\n\"No one counts Ethics,\" Kent pointed out. \"How many ways can you write 'don't be an asshole'? And Monday is so far away.\"\n\n\"I'm feeling it, too,\" Bailey admitted.\n\nKent looked at his house mate carefully and noted how pale her skin had grown. Bailey didn't seem to notice how he observed her.\n\n\"Do you think... um,\" she jerked her head toward the white board, \"it might help?\"\n\n\"Spanking you?\"\n\n\"Yes,\" she rolled her eyes, \"do you think spanking me might help?\"\n\n\"Might,\" Kent nodded.\n\n\"Worth a try, right?\" Bailey's voice developed a slight tremor. \"Just over top?\"\n\nKent nodded and watched Bailey uncap the marker to make two tick marks.\n\n\"Twenty over top?\" his voice betrayed surprise.\n\n\"Just go at it,\" she gave him a jerky nod. \"All on one side or spread it around. I don't care.\"\n\nShe walked past him and took a position bending over his bed, her breasts touching the sheets and her denim clad rear sticking up slightly in the air when she arched her back.\n\n\"Ready?\"\n\n\"Oh, yeah,\" she breathed.\n\nKent struck her right cheek with considerable energy, his hand slapping off the denim and shaking her body, pushing her chest up along the sheets.\n\n\"One,\" she replied, pushing her hips back to where they'd started.\n\nThe moment she set herself again, Kent struck.\n\n\"Two.\"\n\nEach time he struck her, her body slid forward, forcing her to reposition herself so her ass stuck out toward him. His hand only struck her right cheek, heaping all of the pain onto one spot on the lower outside part of her cheek.\n\n\"Ten,\" she said at long last, and stood up. \"This isn't working.\"\n\n\"You want to stop?\" Kent offered immediately.\n\n=============================\n\n\"You want to stop?\" Bailey heard his offer.\n\n\"No,\" she said immediately, feeling her body shaking inside and hoping the trembling didn't show through too obviously.\n\nI'm not horny, she noted of herself, this isn't making me wet and that's not why I came here. I don't think Kent's aroused either.\n\nShe took a couple of deep breaths and looked around his room hungrily, but couldn't find anything right for her needs. She tried to ignore the curious look she got from Kent.\n\n\"Okay,\" she decided, \"this will have to do.\"\n\nBailey got up on the bed and knelt facing to his left so he could still use his right hand. She sat back on her heels and then bent her upper body over until her chest lay upon the bed. She then braced her hands against the wall and locked her arms straight. Leaned over this way, with her hips bent way more than ninety degrees, she knew it left her ass sticking out and all the muscles of her legs pulled taut.\n\nI'm sure I'd look really pretty if I were naked, she thought, but I just want the muscle tension right now. The other way, there was just too much slack -- too much give.\n\n\"Alright,\" she said with a hard exhalation, \"Now try.\"\n\nHe laid his hand on her left cheek, and she squeezed her cheeks together as hard as she could, tensing her entire body.\n\nThe first spanking came through, letting out a sharp snap that echoed through the room.\n\n\"Kent,\" she spoke a warning through clenched teeth.\n\n\"Yeah?\"\n\n\"Harder,\" she insisted, firmly shutting her eyes.\n\nA silent pause from Kent as he held her left cheek cupped in his hand. Then his hand came back, whistled through the air, and struck her. Bailey had tensed up in preparation, bracing her body against the wall as well as locking up her legs and abdominal muscles.\n\nThe shudder that passed through her unforgiving body made it all worth it.\n\n\"That's it,\" she whispered in relief, and let out a sigh before adding, \"Eleven.\"\n\nKent had got the gist of her needs at this point, and hammered her again.\n\n\"Twelve,\" she moaned with relief.\n\nThirteen and fourteen followed immediately, and she counted them off.\n\nI'm going to be sore later, she thought, but oh, god.\n\nWith every strike, she felt the stress of her upcoming exams melting away, felt her lungs expanding to their full potential. Blissfully, she put her face down into the thick blankets and let Kent pound away her worries, letting her throat moan in appreciation whenever her body said it felt right.\n\n\"Uh, Bailey?\"\n\nShe turned her head, \"Yeah?\"\n\n\"We're at twenty?\" he offered.\n\n\"Oh,\" she shook herself. \"I, um, what was the last number I said?\"\n\n\"Sixteen,\" Kent said. \"After that, you were just mumbling. The bed kind of muffled you.\"\n\nShe didn't move, just turned her head away from him.\n\nIf he doesn't figure this out, I'll turn around and smack him.\n\nBut Kent did figure it out, almost immediately smacked her left cheek again.\n\n\"Seventeen,\" she said, tightening up her cheeks when she realized the soothing punishment he'd laid on her had caused her to relax.\n\nHard on the heels of seventeen came two more.\n\n\"Eighteen, nineteen,\" she muttered.\n\n\"Last one,\" he warned.\n\nShe wiggled her hips at him in encouragement and braced herself.\n\nHe cracked one last one -- off her right cheek by way of surprise -- and she groaned in relief.\n\n\"Yes,\" she complimented him. \"Twenty.\"\n\nBailey rolled over on her back and looked up at the ceiling.\n\n\"Ow,\" she said quietly.\n\n\"That was a lot of spanking,\" Kent felt it necessary to point out.\n\nBailey took a deep breath, letting him watch her through her t-shirt. She hadn't worn a bra and found herself both hoping and not hoping that her nipples left an impression Kent could see.\n\nShe heard Kent take a deep breath, too, and looked over at him as he sat back in his chair and put his feet up on the bed next to hers.\n\n\"Feel better?\" she asked, tainting her voice with sarcasm.\n\n\"Yeah, actually,\" he said. \"Thanks.\"\n\n\"Your money,\" she shrugged. \"It better do something for you.\"\n\nKent nodded, sweeping a few stray strands of dark hair back from his face.\n\n\"But I have to get back to work,\" Bailey bounced out of his bed. \"See ya tomorrow, probably.\"\n\n\"Right.\"\n\n\"Ow,\" she said again as she left, gently touching her rear. \"Hope I can sit down.\"\n\n=============================\n\nAs Wednesday rolled through, eating his time up with classes, Kent felt the stress building up inside him again.\n\nI wonder if spanking Bailey has become an addiction, he bit the corner of his lip thoughtfully, like I can't deal with life if I don't get to smack her ass occasionally?\n\nThe completely non-sexual need to do so kept popping into his head, the muscle memory causing him to flex the fingers of his right hand.\n\nBack home, Bailey stuck her head out into the hallway the moment he came down the stairs.\n\n\"Hey,\" she said urgently, \"A quick one before Carson gets back?\"\n\nKent, panting from the cold air outside, nodded without hesitation. Warmer and moving faster, Bailey got to his bedroom before he did and made two loud, thumping tick marks on the white board. She came out through the doorway, sliding past him as he went in.\n\n\"Huh?\"\n\n\"My room, this time?\" she asked.\n\n\"Positioning is always up to you,\" he reminded her.\n\n\"Right,\" she agreed and turned her back to walk away.\n\nIt only took him a moment to shed his backpack and heavy, winter clothing -- it had grown cold over the last day or two -- and he caught up to her in her room.\n\nHe found her already waiting, bent over her desk at a funny angle. Sure, her ass was still up in air, but she'd laid her body out sideways, along the front edge desk so her left hip butted up against the edge.\n\n\"You know,\" he said. \"I can only really get your right side when you're like this.\"\n\nBailey shrugged, let out a flirtatious squeak, and turned her head away from him.\n\n\"Twenty over top?\" he confirmed.\n\n\"Mm-hm.\"\n\nThe only place she'd left available for him to stand was the spot just behind her left cheek, next to the desk. From there, he could get her right cheek with his right hand, but had no way to really get the left cheek unless he climbed up on the desk.\n\nKent placed his hand on her right cheek, \"Ready?\"\n\n\"Spank me, already,\" she jerked her chin at the bedroom door, which he'd left open. \"Before we get interrupted.\"\n\n\"Alright.\"\n\nHe remembered the day before, specifically the part where they'd both discovered the stress relieving power of the good, hard pounding he could deliver when she kept her thick denim on. His first spanking cracked off her cheek, hard and deep.\n\n\"That's it,\" Bailey said with a deep, almost meditation-like breath. She set her body back in place. \"One.\"\n\nThe next one cracked off her rear, even lower.\n\n\"Let it out,\" she said, \"Two.\"\n\nHe hit her low again.\n\n\"Three,\" she breathed.\n\n\"How are you going to study without sitting down?\" he asked.\n\n\"That's my- Ah!\" Bailey shouted, as he interrupted her sentence with another swipe.\n\nShe took another relaxing breath and added, \"Four. And that's my problem.\"\n\nKent pile three more hard slaps to her seat, one right after the other, forcing her body to lurch forward farther and farther with each one, not giving her time to reset.\n\n\"Whoo!\" air whooshed out of Bailey's lungs. \"Five, six and seven.\"\n\nHe gave her a small break and then laid three more on the exact same spot.\n\n\"Christ!\" she protested. \"Eight, nine and ten.\"\n\nBailey stood up at that point and placed her right hand over the sore location he'd just hammered.\n\nKent watched her for a moment before speaking, \"Sure you want to do two sets?\"\n\n\"I'm not backing down,\" Bailey turned to stare at him indignantly, her hands on her hips. \"I said I'd do two.\"\n\nHolding his hands up defensively, Kent moved back a half step, only to have Bailey take a full step toward him, so their bodies almost touched.\n\nGlaring right into his eyes, she spoke, \"Undo my jeans.\"\n\n\"What?\"\n\nBailey slowed her voice down, \"Take off my jeans, please.\"\n\nWith a quizzically raised eyebrow, Kent went down on one knee. Based on his experience with her extremely tight pants, he knew the button would require concerted effort. She sucked in her stomach so he could pop the button through the eye, then relaxed as he undid the zipper.\n\n\"No panties,\" he blurted out the moment the zipper came open.\n\n\"Yeah,\" she said. \"Take my pants off already.\"\n\nShe could pretend to indignation all she wanted, but Kent could hear the tremor in her voice. He gently took hold of the waist band of her jeans and slowly pulled her pants down to the floor. Her pussy, right at his eye level, looked as neatly trimmed as ever. He'd just never had such a clear and close up look at it.\n\nI feel like I should do something down here, he thought, but that's not the deal right now.\n\n\"Enough staring,\" she said, and turned her back on him to lay herself out over the desk again, her thighs tightly together.\n\n\"Four more,\" Kent warned.\n\n\"Of course,\" she replied.\n\nHer cheek felt warm on his hand and he heard her sigh when she felt the soothing coolness of his palm touching the hardest struck part of her ass.\n\n\"Same spot, huh?\"\n\n\"My dollar,\" he chided her.\n\nBailey seemed to gulp, but set herself rigidly in anticipation.\n\nThe sensation of striking bare flesh always felt surprising on the first strike. The loud snap and the undulation of the flesh made all the difference.\n\n\"Ooh!\" Bailey cried out. \"Eleven.\"\n\nHe struck again.\n\n\"Christ! Twelve!\"\n\nKent watched her writhe, the muscles in her ass and thighs twitching in the most mesmerizing pattern.\n\n\"I could watch you all day,\" he said.\n\n\"Hmph,\" she turned her head to stare at him and clenched her cheeks together. \"It's not a show. At least not this time.\"\n\n\"True story,\" he admitted.\n\nShe turned away again and he slapped her cheek, higher this time in consideration of how red her seat had grown.\n\n\"Ah!\" she sighed. \"Thirteen.\"\n\nKent cracked the last one low again, eliciting a delightful hiss, leaking out through her teeth.\n\n\"Fourteen,\" Bailey remarked, her voice gone business like as she rubbed her cheek.\n\n\"That's pretty amazing,\" Kent pointed out.\n\n\"What's that?\"\n\n\"One white cheek, one red.\"\n\nBailey stood and turned to look at herself in the mirror. \"Huh. How about that, eh?\"\n\nStanding next to each other, they took a moment to admire her ass before she shooed him away.\n\n\"Have to get back to studying now,\" she said. \"You know how it is, right?\"\n\n\"Totally,\" Kent agreed, sketched a vaguely chivalrous bow, and left the room, saying, \"See you tomorrow.\"\n\n=============================\n\nBailey locked the door behind Kent and entirely skipped out on getting dressed. Instead, she went to the closet off the end of her desk and retrieved her phone from where she'd jammed it in a pile of her clothes. She peeled a piece of black electrical off the back of it, uncovering the little white light that let people know you were recording a video of them.\n\nChecking the screen, she touched the stop icon and confirmed that it had recorded almost six minutes of continuous video.\n\nShe sat down slowly, slouching as far down in her chair as she could so the sorest parts of her cheeks hung in the air in front of the chair's edge, and started playing back the video.\n\nThe first minute or so looked upon a boring empty room, so she skipped ahead until she came back in with Kent trailing. Their playful banter came through tinny and quiet as they got themselves in place.\n\nFor the first time, Bailey could see the expression on Kent's face when he spanked her. The look of focused concentration took her by surprise, his eagle eyes narrowing as he caressed her cheek and then started striking her.\n\nBailey pushed her finger down between her lips, watching her own facial expression in the corner of the video as Kent whacked her ass again and again. The little banter as he threatened to make it hard for her sit down sounded delicious in the replay.\n\nHere comes the good part, she thought, stroking herself but trying to hold off her orgasm until the right moment.\n\nShe watched herself stand up, turn around and face Kent. In the video, both of their heads were out of frame, but her body from the small of her back down remained clearly visible. Around her, she watched Kent kneel down.\n\nI hadn't thought he would kneel, she thought, pushing down hard on her clitoris, but he did.\n\nIn the video, she watched her body trembling with anticipation, a little tremor that Kent probably hadn't even noticed.\n\n\"No panties,\" she heard him remark, followed by her shaking voice telling him to finish stripping her.\n\nShe breathed out softly, watching as he pulled her pants off, baring her ass to the camera and the front of her body to him.\n\nHe was staring right at my...\n\nOn the recording, she heard herself make some snarky remark before turning around to briefly show her shadow darkened triangle of hair to the camera before the desk obscured it.\n\nFinally, they reached the high pitched, bare assed spankings for which she'd waited.\n\nStroking her clit hard with each echoing snap that he bounced off her cheek, Bailey brought herself to the edge. When the last one landed, she jammed three fingers down, pushing them right to the edge of her vagina, so she could feel it pulsing as she came.\n\nPanting, she let her orgasm expire against her fingers.\n\nA lot of fluid, she noted, withdrawing her fingers and seeing how they glistened.\n\nShe found a tissue and wiped them dry.\n\nOnly once she'd satisfied herself she wouldn't soil her phone, she moved the video file to her cloud-safe folder and then re-enabled Wi-Fi.\n\nNow, she thought, back to studying.\n\nAt the back of her mind, however, she lay her plans for the following day.\n\nAll things considered, it'll be my last chance until at least Halloween.\n\n=============================\n\nKent felt he'd fried the interior of his skull before he'd even walked into his Calculus exam at 6:30 Thursday evening.\n\nOne hour, thirty minutes, he told himself, just get me through this, stupid brain, and you can forget everything about integrals for the next two months.\n\nHe'd never felt an affinity for the subject, nor imagined any real use for it. Like so many things in University, he viewed it as a means to an end. It also counted as the first of three midterms in as many days. If they meant him to keep the knowledge around, he surmised, they wouldn't have crammed so many tests together.\n\nNevertheless, he found his faculties up to the task. One memorized formula after another poured forth through his mechanical pencil onto the paper before him. Triple integrals became doubles, and singles. He always remembered to add the constant and, after seventy-five faintly sweaty minutes, he had completed every question.\n\nThe last fifteen minutes Kent put to productive use relentlessly checking over his work, making sure he'd read every question correctly and he hadn't added two and three to get six or eight because his brain had gotten itself stuck in multiplication or exponent mode.\n\nBy the end it looked good and he sat back with a breath of relief as a tone went off.\n\n\"Two minutes remaining,\" a teaching assistant called out from the front of the room.\n\nKent found his mind had burnt out by that point, his glazed eyes washing over his answers in a manner sheerly perfunctory. While enduring a vague sensation of having his head float off his body, he heard the final buzzer go off.\n\n\"Pencils down,\" came the professor's voice. \"Make sure your name and student number is on your exam.\"\n\nAlready, the marching footsteps of the teaching assistants had started, snatching tests off desks. With no more frantic scribbling to do, no more thoughts inside his head, no memory of even one formula he had committed to memory the night before, Kent had nothing to append to the stapled sheets in front of him and relinquished them easily.\n\nAs he stood up to leave, his phone vibrated in his pocket. Figuring it could wait a moment, he packed up his belongings, put on his jacket, tucked his gloves under his arm and left the exam room before he bothered grabbing his phone.\n\nThe text message had come from Bailey, which struck him as odd.\n\nWe don't generally communicate via text, he thought, remembering how he'd specifically avoided using it when she'd gone away. That's not our thing.\n\nUpon entering his PIN, he realized she hadn't sent any text after all, but a picture of his whiteboard with a pair of tick marks in the box.\n\nBold, but not too surprising, he thought, nice of her to wait until I'd finished my exam, though.",
        "The message did serve to put a bounce in his step, and also to utterly flush thoughts of Calculus from his mind.\n\nYou have two more midterms, a voice in his head mentioned, but spanking her will probably help you in that department anyway.\n\nWhile Kent considered how he might respond -- everything from a high-five emoji to a picture of his hand -- his phone binked at him again.\n\nHe hadn't locked it, so the second picture came up right underneath the first. Kent squinted at the dark image of metal and wood.\n\nWhat is that supposed to be?\n\nThe metal surface in the middle of the frame looked like brass, with numerals embossed into it. The wood surrounding the brass ran towards dark brown, but looked upon closer inspection like some kind of plastic imitation of wood.\n\nKent tapped on the pictures to expand it and, once the bright white of the messaging app had disappeared, could read it more clearly. The numerals upon the brass plate read \"147\".\n\nHe swore he could feel his pupils dilate in shock as he recognized the shape of the plate and the grain of the wood.\n\nShe's in the Life-Sci library, he realized, top floor in the quiet study area.\n\nKent gulped.\n\nAnd she's waiting for me. What was the rule? She always gets to pick the position?\n\n=============================\n\nBailey waited amidst her pile of books and spread out sheets of paper. She really did have studying to do and the library provided a place to study without distraction. One could, even in modern times, do without the Internet for short periods of time. With nothing to do but study, she studied, and waited.\n\nFinally, her phone vibrated, migrating slowly across the surface of the enclosed study cubicle, for the place she had chosen had come directly from her nightmare. While the study hall didn't extend to infinity as her sleeping brain had made it out, it still ran dozens of cubicles in every direction from the corner she had picked. She'd chosen a place far from the entrance -- and far from any security camera. No one at all had come back here for over half an hour.\n\nThe cubicles themselves, desks with high walls on three sides and a shelf overhead, had been arranged much like in her nightmare: staggered to prevent any long lines of sight. When she'd dreamt it, the layout had befuddled her attempts to find Kent. The designers had clearly intended to maximize privacy, minimize distraction and cut down on sound transmission.\n\nInadvertently, they hit all the high points for my purposes, too.\n\nBailey touched her phone to wake it back up, entered her PIN, and saw Kent's reply.\n\nShe smirked at the high-five emoji and immediately replied.\n\n=============================\n\nAs he entered the library, Kent heard his phone vibrate again. Checking his texts, he raised his eyebrows when he saw that Bailey had responded to him with an emoji of a book.\n\nShe's studying? he wondered. What the hell is that supposed to mean?\n\nShrugging mentally, he started climbing stairs. Mentally exhausted from the exam, he found the steps taxing as well. He reached the third floor a little weary, but glad to find the place quiet.\n\nNow the search.\n\nHe spotted the numbered plates on the cubicles easily enough, and moved along the nearest column, reading off the digits.\n\n\"11\", \"23\", \"47\"...\n\nHe kept moving until he saw a row that started with \"148\". If he had it right, that meant that \"147\" rested along the farthest wall of the previous row.\n\nZigzagging stealthily through the staggered wooden boxes of the cubicles, he made his way toward what he hoped would be Bailey's hiding place.\n\n\"Hey,\" he said as he reached the darkened corner of the library. \"Are you actually studying?\"\n\nBailey stood up and nodded, \"Got two exams tomorrow.\"\n\n\"So, uh?\"\n\n\"I'm pretty sure no one is up here,\" she whispered. \"I haven't heard anyone for at least a half hour, and I walked the whole place when I got here.\"\n\n\"Right,\" Kent looked around warily, but he had to admit that she'd chosen a good spot with zero sight lines in any direction.\n\n\"We'll just do them one at a time, though,\" Bailey warned, \"So we can stop if it sounds like anyone is here. Then we can finish them at home if we have to.\"\n\nKent nodded nervously, \"How do you want it?\"\n\n\"Bare,\" she said, \"But if you use your hand it'll be too loud.\"\n\nWith that, Bailey firmly handed him a French text book.\n\n\"You're taking French?\" he asked.\n\n\"No, it's from first year,\" she replied. \"But it's the right size.\"\n\nShe'd handed him a hard cover textbook about an inch thick. Heavy enough it wouldn't sound too loud -- probably -- but light enough he could swing it.\n\n\"I'll need to use both hands, I guess?\" Kent wondered aloud as he examining the unusually wide book.\n\n\"Yeah, sure,\" she shrugged as she turned her back on him and unbuttoned her jeans. \"Ready?\"\n\n\"Ready,\" he confirmed.\n\nBailey grabbed the waistband of her jeans and yanked them down past her cheeks, taking the panties with them in one swoop, and stuck her cheeks out in his direction.\n\nHolding the book in both hands, he swung it and struck her left cheek as quickly as he could, not even paying attention to precisely where book met ass.\n\nIn a flash, Bailey had her pants back in place, though the button remained undone.\n\nWarily, the two of them listened for any sound from the rest of the floor.\n\n\"One,\" Bailey whispered, and looked over her shoulder at him.\n\nKent nodded and she pulled her pants down again. He took a moment to put a little more thought into it. With her jeans pulled down just far enough to let him spank her, the tight waistband kept her thighs close together. On top of that, she'd given him a book large enough that he could easily strike both of her cheeks. With all that in mind, he used the book to strike her square across the lowest part of both sides.\n\n\"Two,\" she hissed and yanked her pants back up. \"That was low.\"\n\n\"How long you plan to sit here?\" he smirked in reply.\n\nShe grumbled, but didn't truly protest. The pause that followed lasted perhaps two racing heartbeats before she pulled her jeans down again. Kent reached across her body and laid his third strike hard on her right cheek, surprising her a bit so she lost her balance.\n\n\"Three,\" Bailey had her pants on again.\n\nThey waited longer this time, as they both listened for the slightest sound from anywhere in the library.\n\nWhat would happen if someone caught us anyway? Kent wondered. Besides, probably, getting thrown out of the library?\n\nHe put that aside when he saw Bailey leaning over again and dropping her pants. Unsatisfied with the redness of her cheeks, Kent turned up the power a little and laid a hard strike across both of her cheeks.\n\nBailey had to brace herself with one hand against the desk to keep from falling over. Only after she had recovered her balance did she cover her flesh again.\n\n\"Four,\" she said.\n\nShe turned to look at Kent, the front of her jeans still unzipped to reveal one of her blue pairs of panties, and whispered. \"I don't think anyone is up here.\"\n\n\"Right,\" he agreed, watching her eyes as she checked every line of sight into their little hiding place.\n\n\"So just use your hand for the rest,\" she said, taking the book out of his hands without meeting his eyes. \"I'll, uh-\"\n\nBailey paused, her eyes darting around nervously as her chest rose and fell in what appeared to be hyperventilation.\n\n\"What?\" he asked.\n\n\"I'll just keep my pants down,\" she panted. \"So just do all four of them, y'know, pretty quick?\"\n\n\"Okay,\" Kent nodded.\n\nBailey turned her back on him again and took a deep breath as her hands went to the waist band of her jeans.\n\n\"Alright,\" she whispered, \"here we go.\"\n\nShe pulled her jeans down, well past her cheeks, stuck her ass out toward him and then braced herself by spreading her arms wide and grabbing the vertical side panels of the desk cubicle in front of her.\n\nGood Christ, Kent thought, taking just a moment to admire her pose and commit the whole tableaux to memory. But we can't dawdle here.\n\nStill, he took a fraction of a second to consider his very limited options.\n\nHere we go, he mimicked her words in his head.\n\nHe struck her left cheek, low and hard, the high-pitched snap echoing through the entire library. Bailey's body tensed up, hearing the sound. Anyone currently sitting anywhere on the entire floor would have to hear that. But she hadn't even moved her hands, only cringed a bit, leaving Kent no choice but to go on.\n\n\"Five,\" she snapped out.\n\nHer right cheek took the next slap of his hand, low just like the left.\n\n\"Six.\"\n\nHe didn't wait to listen for any intruders this time, just switched back to the left and struck her high.\n\n\"Seven.\"\n\nThe echo hadn't even died out from that one before he took it to her right cheek.\n\n\"Eight,\" Bailey breathed out with relief.\n\nKent waited, then, watching her stand there, her naked ass still perched, her body still heaving with whatever emotions rushed through her after all that.\n\nIs she waiting for me?\n\nHe placed his hand lightly on her left cheek, feeling the tension in her muscles as he formed a cup over her flesh.\n\nBailey shivered and sighed, and he rolled his hand around from her left to her right cheek, squeezing his fingertips into her hardened muscles.\n\nShe squeezed back, clenching her cheeks together, then relaxed. Her hands came free of the side walls and she slowly pulled her jeans back into place. As she worked on buttoning them up, she looked at Kent and made a small grimace.\n\n\"I'm gonna be out of commission,\" she said, pausing thoughtfully to tilt her head, \"for the next few days.\"\n\n\"Busy times,\" Kent shrugged, \"you're pretty far ahead now.\"\n\n\"Yeah,\" she nodded, and her eyes brightened with realization. \"Actually, this means I'm one quarter done, y'know?\"\n\n\"One forty nine,\" Kent confirmed.\n\n\"Alright,\" she waved the back of her hand in his direction. \"Get out of here, I've got studying to do and so do you.\"\n\nKent bowed somewhat dramatically, \"As you wish.\"\n\nHe had a long, quiet walk home."
    ],
    "authorname": "xtorch",
    "tags": [
        "spank",
        "spanking",
        "library",
        "book",
        "counting",
        "naked",
        "exhibition",
        "payment",
        "debt"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-11"
}