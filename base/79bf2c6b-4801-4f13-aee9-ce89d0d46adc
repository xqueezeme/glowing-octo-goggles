{
    "title": "Play Testers Wanted Pt. 15",
    "pages": [
        "This is another voluminous tale. I hope you enjoy. If you prefer me to chop these up into smaller bits, please inform me. I am especially proud of this one. I have created my own pieces of mythology to the Star Wars universe. Please vote and comment so I know where I can improve my craft. Thank you for all of your kind words and encouragement. Stay safe and healthy... now part fifteen.\n\nStarting from Scratch:\n\nI knelt and dug my fingers into the sandy soil of Korriban, the home world of the Sith Empire. I spread my fingers letting the grains of scarlet sand fall. I could feel the connection between the falling grains, the ground, and myself to the Dark Side of the Force. So, few possessed this sense and I mused that it must be like being born blind. How do you describe the icy rush of power that set your cells on fire when you collected, shaped, and unleashed the full potential of this primordial energy field? I was Korriban and Korriban lived within me! I stood and looked around.\n\n\"I am back!\" I called out to the legion of derelict space craft. It was here that I had first studied under my Rakatan master. It was here that I fashioned my first droid, the robot that carried a copy of the Traci A.I. It was here that I learned many secrets of the Dark Side of the Force. If I were to accomplish my task I needed to learn yet more. I must delve deeper and into darker recesses of Sith Alchemy and Sorcery. Truth is the Sith learned what they knew from their former masters the Rakata. I was drinking from their dark well of wisdom. \"I am back Master.\" I stated as I removed his holocron from my inventory.\n\n\"Why?\" The holographic entity queried as he manifested. \"I have few secrets left that are worth plundering.\" He replied so I told him the bare bone basics of my plan.\n\n\"I wish to create an object to enthrall and thus destroy my enemies.\" I explained. \"Surely, in your great wisdom and understanding of the Dark Side you must have come across such a thing.\"\n\n\"The females you breed with must find that tongue of yours irresistible.\" The alien smiled and continued. \"Yes. I know of the ritual you seek. Tell me more of your plans.\"\n\n\"No.\" I denied him, and he laughed.\n\n\"Full marks to my former pupil. Never trust anyone! To claim the scroll holding the alchemical and sorcerous details you must endure the very thing you wish to create. It is not too late to turn back.\" He warned. \"Very well, I will give you the coordinates you desire. This is dire and dark deeds you desire Lord Valakhor. Pray it does not undo you before you can use it on others.\"\n\nThe key component of the alchemical treatment lay in a cave half a day's journey from here. Instead of rushing off I spent a few days scavenging and building a speeder bike for the journey. I did not need to but I sure as hell wanted to. It was a nice bit of relaxation. Sure, I could have simply teleported but where was the fun in that. I delved once more into the corpses of the huge starships. It was clear that I had not been the sole scavenger and it had been years if not decades since my last visit. I would have to work harder to find the parts and components I would need.\n\nI was falling short of the things I needed to complete the bike. To fix this problem I used telekinesis to pull, rip, and otherwise remove walls, doors, and even bulkheads and blast doors. Small treasures were now accessible, and I spent more time scavenging than I originally planned. But I was having fun damn it! The katharsis I felt when I ripped open my first heavily armored blast door was exhilarating. My pile of goodies grew and grew. I was almost satisfied when I uncovered it. \n\n\"Move! Damn you!\" I cursed as I was forced to create a fine balancing act between raw power and a delicate harmony with a damaged roof and precariously perched wreckage. Too much power and tons of rotted and rusted material would crash down burying completely what appeared to be a secure door. \"Carefully... carefully with the plates... that's what Bilbo Baggins hates.\" I sang as I located the final loose girder and removed it by tugging at the bottom where it rested against the floor. The trashed bracket was still securely attached just above the still sealed barrier. \"Yes!\" I exclaimed as I removed the smaller scrap that removing the long slender beam made possible. \"Holy shit!\" I cursed seeing the pinnacle of security engineering before me. \"Someone built you for a damn good reason and I want to know what you are hiding.\"\n\n\"Impossible!\" The Rakatan exclaimed as he hovered in on his own power. \"A Nichien Time Lock... I have heard of them but never seen one.\"\n\n\"I can feel the thrum of power it is giving off.\" I informed the Rakatan. \"This ought to be interesting.\"\n\n\"How did a Nichien ship survive the Purge?\" He asked clearly upset. \"They were eradicated long before my time.\"\n\n\"Let's get a better look at it then,\" I stated curious to see what remained and learn why he was thrown off his predictable cool demeanor. I explored the immediate area. Four large and three smaller craft were effectively fused together. The Nichien vessel must have been one of the first to crash and the others slammed into it over uncounted years driving it deep into the ground. I was familiar with several ship designs and most of the wreckage was of Sith or Republic manufacture. One however was unfamiliar to me.\n\n\"I do not recognize this vessel.\" I said aloud and he explained.\n\n\"Of course not, it is Rakatan.\" He stated. \n\n\"Why is one of your people's vessels holding a Nichien time lock?\" I asked. Silence. \"Let me guess. The Rakata saw the Nichien as a threat. They went to war and wiped them from the galaxy. Unable to open the time locks they did the only thing they could, to ensure no one else discovered them they sent these ships to wander the galaxy forever. Just a guess but...\"\n\n\"Yes.\" The hologram replied. \"You are correct.\"\n\n\"Considering how deep we are this has to be one of the first ships to crash here.\" I hypothesized. \"The hull is damaged over here.\" I stated as I walked around trying to view all sides of the time lock. While it appeared to be a simple cube that was hardly the case. It slowly became a maddeningly complex task to isolate the time lock. I finally concluded I was dealing with a hypercube, a four-dimensional object stuck in a three-dimensional vault. I found a single break in the containment sphere and prepared to peek and see the time lock with my own eyes.\n\n\"Now let me see if I can open this bitch up...\" I began when a wave of nothingness washed over me, and I awoke in the Grey Room. Was I in the time lock? \n\n\"He is awake!\" A familiar voice called out urgently.\n\n\"Welcome back,\" another said with that equally familiar voice.\n\n\"What the fuck hit me?\" I asked as I got to my feet. \"Holy fucking shit!\" I cursed seeing the six other versions of myself. Two of them laughed, two just waved, and the last two called for silence. \"What happened?\"\n\n\"Time lock,\" one of the more serious of the group replied. \"This is the key moment. This is the answer we have been seeking.\" He... I... continued. The featureless nature of the time lock was seriously messing with my sense of balance and ability to simply stand.\n\n\"Aw shit,\" I cursed. \"I get it now. I think.\"\n\n\"Oh no, not again,\" one of my doppelgangers cried out in warning. There was not even time to ask what he meant. I, all seven of me, were lifted off our collective feet and drug towards what visually appeared to be the center of the area. What followed was lots of screaming, blasts of visions and sounds, and blissfully the gift of unconsciousness. \n\n\"Mind fuckery at its best,\" I cursed when I floated back to the top and opened my eyes. I was still on Korriban, but I was no longer where I had been. I had just enough energy to move my head to see my immediate surroundings. \"Wilderness it is.\" I growled as I spotted a bright yellow stone that in my mind was perfect for skipping. It was flat on both sides, the color bordering between lemon and orange, and I could just make out Sith runes along the edge of one side. I tried to pick it up, but my arm was numb and instead of bringing it closer I struck it and sent it skipping across the hard-cracked landscape. I could still make it out since it stood out against the ruddy soil.\n\nI closed my eyes, drew on the Dark Side to heal my body, and get on my feet. The energy was easy to access but my body was reluctant to cooperate. I had read about toxins that blocked a Force user from drawing on their abilities. This was not the case though. I could feel the power coursing through me, but it was just slow as molasses on a winter morning. I was about to curse when a noise caught my attention.\n\n'Shit!' I thought as the thing sniffed the air and approached me. A real sense of panic filled me as my body slowly healed. The breathing of the beast grew louder, and it was clear it would find me before I could move. Only one solution came to mind. I took what little energy I had and altered my skin and hair to match the ground around me. It was a cheap camouflage but hopefully it would work. As it grew closer, I picked up more and more on small details. The clack of claws striking the ground became clearer and closer. I fought the urge to panic as its breathing sounded behind me. I could not see it. I heard one of its footsteps. It was heavy enough for its claws to break the hard-packed surface and sink into the softer soil beneath. The snuffling of its snout was right behind me. If it tracked by scent alone, I was screwed.\n\nIt bellowed and I was forced to lock my limbs and bite back a scream of alarm. It stepped over me and I got a worm's-eye view of the thing. It was a Ken'Sang. Even a fully abled Sith feared these brutes. They were strong, fast, and once they locked onto a target rarely gave up short of being killed. Some of the noble houses of the Sith send out potential students to hunt one down as a show of their skills and fortitude. They were only found on the southern continent. If I was there, then there were far worse fates than encountering the Ken'Sang. If the rumors were true, then I might face Dark Side wraiths of the restless dead. \n\nThe Ken'Sang lifted its massive snout and sniffed as a sudden breeze blew in. It let out its deep throated cry and raced off away from me. I managed to maintain my camouflage and heal slowly. The sun had set and the first of Korriban's seven moons rose and breeched the horizon. I sat up. It was still a huge exertion, but I managed. Nightfall on Korriban was a signal to the predators to leave their dens. While I could sit up my legs were still non-functional. I looked around urgently and found a niche of rock that was U shaped and could give me protection on three sides. I used my arms to drag myself inside it and continued healing. I snagged the bright yellow stone on my way forward. I was barely into position when I heard them. If one rogue Ken'Sang male was a danger, then a pack of hungry females was terrifying. \n\nI used Force cloak to minimize my aura and to my shock it was effortless for me to perform. The pack sniffed the air and left in the same direction as the rogue male. Were they hunting him or a prey animal? Thrilled to not be on the menu I maintained the cloak and continued to heal. I opened the palm of my hand and read the writing on the brightly colored stone. The characters described a physical location on Korriban. Once I was healed, I could tap into my spatial awareness and discover how far away I was from the coordinates on the stone.\n\nBy midnight I was able to wiggle my toes and by dawn I was fully mobile. Like my first visit to Korriban my gear was unavailable even my universe friendly weapons and armor were greyed out. However, all my Force abilities were in the green. Their costs varied and I took notice of the odd variety that were within my ability to utilize. I created a list of affordable powers and kept those ready to unleash. It was time to get my bearings, find transportation, and feed. I was starved. I tapped into spatial awareness and found my location. To my surprise I was less than a few miles from what appeared to be a village, deserted no doubt. The Sith abandoned this place centuries ago.\n\nSpeaking of time, I began wondering about the Nichien Time Lock and the other versions of me. Was I getting close to resolving my staggered timelines? I hoped so. I was tired of crossing my past and future. It was a headache of legendary proportions. There was nothing I could do but keep going and see what happened.\n\n\"Time to get moving.\" I muttered to myself as I took on my Sith persona. Naked I headed for the abandoned village. Maybe I could scrounge some rags or discarded clothing, so I did not have to walk about with my pecker hanging out. I was careful since there was a pack of Ken'Sang nearby as well a rogue male. I could defend myself but against a group of lethal predators I did not really stand a chance. It took twice as long as it normally would have to cross the distance. I found no sign nor heard any calls from animal life. This place was a desert and supported little life of any kind. Only the hardiest of creatures survived in this wilderness.\n\nThe sun was nearly at its highest point when I felt it, moisture. There must be an oasis nearby. A few minutes later I heard the gleeful cry of multiple females. There were Sith here after all! I still moved stealthily until I rounded the corner of a cliff face and came upon six female Sith playing and bathing beneath a waterfall. Their armor and weapons, primarily primitive but well-crafted spears, lay near a runoff pool fed by the waterfall. The first thing I noticed was their Asian features. Okay, the second thing I noticed was their exotic beauty. I did not want to upset them, so I backtracked a few yards, dropped my Force cloak, and stumbled forward. The laughter stopped and soon I was surrounded by them. They had gathered their spears but not their armor.\n\nThey were as tall as I was, muscular yet slender, and radiating enough hate to power the Death Star. The leader, or so I guessed, spoke first. I barely understood her. The Proto-Sith dialect was difficult to dissect but I did my best.\n\n\"I am Ghostfire.\" I said accompanying the words with a gesture towards myself.\n\n\"Ghost... Flame...\" the leader fumbled.\n\n\"Close enough,\" I replied. \"I am not a threat.\" I needed to establish quickly.\n\n\"Ha!\" She laughed. \"You male... no danger.\" She continued and the others laughed as well. \"Come. Wash. Stink.\" She ordered. We returned to the waterfall. I stood under the pounding waters and felt the rush of the Dark Side. It must be a minor nexus. I drank up the raw power and the ladies did not miss that. Their leader spoke too fast for me to translate. Clearly, I was not a typical male in their eyes now. I was given bowls that were hand carved from wood and what could only be a chitinous substance. The wooden bowl held a creamy blue substance. The female pointed at the bowl and then her head. Shampoo. And so, it went as I was scrubbed, lathered, and rinsed repeatedly until the stink was gone.\n\nThey never offered me clothing as we left the waterfall and returned to their village. The community was nestled under a massive stone outcropping that looked lightning blasted and I remembered the scarlet lightning that was so dangerous here on Korriban. The cleverly constructed stone huts gave me an inkling as to the sophistication of this lost tribe. All was well until I reached the center of the village and the curtain covering the front of the largest hut was pushed aside and the clan leader appeared. She was a few inches taller than me, but what set off all my alarm bells was her bristling aura. She was strong in the Force.\n\n\"You slave...\" she said addressing me. My emotional reaction was swift, and she felt it instantly. \"Slave!\" She growled as she tried to mentally dominate me. I created a psychic shield and let her batter against it. Her rage increased until I felt cracks begin to form. My only chance was to give her a taste of her own medicine. I used my negamage skill and absorbed the raw Dark Side energy she was putting out. She staggered back and when her defenses dropped, I walked into her mind, left a clear message, and walked out again. \"No slave.\" She reluctantly growled.\n\nThe silence was deafening. I saw knuckles turning white on the weapons they carried but they did not attack. They were far too disciplined to act without their chief's approval. To save face she crossed the distance between us and grabbed me by the chin. She turned my head and noted the differences between them and me.\n\n\"Eyes are strange. Nose too small. Brows are okay. He has no rank.\" She laughed as she touched her piercings. The bridge of her nose was covered with a thin gold plate that was shaped to fit perfectly. To hold it in place were three piercings also of gold. Her nostrils had a ring on either side close to where her nose connected to her face. Her prominent brows were also pierced with bars and loops of precious metals.\n\n\"Fight.\" One of the other prominent females declared. \"Give him weapon and see.\"\n\n\"Can fight?\" The chief asked.\n\n\"Yes.\" I replied and her upswept almond shaped eyes narrowed.\n\n\"We shall see.\" She snapped.\n\nA wooden staff, made from a hard dark wood that reminded me of terrestrial ebony, was tossed to me. I examined its finely polished surface and fine grain. There were leather straps secured to allow it to be used without losing one's grip on the slick surface. I spun it around finding its balance point and I decided to begin with form one style. We moved to a circle that was set aside from tribal contests. They dealt with disagreements by beating the shit out of each other. We stood on opposite sides and one of the females outside the ring let out a piercing whistle. I moved forward cautiously while she rushed me intent on splattering my brains all over the ground. I easily side stepped her and landed a blow on her left ass cheek. She roared and Force lightning surrounded her weapon.\n\n\"Interesting technique.\" I said as I followed suit and she balked when I was able to mimic her.\n\n\"Not possible!\" She screamed. \"Destroy!\"\n\nI was clearly a threat not just to her but their entire way of life. She thrust her weapon towards me and instead of blocking I used Tutaminis to absorb the lethal energy. Once again that hollow silence fell over the tribe. I could feel their fear. I was awash in it and the Dark Side took over. It was time to teach them a lesson. I dropped the staff and closed to hand to hand range. I was much faster than she was. The staff became cumbersome in her hands as I struck at nerve bundles sending blinding pain throughout her body. She crumbled to the ground and I stepped back waiting to see what they would do.\n\n\"Go!\" One of the females cried out.\n\n\"Leave!\" Another took up the sentiment.\n\n\"Stay... teach...\" the clan chief moaned through clenched teeth.\n\nI knelt next to her and struck the points that would free her from the muscle spasms and anguish. \n\n\"Yes Chief,\" I stated sealing our relationship. She kept her place as chief and I did not get murdered to death by the entire tribe. Her reaction was swift, and the others accepted her decision. They wanted what I possessed, knowledge. \"See?\" I asked and gestured to the village. The chief pointed to one of the warriors.\n\n\"Show.\" She ordered and the other bowed in agreement. They were in many ways like most of the Sith race I had met before and yet the subtle differences were scattered throughout the tribe. The eyes were only the most obvious. The shade of their skin was subtly darker with a smoother texture than the others I had encountered. A dozen other things caught my attention as we toured the village. There were dozens of stone domes that had been worked and smoothed by art and craft. I examined one and found another surprise. Sith hieroglyphs, not Rakatan runes, were etched on the interior to protect and preserve it. This village must be ancient indeed.",
        "\"Did you make these?\" I asked and she shook her head. Most of the domes were living spaces but not all. Some were storage for scarlet grain, building materials, and other necessities. While perusing one of the more distant domes from the center of the village I spied a stray lump of rock amongst a pile of dark stones. \"Is there a mine?\"\n\n\"Mine?\" My guide asked not understanding the term. I levitated the odd stone into my grasp and pondered how to explain. But first I was curious to what they were digging out of the ground. I examined the stone, and my HUD labeled the rock with a question mark. Hmm, let us see what you are. I used pyrokinesis to heat the stone. It glowed dully proving that it had a high melting point. Perhaps that is why it stored here. They cannot work it yet. \"Stand back.\" I warned my guide as I cranked up the heat. Slowly the stone glowed, and it began to melt from the inside out. The molten metal bubbled up and cracked the exterior shell. I levitated the metal, shaped it into an ingot, and let it cool which it did quite rapidly. I checked it a second time to discover the dull dark ingot was Mor'ia, or shadow steel. I had never run into it in its raw state. \"Hole in the ground?\" I asked the female Sith.\n\n\"Dark City.\" She exclaimed. \"Follow!\" She continued excitedly as she guided me beyond the last stone hut to a cleverly hidden opening in the hillside. The passage was narrow at first forcing us to go single file. Soon it opened to a series of large interconnected caverns. The purpose of the caverns was clear. This was a primitive mining operation and the males of the tribe dug out ore, carried it to the surface, and smelted what they could for tools, weapons, and stored what was beyond them. It did not look much like a dark city to me. \"Deeper.\"\n\n\"I understand that word really well.\" I replied and instead of smacking me she made a lude clucking sound and blushed. \n\nThe mine was lit by several species of glowing lichen. The damp conditions of the cave and its proximity to the waterfall indicated to me a huge and extensive cave system. The change was slow, but the rough-hewn walls and floors gave way to smooth polished ones and eventually to brightly tiled walkways. The steppingstones glowed when they were stepped upon and lit those around them. Soon the entire network was lit and growing brighter still. I let out a curse when we reached the main cavern. The space was massive, and the structures were clearly not crafted by this primitive tribe. The stony exteriors were covered in Sith hieroglyphs and reminded me of a cross between Egyptian and Mayan cultures. The main pyramid had sides that were smooth but at the corners were elegant carvings of warriors and wise men in intricate armor and robes.\n\n\"Ancestors.\" She explained. \"Ooh, gods are angry!\" She exclaimed when the thrum of power lightly shook the floor.\n\n\"Not gods.\" I stated and she hesitated but if I was willing to walk naked into the Dark City, so was she.\n\nWe took the shortest path to the main pyramid. There were a dozen smaller ones as well as at least a hundred homes nestled between the larger structures. It could have been a modern Sith city except it was buried under the hill. The thrum grew stronger as, if I was correct, the long silent generators were powering up. We had just about reached the main door to the great pyramid when a booming voice challenged us for a password. I cursed again and looked at her. She was clearly terrified, but I urged her to think. \n\n\"Clear your mind,\" I spoke in the Sith dialect I was accustomed to. \"Let the Force guide your thoughts.\"\n\n\"NNNNN...\" she stammered fighting the influence I believed.\n\n\"Let go.\" I crooned as her back arched and she screamed a single word.\n\n\"NNNNN... Nocturnal!\" \n\n'Well... fuck!' I silently cursed.\n\n\"Nocturnal... Dark Lord of the Sith... come forth!\" She called out using the modern dialect.\n\n\"I am Nocturnal!\" I declared feeling the trappings of time and fate settle upon my shoulders.\n\nThe cyclopean doors split open and receded into the walls. The thrum of power both mundane and mystical reached their full potential. Beyond the open portal were a flight of steps leading up. I led the way as the possessed warrior walked next to me. Her eyes shown with the crackling potency of an ancient spirit. I had a flashback of the Pride of Korriban and the Tomb of Darth Nocturnal. Things were reaching full circle or perhaps in this case a beginning. We reached the top of the stairs and the walls were adorned with stone pillars that supported the roof and were carved in the aspect of Sith warriors and mages long dead but remembered here in the state of petrified glory. On the far side of the chamber a solitary figure shrouded in shadows stood silent and between us and the figure was a mystical design etched in precious stone tiles adorned with gems. \n\nAt first glance the design on the floor was simple enough but like all things Sith it was seductively complex. To prove my worth, I had to decipher the puzzle and speak with the mute witness. I began breaking down the ritual and how to solve it when the possessed warrior gave me a firm but gentle shove forward. I staggered forward and my right foot landed squarely on the stone panel. I felt the teleport beam ensnare me and I was helpless to fight it. I was still off balance when I appeared in a lightless area. Normally I would be able to orientate myself and know where and how far I had been teleported. Not this time, Sith sorcery prevented that. I used Kaia-Jutsu for echolocation to 'see' my surroundings. I was standing on a stone bridge over a large underground lake. There were two openings one in front of me and one behind. I took on the form of a Selkath, one of the amphibious races in the Star Wars universe. I dove into the lake and switched from echolocation to sonar.\n\nMy first attempts gave me only a basic shape of the lakes shape and contours along the bottom. I swam against the pull of the current hoping that maybe there was a hidden exit behind the waterfall. Instead I felt a regular shape jutting out from the floor of the lake. I circled it to get a better mental picture. It was an obelisk and it had writing on it. I clung to one side and ran my free hand across the markings carved into its surface. It took time but better that than using light and drawing unwanted attention. \n\nDing! Went my HUD. 'Blind Man's Bluff.' Reward Earned: A Master's Touch.\n\nThe stone was a marker the first of seven. The top of the obelisk was marked with a septacle also called a heptagram, a seven-pointed star. I was about to push off and look for the next marker when my hand slipped and met the etching, and I felt a pulse of white-hot heat. I plucked my hand back and spied the fading septacle design burned into my left palm. Left winced in pain but endured. I poured healing energy into my palm and let the icy water cool the pain until just the brand remained on my flesh. I flexed my webbed fingers and continued upstream looking for the next marker. It was a slight struggle fighting the course of the underground stream but soon I breached the surface to the roar of the waterfall. I could not help myself. I pushed beyond the curtain of falling water to see only the rocky wall of the cavern. I stepped back and found the large opening at the top of the fall quite appealing.\n\nI examined the cave for other exits but there was only the option high above that offered any outlet to this chamber. My next form was that of a Nexu, one of the finest climbers in the galaxy. The large feline like creatures had a large exaggerated mouth full of razor-sharp teeth. Add to that their forked whip like tail and equally formidable claws and was it any wonder they had a reputation for ferocity and lethality. My claws pierced the rocky wall with ease. I reached the aperture at the top of the waterfall. The tunnel carved out by the stream was large enough to accommodate my current form with ease. I continued forward sniffing the air for any signs of predators or prey. The water level rose, and I reached the end of the tunnel. A chimney formation at the back fed the flow of water and the only obvious exit. I looked for less obvious ones. \n\nI found the hidden panel marked with Sith hieroglyphs. A quick deciphering and I discovered the stone that triggered the secret door. It slid open revealing my first challenge. The chamber was fifty feet square with a six-foot obelisk at its center. The top of the pillar was marked with the seven-pointed star. There were also Sith characters informing me to touch the star to begin the challenge. I reverted to my humanoid shape and touched my branded palm to the obelisk. The grinding sound of stone on stone came from one of the darkened corners. The panel moved aside revealing a sarcophagus. The stone coffin opened, and the semi preserved corpse moved. Dark Side energy poured into it giving it the semblance of life. The desiccated body was loosely covered in rags savaged by the passage of time. Its eye sockets kindled with dark flame and it tried and failed to take in a lungful of air. A dry rattling sound filled the chamber as the dark warrior drew its sword from a dry cracked sheath. While time had taken its toll on the body his weapon was equally unaffected and looked newly forged.\n\n\"Well fuck!\" I cursed realizing I was not just naked but equally unarmed. The thing let out a crunchy wheezy sound that I guessed was a laugh as it adjusted his grip on the sword and closed the difference. Running was futile so I assumed a defensive position and remembered a little used lesson Nightwind taught me at the beginning of my career. \n\n\"One of these days,\" he had said with an evil grin. \"You are going to find yourself in a shitty situation. This might just save your ass.\"\n\nThe skeletal warrior let out a hollow war cry and raised his weapon. I timed my reaction and as the blade fell towards me, I brought my hands together. The downward momentum of the sword stopped. The laugh was stopped short. My palms held the flat of the blade immobile. I moved my right foot backward in a crescent movement, at the same time I pushed so that the sword blade was now horizontal, at the same time I twisted my torso and yanked the undead off balance. As he staggered forward, I shoved on the blade forcing the hilt into the thing's chest cavity breaking ribs and crushing desiccated organs. A cloud of dust rose from the thing as I repeated the circular movement with my left foot. This time I pulled hard towards me ripping the sword from his grasp. \n\n\"Thanks pal,\" I laughed as I flipped the weapon and caught it in my left hand and decapitated my foe. The obelisk collapsed revealing my reward for winning the first challenge. I rummaged through the rocky debris and found a black hooded robe which I slipped into immediately. I tied off the waist and finished looting the pile of rocks. My other reward was an unusual multihued crystal, clearly a rare Kaiburr crystal. I added it to my inventory. I kept the ragged leather belt that would allow me to carry the ancient Sith blade.\n\nThe sarcophagus slid to the side revealing a natural tunnel leading away from this chamber. The path was easy and level but for some reason that made me more alarmed and distrustful. The walls began as roughhewn and mainly in their natural state. Little was done to alter them except the floor of the tunnel was smooth and free of debris. Twenty feet or so from the entrance the walls began to change. It was subtle smoothing and then the first hieroglyphics and images of armored warriors and robed sorcerers. One recurring image dominated the graven carvings that of Darth Nocturnal. I knew because I had discovered his tomb and knew the unique design of his robes and mask. The tunnel ran a hundred feet and ended in a massive underground canyon. To cross to the other side, I was going to transverse a narrow stone bridge that had neither guard rails nor cover of any kind.\n\n\"Well fuck!\" I cursed softly and a high pitch chittering replied.\n\nThe noise grew louder, and a pillar grew out of the middle of the span and looked identical to the first obelisk. I had reached my second challenge. Something was perched on the roof of the cavern beyond. The sound it emitted was not that of the Shyrack, cave creatures I had encountered before. This was more complex and hinted at some measure of intelligence. The thing hunted by sound and my first thought was Kaia-Jutsu, the third song, the song of dissolution and scattering.\n\n'...remember my dear Ghost,' Nightwind encouraged me. 'This song, while weak in many ways, has a devastating effect on creatures and sentients that rely on echolocation and the like. Those that hunt by sound you will confound. I just made that up... sounds pretty good eh?'\n\nAnd so, I would use it once I isolated the sound the predator was producing. Until then I wanted to get a visual of the cavern before me. I could use 'Farsight' but if the things were Force sensitive, I might alert them and find myself swamped with enemies. No, I needed a more subtle way of peeking. I sat in a cross-legged position and took in my environment. It took me little time to reach a relaxed state. After five minutes or so a rivulet of moisture ran down from the crown of my head, across my forehead, down to the tip of my nose, and drop the ground. Moisture. The tunnel and the cave beyond were filled with it. \n\nA sense of serenity came over me as my solution presented itself. I drew on the Force with the same delicacy as I would when utilizing Force cloak. I gathered the moisture about me in the form of a light ground fog. From this state I slowly built up the layers until a rectangle of water lay before me. I slowly levitated it as a thin sheet. I opened my eyes and found the water reflected my deepest sense of concern. Just as I had on Typhon, I calmed the water by calming myself. Once the surface was still, I gestured and moved it out beyond the arch and into the cavern. The surface of the roof was covered with creatures. I could not see them clearly, but the ripple of movement came from the host clinging to the top confirmed my fear of being overwhelmed if I acted hastily. \n\nI observed them as I rejected one attack plan after another. There was symmetry among the host of creatures. They were all about the same size. Why? They had to have been hatched from eggs. If that was the case, there had to be an older female I had not seen yet. I dare not use the term queen for obvious reasons. I caught the flash of green light coming the cavern. It was the obelisk. I squinted and a green rectangle appeared around the marker. White text appeared next to it.\n\n'Challenge Marker 2.'\n\nI squinted more and the green rectangle flashed. The text changed.\n\n'The second stone to win through, abandon Bogan and embrace Bendu.'\n\nBogan was the Dark Side of the Force and Bendu was the balance or middle ground. Abandon an aggressive strategy and use one of balance. Clearly there were too many enemies to fight. I had to sneak in and touch the obelisk. My first thoughts on using the third song clearly were the right solution. My instincts were proving true. I closed my eyes and listened to the song being woven by the inhabitants of the cavern. While I had never encountered this species before their song was decipherable and so beatable. I just had to be patient. The complexity made it tantalizing to be honest. I loved a challenge and the blend of melody with a three-octave range this was a daunting task. \n\n'Got you!' I thought as the entirety formed in my head.\n\nMy hand tapped out the counter melody before I sang it. Sound travels in waves. As I sang my voice and that of the things in the cave cancelled each other out. Silence prevailed as I got to my feet and with a hint of trepidation, I entered the cave. The only sound was the miniscule slap of bare feet on wet cold stone. I fought the urge to race forward. I counted down mentally as I drew ever closer to the obelisk. To my surprise I reached it whole and hale. I touched it with my left hand, and it crumbled just as the first one had. The damn sound of the falling stones echoed off the high roof alerting every living thing here of my presence. I collected my rewards, crouched down, and wrapped my hand around the hilt of the ancient Sith sword. The host above me swarmed. I cursed as the they dove downward but before I could draw my weapon, I realized they were not flying at me. In fact, they were power diving at the lake below the bridge. Why? \n\nWith a deafening roar and whoosh of spray the thing in the lake breached the surface and went on the offensive. I was hit by a wave of water displaced by whatever the hell was beneath me. I was nearly thrown from the bridge into the lake. The thing lunged upward and through the mist and cascade of water I caught a glimpse of it. My time among the Elder Things prepared me for the nightmare lurking beneath me. The sheer size of it defied anything natural but the host ignored all that and attacked anyway. It appeared to me at least that the things that had roosted above had entered a frenzy and were determined to kill the dweller in the deep.\n\nEmbrace the Bendu. I would stand aside and let nature take its course. With an effort I dropped my grip from the sword. I watched the conflict with great interest. I imagined myself as a wildlife photographer and my memory the film that would capture the event. They died in their dozens. The host was diminished and what was once an unbroken stream was thinned and becoming even slimmer. They were hurting it and from the wounds oozes a thick viscous substance that smelled of the open grave. The stench of the charnel house rose, and the water did little to wash it away. The dweller's blood carried the unfettered noxious odor of death incarnate. It was maddeningly pervasive. No matter what I did I could not escape it.\n\n'Cannot breathe!' I thought as the thing below struck the underside of the bridge hurtling me into the air. Thanks to all the one on one time with Gwen I was able to orientate my body midair and land hero fashion with limbs unfurled. This was getting more difficult to remain neutral. It is easy to go on the attack, but this was a challenge of a whole new kind. The third melody entered the song. The Hive Mother had been drawn from her nest to enter the fray. Her children were dying, and she would have none of that. She dropped down like a leathery winged horror. Her voice drowning out all but the dweller's in its sheer ferocity and rage. My first glimpse of her froze my blood. It reminded me these were monsters fighting a monster.\n\nThe thing below struck the keystone of the span and once more sent me hurtling skyward. Once more I orientated. Once more I fell and landed gracefully, but this time my weight was enough to send fissures racing outward. The bridge was no longer safe. It would not hold my weight much longer. The spot where the obelisk had been now held a spinning icon. I had earned a bonus. I collected it as I raced for the far side of the bridge and my next challenge. I reached my goal and turned. Two dozen or so of the host survived and fled out a hidden opening in the roof. The mother of them all was in what appeared to be a berserker rage attacking the dweller beneath. She let out a deafening screech when the thing in the water attacked her from behind. One of its tentacles thrust... oh dear god... they were not fighting... they were... time to go. The mating rituals of eldritch horrors is not for the faint of heart.\n\n\"Eww!!\" I cursed as I fled to my next challenge.\n\nOnce I was out of line of sight, I examined my inventory. The few objects not grayed out were interesting. I had in my possession a rare Kaiburr crystal, two beam emitters, a crystal lens assembly, and to make things interesting a blade length/intensity adjuster. Oh, this was going to be a fascinating little weapon when it came together. The other new item was labeled multitool. I removed it from my inventory and examined it. It reminded me of a Yautja combi stick but a non-lethal version of it. It could extend, collapse, and produce various tools and devices for a range of situations. This screamed another non-combat situation. I wonder what form it would take. I raced down the tunnel eager to embrace my next challenge.",
        "\"Click!\"\n\nI stopped instantly and felt the pressure against my bare foot.\n\n\"Fuck me sideways!\" I cursed as I pondered how to deactivate the trap I had partially triggered. I could blink up to thirty meters ahead or behind but there was no guarantee that the traps did not extend in either direction. I had to disarm this. I could not risk the short teleport. Hello multitool. It took time to run the full range of its capabilities. Scan feature looked promising. I touched the button and a thin red beam shot from the business end of the stick. I had to perform three scans since my foot was in the way. The device was simple. I had to trick it into thinking my foot was still there even after I removed it. I activated the manipulator and let the tool do the work. I got a greenlight from the multitool. Wincing I slowly lifted my foot.\n\n\"Damn that was intense!\" I cursed.\n\n'Remove device? Y/N'\n\n\"Hell yeah! Wait. Why would it offer that unless?\" I thought aloud. I activated the extraction tool, and it took a steady hand. The multitool showed any hint of tremor in the hand holding it. I unlocked the four restraints and gently lifted it. Once it was in my inventory I could move on. Was I in the middle of a minefield or were there other types of traps or both? The multitool was in cool down state. It was up to me to move slowly and keep an eye out for anything unusual. The thrill level ratcheted up as I moved forward. I remained low to the ground and watched for anything that stood out.\n\nI barely registered the gossamer thin thread just before it broke. I backflipped out of the way as two spinning blades thrust out of opposite sides of the tunnel. I scarcely missed being decapitated or worse. Luckily, I landed and did not trigger another trap. I had lost ground and it was time to make some headway. This was another test of patience. I looked to the ceiling as a way of bypassing at least some of the traps and catch up on what I had lost. I clutched the multitool in my teeth, leapt straight up, and clinging to the ceiling I continued. All my senses were reaching out, especially any hint of danger through the Force.\n\n'Whoa! Something is wrong!' I thought as I felt a chill run through me. I picked up a loose stone from the tunnel's floor and hurled it forward using telekinesis. I nearly lost my grip when two more circular blades made an appearance. This time however they were fired from the floor and the ceiling. Instead of slamming into the rocky roof the upward moving blade vanished from sight, so did the descending blade. I repeated the rock trick watching carefully and it took three more rocks to catch what was going on. The trap designer outdid themselves on this one. There were two sets of sheaths for the blades opposite of each other. When the trap is triggered the bottom blade is fired into the empty slot in the roof and vice versa. The mechanism switches and the next time it is triggered the trap launches the slots that carry a blade. Ingenious!\n\nI found the upper sensor and disarmed then removed it. I triggered the lower sensor and now both blades were housed in the ceiling. This created an error loop since the bottom mechanism was now empty. I dropped down carefully and repeated the process. I now had two sensitive sensors in my possession. This really felt like it was building up to something big to me. I remained on the floor of the tunnel. It was clear to me that all the surfaces of this passageway could and probably did hold sensors or triggers of some kind. It was slow going but I was making progress and that is all that mattered.\n\nThe tunnel began to slowly change. Gone was the narrow rectangular slot, now the tunnel was becoming a rounded tube. I halted when the rough rocky floor smoothed to a tiled corridor. This screamed death trap and while the floor was smooth the walls and ceiling remained rough and there were regular protrusions covering them. I opened my inventory and removed a bag of Republic credits. The coins hopefully had enough weight to trigger any pressure plate hidden amongst those tiles.\n\n\"Ting! Whir-whir! Plunk!\" The first coin landed true. I would explore the middle tiles first and if need be the outer ones. \"Ting! Whir-whir! Plunk!\" Patience. Twenty coins later and I felt a surge of Dark Side energy but nothing obvious happened. I grabbed the coins back using telekinesis. A second and even more potent cloud of energy filled the area but again there was no visible effect.\n\n\"Fuck!\" I cursed. Something was going on, but I could not see what it was. The Song of Revelation is what is required.\n\n'Remember Ghost, while you are gifted at stealth you are not alone,' Nightwind stated. 'This melody will reveal that which is hidden. Whether it is invisible foes or other less tangible threats, this will divulge that which is obfuscated.'\n\nI sat crossed legged with the bag on my knee. I sang the Song of Revelation and once it filled the area, I began to toss the coins. This time there was a rhythm to it. I matched the tempo and multiple coins hung in the air and landed simultaneously. The surge rose stronger than ever and the danger was revealed. Shooting from behind those stony protuberances were high powered infrared lasers. They formed a moving net that swept thirty feet of the tube with lethal efficiency. The song revealed nothing beyond the lasers but that did not mean anything. The song had a range and perhaps the far end of the tube was its range. \n\n\"I know that tripping the tiles activates it but does anything else?\" I thought aloud. \"Let's see if lightning does anything.\" I sent a bolt of Force lightning down the tunnel, nothing. Interesting. I used Force frost and the lasers and cold mixed to cover the tiles in a thin layer of water. When I sent Ebony Flames down it, the dark illuminated the laser beams. The heat that rolled out was potent enough for me to throw up a Force bubble to protect myself. Two lines of thought crossed my mind. I could try and use a Force shield to protect myself from the deadly beams. Or I could use lightning teleportation and jump to just beyond the tube and risk a second trap on the far side. My gut instinct was to use the quick and dirty method.\n\n\"Eh fuck it!\" I cursed as I got to my feet, crouched for luck, and hurled my body via Force lightning to just beyond the tube. Nothing. The tunnel did not hold a second trap and the lasers remained dormant. Since I had been collecting portions of traps, I thought I would try and disarm this one and see if any goodies presented themselves. From this vantage point I could see the gleaming faceted gems or crystals hidden behind the rocky bumps in the surface of the wall and ceiling. Like the double blade trap this device relied on a circuit or series of connected parts. Once I removed one of the crystals the entire array went dark. I was able to collect a total of three before my window informed me, I had all I required. \"Yep, something big and nasty is waiting for me.\"\n\nI carefully made my way further down the cylindrical passage making a mental list of what I had collected and various configurations. That damn near cost me my life. I was so caught up in my thoughts I nearly missed the pressure plate. My foot hovered just above it when I fell backwards away from it. I cursed and hummed the Song of Revelation long enough to see the plate clearly and the six devices hidden inside the walls of the tunnel. There were two on either side and two on the ceiling. They were offset so that if someone tried running one of the sets would hopefully catch them midstride. What they fired was unknown, but I suspected it was something different than what I had seen so far.\n\nI had barely gathered that little information when the two clear discs slammed into place and lit up. The one further down the tunnel was static, while the one just behind me was slowly changing. A soft hiss filled the chamber and at first, I thought something was being pumped into the isolated portion of the tube, but I was wrong. The atmosphere was being removed slowly. I examined the panel behind me and found the numerical portion of the display, it was counting down. The rest of the panel was touch sensitive. There were four diamond shaped quadrants. The diamonds were a series of runic characters. I glanced at the unchanging design and it hit me. I had to match the one near me to that of the one down the tunnel and time was running out.\n\nI silently cursed since oxygen was precious. My fingers danced across the surface of the panel and it was a simple touch and replace puzzle. One by one I locked down the diamonds by moving the symbols that represented each elemental group, earth, air, fire, and water. I had a mere ten seconds left when I locked in the last runes, but the timer was still running. I glanced at the far design and saw my mistake. Not only did the runes have to be grouped properly but the blocks of runes had to be in their proper position on the panel.\n\n\"Two seconds,\" I muttered my voice weak from the lack of air. The oxygen rushed in and I grinned. A small cube appeared at my feet. I picked it up and the gatekeeper of the mini-holocron informed me he had but one technique to teach a rare Force discipline called Wind Sword. I sat and let the long dead master teach me the basics and I added it to my arsenal of deadly weapons against my foes. In essence the Wind Sword allowed the user to utilize the Force to harness the atmosphere and create an invisible razor-sharp blade of focused air to wield instead of a lightsaber or fling at foes from a distance. I liked it a lot and looked forward to using it. A window popped into view and offered me a chance to earn a second reward if I was willing to attempt the more difficult level of this puzzle.\n\n'Game Saved. Attempt medium level of puzzle?' Y/N?\n\nHell yeah! I put the mini-holocron away and prepared myself. A similar set up appeared but there more runes and less time. I slipped into the Flow and time seemed to slow as I used both hands this time to attack the puzzle. I had a mere three seconds left even using the Flow to improve my focus and reaction time. As promised a second mini-holocron appeared and I knelt to greet the gatekeeper. I cried out when I recognized the figure before me.\n\n\"Exar Kun!\" I stated and the once Jedi now Dark Lord of the Sith bowed.\n\n\"My reputation precedes me, good!\" He replied and he held up his lightsaber. Anyone at first glance would assume from the length of the weapon that it was in fact a single bladed lightsaber, but it had two beam emitters. It took extreme skill to wield such a weapon. The prize was a tutorial of how he, Exar Kun, fought and won using his personalized weapon. It was built around the ideal of deception. The blades could be shortened or lengthened with a mere thought. The intensity of the blades could also be weakened or strengthened at will. I watched him duel holographic foes and immersed myself into what he called the Ghost Blade Technique. His final words haunted me. \"Do not pass this on.\"\n\nSith hoarded techniques and power. Was it any wonder a master duelist like Kun would leave me with that warning? I would hoard it. The Ghost Blade would be my hidden weapon when things turned dire. I rose and a window greeted me. \n\n\"No fucking way!\" I cursed seeing that there was a third and final reward. How the hell could I possibly beat it when I used the Flow last time and barely had any time left? \"No guts no glory!\" This time the puzzle would not start until I hit the first rune. I stood and stared at the blank surface. I pushed as deep into the Flow as I dared. Any further I risked becoming trapped in the eternal eddies and perishing as an individual and becoming one with the Force before my time. My hand moved of its own accord. I had moved beyond conscious thought and instinct alone guided my movements. My eyes blinked and the reading on the timer was zero. \"Damn, I tried though.\" \n\nA flashing alert caught my attention. The holographic window read 'Results being reviewed'. I stood recovering from pushing myself so hard. I meditated while the Devs or whoever looked at the recording. It must have been damn close to put it under review. I dove into the Ghost Blade technique and imagined myself with the Darksaber performing the moves. I created muscle memory using this technique and soon it felt as natural as Form eight.\n\n\"Ding!\" A single clear tone brought me out of my lucid state. I looked at the display and smiled. \"After a ruling of five to four we agree to grant you the superior level bonus for this test.\" The third and last mini-holocron appeared. \"Study well, no one else has received this skill and we will be observing how well you use it.\"\n\nOdd, they said how well and not simply how I chose to implement it. Interesting. I eagerly greeted the gatekeeper and again Exar Kun appeared.\n\n\"While I hid upon the fourth moon of Yavin Prime I pushed my dueling skills to the next level. Therefore, my apprentice I will reveal to you the one technique I was never able to utilize since the cowardly Jedi and their allies chose to bomb the moon instead of facing me in honorable combat. The advanced form of Jar'Kai is yours and yours alone.\"\n\nJar'Kai was the skill of utilizing two lightsabers in combat. Ahsoka Tano was a highly gifted duelist that honed this skill to a razor sharpness. What had Kun discovered that she had not? I watched as a life size image of Exar Kun manifested. He drew out two matching lightsabers, his dual bladed versions. He activated both to begin with but only a single blade from either weapon. He launched into a particularly vicious battle with two Jedi weapon masters. When it appeared, he might be overcome by his enemies, he activated the other two blades and intensified his onslaught. He named this skill after himself, Jar'Kun. It took the most disciplined of students to even attempt this ability. It could be as lethal to the foe as it was the practitioner. I vowed to master Jar'Kun and make him proud. I watched and reviewed the holograms until my eyes burned from the lack of blinking.\n\nI placed the mini-holocrons in the secure portion of my inventory. So, that even if I were killed by another PC, they could not get ahold of them. I stood and the last barrier was removed. It was time to face the boss and claim the third obelisk. I cautiously moved through the last of the tube portion of the passage. A blast door opened, and I entered a white immaculate hexagonal chamber. The obelisk stood in the middle. I read the runes carefully and cringed.\n\n\"Fuck!\" I cursed. \"I had to pick one of the other portals to trap hoping my enemy entered by that one. If not, I would battle it without the benefit of injuring or killing it with the devices I had so carefully collected. I once more slipped into a deep meditation. One of the doors shimmered briefly and that is the only hint I was given. I went to task. I set the pressure plate directly in front of that door. I tied the explosive to it angling it so that the blast was focused on that door. The last objects I collected were poisoned spikes. Those I hid in three ceiling tiles and strike when the sensors were triggered. I held the three crystals I had earned and found no immediate use for them. I placed them in a pocket of the robes I was wearing. My gut screamed they would somehow come in handy and to keep them close.\n\nThe runes indicated that once I was ready to touch the obelisk to begin the trial. I let out a few cleansing breaths, took out the Sith sword, and touched the obelisk. I grinned when the door I had rigged opened. The lumbering shape stepped into the room and the explosives went off at ground zero. The thing did not even stagger or take a single misstep. I cursed a blue streak as I got my first good look at it. The thing was over two meters in height and my first impression was of a bald ogre. The thing had no body hair and was clad in only a loincloth. Its musculature was layers of muscle and sinew. It possessed two clawed fingers and an opposable claw that looked like it could cut through starship armor. It strode into the room and the second layer of traps went off. The sensors locked on and fired eighteen poisoned bolts which failed to penetrate the things epidermis.\n\n\"Fuck me sideways!\" I cursed and lashed out with Wind Sword and flung the razor-sharp burst of air at the creature. Surely this would bisect him and leave him bleeding on the floor. Nope! The technique broke up before making contact. This thing was not resistant to the Force like some races where mind tricks failed to work. Oh no, this fucker ignored the physical aspects of the Force with ease.\n\n\"Foolish Sith,\" it spoke in a deep male voice. \"I am Khalish Da Khan, and I eat little Sith like you for amusement.\"\n\n\"What the hell are you?\" I asked as I hefted the sword and readied for close quarter combat.\n\n\"My people are known as the Dashade. We are the enemies of the Force!\" It roared as it moved surprisingly fast. He did not project an anti-Force aura, which I was grateful for, but was personally highly resistant to the Force itself. I felt his left claw land while my sword was engaged blocking his right one. I hissed in pain and sidestepped the brute and slashed his right arm. The blade bit deep enough to draw a thin line of blood. At this rate this was going to be a knock down drag out. \"Pitiful Sith!\" He attempted to get me in a bear hug, but I ducked and earned a knee to the face. He was a gifted combatant and dirty fighter. I shifted tactics. It would be futile to engage him in a formalized style therefore I resorted to street fighting skills.\n\n\"Come on motherfucker! I got your number now!\" I cursed and sheathed the Sith weapon and went to hand to hand. While the Force did not work actively it still functioned to heighten my speed, strength, and reaction time. The Dashade roared and its eyes lit up as we closed the distance. While I could not easily penetrate his armored hide, I decided to go for his internal organs and muscles. I channeled the Force into a palm strike and sent kinetic energy directly into his body to see what impact that might have. The blow landed mid chest where his lungs should have been. The brute staggered back and spat out bright blue blood.\n\n\"Ha! A challenge at last!\" He growled as he hacked up a second mouthful of blood. \"Good! Die well Sith!\" His attitude had changed from Sith scum to simply Sith.\n\nHe was not greatly slowed by the attack but in those immortal words, if it bleeds, we can kill it. I was able to bat away some of his claw attacks but not all. I was bleeding freely from half a dozen lacerations while I continued to batter his insides. I was finally rewarded with a slow but steady trickle of the bright blue fluid from his maw. \n\n\"It is at times like this that I wished I knew the five fingered death punch.\" I remarked and the Dashade laughed.\n\n\"I doubt such a thing would avail you,\" Khalish growled as his breathing became labored. \"I have never faced a foe like you.\"\n\n\"You are a worthy adversary,\" I replied, and Khan's eyes became bright and we circled each other. We were both sluggish from the wounds we had received. I feinted and when he slashed with his dominant claw. I tried to go for his exposed ribs but damn it if he did not spin and slash my left arm. Luckily for me Left caught the brunt of it and turned it away. I committed to my attack and felt one of his ribs break and the Dashade roared. I was too weak to backflip out of the way as he entered a blind rage. I suffered several shallow wounds before the damage took its toll. Khan fell to his knees with a thunderous sound. He was gasping for breath and with another cry he coughed up more blood and looked up and nodded.\n\n\"I give you a good death.\" I said. I charged up my fist and struck his forehead. The sound of his skull shattering was drowned as with the Dashade's death cry. With a gurgling rasp he dropped face first to the floor. I looked down at my dead foe. \"Sleep well old soldier.\" I collected stones and built a cairn around his body. He deserved an honorable burial. I was too weak to use the Force until I meditated and restored myself. I sat crossed legged at his feet and closed my eyes. I replayed the fight in my head to learn from my mistakes and honor the Dashade. ",
        "My HUD dinged to alert me that my meters were back in the green and the obelisk crumbled revealed more lightsaber components. I got up and collected them. My HUD chimed again announcing a special event beginning in one hour. There were apologies but due to scheduling conflicts the Children's Cancer Event was starting soon. Well, it was for a good cause. I took out the ancient Sith blade and prepared to tear through the last challenges. Sword in hand I exited through the open portal the Dashade had entered through. The rest was a blur. I teleported beyond traps and using enhanced Force strikes to cut down my enemies. I collected the rest of the components and in some cases earned a few of those single ability holocrons.\n\nGasping and covered in blood I knelt next to the remnants of the last obelisk. I assembled the lightsaber and activated it for the first time. The strange blade hummed and crackled. The aura of the weapon a deep crimson while the core was the void itself. I deactivated the weapon and clipped it to my belt. I checked my HUD and had just enough time to reach the rendezvous point and meet the winner of the event. Normally I would have been ticked off, but this was to help children. I was irked to have to rush the last portion of the quest, but it evaporated as I looked forward to meet the winner of the contest. I had five minutes to spare and found my inventory no longer greyed out. I stripped down, went to a small waterfall that might be a source for the caves below. I washed the blood and gore from my skin and conjured a wind to dry off.\n\n\"What to wear?\" I muttered aloud and heard a cough behind me. I turned to face the winner of the contest. She was of average height and her race hidden under her Sith uniform, robes, and mask. The mask was an elegant battle mask tied in design to the robes she wore. I did like the rubies adorning it giving her an elegant look. \"Congratulations on your generosity and those you will aid with it.\" \n\n\"Anything to spend time with you. I am your humble student Lord.\" She said in the sultriest voice I had heard in a long time. The Devs had done a great job this time. She looked down and I realized I was still naked. I dug into my inventory and slipped into the dark uniform and robes Nightwind had given me after I graduated. That would do for now.\n\n\"Let go fuck some shit up!\" I declared as a portal opened, and I gestured for her to go ahead. She rubbed her hands together and strode through the gateway. I followed wondering how nice her ass was under those robes. The planet beyond was full of lush vegetation and the umbral canopy of a massive forest. Bioluminescent fungi and insects broke up the shadows and created a faerie like atmosphere. I swapped out the lightsaber I had crafted on Korriban for the Darksaber. She had come to fight alongside Ghostfire after all. I slipped on my iconic mask to finish the look. It was only fitting after all. A sudden swelling of Dark Side energy alerted me that we were not alone.\n\n\"I feel it too.\" My companion whispered. \"Who?\"\n\n\"Me, you selfish bitch!\" A sensuous female voice called out from the shadows. I saw movement as the striking feminine figure stepped out in front of one of the huge glowing fungi. I knew her instantly, a Lethan Twi'lek, with her scarlet skin and tribal tattoos covering her body.\n\n\"Talon?\" I asked and she nodded. I could not help but smile seeing her clad in the skimpy black sports bra, ornate fingerless gloves, and a narrow black loincloth that barely hid her groin and ass. Her hips were on display showing off most of her tattoos and do not forget those skin hugging fuck me boots that barely topped her knees. Her lekku, or head tails, twitched and shifted noticeably.\n\n\"Why the fuck are you here?\" My companion snapped. \"I paid...\"\n\n\"Winter Chorubinth, how cute,\" Talon sneered. \"I matched you and dropped five hundred K for this avatar and her skills.\"\n\n\"Ladies, we have a quest to complete. Let us be professional and murder to death our enemies and claim our prize.\" I suggested and they agreed, if reluctantly. Each woman took a side and flanked me as we crept towards our destination. I tried to discover which planet we had been sent to. The lush vegetation and the barely visible constellations were of little help. As we reached a road, I felt it, a weak but steady sense of the Light Side. I could use Force cloak, but could they? \"Can you diminish your aura?\" I asked them.\n\n\"I can.\" Talon replied after a brief delay. I glanced at her and picked out differences from the avatar that piloted my ship on this side of things. Her eyes were angled and narrower giving her a sexier and more sinister appearance. Her mouth was narrower with distinctly poutier lips. I could not help but imagine them wrapped around my erection. Winter was still a complete mystery and I anticipated seeing her unmasked.\n\n\"I can as well,\" Winter added. \"Our enemy, the Jedi, are close.\"\n\n\"Yes.\" I informed them as I activated Force cloak. We moved slowly and I reached out passively for any signs of the Force or security measures. Our sole task was to infiltrate and steal a box of Kaiburr crystals. We followed the road and came across what appeared to be an ancient stone wall blocking off the only easy way into the valley beyond. I directed us north towards the worst terrain. It was strewn with massive boulders and a bitch to navigate.\n\n\"Worth it,\" Winter cursed as we slowly gained altitude. \n\n\"They will never see us coming,\" Talon added good naturedly.\n\nIt was long after nightfall before we breeched the top of the hill. A hill that turned out to be the base of a mountain cliff. Seriously?! Fuck this noise! I growled internally.\n\n\"Listen,\" I said addressing them. \"I do not know about you, but I am not climbing that damn cliff. Give me a little bit, meditate and recharge while I work a little Sith sorcery.\"\n\nThey tried and failed to meditate. Instead they watched intently as I reached out gently to manipulate the weather. The clouds were already there so inspiring rain was easy. Talon squealed as the warm rain caused her skimpy uniform to cling to her like a second skin. Her nipples and naughty bits were clearly on display. I did not apologize. She looked amazing! The rumble of thunder echoed across the mountain range. The first flash of lightning struck close but did not present a real danger.\n\n\"Now what?\" Talon asked licking her lips.\n\n\"This!\" I stated as I used the naturally occurring lightning to hide my unnatural teleportation to the top of the cliff. I scouted around and found no immediate threats. The next rumble of thunder and I teleported the pair to join me. They were giddy from the experience but with a warning gesture they calmed themselves and joined me as we topped the rise and spied the Jedi encampment for the first time.\n\n\"Well fuck, that is not a small camp...\" Thorn cursed.\n\n\"It is an entire academy!\" Winter finished.\n\n\"This keeps getting better and better.\" I laughed. \"More enemies to defeat.\" I fought the urge to blurt out, 'think of all those experience points'. \"Let us skirt the academy for now and observe. We need to scout around and find an entry point.\"\n\n\"I agree,\" Talon responded, and Winter simply nodded. \"If we are lucky, we can take out any guards or patrols they send out.\"\n\n\"No, if we kill them and they fail to return they will be missed.\" I stated and she reluctantly agreed. \"Look then kill. Winter?\"\n\n\"I am confused. I know we are grossly outnumbered but why treading so lightly Master?\" Winter asked.\n\n\"I will try and explain my point of view. It is true the Sith draw their power from the Dark Side. We gather our strength from rage, fear, and passion. To grow incredibly powerful, we must control and harness our abilities. Look at this way, imagine you are standing within the center of a fire. When you need to act the door opens and a burst of air creates a backdraft of fury that roars to life and engulfs our enemies. I hope that helps.\" I explained.\n\n\"Backdraft,\" Thorn mused. \"I like the analogy.\"\n\n\"Let us be shadows then,\" Winter declared. \"Until we are an inferno.\"\n\nWe scouted the perimeter of the Jedi Academy. They were surprisingly lackadaisical about security relying on a few droids and a series of force fields. I decided to abandon my robes and switched to those given to me by my Rakatan master. It felt more appropriate to carry the moniker of Darth Valakhor for this mission. Once we had finished our circuit of the exterior of the encampment, I puzzled out our best insertion point.\n\n\"Let us rest. Meditate. We strike at sunset.\" I dictated.\n\nI spent the time utilizing my portable worktable to upgrade the Darksaber. Once it was done, I could use the Ghost Blade technique to its fullest. I was eager to see the look of shock on the Jedi I faced when they fell to the cunning wisdom of Exar Kun. \n\n\"You are smiling,\" Thorn purred in my ear as she knelt behind me and molded her body to mine.\n\n\"You are not meditating.\" I replied.\n\n\"I cannot focus when you are so close,\" she cooed. \"Are we far enough from the Jedi to train in hand to hand combat?\"\n\n\"I knew it!\" Winter hissed. \"You just could not keep your paws off him!\"\n\n\"Why are you here then?\" Talon fired back without moving.\n\n\"I saw him first!\" Winter snarled. The Dark Side began to rise, and if I did not intervene soon our position would be revealed.\n\n\"Enough!\" I snapped playfully. \"Do I have to treat you like teenagers?\" I asked as I tapped into the Realm of Shadows and bound and gagged both hand, foot, and mouth. Winter lost her balance and softly toppled to the ground. Talon found herself completely immovable as her arms were suddenly behind her back and secured as were her ankles. \"Blissful silence.\" I muttered. \"Let me finish this delicate task and then I will pound both of you into merciful ecstasy.\"\n\n\"MMMMHMMMM!\" Winter moaned behind her gag.\n\n\"MMMMHHHMMMM!!\" Talon agreed.\n\nI was nearly done but they did not need to know that. I pulled down my HUD and discovered that our current quest had changed once we discovered the Jedi had an entire academy here. It was labeled 'What Lies Beneath'. Interesting. My quest on Korriban was mostly done. I could return later and finish the boss battle. I was happy about that. This was simply a detour of sorts. Since the ladies were all tied up, I had time to do a quick rebuild using the materials from the Korriban quest. Katria could use a new lightsaber. Thorn and Winter were getting anxious. I had a fix for that.\n\n\"Hush, let me introduce you to a friend of mine.\" I said taking Hentie the Tentacle Monster from my inventory. I held him up and they made muffled happy noises. \"Go get 'em boy.\" I directed and Hentie launched himself at the pair. I tried to ignore the rude wet sounds coming from behind me and failed. I smiled knowing they were having a good time.\n\n\"Ding! Your Tentacle Monster has leveled up! Congratulations!\" \n\n\"No shit,\" I laughed and pulled down my HUD. I swiped over to his screen. \"Holy crap bud, you have five levels to improve. I am so sorry.\"\n\nWhen did pets get skills and talents? I needed to start reading the update notices more carefully. Let us see what you can get. \n\n\"Secrete aphrodisiac. Improved seduction. Hypnotic gaze. Improved stealth. Penetrating sneak attack.\" I listed off some of them. \"You get five. Like father like tentacle monster.\" He went from your typical minor eldritch horror to a stealthy beast with lots of surprises. \"Upgrade complete.\"\n\nThe girl's noises got louder and more intense. I looked over my shoulder and grinned. You get what you paid for. Winter was on her back having every orifice violated. Her mask was next to her and I stared at her quasi albino coloring. Her hair and skin were the color of milk. Her eyes, lips, tongue, nipples, and labia were a bright blue. I looked up her race and discovered she was an Arkanian Offshoot. She was putting that long blue tongue of hers to good work.\n\n\"That's my girl.\" I whispered.\n\nDarth Talon was being held aloft, something Hentie did not have the strength to do before his upgrade. Four of his tentacles supported her as the others penetrated her available openings. Hentie's happiness rating was through the roof and our bonding was better than ever. The ooze surrounding his tentacles kept the ladies in a constant state of heightened arousal until his stamina meter dropped to a certain level. \n\n\"Enjoy, he has a while before he runs out of gas.\" I informed them.\n\nI returned to my minor project and looked through the materials I had on hand. I wanted this to be an elegant weapon and stand out. Katria was going to have a blast with this once I was finished. \n\n\"Mambien?\" I muttered as first Winter then Thorn cried out as one orgasm blurred into another. \"I am so proud of him.\" The portable workbench was able to preview a casing using the rare alloy. \"Ooh! Pretty! Yep, that is perfect. Now, what can I use for an inlay? How about... ooh, Orhan Marble...\" I continued to talk to myself as I crafted the outer housing of the new weapon. \n\nThe body of it was made of scintillating golden Mambien alloy. I cut slots for the inlay of the gorgeous thin sliced marble. To finish off the look I scanned the various fonts and glyphs available for scrollwork to finish the look. I reached the last font and decided to use it. They were elegant and had that unique alien style I was looking for. They were elongated ovals with geometric designs inside of them. They reminded me a little of Egyptian cartouches. They gave the weapon a distinctive appearance. Since Katria would be using it I added final touches to reflect her feline nature. I etched a faint stripe pattern on the casing, then added a claw design to one end and fangs to the other to personalize it even more.\n\n\"Name, it needs a name.\" I growled as I triggered the virtual weapon and stared. The rare Kaiburr crystals created an unusual blade. It had a black core with a blood red aura. The blade clashed with the bright casing. I was sure it would take an enemy off guard. I finished crafting the weapon as I pondered its moniker. I was nearly done when it came to me. I used the glyphs to name it. \"Mornar,\" I declared. \"Black Fire.\" The length of the weapon was standard for a single bladed lightsaber, but it possessed two beam emitters along with the mechanisms to alter the blades. I finished it and placed it immediately into my inventory. Its premier would have to wait until later.\n\n\"Now. What I am going to do with the two of you?\" I growled as I shut down the worktable and turned my undivided attention to the ladies. \"Aw, would you look at that.\" I said as I took images of the two women cuddled next to an exhausted tentacle monster. I returned him to my inventory to let him rest. \"I am impressed. They wore him down to dark yellow almost red.\" I gathered up their damaged uniforms and robes and as they slept, I repaired them. Once they were fixed, I cleaned them and folded them neatly. I picked up Winter's mask and set it atop her clothing. I lightly brushed the hair from her ear and noticed its almost elfin shape. They were delicate and came to a prominent point.\n\nI stood and practiced the eighth lightsaber form and since they still slept, I had time to perform the challenging technique passed onto me by Exar Kun. As I finished that I felt a raw source of Force energy. I followed the pull to a waterfall. Perfect. I returned to the ladies and they were just waking up. I helped them to their feet and guided them to the nearby mountain waterfall. They washed off the signs of their encounter with Hentie and I directed them to close their eyes and recharge their energies under the ice-cold torrent from above. I let the pounding water massage my tired muscles and took in the cleansing energy it provided. \n\n\"Your friend took the edge off Master,\" Winter giggled. \"But that does not leave you off the hook.\" She declared. I got a better look at her. Hell, even her areolas were an icy blue color. I licked my lips as she continued to chat. \"Another first for today,\" Winter purred playfully as she pulled her ass cheeks apart revealing her dark blue sphincter. \"He did a real number on me.\"\n\n\"I take it you have never,\" Thorn giggled. \"Yeah, me too, I might after this if I can find two men I can trust.\" Thorn made a show of cupping her breasts to show them off. They were a bit bigger than Winter's and had brick red areolas and nipples.\n\n\"You actually wore out Hentie. Damn impressive ladies.\" I praised them.\n\nWinter's expression changed suddenly, and her eyes snapped shut as if listening for something. \"Can't you feel it?!\" I reached out and felt the low thrumming pulse. I had been so busy focusing on the water and their naked beauty that I had gotten lazy. \n\n\"Score one for Winter,\" I whispered.\n\n\"I feel it too, this is amazing!\" Thorn declared. \"What is it?\"\n\n\"I believe something is waking up,\" I informed them. \"The pulse is getting stronger. We go, now!\"\n\n\"But it is day, how can we hide under these conditions... Master?!\" Thorn asked.\n\n\"I will cloak us, stick close and speak only if it is absolutely necessary.\" I directed them.\n\nWe dressed and armored up. I drew once more on the shadows and cloaked us. I directed our movement so that we were shadows moving amongst shadows. What were the Jedi up to? I began wondering if the academy was simply a front for something else. It took an hour to get to the perimeter of the cluster of buildings. I checked my map to see who was housed and where. We would avoid the younglings as much as possible. Sure, I was playing a cold blooded Sith but personally I did not savor killing kids even in a game environment. One of the buildings was marked storage but it was larger than I would expect it to be. The main quest marker was pinned to it.\n\n\"Storage.\" I whispered and the ladies nodded.\n\nThis was the most dangerous part of our path so far. There were no shadows to hide among and I would have to cloud the minds of students and teachers alike until we found refuge on the near side of the storage facility. I sang the Song of Revelation barely above a whisper to locate any Jedi or droids along our path. We were in the clear. I guided them in the shortest of paths between the female's dormitory and that of one of the three dojos marked on the map. This was too damn easy. Barely had the thought formed when the double doors of the dormitory swung open and nine female students and a woman wearing master rank robes exited. The three of us froze. I cleared my mind. The hint of fear would be enough for the master to sense our presence.\n\n\"Master, is something wrong?\" A gorgeous Togruta padawan asked. She was of the same race as Ahsoka Tano, but her coloring was different. Her head tails and facial markings tended towards light reds and persimmon.\n\n\"For just a moment I thought I felt a chill of the Dark Side.\" The human female declared.\n\n\"Could it be from the dig site Master?\" An albino Twi'lek followed up. \n\nDig site? I wondered what they were delving into. I looked at the feet of the Jedi Master to keep from drawing unwanted attention. I did hear the softest of creaks from her double-bladed lightsaber on her hip. It was the standard length for such a weapon and crafted with the typical simplistic design the monastic Jedi tend towards. Instead of trying to mind fuck a Jedi Master, a dangerous attempt, I went for misdirection. If it worked, and it was a big if, they would be drawn off long enough to get into the supply building. I was about to use the Force to create a tiny spike of Dark Side energy when I changed my mind. Kaia-Jutsu is not Force based. I could use it to lure them off without them sensing a thing.\n\nI sang softly using the Song of Scattering Light. It was one of the first I learned and rarely utilized it anymore. I imagined movement near the guy's dormitory. The keen senses of the master caught it and ordered her students to be cautious as she used Force speed to cross the distance in a matter of seconds. Her students were so enthralled with her swiftness we easily slipped into the shadow of the girl's dorm. We caught our breath after being so close to being discovered. We had plenty of cover to reach the storage facility and see what the Jedi were up to. The equipment they possessed would give us a clue to their activity here. If we found the box of Kaiburr crystals fine, but I was more intrigued by this hidden dig site.",
        "Thorn was a talented Slicer. She had mad security and computer skills. She easily sliced the mediocre alarms protecting the building. Winter took point as we entered with a clean tactical sweep of the office. The office was not occupied, and once Thorn hacked their network she found the secrets the Jedi were hiding here.\n\n\"Pre-Republic Force users... temple complex below us. I do not dare dig deeper. The next level of security is a crap shoot at best.\" Thorn stated.\n\n\"Let's go peek and see what is in here and see what kind of tools or machinery they are using.\" I urged. \n\nWe snuck into the heart of the building and instantly we were clinging to the shadows. This was not a storage facility but the dig site itself. The scent of damp earth and exposed roots permeated the atmosphere. Two figures dressed as Jedi historians were approaching the lift that allowed access to the dig. You could tell they were historians from their white under tunics, silver tunics, and the elaborately patterned tabards which reminded me of a mix of a Celtic knot and a computer circuit board. Finishing the look was an obi, or sash, wrapped around their waists which had the same pattern as the dangling tabard neatly tucked under their obi. \n\nI waited until the Jedi took the lift and entered the dig and it returned to the surface. I was about to speak when I saw Thorn's expression. She was smiling and walking towards an unremarkable container.\n\n\"Master?\" She muttered as she knelt, took out her tools, and picked the container's lock. Thorn opened it and her lekku quivered joyfully.\n\n\"Holy...\" I exclaimed and clenched my teeth to keep from crying out anymore.\n\n\"Are those Kaiburr crystals?\" Winter asked. \"They look odd.\"\n\n\"Yeah, more like diamonds than crystals.\" Thorn whispered.\n\n\"I have seen the crystals of Ilum and Ossus, but these put them to shame.\" I stated in shock. \"Let us split these up... what?\"\n\n\"It will take less time if you hold them. We can divide them later.\" Winter suggested.\n\n\"She is right. We need to go.\" Thorn agreed. I claimed the entire container and we prepared to take the elevator down into the dig.\n\n\"Time to kill some Jedi. Follow me to the lift. Keep your weapons ready and your thoughts clear until the opportunity presents itself. No mercy.\" I whispered as we snuck to the elevator. \"When the lift lowers be prepared to be challenged by security. I expect either Jedi Knights or droids or both.\" Winter giggled and Thorn punched her arm and glared. \"What?\" I rumbled and they both looked guilty as sin. \"Well?\"\n\n\"You tell him,\" Thorn said smiling wickedly.\n\n\"Fine. I told her you were staring at my asshole earlier.\" Winter purred. \n\n\"She thinks you are going to violate her ass again down there.\" Thorn hissed clearly jealous.\n\n\"I am.\" I replied. \"I am going to pound both of you into submission. Got it?\"\n\n\"Oh, yes Master.\" The moaned in perfect unison.\n\nWe stepped onto the flat open surface of the lift, crouched, and activated it. The elevator vibrated as it descended into the pit. It was loud too. Anyone below would know someone was coming down. I unhooked the Darksaber and readied to kill anyone we encountered. I heard voices below us.\n\n\"Late as always,\" a male voice stated. \"I swear he is sleeping with her.\" There was a strong emphasis on the word her.\n\n\"Satele is too uptight to sleep with a student, no matter how cute he is.\" A female voice replied.\n\nTime to try out the Wind Sword technique. Once they came into view one of them was in for a world of hurt. If it worked, it would shock the remaining Jedi and hopefully throw them off balance. The lift shuddered and came to a halt. The two Jedi historians we had seen early approached the elevator. I called up the Wind Sword and flung it at the closest Jedi. He barely sensed its presence before it was too late. The blade struck mid torso and cut him in half. Winter used a refined version of pyrokinesis and fired a laser thin beam at the female Jedi as she was reaching for her weapon. She was dead before she hit the ground.\n\n\"I will give her this, she held it together,\" Thorn said a hint of admiration in her voice.\n\n\"Search the bodies and see if there are any clues on them.\" I ordered as I swept the area for droids or more Jedi. While there was no big machinery here there were clear signs in the floor of the cave that they had once been here. This was a serious ass dig they were on. I heard the snap hiss of a lightsaber being activated and Winter's voice.\n\n\"Ooh, pretty.\" She gasped. I looked and saw her holding the female Jedi's weapon. The thing that made her weapon so different was its viridian hued blade. The silver-green color was rare indeed. She deactivated it and tossed it to me. Thorn handed me the male Jedi's lightsaber. \n\n\"For your collection.\" Thorn said. \"His uniform is fucked. Winter, would you get hers and fold it up neatly please. We might need a disguise later.\" They went through the pockets of the Jedi while I kept watch. Winter set down the uniform of the female, food rations, a full water bottle, and what my HUD called a historian's work belt. Thorn found food and water as well as an advanced work belt. \"I found a personal recorder Master,\" Thorn said as she handed it to me. I put everything but the recorder in my inventory. They did not seem interested in things and more into the experience.\n\nWe found a defensible position and listened to the entries recorded by the male Jedi, one Jenro Stormcaller. The gist is that after native miners discovered the cave and the high-quality crystals the Jedi swooped in to investigate and claim the mineral treasure. The only other thing of interest was a mention of a crazed droid they discovered and had self-activated. Since then it had been on a murderous rampage. Cool! Any droid capable of killing Jedi is worth making friends with. \n\n\"Let us go ladies. We are not far from the entrance to the ruins. I am sure things will only get more interesting once we delve the depths of this place.\"\n\nWe remained on high alert. The main entrance was guarded by no less than four battle droids. Strange for the Jedi to use them they usually used protocol or science droids. The units you can expect to see possess serious sensor arrays and alert the Jedi to intruders. Only in rare occasions when lives are on the line will they employ battle droids. What the hell are they up to? At first, we could only see silhouettes, but their movements were clearly those of droids. It was not until we got closer that we got our first clear look at them. What the hell? I had never seen this model of droid before. They were roughly humanoid except the prominent head piece that reminded me of a wide brimmed straw hat except that it was diamond shaped. It had no features just a single pulsing red optical sensor in the middle of its face. \n\nThe droids were armed with two wicked looking energy weapons instead of arms. There was no way of knowing if they possessed personal shield generators. They were a complete mystery, and I felt the thrill of a great challenge course through me. I wanted to holler and charge in but that was foolhardy. Better to get into a position where we could hit them from the shadows and start with an advantage. We squatted down and I traced out a crude map on the ground. I got my point across and we would split up briefly. The ladies would take up flanking positions as close to the entrance as possible and when I rushed the sentries, they would cut the closest droid down and then aid me if necessary. We stood and turned to come face to face with all four battle droids. \n\n\"Well... Fuck!\" I cursed but the droids did not attack. They greeted us in a language none of us were familiar with. Attacking would be futile and lethal for us. Now that they were so close it gave me a chance to examine their configuration, composition, and the creativity that went into their construction. The bulk of their exoskeleton appeared to be an unfamiliar variant of durasteel. That gave them an extremely robust design. It was the brass, copper, and bronze colored inlays on their torsos, heads, and portions of their legs that astounded me. The markings were identical to the elongated ovals with their intricate geometric designs that I had used on the latest lightsaber I had crafted. \n\n\"We need to communicate,\" I stated to my companions. \"Let us try something universal.\" I conjured a guitar out of shadow stuff and began to play. I chose a particularly challenging piece I had been writing illustrated beauty as well as mathematical complexity. The droids lowered their weapons and greeted me.\n\n\"You are designated Darth Valakhor,\" the lead droid stated in flawless Rakatan.\n\n\"How did you know I spoke Rakatan?\" I asked.\n\n\"Logic dictates,\" it began. \"If you were fluent in the Creator's language then you would have responded when we first greeted you. Since you failed to respond my protocols chose the language of the Rakata next. If that failed, then I would have regrettably settled to Galactic Basic as I was forced to when speaking with the other flesh-based sentients.\"\n\n\"The Jedi you mean.\" I replied. \n\n\"Affirmative. How may we be of assistance Valakhor?\" It asked and I felt the smile curl my lips. \n\n\"Tell me about this place and if it is not against any directives, I would love a full break down of the Creator's language and your design schematics. I am a bit of a creator myself.\" I asked.\n\n\"I suspected as much. Seeing as the Creators are long dead, here take this and let it serve as inspiration Master Valakhor.\" It said. The droid reached up as a slot opened and a slender memory card was extruded. It handed it to me, and I examined it on the spot.\n\n\"Holy shit,\" I cursed as I reverted to Galactic Basic. \"Their technology is based off Kaiburr crystals.\" I said as I held up the chip. A third of the chip was an elegantly faceted crystal of the highest quality. The circuit board making up the rest was not limited to a simple linear pattern but a three dimensional one. \"Damn impressive!\" I switched back to Rakatan. \"I will make great use of this. Where can I read this chip?\"\n\n\"Here... here... or here.\" The droid indicated on a holographic map it projected from its chest. I studied it and memorized it the best I could. \"Be forewarned, the Creators were never a subtle race. The mechanisms are not what you would call quiet. You may have to thin the others out before reading it.\"\n\n\"Ask him about the killer droid.\" Thorn urged.\n\n\"Yes, what is the story with the other droid?\" I asked.\n\n\"Poor thing,\" it began. \"He and his master came here decades ago. While his master was dying our brother in steel was damaged and shutting down. The human managed to enter the main vault. Left behind we tended to the wounds of the other and repaired him. He has guarded the last resting place of his master since. When the others intruded, he carried out his mission.\" \n\n\"Such loyalty,\" I remarked and the droid nodded.\n\n\"After all, his master was also his creator.\" The droid explained.\n\n\"Thank you for everything.\" I said with a bow and the droids returned to their posts. \"Time to go.\"\n\n\"Will the other droids interfere with us?\" Winter asked.\n\n\"I doubt it. They seem more interested in maintaining the stability of this place. We are here to gather the contents of the vault, not destroy anything.\" I replied.\n\n\"The Jedi do not fall under their protection then,\" Talon chuckled. \"Excellent!\"\n\n\"Let's fuck some shit up.\" I declared.\n\nWe passed the droids and under the archway that marked the entrance into the tomb complex. The size of the cavern was awe inspiring. The roof was not often visible and the length and breadth enormous. Over the last ten thousand years or so, since the fall of the Creators the shape of the cavern had been altered by cave ins, earthquakes, and the passage of time. I will give the elder race this, they built things to last. Where the ground had given way the structures, wherever possible, remained at the same position. In many cases this involved technology allowing them to hover in place. There were vast gaps between a stable cavern floor and the floating structures. The Jedi had conveniently constructed walkways to facilitate movement from the floor of the main cavern to the buildings above or below.\n\nIt was far easier shrouding our movements in shadows. The cave was poorly illuminated. There were many patches of shadows and darkness. They had marked paths with artificial lighting, but they illuminated only small patches in the overall acreage of this place. The nearest site for accessing the chip was well lit and heavily guarded. I counted six Jedi Knights, half a dozen Padawans, and one Jedi Master for that building alone. Why so large a force for a single building? I wondered how many Jedi the council sent here to investigate these ruins. If the Kaiburr crystals we had taken had been mined from this site then a large force would be worth it.\n\n\"We wait.\" I whispered. \"Why so many for one building?\"\n\n\"Look,\" Thorn whispered in my ear. \"They are leaving.\"\n\nShe was correct. Four knights and their padawans used the bridge to cross to a pillar of rock beneath one of the floating structures. As we watched a golden light enveloped the eight Jedi and the glow reappeared from the edge of the structure above. Teleportation! That explained why they did not need to build bridges to all the buildings. Some of them must possess functional teleportation technology. The Jedi master remained with the four other Jedi. Now was the time to attack. We made our way towards what I thought of as the reading room. The Jedi entered the building leaving only two to guard the entrance. The Knight and his Padawan chatted about the ruins and their hopes for a greater understanding of the Force.\n\n\"What do you think caused their extinction master?\" The Padawan asked.\n\n\"Who knows it could have been disease, natural disaster, or perhaps the Rakata.\" The Jedi knight proposed. \"Once we understand their language their mysteries will hopefully be revealed.\"\n\nThe Padawan was a healthy teenager belonging to the Zabrak, the same race as Darth Maul. His master, the Jedi knight was a human male in his mid to late twenties. They both had single bladed lightsabers at their hips. Winter and Thorn struck out from the shadows. Only until it was too late did they react to the danger. Both Jedi fell to the ground with smoking holes in their chests. I heard the distinct snap-hiss as the Jedi within sensed our presence and intentions. \n\n\"Sith!\" The Jedi master warned. \"Take the women I will face the masked one!\"\n\n\"Yes Master!\" The Knight and his Padawan agreed as we rushed into the well-lit structure.\n\nThe Master was a human female, and she was armed with a light pike or double-bladed saber. It was the same length as Maul's but was more elegant with delicate scrollwork. She had both cerulean blades activated and when she saw the Darksaber her eyes narrowed. We crossed blades and I began with form five or Shien. She used Niman or form six with great skill. I had not dueled a truly gifted opponent in a long time. An eerie silence filled the air as the Darksaber and her weapon clashed. Her movements were clean and economic. After a short while I slipped into a light meditation and I could almost anticipate her next move and the black blade was there to soundlessly intercept hers. When we locked blades, hers lost intensity and grew dim.\n\n\"What sorcery is this?!\" She hissed in horror.\n\n\"Deadly gravity turned the Kaiburr crystal into a diamond.\" I explained. \"I rescued it and rebuilt my weapon.\"\n\n\"It should be destroyed,\" she growled as I felt a hint of fear and uncertainty.\n\n\"Your fear betrays you,\" I laughed and pushed the attack. She had mastered Niman but I held my trump card as I let her fear build. The poison from the Darksaber had infected her weapon. The once clean blue blades were now the color of sapphire or permafrost. She backflipped out of combat range and I felt as she pushed the fear from her mind and sent cleansing energy into her weapon. \"Impressive! Join me. Taste the pleasures of the Dark Side.\"\n\n\"I will never join you.\" She calmly replied. The padawan was long dead and to emphasize the situation Thorn decapitated the Jedi knight. His head rolled away as his body dropped to the floor of the chamber. I felt a twinge of compassion and knew she had trained the Jedi knight herself.\n\n\"Were the two of you lovers?\" I asked and felt a flicker of rage. What a prize she would be if I could turn her. \"Guard the entrance and keep an eye out for reinforcements.\"\n\n\"Yes Master,\" they replied.\n\n\"Now, come on and let us cross blades again. You never truly know someone until you duel.\" I purred. \"I will show you something new.\"\n\nHer roar of anguish heralded her use of Force speed to cross the distance between us. She came on like a devastating whirlwind. I slipped into form eight and thwarted her initial onslaught. Once more the insidious drain dimmed her blades, but she was too intent upon destroying me. I was pushing her back and into a purely defensive posture. When she attempted to go on the offensive, I drove her down. I relished her growing sense of despair.\n\n\"Only your rage can defeat me,\" I urged.\n\n\"Where did you learn this form?\" She asked her voice uncertain.\n\n\"Not your concern,\" I fired back as I laughed. \"Soon you will break and your journey to the Dark Side will begin.\"\n\n\"No! I am a Jedi Master! I will not embrace the darkness!\" She stated proudly. I needed to shatter that pride of hers. I did not want to kill her, but I also did not have unlimited time for this. I pushed to the next level and attacked her weapon. I activated the Ghostfire blade and cut her weapon in twain. She staggered back as I used telekinesis to rip the two halves from her grasp. She bled from several small wounds. The scent of her blood triggered a feeding frenzy. I was upon her and my fangs sank into her throat. \"Forgive me mother!\" She clung to me as I drained her dry. Her body shook as I fed her my blood and changed her. I held her close as the conversion overtook the former Jedi Master.\n\n\"Master...\" she purred. \"I know you. I had your holocron in my possession during my training as a historian. You are Darth Nocturnal. I should have known you sooner.\"\n\n\"Show me where the reader mechanism is located.\" I ordered.\n\n\"There.\" She pointed weakly at first, but her body was quickly regaining its full strength. \"Let me show you.\" I let go and she strode with a renewed power and grace. \"It is here but it is not functional.\"\n\n\"Do not be so sure,\" I corrected her. I removed the crystal memory chip and slid it into the slot prepared for it. Generators vibrated beneath us as they spun up to full potentiality. A surge of the Force filled the area. No Force wielder could possibly ignore it. \"Be prepared to defend that entrance.\" I called out to Winter and Thorn.\n\nThe ceiling split open and four gleaming metallic armatures dropped down. Three of the segmented bronze arms ended in polished lenses of flawless Kaiburr crystals. The fourth held a man-sized crystal that pulsed like a human heart. The arms moved and took up positions that gathered the light from the main crystal reflecting and refining it until a thin laser thin beam struck the back wall of the structure. A low sound rumbled to life and slowly gained the right volume and steadiness.\n\n\"...are the Zeffo. We serve the balanced Force.\" The voice declared as a holographic image took shape. It looked like the battle droids we had encountered earlier. \"If you are seeing this you have proven yourself to our mechanical children. While we perish, they will continue, our only legacy left to us. Approach and speak with us.\" \n\nMy newborn child stayed close but only I stood within the holographic circle. A brief flash of light and the holographic figure snapped into perfect clarity. I listened as it explained the purpose and history of the ruins. No wonder the Jedi had come here. The Zeffo were once followers of the balance. However, like the Je'Daii they split, and the followers of the Dark Side slew their light side brethren. It was the first and last kin slaying in their long history. Violence was unknown to them. They were primarily scholars that delved into the deepest reaches of the unified Force. It became clear they looked too deep for their ultimate prize, immortality and the ability to create life from nothing. Their hubris was their undoing. The Force struck back and sterilized the Zeffo. A few achieved immortality, but at the cost of their entire race. Some reclaimed their sanity and erected this library for those that followed.",
        "\"You stand on thin ice. Much of our knowledge can help you but be warned. The ultimate truth will burn you if you unearth it.\" The gatekeeper cautioned me.\n\n\"This is one great holocron, isn't it?\" I asked. \"The huge crystal holds your wisdom.\"\n\n\"It is.\" The figure said. \"Speak and let your desire be known.\"\n\nI had heard plenty of stories about what happened to the greedy. I left the decision up to the gatekeeper. Its wisdom should prevail. Machinery groaned after being unused for millennia. A square aperture opened and four holocrons were spat out. Each was color coded for us. The red pyramid shaped device must have been meant for Thorn. Another was icy blue for Winter. The third was covered with delicate spirals and swirls that matched the markings on the lightsaber of the newborn Sith. The last was monochromatic and meant for me no doubt. The hologram ended and the roar of combat rushed into replace the peace I had experienced. I spun to see the three women fighting twice as many Jedi forces. My child had taken up the weapons of the two fallen Jedi we had initially encountered.\n\nThorn easily handled her opponents. Winter had retreated and used her devastating Force flame to burn and lash out at the Jedi. My child had a blue lightsaber in either hand and was attacking her former allies without any hint of hesitation. She had embraced the Dark Side fully. Then it happened, she transfixed a Jedi with her weapon and then the hunger took hold and she latched onto her victim leaving herself open to attack. I could have intervened but a part of me let nature take its course. If she survived, then I would train her. If not, I had broken a Jedi Master, and no one could contest it. The Jedi above her hesitated to strike her down. Thorn however did not. Her crimson blade cut the Jedi in half and she shook her head as she sought out her next foe. The alarm had been sounded and more Jedi joined their comrades. I put the holocrons into my inventory and ignited the Darksaber.\n\n\"Die Jedi scum!\" I roared as I joined the battle. The killing ground was littered with Jedi bodies and my child took her fair portion of kills. She was blood soaked and shaking when the last light sided acolyte fell to her blade and fangs. Once the battle was over, I ordered Winter to burn the bodies. One child was one too many. We looted the bodies and there were enough materials for her to fashion a new double-bladed lightsaber. \"Well done. You have proven yourselves in combat against our enemies.\"\n\n\"Kill me,\" the former Jedi begged. \"This hunger is too much!\"\n\n\"True, it is not for all. You fed well and still you thirst?\" I asked as she wiped her face clean of coagulated blood.\n\n\"I do not want to continue like this. The Dark Side is bad enough.\" She said and I saw the spark of personality behind the Jedi Master. Even after becoming and slaying so many she somehow had the strength to beg for death and cling to the light side.\n\n\"Kill her!\" Thorn urged.\n\n\"Your will be done,\" Winter stated.\n\n\"What I give I can take away. You have earned your freedom... what is your name Jedi?\" I asked.\n\n\"I was Satele Shan.\" She said her lip quivering as she fought to retain control. I recognized the name. The blood of Revan ran through her veins. No, I could not kill her. She, like her ancestor Revan, had tasted both the light and dark sides of the Force. I did not have it in me to slay her, yet.\n\n\"Sleep Satele Shan,\" I growled as I withdrew the vampiric curse from her. She collapsed and I carried her to one of the cots the Jedi used when they slept here after a long day of work. I removed the crystal chip from the machinery. The apertures retracted into the ceiling which sealed behind them. I placed the holocron upon her chest. \"Strength must be rewarded. Perhaps I will cross blades with you again.\"\n\n\"I agree,\" Thorn said lowering her head. \"She will make a formidable foe if you meet her again.\"\n\n\"What now Master?\" Winter asked.\n\n\"Treasure and secrets.\" I replied as I handed them their own holocrons. \"The great machine provided those. Keep them close.\"\n\n\"Thank you Master!\" They both replied happily.\n\n\"We move. Cloak yourselves we head for the main vault.\" We were crossing the stone bridge when we came across five dead Jedi. I spotted the burn holes in their chests. \"Nice work Winter.\" I complimented her handiwork.\n\n\"I did not kill them Master.\" Winter replied. \"I was too busy in melee combat. Besides, those burn holes are much bigger than those I inflict. Those are blaster wounds.\"\n\n\"If you did not kill them... the droid.\" Thorn exclaimed. \"It was here, hell, it might still be around.\"\n\n\"Be on alert,\" I urged as I felt a pull to the far side of natural bridge.\n\nThe Force was guiding me, and I let it show me the way. We reached the other side unmolested. If the killer droid was here, we were not a target, yet. The console the Jedi used to teleport to the hovering platform was here and still powered up. I looked at the controls and they were simple yet efficient. My fingers danced over the controls looking for all possible destinations. Well, that was fucking odd.\n\n\"There is a hidden structure.\" I stated looking at the possible locations this device could teleport to. \"We need to go there.\" I said pointing to a blank stone wall.\n\n\"Master, there is nothing there.\" Winter said sounding worried. \n\n\"How do you know there is a building there?\" Thorn followed up.\n\n\"It is right here on the display.\" I replied. They gazed at the instruments and then at me. \"What?\"\n\n\"You can read that?\" Thorn asked. \"Of course, you can... how can you read it?\"\n\n\"The chip! When I spoke with the gatekeeper it must have passed on their language somehow.\" I said.\n\n\"What gatekeeper?\" Winter asked. \"I did not see anything, but you were staring at a blank wall.\"\n\n\"Same here. I did not see dick.\" Thorn chuckled. \"They must possess machine/mind interface.\" She suggested.\n\nMy fingers danced over the controls redirecting the teleport beam. Once I locked on the system did the rest. A countdown began as the hidden structure powered up, if I was reading things correctly, to provide a breathable atmosphere. The controls turned green and we could leave whenever we wanted. We approached the teleport pads, and I began wondering what would have happened to me if I had absorbed all the Zeffo's knowledge.\n\n\"Off we go,\" I said and the next instant we were inside a tube-shaped space. We stood on the bottom of it, and a series of concentric circles above us were the other levels. \"I told you so.\"\n\n\"You look distracted.\" Winter observed.\n\n\"Oh, I was wondering about something. I do not want to bore you.\" I said and gods the wicked looks I received. \"Fine. But if you get bored on your own heads be it.\" I said and they laughed. \"This is not the first time I faced difficult decisions. The last time involved an ancient pyramid shaped starship. I was given the chance to see what the creators of the ship looked like but was cautioned against it. I selected a different vision and skipped being mind-fucked again. The gatekeeper also offered me a larger share of knowledge. I decided upon letting it decide what was best for me.\"\n\n\"You dodged getting your synapses burned out no doubt,\" Winter offered.\n\n\"I agree, you got their language and that alone has already proven highly useful.\" Thorn stated.\n\n\"Let's go, I smell treasure.\" I urged. Thorn found the secret door and my knowledge of the language allowed me to open it. The spiral staircase led to the second level. One hundred steps later and we reached a catwalk. We looked down and we were not on the second level but the fourth. \"Oh, it is going to be like that eh.\" I growled as I suspected that we were going to be doing a lot of walking. The stairwells were just one puzzle for us to unravel.\n\n\"Did you hear that?\" Thorn asked as her lekku or head tails twitched and shivered.\n\n\"No, where did it come from?\" I asked.\n\n\"Up ahead, I will lead the way,\" she said as she removed her lightsaber from her hip. We were all on high alert when Thorn guided us to the first door we had seen since we climbed all those damn steps. I entered the combination to open the sliding door and we were greeted with a horrid stench. \"Aw fuck!\" Thorn cursed. \"Look!\"\n\nAttached to the walls and ceiling were six empty cocoons. They were about six feet in length and two feet in width at the widest point. They reminded me of something a butterfly might spin but I knew better. By the dripping ooze something had hatched and recently. Winter ignited her weapon and used it to illuminate the chamber. She turned to look at us over her shoulder, flinched, and cursed. \n\n\"Make that eight,\" I growled seeing the other two cocoons attached to the wall on the same side as the door. \"Up, hold up your saber.\" I said as I pointed to one of the upper corners of the room. \"One wrecked air vent.\" Whatever the hell had hatched climbed up and tore through the vent and into the air exchange system.\n\n\"I hate insects!\" Thorn grimaced. \"If this room held eight, how many rooms did these things use to nest in.\"\n\n\"No way of knowing,\" Winter grimaced.\n\n\"My guess is that something happened, and this structure ended up inside the wall of stone. The air went bad and to survive these things went into hibernation.\" I surmised.\n\n\"Great! When we powered up this place the air rushed in, the temperature rose, and they hatched.\" Winter finished. \"Yes?\"\n\n\"Yes. Keep your weapons ready.\" I ordered. \"Let us move and find the loot before these things find us. They are going to be hungry.\"\n\nThere were ten rooms on this level alone. Each had between five and ten open cocoons. We had reached the next stairwell but this one offered two directions.\n\n\"Up or down?\" I asked.\n\n\"Down. Whatever it is we need my gut tells me to go down first.\" Thorn said smiling. \"I can feel it.\"\n\n\"We go down.\" Winter agreed.\n\nI led the way and halfway to level three the entire building shook as the walls opened and walkways slid from concealed openings. My gut screamed shit was about to get real. I triggered my battle music and continued. The causeways and catwalks formed overlapping paths and I cursed to myself that someone had spent too much time designing this place. Thorn screamed and activated her crimson blade. Winter looked to where the other spied the first of the insects. They were slithering snake like across one of the catwalks. I quit counting at twenty. Winter vaporized three of them and the rest finished closing the trap around us. They came from all sides. The Darksaber clove through them with ease but the damn things did not die easily. Either end possessed a deadly weapon. One end of the serpentine slugs was a mouth with serrated teeth, and the ass end possessed a barbed tail that oozed with venom. \n\n\"Master!\" Winter screamed and I sensed it above me. I thrust upward blindly and was rewarded with a screech of pain. The thing that fell to its death below was not one of the serpent worms. I caught sight of eight spindly legs as it tumbled away. Spiders! So, there were not just one breed of these things. I did not need to warn them to be watchful. My blade moved ceaselessly. I quickly lost count of the creatures that fell to my weapon. I leapt to one of the crosswalks for more freedom of movement. I activated the Ghostfire blade and pumped the volume on the battle track.\n\nI slipped into the zone and it nearly cost me when something new swooped from the roof of the structure. It had bat like wings, the slug body, and that damn stinger to top things off. I used my free hand to fire off black Force lightning and wreck the fliers and crawlers alike. The arachnid breed attacked from above and below as they either used drag lines or clung to the underside of the walkway. Thorn used her hatred of insects to drive her tireless attacks. Winter laid down withering flames and burnt dozens of the various breeds in wave after wave. The surge faltered and eventually stopped. Nothing moved and I felt like I should be covered in sweat. My stamina meter recharged as I reached out to try and locate the boss chest.\n\n\"It has got to be around here somewhere.\" I stated. I looked up and saw a brief sparkle before it was quenched. \"What the hell?\"\n\n\"No fucking way!\" Thorn cursed as she pointed down. I looked over the railing and I saw what had caused her anxiety. I used Force push to shove the body parts down and away from me. Those creatures that Winter had not scorched to ash were regenerating and merging with other parts of nearby beasties. The monstrosities that arose were the stuff of nightmare. I deactivated the Darksaber and decided to rely upon Force abilities to defend myself. They rose on wing, or legs, or even slithered with greater speed than before. Soon we were once more under attack from the reborn spawn. None of us had restored our stamina or Force meters completely. \n\n\"We are in trouble!\" Thorn declared as she began to lose focus and stagger from exhaustion.\n\n\"We must keep fighting!\" Winter growled.\n\nI lashed out with lightning, flame, and even the brand-new Wind Sword technique. The things did not simply die. When struck they burst like water balloons and their cells fell to the ground floor where a pool of living matter formed and grew. I was not immune to enervation. My Force meter was in the yellow nearly red. The first blaster bolt streaked over my head and took out a flying thing that was as much bat as it was spider and worm. It burst and rained down to the ever-growing puddle of pseudo flesh. I did not like where this was heading. More blaster bolts crossed the open air and killed the current generation of abominations.\n\n\"Exclamation. Hurry meat bags, we must take up a more defensible position!\" A mechanical voice declared. The three of us half staggered to the source of the energy weapon. It was a droid. He was of heavy-duty humanoid construction. His exterior was a blend of traditional galactic form and materials as well as a clear influence of Zeffo technology and alloys. This had to be the assassin droid mentioned by the droids near the entrance to this complex.\n\n\"You left your master's tomb,\" I said, and the droid raised its blaster rifle and fired over my shoulder. I noticed that thin gleaming cables ran from the underside of the weapon and into the left side of the droid's chest. \"You are powering your own weapon.\"\n\n\"Historical narrative. My creator was wise and clever. He designed me with two power plants. One to maintain my basic functions and the other for weapons. In dire situations I can use the supplementary plant to boost my physical abilities. Strategic notification. We move, this is a shitty location to defend. Command directive. Follow me meat bags.\"\n\nToo tired to argue we followed the obnoxious droid to a chamber with two large thick metal doors. The room was an armory. There were blaster rifles and other munitions available. The droid pointed around and directed us to arm ourselves.\n\n\"Command directive. Female meat bags,\" the droid snarled. \"If we are to survive the... the male meat bag needs time to recover so that he can drain the life force of the thing that is forming below. Exclamation. Here they come!\"\n\nThe army of nightmares charged our position. The droid laid down withering fire from his weapon. Just as before the creatures burst and their cells slid between the diamond shaped metal grating. I calmed myself and fired as clinically as I could. It was between two bursts of movement from our enemy that I saw the cells flow to the edge of the walkway and fall into the pool. It was as bad as I thought. We were not fighting individual beings but a collective. Once we killed the last of the singular units the colony would take on a massive form and the boss battle would begin. Thorn popped the last creature, and they removed their empty energy clips and slid fresh ones in. \n\n\"How do you know that I can drain that thing's life?\" I asked the droid.\n\n\"Limited answer. My creator told me.\" The droid replied. \n\n\"Got it!\" I exclaimed. \"Boss chest is one level up and on the far side of the building!\"\n\n\"Tactical notification. Kill now treasure later!\" The droid growled as the entire building shook. My stamina bar had just reached the green level. My Force meter was nearly full. \"Strategic suggestion. Do not waste ammunition.\"\n\nI dragged a sealed crate over and opened it. It contained thermal detonators. I passed them out so that we each got three. I grabbed the remaining energy clips and split them between Winter, Thorn, and myself. The droid did not need any. The next time the building shook we were thrown to the floor. Even the droid lost its balance.\n\n\"Irrational statement. I have a bad feeling about this.\" The assassin droid chuckled.\n\nMassive tentacles plunged upward tearing through the metallic walkways with ease. The things wiggled and wavered as eyes, mouths, and what must have been alien sensory organs formed, dissolved, and reformed with no clear discernable pattern. They reminded me of Shoggoth created by the Elder Things. If that were the case our weapons would do little permanent damage.\n\n\"Combat directive. Fire!\" The droid roared as he attacked with his blaster rifle. \n\nI squeezed off shots aimed at the sensitive organs. After a few of them were destroyed the faint red aura around the tentacles shifted to a neon green. It lasted until the organs regenerated. I continued to fire until the droid cursed, not very well mind you, but he threw a series of random slurs together directed at me.\n\n\"Astonished statement. Cunt ass mother dip shit ass pussy! It is vulnerable when it turns green. Anal idiot!\"\n\n\"I think he means dumb ass,\" Winter laughed. \n\n\"Shoot the eyes and mouths and things,\" I directed. I popped my weapon's clip and gave it to Thorn. My remaining clips I split between them. I raised my arms and waited. When the aura shifted, I used Force drain and entire tentacles dried up and turned to an eggplant colored dust. We got brief breaks, but each following round were fiercer and more intense. More tentacles formed and appeared. I was forced to lash out with Force lightning to rupture the organs faster and so open the formless thing up to Force drain.\n\n\"Tactical observation.\" Thorn called out. \"It is weakening.\"\n\n\"Disapproving statement.\" The droid snapped. \"Fuck you bitch!\"\n\nWe all laughed until the next round proved almost too much for us to handle. I tried arcing the lightning along the length of a tentacle to make better use of available power. It proved quite effective. Instead of all the limbs becoming vulnerable only those that were damaged could be attacked with Force drain. I had to be observant and rely on my companions to attack so that I could take advantage when a tentacle became susceptible. Winter was the first to note that the tentacles were slowing down in both number and size.\n\n\"I think it is moving slower.\" She offered as the building shook for the third and final time. \"What the fuck?!\"\n\nThe creak and shriek of bending and tearing metal announced the final phase of the boss battle. The bulk of the thing was climbing up to attack us. Thorn and Winter grabbed a thermal detonator each while the droid loaded its weapon's grenade launcher located on the underside of the assault blaster rifle. A quiver went through the room as the first massive tentacles came into view. It was nearly the thickness of a large human male. The first blast of the obscenity's breath reached us and only the droid was spared its noxious fumes.\n\n\"It smells like something died.\" Winter gasped as she fought the urge to puke.\n\n\"Graveyard you mean,\" Thorn stated as she held her thermal detonator behind her back. The second tentacle rose, and we could see clusters of eyes sprouting like blinking blisters across its surface. \"Open wide asshole.\" She snapped. The third tentacle appeared as its tip punched through the metal flooring and the side of it split open revealing a tooth filled maw. Thorn never hesitated. She fired off the thermal detonator in the same way a baseball pitcher might from the safety of her mound. I guesstimated that it traveled around sixty to seventy miles per hour and dead bang on target. Three seconds later the portion of the tentacle protruding and a good ten feet below it disappeared in gelatinous wave of flesh and gore."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "bondage",
        "ffm",
        "harem",
        "tentacles",
        "threesome",
        "celebrities",
        "group",
        "group sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-15"
}