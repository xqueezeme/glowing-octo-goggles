{
    "title": "Her Governess Ch. 04",
    "pages": [
        "Author's note:\n\nGreetings, and welcome to the fourth chapter in a story about two adult women engaged in a consensual D/s relationship. I'd originally planned this to be the final chapter but as the word count crept upwards I realized there would be one more, so chapter 5 should be along in a week or so. I'd like to again express my sincere gratitude for the votes, comments and emails. I'm still new at this and your feedback is really helping me grow and learn. Thank you very much for reading!\n\n*\n\nAshley woke at six in the morning. It was a habit - her body did it automatically. The consequences for being late with Chad's morning blowjob were severe, and her even her unconscious mind knew better than to sleep too late or too deeply.\n\nBut it wasn't HIS scent in the sheets, not HIS warm, naked body pressed against her backside, not HIS slender arms pulling her into a safe, loving hug from behind. It was all Mistress Kara. Chad was history, except for the painful memories he'd left in Ashley's mind and the ugly tattoos he'd had inked into her pale skin. \n\nShe allowed herself a contented sigh. Her Mistress had brought her to bed each of the past three nights, and sleeping with the other woman was comforting and secure. It was a new and blissful feeling to spend the night with someone you truly loved.\n\nShe wiggled out of her Mistress' embrace and slid out of bed, careful not to make any noise or jostle the sleeping woman too much. Her owner was kind and forgiving, but Ashley knew that was no excuse for slacking off and not giving her best service at all times. Just the opposite - having an awesome Mistress made it even more important to work hard. Diligence was one of the Five Principles, after all.\n\nShe crept to her room and buckled her collar around her neck first thing. She dressed in a blue pair of bikini briefs, then wrapped a sheer, blue scarf over her boobs, knotting it behind her back. She did a slow turn in front of the mirror, admiring how the colour contrasted with her bare skin. She loved dressing in the sexy house uniform her Mistress had chosen for her. \n\nShe took extra time to look at her bum in the mirror, and was disappointed to see that after three days, her paddle marks had almost faded away. Maybe tomorrow when they went back to the workshop, she'd be able to tempt her owner into giving her another session in the hanging stocks!\n\nBeing paddled by Mistress Kara had been painful at first and then changed into an incredible dreamy, drunken feeling. Really calm and fearless - almost giddy. She'd never gone that deep before - it had been beyond amazing and she couldn't wait to get back there again. Her owner was taking her to new levels of submission. It was more than Ashley had ever dreamed of.\n\nWell, she couldn't spend all morning in front of the mirror! She hurried to the kitchen and got the coffee brewing, making sure the measurements were exactly the way her Mistress preferred them; she liked her coffee strong and black in the morning and lighter in the afternoon, with a little cream and sugar.\n\nAs it was brewing, Ashley made a quick pass through the kitchen, living room and bathroom to make sure everything was tidy. She wanted Mistress Kara's first waking moments to be satisfying, and what was more satisfying than a clean apartment?\n\nIt was six thirty when she heard her Mistress rustling the sheets as she got out of bed. Ashley hurried to her owner's bedroom.\n\n\"Good morning, Mistress. Did you sleep well?\"\n\nMistress Kara stretched her arms over her head. She looked glorious when she was naked - curvy and sexy and soft. Ashley couldn't tear her eyes away. \n\n\"Like a baby. How about you?\"\n\n\"Me too. Thank you for bringing me to your bed again last night...and for letting me lick your beautiful pussy.\"\n\nHer Mistress pulled her into a tight, warm hug. Ashley returned it and breathed in deeply, savouring the smell of the other woman's hair and skin. \n\n\"Mmm. That talented tongue of yours is becoming an addiction, I'm afraid.\"\n\n\"I'm happy to give you a fix any time.\"\n\nMistress Kara patted her bum affectionately, then headed for the washroom. Ashley took the opportunity to smooth down the bed sheets and arrange the comforter neatly on top. She checked the laundry hamper on the way out of the bedroom. Only half-full, not enough to run a load.\n\nShe went to the kitchen and put two slices of multi-grain bread into the toaster, then poured her owner a cup of black coffee and handed it to her as she entered the room. Mistress Kara had just settled into a chair when the toast popped, and Ashley gave each piece a light buttering of margarine, cut the slices in half, and slid the plate onto the table in front of the other woman.\n\n\"Is there anything else you need, Mistress?\"\n\n\"You're perfect as always, Ash. Eat something - you're at the bakery today so I don't want you hungry.\"\n\nAshley nodded and quickly poured herself a bowl of cereal.\n\n\"May I be seated?\" she asked. Breakfasts were usually low-protocol, but it made her feel better to ask anyway.\n\nHer Mistress nodded, part-way through a sip of coffee. \n\nThe two of them sat in silence that felt relaxed and comfortable. Ashley was excited to start the day.\n\n*\n\nShe was part-way through her shift at the bakery when she felt a tap on her shoulder.\n\n\"There's someone asking for you out front,\" Lenny said, gesturing in the direction of the store.\n\nAshley set aside the metal tray she was scrubbing, turned off the hot water and pulled off her rubber gloves.\n\n\"Must be Kara,\" she said, though Lenny was only half listening, darting not-too-subtle glances at the side exit to the bakery. They'd only been working together for a short time, but Ashley recognized when her co-worker was craving a smoke. \n\n\"Hey, can you watch the store?\" he asked. \"I just need to step out for a bit.\"\n\n\"Yeah, sure.\" Ashley untied her apron and pulled off her hair net as she walked down the short hallway to the store.\n\nThere was a small storefront near the main entrance to the bakery, where regular people could come in and pick up a dozen rolls or a loaf of artisanal bread. Most of their business was restaurants and bulk orders, but the retail side got some traffic, too. Ashley didn't know how to work the cash register yet, and in jeans and an old sweater she wasn't really dressed for dealing with the public, but she could keep an eye on things until Lenny finished his cigarette. \n\nShe pushed open the door and stepped into the store, behind the counter. The place was empty except for one person. It wasn't Kara after all, but a guy.\n\nChad.\n\nIt was Chad.\n\nShe froze, paralyzed by fear. Her skin went cold. Why was he here? How had he found her? What did he want? \n\nThe smirk on his face and the way he narrowed his eyes meant trouble for her. She recognized the look, having seen it often enough during her three years with him. He was here to deliver bad news, and was going to enjoy doing it.\n\nIt took her a few moments to recover from shock.\n\n\"What...what are you doing here?\"\n\nHe leaned forward against the counter and she retreated a couple of steps. With the waist-high counter separating them she was probably safe from whatever awful stuff he had in mind, but it never hurt to be extra cautious.\n\n\"I've come to re-claim my property, of course,\" he said in a tone that was light on the surface but carried a threat underneath.\n\nAshley's heart beat faster even as she felt her chest constrict. She tried to take another step back but ran out of room; she was backed up against the wall. She drew a deep breath and tried to summon her courage.\n\n\"I'm not your property. I left you.\"\n\nHe chuckled joylessly, and the sound sent a shiver of terror down her spine.\n\n\"Oh, that's right. You belong to Miss Kara Meadows now. How is she doing?\"\n\nHe knew about Mistress Kara? Somehow, that filled Ashley with even more dread.\n\n\"You need to go. I'm...I'm working now. I'm not getting back together with you,\" Ashley said, edging along the wall in the direction of the bakery door, careful not to take her eyes off him for even a moment. The bakery was full of people - if she screamed, surely someone would come to help her, right?\n\nHe didn't make any move to stop her. Instead, he unfolded a piece of paper, put it on the counter and slid it over to her. Even from a few steps away, she could see a long list of names printed on it, along with email addresses.\n\n\"Miss Kara has a lot of friends, doesn't she? Family, too. It's probably a good thing they don't know about her kinky lifestyle.\"\n\n\"What?\"\n\nHe gestured at the paper. \"Her mom and dad, her sister and two teen-aged nephews, for starters. I wonder what they'd think if they knew she was a closet lezzie who got off on beating little girls with a paddle?\"\n\nAshley went white as she began to understand the reason for Chad's visit.\n\n\"Her dead husband had a lot of friends too - the guestbook for his online obituary probably has two hundred names on it, including his brother and sister. I bet they'd be pissed to know Kara was fucking someone half her age before his body was even cold.\"\n\n\"It wasn't like that...\" Ashley whispered, but Chad wasn't listening. \n\nHe pulled out his cell phone and tapped the screen a few times, then turned it to face her. A video was playing, and the inside of the workshop was easily recognizable. There was no sound, but the picture was sharp and showed Ashley naked in the standing stocks as Mistress Kara, dressed in her bra and panties, smacked her ass with the medium paddle.\n\n\"It's amazing how clear the picture came out, even through the window,\" he continued in the same light-yet-threatening tone. \"When she takes off her panties you can see every detail of her face and her cute, little, shaved cunt. I bet her nephews would LOVE to get a peek of their big-titted aunt and her bare muff. What do you think?\"\n\n\"That was private...\"\n\n\"You probably should have closed the curtains, then,\" he countered. \"All the hours I spent filming really paid off in the end - that was a real show the two of you put on for me.\"\n\n\"How...how did you find me?\"\n\nHe ignored her question. \"Who else do we have here?\" he said, pretending to read the names off the page, letting the video continue to play on his phone. \"The principal of her nephews' school. Her sister's minister. A bunch of guys. Ex-boyfriends, maybe? Business contacts? Old high school buddies? Dozens and dozens of names. Probably everyone she knows. Everyone important to her.\"\n\n\"Chad, please don't-\"\n\n\"And you look so tiny in this video! Hasn't Miss Kara been feeding you? I mean, if I didn't know you, I'd guess you were fifteen or sixteen - seventeen, tops. Definitely a minor. Who knows what would happen if the cops ended up with this video? They'd have to launch an investigation, right? And if the newspaper got a hold of it I'm sure some reporter would do a story on Miss Kara, you know, trying to make a name for himself. Even when the truth came out, she'd probably have to leave town.\"\n\n\"But...Mistress Kara never did anything to you. Why would you-\"\n\n\"That's not true. She stole from me. She took what was mine.\"\n\n\"That's because I ran away...and it was cold. I...didn't have a coat...\" Part of her wondered why she was arguing. She already knew the horrible direction Chad was heading.\n\n\"Anyway, I just came by today to show you this stuff. I've already written up an email and included all these addresses in a mailing list. I can destroy her life just by clicking 'send'.\"\n\n\"No! Chad...come on, please! There's no reason to do this.\"\n\n\"I told you, she stole from me. She took my property. If I can't get it back, at least I can make sure the thief is punished, right?\"\n\nAshley was silent, trying to find the words to dissuade him, but none came to her. Or maybe there was no reasoning with him. Maybe surrender was the only option he'd accept.\n\n\"Of course, if you were to come back to me, where you belong...\" He let the thought hang out there. His lips curled into a smug, self-satisfied smile. He had her right where he wanted her, and they both knew it.\n\nAshley tried to imagine returning to him, to the life she'd had before meeting her Mistress. It was a terrifying idea, and it repulsed her. He was a cruel man - not really a Master after all, just a mean guy who abused and degraded her. Mistress Kara had shown her what real dominance looked like, and that wasn't what Chad was offering. Going back to him would mean pain, torment and hopelessness, and possibly worse.\n\nIt didn't matter. For Mistress Kara, no sacrifice was too great. Ashley would do whatever was needed to ensure the other woman's happiness. Ashley owed a life debt, after all. More than that, she loved her owner with her entire heart, and sometimes love meant sacrifice, right?\n\nThen a second thought forced itself into her mind. If Ashley left, would her Mistress be even MORE unhappy?\n\nMistress Kara said Ashley was 'incredibly important' to her. She said she was 'grateful' to have Ashley in her life. And although her owner hadn't said 'love' yet, she'd SHOWN love through her actions; her gentleness and patience. That had to mean something! And if her owner loved her, or even liked her a lot, it would cause her Mistress pain if Ashley just walked out. Especially with Master Peter's death still so recent. It would hurt her badly.\n\nAshley would never hurt Mistress Kara. Not in a million years. Not for anyone.\n\nShe closed her eyes and took a deep breath, then opened them again and forced herself to meet Chad's gaze. She hoped she wasn't about to make a giant mistake. She hoped her Mistress would forgive her.\n\n\"No.\"\n\n\"What?\" \n\n\"I said no. I'm not going with you. I belong to Mistress Kara now. I won't abandon her.\"\n\n\"And how will she feel when she finds out you stood by and watched her life get destroyed?\" He waved the phone in front of her face, taunting her.\n\n\"I don't know.\"\n\n\"She'll be furious with you. At your betrayal.\"\n\nAshley paused, trying to imagine her Mistress getting furious with her. Somehow, it was difficult to picture.\n\n\"In that case, I'll have to accept whatever she decides to do,\" Ashley said. \"I trust her to know what's best.\"\n\nChad hesitated, and Ashley got the impression he hadn't expected a firm refusal. And no wonder - in the three years she'd been his slave, she'd rarely said the word 'no', and had always painfully regretted her rare moments of resistance.\n\nFinally, he seemed to decide on a new approach. He chuckled, though it sounded forced. \"Right - I forgot what a slow thinker you are. I'll give you till tomorrow night to consider the consequences. You know how to reach me. And I'll know if you go to the police. Don't bother - they'll never connect me to anything.\" \n\n\"Goodbye, Chad,\" Ashley said. It surprised her how calm her voice sounded, now that the decision was made. It didn't stop her knees from quaking, though.\n\n\"Kara's life is in your hands,\" he said, then put his phone away. He gestured to the list of names and email addresses on the counter. \"That's a lot of people who will never speak to her again.\"\n\n\"I have to go back to work,\" she said, folding the paper and sliding it into the back pocket of her jeans, then backing out the door and into the bakery. As soon as she'd closed the door behind her, she dialed her Mistress with shaking hands, trying to figure out how to deliver the awful news.\n\n*\n\nMistress Kara greeted the news with a long silence. Ashley told her everything, and even read to her from the list of names Chad had left behind.\n\n\"Are you safe? Should I come and get you?\" she said at last, her voice calm, but heavy with concern.\n\n\"There are lots of people around, and the public isn't allowed in the bakery area. I think I'm okay for now,\" Ashley said. \"I'm really sorry, Mistress. Chad is my problem. I hate that I dragged you into this.\"\n\n\"This is my fault, not yours. I'm going to call Mr. Sato. He's a police officer and he'll have good advice.\"\n\n\"Chad said he'd know if we tried to contact the police.\"\n\nThere was another brief silence.\n\n\"How? How will he know?\"\n\n\"He didn't say. He just said he would.\"\n\n\"For that matter, how did he know you were at the bakery? How did he know where the workshop was?\"\n\n\"I didn't tell him, that's for sure. Maybe he followed us from the apartment?\"\n\n\"But how would he know where the apartment is? Or what my name is?\"\n\nAshley shrugged, then realized her owner couldn't see it over the phone. \"I have no idea, Mistress.\"\n\n\"Regardless, I'm calling Mr. Sato. And...I suppose I'd better think about calling my parents and sister as well. If they're going to find out anyway, I'd rather it be from me. This could get messy.\"\n\n\"Um...it's not too late for me to call Chad. You know...agree to what-\"\n\n\"No way. You're done with that life forever. I'm glad you shot him down - that took a lot of courage. I'm really proud of you, Ash.\"\n\nAshley breathed a quiet sigh of relief. She'd figured her Mistress would feel that way, but it was still reassuring to hear her say it out loud.\n\n*\n\nAshley always kept her phone muted during her shift so it wouldn't distract her, but she checked it during her next break to see if Mistress Kara had called or texted with an update. \n\nShe was shocked to see she had forty-one new texts, had missed twenty-three calls, got eighteen new voicemail messages and twenty new emails. She didn't recognize any of the numbers - they weren't from Mistress Kara, Jaycee or Chad. Who else would think to call her? \n\nBefore she could check her messages, she got another incoming call. The area code was local, but the number wasn't familiar. She decided to answer.\n\n\"Hello?\"\n\n\"Hey...is this Ashley? Ashley Mallory?\"\n\n\"Yeah.\"\n\n\"Awesome! I can't believe the number was legit! Hey, do you and Kara do private shows?\"\n\n\"Um...what?\"\n\n\"Private shows, like on Skype. It would be hot to see you in a diaper, with Kara pretending to be your mom, breastfeeding and changing you. Stuff like that. How much would that cost? I'm thinking for an hour.\"\n\nAshley hung up, confused and alarmed.\n\nShe checked her text messages. 'Do a scene where Kara throats you with a nine-inch strap-on'. 'Fuck yeah - needs more pussy whipping'. 'Do one with sound - sucks that we can't hear you scream'. \n\nAll of them were like that. With rising panic, she called Mistress Kara.\n\n\"Ash? I need you to turn your phone off, then take out the SIM card and battery. Call me back from another phone and I'll explain,\" her owner said, then disconnected.\n\nThe abrupt commands did nothing to calm her, but she did as she was told, then borrowed Lenny's phone and called her Mistress again.\n\n\"Hey, Ashley. Sorry about that. John thinks your phone has been compromised. Chad might be tracking you using your phone GPS, and listening in on calls and texts.\"\n\nThe idea that Chad might have been spying on her since the time she left him caused the blood to drain from her face. How much had he seen? How much had she unknowingly revealed to him? \n\nIt took her a few moments to compose herself.\n\n\"I've been getting a bunch of weird calls and texts,\" she said.\n\n\"Yes, I'm getting them too, one every few minutes,\" her owner said, the irritation in her voice obvious. \"I guess you didn't check your email? It looks like Chad uploaded the video to at least two porn sites, with our names, address and contact information embedded in the video.\"\n\n\"But...he said I had until tomorrow!\" As soon as she said it, Ashley realized this was his way of softening her up, getting her to accept his offer before the email got sent.\n\n\"Gee, I'm starting to think he's not an honourable guy,\" Mistress Kara said, the mocking sarcasm heavy in her voice. Then she sighed. \"Sorry - that wasn't directed at you. I'm just a little stressed right now. How are you holding up?\"\n\n\"I'm okay, just scared. Did Mr. Sato have any suggestions?\"",
        "\"Here's here now, at the apartment with me. I'm packing. He doesn't think it's safe to stay here tonight so we're going to spend the night at his place. We'll come and get you in an hour or so and go to the station to file a complaint. He's already applied to a judge for a warrant to search Chad's house, but those take a bit of time to come through.\"\n\n\"I'll let Mrs. Janowitz know I have to leave early. Do you need me to do anything else?\"\n\n\"Just don't leave, and stay where there are other people. I'll see you in about an hour.\"\n\n\"Okay. Hey, I know this isn't important with everything else that's happening, but...could you remember my collar?\"\n\n\"It was the first thing I packed,\" Mistress Kara said. \"See you soon.\"\n\n*\n\n\"I need a little more information before we execute the warrant,\" Mr. Sato said. They were in his cramped office at the police station, sitting across his cluttered desk as he typed into a laptop. \"With a bit of luck we'll get to him before he sends those emails. If we can get evidence, he'll be charged - distributing 'revenge porn' is illegal. You can also sue him for damages.\"\n\n\"You can bet on that,\" Mistress Kara said.\n\nHe turned his attention to Ashley. \"Can you tell me anything else about Chad that will help us? Does he have more than one computer? External drives? Does he store files in the cloud?\"\n\nAshley took a moment to think. Chad was one subject she was an expert on!\n\n\"He uses an online storage site called StoreItPro. His user name is 'BadDaddyChad'.\" \n\nShe remembered him showing her on his laptop the long list of dirty movies he'd made and stored away on the site - all with her as the reluctant star of the show. Would the police be watching those videos? Would her Mistress see them? Even the idea of it brought a deep blush to her face.\n\n\"Any idea what his password is?\"\n\nShe shook her head. \"I know he keeps all his passwords on a yellow, lined sheet of paper. I used to see him reading off the paper when he was signing into websites to pay his bills.\"\n\nMr. Sato was writing notes on his police pad. \"That's excellent. Anything else you can think of?\"\n\n\"Uh...\" she glanced sidelong at Mistress Kara, hoping not to upset her too much. \"There are...other videos on the storage site. Of me, I mean.\"\n\n\"Intimate videos?\" he clarified.\n\n\"They're kind of...obscene. He's got me doing things. Really bad things.\"\n\n\"Against your will?\"\n\n\"Sort of. I mean, I was his slave, so I couldn't really refuse. But I didn't like doing that stuff, especially on camera.\"\n\n\"So...did you provide consent, or not? I'm asking because it affects what charges we might be able to lay.\"\n\n\"He beat her up whenever she expressed her opinion. Even if she verbally consented, it was under duress,\" Mistress Kara said, cutting in. \n\nHe nodded and continued to write notes. \"Anything else you can think of, Ashley?\"\n\n\"Oh - the password to unlock his phone used to be 'Feral1987', with a capital 'F'. He probably didn't change it unless he got a new phone.\" He'd never shown her the password, but she'd caught glimpses of it every so often and had been able to piece it together over the months and years.\n\n\"That's great - really helpful!\" Mr. Sato made more notes. \"Anything else? Anything at all?\"\n\n\"I think that's everything.\"\n\nHe smiled briefly, then flipped his pad closed. \"I've been in contact with the web administrators for the porn sites that are hosting your video and requested they take it down. Sometimes they comply voluntarily, but sometimes we need a court order.\"\n\n\"Thank you so much, John. I really owe you for this,\" her Mistress said. She looked pale, tired and upset. She wouldn't make eye contact with Ashley; her owner had to be pretty mad at her for letting the situation with her ex-Master get so badly out of control. The idea of her Mistress being angry with her caused a knot of nausea to tighten in her stomach.\n\nMr. Sato leaned forward and his tone became sympathetic. \"It's not all good news, I'm afraid. We have no way of knowing how many people have seen the video so far, or downloaded it, or shared it. It could pop up on other websites, or image boards - anyplace, really. Once stuff like that gets out into the wild, it's difficult or impossible to fully remove it.\"\n\n\"So...this is the new normal? Ashley and I are...porn stars?\" Her owner sounded horrified by the news.\n\n\"I think we need to prepare for the possibility that the video may be widely viewed and distributed, yes.\"\n\nMistress Kara bent forward and buried her face in her hands. \"This is a nightmare.\"\n\n\"Also,\" Mr. Sato continued in a gentle voice, \"You'll want to get new phone numbers to keep the trolls from calling.\"\n\nHer Mistress nodded but didn't look up or speak. Ashley wondered if she was fighting back tears. The thought of it made her chest hurt.\n\n*\n\nIt was almost one in the morning when Ashley and her Mistress arrived at the Sato house. \n\nJaycee met them in the driveway with warm greetings and warmer hugs, gave them a quick tour of the house and got them situated in the guest room. It was almost the size of the guest room in Mistress Kara's apartment, with a double bed, a small closet and a tall dresser with six drawers. Comfortable but simple.\n\nHalf an hour later Ashley was in panties and her collar and standing next to the bed, waiting for her owner to return from a shower. She felt exhausted, and sick with the knowledge that the ugliness of her past life may have destroyed what Mistress Kara had worked so hard to build with family and friends.\n\nHer Mistress came in wearing a t-shirt and baggy track pants. When she saw Ashley standing by the bed as required by the rules, she gave a tired smile that didn't last long. Instead of lying down under the sheets, her owner sat on the side of the bed and patted the mattress next to her. Ashley didn't need any more prompting and quickly sat down.\n\n\"May I please say something about what happened today?\" Ashley said. She'd been thinking of ways to apologize to Mistress Kara for not being able to prevent the disaster from unfolding. \n\n\"I want to say something first,\" her owner said, then took a deep breath and let it out in a miserable sigh. She looked Ashley in the face for what felt like the first time that night. Her eyes were already watery.\n\n\"The most basic duty of the Dominant is to ensure a safe scene, and I failed to do that at the workshop. It's because of my stupidity that you're in this situation. I don't know what I was thinking, stripping and restraining you in front of an uncovered window in broad daylight. Or maybe I wasn't thinking at all.\"\n\n\"But...you and Master Peter must have fooled around in the workshop, right?\"\n\nMistress Kara sniffed and exhaled, then swiped a tear away with the back of her hand.\n\n\"He always pulled the curtains. Every time. He would never have made such a dumb mistake.\"\n\n\"There's no way you could have guessed Chad would be there.\"\n\nThe other woman shook her head. \"It was my job to protect you and I didn't. I've been trying to think of how to apologize to you, but I'm not sure there are words for something like this. Because I didn't do my job, there's a humiliating video of you being passed around, and there's no way to get it back.\"\n\n\"I'm more worried about you! You're in there, too.\"\n\n\"But I'm forty-three and financially secure. It's humiliating, sure, but it can't actually hurt me. But when I think of your future classmates seeing it...or future co-workers...or maybe a husband...or children...\"\n\nMistress Kara sobbed, then wiped watery eyes with the palms of her hands.\n\n\"I may have ruined your future...and I don't know how to apologize for that. I don't know what would be enough.\"\n\n\"I'm not angry, really! I mean, Chad has a bunch of dirty videos of me already. His friends do, as well. I always figured they'd get out eventually. This is all Chad's fault, not yours.\"\n\nHer owner took a few moments to compose herself.\n\n\"I have a lot to learn about being a Dominant, and I'm not sure it's fair to make you suffer for all the mistakes I make along the way.\"\n\n\"ONE mistake,\" Ashley said. \"Don't get too carried away. It was just one mistake.\"\n\n\"A BIG mistake. What if it's not the last mistake I make? What if the next one causes you even more pain? You deserve better.\"\n\nAshley hesitated, trying to think of the words to restore her Mistress' confidence. Things were going so good and she didn't want to see her owner retreat from the gentle-yet-strict style she was starting to bring to their relationship. \n\nShe was an incredible Mistress. Why couldn't she understand that? How could Ashley make her see?\n\nShe took Mistress Kara's hand and held it. \"You probably wish you'd never taken me in that night, after I called you from Burger Joint. You probably regret offering to be my Governess.\"\n\n\"No. I've never felt that way. I've never regretted that decision, even for a moment,\" Mistress Kara said, and the certainty in her voice confirmed the words.\n\n\"Even though it's MY past that's wrecking your life right now? You might be thinking 'all this trouble isn't worth it'. You had a nice, calm life before I came along, right?\"\n\n\"You're more than worth any trouble. My life is way better now than it was before I met you.\"\n\nAshley nodded. \"Before I met you, my life was filled with anxiety, pain and humiliation. I won't tell you all the stuff Chad made me do because you'd probably throw up, or have nightmares. But I kept going back for more. I guess I stopped believing there were any other options.\"\n\n\"I can only imagine what you had to endure.\"\n\n\"And THEN I was rescued by this awesome, gentle, caring, sexy woman. A Mistress who makes me feel wonderful every day, and gives me everything I need to feel safe and submissive and happy.\"\n\n\"I should have remembered the curtains!\"\n\nAshley leaned over and kissed her cheek, salty with tears. \"It was a tiny mistake. It doesn't even register. You could make a thousand mistakes like that and you'd still be the most amazing Mistress I could ever dream of. I love you. I trust you. I trust your heart. I trust that you would never put me in danger. And like you said: my life is a billion times better than it was before I met you.\"\n\nHer owner turned and wrapped her up in a tight hug and Ashley gave as good as she got. The quiet embrace lasted a minute or so.\n\n\"I never said a 'billion times' better,\" Mistress Kara said, and Ashley smiled at the faint tease in her voice.\n\n\"But that's what you meant, right?\"\n\nHer owner laughed and squeezed her tighter, then was serious again. \"Sorry, for all this,\" she said.\n\n\"I accept your apology, Mistress.\"\n\nThey hugged again. Mistress Kara leaned over and switched off the lamp on the nightstand, then lay down on the bed, pulling Ashley down alongside her. Ashley resisted just long enough to unbuckle her collar and toss it next to the lamp.\n\nShe lay on her side and her owner spooned her from behind and pulled Ashley tight against her warm body. Ashley wished her Mistress had come to bed naked - nothing was better than cuddling up skin-on-skin. After everything that had happened that day, it was reassuring to end up in her owner's secure embrace, even in a strange bed.\n\n\"It's been an emotional few hours,\" her owner said, her voice a murmur next to Ashley's ear.\n\n\"You called your sister and parents? Told them about the video and about...me?\"\n\n\"Yes. I called Peter's younger brother and sister as well. I couldn't call everyone on Chad's list, but I wanted to break the news to family, at least. If they're going to find out, I'd rather tell them myself.\"\n\n\"What did your mom and dad say?\"\n\nMistress Kara was quiet for a moment. \"They were worried. Mom thought the pain of losing Peter had caused an emotional breakdown, and that my feelings for you are a delusion of some kind. She thought I should get counseling.\"\n\n\"Wow...that's kind of harsh.\"\n\nHer Mistress gave her a brief squeeze. \"It's okay. She never understood what I saw in Peter, either. We have different tastes. She's a little more...traditional.\"\n\n\"And your dad?\"\n\n\"He was more worried for my safety. He thought I should move back in with them until everything blows over. I shouldn't be living all by myself in the big, scary city.\"\n\n\"Heh heh. Still daddy's little girl?\"\n\n\"Something like that. The call with my sister went better. She said she'd be aggressive about policing her sons' email accounts for the next little while. And...she wants to meet you.\"\n\n\"Really?\"\n\n\"I told her we'd set something up so you could meet. Not right away - we've got our hands full with all this Chad stuff. But after that...\"\n\n\"Collar, or no collar?\" Ashley asked, half-teasing and half-hoping.\n\nMistress Kara was quiet for a bit as she started to rub Ashley's bare belly. \"Given the content of the video, I wanted to try to prepare everyone for why I was hitting you with a paddle. Even if they don't open Chad's email, it's not impossible someone else would find the video online and show it to them.\"\n\n\"I guess that's true.\"\n\n\"With mom and dad, I was vague about it - I just said it was a 'sex game' and that you were a willing participant.\"\n\n\"You said that? To your mom?\"\n\nHer owner groaned at the memory. \"It was exactly as awkward and embarrassing as you think. Probably more for mom than me.\"\n\n\"What did you tell your sister?\"\n\n\"I texted her a 'BDSM' Wikipedia link, told her I was the 'dominant', and said I'd be happy to answer any questions she had.\"\n\nAshley laughed. \"No way!\"\n\n\"Oh, yes. Someone went to the trouble of writing a whole article, so why should I have to stumble around looking for the right words?\"\n\n\"So...does this mean you're 'out' now? As a Mistress, I mean?\"\n\nThere was another extended pause. Ashley enjoyed her owner's warmth and the soothing belly rub.\n\n\"I've always preferred to keep my kink and vanilla lives separate. On the kink side I had Peter and the MAMMs and the sex furniture business, and on the vanilla side I had my family and a bunch of wonderful, non-kink friends. I wasn't ashamed of my kink side, exactly, but it wasn't the face I was comfortable showing most people.\"\n\n\"That's normal, I suppose.\"\n\n\"Perhaps. I've met people that wear their dominance or submission on the outside, like a badge of honour, and I always envied them. It seems...braver...to live that way. More authentic, somehow. I always wanted to be that kind of person - confident enough to embrace who I really am and to freely live in the way that suits my nature.\"\n\n\"I know what you mean. I'd wear my collar everyplace, if you'd allow it. I want everyone to know you're my owner.\"\n\n\"I've been thinking about that, too. Maybe it's wrong of me to stifle your self-expression. In the beginning, I wanted to teach you about 'true' submission, but maybe, in some ways, I should be learning from you instead.\"\n\n\"It sounds like you're thinking of coming out as a Mistress, then.\"\n\n\"If Chad's email gets sent, then I'm pretty much 'out', whether I choose it or not.\"\n\n\"So...maybe you should jump before you're pushed?\"\n\n\"Maybe. It's scary to think about making a change like that at my age.\"\n\n\"If not now, when?\"\n\n\"Good point. I'll give it lots more thought. But for now, let's keep things as they are. You showing up to court in a collar might not be the best look for our side.\"\n\nAshley chuckled at that, then there was a long silence. Mistress Kara continued to rub, so she definitely wasn't asleep.\n\n\"Hey, Ash?\"\n\n\"Mistress?\"\n\n\"How do you see your future? What do you want to be doing when you're my age?\"\n\nShe only needed a moment to think it over.\n\n\"I see me kneeling naked in front of a sexy, beautiful, sixty year-old Mistress, massaging her feet and looking up into her kind, brown eyes as she reads her book and enjoys a cup of tea. I see me serving her body with my hands and mouth and anything else she wants. I see me giving her all my love and submission, and knowing that she'll care for me and give me what I need to be happy.\"\n\nMistress Kara was quiet then, and pressed a tender kiss to the back of Ashley's neck. The younger woman sighed and tried to settle deeper into her owner's arms.\n\nIn moments, they were asleep.\n\n*\n\n\"It's so peaceful here,\" Ashley said.\n\nMistress Kara, paused and looked around, then breathed a satisfied sigh. \"It's perfect. Exactly what I needed.\"\n\nVeteran's Provincial Park was a wooded nature preserve about thirty minutes outside the city, on the shore of Pine Lake. Wide, winding, gravel-covered hiking trails snaked through the tall trees, sometimes following the shoreline, sometimes branching out into the deeper reaches of the forest, and sometimes running alongside the farmers' fields that bounded the northern side of the park. \n\nAshley had been there once before, on a grade-school field trip, years and years ago. But being here with her Mistress was way better, especially since they had the place almost to themselves. Other than an occasional, fanatical jogger or lone dog-walker, few people were willing to come out on a chilly, drizzly Tuesday morning in late March. \n\nNeither of them were really dressed for the weather, but the end of March was a tricky time of the year to gauge, clothing-wise. \n\nMistress Kara was still in winter clothes; snow boots and a thick, down-filled parka over jeans and a sweater. She wore gloves and carried an umbrella, even though the rain was light and almost misty - it drifted through the air rather than falling straight down. \n\nAshley was in boots, jeans and a sweater, too, but wore a lighter spring jacket that felt a little TOO light now that the cool dampness of the morning had started to settle into her bones. She had a wool toque and a pair of gloves in her pocket if she got really cold. Best of all, she could feel the snug presence of her leather collar around her neck. She appreciated its comforting embrace now more than ever.\n\nThe snow had recently melted, and with the amount of rain they'd been getting there were parts of the trail that were too muddy or wet to walk on. But the main path that ran next to the shoreline was in good shape, with only occasional puddles or mucky patches. \n\nMistress Kara was leading the way; she seemed to have a destination in mind, though her slow pace made it clear she was in no hurry to get there.\n\nAfter the week they'd just had, Ashley, too, was happy to slow down and soak up the peaceful scenery.\n\nIt had been one week ago that Chad had approached her in the bakery, then uploaded the video of her and Mistress Kara. Since that day their lives had been a hectic and exhausting series of challenges. Endless interviews with police and lawyers. A blizzard of paperwork. Stress. Frustration. Humiliation. Guilt.\n\nThe police had searched Chad's apartment, found the list of passwords Ashley had told them about, and accessed the online file storage with the intimate workshop video and the other - even dirtier - videos made during Ashley's enslavement to Chad. Knowing that a bunch of police and lawyers might be watching those videos embarrassed her; made her feel like she'd been stripped naked and forced to parade around in front of strangers.\n\nHer former Master was arrested and charged with a bunch of serious-sounding things, and the lawyers expected that he'd eventually accept a plea bargain in return for dropping or reducing some of the more serious charges. Still prison time, though, which was a relief. Her world was a safer place without Chad prowling around in it.\n\nAshley would have been content to leave it at that, just to have the whole thing behind her. But her Mistress was out for blood, or at the very least, money. She'd hired a lawyer, and was in the process of suing him. \n\nThey'd bought new phones and her owner was looking at moving them into a new building. It had been a week of constant change and confusion, and the next couple of weeks were sure to be just as bad. ",
        "The soggy chill of Veteran's Park was a welcome island of peace in their frenzied lives.\n\n\"Ah, good. It's still here,\" Mistress Kara said, pointing down the shoreline at a sturdy-looking, wooden pavilion.\n\nIt wasn't huge, maybe twice the size of their living room, but it had a roof and a few picnic tables and it would provide at least a little protection from the drizzle. The view of the lake was lovely, even under gray skies, and the mingled scent of the water and the trees was calming. She felt the stress of the last week beginning to ease.\n\nHer Mistress collapsed her umbrella and sat on a wet bench at one of the picnic tables, and Ashley took a seat next to her. For a few minutes there was silence, broken only by the gentle lapping of the water on the shoreline and the whisper of drizzle on the soggy, leaf-covered earth.\n\n\"This is where Peter gave me my first collar. The one you're wearing now.\"\n\n\"Really? He sure picked a good spot. He was a bit of a romantic, I bet.\"\n\nMistress Kara nodded. Her eyes had a faraway look in them, and she had a small smile that looked a little sad. Ashley leaned in and nudged her Mistress' shoulder with her cheek, just to let her know she wasn't alone.\n\n\"When he slipped that leather around my neck and buckled it on, it was the happiest moment of my life up to that point. Probably the most important moment, too. It marked the death of the old Kara and the birth of the new Kara. A better Kara.\"\n\n\"That's so cool.\"\n\n\"I've been thinking of this place a lot lately. There have been so many changes, all coming so quickly. Not just this week with Chad, but for the last few months. I lost Peter. I met you, took on a new role. I've been growing into it, learning it. It's been fun, and intimate. Rewarding. Sometimes I can't believe it's only been a couple of months. It feels like you've been a part of my life for longer than that.\"\n\n\"You're an incredible Mistress. I love being your slave.\"\n\nHer owner's smile became warmer on hearing the compliment, and Ashley smiled, too.\n\n\"I've watched you grow into your role as well. Your submission has become fearless and joyful. You're stronger now - a lot stronger than when I first met you. You've found your voice. You even stood up to Chad, all alone. It's been beautiful to witness your transformation.\"\n\n\"That's because of you. You're calm and gentle and super-nice. I know I can trust you. I love you so much, Mistress.\"\n\nMistress Kara nodded. \"I love you, too.\"\n\nThe words were spoken so plainly that they didn't register for a few seconds, and when they did, Ashley was speechless.\n\nHer owner grinned at the dumbstruck look, then leaned in and kissed her - cold lips and a cold nose somehow triggered a surge of warmth inside Ashley's chest and she returned the kiss eagerly. As usual, the other woman was in no hurry to break the kiss, allowing it to linger for ten wonderful seconds before putting her arm around Ashley's waist and pulling her into a side-hug.\n\n\"Before I called my parents and my sister to explain about the video Chad made, I gave a lot of thought to how I would describe my relationship with you to my non-kink family and friends. The only word that felt right was 'lover'. I think at its core, our relationship is about intimacy and love as much as dominance and submission. It was like that with Peter. It's like that with you.\"\n\n\"Oh, wow,\" Ashley whispered. \"That's...\" She didn't finish; emotion welled up and smothered the words.\n\nMistress Kara gave her another squeeze. \"I wanted to be here at the lake when I told you that. It was here that the old Kara ended and the new Kara started. Maybe this is a good place for the old 'us' to end and the new 'us' to begin.\"\n\n\"I'm not sure I get what you're trying to say.\"\n\nHer Mistress reached up, hooked her index finger through the D-ring on Ashley's collar, and gave it a couple of gentle tugs. \"I'd like to collar you. Formally, I mean. If you're willing, I'd like to be your Mistress, long-term. Let's make it 'official'.\"\n\nAshley's eyes went wide, then she broke into a gleeful smile. She didn't even need to think about it. \"I accept, Mistress. Thank you for taking me as your slave.\"\n\nMistress Kara leaned in and they shared another unhurried kiss, and even after it ended they stayed close together, nuzzling noses and rubbing cheeks, then huddled together and looked out over the gently rippling surface of the Pine Lake.\n\n\"I want to have a collaring ceremony at the next MAMM party. I want everyone to witness it,\" her owner said.\n\n\"That would be cool!\"\n\n\"It won't be for a couple of months, so we'll have plenty of time for the planning. I'd like to have a Mistress-slave agreement in place, too.\"\n\n\"Did you have a written contract with Master Peter?\"\n\nMistress Kara nodded. \"We'd discussed the details verbally, and I thought I understood what I was getting into. But...seeing it written out in black and white made me truly appreciate how much of myself I was surrendering to him. It made my submission seem so much more...important, I guess. More tangible and weighty. Signing the agreement in front of witnesses made it feel like a serious, unbreakable commitment. I can still remember my heart racing as I signed my name - it felt reckless and exhilarating...almost euphoric.\"\n\nAshley grinned at the obvious pleasure the memory brought to her Mistress. \n\n\"So...will you write it and I just sign it?\"\n\n\"I can write it, but before I do, I'd like you to give some thought about what YOU need out of relationship. What do you feel is mandatory? What things are strictly off-limits? What kind of future do you envision for yourself, and for us? Think about it and make some notes, okay?\"\n\n\"Yes, Mistress. I can't wait!\"\n\nThe conversation dwindled into a companionable silence as they gazed out over the lake and imagined their future together.\n\n*\n\nThe black, satin mini-dress clung to Ashley like a second skin, the bandeau top hugging her small, unrestrained breasts, leaving her upper chest, shoulders and arms completely bare. The bottom hem ended just below her buttocks, leaving her legs exposed. She had to step carefully in her matching, black heels - too long a stride would have the dress creeping up her thighs, giving people a peek at her skimpy, black thong. The wide, wool-blend wrap her Mistress had bought would keep her shoulders and chest covered to ward off the chill of the early April evening.\n\nHer Mistress had pinned Ashley's hair back so it flowed down between her shoulder blades, covering the tattoo on her neck and keeping stray wisps out of her face. Her only accessory was her shiny, leather collar with its silver buckle.\n\nShe'd never in her life worn an outfit so beautiful, and had spent several minutes posing and preening in front of her full-length mirror while she'd waited for Mistress Kara to get dressed for the dinner. She looked like a completely different person - classy, even elegant, and super-sexy. Every guy at the restaurant would be undressing her with his eyes. But the collar sent an unmistakable message: she was owned.\n\nAnd the woman who owned her would be drawing plenty of hungry stares as well. \n\nHer owner's scarlet dress had a ruffled V-neck that showed modest cleavage. The dress hung to the tops of her low, red heels, though there was a slit that ran up the left side to mid-thigh and showed enough bare leg to be interesting. The colour was rich and deep, and the stretch fabric had a lovely sheen that made it glisten in the right light. \n\nMistress Kara had made eight o-clock reservations at Gianna's Fireside - the kind of dim-lit, ritzy restaurant where the table settings had three different forks, and an appetizer cost more then a fast-food meal for two. Normally, Ashley wouldn't have gone anywhere near a high-class place like that, but they were going to be discussing the Mistress-slave contract and her owner insisted on 'a setting befitting the importance of the occasion'. She was kind of a romantic, it seemed, just like her late Master Peter had been.\n\nThe impeccably-dressed hostess walked them to a cozy, candle-lit table tucked away in a quiet corner. Her eyes lingered for just a moment on Ashley's collar as she set the menus down, and Ashley tilted her chin up a little to display the symbol of ownership more boldly, feeling a thrilling mix of pride and embarrassment. \n\nShe was careful to remain standing until her Mistress had been seated. Normally, she'd kneel next to Mistress Kara's chair in high protocol, but in a fancy place like this it might get them kicked out! To be on the safe side, she stayed where she was.\n\n\"Just one menu, please,\" Mistress Kara said, giving the hostess back one of the menus and keeping the other one in front of her.\n\nAshley was dying to look around and the fancy interior, and it was an effort to keep her gaze on her owner's face, where it belonged.\n\n\"You can sit,\" her Mistress said, nodding to the chair beside her on the right, then opening the menu. Ashley quickly took her seat.\n\nThe waiter arrived in a formal black suit, white shirt and a bow tie. \n\n\"I'll have a glass of your house white, and she'll have a strawberry daiquiri. I'd also like the veggie and cheese plate to start, please,\" Mistress Kara said, giving the man a polite half-smile, then returning her attention to the menu. \n\n\"Thank you, Mistress,\" Ashley said quietly. It was a new experience to have her Mistress order for her, and she found she liked it. Mistress Kara chose her slave's clothes, why shouldn't she choose her meal too?\n\nHer owner looked up from the menu and gave her an approving nod. \"You look incredible, Ash. You're a lovely young woman.\"\n\nAshley beamed at the comment; even after so many weeks she hadn't gotten used to the idea that someone found her beautiful.\n\n\"Oh, come on. It's just these amazing clothes you picked out.\"\n\n\"Ashley,\" Mistress Kara said in her pulse-quickening Domme voice, \"The proper response to a genuine compliment is 'thank you'. Is that clear?\"\n\n\"Yes, Mistress. Thank you for the compliment. It's just...kind of weird to think of myself that way.\"\n\n\"Better get used to it, if you're going to look that gorgeous in a dress.\"\n\nThe dim restaurant hid her blush. \"Thank you, Mistress.\"\n\n\"Much better. Sit with your back straight, and fold your hands in your lap until I say otherwise.\"\n\nShe did as commanded, feeling her bra-less boobs press against the tight, stretchy fabric of the dress. Her hard nipples probably weren't obvious in the dark room, but she hoped her owner could at least see their outline under the black satin. \n\nIt was Saturday, and she was feeling a full week's worth of built-up lust. Although it wasn't a rule, her Mistress preferred to limit her slave to once-per-week orgasms, and Saturday was O-day. Ashley was already juicy under her thong, and an exhilarating tension simmered inside her, keeping her alert, attentive and hyper-focused on her owner.\n\nThe waiter brought the drinks and a small basket of fresh bread, wrapped in a white napkin, with a small bowl of whipped butter on the side. There was also a plate of different types of cheese and some multi-grain crackers, plus sliced carrots, peppers and a handful of grape tomatoes. \n\n\"I'll have your Filet mignon classic, medium rare, with baked potato and steamed vegetables. Could I also get a shrimp cocktail?\" Mistress Kara said.\n\n\"Of course, ma'am.\" The waiter turned to Ashley, who struggled to keep her eyes on her owner's face even if it seemed a little rude not to look up at the man. \"And you, miss?\"\n\n\"Nothing for her, please.\" Mistress Kara said.\n\n\"Yes, ma'am.\" The waiter didn't seem fazed by that; he just collected the menu and left.\n\n\"Um...I'm not eating, Mistress?\"\n\n\"Of course you're eating. I'll be feeding you.\"\n\n\"Really?\" She couldn't help the excited tone. Her owner had only fed her once or twice and it was embarrassing in a good way, and strangely intimate.\n\nIn response, her Mistress spread some soft cheese on a cracker and held it out. Ashley leaned forward and took it in her mouth; she knew she wasn't allowed to use her hands.\n\n\"So...just over a month until your official collaring. I have to get started on the contract, and I'd like your input. You'd had time to give it some thought, right?\"\n\nAshley chewed and swallowed. \"Yes, Mistress. I've done a lot of thinking. I made notes on my phone.\" She nodded in the direction of her owner's purse.\n\nMistress Kara popped a tomato in her mouth, then fed one to Ashley before retrieving the phone from her purse and putting it on the table.\n\n\"You can use your hands for your phone, and for your drink.\"\n\n\"Thank you, Mistress.\" Ashley unlocked the phone, then quickly opened her Note app. \n\n\"Let's start with your needs, then we'll talk about limits.\"\n\n\"Okay. Um...the first thing is, I need you to be strict. I need to know what you want, and then be held accountable for serving you properly. If I mess up, I want you to discipline me. I want you to be my Mistress, not my Governess.\"\n\n\"Have I been strict enough lately? Am I giving you what you need?\"\n\nAshley hesitated. \"You've been really great since the MAMM party. You could even go a little more, if you wanted. I can take it.\"\n\nHer Mistress nodded. \"I understand, and thanks for being honest with me.\"\n\nHonesty was one of the Five Principles, and that made the praise even more satisfying.\n\n\"The next need is, I want to give you full submission. You know, put myself completely in your control. I want you to have everything.\"\n\n\"What does 'everything' mean?\"\n\n\"Like, you control what I eat, and when I sleep, and how I dress. You control my time and even my money. Stuff like that.\"\n\nMistress Kara was quiet for a moment as she helped herself to a carrot, then fed Ashley a little triangle of white cheese on a cracker.\n\n\"You're talking abut Total Power Exchange. That's...a big step. It was only ten weeks ago that I became your Governess - I feel this may be too much, too soon. And not just for you; it might be premature for me to accept that kind of responsibility until I know you better and can make decisions that reflect our best interests.\"\n\n\"Well...it's not that I'm disagreeing with you, but I'm one-thousand percent comfortable putting myself in your hands. I trust you more than I ever trusted anyone, and I love you more than anyone, too. I'm happy and secure when I feel your control strongly.\"\n\nHer owner paused in thought for a few seconds longer. \"How about we park it for now and discuss it a bit more later, rather than get bogged down in details during dinner? I'm sure we can come up with something.\"\n\nAshley nodded, then glanced back at the list on her phone. \"Another 'need' is, I want to earn my way. I don't want to be a freeloader. I need you to make sure I'm pulling my weight. I don't have a lot of money, so I want you to make me contribute in other ways so it's fair.\"\n\n\"I'll work you like a slave,\" Mistress Kara said, with a grin. Ashley returned it automatically. Seeing her owner's smile always made her smile back. It was like a reflex.\n\n\"The last 'need' is that I want to serve YOU. Your body, I mean. I'm not only talking about sex and stuff, but I really like the feeling of touching you and making you feel good. I'm happy to do housework and put in time at the bakery and in the workshop, but mainly I want to bring pleasure to you. Did that make sense?\"\n\n\"I'm not sure I could give that up even if I wanted to,\" her Mistress said, then took a sip of wine. That reminded Ashley that she hadn't even tasted her drink yet, so she took a mouthful and enjoyed the fruity sweetness and the faint after-taste of alcohol.\n\nAshley swallowed, then continued. \"Okay. Uh...I have a couple of 'limits' here, too. I don't want to seem like I'm complaining too much...\"\n\n\"I want to hear your limits, Ash. It's important.\"\n\n\"So, number one, I don't want you to give me to anyone else. You're the only one who gets to control me. Chad used to give me to his friends overnight...\"\n\n\"I understand and agree. I'd have hated it if Peter had done that with me. I was his slave, no one else's.\"\n\nAshley gave a relieved sigh.\n\n\"Number two, I want to be your only slave. I think that's fair, since you're going to be my only Mistress, right?\"\n\n\"I agree.\"\n\n\"And that's all. That's all I have.\"\n\n\"Just those two? Don't feel shy about adding more. It's not 'bad' to have limits, and it won't make me unhappy.\"\n\n\"It's not that. It's just...I want you to be free to explore me in all sorts of ways. You know, experiment and try new stuff. I think...the stuff I hated with Chad...I might actually enjoy that stuff if I do it with YOU.\"\n\n\"Oh? Such as what?\"\n\nAshley felt her cheeks and ears get hot as a full blush came on. \"Well...Chad used to make me do...watersports. It was totally gross, but...\"\n\nHer Mistress raised an eyebrow. \"And you'd like that sort of thing from ME?\"\n\nThe younger woman's face and neck felt like they were on fire. \"I'm not saying I'd LIKE it. I'm saying...let's try it. Try everything. If I hate it, I'll tell you. I don't want to miss out on stuff just because Chad made it awful.\"\n\nThankfully, the meal came and they were forced to interrupt the suddenly dinner-inappropriate subject. Relieved to be past the awkward admission, Ashley chugged two quick mouthfuls of her daiquiri.\n\nMistress Kara's meal looked and smelled delicious, although the thick, circular cut of bacon-wrapped steak looked small on the large, white plate, even surrounded by a potato and steamed veggies. The shrimp cocktail only had five pink shrimp hooked over the lip of a martini glass filled with red sauce, but they were some of the biggest Ashley had ever seen. \n\nMistress Kara cut and ate a slice of the steak, and her eyes closed in obvious pleasure as she chewed. She was in no rush to swallow as Ashley looked on hungrily. \n\n\"Wonderful,\" her owner sighed, opening her eyes at last.\n\n\"I can tell you enjoyed that.\"\n\n\"Nobody does it better than Gianna's,\" Mistress Kara said. \"Although at these prices, it's a once-a-year treat.\"\n\n\"Did you come here with Master Peter?\"\n\n\"He was more of a Burger Joint kind of guy, but if I pestered him enough he'd eventually break down and bring me.\"\n\n\"Too expensive for his liking?\"\n\n\"He just hated wearing a tie,\" her owner said with a wink. \n\nShe cut another piece of steak and held it out to Ashley on the end of her fork.\n\n\"Eyes closed. I want you to get the full effect.\"\n\n\"Yes, Mistress.\" Ashley closed her eyes and opened her mouth wide as her owner fed her. It was by far the best mouthful of food she'd ever tasted - salty and savory and melt-in-your-mouth tender. She let out a contented sigh.\n\n\"See?\"\n\n\"Oh, wow. I'd wear a tie for this any day of the week.\"\n\nThey shared the meal at a leisurely pace, with Mistress Kara helping herself, then feeding a morsel to Ashley. It felt submissive and sexy to be forced to wait for each fork-full of food; she imagined herself kneeling, on the leash, being fed from her owner's hand. A persistent, demanding throb developed between her legs, and slowly grew in intensity. She squeezed her thighs together and squirmed her bum on the chair.\n\nHer owner talked in between bites.\n\n\"I love the thought you put into your needs and limits. Good work.\"\n\n\"Thank you, Mistress.\"\n\n\"Did you find it hard to make your list?\"\n\nAshley shook her head. \"I know you don't get mad when I tell you my opinions. It just took some time to think of what I really wanted. Especially the limits - I can't imagine hating anything you wanted to do to me.\"\n\nMistress Kara nodded as she chewed a bit of potato, then swallowed.\n\n\"I found it tricky. I know what I want for you, but it was hard to figure out what I wanted for myself. It took a bit of soul-searching to figure out what MY needs were.\"\n\nAshley wasn't surprised her Mistress had put in so much thought; she was SUPER smart and gave every decision a lot of consideration. It was easy to trust someone like that.",
        "\"I'd love to hear your list,\" Ashley said, then opened her mouth for some potato and a steamed carrot.\n\n\"Okay. My first need is to see you constantly growing and getting stronger. You have so many gifts and talents inside you, and I want to see you develop them all. That, more than anything else, would bring me a lot of joy.\"\n\nAshley took her Mistress' hand in her own and squeezed it affectionately. The other woman always made her feel so warm inside. \"Thank you, Mistress. I promise to give you my best effort, no matter what it is.\"\n\n\"I expect so. I'll be ready with the breast paddle if I feel you're not giving your all.\"\n\nHer owner said it as a tease, but the thought of Mistress Kara punishing her breasts again sent a thrill of excitement through her. Her heart beat faster.\n\n\"My second need is to refine and expand my dominance of you. I'm still a little rough in some areas, and still getting to know how you think and what makes you tick. I'm going to work hard to master you, and to bring out your strongest, deepest submission.\"\n\nAshley nodded, imagining how wonderful it would be to feel an even deeper submission than she already did. She waited while Mistress Kara fed both of them another bite.\n\n\"And finally,\" her Mistress said, a wicked smile spreading on her face, \"I've decided I need to more fully avail myself of my eager slave girl. So I plan to really put you to work from now on, when we're at home.\"\n\nAshley realized she was breathing through her mouth. Her hips wriggled on the chair, her wet pussy seeking contact. That wicked smile did incredible things to her arousal.\n\n\"What...what do you mean?\"\n\n\"You will keep my home immaculate at all times,\" her owner started, in full Domme voice. \"And the same goes for my car. You'll do all the laundry, and will hand-wash my delicates. You'll expand your repertoire of massage techniques - I love your foot massage and your relaxation massage, but there's more you could be doing. I'd enjoy an aromatherapy massage, or hot stone. Erotic massage, facial massage...you're going to learn them all, and perform them on demand. Is that clear?\"\n\n\"Oh...wow. Thank you, Mistress.\" Ashley said. She loved the commanding tone from her Mistress and the idea of learning new ways to bring pleasure to her owner.\n\n\"And it won't stop with massages. You'll be giving manicures and pedicures. Washing my hair. Shaving my legs. Scrubbing my back in the shower. You'll be serving my body in every way I can think of. What you don't know, you'll learn.\"\n\n\"I'd love that. I'd love it so much.\"\n\n\"I'll be your Mistress everyplace else, but when we're at home I'll be your queen, and I'll expect to be treated like royalty.\"\n\nAshley desperately wanted to touch herself. The throbbing in her sex was becoming an urgent need.\n\n\"I accept, Mistress. Thank you. Can we start right away? Like, tonight? We don't have to wait for the collaring ceremony, right?\"\n\nMistress Kara chuckled, then filled Ashley's mouth with potato and steak.\n\n\"There's no reason to wait, is there?\"\n\nAshley shook her head emphatically.\n\nHer owner's expression turned thoughtful. \"I gave some thought to my own 'limits', too. At first it was a little odd - the idea of a dominant having limits like a submissive does. But I realized I do have some.\"\n\n\"Like what?\"\n\n\"Well, like micro-managing you. I can't actively give you direction every waking hour. Sometimes I'm going to want a few hours to myself - to do some reading, or run on the treadmill, or even just stare out the window and dream. So you're going to have to accept that, and be content to give me some solitude every now and then.\"\n\n\"I guess I get kind of needy sometimes,\" Ashley said, feeling sheepish.\n\n\"Maybe just a little,\" her owner agreed, softening the words with a gentle smile. \"I'm hoping you'll find hobbies of your own in case you ever need a little 'me' time yourself.\"\n\n\"I'll work on that. Thank you, Mistress. Any other limits?\"\n\nMistress Kara was quiet for a moment, and her expression became serious. \n\n\"You're making some big sacrifices by choosing to serve me long-term. Being my slave means no boyfriends, no fiance. No husband. No children. I have allergies, so you can't even have a dog.\"\n\n\"I don't need any of that stuff,\" Ashley said, uncertain of the direction her owner was going and eager to reassure her.\n\nHer Mistress took another sip of wine. \"That's true right now, and it might be true forever,\" she agreed. \"Or, it might change. As time goes on, you may start to feel that you're giving up more than you're getting in return. And if that time ever comes, I don't want to keep you. I don't want you to stay out of loyalty if leaving would make you happier. I want to be a source of strength for you, not an obstacle or an obligation.\"\n\nAshley hesitated before responding. \"I get what you're saying, Mistress. But right now, none of that stuff is on my mind. All I can think of is you. All I want is you. I love you so much that I can't even dream of wanting anything else.\"\n\nMistress Kara smiled, then offered up the last of the steak. Ashley eagerly accepted it.\n\n\"Okay, then. I'll write up a draft of the Mistress-slave agreement, and we can discuss it and make whatever changes are needed. Then you'll sign it at the collaring ceremony.\n\n\"I can't wait,\" Ashley said around a mouthful of food. \n\n\"Now,\" the other woman said, her voice becoming low and inviting. \"What are we going to do about that hungry pussy of yours?\"\n\nAshley flushed again in the dim light; her heavy breathing and squirming hadn't gone unnoticed. Her owner was really good at reading her body and her moods!\n\n\"Whatever you command, Mistress.\"\n\nThat wicked, heart-quickening smile returned to her Mistress' face.\n\n\"I did have an idea...\"\n\n*\n\nThere were flowers in the restaurant washroom - fresh flowers!\n\nThe floor was a lovely, black-and-white tile. The black counter tops were dotted with a row of white, oval, porcelain sinks facing a wide, well-lit mirror. No hot-air hand dryers here - instead there was a neat stack of folded, linen hand towels next to each sink, with a graceful, black laundry hamper next to the exit. Even the bathroom stalls were spacious, with high walls and doors that went almost to the floor. There was soothing, classical music pumped in through speakers set into the ceiling. Everything was shiny and spotless and the faint scent of lemon suggested it had been recently disinfected, too.\n\nThe restaurant bathroom was classier and more luxurious than just about any room she'd ever been in.\n\nAshley paused inside the doorway, listening for movement in the stalls, but after a moment she was satisfied that she was alone. As instructed, she washed and dried her hands, then entered the end stall and locked herself in. The high walls made her feel safe - there was no way anyone could peek under the door or over the top of the stall without a lot of effort.\n\nAlmost immediately felt a brief vibration from her phone.\n\n'Remove dress and thong. Then sit.'\n\nHer heart was already beating fast and the terse message from her owner caused wave of heat to roll through her. She unzipped her dress enough to loosen it, then pulled it up and over her head and hung it from a hook on the back of the stall door. Goosebumps rose on her exposed skin. She slid her thong down and stepped out of it, then hung it along with her dress.\n\nIt felt daring and sexy to be standing in just her heels and collar, and she closed her eyes and took a breath, savouring the sensation. She sat down on the commode, then texted back.\n\n'I'm seated in heels and collar, Mistress.'\n\nShe heard the door to the bathroom open and wondered if it might be Mistress Kara, but whoever it was locked herself into the far stall and Ashley heard the rustle of clothing, then a faint hiss. \n\nSomehow, the knowledge that she wasn't alone added to the thrill of being naked and horny and waiting on her owner's directions. Her phone hummed.\n\n'Knees wide. Edge yourself. Text when you need to pause.'\n\nShe spread her knees as wide as she could, until she felt the stretching in her groin muscles. Even then, the stall was wide enough that her knees weren't touching either wall. She lowered her fingers and stroked them up between her smooth pussy lips; she was already soaked. When her slippery fingertips brushed over her swollen clit, she couldn't help a sharp gasp. She began rubbing in slow, tight circles, losing herself in the incredible pleasure that rippled through her desperate sex. Despite the cool air and her bare skin, she felt hot. \n\nThe toilet in the far stall flushed and she heard the sound of high heels on the tile in front of the sink. The tap was turned on, hands were washed. Then there was a brief silence, filled by classical music.\n\nAsh's fingers never stopped. Her mouth was wide open in an effort to mute the sound of her laboured breathing. She felt the familiar tensing between her legs that signaled the approach of her orgasm, and she fought it, wanting to give her Mistress her very best edge.\n\nThe heels clacked on the tile, the bathroom door opened, and then Ashley was alone with her lust once again.\n\nAnother minute passed and her approaching climax was quickly wearing down her will to resist. She continued to masturbate with her right hand and tried to text her owner with her left. She was shaking, which made it harder. The scent of her wet pussy was noticeable in the stall.\n\n'Plz can I pause MK?'\n\nShe continued to torment her overheated sex until she saw the response pop up on the screen.\n\n'Work both nipples HARD. Count to 60 out loud. Then edge again.'\n\nAshley let out a barely audible groan, rested the phone on her thigh, then pinched each nipple firmly between her finger and thumb and began to twist and pull. She was gentle for a moment, but that didn't satisfy her so she squeezed harder and worked the stiff, sensitive nubs roughly. \n\nThe door opened and Ashley heard the voices of two women as they entered and walked to the sinks just outside her stall door. She heard the zip of a purse being opened. One of the women was saying something about her son in university...\n\nThen Ashley realized she'd forgotten to count! She pinched harder and began to whisper as faintly as she could manage. One...two...three... The painful pleasure of her tormented nipples seemed to blend with the throbbing between her legs, driving her whole body further into heat.\n\nThe women continued to talk just a few feet away but Ashley couldn't pay attention to their words - it took a lot of concentration to keep her count without a needful moan slipping out, too. How long before those women could smell her desperate arousal even outside the stall?\n\nWhen she whispered 'sixty' she let go of her nipples, but they continued to ache with the memory of the hard use they'd endured. A lusty sigh escaped as her fingers danced expertly over her stiff clitoris again. Her pelvis rocked back and forward and her inner muscles clenched and released as her fingers again drove her to the very edge of ecstasy. Worried her control would slip entirely, she fumbled with her phone again.\n\n'Plz pause MK?'\n\nShe was teetering on the brink when the reply came in.\n\n'Work index finger in and out of ass. 2 knuckles deep. Count 2 min out loud. Then edge again with different finger.'\n\nThis was new - she hadn't done anal play with Mistress Kara! As the two women continued to chat outside her stall, Ashley lubed her index finger in her soaking pussy, then reached behind her and slowly eased it past the tight ring of muscle and into her ass. Two knuckles wasn't deep, but even the shallow penetration sent a shiver of pleasure through her core. She slid her finger almost all the way out, then back in again. \n\nThere was wonderful sensation coming at her from all directions. Her nipples and clitoris throbbed and the anal stimulation added to the mix until she was awash in pleasure. She barely noticed when the women left the washroom, and only when the door closed did she realize she'd forgotten to count again. One...two...three...\n\nThe quivering tension in her nethers began to build quickly and with a shock she realized she'd lose control and come hard before her two minutes of anal fingering were up! She'd always hated anal with Chad and his friends, but at her Mistress' command she was suddenly on the verge of a hard orgasm as she probed her tight hole. She tried to get her left hand to work the keypad on her phone as she teased her tight hole relentlessly.\n\n'Plz pause. Anal 2 good.'\n\nAshley was too horny to be embarrassed by the lewd admission. She was only up to a count of forty and her control was slipping badly.\n\n'Slave needs practice, it seems. Work nipples for 2 min. Then edge again.'\n\nWith an audible sigh of relief and frustration, Ashley eased her finger out of her rear hole, then pinched down on both nipples. A jolt of pain-pleasure arced through her body, and the moan it produced couldn't be stifled. It only took her a few seconds to remember to count this time.\n\nTwo minutes later she was panting loudly and back to rubbing her slippery clitoris. Every moment was a battle against an orgasm that had been denied her for a full week. She was losing ground quickly.\n\n'Is the bathroom empty?' asked a text from her owner.\n\n'Yes'\n\nAshley heard the bathroom door open again, and the click of heels on the tile. There was the sound of hands being washed, then the woman walked to the outside of her stall.\n\n\"Unlock the door,\" Mistress Kara said.\n\nAshley leaned forward and slid the bolt to the side, then continued to edge while standing, determined to show her best effort.\n\nMistress Kara stepped into the stall, then locked it behind her and flashed an evil grin at her naked slave girl.\n\n\"Sit, legs wide. No more slacking off...work that cute little pussy hard.\"\n\n\"Yes, Mistress.\" Ashley whispered. She doubled her effort. She was grunting with every breath, fighting to hold her climax at bay.\n\nHer owner slowly raised her red dress to her upper thighs, then hooked her thumbs into the waistband of her thong panties and drew them down to her calves. She carefully stepped out of one leg hole, then the other, leaving her panties dangling from her left hand.\n\nWith her right hand, Mistress Kara cradled Ashley's chin and tilted her head up so she was gazing into her Mistress' eyes. Her owner's thumb pressed against Ashley's lips, and Ashley opened her mouth. The thumb slid into her, and she closed her lips around it and caressed it with her tongue. All the while she rubbed her clit, gasped for breath through her nose and begged with her eyes.\n\nAfter a moment, the thumb withdrew. Mistress Kara held her red thong up in front of Ashley's face, never breaking eye contact.\n\n\"Open,\" her owner said.\n\nAshley's eyes went wide and an almost-irresistible surge of lust shot through her. She opened her mouth.\n\nMistress Kara bunched the panties in her hand, then slowly fed them into Ashley's waiting mouth. They felt warm against her lips, and silky against her tongue. When they were completely inside, they were barely a mouthful.\n\n\"Close.\"\n\nAshley closed her mouth, her lips sealing the thong inside. She worked her tongue over the fabric, hungrily seeking the familiar taste of her Mistress' wetness. Her fingers continued to rub her clit; her orgasm was close, but waiting. Waiting on the command of her owner. Her Mistress.\n\n\"Hands behind your head.\"\n\nAshley gave a high-pitched whimper in her throat but obeyed immediately despite her protest. Even without touching, her body pulsed and ached for release.\n\nMistress Kara braced one arm against the back of the stall, then bent and pressed a kiss against Ashley's lips. Even with her mouth full, the younger woman responded, making her lips soft and yielding for her owner's pleasure, and her own. \n\nThe kiss didn't end, and suddenly Mistress Kara's fingers grazed Ashley's clit between her wide-spread legs. Her Mistress rubbed her in tight, practiced strokes, and this time her orgasm wouldn't be denied.\n\n\"Come for me, my beautiful slave.\" The words were whispered into Ashley's ear.\n\nThen it hit hard, and everything clenched and spasmed. Orgasmic tremors rolled through her sex, her belly and then out to every part of her. She opened her mouth, sucking in air around her owner's soggy panties, gasping and groaning her gratitude as her Mistress kissed and nibbled her earlobe.\n\nMistress Kara stepped back. She put Ashley's black thong in her purse, patted Ashley's head as though she were a treasured pet, then left the stall and washed her hands.\n\n\"Put yourself together. I'll pay the bill and meet you by the front door.\"\n\nAnd five minutes later, when a weak-kneed, disheveled Ashley met her owner near the entrance to the restaurant, thighs sticky with pussy juices that wouldn't stop leaking, her mouth was still filled with the sexy, red thong.\n\n*"
    ],
    "authorname": "GobLean",
    "tags": [
        "consensual",
        "edging",
        "female dominant",
        "female submissive",
        "loving",
        "romance",
        "romantic",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/her-governess-ch-04"
}