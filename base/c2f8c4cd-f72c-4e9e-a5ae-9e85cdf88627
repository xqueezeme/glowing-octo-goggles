{
    "title": "Home for Horny Monsters Ch. 75",
    "pages": [
        "Hi all! I have returned after a brief hiatus to resume our regularly scheduled releases. We are just a few chapters from the end of Part 5, and it's time to start wrapping everything up. I have learned so much from writing this book that I intend to use going forward with my next one (confusing plot-line people, I see/hear you). I'm always learning and growing with each chapter, so I appreciate those who have stuck with me and supported me as I continue perfecting my craft.\n\nNew Reader? I've put thousands of hours into this weird tale of mine, it would be a shame for you to start here, but you do you.\n\nReturning Reader? Welcome back, I've missed being here! I certainly appreciate everyone who is waiting with bated breath to see what happens next, as I am eager to deliver. The events you are about to read will have major repercussions going forward into the monster-verse, so I hope you are ready for them.\n\nAs always, don't forget to leave some stars, and definitely drop some comments. I really do read through them, and even the criticisms can often help (especially when someone voices an issue that I've been wondering about myself). Literotica really does have some of the best readers around.\n\nOkay, you've waited long enough. If I had to state one of the themes for this novel, I'm afraid that it would come down to\n\nLove and Loss\n\nReggie took the lead at the top of the steps, ducking low just in case Neferisfet was waiting to strike at the top. Beth held her breath, half convinced that the rat king would get punted back down the stairs. The mummy had seemed to be in rough shape, but the fact that she had sprinted up the stairs meant that appearances were deceiving.\n\n\"Clear!\" Reggie reappeared in the doorway. \"The kitchen is empty, but I think she is armed.\"\n\n\"What makes you think...oh.\" Beth stepped into the kitchen and saw that several drawers had been opened, their contents on the floor. The knife block next to the sink had been tipped over, and several blades were missing from it.\n\nStabby stabby, Jenny commented.\n\nHide and go seek was far more appealing without the possibility of being stabbed. Nervous, she looked around the kitchen for something to protect herself and settled on a cast iron skillet.\n\n\"You could use the book,\" Reggie offered. \"Both to find her and to defend yourself.\"\n\nSmacking herself on the forehead, she pulled the Grimoire out of Tick Tock, then set the mimic on the counter.\n\n\"If you see that bitch, feel free to eat her.\" She set the book on the counter and took a deep breath. \"I need a spell to track someone,\" she stated clearly. \"One that doesn't alert them that I'm watching.\"\n\nShe opened the book and watched the page fill with information. As she read it, she frowned.\n\n\"Okay, same spell, but one that doesn't require a piece of their hair,\" she repeated, then turned to the next page. \"Or body heat. I suspect she's room temperature.\"\n\nIt took a few tries, but she narrowed down her options to a spoken spell. Picturing the priestess in her mind, she carefully recited the words while summoning her magic.\n\nGlowing footprints appeared on the floor.\n\n\"That's step one,\" she declared, then paused. Was there a spell in the book that she could cast to just kill the priestess? Maybe something that would force her to cross over, or...\n\nJenny kicked the book shut, then put her hands on her hips.\n\n\"Yeah, yeah, I get it.\" She picked up the book and held it tight against her chest. If Jenny of all people thought she was about to cross a line, then she knew to listen. Still, the book itself was practically indestructible, and far easier to wield than a skillet.\n\nThey followed the footprints through the house. Unfortunately, the prints only manifested a few steps out, meaning that Beth followed them into the office, the lounge, then back out to the living room. The prints took her up the stairs, and she slowed down as she neared the top.\n\nThe attic was open, the steps pulled down. Footprints glowed on each of the rungs.\n\nReggie and Jenny led the way, the rat king stopping on the last step to toss Jenny into the darkness above before following her. Beth was two rungs up when she heard the door to Mike's bedroom open.\n\nWhirling around, she was surprised when Neferisfet came at her, not with a knife, but with a floor lamp. The priestess whipped it around like a staff, catching Beth in the shoulder and knocking her free of the ladder. With a wave of her hand, the priestess sent a ball of blue energy at the ladder, causing it to retract and close.\n\nBladed hands popped free of Tick Tock, but Neferisfet used the lamp to swat them away. Beth struggled to get to her feet, but Tick Tock's shifting weight kept throwing off her balance. Through the ceiling, Beth heard Reggie shouting.\n\nNeferisfet whispered something under her breath as she attacked, coating her hands in an eerie green glow. She dropped the lamp and put her back against the wall.\n\nBeth stood just as the glow coalesced around Neferisfet's palms and flared outward.\n\n\"Shit!\" She raised the Grimoire in time to block the magical bolt, but the force of it knocked her backward and through the railing. Screaming, she fell a couple of feet before Tick Tock's blades slammed into the wooden floor, halting her descent. The magical tome tumbled to the floor below.\n\nUp above, Neferisfet was summoning green light into her hands again. Her decaying face twisted into a grin as she pointed her fingers at Beth.\n\nKisa appeared in the corner of the hall and leaped onto Neferisfet, causing the spell to fire into the wall and send green flames along the wallpaper. Neferisfet cried out in alarm as Kisa scratched her face, causing the flesh to hiss as if being burned.\n\nThe priestess pulled a knife out of her belt and tried to stab the cat girl, but Kisa dropped to the floor, scrambled forward and picked up the lamp. Beth grunted as she and Tick Tock pulled her back onto the third floor.\n\n\"Give up,\" Beth declared. \"There's nowhere to run, and nowhere to hide.\"\n\nNeferisfet drew a second knife and sneered at both of them as she backed down the hall. \"I haven't survived this long to just--\"\n\nThe attic door opened hard, the ladder swinging down and catching Neferisfet in the back of the head. The priestess stumbled forward, and Kisa rammed her in the gut with the floor lamp, sending her over what was left of the railing. Beth swung to one side to get out of the way and then watched Neferisfet as she fell to the floor below with a scream.\n\n\"C'mon, get up here.\" Kisa grabbed onto Beth's wrist and pulled. Jenny and Reggie came down the ladder. \"I've been hiding from her ever since she attacked everyone. Was just waiting for the perfect moment.\"\n\n\"Where's Opal?\" Beth asked once she was safely on the floor.\n\nKisa pulled the cracked vial out of her pocket and handed it to Beth. \"Still in here. When that bitch attacked us, she sucked what was left of herself back inside and I brought her with me.\"\n\n\"Thanks.\" Beth pocketed Opal's vial and looked over the railing. Down below, Neferisfet was getting to her feet. The priestess looked over at the Grimoire, then stumbled toward it.\n\nBeth pulled off Tick Tock and threw the mimic down. Tick Tock sprouted mechanical legs and landed in a crouch on top of the Grimoire, pausing long enough to gobble it up.\n\nNeferisfet let out a shriek and blasted the mimic with more of her green fire, which sent him out of view. Beth and Kisa were already running down the stairs, but came to a stop when Neferisfet looked up at them.\n\nHer leathery features were oozing pus from the wounds that Kisa had inflicted. Neferisfet hissed at them like a cornered animal and ran toward the front door.\n\n\"Oh, no, you don't.\"\n\nKisa vaulted the railing and ran after her. Neferisfet opened the front door and the house was filled with the sound of Murray's eerie cry. Kisa tipped over and crashed into the closet as Neferisfet limped out the front door.\n\n\"Kisa!\" Beth stumbled toward the door and kicked it shut, closing out the angel's call.\n\n\"Damn, I didn't expect that.\" Kisa winced and put her hands on her ears. \"Feel sick already.\"\n\n\"We cannot let her escape,\" Reggie called from above. \"She will make it back to Earth and possess someone there.\"\n\nBeth groaned and looked down at Kisa. \"Close the door behind me.\"\n\nKisa nodded, then put her hands over her ears. Beth yanked open the door, jammed her fingers into her ears and ran outside.\n\nThe swirling mists were bubbling along the edges of the property. Murray was hovering in place, shrieking in that dissonant tone. Above him, the angel's wings were spinning, as if it were a giant engine powering the process.\n\nWhat concerned Beth was the fact that Neferisfet was moving toward Murray, holding that weird bag aloft. She was shouting something in an ancient language, causing the bag and her entire arm to pulsate with magical energy.\n\n\"She tried to kill me,\" Beth shouted at the angel. \"Do something!\"\n\nMehkhkahrel's many eyes focused on Neferisfet, and Beth saw that the whites of those eyes were starting to flash. The lights were sporadic at first, but were starting to synchronize.\n\n\"Hey!\" She stumbled forward, trying her best to keep her balance. \"This is the bad guy, aren't you gonna do something?\"\n\n\"YE HAVE BEEN JUDGED.\" The voice came from Mehkhkahrel itself, a sound so powerful that Beth's hair blew backwards and she fell to her knees. Every eye on the angel flashed simultaneously, and then a massive eye opened in the middle of its body. The spinning wings looked very much like a turbine, glittering with silver light.\n\nNeferisfet straightened her back just moment before a blinding light fired out of the center of Mehkhkahrel and into the priestess. Beth blinked away the spots in her vision as dry ash blew across her face. Neferisfet was gone, and in her spot there was a small pile of dusty remains.\n\n\"Thank God,\" she muttered, then leaned forward and put her hands on the ground. It was over.\n\nMurray closed his mouth and descended until his feet were on the ground. He walked over toward the pile of ash and squatted down to examine it. Above him, Mehkhkahrel's powerful wings had stopped spinning in place.\n\n\"There you are.\" Murray pulled the pouch out of the ashes and grinned. \"Wasn't sure it would survive.\"\n\n\"Do you know what that thing is?\" Beth asked. She was surprised it hadn't been destroyed by the angel. What the hell kind of magic had that been?\n\n\"Of course I do.\" Murray winked at her. It was such a simple expression, but one that had been beyond him since being possessed. She couldn't help but notice that Murray had left glowing footprints behind him.\n\nIn horror, Beth watched Murray hold up the bag. Streamers of light bled off of the angel and into the fleshy sack, causing it to expand. It elongated first, revealing fleshy veins and a thick head that bloomed from beneath the foreskin. It radiated with power, filling the air with a low hum. \"I haven't held onto the phallus of Osiris for thousands of years without knowing what it is.\"\n\nGolden light sparkled along its length as he pointed the stiff member at the angel, and a blue aura surrounded Murray's entire body. Up above, Mehkhkahrel's wings started spinning in reverse as the angel's eyes blinked out of existence, then returned. The mostly human pupils were gone, now transformed into the narrow slits of a snake.\n\n\"But how? How?\" Beth backed away from the angel, her eyes wide.\n\n\"The soul in this body agreed to merge with me, and I am not so weak as to be dominated by the angel's will.\" Murray spun around with a grin, clutching the dick of a dead god in his hands. \"As the mouthpiece of Mehkhkahrel, the angel is sworn to protect me from harm. And I've decided that means you!\"\n\nThe man burst into maniacal laughter as Beth ran back toward the house. She didn't understand how or why, but Neferisfet was now some sort of super priest. She was nearly at the door when Death burst out, his cloak flapping dramatically behind him.\n\n\"Marchioness Bethany!\" The Grim Reaper threw himself through the air and passed through her, freezing the blood in her veins. There was a blast of golden light, followed by the smell of dust.\n\n\"Oh, God, Death!\" She spun around and saw that Death stood naked behind her, his robes obliterated by the angel's beam. His stark white bones were marred with scorch marks.\n\n\"I see you're still going to be a problem.\" Murray sneered as his body levitated into the air. \"I honestly thought that the angel would be strong enough.\"\n\n\"Unlike my siblings, I am not just an idea.\" Death twirled his scythe dramatically, and the floating ashes in the air formed around him and transformed into his cloak. \"I am the fate that awaits all beings. Mice, men, gods, the stars, the universe. I shall bear witness to their final moments, shall watch this realm collapse into darkness long before my own time is up. For I am Death! And I am inevitable!\"\n\nA second golden beam hit the Grim Reaper and slammed him into the ground. His cloak exploded, and he dropped his scythe on the ground.\n\n\"Stop smiting me!\" He looked up at Beth. \"Get in the house! It can protect--\"\n\nThe beam returned, pinning him in place. The ashes of his cloak swirled like a small tornado as it tried to reform around him. Mehkhkahrel moved to hover directly over Death, trapping him beneath the golden light.\n\n\"I believe that will hold you. Once I return to Earth, there will be no stopping me.\" Murray grabbed at his shirt and ripped it away, revealing a fancy body stocking underneath. \"I shall usher in a new age of darkness with the return of my god!\"\n\n\"I...can... stop her...if I can just...get free!\" Death shouted between blast, his eyes on Beth.\n\n\"Not so fast.\" Murray pointed the dick at Beth. \"I haven't forgotten about you. And neither have they.\"\n\n\"They who...oh. Shit.\" Beth watched as three shadowy figures appeared in the mists, each one on horseback.\n\n\"That's right. Behold the three horsemen of Apophis!\" Murray waved a hand and dispersed the mist. The horsemen were back, and both War and Famine grinned at Beth. Their features were now serpentine, and War flicked his long tongue between sharp teeth.\n\n\"Looks like we're going to have our fun after all,\" he told her. \"So you just sit there and look pretty for us.\"\n\nThe horsemen surrounded Murray as he opened his mouth wide and unleashed an eerie howl. It was similar to the one from before, but there was an extra tone behind it, one that promised blood and violence. The world tilted sideways, and Beth dry heaved from the sudden shift.\n\nRealizing there was nothing she could do for Death, she stumbled toward the house and pushed her way inside. Kisa sat near the bottom of the stairs, her arms wrapped around Tick Tock. Lily was in the living room, her face pressed against the glass.\n\nBeth's heart pounded in her chest as she gasped for air. Sobbing, she slid down the door and hugged her legs to her chest.\n\n\"Bad?\" asked Kisa.\n\n\"The worst.\" Lily looked at Kisa, then at Beth. \"I don't think we're gonna win this one with a board game. I'm not even entirely sure what's going on out there, but it looks like the boy band has a new manager. Stupid bitch, if the angel had gotten her just a second sooner...\"\n\nRattled, Beth hugged her knees even tighter. They had failed. Everything that they had accomplished up until this point had been for nothing.\n\nMike. Tears burned in her eyes. She was hungry, had barely slept in days, and had finally met a crisis that she couldn't figure out. I'm sorry.\n\n\"So I know things are kind of hopeless right now, but I have some news.\" Kisa slid Tick Tock next to Beth. \"Right before everything happened with dead girl out there, I had a really interesting dream. In fact, I think it's because I was asleep that she didn't know I was there.\"\n\nBeth looked up at Kisa. \"I hope you have something better than being naked in school,\" she stated.\n\n\"I talked to Mike. We actually saw each other, I told him everything about what's going on here, and--\"\n\nBeth spun in place and put her hands on Kisa's. She looked the cat girl in the eyes and took a deep breath. If they could speak with Mike, then they were no longer alone. Even if minor, any amount of hope would have to be enough to sustain her. Otherwise, she was lost.\n\n\"Tell me everything,\" she demanded. \"But first things first. Do you think you could do it again?\"\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nEulalie stepped through the portal, feeling the floor of the stone tower cool against her feet. A small retinue of rats waited for her, their weapons held ready. Most of them carried spears, but she was fairly certain one of them was carrying a crossbow.\n\n\"Looks like you have your own royal guard,\" Zel told her. The centaur had agreed to bring them to the tower, arriving earlier to warn the guards that Eulalie was coming. Ever since being abandoned by Yuki, the tower had been occupied by a small force of centaurs from Zel's tribe. Their main job was to act as liaisons for the herd in the valley, but they were also in charge of keeping everyone else out. The tower was also being used to grow plants that thrived at cooler temperatures than what could be found in the greenhouse.\n\n\"I may have told someone I was the Rat Queen, and they've accepted it.\" As she walked past the rats, she used some of her feet to pat them on either the head or shoulder. They seemed to enjoy the acknowledgement, then fell in line behind her. \"So this is Yuki's tower.\"\n\n\"Indeed.\" Sofia's voice was distorted as she knelt down to walk through the portal. \"We'll find what we're looking for upstairs.\"\n\nEulalie looked over toward the spiral staircase along the wall. \"That thing doesn't have a railing,\" she noted. \"Clear OSHA violation.\"\n\n\"The last occupant used to turn things to stone because they pissed her off,\" Zel replied. \"And I would also point out that this was a home, not a place of employment.\"\n\n\"Fair.\" Eulalie grinned. \"So a whole stash of magic weapons upstairs?\"\n\nZel nodded. \"I would show you myself, but I'm in no condition to climb the stairs.\"\n\n\"Because you're pregnant?\" Eulalie's eyes flicked to Zel's stomach. She didn't know enough about horse anatomy to tell if Zel was showing yet. \"I'm fairly certain pregnant women are capable of climbing stairs.\"\n\nZel started to say something, but Sofia interrupted.\n\n\"She's just pulling your tail,\" she said. \"I think it's because she's settling in, now we get to see the spider behind the mask.\"\n\n\"I would like to point out that I'm a centaur, not a woman.\" Zel scrunched up her face. \"If you have any questions about the difference, I'd be happy to enlighten you.\"\n\n\"Actually, I find centaur reproduction extremely fascinating, because the dichotomy between human babies and foals--\" Eulalie was interrupted by Sofia's hand over her mouth.\n\n\"Magic weapons,\" Sofia reiterated. \"Stay on task.\"\n\nEulalie nodded and moved toward the stairs. She spread her legs wide and ascended with half her legs on the steps and the other half on the wall. The feel of stone and grout beneath her feet tickled.\n\n\"So, is there a good reason why you're trying to antagonize Zel?\" Sofia asked once they were up a floor.\n\nEulalie frowned. \"Habit, I suppose. Like me, she's essentially human from the waist up. I guess maybe I felt a connection like I do with my sister, an extra level of familiarity.\"\n\n\"You have to earn that familiarity,\" Sofia scolded. \"You barely know her. And don't talk about her pregnancy. From what I've heard, she's really shy about it.\"\n\n\"What do you mean?\"\n\n\"She doesn't like talking about it. Any time someone brings up her pregnancy, she changes the subject right away.\"\n\n\"Why wouldn't she want to talk about it?\" Eulalie asked. \"I was under the impression that some women love the attention.\"",
        "\"Based on what, may I ask?\"\n\nEulalie shrugged. \"The internet, which I admit isn't always accurate. Certainly it doesn't help that my only exposure to it is how it's portrayed in movies and magazines. Pregnancy has always fascinated me. Can you imagine having a living thing inside your body? Moving around, displacing your guts. My mother said that she felt something similar, but those were eggs developing, not a baby, so I imagine it's different.\"\n\nSofia paused for a moment, her hand on the wall as if leaning on it for support.\n\n\"I'm not certain how, but did I say something wrong?\" Reading body language had always been difficult for Eulalie. Her father had been largely unreadable, a man who preferred to stew quietly on things. Her mother and sister were easier, but only because they shared morphology. Sofia's larger-than-normal size was easy to relate to Bigfoot, and right now she stood like her uncle would when coming across a dead animal with a hunter's arrow in it. Uncle Foot wasn't opposed to hunting by any means, but the idea that someone had shot the animal and allowed it to wander off and suffer was something that hurt him deeply.\n\n\"It's tough to talk about, but if I've learned anything about you, it's that you won't just let it go.\" Sofia turned around, her cheeks red and her jaw set. \"When I first came to the Library, I wasn't a librarian. Not a full-fledged one, anyway. More of a volunteer.\"\n\nEulalie nodded, urging the cyclops to continue.\n\n\"My job was to read books to the children. There were so many of them, from all kinds of races.\" Sofia turned to the nearest window and looked outside with her hands on the sill. \"I loved children, wanted to have some of my own one day.\"\n\nEulalie almost interrupted, wanting to point out that Sofia didn't seem like the maternal type. In the silence between words, it dawned on her that this would be the worst thing she could say. Data was easy, but people were hard. She liked Sofia because the cyclops reminded her a bit of her mother, and was generally easy to read. Only having one eye seemed to limit her facial expressions, which was also something she preferred.\n\n\"When the Order came to the island of my people, nobody was spared. Founded by the more peaceful members of my species, it had become a cultural center for man and monster alike. This was a line they could not tolerate us to cross.\" She wiped a tear from her eye, then gritted her teeth together as if in pain. \"They killed everyone they could find, regardless of age. The Order can hide under the pretense of keeping the peace, but I've suspected for many centuries that their real target was the Library. They didn't expect it to be so well defended, nor the nearby community to be ready to fight back.\"\n\n\"That's horrible.\" The thought of any thinking creature deliberately targeting children made Eulalie's blood boil. She had been online long enough to encounter all kinds of child predation, and had even strongly debated traveling a hundred miles to rip the head off of one in Bend, Oregon. After an argument with her father, she had settled on outing him to the authorities, which was far less satisfying than pulling his spine through his asshole would have been.\n\nSofia shook her head. \"I was in the village during the initial attack, but ran to the Library to defend it. The Order was attacking my village, and I knew that many of my people would be there to protect it. When I arrived, the first place I ran to was the reading room. There was a man there, a knight of the Order, standing over the bodies of children. I was so surprised to see him there, to see their bodies, that I barely reacted to the vision warning me of injury. He tried to run me through the belly, but I was able to jump out of the way. What was supposed to be a fatal stomach wound became...\" She sighed. \"I took his sword, and then his life. When I left that room, I thought that I was dying. I was a woman possessed, and killed over thirty of the bastards before they fled. When all was said and done, me and a few others locked the building down, breaking its link with the island so they could no longer attack it. My wound was treatable, but the scar tissue, it...\"\n\nEulalie put her hand on Sofia's. \"I'm sorry,\" she told her.\n\nThe cyclops nodded, then wiped another tear from her eye. \"I gave up on having a family long ago, much less children. The house, though, it has given me purpose outside of being the Librarian. I enjoy every minute of it, even though my job suffers.\"\n\n\"You can't just hire more people to help you? I mean, you are in charge.\"\n\nSofia chuckled dryly. \"I haven't really had the opportunity to do so. When only a handful of people even know you exist, it's kind of hard to get the word out. People don't age in the Library, and humans are prone to seeking immortality that way. Once they learn that they will age if they leave, they slowly go mad, counting each precious second outside of the Library's walls. Apparently books aren't enough to keep most people happy, so they inevitably stay away too long, or go insane and must be removed.\"\n\n\"My mom loved books. I bet she would have been very happy there. She even used to be a librarian, but never talked about it much.\" She smiled, thinking about her mother. If you could only see me now, mom. I'm making so many friends!\n\n\"Do you love books?\" Sofia asked. \"Maybe you want a job?\"\n\nEulalie shrugged. \"I don't know. The whole reason I became an internet nerd was books couldn't be published fast enough. I wanted to experience the world through others, for all the typical reasons.\" She scurried up the wall as if to illustrate her point. \"I'm afraid I've always been more into audio and visual media. Movies, music, that kind of thing.\"\n\n\"Maybe the Library needs a modern touch.\" Sofia smirked, then looked at the stairs to the next level. \"But perhaps we should get back to why we are here.\"\n\n\"Magic weapons!\" Eulalie rubbed her hands together in anticipation as they continued up the stairs.\n\nWhen Amymone had informed them that there were magic weapons stored in an otherworldly tower, Eulalie had actually gotten down on all of her knees and begged to be told more. Decades of fantasy books, games, and Dungeons & Dragons campaigns had instilled in her an absolute love for magic. She had seen her uncle do small things with it, like commune with trees or portal hop. In reality, he was more of a druid than a sorcerer or wizard.\n\nHer mother had often told them about the magic she had seen members of the Order use. It was both terrifying and exciting to know that magic not only existed, but was apparently some huge secret. It was the main reason she had gone to work for the government. There was always the hope of discovering that the US government was stashing magical books in the Library of Congress, or maybe even a wizarding school at Area 51.\n\n\"I'm hoping for a flaming sword,\" Eulalie declared when they found themselves outside of the armory. \"One that ignites when you say its name, or something fancy in elvish. It's way cooler than a sword that can fold itself up, no offense. Grew up with one, but we used it mostly for chopping wood.\"\n\n\"Elves are dicks.\" Sofia gazed cautiously at the entrance. \"Ratu warned us that this stuff is bad news, so please don't just grab the first thing you see. We have a purpose here.\"\n\n\"I know, I know.\" Eulalie rubbed her hands together. \"Find weapons that we can potentially use once Mike returns. Categorize them based on strengths and weaknesses so that we can form a...wait, elves are real? Are they like the ones from Lord of the Rings?\"\n\n\"It's a rather generic term which can refer to lots of different creatures. But yes, they're all dicks.\" Sofia frowned. \"Wait, I take that back. There is one curious exception to the rule.\"\n\n\"Who are they?\"\n\n\"Let's just say that they're the epitome of nice.\" Sofia inspected the door. \"Yuki and Ratu had a magical lock installed here, give me a second.\" She pulled out a crystal ball from one of her pockets and held it up. \"Ratu?\"\n\nThe naga's face appeared. She was soaking in a hot bath.\n\n\"Move me a little higher,\" Ratu said. Sofia lifted the ball, and a thin beam of blue light came from the crystal ball and struck a hidden rune just to the left of the doorway. The rune sent out a ripple of energy that caused another set of hidden runes to appear and then vanish.\n\nEulalie skittered about with anticipation as Sofia opened the door.\n\n\"Velvet's never gonna believe this,\" she said as she shot through the door and looked around.\n\nIt was an armory, lit from above by skylights. The dark corners of the room were illuminated with torches that burned brightly without generating any smoke. Much of the room looked damaged, but a few items were locked up in display cases that were up against the wall.\n\nThere was a loud thud as a mace lifted off the ground and slammed into the glass of its display case. Eulalie ran up to the case and danced around it with her hands over her mouth.\n\nSeveral thick chains held the mace down, but it was able to thud against the edges of the case. She put her hands against the thick glass out of curiosity and was surprised when the mace moved away from her.\n\n\"Check this one out.\" Sofia gestured at a glass case full of water. When she walked close to it, it transformed into a replica of her sword, then shifted into a staff eerily reminiscent of the one she carried in the Library.\n\n\"Made of water, changes shapes...\" Eulalie bit her lip. The data was there, she just couldn't put it together fast enough. It didn't help that her knowledge base was polluted with video game references.\n\n\"The legendary weapon, Varunastra. It can be anything you want it to be.\"\n\n\"Should we take it?\"\n\nSofia grimaced. \"Well, about that. It certainly seems accommodating, but if you aren't deemed worthy enough to wield it, it's supposed to kill the wielder. Maybe.\"\n\n\"How does it 'maybe' kill you?\"\n\n\"Legends say it destroys you. Not technically the same as killing, so there's room for interpretation.\"\n\n\"Maybe it'll log into my social media and spout a bunch of racist shit.\" Eulalie wandered over toward the case and pressed her hands against it. The water bubbled and then turned into a net. \"You'll never guess my password,\" she whispered dramatically.\n\nThe mace continued its incessant banging as they examined the rest of the room. There were other weapons of unknown origin, but the one that caught her eye was a sword with a hooked blade built into it.\n\n\"Any ideas on this one?\" she asked.\n\n\"Hmm.\" Sofia frowned at it. \"Shape rings a bell.\"\n\n\"Looks really sharp.\" Eulalie inspected the edges of the case. \"There's no actual lock on these. How are we supposed to get in?\"\n\nThe thudding behind them became even louder, and she turned around to see that the mace had gotten itself twisted up in the chains. The heavy links were crashing against the glass as the mace tried to rotate and free itself.\n\n\"That one really seems like it wants some attention.\" She looked over at Sofia. \"Thoughts?\"\n\n\"Weapons that have their own desires are almost always bad news.\" Sofia looked back at the hooked blade. \"I'm starting to think that we might not be able to use anything here.\"\n\n\"It's all a matter of perspective.\" Eulalie looked at the sword, then ran her fingers along the case. She tapped her fingers on the glass, then wrapped her fist in spider silk.\n\n\"What are you doing?\" asked Sofia.\n\n\"Just a little percussive maintenance.\" Satisfied that her hand and forearm were protected, she slammed her fist into the glass. It cracked after the first blow, then shattered on the second. Smiling in delight, Eulalie pulled the blade free and gave it a test swing.\n\n\"Please be careful with that,\" Sofia cautioned.\n\nEulalie inspected the sword. \"It's insanely light. Feels like I'm swinging a dowel rod.\" She moved toward a broken case and swung the sword.\n\nIt was almost a casual gesture, but the blade passed through the case with ease. Stunned, she took a step back and examined the sword once again.\n\n\"Oh, wow, I think I know what this is.\" Sofia took the sword from Eulalie and turned it over in her hands. \"I'm actually surprised to see it still exists. Gaia forged it so that one of her sons could overthrow Uranus. The sword was lost for some time, and it's been rumored that Perseus used it to behead Medusa. That's the last anyone heard of it, to my knowledge.\"\n\n\"Well, great! If it's sharp enough to cut a god, then it's probably perfect for what we need.\" She took it back from Sofia then looked around. \"You don't happen to see a scabbard for it, do you? Feel kind of dumb just walking around with it.\"\n\nSofia shook her head. \"This room's a mess. If there's a scabbard here, it's long gone.\"\n\nEulalie held the sword up and grinned. \"It doesn't have a name, does it?\"\n\n\"That's arguable, actually. Scholars call it the Harpe.\" Sofia walked over toward the door. \"We should have Ratu examine it to make certain there aren't any surprises, though.\"\n\n\"Solid plan.\" Grinning, she swung the Harpe a couple more times and followed Sofia. She was about to step through the door when she felt a touch at the back of her neck.\n\nLala. The voice was barely a whisper, and she wasn't entirely certain she had heard it. It sounded like Velvet, and she was suddenly taken back to hours around the game table, her sorcerer and Velvet's ranger traveling the realm and defeating monsters. How many times had their characters found themselves in a magical tower? Whether fighting monsters, defeating an evil wizard, or just rescuing a prince, there was always a theme, a method to the madness.\n\nUnsure why the memories were coming to her, she looked around the room. It had been ransacked, many of the items destroyed or left behind. What was the theme of this place, what secret had it held?\n\n\"Everything okay?\" Sofia watched her from the hallway.\n\nEulalie looked around the room, expecting to see someone moving among the shadows. The room was quiet, save for the frantic rattling of the chained up mace.\n\n\"Tell me again about this tower.\" She walked over toward the display case with the mace. \"It was that shadow guy who owned it, right?\"\n\n\"That's the theory. This tower was part of his property, the rest of it is trapped in the Underworld. We think this was his private stash of weapons.\"\n\n\"He was a magic user, right?\" When she placed her hand against the glass, the mace went still once more, as if watching her. An evil wizard with a stash of magical weapons. This room had a secret, she just knew it.\n\n\"On top of being a manipulative bastard, yes.\" Sofia moved to the center of the room and crossed her arms. \"Without knowing his name, we couldn't do any research into him. Why do you ask?\"\n\n\"It just strikes me as odd. On the one hand, you have this powerful sorcerer who is hoarding magical weapons, right? But I don't think he ever planned to use them. Take Varunastra over there. Supremely powerful, so why not use it? Paranoia. Can't risk destroying yourself for a fancy poking stick. Now the sword, it's nice and all, but useless in the hands of someone who doesn't know how to use it.\"\n\n\"I guess. Where are you going with this?\"\n\nEulalie held up a hand for silence as the web spread out in her mind. The shadow had collected all these magical weapons, but had no intention of using them. Why? Because he couldn't. No, this wasn't a collection of weapons to be loaned out to his lackeys, or even used by him. Maybe these items held value, but what was money to a powerful sorcerer? Perhaps he meant to study them, to unlock their secrets? Or maybe...\n\n\"I think these weapons weren't for him to use,\" she said. \"I think he kept them because he was afraid they would be used against him. Master manipulator, right? The shapeshifter is powerful, but it would kill him. The sword was just a sword, but sharp enough for a god is sharp enough for a wizard.\"\n\n\"Good points, but I'm not sure where you're going with this.\"\n\nEulalie pressed her hand against the glass and stared at the mace. The head had a looping design that was weathered with age, and the patina had been worn off in spots that could reach the glass. The links of the chain were thicker than her fingers and looked to be made of a black metal that she didn't recognize.\n\n\"Are you alive?\" she asked while tapping on the glass. \"Tap twice if you understand me.\"\n\nThe mace hovered in place for a moment, then tilted toward her hand and tapped twice.\n\nEulalie grinned, then whispered, \"Secret's out, you shadowy fuck.\"\n\n\"I have serious doubts about the wisdom of--\" Sofia gasped mid-sentence as Eulalie swung the Harpe of Perseus into the case, slicing cleanly through the wood and glass. The chain links parted easily, and the mace lifted into the air, toppling the display as it hovered in the middle of the room, bogged down by the remaining chains.\n\nThe mace spun about, causing the chains to rattle, then flew through the skylight, causing the glass to explode outward.\n\n\"Oh.\" Eulalie grimaced. \"Well...shit.\"\n\n\"Shit? That's all you have to say is shit?\" Sofia was yelling now as she pointed at the skylight. \"You just released a potentially bloodthirsty magical weapon on an unsuspecting populace, and that's all you have to say for yourself?\"\n\n\"Look, I thought maybe it would be grateful. Why lock up a sentient weapon unless it disagreed with the shit you were doing?\" In hindsight, her enthusiasm had gotten the best of her.\n\n\"Because maybe it's chaotic and just wants to smash everything!\" Sofia stormed off toward the door. \"We need to fix this, and quickly!\"\n\nEulalie followed behind the cyclops, careful to hold the sword up. She didn't dare to hold it at waist height; she feared cutting one of her legs.\n\nThey ran down the stairs, followed by a retinue of rats. Once outside, they saw the centaurs pointing at the sky as the mace did whirling loops around the apex of the tower. Zel was shouting commands, urging the others to get to safety.\n\n\"What the hell is that thing doing?\" Sofia shaded her eye with one hand.\n\nThe mace slammed into the tower a few times, knocking loose the chains attached to it. One of the chains dropped onto a large planter and shattered it.\n\nCentaurs cried out in alarm as the mace swooped down on them. Eulalie stuck her sword into the soft dirt of a nearby planter and sprinted up the stone wall of the exterior, her eyes locked on the mace. The mace swung by several centaurs, but always pulled up at the last moment.\n\nWhen it came near the tower, she leapt for it, both hands clasping the handle. In response, the mace shot upward.\n\nI didn't think this through. Swallowing the lump in her throat, she held on for dear life as the mace carried her into the clouds. Mist formed on her hands and body, and she used her spinnerets to put together some sticky webs that she looped over the head of the mace to give her a better grip.\n\nThe weapon swooped down, and she twisted her body to cling to it with her feet. In the valley below, she could see distant centaurs pausing to watch, but her main concern was on the horizon. A vast ocean greeted them, and she watched in horror as the coastline receded behind them.\n\n\"This is a terrible way to say thank you,\" she shouted at the mace, then smacked the palm of her hand on its head. \"Take me back right now or I'll have you recycled into a prison toilet!\"\n\nLaughter bloomed in her mind as the mace did a sharp turn in the air. She twisted herself around so that she could see where they were going. By her estimates, the magic weapon had a top speed of maybe fifty miles an hour.\n\nCentaurs along the shoreline watched in horror as the mace descended toward them, hovering almost forty feet overhead. Their horror filled faces made Eulalie frown, and more than a couple reached for their bows as she shot past.",
        "An arrow pinged off the head of the mace, and the weapon ascended out of range.\n\n\"Fuck you, too!\" She flipped off the centaurs, then grabbed back on to the mace as it climbed back into the mountains and toward the tower. Sofia stood on the outer walls, waving frantically at Eulalie.\n\n\"I need you to drop me off,\" she told the mace. \"Nicely.\"\n\nThe mace slowed and then stopped above the garden. It moved down at elevator speed until her legs were back on the ground, then fell to the ground with a clunk. Sofia came running up, followed by a bunch of very upset rats.\n\n\"Are you okay?\" the cyclops asked.\n\n\"Just went for a joyride is all.\" Eulalie picked up the mace and held it out. \"I asked it to return me, and it did.\"\n\n\"Maybe we should lock it back up,\" Sofia suggested.\n\nThe mace tried to fly away, but Eulalie gripped the cobblestones beneath her with all eight of her legs.\n\n\"Nobody is locking it away,\" she hollered, then tugged the mace down to eye level. \"Nobody is locking you away,\" she repeated, then patted the head of the mace as if it were a cat. \"As long as you behave, that is.\"\n\nThe restless weapon went still in her hands, and gratitude filled her mind.\n\nSofia looked at the weapon with distrust, then back at Eulalie. \"You had better know what you're doing.\"\n\nThe Arachne chuckled. She had no idea what she was doing, but had just taken a magic weapon for a joyride across the surrounding countryside.\n\nIt was officially the best day ever. The only thing that would have made it better was if her sister could have been there.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nThe evening hours had crawled, every minute stretching itself impossibly thin in an attempt to smother the room. Mike had chewed his fingernails down to the quick as he paced in the front room of the cabin. At the kitchen table, Dana sat perfectly still with her collapsed sword right in front of her. It was unlike the zombie to be so unproductive, and if not for the occasional twitching of her eyelids, she may have been a statue.\n\nThe others had gone to bed long ago, but Mike doubted they were asleep. Any moment now, Abella would return with Velvet and all of them would discuss the next step. He stuck his hand in his pocket and closed his fingers around the crystalline orb that the owl had given them.\n\nYuki had assured them that the spell to trap Leeds could be cast by the artifact in his hands, but he wasn't so sure. Was the owl's spirit still inside such a thing? For perhaps the hundredth time, he pulled it from his pocket and contemplated the thing. It was a yellow sphere with a dilated pupil in the middle. No matter how he twisted it in his hand, the eye was always looking right at him.\n\n\"That thing stinks,\" Dana told him.\n\nHe held it to his nose and sniffed it. \"What does it smell like to you?\" he asked. It didn't have an odor he could detect.\n\n\"I don't think I'm smelling the eye itself,\" she replied. \"It must be the magic. Have you ever smelled rotting meat? It's like that.\"\n\nMike had a sudden urge to put the eye down, but settled on sticking it back in his pocket. \"So you can smell magic?\"\n\n\"A bit,\" she explained. \"On people, mostly. You. Naia. Sometimes Quetzalli Definitely that thing. You all have a very distinct odor.\"\n\n\"Why does it smell so bad to you?\" he asked. \"My magic doesn't stink, right?\"\n\nShe shook her head. \"Yours doesn't. I think maybe it's where the magic came from. Bigfoot mentioned that the owl used to eat people, so maybe that's the reason. I get the feeling that she was trying to turn over a new leaf, but even a few decades of good behavior versus centuries of bad stuff doesn't make you smell like roses.\"\n\n\"Guess that makes sense.\" Mike sat across from her.\n\n\"Your magic smells different now,\" Dana added. \"Though I suspect you're already aware. It's changed.\"\n\nHe nodded. \"I haven't had a chance to talk about it with anyone. Maybe Yuki can help me, or Naia when I get back. It's...\" Words failed him. How could he even begin to describe something he never fully understood to begin with. He examined his hand, thinking about the magic just beneath the surface. With just a little concentration, he found that he could summon a handful of sparks that danced back and forth between his fingers. He wiggled his fingers as if playing an imaginary piano. It could have been his imagination, but it sounded like the pitch of the buzzing streamers shifted.\n\n\"Neat trick,\" Dana told him, curiosity in her eyes.\n\n\"Thanks. I do birthday parties.\" He put his hands on the table and watched the sparks crawl across the wood toward Dana. She shifted away from him and held up her hands.\n\n\"No offense,\" she told him. \"I'm trying to cut back is all.\"\n\nHe laughed, then watched as the sparks poofed out of existence. Was magic like energy? Had it been conserved? Would it sink down through the table and travel through the Earth until it found someone to affect? Would someone in Australia have a random orgasm because of it?\n\n\"What on Earth are you thinking about?\" Dana frowned at him. \"You look like you're trying to solve a math problem, but then you get this goofy grin.\"\n\nIn a way, maybe he was.\n\n\"I was just wondering about magic in general,\" he explained. \"Sometimes I think there are rules, but I can't for the life of me figure out what they are.\"\n\n\"'All magic has a price' tends to be the first rule,\" Dana replied. \"Maybe even the only one. Don't think I've gotten any other pearls of wisdom since I died.\"\n\n\"Nah, the second one is intent. There's a price to pay, and magic is all about intent.\" He nodded to himself. That was one he had proven time and again. Intent often fueled what happened next. That made two rules. He would bet good money that there was a third, because it seemed to be a good number for pretty much everything else.\n\n\"Do you think magic is hereditary?\" Dana asked.\n\nHer question surprised him. \"Why wouldn't it be? I don't think it would be any different than hair color or whatever. Then again, that would mean there was some spiritual component similar to genetics.\" The image of a trans-dimensional double helix with glowing lights filled his head. It was a fun thought.\n\n\"I guess I mean types of magic. For example, would Yuki's children have ice magic that smelled like hers does?\"\n\nIt was often hard to read Dana, but there was something behind her expression that made him pause and consider. She seemed to be deliberately ignoring his gaze.\n\n\"Maybe?\" He shrugged. \"Couldn't say, but that's specifically suspicious. Why are you asking?\"\n\nShe screwed up her face, then sighed. \"I think that I should tell you--\"\n\nHe didn't hear what she said next. Instead, the room was yanked out from underneath him and he was falling through darkness, his limbs flailing wildly. Gasping, he slammed his hand into a palm tree and steadied himself.\n\n\"What the hell?\" He let go of the tree and stumbled backward onto the beach. The dark waters of the Dreamscape swirled menacingly around the island, and some of the others stood along its shore.\n\n\"Hey. Hey!\" He ran to the others, but they weren't looking at him. Their gaze was fixed on a figure who stood in the water, several yards out from where the waves kissed the sand.\n\n\"Velvet?\" He started to walk into the water, but a hand grabbed onto his and held on tightly.\n\n\"Mike.\" Lily's voice had an edge to it that he hadn't heard before. \"This...I...\"\n\n\"What?\" When he looked at the others, he saw nothing but sadness reflected in their eyes. \"What's going on?\"\n\n\"My love?\" Velvet's voice was soft like feathered down, and there was a tightness to it that shook him to the core. \"I'm sorry, but I have to go.\"\n\n\"Go? Go where?\"\n\nShe grimaced, then looked at the others. \"I think you know.\"\n\n\"I don't understand. You can't leave here, nobody can leave.\" He looked to Lily for support. \"Aren't you all knitted into my soul or something?\"\n\nLily lowered her gaze to the ground. \"There's always been one way for someone to leave, Romeo.\"\n\nThe sky darkened up above, revealing a clear night sky. The stars all twinkled, but one of them sparkled more brightly than the others. Velvet looked at it with longing, and suddenly he understood.\n\nFiery pain passed through his chest, and he clutched at his ribs in agony.\n\n\"NO!\" Mike's voice came from everywhere as he shot across the Dreamscape, his feet hovering over the water, to grab onto Velvet's hand. \"I don't know what's happened, but I can hold you here like you did me! You held me here so that I wouldn't die, maybe I can do the same!\"\n\n\"It isn't the same, and we both know it.\" She smiled weakly at the women behind him. \"Because of you, I've loved more deeply in the last three days than I ever could have imagined. Thank you.\"\n\n\"Don't talk like that, I--\" He sputtered, the words tangling into letters that spilled from his lips and floated away in the dark sea. The star above had become a ball of blazing light, overwhelming the others until they were no longer visible.\n\nHow could he tell her how he felt? Did he even know? He had experienced love before and often with the others, but their connection had been so intense. They barely knew each other, but they fit together so perfectly.\n\nThe Dreamscape shook as an earthquake hit the island, the result of his grief. He let out a cry of agony as the sea swelled beneath him and slammed into the beach.\n\n\"Velvet, no.\" His voice was little more than a whisper. \"Please don't go.\"\n\n\"I don't have a choice.\" When she smiled, the skin around her eyes crinkled. She put her hand against his cheek and held it there. \"Please tell my sister I'm sorry. I didn't mean to leave her alone in this world.\"\n\nShe looked up at the star and took a deep breath.\n\n\"I'm afraid,\" she told him. \"For all the magic and beauty in this world, I'm afraid of what comes next.\"\n\nHe was gasping for air now, and rings of light had formed around his feet beneath the water. His magic bubbled up from the depths and filled the air with ominous whispers.\n\nThe words made no sense to him, but he could tell that it was a question. When he closed his eyes, he could hear what his magic asked of him, and he inhaled sharply.\n\nDo you want her to stay? There was no malevolence behind the voice, if it could be called such a thing. The power inside him had felt his pain and was reacting, to grant him what he wanted. If he willed it, his magic would cling to this tiny part of her soul, and a piece of her would be with him always.\n\nBut then what would happen to the rest of her soul? He thought of Emily, trapped as a tormented specter in the Underworld. No, he didn't want that at all.\n\nHe just wanted her.\n\nA cold hand slid into his. He opened his eyes to see Cecilia hovering next to him.\n\n\"It is time, mo sh\u00edorghr\u00e1.\" She wiped the tears from his cheeks, then used her free hand to take Velvet's from his own. \"I am sorry.\"\n\nVelvet was watching him, her spirit fading into the churning mists of the ocean. It was like she was being diluted into nothingness.\n\n\"No.\" He took her by the hand once more, then looked at Cecilia. \"She can't stay, but...maybe we can help her go?\"\n\nThe banshee nodded, a sad smile on her face.\n\nCecilia's lips parted and the song of mourning filled the air. The seas calmed and the air went still as her powerful voice filled the cosmos and bent it to her will. The three of them stood in a triangle as a golden light formed around Velvet's silhouette, and her spirit snapped back into focus. Wonderment filled her eyes as she looked into that night sky and saw something that he couldn't.\n\n\"Mike?\" Velvet smiled. \"Thank you for loving me.\"\n\nThere was a lot he wanted to say in that moment, but words would never be enough. Instead, he joined in with Cecilia's song. Though the words were in a language he didn't know, they spilled from his lips as easily as secrets that no longer mattered. The air thrummed with power, and he pulled Velvet in for one last embrace.\n\nOther voices joined in behind him. He recognized the husky lilt of Lily's voice, and could tell Zel's soprano from Sofia's alto. Tink's singing voice was devoid of words--she just sang the notes, her voice rising and falling with the waves around them.\n\nNaia, Ratu, and all the others sang out his grief as the star in the sky descended upon them. A beam of light connected Velvet to the sky, and she looked up in wonder.\n\n\"Daddy?\" A smile crossed Velvet's face, and she no longer seemed afraid.\n\nThere was a flash of light, and she was gone. The star in the sky pulsed three times and then disappeared, leaving the night sky as it was.\n\nCecilia put her arms around him and held him close, but he wasn't interested in the comfort they provided. With great effort, he willed the Dreamscape to crumble away from him, leaving him on the wooden floor of the kitchen.\n\n\"Hey, are you okay?\" Dana knelt over his chest and was slapping lightly at his cheeks. Emery hovered nervously overhead, wringing his hands together. The bedroom door creaked as Yuki stepped into the living room, concern on her face.\n\n\"No.\" Mike stared blankly at the ceiling for a moment, his thoughts waiting to crash down on him like heavy weights. The song lingered in his head, the eerie melody causing tears to slide down his temples and onto the floor.\n\n\"Mike.\" Yuki knelt by him, her eyes wide. \"Did something happen? You're so pale.\"\n\nHis breath hitched in his chest and he felt his whole body tense up. He scrunched up his face as his anger boiled over the surface, causing the magic to churn within him.\n\n\"Leeds happened.\" He stood up, his hands trembling. \"I need everyone to stay back.\"\n\nNobody said a word as Mike stood there, his magic filling the air with a steady hum. The others didn't seem to hear it, but that didn't matter to him. It was like a giant beating heart, just waiting to take on some semblance of life.\n\n\"He took something from me,\" Mike told everyone. \"Something I can never get back.\" He wanted to say more, but was afraid that nobody would believe him. The truth threatened to overwhelm him, and if he spoke the words aloud, it would break him.\n\nYuki shook her head. \"You're not making any sense.\"\n\n\"Doesn't matter.\" Mike's eyes flicked toward the door and his magic reached across the room and yanked it open. Everyone turned to face the door as he walked outside, stopping just long enough to grab his coat. \"Come with me if you want a piece of him.\"\n\n\"Where are you going?\" Yuki called from behind him.\n\nHe turned to look at her and she took a step back.\n\n\"Hunting,\" he replied. He stepped out into the cold, his feet crunching in the snow. It was still dark and would be for a couple more hours, but that didn't matter. He could feel the forest around him, hear the whisper of its creatures as they watched him approach.\n\nHe could hear the others scrambling to follow him, but he was moving at a jog now, his magic radiating out into the forest. When he got to the treeline, he looked up at them and bared his teeth.\n\n\"Where is he?\" he asked.\n\nThe trees rustled as if caught in the wind. He could hear the sound spread away from him, like an arboreal radar. Perhaps a minute passed, and he heard both Dana and Yuki come up behind him.\n\n\"Mike, you're scaring me.\" Yuki's voice was drowned out by the sounds of the forest. Off to his left, he heard the trees creak in an attempt to get his attention.\n\n\"This way,\" he yelled, then bolted forward. They hollered for him to wait up, but the anger had consumed his thoughts. His magic buzzed alongside him, sending out tendrils of light that connected briefly with trees and plants as he passed, ready to assist him with whatever he desired. The sky rumbled above him, and a wicked smile broke across his face as the forest parted to allow him to run freely.\n\nIt was time to kill the Devil.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\n\"Abella? Come forward, child.\"\n\nShe walked deeper into the cave, her chin held high in defiance. The elders of the clan, all three of them, sat in a squat, their eyes level with hers. Scattered along the walls of the cave were the heads of the different families, including her own mother. It wasn't her first time before the elders, but this time was different. Getting in trouble was a right of passage for the young, but even she knew that she had overstepped her boundaries.\n\n\"Are you aware why you are here?\" This came from the elder on her left, Gaia. She was thousands of years old with fearsome horns that curled menacingly around high cheekbones.\n\n\"It is about the man from the village.\"\n\nGaia nodded. \"The blind one who frequents the fishing bridge, yes.\"\n\nThe central figure cleared his throat. Torma was the most human in appearance, but he had long fangs that extended down past his chin. Despite his angry visage, he was considered the kindest of the elders.\n\n\"It is forbidden to speak with them, young one. Are you aware why?\"\n\nShe nodded. \"I am aware, elder. But I don't understand why I cannot speak with this one. He cannot see me, and is content to catch his fish and then go. He believes that I am a young woman from the village, and--\"\n\n\"Therein lies the problem.\" Gaia shook her head. \"What if he goes looking for this young woman? Should he decide to pursue your identity, suddenly the humans will hear about a strange voice that can be heard down at the bridge.\"\n\n\"Let them talk, then.\" Abella waved her hand at the others. \"Those who are made of stone do not fear words.\"\n\nThe third elder, Lave, growled. Long ago, he had used so much heartfire that his mouth had stretched and distorted until he was no longer capable of proper speech. Through some means, the other elders understood him.\n\n\"Elder Lave informs you that words are rarely harmless,\" Torma said. \"You are only thinking about what is right before you and not what lies ahead.\"\n\n\"They are one and the same,\" Abella replied.\n\nGaia shifted, which caused her wings to briefly unfurl. \"Consider this, child. Should this man try to learn who you are from the village, the other humans will learn that there is a young woman unaccounted for, should they choose to believe him.\"\n\n\"I don't see the problem.\"\n\n\"That is because you are young.\" Gaia crossed her arms. \"Should the others see fit to help this man, then one of two things happen. The first is that they decide that this woman is real and hiding. As they look for her and discover nothing, they eventually determine that you must be a spirit, or some other entity trying to lure him to his doom. Humans are notoriously suspicious of what they do not understand, and will often go to extremes. Suddenly, we have a mob of humans looking everywhere and chasing rumors until they end up here. The clan has to move, which is no simple feat.\"\n\nAbella shrugged. \"We are moving next spring. By the time the humans can get organized, we will be long gone.\"\n\n\"And what of this man you are so fascinated with?\" Torma shook his head. \"What if they decide he is simply hearing voices? What will the humans do with him?\"\n\nAbella opened her mouth, then sighed. If history was any indicator, he would likely become an outcast. The village tolerated him only because he was self-sufficient and lived with his mother. Did she really want him to end up alone simply because she wanted to get to know him better?\n\nOr worse, he could be labeled as a witch. He would likely be drowned in the very river that was his livelihood.\n\nLave grunted, then pointed at Abella with one of his many hands.\n\nGaia frowned at Lave. \"That punishment is not fit for this crime.\"\n\nLave snapped his teeth and continued speaking. Abella had rarely heard such continuous sound from the elder, and could almost make out a rumbling voice beneath the noise.\n\nTorma held up a hand and waited for silence from his fellow elder. Lave shook his head in disgust.\n\n\"Elder Lave wishes to subject you to a punishment known as the Earth Mother's Embrace.\"",
        "This caused the members of the clan to mutter to themselves, but they were silenced by a dirty glare from Gaia.\n\n\"I have not heard of this punishment,\" Abella replied, her voice shaking.\n\nTorma looked around the room. \"As we come from the earth, we must someday return to it. It is a punishment that we have not done since before your time due to its cruelty. It is a punishment by which you are buried alive beneath the stone of the earth. There, in the Earth Mother's Embrace, you will slip in and out of consciousness as your body gathers just enough energy to keep you alive, but not enough to escape.\"\n\nAbella's jaw dropped open in astonishment.\n\n\"It used to be done as a punishment to enforce the will of the clan,\" Gaia continued. \"We were created by the Earth Mother to be her eyes and ears, to soar among the clouds, and to be confined to the rocky depths is to deprive us of our purpose. Those who have suffered the Embrace have explained that they are aware the whole time of their misery. There are those who have been buried and forgotten, or the earth has moved and crushed them into dust. It is dangerous and reserved for crimes only against our own kind.\"\n\nLave growled again.\n\n\"And while I agree, Elder, that the young one has made a mistake that risks our safety, it was not deliberate. She did not make her choice with disregard for the clan. Rather, she is selfish, as most of the young ones tend to be.\" Torma bared his teeth. \"As one who has been punished with the Embrace, I would vote against it.\"\n\n\"As would I,\" Gaia added. \"But be warned, child. Should your continued love of humans risk our safety, we would rather exile you than bury you beneath the ground and away from the sky. Do you understand?\"\n\nAbella swallowed the lump in her throat. \"Yes I do, Elder.\"\n\nElder Torma opened his mouth and an eerie ringing sound made Abella's teeth buzz in harmony. The other Elders opened their mouths to make the same noise, and her eyes fluttered open, revealing darkness. Though the memory had burst like a grape beneath her feet, that infernal sound remained.\n\nHer ears were ringing, and she groaned. Where was she? Her whole body ached, and she lifted her head to look around. There was a tiny sliver of light that illuminated the rock above her. She was in the mouth of a cave.\n\nCave. Velvet. Leeds. She had tried to rescue Velvet, swooping down to grab her before the cave could collapse. But then what?\n\nThere was a sharp pain in her left wing, and her eyes popped open the rest of the way. A rock had fallen and hit her in the wing, and they had crashed. As the ground rumbled around them, she had faded in and out of consciousness from the pain. Was her wing even still there, or had it been shattered? She flexed it and felt tremendous pain along its length. She bit back a groan, but was grateful to feel anything at all.\n\n\"No man left behind,\" she muttered. It was something that Velvet had muttered, over and over again. Where was the Arachne?\n\nAbella tried to move forward, but her feet and tail were pinned down by heavy rocks. She had a moment of panic, but reassured herself that she could probably get free. The sliver of light above was expanding, and would eventually illuminate the rubble and allow her to figure out how to best extricate her feet.\n\nThe ringing in her ears faded over the long minutes until it was finally gone. The cave was silent, save for the occasional drip of water and the breeze that flowed over the entrance.\n\n\"Velvet? Are you there?\" She turned her head painfully and was able to make out a pair of legs sticking out from beneath an overhang in the corner of the cave.\n\n\"I am,\" Velvet replied, her voice weak and airy.\n\nSighing with relief, Abella laid back down and relaxed. \"You saved me, didn't you?\"\n\n\"I did.\"\n\nAbella sighed. If not for Velvet, she would have been crushed beneath the ground. Or worse, trapped for all eternity in the Earth Mother's Embrace. A chill ran up her spine at the thought of it.\n\nWhen Mike had first discovered her, it was after the Mandragora had leached away her life force, putting her in a similar state. Her mind had come and gone, but in those waking moments, she had experienced a dull pain throughout her entire body. Maybe it was analogous to hunger in humans, or not having enough air to breathe. Either way, it was something she hoped to never experience again.\n\n\"Thank you.\" She tapped on the cold stone of the ground, feeling the grit beneath her fingertips. All sorts of emotions rolled through her, but the biggest one was regret.\n\n\"And also...I am sorry.\" Abella paused, half expecting Velvet to say something.\n\nThe Arachne remained silent.\n\n\"I am sorry that we fought. I didn't give you the benefit of the doubt. You are the first of your kind to embrace their humanity, and I refused to believe it possible. And so I tried to kill you, and am ashamed.\n\n\"I came for you because I love him.\" Abella squeezed her eyes shut, the warmth in her chest threatening to overwhelm her. \"I wanted to protect you for his sake, but I know now that I should have come for your own. You could have left me behind, I am aware of this. And maybe you saved me for the same reason I tried to save you. For Mike.\"\n\n\"No man left behind,\" Velvet whispered.\n\nAbella chuckled. \"No man or monster, maybe. I doubted you, and I shouldn't have. We are different, but maybe we have more in common than I was willing to acknowledge. If nothing else, we have him in common, and that should have been enough.\"\n\nThe ground behind her rumbled as distant stones settled. Abella waited for the cave to become quiet before continuing.\n\n\"And maybe that is my way of saying I see things your way. You shared an experience with him that resulted in something beautiful and lasting. I can't understand what it means to be a mother, to hold a child or egg of my own. It isn't even something I want. But if I were to find myself in your shoes, or legs as it were, I think I would have made the same choice. I wouldn't have considered anyone else's feelings in the matter.\"\n\nThe light was brighter now, and Abella looked back at her feet. Her legs and tail were pinched between two rocks. She shifted her tail around, which caused the troublesome boulders to shift.\n\nWith a groan, she pulled herself forward and collapsed on her belly.\n\n\"I'm sorry about your egg,\" she continued. \"When we return, I will help you look through the ashes until we find it.\"\n\nVelvet sighed.\n\n\"If you say that this child is different, then I trust you,\" Abella continued. \"Because I know that he will trust you. And if any of the others try to give you problems, they will have to go through me first.\"\n\nShe moved toward a nearby wall and used it to stand. Her knees hurt, but once she was upright, it was easy to stand. The mouth of the cave was nearby, and she limped her way toward it in a crouch to avoid smashing her head on the ceiling.\n\nThe sun was coming up and she squinted into its light.\n\n\"We need to get back,\" she said. \"The others are waiting for us. He is waiting for you.\"\n\nThe breeze stopped, allowing silence to descend on the cave. Abella half expected to hear the rustle of hairy legs, or even Velvet snoring. She hadn't exactly held up her end of the conversation.\n\nHowever, the silence that ensued was absolute. Other than the occasional drip of water, nothing could be heard.\n\n\"Velvet?\" She turned around, the light shining in over her shoulders. The beam was just low enough to illuminate the top of the huddled form in the back of the cave.\n\nAbella crouched down and moved to where Velvet sat. Her eyes adjusted to the darkness and she let out a gasp of surprise.\n\n\"Non!\" She reached into the gap beneath the rock to pull Velvet free, convinced that she had just stopped breathing. But the rigidity of the Arachne's body indicated that it had been some time since Velvet had passed.\n\nStunned, Abella sat back on her haunches. How could this have happened? They had just been talking...right? Velvet's lower half was sprawled out, her damaged legs forming a spiral beneath her. She was hunched forward as if asleep, her dog tags clutched in a single hand and tear stains down her cheeks. The blue blood of the Arachne had formed a pool underneath her body, and Abella watched as a drop of it fell from Velvet's free hand and splashed in the puddle below.\n\nIt hadn't been water dripping after all.\n\n\"Mon Dieu...\" she muttered, then backed away and out of the cave.\n\nVelvet was dead. In the light of the rising sun, Abella stumbled until she found somewhere to sit, the world spinning around her. She was no stranger to death, but this felt different. It was like someone had twisted up her insides with a hot knife.\n\n\"But how?\" she asked. Velvet had been talking to her just minutes ago, right? Looking down at her feet, she realized that she was covered in bloody blue handprints.\n\nIt wasn't just that Velvet had died. The Arachne had given the rest of her life to save Abella's.\n\nThe heartfire erupted from Abella and she tilted her head back to fire her rage into the sky. Birds in nearby trees took flight and scattered as the hot flame caused nearby snow to melt.\n\n\"NO!\" Abella bit off the flame and put her face in her hands. Not only had Velvet died, but she had failed to protect her. It had been the one job that Mike had given to her, and she had screwed up.\n\nWhat would she tell Mike? How could she even face him? She cried out in agony, raking her hands and feet against the ground.\n\n\"Leeds!\" she screamed. No matter how much she hated herself right now, she hated him a thousand times more.\n\nShe walked back into the cave and knelt down in front of Velvet.\n\n\"I am supposed to be the strong one,\" she told the Arachne. \"And in my weakest moment, you were my protector. That makes you and your kin clan, and I shall never forget.\"\n\nAbella took Velvet's hand and pried the dog tags free. Though they weighed next to nothing in her hands, it felt as though she moved the Earth itself just to lift the chain over Velvet's head.\n\n\"May the Earth Mother watch over you,\" she said, her voice wavering. \"I will make sure your sister receives these.\"\n\nBack outside, she spent a few minutes using loose stones to block off the entrance. She didn't want Velvet's rest to be disturbed by scavengers.\n\nOnce the entrance was sealed, Abella took a deep breath and spread out her wings. Her right wing was fine, but her left wing was in bad shape. The membrane had been shattered out in several places, but the structural parts were still intact.\n\nIt could be much worse, she thought to herself. Maybe Ratu or Zel would have something to patch the holes. If so, she would be able to fly again, which meant that Velvet hadn't just saved her life, but perhaps her very soul.\n\n\"Every time I fly, I shall think of you.\" She turned to face the blocked entrance and bowed her head. \"Thank you, Velvet.\"\n\nNobody is ever truly gone, Velvet replied, her voice vanishing on the wind.\n\nBlinking in surprise, Abella nodded her head in agreement. Whether she had actually heard the Arachne didn't matter, because she had a promise to keep. With a heavy heart, she turned toward the cabin and wrapped her wings around herself like a cloak, carefully tucking the damaged one inside.\n\nThe sunlight glistened off of the dog tags around her neck.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nThis was a tough chapter for me to write for so many reasons. I'm afraid that this story, just like real life, doesn't always have events that are either happy or fair. This was not something I casually did, and a lot of thought went into those final moments. I hope they paid off.\n\nIf you're still enjoying this tale, make sure to drop me some stars and comments. If you're really mad at me now, that's okay, too. I hope to see you next chapter when Mike confronts Leeds head on. Three more chapters until the end of Part 5 (not the end of the series, I'm working on Part 6 already), so be ready to see things wrap up with a vengance.\n\nThanks again to all my readers, and I hope you are making some time for yourself. After all, you deserve the best!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "nobody is ever truly gone",
        "the shaft of osiris",
        "hacking an angel",
        "eulalie maces herself",
        "fantasy costco",
        "legendary weapons",
        "might need tissues",
        "this chapter has sads",
        "abellas clan",
        "might need a tissue"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-75"
}