{
    "title": "Fire in the Embers Ch. 03",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 12 - Morning Coffee And Crowbars \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted my favorite redheaded reporterette at 7:00am, Thursday, November 12th. \"Channel Two News has learned that Appellate Judge Leahy will give his ruling on the landmark KSTD v. Town & County Council case today at noon!\"\n\nBettina continued as we all watched in MCD: \"The State Supreme Court had sent the case back for further review, and Judge Leahy will deliver his new ruling at twelve o'clock noon. Experts believe that Judge Leahy will rule that the Jack Burke sex tapes must be released to not only our competitor KSTD, but be made publicly available to all the Media and the Public.\"\n\n\"Who are these 'experts' to whom she refers?\" I asked out loud. Joanne Cummings giggled at that.\n\nBettina continued \"It is not clear if the Town & County Council will comply with Judge Leahy's ruling if it goes against them. It is likely that they will appeal to the State Supreme Court again, but the ultimate question is whether they'll order Acting Chief Donald Troy of the TCPD to comply once the appeals are exhausted.\"\n\n\"And yes,\" Bettina said, her eyes beginning to sparkle, \"I said 'Acting Chief' Troy. The Town & County Council formally accepted Chief Harold Bennett's resignation, but moved up the effective date... to yesterday. But Commander Troy's stint will only be for the rest of this month, as Midtown P.D. Captain Sean Moynahan will formally take over as Police Chief on November 1st, and is already working in the role in an 'advisory' capacity now.\"\n\nBettina was not finished. She said \"In other news, the home of BigPharmaCorp executive Dr. Robin Grayson was invaded Tuesday night, and Police found Dr. Grayson and his wife unconscious and severely beaten yesterday morning. Fortunately, their two young children were staying with relatives and were not harmed. The Graysons are recovering from their injuries at University Hospital. Police have made no statements about the case, citing the ongoing investigation.\"\n\n\"Wow, she didn't say anything about what really happened to them.\" said Joanne Cummings.\n\n\"Yeah.\" I said. \"She's experienced the same brutality herself. I'll bet Priya won't be nearly as discrete, and will give every detail that she can in her morning report.\"\n\n\"I'll take that bet.\" said Cindy. \n\n\"Oh, you're betting against me now?\" I said in mock surprise. Cindy just shrugged her shoulders.\n\n\"Better call her on the phone now, then.\" I replied. \"One hour to her broadcast.\"\n\n\"How are they going to get the information?\" asked Martin Nash. \"You've sealed the police report, citing the possibility of unnecessarily compromising BigPharmaCorp research.\"\n\n\"Observe and deduce.\" I said. \"Bettina's broadcast has given you every clue.\" I looked around as everyone thought about it. It was Tanya Perlman who got it first.\n\n\"Ohhhh!\" she said. \"Acting Police Chief Troy. Waiting for new Chief Moynahan to arrive. That'll be enough to make the Good Humor Man, Deputy Chief Brownlee, very pissed off.\"\n\n\"Keep making accurate deductions like that,\" I said, \"and I'll put you in charge of MCD.\"\n\n\"Don't you threaten me!\" Tanya shot back. The room erupted in laughter. \n\nThen it vanished as Theo Washington asked \"Commander... what will you do if the Council orders you to turn over those tapes?\" All eyes were on me in the silence of the room.\n\n\"That's why he makes the big bucks.\" said Cindy Ross. I knew her words were meant to rescue me.\n\n\"Not big enough, for damn sure.\" I said with a sigh. \"I think I need to start taking these bets... in order to raise some cash for when I hit the unemployment line.\" With that, everyone knew exactly where I stood... and yes, it would be taking a stand.\n\n* * * * * * * * * * * * * * * *\n\n\"Priya in five.\" Cindy said as she came to my office. \"Wanna watch in MCD with everyone else?\"\n\n\"Sure, why not?\" I said, though not really feeling it.\n\n\"You okay?\" Cindy said, instantly noticing my internal feelings of agitation and foreboding.\n\n\"Yeah, I guess so.\" I said.\n\n\"You hate having something affect you which is beyond your control.\" Cindy said, knowing.\n\n\"If I need a psychiatrist, Cindy... I'll marry one.\" I replied. Cindy barked a little laugh and we headed to MCD. My foreboding was prescient.\n\n\"This is Priya Ajmani, Five Alive News In The Morning!\" said the beautiful Indian reporterette from outside the gates of BigPharmaCorp across the River. \"Five Alive News has learned that Judge Leahy of the Appellate Court will deliver his new ruling on the KSTD v. Town & County Council case at noon today! KSTD expects to win this case, and will bring you all the details of the Jack Burke sex tapes that you have the right to know!\"\n\nAfter finishing her gloating over the impending ruling, Priya said \"Five Alive News is also bringing you the coverage that other stations won't. Five Alive News has learned more details of the home invasion of the residence of BigPharmaCorp Vice President Robin Grayson. Sources tell Five Alive News that Mrs. Grayson was raped multiple times in front of her husband, and that he was sodomized with a fireplace poker. The motive for this brutal crime is not yet known, and the Town & County Police have declined to answer our repeated inquiries about the case...\"\n\n\"Three boxes of doughnuts tomorrow morning, Captain.\" I said to Cindy. \"On you.\"\n\n\"Done.\" my partner replied. \"I just wonder who in the hell leaked that to her--\" \n\nCindy stopped talking and the MCD room became silent as Deputy Chief Robert Brownlee strode into the room, pretending to try to suppress a grin.\n\n\"Well, Chief Troy,\" Brownlee said sarcastically, \"why are all your people sitting on their asses instead of solving cases like the Grayson rape?\"\n\n\"Did you leak that information?\" accused Joanne Cummings. Hoo boy...\n\n\"You work for the Public, Detective.\" snarled Brownlee. \"And the Public has every right to know what we are doing with their tax dollars.\"\n\n\"You bastard...\" growled Joanne. Brownlee's face went crimson, almost purple. He began striding towards Cummings, who was sitting at her desk.\n\n\"What did you call me, you little good-for-nothing--\" His hand was raised as if he was about to hit her, but he happened to see over his shoulder. I was right behind him, and the Red Crowbar was actually raised and about to split his head open.\n\n\"Go ahead.\" I whispered. \"Hit her. It'll be the last god-damned thing you ever do...\"\n\nBrownlee pulled back, but squared up to me. \"What, are you going to assault me with that crowbar? Go ahead, hit me with it.\" I handed the crowbar to Joanne.\n\n\"I don't need it to kill you, asswipe.\" I growled, fronting Brownlee. And I intended to do just that. But as I advanced upon him, Brownlee backed away, almost tripping. If he'd fallen, he would've died, but by the grace of whatever demon was protecting him, he stumbled to the back doorway, through which he hastily exited.\n\n\"No one saw a thing.\" said Martin Nash.\n\n\"No.\" I said quietly. \"I'll take responsibility for it. I would never ask any of you to lie for me for something like that.\"\n\nCindy's voice then cut through the room like shattering glass. \"No, you wouldn't, Commander. But I want every one of you here to see that our Commander has our backs, and I want each and every one of you to follow that example and have each other's backs.\"\n\n\"Sound advice, Captain, sound advice!\" said a gravelly voice from the side door. Into the room walked Chief-to-be Sean Moynahan. \"A good Police Force has each other's backs, and goes to bat for each other. But I hardly need to tell any of you that.\" He stopped by Joanne's desk. \"Ah, you must be Detective Cummings. I'm Sean Moynahan-- oh, is this the legendary object of our Commander's affection?\" \n\nHe took the red crowbar from her, examining it, tapping it in his hand as we all watched. \"Yes, I can see why you like to carry this, Commander.\" he said, handing it back to me.\n\n\"It's his Palladium, Chief.\" Cindy said.\n\n\"Hello, Chief.\" I said, having finally calmed down. \"Allow me to introduce you to your Major Crimes Division...\"\n\n* * * * * * * * * * * * * * * *\n\nI thought I would just introduce the Detectives to Moynahan, but he had other ideas. He sat down and talked with all of them as a group, then to each of them for some minutes, getting to know them, asking about the routine and procedures and such. Then Cindy and I took him to Vice, where Teresa introduced him to her Vice Squad. Just then, Lt. Wes Masters came in.\n\n\"Ah, 'Coldiron'!\" said Moynahan, his voice lighting up.\n\n\"Good to see you, Captain... er, Chief..\" said Masters, who had worked for Moynahan in Midtown. It was like a family reunion for both as they shook hands warmly. \"Er, what do I call you?\"\n\n\"Whatever it is, just keep it clean.\" said Moynahan.\n\n\"You can call him 'Chief'.\" I said. \"He just not getting paid the big bucks for it until the first of next month.\" Everyone chuckled, then I said \"Chief, with your permission, I'll leave Lt. Masters to introduce you to our Uniformed squads and take you to the Precincts. Captain Ross and I have some work to do.\"\n\n\"By all means, by all means,\" said the new Chief, shaking my hand and then Cindy's. We made our way out of Vice and to my office.\n\n\"I think he's going to be great.\" said Cindy. \"He's going to be like all our dads, watching us and teaching us.\"\n\n\"Yes.\" I said. \"But he just missed finding a body, or more accurately a dog turd, on the MCD floor.\"\n\n\"I think he saw it from the doorway.\" said Cindy. \"And I think he would've said what Nash did.\"\n\n\"True.\" I said. \"Okay, let's get this bit of informality overwith. Go get Joanne.\" Cindy made an 'Oh shit!' face, but left the office and within seconds returned with the lovely young blonde Detective in tow.\n\n\"Sir, I'm sorry about that--\" she began, but I held up my hand to cut her off.\n\n\"Detective... don't ever do that again, not even to Brownlee.\" I said. \"Consider that your reprimand. But more importantly: if that bastard Brownlee gives you any problem at all, let Captain Ross or me know. You can come to me directly if he gives you so much as a dirty look. As you could see earlier, I am more than ready to finish what he started. And just don't ever talk to Lt. Perlman, Cpt. Ross, me, or Chief Moynahan like that.\"\n\n\"Oh, I never would, sir.\" Joanne gushed. \"I'm sorry, but I was so mad that he leaked what happened to Mrs. Grayson to the Press like that, and the came in and boasted about it--\" I had to hold up my hand again.\n\n\"I get it, Ms. Cummings. I really do.\" I said. Then, to change the subject, I asked \"So, what do you think of your new Chief?\"\n\n\"Oh, he's going to be great!\" Joanne said. \"I'll bet he can teach us a lot of things about police work and our jobs as Detectives.\"\n\n\"You're right about that.\" I said. \"I look forward to learning from him, also.\"\n\n\"You, sir?\" Joanne said.\n\n\"Contrary to the belief of your Captain, here,\" I said, \"I still have a lot to learn about this job, also. Having an experienced police officer like Chief Moynahan will only make me better... like Chief Griswold made me better. Okay, what cases are you working on?\"\n\n\"The drug bust you made at those apartments and the Grayson case.\" said Joanne. \"Martin-- er, Detective Nash asked me if I could try to find any correlations based on that refined drug at the apartment.\"\n\n\"Cool beans.\" I said. \"Okay, get back to it.\" After Joanne left, I said \"You expected me to be more formal with her about talking back to Brownlee?\"\n\n\"I don't know.\" said Cindy. \"I was going to bring her into my office and rip her harder than you did, but nothing formal. With respect, Commander, you don't know how we women feel about rape cases.\"\n\n\"Try me.\" I said. \"I was once told by a woman who led self-help seminars, similar to ones your father does, that men don't feel the fear every single day that women do, that women feel that fear at least once a day. No, I'm a man and I don't feel it the same way, but I understood what she was saying, I understand what you're saying, and I understand how Joanne felt about Brownlee leaking that.\"\n\n\"Why in the hell did he pull that stunt?\" Cindy asked. \"If you weren't in front of me, I was going to go after him. And you were more restrained that I was going to be.\"\n\n\"Which is why I stepped in. As to why he did it?\" I asked, then sighed. \"I have no frickin' clue. I usually suspect he's told to do things like that, but this one was... different. I think we'll find out the 'why' of it in the near future. Meanwhile, we have work to do. The officers guarding the Graysons at the Hospital will let me know when they wake up so we can try to interview them. Until then, I'll be glued to the computers.\"\n\nPart 13 - Fourth And Goal\n\nAt 10:00am, three people entered my office at my 'invitation': Myron Milton, Mary Mahoney Milton, and David Krueger. I had the anti-bugging device full on, with the TV turned up some for background noise.\n\n\"Okay, David,\" I said, \"I've vetted the hell out of you, and Myron and Mary have vouched for you also. So to all three of you, what I'm about to tell you and assign you is of the highest secrecy. I am not kidding when I say that any leak to any person outside this room could lead to the deaths of innocent people.\"\n\n\"David,\" I continued, \"I'm going to give you some information. I want you to research it and find links between this stuff, as well as to any outside information the three of you find. You will be working with Mary more than Myron, as Myron still has MCD work to do while Mary is assigned to me personally.\"\n\nI went on: \"Anything that any of you find is to be brought to me personally and immediately. You cannot speak of any of this, not one word, to any other person, not even the Chief, the SBI or FBI. Only to me or Captain Ross, and I'd appreciate you not telling her unless I'm dead, incapacitated, or away on assignment and she really needs to know.\n\n\"Again, folks, people's lives are at stake. Not a word to any other police officer nor anyone else. Yes, most of them are good people, but there's that one or two moles that we can't trust, and the good people can't tell the moles from the other good people. If any of you have a problem with this, speak now and go in peace, and nothing will be held against you.\"\n\nTo my total lack of surprise, they all agreed. Mary then said \"Commander, if you'll get on with it, we can get it solved faster.\" I knew she was needling me, so I let it go.\n\n\"You're not going to be able to, quote, 'solve', unquote, anything.\" I said. \"You'll be finding and correlating data and financial links, and building a court case to take this bastard down.\"\n\nI then began laying out what I had in the secret evidence servers. The only things I did not tell them were where various information pieces came from. I even told them that the Consultant's sex tapes with Emma Washburn was in there, but it was mighty poor porn. I also told them to not download anything from the servers but just look at it, and only from laptops that were secure and not connected to anything else.\n\n\"Some people do not believe that this criminal even exists.\" I said as David began looking at the data. \"And they certainly would not believe it if they knew his identity. And what I need from you guys, is the proof linking him personally to his financial network and to his crimes.\"\n\n\"Holy... fuck!\" gasped David Krueger as he began looking at the data. Myron and Mary were equally stunned...\n\nAs they looked at the data, I had Myron stand aside with me. I whispered \"Myron, we're going to lose that Burke tapes case. I want you to go ahead and make one, and only one, copy of the files onto DVDs. I've already opened the encrypted files on my laptop behind my desk there. But we're going to exclude two women out of the thirty on the tapes. One of them will be the Sheriff's wife, of course. The other... well, the less you know about her, the most better off you will be...\n\n* * * * * * * * * * * * * * * *\n\nAt 11:30am, Town & County Sheriff Daniel Allgood came to my office. He looked distraught.\n\n\"Tell me you have a Plan 'B'.\" he said.\n\n\"Hell, Sheriff, I'm at Plans 'F' and 'G' right now.\" I said. \"Which means (F)ourth and (G)oal.\" Daniel looked like he was about to have a heart attack.\n\n\"Okay, listen in while I make a very important phone call.\" I said. I got out my personal cellphone and called my wife.\n\n\"Hello, dear.\" I said. \"Judge Leahy's ruling is at noon.\"\n\n\"Yes, darling, I know.\" said Laura. \"What do you want to do?\"\n\n\"It's fourth and goal, honey.\" I replied. \"We're down to our last play on this one.\"\n\n\"I'll run with the ball from here.\" my wife said.\n\n* * * * * * * * * * * * * * * *\n\nJust before noon, still Thursday, November 12th, Chief Sean Moynahan 'invited' me, Captain Ross, and Lieutenants Tanya Perlman and Teresa Croyle into the Chief's Conference Room for a meeting. The Chief was at the end of the table near the door, with me to his left (facing the door) and Tanya to my left. Across from me was Cindy, with Teresa to her right.\n\nSheriff Daniel Allgood was also in the room. He had been invited by the Chief when the Chief saw that Daniel was already at Headquarters. Daniel took the seat next to Tanya.\n\n\"First of all,\" said the new Chief in his gravelly, growl-like voice, \"I have looked at all of your records, and I am truly impressed with each of you. You ladies are definitely Crowbar's Angels, and I say that not because of your gender, but because of your abilities in working with him, and probably keeping him out of trouble at times.\"\n\n\"Oh, we definitely don't get enough credit for that, sir.\" said Cindy Ross, deadpan flat. Everyone chuckled.\n\n\"You get more than you realize.\" said the Chief. \"And I'll also tell you, Captain Ross, that I've heard a lot about you from your sister. And while she'll never admit this to you nor in public, she was constantly telling us in Midtown how proud she is of her sister and the things you have been doing up here.\"\n\n\"I can back that up, too.\" said Teresa.\n\n\"Me, three.\" I said. Indeed, Molly's praise of Cindy was always effusive... as long as Cindy wasn't actually able to hear it.\n\n\"Get it on tape.\" Cindy said. \"No telling how much she'll pay you to keep it out of my hands.\"\n\n\"Heh heh heh heh.\" laughed Moynahan in his peculiar way. \"Sheriff, I also must commend your Commander on his choices for his MCD and Vice Lieutenants. This is far and away the youngest Police Force of its size anywhere in the Nation, much less the State, but every appointment into every position, by you Commander, as well as Chief Griswold, has been correct in every way. Okay, so let's hear this Appellate Judge's ruling, and then we can talk about your de-part-ments.\"\n\nWith that, the Chief took the remote and turned the mute off. The TV was mounted on the wall behind the end of the table... behind where I used to sit when Chief Griswold was here.\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely MILF reporterette as she stood in front of the Courthouse Building, which also housed the Appellate Courts for the District and Region of the State. \"Appellate Judge Leahy has just ruled that the Jack Burke tapes are no longer evidence, and that they must be turned over to our competitor KSTD at once!\"",
        "There was a loud groan in the room from everyone but me as Bettina said \"Judge Leahy's ruling carefully answered the objections of the State Supreme Court, and seemed designed to give the Town & County Council no loopholes through which they can squeeze.\" \n\nBettina's smile became more malicious as she said \"Judge Leahy was particularly harsh in his language towards the Town & County Police Department, and stated that Commander Donald Troy must comply with his order to release the tapes or else Commander Troy is to be jailed on Contempt of Court charges until he does comply. He even went so far as to say that Commander Troy's resignation from the Police Force, while most welcome, would not save Troy from jail if he did not turn over those files and any encryption codes to access them.\"\n\n\"However,\" said Bettina, \"the Town & County Council must decide whether or not to appeal the case, and they are calling an emergency immediate meeting to decide what actions they will take. Experts believe that the Council will appeal, thus staying Leahy's order until the State Supreme Court can again take up the new ruling by Judge Leahy.\"\n\n\"Who are these 'experts' she keeps citing?\" I asked, derision in my voice.\n\n\"You look a-maaaaaa-zingly calm about this, Commander.\" said Chief Moynahan, no slouch at observation and deduction himself.\n\n\"Why, Chief!\" I exclaimed. \"You, sir, were in the Cavalry... don't you believe in the Cavalry coming to the rescue?\"\n\n\"Welcome to the party that is the Iron Crowbar, Chief Moynahan.\" said Tanya Perlman, her cheeks rosy with merriment. She knew by now that I must have an ace up my sleeve.\n\nBettina had been droning on about the case and about Jack Burke's prolific sex life when suddenly we heard her say \"What? What's that?\" We paid attention, and Moynahan turned up the volume.\n\n\"Ladies and gentlemen!\" Bettina said, almost screaming, \"We have a shocking new development in the Burke Tapes case! A Federal judge has blocked Judge Leahy's order to turn over the tapes! In addition, the Federal judge, acting upon new information by the FBI, has ordered that the Burke sex tapes be classified, as in military-type classification! In a briefing with the Federal judge, the FBI and other Government agencies stated that information on the Burke tapes could be crucial to an ongoing Federal investigation, and that the release of that information might compromise national security information!\"\n\n\"The Federal judge has ordered that Commander Donald Troy, who currently holds a Top Secret security clearance, to take personal charge of the classified information, and to work with the FBI to secure it in the same manner that other federally classified information is handled!\" Bettina continued. \"With this new development, it is very unlikely that the Jack Burke tapes will ever be revealed to the public, and that the women on the tapes will never be named publicly!\"\n\nEveryone was looking at me as I calmly and serenely looked at the television set. They did not notice that Daniel Allgood had almost collapsed with relief. When he finally looked over at me, I looked at him and just said \"Fourth and goal. And touchdown on the final play of the game.\"\n\n\"Well, Sheriff,\" said Chief Moynahan, \"you did tell me to never doubt the Iron Crowbar, no matter how farfetched he seeeeeems to be at times.\"\n\n\"I should've listened to my own advice.\" said Daniel, still shocked by what he had just witnessed.\n\n\"How did you do it, Don?\" asked Moynahan.\n\n\"I did nothing. It was the Feds. And the FBI did not lie to the Federal judge.\" I said. \"One of the women on those tapes... is a Federal agent, whose identity is classified, cannot be revealed per the law, and will not be revealed.\"\n\nI did not need to tell most of them that the Federal agent was one of the best 'wet boy' snipers in the history of the Central Intelligence Agency; and while the tapes wouldn't reveal that about her, neither I nor my wife, a Deputy Director of said Agency and sister of said Federal agent, were going to nitpick such details...\n\nPart 14 - Inquiries \n\nA little after 1:00pm I got word that the Graysons were regaining consciousness at University Hospital. I hurried over with Cindy. Detectives Nash, Parker, and Diana Torres were already there, along with Sergeant Rudistan and Sr. Patrolman Morton, and they seemed shocked when I came in.\n\n\"Sir,\" said Nash, \"I was about to have Torres and Parker talk to Mrs. Grayson, while I would talk to Mr. Grayson with Sgt. Rudistan listening in.\"\n\n\"That's fine.\" I said. \"I'll listen in on Mr. Grayson. Captain Ross, do you want to listen in on Mrs. Grayson's comments?\"\n\n\"If it'll help.\" Cindy said. \"She might feel a little more comfortable with another woman there.\"\n\nI followed Nash and Rudistan into Mr. Grayson's room, as Morton secured the door from outside. Dr. Robin Grayson still bore the signs of the severe beating he'd taken; his face was bruised all around his eyes and nose, his upper lip was swollen. He could barely open his eyes.\n\n\"Dr. Grayson,\" Nash said, as soothingly as he was capable of making his voice sound, \"can you tell us what happened?\"\n\nGrayson said \"My wife and I went out for the evening. Dinner and a movie. First night alone we'd had in a while. When we got home, they... were already in the house. All of them wearing all black... black ski masks, only eye and mouth slits. They grabbed us when we walked into the library room. They began... yelling and screaming... they wanted to know where a tablet was. I don't use tablets... nobody at BigPharmaCorp does... and my laptop was in my office.\"\n\nHe then gave the grisly details of being forced to watch his wife being repeatedly raped by the five or six men in the room. He kept shouting and pleading that he didn't have any tablet, but they just kept on raping her and beating her, and it became a savage exhibition of pure animal cruelty, a 'feeding frenzy' of violent sex forced upon a helpless woman.\n\nThen they began torturing him. They grabbed a fireplace poker and stabbed it in his ass, but he still just yelled that he had no tablet. Then one man had a pocket knife and said he would slit Grayson's wife's throat if Grayson did not give up the tablet. Grayson said that he had no tablet and did not know of what tablet they were talking about. The masked man stabbed him and he blacked out.\n\n\"Let's give him a few minutes.\" I said to my Detectives. \"Mr. Grayson, I'll be back later. Just rest.\" We left the room.\n\nCindy was coming out of Mrs. Grayson's room. She told the wife's story, which matched the husband's, except the wife didn't know her husband had been stabbed; she'd blacked out and was in and out of consciousness while being raped.\n\n\"Commander, she asked to speak to you specifically.\" Cindy said.\n\n\"All right.\" I said. I followed Cindy into the room. Mrs. Grayson was an attractive woman in her thirties, with brown hair and large eyes I call 'doe' eyes. She had some blackening around those eyes where she'd been slapped hard a few times, but I knew her most grievous wounds were not visible on her face.\n\n\"Hello Mrs. Grayson,\" I said. \"I'm Commander Troy. You wanted to see me?\"\n\n\"Yes.\" whispered the woman, who spoke with a surprisingly steady voice. \"They did this to me to make my husband turn over a tablet to them. He doesn't use a tablet in his work. What tablet did they mean?\"\n\n\"I'm not sure.\" I said, lying through my teeth. \"We've only begun investigating the case.\"\n\n\"Commander,\" Mrs. Grayson said, \"my husband... is not the most honest man in the world. I know he's had affairs in the past. And I may not be you, but I don't have to be you to figure out that those men weren't just making up what they wanted.\"\n\n\"Ma'am, you do your husband a disservice.\" I said. \"I don't think he'd let you take the abuse you did if he could've stopped it. And maybe these guys wanted this tablet thinking there'd be BigPharmaCorp research was on it, and they were plain wrong about that.\"\n\n\"Commander, they never mentioned research, or drugs.\" she said. \"They said the wanted the tablet... with the pictures on it.\" I turned to Cindy and Torres. Torres handed me her sheet of notes, and I read what Mrs. Grayson had told them. The men had asked for the tablet with the pictures of the woman, and her husband had said he had no tablets of any kind.\n\n\"I'll check into this, Mrs. Grayson.\" I said. \"But I'll say again that your husband may well be telling the truth... both you and he were badly brutalized and yet he had nothing to give them to stop it.\"\n\n\"Just tell me the truth when you find out, Commander.\" said Mrs. Grayson, fire in her eyes. Now just how was I supposed to save this man's marriage? I thought to myself. I did know that I wasn't going to help destroy it further.\n\n\"Captain, you're with me.\" I said. \"Mrs. Grayson, you get some rest. Let us find out what happened, and in the meantime I hope you won't blame your husband for the evil actions of others.\" With that, I left the room, Cindy in tow.\n\n\"Okay guys,\" I said to the waiting Detectives in the hall. \"Captain Ross and I are going to have a moment with Mr. Grayson.\"\n\n\"I'll come with you--\" said Martin Nash, but I broke him off.\n\n\"No.\" I said. \"I want to talk to him alone. Captain Ross will be witness to it. And if you want to know why, it's because this man is a Vice President of one of the biggest and most politically powerful companies in the State, and I don't want anyone but the Police Commander taking shit from that company and the politicians they've bought off.\"\n\nThat froze Nash long enough for me to get into the room with Cindy. She blocked the door while I came up to Grayson.\n\n\"Dr. Grayson,\" I said, \"Captain Ross here knows about your previous visit to me, and she is the only one besides you and me that knows the full story. Did these criminals mention Emma by name?\"\n\n\"No.\" said Grayson. \"They said they wanted the tablet with the pictures, but never mentioned her name.\"\n\n\"Why didn't you just tell them you'd already given it to the Police?\" I asked.\n\n\"Because they would've murdered us both, right then and there.\" Grayson replied. \"I knew that our only hope was to never acknowledge that I knew of the tablet, or that I ever had it. They'd already raped my wife, there was little else they could do. To be honest, I was surprised to wake up in this hospital; I knew I'd been stabbed. But... thank God she lived, and the children weren't there...\"\n\n\"That's probably true.\" I said. \"It had to be very hard for you, but you did the right thing. But listen: your wife is wondering why they did this, and she doesn't think they were after BigPharmaCorp research. I've told her nothing, and I won't tell her anything, but you're going to have to decide how to save your marriage.\"\n\n\"What do you think I should do?\" Grayson asked.\n\n\"Tell her that Commander Troy believes the criminals had erroneous information, and that you didn't have any tablet to give them.\" I said. \"And good luck to you.\"\n\nBack in the hallway, I handed Nash my notes, which said simply that the criminals didn't ask specifically about BigPharmaCorp research, and that despite my methods of questioning, he could not say what they wanted. \"Okay Nash,\" I said, \"consolidate these interviews into one report for me. At this point, the reasons for this attack are becoming murky.\"\n\n\"What about that refined heroin sample from that drug raid?\" asked Nash. \"You don't think that's part of it?\"\n\n\"I don't think this attack is part of that.\" I said. \"I think there is a mole, but it's not Dr. Grayson. We'll have to look elsewhere for that, and that aspect of it may have to be worked by our FBI friends...\"\n\n* * * * * * * * * * * * * * * *\n\nAs we drove back in my Police SUV, I asked Cindy \"What do you think?\"\n\n\"Mrs. Grayson said one of the men raping her smelled particularly bad.\" Cindy said. \"And her description of his eyes and mouth under the mask just made me think of Dirty Lennie. I really wonder if it might do good to pick him up and razz him about it, see if he trips up.\"\n\n\"It's a thought.\" I said. \"Though Dirty Lennie isn't known to be a rapist, just a filthy drug pusher.\"\n\n\"What do you think about it?\" Cindy asked.\n\n\"Let me just put it this way.\" I said. \"If I were the Consultant and I'd figured out that Emma's tablet was in Grayson's hands, I would probably not put together this crude and violent way of getting the tablet from him. I'd just send him a little note saying that I was going to tell his wife all about his affair with Emma unless that tablet was turned over very quickly.\"\n\n\"Maybe he did do that.\" Cindy said. \"And Grayson said what was true: that he had no tablet. So the Consultant then had a crew go in and search the house, which including torturing the Graysons.\"\n\n\"That's a definite possibility.\" I said. \"Another one is that someone else was behind this attack, not our Consultant. And that means there is a competing force wanting to offset the Consultant by having something on him, which would keep the Consultant at bay from harming him, or her, or them.\"\n\n\"But they'd have to know about the tablet, and what's on it.\" Cindy said. \"And even I didn't know about it until you told me. You really kept that one under wraps. And by the way, that exonerates you as being behind the attacks... you have the tablet, and its information is on the evidence servers, so you didn't need to do this.\"\n\n\"True enough. I'm glad to be cleared.\" I said, half-mockingly. \"But it definitely creates more questions than answers.\"\n\n\"Commander,\" Cindy said, \"there's something I need to ask, or say. Martin Nash wasn't very happy when you went in to interview Grayson without him, Nash. The Detectives are going to be asking the questions of what tablet, why did the perps want the tablet, and why did they go after Grayson.\"\n\n\"I hope they will.\" I said.\n\n\"Don,\" Cindy said, using my first name to underscore her point: \"Martin Nash is a good Detective. Methodical, sometimes dull, but he has more imagination than he lets on. They already know that you knew something when you sent them to interview the Graysons about the refined heroin. So what are you going to do if Nash finds out we the Police already have the tablet... and you didn't tell him?\"\n\n\"Me,\" she continued, \"I get it why you didn't say anything, and wouldn't have if the Graysons hadn't been attacked. But Martin... he's not going to understand. From the outside viewpoint, it looks like you're holding back, even hiding things. And Nash is 'Boy Scout' personified, if you know what I mean.\"\n\n\"You're right.\" I said, realizing that I'd overlooked this. \"Think I should tell him?\"\n\nCindy realized the full implications of those actions, as well as the implications of keeping the secret.\n\n\"I'll follow your lead, Don.\" she said. \"Whatever you decide, I'll support. I've been withholding the truth to this point, also, but I know and trust you have my back. I'm just thinking about your credibility with your own people if this comes out and they get blindsided...\"\n\nPart 15 - Crowbars and Axes \n\n\"You guys are working late.\" said FBI Special Agent in Charge Jack Muscone on his call to my Police cellphone. It was 7:30pm.\n\n\"We've got a raid tonight.\" I said. \"I'll be monitoring from Headquarters.\"\n\n\"I see.\" said Jack. \"I just wanted to let you know that I checked with the people watching the Belfort Badge Gang, as we call them, and there was some cellphone activity to burners a couple of days ago.\"\n\n\"Okay, maybe this is the start of something.\" I said. \"Somebody put together that crew of perps that attacked Dr. Grayson and his wife. If it was them, you might have your first leads.\"\n\n\"My guys agree with you.\" said Muscone. \"We're checking to see if the burners are part of a larger pack or shipment, that is, if someone bought a bunch at one time and these are part of the set. If it's part of a lot, we can expand the numbers we're looking for.\"\n\n\"Cool beans.\" I said. After we made our goodbyes, I called Martin Nash into my office. He was still at work and arrived instantly.\n\n\"So, Martin, what do you have?\" I asked.\n\n\"Not much, sir.\" said Nash. \"I've been talking with Parker and Cummings. Torres is going on the raid tonight so she's getting ready for that. What we're wondering is that if this attack was not to get BigPharmaCorp research, then why did it happen?\"\n\n\"Good question.\" I said.\n\nNash said \"Joanne brought up a few things, and I don't mind telling you that she's almost like you in bringing up things from limited facts. The first thing she noticed is that there were five or more likely six perps. It would cost money to hire them, so there is money behind this.\"\n\n\"True.\" I said.\n\n\"The statements of the husband and wife generally match.\" said Nash. \"Both said the perps were demanding a tablet, not a laptop but a tablet, and that this tablet had pictures on it. They didn't mention research, nor refined heroin. We toyed with the idea that Grayson sold some of that refined heroin for money, and BigPharmaCorp sent perps after him. But he had no money problems, and they didn't ask about heroin.\"\n\n\"So where does that leave you?\" I asked.\n\n\"Joanne still believes there is a correlation between the refined heroin found at the Douglas apartment and this case.\" said Nash. \"I agree that it's extremely coincidental, but I'm thinking it may really be a coincidence, or unrelated cases. I think that tablet is the key, and whatever is on it holds the answer.\"\n\n\"Do you think these perps were hired to attack the Graysons?\" I asked. \"Or just a burglary crew?\" Nash looked at me a little strangely.\n\n\"Sir, this had to be a specific attack.\" he said.\n\n\"I agree.\" I then picked up my phone and called Cindy's office. \"Captain Ross, would you join Detective Nash and me in my office?\" Cindy arrived almost before I could put the phone in its cradle.\n\n\"Have a seat, Captain.\" I said. As she sat down besides Nash, I said \"Both of you understand the nature of Confidential Informants? That sometimes we get information of which we can't really discuss the source?\" \n\nBoth nodded. I handed them both pairs of latex gloves, like we wear at crime scenes. As they put them on, I brought an evidence packet out of my desk drawer. Opening the plastic sleeve and making a notation of it, I pulled out the manila envelope. And out of that I pulled out an iPad tablet. Martin Nash was looking at it, stunned. He did not notice that Cindy had shown no reaction on her ruggedly pretty face.\n\n\"It is not fair for you to have a mystery at both ends of an investigation, Mr. Nash.\" I said. \"Ergo, I'm letting you know some confidential information, which I hope you will keep as confidential as you can. Do you remember the Emma Washburn case?\"\n\n\"Ahhhhh.\" said Nash, remembering. \"Emma had a tablet that was missing, that we never found.\"\n\n\"Yes.\" I said. \"And it was turned in, to me, under an agreement like that of a confidential informant. I put the evidence into servers, but I didn't tell anyone due to the agreement made in acquiring the tablet itself. And, as I'm sure you're figuring out, this could well be the same tablet these perps erroneously thought Dr. Grayson had.\"\n\n\"What's on it?\" asked Nash.\n\n\"You know I've been pursuing a master criminal, that I call the Consultant of Crime.\" I said. \"He is a pornographic actor with Emma Washburn on videos on this tablet, and a mighty poor one at that. Not enough by itself to convict him of anything. The attack on the Graysons shows that he is not aware that I have it; apparently he thought they had it.\"\n\n\"So will the information on that tablet help us solve the Grayson crimes?\" Nash asked.\n\n\"Probably not.\" I said. \"The perps were professional hires, probably did not know what they were going after beyond a tablet. Mrs. Grayson said one of them smelled dirtier than the others, and you might bring Dirty Lennie in and give him hell for a while. But other than that, you likely won't be able to prove any connection between them and the bastard behind it.\"",
        "I continued: \"I can't even guarantee this is the tablet they were looking for. There is the refined heroin out there to consider. But I wanted you to know of this from me, instead of finding out some other way and wondering why I didn't tell you.\"\n\n\"You don't want us to ask who it is that's on there, do you?\" Nash said. By 'us' he meant Cindy, still unaware that she knew already.\n\n\"I'll just say this, Martin.\" I replied. \"As the lead investigator of the Grayson case, you have every right to know what is on this tablet. Once you do, however, your life will be in grave danger... as will Sandra Speer's and anyone else whom you hold dear. If you slip up even the slightest bit and reveal your knowledge, people will die. And I believe this man has moles within this Police Force, within the SBI, within the FBI, within the CIA... he's like a massive, malignant spider in the center of a huge web, and he feels every vibration.\"\n\n\"Why don't you just arrest him?\" asked Martin.\n\n\"Based upon what proof?\" I replied. \"I'm working to obtain that, but right now he'd walk away, never to be caught again, and probably with my employment terminated as concession to him. And if I do what I should do... if The Batman kills the Joker... then I'll be put to death on the same slab Lance Priemus died upon, someone else will fill the void in his crime ring, and the same Evil will persist. I'm trying to bust both him and his entire criminal organization.\"\n\nNash thought about it. He looked over at Cindy, only to find her ice blue eyes staring right back into his. He said \"This really is that big, isn't it?\"\n\n\"He burned the Commander's house down. With my baby cousins inside.\" Cindy replied. \"This bastard was behind Priemus's tortured death, which you saw yourself. He's behind or involved with almost every crime we've worked on for the last few years.\"\n\n\"Captain, do you know who he is?\" Nash asked.\n\n\"I've never told her.\" I said, peering at Cindy.\n\n\"And you haven't had to, Commander.\" Cindy said, her eyes locked with mine, before turning to Martin. \"And to answer your question, Detective Nash... yes, I know who he is.\" She looked back at me. My eyes revealed nothing; I knew that she knew, of course. And how she knew...\n\nMartin Nash looked at the tablet, about to make the most important decision of his life. He picked up the tablet in his gloved hands.\n\n\"If for no other reason than to help you guys get him,\" Nash said. \"I've got to know.\" I handed him a power cord to plug into the iPad. After a moment, it had enough energy to power up. Another moment later, it was able to run the videos.\n\n\"Oh... my... God.\" Nash whispered as the Truth was revealed to him. \"This... can't... be...\"\n\n* * * * * * * * * * * * * * * *\n\nAt 11:00pm, the TCPD Task Force to take down the Beanstalk Gang rolled out of Precinct Two Headquarters. Lt. Teresa Croyle was in overall command of it, and had Detectives Purvis, Geiger and Torres with her, fully armored for battle. She also had one of the eight-man SWAT teams, this one led by Senior Sergeant Hugh Hewitt. The other SWAT Team, under Sergeant Greg Charles, was ready to deploy outside, in case the perps had hidden reinforcements.\n\n\"The location is very near where we took down the diamond-smuggling perps.\" said Lt. Teresa Croyle. \"Another warehouse in the same area. This place stores shipments of things like furniture, which can be wrapped in plastic. The chemicals used to make and dye the cloth interfere with the dogs' abilities to smell the drugs. Thursday night is the night they bring in shipments, which are distributed to dealers that same night and the next morning in preparation for the weekends.\"\n\n\"The Viscottis would taxi people into the place, so they knew whoever was being brought in was trustworthy.\" Teresa continued. \"With the Viscottis taken out, the word on the street is that this week only people they already know and trust will be admitted. We think someone will set up some kind of van service to shuttle in people... probably with the license plates covered in mud or something.\"\n\n\"Why do we think they'll be there?\" asked SSgt. Hugh Hewitt. \"With the Viscottis busted, won't they shut down, or move somewhere else?\"\n\n\"Maybe, but we're hoping not.\" Teresa said. \"They'll probably be exceptionally wary, but they have a lot of product to move, and it's already in the warehouse. We've been watching, and nothing major has moved out of here the last few days. And since we had that diamond bust, we know the layout of this area. Your guys are ready to come in the backside?\"\n\n\"Yes ma'am.\" said one member of Hugh's SWAT Team, the brother of the young man known as 'The Leader'. \"The fences around this warehouse to the outside are electrified and wired for alarms. But the fence to the building where you had the diamond bust is not. We'll go through it, then around to this side fence...\" he pointed at the fence on his drawing map he'd brought out, \"... which they didn't feel the need to protect.\"\n\n\"Spot to Tag. Spot to Tag.\" crackled Teresa's radio, which was enhanced encrypted Channel 5 radio. \"First bogeys approaching.\"\n\n\"Roger that, prepare to interdict after they leave.\" Teresa replied. She then whispered to Hewitt \"The first vehicles are approaching. We're going to let them go in, then we'll follow and interdict them after they're out of sight of the building. This'll prove they picked up drugs from the spot.\"\n\n\"When will we go in?\" asked Hewitt, who'd not known about that part of the plan.\n\n\"As soon as our guys go for those vehicles.\" Teresa said. \"We expect they might be able to warn those in the warehouse by radio if we wait. Okay, let's get through that fence and get ready.\"\n\nThe band moved to the the designated spot, and Teresa watched as they fully-ski-masked SWAT Team members checked the fence, then rapidly cut through it. The lights of this warehouse suddenly went black and the Team scrambled to the side fence. It was checked, then compromised. The black-clad team moved to doors that would lead into the warehouse, where they stayed stock-still until given the order to move.\n\n* * * * * * * * * * * * * * * *\n\nTwo vans came through the entrance of the warehouse. Guards with M-4s held them at gunpoint until they were checked and verified.\n\n\"Over here.\" said a tall, slender white man, who was known as 'Shortie'. He had been a semi-pro basketball player, but any shot at the NBA was destroyed when he'd gotten hooked on cocaine. Jail time broke him of the habit, at nearly the cost of his life. When he got out, he turned to selling the product that had destroyed his life, thus destroying the lives of others.\n\nThe distributors, many of them in their late teens, came to the table set up between two pallets of what looked like bags of rubber pellets used with artificial turf. They handed over their wads of cash, and received their bags of cocaine. They headed back to their vans, not realizing that a SWAT Team member had penetrated the building and had just recorded the transaction with a videocamera. \n\nAfter the two trucks left, Teresa's earpiece told her that two more 'bogeys' were on the way. She clicked the mike on her radio and said \"Go! Go! Go!\"\n\n\"POLICE! FREEZE!\" yelled the advanced SWAT officers as they ran into the building. Fortunately they stayed close to pallets of furniture in boxes, as armed men came out from behind pallets behind the transaction table. Their gunfire was met with the SWAT's, who moved with coordinated precision to advance upon the perps.\n\nSome perps ran out of the building, but the laser lights of weapons trained upon them made them realize that they were about to be shot by more Police waiting for them outside. These were the other SWAT Team as well as Uniformed Officers from Precinct Two, who had moved in to surround the place in unmarked vehicles and had not been detected. Perps began giving up and were quickly arrested.\n\n* * * * * * * * * * * * * * * *\n\nInside, the SWAT was rapidly advancing. Most of the perps were running, including 'Shortie'. He didn't get far as a bullet thudded into his leg. He howled in pain as he fell to the floor.\n\nThe gunfire stopped. As SWAT members moved to advance, perps suddenly came out to shoot at them. Teresa was just about to come out of her hiding place between pallets and saw the move.\n\n\"AMBUSH!\" she yelled, opening fire with her semi-automatic M-4. The perps had to duck for cover as Teresa strafed them, giving her people time to get back to cover... but she did not see a perp suddenly raise up from the other side of the warehouse, point his rifle right at her, and fire!\n\nTeresa felt her legs being pulled out from under her. As her chest hit the ground, she felt herself being pulled back, and saw a spray of bullets hit the floor right where she had just been. She looked over her shoulder to see that Hugh Hewitt was the one who'd pulled her out of harm's way, having anticipated that tactic by the perps.\n\nThe guy who'd shot at Teresa was struck by six rounds of Police gunfire, a catastrophe from which he would not survive. Incredibly, he was the only person who died in a firefight that expended well over one hundred rounds of military-grade ammunition.\n\n\"Thanks, Hugh!\" Teresa called out as she got to her knees.\n\n\"No problem.\" Hugh said, kneeling beside her. \"Commander said you have too many Purple Orders already, and told me to make sure you don't get another one. But you saved two of our guys, ma'am.\"\n\nIt was all over. The SWAT had overwhelmed the perps, who gave up. The arrests began.\n\n* * * * * * * * * * * * * * * *\n\nAs Teresa told her teams to consolidate and bring in the dogs and the Crime Lab, she was shocked to hear a voice she knew all too well behind her.\n\n\"Nice work... Paratrooper.\"\n\nShe turned around, looking up into the blue-gray eyes of the tall redheaded man, the Tilley full-brim cap on his head, the silver Airborne wings fastened over the badge on the front of the hat. Commander Troy had on his heavy-armor vest and leg protection over his 'black' uniform.\n\n\"Nice necklace under all that armor. too.\" I said, knowing she was wearing that necklace she'd received from her hometown Police Captain friend, even though I couldn't see it.\n\n\"Nice insignia on your hat, Commander.\" Teresa replied. \"And it's about time you joined the party.\"\n\n\"I try. But they keep tackling me when I try to join in.\" I said, pointing behind me to Rudistan and Morton, also in armor over their 'black' uniforms. \"And it's just as well; this is your bust, and I'm not going to get in the way. I just came by to make sure the SWAT Team followed my orders and kept you from getting any more Purple Orders. I have in mind much better medals for you.\"\n\n\"And for these guys.\" Teresa said, pointing at the SWAT Team and other officers.\n\n\"That's your paperwork.\" I said with a malicious grin. \"I only have to write up one award.\"\n\n\"You sure know how to spoil a party, Commander.\" Teresa said, pretending scorn.\n\n\"Welcome to Command, Lieutenant, welcome to Command.\" I said. \"But it looks like you've chopped down a rather large Beanstalk. And you didn't even need a crowbar.\"\n\n\"Just an axe, Commander.\" replied Teresa, again smiling like I'd never seen her smile before. \"Just an axe.\"\n\nPart 16 - Brooding and Planning \n\n\"Unbelievable.\" said the Guest. \"They just got the Beanstalk Gang.\" He was watching the live KXTC television coverage.\n\n\"The Iron Crowbar has now ridded this County of the last vestiges of Captain Harold Malone's good work.\" said Katherine Woodburn.\n\n\"Not the very last of it.\" said the Guest. They were in Katherine Woodburn's private back office in her home.\n\n\"True.\" said Katherine. \"But this is not the worst of it. I thought for sure we were going to get the Burke tapes.\"\n\n\"Yes.\" said the Guest. \"The public statement said that a Federal case would be compromised, but the secret request to the Federal judge stated that the tapes would reveal the identity of a Federal agent. Now I wonder who that agent could be?\"\n\n\"The same one that Priya was going to expose.\" said Katherine Woodburn bitterly. \"The one the CIA almost murdered Priya over, but for the Iron Crowbar's move to save Priya.\"\n\n\"Yes, interesting that he did that, don't you think?\" asked the Guest. \"Even went against his wife on that.\"\n\n\"Yes, I know.\" said Katherine. \"By the way, I've already made public statements supporting KSTD, and strongly suggesting they fight like hell in Federal court to get that overturned and get those tapes.\" She walked to the lowboy, where decanters of spirits and glasses were. \"Do you want a drink?\"\n\n\"Sure, but not very much.\" said the Guest. Katherine poured herself a bourbon, and barely covered the bottom of a second glass for her guest.\n\n\"Now I know why Nathan Allen drank.\" she said. \"Days like this.\" She took a large gulp of her drink.\n\n\"Yes.\" said the Guest, sipping his after seeing her drink. \"And now I will have to implement another way to get those Burke tapes.\"\n\n\"How will you do that?\" Katherine asked.\n\n\"Trust me, my dear Senator Woodburn,\" said the Guest quietly but with severe menace in his voice, \"you do not want to know the details. I will only say that I am going to play on Commander Troy's sensitivity to human life. If he saved his inadequate adversary Priya Ajmani from the vile clutches of the deeply corrupt CIA, surely he will give up those files for someone he cares much more about.\"\n\nHe was remembering the encrypted message he had received from his lovely Sinon. It had read:\n\nI.C. had lunch with The Intendent.\n\nCroyle and Stiles busted Viscottis, going after Beanstalks.\n\nStiles is fianc\u00e9e of I.C.2.\n\nI.C. aware of refined heroin and Dr. Grayson.\n\nADA Patterson carrying I.C. child.\n\nYes, he thought to himself... we shall see if you have the fortitude to face me, Mr. Iron Crowbar. You will have to be as ruthless, as heartless as I am if you expect to win. And I don't think you have the capacity to let the people you care about die, in order to win.\n\nWe shall see, Commander Troy... we shall see...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/fire-in-the-embers-ch-03"
}