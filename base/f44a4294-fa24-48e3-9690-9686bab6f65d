{
    "title": "Three Square Meals Ch. 078",
    "pages": [
        "Ularean's image faded away, the Senior Councillor closing the call abruptly and leaving John and Calara exchanging frowns.\n\n\"Any idea what Ularean was referring to with his 'preparations'?\" John asked, a pensive expression on his face. \"He was doing that same slow blinking mannerism as Talari - I'd love to know what that means.\"\n\nThe Latina shook her head, turning to gaze at her listings of the Ashanath's fleet assets. \"I hope they've got something significant planned because they're going to need all the help they can get. I'm just praying they've got orbital platforms or some kind of defensive structures.\" She met John's gaze and her expression was bleak. \"Despite all the delaying tactics with the gravity wells and the minefield, the Drakkar will still get there just before we do.\"\n\nHe reached out to massage her shoulder and said firmly, \"You've done an incredible job so far and at least you've given them a chance. That stunt with the minefield wiped out nearly half the Drakkar fleet!\"\n\nShe looked at him with her big brown eyes, deep concern in those soulful orbs. \"We might have evened out the numbers on both sides, but the Ashanath ships are severely outclassed compared to the Drakkar in sheer firepower and resilience. Any Drakkar vessels plated in their Steel/Onyxium armour will be practically invulnerable to Ashanath laser fire and the Ashanath favour Beam Lasers exclusively! I've been running battle simulations for the last ten hours...\" her voice faltered and he could plainly see the worry in her tired eyes.\n\n\"That bad?\" he asked, meeting her troubled gaze.\n\nShe nodded and stayed silent, before leaning into him for a hug and letting out a heavy sigh. \"I'm not sure we'll be able to save them, John.\"\n\nJohn rested his chin on her head, wrapping his arms around her in a comforting embrace. Staring out of the long window behind her, he watched the flashing stars go by, and not for the first time, he wondered if he was making a terrible mistake getting the girls involved in this fight. As much as he wanted to save the Ashanath, there was only so much he was willing to risk.\n\nThe door swished open behind them and Alyssa glided into the room, sashaying over to them and placing her slender hands on both their shoulders. She gave them both a radiant smile and turning to Calara, she said kindly, \"You're just tired, gorgeous. You've been working too hard and you need perking up.\"\n\nJohn raised an eyebrow when he realised what she was implying. \"We'll be arriving at Ashana in about thirty minutes; we haven't got time for that!\" he protested.\n\n\"Thirty-six minutes,\" she corrected him, winking as she continued, \"which is plenty of time!\"\n\nShaking his head, John replied, \"I need to work on battle plans with Calara and brief the team for combat! Don't be ridiculous!\"\n\nAlyssa's eyes narrowed and her tone turned deadly serious. \"I'm not. The girls aren't a regular crew and filling them up does them wonders. It's the equivalent of giving all of us a full night's rest before the eve of battle. What Commander wouldn't want his crew bright and alert before heated combat?\"\n\nJohn faltered as he met her probing blue eyes, surprised by her uncharacteristically blunt and serious tone. Studying the blonde for a moment, he could see the worry behind that unflinching gaze, with Alyssa well aware of both his and Calara's concerns about the upcoming battle.\n\nWhen she continued her tone was firm as she reasoned, \"Besides, if you preload us before combat you'll set up an active psychic connection and can heal us mid-battle. You want to keep the girls safe don't you?\"\n\nUnable to counter her logic, he blinked in surprise before looking at her quizzically. \"So how are we going to do this?\"\n\nShe grinned at him, now that he'd come around and replied, \"I've got a surprise waiting for you in your Ready Room! You haven't got much time though, so hurry!\" \n\nJohn released Calara from his arms, then gave each of the girls a quick peck on the cheek before darting out the door. Faye watched him with big eyes as he jogged across the Bridge to the Ready Room door, her wings frozen stiff as she tracked his every movement. He gave her a self-conscious wave, but she didn't respond, staring intently at him instead.\n\nNot having time to question her strange behaviour, he strolled into his Ready Room and had covered a half-dozen paces when he stared up at the lights in surprise. They hadn't activated automatically when he entered the room, leaving the room shrouded in faint starlight. \n\nA sensual female voice spoke to him from the darkness. \"It's okay, they aren't broken.\"\n\nRecognising Jade's sultry tones, he glanced around the shadowy room and finally spotted her standing by his high-backed leather chair. \"Jade? What's going on?\" he asked, walking over to join her.\n\nShe moved the chair out from behind the desk, briefly kissing him before purring, \"Take off your clothes, Master, and please take a seat. You'll enjoy this.\"\n\nWondering what she could possibly have in mind, John shrugged inwardly and decided to just go with it, quickly stripping as the Nymph had requested. The girls obviously had something elaborate planned and he was forced to admit that Alyssa was right - he felt tense and anxious as his quad had already refilled. It was at least six hours since he'd been enthusiastically drained dry by the Nymph and the trio of Terran teenagers in the Launch Bay.\n\nWhen he was naked, he sat down in the chair and felt Jade's cool hand on his shoulder as she whispered, \"Now, we'll just make it a little darker and we can begin.\"\n\nSomeone activated the armour plating over the windows to his Ready Room and as the panels slid down, he was plunged into complete blackness. He blinked for a moment, his senses trying to adjust to being deprived of sight and his sharp hearing picking up the soft throb of music as it gradually increased in volume. There were no vocals, only a sensual, rhythmic beat that sent a shiver down his spine. Just as his eyes had started to adjust to the darkness, there was a bright flare of purple light in front of him.\n\nHis eyes blinked rapidly as he was momentarily blinded by this radiant vision. When he was able to see again, his mouth hung open in shock as Faye suddenly appeared, but this wasn't the bright-eyed chirpy girl he'd grown used to. Her luminous eyes were hooded behind long lashes, her expression sultry as she tilted her head to one side and listened to the music. Although she was nude, her iridescent wings were wrapped tightly around her, forming a diaphanous dress that moulded to her curves. She ignored him completely as she started to move, losing herself in the throbbing music, her body undulating with its own sensual rhythm. \n\nJohn had grown very fond of Faye and while he considered her to be a beautiful girl, he hadn't really thought about her in an overtly sexual way - at least not beyond the few chaste kisses they'd shared. If she'd been a flesh and blood girl, he would have approached the situation very differently, but the unfortunate physical limitations to any such relationship had prevented him from really thinking about her that way.\n\nThat wasn't the case any more.\n\nHe gaped at her in amazement as she raised her arms above her head, linking her hands together as she writhed in perfect time to the music. She was slimmer than the other girls, petite and slender, but still possessed enticing curves and a luscious bust, the pert shape of her breasts accentuated by her shimmering wings. Faye slowly turned as she danced, drawing his eyes to the hypnotic motion of her hips as they swayed alluringly. \n\nWhen Faye started another turn, she seemed to notice him at last, glancing at him coyly over her shoulder before quickly looking away, her face obscured by her shroud of long purple hair. John found himself watching with eager anticipation for her to finish her turn and when she did so, he saw a teasing glimpse of her eyes as they met his. Gliding his way now, her steps followed the pulse of the beat, her wings sliding apart and revealing more of her smooth flesh. \n\nEven though she'd been in a near-constant state of nakedness for weeks, he hungered for another glance at her dark nipples, the gentle curve of her breasts, or the toned oval of navel. He caught the hint of a surprised but delighted smile, before she managed to reassert her sultry expression - it was the look of an inexperienced girl who finally realised the full devastating power of her femininity to thoroughly bewitch her man. The wings parted fully, letting him gaze upon her unimpeded and it was like he was seeing her for the first time. He throbbed with arousal at the beautiful sight, taking in every square inch of the stunning girl as she posed before him. \n\nShe continued to sway and undulate to the music, staring intently at him as his eyes followed every motion of her body. Her wings moved too, following a languid, repetitive pattern that marked out the beat of the music. Faye sank lower and parted her thighs as she slowly sank to her haunches, giving him a glance at the snug lips of her pussy. He wanted to bury himself in her and claim this nubile girl, making her his own. The lustful expression on Faye's beautiful face told him she wanted the exact same thing.\n\n\"Move forward a little,\" she urged him, licking her lips in anticipation. \n\nHe watched her tongue glide over her cupid-bow lips, then did as she asked, shifting forward on the seat so his throbbing cock was inches from her face. She leaned forward, mouth parted in anticipation, her lips glistening with moisture. Faye's wings swept forward and partially obscured her from sight, but before he could object, he felt her lips brush over his cock, engulfing the broad head in her hot little mouth. \n\n\"Oh fuck!\" he groaned in shock, staring in awe at Faye.\n\nHer glowing eyes peered up at him through a gap in her shimmering wings, her gaze smouldering with lust as she inched down his shaft. With his hands clenched tightly to the armrests of his chair, he gasped at the delicious sensations, savouring the thrill of feeling a new girl worshipping his cock. Faye was a gifted fellatrix, with a technique all of her own, her tongue curling around his shaft and drawing him deeper. She easily took him down her wonderfully tight throat as she bobbed in his lap, sucking hungrily for his cum. \n\nJohn gritted his teeth, desperate to make it last as long as possible.\n\n*Give her what she wants! Claim her as your own!* Alyssa urged him, her lustful thoughts filling his mind, accompanied by an overwhelming rush of pleasure. \n\nArching his back, John cried out as he came, Faye's lips clamping down on him and sucking harder, intensifying his climax. His toes curled at the intensity of his orgasm, his eyes staring blankly into the blackness as he saw his own set of stars. The purple sprite was relentless in sucking down every last drop of cum and she left his balls feeling numbed with pleasure. \n\nFinally sagging back in his chair now that he was spent, he stared down at her in wonder. The fierce intensity in her eyes had softened now and she slowly peeled her wings back and rose up to stand before him. Her belly was hugely swollen with the massive load of spunk he'd just pumped down her clutching throat, the effect even more dramatic on such a petite girl. Her fingers glided over the enormous curve of her cum-stuffed stomach and he reached towards her with shaking hands, wanting to follow her fingers as they traced over her beautiful body. His hand slipped through her holographic image and he looked up at her in shock once again, uncomprehending in his post-orgasmic haze.\n\n\"Thank you. I'll treasure this memory forever,\" she whispered quietly, a soft sigh of contentment escaping her flushed lips.\n\nBlowing him a loving kiss, she winked out of sight, leaving him in absolute darkness again. Someone slowly turned up the lights and as his eyes readjusted to the warm glow, he saw Jade kneeling before him, her breasts hugely inflated with all the cum she'd just sucked from his quad.\n\n\"It was you!\" he gasped, reeling from the shock before flushing with embarrassment. He gave her a self-conscious grin and continued, \"That was incredible! It felt so real!\"\n\nShe rose gracefully then leaned towards him to plant a loving kiss on his cheek. \"Your desire for her was real, John. I was just a proxy, helping give you both what you wanted.\"\n\nHe shook his head in amazement, then blew out his breath and grinned at her. \"Thank you, Jade. That was absolutely amazing.\"\n\nThe Nymph traced her finger along his jawline in an affectionate gesture, then prowled towards the sofas, just as the door to the Ready Room opened. Alyssa walked in first, followed by the rest of the crew, knowing smiles on their beautiful faces.\n\n\"Come and join us,\" Alyssa said, beckoning him over to the sofas.\n\nQuickly dressing, he strode over to join them with a spring in his step, feeling like a million credits. Jade was sitting on the sofa to his left, with Dana and Calara wasting no time in suckling from her titanic chest. She stroked their hair while murmuring lovingly to them both as they filled their tummies with his cum. He sat down between Alyssa and Sakura with a broad grin on his face, putting his arms around both girls.\n\nAlyssa's eyes twinkled as she said, \"You have the happy look of contentment of a man who just emptied his balls. Feeling better?\"\n\n\"Much!\" he agreed, squeezing her shoulder. He glanced around the group and asked, \"Where did Faye go?\"\n\nIrillith gave him a broad smile. \"She had something urgent she needed to attend to. I believe she'll rejoin us shortly.\"\n\n\"Yeah, I bet she did!\" Dana giggled, licking her lips before engulfing Jade's nipple once again.\n\nJohn took a deep breath, then looked quizzically at Alyssa and asked, \"How much time have we got left?\"\n\n\"Twenty-three minutes until we arrive in-system,\" she informed him helpfully. Her eyes twinkled as she added, \"Faye got you in quite a state! You normally last much longer than that!\n\nChuckling at that, he asked Rachel, \"Is all the work on the mech done?\"\n\nThe brunette nodded, looking pleased as she replied, \"We hooked up the Punisher Gatling and Dana seems happy with it. She did a final round of system checks and said it's ready to go.\"\n\n\"That's great news,\" John said, feeling relieved. \n\nJade stroked the brunette and redhead feeding from her and said gently, \"I'm afraid that's all for now, girls.\"\n\nThey reluctantly pulled away from the Nymph to make room for Sakura and Rachel, with Jade cradling the next two girls in her arms as they latched on to her bountiful breasts. \n\nTashana watched proceedings with wide-eyed amazement, glancing at her sister and whispering, \"Is that really John's cum she's feeding them?\"\n\nIrillith nodded eagerly and the look of desire she shot her sister was electrifying as she replied, \"That's right and it's our turn next!\"\n\nCalara stretched contentedly before grinning at John, her brown eyes looking sharp and focused as she sat on the sofa opposite him. The difference in the Latina was amazing, with all traces of fatigue now wiped away. He didn't need to close his eyes to check for an active connection with her; he could sense her presence now, her body strong, vital, and pulsing with energy. Calara nodded as she stared into his eyes, confirming that she could feel him watching over her protectively.\n\nSakura and Rachel had soon drunk their fill - or as much as Jade allowed them, making sure that they would all get an equal share. They moved out of the way, both girls looking bright-eyed and refreshed as they grinned at John. This time he did close his eyes to check his mental images of them - just to make certain - and he could see all four Terran girls were now shrouded with a gleaming white aura. \n\nTashana and Irillith were next and the group watched as the Nymph embraced the Maliri twins, gently guiding them to her breasts as they gazed up at her. Irillith latched on immediately, her eyes rolling back as she suckled greedily, her taste buds tingling in delight as they were bathed in John's cum. Any sense of hesitation that Tashana might have been feeling was abruptly swept away, overwhelmed by a sudden surge of pleasure over her link to her twin. Her eyes blazed with a fierce hunger as she closed her mouth over Jade's dark green nipple, and both girls moaned with need as they drank, slowly writhing on the sofa as they filled their stomachs.\n\nJade chuckled as she pried the Maliri girls off her breasts, her superior strength allowing her to effortlessly peel away the still-hungry girls. They resisted at first with whimpering protests, before looking abashed as they regained control of themselves. Rising from the sofa Tashana and Irillith held hands as they crossed to the sofa opposite, both flashing blushing smiles at John as they did so. Alyssa gave Jade a tender kiss as she moved into her arms, the Nymph now pulsing with a green light as she filled her own stomach with her share of John's load. \n\nThe strobing green light was obscured for a second as Faye rejoined them in a burst of purple, a joyfully happy grin on her face. She appeared just as she always had, but as she glanced at John, he could see a new sparkle in her luminous eyes. There was a new level of intimacy in the look she gave him and he realised that their relationship had fundamentally changed.\n\nWhile Alyssa drank the last from Jade's much-reduced breasts, Calara had activated the system map to display Ashana. There was a single yellow star at its holographic centre, with the object of their attention highlighted on the map with a green ring. Ashana itself appeared as a small reddish-orange planet out on the sixth orbital path around the star.\n\n\"We're hooked into the Ashanath's sensor grid now. They've given us full access,\" Calara explained, as they stared at the fleet consisting of over two-hundred silvery discs. They were assembled in the precise battle formations she had planned out for them, arrayed protectively in front of the Grey's homeworld. The Latina's tone was grim as she added, \"Whatever the High Council has been preparing, it wasn't orbital defence platforms. There's only orbital factories and refineries in-system, no military facilities.\"\n\n\"How long until the Drakkar arrive?\" John asked, his voice tense.\n\nCalara zoomed the map out slightly, now showing the Drakkar invasion armada as it rushed forward in hyper-warp. \"Eight minutes. The Ashanath used up all their Gravity Well Generators delaying them so they could lay that minefield.\"\n\n\"And how long until we arrive?\" he asked quietly.\n\nAlyssa had finished her refreshing top-up by now and she replied, \"Sixteen minutes, eight seconds.\"\n\nJohn looked around at the group and said soberly, \"I want all of you to understand what we're up against. Despite that minefield nearly halving their numbers, the Drakkar ships still outnumber and severely outclass the Ashanath - enough for both Calara and me to be very worried about this battle.\" He took a deep breath before continuing, \"Does anyone have any reservations about us getting involved in this fight? I want to stop the Drakkar and save the Ashanath, but this is going to be extremely dangerous. I refuse to drag you into this level of carnage if any of you object.\" \n\nThe girls were quiet as they looked around at each other with wide eyes. Eventually Alyssa spoke up, her voice passionate as she said, \"The Ashanath might seem unemotional with the strange way they speak, but when you talk to them with telepathy, they're not like that at all. They're warm, helpful people and they desperately need our help!\"\n\nDana nodded, her expression grim as she said, \"I made friends with lots of the Grey engineers that helped us. I don't want them to get eaten!\"\n\n\"We can't let the Drakkar win this battle,\" Rachel agreed, sounding worried. \"They're voracious carnivores and with this many invading, they'll depopulate the Ashanath homeworld within weeks! We can't just stand by and let them commit genocide!\"",
        "\"It's also in our interest to help the Ashanath,\" Jade said, emerald eyes gazing at John intently. \"I'm certain they know much more about the Progenitors than they revealed to us before. If we want to find out exactly what that is, we must help them.\"\n\n\"I agree with Jade,\" Calara said with a firm nod. \"All those Planetary Defence Lasers built into the planet weren't there to just protect a bunch of stone monoliths. It seems clear they were hiding something significant.\"\n\nJohn turned to look at Sakura and when she saw he was waiting for her opinion, she said earnestly, \"I'll follow you anywhere to fight by your side! Even if that wasn't the case, from everything I've seen and heard about the Drakkar, they're vicious, evil monsters - stopping them is the right thing to do.\"\n\nIrillith nodded and said, \"I'm with Sakura. We can't stand by and let the Ashanath be wiped out, but the Drakkar are disgusting beasts - the galaxy would be a better place without them!\"\n\nTashana felt a strange pang of uncertainty as she listened to her sister, but she put her arm around her and said, \"I've never met the Ashanath or the Drakkar, so I'll follow Irillith's lead on this.\" She glanced at Jade and added, \"Besides, we can't afford to lose any sources of information on the Progenitors, not with one posing such an imminent threat to the Maliri.\"\n\nFinally John looked at Faye, who was listening avidly to proceedings and asked, \"What's your view, Faye? Are you willing to put yourself in danger to help the Ashanath?\"\n\nShe blinked at him in surprise, before a smile crept onto her face, touched that he valued her opinion as much as the rest of the crew. \"I've seen the video footage of the Drakkar attacking the Invictus,\" she replied, gazing at the group with big eyes. \"More than anything, I don't want to see any of you get hurt. If all of you think we should fight, then of course you can count on me to help!\"\n\n\"We're decided then, we fight,\" John said nodding solemnly. Looking at the Nymph and then his auburn-haired engineer, he continued, \"Jade, I want you in the Raptor. Dana, you'll be in the Mech.\" He turned to meet the Latina's intense gaze, adding, \"Calara and I will assign you targets when the Drakkar jump in and we can see exactly what we're dealing with. The rest of you will be with me on the Invictus' Combat Bridge.\" \n\nJade nodded solemnly and replied, \"Of course, John. I won't let you down.\"\n\n\"The Drakkar won't know what's hit them!\" Dana exclaimed, a huge grin on her face.\n\nHer wild enthusiasm almost made him change his mind, suddenly filled with doubts about letting her loose on her own in the unproven mech. He gave her a stern look and said, \"I want you to be extremely careful out there, Dana. If you get in trouble, call for help immediately; no playing the hero.\"\n\n\"I'll be fine!\" she said with a dismissive wave of her hand, smiling at him as she rolled her eyes at his over-protectiveness. His answering frown made her pause, calming her down. Meeting his probing gaze, she added quietly, \"I'll be careful, I promise.\" \n\nHe rose to his feet and the girls followed his cue, standing with him and moving closer for a group hug. No one said anything for that long moment, but they could feel the shared connection between them all. It was filled with a sense of raw, untapped power begging to be unleashed.\n\n\"Stay safe and look after each other,\" he told the girls, gazing at each of them in turn.\n\n\"We will,\" they intoned together, brave expressions on their beautiful faces.\n\n***\n\nLeader Linnaeus glanced around the Bridge of his cruiser, looking at each of his officers in turn. His ship was in formation with another five Ashanath cruisers, holding position until the invading fleet of Drakkar arrived. Waiting for those dreadful foes to arrive was weighing heavily on all of his crew and the sense of fear amongst the officers on the Bridge was palpable. Having run into Drakkar Raiders more than once before, they all knew exactly what those monsters were capable of in a single cruiser, but an entire fleet of them was a terrifying prospect. \n\n*They will be here imminently,* Navigator Cadimus stated, activating the sector map.\n\nThe onrushing horde of Drakkar swarming towards the Ashana system were all highlighted in red, their numbers so large that it looked like a red tide rushing in. Linnaeus had never seen an armada like it and he felt a shiver of fear run up his spine. \n\n*Steady, my friends,* he said to his crew, trying to sound as calm as possible to settle their nerves. \n\nTactical Officer Pallari sounded tense as he asked, *Is it really true that we are not to fire on any Drakkar ships with black armour?*\n\nEngineer Batiri turned from her station, her thoughts troubled as she added, *The Onyxium alloy they use to armour their hulls was analysed at the Academy. It is possible to overload the capacitors with sufficient levels of energy weapon damage, making them vulnerable to attack with Beam Lasers. We could hurt them with high enough concentrations of firepower.*\n\n*We will have more than enough targets to shoot at,* Leader Linnaeus said placatingly. *As discussed in the briefing, we have been ordered by the High Council to leave those black-hulled vessels to JohnBlake.*\n\n***\n\nSenior Councillor Ularean led the rest of the High Council along the black corridor, the dark feel of the place sending chills up his spine. Echoes of pain and suffering flickered through the gloom, the psychic imprints which had been left behind filling him with a dark sense of foreboding.\n\nThe door to the Command Chamber parted before him, the jagged, angular join of the opening portal reminding him of the fanged maw of some vicious predator. The High Council filed inside in silence, taking their places within the black chamber and sitting at the seats arrayed in an oval. He could sense the trepidation from his colleagues and the feelings of dread that they were experiencing mirrored his own. One by one his white-robed colleagues closed their eyes, merging their minds into the collective thought-cluster.\n\nHere, inside the Legacy, they couldn't help but be swayed by the darkness that pervaded the place and the Astral Conclave they formed was filled with forbidding shadows. Looking around at the Astral Projections of each of the Councillors, he could see the fear they felt written across every inch of their frightened faces. He caught movement out of the corner of his eye, but when he looked that way there was nothing to be seen. Still, he couldn't help feeling like he was being stalked like prey, as though a ferocious predator was lurking in the shadows, waiting for the opportune moment to strike.\n\nDoing his best to suppress his jitters, Ularean announced firmly, *It is time.* His thoughts surged out to embrace the rest of the High Council, filling them with a renewed sense of purpose and helping them to focus. *We have committed to our decision, we must not let fear sway us from our course.*\n\nThe other eight Ashanath Councillors nodded, submerging themselves more completely into their convergence of consciousness. \n\n*Linking to the Command network,* Talari declared, reaching out to the telepathic web that had been established between the Ashanath Fleet Commanders.\n\nUlarean felt that widening sense of perspective as their thought-cluster was connected with the light touch of the Ashanath Command network. Every Captain within their fleet was telepathically linked to that group consciousness, allowing them instant communication with the entire defensive fleet.\n\n*Initiating activation sequences,* Councillor Rathus intoned, his fortified voice reverberating eerily.\n\n***\n\nOn the surface of Ashana, not far from the secret facility that housed the Progenitor monoliths, a small rodent known locally as a Savrit dug in the orange dirt, foraging for Reworb grubs. It felt a slight vibration and dug faster, thinking the grub it had sniffed out was trying to escape by burying itself deeper into the sandy ground. The trembling intensified and the Savrit lurched out of the hole it was digging, looking around in fear in case a predator approached. Its short ears twitched and its orange fur bristled, not able to sense anything beyond the violently shaking ground. Thoroughly spooked, it bolted for its nest, all thoughts of dinner swept from its tiny mind by an instinct for self-preservation.\n\nBuried within the Ashanath homeworld, enormous generators surged with power, activating for the first time in millennia. With a throbbing bass hum, ancient machinery came to life, white lightning arcing around the huge apparatus. An enormous split lanced across the ground, the opening crack over two kilometres in length and only an inch across to start with, but quickly widening with every second.\n\nFierce rays from the bright yellow sun blazed through that broadening gap, shafts of light reflecting off the vast bulk of the silver and black object hidden within. Fine dust poured off the colossal doors as they slowly drew back, cascading down like an amber waterfall that formed piles of orange dirt on the upper body of the gigantic craft. The Legacy was finally exposed to the sun's harsh glare, after being buried there by the Ashanath's distant ancestors thousands of years ago.\n\nAs the doors eventually shuddered to a halt, the two-kilometre-long leviathan arose from the depths of its crimson tomb, revealed in all its terrible majesty.\n\n***\n\nGrand Overlord Vekrok's bulging eyes narrowed intently as his dreadnought exited hyper-warp, the arrival of the immense warship in this system heralding the doom of the Ashanath. All around the Defiler, the rest of the Drakkar horde dropped out of hyper-warp, gathering into the distinct collections of clan groups that had rallied to Vekrok's bloody banner. Together, they represented the might of the Drakkar, a rampaging interstellar beast capable of inflicting terrible damage to any galactic empire that dared face it.\n\nThe clans would form the claws of this monstrous assault, with the Defiler providing the terrible bite. His personal retinue of six battleships would add more teeth to that savage mauling and Vekrok nodded with satisfaction to see all his forces surging forward to attack. Although the losses against that despicable minefield had been horrific, he still had more than enough ships to crush the pitiful silver-hulled discs that dared to finally face him.\n\nHe watched as the clans roared towards the Ashanath, engines glowing a bright orange as the Drakkar Captains ordered their ships forward at full power. He counted forty-eight battleships still intact amongst them, although a quarter of that figure had sustained battle damage from the minefield. There were over triple that amount in grey-hulled cruisers, which were now spearheading the charge towards the Ashanath lines. \n\nThe precious black armour plating had been given to the most aggressive ship commanders, ones who would be most likely to lead the charge and take the brunt of the Grey's laser fire. Of course, those commanders had also been the most eager to rush after the interdicting Ashanath cruisers, so the conflagration in the minefield had reaped a terrible toll through their numbers. The sneaky little Grey bastards had obliterated all but a dozen of the cruisers that had been given armour from the Dark One, although the bigger, slower ships had fared much better. The clan leaders in their black-hulled battleships had largely been spared such an ignominious end, as had his personal guard of six more battleships, which had been on close-escort duty for the Defiler when the mines had been activated.\n\n\"Your orders, Mighty One?\" Grukig asked, standing by the Command Table and squinting at the orderly lines of silver-hulled ships. His jaw turned up into a toothy grin as he grunted, \"Who do you want to kill first?\"\n\nPointing with an enormous black gauntlet towards a cluster of huge circular Ashanath spacecraft, Vekrok snarled, \"Slaughter the biggest ships they've got! We'll crush their battleships and fill the rest of their feeble hearts with terror! They'll be begging us for mercy and running for their pitiful lives!\"\n\nGrukig chortled with glee, saliva spraying wildly as his jaw snapped up and down, savouring the anticipation of the destruction they were about to unleash on the Ashanath and the glorious feasting that would follow.\n\n***\n\nJohn stepped clear of the armour equipping frame, grabbing his sword, a Punisher rifle, and some magazines from the adjacent weapon rack. All around him the girls were quickly gearing up, the Combat Bridge filled with the sounds of robotic arms moving armoured plates into position and the rippling series of clicks as they were sealed into place.\n\nAlyssa and Calara were just ahead of him and the first to get to the ramp, jogging down to their stations on the Bridge. He sheathed his Crystal Alyssium blade on the back of his chair, the magnetic fields holding the bands on the hilt firmly in position. After that, it only took a couple of seconds to slide his rifle home into the slot at the end of his console and he took his seat at the Command Chair as the railgun was locked into place.\n\nAll around him the rest of the girls were taking their positions, with Rachel, Sakura, Irillith, and Tashana each taking their chairs after slotting their weapons into place. Tashana was the one exception, but she had twin holsters for the Punisher pistols she carried, each heavy pistol nestled under an armoured breast.\n\n\"Eight minutes until we jump in-system,\" Alyssa warned everyone from where she sat at the Pilot's Chair, placing her hands on the flight controls. \"From our approach vector, we'll be arriving behind the Ashanath lines.\"\n\nCalara tapped a couple of buttons on her Tactical Console and a glowing holographic map sprang into place in the centre of the Bridge. They were all familiar enough with the Ashanath's home system now to recognise the orange-red world of Ashana, but even if they hadn't been, the orderly formations of row-upon-row of silver saucer-shaped spacecraft would have made it clear what they were looking at.\n\nTashana frowned as she studied the map and asked, \"John, I thought the Ashanath were outnumbered by the Drakkar? I can see several hundred Ashanath ships there!\"\n\nHe gave her a grim smile and replied, \"I was just referring to the big vessels - cruiser class and above. You're right though, the Drakkar lost almost all their smaller, faster picket ships in the minefield, while the Ashanath still have a sizeable number of destroyers and corvettes. Unfortunately, they're most effective at providing point-defence cover and while the Drakkar do use missiles and dropships, they don't use strikecraft. Those picket screens won't be as valuable against cruisers and battleships.\"\n\nCalara nodded and interjected, \"The Drakkar still have one-hundred-and-forty-two cruisers, forty-eight battleships, and what I can only class as a dreadnought. They're facing the Ashanath's one-hundred-and-sixty cruisers, along with forty battleships, and ten carriers.\" Her expression was bleak as she added, \"We're going to have to pray we can make a big difference - without the Invictus involved, it's going to be a massacre.\"\n\n\"That dreadnought must be their flagship,\" Irillith speculated, a thoughtful look on her face. \"If you can get me close enough, I'll start hacking it and turn it against the rest of the Drakkar. That should have a devastating effect on their morale.\"\n\nJohn glanced at Calara then smiled at Irillith as he said, \"We were hoping you were going to say that. The Drakkar flagship seems to be protected by six battleships though, so you'll have to work fast. We'll be dealing with a huge amount of incoming fire from its escort vessels.\"\n\nThe Maliri girl nodded her understanding, then asked Calara, \"What's our strategy here? When I hack that ship, do I just start unloading on those battleship escorts?\"\n\nThe Latina nodded as she replied, \"The Ashanath ships use laser weapons exclusively, so they'll be helpless against the Onyxium-armoured Drakkar. Our job will be destroying all the black-hulled Drakkar ships, because we can hurt them with our ballistic weapons.\"\n\n\"That makes sense,\" Irillith agreed. \"I'll hit the escorts first, then move on to any other black-hulled ships in range.\"\n\n\"Patching in Dana and Jade,\" Rachel said, hitting a button and bringing two holographic images of the girls into focus.\n\n\"This is the Raptor, reporting in,\" the Nymph replied, smiling at them as she flicked switches, powering up the gunship.\n\n\"This is UWS-01 Strike Valkyrie Ultra, reporting in,\" Dana stated, the fierce expression on her face undermined by a nervous glance at John.\n\nAlyssa simply laughed and rolled her eyes, while John smiled at the redhead and replied, \"You can't seriously expect us to call the mech that. The battle will be over by the time we've memorised it!\"\n\n\"Ah c'mon! It sounds awesome! Besides, names like that are a tradition for space-mecha!\" Dana bargained, while giving him her most endearing smile.\n\nCalara gave Dana a conciliatory smile and suggested, \"Perhaps just shorten it a bit? We'll need a quick designation during combat.\"\n\n\"I do like the Valkyrie part!\" Tashana said, grinning at Irillith. \"It'll be like we're fighting alongside Titanium Jake!\"\n\n\"Who?\" Rachel asked, glancing at her in confusion.\n\n\"He was an Asphalt Arena champion. His car was called the Valkyrie,\" Irillith explained. She returned Tashana's grin and continued, \"He won it year after year when we started watching; we were both big fans.\"\n\nJohn shrugged and said, \"Alright, that'll do. The Valkyrie it is then.\"\n\n\"Ugh, it sounds boring without all the rest,\" Dana complained, pouting at him. \"Fine, but I think you guys suck.\"\n\nSmiling at her, John said, \"Honey, we can discuss it at length after the battle; we're a bit pressed for time at the moment.\" Turning to the Latina next, he continued, \"Commander, did you fully brief the Ashanath on the tactics you want them to employ.\"\n\nCalara nodded and replied, \"I've provided them with my analysis of the Drakkar's likely tactics and how best to respond to them. They know to focus on the grey-hulled Drakkar ships and leave the Onxyium-armoured ships for us to take down.\"\n\nAfter glancing at her console to check their progress along her flightpath, Alyssa warned them, \"We'll be jumping into the system in just over four minutes!\"\n\nSakura was staring intently at the two forces as they clashed and said in a hushed voice, \"The Battle for Ashana has begun...\"\n\n***\n\nThe Ashanath had arrayed their forces in several spinning ring formations, with their biggest vessels anchoring the centre. They didn't have enough spare ships to form any sizable reserve, other than ten carriers which hung back on the port flank, intended to help plug any gaps in the line with strike-craft counter-attacks.\n\nJohn and the girls all gazed intently at the holographic System Map, watching as the three-dimensional images of the two sides started the fight with long-range salvos of Beam Laser fire. Unlike the Battle of Regulus, the Drakkar didn't bother to stop at long range to exchange barrages with the formations of Ashanath. The vicious-looking Drakkar vessels simply charged straight at the silver ships, apparently intent on barrelling headlong towards the closest enemy. \n\nThe Ashanath began to take evasive manoeuvres as the horde approached, making their ships much harder to hit, while still finding it relatively easy to strike at the opposing armada of malevolent ships. A scorching wave of red beams lanced out to slash into the incoming Drakkar and the initial cascade of laser fire took a heavy toll on the lead elements of the Drakkar's haphazard formation. \n\nA group of three black-hulled Drakkar cruisers led the charge and they raced ahead, completely ignored by the Ashanath. However, the same couldn't be said for the grey steel-armoured ships following in their wake. The next ships in that vangaurd were a formation of five cruisers equipped with regular armour and they were struck by a dazzling crimson rain of beams. Shields winked-out in a split-second before that deadly fusillade, the red columns of energy then slashed through armour plating, leaving glowing holes as the beams carved through the stricken vessels. The Ashanath were well-coordinated and split their fire evenly between their targets, striking the grey and purple Drakkar ships in a score of different locations. One by one they exploded, skewered by the deadly incoming laser beams.",
        "The Drakkar's answering shots were poorly aimed and inaccurate at such long range, the purple coloured beam lasers from the cruisers at the forefront of their charge largely missing their targets. A few struck home on one of the larger Ashanath saucers, but the extensive shield banks barely flickered at the impact. However, as more of the Drakkar ships approached to within range, the volume of purple beams intensified, slashing through the Ashanath lines and taking a greater toll. \n\nJohn and the girls watched in silence as the lead elements of that reckless charge closed on the Ashanath formations, the black-hulled cruisers at their forefront striking with impunity. Drakkar cruisers were equipped with an abundance of retro-thrusters to aid with manoeuvrability, which allowed them to stack sixteen Beam Lasers in the front arc. Those cruisers focused on the picket line of Ashanath destroyers, blasting one small disc-shaped ship after another with massed banks of purple beams. \n\nBoth sides fully engaged, with the slower-moving Drakkar battleships finally able to bring their long-range beam weapons to bear. Sizzling purple and red lances of energy scythed between the opposing armadas, forming a spectacular display of light as the two forces blazed away at each other. While the crossfire might have appeared as a beautiful tapestry of rich colours on the holographic map, the spectators knew how terrifying it must feel to be on the receiving end of those devastating salvos. \n\nAs if to emphasise the point, \"The Defiler\" bore down on one of the unsuspecting Ashanath battleships, scores of weapons focused on their prey. It unloaded with a ferocious barrage of beam laser fire, which was immediately followed by a storm of missiles launched from the racks atop the gigantic Drakkar dreadnought. \n\nThe powerful shield protecting the Ashanath capital ship was struck in scores of locations, sending rippling purple waves over the shimmering surface. Although the battleship's shields were strong, it still wasn't capable of withstanding such overwhelming damage. The protective field collapsed with a flicker, leaving the silver disc critically vulnerable. Some of the beams went on to carve into the thick silver armour, but the real threat was from the swarm of missiles that swept in afterwards. \n\nThe battleship opened up with its grid of laser point-defence weapons, but even with the supporting destroyers assisting where they could, they only managed to take down less than half of the incoming missiles. There was a rippling wave of explosions across the broad topdeck of the battleship, detonations blowing apart armour plates and leaving thirty-metre wide craters in the pockmarked surface of its hull. When the last of the missiles had struck the saucer, the battleship was left a ragged ruin, every square metre of the upper surface a blackened mess or a charred crater. The starboard power relays had been destroyed in that salvo, along with all the weapons on the topdeck, and the battleship listed helplessly to one side, all the lights on one half of the ship having gone dark.\n\nThe Drakkar battleships escorting the dreadnought now opened fire too, but this time the mortally wounded Ashanath vessel had no shields or armour plating to protect it. Throbbing purple beams carved through the superstructure, burning glowing canyons straight through the stricken battleship. Not known for their mercy, the Drakkar continued hitting the wreck with one beam salvo after another, until one of the shots slashed through a power core and triggered a reactor breach. The Ashanath battleship ripped itself apart in a massive explosion, leaving behind a huge field of debris where the imposing silver spacecraft had once stood.\n\n***\n\n\"Dropping out of hyper-warp in five seconds,\" Alyssa said quietly, but her voice sounded loud in the numbed silence of the Bridge.\n\nThe Invictus surged into the Ashana system in a blue cloud of Tachyon particles, the field dissipating harmlessly into space as the ship left hyper-warp. As soon as the seven-hundred-and-fifty metre battlecruiser appeared, its six Trankaran engines powered up to full, with Alyssa launching the ship directly towards the intense firefight. At the same time, the bay doors for the Secondary Hangar began to open, just as the Launch Bay doors opened at the bow of the ship.\n\nJade gave them a confident smile as she said, \"Launching the Raptor.\"\n\n\"Yeah!\" Dana whooped, as her glossy white mech blasted clear of the front of the Invictus, two bright orange flares from the orbital rocket pack launching it clear. They could all see her excited grin through the clear-crystal faceplate of her Paragon armour as she added, \"Valkyrie ready to kick some ass!\"\n\nJohn had been carefully watching the unfolding battle and he said to them both, \"A group of six cruisers has broken away from the main Drakkar force and is going after the Ashanath carriers. I want you two to intercept them. You should be able to cut the Drakkar off before they can start their attack.\"\n\nJade banked the Raptor and nodded, saying, \"Moving to intercept.\"\n\n\"Leave some for me!\" Dana said with a sparkle in her eyes, the slower-moving mech adjusting course to follow the gunship.\n\n\"We'll be in Nova Lance range of the closest Drakkar battleship in two minutes, fourteen seconds,\" Alyssa declared, gazing up at the extremely long fire arcs that stretched away from the Invictus on the overhead map.\n\nCalara's fingers darted across her Tactical Console as she informed them, \"Beginning the ignition sequence for the Singularity Generator.\"\n\nSakura grimaced as another Ashanath battleship was blown to pieces, and she muttered, \"The Greys are being decimated!\"\n\nJohn nodded, his face bleak as he watched the Drakkar armada surging into short range with the Ashanath. The accuracy of fire for both sides increased at such close quarters, which only intensified the terrible damage the Drakkar ships were inflicting on the Ashanath. Darkened wrecks of silver discs littered the otherwise neat formations, the glowing lights around the rim of each vessel having been extinguished just like the lives of the poor Greys within.\n\nSuddenly Jade gasped, drawing all eyes to her holographic image. Her cat-like eyes were open wide with shock and she exclaimed, \"John! Look at the planet, something's taking off!\"\n\nJohn turned to look at the Ashanath homeworld and he gaped at the titanic ship that was clearing the upper atmosphere of Ashana. \"What the fuck is that?!\" he swore, staring aghast at the immense black and silver behemoth.\n\n***\n\n*Initiating power scaling, generators charging,* Councillor Rathus stated, his mind working in harmony with his team of engineers as they worked frantically aboard the Legacy.\n\nIn the Astral Conclave, the Ashanath High Councillors stood in a circle around a psychic projection of their forces, the silver discs clashing with the brutal Drakkar fleet at close range. The telepathic command network rippled with painful echoes as more Ashanath ship Captains were slain, their vessels torn apart by the Drakkar. The High Council flinched with each psychic convulsion, sharing the fleeting moments of agony before those brave souls were gone forever. \n\n*We must hurry,* Councilor Talari pleaded, his astral projection showing his distress. *Our fleet is suffering terrible losses!*\n\nRathus remained impassive, his mind totally absorbed with the coordination of the engineers under his command. *Targeting grid activated, Quantum Flux Cannon ready to fire on your mark,* he advised them, huge black eyes staring unfocused ahead of him.\n\n*Target selected for obliteration,* Senior Councillor Ularean stated, the foremost black-armoured battleship now highlighted in a bright red hexagon. Turning to Rathus, his voice was firm as he ordered, *Open fire!*\n\n***\n\nBuilt into the silver bow of the ancient vessel, the long barrel of the Quantum Flux Cannon began to throb with energy, purple lightning crackling along its length. It had not been fired in ten-thousand years, but the ageless black metal was still just as pristine as the day it had been forged. The power surged to a crescendo and a long beam of eerie purple energy shot through the battle lines, seeking out a massive Drakkar battleship. The vessel's shields quivered as though in fear when the targeting beam locked on, that thin stream of light blazing brightly a moment later as six purple bolts blasted towards the target. \n\nThe first two bolts vaporised the shield in the space of a second, the third and fourth then striking only glancing blows, but still tearing hundred-metre-long gouges down the battleship's hull. The fifth smashed directly into the prow of the Drakkar vessel, hurling it backwards with the impact and carving through the armour like it was made of tissue paper. It bored a broad channel through the ship, ploughing through everything in its path. The final bolt followed the same trajectory as the first, coring deeper through the vessel and ripping through weapon magazines and setting off internal explosions. The black hull of the battleship bulged obscenely as it was rocked by successive detonations, before the Drakkar craft tore itself apart in a storm of debris.\n\n***\n\n*Quantum Flux Cannon recharging, ready for reactivation in twenty seconds,* Councillor Rathus informed them, his previously impassive mask now long gone.\n\nThe High Council stared at the psychic projection of the battle, all their faces filled with grim resolve as they observed a temporary lull in combat. The exchanges of beam laser fire between both sides came to a halt and it seemed every ship in the system was now frozen in stunned disbelief.\n\n*Target selected for obliteration,* Senior Councillor Ularean stated, a second black-armoured battleship now marked as the other had been...\n\n***\n\n\"Holy fuck!\" Alyssa blurted out, voicing what they were all thinking. \"They've got a Progenitor ship!\"\n\n\"I knew they were hiding something important!\" Calara exclaimed, staring at the enormous ship in wonder. \"All those planetary defence lasers weren't there just to protect stone tablets!\"\n\nShaking his head in astonishment, John exclaimed, \"I can't believe they kept that a secret for all this time! No wonder they were so jittery when we turned up on Ashana last time.\"\n\nThey all recognised the sinister-looking profile of the Ashanath's Progenitor ship, with its angular superstructure giving it an evil, menacing appearance. However, after seeing Dana's detailed schematic of a Progenitor vessel, it was obvious there was something not quite right about this ship - aside from the fact that a significant bulk of its hull was silver rather than black.\n\n\"It doesn't look right,\" Dana stated, a frown on her face. \"When they rebuilt the thing, they fucked the design up somehow!\"\n\n\"It's still lethal though!\" Calara gasped, brown eyes staring at the System Map in awe. \"Whatever that weapon is, it tore that battleship to-\"\n\nThe Latina didn't get to finish her sentence as another beam shot out from the Legacy and locked on to another black-hulled battleship. There was a bright series of pulses that lit up the map, and three seconds later they were watching the once-mighty Drakkar warship tearing itself apart with a reactor breach. \n\nJohn whirled around to look at Rachel and exclaimed, \"Put me through to the High Council!\"\n\n***\n\nGrand Overlord Vekrok stared in horror at the Ashanath super-weapon as it eviscerated a second of his battleships, blowing it apart with contemptuous ease. The rest of the Drakkar on the Bridge were petrified by the display of raw power and sat there in stunned silence. Vekrok recovered first and he lurched from his broken throne, before slapping a burly hand down on the interface panel on his command table. Images of the Captains of his shocked retinue sprang to life in front of him and he roared, \"Keep killing their battleships! Leave that big fucker to me!\"\n\n\"You want to go closer to that pod-burster?!\" Grukig quailed, bulging eyes staring at his Commander in terror.\n\n\"You dare question me?!\" Vekrok raged, cuffing his fearful second-in-command over the head and sending him flying. He then pointed an armoured finger at his Helmsman and growled, \"After them! Full speed ahead!\"\n\nThe Drakkar at the Helmsman's station knew his life depended on following Vekrok's orders to the letter, so despite his fear, he grabbed the throttle control and rammed it forward. The Defiler's enormous engines blazed with power, the colossal Drakkar flagship gaining speed as it left the six escorting battleships behind. Those ships opened fire again, purple beams slashing into an Ashanath battleship and carving it to pieces with glowing rents in its hull. That prompted the rest of the vessels to commence battle once more and the Defiler plunged through the chaotic close-range fighting that raged all around it.\n\nThe Legacy opened fire a third time and Vekrok winced as Overlord Glunigruk's ship was raked by a barrage of those blistering purple bolts. The Ashanath caught the battleship mid-turn, and after knocking out its shields, the remaining four bolts slammed into the black-hulled ship, effortlessly skewering it through and sending it crashing backwards with the impact. One of the bolts from the Quantum Flux Cannon even ploughed on and struck an unlucky Drakkar cruiser, which had been trying to evade Glunigruk's turning ship. The formidable power of that impact punched straight through the cruiser's shields, leaving a massive crater in the shattered starboard flank of the ship.\n\nVekrok cared little for his ally's fate, simply glad that it was Glunigruk's battleship that had been struck instead of the Defiler. His dreadnought rammed an Ashanath cruiser and smashed it aside as they barged through the battle formations, the disc sheared in half by the impact and spinning apart in two lifeless pieces. Vekrok had been counting down the seconds between shots from the Ashanath's secret weapon and he knew he still had a few seconds left before it could fire again. \n\n\"OPEN FIRE!\" he roared at the top of his lungs. \"FIRE EVERYTHING!\"\n\nHis tactical officers hurried to obey his orders, aiming every weapon aboard the monstrous dreadnought at the terrifying silver and black Ashanath ship.\n\n***\n\n*We are being hailed by JohnBlake,* Councillor Talari announced, tearing his eyes from the battle map to look at Ularean. *How should we respond?*\n\n*We have been hit!* Councillor Rathus suddenly blurted out, fear bleeding through his telepathic voice. \n\nStaring at the gigantic Drakkar flagship that was breaking through the lines to strike at them, Ularean watched as nearly one-hundred Beam Lasers slashed across the Legacy's shields. Despite the terrifying firepower unloaded on their ship, the Legacy's shields managed to stay strong, dozens of enormous shield generators defiantly holding firm against that onslaught. With their shields still intact, the incoming hail of massive calibre shells bounced away harmlessly, ringing the ship with a halo of fire as the explosives in those shells detonated.\n\n*Target selected for obliteration,* Senior Councillor Ularean stated, placing his hexagonal telepathic mark on the incoming dreadnought.\n\n***\n\n\"They aren't responding!\" Rachel said urgently, turning in her chair to stare at John. She glanced at the Legacy and added, \"Do you think they're on that ship?\"\n\nHe watched as the Ashanath Progenitor vessel turned to face the incoming Drakkar flagship, painting the front of the vast dreadnought with a purple beam. \"If they are, I suppose they're a bit busy at the moment,\" he noted wryly, nodding to her in gratitude.\n\nA moment later the map flashed purple as the Quantum Flux Cannon opened fire again, those searing bolts slamming into the dreadnought's shields. The curved surface bowed inwards with the impact, concussive ripples just starting to spread when the fourth bolt caved the shields in completely. With that defensive field stripped away, the last two bolts were free to gouge huge holes into the dreadnought's hull, penetrating deep into the front of the vessel. The ancient cannon wasn't the only weapon in the Legacy's arsenal though and banks of red laser beams carved into the shuddering dreadnought, the Defiler dramatically slowed by the brace of unstoppable shots to its prow. \n\nSakura shook her head in wonder and said, \"With that ship on our side, the Drakkar don't stand a chance!\"\n\nAlyssa could only nod her agreement as she said, \"John, shall we help finish them off? We'll be in range in thirty seconds.\"\n\nShaking his head, he grinned at her in relief and replied, \"The Ashanath have got this - it'll be good for their morale if they take out the opposing flagship. We'll hit that group of six black battleships instead.\"\n\n\"I'll hack that one on the right,\" Irillith noted, highlighting a Drakkar vessel that was savaging a crippled Ashanath battleship at point-blank range.\n\nIn the meantime, the Legacy and the Defiler were preparing to fire on each other once again and the space between them lit up with a latticework of purple and red beams. The Drakkar struck first, its beam arrays finally taking out the Legacy's shields, just in time for a vicious hail of explosive shells to slam into the Progenitor ship's armour plating. The Ashanath had constructed the huge ship with multiple layers of silver armour and even though the blistering shellfire gave the Legacy a brutal pounding, when the clouds of debris cleared, the armour was still intact. \n\nThat was when the Ashanath fired the Quantum Flux Cannon again, six bolts slamming into the Drakkar dreadnought, one after the other. The damage they inflicted was terrifying to behold, coring through the Defiler and shearing off over half the topdeck in a series of detonations that set off one of the magazines. More explosions rocked the devastated vessel, with large sections of it going dark as Power Relays were destroyed. It still remained intact, but was left a gutted shell of its former terrifying presence on the battlefield.\n\nJohn grinned at Rachel and said, \"Try hailing them agai-\"\n\nCalara cut him off, gasping, \"The Drakkar launched torpedoes!\"\n\nThey looked on in horror as the Legacy fired its Beam Lasers at the incoming heavy warheads, blazing away in an act of pure desperation. The Ashanath gunners were not a patch on Calara though, and the beams of red light sailed high or low, the weapons too slow and inaccurate to target the fast moving and relatively tiny torpedoes. The point defence grid was weak and ineffective on the rebuilt Progenitor vessel, leaving it terribly vulnerable to just this sort of attack.\n\nA dozen torpedoes slammed into the Legacy, tearing savage chunks from the prow of the doomed ship and obscuring it from sight with the sheer scale of the explosions. One after another the torpedoes punched into the silver vessel and when the Legacy was finally visible again, the onlookers could only gape at the terrible ruin that was left behind. The entire front third of the Legacy had been completely ripped apart, leaving a forlorn tattered wreck in its stead.\n\nJohn watched spellbound as the two interstellar behemoths tore each other apart, both now lying still, having destroyed one another with their final defiant acts of vengeance. \"Jesus...\" he breathed, shaking his head at the calamity he'd just witnessed. \n\n\"Were Councillor Talari and the rest of the High Council on that ship?\" Alyssa asked, shooting John a worried frown.\n\n\"I hope not,\" John replied, staring at the broken remains of the Progenitor vessel.\n\nRachel looked grim as she replied, \"I'll keep trying to contact them.\"\n\nHe nodded to her in gratitude, then shared a tense glance with Calara, saying, \"It looks like we're not out of the woods yet, Commander.\"\n\nThe Invictus raced past the two fallen titans as it bore down on the jubilant Drakkar fleet, who were celebrating ecstatically now that the Ashanath's battleship-busting super-weapon had been destroyed. Unfortunately for the four-armed aliens, they had no idea what new nightmare was about to be set loose on their forces.",
        "***\n\nWarboss Magaruk guffawed as his cruiser sailed unopposed through the Ashanath lines, shooting with careless abandon at the the circular ships. \"The little runts are too scared to even fight!\" he chortled with glee.\n\nHis crew cackled along with him and the sound of their hacking, braying laughter filled the Bridge with a horrible cacophony. They blasted an Ashanath destroyer as they charged past one of the silver battleships, raking the smaller vessel with purple beams and slicing it into three glowing pieces. Normally being in the vanguard of any assault meant a swift but glorious end, but today it seemed they'd be able to meander through the Ashanath lines and take their pick of enemies. Magaruk had been delighted to have his ship upgraded with the Dark One's armour, but at this rate it wasn't even going to get a scratch.\n\n\"What's the plan now that Vekrok's dead?\" his engineer asked curiously, referring to the shocking sight of the supposedly unstoppable dreadnought getting shot to bits.\n\n\"Nothing changes,\" Warboss Magaruk replied with a fang-filled grin. \"We wreck every ship the Greys have got, then take our time getting fat from gorging ourselves on their homeworld!\"\n\nThe crew cheered at that, salivating at the thought of munching on tasty Grey flesh.\n\n***\n\nLeader Linnaeus sat stunned in his chair as he felt the psychic aftershock of the High Council being torn from the telepathic command web. He lifted a trembling hand to his temple and did his best to quell his rising sense of dread.\n\n*Our shields are down to twenty-four percent!* Engineer Batiri exclaimed in a panic, as their cruiser was flayed by half-a-dozen purple beams.\n\nNavigator Cadimus continued his wild evasive manoeuvres, desperately attempting to rotate towards the back of their cruiser formation. Despite his best efforts to escape from the black Drakkar cruiser which had fired upon them, they had already been struck multiple times.\n\n*Leader Linnaeus, we must fire back on that black cruiser!* Tactical Officer Pallari pleaded. *We will not last for much longer otherwise!*\n\n*Maintain fire on the grey-hulled vessels,* Leader Linnaeus replied distractedly. *We must follow our orders.*\n\nThe worried Tactical Officer shared an unblinking look with Engineer Batiri but they did as Linnaeus commanded, focusing on their stations. Their silver disc ignored its pursuer and added its red beams to that of the other cruisers in the formation, pouring fire into one of the grey-hulled Drakkar battleships which had closed within range. The combined weight of fire knocked out its shields, but there was no celebrating for the Ashanath aboard Linnaeus ship.\n\nThey were hit by another volley of beams from the Drakkar cruiser snapping at their heels, the pulsating columns of energy carving glowing lines through their scorched hull. Rocked by the impact, the crew clung to their chairs as warning klaxons sounded off throughout the Bridge.\n\n***\n\nJade narrowed her eyes as she aimed the Raptor's shoulder-mounted Photon Lasers at the closest of the Drakkar cruisers. Jinking the gunship to starboard, her targeting reticle was placed squarely over the hull on the first of the six cruisers, when her thumb pressed down on the firing button. A stream of pulsed beams lashed into the flank of the Drakkar vessel, the shots lancing out in three long separate pulses. Her face lit up with a broad grin as the last pair of bolts overloaded their shields and went on to strike the armoured hull itself, using the last of their strength to melt five-metre-long troughs in the port flank of the cruiser.\n\nA red icon flashed next to her weapon loadout display, signifying that the heatsinks were rapidly venting excess heat and the Photon Lasers would be unable to fire for ten seconds. Her left hand had pushed the throttle to the maximum and at the incredible speed she was travelling, she closed the distance to medium range in just over three seconds. \n\nThe optical targeting system followed her retinas as Jade marked the point on the engines she was aiming at, the auto-tracking turrets pivoting to follow her line of sight. Holding her finger down on the trigger, the six Pulse Cannons fired a cascade of blue laser bolts at the Drakkar, with barely a second's pause between each three-round-burst. The torrent of laser fire hammered into the rear of the ship as she strafed her shots over the engines, with well-placed weapon fire burning through the armour and scorching the engine itself. She spotted a number of satisfying secondary explosions and the cruiser began to slow down as she destroyed half of its propulsion systems, scattering a trail of melted armour plating in its wake.\n\n\"You can finish that one,\" Jade said kindly to Dana's holographic image. \"I've slowed it down a bit to let you catch up.\"\n\n\"Hey! I don't need your castoffs!\" the redhead protested, frowning at the Nymph's well-meaning gift.\n\nJade shrugged and said placatingly, \"I'm just trying to stop them from reaching the carriers. I'll keep disabling the others so you can destroy them with your quad-mounted guns. By the way, you'll love the Photon Lasers, they're amazing!\"\n\nDana blushed, realising the Nymph was just trying to protect the Ashanath and said contritely, \"Sorry Jade, I was being a dick.\"\n\nJade winked in return, a broad smile on her face as she replied, \"Don't worry, I still love you!\" \n\nRolling the Raptor and pulling back on the stick, the Nymph swung the nose of the gunship around to point at the next Drakkar cruiser. A quick glance at the weapon loadout showed that the Photon Lasers had cooled, so this time she lined up her first shot on the engines before showering the Drakkar cruiser in rapidly-pulsed beams. Just as before, the twin weapons were potent enough to burn through the cruiser's shields, the final shots slicing into the central engine and causing it to vent a black spume of debris.\n\nDana watched in frustration as her Mech trundled along, still thirty seconds away from the Nymph who was joyfully hobbling the Drakkar ships. In fairness, the Valkyrie was still moving faster than the Invictus, but compared to the Raptor, it felt like she was swimming through treacle. \"I'm gonna need bigger engines,\" she grumbled to herself, tightening her grip on the weapon controls as she aimed her targeting crosshair right in the centre of the Drakkar ship.\n\nShe was fairly certain their power core was roughly located in that area, but she was also well aware that Calara's infallible marksmanship made ship-to-ship combat seem trivially easy. Dana knew that shooting out specific ship components was actually extremely difficult and certainly much harder than the Latina made it look. As she watched the floundering Drakkar cruiser, the redhead mused that perhaps shooting at crippled Drakkar ships might not be that hard after all.\n\nHolding her breath in anticipation, she gently squeezed the triggers on both joysticks and the quad-mounted Photon Lasers lost their combat cherry in a glorious pulsing surge of light. All twelve laser bolts struck home, burning huge rents in the Drakkar's steel-plated hull and disembowelling the cruiser as they scythed through the superstructure. The front section was shoved aside as the rear section tumbled onwards, the remaining engines still providing feeble amounts of thrust to the hapless wreck.\n\nDana let out a happy sigh of contentment, then grinned at Jade as she said, \"Now that was fucking awesome!\"\n\n\"Do you remember how terrifying these ships were, the first time we fought them?\" Jade mused, as her pulse cannons hamstrung the second Drakkar cruiser by shooting out the rest of its engines.\n\nDana laughed and replied, \"Now it's our turn to be the badasses!\" She pivoted the Valkyrie around, heading towards the next cruiser that Jade had immobilised and added, \"These evil-fuckers must be shitting themselves!\"\n\nRealising the mortal danger that they were now facing, the remaining four Drakkar cruiser Captains were indeed doing exactly that. With their curious anatomy consisting of two of everything, being downwind of a terrified Drakkar was not a good place to be. \n\nHalting their charge towards the Ashanath carriers, the angular Drakkar cruisers began to bank around, adjusting their course at a rate that seemed implausible in such bulky vessels. Each of the ships was armed with sixteen front-mounted Beam Lasers and as soon as they managed to swing their fire-arcs around to overlap the Raptor, the four ships opened fire. Performing a lazy roll, the gunship avoided all but three of the sixty-four hastily fired beams, but they still struck with enough power to overwhelm the Raptor's limited shielding.\n\n\"Jade!\" Dana cried out to the Nymph, her heart in her mouth as she stared at the gunship. She could only watch helplessly as it was enveloped in virulent purple beams and masked from sight.\n\nJade's holographic face beamed a gleaming white smile at her as she said soothingly, \"I'm fine, don't worry. Athena reshaped the armour plating so much, the Raptor's immune to laser fire, remember?\"\n\nDana nodded in relief, then murmured to herself, \"Get Athena to make the Valkyrie immune to laser weapons...\" \n\nAfter adding yet another upgrade to her mental checklist, she squeezed the trigger to shoot her Photon Lasers and watched the burst of laser fire strafe through the stationary cruiser. The Drakkar ship was torn to pieces in a remorseless hail of blueish-white beams, the subsequent reactor breach attempting to compete for the most blinding flash of light. Dana watched the Raptor take out the shields on a third cruiser, and wondered exactly how she was going to get Alyssa mad enough to let Athena take over again.\n\n***\n\nAlyssa rolled her eyes and smirked as she listened to her friend's good-natured scheming. The smile soon dropped off her face as she concentrated on keeping the Invictus steady for Calara, who was carefully lining up a shot with the Nova Lances. They were firing at extreme range - triple that of a normal Beam Laser - and with the dense mass of ships involved in that sprawling melee, the Latina didn't want to take any chances. Seconds ticked by as the Invictus cut through space at tremendous speed, rapidly closing on the Drakkar forces.\n\nDarting a look at the brunette, Alyssa asked playfully, \"Are you planning to wait until we're at point-blank range?\"\n\n\"Hold on a few more seconds, just letting an Ashanath cruiser clear the shot...\" Calara murmured, her hands grasping the weapon controls with a steely grip.\n\n\"That battleship on the left is clear, why not just take that out?\" John suggested, wondering exactly what the Latina was up to.\n\nWith her hawk-like gaze noting the destruction of each and every spacecraft, along with the accompanying shift of the battle lines, Calara finally called out, \"Firing Nova Lances!\"\n\nShe squeezed the trigger, unleashing the dreadful power of the two throbbing spheres of blinding white light that had coalesced before the prow. Those pulsating orbs flared even brighter as they were channelled into an incandescent column of energy, the huge beam dissecting the lines of battle and striking a Drakkar battleship in the prow. Its shields were disintegrated in an instant, but astonishingly, Calara seemed to have missed her target! That terrible beam of destruction arced downwards instead of being swept across the length of the battleship.\n\n\"You missed!\" John exclaimed, gaping at the Latina in shock. \n\nCalara didn't respond. Her face was set into a mask of intense concentration, hands deftly moving the weapon controls down and to the left.\n\nLooking up at the Tactical Map John started to ask, \"What're you doi-\" until his mouth fell open in stunned amazement. \n\nHe had turned back just in time to see the Nova Lance beam wink out of existence, having maintained its continuous throbbing deathray for several seconds. Instead of just disintegrating a single battleship in a gratuitous display of overkill, Calara had clipped the first to knock out its shields, then strafed the beam across a second, neatly dissecting it amidships. In the final seconds before the beam dispersed, she'd guided it into a third black-hulled battleship, its deadly caress stripping that vessel of shields as well. \n\n\"That was a beautiful shot, gorgeous,\" Alyssa said with a grin, knowing full-well what the supernaturally accurate gunner had been planning.\n\nCalara turned in her chair to smile at John and explained, \"We needed their shields down to leave them vulnerable for the Singularity Driver.\"\n\n\"Speaking of which,\" Alyssa said with a fierce grin, \"we've been waiting weeks to properly unload this monster. I think we've had more than enough foreplay!\" \n\nInside the Singularity Generator, the spherical lattice of Tyrenium rotated at immense speed as vast gravitic forces struggled to contain the power of the miniature black hole bound at its centre. Ammunition feeds went to work to line up the weapon's compact rounds, each poised and waiting to be launched into the chamber and accelerated down the pair of four-hundred-metre-long barrels.\n\nAlyssa lined up the prow of the Invictus with the first of the black battleships, the huge muzzles of the Singularity Drivers now pointing directly at the Drakkar's glossy onyx hull. Holding her breath with anticipation, she squeezed the new trigger that Dana had built into the Pilot's flightstick and then watched in awe as the weapons went to work.\n\nThe first slug rocketed out of the Singularity Driver barrel, accelerated to immense speed by the magnitude of the forces involved. It slammed into the bow of the Drakkar battleship with a thunderous detonation that left the vessel trembling, a huge cracked crater marring the black armour plating with concentric rings rippling out from the point of impact. The debris hadn't had time to clear before the projectile from the other barrel crashed into the hull a second later, the incredible force of that strike on the already-weakened spot tearing a huge chunk from the front of the ship. Shattered armour plating was ripped off the craft in brittle ribbons, purple banding blown clear along with the remnants of the fore shield generators. \n\nInside the ship, terrified Drakkar were knocked off their feet as the battleship was violently buffeted by one slug after another. The Invictus sent an unrelenting stream of fire into the vessel and with the armour plating irreparably smashed, each concussive blast tore deeper into the ship, tearing it apart a piece at a time. One section after another was depressurised as it was shredded by explosions, with flailing Drakkar crew sucked out into space through those breaches in each deck. The inner substructure was weaker than the sturdy outer-hull and the destruction progressively worsened as the Singularity Driver rounds pounded into the ship. The explosion from each strike was echoed by secondary blasts as missiles or ammunition stores betrayed their own vessel, adding to the catastrophic damage it was sustaining. \n\nAlyssa took thirteen seconds with her volley of shots to systematically demolish the Drakkar warship, leaving it a hollowed-out hulk by the time she was done with it. That area of space was left awash with debris, a storm of jagged shards of metal sent spinning away to strike nearby ships. \n\nShe beamed at John and said, \"I fucking love this gun!\" Her cerulean eyes sparkled and sounding eager, she added, \"Now for the next battleship!\"\n\nCalara frowned disapprovingly though and said, \"Ripping them apart from prow to stern might be fun but it's not very efficient. Start aiming for their power cores, you'll either destroy them instantly or turn them into lifeless derelicts.\" \n\nAlyssa nodded as she recalled their ill-fated jaunt into Overlord Okug's battleship and the location of the Power Core room, positioned towards the aft and centre of the bulky ship. Calara had already neatly dissected the second battleship by burning a hundred-metre-wide incision through its middle, so she skipped that wreck and focused on the third vessel. Pushing forward on her flightstick, the Invictus' prow tilted downwards until she was squarely lined up with the next Drakkar battleship. It was flagged red on her targeting display, indicating that it currently had no shields.\n\nThe beautiful blonde was oblivious to Warboss Gixukeg's frantic efforts to rally his quaking crew. However, she could see the battleship desperately attempting to turn in an effort to hide behind a heavily damaged Ashanath saucer, intending to use the ravaged silver disc as cover. It was a good plan, but Gixukeg hadn't taken into account the Invictus' impressive manoeuvrability. Alyssa simply rolled the ship to starboard and pulled back on the flightstick, clearing the rim of the Ashanath saucer faster than the Drakkar could conceal themselves behind it. She eventually rotated the battlecruiser through one-hundred-and-eighty degrees and pulled up the nose, not only having cleared her line of sight but also lined the Invictus up with the rear of the evading vessel. \n\nWhen Alyssa clamped down on the trigger with a slender finger, ammunition was pumped into the Singularity Driver then blasted out the long barrels, following a regular second-long tempo. The rippling explosions to the rear of the huge Drakkar vessel marked out that beat and Alyssa began battering the battleship from the stern this time. It took six hyper-accelerated slugs to punch through all the armour and excavate the rear of the black warship, before lucky number seven tore through that ragged wound, striking the power core chamber. The Drakkar technicians were slain instantly and the blast ruptured the power core, initiating a critical meltdown in the reactor.\n\n\"Nice shooting, honey!\" John exclaimed, astonished at how fast they were ripping through the Drakkar battleships.\n\nNodding her approval, Calara watched as bright shards of energy speared through the buckling hull in a dozen places until a colossal explosion annihilated the mangled battleship. \"Now bring us in closer while the Nova Lances recharge, I'd like to field-test the Heavy Cannons.\"\n\n\"Whatever you say, Commander,\" Alyssa said, with a playful smile on her face. She rotated and lifted the prow of their battlecruiser, pointing towards the remaining group of three battleships that had formed the dreadnought's escort.\n\n\"Get ready,\" John warned Irillith, making eye contact with her.\n\nShe smiled at him confidently. \"I'll take the one at the back, it's lined up nicely.\" \n\nThe Invictus roared through the battle lines, retro-thrusters flaring a bright orange along the length of its hull as Alyssa swept under a burning Ashanath battleship. She pulled up to rush past a group of three black Drakkar cruisers that were harrying a formation of six disc-shaped cruisers, two of which had already been mauled by purple Beam Laser fire. \n\n\"Faye, take the one on the right,\" Calara ordered firmly, pulling the trigger and firing the Beam Lasers on the Invictus' underbelly. The Latina aimed four sizzling azure beams at each of the two Drakkar ships she'd targeted, their shields collapsing as they were overwhelmed by the throbbing columns of energy.\n\n\"Will do, Commander!\" Faye replied, a serious expression on her purple-hued face. \n\nAiming at the marauding Drakkar cruiser allocated to her with thirty-two Pulse Cannons, Faye immediately opened fire. A solid sheet of blue laser bolts rained down on the unsuspecting black warship, causing the shields to convulse as it was struck by nearly one-hundred bolts with that preliminary burst alone. The shimmering field couldn't withstand that level of abuse and it failed abruptly, letting the blue bolts strike the glossy-black hull. Capacitors built into that onyx surface harmlessly absorbed the rest of her fire though, leaving the Drakkar cruiser completely unscathed.\n",
        "\"Alright, time to see what the Gauss Cannons can do,\" Calara said, sharing a smile with the purple sprite.\n\nSplitting her fire between the three cruisers, Calara opened up with the Gauss Cannon batteries that were built into the underbelly of the Invictus. Magnetic coils accelerated shells along ten-metre barrels, the Gauss Cannons trembling as they fired their opening barrage. Each shell casing was forged using Maliri crystal, which was much harder than the steel alloy protecting the Drakkar ships, allowing the rounds to easily penetrate the cruisers' tough hides. Piercing through the black armour plating, sensors in the shells detected the difference in resistance the microsecond that the ordnance plunged into the hull beneath. Each shell then detonated, the explosive force designed to radiate outwards, rather than forwards into the ship beneath. \n\nThe black-armoured surface of the three cruisers seemed to ripple unhealthily with those blasts, bubbling outwards with each point of impact. The precisely-shaped detonations tore thirty-metre holes in the protective plating and Calara continued to rake the Drakkar hulls with Gauss Cannon shells, firing a new salvo every five seconds. The kinetic rounds battered the ships with a ceaseless deadly rhythm, the sounds like a giant's hammer to the terrified Drakkar within. By the time the three cruisers had left her fire arcs, their hulls were a tattered patchwork, broad sections entirely denuded of armour, with the unarmoured hull lying exposed beneath.\n\nSeeing the black armour torn to ribbons, the Ashanath cruisers fell upon their Drakkar tormentors, firing back now that they were vulnerable. The four remaining silver discs sent searing red beams into their tattered enemies, melting through decks with impunity and scything deep into the unprotected hulls. One by one the three Drakkar cruisers were carved into glowing chunks, ripped to pieces by the Ashanath as they avenged their fallen comrades.\n\n***\n\nWith his mind still engaged with the telepathic firing interface, Tactical Officer Pallari's voice sounded distant as he informed his fellow officers, *That is the last of the Drakkar cruiser wing destroyed.*\n\n*Very good,* Leader Linnaeus said with no small degree of relief. His vessel had been on the verge of destruction when JohnBlake had intervened to save them. Glancing at his Engineering Officer, he added, *Damage status, Batiri?*\n\n*Our shields are back up to thirteen percent,* Engineer Batiri stated tersely.\n\n*What of the hull breaches?* Leader Linnaeus inquired. *Have we resealed the ruptured disc sections?*\n\nBatiri blinked rapidly as she replied, *We have force fields in place to maintain atmospheric pressure in sections twenty-seven through to twenty-nine.*\n\n*Do we continue to hold position?* Navigator Cadimus asked, his voice trembling with fear. *We cannot survive another volley like that!*\n\n*We have no choice, we must defend Ashana,* Leader Linnaeus stated, trying to sound brave and confident.\n\nHowever, Linnaeus knew just how precarious their situation was. He had not yet informed them of the tragedy that had befallen the High Council, but he had felt the sharp stab of pain as their thought cluster was torn from the telepathic command web. That network was now rife with fear, the sense of terror at the scale of the impending disaster growing with every Captain's death.\n\n***\n\nGrand Overlord Vekrok coughed as he picked himself up off the floor, the Bridge thick with smoke. Peering out into the gloom, he saw more of his crew staggering upright, the red emergency lighting casting a blood-red pall over the scene of devastation. Flames flickered from wrecked, shorted-out consoles, casting cavorting shadows over the terrible scenes of carnage. \n\nSpotting Grukig's armoured form on the ground, Vekrok lurched over to him, hauling him up by the arm. \"Get up you lazy bastard!\" he roared in the dazed Drakkar's lime-green face.\n\nGrukig's bulging eyes struggled to focus for a moment but a cuff to the head quickly brought him around to the brutal reality of his perilous situation. \"What happened?!\" he yelped, fanged jaw quivering in fear.\n\n\"Those little podhumpers cut the Defiler to pieces, that's what fucking happened!\" Vekrok raged, gnashing his rows of teeth together in fury. He squinted at the flickering map that was still focused on the Legacy, the image showing that the remaining two-thirds of that highlighted ship still had power. Eyes narrowing with vicious cunning, Vekrok bellowed, \"Get every last man aboard the dropships! We're going after those fuckers!\"\n\nGrukig tottered briefly, grabbing hold of the Command Table to steady himself. He shot a worried glance at his commander and squawked, \"You want to board them?! Shouldn't we assist in the battle?\"\n\nVekrok's eyes gleamed with a burning hunger as he growled, \"Fuck everyone else; this is much more important! Before I devour the delicious runts commanding that ship, I'm going to wring out all their secrets! Just imagine what I could do with weapons like that! I'd be worshipped as a god; the whole galaxy would be my feasting table!\"\n\nWhirling around, he strode towards the exit, leaving Grukig to stare at him in shock.\n\n***\n\nAs soon as Dana was in range of the remaining four cruisers, she activated the Valkyrie's battle mode. The mech's four limbs unlocked from their fixed position in flight-mode, while the quad mounted Photon Lasers tilted forward to point over the Valkyrie's white-armoured shoulders. Instead of flying head first towards the enemy ships, the mech was now upright, which greatly improved her dodging capabilities and meant she could bring the mech's arm mounted cannon to bear. Her speed was reduced, but with the Drakkar turning to fight before they were systematically butchered, that wasn't as important now.\n\nThe Drakkar cruisers were all focused on the Raptor for the moment, turning in frantic circles as they tried to keep the uncannily nimble gunship within their fire-arcs. Avoiding all four at once was an impossible task and occasionally the Drakkar managed to fire off a brisk salvo of purple beams at the dancing Raptor. Their shots sailed wide though, leaving them oblivious to the fact that Jade's ship was immune to their laser weapons.\n\nPulling an impossibly tight Immelmann that had the G-Force meter screeching in protest, Jade laid into the closest cruiser with bursts from her Photon Lasers. She missed with the last two shots as she pushed the nose further forward to dip under her furious attacker, but she wasn't too worried. As she looped around the cruiser, the auto-tracking turrets plastered the large ship with Pulse Cannon fire, causing the shields to wink out and setting it up for her eager companion to finish off.\n\nDana flipped the weapon grouping over to mech-mode and her two crosshairs changed, no longer depicting the port and starboard pair of Photon Lasers. Now the left reticle represented all of the quad-mounted laser guns, while her right was assigned to the huge rotary cannon that was clutched in the Valkyrie's huge hand. She centred the left crosshair on an as-yet unscathed Drakkar cruiser, impatiently pulling the trigger to get the shot out the way. The fearsomely strong pulsed beams knocked out the cruiser's shields, with her subsequent shots blasting through the armour and causing havoc with the ship's internals.\n\nThe redhead gave the cruiser a cursory glance as it drifted away, the reeling ship left juddering after she chopped a large chunk out of the lower-middle section of the hull. One of her shots had burned out the power relays, leaving the cruiser without any power. However, she was more interested in test-firing the gun strapped to her right arm and she repositioned the crosshair to put it squarely over the shield-less Drakkar vessel that Jade had kindly set up for her.\n\nHer sky-blue eyes sparkled with excitement as she carefully aimed her shot, holding her breath as she gently squeezed the trigger. The Valkyrie trembled as the Punisher Gatling Cannon opened up, the six magnetic rails spinning in a blur as a stream of slugs were hyper-accelerated towards the Drakkar cruiser. Not only was the cannon ten times bigger than the Punisher railguns they used for squad-based support weapons, she'd been able to push even more power into it from the Progenitor Power Core. With the six barrels greatly reducing the heat build-up per individual rail, the weapon was able to hit even harder, without causing critical levels of overheating. \n\nThe slugs chewed through the Drakkar ship like a buzzsaw, each round boring five-metre-wide holes straight through the hull. She ventilated the cruiser with a gleeful cross-stitching across its flank, squeezing off fifty rounds during the couple of seconds she held down the trigger. By blind luck, one of the slugs skewered the Bridge and explosive decompression did the rest.\n\nJade grinned at her when she saw the look of pure delight on Dana's face and said, \"I don't think I need to ask if you're pleased with the Punisher Gatling...\"\n\nDana laughed as she replied, \"The Singularity Driver might be more powerful, but this beast is by far the coolest gun I've ever made!\" \n\nThe Nymph laughed along with her, enjoying seeing her friend look so happy.\n\n***\n\nIrillith had already fallen into a trance by the time the Invictus reached hacking range, her mind soaring through the Invictus' gateway as she stormed the furthest of the three remaining battleships from Vekrok's retinue. The Drakkar's cyber-security was laughable to someone of her ability and she slipped through their firewall in six seconds, granting her unrestricted access to their internal cyber-realm. Grinning to herself, she began sweeping through their dank, grubby network, effortlessly seizing control of one primary subsystem after another. By the time she locked out their Bridge ten seconds later, she owned the entire ship.\n\nCycling through the internal cameras within the battleship, she chuckled to herself as she watched the Drakkar boss and his crew on the bridge. It had started to dawn on them that they'd lost control of all the ship's systems and she could see the fear on their faces as they desperately tried to break through her complete lockdown of the huge warship. Moving on to check the rest of the vessel took the blink of an eye in the Cyber-realm, but one image from the scores of footage she was flicking through made her freeze. \n\nThe ship's complement of Drakkar marines were eating while waiting for the invasion and what they were having for dinner made her blood run cold. On the feasting table was an Ashanath carcass, with several more picked clean and discarded on the floor in a tangle of bloody bones. Past the feasting room she could see a refrigerated pantry of some kind, with scores more dead Greys hung up by their heels on meathooks. From the twisted looks of agony on their normally impassive faces, it was clear they'd still been alive when impaled.\n\nIrillith felt a wave of revulsion at the horrible sight, but that quickly turned into a seething spark of fury. She began opening internal doors throughout every section of the battleship, with confused Drakkar staring at them curiously as the bulky portals clanked up into the ceiling. When she opened all the airlocks a moment later, the Drakkar's looks of confusion were quickly replaced by stark terror as thousands of the malevolent aliens were sucked out into space. Irillith watched with satisfaction as she avenged the Ashanath those monsters had butchered, then brought the battleship about to train its guns on its former comrades.\n\nThe Invictus started firing its Beam Lasers at the closest of the three remaining battleships, just as Irillith used her newly-acquired Drakkar vessel to strike the same target. Blue and purple beams flayed the battleship's shields from fore and aft, quickly overwhelming them in that combined onslaught. \n\nThe Maliri hacker saved her missile-racks for the second battleship and launched an immense swarm of missiles towards the unsuspecting vessel at point-blank range. With no time to react, let alone activate their point-defence, every single missile struck home. The warheads erupted as they ploughed into the stern of the backstabbed battleship, in what appeared to be an unmatched act of treachery to all other combatants viewing the fight. The sheer destruction wreaked by scores of missiles striking the ship was appalling in its ferocity, leaving all the engines destroyed and the rear-fifth of the Drakkar ship utterly ruined. Miraculously, the vessel still had power and was able to turn, but only by using retro-thrusters.\n\nAlyssa brought the Invictus around in a gentle arc and they now pointed directly at the first battleship's port flank. Calara had been preparing to take her next shot the moment this target's shields went down, her twin crosshairs evenly spaced along the centreline of the Drakkar hull. She stabbed both thumbs down on the buttons atop her weapon controls and the forty-metre-long howitzers on the Invictus' topdeck lurched backwards with the recoil as they fired. \n\nThere were six huge turrets on the Invictus' topdeck, with each mounting two of the enormous Heavy cannons. All of those massive guns contributed to that pitiless barrage and a dozen massive shells left long plumes behind them as they thundered towards their target, all striking simultaneously across the length of the exposed battleship. The Drakkar vessel was smashed backwards by the sheer force of that salvo, twelve gigantic craters stitched along its length and mutilating the entire port flank. \n\n\"What happened to aiming for the Power Core?\" John asked, his eyebrow raised as he glanced at the brunette.\n\nCalara grinned at him as she replied, \"Just trying to get a feel for the Heavy Cannons. A live fire exercise against hostile ships is very different to a weapon test on asteroids.\"\n\nAlyssa snorted with laughter and said, \"Yeah, right! You just wanted to have some fun shooting them up!\"\n\nThe Latina blushed but didn't bother attempting to deny the blonde's claim. Instead, she aimed her Beam Lasers at the sundered battleship, getting ready to gut them like a fish.\n\nTashana had watched the escalating battle in stunned silence, finally seeing the crew in action as they revealed the ridiculous levels of firepower at their disposal. She knew they were remarkable people, but to see them effectively neutralise six battleships in under a minute left her reeling. Tearing her eyes from the map, she glanced around the Combat Bridge, her eyes temporarily alighting on her sister, who sat serenely at her station as she gleefully abused her battleship puppet. She glanced up at John and blushed when she realised he'd been watching her gaping in wonder at the girls.\n\n\"Impressive, aren't they?\" he said with a proud smile.\n\nTashana could only nod in awe, not trusting herself to speak.\n\n***\n\n*Ularean, wake up!* Councillor Lirrash urged him, her frantic voice finally penetrating his befuddled subconscious. \n\nHe slowly opened his eyes and found himself lying crumpled against a wall, the cold black floor chilling his face where he lay in a heap. As he tried to sit up, he felt shooting pain in his head, leaving him feeling dizzy and nauseated. Trying to focus, he was suddenly aware that his face felt sticky and when he reached up a grey-skinned hand to wipe away whatever it was, he found his fingers covered with dark-red blood. Ularean always was squeamish and he felt his face grow even colder, a rushing sound in his ears as the room began to spin.\n\n*It is alright, you are not critically injured,* Lirrash continued, her tone soothing now as she placed a hand on his arm.\n\nUlarean didn't attempt to rise again but his eyes swept the room to check on the rest of the High Council. He spotted others lying on the floor being attended to by their colleagues and with his voice rising in panic, he managed to ask, *What happened? Did all our brethren survive?!*\n\n*The Legacy was struck by Drakkar Torpedoes. There have been moderate injuries to High Council members as the result of the catastrophic damage sustained to our vessel,* she replied, turning her head to gaze at the other robed forms that lay sprawled on the floor.\n\nCouncillor Rathus glided over to join them and was distraught as he exclaimed, *Ularean! It's been destroyed!*\n\nWith Lirrash's help Ularean gingerly sat upright and said, *Is the damage to the Legacy that severe?*\n\nRathus quivered, his face a mask of sorrow as he replied, *The section in which we stand survives, but the Quantum Flux Cannon... it was lost to the Drakkar's torpedo assault.*\n\nUlarean blinked in shock. To think that a weapon forged in antiquity, which had been carefully preserved by his people for thousands of years was now destroyed - it was too ghastly to comprehend.\n\nCouncillor Talari's distressed cry pierced all their thoughts as he shouted, *More Drakkar vessels have been detected! They have jumped-in away from the battlefield and do not appear to be attempting to rejoin their colleagues!*\n\n*Calm yourself,* Ularean murmured, doing his best to soothe his friend despite his thumping headache. *Where are these other vessels headed if not the battle?*\n\n*They are raiding Ashana!* Talari blurted out, his words shot through with fear.\n\nUlarean felt that same sense of dread and paused a moment, before responding urgently, *What of the reserves? Can they defend against this assault? If not, we must disengage other vessels from combat to assist...*\n\n*The reserves have been moved to intercept, but they will not be sufficient to stop the Drakkar. As to the rest of our forces, they are all pinned down in close-quarter engagements. Attempting to withdraw at this stage would be suicide,* Talari explained, his thoughts racing.\n\n*Our only hope lies with JohnBlake,* Ularean said decisively. *We must contact him and plead for his help to protect Ashana from disaster!*\n\n***\n\nGrand Overlord Vekrok stormed into the dreadnought's huge hangar and felt a surge of relief that it had survived the Ashanath's devastating attacks. However, lighting flickered overhead and the sound of distant explosions echoed throughout the hangar, competing with the muffled shriek of tortured superstructure giving way. The call to arms had been sounded throughout the Defiler and the vast room was filled with the raucous din of thousands of elite troops, who were being packed into boarding craft of all shapes and sizes. \n\nHis personal ship, the black armour-clad ship called \"The Breaker\" took pride of place in the centre of the Hangar, surrounded by the biggest and nastiest of the boarding ships docked in the Defiler. Much larger than a regular dropship, it could carry more troops, and had a few extra tricks up its sleeve that made it a terror in any boarding action. The strange hunchbacked design gave it an ungainly and cumbersome appearance, but with all the engines and retro-thrusters built into it, the Breaker was a surprisingly fast ship. \n\nThe rear loading ramp was lowered on the Breaker and he could see scores of his bodyguard marching aboard, their black power-armoured boots ringing loudly against the metallic decking. Clomping up the boarding ramp, his men wisely gave him plenty of room to pass as he lurched into the ship. His quartermaster saluted him with a clenched fist, then gave Vekrok a toothy grin as he beckoned him over to the nearby weapon racks.\n\n\"I've picked the best for you, Mighty Vekrok!\" Krohag declared, two of the Quartermaster's four armoured hands spread wide in invitation. The other two hands pointed to four melee weapons that glinted with a dark lustre. \"Activation switch is at the base of the handle, just like the Dark One warned us.\"\n\nVekrok grinned despite all the setbacks he'd endured that day, grabbing the pair of jagged swords and sheathing them on his back. He picked up one of the pair of maces next, hefting it to gauge its weight before taking a few experimental swings. \"This is perfect,\" he grunted. \"I can't wait to cave in some skulls with this!\"",
        "***\n\nThe Invictus was deep within the sprawling battle now, with Calara firing Beam Lasers, Heavy Cannons, and Gauss Cannons the instant they had cooled or reloaded. John leaned forward to study the Tactical Map, watching as Alyssa and Calara targeted a pair of black-armoured Drakkar battleships. Calara struck first, efficiently stripping both marauding vessels of their shields with her Nova Lances. She was followed immediately afterwards by Alyssa, who capitalised on their vulnerability by hammering the Drakkar ships with Singularity Driver slugs, systematically pounding them into oblivion. \n\nIrillith had wrecked her first toy a while ago. She had rammed it into another battleship after shutting down all the cooling systems for her power core, thereby triggering a reactor explosion that destroyed them both. Immediately afterwards, she hijacked another of the thousand-metre-long battleships, deactivated its shields, then used it to wreak merry chaos amidst the Drakkar lines. The Drakkar she targeted didn't know whether to fire back, or assume all the 'friendly fire' was just an accident and keep focusing on the Ashanath. Every time they did choose to fire on her hacked ship, it meant that the Greys had to endure one less barrage, keeping them in the fight just that little bit longer. In any event, the confusion and disruption she inflicted amongst the Drakkar ranks was even more valuable than the considerable damage she was inflicting with her battleship's guns.\n\nFaye was currently using her huge radius of Pulse Cannon coverage to shoot down any missiles that the Drakkar launched, in a desperate bid to save as many Ashanath vessels from harm as possible. The Greys had been savagely mauled by the Drakkar, with well over half the ships from their initial fleet now lying burned and broken, providing grim tombs for thousands of their slain people. The Ashanath still fought on valiantly, striking back at the rampaging Drakkar and inflicting their own fair share of casualties in retribution. A sizable number of grey ships drifted aimlessly as broken hulks, their purple banding now looking like a ribcage that had been cracked open. \n\nThe Invictus had already made a significant difference to the battle, having destroyed ten battleships and over a dozen cruisers - all of which were plated in the Onyxium-alloy armour. However, fighting in that densely-packed maelstrom of beams, missiles, and exploding ships was not without cost. The battlecruiser's shield status was already showing as yellow, when a battleship clipped them with a wild salvo of purple beams, the Drakkar hitting more by blind luck than skill.\n\nJohn glanced at the shield status hologram and grimaced as he saw the colour had changed to a deep orange. \"We're down to twenty-seven percent shields,\" he warned his blonde pilot.\n\n\"Yeah, I know! They're throwing too much crap at us to dodge it all!\" Alyssa grumbled, yanking the flightstick back and narrowly avoiding a burning Drakkar cruiser. \"Even if these fuckers can't shoot for shit, we're fifty percent bigger now!\" \n\nBefore he could respond, Rachel whirled in her chair, blurting out, \"John! I've got Ularean hailing us. The High Council WERE on that Progenitor ship!\"\n\n\"Put him through!\" he replied brusquely, nodding to her in thanks before turning to look at the viewscreen.\n\nThe Senior Councillor's grey head filled the screen, but the right side of his face was covered in dark-red blood and he had a jagged cut in his scalp. \"JohnBlake, it is such a relief to see you,\" Ularean began, obviously distressed. \"We attempted to assist using the Legacy, but we were undone.\"\n\nJohn stared intently at the diminutive alien and said, \"We're going to need to have a long chat after this battle, Ularean. It seems you haven't been entirely honest with me.\"\n\n\"Please forgive us, JohnBlake,\" Ularean replied, his whispering voice still managing to carry his pleading tone, such was his strength of feeling. \"We promise to reveal everything we know about the Progenitors, but we must ask for your aid first.\"\n\n\"Is your ship in danger?\" John asked, glancing at the Tactical Map. The image of the wrecked Progenitor vessel hadn't moved since it had been struck by torpedoes, lying shattered amongst a broad swathe of debris. He couldn't see any sign of Drakkar in its immediate vicinity.\n\nUlarean blinked twice before replying, \"I do not refer to the Legacy, but to Ashana itself! More Drakkar forces have jumped into the system and are taking pains to avoid the battle - they appear to be planning a raid on our homeworld! We have sent fighter and bomber wings to intercept, but they require assistance to nullify this threat.\"\n\nJohn expanded the focus of the Tactical Map, scaling it back to allow him to see the entire system rather than just the tighter confines of the battle. Just as the Ashanath Councillor had described, a small fleet of ships appeared to be heading directly for Ashana, but from the opposite side of the planet to the battling fleets. His eyes widened when he saw that the black-hulled group consisted of a battleship escorted by four cruisers. \n\n\"I'm not sure we can make it in time,\" John said hesitantly, looking back at the image of the Invictus diving through the intense firefight.\n\n\"I'll help the strike craft!\" Jade volunteered, her cat-like eyes gleaming. \"The Raptor is much faster than the Invictus and I'm already half-way there!\"\n\nShaking his head, John refused, saying, \"You can't take on a battleship, Jade, you'll be ridiculously outgunned!\"\n\nHer emerald eyes sparkled with excitement as she responded, \"The Drakkar cruisers are severely damaged and that battleship doesn't even have any shields! They must be stragglers who barely survived the minefield.\"\n\nAlyssa didn't turn to speak to him - she was too busy piloting the Invictus - as she said telepathically, *Jade might be their only chance. I can't get us there in time to prevent them starting an orbital bombardment and there's too much shit flying around for me to try a short-range hyper-warp jump without hitting anything!*\n\nTurning to look at Ularean again, John said, \"We're sending help, Ularean. Jade will intercept them in the Raptor.\"\n\n\"My deepest thanks,\" the Senior Councillor said in a whisper as he gazed at the screen. His eerie voice even managing to sound contrite as he added, \"I wish we had fully trusted you from the start, JohnBlake. My sincerest apologies that we did not.\"\n\n\"Yeah, I wish you had too,\" John agreed with a rueful smile. \"Now isn't the time for apologies though, Ularean. Let's finish this battle and we can talk afterwards.\"\n\nUlarean bowed to him and ended the call, his bloodied face disappearing from view.\n\n\"Okay Jade, head for that new fleet,\" John said, glancing at the holographic image of her lovely green face. \n\nThe Nymph smiled at him as she replied, \"I'm already on my way!\"\n\nDana gave him an enthusiastic grin and exclaimed, \"I just gave the last of these cruisers a new asshole! I'll follow Jade and give her some backup.\"\n\nTashana had been staring intently at the wrecked Progenitor ship, and she turned to look at John and said with some urgency, \"It might be wise to protect the Ashanath's Progenitor vessel from further harm. Who knows what secrets such a ship might contain about your heritage?\"\n\nJohn nodded and turning to Dana he said, \"I want you to protect the High Council and their ship. Tashana's right, but more importantly, the Ashanath High Council are very vulnerable at the moment and we need to keep them safe.\"\n\n\"Ah c'mon! You're sticking me on guard duty?!\" Dana protested, looking grumpy. \"Jade might need my help against that invasion force!\"\n\n\"There's still another thirty Drakkar battleships left over here,\" Calara replied, attempting to placate the redhead. \"You don't need to worry about missing out on any action.\"\n\nThe redhead grinned at them and cheered, \"I'll be right there!\"\n\n***\n\nWarboss Magaruk felt a cold trickle of sweat slide down his mottled green back as he stared at the Tactical Map. One minute the Drakkar armada had been gleefully slaughtering the stunted Grey weaklings - aside from that unfortunate incident with Vekrok's dreadnought - and then this white wraith of a ship had appeared as if from nowhere, felling Drakkar battleships left, right, and centre!\n\nHe grimaced as he watched the Terran battlecruiser's incredibly fast charge towards his own clan leader's black-hulled battleship. Overlord Duzrog desperately turned the huge ship to get a better firing position and as soon as the blunt nose of the battleships swung about, an immense salvo of pulsating purple beams bracketed the deadly incoming threat. Despite dozens of violet columns of energy being fired in its direction, only a couple managed to wing their target. The white hulled ship jinked around, looking more like some flighty corvette than a lumbering Capital ship - Magaruk had never seen anything like it!\n\nThough the white ship was fast and agile, more importantly in Magaruk's eyes, it was packing enough firepower to make the ships it was hunting look like petulant podlings. Unlike the wild shots that sailed around the battlecruiser, the answering cataclysmic blast that slammed into the black battleship was aimed perfectly. Magaruk could only look on in horror as the massive white lance of energy filleted his leader's battleship, carving a hundred-meter-wide hole through the centre of the hopelessly outclassed vessel.\n\nNormally Magaruk would have been delighted to see his Overlord blasted into oblivion, thereby giving him an opportunity to seize control of the clan for himself. Thoughts of courting the ripe but deadly Drakkar podmothers never even entered his mind though, not when a sudden disturbing realisation made him quake with fear. \n\nThat white ship seemed to be hunting down every ship furnished with black armour and his own cruiser was equipped in exactly that fashion. \n\nThe Dark One's gift didn't seem quite so generous or formidable now, after all. \n\n***\n\nJade pushed the throttle as far forward as it would go, the Raptor leaping across space as it raced towards the incoming fleet of planetary raiders. Her gunship was by far the fastest vessel in the system and she quickly caught up with the Ashanath bomber wings, before tearing past the cumbersome double-disc strike craft. The Ashanath fighters were just up ahead, and the Nymph pulled back on her flightstick, lifting the nose of the gunship to slightly correct her course.\n\nShe grinned as she imagined the startled reactions of the Ashanath fighter pilots as the Raptor rocketed past them. In her experience, most fighter pilots expected to be flying the quickest and most agile ships in an engagement and to watch the much larger gunship effortlessly sail away from them must have been deeply unsettling. To make them feel a bit better, she moved the stick from left to right, waggling her wingtips in a friendly fashion. At the last moment, she realised that such a gesture could be misinterpreted as taunting them, but now wasn't the time to be worrying about such things.\n\nPushing a button on her console, Jade switched the focus of her map to the marauding battleship and its four cruisers. The enemy ships were covered in spikes, but their once-frightening appearance was marred by the great sweeping rents in their buckled and torn armour plating. It was quite clear that these Drakkar had been caught in the epic blastwave from Calara's minefield, with all five spacecraft hobbling along and nursing various injuries. \n\nGrinning in anticipation, she pointed the Raptor towards the first of the black-hulled cruisers, the optical targeting system following her sharp eyes as she searched for weaknesses in its black hide.\n\n***\n\nThe Valkyrie soared towards the wreck of the Legacy, arms and legs locked back as the mech travelled in flight mode. As Dana approached, she could clearly see the sheer scale of the devastation inflicted on what was once a magnificent and intimidating spacecraft. The front had been atomised by the crippling explosions from the Drakkar torpedoes, and while the rear of the huge vessel was still intact, she could tell at a glance that it had sustained serious damage under that battering. \n\nAlong the silver hull sections of the Legacy, lights flickered intermittently through the transparent Aluminum/Etherite hull plating over the ship's windows. To Dana's well-trained eye, that hinted at serious problems with the Power Relays, with the system load too heavy for the feeble amount of power remaining. The redhead guessed that the relays must have been torn from their housings with all those terrible concussive impacts, the power couplings now sheared through or hanging by a thread. She just felt glad that she wasn't going to be the one who had to fix that mess...\n\nArriving at her destination, Dana flipped a switch to shift from flight mode to battle mode and landed the thirty-metre-tall mecha on the vast silvery hull of the Legacy. Her landing was smooth and the Valkyrie immediately righted itself, so that she stood atop the wrecked ship. The quad-mounted Photon Lasers swung over her shoulders to lock into firing position, while she hefted the Punisher Gatling Cannon on the mech's right arm as the warmachine readied itself for combat.\n\nTaking a quick glance at her Tactical Map, Dana's hopeful smile faded away. Although the battle still raged furiously between the two alien fleets, the closest ships were well out of her weapon range. She watched the Invictus rocketing through the battle lines, immediately recognisable by its incredible speed and haloed as it was in a blue sphere of Pulse Cannon fire. Occasionally, bright blue beams and the intermittent Nova Lance blast lit up the Tactical Map, with the battlecruiser bringing blazing retribution to the Drakkar forces.\n\nDana's sky-blue eyes narrowed as she watched her friends in action. She wouldn't put it past John to try and keep her out of trouble, and despite Calara's encouraging words, the redhead realised she had been stuck with boring guard duty after all. Her shoulders slumped, resigning herself to sitting out the rest of the battle as an impotent spectator, forced to just watch while John and the girls had all the fun. Her lips lifted into a smile as she remembered that the day hadn't been a complete letdown though - she had been able to test out her new guns and on really nasty bad guys as well!\n\nShe watched the battle for another few minutes, finding the red and purple flashes of light to be strangely hypnotic as the Ashanath and Drakkar struck each other with sustained Beam Laser barrages. The Invictus joining the battle had helped even the odds and with Calara brutally punishing any Drakkar ship with black armour, the Ashanath were starting to hold their own against the steel-armoured Drakkar forces. Periodic explosions signified the death of another mighty warship, along with the tragic loss of many thousands of crew, the butcher's bill for the dead rising alarmingly by the minute. Just as John had warned them earlier, the Battle of Ashana was turning out to be a very bloody business indeed. \n\nWhile Dana had many virtues, patience definitely wasn't one of them, and as the saying goes; the Devil makes work for idle hands. Eyeing up the twisted remains of the mangled Drakkar dreadnought, she mused that while it looked like a lifeless hulk, it certainly wouldn't hurt to make sure. That would mean that she'd have to wildly strafe it with Photon Lasers and perhaps a burst or two from the Punisher Gatling, but that wasn't her being reckless, she would actually be taking eminently sensible precautions. \n\nA huge grin lit up her face and she jogged the mech across the silvery surface of the Legacy, relocating the Valkyrie to a better firing position. The Defiler and the Legacy had taken each other out at extreme Beam Laser range and while she could hardly miss such a huge target, even from that distance, she wanted a better look at what she hoped would be magnificent explosions. \n\nDana got into a great spot to watch the upcoming action, then zoomed in with the mech's targeting grid, lining up her first shot at the ripped-open foredeck of the Defiler. It was then that she spotted a flicker of motion by the immobilised dreadnought. What started as a hint of movement soon turned into a hive of activity and she gaped in shock as dropships began pouring out of the derelict like angry bees swarming from a stirred-up nest.\n\n***\n\nVekrok watched through the reinforced windows in the Breaker's cockpit as all around him, dropships began to lift off from the Hangar deck. Festooned with spikes, chains, and the picked-clean skeletons of their victims, the black-armoured craft made a heart-warming sight for the hulking Drakkar tyrant.\n\n\"Your Honour Guard is aboard, Grand Overlord!\" Grukig reported, stomping through the broad doorway and into the cockpit. He rolled his shoulders under the weight of the massive rotary cannon on his right arms, and the chunky reflective shield he carried on his left pair of arms.\n\nTurning to his pilot, Vekrok viciously kicked the back of his chair and snarled, \"You heard him, Nezug! Fucking move your ass!\" His fang-filled grin was terrifying as he added, \"We need to get there first, before all the boys get started on their crew!\"\n\nThe roar of the oversized engines was deafening in the Hangar, even drowning out the tortured groans of the dying dreadnought as explosions and shipquakes slowly tore the vessel apart. Under Nezug's practiced hand, the highly modified dropship lifted off the ground with a blaze of retro-thrusters before barrelling out into space, narrowly avoiding clipping the Hangar Bay doors on its way out.\n\nAlthough the rest of the dropships had a lead on Vekrok and his Breaker, he wasn't worried. None of the other boarding craft were as fast as his personal ship and he knew he'd get there before the others. He glared at their silver and black destination and started salivating at the thought of all the Greys he was going to eat. The trick was to tear those silver suits from them first, otherwise you just filled up too fast. It took a little longer, but frightening them half to death made their meat all the tastier!\n\nSuddenly the blackness of space in front of him lit up with blindingly bright flashes, leaving him squinting against the glare caused by some kind of stuttering blue beams. Most of the shots missed the throng of dropships, but one of the laser beams caught the rear end of one of the smaller vessels. The short pulse of energy vaporised the dropship in an instant, leaving a glowing line on the front section, which tumbled away helplessly.\n\n\"Full speed ahead! Get in there before you get shot to fucking bits!\" Vekrok roared into the comm interface, watching a moment later as the engines mounted on all the dropships ahead of him blazed with orange light.\n\n\"Right away, mighty one!\" Nezug growled, powering up the Breaker's engines to maximum, his hand moving over to the console to press a big red button.\n\nVekrok stepped forward just in time to snatch the pilot's hand away from the button. \"Not yet! Let them take the hits. Wait until we're closer.\"\n\nNezug chuckled evilly to himself, flexing his left hand after Vekrok nearly crushed it in his ferocious grip. Turning the Breaker towards the source of those energy weapons, he roared towards the white-armoured mech, gaining on the rest of the dropships, which all charged forward at full speed.\n\n***\n\nJade yanked back on the flightstick while easing back on the throttle and banking hard to port. A sweeping salvo of beams, laser bolts, and cannon fire sailed harmlessly past on her right, the Drakkar gunners having an impossible time trying to land any shots on the extremely nimble gunship. Following through the loop for two seconds, she finally levelled herself out and lined up the Raptor with the closest of the cruisers. The Ashanath fighters had joined the fight a couple of minutes earlier and taking full advantage of being entirely ignored by the Drakkar gunners, they peppered the cruiser's shields with quick bursts from their light laser cannons. They weren't powerful enough to knock the shields out yet, but they had weakened the defensive field.",
        "The Raptor's salvo of Photon Laser pulses blew out the last of the cruiser's shields, allowing her well-aimed shots to cut into the exposed underbelly of the Drakkar craft. Two of the remaining pulsed beams hit the unscathed black hull, the overloaded capacitors exploding as they absorbed too much energy. The last two of her six pulses struck directly on-target, aimed at the battle damage the cruiser had sustained in the minefield. The shots picked at a very angry wound, slashing through the unarmoured superstructure before burning deeply through the Drakkar ship. \n\nThe Nymph had savaged one of the cruisers with her opening shots, the Drakkar totally unprepared for the staggering amount of firepower the Raptor could bring to bear. Unfortunately, they had reacted quickly and the remaining vessels in the fleet had opened fire with everything at their disposal. She could safely ignore the purple beams and point-defence lasers, but the battleship was equipped with a battery of Heavy Cannons and burgeoning missile racks, which she had to be far more wary about. The Drakkar in the battleship had wasted no time in launching those deadly weapons her way.\n\nA red warning light blazed on her console, accompanied by a siren that sounded irritatingly loud in the tight confines of the cockpit. The Nymph flipped a switch for her Pulse Cannons, activating the automated targeting computer, which let her concentrate on evading incoming fire. The upper spinal turret and the two on the gunship's flanks immediately spun on the spot, facing towards the rear of the Raptor. They blazed away, sending streams of Pulse Cannon fire at the pursuing missiles, the rapid spray of blue laser bolts zipping around the dark red heat-seeking warheads.\n\nJade looped the Raptor around the burning wreckage of the first Drakkar cruiser, pulling the flightstick back hard as she executed her turn at high speed. The g-force would have killed an ordinary pilot in an ordinary ship, but between the gunship's inertia-dampening device and the Nymph's resilient body, she barely felt a thing. She spotted a wing of Ashanath fighters ahead of her, the three strike craft having just finished their strafing run on the third black-hulled cruiser. If she continued on her present course, she would be leading the heat-seeking missiles straight towards them and she couldn't take that risk. Rolling her gunship to the right, she pushed its nose down, abruptly changing heading away from the silver fighters.\n\nThe Raptor's targeting computer did an admirable job of tracking the missiles, especially considering the unpredictable manoeuvres that the Nymph was executing to avoid getting hit by cannon fire. One missile after another exploded in a fiery-red blossom as their warheads were ignited by Pulse Cannon bursts, but there were dozens in that swarm and the computer couldn't hit them all. \n\nJade flinched as a thunderous explosion rocked the Raptor, the missile narrowly avoiding one of her engines, but hitting the upper spinal turret instead. The Pulse Cannon was blown apart in the detonation but remarkably, the armour held strong, its sparkling white sheen now ruined by an ugly black crater where the turret had once been.\n\n\"Fuck!\" she swore under her breath, in an uncharacteristic outburst of anger. Jade could just imagine John's worried face when he saw the damage to the gunship, then his look of guilt for exposing her to danger. The last thing she wanted was to have him upset with her, or even worse, chastising himself!\n\n*If it's getting too dangerous, pull back,* Alyssa said in warning, her telepathic voice tinged with concern.\n\nThe Nymph frowned and shook her head, knowing her blonde Matriarch would be able to see the gesture on her holographic image. *I'm fine,* she replied brusquely, too busy to answer in any detail.\n\nA barrage of heavy shells exploded around the Raptor, none of them close enough to cause any damage, but still pattering the hull with tiny fragments of shrapnel. Remembering that it would take at least ten seconds until the next fusillade, she pushed the gunship's engines to maximum, then switched to manual turret control. There were still half-a-dozen missiles on her tail, but Jade was a much better shot than the computer, especially when the heat-seeking projectiles were travelling straight towards her. With its line of sight now clear after the upper turret's destruction, the lower spinal turret was able to join the flanking weapons in sending a stream of Pulse Cannon bursts at the missiles harrying her. It only took a few seconds to take each of them out and she sighed with relief as she focused on her flying again.\n\nTravelling in a straight line like that had made her a much easier target for the Drakkar gunners and the gunship was struck by several purple Beam Lasers. She smiled as she imagined the incredulous looks on the hammer-headed aliens' faces as the Raptor remained unscathed, but there was a downside - the Drakkar now knew that she was immune to laser fire. It took them a little while to adjust to that revelation, but they switched targets after ten seconds, opening up on the Ashanath fighters which they'd previously left entirely unmolested.\n\nNow that she had a moment's breathing space, Jade replied to Alyssa, *I'm okay now, that was the last of the missiles. I'll make sure I don't go anywhere near the battleship's front firing arc.*\n\n*Alright, but you take care now!* Alyssa urged her in return.\n\nJade's Photon Lasers had recharged, so she swooped towards the next closest cruiser, interposing its considerable bulk between herself and the battleship. Completely shielded from Heavy Cannon fire, she slowed the gunship down until she was brazenly parked off the cruiser's port flank, facing the brutal furrows the mines had ripped through its armour. The Drakkar captain responded to her impudence by trying to use his retro-thrusters to move out of the battleship's line of sight, but the Raptor with Jade as the pilot was far too nimble.\n\nShe shot out the cruiser's shields with her Photon Lasers, then opened up with her five remaining Pulse Cannon turrets, chewing through the remnants of the armour and then burrowing deeper into the vessel. Incendiary blue laser bolts triggered fires and minor explosions as she cored through the helpless Drakkar ship, the Raptor shrugging off the beam laser fire that reflected harmlessly off her hull. Finally, the Pulse Cannon bolts tunnelled through to the Bridge, ripping it apart in a blazing instant.\n\nInside the doomed vessel, alarms and sirens wailed as the emergency crews rushed to put out the raging fires. The comforting throb of engines suddenly died out and the cruiser's guns went silent, leaving the Drakkar crew staring at each other in fear. Multiple bulkheads began to slam closed, self-sealing to isolate damaged compartments from the inferno. The lights cut out a moment later as the ship lost power, the only illumination left was from the flickering flames. Without anyone on the Bridge to restore power and override those doors, the Drakkar were trapped, their fire-fighting equipment as lifeless as the ship. They could only watch in terror as the hungry flames licked towards them.\n\nJade nodded to herself in satisfaction, powered up her engines and rolled the Raptor away from the burning derelict, getting ready to do the same to the next cruiser in the formation. She knew that once every one of these escort vessels was destroyed, the Drakkar battleship would be even more exposed to a torpedo run from the incoming Ashanath bombers.\n\n***\n\n\"Yeah! Eat that, you ugly fuckers!\" Dana cheered, firing one Photon Laser after another at the swarm of incoming Drakkar dropships. \n\nShe had flipped the quad-mounted weapons to cycle individually now, rather than firing in pairs, which meant she could fire in one long stream of pulsed beams. Liberally hosing down the charging strike craft made hits much more likely, allowing Dana to correct her aim by shifting the blue beam onto her target. Although the bulky dropships were all shielded and armoured with black Onyxium alloy plating, her beams were quickly overwhelming the absorption capabilities of their capacitors with raw power. Another Drakkar ship exploded in a satisfyingly colourful detonation, making that her eighth kill in under a minute.\n\nThe dropships weren't heavily armed, with most sporting nothing more threatening than a pair of laser cannons, which they still fired gamely in her direction. Dana didn't bother to dodge, focusing instead on thinning out the swarm, but the sheer weight of fire eventually caught up with her. A red warning light blinked on her console as a chime echoed around the cockpit, alerting her to the fact that the Valkyrie's shields had been worn down and finally overwhelmed.\n\nThere were still another ten dropships barrelling towards the Ashanath's marooned Progenitor vessel and with the rate they were closing, she knew she had to hold her ground if she was going to stop them all. She ignored the Laser Cannon fire striking the hull, and sprayed a group of three dropships with Photon Lasers pulses, stripping them of shields. They were at medium range now, making them much easier to hit and Dana grinned as she pointed the massive Punisher Gatling their way.\n\nWhile she continued firing her quad laser guns at the next set of dropships, the Gatling Cannon spun up and began spitting hyper-accelerated slugs into the Drakkar. The rounds were absolutely devastating as they smashed into the dropships, each hit skewering straight through their armoured hull. A single hit was all it took to gut each of the strike craft, depressurising the hull with the five-metre-wide holes she blasted through each one. Dana knew that with every writhing Drakkar sucked out into the void, more Ashanath would live this day, kept safe from the ravenous monsters.\n\nShe twisted the mech to face the next group, a wild grin on her face, but another warning chime drew her attention to the console again. Incoming missiles! \n\n\"Ah fuck!\" Dana cursed, spotting the tell-tale plumes from the plasma thrusters as the cluster of missiles raced towards her. She swung the Photon Laser crosshairs over the incoming missiles, but they were too small to properly track, her pulses of laser fire sailing past harmlessly. Her eyes widening in panic as she swore, \"Shit! I knew I should have added Pulse Cannons!\"\n\n*Get out of there!* Alyssa blurted out in alarm. *Use the Progenitor ship as cover!*\n\nDana began to backpedal the mech, stumbling backwards in her haste to escape the deadly warheads racing her way. In her panicked state, the controls suddenly felt clumsy and awkward, now that she needed the Valkyrie to dance away like a gymnast. Controlling the thirty-metre-tall mech wasn't made any easier by the relentless hail of Laser Cannon bolts that blasted into her, leaving glowing craters in the glossy-white armour and further upsetting her balance. Tripping over, the mech crashed into the Progenitor ship's hull, jarring her in the Pilot's seat as the Valkyrie bounced off the silver surface, its limbs flailing wildly.\n\n\"Fuck, fuck, FUCK!\" Dana snarled, wrestling with the controls and using the retro-thrusters to try and counter the anti-clockwise spin. \n\nShe just about managed to right herself, leaving the mech staring face-to-face with the swarm of missiles as they raced towards her. Acting more on instinct than through any conscious thought, Dana stabbed her finger down on the right trigger, unloading with the Punisher Gatling held in the Valkyrie's right fist. The rotary cannon spun in a whirlwind as the railgun barrels fired a storm of slugs into space, leaving faint trails behind them as they soared out towards their target. There was an explosion as the first missile was hit and she kept her finger clenched on the trigger as she picked off one after the other, quickly burning through her stores of ammo. She clipped the last missile with seconds to spare, the resulting detonation close enough to knock the mech sprawling with the blastwave.\n\nDana fought with the controls again for several seconds, before managing to get the Valkyrie under control and she couldn't help laughing with relief when she stopped it tumbling away. Her laughter was quickly replaced by anger as she turned the mech, eager to get her revenge on the big dropship that had launched that volley of missiles. She aimed her quad guns at the vicious looking craft that was surging towards her, taking careful aim as she prepared to blast it into millions of pieces with all four Photon Lasers and the last fifty rounds in the Punisher Gatling.\n\nThat was when something crashed into the mech with a bone-shaking impact, knocking her out cold.\n\n***\n\n\"DANA!\" Alyssa screamed in fear, whirling around to stare at John in shock. \"She's hurt bad!\"\n\nFaye instantly projected one of her avatars over the Invictus' connection to the Valkyrie and appeared a split-second later in the mech's cockpit. She gasped in fright, her digital heart filled with torment when she saw what had happened to her friend. A huge docking claw had penetrated the armour plating then pierced deeper, smashing over the Pilot's chair and tearing a deep, ragged wound through Dana's leg. The teenager looked very pale, with blood pouring from a nasty gash in her head, smearing the left side of her face in crimson.\n\n\"She's bleeding to death!\" Faye blurted out in the Invictus' Combat Bridge.\n\nSharp inhalations of breath could be heard around the Bridge, with Rachel letting out a cry of anguish.\n\nJohn clamped down on his rising surge of panic and closed his eyes, checking to see Dana's status. He focused on his mental compartment for the exuberant redhead and could tell at a glance that she was in big trouble. Dana was unconscious, with broken ribs, a broken leg, and worst of all, internal bleeding and a fractured skull. Without bothering to waste time asking for permission, he sucked power from Alyssa to heal their friend, pouring his full psychic might into rapidly healing Dana's wounds. \n\nThe blonde gasped at the sharp draw of Eldritch power, but John saw only understanding in her eyes when he finally met her penetrating gaze. \n\nTurning to look at Jade's frightened holographic face, he said urgently, \"I've healed her wounds, but Dana's still in trouble! Can you get to her?\"\n\nThe Nymph nodded immediately, replying, \"Heading there right now!\"\n\n\"Thank God we set up the active connection!\" Alyssa exclaimed, her face tense with worry.\n\n\"No, thank you,\" he corrected her, remembering full well that she'd insisted on that precaution. He eased back in his Command Chair, resting a moment after expending a massive burst of his own psychic power reserves to save Dana's life. \n\n\"Those Drakkar dropships are closing on the Ashanath's Progenitor vessel!\" Tashana warned them, staring intently at the Tactical Map. \n\nAlyssa twisted the flightstick to one side, then pulled back sharply, bringing the Invictus around to face the Legacy. \"We're on our way!\" she announced, eyes narrowed in anger.\n\n***\n\nVekrok guffawed with laughter as he watched one of his dropships slam into the mech, docking claws tearing into it as they locked into place. He'd never admit it, but for a moment he was actually starting to get worried when that mech survived the missiles and turned its guns towards the Breaker. \n\n\"Yeah, you're fucked now, podhumper!\" he cackled, watching as the dropship barrelled away with the mech, leaving a shower of white debris in its wake. Turning towards Nezug, he added in a snarl, \"Alright, enough fucking around. Bust a way into that ship!\" \n\nThe pilot nodded eagerly, his jaw snapping with excitement. Twisting the flightstick in his hand, the Breaker changed course, now pointing directly towards the huge silver Ashanath vessel. The rest of the surviving dropships were fanning out, searching for good locations to plant breaching charges, but Vekrok's personal boarding craft didn't need to waste time with that.\n\nThe black-hulled siege ship rammed into the side of the Legacy with a mighty crunch, nearly knocking Vekrok from his feet. A dozen sharp claws sheared through the hull as they locked into place, the Drakkar ship looking like a huge bloated tick ready to feast on its host. There was a double-sized airlock door built into the front of the Breaker, which was surrounded by three bladed circles that began to rotate with an alarming grinding noise. As the high-pitched whine reached a crescendo, Vekrok leaned forward and pressed a button on the console, activating the forward rams that shoved the cutting discs into the silver hull. There was a hideous grinding screech as the blades cut through the armour plating, boring out a broad five-metre-wide hole in the side of the Ashanath vessel.\n\nHe thumped his massive fist down on the console, activating the comm interface hooked up to the rest of the Drakkar in boarding ships. \"Have fun you vicious bastards!\" he grunted, an evil smile on his face as he addressed hundreds of Drakkar marines. Vekrok's bulging eyes narrowed, his voice dropping a few octaves as he added menacingly, \"But if you fuckers see any Greys in white dresses, you take them prisoner! If I catch anyone eating the bosses, you'll end up on my toothpick!\"\n\nSlavering with anticipation at the feast to come, Vekrok surged out of the cockpit and down the broad ramp to the boarding dock below. Drawing his twin swords and twin maces, Vekrok activated all four weapons, causing them to crackle with energy as they hummed to life. Towering over his armoured shock troops, he raised the weapons over his head and roared, \"THE GREYS HAVE INVITED US TO DINNER! LET'S GET EATING!\"\n\nAs the airlock doors swung open into the Legacy, the ravenous howls from the Drakkar reverberated down the corridors, leaving the Ashanath crew quaking in terror.\n\n***\n\nDana's eyes fluttered open and she groaned at the tingling ache she felt in her chest, her right leg, and the numbing headache that left her dazed. Trying to get her bearings, she was aware that the mech was vibrating alarmingly, but even more disturbing was the fact that she was tilted at a precarious angle, her head resting against the left wall of the cockpit. The Pilot's chair seemed to be wrenched to one side, making her current position extremely uncomfortable. She twisted to try and find out what had happened, then stiffened in shock when she spotted the massive black claw that had sheared through the cockpit and had cleaved into the Pilot's chair, knocking it askance. \n\n*Sparks! Are you alright?!* Alyssa thought to her, sounding deeply distressed.\n\nGrunting with the strain of shifting in her seat, Dana glanced down at her numbed right leg and gaped at the savage rent torn in her armour. There was blood all over her Paragon suit, but the skin below looked healthy and undamaged.\n\n*Yeah, I'm alright...* she replied, looking around owlishly. *I'm guessing John just patched me up?*\n\nAlyssa's relieved laughter filled her mind as she explained, *You were dying, Sparks. He saved you!*\n\nDana froze as she stared out of the cockpit window, seeing the red world of Ashana looming large in front of her and filling up most of her view. A quick glance at her console confirmed it - they were racing straight towards the planet.\n\n\"I think I'm still in trouble,\" she muttered under her breath, pupils widening in alarm.\n\n***\n\nAs the Raptor roared back to rescue the Valkyrie, Jade watched the Tactical Map in satisfaction as the Ashanath bombers finished their attack run on the Drakkar battleship. With the aid of the fighters weakening the cruiser's shields, she'd mauled the four escorting ships, finishing each one off with her Photon Lasers and Pulse Cannons. Stripped of its escort, the battleship was left in a horribly vulnerable position, which the vengeful Ashanath wasted no time in exploiting.",
        "The first waves of bombers launched their torpedoes at the black-hulled battleship and despite its frantic manoeuvres, it was too slow and ponderous to be able to avoid the silvery death sentences streaking towards it. Without any proper defensive screen to protect it, the Ashanath had been able to take their time in lining up their torpedoes perfectly. One titanic explosion after another tore into the turning ship, debris flung outwards by the successive chain of blast waves as it was hit eight times, tearing it apart from bow to stern. By the time the last had struck, there was nothing recognisable left of the battleship - so complete was its demolition.\n\nThe Nymph watched the Ashanath strike craft peel away, moving towards the centre of the battle to assist with the final stages of the vicious fight for survival. Shifting her focus back to Dana's mech, Jade grimaced as she watched it flailing helplessly, trapped in the scythe-like docking claws of the Drakkar dropship.\n\n\"You'll be hitting the upper atmosphere in two minutes!\" Jade warned the redhead, who was leaning at an unnatural angle in her chair.\n\nDana nodded, frowning in anger as she replied, \"I know, but this fucking asshole has me trapped!\"\n\nJade zoomed in the Tactical Map, expanding the view of the grappling machines to study them in more detail. \"Can you twist the Valkyrie, maybe shoot your way clear?\"\n\nShaking her head, Dana snarled in frustration, \"I can't move a synthetic muscle! It's got me locked up tight. The Photon Lasers are pointing the wrong fucking way and the Gatling got knocked out of my Mech's hand! I knew I should have built some goddamn laser swords into its arms!\"\n\nJust as Dana had described, Jade could see the ten-metre-long Punisher Gatling pressed flat against the hull of the dropship. It was still attached to the mech by the ammo-feed and power coupling, but lay tantalisingly out of reach of the Valkyrie's huge metallic fist. The Nymph realised that the redhead was helpless and it was down to herself to save her friend. \n\nJade looked at the Raptor's curved flightpath, which arced around the planet to reach the falling mech and her cat-like eyes widened in alarm. \"I can't get to you in time before you hit the atmosphere! Did that claw pierce the cockpit?\"\n\n\"Yeah, it punched right through,\" Dana replied, glancing to her right with a grimace. \"The emergency force-fields kicked in to repressurise the cockpit, but they won't withstand the heat from a re-entry. I'll get cooked to a crisp!\"\n\n***\n\nThe Invictus rushed through the Ashanath and Drakkar forces, dodging wrecks and avoiding incoming shots. Being in this brutal combat for so long had worn down their shields and they'd blown a couple of capacitors on the starboard side of the bow. The beams that had done the damage hadn't penetrated the hull, but they had left a quartet of melted scars across several armour plates.\n\nCalara and Faye were assisting the silver disc-shaped ships where they could, using energy weapons to strip Drakkar shields and ordnance weapons to pound any black-hulled vessels in range. Irillith continued to bring her own unique brand of chaos to the mix, hacking Drakkar battleships and making them fire upon their former allies, or just simply ramming into them headlong. Several times she intervened just in time to save severely damaged Ashanath vessels, stealing control of their tormentors and preventing the Drakkar from delivering the coup-de-grace.\n\nJohn was pointedly ignoring the battle though. Instead, he leaned forward in his chair, listening intently to every word of Jade and Dana's conversation. Alyssa didn't need to tell him that the Invictus had no chance of reaching Dana in time, or that the much faster and closer Raptor was still her best hope of rescue. He desperately wracked his brain to think of a way to help the falling girl, but they were fast running out of time and he was filled with a rising sense of dread.\n\nA startled gasp from Alyssa drew his attention and he blinked in surprise when she rose from her chair, then turned towards Faye and said abruptly, \"Take over for me.\"\n\nFaye stared at her in shock, then gave her an obedient nod, assigning her secondary avatar to take over temporary control as the Invictus' Pilot. \n\nIf Athena's brusque tone hadn't given her identity away, the radiant white glow blazing from her eyes clearly announced her presence. She walked across the Combat Bridge, fixing him with her piercing supernatural gaze as she stated, *You can save her. Dana's a blank slate, but you can change that.*\n\nImmediately picking up on her meaning, he stared into Athena's eyes and asked, *What do I have to do?*\n\nShe smiled at him enigmatically as she replied, *I'll channel power to Dana, but it's up to you to shape her and provide a framework for that energy. Trust your instincts, they haven't let you down yet.*\n\nGritting his teeth at Athena's annoyingly vague guidance, John closed his eyes and focused on Dana, concentrating intently on the image of her in his mind. As much as he'd love to give the redhead what she'd asked for, he didn't think that shooting fireballs from her eyes would help her much in this situation. Instead, he focused on her innate natural talents, drawing them out and enhancing them where he could, etching his Progenitor mark onto her very DNA. Dana's third helix came alive as he applied his will, her body throbbing with energy as he nurtured her potential.\n\n*Mmm, that's perfect,* Athena purred, nodding with satisfaction. She smiled as she channelled a brilliant surge of raw psychic energy into the unsuspecting redhead.\n\n***\n\n\"Holy fuck!\" Dana screeched, her back arching as she felt a thrilling surge rush through her body.\n\nIt was like her every nerve was tingling as the connection between her and Alyssa blazed like a supernova. Instead of Alyssa drawing energy from her, the surge of Eldritch power flooded back the opposite way this time. Dana's mouth opened wide as she cried out, the golden coronas around her pupils flaring with their own inner radiance and bathing the cockpit with a warm yellow glow.\n\nOnce that overwhelming blitz of her senses had subsided, she stared around herself in the cockpit, gaping in awe at everything she could see. Merely focusing on the clear crystal Alyssium visor filled her mind with a surge of information, highlighting the elements used to form the metal and the incredibly intricate chemical bonds that linked them all together. \n\n*You can experiment with your powers later!* Athena snapped, the urgent undercurrent to her voice penetrating Dana's thoughts.\n\nRoused from her distracted state, Dana suddenly remembered just how close to disaster she was. \"What the fuck's going on?!\" she yelped in confusion. \n\n*Turn the mech's head and look at its right hand - you're going to need line-of-sight,* Athena replied curtly, in her no-nonsense tone. \n\nRather than argue, Dana did exactly as she was asked, pressing her thumb on the hat-control atop her right flightstick. Pushing it to the right then forward, the Valkyrie's head juddered to the right then began to slowly tip forward. A horrible shriek of metal grinding against metal filled the cockpit, with the docking claw tearing an even wider hole in the mech's head. After a fearful glance at the razor sharp point of the claw digging into her Pilot's chair, Dana stared through the cockpit visor. \n\nShe could see her mech's right hand opened wide, the lower two fingers sheared off when the Gatling Cannon had been torn from its grip. The weapon itself was hanging just out of reach, only connected to the mech by the ammo and power feeds. As she stared at the open fist, her mind was filled with a riot of images. She could see a detailed breakdown of the metal, complete with stress fractures highlighted across the palm and around the radial joint. \n\n*Yes, that's right,* Athena said encouragingly. *Focus on the mech's palm and concentrate on the innate magnetic field that surrounds the metal. You can enhance it.*\n\n*I can what?!* Dana balked, eyes widening in shock.\n\n*Stop fucking around!* Athena reprimanded her sternly, sounding very much like an angry Alyssa. *You've got thirty seconds before that cockpit will get hotter than a smelting furnace!*\n\nDoing as she asked, Dana felt a shiver run down her spine as she pushed out with her mind towards the Valkyrie's torn hand. The magnetic field appeared as a faint bronze aura, so she squinted at it and concentrated on trying to make it flare as brightly as possible.\n\nAthena's voice rushed through her mind again as she blurted out, *Not too much! You'll end up sticking the hand to the dropship's hull!*\n\n*Shit! Sorry,* Dana apologised, backing off and leaving the much stronger field as it was. She smiled to herself now, knowing what Athena had in mind and shifting her focus to the Punisher Gatling.\n\n*Yes, that's right!* Athena said with relief, listening intently to the redhead's train of thoughts.\n\nA wild grin formed on Dana's face as the multi-barrelled weapon began to move of its own accord, inching towards the Valkyrie's open palm. The mech's hand slid through the arm mount as it was drawn to the greatly enhanced magnetic field on the weapon's handle, the two finally meeting with a satisfying \"thunk\". \n\n\"Yes!\" Dana cheered as she twisted the right joystick around, pointing the long barrel of the Gatling at the base of the claw pinning the Valkyrie in place.\n\nShe pulled the trigger and the mech lurched violently as the railgun slugs blew the articulated joint to pieces, yanking the docking claw out of the cockpit with the tremendous force of that shot. The Valkyrie tumbled free, then was battered out of the way by the dropship as it plummeted towards the planet. Dana could see retro-thrusters flaring as it tried to slow its speed, the Drakkar pilot intent on ramming into her again. Feeling particularly vengeful, Dana tracked it with her Photon Lasers and gave it all four barrels as it tried to turn, the pulsed beams vaporising the dropship in an instant.\n\nSighing with relief, she activated the orbital insertion pack to slow her own descent. One of the big engines had been crushed when she'd been rammed, but the left thruster was still working, giving her just enough power to halt her plunge.\n\nShe gave the holo-cam a jubilant grin and asked, \"Can one of you guys give me a tow? The Valkyrie's a bit fucked...\"\n\nJade had a sparkling smile on her face as she replied, \"I'll be with you in thirty seconds!\"\n\nLaughing with relief, John slumped in his chair as the girls on the Bridge cheered in celebration. Rachel was the one exception, quietly removing her helmet to wipe away the happy tears that were rolling down her cheeks. She gave him a look of profound gratitude when their eyes met, her intense gaze speaking volumes. He nodded to her graciously, before focusing on the blonde standing in front of him.\n\nAthena gave John a parting smile and the brilliant white light faded from Alyssa's eyes as the blonde returned to herself once more. Blinking at him in surprise, Alyssa raised an eyebrow. \"Let me guess. Athena stepped in?\"\n\nHe nodded and replied, \"We would have lost Dana if she hadn't intervened.\"\n\n\"Sorry to interrupt,\" Rachel said in a rush, turning in her chair. \"We're being hailed by Ularean again!\"\n\n\"That's okay, put him through,\" John replied, looking up at the holographic screen. \n\nThe Senior Councillor's grey face appeared a moment later, his huge black eyes staring intently at John, blinking rapidly as he stared at them. \"We have been boarded, JohnBlake,\" Ularean stated, his whispering voice reverberating eerily with a strange warble, terror evident in his tone. \"Hundreds of Drakkar... they are killing everybody!\"\n\n\"We're on our way, Ularean,\" John replied, trying to soothe the terrified alien. \"Can you pull your people back to a safe location? Drop all your emergency blast doors to slow the Drakkar down?\"\n\n\"I wish that I could agree to your request, JohnBlake. The invaders have forced their way into the Legacy via multiple entry points and all our personnel are dispersed throughout this vessel,\" Ularean quailed, his whispery voice echoing with sorrow. The Ashanath Senior Councillor was visibly shaking as he continued, \"If we were to seal the blast doors, we would abandon thousands of our crew, trapping them with the Drakkar. They would have no way to escape!\" \n\nSeeing that Ularean was not about to be swayed by triage arguments, John changed tack, saying firmly, \"Alright, but I want you and the rest of the High Council to barricade yourselves in somewhere safe. Transmit me the deck plans for the 'Legacy' and I want you to highlight your location, the external airlocks, and the current position of the Drakkar - if you're able to track them inside your ship.\" He paused for a moment, fixing the Senior Councillor with his stern gaze as he added, \"You can't afford to give in to panic, Ularean. You need to stay strong for your people, they're counting on you.\"\n\n\"I will do as you command, JohnBlake,\" Ularean replied, the warbling note gone from his eerie voice as he ceased his rapid blinking.\n\nWith a final nod, John said, \"We'll be with you soon.\"\n\nUlarean ended the call, his big black eyes fading away as the holographic image dispersed.\n\nJohn looked around at the women on the Combat Bridge and said, \"Looks like we've got a boarding action to deal with girls. I want Alyssa, Sakura, and Rachel with me, we'll pull alongside the Legacy then use our armour's flight mode to board them. The rest of you pick up Jade and Dana, then stay with the Invictus.\" Turning to look at Calara, he continued, \"What's the current state of the battle, Commander?\"\n\nThe Latina's expression was bleak as she replied, \"The Ashanath forces are down to roughly forty-percent strength, Admiral. They have eighty-two destroyers, sixty-three cruisers, and fifteen battleships left, the rest have been destroyed or disabled.\"\n\nNodding his understanding, he looked equally grim as he asked, \"What about the Drakkar?\"\n\n\"Sixty-one cruisers and fourteen battleships are still fully operational,\" she answered, looking very worried. \"If we don't intervene again, the Ashanath will lose. They're still heavily outgunned.\"\n\nJohn knew that she was waiting for his permission to engage, but he remained silent as he took a worried glance at the shield status display. The Invictus' shields had started regenerating, but they were still only at seven-percent strength.\n\n*We better move, we'll be arriving at the Legacy in just under a minute,* Alyssa prompted him. She gave him a confident smile as she added, *I know you're worried about their safety, but they're smart, capable girls - they can handle themselves.*\n\nHe met her probing cerulean gaze, then turned to Calara, saying, \"You're in charge, Commander. You have my permission to assist the Ashanath, but I'm going to be furious if you get yourselves killed. Am I understood?\"\n\nShe smiled at him, her brown eyes affectionate as she gave him a sharp salute. \"I won't let you down, Admiral.\"\n\nRising to his feet, John retrieved his weapons while watching Sakura as she did the same. The Asian girl calmly drew both her gleaming white ninjato from the slots on the back of her chair, before sheathing them across her back. He started to follow Rachel up the ramp, but paused as Tashana ran over to his side and placed her hand on his arm.\n\n\"Can I come with you?\" she asked, violet eyes searching his face. \"I've done nothing to contribute to the battle and if you could use another pair of guns, I'd like to help.\"\n\nJohn hesitated for a moment, then shook his head, replying, \"We had to rush you through training to get you ready. I don't want to expose you to combat yet unless it's an absolute emergency.\"\n\nTashana shoulder's sagged and her hopeful face fell, but she nodded, replying, \"Okay, I understand.\"\n\nHe lifted her chin and smiled at the forlorn Maliri. \"I'm proud of you for offering to help. Stay safe with your sister for now; there'll be plenty of opportunities for you to assist in the future.\"\n\nShe returned his smile and said earnestly, \"Alright, but please be careful too.\"\n\nJohn winked at her, then ran for the ramp to follow after Alyssa, Sakura, and Rachel as they headed for the grav-tubes. He dropped like a stone in the rapid field of the emergency access tube, his speed slowed in the last couple of seconds to avoid any chance of injury. Shrugging off the slightly unnerving sensation, he sprinted across the empty Hangar to the slowly opening bay doors, where the blonde, brunette, and the Asian girl were waiting for him. \n\nAlyssa and Sakura were both carrying Punisher rifles, but Rachel held a Justice Laser rifle in her arms. She saw his quizzical look and smiled at him flirtatiously. \"I've developed a fondness for large weapons.\"\n\nThe view as the huge door lifted out of the way was breathtaking, with the vast silver surface of the Legacy providing the foreground and the reddish-orange planet Ashana providing the backdrop. Seeing the Legacy with his own eyes was a dramatically different experience to watching it as a tiny holographic model on the Tactical Map. John was able to fully appreciate the sinister beauty of the Progenitor vessel's design, aside from the obliterated front section which had been left a tattered ruin by torpedo strikes.\n\nMovement caught his eye as he stepped up to the edge of the Hangar and he spotted the white-hulled Raptor heading their way, towing the mangled Valkyrie behind it in a tractor field. Both vessels looked much the worse for wear and he reminded himself to give Jade and Dana a stern talking-to when the battle was all over with.\n\nIrillith's beautiful blue face appeared in his Paragon armour's Heads-Up-Display, announcing, \"The Ashanath data has arrived and I've hooked it up to your helmet HUD. The airlocks are all marked on their ship's hull.\"\n\n\"Nice work, honey,\" he replied appreciatively, activating the tactical overlay.\n\nThe location of the airlocks were highlighted in green and he could see schematics of the deck levels superimposed over the angular shape of the vessel. Red marks were slowly spreading out from multiple points on that map and when he glanced at the silver outer-hull of the ship, he could see that the nexus for each of those scarlet waves was one of the Drakkar dropships. Part of the black-hulled section of the Legacy was circled in grey, which a helpful key identified as the location of the Ashanath High Council.\n\nHe turned to glance at his boarding team and saw they were all quietly studying the schematics too. \"I suggest we enter via that airlock near the back. We can hit the biggest cluster of Drakkar that way and they're also the closest threat to the High Council. Once we've safely secured the Council, we can double back and clear out the rest of the ship.\"\n\nSakura was the first to look his way, her brow furrowing with concern as she said, \"The Drakkar are too spread out! There's also more of them combined at the other seven entry points. By the time we get around to finishing all of them off, the Ashanath crew will be wiped out!\"\n\nJohn nodded, agreeing with her assessment and said ruefully, \"That's true, but it can't be helped. Wherever we board, we won't be able to save everybody. At least with my plan, we can kill the largest number of Drakkar as quickly as possible, while still having a chance to save the High Council.\"\n\nShaking her head, Sakura replied tentatively, \"There is something else we could try.\" She took a deep breath, then continued, \"We could split up, hit them from multiple entry points!\"\n\n\"Nope, no way,\" John replied adamantly. \"We stick together so I can keep an eye on you.\"\n\nAlyssa placed a reassuring hand on his arm, knowing exactly what the Asian girl intended. \"They'll be in slow motion for Sakura. She'll go through them like a buzzsaw,\" she said with a confident smile. \"I agree with our Security Chief. You start on the big group at the rear, let Sakura take the fifty or so to the front, and I'll keep Rachel with me in the centre.\"",
        "\"It's an excellent plan,\" Rachel said, nodding as she considered their options. \"We'll drastically reduce the number of Ashanath casualties with that approach.\"\n\n\"We can all work our way towards the High Council simultaneously,\" Alyssa added, sensing that he was wavering.\n\n\"You can't fight at super-speed though!\" John protested.\n\nThe blonde girl laughed in amusement as she said, \"I don't need to, handsome.\"\n\nAs much as John wanted to obstinately refuse, he'd trained with Sakura for weeks and he'd seen Alyssa in action before. He knew just how lethal they could be when the gloves came off. With a resigned sigh, he nodded to them both, saying, \"Alright, we'll play it your way, but if any of you get in trouble, you're to call me for help immediately. Am I understood?\"\n\n\"Yes, John,\" they all replied obediently, sensing that he wasn't in the mood for banter.\n\nHe nodded, making eye contact with each of them in turn. There was nothing more to be said and they couldn't afford to waste any time, so he turned and leapt through the protective force field that was shielding the Hangar from the vacuum of space, activating flight-mode on his Paragon Armour as he did so. The yellow sun made his gleaming white armour sparkle in the light, the golden lions emblazoned on his chest and shoulders looking proud and regal as he raced towards the rear of the Ashanath ship.\n\n***\n\n\"They're away,\" Tashana said, watching as John and the three girls fanned out to board the Legacy from multiple entry points.\n\n\"I'm just guiding the Valkyrie into the Launching Bay,\" Jade announced, not looking at the holo-cam as her attention was focused on her delicate manoeuvres. \"We'll both be aboard in under a minute.\"\n\nWith a worried expression on her face, Faye said, \"I'll take a couple of the boys to meet Dana and help her to Medical.\"\n\n\"I'm fine,\" the redhead replied, waving a hand dismissively, but they could all see she looked a little pale.\n\nShaking her head, Calara said in an authoritative tone, \"John had to rush your healing. You need time to fully recover.\"\n\nDana looked like she was about to object, but after pausing for a second, she gave the brunette a sly smile as she countered, \"How about letting me rest on the Combat Bridge? The Chief Engineer's chair is very comfy...\"\n\nCalara rolled her eyes and said, \"Fine, but let the maintenance bots help you out of the mech. That wreck is dangerous at the moment.\"\n\nThe redhead nodded, her holographic face scowling as she attempted to use retro-thrusters to reposition the Valkyrie under the maintenance gantry.\n\nTaking advantage of the brief lull in combat, Calara turned her attention back to the Tactical Map to assess the overall picture of the battle. She frowned as she studied the chaotic fighting between the Ashanath and the Drakkar, shaking her head with disapproval. The Ashanath seemed content to simply slug it out with the Drakkar ships and a brief glance was all it took for her to realise that their forces were completely uncoordinated and leaderless.\n\n\"Can you patch us into the Ashanath Command Network?\" she asked Irillith, turning in her chair to look at the Maliri girl.\n\nIrillith slowly shook her head, shrugging helplessly as she replied, \"I'm not picking up any comm traffic between the Ashanath vessels. Either their inter-fleet communications system is so sophisticated we can't even detect it, or there's a more likely reason: they aren't using one.\"\n\nThe very idea was galling to Calara, but she couldn't argue with Irillith's analysis of the situation. Rather than relying on guesses, she decided to confirm their speculations. Picking the nearest Ashanath cruiser at random, she hailed the damaged vessel, then watched as the grey face of its commander appeared in the holo-screen.\n\n\"This is Leader Haltarnus,\" the Ashanath stated in his whispery voice, sparks fizzing in the background from torn cabling where part of the ceiling had collapsed. \n\nCalara nodded to him respectfully and replied, \"Commander Calara Fernandez here, in command of the Invictus.\" She leaned forward in her chair and continued, \"Are you using any form of communications network to coordinate your forces? Your fleets don't seem to be operating under any kind of cohesive strategic or tactical direction.\"\n\nHaltarnus paused, remaining silent for a couple of seconds before answering, \"The High Council have been... incapacitated. Our telepathic command web is silent but filled with fear and pain.\"\n\nThe Latina's brown eyes widened in surprise and she exclaimed, \"Of course you'd use telepathy to communicate!\"\n\n\"Yes, as I have just stated,\" Haltarnus replied, his eerie speech modulator managing to convey his confusion.\n\nCalara flushed at her outburst, then asked intently, \"How does a telepath join your Command Web?\"\n\n***\n\n*Sure, I'll give it a shot,* Alyssa replied, giving her lover a supportive telepathic smile. *Just give me a second.* She straightened up her approach towards the Legacy's airlock by holding out her right arm and briefly activating the vambrace's retro-thruster. \n\nAlyssa reached out with her mind to peel her spirit form from her body, watching as her approach towards the silver-hulled ship began to slow to a glacial pace. Her perception of the Astral Plane had shifted slightly and she could feel them out there now - the hundreds of Ashanath minds acting like a lodestone, drawing her in. She didn't resist their magnetic pull, but erring on the side of caution, she only let them sweep just a tiny part of her consciousness into their collective sub-plane, where the minds of all the Ashanath Fleet Captains were congregating. \n\nThe sudden onrush of thoughts was bewildering, with scores of desperate voices clamouring for the Invictus' help against the Drakkar onslaught. She could barely feel herself think over the din, but her mind had become highly attuned to dealing with a multitude of telepathic conversations and she adapted quickly, shrugging off the initial shock. \n\n\"Hello everyone,\" she said in greeting, but her friendly words were drowned out in the tumultuous noise of fearful voices.\n\nAlyssa quickly realised that she had no chance of making herself heard, what with the entire Ashanath Fleet teetering on the edge of panic. Committing the full weight of her mind to the sub-plane in a sudden surge, her astral presence blazed like a super-nova as she revealed the full extent of her psychic splendour. The telepathic command web was stunned into an awed silence as hundreds of Ashanath gaped at her magnificent radiance in wonder.\n\nNow that she had a moment's peace to study the Astral sub-plane, Alyssa could feel the dark undercurrent of fear that pervaded the place. She flooded the telepathic command web with a wave of soothing calm, countering the negativity and gently swaddling the fearful minds around her. The effect on the morale of the distraught Ashanath Captains was astonishing and within the space of a second she had rallied the entire fleet, filling them with a renewed sense of hope and confidence.\n\n\"HELLO!\" she boomed, her voice thundering across the sub-plane. Dialling it down a little, now that it was obvious she had their attention, Alyssa continued, \"The High Council is still alive and we're rescuing them from a Drakkar boarding action. Until they're back in action, I'll be helping coordinate the battle with the Drakkar, so listen closely to any orders you receive. The Invictus is heading back into the fight.\"\n\nShe began to relay Calara's tactics to her stunned audience, the Ashanath rushing to follow her orders once that initial shock had worn off.\n\n***\n\n*Alyssa? Are you okay?* John asked as he landed on the Legacy's silver hull, then swung himself inside the open airlock. He hit the button to seal the outer airlock door, then added, *We were talking and you suddenly went quiet.*\n\n*Sorry, just setting Calara up with command of the Ashanath fleet,* she replied, but he could tell by her tone that she wasn't feeling very apologetic at all - quite satisfied with herself in fact.\n\nJohn shook his head, never ceasing to be amazed by the magnificent young woman. He hit the button to open the inner airlock door and it opened about a foot before suddenly jamming. The power had flickered off in this section of the Legacy, leaving him standing in the dark. John glanced at his HUD and activated thermal imaging, watching as the corridor ahead was painted in shades of cool blue. Slinging his Punisher rifle over his shoulder, he gripped the door with both hands, then shoved it open using his enhanced strength. The doors creaked open, accompanied by the protesting squeals of the door mechanism.\n\nReadying his rifle again, John took a quick look to his left, before stepping out into the corridor and heading right, towards the sound of distant gunfire. The overlay map confirmed he was going in the right direction, with a mass of red contacts tracked in this part of the ship.\n\n*Edraele, are you there?* he asked, reaching out to his Maliri Matriarch.\n\n*Of course, John,* she replied, responding to him the instant he asked for her. *I've been listening to your inner voice and receiving a running commentary from Alyssa, so I know you're storming the Ashanath Progenitor vessel. Do you require psychic power?*\n\n*Yes please,* he replied gratefully. *I used up a big chunk of my own reserves flash-healing Dana. I need to keep enhanced speed active for as long as possible.*\n\n*I'll keep feeding you from my energy network for as long as I can,* Edraele replied, sounding eager to help. \n\nHe felt a sudden delicious flow of energy from her, like someone turning on a tap of ice-cool water for a man parched with thirst. He drank deep from that stream of power, using it to activate his psychic speed and maintain the ability in his mind. All of a sudden, his brisk but cautious walk down the corridor became a blistering rush, still maintaining the advantage of a wary approach, but moving as fast as if he'd sprinted along the silver-walled hallway.\n\nIt didn't take long to reach the savage rent in the hull where the Drakkar had ripped their way inside. The lights were flickering intermittently in this section of the ship and jagged shards of metal were strewn all over the floor, where a rotating drill had bored through and torn open a huge hole for the Drakkar to board. There was no activity in this section of the corridor, but the sound of fighting had intensified with the sound of high-pitched lasers alternating with the throaty rumble of some kind of heavy-calibre weapons.\n\n*No contact yet,* he murmured to Alyssa as he set off again, frowning at the sight of a shredded Ashanath crewman, the flesh stripped from his bones.\n\n*Rachel and I have just landed, Sakura will be touching down in thirty seconds,* Alyssa updated him, her playfulness subsiding as their situation became much more dangerous. \n\nJohn raced down the corridor, speeding along at his accelerated walk. The reflective silver surfaces of the hall made it obvious that this part of the ship had all been constructed by the Ashanath, but as he followed a ramp down, then took a sharp left, that abruptly changed. The aluminium alloy that the Ashanath had used to rebuild the ship ended at a serrated tear only a few metres from the turn. He turned off thermal-imaging to get a better look and shivered at the sight ahead of him. \n\nThe corridor beyond was built from some kind of lustrous black metal, with maroon lighting set into the floor that shrouded the passage in a sinister red gloom. Despite the foreboding appearance of the original Progenitor construction, it also felt eerily familiar, the architectural style resonating deeply within him. John wasn't sure which to be more unnerved by, the frightening look of the place, or the fact that it felt oddly comforting.\n\nPutting such disturbing thoughts behind him, he swept onwards, encountering more of the butchered Ashanath crew. They'd been torn apart, devoured by the raiding Drakkar forces, who'd left nothing but bloody carcasses strewn about the floor. It was not as though this place needed dismembered corpses to appear any more intimidating, but the Drakkar seemed fully intent on turning the Legacy into a horrific charnel house.\n\nJohn approached an intersection and from their position on the overlay map, it was clear that the Drakkar had split up to hunt the Ashanath crew. The sound of gunfire was loudest from his right, so he wasted no time in taking that turn, hurrying towards the sound of conflict. A bright orange laser bolt sizzling across a corridor was the first sign of battle, answered by a Drakkar's roar and the thump of some kind of vicious weapon in return. \n\nSpeeding up to the corner in a cautious walk, he glanced around to take a quick look, then grimaced in revulsion at the butchery ahead of him. The Drakkar were engaged in a running battle with fleeing Ashanath crew, but they clearly weren't trying to kill them outright. The wounded had been pounced on by Drakkar warriors and the corridor was filled with the Ashanath's agonised, drawn-out screams, sounding shrill through their voice modulators. As distressing as those high-pitched cries were, they at least drowned out the disgusting sound of the Drakkar gnawing voraciously on Ashanath flesh.\n\nJaw clenched with anger, John raised his Punisher rifle and took aim at the closest of the black-armoured Drakkar, its chunky battlesuit reminding him of a Bract beetle's shiny carapace. He set his weapon on low-power mode in an effort to maintain the element of surprise, then aimed at the back of the Drakkar's head and squeezed the trigger. To his astonishment, the railgun slug bounced away harmlessly, a red dome flickering into view. It was barely visible in the dim illumination, but just enough for him to realise the Drakkar was protected by some kind of energy shield.\n\n*The Drakkar in black armour are shielded,* he warned Alyssa, pulling back around the corner and shouldering his Punisher rifle. \n\n*I'll inform Sakura, she's just boarding now,* Alyssa replied a moment later. *No contact with the Drakkar for Rachel or me yet.*\n\nJohn took a firm grip on the hilt of his crystal Alyssium sword, pulling the long white blade over his shoulder. He paused for a second, then asked, *You know what I've been planning. Do you think they're ready?*\n\n*Yes,* Alyssa replied simply.\n\n*Then you know what to do,* John said decisively, before stepping out into the corridor.\n\nEyes narrowed in righteous fury, he stalked towards the closest of the feasting Drakkar, his sword gleaming ominously in his gauntleted hand."
    ],
    "authorname": "Tefler",
    "tags": [
        "artificial intelligence",
        "blowjob",
        "cum inflation",
        "psychic",
        "drakkar",
        "ashanath",
        "fleet battles"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-78"
}