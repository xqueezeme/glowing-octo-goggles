{
    "title": "Amazing Grace Ch. 05-07",
    "pages": [
        "CHAPTER FIVE\n\nFairy Tales are Overrated\n\nEthan released my wrists while he was still fully seated inside me. I hadn't realized how much I wanted to touch him until that moment. Then my fingers were weaving into his hair and running over his back as if my life depended on it.\n\nHe started to rock his hips to move inside me and I hissed.\n\n\"Sore?\"\n\nI nodded. \"I'm sorry.\"\n\n\"It's okay, baby.\" Ethan eased out of me and shifted his hip onto the mattress, flush against my side. He swung his leg over my hip and tucked me into his chest, enveloping me with his arms. \"This is just as good.\"\n\n\"Liar.\"\n\nEthan chuckled and kissed the top of my head. \"Okay, you're right. But I'd rather you enjoy it with me than be wincing in pain.\"\n\n\"That doesn't sound very Dom-like?\"\n\n\"Why not?\"\n\n\"Aren't you supposed to like inflicting pain?\"\n\nEthan laughed and squeezed me almost painfully. \"I do. Sometimes. Not like that, though.\"\n\nI wanted to ask him more about it but I chickened out. I wasn't sure I was ready to talk about that just yet. I was really starting to like him and I was afraid he'd say something that might scare me. I knew he sensed it, too. I got the feeling he was taking things a lot slower than he usually did.\n\n\"What did you think of your first clitoral?\"\n\n\"I thought you'd broken me down there.\" Ethan chuckled and kissed my temple. \"No, seriously, you were amazing.\"\n\n\"You were the one who did it, not me.\"\n\n\"What do you mean?\"\n\n\"I just helped you to get where you wanted to go.\"\n\n\"I've never done that before in my life, Ethan. I swear.\"\n\n\"Shhhh, don't get upset. I understand. All I'm saying is that you deserve most of the credit. Why is that so hard for you to accept?\"\n\n\"I don't know, because it doesn't feel that way to me. You were the one who ordered me to come.\"\n\n\"Yeah, but that was just timing. You were about to go on your own.\"\n\n\"It was your voice that tipped me over the edge.\"\n\nEthan nuzzled my hair as he spoke. \"Mmmm, I'd love for that to be the case someday.\"\n\n\"That's how it is in all my fantasies about you.\"\n\n\"It is?\"\n\n\"Yeah.\"\n\n\"Damn, Grace. You're making me hard just talking about it.\" Ethan ground his pelvis into my backside to prove his point. It sent a tiny shockwave of arousal through my body.\n\nI tried to turn my focus on less stimulating topics. \"I had some questions that popped into my head earlier but I can't remember now what they were.\"\n\nEthan stilled his hips and readjusted me in his arms to better converse. \"Something about what we were doing?\"\n\n\"No, more like about Domination/submission in general. How that works.\"\n\n\"What we just did, what I plan to do this weekend with you, is simply called 'topping'.\"\n\n\"How is that different than dominating?\"\n\n\"Well, it's not when you put it like that. But when you refer to D/s or M/s, you're really describing a relational pairing. A type of relationship.\"\n\n\"What are you saying? That we're not...?\"\n\n\"No, stop that. Of course we're in a relationship. It's just not a D/s one. Yet, anyway. That sort of interaction takes time. And I'm not sure that's something you want.\"\n\n\"I'm not sure I know what it is.\"\n\n\"Exactly.\"\n\n\"Is it like having written agreements in place, and rules, and things like that?\"\n\n\"It can be. It doesn't have to be that formal. Most D/s couples I hang around just know what their boundaries are without having to put them on paper.\"\n\n\"How is that different from any other type of relationship, then?\"\n\n\"Sometimes it's not, I guess. Every D/s coupling is different. The common thread through all of them is that in one or more aspect of their interaction is the understanding that one party is Dominant while the other is submissive. That may just be prevalent in the bedroom, or it may encompass all aspects of their life, including the household and even work.\"\n\n\"I thought it meant that the submissive always has to do what the Dominant wants.\"\n\nEthan chuckled, \"I wish.\" I twisted my neck to scowl at him. \"I'm just kidding, stop your frowning. Actually, that wouldn't interest me in the least.\"\n\n\"Then what does interest you?\"\n\nEthan took a few moments to think. \"I have to be in control in the bedroom. I don't think I can even function any other way.\" He paused a few seconds before continuing. \"I feel more comfortable when I'm the one driving our activity as a couple. But that doesn't mean that we only hang out with my friends, or do what I want.\n\n\"I like to push my partner past boundaries, if you haven't figured that out already. Occasionally, that will involve some physical discomfort.\"\n\n\"Pain?\"\n\n\"Yes.\"\n\nI held my breath, afraid he was going to continue.\n\n\"Does that bother you?\"\n\n\"A little.\"\n\n\"Then we won't talk about it.\"\n\n\"But what if that's a deal-breaker for us?\" It was the single irksome thought that had been creeping around the back of my mind since we first started seeing each other.\n\n\"It won't be. Anyway, talking about it isn't going to solve anything. I can't possibly describe to you the experience because it's dependent on the situation and your state of mind at the time. I will say this, though. I won't do anything you don't want me to do.\"\n\n\"So, you won't whip me?\"\n\n\"I didn't say that.\"\n\n\"But you just said...\"\n\n\"I said that I wouldn't do anything you didn't want me to do. When the time comes, you'll want it. Mark my words, Grace. Just as sure as I'm lying here with you, there will come a time when you'll beg me for it. And if I'm very lucky, you'll do it out loud and not in that busy head of yours.\"\n\n\"I don't think I'm wired the right way for that. What if I never get to that point?\"\n\n\"You don't have to be an all-out masochist to want to be whipped. Not all sessions are punishing. I know a lot of women who orgasm from being sensually flogged. I think you'd really get off on that.\"\n\n\"You do?\"\n\n\"Oh, yeah.\"\n\n\"Now you have me curious.\"\n\n\"And so it begins.\"\n\nI growled at him and pretended to try to free myself. He just chuckled and tightened his grasp until I stopped moving. We stayed in that position sharing a comfortable silence for several minutes. Then another nagging question prompted me to speak. \"Was that okay for you?\"\n\n\"Yes. Of course it was. Why do you ask?\"\n\n\"Well, because, you know, I couldn't keep going and everything.\"\n\n\"Oh, baby, that's fine. I told you not to expect it to be perfect the first time. We're just getting started.\"\n\n\"I know, but I don't want to disappoint you.\"\n\n\"Oh, God Grace, is that what you think?\"\n\nI shrugged.\n\n\"You are far from a disappointment, baby.\"\n\nEthan's whole demeanor seemed to change and I felt so guilty that I'd tainted our post-coital cuddle with my own insecurities. I was carrying some baggage. I knew it. But that didn't change anything. I couldn't help feeling the way I did.\n\nWe both sort of fell into a pensive state. Each in our own thoughts. This time it was Ethan who broke the silence. \"Grace, baby?\"\n\n\"Yes?\"\n\n\"I want you to go to the bathroom and run a hot bath. I think it will help with the soreness.\"\n\n\"Okay.\"\n\n\"There's a washcloth next to the sink.\"\n\n\"Are you coming with me?\"\n\n\"I'll be there in a few minutes.\"\n\n\"What about these?\" I held out my wrists.\n\nEthan unbuckled the straps of each cuff and set them aside. My heart sank when he did it. \"This is temporary. I'll put them back on after your bath.\"\n\n\"Are you going to tie me up again?\"\n\n\"Probably not tonight. But I want you to wear them, anyway. As a reminder.\"\n\nEthan tilted my head and kissed me deeply, plunging his tongue into my mouth without hesitation. His hand slid up my stomach to cup my breast as he did so and I gasped in his mouth.\n\n\"Now, go.\"\n\nHis kiss sent my senses reeling. It took me a moment to get my balance when I stood.\n\nI padded to the master bathroom and headed straight for the tub, stopping the drain and turning on the water. It was only then that I realized I was completely naked. I'd been so stunned by his kiss it hadn't dawned on me. I walked to the door and peered out to the bed. Ethan wasn't there. I started to close the door and stopped myself. It seemed like such a prudish thing to do. He told me he was going to join me in a few minutes. It's not like he hasn't seen you naked, Grace. You were tied to his bed, for God's sake.\n\nA heated flush crawled up my neck and face as I tried to process the reality of my previous situation. I was so excited when he was doing it that it never dawned on me to be embarrassed. My hot cheeks are proof enough of my embarrassment now. I glanced around the bathroom for a mirror. There was none. Oh, surely there's one here somewhere.\n\nI swung the door halfway closed and checked behind it. Nothing. Isn't that the strangest thing?\n\nThe bathtub was filling quickly. I felt the temperature and decided it would do. I shut off the faucets and snatched the washcloth from the countertop before stepping into the tub and lowering myself into the water. I was definitely sore. I immediately soaked the washcloth and went to work gently cleansing the sensitive tissue. I wanted to do it before he showed up. There were some indelicacies I wasn't ready to share, yet.\n\nI still wasn't sure how this was all going to work out with us. Everything I'd read, the interviews and research I'd done, seemed to describe more extreme D/s agreements. I couldn't quite picture Ethan trying to control everything I did. On the other hand, I looked to him for direction. And not just in bed. On our dates. In our conversations. We talked about my work and I asked for his opinion on things. Is that the same as a D/s relationship? Somehow I didn't think it qualified.\n\nIt felt natural to just let him lead, though. And I wasn't giving up anything. At least it didn't feel that way. I tried to recall if I felt anything different when I was tied up. When he was clearly topping me. Other than being immensely aroused, I couldn't recall anything. It was amusing to me that at no time did I even view what we were doing as different. But it was different. What we did wasn't anything like the sex I'd had with Robert. It was better. Way better.\n\nI thought about the stories I'd written. Some of them, not all of them, had BDSM elements in them. But writing about nipple clamps, butt plugs, spankings, and bondage wasn't the same as capturing the essence of the lifestyle. I still had so much more to learn. And I knew that the only way to do that was to live it.\n\n\"Hey, baby. How's your bath?\"\n\nI glanced up when he entered, surprised that he was wearing a pair of shorts. His hair was wet. \"Good. Are you going to join me?\"\n\n\"No, I took a quick shower. I brought you a bottle of water.\"\n\nI tried to hide my disappointment, but I must not have done a very good job. I've never been known for my poker face.\n\n\"Grace, I'm trying to give you the space you need to process all this. I don't want to overwhelm you. I'm not pushing you away. Just the opposite. I'm afraid if I press you too hard, you'll run. You understand what I'm saying, baby?\"\n\nI nodded, \"I think so.\"\n\nEthan kneeled beside the tub with a concerned expression. \"I need you to trust that I'm not going to leave you.\"\n\nTears stung the corners of my eyes. He'd hit the nail on the head. I was already looking for signs that he wanted out without even realizing it. \"I'm sorry. It's hard for me.\"\n\nI was barely managing to hold back the flood.\n\n\"I know it is. After our talks, I was expecting this. It's okay. I'm not going anywhere.\"\n\nOnce again, I felt like such a basket case. How many more of these little episodes am I going to have? How many more will he tolerate before he changes his mind?\n\nEthan picked up the folded towel that was sitting next to the sink and opened it up. \"Come on. You've had enough time to soak.\"\n\nI nodded and lifted the plug to let the water drain before standing up. I stepped out of the tub and into the towel he held open for me and then let him dry me off.\n\nAll of a sudden I felt very drained. I couldn't keep my eyes open as he swiped the towel over every inch of my damp body. In such a short span of time I'd cycled through so many emotions it just wiped me out.\n\nEthan tossed the towel over the side of the tub and then led me back to his bedroom. I lifted my chin and smiled enthusiastically in an effort to appear perkier than I was. I suspected that Ethan was younger than me, and I guessed that the girls he played with were young and eager, too. They probably go all night without tiring. It was a damned annoying thought that made me feel inadequate in whole new ways.\n\nEthan sat me on the bed and fastened the cuffs around my wrists. \"What side of the bed do you usually sleep on?\"\n\n\"I've moved to the middle, I'm afraid. No sense in staying on one side when there's no one on the other half.\"\n\nEthan chuckled. \"I couldn't agree more. We'll just have to share the middle.\"\n\nWhen he'd finished buckling the cuffs he patted the pillow indicating I should lay down.\n\n\"I need to turn off some lights and check the front door. I'll be back in a second.\"\n\nI listened while he did exactly what he said he was going to do. I secretly wondered if he realized how important it was to me that he did that. I wondered if all jilted women had the same need.\n\nEthan returned a moment later. He shucked his shorts and crawled under the covers, immediately sliding to the center of the mattress and tugging me toward him. We shifted and adjusted, finally settling into a comfortable spooning position.\n\nHis voice was a soft whisper at my ear. \"Are you comfortable?\" I nodded. \"No unwanted memories for you?\"\n\nIt took me a second to realize what he was asking. Robert was the furthest person from my mind. \"No, not at all. Robert didn't spoon.\"\n\n\"How could he resist, with this body?\" His question was obviously rhetorical. After a few seconds of silence I heard him mumble. \"Some guys are clueless.\"\n\nI don't remember anything after that.\n\n***\n\nA cramp in my left calf woke me up. I flexed my foot to make it go away, then I became aware of the weight holding me face down on the mattress.\n\nEthan was draped mostly over me, with his head resting between my shoulder blades. No need for restraints. I couldn't possibly escape this.\n\nI felt a hot, wet tickle down my spine and quickly realized that he was drooling. The first thought that came to my mind was how cute I thought it was, followed by the realization that if it were me doing the drooling, I'd be mortified.\n\nI lay still, allowing the fog to lift slowly. The ambient light told me it was morning, but I had no clue as to the time. And for once, I didn't care. I had no other commitments. And I was content.\n\nAfter several minutes of unfocused thinking I began to stir ever so slightly. My muscles and joints were nearly numb from being trapped in one position. As they reawakened, I became aware of the rocklike object pressing against the back of my thigh. I wasn't positive it was an erection, at least until a moment later when Ethan stirred and removed all doubt. He was unbelievably hard.\n\nEthan groaned and pressed his hips against my backside. His need was evident and it ratcheted up my own desire a notch. I wondered if I was ever going to get used to this beautiful man wanting me.\n\n\"Reach up and grip the headboard for me.\"\n\nHis gruff command send a wave of fresh arousal through me the likes I would never have imagined. I quickly obeyed.\n\n\"Don't let go.\"\n\nI gasped as I felt the hot gush deep within me. His instructions were arousing me beyond reason.\n\nEthan's hands moved over my body freely, caressing my skin, squeezing my buttocks and reaching beneath me to grope my breasts. After a few moments of exploring, he focused his energy on kneading my buttocks. He lifted his hand and delivered a quick slap across one butt cheek.\n\nI yelped and tightly gripped the bars of the headboard. He repeated it again, obtaining a sharp clapping noise with the blow. The sound was more alarming than the feel of it.\n\nI'd been spanked before. It was in my college years. My first taste of kink. It wasn't what I had expected at the time. I'd had numerous fantasies about being spanked and it just didn't come close to that. I just figured I wasn't cut out for it like some girls.\n\nBut this, this was something different. Maybe because Ethan already turned me on so much. Or maybe because I was holding onto the headboard like he'd ordered me to do ... I don't know. But there was definitely something other than my butt cheeks heating up.\n\nI arched my back to more fully present my backside to him. Ethan's hand stilled and then reached between my thighs to finger the wetness that was beginning to pool there.\n\n\"Damn I want to lick your pussy. But not unless you're going to come while I'm doing it. We're going to work on that today, baby. Are you too sore for me to fuck you?\"\n\nI gasped and shook my head. \"No. Please...\" I couldn't think of anything I wanted more.\n\nHis palm continued to come down hard on my buttocks, one blow after another. \"I want your ass good and pink when I do.\"\n\nEach slap was beginning to reverberate through my sensitive, swollen pussy. I thought it might drive me mad. \"Please fuck me, Ethan. I can't stand it.\"\n\nEthan growled and yanked apart my thighs. A second later I felt the head of his cock easing into my opening. There was a pinch of pain but it quickly dissipated as he slid farther inside me.\n\n\"God your cunt feels good, baby.\"\n\nI'd never imagined that such a confession would excite me, but my own pussy betrayed me with a spontaneous contraction. There was something indescribably sexy about the way it sounded.\n\n\"I want to feel you come around my cock.\"\n\nI shook my head. \"Don't wait for me.\"\n\nThere was a sharp sting on my hip, accompanied by a loud clap. He'd slapped it hard.\n\n\"Ow...\"\n\nI waited for an explanation for the punishing blow, but he offered none. He merely started rocking his hips.\n\nHe lifted one of my thighs higher on the mattress to gain a better angle for a deeper thrust and then began to pump in earnest. He released tiny grunts each time his dick slammed into me and the sound of his raw voice unraveled me unexpectedly.\n\n\"Oh, E ... E ...\" I couldn't get out his full name between thrusts as he pounded me even more furiously as I came. And then a few short moments later, he joined me.\n\n\"Fuck.\" Ethan's muscles locked in place, his pelvis fully thrusted against me as he unloaded. \"Fuck, baby. Fuck.\"\n\nI couldn't understand why he was still cussing. He was clearly finished ejaculating. I lifted my head and turned my face to the side with a questioning expression.\n\n\"You're milking my cock dry.\"\n\nI frowned, still not sure if that was a bad thing or a good thing.\n\n\"It's unreal. Fucking amazing.\" Ethan collapsed onto my back, heaving and sputtering in a weak cough.\n\nIt was far from the romantic interlude I'd been taught I should demand from sex. It was better ... I came. With him inside. It wasn't the first time it had happened, but it was the quickest I'd ever come.\n\nAnd it dawned on me just how overrated fairy tales really were.\n\nCHAPTER SIX\n\nPlaytime\n\nAny tension I might have felt as a result of really not having a single clue what to expect next was gone; or at least had been dissipated by our morning session.\n\nEthan went to the kitchen to make coffee while I got cleaned up and dressed. I sort of expected him to tell me what to wear and everything, but he didn't. So, I pulled on my shorts and oversized tee and walked into the kitchen. His smile as I approached told me I'd chosen the right clothes. They were the same ones I'd be wearing if I were at home without him. Comfortable.\n\nHis arm outstretched when I was a few feet away from him and I stepped into his embrace. It was all so natural.",
        "After a few moments of kissing, he pulled away. \"Thanks for indulging me earlier.\"\n\n\"Indulging you? What do you mean?\"\n\n\"I shouldn't have spanked you like that without talking with you about it first. You put off all the right signals. I forget that all this is new to you.\"\n\nSignals? \"I'm not sure what you're talking about, but that wasn't my first time being spanked.\"\n\n\"Still. It was a conversation we should've had beforehand.\"\n\n\"Well, don't beat yourself up over it. I enjoyed it.\"\n\nEthan nodded. \"Yes, I know. That doesn't excuse my behavior, though. It's important that you acknowledge that I have realized my mistake and intend to remedy it.\"\n\nI nodded. \"Okay. How are you going to remedy it?\"\n\n\"We're going to spend some time talking through some things today. I want to understand you better.\"\n\n\"Sounds reasonable. Although, I'm pretty sure I told you everything about myself this past week.\"\n\n\"That's just the surface stuff. For starters, I want to know what's behind your aversion to cunnilingus.\"\n\nI instinctively flinched when he said the word. Then I could feel my cheeks heating up. Ethan observed me with an amused expression on his face, complete with that annoying smirk of his. It was just too early in the day for that sort of talk.\n\n\"One of the things you're going to have to get used to, Grace, is that I'm direct. If we're going to be intimate, then we need to be able to talk candidly about things. There just isn't any other way. We can't afford to hide details that might hurt us later when we're playing.\"\n\nI nodded. \"I understand. I'm just not used to it, that's all.\"\n\n\"I realize it's been awhile since you've opened up to a man. I like that, actually.\"\n\n\"No, Ethan. It hasn't just been awhile. My husband and I never talked about things like that. I'm pretty sure he never said that word in my presence. Ever.\"\n\n\"Oh. Really? Okay.\"\n\n\"But I want to talk about things with you. It's important; I agree.\" I took a deep breath and continued. \"That particular act has never done anything for me.\"\n\n\"Nothing?\"\n\n\"No.\"\n\n\"Have past lovers tried to get you off and been unsuccessful?\"\n\nI scrunched up my face in thought. \"Not exactly. I mean, the few times that it's come up, it wasn't to get me off as much as to just get me ready enough to do other things.\"\n\n\"Okay. I think I'm picturing the drill. Did the guy like it?\"\n\nI shrugged. \"Not particularly, I don't think. But I wasn't expecting him to, either.\"\n\n\"Why not?\"\n\n\"I don't know. Because...\" I scrunched my nose and shook my head. \"...It's just ...\"\n\n\"Obviously you've never tried it if you're making that face.\"\n\nI shook my head and frowned at him.\n\n\"I'm not suggesting we go out and get a girlfriend for you or anything. But, I think if you had some idea of what it tastes like, you'd change your mind. Do you like peaches?\"\n\n\"Yeah.\"\n\n\"How 'bout baked potatoes?\"\n\n\"Yeah. Why?\"\n\n\"Just an idea I have. In the meantime, I want you to understand something. I love the way you taste. I would've stayed down there for hours last night had you not been so uncomfortable with it. There are days when I literally crave it, Grace. So, you don't have to feel the tiniest bit uneasy that I might be doing that out of obligation. In fact, one of the real benefits for the bottom in these situations is that the top does what they want, not what the bottom wants.\"\n\n\"You stopped last night because that was what I wanted.\"\n\n\"No. I did not. I changed my course because I didn't feel like working through it with you at the time. We will be revisiting this today and throughout the rest of the weekend. I'm not dropping it, Grace.\"\n\nThe forcefulness in his voice sent a chill down my spine. A good chill, apparently, because I could feel my nipples hardening. I swallowed hard and nodded.\n\n\"You hungry?\"\n\nI nodded again and smiled.\n\n\"You have your choice of Pop Tarts or cereal.\"\n\nI chuckled and covered my mouth quickly.\n\nEthan grinned at me and shrugged. \"I'm a bachelor. What do you expect?\"\n\n\"It's fine.\"\n\n\"I know it's fine. I can't believe you just laughed at me.\"\n\n\"Are you going to take me over your knee again?\"\n\n\"Again? This morning wasn't punishment. I did that for my own enjoyment. Anyway, to answer your question ... no, of course not. We haven't agreed to certain behaviors that will lead to punishment. And if we did, that would certainly not make the list. How boring would it be if you couldn't even laugh at me or if you just agreed with me all the time?\"\n\n\"I'll remember you said that.\"\n\nEthan seemed to ignore my challenge, setting a couple boxes of cereal on the counter and the box of Pop Tarts. Then he pulled the milk from the refrigerator.\n\n\"I'm curious about your experiences with spanking.\"\n\nIt's like he's talking about the weather. \"I, uh, tried it with a guy in college.\"\n\n\"Oh, yeah, the same guy you tried bondage with?\"\n\n\"Yep, that's the one.\"\n\n\"Was that when your likeness of spanking started, or was it before that?\"\n\n\"I'd read about it. It made me sort of hot, so I wanted to try it. But I didn't really get into it when we did it in college.\"\n\n\"That's surprising.\"\n\n\"Why?\"\n\n\"You were into it this morning.\"\n\nI covered my face with my hands.\n\n\"Don't do that, Grace.\"\n\nI pulled my hands away. \"What?\"\n\n\"Don't be embarrassed about it around me. If you want to be that way around other people, that's fine. Whatever. But not around me.\"\n\n\"I'm not embarrassed, exactly. I just got so ...\"\n\n\"Horny. Needy. Yeah, I know. I loved it.\"\n\nMy brain was trying to make sense of the fact that he liked me that way. It wasn't how I was raised to act.\n\n\"Why is that so hard for you to believe? I'd like to think that you want me as badly as I want you.\"\n\n\"I do.\" I shocked myself at how quickly I said that.\n\nEthan smirked. \"What's the harm in letting me know?\"\n\n\"I don't know. I guess there is none, if you're not going to think of me, you know, badly.\"\n\n\"You mean, like a slut?\"\n\n\"Yeah.\"\n\n\"Well, I might. But, not in a bad way. More like my slut. Eager for me.\" Ethan pulled me toward him. \"I like the sound of that, actually. Do you?\"\n\nI was amazed by how much I liked the sound of it. Not of being called a slut, particularly, but of being called his. I nodded.\n\n\"I'll never call you that name in public, Grace. Nor will I ever think of it in derogatory terms. Okay?\"\n\n\"I appreciate that.\"\n\n\"But I might call you one next time you arch your back like a cat in heat.\" Ethan grinned and pulled me to him for a playful kiss.\n\nI forgot to blush.\n\nWhile we were finishing breakfast, Ethan began to talk about plans. \"Is there anything you want to do today?\"\n\nI shook my head and frowned.\n\n\"What?\"\n\n\"I thought you said you liked to decide what we do as a couple.\"\n\n\"I do. I will decide. But not without your input. I need to stop by the grocery store today to pick up a couple of things and then we can decide on dinner, too. And today they're having some mega sale at that book store that's going out of business. I thought you might like that.\"\n\n\"Oh, yeah.\"\n\n\"Yeah, there might be a few geek manuals I can pick up for cheap. Other than that, the rest of the day is open. What would you be doing if you weren't with me?\"\n\n\"Oh, gosh, I don't know. Probably laundry and housecleaning. Painting my toenails, maybe.\"\n\n\"Let's pick up some polish while we're out. I'd like to watch.\"\n\nI held my wrists out in front of Ethan. \"Do you want me to...\"\n\n\"No. You're only wearing them now because I get a kick out of seeing them on you. But that's private.\"\n\n\"If I wasn't here, what would you be doing today and tonight? Would you go to the dungeon?\"\n\n\"No. I don't go alone. And if you weren't here, I'd just be fiddling around on my computer. Probably playing games until all hours.\"\n\n\"Ethan, should I have a safeword?\"\n\n\"Yes.\"\n\n\"Then why haven't you asked me for it?\"\n\n\"We haven't needed one, have we?\"\n\n\"No, I guess not.\"\n\n\"Okay. So, when the time comes, I'll ask. And if I don't, just bring it up. If you feel uncomfortable with anything, just tell me and I'll stop. You don't need a safeword for that. Just communication. But if we ever play a non-consent scene, then it's definitely required. And when I whip you, I'd like to work out a progression of signals.\"\n\n\"You seem awfully confident that I'm going to agree to that.\"\n\n\"That's because I am. Come here.\"\n\nI took the two steps over to where he was standing. He removed the cuffs and my wrists felt light and bare. I rubbed where the cuffs had been.\n\n\"Is your skin raw?\"\n\n\"No. It just feels funny without them now.\"\n\nEthan smiled and rolled his eyes. \"I can already see that I'm setting some kind of precedence. Come on, let's go.\"\n\n***\n\nWe shopped and talked as we strolled down sidewalks and across parking lots. We did all the usual things that couples do. We bantered over silly things and laughed at each other's jokes. We held hands and stole kisses at all the appropriate moments. I thought we garnered sidelong glances from a few people, probably wondering what the heck we had in common.\n\nI still didn't know if we had enough to base an entire relationship on, but we had enough for that point in our friendship, anyway. Only time would tell.\n\nAlmost from the moment we reached his place, things shifted. It was so subtle, I wouldn't have even noticed except I was watching for it. I was missing the more commanding Ethan.\n\nHe reattached the cuffs on my wrists and claimed my mouth in a demanding kiss as if he'd been denying himself that privilege for hours. The effect was intoxicating. I held onto his arms to keep myself upright.\n\nLord, how he turns me on.\n\n\"I'm going to bind your wrists behind your back.\"\n\nI nodded, still breathless from his kiss.\n\n\"Take your shirt and bra off for me, baby.\"\n\nThe way that simple command and endearment rolled off his tongue ... That level of sheer sexiness should be illegal. I didn't think twice about doing it. In fact, you would've thought my shirt was on fire, I removed it so fast.\n\nEthan clipped the cuffs together behind my back and grinned at me. \"Are you feeling adventurous?\"\n\nI bit my lip and whined. \"I'm not sure.\"\n\n\"Oh, I have to do it now. Don't move.\"\n\nHe left me standing in the doorway to the living room. I could hear him rifling through a drawer and then walking back to me. He held out his palm to show me what he had.\n\n\"Just for a few minutes this first time.\"\n\nI blanched and took a step backward. The door stopped me, making a loud noise as I drove it into the stop with my bound arms.\n\n\"Oh, please. Come back here and stand in front of me.\"\n\nMy feet moved before my brain could stop them.\n\n\"Now, hold still. These clamps have adjustable screws.\"\n\nI hissed as he started to attach the evil little nipple clamps. It wasn't out of pain as much as anticipation of pain. When he finally had them attached, they felt interesting. Heavy. A little like he was playing with my nipples.\n\n\"There. How's that?\"\n\n\"It's okay. Good, actually.\"\n\n\"They look amazing.\" Ethan leaned over and swiped his tongue around the perimeter of the clamped area.\n\nIt sent an electric pulse straight down to my sex. \"Oh!\"\n\n\"Yeah?\"\n\n\"You can leave them on for awhile if you want.\"\n\nEthan laughed more heartily than I'd heard him the entire time I'd known him. \"Oh, that's funny. Do they make you feel all tingly down below?\"\n\nI scowled at his playful suggestion. He knew exactly how they made me feel.\n\n\"I need to fix something in the kitchen. Come with me.\"\n\nAs I followed him, Ethan turned around to walk backward for a few strides, grinning wickedly. I couldn't resist the opening. \"You're pretty proud of yourself, aren't you?\"\n\nEthan chuckled and tilted his head. \"And you're pretty cocky for someone who's bound and clamped. Better watch it or I'll attach a chain to those clamps and lead you around by it.\"\n\nHis threat was empty and I knew it. Not that I doubted he might do that at some point. I could feel he had an agenda that he wasn't going to let me derail him from. If I'd known what it was at the time, I might've tried harder to distract him.\n\nHe popped two potatoes in the microwave and then began slicing a peach on the counter. He'd bought a small frozen lasagna at the store but it remained in the freezer.\n\n\"What are you making?\"\n\n\"An appetizer. Sort of.\"\n\nAbout the same time the peach was sliced and on the counter, the microwave sounded its alarm. Ethan speared the spuds with a fork and dropped them on the counter. Then he sliced them open like you would if you were fixing a baked potato. He buttered both of them fairly heavily and then walked around the counter to where I was sitting.\n\nHis lips were on mine in a heartbeat. His hands cupped the undersides of my breasts and with every caress I could feel the pull of the clamps on my nipples. Every move was a fresh shockwave to my sex causing me to moan in his mouth.\n\nHe moved one hand to my shorts and began to unfasten them. Then he slipped his hand into my panties to cup my sex and curl his finger inside me. He moved the thumb of his other hand over my clamped nipple. The direct stimulation was shocking.\n\nHe removed his hand from my shorts and broke our kiss so that he could suck on his wet finger. The tangy aroma met my senses but I must've been too distracted to care. Or I simply accepted it because he was so into it. I'm not sure which one it was.\n\n\"The taste is so unique, it's hard to describe. The closest I can do is try to recreate it for you. Stand up.\"\n\nI slid off the barstool and Ethan led me to the edge of the carpet. He tugged at my shorts and then pulled both my shorts and panties to the floor. He helped me balance as I stepped out of them.\n\n\"I want you on your knees. I'll help you.\"\n\nI tried to appear as graceful as possible, which was difficult given that I was anything but. He was infinitely patient about it though, guiding me slowly to my knees.\n\nI felt naked on the floor. It felt wrong.\n\n\"Just be patient a few more minutes, baby.\" Ethan caressed my cheek and it settled my nerves a bit. Then he walked to the kitchen to retrieve the food. I could hear him doing some last minute preparation before he returned, but I couldn't see what it was.\n\nEthan set a bowl on the floor in front of me. It appeared to be one of the baked potatoes he'd prepared a few minutes earlier.\n\n\"Sit back on your haunches and spread your knees. In a few moments I'm going to remove these clamps. But I promise you'll wear them again. I like how they distract you.\"\n\nEthan's eyes feasted on me for several seconds and it warmed me from head to toe. His expression was a mixture of hunger and bliss and I knew that I could become addicted to seeing it. I was sure of two things in that moment. One, that no one had ever looked at me like that before. And two, that I would do anything he asked me to do.\n\nHe dropped to his knees next to me and began caressing my skin. My stomach, my arms, my breasts. He worked his way up my thighs and lightly caressed my spread labia with his fingertips.\n\nI whispered, \"Ethan...\"\n\n\"Shhh. I know what you want, baby. But I want something, too. More than anything right now.\"\n\nHis fingers were tracing the lines of my flesh as he spoke. It was positively maddening.\n\n\"Lean forward and eat. Let your face fall into it. Don't worry about the mess. We'll have fun cleaning it up afterward.\"\n\n\"I don't think I'm hungry.\"\n\n\"You don't have to actually swallow any of it. Just taste it.\"\n\nHe removed his hand from my pussy and allowed me to fold forward. My sensitive nipples swayed against the carpet as I got settled and I seriously thought it might make me climax. I had no idea how close I already was to doing so until that moment.\n\nThe first taste surprised me. It wasn't exactly a buttered baked potato as I had thought. It had a slightly tangy flavor to it. Peach? It didn't taste like peach, but I knew he'd sliced one and that would explain the tanginess.\n\nIt didn't taste bad. It was warm and soft on my tongue. Fleshy and buttery and tangy all at once.\n\nEthan stroked my arms and hair as I worked on the food before me, becoming more aware by the second of the point he was making with the whole exercise.\n\n\"That's what you taste like to me, Grace. As close as I can get to it, anyway. Is that bad?\"\n\nI shook my head.\n\n\"It's good enough to eat, isn't it?\"\n\nI swallowed a mouthful and nodded. Then I felt his fingers beneath my breasts. He released both clamps at once and a heated rush of throbbing pain attacked my nipples. I screamed through gritted teeth. A few moments later, after the initial rush of pain, the throbbing in my pussy intensified. Suddenly I needed to come. Badly.\n\n\"Sit up, Grace.\"\n\nHe was between my open thighs before I could get my bearings. His tongue mercilessly assaulting my hard, sensitive clit. All I could think about was how badly I needed to come. He held me in place and continued a relentless rhythm across the same spot. Over and over and over. I was floating at the heavenly sensation.\n\nAnd then just like before, everything started to unravel at once. Thousands of shards of glass exploding outward. I screamed. I cussed. I called his name, or I didn't, I'm not even sure. My mind was total mush. And once the final convulsions left my body, my muscles were mush, too.\n\nEthan scrambled to wrap his arms around me and keep me from teetering. \"Easy, baby.\"\n\nHe unclasped my wrists and pulled me forward so I could straighten my legs and lay on the floor. He never stopped holding me, though. And once I was on my back on the carpet, he was on top of me, kissing my face, my lips.\n\nA few seconds later, it felt like, he was inside me. His gorgeous hips were between my splayed thighs in the most vanilla position of them all. With a few twists, maybe.\n\nEthan yanked my wrists over my head and pinned them as he thrust inside. I lifted my knees and met his pounding. A heavy line creased his forehead. His eyes were dark and he was growling with every buck.\n\n\"Come for me, Grace.\"\n\nI groaned and tried to focus harder. I wanted to please him, but I didn't know if I could. That sort of thing had never really been in my control.\n\nAnd then a thought occurred to me. It's not your choice. He has control.\n\nEthan's fingers moved to my sensitive nipple and pinched. It was the final tip I needed. The reminder that he was in charge. I yelled out my climax and this time Ethan joined me, growling and grunting as he slammed his pelvis into me for two finishing thrusts.\n\nCHAPTER SEVEN\n\nTurning Point\n\nI should be ashamed of myself.\n\nThat's what I kept thinking, anyway. I couldn't wrap my head around the fact that I'd eaten out of a bowl on the floor. Naked. And then allowed Ethan to go down on me. Why did I agree to all that?\n\nThe birds-eye mental images I had, like photographs taken from the attic, were torturing me. Lewd. Unladylike. Shameful. Whore.\n\nI'd brushed aside the guilt for too long and now it was choking me. Feeling the rough carpet fibers against my back, I couldn't help but feel like the cheap slut my husband had been fucking. I could still clearly remember the email I'd uncovered describing such an interlude. All hurried sex on the living room floor. Our living room floor, no less.\n\nHe cheated on me for this exact thing. It didn't matter to him what promises he broke. Maybe if I'd learned how to be a slut sooner, he wouldn't have had to cheat on me. He could've fucked me just like this.\n\nI couldn't breathe. I pushed and squirmed to get up.\n\n\"Grace, are you alright?\"\n\nEthan quickly rolled to the side and watched in horror as I scrambled away from him. Don't look at me. I'm hideous. Air. Breathe. I fought to suck air into my lungs.",
        "\"Grace, stop. I'll get them off.\"\n\nWhat the fuck is he talking about? I can't breathe.\n\nEthan moved to me and unbuckled the cuffs that I was clawing at. I'd scratched my arms in a panic.\n\nDirty. Shower.\n\nI fled to the master bathroom with Ethan on my heels. I turned on the hot water and was about to step in when I was abruptly yanked backward. Ethan leaned around me and added cold water, then pulled me into the shower with him.\n\nNo, no, no, no, no! You don't want me. Leave me alone.\n\nI tried to push him out, but he was stronger than me. And bigger. He wrapped his arms around me and held me still.\n\nAnd then the tears came. A full rush. Wracking, gut-wrenching sobs. I was sure they would never stop.\n\nWhen the water started to run cool, Ethan shut it off. The only sound left was my soft hiccups and sniffles. I shivered in his arms and he opened the shower door to wrap me in a towel. He kept at least one arm around me at all times, making it difficult to dry himself. All the while, never saying a word. No questions. No attempt to comfort what he didn't understand. What he couldn't possibly understand because I didn't even understand it.\n\nHe walked me to his chest of drawers and pulled one of his tee shirts out and over my head. I dropped the wet towel to the floor. His shirt wore like a dress on me, draping to mid-thigh.\n\nEthan managed to dress himself while still holding onto me. I didn't watch how he did it, I was still dazed from my episode. At that point, I was sure that things were over between us. I'd been waiting for the other shoe to drop and it sure as hell just did. Hard.\n\nThe thing was, I didn't feel bad about it. I just wanted to crawl back into my safe life again. Where I knew no one could hurt me.\n\nEthan pulled me onto his lap. I hadn't even noticed that he'd walked me to a chair in the corner of his bedroom.\n\nI finally found my voice. \"I should get going.\"\n\n\"Why?\"\n\n\"You don't need this kind of hassle.\"\n\n\"I think I'll judge what I need and don't need. Is that the only reason why you want to leave?\"\n\n\"I've made a complete ass of myself.\"\n\n\"How? By having a little breakdown? So, what.\"\n\nI shook my head and sighed.\n\n\"Have you really thought all along that you'd just waltz through all this? That you would submit to my will and it would be easy as pie? Just like that?\"\n\n\"I didn't think this would happen.\"\n\n\"We can't ever know what's going to happen when we open ourselves up.\"\n\n\"I panicked.\"\n\n\"Yes.\"\n\nI turned my head to check his expression. He was calm and relaxed. \"Is this normal?\"\n\n\"Shit, I have no clue what that word means anymore. Is there such a thing? Because if there is, I'm surely not it.\"\n\n\"I'll bet you've never freaked out like this.\"\n\n\"Everyone is different. I've freaked out. Just not in exactly the same way. Mine involved a lot of broken shit.\"\n\n\"Will you tell me about it sometime?\"\n\n\"Of course I will, baby.\"\n\nHe turned sweet at just the right time. It was smooth. Too smooth. It occurred to me how experienced he probably was at handling submissives and it made me wince. I don't want to be handled. \"You don't have to coddle me, Ethan. I don't think I'm cut out for this at all. Maybe we should just call it quits now before someone gets hurt.\"\n\n\"Ouch. Too late for that. I already have feelings for you, Grace. I don't want to just call it quits. Do you?\"\n\nI was surprised by his confession. It didn't even sound like something he would say. \"No.\"\n\n\"Then let's take that off the table right now. I'm not even close to ending this. We're just getting to the good part. The real stuff. And you're so wrong about not being cut out for it. You're just scared. It's okay. I'm scared, too.\"\n\n\"You are? Of what?\"\n\n\"Of pushing you away. Of getting hurt.\"\n\nIt dawned on me that his fears were the same as mine. And somehow that brought me closer to him. Like we weren't on opposite sides anymore. That's weird that I would even picture it that way. He's not the enemy.\n\nI rubbed my eyes and sighed. And then I finally decided that maybe if I said the things I was thinking out loud, it would feel better. At least it would all be out in the open.\n\n\"I guess I've been sort of thinking of us as being on separate sides. That I had to play my hand, and then you'd play yours, and we'd sort of have this game. That there was clearly going to be a winner and a loser. But if we want the same things, and we fear the same things, then we really aren't against each other, are we?\"\n\n\"No.\"\n\n\"I've got all this baggage, Ethan.\"\n\n\"So do I, Grace.\"\n\n\"Yours isn't obvious, though.\"\n\n\"Not yet. My time will come soon enough. You'll be wishing we were dealing with your shit instead of mine.\"\n\n\"I don't know.\"\n\n\"Can you tell me what happened in the living room?\"\n\nI sighed. \"A whole bunch of old crap that has nothing to do with you or anything we did. I was remembering this email from my husband's lover that walked through in explicit detail this one session they'd had on the floor in our living room. And then everything just sort of came crashing down on me at once. All this guilt. You know how tiring it is to feel guilty about everything all the time?\"\n\n\"You've got to let it go.\"\n\n\"That's easier said than done.\"\n\n\"It'll happen. Just be patient. I'll try to avoid carpets from now on.\"\n\nI chuckled. It sounded so silly. \"I'm just one big field of land mines.\"\n\n\"I guess we'll just have to blow them up one at a time until there are none left.\"\n\n\"That could take years.\"\n\n\"I hope so.\"\n\nI turned to look at him. He was smiling up at me so sweetly I had to kiss him. I intended for it to only be a chaste kiss, but his lips were so soft and inviting, I didn't want to stop.\n\nHis hand slid around the back of my neck and his fingers wove into my hair. He held me firmly in place so he could deepen the kiss.\n\nThen he was standing and carrying me to the bed. He set me down, hardly losing contact with his lips. I pulled him with me as I lay back. Our tongues danced and swirled in a gentle rhythm. There was no urgency in the kiss, only understanding and love.\n\nWe remained like that for what felt like an eternity. He caressed my cheek with the back of his hand as he gazed into my eyes and I could feel myself surrendering to him in a different way. I didn't want to fight it anymore. I wanted to love him and I wanted him to love me.\n\nI was the one to make the first move beyond kissing. I gripped his hand in mine and placed it on my breast as I smiled up at him. His touch was sweet and gentle. He ran his thumb over the soft cotton of his tee shirt where my nipple was hardening beneath the fabric. He smiled as it responded to his caress.\n\n\"Will you let me make love to you, Grace?\"\n\nI smiled and whispered, \"Yes.\"\n\nEthan went slow. We kissed for quite awhile longer. His hand eventually moved under the tee shirt to fondle my breasts. He allowed me to remove his shirt and shorts. I outlined each one of his tattoos with my fingers, asking questions and listening to the stories. And when I'd finally exhausted the art gallery, we settled back to kissing and fondling.\n\nI stroked his length gently and was surprised at how wild it drove him. He was painfully hard just from my light caress. It felt so good to do that to him. To have that kind of power over him when he'd been the one with all the control.\n\nHis lips moved over my nipples. They were still a little sore from earlier, but it felt good. His fingers trailed down my stomach as he suckled at my breast. Then they were exploring me.\n\nI knew even before his fingers reached my slit that I was ready for him. But when his finger slid so easily inside and he moaned, I thought I might come right there.\n\nHe moved over me and tilted his pelvis so the head of his cock was at my opening. Then he rocked his hips and entered me. I gripped his shoulders as he took his first few strokes and then I couldn't believe what happened next. I climaxed. And two strokes later, so did he.\n\nEthan Hadfield came after five minutes of making love to a woman. No handcuffs. No nipple clamps. No hard pounding. And I went with him.\n\nIt was a turning point for us."
    ],
    "authorname": "D_Lynn",
    "tags": [
        "bondage",
        "cuffs",
        "spanking",
        "cunnilingus",
        "nipple clamps"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/amazing-grace-ch-05-07"
}