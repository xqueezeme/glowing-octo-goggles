{
    "title": "Teacher's Halloween DP",
    "pages": [
        "Summary: Divorced costumed teacher bumps into ex-students at bar and....\n\nNote 1: This is a Halloween 2020 Contest Story, so please vote.\n\nNote 2: Thanks to Tex Beethoven,\n\nTeacher's Halloween DP\n\nDid I want to go to that bar?\n\nNo. I hadn't finished feeling sorry for myself.\n\nDid I want to dress up in some skanky outfit?\n\nA little. People staring because they thought I was hot would be good for my ego.\n\nDid I need to get laid?\n\nAbsolutely! I'll explain.\n\nThe divorce had hit me hard, and now over a year later, my two best friends were insisting I go out with them... were declaring my Pity Party was officially over. And as much as I hated to stop my wallowing and admit it, they were right.\n\nI needed to get out, let my hair down, and hopefully to spread my legs. My vibrator had been adequate for a while, but I craved a real cock... someone's body pressed against mine... someone's cock slamming into me.\n\nAmy and Jules came over, already dressed in their skanky Halloween costumes, both of them single: Amy a fuck-them-and-leave-them kind of gal, and Jules a lesbian who'd been single for a while.\n\n\"Do I have the perfect outfit for you!\" Amy crowed, handing me a bag.\n\n\"I can only imagine,\" I said dubiously, as I looked at her nurse outfit and fishnets that would get any patient's temperature rising.\n\n\"It's not as revealing as what she wanted to get you,\" Jules added, in a sexy and revealing cowgirl outfit.\n\n\"I can only imagine,\" I repeated, as I opened the bag.\n\nI pulled out a black bodysuit. \"What is it?\" I asked, as something else black fell to the floor.\n\n\"You're going as Catwoman,\" Amy revealed.\n\n\"Nice,\" I said, Amy knowing I loved Batman, especially the old original sixties series. Yes, it was corny... but I used to watch it every Sunday morning for an hour. It was even better than Saturday morning cartoons.\n\n\"I knew you'd like it,\" Amy said.\n\n\"You wanted her to be a slutty cheerleader,\" Jules pointed out.\n\n\"I did at first, but once Jules pointed this one out, I knew you'd love it,\" Amy shrugged. \"Go and try it on.\"\n\n\"Cool,\" I said, kind of excited to do just that.\n\nAs I headed for my room to put it on, Amy called out, \"And no underwear.\"\n\nI called back, \"Rubbish! I'm not a slut like you.\"\n\n\"Tonight you are!\"\n\nOddly I did go without a bra at least, partly because the Catwoman mask would hide my identity, and partly because I'd already had a couple of drinks and was already losing my inhibitions.\n\nSo, I stripped completely naked, then decided I wasn't drunk enough to go sans any underwear at all, so I donned some skimpy panties and black pantyhose, realizing how thin the costume's fabric was. I didn't want to go flashing my pussy to all and sundry if the outfit got ripped.\n\nI slid into the black bodysuit, which fit very snugly around my body, and looked into my full-length mirror. Shit, you could easily see my nipples poking through the thin material. Then when I turned around, I saw that my ass, which was a great asset of mine, was perfectly showcased. I put the mask on, which covered the majority of my face and my hair, and I realized I looked a lot like Julie Newmar. Happy with the outfit, and brave because I'd be spending the night with a secret identity, and perhaps even hook up with some younger stud... if I was going to get banged tonight, I wanted it to be with some college hottie, who could shoot two or three loads (I loved cum... especially swallowing it, something my asshole ex used to love feeding me before he replaced me for a younger model), and someone who could last for a couple hours.\n\nI slipped into a pair of four-inch black pumps and sauntered out, where I appropriately received a few cat calls.\n\nI pranced around, snarling meows and clawing the air, loving the attention.\n\nWe downed two more shots each while waiting for the Uber, and then headed to a bar where Amy guaranteed I'd get laid. I pointed out I was just going out to have a good time, and she nodded, \"Exactly.\"\n\nWe got to the bar, and I soon realized how old I was compared to this crowd. Most of these kids were fresh out of high school, some of them even looked like they could be in my senior chemistry class right now. I sighed as I saw the plethora of young, scantily clad almost-women who would get all the attention, and realized I was a dinosaur... fuck, I'd be fifty in five more days.\n\n\"Let's get our groove on,\" Amy said, undaunted, taking my hand and leading me onto the crowded dance floor.\n\nFiguring fuck it, I may not be able to compete with these young sluts, but I could at least enjoy dancing... something I'd always loved doing, but hadn't done much of since saying 'I do'... even though I didn't remotely know the song that was playing.\n\nThe three of us danced for the next hour through endless similar sounding songs, getting my ass grabbed a couple times by strangers, and swallowing down three more drinks.\n\nAfter getting my fourth drink since arriving, I perused the bar and recognized someone... Danny. He was a student of mine who'd graduated a couple years ago, and a really good looking kid. I waved to him, but then remembered I was incognito and quickly lowered my hand.\n\nDanny though took my wave as a 'come on over', and he left his two friends and headed my way.\n\n\"Someone's coming over, Laura,\" Amy said.\n\n\"I know, but he's an ex-student of mine,\" I said.\n\n\"Perfect,\" she said, making light of the predicament I'd just placed myself in.\n\n\"Hi,\" Danny said, \"may I get you another drink?\"\n\n\"Yes... yes, you certainly can,\" Amy spoke for me, and then added, making me instantly go red from both embarrassment and anger, \"In fact one or two more, and you can take her home.\"\n\n\"What's your poison, Catwoman?\" he asked.\n\nDidn't he recognize me? I guess except for my eyes and lips, there wasn't much showing to recognize me with, as I was pretty much unrecognizable in this costume. So going along with it, I answered, \"Rum, please.\"\n\n\"My kind of lady, mon,\" he smiled. \"And for you two other pretty ladies?\"\n\nAmy shook her head, \"No thanks, we'll just go off and leave you two alone; just treat her right, okay?\"\n\n\"I will,\" he agreed seriously.\n\nAmy added, \"Which means you should treat her like a cheap slut, since she hasn't been laid in over a year.\"\n\n\"Amy!\" I gasped, once again both embarrassed and angry.\n\n\"Am I wrong?\" she asked, bulldozing right through how badly she was humiliating me.\n\n\"Just go,\" I told her, shaking my head in exasperation, even though inwardly I appreciated her expediating this game Danny and I were about to play... my intentions were already thrown out there, and I hadn't even had to say it.\n\n\"Have fun,\" she said, as she and Jules sauntered away.\n\n\"Yeah, yeah,\" I said, trying to act embarrassed, which I was, yet I was also ready to actually be that slut for a night... my most recent one night stand had been in a different century, probably before Danny was born .\n\n\"We'll be around,\" Jules said, \"but only if you need us,\" giving me the slightest hint of support.\n\n\"They seem nice,\" he said, not following Amy with his eyes like most guys had been doing all night, but focusing only on me.\n\n\"They're something, all right,\" I laughed, knowing that in Amy's mind, she'd just played the perfect wing girl.\n\nDanny waved to the bartender, and I was soon enacting a clich\u00e9, a two-fisted drinker, with one in each hand. \"So, I have to say I love your outfit. If I may be so bold, it makes you look almost identical to how Julie Newmar used to look.\"\n\n\"You know Julie Newmar?\" I asked.\n\n\"I have the limited edition blu ray box set,\" he said.\n\n\"With the car?\" I asked, having bought it for myself on Amazon, when it was on sale for some crazy cheap amount.\n\n\"Yeah, you have it too?\" he asked, surprised.\n\n\"I've watched every episode a few times,\" I admitted.\n\n\"I've never met a woman who even knows the show existed.\"\n\n\"Well, the girls around here look so young their parents wouldn't even remember the show,\" I joked, and instantly realized how completely I was dating myself with such a comment.\n\n\"I only have eyes for you,\" he said, which was such a corny line from way back in 1959, yet I fell for it hook, line and sinker.\n\n\"Is that your best line?\" I asked, pretending it didn't impress me. I didn't want to look like some pathetic old hag desperate to get laid.\n\n\"As in fishing? Is it reeling you in?\" he asked, which made me laugh at his witty banter... he'd always been a smooth young man.\n\n\"The hook may even have set,\" I smiled, his cute smile, the alcohol, and my year-long drought all factors in allowing this mutual seduction to advance.\n\n\"I imagine you'll make me work to get you into the boat,\" he said.\n\nHorny, and enjoying this flirtation, I smiled, allowing a little of Amy's persona to come out of me, \"a boat isn't what I'm hoping to get into.\"\n\n\"That's fortunate,\" he laughed. \"Because I don't have a boat.\"\n\n\"But do you have a bed?\" I asked bluntly, downing the rest of one of the drinks in my hands.\n\n\"I believe I do,\" he smiled. \"At home, conveniently.\"\n\n\"Because Catwoman would love to get out of these heels,\" I said, as they were killing me... having worn four inchers a major mistake.\n\n\"My place is just a few minutes from here,\" he said, indeed reeling me in.\n\nSuddenly realizing this was going too fast, even though my pussy was tingling with eagerness, I said, \"You do know I'm old enough to be your mother... perhaps even your grandmother.\"\n\n\"Possibly. But I like my women experienced,\" he said, taking my hand. \"And hot.\"\n\n\"And I believe a noisy little magpie told you I haven't been laid in a year,\" I reminded him.\n\n\"All good things are worth the wait,\" he said, able to respond adeptly to whatever I said.\n\n\"You're a real charmer,\" I said, taking another big swig of my other drink... the one he'd bought me.\n\n\"And you're the hottest woman here,\" he said suavely.\n\n\"I am, ain't I,\" I said playfully, then shaking my head at my pathetic grammar.\n\n\"You are, and I'm not just saying that to be nice.\"\n\n\"No, you're saying it to get laid,\" I smiled.\n\n\"Not so, although if that did happen, it would be great,\" he said. He added, \"I'm serious, you're a very beautiful woman.\"\n\n\"Well, that's nice to hear,\" I admitted, \"I don't get many compliments anymore.\"\n\n\"Then whoever betrayed you is a fucking asshole,\" he said.\n\n\"Yes... yes, he was,\" I nodded, and as I finished another drink I added, not realizing I was saying it until the words had left my lips, \"And that too hasn't happened for over a year.\"\n\nHis eyes went wide.\n\nI realized what I had said. Figuring it was already out there, I shrugged, and feeling brazen in my incognito, and uninhibited because of the rum, I leaned forward and whispered, placing my hand directly on his crotch, \"Sorry, I probably shouldn't be so frank, but I do like it in the ass.\"\n\n\"Ohhhhh,\" he groaned, as my cougar instincts took over.\n\n\"Is this hard because of me?\" I asked, squeezing his very impressive dick.\n\n\"Yes,\" he admitted, his suave persona suddenly flipped away by my sudden aggressiveness.\n\n\"I also love sucking a big cock, and swallowing a big load,\" I purred. \"Do you have a big load saved up for me?\"\n\n\"Yeah,\" he groaned.\n\n\"Want to take me back to your place and fuck me?\" I asked bluntly.\n\n\"Shit yeah, you're driving me crazy! Let's get out of here,\" he said, taking my hand and hurriedly leading me out of the bar.\n\nOnce outside, he said, \"Its a ten-minute walk, unless you want me to flag down a taxi.\"\n\n\"Hail us a taxi,\" I said, squeezing his cock again. \"I'm very hungry.\"\n\nDanny hailed a taxi, there were three already waiting just down the road, and once we were inside and his address had been given, I bent down and began to fish out his cock from within the fabric.\n\n\"Oh, God,\" he gasped, as I pulled his hard dick out and took it into my mouth, my costume making me feel free just to do it, without any risk to my identity... which was quite liberating. Tonight I could regress to my college slut self, when I'd explored my sexuality with quite a few guys, three threesomes (twice with two guys and once with two girls), and even a gangbang where I'd serviced four guys at once.\n\n\"You okay, sir?\" the taxi driver asked, and a moment later added, obviously having looked in his rear view mirror and seen where my head was, \"Oh. I guess you are.\"\n\nI hadn't had a dick in my mouth for over a year, and god, it felt good. I bobbed on the thick seven-inch cock, hungrily wanting to extract his first load during our very brief taxi ride. I was dying to feel his cock pulse in my mouth, and I was craving a load of warm cum.\n\nI bobbed for only a couple minutes before Danny, being a gentleman, warned, \"I'm going to come, if you don't stop right now!\"\n\nMy response was to moan and to bob even faster, and seconds later, his load was gliding into my mouth and warming my belly, as he let out a long moan.\n\nI slowed down and nursed his cock, getting every last drop of the salty seed, before the taxi came to a halt.\n\n\"We're here,\" Danny said, his cock still in my mouth, and still hard as steel... God, I'd missed the virile youth and their never-ending erections.\n\nI sat back up and said to the driver, \"Thanks for the ride.\"\n\nHe nodded, his eyes wide with shock, as I wiped my lips and got out.\n\nDanny paid the driver, and once we were outside said, \"That was crazy hot.\"\n\n\"I hope you didn't mind.\"\n\n\"Oh, trust me, I didn't mind at all.\"\n\n\"I just really needed your big dick in my mouth,\" I said wickedly, enjoying being so forward and nasty, taking full advantage of the anonymity of my costume while adding, \"But now I'm hoping you can reload quickly.\"\n\n\"I'm always loaded,\" he bragged, as he took my hand and led me into his dorm... regaining the suave confidence he'd briefly lost from my sudden aggression.\n\nWe walked past a few people, every one of them checking me out, of course my outfit helping to draw their attention. Remember how prominent my nipples were in my bedroom mirror? They were still doing their PR job admirably.\n\nOnce we were in his dorm room, he pushed me against the wall and kissed me. It was a passionate, lustful kiss, and I hadn't received one of those in two plus decades... the kind of kiss that made it clear he wanted me right here, right now.\n\nHis hand went to my pussy over the costume and he rubbed me, making me moan into his mouth. He then surprised me by ripping away the thin fabric of my costume, and soon below the waist I was just wearing my pantyhose. He rubbed his hands up and down my legs saying, just before he sucked on my pussy through my pantyhose, \"I've imagined doing this to you for years, Mrs. Cameron.\"\n\nMy eyes went wide as I let out a load moan from the sudden pressure of his lips on my fevered pussy, and I stammered weakly, stunned by his words, \"Y-y-you know who I am?\"\n\n\"I knew you instantly, as soon as you waved to me; I'd recognize those eyes anywhere,\" he said, \"and then once I heard your voice, I was certain it was you,\" as he tore my pantyhose open at the seam, dove into my wetness, and began to lick.\n\n\"Oh God, Danny, that feels so good,\" I moaned, unable to recall the last time I'd felt a tongue on my pussy, my ex fucking asshole almost never having gone down on me.\n\n\"You taste amazing,\" he said, which I needed to hear, since my ex bastard shit face had always said things about my scent and taste that were less than flattering.\n\n\"Don't stop,\" I moaned, as he tongue-teased my clit and slid a finger inside me.\n\n\"Not until you come, Mrs. Cameron,\" he said, as I lifted my right leg and draped it over his shoulder.\n\n\"That may not be very long,\" I moaned, as he slid two fingers inside my very wet pussy.\n\n\"I can eat this sweet pussy all night,\" he said, as he bathed me with his tongue and probed my pussy with his fingers... surprising me when he suddenly found my mysterious, I'd always thought it mythical, g-spot.\n\n\"Mother fucker,\" I screamed, likely alerting his neighbours that sweet little Danny boy had a horny slut in his room, as I erupted in seconds, as he tapped it like a drum.\n\n\"Oh yes, come all over my face, Mrs. Cameron,\" he said, as he lapped up my pussy juice as soon as it flooded out of me.\n\n\"Oh, God,\" I groaned, as I reached down with both hands to use his head for balance, as the intensity of the orgasm exploded inside me like sticks of dynamite.\n\n\"So delicious,\" he repeated, as he kept licking me, then pulling his fingers out and catching a massive gush of the wetness he'd first created and then released.\n\n\"So... fucking... amazing,\" I moaned, still trembling, still immersed in the aftermath of rapture. After another minute, as I just rested between his head and the wall, I said, \"I need your cock inside me now, Danny.\"\n\nI lifted my leg off of him, he picked me up and carried me across his room, and placed me gently onto the bed.\n\n\"Just slam that big cock into me, Danny,\" I said, spreading my legs wide, desperate to get fucked, desperate to feel his body on top of mine.\n\nAs he got out of his costume, he said, \"Get undressed, Mrs. Cameron, I want to see that beautiful body I dreamt of every night after I'd been in your class.\"\n\n\"You did?\" I asked, knowing I had an impact on the odd boy I taught, but never thinking I'd had one on Danny.\n\n\"Whenever you dangled your heel, or showed a bit of extra leg through your nylons, you had me hard for the rest of the day,\" he said, as I pulled my entire outfit off of myself except for the torn pantyhose, as well as losing the mask.\n\n\"These nylons?\" I asked, now barefaced and bare almost everything else, as I extended my foot towards him.\n\n\"Yes,\" he said, as he took charge of my foot and began to massage it.\n\n\"Oh, that feels nice,\" I said, having always loved foot massages... they were good for my diabetes... but Mr. Fuck Face Asshole had stopped doing them years ago.\n\n\"So soft,\" he said, as he glided his hands up and down them while licking the sole of my foot, slightly tickling me.\n\n\"I only buy sheer nylons,\" I said, having always relished the silky sheer feel and look.\n\n\"I've imagined doing this so many times,\" he said, as he sucked a toe into his mouth.\n\n\"Well, tonight we need to make all your fantasies come true,\" I offered, willing to do just about anything he wanted.\n\n\"Be careful what you offer,\" he cautioned, as he progressed from toe to toe.\n\n\"I'm serious, Danny,\" I smiled. \"Tonight the untouchable Mrs. Cameron is your submissive teacher pet to use however the hell you please.\"\n\n\"Shit, do you know when I used to fuck Janey, I often imagined I was fucking you?\"\n\n\"Well then, tonight instead of imagining it, you can really do it,\" I said, as I smiled at the idea he used to fuck one of the popular cheerleaders while imagining she was me... it was very flattering.\n\n\"Shit, you're so fucking hot,\" he professed, as he placed himself between my nylon-clad legs.\n\n\"Slam that big dick into me right now, Danny,\" I begged, desperate to feel his cock inside me.\n\n\"No one would believe this,\" he said, as he positioned his cock at my wet hole.\n\n\"What? That their straitlaced high school teacher is secretly a cock-loving slut?\" I asked, as he teased me by rubbing his cock between my pussy lips, but not venturing inside.\n\n\"Yeah. I can't even believe it,\" he said, as he tapped my clit with his fat cock head.\n\n\"What I can't believe is that you still haven't slammed that big fat cock in my cunt,\" I said, as I thrusted my ass up, trying to get it inside me.\n\n\"I could never imagine you using the 'C' word,\" he said, as he finally slid his cock inside me.\n\n\"Have you ever imagined fucking me right here in your dorm room?\" I moaned, as I wrapped my legs around him and pulled him deep into me.",
        "\"In my fantasies? All the time,\" he said as he began to fuck me, bracing his hands against my firm (for my age) tits.\n\n\"Well, tonight we make fantasies for both of us come true,\" I said, as he leaned down and kissed me.\n\nHe broke the kiss and asked, \"You've fantasized fucking a student?\"\n\n\"Many times,\" I admitted, and adding, \"or sucking a student, or licking a student, or even getting double penetrated by students.\"\n\n\"I love learning that you're so nasty,\" he said, as he reached back and grabbed my ankles, then levered them above my head and really began fucking me.\n\n\"Yeah, fuck your nasty teacher,\" I moaned, omitting the more accurate prefix 'ex', since it sounded hotter that way.\n\n\"God, you're so hot,\" he said, looking down at me as he slammed into me... my tits bouncing all over the place.\n\n\"Keep pounding my pussy,\" I moaned, wanting to be fucked as hard and as rough as possible. \"Drill my cunt!\"\n\nAnd for a few minutes, he fucked me hard in a number of positions. I was riding him reverse cowboy, a position where I could really milk a cock, when I heard a door... extremely nearby... gently closing, although I was so into the fucking it didn't really register.\n\n\"So do you really want to get DP'd?\" he asked, \"are you ready for an additional cock?\" as he bucked his ass up to meet my downward descent.\n\nI was still so horny at the moment, I would have taken as many cocks as might be offered to me, this intense fucking after my long spell of drought, mixed with just enough alcohol to loosen my inhibitions (which were already pretty loose in any case) so I answered, \"If you're serious, bring him on.\"\n\n\"You taught him too,\" he warned, as I stopped bouncing on his dick and looked down at him questioningly.\n\n\"Oh,\" I said, that additional detail suddenly jarring me back to reality. I somehow inherently trusted Danny and just knew he wouldn't out me... not that I was doing anything illegal. He'd graduated a couple years ago... but ethically I could still be on thin ice in the eyes of the school board.\n\n\"It's Chase Carter,\" he said.\n\n\"Oh,\" I said. Chase having been a shy but brilliant student.\n\n\"He's not so shy anymore,\" he said, adding, \"and he had a huge crush on you, too.\"\n\n\"He did?\" I asked, sitting upright on the big cock.\n\n\"Yeah, back then we used to toss ideas back and forth about what we'd do to you,\" he admitted, before adding, \"although we only knew about sex from porn back then.\"\n\nI laughed, \"And now?\"\n\n\"Now we have some working experience from teaming up to make a sexy MILF like you come like crazy, from two cocks at once!\"\n\n\"That is so bad,\" I purred, before calling out before I could change my mind, or rationalize why it was a terrible idea, my libido controlling my actions, \"Chase, get your ass in here.\"\n\n\"He's going to shit,\" Danny said.\n\n\"I hope not,\" I joked, as Chase stepped out of the small alcove just inside the door.\n\n\"Hey, sexy,\" I smiled, as I resumed slowly riding Danny, \"Want to double team me?\"\n\n\"Holy fuck,\" he gasped, his eyes going wide, and his jaw dropping like a cartoon character's.\n\n\"I happen to have in my company a nasty but anonymous slut who wants to be double teamed,\" Danny said. \"But you've never seen her before in your life, right?\"\n\n\"Danny!\" I gasped.\n\n\"Sorry,\" he quickly apologized, afraid he'd offended me.\n\nI laughed, \"Just kidding. I most certainly do want two virile young cocks pounding my holes and shooting their jizz all over me.\"\n\n\"Is this for real?\" Chase asked, as he rubbed his cock through his jeans... he was lamely dressed (for Halloween, remember?) as a cowboy. \"Are we actually going to DP Mrs. Cam... I mean this red hot stranger?\"\n\n\"Come over here and find out,\" I said, as I began riding Danny faster.\n\n\"Shit,\" he said, shaking his head and quickly shucking his clothes. He asked, \"How?\"\n\n\"How? For starters, you just shove your cock in my mouth or my asshole; and after that, the two of you do whatever the fuck you want with me,\" I said wickedly, knowing that would make both of their cocks throb.\n\nHe repeated, \"Shit,\" as he added, while I noticed that he too had a pretty nice cock, \"I meant how did Mrs. Cameron end up in our dorm room?\"\n\n\"Serendipity,\" I smiled, using an SAT word.\n\n\"This better not be a Halloween trick,\" he joked.\n\n\"Oh, I think it's rather a delicious Halloween treat,\" I smiled back, as he got onto the bed and offered me his cock to make hard. I said, as I took it in my hand, \"Nice cock, Chase.\"\n\n\"Thanks, Mrs. Cameron,\" he said, as I took it in my mouth and was spit-roasted in a rather unorthodox way.\n\n\"Mmmmmmmm,\" I moaned as I tried to bounce up and down on one cock while sucking another horizontally, but I quickly discovered I didn't have the coordination to do both from this position... I couldn't get into any kind of flow.\n\n\"I can't believe this,\" Chase said, apparently not noticing the frustration I was feeling over not being able to deep throat him and simultaneously ride Danny at all smoothly.\n\n\"I knew you'd never believe it,\" Danny said, both of them acting completely starstruck... which was pretty flattering.\n\n\"Not in a million years,\" Chase said.\n\nI allowed Chase's cock to slip out of my mouth so I could ask, \"Would either of you believe I'd occasionally have a butt plug stuck in my asshole while I was teaching you?\"\n\n\"No way,\" Danny said.\n\n\"Fucking wild,\" Chase said.\n\n\"Or that right now, what I really want and need is one of your cocks buried in that same asshole?\" I added.\n\n\"Holy fuck,\" Chase gasped.\n\n\"Me first,\" Danny dibbed, as I got off of him and onto my hands and knees, a more practical position for a spit-roast.\n\n\"Asshole,\" Chase accused, as Danny grabbed some lube from his nightstand... obviously I wasn't his first backdoor slut.\n\n\"Yes, I do want a cock in my asshole,\" I said, wiggling my ass.\n\nThey both got on opposite ends of me, and I took Chase back into my mouth while Danny poured lube down my ass crack.\n\n\"Get that asshole nice and gaped for my cock,\" Chase said, his cock smaller in length, but larger in girth.\n\nDanny then rubbed his cock up and down my ass cheeks while I bobbed on Chase's cock.\n\n\"Best cock sucker ever,\" Chase said, which made me feel good, as I'd used to be widely acknowledged as a great cock sucker... having sucked a dozen cocks one night at a sorority pledge night, and sucked at least one dick a day pretty much throughout my college years... but after years of lacking any cocks in my mouth, it was nice to know I hadn't lost my gift.\n\n\"She blew me and swallowed my load in the taxi driving here,\" Danny said. \"And you know how short a drive that is!\"\n\n\"No way,\" Chase said.\n\n\"I couldn't believe it either,\" Danny said, as he positioned his cock at my tight backdoor.\n\nI took Chase's cock out of my mouth to point out, \"Just for the record, I did suck Danny's big cock and swallow his delicious load in that taxi, but I still had my mask on at the time, so I didn't know that he knew who I was, and thus I was just an anonymous slut, instead of Mrs. Cameron the straitlaced slut... if that makes any sense.\"\n\n\"What were you dressed as?\" Chase had to ask, since all that remained on my body was my tattered pantyhose.\n\n\"Catwoman.\" Danny said.\n\n\"Oh my God, that is so hot,\" Chase said.\n\n\"Yep, my ass looked amazing,\" I said, before adding, \"although for some inexplicable reason, I don't have a dick stuck up it yet.\"\n\n\"So insatiable,\" Danny said, as he took that aside as 'do my ass now', and pushed forward.\n\n\"There you gooooo,\" I moaned, as his cock filled my long-neglected ass. Yes, there was a slight burn, but the alcohol numbed it, and I knew from many past ass drillings that the pleasure would soon conquer the pain.\n\n\"Fuck,\" Danny groaned.\n\n\"Fucking wild,\" Chase said, as Danny's cock kept going deeper into my ass.\n\n\"Why is my mouth not filled with cock?\" I asked, Chase's cock just out of my reach.\n\n\"Sorry,\" Chase apologized, as he slid his cock back in my mouth. \"Right now is just a demolition derby of a dozen unreachable fantasies all crashing together at once.\"\n\n\"When we tell him about this, Blake won't believe it either,\" Danny said, his crotch now resting against my butt... meaning his dick was balls deep in my backdoor.\n\n\"And when he does believe, he'll be so jealous,\" Chase added, his tone indicating he was happy about it.\n\nBlake had been the third of their triumvirate of friends... and the most outgoing of them. I briefly pondered suggesting they get him over here too, as getting all three holes filled at once would be crazy wild.\n\n\"Yeah, serves him right for going off to see his girlfriend,\" Danny laughed, as he remained deep inside me, but not moving.\n\n\"He's so pussy whipped,\" Chase added.\n\nI slipped Chase's cock out of my mouth long enough to complain, \"My ass isn't going to fuck itself,\" although in truth, I could bounce back and forth between the two big cocks.\n\n\"Sorry, just admiring your tight body, \"Danny said, as he firmly grabbed my hips and began fucking my ass.\n\n\"Oh yes, Danny, fuck my asshole,\" I moaned, then looked back to Chase, who on cue, slid his cock back into my mouth and resumed slowly fucking my face.\n\nAnd for three or four minutes, they each fucked me in perfect spit-roast fashion, impressively in perfect symmetry, as if they'd spit-roasted many girls or women in this exact same position.\n\nMy orgasm was building, but what I really wanted was to be double penetrated... something that used to give me the best orgasms when I was younger. So I asked rather lustfully, \"Do you two want to double penetrate your former teacher?\"\n\n\"Fuck yes,\" Chase said, as he pulled his cock out of my mouth.\n\nI told him, \"Lie down, Chase, I want to feel that fat cock stretching my cunt.\"\n\n\"Mrs. Cameron used the 'C' word,\" Chase said in awe, as he lay down on his back.\n\nDanny pulled out of my ass, I straddled Chase, and dropped my 'C' word onto his cock.\n\n\"Oh God,\" Chase moaned, as I leaned forward so my tits were dangling in his face.\n\n\"Shove that fuck stick back up my shit hole,\" I demanded, trying to sound as nasty as I possibly could.\n\n\"You're the hottest fucking teacher ever,\" Chase said, as Danny moved behind me.\n\n\"I bet you say that to all the slut teachers you double team,\" I said, as he sucked my hard nipple into his mouth.\n\n\"No way,\" he said. \"You're the Holy Grail, the dream deferred.\"\n\nI was impressed by his recalling my love for both Indiana Jones movies and Langston Hughes poems... even if the latter reference didn't fit very well; I wasn't black, and the system hadn't particularly shat on me. \"Then seize the dream, and give me your big snakes.\"\n\n\"Shit,\" Danny said, as he re-entered my asshole, and I finally had two cocks inside me, in the holes where I most preferred them.\n\n\"Oh yes, boys, double fuck me with those big cocks,\" I moaned, the pleasure swarming through me the moment both cocks began pumping in unison.\n\n\"We're going to give you whatever you want,\" Danny said, \"what you deserve,\" as he began fucking my ass, again timing his strokes to match Chase's... as if their cocks were meeting to shake hands inside me.\n\n\"Then pound both my holes until each of you fill me with cum,\" I moaned, as my body bounced around, a little like a Raggedy Anne doll.\n\n\"That won't take long,\" Chase said from underneath me.\n\n\"Come in me anytime you want, sexy,\" I said; \"I'm sure you'll reload quickly. Besides, you're already a load behind Danny.\"\n\n\"Fucking crazy,\" Chase said again, clearly in awe of whose pussy his dick was inhabiting.\n\n\"Fuck my holes like crazy,\" I moaned, even though they were both already really working over my holes... my second orgasm rising quickly.\n\n\"You like our big cocks, slut?\" Chase asked, surprising me a little by calling me that.\n\nI moaned, \"This prim and proper teacher loves your big cocks pounding my slut holes.\"\n\n\"Then fucking love this,\" Chase said, as he bucked up his hips.\n\n\"Oh God, you sexy teacher fuckers,\" I moaned, my orgasm about to erupt. \"Pound my cunt, fuck my ass, cum inside me!\"\n\n\"Oh shit,\" Chase groaned, obliging my request by exploding his load in my pussy.\n\n\"Yesssss!\" I screamed, as that triggered my second orgasm.\n\n\"Oh yeah, come, Mrs. Cameron,\" Danny cheered me on, as he kept drilling my ass.\n\n\"And you come in my asshole,\" I moaned, as I collapsed forward, his dick slipping out of me. <br >\n\nDanny quickly slammed back into me as Chase's cock slipped out of me, thus unblocking the way for my cunt cum to flood out of me.\n\n\"Oh yes, Mrs. Cameron, your ass is so tight,\" Danny groaned, as he reached even new depths from this angle.\n\n\"Come in your teacher's ass, baby, I want my asshole filled with your cum so badly,\" I begged.\n\n\"Oh fuck, yes,\" he grunted, and a few moments later he deposited a full load in my ass... as I'd now taken a load in all three holes... the ultimate trifecta.\n\n\"Yes, Danny, breed my asshole,\" I moaned, loving the nasty slutty act not only of being sodomized, but of taking a load in a hole that wasn't made to receive deposits.\n\n\"My turn,\" Chase said, as he crawled out from under me.\n\n\"What? You want to fuck your teacher's asshole too?\" I asked, as I looked up at him, my ass completely open for monkey business.\n\n\"Fuck yeah,\" he nodded, as Danny moved away and Chase quickly stretched my gaped asshole even wider with his fat cock.\n\n\"Oh yeah, Chase,\" I moaned. \"Stretch my asshole with that big, fat cock.\"\n\n\"So tight,\" he groaned, as he slowly fucked me.\n\n\"It won't be when you two are finished with it,\" I moaned, as I delighted in having his cock in my ass.\n\nDanny, surprising me, slid underneath me and began licking my pussy... eating Chase's cream pie.\n\nChase explained, \"Danny isn't gay or anything, he just likes cream pies.\"\n\n\"Ohhhh, hot,\" I said, wondering what it would be like to see Danny with a cock in his mouth. I added, \"Although I've always wanted to see a guy sucking a cock.\"\n\n\"The guy across the hallway is bi; he'd love to let you to watch him suck a dick, or take it in the ass,\" Chance said.\n\n\"So hot,\" I said.\n\n\"Yeah, it's nice to have someone on hand to swallow my load any time I strike out,\" Chase said.\n\n\"I'd like to watch that one day,\" I said, as a third orgasm began to build, even though my second one hadn't completely faded away.\n\n\"I can make that happen,\" Chase said, before adding, \"or maybe you can fuck him with a strap-on. He loves getting spit-roasted.\"\n\n\"Ooooooooh, that would be awesome,\" I moaned, as my pussy got licked and my ass was fucked. The idea of pegging a guy had intrigued me ever since I'd seen it in Deadpool. If it's good enough for a macho guy like Ryan Reynolds, it should be good enough for any man.\n\nFor fifteen minutes Danny licked me and Chase fucked my ass until I came a third time, and then Chase pulled out and said, \"I've always wanted to do this.\"\n\nHe spun me around, and within seconds, splattered my face with warm cum.\n\nI gasped appreciatively, \"You're a very, very bad boy!\" as rope after rope coated my face.\n\n\"So hot,\" he groaned, once he was done.\n\n\"Mmmmmmm, indeed,\" I smiled, as I scooped a big load off my chin.\n\n\"Best night ever,\" Chase said.\n\n\"Agreed,\" I said, scooping more cum off my face.\n\nI looked at Danny, thinking I could use a nightcap, \"Think you have one more load available before I go?\"\n\n\"Yeah,\" he nodded, as he came over.\n\n\"Just one more treat before I head home,\" I said, as I took his cock in my mouth. Again.\n\n.....\n\nEPILOGUE:\n\nEvery Saturday since Halloween, I now meet with Danny and Chase, and sometimes also with some of their friends, for marathon fuck sessions. I've been triple teamed, I've been the center of a lengthy train, I've been on the other side of a gloryhole from them for hours, I've been gangbanged by a dozen guys, I got chances to peg their bi neighbor Charles, and to watch him suck three cocks (eventually joining him cheek to jowl), was pelted by a massive rainstorm of a bukkake, and (this time wearing my Catwoman mask for anonymity, secure in the knowledge that not many of my ex-students would be able to recognize the staid Mrs. Cameron's naked body, AND inviting Amy and Jules along to shed their clothes and help celebrate the new and liberated me) I was the centerpiece of a marathon New Year's party that began with a fifteen-girl lesbian orgy employing toys and tongues, and concluded with a wild freestyle fifty-plus orgy of cocks and cunts, where I ate so much pussy, sucked so much cock, was fucked by a couple dozen cocks (including a couple more strap-ons), and likely had at least thirty loads of cum spewed into or onto me.\n\nI can't wait to see what 2021 has in store for me... my lone New Year's resolution is simple: to indulge in as much cock and cunt as possible.\n\nI think it's silly for people to make New Year's resolutions they can't keep, but this one should be easy to achieve.\n\nTHE END"
    ],
    "authorname": "silkstockingslover",
    "tags": [
        "anal",
        "double penetration",
        "dp",
        "group",
        "nylons",
        "spit-roasted",
        "stockings",
        "students",
        "teacher",
        "threesome"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/teachers-halloween-dp"
}