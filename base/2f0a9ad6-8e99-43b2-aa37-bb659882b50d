{
    "title": "180 Degrees-Tae & Vicky's Tomorrow 04",
    "pages": [
        "Had I really said those words to her? I mean...I shook my head slowly, chastising myself. What did it matter? I'd sacrificed everything for this woman. How could she not know? Here I was, after spending a small fortune to find her, lying beside her in this piece of shit hotel bed, the warm feel of her pressed against me as she slept...the smell of her...the taste of her lingering on my tongue... I'd just finished making her cry out for me again and again, desperate for the sound after so long, desperate for her...was it really a surprise? \n\nI sighed. I couldn't sleep. Instead I watched over her, keeping her safe, taking her in...hesitating to do what I needed to do next. I needed to get her out of this place. I'd found her first, but they were looking. And they would kill us both without hesitation. Just like they'd killed my father.\n\nAnd my grandfather was getting older. He couldn't do this alone anymore. There were a few guys who had moved up when my father died, but he wanted his own blood to take over. I was the only one still alive with his blood coursing through my veins. Even though I knew my mother was probably rolling over in her grave, pissed off that she'd gone through hell to keep me out...and yet here I was. And this time, I was all the way in, a complete 180-degree change in direction once again.\n\nI sighed again, pulling Vicky closer, breathing in her scent, wondering about the effect it had on me...the effect she had on me. She undid me. Unraveling my entire life, realigning stars and moons...and I was supposed to send her back down to those idiots in New Mexico and leave her there? The ones who had lost track of her in the first place? They were going to protect her? Keep her safe? I reached beneath the pillow and felt the cool metal of the Glock I'd put there earlier. Could they really keep her safer than I could? Should I let them try only to fuck up again? And what if I didn't find her first this time? What if I lost her for good? The thought made my heart pound...I would be useless if anything happened to her.\n\nBut what was the alternative? Bring her with me? It was so much worse than any Godfather movie. So much money...so much to learn...and so many people wanting me dead. Or they would when he passed the reigns over to me. A woman? A woman who had been a cop? Who knew so little about this life? I was supposed to run his organization? Jesus...Jesus. And here I was, kidding myself, thinking I could actually do this...thinking I could bring her with me...ruin her life...put her at risk every day. Every fucking day. I sighed...it weighed on me. All of it, every change, every new turn...and most of all her. I couldn't keep risking everything to keep her safe. I had to prioritize. And in order to do that, I needed to know she was safe. New Mexico was the best option. I wouldn't be with her, but she would be safe. And then I could focus on my life in New York...maybe.\n\n*\n\nI knew I'd exhausted her, knew I should let her sleep...but damn if I didn't need her again. I had no idea how much longer I'd have her to myself...I just needed... \n\nI turned to her, gently brushing strands of dark, silky hair from her forehead, from her cheeks...she was so beautiful, all that soft, caramel skin, those dark, long lashes, her full pouty lips...I could see her eyes darken in my mind as she came for me...and now the tension between my thighs would no longer be ignored. \n\nI leaned in to take her lips, kissing them softly, begging for entry, smiling as her lips parted for me, even in sleep. I moved in closer, teasing her with my tongue...tasting...savoring...enticing...drawing her to the surface. I stroked the rounded softness of her hip, caressing the length of her arm as my mouth continued to invite her to awaken...my hand gently stroking her delicious curves, pushing the sheet aside. She turned, lying on her back, her legs parting just a bit...just for me. I smiled again, my mouth no longer on hers as I shifted even closer. \n\nThe scent of her, aroused, could have me fighting wars. I mean, I actually understood the idea of Helen of Troy now. I watched as my fingers glided along the length of her inner thigh, raising goose pimples...seeking buried treasure. She moaned a little and I wasn't sure if she was asleep or awake...not that I cared. I just wanted to feel her, that warm liquid heat, grabbing me, holding me, pulling me in...I caressed the soft curls, trimmed neatly, that protected her from my attempts to ravish her. Not much protection, I smirked, as I traced her rapidly swelling nether lips. \n\nI bent to take a hardened nipple into my mouth as I slid the first finger into her, enjoying the feel of her heat as it wrapped around me. She moaned again, turning toward me to give me better access. I slid another finger in, sinking slowly, my teeth teasing her nipple, forcing her body to climb as I stroked...she gave in to me willingly, riding my fingers...tensing...wanting...immediately needing more...I shifted again, lying half over her, my fingers diving deeper, pumping into her, my thumb manipulating that wicked little nub, my fingers curving, listening to her breath hitch as I found that spot...tapping gently...my mouth on hers... rougher... demanding...her lips opening, receptive...begging me...she was close, I could feel her sweet muscles clamping around my fingers...hungry...desperate...\n\n\"Tell me again,\" she pleaded softly, her voice heavy with sleep and arousal, her body on the edge.\n\n\"I love you,\" I whispered.\n\nAnd I felt her explode, abruptly, her orgasm ripping through her, forcing the breath from her, totally claiming her. I didn't stop, continuing to fuck her, plunging in again and again, demanding her body quickly make the climb once more. Her body seized, the second orgasm consuming her, rendering her senseless. Still I continued, pushing her body to the next level until she opened her eyes, grabbing my hand to stop me from ravaging her, her lips covering mine beseechingly.\n\n\"Stop, you're going to be the death of me,\" she begged huskily.\n\nI sighed, resting my forehead against hers, \"good...then we'd be even.\"\n\n*\n\nShe fell into a deep, fatigued sleep this time, nestled against me...but I still couldn't sleep. Even in the darkness of the room, I wanted to continue memorizing every inch of her face, the sweet smell of her skin, the silkiness of her hair. Finally I felt myself dozing off, part of me still awake, still aware. \n\nIt was this part that heard someone walk by the hotel room door, pause, and then continue walking... \n\nIt was this part that heard someone quietly try the doorknob...\n\nAnd it was this part that had me moving with lightening speed, rolling over on top of Vicky, taking her with me as I hit the floor hard, just as bullets pierced wood and metal, drumming a nasty pattern into the wall above our heads. Unmoving, I lay on top of her, listening to her quick, panicked breaths, knowing I had to get us to a different location fast before the assholes shooting into the room realized they were aiming too high. I grabbed her hand, indicating she should stay low, and dragged her into the bathroom, pulling her into the bathtub, covering her with my body once again. The flurry of bullets continued for another few seconds and then stopped. But I remained in the bathtub, shielding Vicky's body with my own, my breathing rushed, the adrenaline pumping, for another five minutes. Then I moved, yanking her out of the tub, quickly demanding she dress while I gathered all of our shit. Moments later we were in my Mercedes, heading toward the nearest highway.\n\n*\n\nBefore I could even ask Vicky if she was okay, my phone was ringing. I glanced at the cell. It was my Grandfather.\n\n\"Cari\u00f1a?\"\n\n\"We're okay.\"\n\n\"Where are you?\"\n\n\"Plan B.\"\n\nHe disconnected the call without another word. Whoever had eyes on me had done a good job of reporting in...but not such a good job of watching my ass. \n\nI turned to look at the woman sitting beside me. Her face was frozen in shock, her hands, which she was wringing in her lap, trembling. I reached over and took one of them, holding on to it tightly.\n\n\"You okay?\"\n\nShe didn't respond. I took that as a sign that she wasn't okay. I pulled the car over, putting it in park before turning to her, a finger under her chin until her amber colored eyes met mine.\n\n\"Hey, you're okay, all right? I'm here. I won't let anything happen to you.\"\n\nThe words seemed to sink in, albeit slowly. After another few moments, when she was trembling a little less violently, I pulled back onto the road, turning the heat on high and directing the vents toward her.\n\nWe didn't speak for quite some time. An hour or two probably. My mind was going a mile a minute and I couldn't even imagine what she was going through. I knew how they'd found her, but how had they tracked me down? Especially since I know my Grandfather had men watching my back. The only answer I could come up with was that one of those men was also on Marcos' payroll. Had to be. No other way for them to find me in that crappy hotel that quickly.\n\nI certainly didn't relish the task of trying to determine who the traitor was. And I really didn't want to think about what I would have to do about it once I found out. And yet, whoever the asshole was had almost killed Vic. And for that, I would make sure he paid.\n\n***\n\nThe next few days passed in a blur as they drove down to New Mexico. Then Vic was walking through the vaguely familiar two-bedroom house she'd lived in for a year. Her clothes were still there, the few personal items she'd added to the bland d\u00e9cor still there...it was as if she'd been on vacation and was finally returning home. But this wasn't her home. This was the place where they kept her \"safe\" until she could testify against Jimmy L. and Marcos. This was basically a prison. Her entire life here had been a prison.\n\n\"Can we have a minute?\"\n\nTae's deep voice was directed at the U.S. Marshalls. They nodded and left.\n\n\"You're not staying here. They just wanted to know if you wanted to keep anything before they moved you.\"\n\nVic turned to her, \"what does it matter? Where ever they put me, you won't be there.\"\n\nShe watched as Tae sighed, \"babe, we've been over this.\"\n\nVic walked a few steps toward her, but then stopped. Tae had made up her mind. Made up their minds. She was safer down here, under the government's protection, than she would be in New York. Tae would be busy, training, learning, slowly taking over for her Grandfather. She couldn't keep an eye on Vic, couldn't keep her safe. The State's attorney would pick up the case where he'd left off and probably within a year, maybe a little longer, she would be a free woman. Then she could relocate to New York. But not before then. Not before it was safe.\n\nA great plan. A smart plan. A plan where everyone would be safe and happy...everyone except her. She couldn't imagine being away from Tae for a year or longer. Not again. Not now. Not when she finally knew where she stood with her. She sighed, turning away from Tae to quickly look around.\n\n\"I don't want any of this stuff. We can go.\"\nShe was shoring up her strength to deal with Tae leaving. Why prolong the inevitable? They would not let Tae know where they were moving her. This would be the last time she saw her for months...\n\nShe hadn't realized Tae was standing beside her until she felt those strong arms around her, pulling her close. Still, she couldn't stop the tears from gathering, from spilling over...\n\n\"Vic, you're killing me here. You have to trust me.\"\n\n\"I do.\"\n\nTae wiped the tears from her cheeks, \"they will keep you safe. And I will get word to you as often as I can.\"\n\nVic nodded, not wanting to make Tae feel any worse than she already did.\n\n\"I'll be fine,\" Vic assured her.\n\nTae nodded, \"I know, that's the point. Come on, let's go.\"\n\nVic sighed once more before following her from the small house. The sooner they got started, the sooner it would be over and she'd be with Tae again.\n\n***\n\nNo one at her old job knew what had happened. So, the powers-that-be told the employees she'd had a family emergency and had taken an unscheduled leave of absence. And just like that, she was the director of the day care center again. It only took a few weeks for it to feel \"normal\". After a few months, it was as if she'd never left. The heat, the dry, red earth, the smell of dust and dirt, the headache-inducing altitude which affected her even months later...yup, she was back in New Mexico all right. \n\nShe sighed as she looked over the file one of her teachers had given her a few days ago. The teacher had reported bruises on one of her student's upper arms and buttocks. In this instance, they were required to call child services. She was expecting a visit from them at any moment. It would be unpleasant. Most likely they would take the child into custody until they finished investigating, which could take weeks if not months. It would be hard on her student. And on the teacher. Still, it was important they did their jobs in this situation, just in case the child was being abused. It was better to be safe, and disrupt his life for a little while, than to ignore it and subject him to a life of possible abuse.\n\nThat is where her thoughts were when the intercom buzzed.\n\n\"Ms. Cummings, you have a unscheduled visitor?\"\n\nShe sighed, \"Lizzie, I told you child services was coming. Just send them in, okay?\"\n\"But\u2014\"\n\nShe waited for Lizzie to continue, but there was nothing else before a knock sounded on the door. \n\nShe stood, \"come in.\"\n\nBut it wasn't a representative from child services that opened the dark, heavy door. No. That chiseled, honey colored, handsome face, the slim, muscular form...no, not child services. She'd slept beside him for years. She felt her stomach contract painfully and forced herself to slowly sit down before her legs gave out beneath her.\n\nDylan.\n\nShe watched as he closed the door behind him.\n\n\"Hey babe,\" he smiled, as charming and attractive as ever.\n\nShe didn't respond...couldn't respond. Her heart was racing, beating so fast she thought she might pass out...her thoughts going a million miles a minute. How had he found her? How? And what was he doing here? What did he want? Was he here to kill her? If so, why not break into her apartment and kill here there? Why come to her job, endangering other people? She swallowed, but why else would he be here? She closed her eyes for a moment, the image of gray, stormy eyes filling her mind for just a moment. But when she opened her eyes, Dylan was still there, sitting in the chair across from her desk...a rather large silver gun pointed in her direction.\n\nThey sat, staring at one another for a few moments, before Dylan spoke.\n\n\"I'm not here to kill you.\"\n\nShe almost laughed...almost. Instead, she glanced downward, staring pointedly at the gun he held. She watched with some surprise as he lowered it and laid it across his thigh, his finger no longer on the trigger.\n\n\"I came here to talk.\"\n\nLater she would think she should have had a witty comeback, like \"perhaps the time to talk was before you beat the shit out of me,\" or something like that. But at the moment, nothing came to mind.\n\n\"So, at first Jimmy wanted me to just shoot you on sight, right? But then we were thinking...\"\n\nShe just waited, glancing at the gun still resting on his thigh, hearing her own labored breaths...\n\n\"We have a proposition for you.\"\n\nStill unable to respond, she sat in silence until he continued.\n\n\"Marcos and Jimmy are willing to forgive and forget, both you and your butchy friend, if...\"\n\nAgain they sat in silence for a few seconds as he paused for dramatic effect, an annoying habit of his she'd always hated.\n\n\"if you agree to kill the old man.\"\nShe blinked, pretty sure her hearing wasn't working. Was he joking?\n\n\"You want me to kill Don Carlos?\" She whispered.\n\nHe nodded, \"Marcos realized this is an ideal opportunity. They let you into the Brownstone. We heard the old man even met with you. He doesn't do that. We'll get you a weapon, you go to New York and you kill him. And all will be forgiven. You and your little girlfriend can just disappear and no one will bother you ever again.\"\n\nShe just stared at him as if he was insane. Actually, she was convinced he was insane. Kill Don Carlos? After he'd saved her life? And watched over her when she was looking for Tae? And Tae? She was supposed to be okay with killing her grandfther? They would just live happily ever after? \n\nSo she just continued to sit, dumbfounded, knowing if she said 'no,' he would put a bullet in her brain. But if she said 'yes' too quickly, they wouldn't believe her and would probably kill her anyway...\n\n\"How much time before I have to let you know?\" She choked out.\n\nHe hesitated, causing her to tense up even more...but then he smiled. A dazzling, mind-numbing smile that she would have moved mountains to see in the past. Now? She just hated him.\n\n\"Good answer Vi. Smart. Forty-eight hours. And then I'll be in touch, okay?\"\n\nHe stood, tucked the gun in the small of his back, winked, opened her office door and left. \n\nShe continued to sit there, frozen, for a very long time.\n\n*\n\nShe wasn't sure how she made it through the rest of the day. The meeting with Child Services took place not long after. They did indeed take the child into custody, as she thought they might. Then she had to deal with daily minutia until she could lock up the facility after the last child was picked up by a late, frantic mother.\n\nAnd then she was heading to her car, a simple, gray Ford that did not at all remind her of Tae's beautiful, sexy grey eyes. She waved to the security detail parked across the street. Tae had hired a small, local firm to watch her. If she called Tae, it would be the last time she saw them. Because how had Dylan appeared in her office without even a word of warning if they truly were watching over her? But that was the question, wasn't it? Did she call the Marshalls to report a breach, did she do nothing, coming up with an answer on her own in 48 hours, or did she contact Tae? What would Tae do? Bring her to New York, which is what she told herself she wanted? Put her plans on hold for a year, or more, to babysit her personally? Hire more people to watch her? What were her options?\n\nGod, if Dylan had been sent to kill her, she'd be dead right now. She'd been totally unprepared. She didn't even have a weapon in her office...the first thing she would change if she stayed in New Mexico. Besides, she liked her job, she didn't want to start all over again...but she so desperately wanted to leave Tae alone. To show her she could take care of herself. To prove she wasn't going to be a burden once they were together again.\n\nBut Dylan had been in her office today. That was a fact and this was not a game. He was going to kill her if she didn't give him the 'right' answer. She needed to actually do something before he reappeared. She needed a plan...and she needed help coming up with that plan.\n\nShe tossed her purse on the table near the front door as she locked the door securely behind her, turning on lights and kicking off her shoes as she moved through the brightly colored, spacious two-bedroom apartment. Typically the apartment got a lot of light and was a little more cheerful than the small house she'd stayed in before, but it was after 7pm and the sun had already set. Besides, she didn't have time to stare out of the window thinking about how badly she missed Tae today. So instead, she pulled the small loveseat away from the wall, lifting a corner of the wall-to-wall carpet she's pried lose previously, working lose the plank in the floor she'd also removed previously, and claiming the burner phone Tae had given her before she'd left. It was only for emergencies...and this was most certainly an emergency. She turned it on, relieved to see it still had a charge, and held down the number two so it could automatically dial the only number programmed into it. She listened as the phone rang once, twice, then three times. On the third ring, someone picked up but said nothing.",
        "\"Snow storm.\"\n\nShe spoke the code word nervously and then listened as the other person disconnected. Snow storm...it was how they'd met. They'd agreed on the code word because who else would know it? Who else would think of something so...boring? She stared at the phone in her hand, knowing she was violating her agreement with the government, knowing she was risking her life and Tae's life yet again...\n\nWhen the phone vibrated in her hand, a blocked number appearing on the screen, she almost cried with relief. She pressed the button and brought it up to her ear.\n\n\"Baby? You okay?\"\n\nThe words, asked in that deep, raspy, sexy-as-all-hell voice, were her undoing. She sank to her knees as the trembling she'd held at bay all day consumed her, tears choking her.\n\n\"Tae...\"\n\nA choked whisper, the only word she could get out as she tried to force herself to calm down, as she listened to Tae's instructions to breathe deeply, as she tried to pull herself together.\n\n\"Babe, what happened?\"\n\n\"Dylan,\" she choked out.\n\nShe met with icy cold silence as she tried to get more words out. And then the words rushed from her as she filled Tae in. When she was done, Tae said nothing, absolutely nothing, for quite a few seconds.\n\n\"Tae?\"\n\n\"I'm here baby...get rid of the phone.\"\n\nAnd just like that, she disconnected the call. Vicky wasn't sure what she'd been expecting. She was probably expecting Tae to drop everything and come rescue her, as usual. And maybe that would happen...but did she want it to? Tae would come to resent her eventually if she, like a child, always needed assistance. God, should she have handled this on her own? She couldn't even tell if Tae was angry or not. She had that iciness in her voice she always got when she was preoccupied, or worried...or pissed.\n\nAs these thoughts plagued her, she returned the piece of wood to the floor, re-positioned the carpet and pushed the sofa back in place. Then she made her way to the bathroom, removed one of the tiles, behind the toilet, reached into the small hole she'd dug into the sheetrock, and removed a second burner phone. There were two others hidden in the apartment, all with numbers only Tae had. When she turned it on, again, she was relieved it still had a charge. If she stayed here, she would have to unearth the other two and charge them. She hadn't done so in about a month. And she would have to replace these two... \n\nShe was sipping on an ice cold shot of vodka, poured from the bottle she kept in her freezer, when the second phone finally rang. When she answered, she said nothing at first until she heard Tae say their code word.\n\n\"I'm sorry I had to call you,\" she offered quietly.\n\nTae sighed, \"baby, I told you that most likely you would. Why do you think I gave you the phones? Where's the first one?\"\n\n\"I broke it into pieces like you told me.\"\n\n\"Good. So...we have an idea.\"\n\nShe waited, holding her breath.\n\n\"We want you to agree to do it.\"\n\nThe words chilled her. \"You want me to agree to kill your grandfather?\"\nA pause, \"yea baby, I do. It will buy us some time. Do you think you can do that?\"\n\nShe swallowed...if she couldn't convince them, she would be dead. \n\n\"I\u2014...Tae...I don't want to meet with him alone again.\"\n\n\"You won't baby. I'm sending down a friend. She's going to be with you day and night until you're with me again, okay?\"\n\nNot the words she wanted to hear, but comforting words nonetheless. \n\n\"The marshals won't like that,\" she offered.\n\nShe could hear the anger and frustration in Tae's voice, \"you mean the same fucking idiots who let that asshole stroll into your office today? Don't worry about them.\"\n\n\"You're going to tell them about Dylan?\"\n\n\"No, they'll move you if I do. And like I said, I want you to agree to their proposition. Convince them that the only thing you want is to be with me and for this all to be over.\"\n\nVicky didn't say a word. That is what she wanted. \n\n\"It's okay baby. You're gonna be okay, all right?\"\n\nShe nodded, knowing Tae could not see her. \"I miss you so much.\"\n\nAnd then she could hear the warmth in that husky voice, the love and comfort she so desperately needed, completely unseating her.\n\n\"I love you,\" Tae reminded her softly...tenderly. \"You're going to be okay, I promise. Try to get to some sleep. And toss the phone.\"\n\nSeconds later she was crushing the second phone with a hammer.\n\n*\n\nTae disconnected the call and looked over at her grandfather.\n\n\"Relax Taegan. Jari will take good care of her.\"\n\nTae ran trembling fingers through her thick, silky hair, closing her eyes. The mention of the tiny, shapely, completely surprising Puerto Rican bodyguard/assassin did calm her a bit. And she knew she could not go to New Mexico herself. She knew it...although every fiber of her being wanted to be on a plane already.\n\n\"He walked right into her office. He could have put a bullet in her head.\"\n\n\"Taegan, it's taken care of. She did the right thing. She handled it and then called you. Calm yourself, Cari\u00f1a.\"\n\nTae took a deep breath. She could have lost her. She could be flying down to claim a body right now. She closed her eyes, trying to calm down. It would serve no purpose for both of them to panic. If she could just convince herself not to take care of it herself...no, she couldn't. Not this time.\n\n***\n\nVicky didn't get much sleep that night. Not that she was expecting to. And she forced herself to go through her morning ritual as if nothing had changed. She knew the marshal would stop by to check on her at 7am, as usual, so she busied herself with paperwork until then. When someone knocked on the door at 6:40am, she frowned, hesitating before approaching the door. The marshals tended to stick to a schedule, they weren't usually early...\n\n\"Who is it?\" She called from a few feet away.\n\n\"Snow storm.\"\n\nThe \"friend\" Tae was sending down to keep an eye on her. She sighed, rushing to open the door.\n\n\"Hug me as if we're old friends.\"\n\nThe woman ordered and Vicky did as instructed, pasting a huge smile on her face as bent down to hug the compact stranger, welcoming the woman inside and closing the door behind them.\n\n\"Lock it.\"\n\nShe did, turning to take in the woman. She was small. No more then five feet. And she was very attractive, with creamy, flawless honey-brown skin, curvy hips and long dark hair that hung down to her waist. She wore pricey sneakers, tight designer jeans and a top that highlighted perfectly shaped, perky breasts and a flat tummy. She hardly looked like someone that could protect her...until she removed her sunglasses. Her eyes were a very dark brown, almost black...and cold. Vicky saw no emotion in them. The woman raised a perfectly arched eyebrow.\n\n\"Victoria Longman?\"\n\nVicky nodded.\n\n\"I'm Jariana. Everyone calls me Jari. Tae's father was my Godfather. While I'm here, you will do everything I ask without question. I'm here to save your life, so this is important. You understand?\"\n\nShe had a thick Spanish accent, her mouth curving around the words in a way that would have been damn sexy if Vicky wasn't freaking out. So she just nodded.\n\n\"You can speak, right? They didn't say you were mute.\"\n\nVicky swallowed, \"I can speak. I'm just a little\u2014\"\n\n\"Yea, I can imagine.\"\n\nShe watched as the small woman took in their surroundings, quickly moving through each room. After a few minutes, she returned to stand in front of Vicky.\n\n\"I want you to move into the guest bedroom for now. There's only one window in there and it faces the front of the building. It's much less likely for them to try anything with so many potential witnesses.\"\n\nIt wasn't a question, so Vicky didn't respond. \n\n\"Why don't you do that while I handle the marshal?\"\n\nShe said it seconds before there was a knock on the door. Vicky raised a brow, but instead of worrying about how she knew the marshal was about to arrive, she went to gather some clothes and toiletries from the master bed and bath. When she was finished, the marshal was already gone. Vicky only briefly wondered what Jari had told him.\n\n\"I'm going to take a quick shower and change and then we'll head to your office. I'm your new security guard, okay?\"\n\nWhen Vicky looked her over with a surprised look on her face, the woman offered a smile that didn't reach her eyes, \"people will only question it if you question it. So don't question it.\"\n\nAnd with that she disappeared into the master bedroom, carrying a bag Vicky hadn't even realized she'd brought in with her.\n\n*\n\nThe day went well. I had mentioned hiring a security guard a few times, so no one was surprised when I introduced Jari. If they were a little taken aback by a tiny female security guard, I simply didn't indulge their doubts, just as Jari had instructed. If they were surprised the new security guard seemed to be located primarily in my office, I still didn't indulge them. I just went about my day as if things were normal. \n\nJari was silent most of the time. Watching me without watching me and on her smart phone most of the time. Her presence made me long for my own silent protector...the one that was currently 2,000 miles away. But I fought down that longing, occupying myself with work instead.\n\nThe parents of the child who had been taken into custody appeared around 1pm to yell and blame me for the state's decision. It was odd. I watched as Jari stood, moving into position behind them as they continued to point their fingers in my face, screaming and gesticulating. It took me a moment to realize Jari was just about ready to take them down before I shook my head in her direction. If I couldn't deal with irate parents, I should probably quit my job. Still, it was nice to know she was on top of things.\n\nThere were no other surprises after that. Just a day filled with the regular tedium. I locked up at 5:30pm and then stopped by a local pizzeria to buy a pie for dinner. There wasn't much chitchat. In fact, Jari had barely said ten words all day. Still, I felt better with the woman close by. Certainly safer then I would have felt alone or with the useless gentlemen who had been parked across the street before. They were gone by the way, which didn't surprise me at all. \n\nAnd I didn't really want to think about tomorrow. Tomorrow Dylan would appear in my office and ask me to agree to kill someone who had saved my life. Not that it mattered if Don Carlos had helped me or not in the past, I couldn't kill anyone...could I? If my life really depended on it, if Tae's life depended on it, could I kill someone? I shook off the frightening thought, praying it wouldn't come to that.\n\n*\n\nI was surprised I could sleep, but somehow I managed to. In the morning, I dressed with care for some reason. A long cream skirt, a black turtle neck, thick rose quartz jewelry around my neck and wrists...I felt like I needed the extra power looking nice would afford me. Jari was dressed in clothes very similar to the previous day, the same pricey sneakers, a different pair of formfitting, expensive jeans and a different flattering top. The woman could probably wear a garbage bag and look down right sexy.\n\nMy stomach was in knots, so I didn't eat. Jari raised a brow, but didn't say a thing, as I put eggs, bacon and toast in front of her and only poured orange juice for myself. I sat across from her in silence as she ate, trying to calm myself down. This woman was here to protect me. Everything would be okay. I was just pretending to agree to work with Dylan and his merry band of assholes. Of course, if he didn't believe me, he would probably kill us both. I toyed with my half-filled glass, totally preoccupied by the thought.\n\n\"Se\u00f1orita, do you trust Tae?\"\n\nThe question was asked abruptly and I was startled from my thoughts. Jari was staring at me with those cold, dark eyes.\n\n\"Of course,\" I answered without hesitation.\n\n\"Then trust she would not send someone incompetent down here to protect you. And trust that she will have me killed if I let anyone harm you. So, try to relax.\"\n\nI nodded, but I had been left with marshals and private security in the past that let me down. So, I was far from absolute conviction.\n\n\"My first kill was at 13,\" she continued, watching me carefully, \"an asshole, like your ex-boyfriend, who thought he could rape me because he was a friend of my father's. I grabbed an ice pick and held it up to his eye. He thought it was cute. Didn't think I could do any real damage. I put all my weight behind it...shoved it into his eye. It took him almost 20 minutes to die...and I watched. I felt little remorse. I sat with him until my father arrived and then explained what happened. My father was relieved, not disappointed, not angry. He bought me my own gun when I was 16.\"\n\nThe story was so shocking, I couldn't think of anything to say.\n\n\"So, do not worry. I will not hesitate to kill anyone who I believe means you harm, okay?\"\n\nShe didn't wait for an answer, standing to get her jacket. I slipped into my own trench coat, her words still on my mind as she led the way to my Ford.\n\nWhen I arrived at work, I was able to put Dylan out of my mind. We had a leak in one of the classrooms, a very sick child in another class, and a scheduled fire drill. By the time lunch rolled around, I wasn't thinking about Dylan, the Netas or death threats. So when I walked into my office some time later, and Dylan was sitting in one of my guest chairs, I wasn't sure how to react. Unfortunately, Jari was nowhere to be found. So much for her promises, I thought, as I closed the door behind me.\n\n\"I only have a few minutes Dylan, we seem to have back-to-back problems here today.\"\n\nI sat down behind my desk, trying to exude calmness and confidence even though my heart was racing and I could feel my hands trembling slightly.\n\n\"What if I said no?\" I asked abruptly, hesitantly, avoiding his gaze.\n\n\"Then I stand up and leave.\"\n\nI looked directly at him then, \"except you know where I am now.\"\n\nHe shrugged carelessly. I stared at him for a moment longer.\n\n\"Dylan, you know me. I can't do this. Don't make me do this.\"\n\nHe ignored my desperate plea, simply watching me. After a few minutes of uncomfortable silence, I sighed heavily.\n\n\"I don't really have a choice, do I?\" I asked curtly.\n\n\"Everyone has a choice Vic.\"\n\nI closed my eyes tightly, wishing him away, before I opened them.\n\n\"Fine.\"\n\nHe smiled, slowly, attractively, a smile I'd never seen before. Then he stood, approaching my desk as he reached around his back.\n\n\"You know Vic, I think you're full of shit.\"\n\nI saw the gun, pointed directly at me, and I froze. A million thoughts ran through my mind...a pair of intense, grey eyes lingered...\n\nBut a second later I heard two soft pops, hardly loud enough to register, and the nasty smile on Dylan's face shifted. Suddenly his face reflected surprise, maybe even shock, before he dropped, hard, to the cute rug I'd bought to cover the damaged hardwood floor. \n\nJari was standing in the doorway of the closet in my office. We used it to store office and art supplies. She moved forward, quickly checking for a pulse, then going to lock my office door while unscrewing and pocketing what could only be a silencer, replacing the gun from where ever she'd retrieved it, all before I took my next breath. \n\n\"He was going to kill me,\" a choked whisper...was that my voice?\n\n\"No. I told you I would not let him.\"\n\nShe was pulling at the body, struggling with his weight (he was slim, but tone). \n\n\"Se\u00f1orita, we need to roll him up in the rug and put him in the closet. Ahora.\"\n\nA pause on my part...uncertainty...and then I was moving forward to help her pull and tug him to one end of the rug, grunting and straining as we rolled him and the rug forward, sweating as we struggled to drag him, and then prop him up, before forcing the closet door closed. We were both sitting on the floor beside the closet door, breathing heavily, when a knock sounded on the office door. I quickly glanced over to where the body had dropped. There was a reddish-brown stain on the floor.\n\n\"Give me a sec,\" I called out, making my way to my desk and locating the Lysol wipes I kept in my bottom draw. Moments later, and about 10 wipes later, I was opening the door.\n\n\"Another sick kid in Ms. Halbry's class. He threw up twice already. Should I call his parents?\"\n\nLizzie, asking a normal question about a normal problem...there was a dead body in my closet...Dylan's body... \n\n\"Uh...umm...\" I couldn't think. I had just rolled up a body in a rug and shoved it in a closet. There was a body in my closet...Dylan's body...Dylan's dead body...\n\n\"Uh...let me head down there first. I'll be there in a few minutes.\"\n\nI closed the door in her face, turning to Jari.\n\n\"I can't do this.\"\n\n\"Yes, you can. Go, check on the child.\"\n\nI stared at her for a moment, not sure what to do next...and then I opened the office door and headed toward Ms. Halbry's classroom.\n\n*\n\nFor the next few hours I wondered what would happen next. Some clandestine trip to the closest river to dump the body? To an incinerator? Or would we stop at Home Depot and buy shovels? How would we get him into my small car? Would we get pulled over? And if we did, would the cop notice how bizarre I was behaving (bizarre behavior was a given)? Would he see blood dripping from the trunk? Would we be arrested?\n\nThese thoughts kept running through my mind as I went on with my day. We had to call an ambulance for the second sick child. He was burning up with fever. Finally the plumber arrived to address the leak. Lizzie asked about the missing rug, but I told her I'd spilled something on it and had it taken to be cleaned. I would buy another one just like it tomorrow...if I wasn't in jail.\n\nTwo late-arriving parents forced us to stay until 7pm that evening. I was absolutely and totally exhausted. My brain was so fried I could barely form a sentence when Jari asked what I wanted to eat for dinner. I believe I said something like I would never be able to eat again.\n\nAs soon as I got home I took a piping hot shower, trying to wash away...any part of what had happened. I pulled on a pair of jeans and an oversized, old, very soft flannel shirt after. It might have belonged to Dylan at one point, which I thought was kind of...sick. Still, it was comfortable and that's what I needed right now. \n\nI was waiting for her to suggest that we go back to the office once we both had a chance to rest a little, but she'd gone into the master bedroom and had not come out for a while. I finally knocked on the door, jumping when she opened it immediately, as if she'd been waiting for me.\n\n\"Uh...don't we need to take care of\u2014\" I started hesitantly.\n\nShe smirked, \"not an issue. Get the third phone.\"\n\nI was so relieved I would not have to deal with Dylan again that it took me a moment to realize what she'd said. The third phone. Tae. I rushed past her, grabbing my desk chair and carrying it to the walk-in closet. Inside, I stood on the chair, then on tiptoe, reaching up to push aside one of the ceiling tiles. I left the chair in the closet and hurried back to the guest bedroom, my bedroom now, closing the door just as the phone rang. I pressed the button to answer, but didn't say anything as instructed.\n\n\"Snow storm.\"\n\nThat voice...that deep, husky, sexy voice...\n\n\"Tae,\" I breathed, my voice distorted...trembling.\n\n\"Baby, you have your bag ready, right?\"\n\nI didn't like the sound of that question although a part of me knew it was coming. We'd killed Dylan. Which meant he hadn't reported in. And they knew where I was...\n\n\"Yea.\"\n\n\"As soon as we're off the phone, babe, okay?\" She ordered in a no-nonsense voice. But she didn't wait for me to answer, \"you okay?\"\n\nWas I okay? Was I okay? How could I answer that? I'd witnessed a murder today. The taking of a life of a man I once knew...a man I'd once loved, or thought I loved. And then I helped roll his body up in a rug and shove him in a closet. And then...then...I'd gone back to work. Like it happened every day. And yes, I'd thought about it. But I hadn't called the police. I hadn't told anyone at work. I'd just...I'd just...no, I was not okay. I was really not okay.",
        "\"Babe?\"\n\nTae asked again, her voice tight. I sighed...this was my life now, wasn't it? I couldn't have her worried about me all the time.\n\n\"I'm fine,\" I finally managed to force out. She didn't say anything for a moment and I knew she didn't believe me. I was relieved she didn't believe me. But I also knew we didn't have time to talk about it.\n\n\"What's next?\" I asked, a little anxious about the answer.\n\n\"You're coming to me.\"\n\nI don't think any other answer could have made me happier. Well, except maybe if she was coming to get me. So I listened to the plan, and then stared at the silent phone after she'd disconnected. She hadn't told me she loved me. I'd needed to hear it. But I could hear it in my head. I would always be able to hear those words, in that voice, in my head. So I closed my eyes and took a second to reach for it, to hear it...to let those words touch me...soothe me. Then I took a deep breath, grabbed my packed overnight bag from the back of the closet, the one Tae had helped me pack before she'd left, and went to find Jari.\n\n*\n\nWe didn't take my Ford. Instead Jari stole a car. I don't know how she did it. It was a newer model car and she had some type of gadget that did something to the car's computer...I didn't really care. It was a smaller car, a hybrid, so we were able to drive a long time before we had to stop. At the gas station she finally stopped at, after I'd made my way to the bathroom, I glanced around the convenience store and realized we were in some part of Kansas. We'd been driving for hours, it was in the later part of the morning, and while I'd slept, I figured Jari had to be pretty tired. The car had GPS, so I could drive if she wanted to sleep. That's what I'd planned to tell her as I left the small store and approached the car, but the look she gave me, intense, no-nonsense, had me quickly sliding into the passenger's seat and donning my seat belt. We were on the road again before I dared to ask.\n\n\"What's wrong?\"\n\n\"They're following.\"\n\nTwo simple words...but they didn't make any sense to me. We'd left New Mexico hours and hours ago in a stolen car. How could they be following us? And how could she know that?\n\nJari wasn't talkative, so as I stared out of the passenger side window, I tried to answer the questions myself. How could they know where we were? How could they be close enough to make Jari nervous? They must have had someone watching me. When Dylan didn't check in? Or perhaps once they'd found me? For all I knew it could have been the guys Tae had hired to watch me, the ones that didn't stop Dylan from showing up in my office that first time? Or it could have been anyone else. The person wouldn't even have to be very good at his, or her, job. I wasn't trained to assess if someone was following me or not. That first night, after Dylan approached me, I drove straight home to call Tae. If someone had been assigned to me, they would have known exactly where I lived.\n\nAnd how would Jari know that someone was following us? That they knew where we were? Well, Tae, or her Grandfather, had probably assigned someone else to us when they'd heard what happened. So, Jari was getting updates or reports or whatever the hell the word was. I'd heard her phone vibrating every hour or so, but I'd ignored it. Then I'd fallen asleep. But clearly she could easily have been told any number of times that they were on to us. So it wasn't farfetched. And that also meant we weren't as safe as I'd assumed. For some reason I thought we had very little to worry about after leaving my apartment. I really had to get a freaking clue. \n\nI don't know how long all of these thoughts had been going through my mind, but when I looked over at Jari, she looked even more tense then she had after leaving the gas station. I was about to ask her what was going on now when she took a hard right and we barely made it onto an exit ramp doing about 80 miles an hour. She slammed on the breaks, slowing us down, and then started making her way down local streets. Her phone vibrated, she glanced at it, but then kept driving, making turns randomly, driving through busy parts of the small town, filled with people and shopping areas, and then driving through quiet residential neighborhoods. I was holding onto to the little handle above the door for dear life, not knowing when she would make the next turn at break-neck speed. I was surprised we didn't get pulled over by the cops.\n\nHer phone buzzed again, she glanced down at it, and then I heard her let loose a string of curse words I didn't even know could go together. But the next words she directed at me did not make me feel any better.\n\n\"Victoria, do you know how to handle a gun?\"\n\nSeriously? Seriously? What the hell was this, some horrible action-adventure movie that was taking on a new plot twist? Did I know how to handle a gun? No I didn't know how to handle a gun! On what planet would I have learned how to \"handle\" a damn gun?\n\n\"No.\" \n\nShe swore again, in that thick, sexy Spanish accent that, I swear, I swear, would really be turning me on if things were different.\n\n\"My bag. Front pocket.\"\n\nHer bag was right behind her seat in the back, so I reached for it and rummaged through it until I found what she was referring to. A small gun, or pistol, or whatever it was called. Pink. She had a damn pink gun. It wasn't as heavy as I imagined it would be. \n\n\"That latch on the side?\"\n\nI found what she was describing, showing it to her. She nodded.\n\n\"Safety. Push it down.\"\n\nI nodded, thinking she meant when I was ready to use it.\n\n\"Now, Victoria.\"\n\nI glanced at her, my heart suddenly doing a wicked dance in my chest. It took me a second to figure it out, but I did as she ordered. \n\n\"Twenty-two caliber. Holds 10 in the mag.\"\n\nI nodded again. This couldn't be happening. Why was she telling me this right now?\n\n\"When I pull over, I want you to get out and run. Run, but stay out of sight. Back yards. Behind people's houses. Try to find an open back door. If you do, stay there, upstairs in a bedroom, hidden. Do you understand me?\"\n\nI wanted to say no. I wanted to beg her not to force me to leave the safety of the car, no matter how false that sense of security was. I wanted to call Tae.\n\n\"Yeah,\" I said instead. \n\n\"You hear anything that sounds like someone looking for you. Footsteps moving quietly through the house instead of someone coming home from work or school and just behaving normal, you shoot first and then get the hell out of there. Aim for the chest. Got it?\"\n\nI was nodding, but it was surreal. This could not be happening. She reached into the back seat, handed me my backpack (my \"to-go\" bag), and then, seconds later, pulled over and yelled at me to run. I did. I took off. Running. Her instructions in my head: stay behind the houses, keep to back yards, stay out of sight. I ran and ran...and then kept running, even when my chest started to hurt, there was a sharp pain in my side, and my legs were trembling.\n\nI have no idea how far I'd gone when I felt myself slowing down. So I started looking at the houses I'd been passing. This was a decent neighborhood. Not too many dogs in the back yards. Somewhat small houses, but neat back yards, not filled with junk. Nice patio furniture, decent gills...people who cared about their homes. It was the seventh house I tried when I felt the knob on the back door give. The door popped open and I held my breath, listening to see if a dog was approaching or if it sounded like anyone was home. The gun was in my hand, just in case. I didn't hear anything, so I stepped into a small kitchen. Neat, relatively clean, a few dishes in the sink. I didn't spend any more time there, locating a flight of stairs and making my way up. All of the doors were closed and I was passing a door on my right when suddenly it opened and I came face-to-face with a young girl, probably early teens, slim, blonde, blue eyes...she wore a pair of boxer shorts and a pink tank top with white polka dots...and her eyes had settled on the gun I was absently pointing at her. I lowered it immediately...apologetically.\n\n\"You shouldn't leave your back door unlocked when you're home alone. It's not safe.\"\n\nI'm not sure why the teacher in me took over. I'd broken into her home and pointed a gun at her...was it really my place to lecture?\n\n\"Yeah, my mom tells me that all the time,\" she said, curiously calm. \"Is that real?\" She asked, indicating the gun I now held down near my thigh.\n\n\"Uh, yeah. I'm sorry. I\u2014\"\n\nShe shrugged, \"it's cool. Do you need help or something? Do you need to borrow my phone?\"\n\nI shook my head, \"no. I just...um...I'm really sorry to ask, but I just need to stay out of sight for a while. I won't bother you. Is that okay?\"\n\nWas I really having this conversation with a complete stranger? A teenager? I mean...what the hell?\n\nShe shrugged again, \"I was just about to get dressed and head out. They were testing at school this morning, so I didn't have to go in early. You can hang out in my room as long as you don't steal anything.\"\n\nI looked at her, my head cocked to the side. She really was adorable, the picture of American beauty...but she was really na\u00efve if she thought it was okay to allow a stranger to just hang out in her house with orders not to steal. I mean...really?\n\n\"Look, I appreciate it. I really do. But...it's not safe to let people just hang out in your house. I mean, if they don't rob and kill you immediately, then most likely they are going to steal something, don't you think?\"\n\nBig sister? Teacher? Director? Social Worker? I don't know who was giving this lecture, but considering I was the criminal at the moment, it seemed quite absurd.\n\nShe looked me over and then shrugged again, \"you're carrying a bag that costs about $200, wearing sneakers that cost a little more, and jeans that cost at least $100. You're pretty, your hair is nicely styled, even though you're all sweaty. And you had a look of...I don't know, absolute fear on your face when I opened the bathroom door. If you wanted to hurt me, you had a chance to shoot me, but you didn't. I figure you're in trouble and not a serial killer. So, it's all cool.\"\n\nShe was quick...and astute. And suddenly I wondered if she would have dated someone like Dylan and wound up in the trouble I was in. Something told me she was probably smarter than that.\n\nShe moved past me, \"I'm going to change. Stay here for a sec and then you can just chill in my room. My mom won't be home until around 6. My brother has practice tonight, so he'll be home late, and my Dad isn't usually home until 7, so you're all good.\"\n\nI found myself nodding as she filled me in on her schedule.\n\n\"Thanks,\" I offered softly. \n\nShe disappeared then and I sat down in their small hallway on the nice, but slightly stained, carpet. The air smelled a little stale, now that I could take a deep breath, and I knew they probably needed to replace the carpet up here. Lots of people waited to replace the upstairs carpet. Or perhaps times were just tight right now. The absurd thoughts kept going through my mind. I figured they were better than thinking about what was really happening in my life at the moment.\n\nShe emerged about 10 minutes later. Jeans, a white button-down shirt pulled over the cute tank top and left open, white sneakers. She looked cute and about as female and teenager-ish as possible. She handed me a piece of paper.\n\n\"Our address in case you need to tell someone where you are. And my phone number just in case. Oh, and my name. It's Casey.\"\n\nMy eyes filled with tears. It was the end of the adrenaline rush, I told myself, but this kid really was sweet as all hell and it was getting to me. So I only nodded, not trusting myself to say anything at the moment.\n\n\"If you need to stay here longer, my closet is pretty big. And pretty messy. No one goes in there.\" She offered the information with humor, laughing at herself. \"So, it's a good place to hide. And if you need to get out of the room in a hurry, the roof of the patio is right under one of my windows. It's not a huge jump from there, I've snuck out once or twice. Oh, and there's food in the fridge.\"\n\nI nodded again, wiping my eyes quickly before meeting her clear, blue eyes. I wanted her to leave suddenly, just in case I had not been successful avoiding the people after me. I didn't want her to get hurt.\n\n\"I won't be here when you get back. Just...thank you, okay? And lock your doors when you're home alone.\"\n\nShe smiled, offered a little wave, and then jogged down the stairs. I heard what I assumed was the front door close a few seconds later. Then a car started up and pulled off. \n\nI shoved the gun into my bag, along with the piece of paper she'd given me, and then entered her room. I thought it was would be pink and frilly, just my own bias I guess, but it wasn't. The colors were random, the walls were white with pictures stuck to them here and there, and there were multi-colored rugs tossed in various places. It also wasn't at all neat. Clothes appeared in random piles around the room. It felt lived in and \"real\"...I liked it. And I liked Casey. Although if I did get out of this alive, I was going to really talk to her about trusting strangers. Even female strangers who appeared to be in trouble. But for now, I just dropped down to the floor, my back against one of her walls, and leaned my head back, trying to figure out what I was supposed to do next. Was Jari okay? Was I supposed to call Tae? I closed my eyes, taking a deep breath...and fell asleep.\n\n*\n\nHours had passed. The sun was setting. Which meant people who lived in this house would be home soon. I was laid out on the carpet and sat up, looking around. Thank goodness no one had come home early and found me. I stretched and realized I'd slept pretty soundly (I would think about how idiotic that was, given the circumstances, later). I had about $5,000 in cash on me (once again thanks to Tae), so I left $500 under Casey's pillow, along with a smiley face on one of her heart-shaped post-its and my work number in New Mexico, telling her to call me if she ever needed anything. I then used their landline to call information and, subsequently, a cab. I left their cute little house about 15 minutes later. I wasn't sure what I would do next as I slid into the backseat of the cab. Jari had not suggested a place to rendezvous, which meant I was on my own.\n\nI was hungry, so I had the cab drop me off at a diner. I sat in a dimly lit corner with my back to the wall and facing the front door. I had placed my order and the waitress was bringing me a cup of coffee when I heard the diner's door open. My eyes swung in that direction and I watched, with a little surprise, as Jari made her way toward me. She sat across from me without a word. It took me a moment...\n\n\"You paid the woman at the counter,\" I surmised.\n\n\"And the women and men at the counters of about 10 other diners around here as well as a few motels. I knew you would surface eventually. But what am I going to say next?\" She demanded harshly.\n\n\"That if you could pay them off to keep an eye out for me\u2014\"\n\n\"Exactly. You weren't thinking.\"\n\nI hadn't been thinking. I'd been tired, hungry and...lost. But it had only been about 30 minutes since I'd left a \"safe\" place and she'd found me. If it was Marcos...I shook my head at my stupidity. I should have kept going. Maybe found a place an hour or two away? A cab would have driven me further for the right price. I had to get better at this...\n\n\"What now?\"\n\"Well, your woman, my new boss, was kinda pissed when she heard I'd lost track of you. Sounded like she wanted to slit my throat and drink my blood. So, we need to stay put.\"\n\nI raised a brow, surprised by her joke and the suggestion that we stay put. The waitress brought over the bagel with cream cheese I'd ordered and asked Jari if she wanted anything. Jari asked for the check. By the time the waitress returned with it, I had eaten half the bagel and was ready to go. \n\nThe car was a large, black SUV this time. Jari pressed some device to start the engine as we climbed up into the monstrosity. Seconds later, she was handing me her phone.\n\n\"Vic?\"\n\nI closed my eyes, relieved to hear her voice, even if it was strained.\n\n\"I'm okay. I'm sorry you were worried.\"\n\nSilence. Then, \"I'll see you soon.\"\n\nAnd she disconnected the line. She was coming to Kansas? For me? I sighed...I'd fucked it up.\n\n\"That's why we're staying put? Because she's coming to baby sit me?\" I asked sullenly.\n\nJari barely glanced at me, \"and the Don is pissed. But apparently she is her father's child. Stubborn. Hard headed.\"\n\nI sighed again. So she was risking her life, and her future, for me again. If anything happened to her, her Grandfather would be devastated. He'd probably go so far as to join the list of people trying to kill me. God, why was I so bad at this?\n\"Relax, I'm surprised she didn't take care of this herself in the first place.\"\n\nI shook my head, \"I suck at this.\"\n\nJari snorted, \"oh, you missed the college class where they taught you how to shoot guns and avoid people trying to kill you? How many credits is that class worth nowadays?\"\n\nI smiled a little. She really was in a different mood today.\n\n\"Why are you in such a good mood?\" I asked abruptly.\n\n\"First, I killed the asshole who put his hands on you. Second, I bumped into a friend and got some ass while I was waiting for you.\"\n\nI was touched by the first part of her statement, but at the second I looked at her shocked, \"really? Is that in the college course also? You don't know where the person you're protecting is so you get some ass?\"\n\nShe chuckled as she continued to drive. We fell into a pretty comfortable silence. I saw her looking around until she picked a pretty crappy motel and pulled into the parking lot. I winced, but didn't say anything.\n\n\"Why would I choose this one?\" She asked suddenly.\n\n\"Uh...you're tired of this job and if I die of some contagious disease I get from the sheets here, you won't get fired?\"\n\nShe smiled briefly, \"seriously.\"\n\nI thought about it for a moment, relying on my television knowledge of keeping a low profile, \"they probably will allow you to pay cash and won't ask for ID or a credit card?\"\n\n\"Give the girl a doggy biscuit.\"\n\nI shook my head, smiling, as she left the car running and went in to register. Minutes later she was driving around back and handing me an actual key, not a key card, on a green key chain with the room number.\n\n\"I'm next door. Keep the door locked and the curtains closed.\"\n\nShe didn't say another word, grabbing her own bag from the backseat after parking in front of our rooms. I followed suit, looking around after locking the door behind me. It was worse than I'd imagined. The furniture was old, chipped and stained. The carpet was a dark, muted burgundy with very interesting patterns that masked whatever disgusting things had probably spilled onto it. And the comforter was snagged in various places with interesting stains ground in. I wondered what the sheets looked like beneath it. I tossed my bag on the bed and decided to take another shower. I felt a little grungy after having slept on Casey's floor. I wasn't sure the tiny little bathroom, which was questionable in terms of sanitation, would cleanse me, but it was better than nothing.\n\nHours later, I still hadn't been brave enough to slip in between the sheets. So, I was sitting up in bed, on top of a pretty worn blanket that had been under the gross comforter but protected me from the sheets, watching TV. When I heard a key in the door, I just assumed it was Jari...it wasn't.\n\nShe'd barely locked the door before I was in her arms. She held me for a moment, close to her, inhaling deeply...then her hand made its way to my hair, pulling my head back...and her mouth covered mine hungrily...brutally. The feelings that rushed through me were dizzyingly familiar...and felt wonderful. She brought me with her, back toward the bed and I forgot about the potentially disgusting sheets. I could feel her...her strong hands, touching me, everywhere, undressing me...her full breasts, pressing into me...the weight of her almost suffocating...I felt nothing but heat spearing through me. Her lips left mine, her teeth marking my neck, her hand having made its way past the waistband of my jeans, her fingers gliding along the length of me, finding their way to my core...I was speeding toward my first orgasm and she'd only been in the room for five minutes! I bit my lip, swallowing the moan as the orgasm hit me full force and left me trembling moments later...",
        "I grew impatient, wanting to feel the warmth of her skin against mine. I began removing her clothes frantically as she continued to manipulate heated, slick flesh, my breathing rushed. She was also working to remove the rest of my clothes, one-handed, her fingers never ceasing their graceful movements and her teeth now worrying a painfully hardened nipple. The second orgasm shocked me when it punched into me, trapping the air in my lungs. I paused, I had to, trying to remember how to breathe...but she didn't stop. I was hardly aware as her lips made their way to my tummy, caressing my hips...and then she was between my thighs. There was no room for thought as I felt the heat of her mouth on me, that talented tongue working me over, stringing me out...I couldn't stop the cry that left my lips as the third orgasm consumed me.\n\nI needed a moment...please...a moment...but she didn't give me one. It was almost as if she couldn't. Two fingers...deep...penetrating...stroking along sensitive flesh as she made her way back up to me, her mouth taking mine...greedy...demanding...I could feel her pebbled nipples pressing into my breasts, could feel the tension in her back...how could driving me insane arouse her so? She was fucking me with those magic fingers, long deep strokes, her tongue dominating, rendering me thoughtless, her fingers pulling brutally on my hardened nipples...and I slammed into the next orgasm, losing count, not caring, never wanting to move from this spot again. \n\n\"Tae...\"\n\nI breathed her name...husky...desperate...I couldn't help it. Did she know? Did she know how much I needed her...craved her...wanted her? Loved her? \n\nShe pulled me closer, holding me to her, breathing me in. She'd stopped manipulating, controlling, dominating...and just held me. There were tears in my eyes as I listened to her erratic heartbeat. \n\n\"I'm okay Tae,\" I whispered, settling against her. \"I'm okay.\"\n\n*\n\nShe was in my arms again. Safe. I should have followed my instincts and kept her with me. No matter the hardship. I could not think when I was worried about her. Now? I would keep Jari on her until the trial, and she could get a job in New York if she wanted one, but she would be with me, in my apartment, in New York, as it should have been. As I needed it to be. My grandfather wasn't happy, but he wanted me focused. There was only one way I could be.\n\nI brought her closer, inhaling deeply again. When Jari had called and said she'd lost her...my heart had literally stopped. Literally. I thought about the nightmare of tracking her down after eight long months, the horror of the bullets spraying our hotel room...and now she was gone again? Even after Jari told me the instructions she'd given her, even knowing that Vic was no longer as na\u00efve as she'd once been, I still couldn't relax. And I certainly would no longer leave her in the hands of anyone else. \n\nMy fingers combed through her silky curls, caressing the back of her neck, the length of her back, her curvy backside. This woman had become...I don't know...she had become my life...the breath in my lungs...the reason I woke up every damn morning. She was it. It was time I realized it, she realized it, and my grandfather realized it.\n\n\"Baby,\" I cleared my throat, a little nervous suddenly. \"I need you in New York. With me. Will you do that for me?\" \n\nMy face was buried in her hair, against her sweet smelling neck, and muffled, but I knew she'd heard me. She didn't respond immediately.\n\n\"You told me that I was more at risk in New York. That I might distract you...that I could get us both killed. I don't want that to happen.\"\n\nHer tone was level, even...but I knew it cost her to say those words. She didn't want to leave me again. She'd always wanted to stay with me. But I had to give it to her for getting the words past her lips.\n\n\"Babe, I can't fucking focus when you're not with me, when I'm worried about you. I need you in New York.\"\n\nMy last words were a soft plea, so she didn't really hesitate this time.\n\n\"Of course, baby.\"\n\nBut I could feel her body relax with the answer. I brought her even closer, nervous for the first time in a very long time. \n\n\"Baby,\" I started, then took a deep breath, \"marry me?\"\n\n*\n\nI couldn't have heard her correctly. I pulled away from her, but not too far. Just far enough to meet those damn sexy grey eyes. \n\n\"What did you just say?\" I whispered, barely able to get the words out.\n\nShe was watching me closely, carefully, trying to read me...I tried not to give away anything. She took a deep breath and I saw, for the first time ever, Taegan Elba Maria Gonzalez lick her lips nervously.\n\n\"I want you to marry me,\" she repeated carefully.\n\nI continued to stare and she fidgeted a little.\n\n\"Babe?\" She inquired, a little confused.\n\nI shook my head, \"Tae, I've ruined your life and you want to marry me?\" I asked incredulously. \n\nShe smirked, \"you didn't ruin my life, baby.\"\n\nI shook my head again, not smiling or amused, \"Tae, people are trying to kill me. Your grandfather wants to you stay far, far away from me. You gave up your job, two jobs, for me. Your father was shot in the middle of all of this. And now you're an apprentice for your gangster grandfather...and you want to marry me?\"\n\nThe smirk slid into a slow, sweet smile, \"yea.\"\n\nMy heart was racing...was this really happening? I mean...I couldn't wrap my head around it.\n\n\"But Tae\u2014\"\n\n\"Baby...marry me.\"\n\nThat damn soft, sexy, sweet voice was sending tingles directly up my spine.\n\n\"It's not a good idea Tae,\" I argued, trying to remain rational even though I wanted to scream yes from the top of every building in New York City.\n\n\"Baby, please,\" she begged softly, sweetly.\n\nI closed my eyes and swallowed, knowing there was only one answer I could give her. \"Of course I'll marry you,\" I whispered.\n\nI opened my eyes in time to watch her eyes, pleased when I saw the light, the spark, that appeared in them before she bent her head to kiss me. \n\nI sighed, thinking one thought before my brain began to fuzz over...her grandfather was going to be pissed.\n\n*"
    ],
    "authorname": "MercuryLove31",
    "tags": [
        "african american",
        "black",
        "gang",
        "violence",
        "stud"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/180-degrees-tae-and-vickys-tomorrow-04"
}