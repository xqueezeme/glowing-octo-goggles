{
    "title": "Carly's WMAF Fantasy Pt. 10",
    "pages": [
        "Again, thanks for all the positive feedback. I'm glad so many people have enjoyed this. The encouragement and suggestions are always welcome.\n\n*****\n\nFriday was relatively uneventful. I gave Dave a little flack but he was basically floating on cloud nine all day so there was no bringing him down. He was even so happy that he stood up for his ideas not just once but twice. Apparently, being thoroughly cucked gave him confidence. The mind is a many splendored thing I guess. Unfortunately, the best days often have the worst endings. I got a call just as I was getting ready to leave work.\n\n\"Hi, Master,\" I heard Carly's voice on the phone.\n\n\"Hey, babe. Shouldn't you be on a plane right now?\" I said, checking my watch.\n\n\"I'm sorry, Master. I got called in and will have to work all weekend,\" she said with sadness. \"I'm as upset as you are, Master.\"\n\nI was silent for a minute, frowning as we spoke. I lowered my voice and said, \"I guess I'll need to take my fill from your sister. And maybe her friends.\"\n\n\"Oh you found some new prospects? Your harem grows mighty, Master,\" she said and my frown turned immediately into a grin at her words.\n\n\"And what about you, slut? Have you found any prospects for me?\"\n\n\"Maybe a couple, Master,\" she said coyly, \"Will you be coming to visit to inspect them soon?\"\n\n\"I'm gonna try, sweetie. But for right now, I think you need a little punishment, don't you?\"\n\n\"Yes, please. Tell me what I can do to make amends for my failure, Master.\"\n\n\"Write down the following words. Do you have a pen?\"\n\n\"Yes, Master,\" she said in a husky whisper.\n\n\"Slut, Whore, Fucktoy, Slant Tramp, Cumdump, Rape Meat, Chink\". Read it back to me, slut.\"\n\nShe read the list back, trying to keep her voice down from her co-workers. \"Good girl. Now each day, you'll write a new one on your body somewhere with a sharpie. And you'll refresh all the ones you've already written. Then you'll video yourself edging with your new markings and email it to me. Understand?\"\n\n\"Yes, Master. I agree. I'm so excited and... desperate. I hope you forgive me for failing you. You're not mad are you?\" she sounded so worried. I wanted to just hold her in my arms and protect her. \n\n\"Of course not, sweetie. It isn't your fault. I'm not going to be mad.\"\n\n\"Thank you, Master. Will you let me know about your conquests?\"\n\n\"Of course, slut. Now get back to work. I expect a video from you tonight. And I'll see you next Friday.\"\n\n\"Definitely, Master.\"\n\nI hung up the phone, my good mood from earlier ruined. Sitting back in my chair, I thought about what I was going to do to fill time for the weekend. Absentmindedly, I finished up my work when inspiration struck. I snatched my phone and quickly texted Sherry.\n\nMe to Sherry: Get your slut ass over to my apartment right now. Carly couldn't make it and I'll be feeling very frustrated and cruel.\n\nMoments later she responded\n\nSherry: Yes, Master. Any special requests?<br>Me: Choker and stockings. When I open my door you better be wearing nothing else.<br>Sherry: \ud83d\ude13 Yes, Master. I understand. Your pathetic chink cumdump will be sure to begin her humiliation early.<br>Me: Hurry, bitch!\n\nMe to Carly: I made plans with your whore of a sister. I'll be taking out my frustration on her tight, young holes tonight.<br>Carly: \ud83d\ude04\ud83d\udc94 I\"m glad, Master. I'm only sorry that it's my pathetic yellow holes that you won't be punishing.<br>Me: Earn it for next week<br>Carly: I will, Master. I promise.\n\nI rushed home and stripped out of my clothes to wait for Sherry in just my boxer trunks. I hadn't been home ten minutes when I heard some high heels in the hall. Then some muffled talking voices and some laughter. The talking continued right outside my door. Curious, I got up and looked through the peephole. Sherry was standing there talking to my neighbor. She was wearing a trenchcoat and had it clutched tightly around her body. I could see her blushing and embarrassed. It was a comfortable 70ish degrees outside so the combined effect had her looking like she was doing exactly what she was doing. My neighbor kept talking, either oblivious or uncaring to her condition. After a couple minutes, she finally walked away and Sherry composed herself. With a quick glance down the hall, she dropped the trench coat. She had her hair up in a high ponytail which highlighted the wide velvet choker around her neck. The black lacy garter belt and stockings she wore would have looked classy if not for her state of public nudity. I could see her freshly shaven cunt glistening with arousal already and the only other thing on her was a bit of tape covering up some gauss over her right nipple. \"Good girl,\" I thought to myself. Protecting her piercing. She paused, apparently savoring the moment for a couple seconds before reaching up to knock on my door. That's when I yanked it open. Her startled gasp filled the hallway and I simply grabbed her hair and hauled her inside, leaving her only bit of real clothing on the floor of the hallway.\n\n\"Took you long enough, chink,\" I snarled as I flung her over the arm of the couch. She yelped in surprise but remained motionless where I flung her, moving only enough to spread her legs lewdly for me. \"Shut up, bitch,\" I told her as I smacked her bountiful ass three times. \"I'm going to fucking destroy your holes tonight. You wanted me cruel. Fuck you. You'll get it, bitch,\" I practically raged at her. My frustration at not being able to see Carly bubbling over. I pushed her face down into the sofa and picked my belt off the ground. I looped it around her neck and through the buckle like a leash then yanked. \"You get one chance to stop and if you don't stop now, I'm going to use you in unimaginable ways tonight you pathetic yellow whore,\" I said with every bit of anger I could muster. \n\n\"Never stop,\" she whispered. I flung her forward and slid my cock slowly into her cunt. She squirmed as I flexed inside of her, then pulled out and spread her ass cheeks with my thumbs. I positioned my cock at her ass and shoved in, firm and steady. Sherry wailed against the assault and her feet actually came off the ground, kicking and flailing to either side of me. I didn't give her time to get used to it. Instead, I started pounding her ass right away. I held her back against me with the belt and proceeded to rail on her ass with my free hand, turning her lovely tanned skin pink then red then dark crimson. She screamed a litany of things ranging from \"Yes's and No's\" to horrifically degrading things, my favorite of which was \"Rape your worthless chinadoll buttslut fuckpuppet!\"\n\nWhen I finally came, I pulled out of her now leaking ass and gave her a final smack on her sore butt cheek. \"Clean yourself up, slant. Drip any on the way and you'll be licking it off the floor.\"\n\n\"Yes, Master,\" she said with bowed head. She shuffled out of the room, the perfect little Asian concubine like she longed to be.\n\nI fucked her more that night, trying everything I could think of to degrade her as much as possible. I called her every degrading name I could think of, especially the racist, vile ones that she seemed to really get off on. I spit on her and slapped her. I fucked her against the glass window. I dumped a load of cum in her cunt and ass and two on her face. Around midnight when I was finally finished, I tossed her out. But not before writing with Sharpie on her tit, \"Slut\". \n\n\"Don't wash it. Your sister is writing the same thing on herself. I'm going to keep it going all week. I'll be at your dorm at 10 tomorrow for more, you pathetic gutter trash,\" I told her as I opened the door to my apartment. Her trench coat was still on the floor but nobody was in the hallway so I shoved her out and made her hurriedly put her trench coat on in the hallway. She had a wispy smile on her ruined face as she reached in the pocket of the coat for her phone which she'd not even bothered to collect in all the rush. She quickly started texting. Moments later, I heard a beep from my phone. Then two more followed in relatively quick succession before I could pick it up. \n\nFrom Sherry to Carly and I: Sis, you should upset Master more often. I just had the single best sexual experience of my life.\n\nPicture from Sherry: It showed her in her trench coat in the elevator with the coat pulled wide and the marker writing clearly showing.\n\nPicture from Carly: This one showed Carly with her legs spread, hands fingering a smooth, wet cunt and the word \"SLUT\" prominently written in big letters on her inner thigh. \n\nI flipped back and forth between the two pictures for a moment. Not really sure which was hotter. I'd already cum four times in a night which is pretty ridiculous but this was making me think that maybe round five had been possible. \n\nMe: You two certainly are sluts. Your little sister was a passable replacement for your tight, yellow whole, bitch. She also took everything I threw at her.<br>Sherry: Thank you, Master.<br>Carly: I'm glad, Master.<br>Me: I'll be using her all weekend and next week. Maybe she'll be a better trained little geisha slant than you by the end of the week.<br>Carly: I hope so, Master. Your God like white cock only deserves the best. \ud83d\udc97\ud83d\ude0a<br>Me: I want both of you to find your biggest dildo and shove it in your cunt before you go to sleep tonight. Enjoy a fitful night of frustration.<br>Carly: Thank you, Master.<br>Sherry: Thank you, Master.\n\nI shook my head, such perfect little sluts. If they weren't actually bred for this, they certainly made up for it in enthusiasm and submission.\n\nI showed up the next morning at Sherry's dorm. Louise answered the door wearing only a T-Shirt. Her tight little gymnast body was almost completely on display, \"Hey Mr. S. Sherry said you'd be... cumming.\"\n\n\"Maybe more than once. I hope that's okay?\" I said with a smile as I loomed over the small girl. Before Louise could respond, Starla interrupted with a cough.\n\n\"There are people in the room. And he already has two girls, Louise,\" she said. She was sitting on the couch wearing her own provocative outfit. Tight, short yoga shorts and a relatively skimpy sports bra. \n\n\"Four actually,\" I said for clarity. Starla shot me a look of total amusement and Louise just stared. \"Is Sherry here?\"\n\nSuddenly, Sherry walked out of the bedroom. She was wearing a lacy red thong and a matching bra that definitely did not cover the writing on her tits. Starla gasped, \"What the fuck, Sherry?\"\n\nSherry turned to her roommate, \"Don't you love it? Master is going to add one degrading word each day while my sister is leaving him unfulfilled.\"\n\n\"Seriously? What the actual fuck?\" Starla repeated. \n\n\"I've just decided to embrace my true purpose,\" she said as turned and walked over to me.\n\n\"And what the fuck is that, Sherry? What's he convinced you your 'purpose' is?\"\n\nSherry gave me a long, lingering kiss while Louise stared at us, slack jawed and Starla pouted on the couch. Sherry turned back to Starla, \"He didn't convince me of anything. This is all me. It's always been me. I only suppressed it because of my dad. But I'm done with that. I'm not suppressing my needs anymore. I want to be a white owned chink slut. That's my goal.\"\n\n\"Sherry?\" the two girls exclaimed simultaneously.\n\n\"This is what I want... no... this is what I am!\" she said pointing to the writing on her chest. \"And I could do it with anyone. Fucking look at me. And what guy wouldn't turn down a well bred Asian cumdump. But Carly found a great one. One that will be safe and still make me feel fucking used. And I love it!\" she said full of passion.\n\n\"This is fucked up,\" Starla said shaking her head in disbelief.\n\n\"That's fucking hot,\" Louise said at the same time. \n\n\"You're all fucked up. I'm going to the gym. I want my room when I'm back so this tool better be gone.\"\n\n\"I'm not sure I can be that quick,\" I said with a smirk.\n\n\"Whatever, dickhead. Be gone or I'll call our RA,\" she said as she packed her stuff.\n\n\"You going too Louise? Or are you going to stay and jill off while I fuck this little yellow slant again?\"\n\nLouise blushed as her two roommates looked at her in surprise. \"What? They were hot!\" she said by way of defense. \"But no. I've got to go study. Let me put on something real quick and then you can have the room.\"\n\nShe went into the shared bedroom and threw some jeans on. She didn't bother to close the door and I watched from the living room as she, almost certainly intentionally, gave me a little show. She pulled on some jeans, with no panties, then stripped off her shirt to put on a tight, white one without a bra. I got a great view of her tits in profile. They were a little bigger than I'd thought, and very perky. I knew that I'd be fucking Louise before too long.\n\nSherry didn't bother waiting. She started unbuckling my belt right there in the kitchen. I didn't resist. She ran her hands up and down my jean covered cock, coaxing it to maximum rigidity.\n\nI heard Starla's voice from across the room, \"You two are fucking... animals.\" If I hadn't been listening, I wouldn't have noticed the slight pause that hit her as my pants dropped and my cock flopped out. As I've said, I'm not massive, but I am a little above average and Sherry's hands make almost anything look big. The combined effect was impressive. Starla clutched her books to her chest as if they were some sort of protective shield and hurried past. I'm not even sure if she noticed but she kept staring at my cock the whole time. At least right up until it disappeared down Sherry's throat. \"Please don't be here when I get back. Sherry, I'll... uhmm... I'll talk to you later,\" she said and then hustled out, looking very flush.\n\nLouise sauntered out of the bedroom right after and Starla left and came over to Sherry and I. \"You two already having fun?\" she asked rhetorically, looking me in the eyes and smirking. Sherry muttered an affirmative around my cock and kept fucking her face on my shaft. \"Interesting. I didn't realize Sherry had all these kinky fantasies. How did she find a nice racist to use her?\" she said leaning into me. \n\nShe was clearly teasing me but I still was a little defensive about this whole thing. \"Hey... I'm not racist,\" I protested though it was getting a little hard to concentrate.\n\n\"Really? What was it you called her,\" she asked as she casually placed a hand on Sherry's head. She started forcing her roommate deeper onto my cock, holding her at the base before pulling her up and slamming her down again. \"A little yellow slant?\" Sherry moaned in complete arousal around my cock. I think the humiliation was driving her absolutely wild. \n\n\"It's her kink... well... and her sister's kink,\" I said defensively. My eyes rolled back into my head. \n\n\"So you don't think all asian women are like this?\" she asked continuing to pump her friend's head faster. I shook my head, \"What about all women? Do all women just drop to their knees for your cock?\"\n\n\"Not usually... but... uh... lately I've had pretty good luck,\" I stammered.\n\n\"Very interesting. Starla's a psychology major, you know, I\"m sure she'd be find you fascinating. Maybe try to appeal to that side of her if you want to get into her pants,\" she said now holding Sherry firmly down on my cock. \n\n\"And what if I want to get into your pants,\" I said trying to sound confident.\n\n\"Me? I'm a good girl and a virgin,\" she said with a coy smile and a wink. She let Sherry off my cock and walked out the door with a laugh. Sherry was panting for breath pathetically at my feet.\n\n\"THAT girl is a virgin?!?\" I asked incredulously. \n\nSherry simply shrugged and dove back onto my cock. The mystery of Louise washed away, as easily forgotten as the coldness Starla showed. I leaned back into the wall and enjoyed the sensations that my girlfriend's nubile, slutty, perverted little sister delivered upon me. After I shot my load all over her chest, I led her into the bedroom for a powerful fucking that had her banging into the neighbor's wall loud enough that they banged the wall back in annoyance. When we were finished, I checked the clock and got dressed. It had been nearly two hours and, as much as I wanted to mess with both Sherry and Starla, I really didn't want to cause any trouble that day. So I left the sated little Asian sex pot sprawled languidly along the bed. As I looked back, I admired my handiwork with the word \"Slut\" proudly showing on her tit and \"Whore\" now proudly emblazoning her inner left thigh. \n\nStarla was sitting on the couch when I walked out, covered in a blanket and watching me. \"Have fun?\" she asked.\n\n\"I did. Sherry's very... enthusiastic. And how was your exercise.\"\n\n\"Invigorating,\" she said eyeing me warily. I looked at her there under the blanket and part of me thought she might be masturbating. Unfortunately, I didn't see any movement but I still found myself wondering. Imagining. The brunette girl was sexy as hell and I could imagine her full lips around my cock. She'd already shown she had kind of a foul mouth and I could imagine her dirty talk being spectacular.\n\n\"I'm sure we'll see more of each other, Starla.\"\n\n\"Whatever,\" she said dismissively. I shrugged and left. The rest of the week flew past. I took out my frustration over and over and over on Sherry's hot little ass, each time rebranding her with new nasty words and sending them to Carly who would always reply nearly instantly with her own. \n\nBy the end of the week, I think even Sherry was starting to feel the strain.\n\n\"Master, this week has been amazing,' she said as we laid in bed Thursday night, enjoying the afterglow. \"But I think I'm going to have to ice my cunt all weekend. And my poor little ass,\" she said. She wiggled her tight ass against me, showing off the marks that lined her freshly fucked booty. I traced my fingers along the welts, enjoying the heat and texture of the raised marks. I'd just finished whipping her ass while she was tied up for over an hour. Starting with my hand and working through a belt and then a thin plastic rod. The last, I'd actually had to moderate my blows because I was pretty sure I could have broken the skin with even a little extra effort.\n\nSherry moaned softly under my ministrations, obviously enjoying the mix of pleasure and pain. \"Time to mark you, slut,\" I told her.\n\n\"Yes, Master,\" she said and obediently hopped up onto her knees, placing her hands behind her head and presenting her entire body for me. The marks were everywhere on her. Welts from the lashing. Hickies from where I'd sucked on her tit flesh. Slight bruises between her thighs from where I'd really jack hammered her last night. All clearly visible. \n\nSlut, Whore, Fucktoy, Slant Tramp, Cumdump, & Rape Meat adorned her tits, thighs and ass. Over the last couple days this had become somewhat of a ritual. Me refreshing each mark from before and then adding a new one. I slowly traced the existing letters, enjoying her shudders of arousal. True to her word, she'd never once asked to cum this week and given how much fun I'd had with her body, I was actually pretty impressed. I paused, considering my options for her new brand. Then I smiled an evil smile and wrote in giant letters scrawled from her right hip up to below her left breast, \"CHINK\". Sherry gasped as I did it, realizing that she was going to have to dress very carefully and that her crop top from tonight would actually show off the bottom half of the H. It wouldn't be apparent what it said but it would be obvious SOMETHING was written on her. \n\nI took a picture and messaged it to Carly. Unlike every other night, there wasn't an instant picture back, instead just a normal text message.\n\nFrom Carly to Me: If, Master will permit, I'd like this one to be a surprise for tomorrow?<br>Me: I'm intrigued but I'll permit it. Your surprises are invariably pretty good \ud83d\ude09\ud83d\ude15<br>Carly: Thank you, Master. I'm sure you'll approve. And it looks like you've enjoyed my slutty little sister this week?<br>Me: She's become quite the dumb bimbo chink this week.<br>Carly: I see that. I hope you'll have the energy to work me over the same way tomorrow, Master.<br>Me: I wouldn't have it any other way, slut<br>Carly: \ud83d\udc97\ud83d\udc97\ud83d\udc97",
        "I watched Sherry as I was texting. She put her clothes back on carefully, as if she was worried about smearing the letters written on her body. \"You can wash them off Sunday night, slant,\" I told her. She shivered a bit and nodded. \"Also, your skirt is too high. Pull it down about an inch.\"\n\nSherry frowned in confusion before realizing what I intended. She shimmed the skirt down which showed off just the bare top of the words, \"Fucktoy\", I'd emblazoned across her lower back. \n\nI decided to walk her home, no telling what might happen with her alone if someone noticed the letters and got any ideas. She got the normal flack from Starla and the teasing from Louise (especially once Louise noticed the letters) but the three of them had developed a bit of an equilibrium. I think Starla was recognizing that while our relationship was unconventional, it wasn't harmful, per se. \"Enjoy your weekend with her, girls. I'm done with her holes for a few days,\" I said. Louise laughed, enjoying Sherry's obvious aroused embarrassment. Starla simply rolled her eyes, having gotten used to this. As we left, I thought of something. I turned around and said, \"Starla, come to dinner with me next Wednesday.\"\n\n\"Wha... why me?\" she asked.\n\n\"I'd like for you to get to know me better. Maybe you could learn to understand me. So that's a yes?\"\n\n\"Uhh... you've got a girlfriend and... whatever this is?\" she said waving her hand at Sherry dismissively. \n\n\"I've got two girlfriends and she's neither. But they like me having multiples. You still haven't said no. I'll pick you up at 6:30?\"\n\n\"Uhmm... sure... If only so I can learn more about you. I assume you're not going to treat me like Sherry, right?\"\n\n\"Not unless you want me to,\" I said with a smile. Louise frowned, \"What's wrong Louise?\"\n\n\"I really thought I'd be the first one of us you'd ask out, Mr. S,\" she said coyly.\n\nI walked over to her and leaned down to whisper in her ear, \"I'll go out with you AFTER I fuck all three of your slut holes.\" \n\nShe gave a soft moan and looked me right in the eye, \"I'll think about it.\"\n\n\"What was that?\" Starla asked.\n\n\"None of your business,\" Louise snapped before heading off to the bedroom with Sherry in tow, \"Let's talk,\" she said. I shrugged and waved goodbye to Starla who actually waved back. I enjoyed her confusion and I liked her response to me simply taking charge. I could tell she was trying to be more assertive but I didn't think that came natural to her.\n\nI went home and fired up my console, eager to play some League of Smiting Ancients. Maybe Carly would be on, I thought. I got into a game and was actually doing pretty well. I hadn't gotten to the point where I could reliably hard carry but if I got enough ahead, I could usually carry the team to a win. We were pretty close to finishing when all of a sudden an error message came up and then the system crashed. \"Shit,\" I said. Unfortunately, the game counts as a loss if you can't reconnect within three minutes. I quickly rebooted the machine and logged back in and the game was gone. Along with a message saying all the game queues were currently offline. Just then, my phone buzzed.\n\nFrom Carly to me: Whole system just crashed. I'm heading to the office now.<br>Me: I noticed. I was in a game and about to win \ud83d\ude20\ud83d\ude22<br>Carly: Sorry \ud83d\udc94\ud83d\ude22\ud83d\ude21<br>Me: Let me know when you know something.<br>Carly: I will, Master.\n\nThe next day I woke up to a series of text messages that had come in over the night\n\nCarly @ 2am: This sucks. Somebody royally fucked up the network code.<br>Carly @ 3am: I've got five idiots working for me and none of them can figure out the problem. I'm so fucking pissed. I hate humanity. \ud83d\ude20<br>Carly @4:13am: EUREKA! It's FIXED. Now we just have to deploy to every region!<br>Carly @5:30am: I'm going to sleep. I'll call you later. \ud83d\ude1a\ud83d\ude1a\ud83d\ude1a\n\n\"At least it's mostly fixed so our weekend won't be ruined,\" I thought as I got dressed and headed to work. At least that's what I thought. Around 2pm, I got another call from Carly. \n\n\"Do you want the good news or the bad news, Master?\"\n\nI sighed, exasperated, \"What's the bad news... I think I know what it is.\"\n\n\"Yeah... they've asked the entire senior team to come in tomorrow morning to figure out how bad this is and how to make sure it never happens again.\"\n\n\"What's the good news?\"\n\n\"Well... I was thinking... maybe you could come up to see me? I got my boss to approve switching the ticket to your name if you want. They'll fly you up here as a thank you to me.\"\n\n\"Yeah? That could be fun. How long are you going to be working tomorrow? Not too long I hope?\"\n\n\"Couple hours. Four at the most. So you'll come up?\"\n\n\"Sure,\" I said truthfully excited. \"This could be a cool trip,\" I thought.\n\n\"Yay!\" she said with a girlish cheer, \"I'll meet you at the airport. I can't wait... uh... Sir,\" she said. I could hear talking in the background and I assume someone came into her office. \"I'll see you in a few hours.\" She texted me the flight information and I realized I had just enough time to head out, pack and get to the airport. I rushed out the door, letting Dave and his team know I was leaving and sprinted downstairs. In less than an hour I was standing in line at the airport and by 6pm, I was touching down in Boston, land of everything opposed by New Yorkers. I had to admit, looking around, I didn't understand why people from New York had so much of an issue. The airport was fine. The people seemed nice. From what I could see of the city flying in, it looked pretty good. Maybe just another prejudice people from \"the City\" had. I shrugged, then noticed a woman in a hat waving from the front of the building. As I got closer, I realized it was Carly who was dressed oddly conservatively. She had on a pair of tight jeans and a nice silk blouse. I realized she must have come straight from work. Though the hat seemed oddly out of place. \n\nI walked up and we gave each other a desperate, needful kiss. She practically sucked the air out of me as we made out in the airport, neither of us caring about the throng of people that split around us. \"I missed you so fucking much,\" she said before kissing me again.\n\nWe headed outside and I reflexively went to the cabs. She tugged on my arm, \"We drive around here, silly,\" she said with an exuberant laugh. \n\n\"Oh... driving yourself. How gauche,\" I said in my best upper crust british accent. And by best, I mean vaguely recognizable. Carly laughed anyways, an admirable trait in a girlfriend. \"What's with the hat, babe?\"\n\n\"Ask me again in the car, Master,\" she said with no concern for who heard. An elderly couple did catch it, however. They acted as if we'd said, \"Hitler's a nice fella.\" The husband actually covered his wife's ears. I thought that only happened in movies!\n\nI hauled my bag to the car and tossed it in the trunk before hopping into the passenger seat. \"So what's with the hat?\"\n\n\"It's your surprise, Master,\" she said huskily, turning to face me.\n\n\"My surprise? You bought me a hat?\" I asked confused. It was a Red Sox / Celtics Christmas themed hat. I'm pretty sure it was also a guaranteed mugging back home.\n\n\"No... look,\" she said and removed the offending article of clothing. In bold, black letters right across her forehead were the words, \"CHINK\".\n\n\"Fuck that's hot,\" I said with a whisper.\n\n\"I know, right? I've been wet ever since I wrote it. I so need to get fucked, Master. I mean really pounded. I don't ever want to go this long without your big white cock, Master,\" she said in a completely matter-of-fact voice as she started the car.\n\n\"Me either, slut,\" I told her as I leaned over and gave her a gentle kiss. \"So what's the plan for this weekend?\"\n\n\"I have a rough itinerary. But as with all things in my life, the ultimate decision is up to you of course, Master.\"\n\n\"So what's item one on my little cumdump's list?\"\n\nShe giggled again before saying, \"First, definitely I have to get fucked. I'm going to go absolutely insane if I don't get your cock in me in the next twenty minutes.\"\n\n\"I think I can get on board with that plan.\"\n\n\"After that, you need to start seducing my roommates,\" she said.\n\n\"What?\" I asked in surprise. I knew what Carly's kinks were but her matter-of-fact delivery still managed to catch me off guard.\n\n\"Well yeah... you're going to be unable to fuck my nice little asian holes tomorrow morning so if you don't get with one of my roommates you won't have anything to stick your dick in when you wakeup.\"\n\n\"Yeah... that would be awful,\" I said with a slight mocking tone to my voice.\n\n\"A glorious white God should be able to fuck whenever they want, Master.\"\n\n\"I like the way you think, my little Asian cumdump,\" I told her as I unbuttoned her pants and slid my finger along her moist gash.\n\n\"And then what? When you return home and I'm fucking your roommates. What do you want?\" I whispered. \n\n\"Use me. Degrade me. Humiliate me. Torment me. Fuck me. I don't care, Master. Just make me be useful to you in whatever way you want.\"\n\n\"Good girl,\" I said and continued to rub her cunt as she drove the short drive back to her apartment. She was red and panting by the time we pulled into the parking lot and she practically threw herself at me when we came to a stop. I kissed her and rubbed her, enjoying her moans into my mouth. After a few minutes, I gently pushed her back so I could look at her. \n\n\"I need to tell you something, Carly. I've been going back and forth about this and finally I decided, \"Fuck it!' You need to hear it.\" Carly's eyes flicked back and forth between my eyes, alternating between anticipation and fear. I powered on, \"I love you. Like I've never loved anyone. You are beyond perfect for me in ways I could never have imagined.\" Tears were streaming down her eyes and I leaned in and kissed her with love and affection.\n\n\"I... I...,\" she stammered.\n\n\"You can tell me anything you want, Carly. If you don't feel this way or it's too early that's okay. I just needed to tell you. It was eating me up inside. You want to tell me something too don't you? You've been wanting to for awhile. I can tell on every phone call, you know\"\n\nShe nodded softly but said nothing, \"Will you tell me if I make you?\"\n\nAgain, she nodded gently, looking away as she did. \"Why don't you want to tell me?\"\n\n\"It scares me. It will change things. You'll look at me differently. You'll treat me differently.\"\n\n\"Carly, I promise. I love you. Nothing is going to change that. Now tell me what you need to tell me. It's killing me.\"\n\n\"Master, I'm pregnant.\"\n\nOhh!?!... to be continued"
    ],
    "authorname": "Masterful_Husband",
    "tags": [
        "asian",
        "body writing",
        "cuckquean",
        "dominant male",
        "domination",
        "humiliation",
        "raceplay",
        "slut",
        "submissive female"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/carlys-wmaf-fantasy-pt-10"
}