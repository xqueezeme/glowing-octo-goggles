{
    "title": "Extending the MILF List Ch. 11",
    "pages": [
        "Wednesday night I stayed late at campus, by late I mean sixish. I saw D. Debra heading to play practice, Chris trailing along behind her. I went to the library. I'd been there a couple hours when my phone rang. I got up and went out into the hall. It was my sister. \n\n\"Tawny? Hey.\" I said casually, my head still in the books.\n\n\"Someone is fucking in mom's bed and it isn't you or me!\" She whispered. \"Can you hear them?\" \n\nI jerked back to the present. \"Hear them?\" I repeated distantly. I half understood. \"No. No. Sorry. I meant to tell you I, well, ah, Mrs. Rossini, her husband is, he arrived back suddenly yesterday and I, well, she, her sister was staying with her, them and she, Mrs. Rossini, she wanted you know, quality time with her husband. Alone! I mean, without her sister listening at the keyhole. So, yeah, since you weren't coming home much, I said she could stay...\"\n\n\"She's fucking somebody!\" Tawny growled, her whisper rasping. \"I heard them. A man. She was on her knees grunting while he rammed his cock into her from behind. God, Sonny, are we running a whore house now?\"\n\n\"Why was there money the table?\" \n\n\"No. Fuck off, you know what I mean.\"\n\n\"Not at all. Look, if I start making money, I'll make sure you get a cut.\"\n\n\"I don't want a cut!\" Her whisper threatened to breach a threshold and be disqualified. \"I want...\" \n\nI interrupted her. \"Well, if you want me to line up clients...\"\n\n\"Goddammit, Sonny, that isn't what I meant and you know it. Goddammit, why is someone fucking in mom's room?\" \n\n\"I suppose she thought it would be rude to fuck in your room I suppose.\" This, from the department of redundancy department. Okay, I was rattled a little. \n\n\"Goddammit, Sonny!\" Her voice was ushered out of church to some street corner where it was sure to cause a disturbance. \n\n\"Hush, sis! I, I think I know how it is. I bet,\" I hesitated. I had to agree. \"Goddammit, I bet its Brent.\" \n\n\"Brent? What is...oh shit.\" The voice was readmitted to the library, all hushed and quiet. \n\n\"Yeah. I, Jesus, I never thought they'd...fuck me! Let me call you back.\" \n\nI hung up and stared at my phone. Brent had gotten to Aunt Norma first. I had given Natasha a spare key yesterday, accepting that I had to do her a solid and let her sister sleep at my house. Norma had been at a hotel last night and was checking out today and, well, I guess she was making herself at home. \n\nI called Natasha. Her phone rang and rang and rang. \n\nNo answer. \n\nOh bother. My gosh things get quacked up in a hurry. I took a breath and shook my head. This was not that bad. Natasha had pleaded with me, she carried my collar gift in a little jewelry sack and said, she said that if I did this for her, she'd put the thing on and never take it off again. I asked if that included while she was fucking her husband and she snorted. \n\n\"Never happen. We are done!\" Neither of us believed her. \n\nAccording to Brent, she always said that about her husband. Always did and hadn't been right yet. Her phone didn't even go to voice mail she was so insistent on not talking to me. I would have bet the middle inch of my cock that she had her heels in the air and was panting for breath. Joseph Rossini had missed a flight and not gotten in till today. If I was him, I'd have Mrs. Rossini on her back about now pounding the truth out of her and filling her with my cream of lies. \n\nFrom what Brent said...Brent! Norma had not even slept a night in my house and Brent was already over at my house and in my guest. \n\nMy phone rang. \n\n\"Well?\" Tawny hissed in my ear.\n\nI had no idea what to say, so I dissembled. \"If you are so impatient, go join them.\" \n\n\"Fuck you, Sonny, I already shared Chris with your girlfriend...\"\n\n\"She's not my girlfriend. I fuck my girlfriend, or would if I had one.\" \n\nTawny snorted. \"Like anyone could tell the difference between a girlfriend and any other female you get within arm's length of you. Is there anyone you don't fuck?\" \n\nI thought about that. \"Well, let me give it a little thought. You mean besides D. Debra Hamilton?\" \n\n\"Sonny, she's screaming!\" \n\n\"Go watch.\"\n\n\"You have me confused with Dalia. Jesus, Sonny, what are you going to do when they get home.\"\n\n\"I've given up on them. I, I don't think they are ever coming home again.\" \n\n\"No? Well think again. Lava wanted me to pick them up. I volunteered you.\"\n\n\"Tomorrow?\" I heart accelerated like a street rod. \n\n\"No, dummy, Friday night. Late. After play practice Chris and I had a late date planned. Dinner, dancing, a walk in the park.\"\n\n\"It's twenty below outside, are you nuts?\"\n\n\"Sonny, you have a woman in our house and Brent is fucking...Jesus, he's fucking his Aunt! He's fucking his own Aunt in our house! How do you think Georgia and Dalia are going to feel about that?\" \n\n\"Relieved.\" I offered. \n\nShe went silent.\n\n\"Hello?\" \n\n\"You are supposed to be Georgia's...when she gets back.\" \n\nI knew that voice. It mixed the affronted female with the sinister sister. \n\n\"What do you mean, relieved, anyway?\" Tawny could do anger like Georgia for only about as along as a flea's fart smells. Sort of like the time it takes a bullet to go in your eye and come out your ear, violent and over quick. \n\n\"They'll know for sure that my buddies are interested in fucking. You guys can audit, give Brent pointers while he is boning his Aunt.\"\n\n\"His Aunt! God, Sonny, he is fucking her right in our own house. Uh oh.\" She went back to whispering really softly. \"Do they, does he, do your friends now about, about, about us?\" \n\nI shrugged and wondered what words to use. I was two for three in the sister department. I decided to be casual and straight forward. \"I, I have decided we need to do a mother and her daughter, or three or five. You know, like a bucket list before we have to become responsible adults.\"\n\n\"You have lots of time before you become an adult. I don't see that happening while you can get an erection without the help of a stick up your butt.\" \n\n\"Jeez, does that work?\" \n\n\"Sonny, dammit. Shush. They're, they're getting up.\"\n\nI felt all jaunty that I wasn't there to deal with it. \n\n\"Oh my god, have you seen his...?\" She lost her voice somewhere. \n\n\"Yes. I introduced mom to it, remember? She took it in the ass, little sister.\" \n\nNo sound. Then breathing and the soft clunk of a closing door. I had no idea what was happening. Tawny, god, she confused the shit out of me. My imagination volunteered to fill in what I could not see. How uncomfortable was that!\n\n\"Why are they showering separately? Goddammit, can't they just share mom's shower and leave ours alone? I bet he leaves the lid up and pisses all over everywhere. My god, I saw his sock. I mean, uh, cock. Dick. Johnson. Boner. Woody. Penis.\" She spat out the words like they were peas. She hates peas. \n\n\"Turrets?\"\n\n\"He, mom took that up her, her, oh my god, didn't you tell me she let him put that in her ass?\" \n\nI had no idea what all I told my sister about my mother fucking my friends. I was pretty sure that was accurate. I did just mention it but maybe she didn't hear, or her brain was on dick overload. It happens. \"Gives you a new sense of respect for our luscious mother, doesn't?\"\n\n\"Sonny, don't be gross. How long are they going to stay? You have to pick up Georgia and Dalia on Friday.\"\n\n\"I, okay, I will. I, I think a couple days, till Natasha gives her soon to be ex-husband the heave ho!\" I had my doubts. Honestly, I forgot about my sisters. I'd gotten so comfortable in an empty house, I was completely willing to live out my oft time fantasy of being an only child and not think beyond that. The empty house was luscious and grand and I liked not having gobs of hair in the sink, not the interesting kinky hair that makes you imagine things, just gobs of hair going all slimy. \n\n\"I'm going back to the Wills. Say, what is going on with Mrs. Wills? She, she seems...?\" \n\n\"Yeah. She is.\" I agreed to whatever Tawny was thinking just so I didn't have to navigate the shoals of the truth in my little dingy of consciousness. \"I'll deal with it.\" I spoke with much more confidence than I felt. \n\n\"Well, there is something going on with her and I am, I just don't get it. God, she is never home and I asked Chris about his dad and he went all sullen on me, like I had asked if his dick was going to grow any more or if that was it.\" \n\nI laughed out loud. My sister, god, she could be funny without even trying sometimes. \"What'd he say?\" \n\n\"Nothing. No, that's not true, he said he was an orphan and he didn't want to talk about it. What does that mean?\" \n\nI knew, but I wasn't telling. \"It means he's a thespian and you know how dramatic they like to be. Everybody over eighteen is an orphan but we just don't bother to enforce that rule in this country. This may be no country for old men because we are all intent on staying children.\"\n\n\"What?\"\n\n\"Forget it. Movie reference. I'll deal with Mrs. Spilletti. And Brent.\"\n\n\"Missus? God, Sonny, don't you ever fuck anyone you're supposed to fuck?\"\n\n\"Who says I'm fucking her? Seems like she has her, uh, hands or whatever already full.\" \n\n\"I'm going to Chris'. Bring our sisters by to say hello.\" \n\n\"I thought you were going out on Friday.\"\n\n\"Fuck off, Sonny.\" My sister hung up. \n\nWell, at least I knew what I was going home to. Not silence. Not a pleasantly empty house. And not the welcoming embrace of a hot woman. I figured she'd be spent like a condom before Brent rolled up his welcome mat and went home. \n\nI was wrong. \n\nThey were still at it when I got home. \n\nI heard them hammering away as soon as I stepped into the house. I thought someone put sneakers in the fucking dryer. I peeked in the laundry room and sure enough, not. The dryer wasn't even on. I followed the sounds upstairs and to the door of mom's room. I peeked inside and there was Norma Spilletti astride her nephew, gender integrating the pony express. She seemed to be behind schedule. \n\nShe jerked and cried out, bucking and shaking before toppling off of Brent onto the bed, utterly spent. Again. Tits and elbows akimbo. \n\nI just walked on into the room. She didn't move. Brent saw me and casually folded his hands behind his head and regarded me with squinting eyes. \n\n\"That you, Sonny? How's it hanging?\"\n\n\"Brent, why are you fucking your aunt in my house?\" \n\n\"Oh, well, because I can.\" He chuckled. \"Because it's cold outside? My Aunt Norma loves cock. You remember, right. You fucked her just the other day.\" \n\nNorma lifted her head, looking around. \"Who are you talking to?\" \n\n\"Sonny. This is his house.\"\n\n\"Jesus Christ, Brent darling, I haven't been fucked like that since I was in grade school.\" \n\n\"Poacher. That's straight out of Fight Club, and the movie, not the book.\" I spoke impulsively. \n\nNorma rolled over and draped her tits onto Brent's chest. \"Oh, hey Sonny.\" \n\n\"What are you guys doing?\" \n\n\"Fucking.\" The both said together. Then, \"Jinx! Jinx!\" They both laughed and Normal bent over Brent and kissed him on the mouth. He put an arm around her and pulled her on top of him. She reached between them and fumbled for a moment before they both groaned and her ass began to bob up and down. She planted her hands on his broad shoulders and looked around at me, slowly, grimacing like she was having a stroke. \n\n\"Hey Sonny.\" She breathed at me, licking her lips. \n\nI stared at her rocking tits. They were waving at me, making little circles in the air with the nipples. God, they were strong and proud and I just stared. I felt like I was watching sparklers drawing in darkness, her long nipples made lines in the air that seemed to mark my corneas. I realized a moment later that Norma was twisting to show me her tits. \n\n\"Brent, what the fuck are you doing here?\" I held up my hand. \"I can see perfectly fine that you are practicing to be a dildo. Get off him, Norma. Brent get dressed and come downstairs. Now.\" I didn't sound angry, not to my ears at least. \n\nBrent looked positively abashed when he appeared in the kitchen where I was fixing a sandwich. I asked him what was wrong and he said I never gave orders like that and I must be angry about something. \n\n\"Dude, you're fucking your Aunt in my house. On my mother's bed.\"\n\n\"She's not home, right? She's in China. Aunt Norma will change the sheets when she leaves.\" \n\nI waved a hand at him. \"When will that be?\" \n\n\"When dad's gone. She, she admitted to me that they did it, a long time ago and she knew that if she was in the house with him, he'd try again and she'd let him. That would make mom green down to her toes, Aunt Norma doing dad. She told me about it, in, uh, some detail. She told me he was so handsome, she'd never say no and I asked if that was why she never said 'no' to me and she told me I was not blessed with his looks, I had something better.\" Brent grinned stupidly, inordinately pleased.\n\n\"She likes smart guys?\" I said as innocently as possible. \n\nHe looked askance at me, his brow knitting. \"No. My dick. Aunt Norma loves my dick.\" \n\nAunt Norma? He seemed to be using that mode of address all the time. \"I wanted to mention that to you. Remember, remember Melissa Crawford?\"\n\nHis eyes got big. \"Mrs. Honeywell's sister. Shit yes! How can I forget that chocolate mousse.\" \n\n\"Don't call her a moose, that's rude and she doesn't look anything at all like a moose.\" \n\n\"I meant...\"\n\n\"I know what you meant. She's not dessert, she's the main intercourse. Listen, they were, are sisters and the younger sister got a kick out of banging the guys her older sister liked. It became a thing, to hear Alissa tell it, if I remember clearly. Her boyfriends would date her and her sister would bang them while she was getting ready to go out, back when dating had rules and roles. Or maybe it was the other way around? No, no, it was Melissa stealing Alissa's dick.\"\n\n\"So?\"\n\nI took a bite of my sandwich, god I was becoming a great cook. \"Dummy. Can't you see what is happening? Norma...\"\n\n\"Aunt Norma!\" Brent interjected.\n\n\"Aunt Norma? What is it with you, all of a sudden?\"\n\nBrent grinned a loopy grin. \"She, Aunt Norma says it make her crazy aroused when I call her Aunt Norma.\" He grinned. \"I bet it would work for you too.\" He shook his big head. \"God, she doesn't have a screw loose, all of her screws are turned down nice and tight, but she might be missing a few.\"\n\n\"I get it, so she is trying to screw you to get them back?\" \n\nBrent looked at me funny and actually scratched his head. \n\nI just shook mine, my head. \"Forget it. Norma is stealing you from your mother. Natasha, she's jealous.\"\n\nBrent's face looked like a dolphin had just slapped him with a flipper and called him a slut. \"What? What are you talking about? This, this was all mom's idea. She, she wanted us to get together.\"\n\n\"Uh huh.\" I grunted around a mangled sandwich. It had fallen apart and I was now trying to eat a chef's salad without the bowl. Fuck. I dropped the oozing remnants of it on my plate. I got a fork. \"Sure. She did. I am sure that is what she said. But, but listen, that may have been a trick.\" \n\n\"A trick?\"\n\n\"You know, a test, to see if you'd let Norma steal you away from your own mother. Norma and your mom are competitive.\"\n\n\"No. They love each other.\" \n\n\"No even the point. I don't think they like sharing dick. Have you actually had them together?\"\n\n\"You mean since the first time when we, when you did them in the ass? No. Now that you mention it, no.\" \n\n\"And how often have you had your mother since then?\" \n\n\"I...uh.\"\n\n\"Uh huh. Norma is tweaking Natasha's nose by fucking her son. If it wasn't for the fact that Natasha was there first, I doubt you'd have gone this far.\"\n\n\"Thanks mom.\" Brent said, grinning. \"I think Norma is a little surprised by how well we fit together. God, Sonny, she does love to fuck.\" \n\n\"Dude. Go home. Your dad is home, go be a family.\"\n\n\"So I can get bonked with a frying pan meant for him and then have to listen to her screaming while they mate? No thanks. I'm staying here.\" \n\n\"No. You're not.\" \n\nBrent looked at me funny. \"Jesus, you're throwing me out?\" \n\nHe looked so hurt I felt bad. But he had to go. I lit on the exact right explanation. \"Dammit, Brent, I want to fuck her and you stretch her all out of shape. When you're done, I feel like a twizzle stick in a mixed drink.\" \n\nBrent's face went through several expressions. \n\nI waited for a couple minutes, till the silence got uncomfortable. \"Brent, listen, the other day, you saw the Favors right?\" I stopped, testing for consciousness. \n\nHe nodded dumbly.\n\n\"I have another mother and daughter combination that I think you will fucking love.\" \n\nHe blinked. Still no sound.\n\n\"You need to go home. I promise, I'll keep bringing you pussy till you find one of your own.\"\n\n\"Yeah. Like Chris, and the next thing I know I'll be in line with everyone else.\" \n\n\"Norma and your mom are going to end up doing us all, together, eventually.\" \n\n\"Darn it, Sonny, I just want a woman I can call mine, one that you can't yank on her chain and she comes padding over to suck your cock for you.\" \n\nI stared at him. Holy smokes, he was right. I was managing to arrange every woman I know onto her willing back. In that moment I remembered what Sid had said about me. God, the man was right. I had to think about that for a while. Later. \n\n\"If you are ready to settle down, go graze in the paddock with the other cows. Dude, I am offering you mothers and daughters, together. How many men would give their left nut for that situation?\" \n\nHe shrugged. \"How many men have tried it and lost both nuts in the process?\" He grinned bleakly. \"Jesus, Sonny, you are a grade A pervert. Shit, I'm glad I don't have a sister or I'd never be able to leave her alone. What is it with you? You have a magic pheromone that makes them want to take off their bras and let you do the rest?\"\n\nI shrugged. \"Dude, whatever it is, I am not going to quit till I'm dead. I, I haven't really mentioned this before but Sid has me doing something for him and, well, it pays. Dude, I am being paid for fucking an unbelievably stunning array of women, more than I have even mentioned. I ain't a whore, I'm, I'm, well, I guess I am filling a need.\"\n\nBrent just stared at me. Finally he shook his head and looked a way. \"Fuck me, filling a need? Really? You really are shameless.\" \n\n\"Practice makes perfect.\" I waited. I heard mom's bedroom door open and moments later Aunt Norma squeaked on the stairs. \"Go home, Brent. You have a father. He may be a dick or an asshole but I don't have one and for all the guys out there without one, I say that even an asshole is better than having none at all. Don't be a dick and make him wonder if you still love him. If he is an asshole, fuck his wife. That'll put a turd in his milkshake.\"\n\n\"Turd in a milkshake?\" Aunt Norma said brightly, sauntering into the kitchen in one of mom's robes. With four kids, my mother got lots of robes for gifts over the years and she kept them all. Wore most of them. \n\n\"Hey, don't you have your own clothes?\" I asked. \n\nNorma regarded me coolly, the expression of a woman fully fed on ecstasy to the point that nothing I said could disturb her calm. Zen and the art of fucking as a new philosophy of life. Fuck me, I bet that would be a best seller! \"Mr. Duncan. Thank you for putting me up. I, I am a bit short on cash and it is nice of you to let me share your domicile.\"\n\n\"Fine. Just don't use it up. You'll be gone by Friday, right?\"\n\nShe nodded. \"Natasha assured me this was temporary and that no way would Joey be in the house for more than a day or two.\"\n\nBrent rolled his eyes which gave me the willies. I had visions of Georgia glaring at Norma, like two lionesses, no, the lion king has a harem. Bad analogy. But wait. Hmmm. \n\n\"Go home, Brent.\"\n\n\"I thought you were going to stay the night and fuck me some more. My cunt likes your cock.\" Norma husked, her voice stroked my cock like soft, plush lips. ",
        "What does it mean if a woman's voice makes you hard? Are you a twist or is she a fucking genius? \n\nBrent shrugged his square shoulders. \"I need to go. Sonny's right. Family is family and much as I love fucking you, if my mom and dad...I need to go see my dad particularly if he is going to leave right away.\"\n\nFor thirty seconds, no one moved. Brent finally turned around, picked up his coat from the floor where apparently it had dropped as he arrived and left me standing in my kitchen with Aunt Norma.\n\nShe regarded me with her sleepy eyes. \"What now?\" She asked.\n\n\"Eaten?\" \n\nShe shook her head. \n\n\"You should.\"\n\n\"Diet. I am trying to live on fresh air and cock but, god, if I drink any more cock juice, I may gain weight. Brent is a healthy boy.\" \n\nI had nothing more to offer. I had a flash about doing her at that moment but refused the temptation. She was likely all stretched out and oozing cum still. \"I have to study. Not everyone is as brilliant as your nephew.\" I moved past her, leaving my mess in the kitchen, a subconscious test to see if she'd clean up after me without being told to do so. The terms of our endearment were not clear to me but I figured I should be cautious. Norma seemed like a man-eater on the outside and I rather wanted to stay whole for the resurrection. I didn't want to get to heaven missing a leg or something. \n\nOf course that was a stupid thought. I am definitely going to hell for fucking too much, too many, and the wrong women in my life. Good thing I don't believe in hell. Want to know what I believe in. Yep. Pussy. I'm a believer. Definitely. \n\nI stopped at the stairs and came back to the kitchen. \"Aunt Norma? What's that about? Brent doesn't say your name without saying Aunt Norma? He even referred to his mom as Natasha after she fucked him.\"\n\nNorma had sure enough begun to clear away my mess. She turned to face me. \"I asked him to. Call me that I mean. God, Sonny, I am having sex with my sister's son. I always wanted to do it with the wrongest men. Is that the right expression. Just doing him made me come like a house afire. Can I get any wronger than doing my nephew? I like hearing him say that he is fucking his Aunt. Big as he is, I get this evil thrill running up my legs when he says it.\" She smiled, almost wistfully. \"You can say it when you do me, if you like. I like being your Aunt Norma.\"\n\nI saw my opportunity to titillate Norma. She expected to pay for her board and room on her back. I realized if I took her up on the implied offer, she'd feel even. Once again, I wanted the long game. I had a flash of Norma wearing a pretty silver collar. \n\n\"I couldn't.\" I said, regret dripping from my voice. \"You are a guest. It would be terrible to take advantage of you. You are, you are separated. That makes a person crazy. Relax. Make yourself at home. I know there aren't many groceries. I'll leave cash and you can get some tomorrow. I'd appreciate it actually. Good night. See you tomorrow. If you need help moving on Friday, I'd need to do it early because, well, I have something I need to do later.\" \n\nI went up stairs leaving Aunt Norma staring after me. See? I am learning something from D. Debra. A little tease winds the clock tighter so that when alarm goes off, it will definitely wake you up from your life of quiet desperation. \n\nThursday proved a full day. The afternoon lab lost power and I spent an hour sitting in the dark with my dick in my hand. Not really, that's just an expression. When it finally came on, I had to start all over and my lab partner beat feet to see a man about a horse. She seemed awfully eager too. It was nearly eight before I got done with everything and headed home. I had an assignment that wasn't done so I worked till nearly midnight. \n\nNorma was watching TV and I think expected more attention. I picked up a burger and carried it up to my room and ate there. I wasn't antisocial so much as realistic. If I ate down stairs, I'd end up face first between her pretty, lean, brown legs and I had to get my work done before my sisters got back. \n\nI lay awake that night, thinking of Georgia arriving home, and Dalia. God, I realized I had no idea how they were going to fit into my life, all of a sudden. The accumulated expectations rambled around my brain like I was a hostess planning a dinner party for a crown prince, trying to make sure the seating chart didn't put the Capitalist next to the Communist. I lay awake till nearly two and overslept. \n\nI got to class late, earning the prototypical glare from my professor. Mrs. Olivette glared and then got a hitch in her giddyup. Man but that was uncomfortable because I am virtually certain she was having a flashback, or maybe she had a deja vu moment and was racking her brain trying to figure out where she knew me from. That last is humbling, doink a woman like that and she can't remember your face. Since I didn't introduce myself, I cannot be irate if she doesn't remember my name or call me. \n\nI got through the day without distractions. Norma did not call. I called Natasha to see if she had actually moved out, I had a terror of getting home to find her still installed in Mom's bedroom. No way that would happen. Naw. Natasha still did not answer her phone. \n\nI drove to the airport.\n\nI was late. Really late. And my phone switched off and I didn't know it till I got parked. Out of power. I'd felt the lateness of the hour stuck in traffic. I realized my phone was off, I was late, and seriously thought of using up some of my scratch to rent a stretch limo to dampen the effects of keeping a redhead waiting. I thought I might live longer if I did. I had nothing to worry about. \n\nI found the baggage area for the Miami flights and wandered around. I was looking for Georgia's red hair and decided she had exploded when I finally spotted Dalia reading in a chair off to the side. I strode over and walked right past Nova. \n\nNow, ordinarily I can spot Nova anywhere. Her long red hair and unbelievable body is unmistakable but this time she was wearing a disguise. \n\n\"Dalia, where's Nova? She out hunting me with a cross bow?\" \n\nDalia looked up from her Nook and smiled. \"She's right there. You walked right past her.\" Dalia's eyes were hooded and when I turned around, I understood why.\n\nGeorgia was standing with her arm around the waist of a tall brunette. The woman's black hair fell down her body like moss, shimmering with body and sheen. \n\n\"Holy shit.\" I expostulated. I don't think I ever expostulated before but I did then. Georgia was glowing, like someone just told her she was beautiful. \n\nShe spoke, her lips moved but I don't think my ears were working. When she turned her head to the woman and they kissed on the lips, I thought my head was going to explode. \n\nI expostulated again. \"Holy Shit.\" \n\n\"Sonny. Nice to see you again.\" \n\nMy tongue felt like it shriveled down till it was the size of a snake's and everyone knows fucking snakes can't talk, no matter what Eve claimed. The bitch had to blame someone and that was the best she could do? \n\n\"It's Charm.\" Dalia spoke from behind me. \n\nI tried to swallow past the noose around my neck. \"Charm.\" I croaked. \"Of course. So nice to see you again.\"\n\n\"She's coming home with us.\" Georgia said brightly but then sobered, a guilty look flitting over her face. \n\nI was so lost. Again. Some might say still. Charm turned to look at me. The woman regarded me with her cool eyes. She moved one hand up and ran it down the length of the black tresses hanging down her torso. \n\n\"I didn't recognize you.\" I confessed.\n\nCharm smiled. \"I've changed.\" She smiled wanly. \"On the outside, not on the inside.\" \n\nI thought she was saying something I did not comprehend, something everyone else seemed to understand and were all waiting for it to sink in. Okay, I remembered all right, I knew who this was. This was the woman that had seduced my mother. Suddenly I had a flash of this woman kissing another woman. Shit. That wasn't ancient history. She had just pecked Georgia on the lips. Holy fuck! I thought. \n\nSuddenly my lack of a plan for how to deal with Georgia and her expectations shifted. Then I realized I was jumping to conclusions. Not my fault. The sexual adrenaline pumping through my veins made me want to jump somewhere so I jumped to conclusions. \n\nMy cock got hard. \n\n\"Let's get your luggage.\" Inane, I know but I got to move to the cart groaning under a ton of luggage and pressed my instamatic hardon against it. Yes, it felt good and I thought for sure I had hidden my condition. Man you do not want to go without pussy for very long right after the monsoons. Things can develop without so much as a howdy do. Its like the cock has a will of its own, a theory that is not new in human civilization, I understand but it still seemed profound to me. \n\nI led them to the car and stowed the luggage. One case and all the carry on had to be stuffed in around my sisters and Charm. Georgia and Charm sat in the back and Dalia sat with me up front. I wedged the one big suit case onto the seat between Charm and Georgia and I felt Georgia's glare like I intended it as a chastity suit case. \n\nFuck me. \n\nDalia gave me a look, a cross between \"your poor bastard\" and \"don't you fucking dare\", neither of which I understood. I got us out onto the freeway. When I was in the wash of traffic, I glanced at the rearview mirror and said, \"So, Charm, what brings out back to town? You married yet?\" \n\n\"Sonny, shut up.\" Georgia hissed. \n\n\"No. Georgia darling, don't. It's okay. Not any more, Sonny.\" \n\nThe bitch turned me into a dentist and I didn't even know it, talkin when I should have been silent. I thought I was just being sociable. \n\n\"Divorced? So soon? What an idiot but then you are probably too good for him.\" \n\n\"Sonny! Hush.\" Georgia tried for the \"mom\" voice but apparently until you have skid marks on the birth canal, that tone isn't possible. \n\n\"No, no, honey, that is okay. If I am going to be staying at your house, it is best he knows the situation.\" \n\n\"Situation? What? Did you you marry the mob and now they are gunning for you?\" I guffawed because I thought I was being clever.\n\n\"I'm widowed.\" Charm said. Her voice sounded like she looked, like water running out of a snow pack looks in sunlight, clear and liquid. \n\nI sobered right up. \"I am so sorry. I, god, I'm sorry.\" \n\n\"You didn't know.\" \n\nThen I followed up with the classic line straight from the idiot's guide to social graces but for actual idiots, written by actual idiots, or by me, if you like. \"What did he die of?\" \n\n\"Sonny, god, can't you just shut up?\" Georgia growled her voice rumbling with her \"don't fuck with Nova\" tone I'd last heard when I hid all the tops to her swim suits just before she headed to a swim party. \n\n\"No, really, Georgia, I, I haven't spoken of it yet and it, it really is time. The longer I wait, the harder it will be. I don't have to look him in the eyes, so maybe this is the best and easiest time. My husband died of cancer.\" \n\nBoy, that did put a damper on the moment, I mean much more. \"Oh.\" I managed, realizing the grave yard I had happily danced into was actually a minefield. \n\nCharm showed mercy. \"I, he was gay, Sonny. I am a lesbian. I, he was my friend and I married him to get him health care. He died finally three month ago.\"\n\nThose few sentences were absolutely not pith poor. I needed a week to connect all the dots. God, what a thing that was. \n\n\"Oh.\" I said again. I drove in humming silence for a while.\n\nCharm finally laughed. \"You are really funny when you aren't talking.\" She said. \n\nI concentrated on driving and not running us into an abutment. Beside me, Dalia chortled, cluing me in that I had just been cut to ribbons. Let me explain. I am not as funny as I think I am when I am talking. A lesbian liked me not talking. A lesbian thought I was funny when I wasn't talking. A lesbian was laughing at me despite her dire and dolorous circumstance. Fuck me.\n\n\"I'm sorry, Sonny, I should not have said that.\"\n\nSuddenly it was like a light went on in a dark room where I had whacked my shins on something hard and sharp four times already and I could see everything clearly, only to find I was in the middle of a torture chamber. My mother had told me that Charm, this very Charm had seduced her and then had sex with mother and daughter. Further, Dalia had caught them at it. What is more, Georgia insisted that when I caught her in bed with our mother, it was the first time. Nothing checked. \n\nIn my head I blurted and blurted. I felt like my cheeks were flapping in a stout wind. Ever feel wind in a fast car blowing in your mouth, all the way inside of your nasal passages. It makes your eyes water. The pressure of wanting to know the truth about Charm and my family overlaid her terrible announcement. I felt like I was having a heart attack. \n\nI felt a hand on my shoulder. \"He's crying.\" Charm said, actual wonder in her voice. \n\n\"Not either.\" I snarled and that made it all worse. \n\nI drove in silence for a while. It was like I was hearing my mother all over again. \"Cici Duncan.\" I subvocalized, trying to distance myself from what my memory was poking into my ears. According to Mom, Georgia and Charm brought her to \"several earth shattering orgasms\" one afternoon when Mom interrupted them making love in her bed. I felt like a ten-year old who just saw Santa Clause, for real. \n\nWho needs speed when you have adrenaline. I glanced down at the speedometer to be sure I wasn't driving a hundred and fifty. I slowed down. We rode in an uncomfortable silence. \n\nFinally Georgia spoke up. \"I, I thought we could let Charm stay at our house. She, she actually has business here and will be here most of next week. I, you don't mind do you?\"\n\nI wanted to turn around and see who had stolen my sister's voice. She never asked, she always instructed. \"No. Of course not.\" I croaked. \n\n\"We saw Charm in line in Miami, in the security line. I didn't recognize her but Georgia was sure it was Charm. I told her no way.\" Dalia began.\n\nCharm laughed. \"I have changed a little.\" \n\n\"Your about a mile taller.\" I offered.\n\nShe laughed. \"Okay, maybe you are a little funny when you talk. No, I lost some weight and, I exercise, some. Well a lot.\"\n\n\"You look good.\" \n\nDalia smacked me. \n\n\"Hey, quit it. I'm driving.\" \n\n\"She's a lesbian. Show some respect.\" \n\nMy mind was not computing very fast, like an old typewriter with peanut butter stuffed in the keys. \"What? Being lesbian doesn't mean she can't look good. Or fucking great as the case may be.\" \n\nDalia smacked me again but on the leg so we didn't drive into the ditch.\n\n\"Thank you, Sonny. You are right. Just because I like vag doesn't mean you cannot tell me I am attractive.\" \n\n\"Jeez, me too. Shit, I love vag so at least we have that in common. That's a lot.\" I spoke before thinking. \n\nThere was a moment of tension but then Charm laughed. \n\nDalia asked her about her schedule. She flew in on Friday specifically to take some time to see old friends but had not notified anyone in case it was too much too soon. \n\n\"I, I really cannot tell you how great it is to see you guys. Gosh, I, I feel right at home. How's your mother?\" \n\nSilence. \n\nMy ears rang with the question and I realized how artfully I and my siblings had avoided this subject since mom ran away with the circus. \n\n\"She ran away with the circus.\" Dalia said. \n\nI was coasting down an off ramp and when I came to a stop I stared at my sister to see if she had little antennae sticking out of the corners of her forehead. \n\n\"What? What does that mean?\" \n\n\"Mom went to China on the arm of a billionaire.\"\n\nArm! That's one description for it. I thought it was impolite to confuse metaphor with reality, though. \n\n\"A billionaire?\" Charm asked. \n\nMy lack of specific memory as to what I had and had not described to my sisters haunted me. I literally did not know if I had given dimensions to the cock Mom had chased after to China. \n\n\"He's married.\" Dalia said, a light burr in her tone.\n\n\"Your mother? Ran away with a married man?\" \n\n\"Big cock.\" Georgia said in a low voice. \"I mean huge cock.\" \n\n\"Oh.\" Her voice sounding just like a straight man's when you tell him your son has settled down with a nice man in Charleston. \"I never would have imagined she would run off with a man.\" \n\nNow I really wanted to drag things out into the open but fuck if I knew how to get a good hold on them. The widow's shadow fell on us and seemed to damped the air itself. I had no words. God, I wanted to know if what Mom told me was true but how to ask? Someone was not confessing and remembering Georgia wearing Charm on her arm like a mink stole, I guessed that sister Georgia had not been quite honest about her experience with pussy. \n\nI tried to think back as I turned into our subdivision if Georgia had said she had never had sex with a woman before that night with mom or she had not had sex with mom before. That begged the question as to whether she knew about Charm and Mom. Unless Mom had lied about the whole thing! God, I was so confused. Life was going to get a lot more confusing in about five minutes. \n\nYou guessed it. Norma Spilletti's car was parked outside our house. \n\n\"Oh fuck me.\" I mumbled as I turned the corner onto our street. \n\n\"God there is a lot of snow.\" \n\n\"Its been cold.\" Georgia said. \n\n\"How would you know?\" I spoke with an edge to my voice that earned me a look. \"You've been lying on the beach.\" \n\n\"I can watch the weather.\" Dalia said, snarking back at my snark, defending her sister. Shit, it had always been three against one. \n\nI opened the garage and drove inside. I wondered if I was seeing things or they did not pay any attention to the car parked on the street in front of our house. I turned off the car. My head hurt from the tension. Then it struck me that Mom's room likely still contained an Aunt Norma, so where would Charm sleep? God, what a mess. \n\nI know, how did I not see it coming. This is why people are pessimists. Who was it? Ben Franklin who said it is better to be a pessimist and be surprised than an optimist and be disappointed? Well, that moment in the garage was my encounter with the truth of that preference. We unloaded, that is we got out of the car. Of course I was expected to carry everything in but I put it off, keeping it in reserve in case I needed a tactical retreat. We trooped into the house.\n\nNorma sat on the couch. \n\nMy two sisters and Charm stood looking at her and she studiously ignored everyone till I arrived. \n\n\"Sonny? Oh thank goodness. I am sorry, I...\" Aunt Norma began.\n\n\"What are you still doing here?\" I interrupted. \n\n\"Who is this?\" Georgia interrupted my interruption. \n\n\"Sonny, please, I just brought your key back. I...\"\n\n\"Your key? Who is this?\" Georgia looked me.\n\n\"Have you been renting out our rooms while we were gone?\" Dalia asked. Her smirk caught Nova's attention and her blush decreased. \n\nCharm moved to the side, folding her arms under her polite breasts, polite because they did not demand attention. The woman looked like the winner of a modernist design competition. \n\n\"Sonny...\" Norma started again.\n\n\"You're still here.\" I said. I felt pressure and expressed it as anger which was a huge mistake but one I was happy to make. \n\n\"Sonny, listen, Joe didn't leave. He's still at Tasha's house. They, well they have been enjoying each other's company, if you know what I mean. I went over there and...because Tasha hadn't called me and in two minutes they were in a fight, throwing shit and screaming. God, those two do love to fight. I bet Tasha is either on her knees or on her back by now. I don't think they'd slept in two days. I mean beside little cat naps. Pussy naps, I mean.\" Norma giggled like she'd been into the sauce. \n\n\"What are you doing here?\" Dalia asked reasonably, her voice seeming to calm Georgia. ",
        "\"I, well, I'm, I'm Norma Spilletti. I'm Natasha Rossini's sister, younger sister. She, her husband came back after a rather bitter breakup and well, they have been negotiating for a reunification. They have a fiery relationship and,\" here Aunt Norma looked at me, questions in her eyes. I just shrugged so she took the high road. \"...and Natasha asked me to move out for a while. I, I split with my husband who is a knucklehead and Sonny offered to let me stay here. I, I promised it would be only till today because I thought Joey would be gone by now. I, I make my sister jealous and angry because her husband can't keep his hands off of me.\"\n\n\"Mrs. Rossini?\" Dalia said, looking around at me. \n\nI had nothing. \n\n\"I, I'll just get my things and go to a hotel. I see, I can count. No one needs to sleep on the couch.\" \n\nGeorgia looked from me to Norma and then cycled again. Finally, staring at Norma, she asked, \"You feel safe in this house with my brother? Alone?\" \n\nNorma smiled. \"Oh, he has been a perfect gentleman. Never laid a hand on me. He has been studying like a madman.\" \n\nI actually blushed. I felt the heat ramp up in my face. I don't know why, it was just one of those things. \n\nDalia and Georgia and well, everyone was looking at me. \n\nI was sure it was my turn to say something. \"You have to go.\" I said because it was all I could think of, the one thing that came to mind. \n\nNorma nodded and stood up.\n\n\"Whoa, wait a minute!\" Georgia said stepping forward. \n\nDalia nodded. \"Wait, let's think about this. No need to be abrupt.\" \n\n\"You have to go.\" I said again.\n\n\"Sonny, shut up.\" Dalia said. \n\nI think she was tired from a day of traveling, or she was having a big sister flashback. My dick ran and hid, though. If either of my sisters thought they were getting any from me they were going to have to blow me like I was a San Francisco bong. Or, now, a Denver bong, I guess. \n\n\"Why don't you fix everyone a drink, Sonny?\" Charm spoke for the first time. Her burbling voice seemed to soothe us all. I nodded. \n\n\"Get the luggage.\" Dalia said. \n\n\"Which?\" I was getting irritated. Let strangers into our house and the detente between me and my sisters went right out the window. \"Igor confused!\" I growled, dropping one shoulder and taking a lopsided step, like the hunchback of Hollywood.\n\n\"I'll get the drinks, you get the luggage.\" Dalia said. \n\nI agreed and proceeded to drag all the luggage stuffed into the car up the stairs. I just lined them up along the wall partially to be a smart ass and partly because I had only a vague idea of whose was whose. Really I was making a thing out of who was sleeping where and, perhaps, with whom. \n\nBy the time I got downstairs again, the four women were sitting with bourbon and cokes at the table chatting amicably. I sat down and picked up my drink, a little surprised they'd fixed me one.\n\n\"We think she should stay here.\" Georgia said. \n\n\"We know about you two.\" Dalia said. \"Clearly you two have had sex. We all think it is wrong of you to just order her out of the house.\" \n\nI sighed, knowing no matter what happened, no matter what I did I would have been wrong. No hope of getting anything right, in the long run. I just slumped, drank, and waited. I could have made an issue of it but I really had no idea of what Charm was dealing with or who had told me the truth about who was zooming who and I wanted to keep rapport with her long enough to find out. Fat chance but I had to try; one of those aesthetic things that makes no sense if you think about them very long, so I didn't. \n\n\"We think that you should let her stay.\"\n\n\"Me? I was...\" I started but then remembered everything I said would be used against me and I got no lawyer at all. \"Okay.\" I tried to act meek. I was eyeball deep in pussy; water, water everywhere but not a drop to drink. That messed with my wiring. \n\nGeorgia looked at Aunt Norma. \"You're Brent Rossini's Aunt?\" She asked, in the \"I'm about to get you\" voice. \n\nAunt Norma nodded. \n\n\"You have your things in Mom's room?\" \n\nAunt Norm nodded again. \n\nGeorgia nodded, glancing at Dalia. \n\nDalia took up the commentary. \"We think you should stay. It really is no trouble. We'll have to share the bathroom but we, at least, are accustomed to that. Sonny, you can lock him out and I would advise it.\" \n\nNorma glanced over at me with an assessing gaze, her rich lips almost smiling. \n\nI thought I could see the question in her eyes. What did who know? \n\n\"Charm can sleep in Tawny's room and we'll be fine.\" \n\n\"Do you have to go to work tomorrow?\" I asked, trying to be helpful.\n\n\"It's Saturday, so no.\" Dalia replied dryly. \n\n\"Oh, right.\" Ever have that feeling when you find out the time isn't the time or the day isn't the day you thought it was and things like, shift or lurch or something. I felt that like having sea legs without the sea. \n\n\"I am exhausted.\" Georgia said and she rose. \n\n\"Me too.\" I agreed, \"Mrs. Spilletti, I'll shower in your bathroom. I won't be a minute.\"\n\n\"Take as long as you like.\" Norma said. \n\nGod, I felt like her tongue was touching my lips. How did she do that? My cock started to rise up and I rose up first and made for the stairs. Georgia followed me. At the top of the landing she stopped me with a word.\n\n\"Hey, Sonny, listen, I'm sorry about asking Charm here without asking you about it.\" She grinned evilly. \"Particularly where she is a lesbian. It's like offering peanut brittle to a guy with braces.\"\n\n\"Or taffy.\" I added. I was waiting for Georgia to stake her claim to my stake. \n\n\"Or taffy, yes. I, I think we should wait till the house empties out a little, don't you?\" \n\nI nodded despite my contrarian nature when it comes to delaying dipping the dick. \"Probably wise.\" I really didn't know wisdom from an open window but it seemed smart to agree with Georgia at the moment. \n\nShe did look bushed and I don't mean it that way...forget it. She placed both hands on my shoulders and kissed me gently on the lips. \"I haven't forgotten, little brother. I appreciate your patience.\" She smiled then, a little smirk that I thought must have meaning beyond the pale but she was so tired, I chalked it up to that, deciding not to read anything into it. Nice work if you can get it but not always proper.\n\nI took a shower with ideations of one or the other of the available women in the house waiting for me on the bed. The room was empty and I trooped off to bed. I don't remember going to sleep. I lay down and then I was awake. \n\nMy door was open and the merest hint of light twinkled through the gap. I was sure I had shut it and hoped I had not slept through a sexual inquiry or offering. My cock woke up with a rumble of honor and off her in my brain. The light though finally shone through my eyelids to my actual thinking brain and I got up to shut it off, figuring that everyone went to bed and left it on. The clock said three-thirty. \n\nI got up and padded downstairs. The kitchen light was on and I was half way to there before my eyes adjusted and I noticed Charm sitting on the couch. She looked up. \n\nI stood there in my underwear, my cock at half-mast from the matinee. I think I'd been having sex with Kyla Clark in my dreams. The brain is a Rorschach kaleidescope. \"Oh, Charm, I didn't see you there. I thought we left the light on.\"\n\n\"Sorry, Sonny. I just spent a few weeks in Paris and I am still adjusting to the time zone. I, I had just flown back into the country yesterday. I delivered something to Miami. I do not adjust to jet lag quickly. \n\n\"Oh, no worries.\" I turned around and walked to the stairs and then thought this might be an excellent opportunity. I turned around. Despite my knowledge of Charm's charms, my cock sat up, sniffing the air. \n\n\"I don't do cocks.\" Charm said, eyes languidly fixed on my cock. A bemused expression tightened on her face. \"But as far as it goes, you have a nice cock. Raymond had a parade of cocks through our house and they got a charge out of waving them at me, just turtles fucking shoes.\" \n\nI grinned and moved over to the easy chair and sat down, grabbing a pillow from the couch to cover my crotch. \"It's not what you think, Charm. I mean, do you mind if I ask you a question?\" \n\nShe put down the iPad she was reading on and regarded me with a steady, unflinching gaze. \"I am not planning on seducing anyone.\" She said. \n\nI waved a hand at her. \"That is not my question or any of my business, for that matter. I mean, I want to know about something that happened when you still lived close by.\" \n\nShe looked less bland and a little more interested. \"Oh?\" \n\n\"Yes, I, I am not sure how to ask this but...\" I lost my nerve and decided to be a little more circumspect than asking if she maneuvered my mother into having sex with my sister. \"...you're a lesbian, then?\" \n\nCharm smiled, her eyes milky. \"Like you didn't know. I felt you all those times peeking in the door.\" \n\nOkay, maybe my second choice question wasn't quite circumspect or even polite. \"Peeking?\" I peeped like someone had squeezed my balls just a little too firmly. \"Peeking?\" \n\nShe nodded, her eyes fixed on me. \"Why didn't you just come in and join us?\" \n\nI poked a finger into my ear and twisted it around and then looked at it. \"I'm sorry, I think I am hearing things.\" \n\n\"Shall I repeat myself?\" \n\nI shook my head. \n\n\"Why? What's the matter Sonny, you were eighteen. Old enough to know the difference between the birds of a feather and a feather pillow.\"\n\n\"Uh, which were you? The bird or the pillow?\" I was thrashing. My impulsive impulse to corner Charm was not going very well. Like thinking I'd distract a hungry lion with a jar of peanut butter. \n\nShe smiled though. \n\nThat made me feel better. \n\n\"I always felt you were, you know, interested.\" \n\n\"I have a dick. And balls, if you're curious. Have you looked at yourself in the mirror lately? You do not exactly ward away attention. You are fucking gorgeous.\" \n\n\"What a mouth you have on you.\" She said seriously, the smile long gone. \n\nI worried that I had blundered over some invisible lesbian line between political correctness and inviting a nutcutting party. \n\n\"Are you touching yourself?\" \n\nI looked down. \"I guess I was. I, shit, I have no excuse.\" \n\n\"This is your house. I suppose you could turn off the lights in the buff and as a guest, it would be proper of me not to post pictures on the Internet. That would definitely be a guest rights faux pas.\" \n\nI swallowed. Being circumspect wasn't working out so well. I decided to be a little more direct. \"You, you seduced Georgia, you know, when she was nineteen or so?\" \n\n\"Ah Georgia, your sister has a very curious mind and does not notice boundaries, her own or anyone else's I daresay. At least she is more or less consistent and so predictable. For instance, I knew she would invite me to stay here with you when I saw them in the security check line. Remember when you could wait right at the gate for people? Remember the lovely kisses people got?\"\n\n\"No. Neither do you. What the fuck are you talking about?\" This woman made me nervous, but I needed to know something. \"So? Did you have sex with Georgia?\"\n\n\"I did, yes. Why do you ask? In fact, if you were watching...?\" \n\nI ignored her bait. \"Did you have sex with my mother, too? Did you have sex with them both at once?\" Fuck, I got carried away. \n\nFor a moment, Charm looked startled, like the woman noting that that wasn't her belly button and hearing the man admit that it wasn't his finger. She blinked a few times. \"Your mother?\" \n\nHer voice echoed her expression, creating a congruency that made it difficult for me to question but at the same time, if I believed her expression then I would be required to believe my sister and everything my mother said about Charm was a lie. \"I never watched you. Ever. Shit, I am not sure I knew about oral sex at the time.\"\n\nCharm laughed. \"I may be a lesbian but it doesn't mean I am from a different planet.\" \n\n\"Mars and Venus, are you sure?\" \n\n\"I'd be from Saffos and I am pretty sure that isn't a planet, just an island in the Aegean Sea.\"\n\n\"The island was Lesbos, hence the name, Lesbian. Sappho was the poet who bragged about...you know.\" \n\nHer penciled eyebrows rose. \"I'm surprised. I thought you'd know nothing about my people.\" \n\n\"Your people? What, are you your own race now?\" \n\nShe smiled thinly. \"Just what did you mean, you never watched. Georgia said, all those times, she said...oh my god.\" Charm whispered the latter exclamation. \"It wasn't you she was performing for? It was Mrs. Duncan?\" Charm blushed from chin to hair line. She lay three fingers against her licorice lips, red now, but I remembered when they were punk black. Now they were still sensuous and full.\n\nI shook my head. \"I, you know, it is really, really disconcerting when you discover your parents had to have sex to have you.\"\n\n\"How do you think I felt when my Aunt seduced me and told me my mother wasn't naturally inclined to have sex with men either?\" \n\n\"Ow. I can see how that would confuse the head.\"\n\n\"And I only have the one, so there is no confusion about the confusion.\" \n\nI nodded. \"Listen, I think I have been misinformed. I am sorry...\"\n\n\"They told me about you and your mother. And Georgia. I half expected you to take her to bed but I guess having company made that a little awkward. I could tell Georgia was a little confused by the situation. Confused and irritated.\"\n\nI blinked now. \"They told you?\" I stuttered. \"What did they tell you?\"\n\n\"That you seduced your mother and then sold her to a man and she went to China with him.\"\n\n\"Sold her?\" \n\n\"They say you have turned into quite the Lothario in the last few months. Dalia says you are having sex with your sisters too. I have to confess, I am curious about how that could happen. I mean, Cici was always so...oh my.\" She blushed again.\n\nI waited for the heat to fade. It made my eyes water and I didn't want her to think I was weeping so I let her avert her eyes till she processed whatever it was she was thinking. I had a list of likely thoughts but could not know if any were in her mind or if I was projecting. \"Let me tell you what Cici told me.\"\n\n\"Yes, please do. I am sure I'll be fascinated.\" \n\n\"She said, she said you seduced her. God, she described it in enough detail to get...never mind. She described it in technicolor, high-definition detail. She also suggested that she caught you with Georgia and you invited her to join in and the three of you had a little Sapphic fun...according to my mother.\"\n\n\"Was this before or after you stuck your prick into her body?\" Charm asked, her voice turned rough, like a prosecutor asking the killer to describe his methods. \n\n\"After, I think. Yes, after, after I found her and Georgia in bed. Mom was eating my sister and Georgia suggested I might like having my cock sucked while I watched them. Then I fucked them both. So, yes, definitely after.\"\n\nCharm now looked shocked. \"You mean, you mean you actually had sex with your mother and your sister? At the same time?\" \n\n\"No, not technically since I only have one pickle to contribute to the sandwich at a time. But for the purposes of your question, yes, I think I did. I have had sex with my mother and I am pretty sure she arranged things for me to be alone in this house with the three of them, without her, after I had had sex by the conservative definition, not using Billy's, with all of them. Just not the strict definition.\"\n\n\"Billy's definition, then? The wiggly one that means 'I did not have sex with that woman' was not an outright lie.\" \n\n\"If his definition is correct, then I presume most of the sex you all have is not actually sex but is, well, like shaking hands.\" \n\nCharm smiled a little. She sat up straight. \"I am not having sex with you. Ever.\" \n\n\"We are both lesbians. We have a lot in common. I am not sure what your point is.\"\n\nShe shook her head violently and slumped again. Even slumped, her body appeared willow lean and emanated sexuality. \"You weren't watching?\" She shook her head. \"I was going to look you right in the eye and tell you we knew you were watching all those times but, but it wasn't you? Really? You wouldn't bullshit another lesbian, would you?\" \n\nI shook my head. \"God's honest truth. I'd swear but most of the things I tend to swear on either you don't have or you don't like. Listen, I, I knew something was fishy because Mom said she had sex with both of you. Georgia never mentioned anything about it, about Mom at all. Holy shit, she must have been watching you all those times, which accounts for all the detail.\" \n\nCharm shook her head, smiling weakly. \"Your mom is a freak.\" \n\nI had to laugh. \"I am pretty sure you used to say really outrageous things to us all back then. I am not sure who's the freak and who's the audience.\" I stood up. \"Well, thank you for clearing that up. You wouldn't lie to another lesbian would you?\" \n\n\"All the time. Half of us are sluts and the other half are bi and so we all have occasion to lie.\"\n\nI smirked. \"I bet you say that to all the boys, just to wind them up.\" \n\nShe smiled back and nodded. \"I'll get the lights.\" \n\nI went back to bed. My heart seemed to be too large for my chest but I kept feeling my neck to make sure I could feel my pulse. I thought I'd lay awake but I blinked out of awareness the moment I laid down. \n\nI don't know what I was dreaming when I awoke but I had a woody that felt like an actual kick stand. My ringing phone woke me up. I answered it. \n\n\"Sonny. Alissa. You have to meet me in my office. You, you have to fuck me this morning.\" \n\n\"Good morning.\" I said, groggy but sort of curious if I was still asleep and this was part of the dream I'd been having but I just lost my place or changed channels or something. \"Is that an order?\" I was actually asking but I heard Alissa Honeywell gasp and when she spoke, her voice quavered.\n\n\"No, sir.\" She whispered. \"I mean, its, its important but its business. I mean, we have to, I have to, I....\" She petered out. \n\nI looked at the time on my clock. \"Cheese and crackers, Alissa, its Saturday and you are calling me at seven fifteen?\" \n\n\"I know. I'm sorry but, but they are going to be at the office at eight. I am getting in the car right now. You, you need to get downtown, to my office as soon as you can. I'll leave the front door open, if no one is there. You know where my office is now, just come in. I'll, I'll introduce you.\" \n\nShe hung up and left me talking to myself. \"Alissa, why don't you give me some details. I am, I seem to walk into your office and it is always a surprise party and I am the one being surprised. What is this about?\" I waited. \"Alissa? Alissa?\" I looked at my phone. \"Fuck.\" I groaned. \"Fuck, fuck, fuck!\" \n\nI had half hoped that I would start working on Ahmay's, I mean, May's fantasies and this put a crimp in that. Thank goodness I had most of my work done for the weekend. I tottered out of bed and drained the main vein. \n\nI left a note, vague but indicative and drove downtown. Sure enough, the office was dark when I arrived. The door was unlocked and I pulled it open. I had to remember where her office was, her current office and went there. The blinds on the glass windows were drawn but I could see office light. The day was gray and it had warmed up enough it might snow again. That sounds a little nuts if you don't live with snow but those who do know what I mean. \n\nI pulled open the door and stepped into the office. I stopped still as Lot's wife watching Sodom burn. \n\n\"Ah, here he is. I had to call him early and I wasn't sure when he would arrive.\" \n\nMr. Rictor Travers sat in one chair, glowering at me. The other fellow I did not know but I had a distinct impression about him. Something about him suggested he was not a lesbian like me. \n\n\"Alissa...\" I began but she waved me to a chair around the end of her desk. Her new office had glass on two sides and plenty of room. I noticed immediately that she did not wear her collar. That gave me pause. I took her direction gracefully. ",
        "\"Mr. Duncan,\" Alissa began but the strange man wearing the mauve suite with the ascot and a pansy in his button hole interrupted her and she clamped her mouth closed like she'd been reprimanded.\n\n\"Allow me, why don't you, Mrs. Honeywell.\" The man's voice was smooth like syrup with a piece of popcorn in it. The popcorn was the lisp. \"Mr. Duncan, I have heard so much about you.\" He stood and extended his hand. \n\nI stood and shook it and felt like I'd taken hold of a piece of cow liver. His hands were as sweaty as a politician on a reality show. \n\n\"Please, sit. I know this is inconvenient but I have other obligations and Mr. Rector here insisted on settling this matter before, well, no matter, we needed to use this little smidgin of time right here. Now, since you likely don't know what is going on, Mr. Rector Travers here, insists that you are not the right person for the job. What do you think?\" \n\n\"The job?\" I was lost but then it clicked and this whole thing took on a completely different meaning, though I could not see how Rector Travers fit into the equation. Finally, finally I was face to face with someone who had a direct interest in the job I started out to do for Alissa, these many weeks ago.\n\n\"Yes, Mr. Duncan, the job. We, we have kept an eye on you and you have proven to be a busy little bee, haven't you?\" Not really a question and I knew that. I answered anyway, just to show I was incredibly uncomfortable, which I was.\n\n\"Busy, busy.\" I agreed. \n\n\"Well, good, at least you are not trying to be coy. Saving us time is very nice of you, so thank you.\" \n\nUnctuous. That was the word I was looking for. Unctuous, the man was unctuous. \n\n\"Mr. Rector Travers, he insists that you raped a woman in his room earlier this week. Is that correct? He says that he will not be party to a deal that has this sort of people involved, meaning Mrs. Honeywell and her firm. My employer is most distressed. First, Mr. Rector insists that Mrs. Honeywell here should be the one to have sex with him and insists that her suggestion that she only has sex with you is a farce and a lie.\"\n\nI held up my hand. I have this little smidgin of the anal retentive in me and here it served me well. \"Well, that is not entirely accurate. Mrs. Honeywell has sex with whoever she likes but she likes me to tell her who and when and where to have sex. I have been very willing to suggest she have sex with a variety of my friends and, perhaps a stranger or two, though I am not entirely sure about that, if that is all of her sexual resume. I do not monitor her. Our relationship is purely voluntary but emphatically not Platonic.\" \n\nRector glared at me. \n\nThe other man, whose name I still did not know, clapped the tips of his doughy hands together and giggled. \"Oh, oh, oh well said! Well said. Not Platonic! I was afraid you were going to be as well-spoken as a ninety-nine cent porn movie. I fear most people think that being witty while having sex means you are not giving it proper attention. We gays, however, find that a giggling orgasm can be great fun. Don't you?\" \n\nI really did not want to agree with Mr. Unctuous about anything but I feared I should not be overly disagreeable either, in case I was right, about the meaning of \"job\" in this context. \"Actually, I think I tend to grit my teeth when I come. That's just me, though, but I think it is to avoid bitting my tongue while in the throes of ecstasy.\" \n\nMr. Unctuous giggled delightedly and stamped his feet on the carpet. \"Oh, Alissa dear, I see why you and Sid thought he was a likely candidate. He is just delicious.\" \n\n\"You aren't a cannibal are you? I mean, I should have fair warning right?\" I spoke up, uncomfortable with his display. \n\nI made it worse. His lips got all wet and he kept sucking air wetly between his teeth. Finally, he calmed down. Rector sat like he was carved out of wood, which makes good sense since he's such a dick. \n\nMr. Unctuous continued. \"Mr. Duncan, I, well, I have a couple of issues I'd like you to clear up for us. Mrs. Honeywell assures me that you would never have sex with a stranger by force. Can you, can you provide me any reason to believe her? And while you are thinking about that, would you have any objection to having sex with Mrs. Honeywell for us. While we watch, I mean. Mr. Rector indicates that you threatened his wife and daughter with the treatment you gave this strange woman.\"\n\nI noted immediately that he did not ask me anything about the afternoon in Rector's room. So I answered the question he did ask. \"Alissa, perhaps you better call Mrs. Rossini and ask her to come down here.\" \n\nAlissa's face flickered and then she looked horribly confused. \n\nI thought for sure I had explained my gambit and its effectiveness but perhaps I didn't. I looked at Rector. \"I warned you, Mister.\" I don't know why I said that, but I did not like that man. I did not remember precisely what I said to him but decided it was not wise to assume there was no recording of my words to the man. \"This is liable to cost you.\"\n\nThe silence in the office amazed me but then I felt the anger coursing through my body and I understood it had leaked into my tone. \n\n\"You did threaten his family?\" Mr. Unctuous asked. \n\nI shook my head. \"No. I threatened him. I am pretty sure those are two different things.\" \n\n\"Well, yes, but he is convinced that you are a total fraud. Who exactly is Mrs. Rossini?\" \n\n\"The woman I fucked in his room. We, we had, we had a little drama worked up and it thrills her to mess with people's heads. This was a prefect storm. Her fantasy and my addressing the difficultly Mrs. Honeywell had encountered because of my, because of our sexual arrangement. I did not want to end it but neither did I wish to have a sexual conceit interfere with good and legitimate business.\"\n\n\"Good and legitimate, oh my, well, surely you know nothing of the details...no, of course not.\" Mr. Unctuous laughed then. \"Call, call. I would love to hear this woman's account of the afternoon in question.\" \n\nAlissa stared hard at me but finally said, \"Should you be the one calling Natasha?\" \n\nA point, I thought but she didn't know the whole story. \"She won't answer my call just now, since she is shacked up with her husband.\" I saw the light go on in Alissa's eyes. \n\n\"Shall I call then?\" She asked, just to make things clear. \n\nAlissa looked at me and when I nodded, she took out her phone and selected a contact. \"Oh my, is this a bad time? Of course, well, yes, it sort of is important. Oh my, Tasha, please. No, no, please. I, well, if you would, I mean I hate to interrupt.\" \n\nMr. Unctuous looked at me and touched the tips of the fingers on one hand to his very high cheekbone and gave me an extravagant wink. I don't think he had looked at Rector Travers directly yet. \n\n\"There, yes, that's better. I am so sorry but, Natasha, I am calling for Mr. Duncan and, well, he needs you to come down to my office. Yes, now. If it isn't too much trouble? Well, yes, it is a matter of some importance. Yes. Yes, the other day. No. No, I don't think he has mentioned it really but yes, it could be very important for him. Very important. Not more than fifteen minutes, I should think. Yes, thank you and give Joey my regards and my apologies. I am sure you two can pick up where you left off.\"\n\nFuck me, I knew what that sounded like. Tasha was riding her husband. Does it make me more or less of a pervert that my cock got hard at the thought that she was getting it on with her husband? That is just confusing. \n\n\"She'll be here in twenty or thirty minutes.\" Alissa said. She could not help it, her eyes flicked at me over and over as though expecting some reaction from me and fearing what it might be. \n\n\"Wonderful. That means you two have time to have sex before she gets here and I won't have to change my flight plans.\" \n\n\"What the fuck are you talking about? We'll need to find new representation. You can't leave.\" Rector Travers growled. \n\n\"Oh, no, my good man, I fear all of your accusations will prove to be recommendations and your part in this deal, critical as it might seem to you to be, will be at an end. We'll have no further need of you.\" Mr. Unctuous gestured at the desk top. \"Please, if you two would not mind. I was specifically instructed to see you two conjoined and report back. I always follow instructions and honestly, I do find watching a woman's orgasm to be enthralling! Don't you?\" \n\n\"Jealous?\" I shot back. \"I know I am. If I could orgasm ten times in a row, I would and I'd never get anything else done. I don't know how females manage to get anything done, ever. If I had tits, I sit around and play with them between orgasms and the world could go fuck itself.\" \n\nMr. Unctuous laughed and laughed. \"So right, so right!\" He agreed. I haven't mentioned it but he held a cigarette holder between his fingers the whole time he was talking. It held no cigarette, he just kept the holder between his ring and middle finger. I feared while he was laughing with such animation that he was in danger of poking out his eye with it. If there was ever a demonstration of \"affectation\" it was this man. That is not contempt, by the way, because despite his different style, different from mine, he was clearly on my side and would not waste a gerbil on Rector Travers, no matter how deserving he seemed to be. A sentiment I more or less shared. \n\n\"So?\" Mr. Unctuous asked. \n\n\"So?\" \n\n\"Are you going to treat me to a close up view of Mrs. Honeywell's orgasm?\" \n\n\"Sheesh, you sure do know how to put the pressure on a guy. I know I can put tab A into slot B but what happens then is always an adventure.\" I stopped but then thought of something else I wanted to say. \"Expecting a woman to perform is not fair. Hell asking a cock to perform under pressure isn't fair.\" \n\nMr. Unctuous giggled. \"Don't I know it!\" \n\n\"I mean, fucking on demand is a little crass, don't you think?\" \n\n\"I don't mind, Sonny.\" Alissa said in a curiously small voice. \"I mean, I, I will if you say I must.\" \n\nI was looking at her when she spoke and I touched a finger to my neck and her eyes got wide. \n\n\"Oh, oh yes!\" She gasped. \"I, I forgot.\" She turned behind her desk and fished in her purse. She brought out the platinum collar and affixed it around her neck. She then sat tall in her chair, thrust her breasts out at us. She wore a white sweater with vertical ribbing on it. It folded over the rise of her breasts like frosting on a theme cake. The white offset her dark skin. \n\nMr. Unctuous suddenly got really still and quiet. \n\n\"Do I have to watch this?\" Rector Travers muttered. He made no motion. \n\nMr. Unctuous patted the man's hand and Rector jerked it out from under the other man's patting hand. \n\n\"Oh, I am afraid you do. You see, if Mr. Honeywell, oh my, that was unfortunate. I mean, I mean, I may I have forgotten your name, dear boy.\"\n\n\"Duncan. Sonny Duncan. And you are?\" \n\n\"If Mr. Duncan, thank you very much, proves capable and reliable in this regard, then I am afraid that we will send you on your way with the same sort of provision that Mr. Duncan accosted you with. I mean to say, that your daughter and your wife will be turned over to Mr. Duncan at my employer's behest and if he is able to seduce them, then he will and with our blessing and thanks because we have had other complaints that you are an inveterate shit and Mr. Duncan has finally held you to account for your hate and contempt for women. For my part, it is about time, I think but my judgment is not what matters. I am just a swish with a wish and a job to support my wishful thinking. You, sir, are about thirty minutes from losing what little access you had to my employer's good graces, access that your father's good character earned you but which you have since expended in trivial and nefarious pursuits that have cheapened his good name and revealed your spoiled character. You, I fear, are a rotten potato.\"\n\nI quipped when I should maybe have kept silent. \"Don't you mean a rotten apple?\"\n\nThe fey man regarded me for a moment but smiled, well, unctuously. \"My good fellow, that would insult us fruits.\" Then he smiled proudly, \"because surely you know that apples are fruits. Potatoes however, are vegetables.\" \n\nI felt properly chastened. Mr. Travers looked confused. I suppose the mention of food made him hungry.\n\nHe gestured at the desk top. \"So? If you don't mind?\" Mr. Unctuous looked at me, expectation drooling from his tight and tiny little pores. \n\nI wasn't sure what he was about but I decided I'd follow till I encountered something sharp, or pointed. I looked at Alissa. \"Are you okay with this? I mean Rictor, I hate the idea of him getting a free show. He shouldn't get a peek at you.\" \n\n\"Oh, my.\" Mr Unctuous said, \"gallant and a gentleman to boot.\" He looked at Travers. \"You should take notes, my dear. Mr. Duncan seems to have genuine respect for those he fucks, unlike the perverse disgust you use it to express. You are an enema with pants...I think I can express myself clearly now that I have met Mr. Duncan here. I see why Mrs. Honeywell would welcome him between her knees more than a few times.\" He looked at Alissa. \"Please pardon me, Mrs. Honeywell, Mr. Duncan has outshone me in the gallant department and that rarely happens to me, with respect to the heterosexual race, that is. His question is to the point. Do you mind demonstrating your affection for young Mr. Duncan here, even though it means waving your tits in this slug's face?\"\n\nAlissa stood up. \"I think it would be fitting to show him exactly what he will never have.\" She said, her voice sounded like a sheaf of razor blades. \n\nMr. Unctuous nodded and turned her head and looked down his nose at me. \n\nI shrugged. \"Well, since we have a few minutes, no sense in wasting them.\" I stood up and noticed that Alissa was shaking. I did not know what that meant but I focused on the cake under the frosting. \n\nShe had chosen her dress well. It hugged her body and made it appear luxurious and luscious to the eyes. Her black skin made the white sweater dress appear brilliant as though it was lit from inside. She stood at the corner of her large desk. \n\nI measured the moment and decided a forthright approach would be best. The prospects for an orgasm made it all a gamble but to my hard cock, the little fucker has no conscience, it seemed a good first step in the right direction. I considered doing the strict authoritarian mood but I wasn't feeling it. The pussy parade back at my house furnished me a humbling perspective and reminded me that mutual arousal might be messier but in the long run, it was much more fun. \n\nI moved around the end of the desk, lay a hand on Alissa's hip and leaned in and kissed her lightly on the lips. Her arms looped around my neck and the office and its odd couple of occupants disappeared. Her lips were lush, pliant, and expressive. The hand on her hip guided her around the sharp corner of the desk and into my arms. I kissed her harder and her body floated against me and then solidified. \n\n\"Oh for Christ's sake!\" \n\n\"Shut the fuck up, Travers.\" Mr. Unctuous' voice cut the air around us. All of his smarmy manner was gone. He sounded like a drill Sargent with his foot on someone's neck. \n\nAlissa and I separated and looked at the two men sitting at her desk.\n\n\"I am sorry, please, don't mind me or Meany Me either for that matter. If he gets out of line I'll take one out his eyes with my thumb, perhaps both, and I expect this interview will be over. \n\nInterview? Job. I knew it! \n\nI looked back at Alissa and, Christ, I was nervous. Oddly, the idea of the swish gouging out Travers' eyes put me at east somewhat. Still, I felt on edge. \n\nAlissa saw it immediately, the woman had tuned her body with mine and now it appeared to my benefit. She turned her back to me and lifted up her luxurious hair. \"Unzip me, please.\" She whispered. \"I, Sonny, I don't know why but I want this. I, I need to feel you inside of me again. I long for it.\" \n\nHer rich contralto invitation reached down in my pants and stroked my cock back from his depression. Despite the switching of our roles, I did as she instructed. I unzipped her dress. \n\nHer black back appeared like a rift in reality as the white dress V'd open, showing a black bra strap. The dress zipper ended six inches above her ass. I unhooked the bra and she turned to face me. The dress ruffled over her front, disguising the ridge of her breasts. I pulled one sleeve off her arm and then the other. The front of the dress draped down. The black bra hung by the shoulder straps, captured by the swell of her breasts. I reached out to the straps and pulled them down her arms, unveiling her breasts. \n\nI heard the intake of breath. I ignored it. I lay the bra on the desk then picked it up again and tossed it onto her office chair. She stood, topless, waiting for me, her eyes sober and focused. The dress folded over her hips, like a loosened sail. For a moment I felt the moment but then my eyes focused on her breasts and I got lost, thinking of the feel of her skin on my hands, on my lips and tongue. I remembered feeling the rough flesh of her aureoles on my tongue again and my mouth watered, making me suck to avoid drooling. \n\n\"Sonny. Sonny.\" Alissa whispered.\n\n\"You are so beautiful. I, I guess I am amazed that you are so willing to surrender to me, to join with me like this, even in the presence of such a shit.\"\n\n\"Oh my, isn't he sweet? Shut up, Rector.\" \n\nThis time, the interruption did not distract me. I reached out with both hands and palmed Alissa's beautiful breasts. She groaned and her eyes closed. \n\n\"I, your touch, I feel it long after you leave me. I wake up at night, feeling your hands on me, everywhere, and then your lips and I wake up, panting and longing for you again.\" \n\n\"Oh my!\" Mr. Unctuous whispered. \n\nI had noted he avoided handing me his name. I was in no position to take umbrage or to press the matter. \n\nI moved my hands down her sides to her hips and found a garter belt. I sloughed her dress off her hips and it started to drop. I caught it with one hand and held it while she stepped out of it. \n\n\"Oh my god, aren't they just the sweetest? He doesn't want her dress to get dirty. That white is just darling and it would pick up any dirt like a vacuum cleaner. What a gentleman.\" \n\nThat did distract me for a moment but I decided to let the gay man's approval just be approval and let it encourage me. I was auditioning to find a lay down assistant for some very important person. No worries. \n\nWe lay the dress on her chair and she stood back, dressed only in black stockings, black garters and black high heels, dark over her chocolate skin. Those accoutrements blended with her so they seemed to be shadows on her body. Again, I found myself staring at her. \n\n\"Touch me, Sonny.\" Alissa said. \"Feel how much I want you.\" \n\nI was not sure what she had in mind but I moved into her arms, kissing her but dangling one hand between us, turned so I could run a finger down her shaved crotch and over the ridge of her pussy lips. Sure enough, she bubbled with the slightest pressure. \n\nShe gasped into my mouth when my finger penetrated deeper into her body. She felt my inhibition and pulled back. I was thinking about what to do next and I got indecisive, stuck on which way to fuck her, front or from the back. I thought from the back but that would mean she'd be facing Travers while I fucked her, we would, and that, that seemed wrong, so then I got confused. \n\n\"Sonny, I, I want you to take me from behind, so, so I can look this bastard in the eye while you enter me, while you mount me. I want to him to see me while I come with you.\" \n\nI just nodded, took her by the shoulders and turned her to face the desk. I got behind her and realized I was still dressed. Now my confusion got really bad because not only was I dropping trows in front of Travers but in front of Mr. Unctuous. ",
        "We three seemed to be all tapped into the same frequency. \n\n\"Mr. Duncan, please, I am a respectable gay man with appreciation in the same proportion as my self control. You are quite safe with me, though I admit you are a tasty little tidbit if you ever get bi-curious.\"\n\n\"Best I can be is bye-bye curious.\" I muttered, not really intending to speak but doing so despite myself. \n\nMr. Unctuous burst out laughing clapped his dainty hands. \"Oh my, you are a rare one, Mr. Duncan.\" He chortled. \n\nTravers, I couldn't help it, I looked at him and he looked like he'd bit down on a candy bar and discovered it was actually a dog turd. \n\nI slipped my arms around Alissa and stroked her belly before cupping her breasts. She turned in my arms and began to unfasten my belt. I was hard as calculus by then but Alissa had no difficulty in uncovering me. For a moment I thought she'd drop down and suck me but she merely shucked down pants and briefs and turned around. She lay over the desk and arched her ass, propping her body up on her elbows, letting her breast dangle in front of her. Shoulders and ass formed a noble black arch of sensuous woman. \n\nI shuffled behind her and felt between her legs. She hummed as I stroked her damp pussy lips. She twitched when I slipped a finger inside of her. She hissed as I massaged her till I felt a fresh gout of fluid emerge from her depths. I moved closer, presented my cock to her and pushed against her. She arched her hips and waited. I pushed harder and she opened and let me inside. \n\nI slid into her. \n\nAlissa groaned her head dropped between her arms but her body rocked back, pushing her onto my cock. I gripped her hips and pulled. Alissa slid onto my cock like a stocking cap on a bedpost. \n\n\"Oh god, Mrs. Honeywell, god, goddamn, you are an incredible woman.\" \n\n\"Don't over do it, Sonny.\" She whispered. \"Just fuck me, take me, mount me like you usually do.\" \n\nI almost smacked her. I decided I'd had enough of Sonny-the-applicant. I gripped her by the waist and rammed into her. She grunted. I pulled back and rammed into her again. This time I pulled her back as I thrust forward. My cock struck deep into her and she groaned. Rooted in her, I stirred my cock around a little and then pulled free and did it all again, finally settling into a regular motion. Pulling back and then slapping us together. \n\nThe close little office, well, not so little, it quickly became redolent with eau d'Alissa. That made it seem small, even cramped. I had an idea, the product of a wild desire that she could actually come while I fucked her. I knew how to get there. \n\nI pulled out of her and her head came up. I slapped her ass and she immediately dropped her head, groaning from her liver outward. I slapped her ass over and over again while she hummed and finally groaned. My hand burned but I persisted. Finally, she switched her ass back and forth and I thought I had achieved ignition. I felt between her legs and she moaned softly. I reentered her and she grunted. \n\nI launched immediately into a rambunctious rhythm and in moments she began to rock with me, her head down, elbows still staked onto the desk top. In and out of her pussy I pumped and at one point, I stopped to grind into her and she groaned deeply, sagged down onto the desk, pressing her tits onto it and grabbed the side and the near edge, bracing to receive what she desired. I hammered into her and when she groaned her hips finally began to move. \n\nI had been so focused on stimulating her, I had honestly not paid attention to my poor little dick. He was howling at the moon and suddenly, the climax rose up like a shadow in the night. It fell on me and I pumped into Alissa grinding us together. I lost track of her pleasure and so her scream surprised me. For a moment I thought sure she was faking it but then she ground back at me and her whole body bucked under me. She fastened onto my cock with her velvet glove. I had fast hold of her hips and she fought me, trying to move without me. I kept hold of her and pulled us together. \n\nJust as my climax peaked and while Alissa was still in the throes, the office door opened. \n\n\"Oh, oh my goodness!\" Natasha Rossini said into the damp atmosphere.\n\n\"Uh, uh, uh!\" Alissa managed, her head bobbing as the climax convulsed her. \n\nMy eyes were watering. I took time to wipe them with the tail of my oxford shirt. No idea what that meant. \n\n\"Alissa? Oh my god, Sonny, what are you doing? That's him, the, the guy from the other day!\" \n\n\"How much are they paying you!\" Travers shouted. \"Goddamn you, bitch, tell the truth. This is a setup! You are going to ruin me.\" \n\n\"You deserve to be ruined you goat fucking lard ass.\" Natasha shot back. \"Who are you?\" \n\n\"I am Mr. Hassum Amir.\" Mr. Unctuous said immediately. \n\nHey, I thought. What about me? \n\n\"Natasha Rossini. What is this about?\" \n\n\"Mr. Travers insists that Mr. Duncan here raped a strange woman. You, my dear, are that woman. He managed to take a picture of you while you were being mounted and sought to use it as proof of Mr. Duncan's transgression. I am afraid we must ask you to have sex with him again, just so there are no misunderstandings. You have come here of your own free will and we expect you to come by your own choice, if possible.\" Mr. Amir spoke with an air of satisfaction. \n\nNatasha looked chagrined. \"Buddy, I don't know what is going on, but I have come twenty times with my husband in the last two days, because of this man. He,\" here she grinned like she'd just won a mink coat at a raffle,\" he teased me after, after he fucked me in this asshole's room, teased me to the point that I was ready to come if a fly tickled my nose. I am sorry to say that if I can come again, now, it would be a fucking miracle.\"\n\n\"So to speak.\" Mr. Amir said with a smirk. \n\nNatasha nodded. \"So to speak.\"\n\nI took that moment to pull out of Alissa's drooling pussy. \n\nNatasha looked over at me and then back at Hassum. She started to say something but then shook her head. She put her purse on the chair where I had been sitting, and took off her coat. She got to her knees and gestured me close. \n\nWith my pants around my ankles, I took what steps I could to obey her. Finally she met me half way, licked my flagging cock and sucked it clean before pulling it deep into her mouth. My lagging cock proved no laggard but rose up and filled her mouth and throat till she pulled off of it. \n\nShe stood up and gave Alissa a little push. \n\nAlissa lifted her head and struggled up right, then wobbled to her chair and sat down, grabbing her clothing in one hand first. \n\nNatasha looked at me as she lifted her skirt facing me. \"I am swampy with cum, Sonny but you can fuck me. I didn't take time to clean up.\" She hitched her ass onto the desk, eyes fixed on me. I thought I saw a gleam in them. \n\nI shrugged. She opened her knees and I moved between them. I crouched, pointed my cock at her pussy and thrust into her. She grunted. Her body welcomed me and I slid down the red carpet into her.\n\n\"Oh fuck me, Sonny. What do I know. I, I'll come I swear it, if you, don't, don't, don't stop!\" She seemed immediately aroused. I guess two or three days of foreplay can make a real difference. I leaned into her and tried to kiss her. She pushed me away. \n\n\"Fuck me, Sonny. God, please, I, I cannot believe it. I never would have believed, never thought I'd, I'd feel this so fast, so easily, so quick! God, please! We'll kiss after I come.\" She sat back on her hands and lifted both feet off the floor. She popped me on the thighs with both heels. I grabbed her by the thighs and lifted. She tipped onto her back and lay looking up at me over the berm of her covered tits. I thrust into her, hammering through the slush. She splashed us as I rammed home, like dropping a shot glass into a boilermaker. She splashed as I thrust into her. \n\n\"Oh my god!\" Natasha flopped back onto the desk. Her hips bucked at me and she writhed. Her hands flailed out, bumping Travers before she found the edge of the desk. \"Fuck me, Sonny!\" She cried.\n\nI did. She came immediately. I felt like I was trying to board a moving train wearing roller skates. She was so far ahead of me, what I did, did not matter. I pumped into her and she came again. She thrashed, she shook, she bucked. When she calmed, I looked at Mr. Amir.\n\nHe sat staring at us. \n\n\"My god, its true.\" He whispered. \"Sid, he told us he thought it was true but god, I thought it was hyperbole. I never imagined. She, she came immediately.\" \n\nI stopped fucking Natasha. She lay on the desk panting. One hand released the desk and began massaging a breast through dress and bra. \n\n\"Ah, excuse me madam, you know this fellow? I mean for the record?\" \n\nNatasha sat up, onto her elbows only. She rocked onto one and tapped the collar around her neck. \"He owns me. He told me to fuck my husband. I did and, I, I...\" her words turned to gasps, her panting caught up to her because I had resumed fucking her and she lost her place in the script. I did it just to see if it would work, not really thinking it might not be the best approach. It worked wonderfully. \n\nMr. Amir looked around and then shook his head. \"Enough. I must be going. Young man, we will be in touch.\" He looked around at Rector Travers. \"Mr. Travers, if you want to do business with us, you will turn your daughter and wife over to this man. Twice each. If they wish to continue fucking him, you will be silent about it, endure it, if you want to continue doing business with my employer or indeed his many associates. Or you can surrender your half-billion contract and we will rebid it. Your choice. Come with me. I think you have gotten your money's worth. Let me be clear, if I or any of my associates hear of you making yourself obnoxious to Mrs. Honeywell again, you will be fucking your hand with a Vienna sausage and not that wiener you call a prick. Do you understand me? I know serious people who think letting blood is part of a normal day. Let's go.\" \n\nWith that, they rose up, gathering up coats and Travers preceded Amir out the door. Amir stopped at the door. \n\n\"Oh. Mr. Duncan. We are going to have your apartment wired with cameras. Once that is done, we will forward you a list of applicants and how to make contact with them. Through Mrs. Honeywell. It has been a pleasure meeting you, sir, but I must be going. Carry on!\" \n\nWith that, he closed the door and there I stood, my cock still hard and stuck into Natasha Rossini. I pulled out of her and shuffled back so I could bend over and pull up my pants without sticking my nose into her pussy. \n\n\"God, Tasha, I am so sorry about this. I, I hope this doesn't get you in trouble with your husband. I mean, I never thought...\"\n\nShe struggled to sit up on the edge of the desk. She grinned a lopsided smile. \"I told him about the collar. I told him, if he wanted a piece of Tasha, he was going to have to share. But only if you shared me. I, well, I didn't tell him precisely who you were but just that I had found another cock, one that was attached to a real man who could satisfy me. Fucking Joey loves a challenge. I must say, that particular gambit has worked out pretty well.\"\n\n\"So?\" I asked, tucking in my shirt and buttoning my pants up.\n\n\"So what?\" \n\n\"Are you guys staying together?\" \n\nShe laughed and shrugged. \"We haven't gotten around to discussing it. It is sleep, fuck, and eat and I always tell myself never make decisions with my bra on the floor. Well, not always, okay not much, only this time. I just told myself that whatever happened, if I did not have my bra on, I wasn't committing to anything to anyone. So far so good.\" \n\nI wanted to commiserate and discuss her situation but Natasha had no interest in sticking around. She got off the desk, righted her attire and left us without another word. Well, she stopped at the door too and looked back at me and semi-nude Alissa. \"Off to fuck my husband. Not so bad once I get used to it. I'll call you when I know something.\" The door thumped closed behind her. \n\nI stood blinking and looked around at Alissa. She sat as though in a daze in her chair. Finally she looked up at me, her eyes not wanting to move together, which made her seem that much more crazed. \n\n\"What?\" She asked.\n\n\"Are we done?\" \n\nShe nodded. \n\nA funny exchange given the silver band of platinum around her neck. I stood up and my phone rang. Now I did not think that standing up made my phone ring. The timing was curious, though. \n\n\"Hello?\" \n\n\"Oh sweet man, I just called to tell you that you have made quite an impression on me. I wanted to apologize if you felt like I was flirting with you. You are delish but I know that you are not ambidextrous.\"\n\nHassum. \"You mean I just pitch and don't catch?\"\n\nThe gay man laughed and laughed. \"No. I mean you only bat from one side of the plate.\" \n\n\"Oh.\" I felt stupid. That should have been obvious. \n\n\"I am not one of these gay fellows who find watching heterosexual copulation repulsive. I, well, that is off the subject. I wanted to tell you that we want you to begin thinking about how to manage the interview process for us.\"\n\n\"For the lay down assistant, you mean?\" I blurted. I felt how blunt and unvarnished that question was and wanted it back. Hassum had this way about him that made you not want to earn his ire or his contempt. For me, that inclination was wrapped up in the constant need to tamp down the urge to laugh at him because he just always struck me as funny. That first meeting and every time thereafter, he made me want to giggle at him and I mean at him. Not with him. He was so airily gay, so unaffected in his affectations, I always want to laugh when I talked to him. It makes me seem really tense around him and I think that makes him nervous or, or maybe embarrassed somehow but he does seem to enjoy it. \n\nHassum had been silent while my mind wondered. When he spoke he was somber. \"That is a poor turn of the phrase, my boy. I would suggest you find some other term for our little arrangement\" Then he chortled a little. \"Descriptive as it is, it is undignified and as you would find, should you ever meet our client, which you won't, I assure you, he would not be amused by such a description of his, uh, employment practices. You are a bit crass, aren't you my boy?\" \n\nI shrugged. Laughed at myself, \"I may be an acquired taste, to be sure.\" \n\n\"To business. We, I have just spoken with our client and he insists that you buy a car.\" \n\n\"Easy for him to say. I have no income. I am just a poor student.\" I hesitated, about to be crass again and decided my spots were my spots. \"I am pussy rich but find it crass to try turning that wealth into financial gain.\" \n\nHassum guffawed like a donkey. \"Oh Mr. Duncan, please, you bring me to tears.\" He sobered, the burbling good cheer flattened. \"Mr. Duncan, we will make it possible for you to afford a car. We, we think that the apartment you have acquired for the short term will be a fine place for your interviews, but, you need to have it well wired with cameras. We will want to review your interviews.\" \n\n\"You mean you want to watch me fucking the women you want me to interview?\" \n\n\"Precisely. Can you fuck with a camera pointed at your ass?\" \n\nI thought about that. \"I fucked pretty good with you watching, though I might have lost the inclination if you had stood up.\" \n\nHassum laughed again. \n\nHe may have thought it was funny but I was fucking serious. After a few moments of his laughter, I realized why he must have thought it was funny and I felt better. He thought it was so utterly unlikely that he would have stood up and attempted to intrude in my little sexual interlude, he could laugh it off the same as suggesting he wanted a pink pony for Christmas. \n\n\"We will be in contact with Mrs. Honeywell. But that is why I called. To be honest, Mr. Kingston's approach to business has always fascinated my client but for reasons I won't go into, he has not been willing or able to put his business associates in the same position Mr. Kingston does.\"\n\n\"You mean on their backs?\" \n\n\"Yes. Exactly. You don't cotton to elliptical expressions do you? No matter. That can be relaxing once the shock wears off, like that first plunge into the cold ocean. The reason I mention Mr. Kingston's penchant for putting his cock into the mistresses of his associates is that our client has instructed me to place Mr. Traver's wife and daughter within your orbit with the hope that you would do him the service and seduce them both. We have threatened Mr. Travers with such a seduction and our client is not prone to bluffing, an aspect of his character that Mr. Travers seems to have mistaken for naivete or vulnerable simplicity. But we must confess to you that Mr. Traver's daughter has much to recommend her for this position. So, sometime in the near future, both mother and daughter will be in your environs and I will contact you with a strong suggestion that you interview them both.\" \n\n\"Interview? You mean fuck?\" \n\n\"Why yes, we rather hoped that you would do that for us.\" \n\n\"I am sure you are indebted to me for relieving you of that endeavor. Together?\"\n\nHassum laughed again. He seemed positively jovial. \"Oh Mr. Duncan, you are a joy. You are asking if you get to have the mother and the daughter together?\"\n\n\"Yes. Wasn't that clear?\"\n\n\"Oh my, I, I never considered that but I suppose, no, I suspect that our client would find that rather intriguing. I would not suggest we propose that but let it be a little Easter egg tucked into the video when he reviews it, hmmm? Since I have no idea if the two women in question would be amenable to such an arrangement,\" he made a curious sound, like a cross between hawking up a looie and sucking on...something. \"I will leave that up to you. The wife, in this case, is punitive. The daughter, that is acquisitive and by that I mean she, she has been in our client's mind for this position, to interview for this position for sometime. She is an extraordinary young woman, very accomplished. Our reservation was Mr. Travers himself but you seemed to have positioned him to our purposes perfectly, which I assure you we will appreciate. Now that it appears we can penalize him with this use of his daughter, well, we will. If, if you can interview her, that would be most gratifying to our client.\"\n\n\"Our client? Just exactly what do you mean by that?\" \n\n\"You have a client, my boy. Your retainer will be paid soonest. This is a business relationship for which you will be well paid. Besides the salubrious nature of your business, what we are purchasing is your absolute discretion. Absolute! You understand?\" Hassum's voice lost every last puff of its swish. His tone was knife-edge hard. \n\n\"Of course. I, I am not big on secrets, though. Perhaps I am not the right guy for this.\" \n\nHassum's silence echoed, which makes no sense. \n\nI think it may have been the throbbing of my blood in my ears. \n\n\"Yes, perhaps but Mr. Duncan, that is why I am the intermediary. I, we recognize that part of your charm is your guilelessness. We will defend ourselves with a fence of ignorance. Yours. You will know Hassum and that is all.\"\n\nI thought about that for a minute. \"I, do you want me to recruit for the position? I mean, find girls to film for the interview?\" \n\nHassum chewed that over for a moment but answered decisively. \"If you like, of course you may. But of course you must understand that such activity on your part will be a simple matter of exposing your own approach to the situation, revealing more about you than any likelihood that you could introduce anyone of sufficient qualifications that our client would be interested in them. You understand this, correct?\"\n\nI thought about that for a minute. I sat down. \n\nAlissa had been staring at me, curious but reserved in her interest in my side of this conversation. ",
        "\"Sure. I didn't mean to suggest...I think I have several young women who might be interesting to you, to my, to our client, I mean.\" \n\n\"And your input might be amusing but our client will provide you a number of women to interview and by interview we mean seduce. Their other qualifications are not your concerns. Your job is to undress them and demonstrate their capacity for pleasure and willingness to climax with sufficient stimulation. Our client thinks that the truth in vino may also be in the female climax. A woman's orgasm unhinges their masks and shows what is beneath. At least, in his opinion, the female orgasm reveals some part of her that is not otherwise exposed.\n\n\"I will be in touch.\" \n\nHassum hung up.\n\nThat seemed abrupt to me but no matter. I sat staring at my phone for a few moments before looking up at Alissa. \n\n\"Hassum?\" She said finally, fingering the collar around her neck.\n\nI nodded. \"That is one odd swish.\" I looked aghast in the next moment, realizing that her office was wired. \n\nAlissa understood immediately and waved a hand at me. \"Hassum, he is impossible to insult. He never apologizes for his predilections but neither does he force anyone to confront them. I know nothing about him other than that he makes Liberace look like a Mayberry hayseed.\" \n\nI cocked my head at her. The references escaped me, both of them. \n\nShe shook her head. \"You are a cultural wasteland, Sonny.\" \n\n\"I am not!\" My umbrage was immediate and startling. \n\n\"No. Of course not. Like it or not Mayberry is part of the American culture.\" \n\nI shrugged. I stood up. \"I'll go now.\" I said. \n\n\"Wait. Wait, Sonny, you, you haven't said anything more about Ahmay.\" \n\nI looked back at Alissa and I saw a look on her face that I don't think I had ever seen before. She looked plaintive and embarrassed at the same time, and guilty.\n\n\"I, since Sammy had me that week, I keep having dreams about, about her. I, I have seen her naked and, and she is beautiful.\" \n\n\"She, she just wants to watch.\" I said, testing what I was seeing, since I did not remember how much detail I had provided Alissa.\n\nShe nodded. \"I understand but, Sonny, I can't get her out of my head. I have always seen her as...but now, she is a young woman now, an adult.\"\n\n\"Fair game?\" \n\n\"Don't, don't say it like that. I, if she wants, if she wants to...?\" \n\n\"I think we'll start with her watching us. We'll see where it goes from there. Okay?\" \n\nAlissa nodded. \"Please. I don't ask for much but I want this.\" \n\nI could see her tiptoeing over the I-am-Sonny's line into the you-owe-me territory. I decided to make a bargain of it that she might come to regret. Well, not regret exactly except in the sense that she traded a cow for magic beans, her birthright for a bowl of pottage. \n\n\"Alissa, you are asking me for one thing, so I am going to ask you for two things.\" \n\nShe sat up in her chair, suddenly looking all attorney-like. She touched her collar. \"You know you don't have to ask, you can tell.\" \n\nI shrugged. \"I am telling you, you have to choose these things, one or both. Making you, that is one sort of thrill but enthralling you, that is something else.\"\n\nShe smiled a wistful smile. \"That is what I love about you, Sonny, but I know that you are not going to be mine alone.\"\n\nI shook my head. \"No. I think that option has escaped me somehow. No one woman could endure me for long.\"\n\n\"That's not what I meant. What do you want?\" \n\nI liked it when she got down to business. \"Two things. First, along with Ahmay watching you, with me, us, I mean, she wants to see us with another woman. I, I am, I have a woman in mind that might be interesting, and surprising and I want permission to surprise you.\"\n\nAlissa laughed. \"I doubt you can surprise me any longer.\"\n\nThat sounded like a challenge. I set it aside, out of sight but not out of mind. \"And I want Melissa to come back for a return engagement. I, I have a complicated request that involves her, one that if I asked it of you, you'd refuse and you shouldn't.\"\n\n\"I have no problem sharing her with Sammy.\" Alissa said, her chin lifting that millimeter that told me she was lying. If she knew what I was actually thinking, I was pretty sure she'd pop me in the nose. I shook my head. \n\n\"You already have the right to use me as you wish, why, why are you bothering to ask?\" \n\n\"Because everyone has limits and I, I am pretty sure that these two things, they will stretch yours. I want to be sure that you will relax and let me stretch you a little. I like having you on speed dial.\" \n\n\"Oh, you worry that if you stretch me in the wrong direction I'll sever our relationship, such as it is?\"\n\nI nodded, recognizing that was true, perhaps for the first time. \n\n\"Sonny, I doubt you can do that, so go ahead and try. Besides, my connection to you is sexual, personal, and professional. If I cut you off and Sid found out about it...I don't know what he'd do about that but I don't want to find out, whatever happened.\" She gestured at me, \"and now that Hassum has met you, I expect that will be even more difficult. Hassum, he sneers at most people, particularly after he gets to know them a little. His contempt is well-founded. Few people are as intelligent as he is. You certainly aren't but he liked you and not because he has any illusion that you'll get on your knees for him and offer him either end. I think he liked you because you didn't wilt in the backwash of his overt and unapologetic gayness. He could relax. You do that with everyone. \n\n\"I may not be able to call you mine or even be yours exclusively but when you are with me, you are with me. I, I had to learn that neglect was not always a bad thing. I, I think I have that now. Waiting on you, that has its own rewards.\" She bowed her head. \"God, does it!\" \n\nI waited.\n\nAlissa looked up at me. \"I, Sonny, if you have something for me, I, I want you to take me there, do it for me, do it to me. I love the excitement you have brought to me and I insist that it has nothing to do with the professional benefits that has accompanied it. I am better off since you fucked me and tied me to your will than all the good my husband could provide. What am I supposed to conclude from that?\" \n\nJeez, I thought it was a real question. \"Fucking Sonny is lucky?\" I offered. \n\nThe look she gave me could have defeathered a turkey. \"Fuck you, Sonny.\" \n\nI laughed. \"Alissa, let me tell you this much. The next time I see you, I want Ahmay watching while I make you orgasm. If that is okay with you, then I will do the rest but you need to arrange for Melissa to come visit. I want her again, with you, you know, sisters. But when that happens, you have to close your eyes and let me use you to fill my own plans. If you bring Melissa here, you accept what I am going to do with you...and her.\"\n\nAlissa gazed at me, emotions flitted across her face like a guy with ADD and a TV remote control. Finally she nodded. \"If, if you bring Ahmay to my bedroom, and she sees you between my legs, and I come, then, then I agree to everything, sight unseen!\" She closed her eyes. \"God, Sonny, do you know how hard it is for an attorney to use 'sight unseen' in a sentence?\"\n\nI grunted. \"Do you know how hard I am right now? God, if I tried to fuck you now, I'd be here all afternoon and fucking in an office is like changing the oil in your car in a beauty shop. I'll fuck you in the office but I'd prefer a nice soft bed under my knees and your ass when I ram you full of cock!\" \n\nAlissa stared at me for a moment before responding. \"God, Sonny, do you ever think of anything besides sex?\" \n\nI grinned, opening her office door. \"Name something that has made me as much money as fucking you has?\" \n\nHer chin lifted then eyes and chin dropped. She laughed, a full throated sound that made her breasts surge. \"Sonny, I'd paddle you if I didn't think you'd tie me up and fuck me if I tried. Get out of here. Sorry I had to wake you up on a Saturday morning!\" \n\nI sauntered out to my car. I felt like a band was playing and everyone was staring as I strode through the lobby of the office building and the bitterly cold streets to where I had parked. I sat in the car pondering where to go next. I concluded that going home would just put me face down into a morass of pussy that I had no desire to cope with at the moment. Instead I drove to the library on campus and once I got past the fantasy of fucking Mrs. Olivette again, I settled down at a table and studied till about nine at night. I was bushed, again. \n\nMy rumbling stomach told me I was past the point where studying would help. I left campus, got a hamburger and ate then headed home. I arrived home and parked in the garage. I sat thinking about Hassum's insistence that I get a new car. God, that made me hard and I was embarrassed a little. The idea that getting my own car could arouse me just seemed weird. I chalked it up to how I had started the day. \n\nI walked into the house, unconsciously moving softly and carefully. Good thing, too. I arrived in the living room to find Charm on the couch, her knees open and a certain red headed woman doing a face plant between them. At the very moment when I arrived, Charm's hips pulsed and jerked. Then her eyes opened and she saw me. \n\nOne hand held Georgia's head tight between her parted thighs. My sister was naked from the waist down, her sweat pants lay, discarded over the end of the couch. Charm's eyes opened and she smiled at me. Quite deliberately she removed her hand from the back of Georgia's head and she lifted up her shirt. It was a baggy tee with some snark on the front, something about pussy cats and orgasms I did not process before her bra-covered tits appeared. She then dropped the shirt and waved a finger at me, the \"you get none of this\" finger wave. \n\nI tromped upstairs, showered and staggered to bed. Homework had drained my brain and fucking Alissa and Tasha still saturated my body with the endorphins of good sex. The idea that I was in as the guy \"interviewing\" women for some guy who wanted to have sex with his personal assistant thrilled me. By the time I lay down on my bed, though, the house was quiet and I had processed this opportunity and what it likely meant for me. \n\nThe next thing I knew a mouth had enveloped my cock. I was hard and her mouth sank down the length of my cock and she sucked me hard, harder. \n\nI groaned and I felt the satisfaction expressed by her tongue on my cock rather than the words a tongue should express. It felt weird. \n\nThe reason isn't what you might think. It was not waking up to find my hard cock being sucked but the first conscious and coherent thought I had when I realized someone was blowing me. \n\n\"Not one of my sisters.\" I thought to myself. Immediately I felt the weirdness of that certainty, that I would know with some certainty that none of my three sisters was currently bobbing her head on my cock. \n\nI opened my eyes. \n\nIt was still early, not quite dark but not light enough to be dawn yet either. She sucked my cock in that intermediate time between night and day, when if you did not know it was morning, you might think it was twilight. \n\nShe pulled off my cock and I felt her lift the covers and move over my naked body. I had no recollection about how I was dressed when I went to bed, or if I was dressed. Now, however, I knew for certain I was naked as a hot dog on the grill. \n\nThe female crawled over me, like a spider. I felt her hand on my cock directing it to her pussy and when we connected, she hissed quietly and sank slowly down onto me, planting her body on my hard cock. God, the feeling of her. She began the rock and roll motion of sex, her body pulsing and clasping mine as she rode me. \n\nThe blankets no longer covered my torso and her hands rested on my chest. My eyes opened and found Mrs. Spilletti staring down at me in the early morning gloom. \n\n\"Sonny!\" She panted as she rode me. \n\nMy hands awoke and I felt up from her knees to her ass as it rolled over me. God, but she felt good! My hands tricked up her sides to her breasts and verified she was stark naked and my cock was planted deep in her body.\n\n\"Good morning.\" I mumbled. \n\n\"Sonny.\" She returned, her voice a rasping whisper. \n\nMy mind woke at that point, realizing that my two sisters were in the house along with the dyke they picked up at the airport. \n\n\"Oh Christ.\" I growled as the sensations of being inside the woman wafted up to my brain, insistent and undeniable. I grunted and pulled her down hard onto my cock while arching under her rolling hips. \n\n\"Oh fuck, Sonny!\" She groaned when I ground us together.\n\n\"Yes, good idea. Fuck Sonny!\" I returned. \n\nHer rhythm shifted and stopped so she could giggle. \"Stop it, goddammit, I was almost there. I, I want to come with you in me like this then, then you can do whatever you want. I, I want to come riding you in your house like this.\" Her voice seemed to emerge out of the darkness, disconnected from the clasping tightness of her pussy. \n\nI continued to pull her down onto my cock while I arched under her. Moments after she went silent, she groaned and her body quivered, shaking and bucking over me. \n\n\"Oh god, Sonny. Fuck me. Put, put, put me on my back!\" \n\nAs though to fulfill her part of that bargain, she laid down on me, pinning her tits to my bare chest while her ass continued to grind over me. She gripped my legs with her thighs. I tried to twist her onto her back but ran out of bed. Mine was too narrow for such a maneuver. We lay on our sides. I pulled my cock out of her pussy and got to my knees. She shifted under me till she lay on her back. Her hand found my drippy dick, dripping with her inner approval and directed me back to her pussy. I penetrated her and I felt her body respond to the invasion. I got a fucking ticker tape parade. Her legs rose beside me like tides. \n\nI punched into her molten center and she grunted. \n\nI wasn't thinking. I was fucking and this woman invited my participation, my delight in fucking her. I moved up between her legs and pounded down into her. \n\n\"Oh god, Sonny, fuck me! God, god, god, I am, am, am come come coming!\" She warbled like a jazz band at a funeral. \"Oh god, oh god, fuck me Sonny!\" \n\nI did. I was. I didn't really know what she wanted besides what I was doing. My body racked between her open legs, ramming her full of cock over and over again. What I did know was that her whisper had changed to a muted cry and was ratcheting up the scale to a scream. I bent over her and kissed her on the mouth. The morning dourness seemed unimportant. I crammed my cock into her pulsing body and her mouth accepted me. We kissed hard. I felt her hands on my shoulder and her tits pressed flat between us, resisting our pressure. She groaned as I hammered down into her pussy. \n\nShe shook her lips free of my mine. \"Oh god, Sonny! Oh god, coming!\" Her body exploded under me, her hips lifted us, her feet planted on the bed as she arched under me. \n\n\"Oh fuck!\" I growled. \n\n\"Ssssh!\" She hissed. \n\n\"Fuck, uh, fuck you, you, you started this!\" I grunted. She reached up and pulled my face down to hers and her mouth opened, kissing me with the passion that flashed through her rich body. I lay down on her, releasing my weight on her body as my hands moved down her twitching body to her ass. I continued to hammer into her. Aunt Norma gave as good as she got. Her hips rose under me, rooting me deep into her body as she shuddered, her whole body quaking with the rumbling orgasm that consumed her. \n\n\"Oh, oh, oh, god, Sonny, fuck me!\" She muttered into my mouth. I think I got it via Morse code or something because the sounds she was making did not form syllables of any language I understood. I got the point of her instructions and followed through with a thorough and, if I say so myself, elegant interpretation of them. With my hands clasped onto each cheek of her wondrous ass, I pounded down into her weeping depths. \n\nShe kept coming and for a moment I wondered if I could come but then the climax appeared, like a magic act consisting of misdirection and a sexy assistant. I ground down into her and grunted as the climax tore through me. I pumped and pumped and pumped and Norma seemed to open wider, her body turned into a plush pleasure that blended with my cum as I filled her. \n\nAfter several minutes, my body, steaming with the intensity of the orgasm, coasted to a casual stop between Norma's splayed legs. My hands gripped her ass and I felt her great muscles tensing and relaxing as she pulsed around my cock. I shook between her legs but finally calmed. \n\nAfter several minutes of mutual panting and shifting to let us catch our breath, she muttered at me. I could not understand her and so shifted to the side.\n\n\"What?\" I asked. \n\n\"I said, since you weren't coming to fuck me, I thought I should come fuck you.\" \n\n\"I came.\" I gasped, still out of breath, my chest taut with the incredible pleasure of being wakened with her body like that. \n\nAunt Norma laughed. \"I know. God, I feel like a sink hole, filled with water. You came like a horse.\" \n\n\"You've fucked a horse? Do they like fucking human women?\" \n\nShe smacked me on the shoulder. \"Don't be gross. I, god, I woke, woke up horny and, and I had to have you. Thank you for not pushing me out of bed.\" \n\nI shifted to the side, withdrawing my cock out of her and slithering down beside her. I closed my eyes, just to rest them and I clinked out like a candle hit by a water balloon. \n\nThe next thing I was aware of, my bedroom door opened. \n\n\"Sonny?\" \n\nI heard my name and recognized the voice but my digital brain was not cooperating. I remembered Aunt Norma and thought she was speaking but then I felt her bare ass pressed against my hard cock. I knew that voice but it was definitely not Aunt Norma. \n\n\"Sonny?\" \n\nThe room wasn't dark exactly but had that odd blend of shadow and light of new dawn. I opened my eyes and saw my sister Georgia standing beside my bed, bending over me. \n\n\"Sonny?\" She whispered again. \n\nI felt my cock pop to full mast. Beside me, Norma moaned and her leg lifted, opening her body for me. Her hand reached between her legs and pointed my cock at her pussy. Her pussy lips kissed the head of my cock and she pressed her body back, pinioning herself onto my cock. \n\n\"Ugh!\" She grunted. \n\n\"Sonny?\" Georgia whispered. \n\nMy eyes opened wider. I tried to twist onto my back to look at my sister but felt my cock leaving Norma's hot, syrupy pussy and my body overrode my silly brain. I rolled back against the woman beside me, pressing my cock back into her molten center. God, it felt so good, I thought I was going to faint! \n\n\"Sonny?\" Georgia said in the gloom again.\n\nI shuddered, pulled free of Norma's pussy and let her roll onto her back. Naturally, I moved between her legs. The part of my brain that was operating actually thought that fucking Aunt Norma while Georgia watched was a really good idea. I thought she'd be happy to see me plunging down into Aunt Norma, pressing her full of cock. Norma wheezed as I got between her legs and then groaned as my cock found her kissing pussy lips and pressed into her. \n\n\"Sonny, Jesus, what are you doing? Oh. Oh? Oh!\" Georgia's voice carried the discovery that another woman had beat her into my bed. Not like she had made reservations, I thought. To say nothing of her face planted between her dyke friend's legs. What did she have to bitch about? \n\nWell, something apparently. \n\nThe next thing I heard was my bedroom door slamming shut. It sounded like a cannon shot. \n\nNorma lifted her legs and uncovered us. To tell you how distracted my brain was, I thought that it was too bad Nova stormed away because I presumed she'd love watching me fuck Aunt Norma, not noticing I had the wrong sister. With that thought throbbing in both heads, I concentrated on ramming Norma full of cock again. She began to pant and then she struggled for air, her breath wheezed around us. "
    ],
    "authorname": "Contrasting",
    "tags": [
        "group sex",
        "office sex",
        "sister sex",
        "mother daughter sex",
        "guest sex"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/extending-the-milf-list-ch-11"
}