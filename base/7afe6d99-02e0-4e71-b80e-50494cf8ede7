{
    "title": "TRC - Searching for the Sky Ch. 06",
    "pages": [
        "'In pain' wasn't the most comfortable way to wake up but Kelthor welcomed it this time, it was better than opening his eyes and finding himself in the afterlife. He discovered that attempting to open his eyes was a bad idea, as pain once again lanced through his head from the daylight pouring into the room.\n\nOn a more pleasant note, it was certainly nice waking up to the feeling of a naked woman pressed against his side. Rose had crawled into bed beside him and rested her head on his shoulder, her arm thrown over his chest and a leg draped over his. She must have decided on an afternoon nap because small whimpers escaped her lips as her limbs made tiny jerky movements from whatever dream she was having. Judging by the dampness, heat, and small grinding motions she was making where her sex rubbed up against him, the dream was a pleasant one.\n\nThough he loathed waking the girl, his mouth was extraordinarily dry. His arm felt like it had weights attached to it as he brought his hand up to the top of her head so he could gently pet the woman awake, where it ran into triangular ears that weren't supposed to be there.\n\nThis wasn't Rose.\n\nWaking from his movements, the woman gasped in surprise before quickly sliding out of the bed and running out the door as she called for the golden-haired dog girl.\n\nThe old man grunted. She could have at least given him something to drink before tearing off.\n\nLess than a minute later that he heard the clicking of canine claws coming up the stairs just before Rose and the girl who had been napping with him entered his chambers, at least he assumed it was the same woman, he hadn't opened his eyes yet. She immediately began fawning over him, her excitement that he was finally awake almost palpable. Kelthor raised a hand and she pressed it to her cheek, which was wet with tears of relief.\n\n\"Wa..ter,\" he finally whispered looking at the girl, finally able to open his eyes without it hurting.\n\nThe golden-haired woman jumped up, apologizing for not considering he would be thirsty when he finally awoke. She poured him a glass from the pitcher on his nightstand as the girl with the black and white coloration of a collie crawled into the bed from the other side. The wizard was about to ask why she was in bed with him when they each put an arm behind his back and lifted him up, the other girl sliding behind him so he could lean back against her as Rose put the cup to his lips. He quickly realized that without their help he wouldn't have been able to do this on his own, which made him immediately wonder just how long he had been out for.\n\nThe sound of heavier footsteps was immediately followed by Kal and Daxas entering the room, the wolf girl standing up and shifting to her human limbs once they had cleared the stairs.\n\n\"Good to see you awake, old man,\" said Kal, smiling as he approached the bed. \"We weren't sure how much longer you would last if you didn't wake up soon.\"\n\nKelthor's surprise was evident on his face, looking over at Rose he asked, \"How long?\"\n\n\"Almost ten days. We could get you to drink but Kal has been healing you three times a day to fend off the effects of starvation,\" she replied.\n\n\"Rose here got the idea to start grinding up food and adding it to the water they were giving you, otherwise I don't think you would have lasted this long even with my help. These last few days you've been going downhill fast.\"\n\n\"Sounds like I owe you my life.\"\n\nKal shrugged. \"If you owe anyone it's those two,\" he said, indicating Rose and the black- and white-haired girl, \"along with the other two who kept you warm when we came back. Dax said that she was worried I might not make it for a little bit, so I can only imagine how close you came to drawing your last breath.\"\n\n\"Stop it, Kal, you're the reason he's like this,\" Rose growled, her teeth lengthening as she glared at the human.\n\n\"I'm also the reason, he's alive now.\"\n\nThe dog girl's teeth retracted but her lips stayed curled into a snarl until the old wizard rested his hand on her head.\n\n\"Peace, Rose, it was my decision to do this. Kal expressly said that he was uncomfortable crashing out of the last session, I was the one who insisted,\" Rose looked between him and Kal, her surprised expression telling him this was new information to her. \"If you want to assign blame you could just as easily blame the lich who forced Kal to seek me out in the first place. Granted, I didn't think it would be this bad, but then, I've never done that so many times so close together. I don't think anyone has and lived to tell about it, until now that is.\" He looked up at the younger mage, \"I want you to record everything that you felt and experienced from the time you began the crash.\"\n\n\"Already done, I figured you would want some kind of documentation.\"\n\nKelthor glanced over at the dog girl, she was staring at the younger mage with a mixture of embarrassment and apology. \"Why didn't you tell her it was my decision, Kal?\"\n\n\"Partly because I didn't know if she would believe me, but mostly because her anger at me distracted her from how close you were to dying.\"\n\n\"I'm guessing that means you didn't get the notes in my study?\"\n\nKal shook his head, grinning, \"No, I haven't, but that was more because of superstition than because of her.\" The old mage gave him a confused look, making him chuckle before continuing, \"I was worried if she gave me those notes you wouldn't have a reason to come back to us.\"\n\nKelthor laid his head back against the girl behind him, closing his eyes as a smile crept onto his face. Kal wasn't sure if it was because of his comment or because he was relaxing with his head in between a rather nice set of breasts. Breasts he had seen very little of since the incident. The collie had spent most of her time up here with Rose tending to the sleeping wizard.\n\n\"Now that I'm awake, you needn't worry about that,\" he said keeping his eyes shut, the light wasn't painful anymore, but it wasn't comfortable either. \"Rose, go into my personal study and get the notes on the table there when you get a chance, please. He will need them before he leaves.\" He opened his eyes slightly to look at Kal, \"I was able to verify that Prentas and Te'thalas existed and that your ancient mage traveled with an elven woman named Lehrien Te'thalas. The most interesting piece of information was what I didn't find.\"\n\n\"I'm confused, did you say what you 'didn't' find?\"\n\n\"Exactly, the only mentions of the cities of Te'thalas and Montar were where the names hadn't been completely erased from the ledgers. Someone tried to erase both cities from history.\"\n\nEveryone in the room was looking at the wizard with shocked looks on their faces.\n\n\"But... Who? How? Why?\" asked Kal.\n\n\"Who and how are related, there was only one organization that had the kind of power back then to alter thousands and thousands of documents over an enormous area, effectively erasing both cities from history. The church.\"\n\n\"But why?\"\n\n\"I can only venture a guess, but I think it was mostly because they could. If Ikuno's story is true, then the largest and third-largest cities effectively vanished overnight, leaving a gigantic power vacuum for the church to step into. Removing Montar also erased the church's greatest defeat at the hands of a magic-user. If they wanted to rewrite history there was no one left with the ability to challenge them.\n\n\"The other reason you may already know the answer to and just never realized it. As you were growing up what were you told about monster girls.\"\n\nKal was curious where he was going with this, \"That they were evil and needed to be avoided or destroyed. That they would capture a human man and turn him into an unwilling 'husband,' never allowing him to leave and draining him dry to produce more of their demonic offspring.\" Kal's face looked as though he had bitten into something rotten as he spoke the words, thankful that his mother had raised him to not off-handedly believe everything he was told.\n\n\"That's the word I was looking for!\" said the wizard excitedly, \"the church teaches that monster girls are demonic in nature. What would it do to their credibility if it were discovered they were created by an immensely powerful mage? A mage who cast a spell powerful enough not only to create the monster girls but to create them across the entire world. Kal, that's a mage who held the power of a god, even if only for a moment. The church doesn't like competition\"\n\nKal stood frozen, stunned by the revelation.\n\n\"People think we're demons?\" asked Daxas.\n\n\"Not all of us obviously,\" replied Kal, putting an arm around her and pulling her close before giving her a kiss on the forehead.\n\n\"You will find that most of us practicing the magic arts don't believe what the church says about monster girls,\" said Kelthor, wishing he had the strength to do the same for Rose, who was looking hurt and insulted by the news. She was aware that humans, in general, didn't like monster girls, but they had never discussed the reasons why. \"Nearly all of us have access to a simple spell that allows us to detect evil. Apart from a couple of purely carnivorous species, monster girls are no more prone to being evil than humans.\n\n\"Back to the topic at hand, Kal do you know where the church is based out of?\"\n\n\"Lantaris, right?\" Even if the church had little to no presence in Telsin there were things that everyone knew.\n\n\"And that is located where?\"\n\n\"Far off... to... the... fuck. Lantaris was the second most powerful city in the area behind Montar, wasn't it?\" asked Kal.\n\n\"Correct, Lake Montar is five weeks journey northwest of Lantaris. Unfortunately, I don't have any maps of the area so you will have to continue your search once you get closer.\"\n\nThe younger man smiled, \"That sounds amazing already, I won't complain because you couldn't give me pinpoint directions.\"\n\nThe conversation was interrupted by the arrival of another of Daxas's pack who had been working in the kitchen since they received the news of the wizard waking up. The woman entering the room with a large bowl of stew was almost a copy of Rose but with shorter jet-black hair and more triangular ears, she was also the one to use Kal's last piece of messenger parchment. Along with being the only one of the pack who knew how to read and write, she was also the only girl who knew how to cook in a human kitchen.\n\nRose took the bowl from the newcomer, setting it on the table next to the bed. As she stirred its contents Kal and Daxas excused themselves, promising to return after he had finished eating. The black-haired woman left a few minutes later once the other two assured her they didn't need any help.\n\nBehind the mage, the collie gathered her legs under herself and sat the wizard up a bit further to make it easier for him to eat. Kelthor groaned inwardly as Rose brought the first spoonful of stew up to his lips. This was going to be a long recovery.\n\n---\n\nA dour-looking mage waved his hand above the bowl of water, wiping the image of the golden-haired dog girl feeding the wizard from its surface.\n\n\"Soon enough he will realize that his wards have been breached and recast all of them. Once that happens, we will lose our eyes into his tower and only be able to watch from a distance again,\" he said to the leader of the slavers standing next to him.\n\n\"Did you find out anything else about where he's headed next?\" growled Kogen, still staring at the water's surface. Seeing the yellow bitch, the wolf and that fucking mage had him nearly seething with rage.\n\n\"South to the main road and then off to the west, towards Lantaris it sounds like.\" The man frowned, \"You would be best to leave this one alone, Kogen. From their conversations, it sounds like the boy fought Kelthor to a standstill in the astral plane then did something to take him out for the last ten days. If that weren't impressive enough, he managed to remove all my collars without losing a single one of the bitches or getting himself killed, and now it looks like he's teaching them to defend themselves. You're good, Kogen, but I've watched as he spars with the women, he moves in ways I've never seen before. If you have your armor and sword you're evenly matched at best. If he takes any of the girls he's training with him, you don't stand a chance.\"\n\n\"I can't,\" said the slaver, \"Rist, the thieves' guild, the beggars' guild, none of them will work with me until I bring his head back. Not only did he steal all of my stock, but he did it without killing any of my men. Now they're all laughing at me, saying I'm weak because a boy and his dog brought me down without wasting the effort to slit a throat. What's the news of the men I sent to Carris forest?\"\n\n\"Dead.\"\n\n\"What!\" Kogen roared in the robed man's face.\n\n\"What stupidity possessed you to think that was a good idea!\" the wizard snapped. \"You sent three idiots to retrieve seven bitches with sharp teeth and nothing to lose! They're lying in the forest with their throats ripped out and covered in what looks like dog piss. Now we've lost three more besides the two you killed and those who ran off when you couldn't pay them. Rest assured, when I compared you to the boy earlier, I was only speaking of your fighting abilities. When it comes to using your brain, he has you beaten by far.\"\n\n\"Don't yo...\" Kogen went to grab the mage's robes. There was a bright flash and the leader of the slavers found himself hurtling into the wall behind him.\n\n\"You were warned to never raise a hand to me, Kogen,\" said the mage as he finished tracing a rune. \"I'll leave you the collars I've made already. However, my employment ends here. Get out of my room.\" He held the rune out, pointing it at the armored man as he picked himself up off the floor and tried to exit the wizard's quarters with some semblance of pride and decorum.\n\nAs the door closed behind the slaver the mage waved a hand in its direction, activating the magical lock he had placed on it back when he first took this job. Taking a flat, round bundle of cloth out of his pocket, he unwrapped the small mirror inside and spoke the word written on the piece of fabric. The looking glass had mysteriously appeared in his robes during his last outing for supplies, it wasn't hard to guess who had put it there.\n\n\"Hello, Jerrin,\" said the mage when the leader of the thieves' guild appeared on the mirror. The wizard's eyes narrowed as he noticed the man appeared to be lying in bed and the image was bouncing with a familiar tempo.\n\n\"Ah! Farik! My sincerest apologies, you've caught me while I'm a bit occupied, but I was hoping to hear from you soon. I imagine that Kogen has run out of money to pay your wages?\" asked the guild master.\n\n\"I have decided to leave his emplo... Dammit! Could you stop that bouncing?!\"\n\nJerrin looked beyond the mirror, \"What say you, ladies? Could you put things on hold for the wizard?\" he asked turning it around. The scene changed to a woman facing away from him happily bouncing on the guild leader's prick as another woman with bright red hair standing on the foot of the bed held the bouncing girl's mouth to her sex, her torso rippling and legs shaking with pleasure.\n\nThe girl pulled back from licking the redhead's pussy, without missing a stroke she glanced back at the mirror, \"Nope, but I'll make it up to him when he gets here.\" Though she didn't stop, the mage noticed that she changed her rhythm slightly, so the shaking wasn't nearly as bad. He caught himself moving his head to the side as Jerrin turned his mirror back around, trying to keep the women in view as the redhead grabbed a handful of hair and pulled girl's mouth back to her sex. Farik glared at the guild leader as the woman getting licked let out a long shuddering moan out of sight.\n\nThe wizard cleared his throat, \"As I was saying, I am no longer working for him and I understand that you have already taken in one of Kogen's former employees. I was curious if you had room for another?\"\n\n\"I can't pay you as much as Kogen was, but I would love to have you join us... The thieves guild that is... not 'us' as in 'the three of us,'\" said Jerrin, making a small circular motion with a finger encompassing the bed. The mage wondered for a moment how this man ever ended up becoming the leader of the thieves' guild. \"I have someone with a bag of holding, do you need me to send them?\"\n\nFarik shook his head, \"No, I have one of my own, but an escort would be nice, someone Kogen won't mess with.\"\n\nThe man in the mirror looked up and the mage heard the redhead's voice in the background, \"Let me finish up here and I'll be right over.\" There was a slight shuffling from the bottom of the bed before Farik heard, \"Nope, you've had enough of that, go higher,\" followed by another long groan from the woman.\n\nJerrin smiled, \"We'll see you in a couple of hours, Farik.\"\n\nThe mage stood there for a moment holding the mirror that now only showed his reflection. Wrapping it back up in the cloth, he called out, \"Fex.\" A red, naked female figure with bat wings appeared above a bag lying on one of his worktables. People often mistook her for a small demon or succubus when in fact she was just naturally red in color and had the body of a normal human woman, something in how the bags were enchanted made the avatars pick some form of flight mechanism, Fex chose bat wings just for the fun of messing with people.\n\n\"Pack everything up, we're leaving.\"\n\n----\n\n\"Gods, Kal. What have you done to this spell?\" asked Kelthor, turning the parchment to each side with a mock look of confusion. He was familiar with the spell but a part of the rune that had been mostly barren but for a couple of glyphs was now littered with symbols. Another area had a couple of new glyphs, but he immediately understood the purpose of those was to move according to the caster's desires, instead of just following behind as normal.\n\n\"Try it,\" prompted Kal, smiling.\n\nWith a charged crystal and the paper containing Kal's handiwork in one hand, Kelthor carefully drew the rune in the air with the tip of his wand. As he got to the portion with all the extra symbols he began noticing a pattern, they appeared to be dimensions. With a final glance at Kal, the old wizard activated the glowing rune. Where the spell normally summoned a golden disc that floated around behind the mage, instead, a chair made of the same golden material appeared.\n\n\"Rose helped test it out, she was the one who suggested the ramp on the front for your legs with a lip, so you don't slide out,\" the young mage explained as he grabbed one of the pillows off the bed and threw it into the floating chair.\n\n\"You've done a horrible thing, Kal,\" said Kelthor shaking his head as he looked at the chair.\n\nKal stared at the man in confusion and more than a little disappointment that the wizard didn't seem to like his creation. \"How?\" he asked.\n\nKelthor affixed him with a serious stare, \"If all I have to do is cast this in the morning and float around all day,\" the hint of a smile broke through his serious fa\u00e7ade, \"I'll never walk again.\"\n\nKal covered his eyes with his hand and shook his head, smiling as the old man began to chuckle.\n\n\"You had me there,\" admitted the young mage as he helped Kelthor to his feet and sat him in the golden chair.\n\nThe wizard took a moment to acquaint himself with moving and rotating the magical chair before looking up at Kal, \"Thank you very much Kal, with you leaving in a couple of days this will be a huge help until I can get my legs back under me.\" He turned towards the door then looked back up at Kal, \"This thing still goes up and down steps, right?\"\n\n---\n\n\"I have to do this, Kelthor,\" said Rose, the retriever's eyes pleading with the wizard. \"Saying I'm sorry just doesn't feel like enough. I hated him. Truly and honestly hated him for what he did to you. Then to find out it wasn't even his fault, I feel horrible for thinking of him in that way and I need to do something before he leaves, or I'll never forgive myself.\"",
        "The man leaned back on his floating chair, taking a deep breath before answering. \"I'm torn Rose,\" he said looking frustrated. \"If I make you stay, you'll resent me for it. If you go and do this with him, I'll resent you for it. Which is the lesser of the evils?\"\n\nThe dog girl didn't respond, looking down at the floor instead of meeting his eyes.\n\n\"This time I think I'm going to leave this to fate and hope things turn out for the best. If you feel you need to go, then go.\"\n\nHis last word made the woman flinch as if struck, even so, she turned around and walked out the door. Kelthor blinked in surprise and more than a little bit of hurt.\n\n\"She wasn't lying, sir,\" said the collie waiting for him over by the stairs, \"She's been agonizing over this ever since you woke up and I think stopping her would have done more damage than good.\"\n\nThe wizard gave her a weak smile before floating past and up the stairs towards his room, the black and white dog girl following close behind.\n\n---\n\nThe woman stuck with the first shift of guard duty watched in confusion as a miserable looking Rose walked into the tent. The golden-haired dog girl walked over to the flap separating Kal's room from the main area without so much as a glance at those sitting around the firepit chatting. Daxas and the other girls who hadn't yet retired looking just as confused as the guard outside.\n\n\"Kal, are you in there?\" she asked, raising her voice slightly. Out of the corner of her eye, she saw Daxas stand and slowly come over.\n\nKal pulled the canvas sheet aside, \"Rose?\"\n\nStepping inside, the golden retriever addressed the black-haired woman sitting on Kal's bed first. \"I'm very sorry to ask this, but could I have your turn tonight? It's important.\"\n\nThe girl on the bed looked past the woman to Daxas standing in the doorway. The wolf nodded and the girl stood up, walking out with a disappointed look on her face, Dax held the flap open for her then followed her out after glancing at the golden-haired dog girl and sharing a look with Kal.\n\n\"What's going on Rose? This is hardly the happy puppy I'm used to seeing.\"\n\nShe turned toward him unexpectedly, wrapping her arms around him in a tight hug, \"I'm sorry,\" she said, starting to cry. \"I should have known you wouldn't have done anything like that to Kelthor. I'm sorry I hated you so much then, if it hadn't been for you healing him I would have been happy if you died. I'm sorry, and I'm here to make things right.\" Rose dropped to her knees and quickly tugged down his trousers, catching his cock between her lips and sucking it into her mouth before Kal could recover from his surprise.\n\n\"What the?!\" said Daxas from the doorway, she had come back as the dog girl was speaking but hadn't expected this any more than Kal.\n\nIt was with a force of will that he pushed the woman's head away. It had been mentioned that her breed was known for their soft mouths, even after only a couple of seconds he was having a difficult time maintaining a rational thought from the pleasure she was bringing him. As his prick slipped free, the girl started crying harder.\n\nKal took a deep breath before speaking to the distraught woman in front of him, allowing the sensations from his groin to fade. \"What are you doing Rose?\"\n\n\"I..I'm j..just trying to show y..you I..I'm sorry,\" she said sobbing.\n\n\"No. Not like this,\" he said pulling his trousers up before kneeling down so he could look her in the eye. \"This is hurting you and I can't imagine how you must have been feeling to think going through with this was somehow better.\"\n\n\"I have to do something,\" she cried, \"I have to show you how sorry I am.\"\n\n\"Oh, you will,\" he said, standing up, \"strip and get into bed. No presenting either, we won't be doing anything like that.\" Kal looked over at the wolf, \"You too Dax, you get on the other side of her.\" The wolf girl gave him a questioning look as she walked past him toward the bed. When he had the two girls situated facing each other he shucked his shirt and pants then crawled in opposite Daxas, with Rose trapped between them.\n\n\"What are...\"\n\n\"What nothing. You are going to spend the night between me and Dax, knowing you are cared for, loved, and forgiven. This is your atonement for hating me. Can you respect that?\"\n\n\"Yes,\" she said meekly, unhappy because her plan had fallen apart but filled with relief at the same time. She had wondered how she would face Kelthor tomorrow. This way, he may not be happy with her, but it would be a lot easier to reconcile when she and Kal had only cuddled all night without having sex.\n\nDaxas smiled over the girl's head, letting him know her approval of his idea. Kal returned a strained smile, glancing downward in the direction of his hard cock now trapped between his belly and Rose's lower back. The ever-sympathetic wolf girl bit back a laugh at the predicament he had put himself into. Kal stuck out his tongue at her.\n\nIt wouldn't have been so bad but Kal had to admit, he really wanted to be with the girl laying in front of him. It wasn't easy knowing all he needed to do was slide down a little and he could slip inside her. Worse yet, she would let him and probably enjoy it as well. Kal sighed, Kelthor had become a friend as well as a teacher and the damage it would do to Rose and his relationship could end up being irreparable, the aftermath just wouldn't be worth it. With another frustrated sigh, he laid his arm over both girls and tried to get some sleep.\n\n---\n\nKal wasn't sure who was the one getting the better end of the deal after Rose left and Daxas called the black-haired retriever back in, the wolf whispering something in the girl's ear before leaving them alone together. The dog girl then crawled into his bed and proceeded to show him that last night's unexpected bedmate wasn't the only one with a 'soft mouth,' which left Kal regretting that he hadn't been more active with the other women during their time at the tower and wondering what other interesting skills or quirks he had missed out on.\n\nThe regret was short-lived as he thought back to his conversation with Daxas. Much as he was enjoying the girl's mouth he still didn't have any desire to add her to his core group of women. He had a feeling that there would be many others in the future and wondered just how much he could manage. As nice as it sounds to a young man to have a line of women waiting to bounce on his dick, the days after the rescue showed him that the reality was far less enjoyable.\n\nHe gasped as he filled the dog girl's mouth, the woman gently sucking until his orgasm subsided while savoring the taste of his seed.\n\n\"Um, would you mind doing that again?\" Kal asked. He felt guilty wanting her to do more when over the past few months the times they had sex was little more than the physical act with little actual companionship. The girl nodded vigorously, smiling around his prick before letting it slip out of her mouth so he could cast his rejuvenation spell. While he was normally good for a second round after a short break, he was still determined to make sure the black-haired girl enjoyed herself as well, and a third round was pushing things, even for his body.\n\nAs the black-haired woman's lips closed around him once again he realized what he was missing the most with the other girls in Dax's pack, companionship. He was glad the girl was too busy to see the flush of embarrassment when he came to the realization that the fault was entirely his.\n\nShe whined in disappointment as he pushed her head away. \"Come up here, I need to think for a minute and your mouth feels too good to let me do that,\" he said, smiling apologetically as he pulled her up against his side and put an arm around her. As she snuggled into his shoulder, Kal returned to his thoughts.\n\nWhen Daxas had announced she was pregnant he hadn't taken the news well, upset because he didn't even know her name yet. Now, three months later, he had gotten the girl lying next to him pregnant and had slept with her multiple times, yet still couldn't dredge up her name. Kal frowned as he came to the conclusion that he still felt resentment towards them for using him as meat stick and babymaker while they were in heat. \n\nThis also made him aware that he was just as much to blame. After the rescue, he had gotten it stuck in his mind that he needed to take care of those who were in heat by getting them pregnant. In the back of his head, he knew he had other options. Though he might have claimed ignorance beforehand, Daxas's threat to have him empty his balls into Rose's ass, and the reason behind it, took away that excuse. Even with the prospect of longer rests between the girls the idea never gained any traction, making him question why.\n\nBecause he wanted them to be happy. After everything they had suffered through in the kennels, he felt like it was his duty to right some of the wrongs they had endured. The idea was shored up by Daxas's joy at becoming pregnant, and the other girl's sorrow when her heat faded. Sadly, he didn't consider the effect it would have on his and their relationships later. But really, how different were they from Sandy, or Silma, or even Bas whom he shared a bond with. He wasn't a large part of any of their lives but each of them was carrying one of his children. Well, he wasn't certain about Silma but that was beside the point.\n\nThis whole situation began with a change in status between Kelthor and Rose, perhaps he needed to do something similar with the women in his life. Ikuno, Perra, Aradelle, Gerda, Bea, and now Daxas certainly fell into the category of lovers. However, where did the girls in Dax's pack fall? Certainly not lovers but not on the level of Silma where it started as a business transaction but turned into something a bit more interesting. Companions? That seemed to fit, not in the same way that he meant it for Rose and Kelthor, but then, Rose had already been a companion, the change in name was just the catalyst for them openly becoming lovers.\n\nCompanions. He liked that.\n\n\"I'm sorry,\" he said to the black-haired dog girl gently running her fingers through his chest hair. She looked up at him in confusion. \"I've been holding all of you at arm's length, not even taking the time to learn your names. You deserve better, when I get back home with Ikuno I'll try to get to know each of you a bit better.\"\n\n\"It's okay, Kal,\" she said laying her head back on his shoulder. \"We understand you love Daxas and don't want to interfere. We just appreciate that you and Dax are kind enough to share with the rest of us. From what she's told us of how wolf packs work, she was often denied the same courtesy by her own alpha.\" She let out a small laugh, \"Last night after Rose showed up she took me off hunting duty for today just to make sure I got my turn with you.\"\n\n\"Is that really so important?\"\n\n\"She said once we got to our new home you wouldn't be available to the rest of us unless you change your mind later. So yes, it is important to us. This is nice, it's comfortable, our needs are taken care of, and though you are holding us at arm's length, you are still kind to us. Even if you weren't my rescuer I would be happy with how things are.\n\n\"If you want to change things between us, none of us will complain,\" she said pushing herself up on an elbow to look into his eyes, \"from what Dax has told us we have a couple of weeks travel left if that's what you decide.\"\n\nKal kept forgetting they would still be traveling together as he turned back west towards his home. Dax and the girls, except for Rose and the collie, had already made their trip back to Carris forest to say goodbye to the other half of the rescuees while Kelthor was out of commission, returning with tales of them killing three of the slavers sent to bring them back and pissing all over their bodies as a warning for any others that might get the same idea. With that business taken care of, they would all be heading the same direction until the pack turned south on the road through the mountain pass where they would take the game trail to their new hunting grounds.\n\n\"I believe I have decided, and I think I'm going to start right now.\" Kal pulled the retriever up so she was straddling his stomach, immediately discovering this was a mistake as the happy dog girl's wagging tail began painfully smacking his still-hard prick back and forth. Quickly grabbing the girl by the hips, he pulled her up positioning her sex directly above his mouth.\n\n\"You don't have to...\" whatever she had been about to say faded into a long moan as he ran his tongue through her folds, punctuated by a high-pitched yip as he reached her clit.\n\n\"Shh, I know I don't have to, I want to,\" he said before making the girl shudder with another long lick.\n\nKal heard the flap to his room pulled aside. \"Hmpf... figures,\" said Daxas, \"hold up for a second, Kal.\"\n\nThe human stopped mid-lick and peered around the girl's thigh at the alpha. She occasionally came in to check on the girls, usually taking the opportunity to remind them of her position in some way, but had never asked him to stop.\n\n\"Alina, when you are done in here make sure that the girls have everything packed up and either in the tent or with Ria since we will be leaving first thing in the morning.\"\n\nAlina stared wide-eyed at Daxas, the implications of her orders sinking in. \"Me?!\" she squeaked.\n\nThe wolf walked over and looked down at Kal.\"How's my new beta taste?\" she asked with a sly grin.\n\nKal lifted his head and pushed his tongue into the girl, getting an appreciative moan from the black-haired woman while giving Dax a look like he was thinking seriously. Pulling his head back he moved his tongue about in his mouth as if sampling a fine drink, \"Pretty good,\" he said after a few moments, barely managing to keep a straight face.\n\nAlina began giggling, but only for a moment before Kal continued teasing her sex. Between panting breaths, she looked over at Daxas, \"Why me?\"\n\n\"Don't act all surprised, I've had my eye on you for a while. We all saw a much weaker side of Rose's personality last night, if she had been my beta she would have likely lost the position today. I noticed this morning that your attitude had already changed and the others were deferring to you.\"\n\n\"What about Pola?\" Another shudder ran through Alina's body and she finally looked down, \"could you quit that for a second?\"\n\nDaxas looked off in the direction of the tower. Hanging her head, she said, \"I think you know what to do about Pola.\" She shook her dead to clear the sad thoughts before looking at the two on the bed, \"Much as I would like to join you, we need to get out into the woods if we want to have enough food to avoid hunting on the road.\" The wolf girl leaned over and kissed Kal, taking a moment to lick Alina's juices off his lips, then kissed her new beta hard as a hand mauled the girl's breast. By the time Dax pulled away with a smile, the black-haired girl was panting and grinding her sex into the human's face. \"You'll be joining me with him tonight,\" she said with a wink before walking out of the room and calling to her hunting partners.\n\nAlina looked down and saw that Kal's skin was now shining with wetness as he grinned up at her. \"I'm sorry!\" she apologized but Kal's head was already shaking.\n\n\"Not accepted, that was sexy as hell. Much as I wanted this to be all for you, I'm needing some attention after seeing that kiss.\"\n\nThe retriever nodded, standing up and turning around before straddling his face again then leaning over and taking him back in her mouth. As he pulled her hips down and began teasing her clit he realized he was definitely going to miss that feeling once they parted ways.\n\n---\n\nLater that night Kal was spooned around Daxas, a hand idly playing with her breast as he unhurriedly slid in and out of the woman's rear. In front of the wolf, her new beta was sleeping peacefully and only looking slightly worn out and disheveled from being double teamed by her alpha and the human.\n\n\"Mmmm, I wish I had suggested we do this ages ago,\" said Daxas pushing her hips back slightly taking him a bit deeper.\n\n\"I wouldn't have complained,\" replied Kal. It certainly felt nice, but he wasn't in any kind of hurry. He had cast the rejuvenation spell earlier as he took care of both the women, giving most of his attention to the girl lightly snoring beside them. Instead of just canceling the spell, Daxas had offered up her bottom.\n\n\"Are you sure you won't come back to your town with us?\" asked the wolf.\n\nKal leaned forward, resting his head on the back of hers. \"We've been over this before Dax. I can't. If I walk into that town I won't leave. I know what you are thinking, 'Perra is only a little way away from giving you your first human child, you can see Eludora, and Adalena as well as all the girls.' It was hard enough leaving with Perra being pregnant, I know I wouldn't be able to leave my child as well. Please don't bring it up again, I feel guilty enough as is.\"\n\n\"But you left the other two,\" she said then stiffened, she didn't realize how accusing that would sound.\n\nKal chuckled, \"Bea was insistent I go get Ikuno and assured me that butterflies, like most monster girls, had no problems raising their daughters by themselves, and Eludora is a tree.\"\n\nDaxas twisted about to look him in the eye, \"A what?!\"\n\n\"Tree. Trunk, bark, branches, leaves. A tree.\"\n\n\"You said she was an alarune.\"\n\n\"She is, it's kind of like your puppy phase, except she turns into a tree until she's matured.\"\n\n\"Weird,\" said the wolf turning back around. There was a brief silence before she spoke again, \"I'm letting Pola go tomorrow.\"\n\n\"I think that's wise.\"\n\n\"It still hurts, it feels like I'm throwing her away.\"\n\n\"She and Rose have gotten very close since she started helping take care of Kelthor.\" Kal chuckled, \"I'm more worried about the old man passing away from exhaustion trying to keep up with the both of them.\"\n\n\"Is that your plan to finally fuck Rose?\" she asked, her laugh turning into a moan as Kal pulled back leaving just the tip inside before sliding back in with excruciating slowness.\n\n\"Nope, I'm good with what I've got.\"\n\nDaxas looked over her shoulder and was met by his lips covering hers as he started to speed up.\n\n---\n\nThe next morning Kal, Daxas and the pack met Kelthor and Rose out in front of his tower. Tearful goodbyes were passed about among the women with firm handshakes between the men.\n\n\"A little something that I think you will appreciate,\" said Kelthor handing him a scroll from his golden chair. Unrolling it, Kal found directions for making the little messenger parchments. \"Remember, they're only one way and you can't send them in the rain unless you use a waterproof parchment and ink, it's best to only use them for someone within a few days travel so you can keep an eye on the weather. The rest of the rules are on the scroll.\"\n\n\"Thank you, I really appreciate this, Kelthor.\"\n\nThe wizard smiled, \"It's the least I could do for the man who nearly killed me, then saved my life.\"\n\nKal chuckled, \"You couldn't have put that a better way could you?\"\n\nKelthor's smile got wider, \"Nope.\"\n\nAs Kal went to tell the dog girl goodbye, the wizard reached out and stopped him, \"Kal... thank you for not...\" the older man paused as he searched for the right words, \"for what you didn't do,\" he said finally. The young mage nodded and patted him on the shoulder before finishing his farewells.\n\nAfter giving Rose a chaste hug and kiss on the cheek, Kal walked back to where Daxas and the others were waiting. When he turned around, the golden-haired girl was fighting back tears as she stared at the collie standing with Dax's pack. A fleeting thought ran through his head that it seemed like every time he turned around these last few days the woman was tearing up about something. Noticing that Pola was in a similar state he looked over at the wolf.",
        "Daxas rolled her eyes at him. \"Pola!\" she barked.\n\n\"Y..Yes?!\" replied the startled collie.\n\n\"Get out of my pack,\" she growled before turning on her heel and walking out of the tower's clearing, closely followed by the rest of the women after quick hugs and kisses for their shocked former packmate. With a final wave, Kal followed the girls, leaving the wizard and two dog girls by themselves in the clearing. Neither Rose nor Pola had recovered from their surprise.\n\n\"Are you going to stand there or come inside?\" Kelthor asked the collie.\n\nThis snapped the girl out of her reverie and a moment later she came bounding across the distance between them, tackling Rose to the ground.\n\nKelthor floated over in his chair once they got done rolling around in the grass, raising an eyebrow at the unusually passionate kiss they were sharing. As they came apart and looked up at him he glared down at Rose, who had ended up on her back beneath the collie. \"Now you know what I felt like when you came home,\" he grumped before floating on towards the tower.\n\n---\n\nKal and the girls took the rest of the day getting back to the southern road he had arrived on nearly four months ago. Off to the east, the city of Carriston was barely visible on the horizon, disappearing a moment later as the sun dipped below the trees. Kal set up the tent and activated its camouflage, telling the girls that they would all need to be well-rested tomorrow, so there would be no watch unless he felt there was a specific need. To allay some of their concerns, he also set up a ward to alert him if something intending to cause them harm got too close.\n\nFor the most part, everyone fell into their beds as soon as supper was over, asleep almost as soon as their heads hit the pillow. Kal had been using his stamina rune and was doing better than any of the women, including Daxas who had prided herself on her ability to run for hours. Since Kal was still in good shape, the girl whose turn it was to share his bed that night insisted that she was up for some fun. A few minutes later he was gently rolling the woman off him. While attempting to ride him she had leaned forward and laid her head on his chest, falling asleep within seconds.\n\nKal apologized profusely to her the next morning for being so boring in bed that she fell asleep, the mortified girl hid behind her alpha in embarrassment until Dax told him to stop. She then gave him the week off, telling the girls they were to sleep in their own beds until they get to the point where they aren't exhausted at the end of the day. After three months of sex twice a day, sometimes more, he was actually looking forward to the break, even if he wasn't looking forward to sleeping alone.\n\nAs they came to the road, a girl reddish-brown hair and long ears that faded to black at the tips skidded to a halt, growling and huffing while staring down the road in the direction they were about to travel. One of the girls behind her nearly bowled her over from the sudden stop but the woman was so focused on whatever she had smelled she hardly noticed.\n\nDax trotted over, \"What's wrong Refia?\"\n\n\"It's one of them,\" she growled, glancing at the wolf before continuing to glare down the road. The dog girl was also known for having the best nose of the entire pack.\n\n\"Them?\" asked Kal.\n\n\"One of the men who captured us.\"\n\nKal shrugged, \"Maybe one of them got Shell's warning and decided to try his luck elsewhere?\"\n\n\"The timing seems a bit fishy,\" said Daxas, \"and we still have no idea who broke Kelthor's wards or what they learned.\"\n\n\"Let's assume it was Kogen's wizard and they learned what our plans were. The leader of the thieves' guild gave us three months before letting him out of the city, if he's coming after us he should be behind us.\"\n\nThe wolf didn't look impressed with his assessment, \"Since we are assuming things. One: that assumes that the leader of the thieves' guild wasn't lying. Two: that Kogen didn't come up with some other means of getting out from under the thieves' guild's thumb. We know already that he had customers within the lordship who thought very highly of him.\"\n\n\"Hmm, good points,\" he looked over at Refia, \"can you tell how far away he is?\"\n\nShe bowed her head and sniffed up, down and across the road over the next couple of minutes, \"About three days, I'm guessing.\"\n\nKal and Dax both stared at her.\n\n\"The trail is days old on a major road and you can tell it was one of the slavers?\" asked Kal.\n\nRefia nodded.\n\n\"I'm impressed.\"\n\n\"Me too,\" Daxas chimed in, still looking astounded. The bloodhound beamed with pride at the praise.\n\n\"Three days, that means we should catch up with whoever it is sometime tomorrow at the speed we're going,\" said Kal.\n\n\"Um...\"\n\n\"Yes, Refia?\"\n\n\"I meant three days for us, not them. I believe the scent is around four days old and there's a strong smell of horse, but I don't think they are going very fast.\"\n\nKal's face scrunched up as he tried to wrap his head around what she just said. \"How do you smell how fast a horse is going?\"\n\nRefia crouched down, her tail tucked and ears drooping more than usual under the human and pack's scrutiny. \"A walking horse will have a strong, defined scent trail that changes a lot over a short distance, a galloping horse will be more even, lighter and spread out because of the speed and less of the scent gets to the ground?\" she explained, sounding uncertain and looking around at disbelieving eyes.\n\n\"That... actually makes sense,\" Kal finally said after close to a minute of silence.\n\nAll eyes turned to the mage and Refia nearly collapsed with relief.\n\n\"How?\" asked Daxas, \"and don't use the big words from your books, you might as well be speaking a different language.\"\n\n\"I won't need to,\" he said smiling, \"Ria, I need one of the pouches of sleeping sand.\" The small satchel immediately began leaking the powdery spell component as soon as the point of light touched his palm. Kal handed the pouch to Daxas, \"Walk down the road a little way, try to keep the stream of sand steady,\" he said directing her down the smoother ruts from carriage and wagon wheels. After she had taken a handful of steps he had her stop and move to the rut on the other side of the road. \"Now throw it back to me.\"\n\nOnce Daxas had tossed the satchel back, she could immediately tell what Refia was talking about. One side was a thick strong line that she made over a couple of seconds while the other was wide, nearly indiscernible, and made almost instantly.\n\n\"Refia seems to have a nose sensitive enough to tell the difference between the two. Impressive doesn't really seem like a strong enough word,\" said Kal, smiling at the long-eared dog girl.\n\n\"I have to agree,\" said the wolf, still contemplating the two lines of sand. She was amazed by the girl's ability and slightly annoyed that she couldn't even pick up a whiff of what the bloodhound was talking about. \"We have an enemy about three days away if they stop for the night like we do. What are we going to do about it?\"\n\nKal's haste rune lit up on his vambrace and began slowly rotating, \"We have a mage well versed in combat and a pack of dogs led by a wolf. Unless they brought a small army, I'm not too worried about it.\"\n\n\"There's only one of them,\" Refia chimed in.\n\nKal smiled, \"Again, I'm not too worried. Shall we?\"\n\nNodding, Daxas shifted and dropped to all fours, running after the mage along with her pack.\n\n---\n\nKal needn't have worried about sleeping alone. That night Daxas and Alina followed him into his room, the wolf reminding him that as far as the girls were concerned, this was his and her bed and she had been taking the bed of whoever he was with that night. Alina had come just because Dax wanted her there and the bed was more than big enough for the three of them.\n\nThe next few days went by without incident other than occasionally ducking into the forest on either side of the road to avoid travelers. Three months of hunting in the forests around Kelthor's tower meant that even this didn't slow them down terribly. Kal was occasionally met by jealous glares after these forays since his style was more up and over the trees than through the underbrush. It only took one time of not finding a good place to land and crashing through the forest canopy before those glares disappeared.\n\nWhen they arrived at roughly the place where Refia had predicted the slaver to be, she ended up apologizing profusely for not taking into account that he was moving as well and that he was likely in this area when they had that conversation. After having a couple of girls run across a small strip of road at different speeds and comparing the change in their smells to the horse's she gave a new estimation of the morning after next.\n\nDaxas made a short attempt to do the same as Refia but had to finally admit that the dog girl had her beat when it came to this, taking heart that she could at least smell the horse now.\n\nKal managed to make it to that night before ending up on his knees choosing where to put his prick as Dax made out with the black-haired dog girl lying on top of her. The tough decisions made by an up and coming mage.\n\n---\n\nThe next day went by uneventfully other than the girls confirming Refia's belief that the person on the horse was Kogen. The bloodhound had mentioned two days earlier she thought it was him, Kal got the impression she knew before then but hadn't wanted to draw any more attention to herself.\n\nIt was nearly midday the following morning when the group approached the armored man waiting for them in the middle of the road, his mount tied to a tree just inside the woods. Kogen had noticed them some time ago, which was no surprise. Unlike the other travelers they had come across, Kal and Daxas decided to stay on the road instead of taking to the woods, effectively announcing their presence to the slaver. Despite the girls all wanting to confront the man, Kal stood alone before Kogen, the women a good distance back and looking unhappy with where they were. With the departure of Pola back at the tower, every one of the remaining dog girls was carrying one of Kal's children and he was adamant that they stay back and out of harm's way since he was facing someone with similar abilities to his own.\n\n\"Ria, staff,\" he said to the sprite sitting on his shoulder as he came to a stop a few paces away from Kogen. The bag's avatar was there in case he needed something from her but also so the bag could return to Perra if he misjudged his opponent badly. Doubt had begun to creep into his mind as they approached and he saw just how large the man was, despite his previous bravado when speaking with Daxas.\n\nWhispering a word to the weapon, the platinum endcap stretched downward covering the wood until it looked like a metal pole with a gold cap on one end. He had deflected swords and such with the staff without seeing any marks on the wood afterward but none of those had been magical to his knowledge, or as big as the one strapped to the slaver's back.\n\n\"Well, you're a disappointment, I think you're the most pathetic looking mage I've ever seen,\" said Kogen, looking the young man up and down.\n\nKal shrugged, leaning nonchalantly on his staff. \"Disappointing enough to steal all of your slaves while you lie snoring in your bed. I was of the understanding I had a bit of time left before they put out the... sorry, I was going to say 'dog' but I wouldn't want to insult the ladies back there. I think 'trash' is more appropriate for a slaver anyway.\"\n\nKogen scoffed, \"As if those idiots could keep me locked up. The only reason you're still alive is because you were at the old man's tower. Even I'm not foolish enough to challenge two wizards at the same time.\"\n\n\"You came after me, I'd say that's pretty foolish,\" said Kal, smirking. \"You think highly of yourself if you believe I didn't consider coming back to Carriston and informing the lords and ladies what happened to their friends who vanished after purchasing a toy from you.\"\n\nThe leader of the slavers threw his head back and let out a deep bellowing laugh. \"The lords and ladies already know the collars are trapped! It's only the common folk who I don't bother to tell.\"\n\n\"Hmm, then I guess it was a good thing I didn't consider you to be worth wasting my time.\"\n\nThe large man's mouth tightened. \"You have something that belongs to me,\" he said as he reached over his shoulder and drew his sword, pointing it at the younger man. \"I intend to have them back.\"\n\n\"You are absolutely correct, I do. And you are welcome to them. Ria, would you please give him back the all those things Jakis gave us?\" he asked the sprite who was now hovering off to one side as he studied his opponent. He definitely had enhanced strength, and no small amount either to be able to hold a sword that large with his arm straight out.\n\n\"Even the oil can?\"\n\nThe odd question caught Kal off guard. \"The what?\" he asked the sprite, looking at her in confusion.\n\n\"The oil can. You had me give him the desk back, but you forgot about the oil can he let you use. It falls under the category of things Jakis gave you.\"\n\n\"Fine, everything but the oil can. Maybe someday we'll get back to Carriston and give it back to him. Wait! Better yet give one of the collars to me, I want to throw it at him!\"\n\n\"You realize he's still pointing his sword at you right?\"\n\n\"Yup.\"\n\n\"Aren't you worried he's going to attack you?\"\n\n\"Not at the moment,\" said Kal with a cheeky grin. Glancing over at Kogen he saw the man had lowered his sword and was staring daggers back at him.\n\n\"Care to explain why?\" Ria asked as the collar formed in one of Kal's hands\n\n\"No, but maybe he will,\" said the mage, nodding in Kogen's direction as one of the collars materialized in his hand\n\n\"He hasn't said anything,\" the sprite commented looking over at the leader of the slavers, whose face seemed to be getting more and more red as Kal and Ria largely ignored him.\n\n\"I don't want the damn collars back!\" yelled the large man. \"Give me the bitches!\"\n\nKal raised an eyebrow, \"If a piece of ass was all you were interested in, I'm sure Madame Tufa would have helped. Never been there myself but I understand she comes highly recommended. However, that's beside the point. I don't care if you want the collars back, you're getting them back regardless.\" Kal reared back as the speed rune shone nearly white, launching the collar at Kogen.\n\nWith the tiny distance between them, the thick leather slave collar reached Kogen in the blink of an eye. Then continued on as the slaver sidestepped the projectile. A fraction of a second later the leader of the slavers rocked forward slightly as the collar detonated a good distance down the road behind him. The man turned slightly to stare wide-eyed as the wisps of fire from the explosion faded away, those traps weren't supposed to be that strong.\n\nMeanwhile, Kal was assessing what he just saw. The man definitely had enhanced reflexes and speed to dodge the strip of leather, which was impressive considering the armor he was wearing. He was also smart enough to not attempt batting the collar away, either that or dodging was all that his increased speed would allow. He didn't see the need to tell the man that the collar would only explode a certain distance away from him.\n\nIn between lessons with Kelthor, Kal and Ria had been planning for this encounter, except for the part about the oil can, that had been a bit of a surprise. Kal had carefully taken apart the collars after cutting the sliver wire that connected the trap rune to a tiny crystal that would be frighteningly easy to miss were it not for his special eyesight. The rune only did one thing, detected when someone was trying to remove the collar, at which point it would shatter the larger crystal used to power the control runes. The resulting explosion would vaporize the slave, master and everything in the room. Kal made some modifications to the runes, adding the distance detection, disconnecting the slaving runes and locking the crystal in a full state. The result was a bomb that went off only when it was far enough away for Kal to feel safe and didn't run the risk of someone catching it and throwing it back at him. He unwittingly made it strong enough to take out an average-sized house instead of just a room.\n\n\"Kal! Why the hell are you two standing there staring at each other?!\" shouted Ria, making plain her confusion and frustration.\n\n\"Because of this,\" Kal waved the end of his staff along the ground in front of him, then took a step back as a rectangular pit running across the entire road quickly opened up. Kal peered over the side, \"Spikes at the bottom, nice. This one is plainly meant for killing instead of capturing.\"\n\n\"How... it's supposed to be undetectable,\" growled the slaver, though he already had an inkling that the whelp had known about it.\n\nKal tapped his temple, \"I didn't detect the trap, I just saw the magic.\" He immediately regretted telling the man, he really didn't want everyone knowing about his ability. \"Are we stuck like this or can you cancel it so we can beat the hell out of each other like real men?\" he said putting a hand on his hip and thrusting his chest out.\n\nGrowling with annoyance, Kogen pulled an amulet out of a pouch and pointed it at the pit. With a word the emerald in the middle glowed as the pit closed up, the magic fading away while Kal watched. The large man tossed the medallion behind him and charged across the gap between them with a roar.\n\nKogen's armor was an amazing piece of magic, found when out adventuring in his younger days and a large part of how he became so successful. Besides giving him unnatural speed, strength, and being able to put it on with a wave of his hand, its most impressive feature only manifested when he went into combat. Strips of steel ran up his neck and down the back of his arms and legs before expanding and clicking together in the front. By the time his sword contacted the mage's staff he was in a full suit of armor.\n\nMetal screeched as the two came together, with Kal immediately on the defensive as the slaver rained blows down upon him at a blistering pace. Kogen smiled, the boy was doing everything he could just to keep up with him, eventually, he would make a mistake.\n\nA short time later, Kogen wasn't smiling anymore.\n\nThe man in front of him should have been dead long ago, but after the initial exchange, the young mage had fallen into a rhythm where it seemed like he was deflecting the slaver's attacks with as little effort as possible.\n\n\"Tell me something Kogen,\" that Kal was able to speak in the middle of the fight seemed to infuriate the large man, \"you are fast and strong,\" their weapons came together with a ring of metal on metal, \"but how long can you keep that up for?\" As the mage finished speaking his eyes began to glow bright blue and another teal-colored rune lit up on his vambrace.\n\nThe leader of the slavers pushed the younger man away, taking a step back himself. His fights didn't usually last this long and he hated to admit that he was getting winded. Meanwhile, his opponent didn't even appear to be breathing hard. He needed to finish this quickly or the boy would simply outlast him.\n\nSteel rang on platinum once again as Kogen charged in, pushing himself and his armor as hard as he ever had. Within seconds he could tell that something had changed. Before the mage had been deflecting the flurry of attacks, now he seemed to know what direction they would come from before he even began the motion. He was going to lose this fight.\n\nThe slaver's sword came down on Kal's staff in a blow heavy enough to make the mage wince. When he looked back up, Kogen was gone.\n\n\"Kal! The girls!\" screamed Ria.\n\nLooking in their direction he saw the leader of the slavers just hitting the ground and bolt towards Daxas and her pack. Kal swore as he realized Kogen had used that last swing to launch himself at the women. The speed rune glowed white as he ran after the slaver but the mage quickly realized that there was no way he could overtake the armored man in time. The girls had no weapons to defend against Kogen's sword, he was going to watch this man cut down every one of them.",
        "The wolf girl came to the same conclusion and ordered the others to run, Alina refusing to obey and standing there with her alpha, snarling at the man rushing toward them.\n\n\"Run!\" Kal screamed at them. He needed to get something in between them before Kogen got there. His eyes flicked back and forth over the stretch of road but there was nothing there he could make a barrier out of and the nearest stone was the bedrock far below.\n\nKal skidded to a halt, yelling for the girls to flee once again as his magic reached out beneath the dirt and rocks and found a section of bedrock right in front of the two women. With a yell he lifted, the strength rune shining white and the leather vambrace starting to sizzle and pop. As the wall of rock rose to the surface it began to feel strange, like it was trying to slip through his hands.\n\n\"Dax! Run!\" he screamed. Panic seeped into his voice as images of the glowing rings on the mountainside as Gerda taught him geomancy and the fused quartz windows Bas had made for Ikuno's bath sprung into his mind.\n\nThe wolf girl's eyes flicked to Kal. The mage was doing something, and he looked terrified. \"Run,\" she commanded Alina with all of her power as an alpha. This time the girl shifted and ran full-bore down the road, Daxas right behind her.\n\nKal screamed in pain as he pulled more power from one of his crystals and poured that into the rune as well, the strength rune burning completely through the leather and charring his skin. Gritting his teeth, he kept lifting; the slaver was about to make it past the wall he was trying to raise.\n\nKogen heard the anguish and pain in the mage's voice as he called out to the bitches and smiled, this little fucker might beat him in the end, but he was going to watch all of his precious women die first. He started laughing when he got closer and noticed the way the wolf and black-haired dog girl's bellies stuck out slightly.\n\nThe ground in front of the slaver erupted and a wall of searing orange fluid rose up in front of him. Unable to change direction, he went barreling through the molten rock, screaming as he lost his footing and bounced down the road.\n\nKogen's armor worked on a simple premise. Damage was spread out over anywhere the armor covered. This usually served him well as a blow from a mace would feel like a light punch over a larger area or a fatal sword slash may result in dozens of tiny cuts that barely break the skin. Now, almost half of his armor was covered in melted bedrock that was only starting to darken and form a crust. The slaver screamed out the word to remove the armor then lay on the ground in agony once it had released him. A hand that was already red and starting to blister reached into a pouch and pulled out a small glowing bottle. Whimpering with pain, Kogen popped the cork out and downed its contents, the healing draught soothing him as it went to work.\n\n\"Spear,\" heard the slaver a moment before feeling a sharp point under his chin. Opening his eyes, he saw the mage standing down by his knees holding a spear with one hand, the butt having the same gold endcap as the man's staff. He was cradling the other arm and his vambrace sported a charred hole where the red rune used to be. Flickers of white light occasionally reflected off the inside of his cloak as the wind moved it.\n\nKogen chuckled, \"Had to summon the fires of hell just to stop me. Even though I lost, that's something to be proud of.\"\n\n\"You're pretty calm for someone with a spear to their neck,\" said Kal using the tip to push his head back.\n\n\"You didn't kill any of my boys, seems you aren't the killin' type. That's half of why I'm here, must be running a shoddy business if someone can walk out with my stock and not have to take out a single one of my men. You fuckers could have slit everyone's throats and thrown us into the river then taken your time leaving. Instead, you made me look like a fool. No, I'm not worried you are going to kill me.\"\n\nDaxas walked up and stood on the other side of the slaver from Kal. Alina and a couple of the others were out in the woods calling for two that had run at Dax's order and kept on running.\n\n\"You're done hunting us Kogen, I suggest you find a different profession as well,\" said Kal.\n\n\"Can't, won't let me back into town without your head,\" replied the slaver.\n\n\"Then set up shop in a different town.\" Kal let the man tilt his head back down.\n\nKogen grinned, \"Might do that, I hear Lantaris is pretty in the fall.\"\n\n\"Kelthor and I figured it was you and your pet wizard that broke his wards.\"\n\n\"Aye, and look where it got me. I can't stop, but I'll give you a head start of a couple of weeks.\"\n\n\"You're an idiot, if I see you again you won't walk away. I won't say I'll kill you, but you may wish I had.\" Seeing the determination in the man's eyes, the mage sighed, \"One month, and you come after me, not the girls.\"\n\n\"You're the one with the spear. I'll agree to...\"\n\n\"Why were you laughing?\" interrupted Daxas.\n\n\"What?\" asked Kal, looking at her.\n\n\"As he was running at us he started laughing. I want to know why,\" she said without taking her eyes off the slaver. Kal had never seen this particular expression on her face before and was very glad it wasn't directed at him.\n\nInstead of answering Kogen gave her a grin full of malice and looked down at Daxas's belly.\n\nDax put her hand on the golden endcap and pushed.\n\nAs Kal stared in shock at the place where his spear entered the man's skull, the wolf girl stepped up and spit on the corpse's face.\n\n\"You don't get to laugh about killing our daughter and live,\" she said before walking off to collect the rest of her pack."
    ],
    "authorname": "BluDraygn",
    "tags": [
        "magic",
        "monster girl",
        "monstergirl",
        "oral sex",
        "sfts",
        "trc",
        "non-human",
        "nonhuman",
        "oral"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/trc-searching-for-the-sky-ch-06"
}