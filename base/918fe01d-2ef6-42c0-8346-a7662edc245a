{
    "title": "A New Way of Seeing Things Pt. 02 Ch. 20",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\n. \n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental.\n\n*****\n\nThe pace of life only quickened in the weeks after Thanksgiving. Gwen was scheduling more appointments to make the new truck and Andrew's pay raise profitable, and the resulting paperwork as well as preparations for the holidays left her with very little spare time. Natalie had many of the same obligations her sister-in-law did, making their Friday rides temporarily unworkable. They still talked on the phone and saw each other at various holiday functions, but Gwen found herself missing their alone time, much to the Lady's disgust. \n\n\"Hey, I'm taking the late, late shift Saturday night and Sunday morning,\" Natalie told her sister-in-law during one of their catch-up calls. \"I'm gonna do some Christmas shopping at the outlets down in Camilla before I go in. Wanna come with me?\" \n\nThe Lady groaned. So much to do around the house, and getting out of the office has gotten almost impossible...out of the question. \"Sure, why not!\" Work be damned, Gwen was not going miss a chance to spend some time with her. \n\n\"Great! Come on over about 8. You can leave your truck here and we'll take my car.\" \n\nThere's going to be a lot of late nights and early mornings catching up, the Lady huffed, but knew the cause had been lost.\n\n\"Oh, and Gwen? Wear a skirt. Above the knee. The top is up to you.\"\n\n\"Why?\"\n\n\"Just do it. See you Saturday.\"\n\n***\n\nGwen pulled into the driveway right on time Saturday morning. Stepping down from her truck, she smoothed the skirt she had selected to fulfill Natalie's directive, one of the ones from her summer shopping excursions. It felt short and a bit too revealing, but her sister-in-law had not given her much choice, and it really didn't cause her as much discomfort as it might have just a few months ago. A long-sleeve blouse, sandals, and sensible underwear completed her outfit. \n\n\"Gwen honey! Come on in!\" Natalie called from the doorway. Her own skirt was just a fraction shorter than her sister-in-law's, but it somehow seemed more daring when paired with a tank top and knee-high black boots. \n\nThe women hugged their greeting. \"Are Adam and the kids here?\"\n\n\"Your brother's at the office finishing up some paperwork. He'll be back in a bit. Tyler and Annie are still asleep. They both should be getting up soon. Annie's going to work in a couple of hours, and Tyler's got a basketball tournament over in Sasser, so Adam's taking him. C'mon in!\" Natalie led the way through the living room and on into their first floor bedroom. Gwen followed, a little confused and concerned as to why they were in this part of the house, particularly with her niece and nephew upstairs. \"You follow directions well,\" her sister-in-law continued, motioning to Gwen's skirt before reaching for and undoing the top button of her blouse. \"Looks like a nice bra under there. Whatcha got on for panties?\"\n\n\"Natalie! Not now! What if the kids come downstairs?\"\n\nHer sister-in-law laughed. \"Relax. I don't want you to get naked. Besides, they are not exactly light-of-foot\u2014you'd hear them clomping around up there. Anyways, they never miss a chance to sleep in.\" She reached under her skirt and pushed a lacy thong down to her ankles, carefully untangling them from her boots before flipping them on the bed. \"Your turn.\"\n\n\"You can't be serious? We wouldn't have time to get dressed even if we did hear them up there!\"\n\n\"That's all you have to take off. We're going shopping. Our undies are staying here. C'mon, live on the edge a little!\"\n\n\"Are you crazy? The stores will be packed!\"\n\n\"So keep your legs closed when you're on Santa's lap. C'mon, lose the panties!\"\n\nGwen eyed her doubtfully and nervously checked the hallway before reaching under the fabric and shedding her cover. \n\n\"Well, at least they're not grannies,\" Natalie observed with a smirk. \"My, how far we've come. Leave 'em on the bed with mine.\"\n\n\"I'll take them with me and leave them in the car, just in case.\"\n\n\"Leave 'em here,\" Natalie insisted. \"You can pick 'em up when we get back.\"\n\n\"But somebody might see them here, and what if I need them?\"\n\n\"You won't need them, and they'll just think they're mine.\" Natalie wondered if that was quite true. Annie would guess they were still a little too conservative for her mother\u2014they did enough laundry and raided each other's lingerie drawers to know the other's tastes\u2014and she wondered if Adam knew her preferences as well. He certainly was very attentive when she was taking them off...\"Leave them.\"\n\nShe groaned and laid them on the bed. \n\n\"You can keep the bra for now,\" her sister-in-law teased. \"Ready?\"\n\nGwen spent the next 3 hours in a delicious mix of emotions, her bare sex wet at the thought of being so close to on display for the unsuspecting holiday shoppers while she nervously anticipated the moment Natalie might decide the bra had to be surrendered as well. Her sister-in-law seemed to have forgotten all about their not-completely clothed state, however, searching for the must-have items she had listed on the drive down. \n\nNatalie stopped short in front of a shoe store. \"You like my boots?\"\n\nGwen looked down, then back at her fellow shopper. \"Yes, they're very nice.\"\n\n\"Adam likes it when I wear them...and nothing else,\" she said mischievously. \"Do you ever wear your riding boots for Tim? Maybe pair them up with a riding crop?\" \n\n\"I've never worn them for anything but riding,\" Gwen mumbled, looking around nervously for eavesdroppers. \"And what would we do with a riding crop?\"\n\n\"Aren't they for getting whatever you're riding moving faster?\" Natalie asked with a raised eyebrow and a knowing smile. \"C'mon,\" she said, taking Gwen's arm. \"You should try on some boots.\" \n\n\"I've got riding boots,\" she protested, but allowed herself to be led in anyways. Natalie plopped her down on a bench, Gwen carefully keeping her knees together while her sister-in-law attracted the attention of a young clerk. \n\n\"Excuse me, sir? My friend would like to try a pair of these\u2014\" Natalie grabbed a black vinyl model and offered it up. \n\nThe clerk took the boot and smiled politely at Gwen. \"Of course. What size and width would you like?\" \n\nShe looked up at the young man, his close cropped blonde hair matching his trimmed beard. \"Uhh, 5 I guess? Normal width?\" \n\nThe clerk replaced the sample and hurried away \"Nice ass,\" Natalie whispered in Gwen's ear, and she was compelled to look and agree. He returned shortly, putting the box on the bench by Gwen's side and waiting for her to try them on. \n\n\"Excuse me\u2014be right back,\" he offered as she took the first boot out, hurrying off towards another customer without waiting for a reply. \"Damn nice ass,\" Natalie again murmured in her ear as Gwen struggled to get her foot in. \"Wonder what the other side looks like filled out some. When he comes back, ask him to check the fit. Don't keep your legs together so much. Let's see if we can help him stand up a little.\"\n\n\"I can't\u2014\"\n\n\"Just do it. He won't mind.\" Natalie straightened and pretended to look at another pair of boots as the young man returned. \n\n\"How's the fit?\"\n\n\"I'm uh, not sure, especially in the toe...\"\n\n\"Let me see.\" He kneeled and Gwen moved her leg toward him a little more than necessary while keeping the other still. \"It feels like you have a little room at the end,\" he said, pushing a thumb into the pliant material, \"is it tight on the sides?\" The clerk's eyes came up to meet Gwen's but stopped at the dimly lit passage formed by her slightly-spread thighs. He had become practiced at this move, checking skirts and shorts for anything that shouldn't be seen, even succeeding a few times before reminding himself to focus on the job at hand instead of the prospect of seeing an attractive MILF's underwear.\n\n\"Maybe a little.\"\n\n\"Okay, so sounds like the size is good, but maybe a wide instead of a normal?\"\n\nGwen looked up at Natalie for direction while the young man risked another look under her drawn-up skirt, certain her panty-covered pussy would be plainly visible if only thighs were spread a little ...\n\n\"Wider,\" the well-built blonde suggested. \n\nThe young man looked up in panic. \"I'll, uhh, go get the same size in a wide,\" he stammered, quickly standing and hurrying away, thankful to have avoided the potential unpleasantries of getting caught ogling a treasure cave.\n\n\"You certainly got someone's attention,\" Natalie murmured. \"Why don't you reward this nice young man for his efforts and give him a better look?\"\n\n\"You're crazy!\" Gwen hissed as the clerk hurried back, but her left foot moved even further in his direction. \n\n\"5 wide,\" the clerk announced, quickly kneeling at her feet to help, all of the other customers now forgotten. \"I'm surprised the 5 normal didn't fit, though. You seem to have such delicate feet. They must make this boot narrow.\"\n\nGwen continued to move her leg further away from the other as she pretended to struggle while sliding her foot into the vinyl tube, wondering how far would be enough to satisfy Natalie without making her intent obvious to the young man at her feet.\n\nNatalie stifled a chuckle as the clerk discretely glanced between his customer's spread knees while bending to check the width and length of the boot's toe. The young man briefly hesitated before daring to put a finger inside the top of the boot to check for the fit there, casually hooking his finger inside the cuff and tugging the leg inside further away from its partner. \"How's that feel? It won't chafe against your calf?\"\n\n\"Umm, good, I guess...\" Gwen looked up at her sister-in-law for further direction while the clerk again took her distraction as his opportunity. The light was dim under her skirt, but there was enough to see all the way to the junction of her thighs. It took his brain a second to accept the fact he was not looking at a swatch of fabric, but rather a bare cleft crowned with a tuft of hair pouting back at him. He stared for several seconds before tearing his eyes from the display and looking up at the blonde standing behind the seated woman. \n\nNatalie smiled down at him and winked. He blushed furiously and began to intently repack the first box as his tormentor continued to look at him while addressing the woman he was kneeling before. \"I don't know...I think shiny vinyl makes you look like a cheap hooker. And you're definitely not cheap. Polished black leather is probably more your style. Much more elegant and serious. And like you said, you already have riding boots and a matching crop, so maybe those would be better for whatever you're riding.\" \n\nGwen's cheeks quickly matched the complexion of the young man at her feet. The crop was her idea, she wanted to retort to the clerk, but managed to limit her response. \"Thank you for your help,\" she stammered, attempting to remove the boot while closing her legs. \"I think that will be all.\" \n\nThe clerk struggled to his feet and furiously began shuffling boxes. \"Uh, thank you very much for coming in,\" he said, not looking up. \"Hope to see you again.\" The young man finally glanced up at Natalie, wondering if his indiscretion was to be made public. She winked and smiled again, making his cheeks turn crimson. \n\nNatalie held her laughter until they were safely in the car. \"That was so hot! I can't believe you did it!\" \n\n\"Well, you said I should,\" Gwen countered defensively. \"And I doubt he even tried to look. He seemed like such a nice young man. The last thing he probably wants to see is an old woman's privates.\" \n\n\"Okay, a few things,\" Natalie managed to get out while still laughing. \"First, he looked. He got a really good look, and probably would have kept looking if he hadn't gotten scared that one of us was going to bust him for looking. Second, he's a guy, and even nice guys will do crazy things to get a peek in the cookie jar. They're hard wired to do that and you know it. Third, you're not old, and you have the pussy of a twenty-year old. That guy is probably going to get all sorts of stroke mileage out of yours.\" \n\nNatalie waited a few miles before speaking again. \"You did like it, right? I mean, it's not the first time you've shown off for a guy.\"\n\n\"I don't show off! I just, uhh, give a peek sometimes. And every time I do I end up feeling really guilty. It's wrong to do that. It's so perverted, not normal.\"\n\n\"You say perverted like it's a bad thing. I keep telling you, normal's whatever you decide normal is. If it's fun and isn't hurting anyone else, then go for it! I don't think Mr. Shoe Salesman minded in the slightest! A nice way to break up a day of whiny customers!\"\n\n\"I'm not so sure. Part of me still has a hard time with doing things like-that.\"\n\n\"Then we're making progress!\" Natalie laughed. \"Last spring, all of you would have had a hard time with that!\"\n\nThey drove on for several more miles in silence, Gwen lost in her thoughts, the Lady steadily losing ground to the Slut's arousal-fueled imagination.\n\nNatalie seemed to read her mind. \"Did it make you horny? I know how I get when I do stuff like that. Hell, you were the one showing off and now I'm all worked up.\"\n\n\"A little,\" Gwen admitted. \"So if it gets you excited, why didn't you, um, try on some shoes, too?\"\n\n\"I thought about it, but I was a lot more fun watching you. Guess I'm an exhibitionist AND a voyeur.\" \n\nGwen turned to the driver, her excitement overcoming her inhibition. \"There's something I wanted to ask you.\" \n\n\"Of course. Shoot.\"\n\n\"When you and Adam do it...well, you know, him from behind, do you like it?\"\n\nNatalie smiled. \"What, doggystyle? Hell yeah! I love a good pounding sometimes, and he really gets some leverage that way.\"\n\n\"No, I mean...\" Gwen could feel the blush heating up her cheeks again\u2014\"when you let him in the other way.\" \n\n\"Ohhh, that. Well, it's not my favorite, but he really seems to like it, so I'm happy to oblige him from time to time. Makes a great stocking stuffer coupon.\" Natalie grinned, still looking ahead at the traffic. \"That's quite a leap from giving a guy a little look. Why do you ask? Is Tim asking to come down the back chimney for Christmas?\"\n\nGwen dismissed the image of Jason preparing Alison for his invasion, only for it to be replaced with another of her naked brother pushing his way into Natalie. \"No, he hasn't asked for that. I just got to wondering what the big deal is? It doesn't seem like it's very pleasant for the woman. Does it really feel that much better than normal intercourse for a man?\"\n\n\"It's probably tighter back there than your average cooch, so there's that, but I think for the guy, it's the idea of what they're doing more than actually doing it\u2014it's like they're doing something they shouldn't be, like they're getting away with something, I think. Anything that isn't straight baby-making missionary is kinda exciting cuz' it's not considered proper, so the farther from the norm it is, the wilder it is. And I have to guess putting their dick in there is pretty high up the restricted list to them. Don't get me wrong\u2014some women like it. I know Liz is a fan under the right circumstances. Other women like it some, and some don't like it at all. Me, I'm okay with it\u2014I just pile up some pillows and make myself comfortable, put a vibrator under me, sometimes a dildo in the more traditional place, and let Adam go to town. I've got him pretty well trained not to get too energetic. And yeah, I gotta admit I get a kick out of doing something high on the naughty list, too. Between the vibrator and the dildo and Adam enjoying himself I usually come without too much problem.\"\n\nGwen pondered her sister-in-law's words, turning them over in her mind, remembering the buzzing noise in Alison's video. Was the vibrator trick something women just knew? She certainly wouldn't have thought of that. \"Did you ever do it with someone else?\"\n\n\"No, your brother was the first and still the only. I mean, my girlfriends and I played around back there every once in a while, but nothing bigger than a finger. Liz will have me put a vibrator back there on her from time to time, but I haven't asked her to return the favor.\"\n\n\"So how did you start doing it...that way?\"\n\nAdam asked if he could one night, but I put him off until I was comfortable with idea and was fairly sure I could take him without being miserable. So, I started practicing, getting used to it.\"\n\n\"How in the world do you practice something like that?\"\n\n\"I asked Liz, and she told me to get a spreader and start with that, to get used to having something back there\u2014sorry, most people call them butt plugs, but I like spreader because that's what I imagined it was doing. She helped me pick one out and did the honors for me the first time I tried it. It wasn't that bad\u2014just need to use plenty of lube.\"\n\nNatalie continued to speak, her eyes still on the road. \"'Lube and patience are even more important when you're trying to put the real thing back there. I remember in college one of my roommates had her boyfriend in her bedroom. They were going at it and she had been letting him work a finger in back there. Well, he decided that if his finger fit, so would his dick, so he tried a sneak attack. I guess he made it far enough to hurt and she let out a scream like she was being murdered! We heard every word of what she was yelling at him about, and then 5 minutes later he had to do the walk of shame past us out the door. So, if Tim's not looking for another way in, why the sudden interest in the back passage? Are you thinking about experimenting a little?\"\n\n\"No, no,\" Gwen said emphatically. \"I just, umm, overheard someone talking about it and wondered what all the fascination with it was.\"\n\n\"Let me guess\u2014one of your employees, right?\"\n\n\"Yes,\" Gwen lied.\n\n\"Of course it was. Told you, guys are fascinated with it. It's like some sort of men's badge of honor to put it in your girlfriend's ass. Aaand, we're home.\"\n\nNatalie pulled into the driveway and shut of the engine. \"C'mon in. I got something to show ya.\"\n\n\"Just for a minute,\" Gwen said, unbuckling her seatbelt, wondering if the conditions were right for perhaps more than a minute. \"I have to collect my underwear anyways, remember?\" \n\n\"Oh, I haven't forgotten. By the way, Adam texted me\u2014Tyler's team keeps winning, so they'll be at the tournament for a while yet,\" Natalie said over her shoulder as she led the way to the bedroom. Gwen saw her panties lying on the bed, but not where she had left them that morning, her pair now to the right of Natalie's. She wondered who had moved them and why while Natalie opened the hope chest at the end of the bed. \n\nGwen glanced at the contents of the chest and could plainly see several vibrators and dildos as well as other paraphernalia inside. \"You keep your things there?\" \n\n\"Sure,\" Natalie said, taking out a small purple velvet bag. \"Easy access when wanted.\"\n\n\"Aren't you worried Annie and Tyler might find them?\" \n\n\"We used to put them on the top shelf of the closet,\" Natalie replied, \"But once they got old enough to stand on a chair, we thought that was dumb and just told them not to snoop if they didn't want to find things they didn't want to see. They probably did anyways, but they don't seem too emotionally scarred. We don't flaunt it, but I'm sure they've guessed Mom and Dad still have an active and varied sex life.\" \n\nShe opened the bag and let what appeared to be a stainless-steel tulip bloom with a glass drawer pull on one end slide onto her palm. \"My first spreader,\" she announced as she offered it to Gwen. \"It helped me get brave enough to take bigger things. Here, take it\u2014don't worry, it gets thoroughly cleaned after each use.\"",
        "Gwen delicately grasped the object between two fingers, surprised at how solid and heavy the object was. \"Do you still use it?\"\n\n\"Sure! Change of pace, you know? I've worn it to Sunday dinner at your parents,\" she said with a sly grin. \"There's a special thrill to listening to your mother rant about the loose morals of the young people at the firm while her own daughter-in-law is standing in front of her wearing a butt plug.\"\n\n\"You can't be serious! I never knew! When!? Were Tim and I there?\"\n\n\"A few times, and yes, you were there. Of course you didn't know. No one ever knew. Well, except for Adam. I'd tell him before we left the house. It really turned him on.\" \n\n\"But isn't it uncomfortable?\"\n\n\"Not really. Other than a tickling sensation against your asshole, you kind of forget it's there after a while. When you get one, make sure it has a handle or something like that, something to keep it from sliding all the way in. You want a way to pull it back out. You won't believe how many people who come into the emergency room with something stuck up there. We had a guy come in with a Barbie head stuck up there once\u2014he pushed poor Barbie in up to her skinny little waist and her head snapped off her body.\"\n\n\"Incredible,\" Gwen said breathlessly, gingerly turning the plug over while she examined it. \"But that won't be a problem for me. I'm very sure this is not on my Christmas wish list.\"\n\n\"You sure? You might like the results. I'll bet Tim would.\" Natalie held it by the base and presented it to Gwen. \"Want to try it?\"\n\n\"Thanks, but I'm not putting that in me. A little too scary.\"\n\n\"The woman who is fearless around lawyers and one-ton animals is scared of a little metal fill-me-up? Try it now, and if you're not completely satisfied, return it in thirty days for a complete refund. Get undressed and I'll help you.\" \n\n\"Most riding horses don't weigh a ton,\" Gwen sniffed. \"Besides, I'm sure Adam and the kids will be back soon, and that seeing that would definitely scar all of them.\"\n\n\"Adam and Tyler are at the tournament, and Annie's working. You'll be home before they're back. C'mon, you're going to do this.\"\n\nGwen groaned and began removing her shoes. What was it, she wondered, that made her feel the need to treat Natalie's requests as commands? She had never been one to accept dares or do what \"all the cool kids were doing;\" she could say no at any time, call a halt to the game, go home and have proper marital sex with her husband to relieve the itch. The desire to give her sister-in-law this control was troubling, exciting, and strangely liberating. \n\nNatalie grinned. \"Be right back,\" she called, hurrying to the bathroom, returning as Gwen was undoing the clasp of her bra. The skirt was next and she stood there naked. Her nudity next to her sister-in-law's still-clothed state removed any last sense of control over the situation.\n\n\"Aren't you going to get undressed, too?\"\n\n\"Maybe in a minute. Get on all fours on the bed,\" Natalie quickly directed. \"Point your ass at me where I can reach your butt.\"\n\nGwen propped herself on hands and knees, her legs spread slightly while her pert breasts hung beneath her. She felt somewhat ridiculous in this pose, but could also feel the surge of excitement at being displayed much like she was in her dreams.\n\n\"Head and shoulders on the bed, put your ass high in the air like Tim's about to plow you good.\" The naked woman assumed the pose, laying her head on the comforter in such a way that she could still see what was going on behind her out of the corner of her eye. \"You've got such a cute little asshole,\" Natalie giggled, and Gwen startled at the feel of a finger gently circling it. \"Sorry, didn't mean to surprise you like that,\" she continued, her voice taking on the soft reassuring tone of a caring nurse. \"I'm going to apply some lube first. It might feel a little cold, but it'll warm up quickly. Ready?\"\n\nGwen nodded and the first squirt of oil landed squarely in the valley between her spread cheeks. The feeling was not unlike what she imagined Tim's ejaculation might feel like if it were chilled rather than scalding hot, and the liquid warmed as quickly as her husband's semen cooled. \"I'm going to spread it around some,\" Natalie quietly announced, and the finger began to push the slick rivulets towards her crinkled muscle. \"Try to relax and not tense up.\" A finger began to push ever so gently into her passage, meeting the same resistance it had that time Natalie had inserted it in the shower, the lubrication easing the way now as the soap and water had then. The finger retreated, gathering more oil, then returned. It didn't stop at the first knuckle this time like that day in the shower; instead pushing slowly until the knuckles on either side of the digit pushed against the flesh of her cheeks. Gwen felt herself gripping the intruder tightly even as it began a slow back and forth motion, trying to close and return to its normal state. After a moment, the finger withdrew and Gwen could see her reach for the shiny cylinder.\n\n\"The lube might get a little messy the first few times you use it, until you know exactly how much you need. I don't use much at all any more. And it doesn't hurt to lube up the spreader too, at least until you get used to using it,\" Natalie advised softly. \"Either way, hold it in your hand for a little bit to warm up the metal before putting it in. You ready?\"\n\nGwen nodded again, closing her eyes tightly against the expected shock. She felt the rounded tip of the invader pressed against her ring. \"Stop! Wait!\" she cried, still squeezing her eyes shut in an effort to gird herself against the pain. \"Go slow, okay? And you'll stop if I tell you to?\"\n\n\"Slow. Stop. Got it. Ready?\" Natalie answered in her best 'this won't hurt a bit' voice. She took the lack of a response as a yes and began to push again. \n\nGwen could feel herself being stretched open\u2014spread'er, get it? The Slut chose this time to joke\u2014past the point where her muscle had flexed to accommodate Natalie's finger. She imagined it looked just like what she had seen on the video, her own puckered ring expanding every bit as much as her daughter's had. She continued to open and accept the tapered intruder as it flared towards it maximum circumference. It wasn't unbearably uncomfortable yet, and she wondered how much more she would allow herself to be stretched before calling a halt. Gwen knew her son-in-law was bigger than the thing in her now\u2014how had Alison done it? And then her rosebud contracted, sliding slid down the other side of the bulb to clench around the narrow base supporting the drawer pull. \n\n\"It's in,\" Natalie announced. \"How does it feel?\" \n\nGwen could feel a washcloth cleaning up the excess oil, Natalie brushing up against the knob protruding from her and exciting the nerve endings of her rosebud. \"Alright, I guess. It's hard to believe anything bigger would ever fit, though.\"\n\n\"Bigger things do fit,\" Natalie corrected, \"there are some guys I was with before your brother I would not in a million years let anywhere near my ass. But, Adam's just about average, according to the studies. So he gets to visit from time to time. Tim's about average, right?\"\n\n\"I don't know, I guess,\" Gwen admitted. \"What's average?\"\n\n\"How long is he?\"\n\n\"He's never told me.\" \n\nNatalie laughed. \"Oh, never trust a guy to tell you the truth when it comes to cock size. If you want to know, you've got see and measure for yourself. There are definitely some guys that could give our dildos a run for their money, but they're pretty rare when compared to the average man's dick.\" Gwen twitched as a finger was slowly drawn down her sex and over her clitoris. \"Wow, you're really wet.\" Natalie playfully slapped the naked rear. \"Get up. Take it for a test walk.\" \n\nGwen gingerly eased off the bed and stood, unsure what to expect. She definitely knew there was something in her, but it was not painful, and not uncomfortable to the point of wanting to pluck the intruder from her clenched opening. It certainly didn't feel like it had any intention of falling out on its own...Her first steps towards the bathroom were hesitant, both for the feelings they might produce as well as the idea of being on display for her sister-in-law. The movement produced an almost pleasant tickling sensation, \n\n\"If Mr. Shoe Salesman could see you now!\" Gwen reached the bathroom door and turned, Natalie still watching as she casually stripped. The blond flopped chest-first on the bed after grabbing a bright-green rabbit vibrator from where it was stored.\n\n\"Feel alright?\" she asked, looking up at Gwen with a grin. \n\n\"I guess,\" Gwen admitted. \"Can I take it out now?\" \n\n\"Leave it in a little while, see how long it takes you to really get used to it. C'mon, lie down for a bit.\"\n\nGwen cautiously climbed on the bed, stretching out even as Natalie reversed positions so her head was at Gwen's feet. \"Lemme show ya how Liz helped me like it better,\" she said with a giggle. Sit on my chest.\"\n\n\"Like the way we are now?\" Gwen asked, raising her head to look past the face at her feet and to the open door beyond. If anyone came home now and saw this...she shivered at the thought. \n\n\"Yup.\" She lightly patted her flattened mounds of breast flesh. \"C'mon, up you get.\" \n\nShe hesitantly put her leg over Natalie, holding back from settling her full weight on her sister-in-law's chest. Natalie lightly pushed Gwen's shoulder forward until she was on all fours over the body below her, her sex close enough to the prone woman's face to feel her breath against her wetness. She was able to see her sister-in-law's cleft below her, and she took Natalie's push as a cue to dip and kiss it. \n\nHer movement was blocked by a forearm against the front of her thigh, pulling her back until a pair of lips kissed her sex, followed by a tongue gently dragged along its slit. The tongue retreated and the vibrator was pressed against her opening. Gwen could swear she could feel the buzzing length slide along the spreader as it entered, the two separated by only a thin layer of tissue, making the stainless steel vibrate.. The ears of the rabbit made contact with the skin separating her two openings and the tongue returned, teasing and tickling while fingers gently toyed with the spreader, rotating it in place and sliding it in and out. Gwen shivered at the vibrations of the rabbit through the metal bullet as Natalie withdrew it a bit to open her rosebud and then let it swallow it again to recapture the stem. The assault on the nerve endings of her clit and both holes was too much to bear for long. \n\nShe came, dimly aware of grinding her crotch into Natalie's face before her arms gave out and she collapsed on the body beneath her, her cheek resting on her sister-in-law's mons. She was coming to her senses as the vibrator was being pulled out, the buzzing head dragging along the short length of the spreader one more time as it withdrew. She again trembled at the sensation.\n\n\"Sorry,\" Gwen apologized, raising her head and mustering the strength to push herself off Natalie's midsection. \"I must weigh a ton.\"\n\n\"You're light as a feather compared to some bodies I've had on me. But as long as you're there...\" two fingers delicately pushed on the back of Gwen's head while the legs below opened wide to present the glistening lips at their junction. \n\nGwen used her returning strength to shuffle forward just a bit to improve her angle of attack as well as remove her own crotch from Natalie's face. Gwen could still feel the woman's breath on her wet sex as she began to push her tongue into her sister-in-law's folds, excited by the taste of her slick arousal. The feel of Natalie's hand brushing her thigh as she fondled her own breast did not startle her, but she was surprised and pleased by the other hand again toying with the spreader still in her. She continued to kiss and lick until the woman beneath hugged her tightly to her body and moaned out her orgasm. \n\nThe two women were having a glass of wine at the kitchen table when Adam and Tyler returned. Her husband's senses alerted to something familiar, yet somehow different as he bent to kiss his wife. Familiar became plain to him after he planted a light peck on Gwen's cheek and picked up the scent of his wife's arousal. Adam looked across the table to Natalie with a questioning look, to which she replied with a smile and a shrug.\n\nThe scent was fainter but still there when Tim kissed his wife upon her return home that afternoon. He too had trouble consciously identifying it, but his body had no such problems and reacted by calling his cock to stand-by mode. The rest of his brain quickly caught on, the thought of the likely method by which she had obtained the heady perfume fueling his lust.\n\n\"Good day shopping?\" he asked, taking her in his arms, bringing the intoxicating aroma close again. \n\n\"Mm-hmm.\"\n\n\"Did you two, uh, do something after?\"\n\nGwen looked up at him, knowing that he knew. \"Yes. Sorry. We, umm, well, you know...\"\n\n\"You don't have to apologize,\" he said as his hands found her rear end and gently squeezed. \"Just wondering if you might have something left for me?\"\n\n\"I will always have something for you,\" she said firmly, looking up at him, her eyes clearly communicating the seriousness of her words. \"You can have whatever you want, whenever you want. \"Just tell me what you want and I will do it.\" \n\nTim chuckled, unsure what that all meant exactly. He decided to figure it out later and settled on what he wanted right now. Callused hands began to pull the skirt up so he could make better contact with the ass beneath. \"Well, now that you mention it...\"\n\nGwen gently pushed away from him. \"Just let me use the bathroom first, okay?\" She hurried down the hall and into the master bath without waiting for answer, quietly closing the door behind her. She pushed her panties off for the second time that day, then bent over the vanity and gingerly removed the stainless steel bulb she had carried home inside of her at Natalie's insistence. It was thoroughly cleaned then stored safely out of sight in her travel toiletries bag before she stripped down to bare skin and returned to the kitchen. \n\n\"Sorry about that,\" she asked, turning the corner, \"so, what can I do for you?\" \n\nMuch to Gwen's pleasure, Tim did not ask politely."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "masturbation",
        "flashing",
        "upskirt",
        "buttplug",
        "lesbian",
        "oral",
        "anal"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-02-ch-20"
}