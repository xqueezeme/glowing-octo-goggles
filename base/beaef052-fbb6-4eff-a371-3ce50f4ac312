{
    "title": "South Mountain Pack Ch. 12",
    "pages": [
        "I would like to thank hcsd1719 for his help in editing and offering encouragement. Again, there are no actual sex scenes, since the main characters are underage. All italics indicate communication through the mental bond.\n\nThe complete list of Pack members is on the blog, but if anyone would like an excel spreadsheet of the 'cheat sheet' of Pack members, please send me an email and I would be happy to provide one for you. I would like to thank mrtdust1 for his invaluable help in putting the cheat sheet on an excel spread sheet that can be added to as details are revealed.\n\nPlease remember to vote and comment, I appreciate all comments and feedback. Thank you. \n\n\n\n\n\nForty minutes later Joe and Victor were pacing frantically back and forth in the waiting room of Doc's clinic while Annie and Alberto were in the examination room with Maria. Joe could feel his agitation rising with every step he took...that was HIS daughter in there and he didn't like the feeling of being replaced, pushed aside, usurped by that...\n\n\"Joe, your daughter wants to see you,\" said Doc motioning for Joe to follow him.\n\n\"About fucking time somebody remembered I was here,\" muttered Joe angrily as he hurried after Doc. \n\nVictor sat in one of the hard-backed chairs and said, \"Sal, we don't know anything yet, Doc just came to get Dad, Maria was asking for him. I'm really worried.\"\n\n\"You want me to come there? Everybody else went home, Madame Gina says they'll do the safe room tomorrow, but the family is here,\" replied Sal. \"Mom and Dad were waiting to hear from your parents.\"\n\n\"Maybe Aunt Rose, Uncle Frank and you,\" said Victor. \"I think Dad's about to lose it, when we were here in the waiting room, he was so angry I thought he was going to pop a vessel.\"\n\nSal quickly relayed the information to his family and before he finished his mom and dad were running out the door. \"We're on our way; see you in a couple of minutes.\"\n\n\"Sit down, Joe,\" said Doc as they walked into the large examination room. He nodded his head but first hugged his daughter and seeing her holding hands with Alberto, he felt the anger build up in him again as he thought that should be him comforting his daughter. Annie could feel her mates' agitation and gently rubbed his forearm to try and calm him down. \n\n\"I took three x-rays and they show Maria has a Class IV Monteggia Fracture and I recommend she have Open Reduction Internal Fixation Surgery,\" said Doc as he looked at Joe before pointing to her x-rays. \n\n\"Doc, I don't understand a fucking thing you just said,\" said Joe as he started getting upset again. \n\n\"Basically, the first break to her ulna wasn't fully healed and when she fell, the stress re-fractured the bone and caused the radius to fracture and dislocate at the elbow. I feel surgery to insert two titanium plates would give the bones extra stability while they healed,\" said Doc as he pointed at the x-rays. \"Once the breaks are fully healed, she would need another surgery to remove the titanium plates.\"\n\nJoe looked at his daughter who was hooked up to an IV and appeared to be resting and said, \"Can you do the surgery here?\"\n\n\"I could do the surgery Joe, but I've only ever done one like this before and that was in Med School,\" said Doc as ran his hand through his hair. \"I had Carlo contact Alpha Parr, their Pack has one of the best orthopedic surgeons on the East Coast and he's on staff at Johns Hopkins as well as Union Memorial Hospital. They are willing to send the Doctor here, so I can observe to remove the plate later.\"\n\n\"How soon can he get here?\" asked Joe as he winced when he saw Maria's face grimace in pain.\n\n\"Alpha Parr has a helicopter so they can be here in less then an hour,\" said Doc as he adjusted the drip on Maria's IV, and then was silent for several moments. \"Carlo said they'll be here in less then forty minutes, they left when he contacted them and they are bringing a surgical team with them. If you'll excuse me, I need to finish getting the operating room ready and then I'll come in and finish prepping Maria.\" He nodded at them and quickly left the room.\n\nJoe continued to stare at his daughter and then abruptly got up and left the room returning minutes later with Frank and Rose. He told them everything Doc had said and the two brothers stared at each other and Frank said, \"What do you need us to do? The youngsters are at the house with Ric, Rocco and Luc so they're fine.\"\n\n\"There's nothing to do, my baby's getting operated on and there's not a fucking thing I can do. I've never felt so damn helpless in my entire life,\" said Joe grabbing his hair as if he was going to pull it out by the root a handful at a time.\n\n\"Dad, I hate bothering you, but how's Maria doing?\" said Vin and Frank could hear the concern in his voice.\n\n\"They're getting ready to take her into surgery, we're waiting for the surgeon to arrive from Parr Ridge Pack and I have no idea how long the surgery is going to take,\" said Frank to the youngsters. \"She's on some pretty strong pain meds so she's pretty much out of it now.\" \n\n\"Do you need us to do anything, Dad?\" asked Vin worriedly. \"How are Uncle Joe, Aunt Annie and Alberto holding up?\" \n\n\"Your Aunt is calm, Alberto is holding onto Maria's hand with a death grip and your Uncle is losing his fucking mind,\" said Frank as he glanced at his brother who sat staring unblinkingly at Maria. \"I'll let you know what's going on as soon as we hear anything else.\" \n\nSeeing Maria grimace again, Joe jumped to his feet and ran to the door shouting, \"DOC, GET YOUR FUCKING ASS IN HERE NOW.\"\n\nDoc hurried in and immediately went to Maria's side and checked the pulse in her broken arm and the monitors before looking around and asking, \"What happened?\"\n\n\"SHE'S IN FUCKING PAIN, DO SOMETHING,\" shouted Joe as he waved his hands in the air.\n\nMaria exhaled loudly and said with her eyes closed, \"Calm down Daddy, you're making me more nervous. I'm okay, it just hurts when I move it when I'm sleeping and it wakes me up.\"\n\n\"Joe, I can't give her any more pain meds. I don't want them to interfere with the anesthesia,\" explained Doc while he checked the IV line again.\n\n\"Well, where the fuck are they? They should have been here by now,\" Joe said angrily as he waved his arms in the air again.\n\n\"It's only been twenty minutes Joe, they'll be here soon. Now I'd like everyone to leave the room, except for Annie and Rose. We need to start prepping her,\" said Doc in a firm voice.\n\nIf possible Joe got angrier and said, \"WHY ANNIE AND ROSE? WHY CAN'T I STAY? I'M HER FATHER DAMNIT, I WAS THERE WHEN SHE WAS BORN, I FED HER, I CHANGED HER, I TAUGHT HER TO RIDE A BIKE, WHEN SHE WAS SCARED AT NIGHT SHE RAN INTO MY ARMS, WHEN SHE FELL DOWN AND GOT HURT I KISSED HER BOO-BOOS AND MADE IT BETTER. SHE'S MY DAUGHTER FOR FUCK'S SAKE.\"\n\n\"Joe, you need to calm down,\" said Annie in a soothing voice as she rubbed her hands up and down his forearms.\n\n\"Fuck calming down, they're trying to take my daughter away from me,\" Joe said angrily as his claws started to extend. \n\n\"Joe, you're losing it baby brother. Nobody is trying to take your daughter away, they need to prepare her for surgery,\" explained Frank in a calm voice. \"She's a teenage girl, she'll be uncomfortable with you in the room when they undress her to put on a hospital gown and I'm sure you'll see her before the surgery.\"\n\nBefore Joe could reply, Carlo walked into the examination room and said in a calm firm voice, \"They'll be landing in fifteen minutes, Frank, Joe and Alberto will you accompany me outside? We need to check the helipad quickly to make sure it's safe for them to land.\" When Joe made no movement to follow Carlo's instructions, Carlo said in a firmer tone, \"JOE.\"\n\n\"Huh?\" Joe said as he looked at his Alpha, noticing him for the first time.\n\n\"He's losing it Carlo, look at his eyes,\" said Frank as he continued to stare at his brother whose eyes were flickering between green and amber. \"Come on baby brother, we need to make sure it's safe for the helicopter. Let Rose and Annie help get Maria ready and by the time we're done she'll be changed into a hospital gown and you can come back in.\"\n\n\"I'll be fine Daddy,\" whispered Maria as she slowly opened her eyes and nodded her head. \n\nJoe looked at Annie and said, \"You promise she'll be here when I get back?\"\n\n\"I promise Joe, now go,\" said Annie as she hugged him tightly.\n\nWhen the men got outside, Carmelo, Angelo and Vinnie were walking around the helipad. Seeing the angry look on Joe's face, the men didn't ask about Maria but glanced at Frank who shrugged his shoulders as he turned his head to look at his brother who was staring off towards the top of South Mountain. \n\n\"I'm glad we installed the helipad when we built the Clinic,\" Carlo said as he glanced at his watch. \"Remind me tomorrow to buy a fucking helicopter, we should have one here at all times. Dante can help me pick one out.\"\n\nFrank looked at Carlo and nodded his head and then said, \"Where is he? I just noticed he's not with you.\"\n\n\"He's in the Archive Room, said he needed to look something up,\" said Carlo with a shrug. \"The whole way back from your house, he kept muttering something about myths and legends. I asked him what he was talking about but he said he had to make sure before he said anything.\"\n\nFrank glanced at Carlo with a questioning look but shook his head as if to clear his thoughts before looking at Carmelo as he asked, \"Were the safety checks done?\"\n\nCarmelo nodded his head as he glanced at the checklist in his hand and said, \"The area has been swept, we checked the surface and there is no debris, Vinnie checked the windsock on the roof to make sure it is free to move around and the perimeter lights are turned on and are all functioning.\"\n\nThe men got quiet as Carlo's phone rang, \"Rossi here...five minutes...the helipad is ready for you to land...we will be waiting.\" He glanced at the men and said, \"You heard my part of the conversation, Joe go and see Maria.\"\n\nJoe spun around running into the building and he noticed Victor and Sal in the waiting room. Seeing the concerned look on their faces he motioned with his head for them to follow him and they ran down the hall to Maria who was now lying on a stretcher, her hair in a surgical cap and she was wearing a hospital gown.\n\nFrank glanced at Alberto and walked over to him saying quietly, \"Let Joe have some time with Maria and then you can go in. He's not upset with you; he's worried about his daughter.\" Alberto nodded his head and Frank looked at him and smiled, \"You think you're protective of Maria now? Wait until you find out she's pregnant and when the little one gets here, you'll go nuts worrying about everything. As they get older the worry never goes away, you just get used to it.\"\n\n\"They're coming,\" said Vinnie as he pointed to the top of South Mountain where a helicopter became visible.\n\n\"Doc, they'll be here in a couple of minutes,\" said Carlo as the men moved into the back door of the Clinic so they would be out of the helicopters rotor wash. Within minutes the helicopter landed and out stepped three men and three women who grabbed bags before ducking and running into the building.\n\n\"Where is the patient?\" a tall black haired man with light brown eyes asked in an arrogant tone as he glanced at his watch and shook his head.\n\nSeeing the look of anger starting to build on Carlo's face, Frank said, \"I'm not sure if you remember me Eric it's been several years, I'm Frank Carlucci and the patient is my niece Ma ...\"\n\n\"Kindly address me as Dr. Parr and I know who you are and I don't care, now take me to the patient,\" said Dr. Parr as he interrupted Frank. He sighed loudly before narrowing his eyes as he glanced at his watch again. \"I want to get the surgery done as soon as possible and get out of here; I have tickets to the Symphony tonight, this couldn't have come at a worse time.\"\n\nFrank took several calming breaths and said, \"Please follow me and I'll take you to my niece.\" \n\nAs they walked into the room Doc Sullivan came forward and said, \"Thank you for coming Dr. Parr, this is Maria Carlucci, she is the daughter of...\"\n\n\"As I mentioned to the other one, I don't care who she is the daughter of. Let me look at the x-rays then I would like to scrub in,\" said Dr. Parr before moving to the wall where the x-rays were illuminated. Hearing movement behind him, he turned and saw Carlo, Alberto and Alpha Parr walk into the room and seeing Alberto go to Maria's side and hold her hand, he said, \"She's awfully young to have a mate.\"\n\nAlberto stood up to his full height of 6'5\" and said angrily, \"I am her intended mate; I made my declaration weeks ago.\" \n\nWithout acknowledging Alberto, Dr. Parr turned to Doc and said, \"Is there a history of violence or abuse? The fracture doesn't seem normal; it's almost as if there was a lot of pressure applied to the bone.\"\n\nDoc and Frank stepped in front of Joe and Alberto who were growling angrily. Carlo strode forward anger apparent in every step until he stood in front of Dr. Parr and he said in a clear commanding tone, \"She fell in front of young ones and her family while playing tag. Let me make this clear to you Dr. Parr, there has never been and will never be violence against women in our Pack.\"\n\n\"Cousin, if I were you, I would stop the arrogant condescending attitude and do your fucking job,\" Alpha Savannah Parr said angrily, her light blue eyes flashing amber as she stood to her full height of 5'9\". She turned to Carlo and said quietly, \"Carlo, Joe, Frank and Maria's intended mate, I apologize for my cousin and will take his attitude into consideration when we discuss repayment.\"\n\nDr. Parr rolled his eyes and looked at Doc before saying, \"I need to scrub.\" Without waiting for a response he walked out of the room, shouting angrily to his colleagues to find out where they were.\n\n\"Again, I apologize for my cousin,\" said Savannah, rubbing the back of her neck as she glanced around the room. \"In his defense he is a brilliant surgeon...and I wish I could say he didn't usually act this way, but unfortunately he's like this all the time. My Pack is used to it, and we ignore it...we tell ourselves he's just been in a very bad mood his entire life.\" As Savannah began to laugh the tension disappeared from the room and they began to relax. \n\nDoc Sullivan came in the room and said quietly, \"It's time to move Maria to the operating room now.\" Annie, Rose, Frank and Joe leaned down and kissed her and then moved back to give Alberto some privacy. \n\nAlberto scented her neck deeply and once he calmed down he leaned back to look deep into her emerald eyes which were fluttering open and closed as she struggled to stay awake. His hand gently tucked stray strands of hair into her surgical cap before moving down to caress her cheek as he whispered, \"I love you, Gattina.\" \n\n\"You should, I'm fabulous,\" she whispered as she fell asleep with a smile on her face. Hearing Maria's response to Alberto's declaration, the four elder Carlucci's started laughing quietly while Victor and Sal rolled their eyes. \n\nAs Doc and one of Dr. Parr's assistants rolled the stretcher out of the room, he stopped and looked at the Carlucci's and Alberto before saying, \"I'll make sure she's well taken care of.\"\n\n\"Thank you, Doc,\" said Annie softly as she clung to Joe's arm who continued to stare at his little girl. He stepped out into the hall and watched as they brought her into the surgical suite and terror gripped his heart.\n\n\"They're taking her into surgery now,\" Frank said to the youngsters. \"I'm still not sure how long the surgery is going to be. Could you come pick up Victor and Sal? They don't need to be sitting here.\"\n\n\"Okay Dad, Dom is on his way,\" said Vin as his twin grabbed his keys and hurried out the door. \"We're gonna start supper; let us know if you hear anything.\"\n\nRic, Rocco and Luc watched as the youngsters finished cleaning the kitchen before Sophia looked at the list on the fridge. Within minutes Vin and Lorenzo were cutting bite size cubes out of several large pieces of venison, while the other youngsters started cleaning, peeling and chopping carrots, celery, potatoes and onions. As Vin and Lorenzo cut the meat, Marcus dusted them in flour and assorted spices before saut\u00e9ing them and adding them to the vegetables in the two x-large crock pots.\n\n\"It says vanilla cake with strawberries and ice cream for dessert, right?\" asked Enzo. He saw Sophia nod and got the Kitchen Aid mixer out of the closet as Michael came over with four boxes of cake mix and two large sheet pans. Within thirty minutes the cakes were in the oven, the stew was in the crock pots and the strawberries were cleaned and soaking in syrup. \n\n\"Damn, these youngsters can cook,\" said Ric with a smile on his face which quickly changed to one of concern as he saw the look on Damian's face as he was staring out the back windows. \"What's up Damian?\" \n\nDamian sighed and shook his head as he said quietly, \"It's my fault my baby sister is in the hospital getting operated on. I was supposed to protect her and I failed.\"\n\nVin came to stand next to him and said, \"Let me ask you a question...If Maria had been running in her wolf form and fell into that dry well, what do you think would have happened to her?\"\n\n\"She could've been seriously hurt, maybe even killed,\" said Lorenzo as he stood on the other side of Damian. \"We've talked this over before; no one blames you for Maria getting hurt. What you did to save her and Toni was amazing; you took the full brunt of the fall, protected their heads, put Toni on your chest and held tightly to Maria so she landed on you. What more could you have done?\" \n\nDamian glanced at Vin then Lorenzo and they saw the gleam of unshed tears as he whispered hoarsely, \"But she's my baby sister, I should've done more.\"\n\nLorenzo shook his head and said, \"It was only bad luck that you were in the front with Maria and Toni, any of us could have gone down that well with disastrous results. What would have happened if Michael had fallen down there with Cal and Brady? They're only six and Michael isn't as strong as you.\"\n\n\"Hey, I may not be as strong, but I am smarter,\" said Michael good naturedly as his family started to laugh. \"Damian's the only one I know of who had to retake his Italian language placement test, and that's pretty bad since he's been speaking Italian since he could talk.\"\n\nA reluctant smile crossed Damian's face as he said, \"I still say my answers weren't wrong, they weren't prepared for my creativity.\"\n\nVin started to laugh and said, \"When they asked him to translate the line I dolci \u00e8 meglio mangiare e gustare il sapore (Desserts are better left to eat last and savor the flavor) do you know what this idiot wrote?\"\n\n\"'Leave the gun. Take the cannoli',\" shouted the Clan as they started to laugh.\n\n\"Oh, this one was better,\" said Lorenzo as he continued to laugh. \"La famiglia \u00e8 composta da molte persone che hanno un solo obiettivo che \u00e8 quello di amare e onorare l'altro. (A family is comprised of many people who have but one objective which is to love and honor each other).\"\n\n\"This dumb ass wrote, 'Fredo, you're my older brother, and I love you. But don't ever take sides with anyone against the Family again. Ever.' Alpha Carlo was laughing so hard he couldn't breathe, but he still made him retake the test,\" said Gianni as he held on to the chair because he was laughing so hard. \n\nRic, Rocco and Luc were laughing and Ric said, \"They made you take the test again? I can't believe that.\"\n\n\"I know, I mean the answers weren't textbook, but the sentiment was there,\" said Damian with a smirk as he looked at Ric and then he smiled at Rocco. \"So, when are we gonna have a men's night out, you know go to a couple of clubs and stuff?\"",
        "\"Uhmm...maybe when you're finally a man,\" said Rocco with a straight face as the Clan burst out laughing.\n\n\"Oh my dear cousin, I could show you things that Dad and Uncle Frank have no idea about, things that would make your hair turn as gray as your brothers,\" said Damian with a wicked smile.\n\nRic started to smile as he said, \"You scare me Damian, you really do scare me. You remind me of one of those people they profile on that show 'Criminal Minds'. \"\n\n\"I'll take that as a compliment,\" Damian said with an evil smile. \"How about we go downstairs and play poker while we wait?\" At his suggestion everyone smiled and headed downstairs after checking one last time to make sure the house was secure.\n\n***** \n\nDante had piles of historical books on the table in front of him in the Archive room but he couldn't find what he was looking for, everything South Mountain Pack had dealt with North American Pack life and culture as well as basic Were history. He did find several ancient texts that dealt with the formation and history of Rossi Pack, but they were of no help. Frustrated he ran his hands through his hair and getting his cell phone out he dialed the Archivist at Rossi Pack. \n\n\"Nick, I want you to send everyone out of the library and lock the door now,\" Dante said briskly. \"I will wait until this is done before we continue this conversation.\"\n\n\"Yes Alpha,\" said Nick without hesitation. Dante heard several people in the background muttering their displeasure until Nick told them their Alpha had ordered them to leave. Minutes later Nick was back on the line and said, \"The library is cleared Dante, and I took the precaution of moving into my office and swept it for bugs. What do you need me to do?\"\n\n\"I want you to find all the information you can find out about the lost line of Moray,\" said Dante quietly.\n\n\"The Guardian line of Moray? Are you serious?\" asked Nick in an incredulous tone. \"They disappeared around seven hundred years ago, and there have been hundreds if not thousands of people looking for them ever since. Their believers fall into two categories, the first - for them to be found to lay claim to their rightful place as rulers of their land and the second - for them to be found so they can be killed so they won't lay their claim as rightful rulers of their land. Dante, anybody remotely linked to the line could be in grave peril.\"\n\nDante exhaled loudly and said, \"I know what is at stake here and this has to be done in absolute secrecy Nick, no one must know you are doing this not even your mate. Let me know what you find, call me anytime.\" After he hung up, he went to the kitchen intending to get a beer and return to the Archive room, but after glancing out the back windows and seeing the beautiful mountain engulfed in fall colors he changed his mind. He sat staring out the window, slowly sipping his beer thinking, 'If I am right, they are in even greater danger then we originally feared.'\n\n*****\n\nThey were in the staff break room and Rose and Annie sat holding hands as they listened to the repayment discussion which had been going on for at least thirty minutes. Carlo had offered to repay the fuel and other costs for the helicopter and for the time and skill of the surgical team, but everything Carlo offered Savannah shook her head no to. \n\n\"I can't believe I'm sitting here discussing this when my baby is getting operated on,\" Joe said angrily. \"Savannah, just tell us what you want, I don't have the patience to sit here and bargain with you right now.\"\n\nSavannah sat back and stared at Joe and Frank and said, \"I want the two of you to come to my Pack and help train us.\"\n\nSilence ensued after her announcement and Carlo leaned forward and put his forearms on the table and said quietly, \"May I ask why?\"\n\n\"Can we talk freely here?\" Savannah asked before looking around the room. Frank got up and before shutting the door looked to Alpha Parr for her permission since her bodyguards were stationed outside, she nodded her head. \n\n\"Let me start off by reminding you that we have been sworn allies for over a hundred forty years. When those bastards came for your females, we were the first to come to your aid and fought alongside you when we found where they were being held,\" Savannah said as she sat up straight. \"We continued to fight alongside your Pack until justice was handed down and those bastards executed.\"\n\n\"Your help was invaluable during that dark time,\" Carlo stated as he stared Savannah in the eye, Alpha to Alpha. \"And may I remind you that when your Pack arrived from Georgia during the Reconstruction Period, we sheltered you and helped you establish your territory. Our history together is long and I hope we can continue being allies as well as friends in the future.\" \n\n\"That goes without saying Carlo. The treaty our great-great-great grandfathers signed carries more weight with me, then anything the Alpha Council has established,\" said Savannah in a steely voice that she used with great skill as one of the best criminal defense attorneys in the state. \"I was going to tell you when our schools played their football game next week, which would have allowed me time to gather information, but since I'm here I'll tell you what I do know.\"\n\n\"Go on,\" said Carlo as he sat back and crossed his arms across his broad chest with Frank and Joe unconsciously mimicking his posture as they studied the female Alpha sitting before them. Even though they had known her all their lives and had become good friends at U of MD, when she was a freshman and they were seniors, they could see the difference in her since she became Alpha. She was more commanding in her demeanor and exuded a quiet confidence but the look in her eyes definitely said, 'Don't fuck with me'. \n\n\"I received a call from Charles Davis last week,\" upon her announcement, Carlo, Frank and Joe sat up straight. \"I thought it strange for him to be calling me, I've never said more then 'hello' to the man, but nevertheless I took the call...and I'm glad I did.\" Savannah took a long sip of her soda and waited for Carlo, Frank or Joe to say something, but they sat quietly.\n\n\"He said a new family was coming into your Pack and asked if I could keep an eye on them because one of the girls was his son's mate. I thought that was extremely strange for a couple of reasons,\" Savannah took another sip of her soda before continuing. \"As far as I knew, Charles had no youngsters and was unmated; no male would let his mate move to another Pack; and finally, why ask me? Why not ask you for updates and if the female was his sons mate, wouldn't they be in contact with each other?\" \n\nCarlo hesitated, choosing his words carefully before he spoke, \"As far as we know, none of the females are mates of anybody from Davis Pack. In fact the two oldest, have found their mates with Vincent and Dominic, Frank's oldest boys.\" \n\n\"Congratulations to you and your boys,\" said Savannah with a smile before turning serious again. \"Our conversation lasted less then five minutes, but it was what he said at the end that got my attention. He said if I wasn't willing to do this 'favor' for him, then he would find somebody among his 'followers' who wasn't averse to doing what was needed. I didn't like the implied threat so I told him our Packs weren't closely tied to each other and if I called or came over it would be suspicious. I did tell him if I heard anything unusual, I would call him and I left it at that.\"\n\nCarlo, Frank and Joe sat back in their chairs and after several minutes Frank said, \"You still haven't told us why you want us to train your Pack.\"\n\n\"After I received the email from President Roberts about the raids and thinking back to the conversation I had with Charles, I called a Pack meeting. We discussed what was going on and by unanimous vote agreed to honor the treaty and come to your aid if needed,\" Savannah stated as she looked at Carlo. \"As far as why we need your help, it's simple...we've gotten complacent over the years and our training has suffered, going to the gym and being in shape isn't the same as being trained to fight. If Charles has 'followers' and they are coming here intending to do your Pack harm, we want to be able to fight with the same skill you have and not be a hindrance.\"\n\n\"Thank you for your renewed support and you know we would do the same, old friend,\" said Carlo quietly. \"Do you know if Charles contacted any other Alpha's, we haven't heard from anybody else?\"\n\n\"I don't know, Carlo,\" Savannah stated as she shrugged her shoulders. \"He didn't say and I didn't ask. Looking back on it now, I probably should have, but all I wanted to do was get off the phone, I didn't like his attitude at all.\"\n\nCarlo looked at Frank and Joe and they nodded their heads, \"We will accept the terms of repayment, obviously Joe will be busy with Maria, but Frank, Carmelo and Vinnie should be able to start the assessments. Let me call you later in the week once we get a schedule worked out.\" Before Savannah could reply, there was a knock on the door and Frank got up and opened it. \"Alpha Parr, let me introduce you to Alberto, Angelo and Gabriella Moretti, Carmelo and Rita's youngsters, Victor who is Joe's youngest son and Sal who is Frank's youngest son.\" \n\nSavannah shook their hands and said, \"Alberto, I'd like to apologize for my cousins remarks. It's obvious looking at the two of you that you care for your mate.\"\n\n\"Thank you, Alpha Parr,\" said Alberto as he glanced at Alpha Parr, but not making eye contact, before glancing at his Alpha. \"Do you know how much longer it's going to be? Have you heard anything?\" \n\n\"Nothing yet,\" said Carlo, motioning for them to sit down. \"Doc, how are things going? Any idea of how much longer it's going to be?\" \n\n\"Dr. Parr said maybe another hour and a half,\" replied Doc. \"She's doing well, we've fixed the dislocation and are getting ready to set the titanium plates, the prep work is almost completed. I set up the digital recorder so I could record the operation and Dr. Parr will come back to take the plates off when its time.\"\n\nCarlo relayed the information and their talk centered on football and general Pack gossip for the next two hours. Gabby leaned forward and said, \"I hope I'm not being rude Alpha Parr, but I love the name Savannah.\"\n\n\"Thank you Gabriella, there's a lot of history associated with my name,\" she replied with a thoughtful expression on her face. \"My parents named me Savannah knowing by the law of Primogeniture I would be Alpha. It serves to remind me every day of how far my family has come...from slaves on a sugar cane plantation in Georgia to one of the only Packs with a female Alpha in the country.\" \n\nDoc walked into the room and said quietly, \"She's in recovery, the surgery went well and you should be able to see her in thirty minutes. We'll keep her overnight and reassess things tomorrow.\" \n\n\"Joe and I'll stay here with her,\" said Annie quickly as Joe nodded his head.\n\n\"If it's okay with you Mr. C, I'd like to stay too,\" said Alberto quickly. Joe stared at him with narrowed eyes for several moments before nodding his head reluctantly.\n\nFrank quickly relayed the information to the youngsters and he could feel their relief through the bond. \"Annie, Joe and Alberto are going to stay here with her. Sophia, I'm not sure what's in her 'go bag' but she'll need a big baggy t-shirt and some of those legging things, also bring whatever you think she needs to stay overnight.\"\n\n\"Okay Daddy, she'll probably sleep better with something of Alberto's, I'll see what she has,\" she replied thinking if she was in the hospital, sleeping in Anthony's shirt would definitely make her feel better.\n\nTwenty minutes later, the members of Parr Ridge Pack were ready to leave. Dr. Parr was giving last minute instructions to Doc and said he would call tomorrow to check on her progress. Savannah nodded to Carlo and her bodyguards led the way out back to the helicopter, within minutes they were airborne and on their way home.\n\nFive minutes later, Doc came out and said, \"Joe, Annie and Alberto, she's starting to wake up and is asking for her family...\" Before he could continue Joe and Alberto were racing down the hall to the recovery room, when they reached the door both tried to get through it at the same time, after pushing and shoving they fell through the door and landed on the floor. Annie calmly entered the room, stepping on both of their backs as she walked to Maria's bedside.\n\n\"As I was saying, she's starting to wake up, she's groggy and we'll keep her sedated all night to help with pain management,\" said Doc from the doorway as he waited for Joe and Alberto to get up. \"Dr. Parr says her arm should fully healed in a couple of weeks, and he'll be back to remove the titanium plates.\"\n\n\"Hi, Sweetheart,\" said Annie softly as she kissed her forehead.\n\n\"Momma,\" Maria whispered groggily before falling asleep again. \n\nJoe and Alberto rushed to her bedside and asked in unison, \"Did she ask for me?\" \n\n\"You know there ARE other people in her life besides the two of you,\" Annie stated as she rolled her eyes. \"And to answer your question, she asked for me.\" \n\n\"Are you sure she didn't ask for me?\" Joe asked with a frown.\n\n\"Unless you changed your name to Momma, then no, she didn't ask for you,\" said Annie before muttering with a satisfied grin on her face, \"You conceited ass.\"\n\nHearing laughter from the doorway, she turned and saw her family enter the room. \"How's she doing,\" asked Lorenzo quietly. \n\n\"Doc says she's doing fine,\" Annie whispered as she turned to smile at her family. \n\nDamian came to the other side of the bed and leaned down kissing his baby sister on the forehead. Annie saw the guilt in his eyes and said quietly, \"Damian, it's not your fault, you did everything you could to protect her and Toni. It was an accident, plain and simple and I don't want to see you upset about this.\"\n\n\"I know it was an accident Mommy,\" Damian whispered in full momma's-boy mode. \"But I still feel guilty...not enough to stop teasing her and making her life miserable or make me be nice to her, but I still feel guilty.\"\n\nAnnie smiled at him and said, \"I wouldn't expect you to stop the teasing or be nice, that just wouldn't be you.\" She leaned forward and ran her hands through his hair and said, \"And I love you the way you are.\" \n\n\"Good, I think I'm perfect the way I am too,\" said Damian quietly with a smile.\n\nJoe shook his head as he said, \"Your mother never said you were perfect, she said she loved you the way you are.\"\n\n\"It was implied Dad,\" Damian said as he laughed. \"Anyway, we brought Maria's pillow, blankie, Alberto's sweatshirt and some clothes. There's dinner for you, Mom, Alberto, Doc and whoever else is staying tonight in the break room. We made venison stew, homemade biscuits and vanilla cake with strawberries.\"\n\n\"We? I don't remember you doing anything, and the biscuits aren't homemade, we popped a can,\" said Vin with a laugh. \"Though considering you could be the twin for the Pillsbury Doughboy Boy, especially with that fat ass, I guess they could be considered homemade.\" Hearing everyone in the room start to laugh, Maria stirred restlessly on the bed before settling down again.\n\n\"Alright, that's enough everyone,\" said Doc quietly as he injected some medicine into her IV line. \"I want Maria to rest as much as possible to start healing. Sorry.\"\n\nFrank stepped forward and said quietly, \"Why don't the three of you go eat while it's warm, Rose and I'll stay with her and I'll let you know if she wakes up.\" One by one her family came up and kissed Maria on the forehead before they left. Annie waited until they were gone before she put Maria's pillow under her head, wrapped her in her blankie and curled Alberto's sweatshirt into a ball and placed it near Maria's face so she could scent it. \n\n\"I'll be right back,\" she whispered to Frank and Rose who nodded their heads as they kept their eyes on their niece. As she walked into the break room, it looked like Joe and Alberto were having a race to see who could shovel the most food in their mouths in the shortest amount of time. \"Slow down guys, she's asleep and her Aunt and Uncle are in there watching over her.\"\n\nJoe got up and got her a bowl of stew and some utensils before sitting back down. \"I know, but what if she wakes up and we're not there.\"\n\n\"Doc gave her some more medicine, and she should sleep straight through until morning,\" Annie said between mouthfuls. \"This stew is really good; I can't believe the youngsters made it.\"\n\n\"I heard that Aunt Annie, I can't believe you doubted our culinary skills,\" said Marcus with a smile as he entered the room. \"Wait until you try the vanilla cake, we used a box mix but added vanilla pudding mix and some ricotta, then we soaked the strawberries in simple syrup with a hint of crushed mint. Delizioso.\" \n\n\"Why are you still here? Everybody else left but the Moretti's,\" asked Joe as he reached for another biscuit as Alberto got both of them some more stew.\n\nMarcus glanced at Alberto who had started to smile and not wanting to throw Sal under the bus, he decided to try Damian's tactic, \"Since Alpha Carlo cancelled the meeting this evening, Paulo went over to the Millers with Vin and Dom to deliver their new computers and update something in the security system.\"\n\n\"That was a good idea, Paulo and Annie were supposed to do it this morning, but helped at The School House instead,\" said Joe before raising his eyes to stare at his nephew with narrowed eyes. \"And you stayed to tell us this?\"\n\n\"Uhmm, no. I ugh, was waiting, yeah I was waiting to see if you liked the stew,\" said Marcus as he flushed. \"I think I'll go now.\" He turned around and hurried out of the room to the sounds of his uncles laughter.\n\nAnnie started to laugh and said, \"Joe that was mean of you, you know Gabby is still here and Sal wanted to stay with her.\"\n\n\"I know, but he doesn't know that I know, so I finally have something on my sneaky sons and nephews,\" Joe answered with a smile before looking at Alberto. \"And if you know what's good for you, you won't say anything.\" \n\n\"I have no idea what you're talking about Mr. JC, I just want to eat and get back to my intended,\" said Alberto as he reached for another biscuit.\n\n\"You know since you're my daughters intended, it's about time you called me Joe, Dad, or Pop,\" said Joe with a frown as Annie started to smile. \n\nAlberto replied with a twinkle in his eyes, \"How bout Poppa Joe? It'll be a good name for the little ones to call you.\"\n\nJoe choked on his stew and Annie whacked him on the back much harder then needed as she smiled. \"Don't let him give you a hard time Alberto, I got pregnant the first heat after he graduated,\" said Annie with a smile. \"If it was up to him, we would have had little ones the first heat after mating.\" \n\n\"You can calm down Poppa Joe; I know Maria wants to go to college so when we have little ones it will be up to her,\" Alberto stated as he continued to eat while staring at Joe. When he saw Joe start to calm down he finished, \"But when she says it's time, whether she's eighteen, twenty-one or twenty-five you can bet you'll be a grandfather before you even know it.\" Joe's face turned red again and he opened and closed his mouth several times without saying anything.\n\n\"Well, I can't wait to become a grandmother, it can't happen soon enough for me,\" said Annie happily as Joe turned to stare at her like he had never seen her before. \"Of course after she comes of age, you'll move into the house like all youngsters do for the first couple of years. We'll have the wedding as soon as you graduate from college, having it before then would raise too many eyebrows in the human world.\" She nodded her head agreeing with herself and then said excitedly, \"Ooh, Joe on weekends you can start work on converting the attic into a little apartment for them, I can see it now...a kitchenette, a living room, a couple of bedrooms all decorated in warm soft earth tones. Oh...and the nursery...the nursery we could decorate it in the Berenstain Bears, I've always liked them. Oh, I'm so excited, I can't wait, and we've got a lot of planning to do...I've got to call Rita and we can get started picking...\" ",
        "\"Are you out of your fucking mind?\" Joe interrupted his mate and seeing her glare at him he sighed loudly. \"Okay,\" he said begrudgingly, \"We'll build them a little apartment, but not until she is older Annie, much older like a month before her eighteenth birthday. I can't take too much more, she only turned fifteen a month ago and you're picking out curtains. I can't handle this, I'm only thinking as far as getting through tonight without tearing something apart if I see my little girl in pain.\"\n\nAnnie leaned over and patted her mates hand and said, \"I know, your poor little brain can only handle so much.\" Alberto started to choke and Joe leaned forward and whacked him really hard on the back and leaned back with a smile on his face. \"Are we done? Rose said to leave the dishes and they'd clean up.\" She got up and made her way to Maria's room sensing Joe following her.\n\n\"She hasn't moved much,\" Rose said quietly as Joe and Annie walked to Maria's bedside. \"Doc was just here and said her vitals looked good.\"\n\nAnnie smoothed the hair back from Maria's forehead as she whispered, \"Daddy and I are back sweetheart. We're going to stay here with you all night and so is Alberto and we want you to sleep sweetheart so you can get better.\"\n\nMoments later Alberto came into the room and Frank and Rose moved out of the way so he could stand on Maria's other side. He leaned in and scented her neck and said quietly, \"I said bye to my folks, Dad's gonna deliver some pizzas to Mr. C's house later this evening.\"\n\n\"Speaking of which, we'd better get home,\" said Rose with a grimace. \"The youngsters have been left unsupervised long enough, and I don't consider Ric, Rocco or Luc proper supervision. Damian is probably planning who knows what and the youngsters will go right along with it, especially since Vincent and Dominic aren't there. I already let them know they'll be staying with us tonight, it'll be easier since I have to cook breakfast anyway.\" \n\nAfter kissing Maria goodbye, Frank turned to Joe hugging him tightly and said, \"Baby brother, let us know if you need anything, no matter what time it is I'll be here for you.\" \n\nJoe nodded his head, \"Thank you big brother, I don't know what I'd do without you. Knowing you're taking care of my boys lets me concentrate on my little girl.\"\n\n\"Do you remember the vow you made to me the day Vincent and Dominic were born? 'I'll protect them like they were my own, until I draw my last breath',\" said Frank as he stared into his brothers eyes. \"And we renewed that vow every time one of us was blessed with little ones, in eighteen years nothing has changed brother, your family is mine, and my family is yours. We protect them like they were our own.\" Joe nodded his head and took a deep breath before moving back to Maria's bedside.\n\nFrank was quiet the first couple of minutes on the drive back to their house and Rose feeling his anxiety said quietly, \"What's the matter?\"\n\nFrank looked at his mate and grabbed her hand, \"I'm sorry my love, my mind was going over everything with Maria and the Pack. I should be concentrating on you, its not often we're alone.\"\n\nRose giggled and said, \"Did you read the newspaper yesterday? Longmeadow drive-in is closing for the season the end of September and I was thinking we could go.\"\n\n\"We went there a lot when we were dating, but I don't remember seeing the movies,\" said Frank with a smirk. He glanced at his mate and tried to hide his smile as he said, \"If I remember correctly, as soon as the previews came on, you would jump me and I spent the rest of the movie fending you off.\" \n\n\"Francesco Carlucci, I can't believe you said that,\" Rose swatted him on the arm and said in a huff. \"One time, one time I pounce on you and you act like I was some deranged nympho trying to steal your virginity.\"\n\nFrank growled low in his throat, \"I loved when you would jump me.\" He glanced over at his mate and growled again before saying, \"I have no idea how I waited all those months to claim you, especially when you would deliberately tease me. You drove my wolf and I crazy with how much you made us want you and twenty-three years later you still make us crazy.\" \n\n\"We were allowed more freedom back then, we could go on double dates and our parents considered that enough protection. If they knew what we were doing, they would never have allowed us out of the house,\" Rose smiled at she looked at her mate with a twinkle in her eye. She got quiet for a moment before she said, \"Sometimes I think we're too restrictive on the girls, and I think in our need to protect them, we're actually hurting them.\"\n\nFrank looked at her and shrugged his shoulders and said, \"It was a different time, things changed after Alpha Roberts daughter was murdered and when his son took over as Alpha Council President he changed the laws. If those laws had been in place to begin with, his sister might be alive, but then again she was killed by the Second in Command's son, who was supposed to protect her.\" He got quiet for several moments and said, \"When it comes to our daughters Rose, a father can't ever be too protective.\" \n\n\"And a mother will do everything within her power to protect her youngsters,\" Rose responded quietly as Frank pulled in front of the garage. He watched her closely as she crossed the driveway to enter the mudroom. As much as he wanted to know what was going on, he knew she would tell him when she was ready.\n\n*****\n\nThirty minutes after he arrived at the Millers, Paulo finished installing the computers in Todd and Papa Mike's office. Vin and Dom were in the kitchen talking to the Millers about Maria and spending time with their intendeds and he could hear their laughter from down the hallway. Sitting back in the leather chair, he rolled his shoulders and took a deep breath before calling everyone in so he could get their retinal scans added to the database. As soon as they came in the office, he showed them how to use the retinal scanner, which was by a series of right and left clicks of the mouse and within minutes they were done with the scans. \"Give me a sec, I'm almost done,\" he said as his fingers flew over the keyboard opening and closing screens faster then anyone could see or understand what was going on. \n\n\"Okay, now for the website, after you do the scan, you need to log on with the password set up for your name,\" said Paulo as he laid a piece of paper on the desk. \"Once you log in, you'll need to change the password so only you know it.\" The Millers nodded their heads as Paulo continued to explain, \"Make the passwords something easy for you to remember but something that isn't obvious. We generally use our twins/mates favorite food, color, school subject or something like that. If you mess up and enter the wrong password, you have one chance to re-enter the right password, if you try again you'll be locked out and only I or Alpha Carlo can get you back in. Understand?\" The Millers nodded their heads and within twenty minutes the family had logged in and changed their passwords as Paulo instructed.\n\n\"Now here is where the security takes place and I need you to listen carefully,\" said Paulo as the Millers stared at him. \"If somebody forces you to log onto the website put '01' after your password, as an example if your password is 'Cheese', you would put 'Cheese01'. This sends an alert to Alpha Carlo, Uncle Frank, Dad and me that you're logging on under duress, and you won't be able to log on the first attempt, so when you re-enter it the second time, simply use 'Cheese'. The site that'll come up is fake, but it'll allow us time to take counter measures.\"\n\nA smile spread across Todd's face as he said, \"Is there anything you guys don't think about when it comes to security?\"\n\nPaulo shrugged his shoulders and said, \"Dad and Uncle Frank try to keep up as much as possible, and I handle all the electronics, speaking of which...I have laptops for each girl and new cell phones for the whole family.\" Vin nodded his head and he and Dom went to the truck and brought in two boxes and Dom handed the laptops to the correct girl as Vin handed out the cell phones according to the names on the boxes. \"They'll need laptops for school and they've already been loaded with the programs they'll need. The cell phones have been programmed with all the emergency numbers, a number for every family in the Pack, and of course your home phone and each others numbers. I set up a Wi-fi so you can access the internet from anywhere in the house, it's set on a scrambler so nobody can access it.\"\n\nAs the Millers looked at their new cell phones Paulo said quietly, \"Mr. M, if you wouldn't mind, I'd like to have your old phones after you transfer what numbers aren't already programmed. I want to see if there are any tracking devices in there.\"\n\n\"Dad and I were the only ones that had phones,\" answered Todd. \"I have some work contacts in there, it shouldn't take me but a minute and the same goes for Dad.\" Papa Mike hurriedly got his phone out of his pocket and scrolled through and wrote down several numbers and handed it to Paulo and Todd did the same.\n\n\"Now here is something new and I'd like to try it out,\" said Paulo excitedly. \"I added a feature to the phones, if you hit 'star000pound' it'll link into your security system and lock down your house. After we try it out and makes sure it works, I'll link an alarm so Alpha Carlo, Uncle Frank, Dad and I'll get an alert that your security system was emergency activated. So it's only to be used in an emergency situation, okay?\" The Millers nodded their heads and Paulo smiled, \"Try it.\"\n\nMaeve raised her hand and asked quietly, \"Daddy, can I do it? I've never used a cell phone before.\" \n\n\"Sure cupcake,\" answered Todd with a smile. Maeve smiled widely and hit the appropriate buttons and they watched the security monitors as the house was quietly locked down. \n\nHolly looked up and asked Paulo, \"When would we need something like this?\"\n\n\"If somebody got into your house and you couldn't activate the system the normal way, if you didn't have time to activate the system while you're running to the safe room. There could be any number of reasons,\" Paulo said as he shrugged his shoulders. \"The most important thing to always remember is to get to safety first.\"\n\nTodd nodded his head and said, \"How much do I owe you for all of this?\"\n\n\"The computer equipment and phones were paid for by SMI, you're responsible for the phone plan, and I signed you up for Verizon, it's got the best coverage,\" said Paulo with a smile. \"Oh and last thing, if people try and retrace any emails or websites you were on to get your IP address, I'll get an alert and it'll send them on a trip around the world.\"\n\n\"Daddy, can we go in the family room with our laptops?\" asked Fiona as her sisters glanced at their Dad waiting on his answer.\n\nTodd nodded his head and said, \"Yes, but I think you should thank Paulo first.\" The girls giggled and a chorus of \"Thank you's\" rang out as Paulo started to blush. \"How much more do you have to do?\" asked Todd as he watched his daughters, Vin and Dom run out of the room.\n\n\"Since the emergency activation works, I need to upload the link to the system, and I need to install a computer in the family room for Mrs. M and Nana Ellen,\" said Paulo as his fingers were flying over the keyboard. \"So about twenty thirty minutes I should be done.\" He looked up and seeing the girls, Vin and Dom had left the room he said quietly, \"I installed a tracker on each laptop so you can monitor what websites they're going to and their activity online. Only you have control of it, and I'll show you how to access it.\" Todd moved over to the desk and Paulo showed him where the program was located and in real time he could see what the girls were doing. \"The program allows you to see who they're sending emails to and who they receive them from, but it doesn't allow you to see the contents.\"\n\n\"How did you learn how to do all of this,\" asked Holly as she sat on the sofa.\n\n\"I've been playing with computers since I was a toddler. It's something natural for me; I read programs like other people read books. I like to take machines apart, figure out how they work and figure out a way to make them work better,\" said Paulo with a shrug. \"Okay, the link to the alarm for the security system is up and running, now onto the computer in the family room.\" He picked up the box near the desk and followed Papa Mike into the family room and started putting the system together. Fifteen minutes later, he was done and helping the younger Miller girls with their new laptops while Vin and Dom concentrated on their intended mates.\n\n\"Boys would you like something to eat?\" asked Nana Ellen with a smile. \"We have leftover pork loin, mashed potatoes, and green beans. For dessert we have blueberry lemon pound cake and ice cream.\" Twenty minutes later, the leftovers were gone and the boys were finishing the rest of the pound cake.\n\nTodd was laughing as he said, \"Your Dads were right, you boys eat a huge amount of food. The grocery bills to feed all of you must be huge.\" \n\n\"Mr. M, we've already eaten dinner, that was a snack,\" answered Dom with a smile. \"I have no idea about the grocery bill, but we do go deer hunting every year. Even mom, Aunt Annie, Sophia and Maria bag deer, so we eat a lot of venison.\" \n\n\"A snack? That was about five pounds of meat and about five pounds of mashed potatoes,\" said Todd with a laugh. \"If the two of you are going to be eating dinner with us we'd better cook more food.\"\n\nVin laughed and said, \"Whatever you normally cook for your family, double it.\"\n\n\"Daddy, can we play a game before the boys have to leave?\" asked Brianna as she smiled at Vin.\n\nTodd glanced at the clock before saying, \"Sure, clear the table first.\" The girls, Vin, Dom and Paulo cleared the table while Maeve got a deck of Uno cards out of the closet. For the next hour they played and the adults smiled while they watched TV in the family room as they listened to the youngsters laugh and holler at each other. \n\nPapa Mike glanced at the clock and said, \"I figured Matt and Phil would stop by tonight, have you heard from them?\"\n\n\"I did, they're having a date night. Since the meeting was cancelled, Matt wanted to surprise Phil and take him out to dinner and a movie,\" said Nana Ellen with a laugh. \n\nTodd started to laugh and said, \"Holly and I could've gone out with them, we could use a date night too.\" Holly smiled at her mate and glanced in the kitchen to check on the youngsters who had suddenly gotten quiet.\n\n\"Uncle Matt didn't want you to know Daddy,\" said Maeve with a giggle. \"He said he didn't need a chaperone to block his action.\" Everyone burst out laughing and Maeve started to blush as she said, \"Well, that's what he said...whatever that means.\"\n\n\"It means they're gonna kiss,\" whispered Fiona as she started to blush which caused everybody to laugh again.\n\nThe adults turned their attention back to the TV and Vin said quietly, \"Erin, as your brother in law, I gotta ask, what's going on with you and Lorenzo?\"\n\nErin froze and Brianna said, \"You can't tell him Lorenzo is your mate, remember the boys don't know we can tell who our mates are before they do.\"\n\n\"Uhmm, I don't know Vin,\" said Erin as she blushed. \"I think he's kinda cute but he's really irritating sometimes.\"\n\n\"I'll give you some advice,\" Dom said as he stared at her. \"My cousin is the most stubborn person I know and if he gets something in his mind it's almost impossible to change it. Right now he says he doesn't like you...\" Seeing her eyes start to tear up, he leaned forward and held her hand and said, \"I'm sorry, I don't want to hurt you and I hate being blunt like that, but it's the truth. The best advice I can give you is to ignore him. Don't talk to him or pay attention to him, unless it's necessary like when we do training or something.\" \n\nErin felt her heart break a little as she whispered with a catch in her voice, \"He really said he didn't like me?\" Feeling her twins pain, Caitlin put her arms around her and hugged her, not knowing what to say. \n\nVin took a deep breath and nodded his head, \"I'm sorry, but yeah he did. Give him some time like Dom said to get over whatever is bothering him.\" \n\n\"Now let me add this, when Sophia and Maria told him you and Caitlin were going on a date with Patrick and Bob, he got so mad he bent his fork in half and wanted to know which one of those bastards was taking you out, his words not mine,\" said Dom with a shrug. \"I think he likes you, but he's too stubborn to admit it.\"\n\n\"And you think I should ignore him?\" asked Erin with a puzzled look on her face.\n\n\"Yeah, we do,\" said Vin with a smile. \"When you have to talk to him, be polite. I'm not saying you have to be super nice to him, just don't antagonize him and when you're ignoring him, don't do it in a bitchy way. It'll drive him crazy.\"\n\nPaulo started to smile and added, \"What Vin and Dom didn't tell you was Lorenzo is also one of the bossiest people we know and he likes to tell people what to do and gets mad when they don't listen. If you watch him and Damian together it's really comical because Damian deliberately gets him upset and then will say or do something to make Lorenzo laugh. They function by being dysfunctional.\" He looked at the clock and said, \"Guys, we got to get going, I've got work to do for Alpha Carlo.\" Vin and Dom nodded their heads and the three boys went into the family room and said goodbye to the Miller parents and grandparents.\n\n\"I'll walk you out,\" said Todd as he looked at Brianna and Morgan who both blushed as they glanced at their intendeds. When they got onto the porch, Todd looked at Paulo and winked as he said, \"I got a question to ask you about the truck.\" Paulo looked at him questioningly until Todd motioned with his head towards the two couples who were standing quietly near the porch steps.\n\nAs Paulo and Todd walked to the truck, Vin and Dom moved their intendeds to the top step and the boys took a step down so they were almost eye to eye. Vin leaned in scenting Brianna's neck and she started to giggle before running her hands through his hair. Dom stared into Morgan's eye and whispered, \"Zenzero, I'm going to lean against the railing and I want you to scent me and do what you feel comfortable with, like running your hands through my hair or rubbing my arms. I won't touch you until you tell me to, okay?\" Morgan's eyes were wide as she nodded before leaning in and starting to scent his neck slowly like he had taught her. When she started to rub her hands up and down his arms, Dom could barely hold back his moan and his urge to wrap her in his arms; instead he gripped the wood railing so tight he could hear the wood creaking.\n\n\"What did you want to know Mr. M?\" asked Paulo as they reached Vin's truck. \n\nTodd started to laugh and said, \"It was an excuse to give them a little alone time. I can still see them, but at least they have some privacy.\"\n\nPaulo glanced towards the porch and started to laugh as he said, \"You might want to tell the rest of the girls then.\" \n\nWhen Todd looked to where Paulo was pointing he started to laugh and said loudly, \"You guys have an audience.\" As Vin, Brianna, Dom and Morgan turned to the dining room windows they saw the rest of the Miller girls smiling at them. When Vin and Dom started to laugh, Maeve and Fiona made kissy faces before Holly came to the window and made them leave. \n\n\"Daddddyyyy,\" Brianna and Morgan cried out which made Todd laugh louder.\n\n\"It's okay, we have to leave,\" said Dom quietly. \"Is it okay if I scent you before we leave?\"\n\nMorgan answered in a voice so quiet Dom barely heard her, \"But I wasn't done yet, I wanted to scent you some more, it makes me feel all good inside.\"\n\nHearing what his intended said, Dom started to groan and tilted his head so she could scent him. Knowing she had an audience Morgan was hesitant but inhaled deeply several times before moving back and whispering, \"Okay, it's your turn.\" ",
        "Dom quickly leaned in running his nose up and down her neck and said quietly, \"Friday, when we go on our date Friday, you can scent me all you like, okay? Til then you can have this.\" He took his shirt off and Morgan glanced at his hard chest before blushing and looking away. Dom laughed quietly and said, \"You can sleep in my t-shirt, its big enough you can use it as a nightgown.\"\n\nBrianna glared at Vin crossing her arms over her chest as she said, \"You haven't given me anything of yours to sleep in.\"\n\n\"But this is my favorite t-shirt,\" said Vin in a whiny voice before taking his t-shirt off. \"I'm kidding, you can have this one and I'll bring you a sweatshirt too, it gets really cold here at night. Which reminds me... Mr. M, Dad said he'd show you how to work the wood stove in the basement and Dom and I'll be over on Sunday to help you get your wood cut and chopped for winter.\"\n\n\"I didn't think we'd need that, I thought it was for emergencies when the power went out and the heat pumps wouldn't work,\" said Todd with a frown.\n\nVin and Dom started to laugh and Vin said, \"These old houses are great, but you'll find in the winter they don't retain heat very well. The heat pumps won't be able to keep the chill out of the stone or brick enough to keep the house warm. Don't worry about it, we'll help you chop about five cords of wood, that should be enough.\"\n\n\"We'll go out in the woods, look at the trees to see which ones need to come down and we'll cut those. We still got about three months to get it seasoned before winter really sets in,\" said Dom with a shrug. He looked at his future father in law and started to smile, \"I hope those muscles are for more then show, because you'll be needing them.\"\n\n\"Girls, I believe your intendeds insulted me,\" said Todd with a smile as Brianna and Morgan started to laugh. \"Let me guess, your repayment will be dinner?\" Vin and Dom grinned back at him as they nodded their heads. \"What do you want to eat?\" \n\n\"Some authentic Tex-Mex,\" said Vin as Dom nodded his head. \"We like Mexican food, you know tacos, burritos, enchiladas and that stuff, but we've never had authentic Tex-Mex.\" Seeing Paulo pull his phone out of his pocket to check the time, Vin said, \"We've really got to go.\" He pulled Brianna into his side and whispered, \"If you want to call or text me later, my number's already in your phone.\"\n\nDom whispered in Morgan's ear, \"My number's already in your phone too and you can call or text me anytime you want. Goodnight Zenzero, I'll see you in the morning.\" The boys shook Todd's hand before getting in Vin's truck and making the four minute drive to their house.\n\n\"Come on girls, we're gonna have a family conference,\" said Todd as he ushered the girls in the house and activated the alarm system. Everyone gathered around the kitchen table as a list of household chores was divided between the girls and then talk centered on what needed to be done to open the bakery. \n\n\"Madame Gina is giving Maeve the tour of the grocery store tomorrow morning, and then she's going to show us the property next to Matt and Phil,\" said Holly with a smile. \"We can either rent the property or buy it outright. The rent is $1,000 per month and Madame Gina said if we buy the property, SMI would hold the mortgage and it would be $800 per month. The advantage to renting would be if anything happened with the roof, electrical, plumbing or something, SMI would fix it, where if we bought the property we would be responsible for it.\"\n\nPapa Mike rubbed his neck and said, \"I think we should buy the building, we're already going to update the electric and plumbing and if anything happens we have an advantage.\" He looked at Brianna and Morgan and said with a smile, \"I'm sure Brianna and Morgan's intendeds can help with that.\" \n\n\"If we have to pay them with food, it'll be cheaper to put them on the payroll,\" said Nana Ellen with a laugh. \"Okay, so we're buying the building, now let's get started on a menu and we need to figure out a name.\" The next couple of hours they talked about what items to have on the menu and also thought of names. Holly and Nana Ellen knew this was basically putting the cart before the horse, but having this discussion got the girls involved, they would figure out later what equipment they needed to buy.\n\n*****\n\nThe Carlucci's plus Ric, Rocco and Luc were gathered around the kitchen table when Paulo, Vin and Dom walked into the kitchen. \"How's Maria?\" they asked in unison as Rose looked up and smiled.\n\n\"She's resting. Doc is keeping her sedated all night to help in the healing process,\" said Rose with a sigh. \"Are you boys hungry? The stew is gone, but Carmelo is bringing pizzas over, Holly sent two cakes, the Whitmer's, Costello's and Poffenberger's sent two trays of sandwiches from Dom's Deli, and there's about thirty casseroles in the fridge, plus more cakes, ice cream and snacks. Sophia, did you make a list of who sent what?\" Sophia nodded her head and pointed to a list on the fridge that had about forty names on it.\n\n\"We ate again at the Millers but I could eat more,\" said Paulo with a shrug. \"I got the computers hooked up, showed them how to access the site, gave the girls their laptops and handed out the new phones and got Mr. M's and Papa Mike's old ones. I also installed a new program where their house can be locked down using their phones, so I'm going to install it in all the houses.\"\n\nFrank looked at Paulo with a frown on his face, \"That's new isn't it?\" Paulo nodded his head and explained how it worked and Frank asked, \"When are you going to install it here?\"\n\n\"I can do it now, come on,\" said Paulo as he led the way into his Uncle's office. Less then five minutes later, he said to Sophia, \"Dial 'star000pound'. I made that the universal code, whatever home or business you're in that system and only that system will respond. Say Vin or Dom are at the Millers and something happens, they can access the system and lock the house down. But when we get the alerts, it will tell us what house had the emergency activation.\" \n\nEveryone in the room turned and looked at the monitors as they saw the steel plates sliding down the windows, and the security systems come alive. \"Was this what you were working on today?\" Frank asked as he looked at Paulo.\n\n\"Yeah, I knew what I wanted it to do, I just had to work out the kinks,\" said Paulo with a shrug. \"I think we can sell it to Dante for Rossi International's security division. I may have to tweak it a bit more, but I can see a market for it.\"\n\nRic started to smile and said, \"Yeah, Dante will want it. Home security systems have been a big business for the last two years since 9/11, even in Europe. There's nothing on the market like that right now.\"\n\n\"SOPHIA, WHERE ARE YOU? ARE YOU OKAY? ANSWER ME, DAMNIT,\" shouted Anthony frantically.\n\n\"I'm in Daddy's study and I'm fine, what's the matter?\" Sophia answered as she looked at her Dad and said \"It's Anthony and he's mad about something.\"\n\n\"I just got here and saw the window guards down, why are they down?\" he asked angrily. \"Let me in the damn house.\" \n\n\"Paulo installed a new security system, hold on a minute,\" Sophia answered calmly. \"Daddy, please put the guards back up, Anthony's outside and he's having a fit cause he thought something happened.\"\n\nSophia, Gianni and Marcus walked to the front door, and as soon as they heard the guards slide back into place, they deactivated the alarm and Gianni opened the door. Anthony growled loudly as he rushed in and pulled Sophia into his side scenting her deeply before saying, \"I was going crazy, I thought something happened to you, don't ever do that to me again, I had no idea what was going on, I thought you were hurt, maybe somebody attacked you and had taken you away from me and I was going out of my mind I was so worried.\" \n\n\"Calm the fuck down Ant. Do you think with all of us here, we'd let something happen to her?\" asked Gianni as he glared at Anthony. \n\n\"Don't tell me to calm the fuck down Gianni. When you find your mate and you're worried about her then you'll know what it feels like to have your heart pounding so hard in your chest it feels like it's going to explode,\" said Anthony forcefully as he pulled Sophia even closer to him and scented her deeply to calm himself down. \n\nSophia tilted her head and calmly whispered, \"Aletta, I thought you were coming straight over when you got off work; I even saved you some cake.\"\n\nAnthony took a deep breath before answering, \"You know I have to work a certain amount of hours every month, I figured I'd work a couple extra since we didn't have anything planned and you'd be busy.\"\n\nThe sounds of laughter could be heard from the kitchen and Sophia said, \"Come on into the kitchen, Aletta did you eat dinner?\" Anthony finally started to calm down and held her hand as she led the way into the kitchen.\n\n\"I had two 12\" Italian cold cut subs from Dom's Deli during break, but I'm still hungry,\" said Anthony as he rubbed his stomach. \"What do you got?\"\n\nSophia started to giggle as she opened the fridge and said, \"What don't we have would be a better question. We should probably eat the sandwiches from Dom's Deli first, they'll go soggy if we leave them too long.\" Anthony took both trays out of the fridge and placed them on the breakfast bar while Sophia got dips, a veggie tray, macaroni salad, potato salad and baked beans out of the fridge. Lorenzo went into the pantry and got plastic plates, cups and utensils out while Vin looked in the fridge and got several casseroles and put them in the oven. \n\nWithin fifteen minutes the two large trays of sandwiches and everything else was gone and the boys were pulling casseroles from the oven and putting them on the breakfast bar. Ric looked at the boys and said, \"I never ate like your boys, even when I was going through my growth spurt.\"\n\nDamian looked him up and down and said with a smirk, \"Are you sure you went through a growth spurt? You look like you stopped growing when you were seventeen, you're the same height as me...Wait a minute, I think I do detect a growth spurt...around your waist or is that the start of middle age spread?\" Frank started laughing so hard he was choking but Damian wasn't done yet, \"And I got to be honest, that grey hair makes you look like you're a hundred years old, you look like Grandpa from 'The Munsters'. You should have Alpha Carlo pick you up some Grecian Formula at least you'll look your real age of sixty.\" \n\nRic wasn't sure if he wanted to laugh or kill the boy, instead he said, \"You know damn well, I'm not sixty, I'm the same age as your father.\" Rocco started laughing which caused Ric to look at him and narrow his eyes, \"Don't laugh, you're starting to go grey at the roots.\" Rocco's eyes got wide and everybody laughed as he jumped up and ran to the mirror in the hallway and started to look at his hair.\n\n\"Ric, it's good to have you here,\" said Frank as he slapped his cousin on the shoulder and he glanced at Luc and sighed. \"Even you Luc.\"\n\n\"I could not sit at home knowing my cousins were in danger,\" said Luc seriously as he shrugged. \"Nonna thinks it would be good to send the women to Italy when the battle comes to keep them safe.\"\n\nRose and Sophia turned their heads to Frank and watched his reaction. He shook his head but before he could say anything, Anthony stood up and moved Sophia behind him as he shouted, \"YOU ARE NOT TAKING MY MATE AWAY FROM ME. HOW MANY FUCKING TIMES DO I HAVE TO TELL EVERYONE THAT?\" \n\nFrank calmly said, \"Sit down Anthony, nobody is taking Sophia away from you.\" He let out a long breath and continued, \"Carlo, Joe and I talked about sending them to Italy and decided against it. The only way we can make sure this ends is to carry on like we usually do, and that means our women and youngsters stay here. Once Aldo tells us it is close to the time, they will be put in the Pack safe room. The only way they'll get to them is if they take the whole fucking mountain down.\"\n\n\"I'm pulling up to the house now,\" said Carlo.\n\nFrank got up and his family looked confused until he walked into the room with Carlo, Dante and Gina. Anthony nodded his head at his parents and said with his mouth full of food, \"Wachya-doin' here?\"\n\n\"Anthony Eduardo Rossi, your manners are horrible and I taught you better,\" Gina said with a frown as Carlo started to laugh.\n\n\"Sorry mommy,\" Anthony answered with a smile before shoveling another forkful of food into his house.\n\n\"Did you tell them yet?\" Carlo asked as he stared first at Frank then Anthony.\n\nFrank shook his head and looked at the male Clan members and said, \"I need you to pay attention boys.\" Frank took a deep breath and waited until he had their attention before continuing, \"Carlo, Joe and I were going to talk to you before the meeting but since it was cancelled the parents are telling their youngsters tonight. Last evening we came to a decision regarding the youngsters. We didn't tell you because we wanted to discuss it with our mates and make the final decision together.\" He looked at his mate who stood up and came to stand behind him putting her hands on his shoulders and squeezed them lightly.\n\nCarlo grabbed Gina's hand before looking at Anthony as he continued, \"All the boys aged eighteen and older are going to fight, those aged seventeen it will be up to the individual family if they fight, those sixteen and younger it will be mandatory for them to be in the safe room. No exceptions to the age rules.\"\n\n\"That means I'll be able to fight, because I'll be eighteen,\" said Anthony as Gianni, Marcus, Lorenzo and Damian echoed in unison, \"Me too.\" Hearing Sophia's gasp, Anthony put his arm around her and pulled her tightly to his side as she buried her face in his neck, muffling her quiet sobs. \n\n\"Yes, you will be able to fight, but you won't be on the front line. You will be part of the third line of defense,\" said Carlo with a frown at the look on the boys faces. \"We will work on the details later, and I don't want to argue with the five of you.\" The boys nodded their heads, determined to prove their worth in the defense of their Pack.\n\nEnzo glanced at Gino, Paulo and Michael and said, \"What about us Dad? We'll be seventeen. Are you going to let us fight?\"\n\n\"No, your job is much more important,\" Frank said quietly, almost in a whisper, as he shook his head. As Rose's eyes started to tear up, the younger boys looked at each other in confusion. \"The six of you along with the other youngsters will have the ultimate responsibility and one you cannot fail at.\" The six young boys sat up straight as they glanced at each other before staring at Frank then Carlo. \n\nCarlo cleared his throat and said, \"If we fail and they defeat us, it will be your job to protect the Elders, women, girls and young ones. You will be our last line of defense, and we are counting on you to ensure their safety and the continuation of our Pack. That means you have to get them to safety, by whatever means necessary.\"\n\n\"We talked it over with Joel, Jerry, Harold, Barry, Larry and Todd...they are counting on the six of you to protect their youngsters and mates if something happens to them. Do you understand what this means? How much confidence they have in you that they are placing their families in your care?\" Frank asked quietly.\n\n\"Yes, sir,\" the six boys nodded their heads solemnly, knowing along with the other youngsters the entire existence of the Pack rested on their shoulders. The Elders would be able to help but most were in their eighties or nineties, and the women would be mourning the death of their mates and family, so they wouldn't be able to help as they normally would. \n\n\"How do we do this? And where do we go?\" Enzo asked quietly, his voice shaking with the knowledge that this meant his father, uncle, older brothers and cousins would most likely be dead.\n\nFrank reached across the table and grabbed his hand saying quietly, \"You can't think of what you may lose son, you have to think about the future and the continuation of the Pack.\" The boys nodded their heads, pushing their turmoil to the side as they listened intently.\n\n\"We can't tell you where to go, we can't know that,\" Alpha Carlo said gently. \"In case any of us are taken hostage and tortured, we can't know of your plans. All we can do is prepare you and make sure you have what you need when the time comes. Paulo, we need you to open new bank accounts, ones we don't know about; we already have passports and identifications under false names, but you will need to obtain new ones, so we don't know the names you are using; you will need to obtain vehicles, from someone other then Vinnie, so you can escape.\"\n\nDante looked at the boys with sadness in his eyes, \"One place that will not be safe for you will be Rossi Pack that will be the first place they look. The one thing I can do to help is have several of my planes at your disposal. I'll have them delivered to Hagerstown Regional and you make whatever arrangements you need to hide them. You would have to hire your own pilots and have them on standby to take you wherever you decide to go, but again we can not know the details.\" \n\n\"No matter what we provide for you, your greatest asset will be each other. We've taught you to love and protect each member of the Pack and we are relying on you to do that after we are gone,\" said Frank in a calm soothing voice that was at odds with the sadness in his eyes. \n\n\"We won't let you down,\" said Michael quietly with tears in his eyes as the other boys nodded.\n\nFrank swallowed the lump in his throat and nodded his head, \"I know you won't.\"\n\n\"How will we know when it's time for us to escape?\" asked Paulo looking at his uncle as he tried to blink away the tears in his eyes.\n\n\"If you hear the command 'PROTEGGERE' then you know it's time,\" said Carlo quietly. \"You must ignore your grief when you feel your family in pain or the family bonds breaking and if I fall, the transfer of Alpha power from me to Anthony. There will be time to grieve later, we need you to be strong for the Pack to survive.\" The six boys nodded their heads in understanding.\n\nCarlo stared at his son for several minutes as the room remained quiet. \"Anthony, if you feel my bond break, you know that means you are now Alpha. Lorenzo, Damian, Gianni and Marcus if that happens it will be your responsibility to have a plan in place to get him to safety. As soon as you are able you will contact Enzo and tell him Anthony is secure and you will stay there until either the battle is over or the command is given. If the command is given, Enzo will tell you where to meet them so you can escape with the others. Enzo you must have this meeting place arranged already, but again you can't tell them until absolutely necessary.\" The Carlucci boys nodded their heads as they looked at their Alpha and then Frank.\n\n\"I'm to run and hide? While you lay dead somewhere and my Pack is still fighting? Shouldn't I be leading them?\" Anthony asked as he stared at his father, his eyes filled with unshed tears.\n\n\"No, you are to escape to ensure the future of the Pack,\" said Carlo with a firm voice. \"After the battle, the remaining members of the Pack will need somebody to guide them, to be their Alpha and that my son is you. Don't ever forget who you are, you are a born Alpha...from the day you were conceived you were meant to one day lead this Pack and they will look to you for guidance and protection. You can't let them down.\" \n\nCarlo coughed to clear the sudden lump in his throat and looked at his hand entwined with his mates, before saying quietly, \"You have the blood of countless generations of Rossi Alphas spanning over two thousand years flowing through your veins my son, you can't let them down...you can't let me down.\" \n\nAnthony took a deep breath and wiped the tears that were threatening to fall as he said quietly, \"I won't let you or the Pack down Dad. You and mom have taught me well and I know my duty to my Pack and my family. I'll make sure if anything happens to you, South Mountain Pack will continue and a Rossi will be Alpha.\"",
        "Lorenzo looked at his Uncle and nodded his head before looking at his Alpha and saying in a clear firm voice, \"And there will always be a Carlucci by his side to protect him and the Pack.\" "
    ],
    "authorname": "pocketbooklover",
    "tags": [
        "werewolves",
        "alpha-heir",
        "beta's",
        "italian",
        "were's"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/south-mountain-pack-ch-12"
}