{
    "title": "Needlepoint and Cream Pie",
    "pages": [
        "Bukkake: The act of multiple men ejaculating onto one person's face.\ncumslut: A person seen as one who will do anything to receive a man's semen\n\n\n\nThe quiet sound of tires on asphalt drew Cyleste and Brett into its spell. In the back of Brett's big pick-up, Cyleste's precious antique dresser was lashed down. It was the second half of a day spent driving to pick up her online auction win. Corn and soybean flashed by hypnotically on either side and the conversation had veered into dangerous territory.\n\n\"So, do you watch a lot of porn?\" she asked once the setting sun had ended its pink, purple, and gold light show.\n\n\"Define a lot,\" he said, laughing again. The drive had been filled with easy laughter. For the last three years, Brett and Cyleste had been work neighbors. She ran the watch store next door to the shoe store he managed. On slower days at the strip mall, they would meet on the sidewalk between their stores and chat. Those conversation had always been tame and generic, focused on how slow it was, what the weather would do, and occasionally a funny story about a difficult customer.\n\n\"I'm serious,\" she said, contradicting her words by giggling.\n\n\"First of all, pretty girls don't watch porn.\"\n\n\"Oh, don't start that again,\" she said. In the dark cab of the pick-up, he saw she was smiling, but couldn't tell if she was blushing. \"I'm too skinny, too short, and too flat-chested to be pretty. And have you ever looked at my nose? It looks like Michael Jackson's nose, after surgery.\"\n\n\"You have a cute nose,\" Brett promised, still amazed that Cyleste had no idea the impact she had on men. She was short, barely over five feet tall. And while she thought her breasts were too small, they matched her petite size perfectly. \"You're not short, you're fun-sized.\"\n\n\"Do you think that's wrong?\"\n\n\"Being short?\"\n\n\"No, silly, that I like to watch porn. Is that weird for a girl to say?\"\n\n\"Maybe. I don't know. Do you watch a lot of porn?\"\n\n\"Hey, that's not fair! That's the question I asked you!\" she said, playfully slapping him.\n\n\"I'm a guy, Cyleste. Of course I watch porn. All guys do.\"\n\n\"What kind of porn do you like?\"\n\n\"No way,\" he laughed. \"You first.\"\n\n\"Maybe what I watch is really sick and twisted.\"\n\n\"Yeah, right. If you've watched it, I've seen it.\"\n\n\"Pee vids? You ever watch those?\"\n\n\"I've seen a few. Who does the peeing?\"\n\n\"Oh, I didn't know there was more than one kind. I only saw one where the guy was peeing on the girl.\"\n\n\"Did you like it?\"\n\n\"Not really. I thought it was going to be something different.\"\n\n\"Like what?\"\n\n\"Like a facial. Those are the kinds I like best.\" She covered her face with her hands. \"And I can't believe I just admitted that.\"\n\nBrett used her embarrassed moment to adjust the front of his pants. \"No shit?\"\n\n\"No shit,\" she said, putting her hands down and staring straight ahead. \"What about you? What do you like to watch?\"\n\n\"The usual kind,\" he hedged. \"Lesbian stuff. That's always good for me.\"\n\n\"Is that all you watch?\"\n\n\"No, but you know the deal, you go with what works.\"\n\n\"Yeah,\" Cyleste giggled. \"I guess those others probably wouldn't do much for you, would they?\"\n\n\"Oh, I wouldn't say that. I like those, too.\"\n\n\"Now you're just saying that.\"\n\n\"No, I'm serious. I'll use facials sometimes.\"\n\n\"Use,\" she repeated, giggling. \"I like that.\"\n\n\"Well, what do you do when you're watching porn? Needlepoint?\"\n\nCyleste laughed hard and Brett laughed with her. \"I do a lot of needlepoint,\" she howled.\n\n\"I should have said knitting,\" he said, still laughing. \"Needlepoint doesn't sound right for a guy to say,\" and that set the two of them off again. When their laughter finally eased, Brett was still curious. \"You really like watching facials?\"\n\n\"Yeah, I do,\" Cyleste admitted, wiping away a tear from laughing so hard. \"Well, if I'm going to do some needlepoint, I do.\" \n\n\"And how often do you needlepoint?\"\n\n\"A couple times a week. What about you?\"\n\n\"Yeah, about that.\" Brett was aware of how she was staring at him and wondering if she could tell he was lying. Brett masturbated four or five times a week, even if he was getting laid regularly. He wanted to ask if she liked facials in real life, too, but didn't think it was appropriate. Instead, he asked, \"Ever figure out why you like watching those?\"\n\n\"Why do you watch lesbians? If they're real lesbians, they wouldn't want you to join in.\"\n\n\"I know. It's easy, two hot women for the price of one, you know? What about you?\"\n\n\"I like how it looks when a guy gets off. And I think it's sexy to see it dripping off her face or when she plays with it. Is that weird?\"\n\nBrett needed to adjust again. He checked the corner of his eyes and saw her looking at him. He tried to ignore the uncomfortable bend he was feeling as his prick grew harder. \"What about when they cum on her tongue?\"\n\n\"Yeah, that's hot, too. Or when they cum on her tongue and then she kisses her girlfriend. That's really hot!\" Brett squirmed. \"Problem?\" she asked.\n\n\"Maybe we should talk about something else for a while,\" he said, unable to tolerate the bend any longer. He grabbed the front of his pants. If that offended her, she would have to deal with it.\n\n\"Feeling like doing some needlepoint?\"\n\n\"Yeah, something like that,\" he laughed.\n\n\"I saw this one video where there were a bunch of guys who came on her. They didn't do her, you know, have sex with her. Well, I guess she played with them. Sucking them some. But mostly, they just stood in a circle and came on her.\"\n\n\"Bukkake,\" Brett said, glad he had adjusted himself. He could deal with a raging hard-on, but the way he had been bent was hurting. When he glanced at her, he saw the puzzled look on her face. \"That's what that's called. I think it's Japanese. Otherwise, it's just a gang-bang.\"\n\n\"Bukkake,\" Cyleste repeated, trying out the word. \"Does it always include her girlfriend licking her clean, too?\"\n\n\"No, I don't think so,\" he said, feeling his prick pounding against his zipper.\n\n\"Okay. Well, it would have been hotter if some guy had licked her clean. I don't know, seeing two chicks together doesn't do a lot for me.\"\n\n\"That doesn't sound gay to you?\"\n\n\"Why? It's not as if he's sucking any of the guys, right?\"\n\n\"Yeah, but most guys sort of freak out about that sort of thing.\" Brett squirmed again. He was not one of those kind of guys. But he could tell, Cyleste misinterpreted his squirming.\n\n\"Guys like you,\" she said, her voice soft and apologetic.\n\nBrett sighed. How much was he willing to admit? His throbbing cock gave him one answer, but could he trust that advice? He saw how Cyleste had taken a sudden interest in staring out of her window at the dark rows of corn and soybeans. \"I think that's hot as hell,\" he said, his own voice as soft as a whisper.\n\n\"Excuse me?\" she asked, looking at him.\n\nBrett cleared his throat. \"I said, I think that's hot as hell.\"\n\n\"Bullshit, but thanks,\" she said, choosing her window again.\n\n\"I'm serious.\"\n\n\"Have you ever... you know, tasted it before?\"\n\nHe nodded before glancing at her to make sure she was looking. She was. In the dim glow of the night and dashboard lights, their eyes met. \"More than once.\"\n\n\"Yours?\"\n\n\"Well, when I'm doing needlepoint, it is handy,\" he said, drawing a giggle from her.\n\n\"But you've done it on purpose, right?\"\n\nThe road in front of Brett was long, straight, and flat. With cruise control set, his only job was to aim his truck in the right direction. Still, he stared straight ahead, feeling Cyleste's stare against the side of his face. He felt like he was blushing. Was he? Did it show? He didn't know. Even a glance in his rearview mirror couldn't answer those questions. \"Have you ever heard of a creampie?\"\n\n\"Why do I think you're not talking about  cream pie versus coconut pie?\"\n\n\"It's when a guy goes down on a woman after...\" he swallowed hard. \"After they've made love.\" He felt a new pounding in his body, his heart against his chest. Was he really have this conversation?\n\n\"You do that?\"\n\n\"I have,\" he said, sure that he was blushing.\n\n\"Fuck, that's hot as hell,\" she said in a hoarse whisper he barely heard. When he glanced at her, he saw her squirming, too. Hearing her use the word \"fuck\" got to him, too. So far, they had been careful with their language. He was sure he had heard her say it before, but he couldn't think of when. \n\n\"I did it during a threeway once.\"\n\n\"Stop it.\"\n\n\"Sorry,\" he mumbled.\n\n\"No, I meant, stop it because you're getting me excited.\"\n\n\"Is that a bad thing?\"\n\n\"I don't know. I know you're making me want to do some needlepoint.\" When Cyleste giggled again, all Brett could notice was how musical of sound that was.\n\n\"You could if you wanted to.\"\n\n\"While you're driving?\"\n\n\"Why not? I'm the one driving.\"\n\n\"I think I can control myself.\" She squirmed again before adding, \"Maybe.\"\n\n\"Well, now you know my big secret.\"\n\n\"I don't understand.\"\n\n\"I like that. I like doing that.\"\n\n\"Giving cream pies? What guy doesn't?\"\n\n\"No, I mean eating them.\"\n\n\"Oh!\" she said, making him wonder what she thought he meant from the beginning. \"You mean, you did that? During your threesome?\" He nodded. \"After the other guy, it was two guys and a girl, right?\" Another nod from him. \"So after the other guy, um, did her, you went down on her?\"\n\n\"Well, I wasn't going to do it while he was doing her.\"\n\n\"So you're not gay\"\n\n\"No, I don't think so. I just, I don't know. I'm not afraid to taste myself.\"\n\n\"I thought you said the other guy had been doing her.\"\n\n\"I did.\"\n\n\"And you still went down on her?\" He nodded. \"And liked it?\"\n\n\"Yeah. Is that wrong?\"\n\n\"Did she like it?\"\n\n\"I guess. I mean, she came again. I think I know what I'm doing when I'm down there.\"\n\n\"What about the other guy? Did he freak out?\"\n\n\"Yeah, a little. That's why I said most guys think it's weird.\"\n\n\"What if I woman goes down on you, will you still kiss her?\"\n\n\"Yeah, why not?\"\n\n\"But what if she finishes you while she's down there, how about then?\"\n\n\"I'd still kiss her.\"\n\n\"What if she forgets to swallow before she kisses you?\"\n\n\"Stop it,\" Brett said, growing worried how much excitement he could take inside his pants. If he got any more excited, he would start leaking pre-cum and how would he explain that? \n\n\"Ever lick it off anywhere else?\"\n\n\"Like where?\"\n\n\"I don't know, like from her chest or anything?\"\n\nHe shook his head. \"I would, but it's never happened.\"\n\n\"What if it belonged to someone else? Would you do it then, too?\"\n\n\"Yeah, I think I would.\"\n\n\"You think, but you don't know.\"\n\nHe laughed. \"Well, it's not as if I ever had the chance.\"\n\n\"Right,\" Cyleste said, looking forward. She wiggled in her seat again. \"Okay, imagine it was a bukkake situation, would you lick her clean afterwards.\"\n\n\"Okay, now we really have to stop,\" he said, clutching the front of his pants. \n\n\"Problem?\"\n\n\"Yeah, I'm hard as hell and I don't want to cream my jeans,\" he said, too close to care if it was a polite thing to admit or not.\n\n\"Let me see it.\"\n\n\"No.\"\n\n\"Why? You can't drive and show it to me at the same time?\"\n\n\"No, it's not that. If I pull it out, I'm going to want to play with it.\"\n\n\"I could play with it for you.\"\n\n\"Do you want to do more than play with it?\"\n\n\"Not really,\" Cyleste said. \"Is that okay?\"\n\n\"Hm, let me think. Is it okay for a beautiful woman to give me a hand-job? Yeah, I think so.\"\n\nGiggling, Cyleste slapped him again. \"You're a nut.\"\n\n\"I'd like to bust a nut,\" he said, spying a rest area up ahead. Rather than risk getting jerked off while driving, he pulled in, parking away from the other cars. \"This okay?\" \n\nCyleste giggled again. \"It's like we're parking.\"\n\n\"Is it okay if we kiss?\"\n\n\"Hm, I'm going to touch your penis and you want to know if it's okay for us to kiss, too?\"\n\n\"Does that mean 'yes?'\"\n\n\"You're a nut,\" she repeated, leaning over and kissing him on the cheek. \"Better?\"\n\n\"Almost,\" he said, cradling the back of her head in his hand and pressing his lips against hers. As he held her face against his, he used his other hand to undo the front of his pants. Once his pants were pulled open, Cyleste put her hand on top his prick. She moaned as soon as she touched it. With a soft, slow motion, she began stroking him up and down. Her tiny hand felt good. He moaned, too.\n\n\"I want to see you cum,\" she said between kisses, looking down between his legs. \"Let me know when, okay?\"\n\n\"Sure,\" he agreed, going back to kissing her. It wasn't going to take long. Was that a good thing or a bad thing? He didn't know. Considering where they were parked, he was sure they shouldn't take too long. But if he came too fast, would she think he had no self control or would she think he was that excited? As she tugged and pulled gently on his hard cock, he realized he didn't have much time to decide. Lost inside her kiss, he allowed nature to take its course. \"Oh yeah,\" he said, pulling away from her lips. \"I'm really close.\"\n\n\"You feel so good,\" she said, looking down, as if she was addressing his hard dick. \"Do it for me, Brett. Do it.\" Moaning again, he moved his hips in counter-point to her strokes. He was so close. He moaned again, wanting to tell her, but unable to manage more than a moan. Getting the message, she reached down with her other hand, too. Stroking him a bit faster, she brought him off, aiming his cumshot for her open palm. He came, shooting off against her hand. \"Oh wow,\" she purred as soon as he started. \"Do it, Brett. Do it.\" After his last spurt, he shivered. Running her thumb up the bottom of his shaft, she milked one final droplet from his prick and into her hand before holding her hand up to his mouth. \"Now eat it,\" she said.\n\nBrett didn't hesitate to ask questions. He pressed his mouth against her hand, licking and lapping at her palm as if he was a dog cleaning gravy off his master's hand. She helped him, pressing her palm against his mouth and tongue, feeding it to him as fast as he could lick until there was nothing left.\n\n\"Fuck, that is the hottest thing I've ever seen,\" she said, sitting back in her seat. She pulled the front of her pants open and shoved her hand inside. \"This is okay, right?\"\n\n\"Go for it,\" he said, his voice a hoarse, raspy growl. \n\n\"Kiss me.\"\n\nHe did.\n\n\"Mm, you taste good,\" she said between kisses. He could smell her, smell how excited she was, and he felt the way her hand moved urgently inside her panties. Moments later, her body went tense and she lost her ability to kiss him back. He kept kissing her, though, and she seemed to like it. When her orgasm was done, she sighed and smiled. \"Now start driving before we get in trouble.\"\n\nHe put his truck back in gear, backed out of the space, and hit the road again. \"Did we really just do that?\" he asked. He knew they had. His pants were still pulled open and his prick hung out. \n\n\"You tell me,\" she said, holding a finger to his nose. He couldn't resist. He grabbed her finger with his mouth and sucked it. \"That was really hot.\" He guessed she meant more than him sucking on her finger. \n\n\"Yeah it was.\"\n\n\"Feel better?\"\n\n\"For now.\"\n\n\"Eating your cum really doesn't bother you, does it?\"\n\nBrett laughed. \"Did it seemed that way?\"\n\n\"No,\" she said, laughing a little. \"I mean, it's cool that you're cool like that.\"\n\n\"I'm not gay.\"\n\n\"Did I say you were?\"\n\n\"No, but I'm just saying, okay? I'm not squeamish, that's all. I like girls.\"\n\n\"Have you ever been with another guy?\"\n\n\"No. The closest was that one threesome and our swords never crossed.\"\n\n\"Did you want your swords to cross?\" she asked, laughing at how he said it.\n\n\"Not really.\"\n\n\"But you did go down on her after he came inside of her, right?\"\n\n\"Yeah.\" Brett nodded. \"I didn't care that he had just done that.\" But as he said the words, he knew that wasn't quite right. \"Okay, maybe I did care, but that's where it gets twisted.\"\n\n\"You wanted to eat her more because he just fucked her, didn't you?\"\n\n\"Do you think that makes me gay?\"\n\n\"No, but I think there's more to it,\" she said, making Brett squirm, but not from a rising thrill. He squirmed because he was getting nervous. Cyleste guessed it. \"You want to suck dick, don't you?\"\n\n\"I don't know,\" he admitted.\n\n\"Come on, you want to drink that hot cum right from the spigot, don't you?\" she teased.\n\n\"Stop it,\" he said, squirming again.\n\nCyleste put her hand in his lap, squeezing his prick. \"Tell me the truth. You want it, don't you?\" She could feel his hardness. How could he lie?\n\n\"I don't know what I want.\"\n\n\"But you like the dick, don't you?\"\n\nHe snorted. \"That's all I like.\"\n\n\"But you'd suck it if you could, wouldn't you?\"\n\n\"Maybe.\"\n\n\"What if he came on you? Would you like that?\"\n\n\"No.\"\n\n\"What if he came in your mouth? Would you like that better?\"\n\n\"Yes.\"\n\n\"Interesting,\" she said, still caressing his hard cock. \"I think we need to do this.\"\n\n\"Do what?\"\n\n\"Have bukkake party. You and me.\"\n\n\"It takes more than just us.\"\n\n\"I know, but would you do it with me?\"\n\n\"Does anyone have to know it's me?\"\n\nCyleste laughed. \"They better not know it's me, that's for damn sure.\"\n\n\"So, strangers?\"\n\n\"Hot looking strangers.\"\n\n\"With big dicks?\"\n\n\"Sure, I don't care. I'm not going to ride any of them. I just want them to cum on me and you to lick me clean.\"\n\nBrett and Cyleste spent the last hour of their drive talking about the idea. Brett wasn't sure if she was serious or enjoying the fantasy, but the more they talked about it, the more he wanted it. When they reached her small house, he helped her muscle the big dresser inside her garage where she would refinish it. \"I had fun today,\" he said, walking out the garage door towards his big truck.\n\n\"Me too,\" she said, following after him and closing the door. \"Do you work tomorrow?\"\n\n\"Yeah, I open. You?\" he asked, opening his door to the cab.\n\n\"I don't go in until one. Do you want to come inside for a minute?\"\n\nIt felt to Brett as if she was being polite, nothing more. \"Nah, it's okay. It's late.\"\n\nCyleste smiled at him. \"What if I said I want you to help me with some needlepoint?\" Brett closed the door to his truck and followed her inside. Cyleste's tiny home was filled with antique furniture, knick-knacks, lamps, and interesting curios. He didn't get much of a chance to admire it until she stepped forward and kissed him. His eyes locked on hers as she stood against him, rubbing the front of his pants. \"I want you to cum on me, that's all. Can you do that?\" He nodded, too dumbfounded to speak. \"Is it okay if I get undressed?\" \n\n\"Yes,\" he managed, his voice a hoarse whisper.\n\n\"You too, get naked, but this is all we're going to do, okay?\"\n\n\"Yes,\" he hissed, which sounded better than the hoarse whisper he first managed. As he pulled off his clothes, his eyes never left Cyleste. He watched as she pulled off her t-shirt and unsnapped her bra. Her breasts were small, but still worked on her small frame. In her hands, her breasts were a handful. In his hands, they wouldn't be, but he didn't try to touch her. They shimmied out of their pants together. Brett saw how her dark tan never stopped, even when she pulled off her panties. \n\n\"I need to shave,\" she said, cupping her pussy. He couldn't tell, but then, he wasn't touching her. \n\nWhen they were both naked, she knelt in front of him. One of her tiny hands stayed between her legs, rubbing and stroking her pussy. With her other hand, she caressed his hard prick. \"Do it, Brett,\" she said, looking up at him with pretty grin on her face. \"Cum on me. Be my bukkake party.\" She licked and sucked him a few times, her hand never left his cock and balls, but she allowed him to do the work as her eyes slipped back and forth between his hand (and cock) and his face. \"Do it,\" she said, like before. \"Cum on me.\"\n",
        "Brett's earlier orgasm gave him an extra couple moments to appreciate seeing her on her knees, but no more. He had spent too long hard and excited. His body needed this. \n\n\"On me,\" she reminded him, rightly guessing he was close. \"My face, okay?\"\n\nHe nodded, unable to talk as his body went as rigid as his prick before his orgasm began. He came, pressing down on his prick to aim it at her face. He came, watching as the first spurt struck her cheek and moved across her lips. Another spurt struck the bridge of her nose. As she turned her head to the side, he pasted her opposite cheek before the last two spurts lost intensity, landing on her chin, her neck, and one final drop landing on the upper most curve of her left breast, well above her nipple. \n\n\"Now get down here and lick me clean,\" she said, her hand on the back of his knee, breaking the lock of his rigid body. Falling to his knees, Brett licked her cheek. As he ran his tongue across the bridge of her nose, she started giggling, but mixed into her giggle was an orgasm for her, too. After licking her chin, he held her chin, turning her head so he could lick her other cheek. \"Yes!\" she gasped near his ear. As he chased down the last drops of his orgasm, she shuddered with her orgasms and he saw the fury of her fingers pressed between her pussy lips. After licking her chest, he sucked on one of her nipples. She grabbed his head, pressing him against her until chest until she was done. Kneeling in front of each other, they kissed. \"We need to do this for real,\" she said, breathless and with a wild look in her eyes. \"For real.\"\n\n\"Tell me that tomorrow and I'll believe you,\" he said, giving her one more kiss before pulling away. He started putting his clothes back on, respecting her limits. She stood with him, staying naked, watching him dress.\n\n\"You're an interesting man, Brett.\"\n\n\"Not half as interesting as you,\" he said after poking his head through his t-shirt. He gave her one more kiss and left.\n\n\n\n\nBrett hated that he had to open while Cyleste didn't work until that afternoon. He watched the clock, distracted all morning by memories of last night. He thought about calling her or sending a text and decided against it. Better to play it cool incase yesterday was a fluke. Brett knew he was an okay looking guy, but he wouldn't put himself above average. He was in good shape, but not a gym rat. Getting dates had never been a problem for him, but Cyleste had always felt out of his league. \n\nIt was 12:30 when he heard the backdoor buzzer. That was odd, because he wasn't expecting a delivery and the rest of his help for the afternoon was already on the sales floor. He peeked through the peephole before opening the door for Cyleste. \"Hey neighbor!\" he said, all smiles. \n\nShe stepped inside the door, closing it behind her. \"I've been doing a lot of thinking,\" she said, looking past him to make sure they were alone before she moved up on her tiptoes and surprised him with a kiss. \"You're a real cumslut, aren't you?\"\n\n\"Excuse me?\" he asked, rocked back on heels. She was still smiling and so was he, but his smile felt funny on his face.\n\nShe grabbed the front of his pants. \"Do you know how much needlepoint I had to do after you left last night?\" On tip-toes again, she stole another quick kiss from him before he started laughing.\n\n\"I guess this means you had fun?\"\n\n\"Cumslut,\" she muttered again. She looked past him once more before grabbing his hand on putting in on her breast. \"Tell me you want this.\"\n\n\"Are you kidding?\"\n\n\"You didn't try anything last night.\"\n\n\"I didn't think you wanted me to.\"\n\n\"I didn't.\"\n\n\"Crazy person says what?\" he asked, grinning like a mad man. Her tiny breast felt good in his hand. Maybe not as good as her hand on his prick, but close.\n\n\"I want this.\" She squeezed his crotch. \"And this.\" She put her hand over his chest. \"And more of this.\" She finished by moving her hand behind his neck and pulling down to her for another kiss.  \"And maybe this,\" she added, grabbing his ass with both hands. \"Questions?\"\n\n\"I thought you had a boyfriend.\"\n\n\"Fuck him and his BMW driving ass. Where was he when I needed help picking up that dresser?\" After kissing him again, she pulled back a bit. \"Am I going too fast?\"\n\n\"Let me check something,\" he said, pulling her into his arms. He kissed her, deeply, caressing her tongue with his while his hands roamed her body. He grabbed at her breasts and clutched at her ass, his hand moving as if he needed to touch everywhere at once and, in a way, he supposed he did. He finished by shoving his hand down the front of her pants, cupping her smooth pussy, and wiggling a finger between her lips. Hand still in her pants, he pulled away from their kiss. \"Am I?\"\n\n\"Call in sick.\"\n\n\"I'm already at work.\"\n\n\"So?\"\n\nLaughing, he pulled away from her. He took a moment to adjust the lump inside his pants, pulling it to the side, shoving his hand in his pocket, and holding it down with hand. Walking out front, he stood behind a rack of shoes and told his assistant manager, \"Something's come up. I need to take the afternoon off. Think you can handle things?\"\n\n\"Everything okay?\" the older woman asked, looking concerned.\n\n\"It's a needlepoint emergency,\" he said, grinning from ear to ear.\n\n\"Excuse me?\"\n\n\"It's nothing bad, just some business I need to take care of.\"\n\n\"What's needlepoint have to do with it?\"\n\n\"Nothing at all,\" he said, knowing he wasn't making any sense. He made sure she was fine with working the afternoon alone. She was and he left. Cyleste was waiting for him by the door. \"So what are we going to do?\"\n\n\"Before or after we're done fucking?\"\n\n\n\nLaying next to her in her antique bed, Brett's head was still spinning with how fast things were moving. It was barely two o'clock, he had had two orgasms, fucked Cyleste twice, and gone down her three times (once before they fucked and then after each of his orgasms). She cuddled next to him, her head on his chest as he admired her bedroom. \"You really have a thing for old stuff, don't you?\"\n\n\"I like things that have stood the test of time,\" she said, drawing lazy circles around his nipples. \n\n\"Did you really refinish all these yourself?\"\n\n\"Every bit of it,\" she said. \n\n\"Tell me about this bed,\" he asked, admiring the deep mahogany wood that formed its pillars. \n\n\"Really?\" she asked, lighting up as she began telling him everything she knew about the style of workmanship, the type of wood, where she had found it, and how she had refinished it. She was so cute and animated that he asked her about the dresser next. Wandering naked through her small house, he followed her as she told him the story of every prized possession. Some of the items were dismissed as reproductions while others had longer stories. The more she talked, the more she touched him. She went from holding his hand as she led him from piece to piece to cuddling next to him as she described the piece's history. The tour was far from over before they wound up back in her bed for another round of lovemaking. \n\n\"Lay down,\" she told him, straddling him. She drew his hard prick inside of her and began riding him. She braced her hands against his chest as she moved up and down, squirming and working his prick with internal muscles he didn't know women had, much less, could flex. \"What if I ride you like this while those guys are cumming on me?\" she asked.\n\n\"Might give them the wrong idea,\" he groaned.\n\n\"You're probably right,\" she said, her voice a soft sigh. \n\n\"But if you let them fuck you, I'd have to eat your cream pie.\"\n\n\"I forgot about that,\" Cyleste said as her pussy tensed, gripped, and grabbed at his prick. \"After you cum inside of me, I'm going to ride your face.\"\n\n\"Oh fuck,\" he said, grabbing her narrow hips and forcing her to sit still.\n\n\"Problem?\" she asked, her internal muscles still busy at work. He gave trying to hold back. Releasing his grip on her, he still rested his hands on her fine hips until she brought him off. The moment after his last spasm, he helped her move to his face and he drank the mixture of their lovemaking directly from her while his spent prick continued to throb with joy. \"Cumslut,\" she said, pulling away and kissing him.\n\n\"You say that as if it's a bad thing.\"\n\n\n\n\nIt was Brett's idea to rent the suite style hotel room for their special night. Together, they had screened the men who had answered their online ad. They sat together nursing the single alcoholic drink they were allowing themselves. \"Nervous?\" he asked.\n\n\"I still don't know if I want to be here when they arrive or wait for them.\" \n\nThe disposable pay-as-you go cell phone had been Cyleste's idea. It chirped with a text message. Brett showed it to her. \"Guess it's time to make up your mind.\"\n\n\"Fuck it, I'm staying right next to you.\"\n\nBrett smiled and texted back the room number. Two minutes later, there was a soft knock and a short, thin man wearing a big smile came into the room. \"Brad,\" he offered, shaking both of their hands. \n\n\"No names, remember?\" Brett told him.\n\n\"It's not my real name,\" he said, flashing a smile as his eyes poured over Cyleste. \"You're beautiful.\"\n\n\"Thank you,\" she said, still sitting on the couch. \"You remember the rules, right?\"\n\n\"No touching. It's bukkake. I get it.\"\n\n\"Good job,\" Brett said, sending a reply to another text message. There was another knock at the door and he opened it to a taller man whose smile went even bigger when he saw Cyleste. \n\n\"Hot damn,\" the man said, eyeing Cyleste. \n\n\"I think I'm going to wait in the next room, is that okay?\" she asked Brett. He nodded, watching as intently as the other two men as she walked out of the room. \n\n\"She's your girlfriend?\" the second guy asked.\n\n\"Yeah she is.\"\n\n\"Lucky fucker.\"\n\n\"You don't know the half of it,\" Brett said.\n\nThere were four more guys who showed up before Brett called time and turned off the disposable cell phone. If they weren't there on time, tough. The last four guys had to take the word of \"Brad\" and the other guy about Cyleste. Leaving the six men standing and talking, Brett went into the bedroom that was separate from the rest of the space. \"We don't have to do this if you don't want to,\" he told Cyleste. \"Any time it gets weird, just say the word and I'll send everyone home.\"\n\n\"How many are out there?\"\n\n\"Six.\"\n\nCyleste wrapped her arms around him, kissing him deeply. She rubbed the front of his pants. When that wasn't enough, she pulled his pants open. \"I want this,\" she said.\n\n\"Now?\"\n\n\"Always,\" she said with another kiss. \"But I'm not going to take you now. I just want to see you naked.\" Brett undressed, his hard cock throbbing. He had gone three days without an orgasm. In theory, that was true of the six men in the next room, too. \"Ready to watch six different guys cum on your girlfriend?\" Brett still wasn't used to thinking of Cyleste as his girlfriend, even after the last three weeks of intense lovemaking between them. He nodded. \"They're all going to know you're a cumslut, you know that, right?\" \n\n\"They already do.\"\n\n\"No, they heard that you are, but you haven't proved it. Ready?\"\n\nHe nodded and followed as she pulled him back to the main room by his hard cock. \"And why is my boyfriend the only man naked and hard?\" she asked the group of men. She was the smallest person in the room, but her pretty smile and commanding voice had every man scrambling to pull off their clothes. She waited until they were most of the way naked (a couple were naked) before she pulled off her sundress. It was all she wore. Brett held back and watched as she approached the six men in various degrees of excitement. A couple wore full hard-ons like his. Two were close. The other two were either nervous or caught off guard. She touched all six pricks, hard or not, and cooed as she did it before she dropped to her knees. \"Who's going to cum on me first?\" she asked.\n\nThe six men began working on their pricks, tugging and pulling on them in however felt best. She began sucking dick, too. No one got special treatment and everyone wanted more. Brett watched her holding a cock in each hand while her mouth pleasured a third. He saw the men grabbing at her, touching her hands, face, hair, and chest, but nothing more. Finally, one of the guys had reached his limit. With her help, he jerked off and sprayed his orgasm on cheek and neck. That's when Cyleste moved a hand between her legs to satisfy her own need. A second man followed the first one, splashing against the other side of her face with an even bigger load. Immediately afterwards, a third man, the short guy who gave his name as \"Brad,\" stepped in front of her to paste her neck and chest.\n\nCyleste looked around, searching for Brett and finding him standing off to one side. She reached for him.\nAs he stepped within her reach, she grabbed his hard cock and pulled, pulling him down, down to his knees in front of her. \"Clean me,\" she told him, popping another hard cock inside her mouth.\n\n\"Oh fuck,\" one of the guys said as soon as Brett's tongue touched Cyleste's soiled body. Whether he meant it in a good way or a negative way was lost on Brett. He didn't care. This wasn't about any of the men in the room. It was about him and his girlfriend. He started her cheek, licking and kissing away the mess that dripped from her. That's when Cyleste pulled her mouth away from the man she was sucking. Holding his prick, she pressed it against Brett's lips.\n\n\"Suck it,\" she told him. Brett opened his mouth, allowing her to shove the hard prick between his lips. \"That's it. Take it cumslut,\" she said, stroking whoever's cock it was. Before Brett opened his mouth, he hadn't realized how close the man was to his orgasm until he felt the first surprising spurt against the back of his throat. Startled, he gagged, but didn't stop. Cyleste laughed. \"Take it, cumslut. Take all of it.\" Then she pressed her mouth against his, kissing him, the cock, and sharing the man's orgasm. As they kissed, another man began moaning and more cum was shot in their direction. Most of it landed on Cyleste. Brett chased down each dripping stream of it.\n\n\"Stay with me,\" Cyleste said, pulling on Brett's hard cock. Her words didn't make sense, he wasn't going anywhere. Unsure what she meant, he rocked back on his heels and watched her suck off one of the men. As soon as he began to orgasm, she pulled her mouth away, aimed the man's prick at her mouth and chin, and stroked he finished is orgasm. \"Is this what you want?\" she asked, cum splashing her lips and tongue. \"Is this what you want to see?\"\n\n\"Yes,\" Brett said, unable to pull his eyes away from the sight of semen dripping off her lips.\n\n\"Kiss me,\" she said. As he did, another prick appeared near their face. She gave it Brett. \"Make him cum on me,\" she said, sounding giddy. Again, she stroked the man while Brett sucked him. As soon as the man began to orgasm, though, Cyleste pulled his cock towards her. Once more, white, cream-like semen splashed against her while she fingered and clutched at her pussy. \n\nThree of the guys managed two orgasms, one managed three. When the only hard prick left in the room was Brett's, Cyleste told the remaining guys to get the fuck out. They dressed quickly, quietly, and filed out of the room. \n\nBrett looked at his girlfriend, a woman he had known for the last three years, a woman whose raw beauty and sensuality had once intimidated him into near silence. Cyleste's skin shimmered from smears of semen, where he had licked, and sweat. More semen clung to her hair. Her swollen nipples looked as hard as Brett's cock. Her hand was still between her parted legs as she knelt, looking at him, and he noticed her finger still moved against her clit in slow, lazy circles. \"How's it feel to be a cocksucker?\" she asked, a twinkle in her eye.\n\n\"How's it feel to be a cumslut?\" he replied, smiling back. \n\n\"I want more.\"\n\n\"Me too,\" he said, kissing her again and pressing her wet body against his. \n\n\"Fuck me,\" she begged.\n\n\"Not yet,\" he said, moving to his feet. Standing in front of her, he gave her more, shooting his orgasm on her face, neck, and chest. Cyleste smeared it over her body. \n\n\"Lick me.\"\n\n\"Gladly,\" Brett said, pushing her backwards and starting with her pussy. She came as soon as his tongue touched her and then he began licking upwards, over her stomach and up to her messy chest. He licked at her neck and finally kissed her again. He was hard, still hard, but also hard again. He was ready for more. Without reaching between their bodies, he eased his prick inside of her pussy. Once he was inside of her, he laid on top of her. \"I love you.\"\n\nShe wrapped her arms around his neck, pulled herself upwards, and kissed him before saying, \"I love you, too.\"\n\n\"And next time, I want all of them to cum inside of you.\"\n\nHe felt her pussy clenching his hard prick and gave her his second orgasm of the night. \n\n\"Eat me,\" she said and he did."
    ],
    "authorname": "BuckyDuckman",
    "tags": [
        "cumslut",
        "cumshot",
        "cum",
        "cumplay",
        "retail",
        "handjob",
        "orgasm",
        "cream pie",
        "group sex",
        "bukkake"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/needlepoint-and-cream-pie"
}