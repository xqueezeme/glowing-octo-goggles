{
    "title": "A New Way of Seeing Things Pt. 04 Ch. 06",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\n. \n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\n\"The emergency room?\" Gwen asked, her panic rising. \"What's going on!? Why are you\u2014\"\n\n\"It's not me, it's not me, relax,\" Tim soothed. \"It's Charlie. He started having chest pains after lunch, one of his crew brought him here and didn't know what else to do so they called me.\"\n\n\"Oh.\" Her panic subsided but was replaced by something different, something still unpleasant. \"Is he...is he alright?\" \n\nTim could swear he heard genuine concern in her voice. I'll be damned...\"He seems to be so far, they're running tests, don't know much yet. I'm just trying to keep him calmed down until they finish up\u2014he's pissed they're keeping him so long. Speakin' of which, I gotta go\u2014I'll let you know as soon as I know something.\"\n\n\"Please do. I'll take care of your afternoon appointments.\"\n\n\"Please and let 'em know someone will get there as soon as possible.\"\n\n\"I will.\" \n\nTim eventually returned a short time after the last truck had come back and the last employee had left for home. Gwen greeted him anxiously at the door. \"Well?\"\n\n\"Fat-ass had indigestion from whatever shit he shoveled down his throat for lunch,\" he said, grimacing and shaking his head in irritation. \"Must've been a hell of a bellyache to get him to admit he had it. They gave him some industrial strength heartburn med and sent him home.\" \n\n\"Well, that's a relief...\"\n\n\"Yeah...\" Tim's expression became a bit more thoughtful. \"The doctor did tell him he was going to be back for the real thing soon enough if he didn't lose some weight, though. If not that, diabetes, or both. Charlie just laughed and told her she was just trying to get him to pay for her new car.\"\n\n\"He has always been so stubborn! Well, at least he was alright today.\"\n\n\"Today, yeah.\"\n\nGwen could see that thought wasn't wholly satisfying to him. \"C'mon,\" she offered. \"I've got dinner started.\"\n\n***\n\nIt began to rain the next morning and didn't stop for three days. Gwen and Natalie's Friday ride was a washout, but her sister-in-law came for lunch instead. The shower they took together was unnecessary bur still enjoyable, Gwen's climax soon followed by the skies clearing as if one triggered the other. \n\nCricket arrived mid-morning the next day, Marvin getting an enthusiastic greeting first as always before she went to find Gwen in the house. She was in the kitchen, already dressed for a day of chores and riding, her still-wet hair hanging on her shoulders. \"Did you go swimming this morning?\"\n\nGwen smiled. \"Shower. Tim's working today and he wanted to have a little fun before he left. I thought it would make it easier to clean up after.\" \n\nCricket cocked an eyebrow and smiled. \"Fun as in bedroom fun?\" \n\n\"Fun as in bedroom fun,\" Gwen confirmed.\n\n\"Oh! What did you two do that required cleaning up?\"\n\n\"Oh, you know,\" the older woman said with a casualness that shocked the Lady, \"some touching, some kissing, some more kissing in naughtier places, then he got on me, and...\"\n\n\"So he, uhh, shot it on you?\" The young woman was blushing furiously, but her embarrassment could not dampen her curiosity. \"Is that why you had to clean up?\" \n\n\"No, inside, but it was still kind of messy,\" Gwen replied with amusement. \"I didn't like the idea of riding in wet underwear.\"\n\n\"I wish I had been here! I would have loved to watch you two,\" Cricket said with some excitement. \"Unless you wanted some privacy, I mean! And I would have been glad to, you know, help clean up after...\" \n\n\"You really liked doing that, didn't you?\" \n\n\"Sorry! I know it's really sick, but you and him all mixed up together...like I'm tasting you two make love, like I'm getting some of it, too. There's just something so exciting about it. Sorry.\" \n\n\"Nothing to apologize for. Next time I'll know to wait until you get here.\"\n\n\"I'm so embarrassed for even suggesting you should. Ready to head up to the barn?\" the young woman asked quickly, anxious to change the subject. \n\nThe women started out across the lawn. \"My turn to be a little embarrassed,\" Gwen said as they stepped into the shade of the overhang. \"I got a gift from Sylvia Danning this week that you should probably see.\" \n\nCricket looked at the saddle and began to giggle. \"I know what that is! I didn't tell you this,\" the young woman said with a smile, her eyes shifting down to the barn floor, \"but Hannah and I had a bet that day. She said that you'd have an orgasm before noon, and I bet you wouldn't at all. I won.\" Cricket looked up again. \"Right?\"\n\n\"No, I did not,\" Gwen replied sternly. \"But it did really make it hard not to. It took all my concentration...\" Miss Ritter would have loved one of these as a training aid, she mused. \"Did it look like I had an orgasm?\"\n\n\"No, but I've seen how good you are at controlling them...I couldn't be completely sure if I missed one. Hannah definitely couldn't say she saw anything though, so we decided I won.\"\n\n\"And how much did you win?\"\n\n\"We only bet a dollar, but that's just because I'm poor\u2014I would have bet more because I was really sure you wouldn't. I know how focused you get, and you were really focused the day before, so I figured you would be then, too.\" \n\n\"Well, thank you for your confidence,\" Gwen said with a laugh. \"So I guess Hannah knew about the saddle's, umm...properties?\"\n\n\"Oh, yeah. She made me promise not to tell anyone, but she said Mrs. Danning will go out riding with her friends on them. They play a game, I guess\u2014whoever can hold out the longest is the winner. She said she's never seen anyone hold out as long as you\u2014not even Mrs. Danning!\" Gwen wondered again what exactly the woman had been hoping for when she insisted on that saddle being used for the shoot. \"Have you tried this one yet?\"\n\n\"Uh huh, and it's a good thing you and Hannah weren't betting on that ride\u2014I got up to the picnic clearing before I gave in and lost my, uhh, focus. You're welcome to try it out and see what I mean, if you want,\" she offered. \n\nCricket hesitated, considering. \"Maybe later,\" she finally decided. \"I've been looking forward to being out on Marvin all week, and I was hoping to go farther than the clearing...\"\n\n\"I understand,\" Gwen replied with a laugh. You can use it any time you want. I should probably go with you when you do, though, just to make sure you're alright.\" That, she thought, and your orgasms are a lot of fun to watch. \n\n\"Well, yes, of course I'd want you along with me,\" Cricket replied, not really considering the idea she might go alone. \"But right now, a nice long ride on a nice sunny day with my two best friends in the world is what I want.\"\n\nThey spent the rest of the morning and a good part of the afternoon up on the wooded trails, their conversations pleasant and innocuous. Still, there was an underlying sexual tension by the time they made it to the pool before dinner, the tension rising when Tim joined them for a swim after they had eaten. \"Are you in the mood?\" Gwen murmured to her husband as they prepared for bed while Cricket was out of earshot.\n\n\"Pretty much always,\" he replied, pulling her close. \"Is she\u2014\" he nodded towards the bathroom\u2014\"joining us, or is this a you and her thing?\" \n\n\"That's up to you and her.\" The young woman stepped out from the bedroom to find Gwen stretched out on her stomach, Tim straddling her ass and gently massaging her shoulders. \"If you lie down next to me, one of us can do your back next,\" Gwen offered, a contented smile on her face and her eyes half-closed in bliss. \n\n\"I'd, umm, like to watch you two for a while, if that's okay,\" Cricket said, moving to an armchair against the wall. \"I don't want to interrupt and seeing you together like that makes me really happy.\"\n\n\"Suit yourself,\" Tim said with a grin. \"The offer's good any time, though.\"\n\n\"Thank you, maybe later...\" She sat, her eyes on the couple, her hand absentmindedly smoothing a path over her stomach.\n\nGwen felt that now familiar surge of excitement with the prospect of an audience. Firm hands were creeping lower down her back, and a potent erection was nestled between her cheeks. She wiggled against it and coo'd appreciatively, the length dragging across her rosebud in response, Tim's hips rising up a little to lever the head down between her closed legs. She opened them just enough for him to more easily slide himself between them. The angle was too difficult for entry, but she loved the feel of the head bulling through her split while he flexed over her, kissing her ear and neck. His length pulled away as his lips began to work his way down her spine, leaving a trail to the small of her back. He continued on, his tongue worming its way between the cleft of her butt, flicking dangerously close to her wrinkled muscle before he roughly pushed her legs open and wriggled his face into her partially exposed sex. Gwen hoped he would take her like this, maybe a pillow under her hips to help his entry, but from behind, and roughly. \n\nTim had other ideas and was in the mood to show off a bit. \"Turn over,\" he ordered, rising to his haunches and grabbing her ankles to hurry her along. In a moment she was on her back looking up at him, spreading herself wide in invitation, and he hungrily dove back into her waiting sex. \n\nGwen stifled a moan and looked over at Cricket. The wide-eyed young woman was watching intently, sitting on one hip with a leg beneath her and the other with the heel on the edge of the cushion, her breathing shallow and ragged as one hand gently fondled her breast while the other lay hidden behind her raised thigh, obviously busy. \n\nShe felt the man between her legs shift. \"I'm going to fuck you so hard,\" he growled, rising and positioning himself for a first thrust. \n\nGwen looked back at her friend. \"Cricket, do you want him to do it like this, or is there something else you'd like to see?\" \n\nIf the young woman was surprised by being presented with the choice, she didn't show it. \"Like that,\" she breathed. \"Oh God, just like that. It's so beautiful to see you two...like that...\" \n\n\"You heard the lady,\" Tim said with a smile. \"Like this.\" He leaned forward enough to make contact with the head of his cock. Confident it was correctly lined up, he lunged forward. Gwen hissed in surprise, her feet reflexively coming off the bed in response, legs shooting up and over him as he buried his length in one hard thrust. \"Oh god,\" Cricket repeated, and extricated herself from the chair. Gwen thought she was coming to join them, but the young woman instead reached for the nightstand drawer, pulling out the rabbit and Tim's replica before rearranging herself on her seat. \n\nGwen flashed an understanding smile and returned her concentration to the man on top of her and that big, beautiful cock. It was thrusting and withdrawing, thrusting and withdrawing, doing as it pleased as she reached to grab at that magnificent ass...Tim's focus was on the body beneath and the intense pleasure it was giving him. He looked Cricket in the eye before delivering a particularly hard thrust, as if making it clear who was charge of this fuck, then returned his attention to the woman he was in. \n\nGwen continued to check in on her friend, watching her through heavily lidded eyes as her body was rocked back and forth by repeated thrusts. Cricket had the length in her keeping pace with the couple, sliding it deep a second after Tim had done the same to Gwen while the rabbit buzzed madly around her clit. \n\n\"Ohh\u2014yeah\u2014shit, yeah,\" Tim grunted as he worked himself deeply into his wife with increased urgency. Gwen turned her attention to Cricket. \"He's coming,\" she announced, \"coming in me, filling me up...\" \n\nCricket also knew the unmistakable signs by now and jammed the dildo up inside her even as Gwen announced the arrival of Tim's orgasm, imagining she was the one being filled, the vibrator finishing the job. She groaned and squeezed her eyes shut, opening them after the spasms had passed, the older woman smiling back at her.\n\nTim withdrew, looking down in satisfaction at the pearl droplet already forming at the base of her lips. \"Is there a lot?\" Gwen asked, still looking at Cricket with a knowing look.\n\n\"Enough for a wet spot if you wait a minute or two,\" he chuckled. \"Want me to go get a washcloth and clean you up?\"\n\n\"Not yet...\" She looked over at the recovering young woman. \"Cricket? Did you want to do that?\"\n\n\"Can\u2014can I?\" she asked. \"It's alright?\"\n\n\"It's fine. Tim, let Cricket do it. You come up here and let me clean you.\" \n\n\"Oh\u2014uhh, okay.\" He shuffled on his knees to her side, his wet length within easy reach, and looked down at the young woman already moving between Gwen's legs. He watched her delicately bend to her task, gently kissing his wife's sex as if in greeting before moving forward slightly to bring her tongue into it. He felt lips wrap around his slackening member, but his attention was on Cricket. Despite his orgasm, his length did not soften any further, actually reversing direction a bit as he watched her work with obvious enthusiasm to bring his spend to her lips. He was again hard by the time Gwen's climax pulsed through her body, a fact not lost on the two women. \"I'm not a kid any more,\" he said with a laugh when Gwen offered her and Cricket's help with it. \"Let me rest a little bit and we'll go from there.\" Rest became sleep before he was again ready, his naked body sandwiched between two beautiful women. \n\n***\n\nNothing was said of the previous night at breakfast, Tim heading out to his shop while Gwen and Cricket prepared for another ride. It was not until they were well into the woods that the young woman finally spoke up. \"That was so incredible,\" she said softly. \"Last night, I mean. Thank you so much for letting me be there\u2014and, uhh, do that.\"\n\nGwen smiled. \"I'm glad you liked it. I did, too, and I think we both know what Tim thought. See? I told you he wouldn't think it was weird.\" \n\nCricket giggled and shook her head. \"Well I still do and I also think it was you sucking him that got him hard again. But at least he didn't look too upset about what I was doing.\" \n\n\"He was watching you the whole time I was sucking him. I'm sure he thought it was the best of both worlds,\" Gwen compromised. \n\nThey were back before lunch, Gwen spotting Charlie's truck in the yard as they galloped down to the barn. A good reminder why we should always put our shirts back on before leaving the woods, she thought with a smile. \"Cricket,\" she said thoughtfully, \"I'll be right back. I'd like to go down and see how Tim's friend is doing. He had a health scare last week.\"\n\n\"Oh, of course, no problem! I hope he's okay.\" \n\nGwen started down the short hill to the shop, aware that while her shirt had not been worn long it had still become sweat-soaked enough to cling to her chest, outlining her jogbra and even her nipples underneath that. Oh well, she thought grimly, he probably thinks those are no big deal given what he's seen in the pictures...\n\nBoth men turned from where they were leaning against Tim's truck as she turned the corner. \"Charlie, very nice to see you up and about.\"\n\nHe smiled, flashing that cocky grin of his as usual, like he knew something she didn't. His eyes started on her chest. \"Gwen, good to see you too. No reason not to be up and about. \"\n\n\"I heard you had a health issue on Wednesday,\" she said in a tone usually reserved for patient lectures, \"are you doing what the doctor told you to do?\"\n\n\"What do doctors know?\" He asked with a laugh and dismissive wave, his eyes finally coming up to hers. \n\n\"You're good at what you do, they're good at what they do. Shouldn't you listen to their advice like you would expect them to listen to yours?\" \n\n\"Aww, I'm fine, really. They just want my money...\" \n\n\"Tim seems to like having you around,\" she continued. \"I like seeing Tim happy. From what I understand, the doctor thinks you are putting yourself at risk.\"\n\n\"Tim talks too much,\" he replied, still grinning. \"Sorry to tell ya I'm here for the long haul.\"\n\n\"That remains to be seen. Take their advice, Charlie. Please.\" With that, she turned and walked away, both men smiling in amused disbelief. \n\n\"If I didn't know better I'd say she's actually worried about me,\" the big man said with a laugh.\n\nTim nodded. \"She is. She's gotten used to having you around.\"\n\n\"Think she'd feel different if she knew I was jackin' to her pictures?\" the big man asked with a smirk.\n\n\"She'd probably expect nothin' less of you...\"\n\nCharlie laughed. \"Yeah, but what if I had the big one jackin' to her pictures?\"\n\n\"I think she'd think it was her fault because you hated seeing her naked.\"\n\n\"No shit? Really? How wrong she would be!\"\n\n\"But it WOULD piss ME off royally if they find you dead with your cock in your hand and my wife's picture on your computer screen.\"\n\n\"I'd die happy...speakin' a' which, got any new ones for me to get my blood pumping?\"\n\nThere was not much left to do by the time Gwen made it back to the barn, the ever-efficient Cricket having things well under control. They headed back to the house and took a quick shower before starting a light lunch, the two women bold enough to share the stall even with Charlie just across the yard, not daring to do anything more than a few casual swipes and caresses in the name of cleanliness. \n\nThey were again dressed and in the kitchen when Gwen came to the decision that she was ready to make an offer long considered, an offer she had been ready to make the night before. \"You really like seeing Tim and me together, don't you?\" she asked softly while concentrating on the lettuce she was cutting. \n\nCricket smiled and nodded. \"You're so happy together. It makes me want that, too. And in there\u2014\" she nodded abruptly down the hall\u2014\"seeing you two together is so exciting...he's so masculine and you're so beautiful...I can't believe you let me watch, not that I'm complaining.\"\n\n\"I'd really like to see a man make love to you ...\"\n\nThe young woman laughed. \"And I'd love to have you watch, if for no other reason because that would mean you could watch to make sure I'm doing it right! It would also mean I found a man willing to make love to me. But I guess you'll have to wait until I meet that man, or any man...\"\n\n\"You will. But in the meantime...\" Gwen's voice grew softer. \"Maybe Tim?\"\n\nCricket stopped what she was doing and looked at her friend, wide-eyed. \"Tim as in your\u2014\"she took care to emphasize the words\u2014\"husband Tim?\" \n\n\"Of course. You've already...been with him...just not that way. That wasn't so bad, right?\" \n\nThe young woman blushed a deeper red at the reminder. \"No, much better than alright, but...\" she lowered her voice. \"Are you really suggesting I should go all the way with him?\"\n\n\"If he's not your type\u2014\"\n\n\"No, it's not that! It's just...\" she fell silent, thinking. \"Are you serious about this?\"\n\n\"I am,\" Gwen declared. \"Look\u2014I can see I'm making you uncomfortable. Please forgive me for even mentioning it. It was wrong for me to put you in that position\u2014\"\n\n\"No, it's alright, I'm not upset, just, surprised, I guess. You'd really let me do that?\"\n\nIt's completely up to you. I won't say another word about it.\" Gwen looked out the window. Charlie's truck was gone. \"Could you go tell Tim lunch is ready?\"\n\n\"Uh, okay?\"\n\nCricket crossed the yard and opened the shop door cautiously, her heart thumping, fearing that he somehow knew what had been proposed. \"Tim?\"",
        "He poked his head around the corner. \"Yeah?\"\n\nShe could feel herself blushing furiously. \"Gwen says lunch is ready.\"\n\n\"Oh-good, thanks for letting me know.\" He couldn't help but notice her wide-eyed stare and red cheeks. \"You okay?\"\n\n\"Oh\u2014yeah\u2014thanks-yeah, I'm okay!\" she squeaked. \"See you in there!\" The door was closed much faster than it was opened and the young woman resisted the urge to run across the yard to relative safety.\n\nCricket was quiet as they ate, answering questions but not really saying much herself. Lunch was over before she summoned the courage she had been working to gather. \"Gwen?\"\n\n\"Hmm?\"\n\n\"I was thinking about, you know, what we were talking about earlier, and uhh, yeah, if you meant it and it's still okay, I think I'd like to.\"\n\n\"It's still okay,\" she replied with a knowing smile, her eyes glancing meaningfully to the man still in the dark about the coded conversation. \"But you have to ask him.\"\n\n\"Me? Why me?\"\n\n\"It will be good practice.\"\n\n\"Maybe I should wait until a better time.\"\n\n\"No time like the present, but that's up to you.\"\n\nTim looked up, aware that he was the one being discussed. \"You two talking about me? Ask me what?\" \n\nCricket took a deep breath, her spine ramrod straight and her hands folded on the table in front of her, as if she were discussing a loan with a client at the bank. \"Tim, may I ask you something?\"\n\n\"Huh? Oh, sure. What do you need?\" \n\n\"Would you, uhh, could you,...\" her unsteady nerves broke. \"Oh, God, this is so embarrassing...\"\n\nTim looked at her, then Gwen, uncertainly. \"What is? Did I say or do something I shouldn't have?\"\n\n\"No, nothing like that...would, you, uhh, would you have sex with me?\"\n\n\"Oh\u2014uh, sure,\" he answered uncertainly, again glancing at Gwen. \"Did you mean right now?\"\n\n\"You don't have to right now, not if you don't want to, or not at all\u2014\"\n\n\"Right now is fine,\" he said with an uncertain smile, glancing at Gwen. \"How do you mean?\"\n\n\"Actually, I was wondering if...Oh God, this really is so embarrassing\u2014if we could do\u2014it.\"\n\n\"It as in, like what Gwen and me did last night?\"\n\n\"Like that, yes.\"\n\nAnother sideways look at Gwen got him a nod and a smile. \"Uhh, sure?\"\n\n\"You don't have to if you don't want to, really.\"\n\n\"I want to,\" his smile remaining. \"So, right now?\"\n\n\"If that's alright with you...\"\n\n\"I should probably take a shower first,\" he answered, pulling at his dirty t-shirt. \"Is after that soon enough?\"\n\n\"Cricket, why don't you help him with that while I clean up here,\" Gwen suggested, finally speaking. \n\n\"Oh\u2014yes, sure, I could do that,.\" \n\nTim smiled and rose. \"Wouldn't mind the help, as long as you don't mind,,\" he said with more casualness than he felt, giving Gwen one last look for confirmation before starting down the hallway. \n\n\"You two go ahead,\" he older woman said, gathering dishes. \"Is it alright if I'm there?\"\n\n\"Of course! I absolutely want you there\u2014you're going to tell me if I'm doing it wrong, right?\" \n\nGwen smiled and waved her hand towards the bedroom. \"Be sure to wash all of him.\"\n\n\"Uhh, right, yeah...\"\n\nTim was waiting for her in the bathroom. \"So are you getting in with me, or are you going to wait out here?\" \n\n\"Gwen said I should wash all of you, so I guess I should get in with you?\" \n\n\"Guess so. You're gonna get your clothes wet like that, though.\" \n\nIt took her a moment to understand exactly what he was implying. \"Oh\u2014yeah.\"\n\n\"Want me to help you get them off?\"\n\nCricket blushed furiously. \"Would you?\"\n\nTim's continued to smile as he gently took the bottom of her shirt between two fingers. \"Lift your arms up.\" \n\nShe did, feeling the fabric come up her body, exposing her bare breasts before her vision was blocked. The man in front of her reappeared a second later, his smile now one of appreciation. \"You're a beautiful woman,\" he said quietly, bending to gently kiss her right nipple as his hands reached for her shorts. They were pushed down to her ankles and he kneeled, lifting one ankle then the other out of them. She felt a light kiss on her mons and shivered, hoping for more. \n\nTim got to his feet instead. \"Can I undress you?\" the naked woman asked, getting another smile and a nod in reply. She took the bottom of his shirt between trembling fingers, his arms coming up in response. She needed a little help getting it over them, but task complete, went to work on his belt buckle. It took her shaking hands a little time to figure it and the button of his jeans out, and then she was pushing it all down, kneeling as she did so. Only his underwear remained, the fabric hiding a sizable lump at eye level, and she reached for these too. She began to pull, the length beneath catching on the waistband. \"Sorry, I've never undressed a man before,\" she apologized, watching his swelling cock break free and bob just inches from her face. \n\n\"You're doing fine. You got me naked, that's the goal.\" Cricket hesitated, admiring the rapidly growing erection, imagining it inside her. She delicately leaned forward to plant a gentle kiss under the head, her arousal flaring at the scent of sweat and male musk. Tim flexed it in response. \"I think it likes you.\"\n\n\"I'm glad. I like it, too.\" She rose somewhat reluctantly, Tim helping her to her feet. \"Let me wash you.\" She worked meticulously, soaping and scrubbing as though she were grooming a show horse, paying particular attention to that masculine chest and butt, not to mention the magnificent thing between his legs. Tim was happy to return the favor, spending more time than necessary on her ass, breasts and sex, Cricket not discouraging his efforts. They both finally pronounced each other clean and stepped out of the stall as an already-nude Gwen hurried in to hand them towels before stepping back to let them dry each other off. \n\nThey moved to the bedroom and stood there for a moment, neither Tim or Cricket quite sure what to do next, Gwen already in the chair the young woman had occupied the night before. \"I'm sorry,\" Cricket squeaked at Tim, then Gwen, \"I'm really not good at any of this. I'm not sure what to do next.\" \n\n\"Maybe you could have Tim give you a massage like he gave me last night,\" her friend suggested, raising an eyebrow to the man next to her. \n\n\"I could do that,\" he offered helpfully. \n\n\"I think I'd like that, thanks,\" the young woman replied. \"Yes, that would be good. I just lie down on the bed, right?\" \n\n\"Right.\" She did, head on the pillow, face turned towards Gwen, her eyes tightly shut. Tim assumed the position he had taken the night before, emboldened enough by the absurd situation he found himself in to let his cock rest lightly between the woman's asscheeks as he leaned forward to begin with her neck and shoulders. He took his time, working down her shoulder blades as he let his body sink down a bit on the firm globes he was straddling, his length nestled deeply into her crevice from the added pressure. His hands were stroking her hips before he repositioned himself, daring to lever his aching erection against the resistance of her closed legs and push like he had done to Gwen the night before. \n\nCricket whimpered and reflexively raised her hips to give the cock behind her better access. She felt the bulbous head slide down between her lips, bumping over her opening before moving down towards her clit. \"Wait!\" she squeaked, dropping her hips and quickly regretting the loss of the shaft between her legs. \n\nTim silently cursed himself for moving too fast and spooking the obviously skittish young woman. He quickly jerked his hips up and back, his cock bouncing against his stomach as he looked over at Gwen in bewilderment. \n\n\"I want to do something first,\" Cricket said quickly, raising her head enough to look back over her shoulder. \"Please? For you. Can you lie down? On your back?\" \n\n\"Sure...\" Tim took his position, eyeing the young woman as she moved into place over his midsection. \"I want to make sure I take care of you, too,\" she explained and bent to kiss the velvet skin of his mushroom head. She took him between her lips next, as far as she could, forcing herself to remember those things she had committed to practicing as she lay awake in her bed all those nights since the first time she had done this.\n\n\"Am I doing alright?\" she asked, letting him pop from her mouth after one upstroke, looking over at Gwen for reassurance. The older woman had a leg hooked over each arm of the chair, opening herself wide to the couple on the bed as her finger caressed her very erect clit. She smiled dreamily and nodded.\n\n\"You're doing great,\" Tim assured her, his hand gently caressing her rear, preparing to risk venturing between her thighs and beyond. \"Did you want me to finish like this?\"\n\n\"No, not unless you want to, I mean,\" she replied after letting him slide from her mouth again. \"But if it's alright, I'd like you to the way we talked about.\"\n\n\"I can do that.\" His middle finger pushed its way down into her crevice, bumping over her asshole as it continued on to her pussy. He found her wet, and his finger met only token resistance as it pushed into her opening. Cricket whimpered around his cock as her hips shifted to give his finger better access. \n\nThey stayed like this for some time, Cricket concentrating on the man she had in her mouth, Tim finger-fucking her in a controlled and deliberate manner. \"Can we try it now?\" she asked after swirling her tongue around his pink helmet.\n\nHe withdrew from her, drawing a wet line back up over her crinkled muscle. \"Sure. How would you like to do it?\"\n\nCricket lay down beside him, legs closed and arms stiffly at her sides. \"Like this.\" \n\nTim rolled to his side and sat up, looking at the woman lying at attention next to him. \"I'm, uhh, gonna need a little room to get in there...\" he grumbled with a smile, nodding at her closed thighs. \n\n\"Oh\u2014yeah\u2014sorry!\" she squeaked, legs coming up and out. \"I'm a little nervous.\"\n\n\"So am I,\" he replied, moving to kneel in position. \n\n\"You are?\" \n\n\"Well, yeah...I'm with a beautiful woman who's expecting a quality fu--uh, performance. I don't wanna mess this up.\"\n\n\"You won't, you won't,\" she quickly assured him, now convinced more than ever she was ready for this. \"It's already better than any time with Daniel. Just...just go slow, okay?\" \n\n\"As slow as you want. Just tell me if I'm doing it wrong.\" \n\nCricket looked over at the woman in the chair. \"I know you won't. I know how good you are with Gwen.\" \n\nTim leaned forward into a handstand above the nervous young woman, the tip of his cock bumping against her pussy lips and making her startle. \"You sure about this?\" He asked, looking down at her.\n\n\"Very.\" Her hands came up, tentative, reaching as far down his body as they could to latch on and pull him forward \"Do it. I'm ready. Please?\" \n\nHe obliged, the tip again touching her sex, this time pushing the lips apart before stopping. \"Slow, right?\"\n\n\"Yes, please.\" \n\nHe was good to his word, inserting himself slowly, checking her for reactions, pleased with how her expression was changing from one of nervous concentration to relaxed bliss, like she was tasting something delicious. Her squeaks and sighs as his shaft inched into her sounded like cheers to him...she was tight, just like Gwen was, and he wanted to believe her body was welcoming rather than rejecting him. \"I'm all the way in,\" he needlessly announced as his midsection firmly pressed itself against the junction of her legs. \n\n\"So good,\" she groaned, her hands continuing to try and pull him deeper. \"So good. I never knew it could feel this good.\" \n\n\"You feel pretty good yourself.\" He began to withdraw, but Cricket knew\u2014hoped-he would be back, that masculine body pressed against her, that beautiful thing between his legs buried deeply. \n\nHe was, putting himself back in her just a shade more quickly than the first time, waiting a moment before repeating the stroke. Cricket instinctively pulled him down to her, his stubbled cheek in her neck, his warm, manly body covering hers. \"So nice, she panted softly, \"so nice...you feel so good when you're laying on me, when you're inside me.\" Gwen looked on, amazed at how beautiful they looked together, shocked that it was her husband and her friend she was admiring.\n\nTim chuckled. \"Tell me if I start to get heavy,\" he breathed and withdrew again.\n\n\"You're not. And you can go harder, if you want.\"\n\n\"Yeah? Okay, but let me know if I get too rough.\" Cricket continued to clutch him to her, bit her lip and nodded. The next thrust was still deliberate, but delivered with more force, as was the next one after that. Tim's pace remained constant, a slow withdrawal of his cock followed a thrust delivered with a little more force each time. Cricket's hips came off the bed to receive each thrust, grinding her clit into the man above her until he again began his slow retreat. \"Doing okay?\" he asked, pausing for a moment. \"Want to change positions?\"\n\n\"No, I like this,\" she panted, clutching tightly to keep him from going away. \"God, please, keep doing it like this!\"\n\nGwen could hear the meeting of their bodies, soft pleasurable grunts escaping from Tim, squeaks from the woman impaled on him. She had positioned Nearly Neal for easy retrieval while they were in the shower and he was now in her, filling her deep and wide, unaware she was pistoning him in and out in rhythm to the couple on the bed just as Cricket had done the night before. \n\nTim continued his fucking, feeling his orgasm beginning to rise, wondering how long was proper to delay his release. He knew her ex was quick, mechanical and uncaring in the sack; he didn't want to disappoint with a similar performance. Tim pushed harder, as hard as he dared, burying himself deep. \"Don't move,\" she suddenly begged, her hands going to his ass and pulling him tight as he hips drove her clit into his pubic bone. \"Oh God please please don't move!\" Cricket's breathing stopped and her body began to twitch. \"Oh, godddddddd...\" Her grasp on him relaxed, her hips sagging back on the mattress while her breath came in gasps. \"Thank you so much,\" she finally offered. \"That was wonderful. So different, so much better than...before.\"\n\n\"Welcome,\" he replied as he lifted himself back onto his hands, relaxing his own hips and letting his cock rest inside her. \"Hope I did alright.\"\n\n\"You were wonderful,\" she repeated. \"Do you want to...finish...now?\"\n\nTim laughed. \"I must be squashing you.\" \n\n\"No! I could have you like this all night, but you've been so patient with me and I want you to feel as good as I did,\" she answered quickly, wrapping herself around him in emphasis.\n\n\"You want me to finish outside of you?\"\n\nCricket looked to her friend. \"Is it okay if he's inside of me?\" Gwen emphatically nodded her consent. \"I want you inside of me,\" Cricket said looking up at the man above her. \"Deep inside of me\u2014please.\" \n\n\"Be glad to,\" he responded with a smile while giving her a quick jab of his hips, getting a gasp and a giggle in response. \n\n\"And you can go as hard as you want, I won't mind.\"\n\n\"You sure? I really don't want to hurt you or anything.\"\n\nHer hands were again on his ass, urging him on. \"I'm very sure. You've never hurt Gwen no matter how excited you were.\"\n\nTim chuckled and looked at his wife. \"That true?\" Gwen nodded, eyes wide and mouth slack as she continued to watch, Nearly Neal lodged deep inside her. He still made an effort to restrain himself somewhat, but his need still had him pounding the petite body below him with some force. \"I'm gonna come in you,\" he said through gritted teeth, giving her one last chance to stop him.\n\nCricket looked up at him with wide eyes and nodded in understanding. \"Uh-huh-come in me-huh-deep.\" He emptied himself with a soft growl, each spurt accompanied by another effort to push it deeper into her welcoming pussy. Spent, he rolled to Cricket's side, giving Gwen a clear view of her friend. \n\n\"Well?\" She asked breathlessly.\n\n\"Incredible,\" Cricket replied with a weak smile. \"Thank you so much!\" She quickly looked at the man beside her. \"Oh\u2014and thank you!\" \n\nThey both smiled, the older woman pulling the cudgel from her sex and moving to the bed. \"Do you mind?\" she asked, gently spreading Cricket's legs and climbing between them. \"I want to try it for myself.\"\n\n\"Oh-uh, sure, of course...\" Gwen bent and examined her friend's sex, red and wet from arousal and use. She extended a finger and gently collected some of the soupy mix from just inside her opening, idly spreading it around, considering before offering a soft kiss. Her tongue began to explore, the taste overwhelmingly of her husband but with subtle female hints, softening the sharp taste she had come to know so well. She continued to lick well after the last hints of Tim had been cleaned up, giving Cricket another orgasm in the process. Her friend happily returned the favor.\n\n***\n\n\"Well, that was interesting,\" Tim said as they stood together on the porch, waving to Cricket as she drove away in the late afternoon sun. \n\n\"We've been using that word a lot lately,\" she said with a laugh. \"Are you okay with today's version of interesting?\"\n\nHe laughed, shaking his head. \"You're seriously asking me if I'm okay with my wife giving me permission to have sex with another woman? While my wife watches?\"\n\nShe shrugged and hugged his waist. \"Fair's fair. You gave me permission to have sex with her first. Besides, you were helping my friend. I appreciate what you did for her.\"\n\nHe gave her an incredulous look. \"Appreciate what I did for her? You sure you know how this works with most couples?\"\n\n\"I think I do,\" she said calmly. \"And I've decided we're not like most couples and this works for us. Right?\n\n\"It seems to,\" Tim said, thinking. \"And I'm thinking a lot of couples have things that work for them. I mean from what you've told me Adam and Natalie definitely do, Bob and Yvette up at the lake...\" Alison and Jason with their picture taking, Gwen silently added. \"So, why can't we?\" \n\n\"As long as it stays between us,\" she warned. \"Now that we've helped my friend, I wish we could figure out a way to help your friend...I really do think he needs to lose some weight at the very least. He was so handsome when he was younger...\"\n\nTim laughed. \"Oh, you thought that, did you?\" \n\nGwen blushed in response. \"Oh, well, umm, yes, but back then I also thought he was just like the boys in the stable, the way he acted and treated me, but after all these years I think I've figured out he really does have good heart. He's just rough around the edges. And I know how much he means to you.\"\n\n\"He's been a really good friend, yeah,\" Tim admitted. \"Always been there whatever we needed. Be a shame not have him around for a little longer. And I've, uhh, been thinking of ways to get him to take better care of himself.\" \n\n\"How?\"\n\n\"Remember how we got the girls to try for better grades in school?\"\n\n\"I remember YOU paid them,\" Gwen replied with mock annoyance. \"I was not in favor of that plan, if you remember. They needed to understand the value of good grades all for themselves?\" \n\n\"Yeah, well, paying them worked, too. And I wasn't paying them I was, uhh, incenting them.\"\n\n\"So you're thinking of 'incenting' Charlie to lose weight? How much do you think that will cost?\"\n\nTim smiled. \"I wasn't thinking of money. I was thinking of something he wants that money can't buy.\""
    ],
    "authorname": "BusyBadger",
    "tags": [
        "exhibitionism",
        "friend",
        "husband",
        "lesbian",
        "missionary",
        "toys",
        "voyeur",
        "wife"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-04-ch-06"
}