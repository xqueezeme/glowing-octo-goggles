{
    "title": "Alex & Alexa Ch. 08",
    "pages": [
        "Chapter 8- I Hate Playing Pretend \n\n\"Hey Alex, can you possibly go check in on Allie? Your mom and I are stuck grading. Bring her some non-hospital food if possible, okay?\" \n\n\"Yeah, yeah.\" \n\nHopefully that was just the right amount of apathy to convince them that I would only grudgingly do as requested. I had recently been playing noticeably less video games due to the arrival of my aunt a week ago, and most of the interruption in my routine was indeed centered around accommodating her. Not that I minded, of course, but it was important that my parents not know that. After all, they could hardly find out exactly how Alexa's and my relationship had...blossomed. \n\nI headed on out to the hospital and found Alexa in bed, reading a magazine. Her eyes lit up when she saw me and she hopped out of bed, rushed up and hugged me. \n\n\"I missed you all night,\" she whispered, nuzzling her face into my chest. \"I love you so much...\" \n\n\"I missed you too,\" I said, kissing the top of her head and caressing her hair. \"But you probably shouldn't be jumping up and down like that, you were admitted to the hospital for a reason, you know.\" \n\n\"Oh, it's just a formality at this point,\" she replied, smiling up at me and booping my nose. \"All the doctors agree there's nothing wrong me with me, I'm the very model of health.\" \n\n\"Okay, but either curb your enthusiasm in greeting me or show the same level of enthusiasm for greeting everyone else,\" I chided. \"We've been damned lucky to not arouse suspicions so far.\" \n\n\"Don't start your man logic on me,\" she sighed, taking me by the hand and leading me back to her bed, which she climbed into. \"I'm a woman in love, after all.\" \n\nI held up a bag of fast food. \"Thought you might be getting sick of hospital food, brought you some junk as a final meal before they kick you out. Any idea when that'll be?\" \n\n\"Well, probably not until your dad and Karen come to get me,\" she replied as she dug into the paper bag and began annihilating the food I'd brought her. \"Since she's listed as my relative, they might want her around.\" \n\n\"So later today,\" I concluded. \"'sides, it'll give mom a chance to fuss over you, which I know she's been looking forward to.\" \n\n\"I suppose I can allow that,\" she mused. \"As long as I get some tlc from you too, of course.\" \n\nWe were silent for a few moments while she caressed my hands, looking down at the blanket that covered her lower half. She finally sighed, smiling forlornly. \n\n\"Being in love with you is very inconvenient, you know.\" Alexa remarked. \"All the questions and objections people would have, blah blah blah...\" \n\n\"I've mulled it over a zillion times, trust me,\" I replied, knowing exactly what she meant. \"That's why we're doing the whole date ruse thing.\" \n\nShe squeezed my hands and nodded. \"I know. But I will admit, there might be a tiny spark of worry deep down in me.\" \n\nI tilted my head. \"Why?\" \n\nShe drew in her breath. \"I guess deep down I worry that you might find someone you really like,\" she confessed. \"Someone you could love.\" \n\nI chuckled. \"Alexa, believe me, if we can't figure this out between us and I end up with someone else, it's only because I settled. I don't know if there's another person anywhere on this planet who could come close to making me love them the way I'm in love with you.\" \n\nShe didn't look at me but kept listening. \n\n\"I don't know what's going to happen, I really don't.\" I continued. \"But nothing and no one will ever fulfill me the way you do. Maybe I just have to live with that, but don't you ever doubt my feelings for you. I stood no chance whatsoever against falling in love with you.\" \n\nMy aunt nodded. \"I'm pretty sure that's how I felt the moment I met you,\" she confessed. \"I knew instantly that I could fall in love with you and I had no defences against it. It would either happen or it wouldn't, no matter how I tried to rationalize or prevent it.\" \n\nI raised her hands to my lips and kissed them. \"Regardless of what happens, this whole accident thing has made me realize exactly how much more amazing my life is because of you. In one week, you've made me feel like a new and better person. That'll never change now. Your impact on my life and my heart was immediate and... eternal.\" \n\nShe smiled warmly at me. \"And I can tell you're being honest, and also that you've never said anything remotely like that to anyone before. I've told people I've been intimate with that I love them, but I've never been in love with someone the way I am with you.\" \n\nShe kissed my hands and then smiled at me slyly. \"Go close the door and put the sign on it. Who knows, this might be our last chance to make love for a while...\" \n\nI nodded and went to close the door, putting the 'Do Not Disturb' sign on the outside. It occurred to me that the front desk knew I was here, but hopefully they wouldn't coordinate with the nurses on duty and become suspicious. I went and sat back down. Alexa smiled at me. \n\n\"Last nurse who visited me told me it'll be at least three hours before they come to check on me, and that was only an hour ago. That gives us a two hour window, right?\" \n\nI nodded. \"Mom and dad are at work and up to their ears in papers still.\" \n\n\"Well,\" she mused, looking thoughtful. \"If you haven't had a shower yet...\" \n\nAlexa stood, took my hand and led me to her bathroom, which did indeed have a shower stall. It was meant for one person, but with some creative engineering and maybe some moisturizer, it could accomodate two. \n\nShe smiled at me as she shed her hospital gown, leaving her gloriously naked. She then began undressing me, planting kisses all over my body almost reverently. She knelt in front of me, her face close to my swelling cock, caressing it and smiling. \n\n\"I missed you...\" she whispered to my member. She then stood and went over to the shower stall, bending over to turn it on, her pussylips peeking out from beneath her pert behind. I smiled as I watched, totally rapt by her lovely body. She turned her head and saw me staring. She smirked and wiggled her bum at me, a promise of things to come. \n\nOnce the water was a temperature that satisfied her, she took me by the hand and led me inside the stall. As predicted, it was rather tight, with the only extra space being a recessed area where a person could sit for a shower in case they couldn't readily stand. Alexa giggled as the water cascaded over us. \n\n\"A bit of a snug fit,\" she said in a lilting, musical tone, smiling up at me. \"God knows your mom and dad wouldn't fit in here, no matter how much moisturizer they used.\" \n\n\"Don't blow the moment by making me think of my parents,\" I sighed, causing her to giggle again. She began kissing my neck and shoulders, slowly working her way down my chest. She wanted to go lower, but there wasn't enough room for her to bend over in the stall, so she used her flexibility to her advantage, turning her legs out to the sides as she squatted, kissing and nipping my skin on the way down. \n\nShe moved down slowly, her thighs and calves taking her weight easily. No wonder Alexa had such an amazing ass. She finally arrived in front of my cock, kissing it lovingly before sliding it inside her mouth and reaching her hands around to caress my behind. I shut my eyes and trembled as she bobbed back and forth, humming as she sucked on my throbbing shaft. Nothing felt as good as having Alexa's mouth or pussy wrapped around my cock. \n\nMy hands clasped her head, flexing in her wet hair. The water trickling down my body plus the liquid heat of her mouth had every one of my senses alive and tingling. She pulled me out of her mouth long enough to wrap a hand around my shaft, pumping gently while she snaked her tongue around my cockhead, teasing me with kisses and flicks. \n\nFinally she stood up slowly, dragging her wet, slippery breasts along my front. My hard-on was raging between us and she kept a gentle hand on it, stroking me slowly. She smiled wickedly up into my eyes. \n\n\"So...\" she began, teasing the head against her pussylips. \"I don't expect you to somehow crouch down in here and return the oral favour, so I'll let you go straight to fucking me and cumming deep inside my hungry pussy. Do you want me from the front... or from behind?\" \n\nI smiled back. \"How about a little of both?\" \n\nShe raised her eyebrow and her expression was one of amused approval. \"Ambitious. I like how you think, good sir. So then, I'll start facing away from you and then turn inward, so we can look into one another's eyes while you cum in me?\" \n\nI nodded. \"Best idea I've ever heard, Alexa.\" \n\nShe slowly turned herself around, her body necessarily sliding against mine. She was now facing into the back wall of the shower, her breasts pressed against the tile, her hands supporting her. She turned her head to the side and winked at me while squirming her butt against my manhood. My whole body was aching with need as I pulled her cheeks apart. I toyed the head of my cock against her pliant pussylips, making her moan and tremble. \n\nAlexa and I both sighed in pleasure and a sense of relief as I slid deep inside her, up to the hilt. It felt so natural and right to be bonded like this, the most perfect thing in the world. She squeezed around me, her pussy holding me tight as if she never meant to let go. \n\n\"Mmmm, back where you belong,\" she purred, smiling at me. \"I love you, Alex.\" \n\n\"I love you too, Alexa...\" I said softly as I held onto her hips and began to slide back and forth inside her. She moaned and pressed her forehead to the wall while she squirmed her ass back against me. She was already sighing in pleasure. \n\n\"Oh, that's so good...\" she moaned, squeezing me each time I pushed inside her. \"You hit every spot I love, it's like you're made to fit inside me, Alex...\" \n\nI knew what she meant, being inside Alexa was unlike any other girl I'd known this way before. I didn't know if it was because of our powerful love and lust for one another, but it certainly did feel like our bodies were pieces of a puzzle that fit together perfectly and brought utter bliss in the fitting. Destiny or dopamine, I didn't care which, I loved her and wanted to make her feel wonderful. \n\nShe hissed as she writhed her ass back into me while I pushed forward, getting deep inside her pussy. My hands slid up her body and between the wall and her breasts, massaging and squeezing them, causing her to moan. The touch of her body was normally thrilling to me, but the slippery wetness of the shower made it more incredible than ever. \n\n\"Nnnn, Alex...\" she panted, trembling beneath my touch. \"Oh God, turn me around if you want me facing you, I won't last like this...\" \n\nI nodded and pulled out of her momentarily while we turned her around, her slippery body gliding over mine, making me shudder. She was finally facing into me, back pressed to the wall and her incredible breasts squashed to my chest. Her arms went around my shoulders and she looked up at me with hungry, expectant eyes. I could feel her chest heaving as she waited to feel me back inside her. \n\nI put one hand on her hip and used the other hand to guide my tool to her molten sex. She hissed and I sighed loudly as I pressed up and deep inside, pinning her to me. My public bone met hers and we kissed hungrily, tongues lashing around one another. She moaned into my mouth as I began to move back and forth inside her. \n\n\"Uhhhh, fuck,\" she murmured through our kiss. \"You're gonna make me cum so hard, Alex...\" \n\nShe snaked one of her legs around my behind, slightly changing the angle of penetration and we both shuddered in pleasure. She pumped her hips against mine as I fucked her, spearing deep into her core. She moaned into my mouth as our tongues tangled and wrestled eagerly. Her fingers gripped my shoulderblades, nails almost digging in. \n\nWe broke the kiss as we looked into one another's eyes, baring our souls for one another to see. I loved her for being so open to me, nothing held back. I could see in her eyes how she felt, the pleasure of our lovemaking, the excitement of fucking in her hospital shower and the unbridled love she felt for me, something I could never doubt having witnessed those eyes. \n\nOur bodies were trembling as we thrust against one another, driving me deeper and deeper inside her, but our gazes stayed locked. Neither of us wanted to miss that moment of looking into one another's souls when we came together. Her sapphire blue eyes flashed with lust but also deep desire to see that honesty no one could hide at the moment of climax. \n\nAnd I wanted her to see it. \n\nPanting and squirming, we ground together fiercely, bodies slapping wetly as my cock slid in and out of her tightening tunnel. Her fingers were starting to dig into the meat of my shoulderblades, but I couldn't feel it at all. There was only the unreal tingling wet heat building between us and the bottomless depths of her blue eyes, staring deep inside me. \n\nHer mouth opened and she stifled a cry, exhaling hard, still looking up at me while she crushed her hips into me desperately. I returned her gaze as I pressed her against the wall with all my might, straining my hips as I pushed in as deep as I could and then began shuddering as her pussy clenched and fluttered around my cock, spilling my cum inside her. I growled as I squeezed her back with my hands. \n\nMy God, those eyes... \n\nWe both instinctively knew the moment and attacked one another's mouths in a frenzy, kissing like our lives depended on it. Seeing into her eyes, into her soul in that orgasm, it triggered an unreal lust in me and she clearly felt it too. My body jackhammered against her, slamming her ass back against the shower wall loudly. She screamed into my mouth as I continued to cum inside her, the demon strength her pussy gripped me with almost making me dizzy. \n\nI felt berserk somehow. \n\nI pulled on her hair, craning her neck while her hands grappled onto my back, nails raking across me. Her eyes were flashing, her mouth wide open and white teeth exposed. I slammed my hips against her still, battering her pussy, the head of my cock touching her womb. We were almost like animals, our sex taking on the qualities of frenzied mating. Gone was the lovemaking, this was primal and savage sexual response, something neither of us had expected but were powerless to stop. \n\nAnd neither of us wanted to. \n\nThe madness of the orgasm ended and we collapsed against one another, panting heavily. My limbs were heavy as lead and I felt drained. My body twitched while she trembled and gasped, still pinned to the wall by my bulk. Neither of us could say anything, we were both beyond words. Besides, what was there to say that we didn't already know? \n\nThe water beat down on us while we stood still, tangled in one another's limbs, my cock still deep inside her slippery depths. I don't know how much time passed while I just felt her heart beating against my chest, her pussy still caressing my cock, a needy lover unwilling to let go. Finally, Alexa stirred and pressed her lips to mine, kissing me so lovingly I thought my heart would burst. \n\n\"Perfect...\" she whispered against my mouth. \"No other word for it, Alex. I couldn't have dreamed for more...\" \n\n\"I agree,\" I said back softly, my lips touching her while I caressed her exquisite body. \"That was unlike anything I've ever experienced, Alexa, even with you.\" \n\n\"I know,\" my aunt sighed, shaking her head slightly. \"I just... that orgasm, Alex, it brought out something so primordial in us both. I hope we can find that again some time, when we don't need to be so guarded.\" \n\nI nodded and pulled back from the wall as much as I could, my cock popping out of her wetly. She supported herself with her hands on my shoulders and stretched on her toes, rotating her neck and doing what she could to squirm the kinks out of her body. True, she was still pressed against me, her tits squashed to my chest, but at least I didn't have her pinned and immobilized. \n\n\"Mmmm, we'd better shower off before anyone arrives.\" Alexa mused, smiling at me. \"ShallI lather you up first?\" \n\nI shook my head. \"No, I'm just gonna rinse off and get out so you can shower up properly.\" \n\nShe looked confused. \"You're turning down my invitation to lather you up using my body?\" \n\n\"I don't want to refuse ,\" I replied, shrugging. \"But I don't think it's a good idea for both of us to smell like your hospital's shower gel when my parents get here.\" \n\n\"Oh. Good point...\" she conceded. \"Well, I'll just have to make it up to you another time. Okay, you rinse off and then I'll do my thing once you're out.\" \n\nI nodded and turned around, allowing the showerhead to cleanse me while doing my best to ignore Alexa giggling and fondling my body from behind. Her hand took my limp but swollen shaft and caressed it slowly, seeing if she could make me hard again. Half of me wanted to resist out of principal, but I also needed her to know what sort of effect she had on me and I was soon hard and throbbing again. \n\n\"Naughty boy,\" she cooed, lightly slapping the top of my shaft, making it bounce up and down comically. \"Too bad you need to get out now, right?\" \n\nI shot her a look and she smiled innocently. I sighed and got out of the shower while she giggled at her torture of me. She couldn't stop me after I'd wrapped myself in a towel and left the bathroom, flushing the toilet on the way out. \n\nThere was an evil smirk on my face as I heard a shriek of discomfort from the shower stall. I didn't know that happened with the water in hospitals too... \n\n*** \n\nAfter Alexa was done promising to kill me for the hot water prank, we made sure I was completely dry and sat around, listening to music on a radio station and reading magazines. Restraining ourselves from locking the door and making out was difficult, but necessary. My mother finally texted me and announced that she and dad were on their way over. I replied I'd been reading while Alexa had taken a nap before their arrival and her release. \n\nMy mother breezed into the room, followed by my father, who was his normal, giant and genial self. Mom hugged Alexa close, sniffing her and commenting on how glad she'd be to get her home so that the shower gel smelled not so antisceptic. I stood up and gave mom the chair while she interrogated her little sister, making sure she was ready to leave. Mom was more than willing to take the entire hospital faculty on in a no-holds-barred pitfight if Alexa felt she needed to stay longer. And with my dad as her tag-team partner, I didn't really fancy the hospital's chances. \n\nMy mother began going on about how they'd keep an eye on her for a few extra days, just to be sure, but I couldn't help noticing that Alexa didn't seem to be paying attention. She was staring at something. She caught my eyes and nodded her head subtly, directing my gaze. I followed her eyes over where she was looking... \n\nTowels on the floor. Three of them. One of which would not smell like hospital shower gel. \n\nNormally one wouldn't think that was a big deal, but if my mother decided to fuss and clean up after her younger sister, there was no chance she wouldn't notice how one of them smelled differently and then she'd be asking questions. Why give her the opening, right? \n\nI excused myself to go to the bathroom, making a show of noticing the towels strewn on the floor and kicking them into the bathroom ahead of me, using my foot to wipe up any water on the floor with them. This virtually guaranteed my mother would be loathe to touch them now. I tossed them in the hamper as I closed the door, waiting an acceptable length of time to go to the bathroom before flushing the toilet and coming back out into the room, where my mother was still explaining her plans and Alexa listened intently. \n\nI was also listening, but I made a point of looking around the room, inspecting other things, seeming like I wasn't paying attention. I allowed my mother to call for me twice before looking over, coming out of my 'fog' that I was apparently in. ",
        "\"Ugh, just like you to not be paying attention,\" she sighed, rolling her eyes. \"Listen, Oblio, while you were wandering around in the Pointless Forest, I was telling Calamity Jane here that we'll be keeping an eye on her for a few days and she's not allowed to exert herself- no heavy lifting, strenuous exercise or extreme excitement.\" \n\nI shrugged and nodded. \"I promise not to take her weight lifting and if I see her trying to run a marathon I'll trip her. Anything else?\" \n\n\"Smart-arse,\" my mother muttered. \"Your father's more useful than you.\" \n\n\"Oh, he can't be as useless as all that, can he?\" Alexa inquired, smirking. \n\n\"Please,\" my mother groused. \"When he was eight, he named his rabbit Biscuit Hammer. Who does that?\" \n\n\"So he's a little bit random,\" my aunt reasoned. \"And I hardly need a chaperone while I recover.\" \n\n\"Just as well that you're starting to work for the Linguistics department, then,\" my mom concluded. \"I can keep an eye on you myself and when I'm busy, my peers in Linguistics can do it for me, tell me if you look tired or pale.\" \n\nAlexa sighed and laid back on her bed, looking at the ceiling. \"Yes, my lady...\" \n\n*** \n\nDad and I strode alongside either side of my mother like imposing bodyguards while she pushed Alexa's wheelchair down the hall. My aunt had protested, saying she was perfectly fine to walk, but a single hard look from mom cowed her and she sat obediently in the chair, rapping her fingers on the padded arm as we steered through the hospital. \n\nDad drove mom and Alexa home while I followed. Once we were back in the house, mom was insisting that Alexa lie down on the couch and take it easy. Alexa insisted that all she wanted to do was eat real food and she'd be willing to pay if we could all go out to eat. Mom finally yielded to pressure and agreed we'd go for Mongolian if Alexa would take a short nap first. Alexa in turn turned on her side and took her nap on the couch. My mom sighed and put her hands on her hips, clearly disasatified with this outcome. \n\n\"How are we supposed to sit around and discuss you if you're right here?\" she groused. \n\nWe sat around the kitchen island, discussing the watches, such as who would check on Alexa at what hour. While the hospital had said that they saw no signs of concussion, she was clearly taking no chances and I was secretly relieved about that, even if I tried to sound dismissive of the notion. \n\nI was also obviously the designated driver for the evening since mom was on her second glass of wine and dad was having a third beer. True, dad could drink a keg and not feel it, but the law's the law. Hence, my niggardly half-bottle of root beer. \n\n\"I worry about her and the stairs at night,\" mom said quietly, her voice betraying an earnestness borne of genuine concern. \"If she gets up in the middle of the night, tries to go downstairs and has a dizzy spell or something...\" \n\n\"You proposing to let her stay on the couch?\" dad asked. \"If she needs to sleep and we're bustling around in the morning, it's hardly fair to her.\" \n\n\"Good point,\" mom said, nodding. \"No worries, then, we'll just put her in Alex's room in the basement. It has a bathroom and a fridge, everything she needs. Gollum can sleep in her room.\" \n\n\"Correct me if I am wrong,\" I interjected, trying to sound exasperated. \"But didn't you just kick me out of that room a week ago and put me in the basement, only to kick me back up to it again?\" \n\nMom favoured me with a look. \"There's no pleasing you, is there? You whine about losing the damn thing and then you don't want it back. We raised a son, not a teenage girl, or at least I thought. What's wrong, Gidget?\" \n\nDad snickered but then cleared his throat and listened quietly. \n\n\"So we put her in the basement,\" I said. \"Now we-\" \n\nMy phone buzzed in my pocket. I paused in speaking for a moment and fished the device out, seeing who had messaged me. \n\nIt was a video message, one showing someone's very wet pussy being massaged on what looked suspiciously like our couch in the other room. \n\n\"Something going on?\" mom asked, her eyebrow raised. \n\n\"No,\" I sighed, saving the video and putting my phone back in my pocket. \"Just someone I know being a moron.\" \n\n\"Imagine that,\" mom muttered. \"Anyway, you were saying?\" \n\n\"What I was going to say was that now we put her in the basement and you've got one of us going to check on her every four hours,\" I continued. \"Meaning one of us is now hauling ourselves from the top floor down to the basement at all hours. Doesn't exactly sound fun.\" \n\nThere was dead silence in the room while my mother merely stared at me. My father, meanwhile, who had been sitting between us, visibly winced and then nudged his seat closer to my mother and away from me. \n\n\"Where are you going?\" I asked, scowling. \n\n\"Juuuust moving away from the impending lightning bolt...\" he said, crossing himself. \"That was just about the dumbest thing I've ever heard you say, junior, and frankly, you're on your own for this one.\" \n\nI thought about what he was saying and then looked at mom. She just kept staring at me and I realized I'd screwed up, big time. \n\n\"So...\" she said quietly. \"How long of a headstart do you require?\" \n\nI didn't say anything, but then my phone began buzzing again. Several messages came in, one after the other. Unable to stare my mother down, I nervously checked the messages. \n\n\"Oh, you really fucked up!\" \n\n\"Nice knowing you! I'll miss that beautiful cock of yours.\" \n\n\"Try not to call out my name as you die, I don't want to be implicated.\" \n\nThen a random tit picture. \n\n\"Do you need me to message your friend back and tell them when the funeral is?\" mom asked, her voice very even. \n\n\"No, pretty sure I wouldn't want them there,\" I replied, knowing that Alexa could hear me. \"I'll just come back and haunt them. I'm sorry, mom, I wasn't thinking. Probably just stress after all this.\" \n\n\"Well, it's true, you weren't thinking, but yes, this has been stressful for all of us, except possibly the Friendly Giant here,\" she replied, cocking her head at dad. \"Anyway, we'll overlook your little derp there and proceed with the plan. After Allie wakes up, we'll go for dinner.\" \n\nAnother video, this time Alexa sucking on her own nipple, with the words \"Mmmm, yum yum yum\" across the bottom of the screen. Thank God I have my media volume on silent. \n\n\"Well, I'm going to go and change out of these stale work clothes and put on something fresh for dinner,\" mom announced. \"Mike, I might need some servicing prior to this. Care to join me?\" \n\n\"My day's looking up suddenly,\" dad said, hopping up spritely and grinning. \"What are you gonna do, son?\" \n\nI shrugged. \"Go downstairs and game until Alexa wakes up, I guess.\" \n\nMom headed upstairs, followed closely by dad. I heard her squeak and giggle at the top of the stairs, telling him to wait until they were in the bedroom. I sighed and shook my head, turning and walking into the living room. Alexa was lying on the couch still, covered by a thin blanket. She saw me and smiled, pulling the blanket aside and revealing that she was completely naked. She smiled and squirmed slightly, caressing her breasts and dropping one of her legs to the floor, opening up to show me her glistening pussy. \n\n\"So how much time do you think we have?\" she asked quietly. \n\nI shrugged. \"They'd probably stay upstairs until you woke up, to make sure hey didn't disturb you, but if they're doing what I think they're doing, we've got a full hour at least.\" \n\nShe stood up slowly, reaching for my hand, still naked. \"Then you need to take me downstairs and lick me until I cum, since you owe me from earlier in the shower.\" \n\nWe walked hand in hand to the stairs down to my room, Alexa seemingly unafraid of being caught in the altogether. I walked behind her as she descended the steps, watching her wiggle as she turned her head to smile up at me. When we reached the bottom, she headed straight for the bed and splayed herself out on it, writhing slowly and caressing herself. \n\n\"I know I have my own room,\" she purred as she looked at me with bedroom eyes. \"But I love being in your bed, my love. I can smell your scent on the covers and I know you've been naked with these sheets and mmmmmm...\" \n\nI walked toward her and pulled off my shirt before crawling onto the bed. She smiled at me playfully, squeezing her breasts. \n\n\"You might want to strip to be comfortable,\" she whispered. \"But if you plan to cum, don't wipe youself out, I was hoping to do something special tonight that we talked about earlier this week.\" \n\nI considered and stripped off my pants and boxers, my cock already swelling at the sight of her. Alexa licked her lips as she watched my member hanging between my legs while I knelt over her. \n\n\"Well, maybe I won't cum yet,\" I mused, caressing her leg. \"But I'm gonna make sure you can barely walk straight by the time we're supposed to go to dinner.\" \n\n\"Mmmm, bring it, big boy,\" she said in a husky voice, her eyes smouldering with desire. \"Lick me like ice cream and make me melt...\" \n\nI positioned myself between her legs, which she spread wantonly, exposing herself without shame. One of her fingers slid up and down her slippery slit before she used it and another one to part her lips, showing me her inner pink. She was already wet and sticky, gleaming tendrils of her arousal pulling away with her fingers. \n\nI began planting kisses around her inner thighs while I held them and she sighed, caressing her breasts while watching me. I brushed my lips across her nether regions, causing her to shiver and squirm. But her giggling made me pause. \n\n\"Something funny?\" I asked, looking up from between her legs. \n\n\"Your poor back,\" she cooed, reaching down and stroking at my shoulders and traps. \"You've got red marks and scratches all over your shoulderblades and even little marks where I dug my fingernails in when I was cumming. I'm sorry, you'll have to cover up for a while still.\" \n\n\"No worries,\" I said, waving it off. \"You've got some lovely reddish welts on your back from where I gripped you a little too tight, to go along with my bite mark on your boob.\" \n\n\"That's not just a bite mark, it's a badge of honour. Looks like neither of us will be spending any time in a state of undress around Karen and Mike,\" she sighed, smiling down at me and caressing her fingers through my hair. \"Not that I had any intention of being naked around either of then, mind, but we can't even use the jacuzzi with them now. We'll probably need to be a little more careful, even if we don't want to be.\" \n\nI nodded and went back to her pussy, which begged for my attention. I began gently, holding her thighs as I slowly kissed and nibbled my way around her shining, swollen lips. Alexa cooed and trembled beneath me, her fingers in my hair, eyes closed while she let me pleasure her. \n\nSoon I used my thumbs to carefully pull her lips apart, opening her to me. She shuddered as I kissed her clit and then slid my tongue down to her inner lips and pink walls. Massaging up and down her pussy with my tongue, I held her captive, a slave to my carnal whims. Alexa whimpered and clutched my hair, squirming her hips against my mouth. \n\n\"Fuck, you're so evil...\" she gasped, squeezing her eyes shut and trying to remain quiet. \"Oh my God, you're going to make me cum so hard, Alex...\" \n\nShe must have been horny, because I'd barely touched her as yet, at least not as much as I'd planned to. There was a yearning and urgency to the way her body was responding to my tongue, not a casual acceptance of pleasure, like we often had, but a need she could not articulate with mere words, only her body's actions could express it. \n\nMy tongue snaked inside her and she hissed, pressing up with her hips. I could feel her pussy squeezing and throbbing around me. One of my hands kept massaging her lips and clit while the other trailed down, over her taint and then pressing against her puckered knot. She drew in a deep breath and went rigid as my finger penetrated her slowly, up to the second knuckle and then the third at the base. \n\n\"Fuck...\" she rasped, her body squirming and writhing in several directions at once, seemingly. \"Are you trying to make me scream?\" \n\nI didn't say anything, I just worked her pussy with my tongue while my finger wiggled and caressed her back passage, crooking up occasionally so I could feel it press through the membrane and against my tongue in her womanhood. \n\nAlexa squirmed and ground, her hands leaving my head to molest her breasts, squeezing them hard or pulling at the nipples, causing her to squeak and whimper. She seemed to desperately need this, now that she was back in the comfort of our home. I was relentless in tongue-fucking her, reaching further inside her with each moment. Her body was shaking and covered in a sheen of perspiration now and I knew it wouldn't be long. \n\n\"Oh fuck,\" she grunted, starting to roll from side to side as she approached orgasm. \"Gonna be so good, oh God, fuck yesssssss...\" \n\nI pushed my finger deep inside her ass and she bucked and went rigid while I pressed a thumb on her clit. She pressed her hips off the bed and strained for a moment, fighting to hold on. \n\nBut then the dam burst and she pulled a pillow tight over her face, screaming into it as the orgasm crashed over her like a tsunami. In spite of the pillow, I felt a tinge of worry that my parents might hear her, but then I remembered they were probably busy too and dismissed it. I lashed her pussy mercilessly with my tongue and wiggled my finger in her ass while she writhed and ground like a woman possessed. She screamed and moaned into the pillow, yelling incoherent things until she collapsed back into the bed, her body shaking. \n\nI finally slid my tongue out of her and my finger, instead just planting gentle, loving kisses around her saturated pussy. I knew my face was glistening with her cum and I was looking forward to feeling her kiss and lick it off me, which she seemed to enjoy doing. \n\nAlexa was still just shaking like a leaf when she finally removed the pillow from her face. She stared blankly at the ceiling, lost to this particular plane of existence as yet. My kisses tapered off and I let her just float for a while, to find her way back to me. After a few minutes, she slowly blinked and looked down at me, smiling serenely. \n\n\"Hey,\" she said softly. \"How are you?\" \n\n\"Just fine,\" I replied, giving her gooey pussy a gentle kiss for emphasis. \"And you?\" \n\n\"Oh, just floating around Nirvana some place,\" Alexa murmured, one of her hands gently caressing a breast. \"Maybe being in love with you is a mistake, because the orgasms you give me are going to fucking kill me.\" \n\n\"Helluva way to go, though,\" I mentioned, massaging her lips and grinning. \"I know I like the idea.\" \n\nShe giggled tiredly. \"Well, I can't complain, can I? How often can people be this in love?\" \n\nI crawled up her body, nestling down gently on top of her. She smiled into my eyes and we kissed lovingly. Her legs parted, allowing me to rest my cock against her pussy. It felt like heaven, even if my erection was throbbing. She giggled again, wiggling her hips a tiny bit to feel him. \n\n\"Poor fellow,\" she cooed. \"He missed out on the fun. Can you... can you possibly put him in me without fucking me and cumming?\" \n\nI thought about that. \"So, like, park him inside you and then just leave him there while we relax and love one another?\" \n\nShe nodded. \n\n\"Well, as long as we're not groping or making out or you don't troll me with those inner muscle flexes of yours, then yeah.\" I concluded. She smiled and allowed me to slide my cock deep inside her for safe keeping, both of us enjoying the quiet intimacy of our position. It felt good, really good, but I also found I could just relax and let him be. I wanted this with Alexa. \n\nWe caressed one another's faces gently, saying nothing but looking into one another's eyes. We didn't need to say anything, because we were open books to one another. Normally I'm sort of closed off, but not with Alexa, I wanted her to know me, all of me. I needed her to, I no longer felt complete if I thought there was something I hadn't shared with her. I knew deep down that nothing I said, thought or had ever done would make her judge me or think less of me, to cause her to pull away. \n\nAt least, not until we found a solution to our underlying dilemma, something we'd tacitly been avoiding today. \n\nAlexa seemed to pick up on my thoughts and sighed, her breasts rising and falling under me quite delightfully. \"So, any idea about who you're going to date?\" \n\nI shook my head. \"Not really, I'm sure it'll be easy enough to find someone though.\" \n\nShe giggled. \"That almost sounded like a boast. I guess I'll be dating Jeanie, since she's interested and it'll help throw Mike and Karen off the trail about us if I'm dating a girl.\" \n\nShe saw my expression and cupped my cheek, caressing it gently, her eyes tender with love. \"I know it's not ideal, Alex, but we agreed it's our only chance to be together, for as long as possible. The day will come where we can't hide anymore and will in all likelihood be forced to part. If that's the case, I'll grieve then. But until then, I want to spend every possible moment I can with the man I am so in love with.\" \n\nWe kissed again, loving one another, souls slowly winding around one another in a slow dance of eternal passion. The kiss ended and we both sighed, Alexa pressing her lips to my shoulder. \n\n\"I can't believe you kept sending me those videos, you little troll,\" I said finally, trying to scowl down at her. She got a big grin on her face and then giggled, clearly not affected by my (feigned) irritation. \"Mom wanted to know who it was.\" \n\n\"I know,\" she quipped, winking at me, even as I settled my weight further down onto her as a sign of my disapproval. She tried not to wheeze. \"But I could hear you all and decided to have some fun. After all, I was the one being left out.\" \n\n\"Well, you heard what you missed,\" I sighed. \"You'll be down here for the next few nights.\" \n\n\"Meaning you will be too.\" Alexa added. \n\n\"Where you're in no danger of falling down the stairs from your bedroom,\" I continued dryly. \"Every so often, one of us will come down and check on you, make sure you are okay.\" \n\n\"Poo,\" she said, pouting. \"If your parents come to check, it means I can't sleep naked.\" \n\n\"Well, not on top of the covers, anyway. Stay under a simple coverlet. I'll see if I can get her to calm her shit and stick to one check-in a night. The nights we know it's me, stay as naked as you want.\" \n\nShe giggled. \"Calm her shit. Yes, my sister really needs to hakuna her ta-ta's in some ways, doesn't she? I can't believe she called you Oblio, I nearly lost it and began laughing when she did.\" \n\n\"Yeah, that was an obscure reference even for this household,\" I muttered. Fuck Harry Nilsson. \"Still, keeping things and people on task is how she copes. My dad and I balance out her control freak tendencies, because he can't be controlled like that and I'm too big a smart-ass to let her get away with it all the time. Pretty sure without her, dad and I would have turned this house into a commune by now.\" \n\nAlexa rolled her eyes and shook her head. \"I can see it, that's the problem. How's Slugger doing down there?\" \n\nI wiggled my hips for a moment and then shivered when Alexa smiled wickedly and squeezed her pussy around my still-hard cock. \n\n\"Nff, fine,\" I grunted, pressing down a little into her. \"I think I'll pull him out now, I'm not feeling too in control, y'know?\" \n\nShe nodded and allowed me to withdraw from her tight, slippery confines, but not without taking hold of my cock and pulling me up to her mouth, where she kissed and sucked on my shaft for several seconds while looking up at me. This woman drove me nuts. But before I got too carried away, she released me and sighed happily, drawing her knees up to her chest. This did nothing to preserve her modesty, of course, since she was naked and her wet pussy was still clearly visible. ",
        "I settled down onto the bed beside her and she caressed my chest contentedly. \"Being in that accident just reminded me of how precious my time with the people I love is,\" she said quietly. \"My family. You, Karen, even Mike.\" \n\nI looked amused. \"Even my dad? You're surprised you like him?\" \n\n\"Oh, no, nothing like that,\" she corrected, smiling. \"Your dad's just so much, well, bigger than anything else in my life, not just his body, but his personality, his sense of humour, his ambitions... he's almost fictional, you know?\" \n\n\"Well, just don't get any ideas about trying to bed him,\" I teased, reaching over and caressing her breast. \"I might get jealous.\" \n\n\"Noooooooooooo,\" Alexa said readily, shaking her head. \"Nope nope nope. Karen can have him. I've no doubt he's a demon in the sack and he's sexy as hell, but no, thank you. I'm prefectly happy having him as my brother-in-law and that's it, Charlie. I can't see him any other way. I wasn't enchanted by him when I saw him, I was duly impressed. You, on the other hand...\" \n\nIt was too succinct a response to not be true. She liked my dad a lot, she might even love him as a family member, but she'd never be in love with him or feel more than an ephemeral attraction to him. Under other circumstances, who knows? But that wasn't my concern and it was clear I had nothing to worry about. \n\nIt actually made me feel a lot better, because if she wasn't attracted to my dad, of all people, then no one else aside from me was ever going to get her attention. No other guy, anyway. \n\n\"So are you gonna tell me what this 'special' thing is you have planned for tonight?\" I asked, brushing my fingers over her nipple. It hardened under my touch, i loved how easily her body became aroused. Alexa bit her lip and gave me a naughty smile. \n\n\"Nope,\" she said simply. \"You'll just have to wait like a good boy and find out.\" \n\n\"What if I don't feel like being good?\" I countered, sitting up and now giving her breast a squeeze. Alexa sighed and closed her eyes. \n\n\"You can't break me,\" she murmured as I massaged her silken, squishy skin. \"I won't tell, no matter what you do to me.\" \n\n\"Is that a dare?\" I asked, now grinning as I could see her wrestling with her growing arousal. \n\nBefore I was ready for it, Alexa had turned and pushed me onto my back, fast as a viper. Her eyes flashed as she pressed down on my shoulders, pinning me. I felt her pussy sink down onto my cock and I groaned in sudden ecstasy. \n\n\"You're going to be a good boy,\" she breathed as she slid up and down my shaft. \"Or I'll make you cum so hard right now that you're too pooped to pop later and you'll miss out on the surprise. Is that what you want, Alex?\" \n\n\"I don't know,\" I rasped, reaching up and cupping her breasts, massaging and squeezing them. Alexa moaned and her head fell backward. \"Do I?\" \n\n\"Oh God,\" she panted, riding my cock, her body still damp from her earlier sexual exertions. \"You really want to, Alex. Oh, fuck, I want to feel your cum in me...\" \n\nI rolled her over, pinning her on her back and Alexa gasped, her eyes going wide as I exerted my physical strength over her. She gasped and panted while I thumped my hips against hers, driving my cock deep inside her pussy with an increasing need. She gripped by ass cheeks and pulled me deeper inside, fingers digging into my skin. \n\n\"Oh God...\" Alexa whimpered. \n\nI clenched my teeth and slowed my pumping, finally pulling myself out of her. We both shook and moaned as we fought to control ourselves. She clutched the sheets of my bed and sighed almost in frustration. I laid down on my front, face buried in the pillows as I took deep breaths and tried to think of something, anything, to calm myself and stop wanting to immediately cum. \n\n\"Roseanne Barr... wearing nothing but a thong... riding away on a unicycle...\" \n\nDone. \n\nI slowly turned over on my back stared at the ceiling, sighing heavily. Alexa too was lying down, her eyes looking mystified. \n\n\"What sort of alien steel are you made of that you could do that?\" she asked. \"Holy shit, Alex. You must be looking forward to that surprise tonight.\" \n\nShe looked down her body, still amazed. \"My poor little girl. She's so hungry now and...\" \n\nShe turned on her side and looked at me, caressing my face. \"Thank you. I don't know how you did it, but maybe that was the right thing to do, even if neither of us liked it. I'll make sure tonight is extra-special for us now.\" \n\nAlexa stood up and smiled at me, cupping her breasts. \"I'm going to rinse off in your shower so I don't smell like horny and sex. I'll be quick. God, I love you...\" \n\nShe turned to walk toward my shower before pausing and turning around. She walked back to me quickly and collapsed on top of me, her lips locking onto mine and kissing me hungrily, her pussy grinding on my cock. I kissed her back readily, amazed that I hadn't exploded yet. She stood up suddenly and wiggled off quickly to the bathroom, before she completely lost control of herself. \n\nI put my hands over my face and groaned when the door to the bathroom had closed. This girl was going to kill me. My cock, which I had worked so hard to calm, was throbbing and rigid again. My heart was thundering in my chest. \n\nI hadn't been quite as sweaty as Alexa, since I hadn't cum the way she had, but I still needed to cleanse myself. I got off the bed and found a package of body-safe wipes. I rubbed several all over my body, but mostly my poor, abused cock. Alexa had been so aroused that my midsection was sticky with her essence, which almost had the consistency of tree resin at this point. \n\nAlexa came out of the shower seconds later, drying herself with my towel. Her hair was up and she grinned at me. \n\n\"Much better,\" she said, massaging her butt cheeks. \"Didn't do my hair, since I didn't want them to know I took a shower or why, but the cold water quenched my fires for now.\" \n\n\"Best not to have to answer questions,\" I agreed. \"And as much as I'm enjoying watching you naked, I thinking you should probably head upstairs to the couch and get dressed.\" \n\nShe sighed and nodded. \"I know. However, dinner will be fun and tonight will be quite wonderful, I promise.\" \n\nShe dropped the towel and walked up to me, leaning in and giving me a chaste peck on the cheek, her nipples barely brushing my chest. \n\n\"I love you,\" she whispered. \"I'll see you upstairs...\" \n\nI watched her head upstairs, missing her already. I decided to put my clothes back on and began playing a game, wondering when my parents would finally be ready to come down. \n\n*** \n\n\"Is your aunt up yet?\" read the text message. \n\n\"How would I know?\" I replied, frowning. \"I'm in the basement, you're as close as I am.\" \n\n\"Fine, let's try this again. Go upstairs, check on Allie, report back. Am I achieving clarity?\" \n\nI think what worried me is that I could readily identify the tone of my mother's voice, even though this had only been text. I shrugged and went upstairs, finding Alexa lying on the couch and texting on her phone. She saw me and smiled warmly. \n\n\"Time to get up?\" she asked. \n\n\"I think mom's hungry,\" I replied. \"She told me to come and check on you.\" \n\nShe giggled. \"I guess getting fucked in half by your dad kick-starts her appetite.\" \n\n\"The less I think about that, the better,\" I muttered. \"Go ahead and get ready, I'll go get them.\" \n\nI went up the stairs and knocked on the door to their room. Dad opened it after a moment, wearing jeans and no shirt. He seemed to have hastily put them on. Mom was sitting on the edge of the bed, wrapped in a white blanket and presumeably naked beneath it. She looked away from the door politely. \n\n\"I take it Allie's awake?\" dad asked, grinning. I nodded. \n\n\"About time,\" mom sighed. \"Contrary to popular belief, I do get hungry on occasion.\" \n\n\"I told her to get up, so come down whenever you're ready.\" I said, taking the doorknob and closing the door. I headed downstairs and told Alexa they'd be ready in a bit, since they seemed to have just finished up. \n\n\"Cool,\" she said, standing and walking up to me, thankfully dressed. She put her arms around me and smiled, brushing her lips against mine as she looked up into my eyes. \"You know I'm going to do everything I can to make you absolutely crazy during dinner and not get caught, right?\" \n\n\"I had a feeling you might,\" I replied quietly, wanting to just kiss her and pin her to the couch. \"I'm looking forward to seeing you try.\" \n\nWe shared a loving kiss before we heard my parents coming down the stairs and stood apart, waiting patiently. \n\n*** \n\nDinner was fun. I always enjoyed hot pot, but the four of us had developed a dynamic that worked well around a dinner table. True, the structure of the huge heater beneath the table meant Alexa couldn't play footsie with me readily the way she had perhaps planned, but we nonetheless had an excellent time. Not surprisingly, the table was loaded with food and even mom was hungry. Perhaps Alexa was right, maybe getting fucked in half by dad really did stimulate her appetite. \n\n\"Have you met anyone at the university yet that you liked, Allie?\" mom asked, popping some freshly fried beef into her mouth. \"And I don't mean friends, I mean some guy you might want to date.\" \n\n\"Well, I...\" Alexa began somewhat uncertainly. \"I've only been to the campus a few times, Karen, I haven't really been concentrating on developing a social life, not to mention it's summer. The waters might be a little thin.\"  \n\n\"Well, don't give up hope,\" mom said casually. \"Y'never know when someone you don't expect will just show up, right?\" \n\nAlexa shrugged. \"True enough, and I'm patient.\" \n\n\"I'm glad you made friends with Jeanie,\" mom added, putting some lamb strips into the boiler. \"Think you'll find her amusing enough to hang out with? You two have a playdate coming up, don't you?\" \n\nI didn't make a sound, but there was clearly a smirk on my face and mom saw it. She looked at my stonily. \n\n\"Something to add, Wamba?\" she asked, seemingly unaumsed. \n\n\"Er, no,\" I replied, going back to my food. \"That just might be indicative about why Alexa's gonna have a hard time meeting boys...\" \n\nAlexa blushed and looked at her food. Mother's eyes went wide. Dad supressed a chuckle. \n\n\"Outed...\" he said under his breath. \n\n\"I had no clue you liked girls, Ali,\" mom said in a kind of wonderment. \"Not that it matters, of course, I guess it just took me off guard.\" \n\nAlexa turned her head to look at me pointedly. \"It wasn't supposed to be a big deal.\" \n\nHer words expressed disapproval, but I felt her foot sneak over and caress my shin. She'd taken her shoe off. Clearly she wasn't too overwrought. \n\n\"It's not,\" mom said, shrugging. \"It doesn't matter if you're hetero, gay, bi or demi, not to us, anyway.\" \n\n\"Well, I guess I'm bi,\" Alexa continued, pulling lamb out of the pot. \"Sort of on a girl kick at the moment, maybe, but it's hardly the sort of thing that you plan, right?\" \n\n\"Well, good to know there might be nieces or nephews in my future,\" mom mused. \"Goodness only knows when we'll get grandkids out of Chuckles over here.\" \n\nShe looked at me for a moment. \"Unless you're gay.\" \n\nI rolled my eyes while dad tried not to burst out laughing and Alexa snickered. \"I'm not gay, mom.\" \n\n\"Well, it wouldn't matter if you were,\" she answered in a non-chalant voice. \"It would just explain a few things is all.\" \n\nI sighed and concentrated on eating while Alexa reached across the table and fist-bumped mom. Even though I was driving, dad took some pity on me and allowed me to have a beer, ordering a Khan Brau for me. The mood lightened up again and we talked cheerfully about funny things that had happened to Alexa in Europe and what our course loads should be like this coming years. \n\n\"So when do you think they'll allow us to start doing the deparment work?\" she asked. \"More to the point, when do you suppose they'll allow me to start working?\" \n\nMom and dad thought about that and looked at one another for a moment, seeming to communicate telepathically. Dad shrugged. \"No reason you can't start along with Alex, as long as you agree to do nothing pants-on-head retarded and do any heavy lifting or strenuous exercise for the next few days.\" \n\n\"I'm pretty sure I can do the department's lug work while Alexa sorts and re-files,\" I mentioned. \"I'll keep an eye on her.\" \n\n\"Good, then start when you're ready,\" mom concluded, smiling as she put some Chinese cabbage in the boiler. \"Y'know, Allie, concerning Alex's seeming inability to find a date with anything containing an X chromosome, maybe it wouldn't be so bad for you to be seen in his presence. Might generate some interest in him when other girls see a pretty young thing on his arm.\" \n\nAlexa and I paused and looked at one another and then back at mom. \n\n\"It was just a thought,\" mom said, shrugging. \"Nobody knows you're related except a few staff members and you don't share a surname. Just think about it when you're not doing anything better.\" \n\n\"Thanks, mom.\" I said dryly, taking a pull from my beer bottle. \"My aunt is the secret to my getting a date, is that it?\" \n\n\"Oh, don't be so uppity,\" mom replied dismissively. \"It beats dating your 360 controller, doesn't it? Allie's ridiculously pretty, she's exactly the right age to be seen on your arm and other women will wonder what you have going on to keep her interest. Everyone wins.\" \n\n\"Now, Karen, there's no such thing as 'everyone wins',\" dad chided, holding up his chopsticks. \"Well, except in the Special Olympics... and even then you have to tell them...\" \n\n\"Oh, you're awful!\" mom said, swatting dad while Alexa went wide-eyed and began giggling at what dad had said. As progressive as he might have been in his world views, he wasn't above politically incorrect humour by any stretch of the imagination. I just ignored the statement and continued eating. \n\n\"Besides,\" mom pointed out. \"You're going to be seen in one another's company on-campus anyway while you're working, so rumors are inevitable. Just trying to help you out, Sparky.\" \n\n\"Great,\" I muttered. \"My mom's advice to getting women attracted to me is to date my aunt. Nothing weird about that.\" \n\n\"It's a tad unconventional,\" Alexa mused. \"But I guess I don't mind pretending to date my nephew, as long as he doesn't get underfoot while I'm hitting on some cute girl.\" \n\nI hung my head in despair as mom and dad roared with laughter. \n\n*** \n\nI drove us all home, since I was the DD. We went into the house, mom giggling as dad picked her up and carried her through the door and into the loving room. He placed her on the chesterfield and sat down, putting her feet on top of his lap. He removed her shoes and began massaging her feet. \n\n\"Mmmm, heaven,\" mom sighed as dad worked her toes. \"Allie, honey, you need to find a girl who'll do this for you.\" \n\nAlexa shrugged as she sat down in one of the big chairs. \"I don't doubt that, but the only girl I know thus far is Jeanie.\" \n\n\"Oh, she's hopless,\" mom snorted. \"She's got big, cute eyes, but they don't leave a lot of room for anything else in her head, trust me. What were you thinking when you asked her out?\" \n\n\"Actually, she asked me out,\" Alexa admitted, blushing a little while I sat in a big chair nearby. \"I kind of said yes because I wanted to know someone and she is sort of cute. She came to see me in the hospital and your son got an eyefull when she said goodbye to me.\" \n\nMom began giggling uncontrollably, to the place where dad almost had to stop rubbing her feet. \"Oh, honey,\" she teased, looking over at me with tears of mirth in her eyes. \"Did your auntie traumatize you?\" \n\n\"Har-har, mother,\" I sighed, rolling my eyes. \"Jeanie just gave your sister a rather involved kiss before she left, it's not like I've never seen two girls lez out before.\" \n\nAlexa flushed scarlet at my language and dad chuckled. My mom seemed to not know what to say for a moment, a dear blessing from my point of view since she'd been scoring off me all evening. I stood and went over to the entertainment center, putting on a CD of Lionel Hampton, one of mom's favourite jazz artists. She relaxed again and hummed contentedly. \n\n\"Alex, move Allie over to the other chesterfield and massage her feet,\" she said languidly. \"She could use the tlc and you could use the practice for when you get a girl, you'll need to know how to spoil her.\" \n\nMy aunt and I shared a look and I shrugged. I stood and took her by the hand, leading her over to the other chesterfield. I gently laid her down and then lifted her feet, sitting beneath them. I removed her shoes and knee-length socks, trying to not look up her skirt. It was a ruffled, flowing thing that terminated maybe mid-thigh. I looked over at mom and dad while I began rubbing her toes. Alexa sighed and settled into the couch. \n\n\"This is nice,\" mom murmured, tracing a fingernail along the carpet at the foot of the chesterfield. \"It's been a very busy week for everyone in this family and hopefully we're settling into a pleasant and relaxed rhythm for the rest of the summer, no more surprises.\" \n\n\"Amen to that.\" Alexa agreed. \"Hey, Alex isn't too bad at this.\" \n\n\"Better not be,\" dad said, still working the balls of mom's feet. \"I taught him every single technique I used in seducing your sister.\" \n\n\"Well, let's hope he's not that good...\" Alexa said, causing mom to giggle again. \n\nI felt her clasp my fingers with her toes, almost caressing me, a secret signal between us. \n\nWe sat in silence for some time, the men reverently servicing the women they worshipped and loved. Alexa's arm that was pressed into the back of the couch her hand subtly touching my forearm and caressing it. Neither dad or mom could see that from their angle, so it was alright. \n\n\"Well, at least Alex will get glowing references from me about his foot massages if girls ask,\" Alexa murmured. \"But I'm not ready for sleep yet and he's sending me there.\" \n\n\"Well, I'd say let's open some wine, but Allie can't have any for the next few days,\" mom mused. \"Oh, I know. Honey, go and get one of the hookahs, she can do that.\" \n\n\"I thought we had a kid so he could run and fetch things,\" dad answered, pretending to look confused. \"Was I wrong?\" \n\n\"No, not at all, but he's busy turning Allie into a puddle and that's more important, so be a dear and get one of the new ones, will you?\" \n\nHe nodded and got out from beneath her, heading off to get the hookah and supplies. Mom got up slowly and sighed, rotating her neck. \n\n\"Mmm, what that man does to me,\" she breathed. \"He's in for a great night.\" \n\nI screwed up my face, retreating inside my head and trying to not hear what my mom was talking about. I'm glad and grateful she was relaxing, but this was a little much and not quite what I had in mind. \n\n\"Are you sure it's okay for me to take Alex's room for the next few days?\" Alexa asked. I don't want to be a bother.\" \n\n\"Darling, you'd be a bother if you had a dizzy spell in the middle of the night and went crashing down the stairs,\" mom chided. \"Gollum will be fine, he'll just be suffering separation anxienty from his gaming consoles.\" \n\nI just rolled my eyes. \n\n\"I'll make sure that he stocks the fridge downstairs with things you might need, juices and snacks and so on,\" mom added. \"Is there anything Alex can get from your room for you?\" \n\n\"Er, no.\" Alexa replied. \n\n\"Oh, Allie, don't be vain,\" mom insisted. \"I don't want you going back and forth up the stairs, a switch in head elevation too rapidly and you-\" \n\n\"It's not that Karen,\" Alexa interrupted. \"It's just that, well... anything I might need from my room, I really don't think Alex will want to be getting for me.\" \n\nMom thought about what her sister was saying for a moment and then began giggling, to the place where tears were running down her face. ",
        "\"It sounds like you both really need to find some dates...\" she wheezed. \n\nAlexa and I looked at one another, clearly not impressed. \n\nDad returned, with the hookah, coals an shisha. \"Who's up for a little Seventh Heaven?\" \n\n*** \n\nAlexa and I now sat on the couch my father and mother had recently vacated, the two of them headed to bed, with mom informing me that I'd be on duty for checking on her sister at 3 am. We'd gone through one bowl of shisha when mom got light-headed and giggly, telling dad she needed to take him to be so he could have his way with her. She kissed us both goodnight and they headed out of the room, with their arms around one another. \n\nAlexa was curled into my side, watching as a blew a large cloud of billowing white smoke into the air. It smelled like papaya, mango and mint, one of my favourites. I offered her the stem and she took it, inhaling deeply. She then leaned up into me, pressing her lips to mine and gently blowing the smoke into my mouth, following it up with a loving, wet kiss. She put her arms around me, hugging me close, her cheek on my shoulder. \n\n\"I'm so in love with you,\" she whispered. \"And you know what sucks about that?\" \n\n\"What?\" I asked. \n\n\"We'll never be able to share another Dutch Kiss,\" she said quietly. \"Because I'll always have a reason and need to kiss you.\" \n\nShe climbed into my lap, straddling me with her arms around my neck. I could feel her thong panties nestle down against me and pressing her chest against mine. She stared deeply into my eyes in the low light of the room. Slow jazz music caressed the air. With a single, fluid motion, she used one hand to pull her shirt over her head and toss it aside, leaving her magnificent breasts exposed. It was a risk, of sorts, but neither of us cared at that moment. \n\nWe kissed deeply and passionately. She reached down and picked up the stem, taking another deep inhale before pressing her lips to mine and blowing the smoke into my mouth. I smiled and exhaled gently, billowing the smoke around her heaving breasts. She stored the stem between her breasts and pressed to me, holding it in place while we kissed. Alexa smirked as she simply bent her head down to put her lips around the mouthpiece and take another pull. \n\n\"This is exactly how we should be partaking in hookah,\" she whispered, the smoke escaping in mystic tendrils as she spoke. \"Together, like this, looking into one another's eyes.\" \n\nI nodded, my hands resting on her lower back. I didn't need to respond verbally, we both knew the truth of her words. We kissed again, lost in one another. She pulled her head back just far enough to stare deeply into my eyes while caressing her fingers through my hair. \n\n\"I'm about to ask you an irrelevant question, Alex, but I just really want to hear your answer...\" she said quietly. \"Would you marry me if you could?\" \n\nI nodded. \"Without even thinking about it, Alexa. There's no choice in the matter. Yes, I would ask you to marry me in a heartbeat.\" \n\nShe smiled and wiped at her eye, clearly pleased with my answer. \"Let's finish this bowl and then head downstairs. Your dad's not the only one who's going to have a good night.\" \n\nWe finished the shisha maybe fifteen minutes later, kissing and loving on one another the whole time. As I put away the hookah, Alexa waited for me in the living room, laying demurely and caressing herself. When I came back, she said she needed to retrieve something from her bedroom and would meet me downstairs. She kissed me and disappeared. I headed downstairs and sat on the edge of the bed, waiting. \n\nAlexa joined me a few minutes later, wearing her bathrobe and carrying her laptop. She sat down next to me on the bed, put the computer on the TV tray next to it and opened the screen. She then put a finger to her lip while she looked at me, indicating I should be quiet. She maximized a black window on the screen and waited patiently. \n\nBefore long, a young woman about our age appeared. She had dark blonde hair, cut in a shaggy bob, greenish eyes and her smiled excitedly when she saw my aunt. \n\n\"Alexandra!\" she exclaimed in delight. \"Jeg h\u00e5bede du ville kalde!\" \n\nShe was speaking Danish and she certainly looked the part, meaning that this could only be... \n\n\"Of course, I called, elskede,\" Alexa replied. \"And I have a surprise for you. Alex, I'd like for you to meet Freja, my best friend.\" \n\nShe now pivoted the laptop to point the camera at me. I tried to not look uncomfortable as I waved at the camera, naked from the waist up. \n\n\"Hi, Freja.\" I said, waving and trying to not sound awkward. \"Nice to finally put a face to a name.\" \n\n\"You as well, Alex.\" Freja replied, smiling happily. \"Your aunt is my best friend and I miss her very much. I hope you are treating her well for me.\" \n\n\"That would be a mild understatement, Fre,\" Alexa said, smiling slyly and putting her head on my shoulder so we were both in the picture. \"He's treating me very, very well...\" \n\nFreja snickered. \"So you are Alexandra's lover? I am jealous, I miss making love to her.\" \n\n\"It's me you should be envying, Fre,\" Alexa purred, tracing her hand up and down my chest. \"He makes me scream. See the bite mark on his shoulder here? He made me cum so hard I had to bite him to keep from alerting the whole city.\" \n\n\"And this...\" she added, shrugging one shoulder of her robe off and exposing her breast. \"Is his mark on me, declaring me as his own.\" \n\n\"Oh, that's a good one, Allie,\" Freja said, grinning as she inspected the teeth marks on her friend's skin. \"I am twice jealous now, ja?\" \n\n\"So I was thinking,\" Alexa remarked as she removed her robe, leaving herself naked. \"That the three of us might have a little fun together. Kunne du t\u00e6nke dig at se min smukke nev\u00f8 kneppe mig?\" \n\n\"No,\" Freja replied, shaking her head. \"I would not like it. I would love it.\" \n\nAlexa turned her head and smiled at me, her lips close to mine. \"Would you like it if Freja watched us fuck, my love?\" \n\nI smiled back. \"That sounds wonderful. I'm in.\" \n\n\"I'm glad you're okay with it,\" Alexa said, standing and letting her robe drop away to reveal her glorious, naked body. \"Because I want her to see you and see what you do for me and appreciate it.\" \n\n\"It's true, yes,\" Freja said, standing and pulling off her t-shirt, revealing her breasts and then hiking out of her pants and tossing them aside. \"Allie has told me she is in love with you and that makes me happy. I am probably the only other person she's been close to being in love with, but I'm happy to give you my crown.\" \n\nI took a look at Freja's body as she adjusted her camera to show her whole body, something she did readily and without hesitation. She was certainly attractive, though not a knockout goddess like Alexa. She had a pretty face, slender neck and shoulders, her breasts were not as large as Alexa's and somewhat pointed in comparison, but I couldn't imagine complaining if I'd been dating her. She had a trim stomach and wore a strip of honey-blonde hair above her pussy. Her legs and ass were toned, no doubt from playing a sport like soccer. \n\n\"Isn't she pretty, Alexa?\" Alexa purred, tracing a finger up and down my screen like she was caressing her friend's body. \"I miss fucking that bod.\" \n\nFreja smiled, sitting in her chair and spreading her legs wide, resting them on the arms and exposing herself to us. She stroked her fingers up and down her slit, teasing us. \n\n\"Where are the roomies?\" Alexa asked as she made me stand, recealing that I was still wearing my pants. She began unbuttoning them. \n\nFreja shrugged. \"Who cares? I think Ansgar is studying with a friend and Marna is sleeping off a hangover. Don't know where Izzy is, she's been gone for two days, probably with that mand t\u00f8s of hers.\" \n\n\"Then we'll be uninterrupted for our fun and games,\" Alexa concluded, winking at her friend. \"Just the way it should be.\" \n\n\"What about your sister and that k\u00e6mpe stor you said she was married to?\" Freja asked. I could only assume that that 'k\u00e6mpe stor' meant behemoth or some such thing, referring to my father. \n\n\"Asleep, and they sleep like logs, elskede,\" Alexa answered, continuing to unfasten me. \"Fortunately, the son takes after the father, at least I'm assuming. Are you ready for the big reveal?\" \n\nFreja nodded and watched intently, stroking her pussylips with her finger. \n\nAlexa slowly pulled my pants and my cock was swollen enough to almost sprung out once released. Freja sucked in her breath and smiled almost hungrily. \n\n\"Jesus Kristus, Allie,\" Freja breathed, seemingly astonished. \"Where do you put it all?\" \n\n\"Mmmm, you're going to find out, my love,\" Alexa purred, gently stroking my cock, which twitched under her touch. \"Wouldn't you love to feel this enormous cock in your hand?\" \n\nFreja nodded, stoking her pussy more firmly now and staring intently. I could see she was already starting to get wet. \n\n\"How about putting it in your mouth and sucking on it?\" Alexa asked, smiling wickedly at her friend. \n\n\"Oh, God, yessss...\" Freja moaned, using her other hand to hold her pussy open while the fingers on the first hand teased around her inner lips and clit. \n\nAlexa turned me sideways so that she could hold my cock up and sliding her tongue along the underside of the shaft, making sure Freja could see. She swirled her tongue around the head, looking sidelong at her friend and then up at me. Both Alexa and Freja moaned then as she took me inside her mouth, beginning to slowly bob back and forth along my length. \n\nAs always, it felt amazing to have her mouth around me, wet and warm, while her hand moved up and down, twisting gently along my shaft. Her thumb gave the throbbing vein along the bottom of my cock a gentle squeeze during the movement. She hummed, vibrating her vips on my cock and making me shudder. \n\nShe pulled her mouth off and smiled up at me wickedly, her stroking motion enhanced by the pad of her thumb pressing against the top of my cockhead. I knew that look in her eye now, she was getting incredibly turned on. She wouldn't make me cum like this, because she'd want me to fuck her and cum inside her while Freja watched. \n\n\"Do you like it, Freja?\" she asked in a husky voice, turning to stare into her webcam. \"Do you like watching me suck my nephew's cock?\" \n\n\"I love it,\" Freja moaned, massaging her pussy, her eyes getting glassy and her hips starting to squirm. \"Suck his cock, Allie...\" \n\nAlexa nodded and slid her mouth down my manhood again, deep throating me. The wet, greedy sucking sound filled my room, punctuated by Freja's sighs and moans. My hands gently clasped Alexa's head, fingers flexing in her luxurious golden tresses. She held her head still and I began to slowly pump back and forth, pushing my cock in and out of her mouth. She was breathing through her nose, her eyes locked with mine. \n\n\"Mmmm, you're so bad, Allie,\" Freja moaned, watching us while her hand churned inside her pussy. \"I can't wait to see him lick you and then fuck you...\" \n\n\"Let me lick you, Alexa,\" I panted, fingers and thumbs caressing her ears now. \"Let me lick you for her...\" \n\nAlexa pulled her mouth off me and nodded eagely, standing up. She gently made me sit down on the floor and adjusted the camera to show her body above her knees. She stepped over me, gently tipping my head back and nestling her pussy down against my mouth and her legs on either side of me. I snaked my tongue out and began lapping at her wet slit, making her tremble. \n\n\"Mmmm, Fre,\" she moaned, squirming on my mouth and fondling her breasts. \"He's so fucking good at this, I wish you could feel it.\" \n\n\"Uhhhn, Allie, would you share him with me?\" Freja whimpered, watching eagerly while I tongued her friend's slippery lips. \"Would you let him fuck me?\" \n\n\"Yes,\" Alexa panted, her skin already flushed and getting damp. \"Yes, love, I'd let him fuck you. I'd lie beneath you and- nnnnn!- lie beneath you and hold you tight and squirm my cunt into yours while he fucks you and cums in you. Oh God...\" \n\n\"Allie, you slut,\" gasped her friend, her hand a flurry of activity on her pussy. \"Yes, fuck... I want to fuck him with you!\" \n\nAlexa shivered and pinched her nipples, biting her lip as she squirmed over my mouth. My face was already glistening with her arousal, her wonderful taste on my tongue. \"Yes, oh God, yes, Fre... want to watch him fuck me now? Oh shit, Alex...\" \n\n\"Yes,\" Freja hissed, reaching over and picking up a large dildo. \"Fuck her, Alex. Fuck your aunt and cum inside her.\" \n\nAlexa climbed off my mouth and set up the webcam to allow Freja a perfect view of our fucking. She moved onto the bed and got on all fours, facing her friend. I moved around to her ass and knelt behind her. As I was doing this, Freja crawled on her bed and stuck the imposing dildo on the headboard with a suction cup. She intended to mimic our positions, feeling what Alexa felt in a way. \n\nAlexa tried to control her breathing, hands flexing on the edge of the bed while she watched her friend get in position. I took gentle hold of her ass cheeks and parted them slightly, looking down at her incredibly wet pussy. My cockhead teased against the lips, sticky with her desire. \n\n\"Ready, Fre?\" she breathed. Her friend nodded, kneeling on all fours, facing us, her ass wiggling as she positioned herself. Alexa looked back at me through heavily-lidded eyes and nodded. Keeping her cheeks pulled apart, I pushed my cockhead through her netherlips and then slid all the way inside, making her arch her back and groan wantonly. As I entered her, Freja pushed back against her dildo, moaning loudly as she took it into her pussy. \n\nI began to push in and out of Alexa, establishing a steady rhythm so we could watch her friend fuck herself. They stared at one another intently, clearly indulging in an age-old ritual between them and sharing it with me. Alexa was very turned on, her pussy incredibly hot and wet around me. She panted as she bumped her ass against my hips, her breasts swaying and jiggling beneath her. \n\n\"God, Allie, you're so beautiful,\" moaned Freja, her eyes glued to us. \"I wish I were there with you.\" \n\n\"Wish you were here too, Fre,\" Alexa grunted, biting her lower lips while she ground her ass back against me in eager circles. \"He feels so good...\" \n\nI breathed deeply and steadily, determined to not cum until Alexa was done putting on this little show she had planned for her friend. We both watched Freja, thrilling to see her squirming against the dildo she was fucking herself with. She supported herself on one hand while she other massaged and squeezed her breasts. She licked her lips as she stared into Alexa's blue eyes, rapt by what she was watching. \n\nSoon, Alexa pushed back against me and straightened her back, putting me on my haunches while she rested on my lap. I wrapped my arms around her and she began grinding or moving up and down on my cock, which Freja could now see as Alexa spread her legs- my glistening shaft was swallowed repeatedly by her greedy pussy, which made the squelching noises we'd come to love hearing from our fucking. \n\nFreja was panting as she watched me molest Alexa's breasts, massaging them in circles or pinching and pulling on the nipples. Alexa's breath was ragged and she turned her head and jammed her mouth to mine, our tongues tangling as we kissed feverishly, one of her hands running through my hair. \n\n\"Oh, God, fuck him hard, Allie...\" Freja mananged to gasp, her skin going pink and shining with her exertions. \"Lie on your back on let him pin you and cum in you!\" \n\n\"Is that... what you want?\" Alexa panted, trembling in excitement. \"You want him to pin me down? Pin me and fuck me so I can't escape?\" \n\n\"Yes...\" the Danish girl whimpered. \"Please!\" \n\nBefore I knew what was happening, Alexa had managed to turn around in my lap, facing into me and then lying down on her back, her head over the side of the bed and looking at the laptop screen, where Freja was still fucking herself madly. She gripped my arms as I leaned over her, pushing deep inside and she groaned so loudly I thought my parents might actually hear her. \n\n\"Fuck me, Alex,\" she hissed, her eyes flashing as she looked up at me for a moment. \"Fucking give it to me so Freja can see it. Show her what you do to me!\" \n\nI began pounding down onto her, my cock ramming in and out forcefully. Alexa's body shuddered and thrashed beneath me, squeezing my shaft feverishly while we fucked. Her breath was little more than a series of pants and gasps while she looked upside down at Freja, who was almost slamming herself back against her dildo, her whole body shaking. \n\n\"Oh, Jesus, he's gonna make me cum, Fre!\" Alexa grunted, her fingernails digging into my triceps as she held up. Her hips were pistoning up and down beneath me, our pubic bones almost smacking into one another as my cock drove deeper and deeper inside her. \n\n\"Fuck him, you slut!\" Freja growled, her eyes glassy and her mouth hanging open. \"Take his cum in you!\" \n\n\"Cum in me, Alex,\" my goddess said, her voice shaking almost as much as her breasts were. \"Cum deep in me, please.\" \n\nI pumped harder and harder, arching my spine down as I pressed inside her. Her pussy clenched me with increasing fervour, my head almost spinning from the pressure. The boiling tingle was building as I felt my balls tighten, a delerious pleasure spreading through me... \n\nI dropped my weight on top of Alexa and jammed my mouth against hers, kissing her madly as she screamed when the orgasm hit her. Her legs had locked around my waist and her nails almost tore at me. I crushed her in my arms as my cock throbbed relentlessly and pumped my cum deep inside her pussy. Tongues plunged while hips thrust and ground with unreal eagerness. I growled in ecstasy, a primal sound that sent shivers through us both. \n\nShe collapsed completely, her arms spread out to the sides, her neck limp and her head craned over the bed to stare at the laptop screen through wide eyes, glassy with release and euphoria. Tremors ran through her as I kept stroking in and out, allowing her greedy slit to milk me dry. We both watched Freja in exhaustion, her face buried in her arms on the bed and her ass up in the air while she rode out her own orgasm, body shaking like a leaf in the wind. \n\nWhen the almost paralyzing pleasure had finally passed, Alexa pulled my face down to hers and we kissed deeply and slowly, lost in one another's bliss. Her eyes were moist, no doubt for several reasons, all of them good. \n\n\"I love you so much,\" she whispered, her lips still pressed to mine. \"You're my world, Alex.\" \n\n\"I love you too, Alexa,\" I replied, knowing that she believed me. \"Thank you for sharing this with me.\" \n\nShe hummed and smiled, rubbing her nose against mine now. \"Any time you like, I promise. This was so hot, my love.\" \n\nAlexa finally turned herself over onto her stomach, spreading her legs wide enough for me to rest between them and keep my still-hard cock inside her. She smiled tiredly at Freja and blew her a kiss. \n\n\"Enjoy yourself, Fre?\" she askedalready knowing the answer. \n\nFreja slumped forward onto her bed, the dildo popping out of her, glistening with her cum. It was several seconds before the Danish girl answered. \"Best... incest... ever...\" \n\nAlexa giggled. \"We would know, we've both fucked those sisters, right? But they're not a patch on my nephew.\" \n\n\"Nej,\" sighed Freja, her brow dripping with sweat, her whole body glistening. \"That was the best sex I have had in a long time. I would love to do this again, but let's space it out a little, or I will die.\" \n\n\"Fair enough,\" Alexa said, nodding. \"I almost die every time we have sex, after all.\" \n\n\"Riiiiight...\" I said in response. She giggled and squirmed her butt against me cheerfully. ",
        "\"Well, I have papers to write, but I don't rememver my own name at the moment, so maybe I'll just go to sleep,\" Freja said wearily. \"Can you forgive me for ending our session, Allie? I know it was relatively short.\" \n\n\"There will always be more sessions, my love,\" Alexa cooed. \"And one day, you'll come and visit us or we'll come to you. Wouldn't that be wonderful?\" \n\n\"Ja, if it does not kill me,\" the Danish girl quipped, prompting a giggle from my Alexa. \"It was very nice to meet you, Alex, I mean that on every possible level. Take good care of my Allie. I love you, whore!\" \n\n\"Love you too, slut.\" Alexa purred, reacing over and pushing a button on her laptop to kill the Skype window. She sighed contentedly and rested her head on her arms, face turned to the side and eyes closed. \n\n\"That was perfect,\" she mumbled after some silence. \"You are too wonderful, my love. What would I do without you?\" \n\n\"I dunno, but I'm pretty damn sure I'd wither away and die without you.\" I replied, leaning down and kissing her cheek and neck, causing her to moan in pleasure. \"I enjoyed that as much as you did.\" \n\n\"I'm glad,\" she said, nodding. \"I'm glad we could all share one another. She means a lot to me. Are you really going to be okay with that?\" \n\n\"Definitely,\" I confirmed, nodding. \"I love you.\" \n\n\"Mmmmm, love you too,\" she cooed, turning herself over to look up at me. \"I love you so much...\" \n\nWe kissed and caressed one another gently for some time until Alexa yawned and giggled. \n\n\"Guess I'm tired,\" she mused, stretching her arms over her head, her beautiful breasts displayed prominently. \"Wonder what brought that about.\" \n\n\"I'd better get moving, then.\" I stated, not happy about leaving her but feeling a mite tired myself. \"I'll grab my laptop and keep it trained on you overnight.\" \n\n\"Same here,\" she said, smiling at me lovingly. \"Good night, my loving nephew.\" \n\n\"G'night, aunt I want to marry.\" I replied, kissing her one more time and then climbing off her. I retrieved my laptop and put on some pajamas, heading upstairs after she blew a kiss my way. \n\nLying in my old room, watching her sleeping form on my webcam, I realized exactly how committed and addicted to Alexa I was, and it pained me that I had no solution for keeping her as my beloved. We were dating other people just to steal moments alone with one another. It was so unfair. \n\nSleep took me and I resolved to not worry about it until tomorrow. \n\nThe love of my life held me in my dreams. \n\n*** \n\nAuthor's Notes: Sorry about the delay, still adjusting to life back in the Center of the Universe. We also just elected a new national government and are patiently waiting for the rest of the world to calm down and quit squealing about how sexy the Prime Minister and his wife are. \n\nI still have to write the next chapters, but I know what they are and where I'm headed, so it should be quick. In other news, apparently my exile in the Land of the Crazy gave me high blood pressure, so I'm starting eating more responsibly and exercising more than I was (ie, not at all), and hopefully that'll kick start my creative juices as well. I've been stressed out and lethargic lately, what with the transition back home and all. \n\nI'm really starting to enjoy writing Karen and Mike, who are proving to be quite a bit more humourous than I originally thought they would. I'm hoping you'll like where this ends up. \n\nKeep your stick on the ice! \n\n- Management"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "incest",
        "aunt",
        "nephew",
        "humour",
        "romance",
        "fetish",
        "secret"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/alex-and-alexa-ch-08"
}