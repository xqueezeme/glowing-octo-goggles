{
    "title": "Aprons For Gayle Ch. 17",
    "pages": [
        "AUTHOR'S NOTE:  Thanks to an ill MastersWench, who through her feverish brain found a way to kick me on the right path and catch my stupid blunders! 'Preciate you, girl! And thanks to my Scots friend for his linguistic skills!!\n\nWe last left off a week earlier with Hamish and Gayle having breakfast in bed for her winning the bet and a horrible second date for Hamish. \n\n*****\n\nFriday, September 13th, 2013\n\nCupar Town Centre, Hamish's Office\n\nHamish was having a horrible day, not that work was overloading him, but because he couldn't find anything on the Boyce family in Montgomery County, Maryland to confirm Gayle's ancestry. He was on a genealogy website and thought it would be easy to trace it with Gayle's father's name, John. But that wasn't the case. \n\nHe was so frustrated he got on the phone with her dad to ask for her paternal grandfather's name and vital information, explaining he wanted to present Gayle with her genealogy as a Christmas gift. Her father was thrilled and told him she would love it.  \n\nSo, while he was working on that, a silent little box in the top right hand corner of his computer monitor showed Gayle cleaning the front drawing room, pushing and pulling the Hoover in rhythm to a song on the radio. Again, he practically drooled as she swayed her hips back and forth and singing dramatically, a little too dramatic, as at times she'd use the handle as a microphone and sing toward Bessie, who was looking at her two-legged friend like she'd lost her mind.\n\nThen he thought of something. Waiting for her to turn the Hoover off, he sent her a text. 'Be dressed when I get home. We're going out for dinner as soon as I get home'\n\nWrapping the cord around the vacuum cleaner, he watched as she pulled out her phone from her apron. She began typing, then he received, 'Dress up? As in jeans?'\n\nReading her message, he messaged back, 'I want you looking bonnie, not a tattyboggle'\n\nShe frowned in confusion. 'i don't know who Bonnie is, and i don't know what a tattyboggle is! Are You referring to skirt and nice sweater?'\n\nHe smiled. 'No, naked. Skirt and sweater, ninny'\n\n'That would be great! Few leftovers. Can i get drunk, Sir?' She grinned, having no intention of doing so.\n\n'No you cannot!'\n\n'Fien. Should i wait for You by Your chair?'\n\n'no need'\n\n'I'll be ready when You get here'\n\nHe frowned, but then a smile slowly crossed over his lips. She'd been behaving herself the past few weeks, and there had been no punishments, which he was a little disappointed in. But now he had her. He sent, 'I've noted your use of upper case i.'\n\nSetting his cell phone on his desk, being that he was done with texting her, he grinned when he saw her hit her knee with a fist and shaking her head. She needn't have worried, though. He wouldn't punish her... too badly.\n\nPicking up his cell phone, he texted, 'On second thought, be in your room, undressed, and stand at ease at the foot of the bed'\n\nBack at Hamish's castle...\n\n\"Oh, shit. Oh, shit.\" \n\nGayle was having a pretty good day... until the last text from Hamish. But then again, she hadn't been punished in weeks, and she had been wanting to visit the dungeon again, though she had no clue whatsoever why she felt that way. Yes, the dungeon was a torture chamber, but so far, Hamish hadn't really tortured her. In her defense, the cell phone auto corrects, and that included the 'i' and 'I,' which she normally caught and changed. This time she didn't. And she'd have to pay.\n\nSo, she finished her cleaning on time and took a bath, shaving to get herself 'in proper tidiness' that he required of her. This time, however, was different than the other days she'd prepped herself before his arrival home. It was like every nerve ending was electrically charged, and it went straight to her pussy. \n\nShe admitted to herself that she enjoyed the sex with Hamish, and while they had some about twice a week, she was beginning to want it more often. But what shocked her the most was that she was constantly in a state of arousal.\n\nThen she remembered that he had never said anything about his date Sunday night with the new woman, so she chalked it up to 'another one bites the dust' then promptly began to sing the famous Queen tune to quell her nerves.\n\nBy the time she dried and styled her hair and put on make-up, ironed the skirt Hamish had bought her and laid the beautiful cashmere sweater out on the bed, along with her heels on the floor, she had fifteen minutes to wait for him. Searching her brain for the correct position, she finally spread her legs wide, put her hands behind her back, shoulder back and boobies out, holding her body taut. She stared at the door. Now she was being tortured. \n\nDuring the short wait time, her heart began to pound in her chest, but the sensation in her crotch hadn't let up. In fact, it got worse, and she was even growing wet. She didn't know why - whether it was the fact he'd ordered her to be as she was, or the fact she would be punished after dinner, or the fact...\n\nThe wooden floors in the hallways suddenly creaked, and she knew Hamish was on his way. Taking one long, deep breath, his shadow in the doorway grew into the man himself. She swore her heart stopped as he stepped into the room, and she watched him, but in her peripheral vision only she could see he had one arm behind his back as if holding something, but she couldn't see what it was.\n\nStepping to her, he cupped her face gently with one hand and kissed her lips, being careful not to smear the lipstick but enough for her to feel the warmth and softness of his lips. Pulling back, he smiled. \"You look braw, Ms. Boyce.\"\n\n\"What does that mean, Sir?\"\n\nHe shook his head. \"You look very nice.\"\n\nShe sighed in relief, knowing then that her apprehension was based on his approval, which she apparently had received. \"Thank you, Sir.\"\n\n\"Remove your collar then put your arms up.\" \n\nAs she removed the collar and threw it on the bed, he brought his arm forward and she saw the rope and a twenty inch black cord, double-corded, with two small rings on either end. To anyone else, it would simply look like a necklace with no pendant.\n\nHe threw the rope on the floor, then said, \"This you will wear just for tonight. I can't have you parading around in my collar in public, now can I?\"\n\n\"No Sir, I guess not.\"\n\nAfter he placed the black cord around her neck, the metal ring lay between her breasts, while she could feel another ring between her shoulder blades. He then unbound the long length of rope, making Gayle swallow hard. He'd tied her up in a body harness before, and she liked it then. But then again, she wasn't in it for very long. \n\nFor the next several minutes, he brought the rope through the ring of the cord in the front, brought it under both armpits to the other ring on her back, brought it back to the front then bound the rope several times around her breasts, then once more on the ring between her breasts. What shocked her this time was that he brought a single length down her stomach to between her pussy lips and clit, right up and over her anus.\n\nStanding behind her, he said, \"I'm going to pull on the rope before I tie it in place. I want it taut but not too tight. There must be some friction but not so much that it's painful.\"\n\nShe nodded and held her breath as he tugged on the rope, and sure enough, there was plenty of friction to begin with. But as he lightly jerked it, it became almost unbearable.\n\n\"Okay, okay! That's good, Sir!\" she squealed as she got on her tip toes before he'd split her in two.\n\nAfter he tied it securely, he stood in front of her. \"How does it feel?\" he asked, his tone clearly telling her he knew the rope was tormenting her.\n\nPushing her shoulders forward slightly, her mouth flew open when the rope pressed even harder against her pussy and clit, not to mention her ass. \"Ohh, my... It's tighter down...\" She then shook her shoulders back and forth, but her breasts barely moved. \"Hey! I won't need to wear a bra!\" She chuckled.\n\n\"No, you won't, nor will you wear undies tonight,\" Hamish retorted.\n\n\"Wait, what? You want me to wear this to dinner?\" she asked aghast.\n\n\"Under your clothes, of course.\"\n\n\"How am I going to move around without it... It's right on my clit! It's going to make me -\"\n\n\"No, it won't, because I will not allow you to cum.\"\n\n\"You wouldn't...\" she challenged him.\n\n\"Ohhhh, yes I would, and I will. Do you recall your text earlier?\" \n\nShe nodded. \"This is my punishment? You can't.\"\n\nHe narrowed his eyes. \"Are you arguing with me? I could cancel the reservations -\"\n\n\"No! No!\" she almost shouted. \"I mean, I'm just... surprised.\"\n\n\"Oh, you will be after you wear it for twenty minutes. Now dress. I'll meet you downstairs.\"\n\nAfter he left her alone, she took one step toward the side of the bed and groaned. Every step, every inch she took the rope rubbed against her clit so badly she tried to cross her legs for some relief, but it did nothing to alleviate the grazing of her nub and pussy.\n\n\"Lord, help me get through supper!\"\n\nOn the road...\n\n\"So, how are you holding up?\" Hamish asked as they got on the main road.\n\n\"Can you bring me my meal in the car?\" Gayle asked jokingly.\n\n\"Absolutely not. Again, tonight it will be appropriate for you to call me Hamish. Enjoy yourself, alright?\"\n\n\"I'll try. But what if I... what am I supposed to do if... This is cruel and unusual punishment, I'll have you know,\" she said teasingly but immediately regretted saying it.\n\nHe laughed, though. \"Yes, it is, but I bet you won't forget to capitalize the 'I' in texts, will you?\" His tone was menacing yet light.\n\nShe sighed. \"No Sir. I won't.\"\n\n\"You'll get through it. But just tell me if you ever get close to orgasm. We're going to my favorite restaurant in St. Andrews, Little Italy. I've made reservations for 7:15, so we'll be right on time.\"\n\n\"Sounds good. We've not had Italian in a while. I've been hungry for lasagna.\"\n\n\"At this place, it's not known as lasagna. It's good grub.\" She chuckled. \"I'm quite serious. It's as if you're eating their cuisine in Milan.\"\n\n\"You've been to Milan?!\"\n\n\"Hell, no. That's just what others have told me.\" \n\nSoon, they found a parking spot and had to walk a block, which practically killed her as she carefully made every step, as the rope had been agonizingly crawling up her ass since she'd stepped out of the car. But after she took a few steps, she was confident her breasts weren't going to knock someone over if they happened to walk by her. \n\nSomewhat relieved, Gayle's attention was drawn to a church with tan-colored bricks on three-fourths of the building while the remaining quarter were gray bricks. There was intricately cut glass, very ornate, over the main entrance and a nicely decorated clock tower behind the building, though she didn't know if it was part of the church because the bricks were darker than the others and looked as if it was built in a different century.\n\nThey came across a sign to the church, and it turned out to be the Holy Trinity Church, which was appropriate because the church itself had three sections to it. The additional information on the church read: \n\n'Established in the 12th century, Holy Trinity Church has a chequered and fascinating history. Of note, John Knox (who is widely regarded as the founder of the Presbyterian denomination in Scotland) preached at Holy Trinity Church in 1559, and kick started the Protestant Reformation.'\n\n\"This is extraordinary. Darn, I would have loved to go through it,\" she said as they started walking again. \"I'd have to stay here for years if I want to see every castle, church and abbey I come across.\"\n\nMuttering, she heard Hamish say quietly, \"Would there be anything wrong with that?\" \n\nShe didn't dare ask him to repeat what he'd said; she was too afraid to know if that's what she really heard.\n\nPutting his hand in the small of her back, he directed her down Logie Lane; the street sign was a simple wooden block on the corner of the building. As they walked down the small, narrow market square, she could see the clock tower was indeed part of Holy Trinity, and there was even another smaller building attached to the clock tower.\n\n\"It's just at the other end of the lane. We got lucky finding a car park so close. Usually I have to walk three or four blocks.\"\n\n\"Well, it is a gorgeous night. I don't mind walking.\"\n\nOnly then did Gayle notice several couples that passed them, especially older couples in their 60s or 70s, would smile as they walked by. She had ignored the first few stares and smiles, but then she could no longer. She didn't know if it was because she looked like an alien to them, but the fact that they smiled told her a different story - a story she didn't want to admit to.\n\n\"Ah, so you're enjoying my company?\" \n\n\"No, I wasn't saying that,\" she teased him. \"Yes, Hamish, I'm glad you've taken me out.\"\n\n\"Brilliant, because there's another reason why I wanted have you alone for a bit.\"\n\nBlushing, she looked up at him and said flirtatiously, \"But Sir, you can always get me alone at home.\"\n\n\"Oh, lass, that was a very good answer, but that's not what I meant, although...\" He wagged his eyebrows a few times, which made Gayle look away shyly.\n\nThat was when she noticed the restaurant. It wasn't a restaurant, per se, but more of a caf\u00e9. There were two simple plate-glass windows on either side of the door, and over the door was a green sign with 'Little Italy' in red. It wasn't exactly what she was expecting, not that it mattered. If Hamish liked the place, she was sure the food would be delectable.\n\n\"I'll tell you all about it once we're seated,\" he replied as they walked in. \n\nBefore he could tell the hostess his name, she said, \"Welcome back, Mr. McDougal.\" Grabbing two menus, she said, \"Follaw me. Yer table is reit thes way.\"\n\nIf Gayle was skeptical about the place from the outside, she was more skeptical of the inside. The ceiling had tacky green and red big tile panels, the walls were painted a deep red on which hung portraits. One that caught her eye was of Marlon Brando from The Godfather, and a full wall with all sorts of liquors and shelves for the multitude of wines.\n\nThe hostess stopped at a table with red and white-checkered table cloths, again not quite the impression she had imagined, but the candle in the center of the table added a nice touch. Hamish pulled out a chair for Gayle, so she slowly and carefully sat down so as not to chaff her ass any more than it was. Her crotch, however, was already on fire from every move she made.\n\nSmiling, she thanked him as he sat down, and the hostess handed them each a menu. \"Wally will be haur shortly tae tak' yer scran orders.\"\n\n\"Thank you,\" Hamish told her.\n\nAfter the hostess walked away, Gayle leaned forward and whispered, \"What's a scran?\"\n\n\"It's just the meal.\"\n\nShaking her head, she said, \"Oh.\"\n\nHe smiled soothingly at her. Reaching across the table for her hand, he squeezed it gently. \"Love, don't be embarrassed. Simply ask if you don't know what something is. Okay? Promise me?\"\n\n\"Yes. Thanks. Sorry.\"\n\n\"Stop apologizing. I understand more than you think I do. I didn't always order what I thought I was ordering in America.\"\n\nShe finally smiled then looked over the menu as a waiter poured water in their glasses. All of the entrees were in Italian with no pictures, so she didn't know what the hell any of them were. There were a few dishes she recognized by the names but lasagna wasn't one of them, and she felt too stupid to ask Hamish about it, even though she'd promised him. Then she caught the prices, which were double the price at home taking into consideration the exchange rate. She knew it would be rude as hell to say everything was too expensive, and that she'd order the least pricey one, but it seemed all of the entrees were just as costly. \n\nThen she saw the chicken Carbonara, and she really wanted that. But she remembered how dominant he was the second she met him at the restaurant in Tysons Corner in Virginia - hell, he even ordered her to wear a certain attire, although he covered it up with the excuse that he'd need to know who to look for.\n\nNow, however, things were different. He should know by the meals she prepared - actually, the dinners Jessie prepared - what foods she would or would not eat. He'd allowed her to speak her mind in a few matters, and she figured it wouldn't hurt to try now.\n\nShe looked at him expectantly and chose her words carefully. \"Sir,\" she whispered, because she knew she had to take a very passive and diplomatic approach. \"May I have the chicken Carbonara? I've only had it in a frozen dinner, and I'd like to try something new.\" \n\nHe looked at her, his eyebrows raised then looked at the menu. \"No lasagna?\"\n\n\"I can have that anywhere. But it'd be nice to have something... different that I wouldn't have at home. I thought I'd be adventurous while I'm here. Just no -\"\n\n\"Shellfish. I remembered,\" he said a little terse but then gave a small smile. \"You do realize there are peas in it?\"\n\n\"Well, no. I don't know Italian for peas.\"\n\nHe paused a moment. \"I'll consider it.\"\n\nYou'll consider it. Consider it? Why did I even bother asking?!\n\n\"And you've certainly gone up and beyond adventurous, Gayle.\"\n\nThat she couldn't deny, and her blushing cheeks embarrassed her as the waiter, Wally, his name tag read, came to the table. \"Guid avening. Whit can Ah gie ye tois fur drinks or starters?\"\n\n\"For the lady, she'd like Mirassou, and I'll have the Ceresuolo di Vittoria.\"\n\n\"Stoat choices. Starter?\"\n\n\"Yes. Penne alla Caprese.\"\n\n\"Brill. Ah'll be reit back.\"\n\n\"Sir? What did you order me?\"\n\n\"Wine, though you may have only one.\"\n\n\"Oh, okay. Thanks.\"\n\nThey both sat quietly for several minutes, and so she took the opportunity to look around at the various dishes on other diner's plates, and Hamish looked intently at Gayle, which she hated and grew self-conscious. She wished she knew what he was thinking... then again, maybe not.\n\nSeveral minutes later, he asked, \"So, Gayle, you'll be going to St. Athernase in the morning?\"\n\n\"Yes, if you don't need me to do anything.\"\n\n\"No, no. I'm glad you found something that piques your interest. I have another date, so I'll be gone most of the day.\"\n\nShe tried to hide her disappointment by squirming ever so slightly in her chair, which caused the rope to rub against her clit. \n\nWally returned with the drinks then waited for them to sip it, Gayle assumed, so she did. \"Hmm, this is very good. It's fruity. I think I can taste cherry, but there's something else...\"\n\n\"Plum an' red currant. Ye ready tae order?\" Wally asked.\n\n\"Yes. Gayle will have the chicken Carbonara, no peas.\" He looked at Gayle briefly before he said, \"And I'll have the veal Parmigiana.\"\n\nGayle was shocked yet tickled pink that he'd remembered to mention scraping the peas. When he looked at her again, she gave him a warm, appreciative smile.\n\n\"A'right. Th' starters will be out shortly.\"\n\n\"Hamish, I would have eaten the peas... well, I would have just picked them out.\"\n\n\"Don't be so surprised, lass. A gentleman always remembers his date's preferences.\"\n\nShe had just taken a sip of the wine and almost choked. Thankfully, the rope-harness gave her such a sense of security she overcame her shock quickly.\n\n\"I'm very observant, Gayle.\"\n\n\"Yes, well, you've do have good tastes.\"\n\n\"Except for women.\"\n\nShe shook her head. \"Give yourself some time, Hamish. You'll find one that's right for you.\"\n\nHe smiled, though there was no conviction behind it. I think I already have he thought but quickly dismissed it, hoping Gayle hadn't picked up on his admiration.\n\n\"Now, there are a few things coming up that I need to talk to you about. There's a charity event in two weeks for Wounded Warriors, which supports soldiers that have come back wounded to assist them in acclimating back into society. Financial assistance, re-employment, as well as any prosthetics they may need.\" ",
        "Her first words were, \"Yeah, I've heard of them. Isn't that what Prince Harry is training for now?\"\n\nHe smiled, seemingly pleased she knew of their work. \"Exactly.\"\n\nHer second words were, \"Wait, charity event, as in ball? Formal gowns, tuxedos?\"\n\nHe chuckled. \"No, not a ball. Just a bunch of men and women in formal attire to help raise donations. I think they're having a silent auction, as well.\"\n\n\"Hamish,\" she said in a panic. \"I have nothing appropriate to wear.\"\n\nJust then, Wally came with the appetizer, which made her mouth water as soon as she looked at the food on the dish. There were small chunks of mozzarella, fresh basil leaves, olives and cherry tomatoes over pasta, and she could smell the garlic.\n\nWally set two small, empty plates in front of Hamish and Gayle, said, \"Enjoy,\" then left.\n\n\"This looks delicious... except the olives. You can have those.\" Hamish rolled his eyes. \"Oh, my gosh! Did you just roll your eyes at me?\" she asked playfully.\n\n\"Yes, Gayle, I did. It wasn't the first, and it won't be the last.\" He took the serving fork and asked for her plate, which he filled up half full, picking off the olives. \"You shouldn't fill up on this, although you should like this.\"\n\n\"Thank you,\" she replied as she took her plate back. \"I can just eat half now and save the rest for lunch tomorrow, since I won't know when you'll be back.\"\n\n\"Good idea. I should be back after lunchtime, so at least I know you'll be fed.\"\n\nHe watched her take a couple of bites before he began to eat. He didn't have to ask if she liked it. He could tell she did. \n\n\"Alright, so, Jessie and her daughter, Kelsey, will take you shopping this Sunday for a dress and matching pumps. And Kelsey can do your hair and make-up, all the girlie things you do. You can still work at the church that day, if you'd like.\"\n\n\"Okay, but Hamish, I haven't saved enough money for an evening dress,\" she said fretfully.\n\nHe shook his head. \"I will cover your dress and pumps. It's for an excellent cause, and there is always excellent, tasty food.\"\n\nWell, how could she say no to that? She took a couple more bites of the penne and thought about whether she wanted to go. Hell, of course she wanted to go! She'd never miss out of such a lavish affair. Besides, she didn't really have a choice.\n\n\"Okay. That does sound fun. But do you think... I know I haven't saved hundreds of Pounds, but I'd like to donate a little.\"\n\nHe smiled so warmly that even his eyes brightened. \"Of course. That is very generous of you.\"\n\nWally arrived with the entrees as they had just finished up the starter. The bowl he placed in front of her had enough Carbonara to feed three people. And Hamish's parmigiana looked and smelled mouthwatering.\n\nAfter Wally left, she took a few bites on her entre. \"Hmm, this is soo much better than frozen.\"\n\n\"I knew you'd like it.\"\n\n-\n\nAfter she'd had her fill, she sat back and patted her stomach. Looking at Hamish, who still had a few bites to go, she noticed the candlelight gave his face such a glow that she literally saw him in a whole new light. He was handsome, so very handsome. Her pussy tingled, and she knew she was blushing again. And the now-empty wine glass didn't help matters.\n\n\"And there's something else,\" Hamish said as he, too, had eaten all he could.\n\n\"Oh, no. Please don't tell me I have to dress Bessie in a doggie-gown?\"\n\nHe laughed. \"Definitely not! She'd be the joke of Fife. Actually, I'm throwing a Guy Fawkes Day celebration on my property on November 2nd, although the actual date is the 5th. There'll be some... play... things, games and the sort, lots of food and fireworks after we burn Fawkes' effigy.\"\n\n\"Oh! The Englishman that attempted to blow up Parliament in the early 1600s. That sounds fun. Do you need help organizing it?\"\n\n\"Help? Oh, no. I despise the whole affair! I'm afraid I put my foot in my mouth and ended up hosting this year's celebration for the community. I'll ask Jessie if she can help you with arranging the activities, preparing the food and all the details, and I'll give you a budget, which you must abide by.\"\n\n\"Actually, that's right up my alley! I organized my cousin's wedding, and I really surprised myself how smoothly everything went.\"\n\nWally then returned and asked about coffee and dessert. \n\n\"I have no more room for dessert, Hamish. May I just have some coffee?\"\n\nWally looked from Gayle to Hamish. The waiter clearly knew who was in charge.\n\n\"Decaf, cream and sugar,\" Hamish told him. \n\nGayle smiled knowing he knew she'd be up all night long if she had leaded coffee. Yeah, he knows me alright.\n\n\"And an apple Crostata, an Italian cr\u00e8me cake, and we'd like the leftovers to take home, please.\"\n\nAfter Wally left with the plates, Gayle leaned forward and whispered, \"Sir, I really, really don't have room for dessert.\"\n\n\"They're both for me,\" he said. \"But you're going to help me eat them.\"\n\n\"One bite of each is all I can handle. What are they, by the way?\"\n\n\"The Crostata is apples baked in a crust with almond topping, served with vanilla ice cream and caramel sauce. The cake is layers of lemon cake and mascarpone cheese filling served with raspberry-hazelnut sauce.\"\n\n\"Okay, fine, but you're carrying me to the car.\"\n\n\"Over my shoulder, even if you scream at me.\"\n\n\"But there is some place I'd like to take you before we head back home.\"\n\n\"Walking, I hope. I think I've gained ten pounds, plus five for the dessert.\"\n\n\"Oh, yes. It's too far from here, so we'll find another spot to park... if you can handle the walking,\" he added teasingly. \n\n\"As long as I can readjust before we -\"\n\nWally then returned with the coffee and desserts, and Gayle practically drooled at the cr\u00e8me cake. \"Yum! I get the lemon cake!\"\n\nHamish chuckled as Wally placed the plates in front of Hamish. Gayle fixed her coffee and took a sip while she watched Hamish split each piece, forked a bite full of apple and brought it toward her. She didn't move. She had never blushed so much in her life. Such an intimate act... in public, no less! \n\n\"I thought you said you were adventurous, Gayle.\"\n\nShe couldn't think of anything snarky to say. Sometimes it was just best to give in to her boss. So, she leaned forward and parted her lips just a tad, looking away shyly. \n\nBut he pulled the fork back. \"No, Gayle. Look at me,\" he said firmly.\n\nIf she thought her cheeks were red and burning as never before, surely her ears had matched the same crimson shade. Gathering her nerve, she looked into his eyes. Once again he brought the fork toward her, and she took the treat as unsexy as she could. \n\n\"Hmm, 'dis ith gude,\" she muttered.\n\n\"Very unladylike of you. And thank you. You've totally ruined the moment.\"\n\n\"I know. What can I say?\"\n\nAfter she did manage to eat both halves of the desserts, and she gained ten more pounds, Hamish left the money for the bill, yet the waiter returned before they had a chance to get up and leave. \n\n\"Ah hiner ye enjoyed yer scran,\" Wally said as he picked up the money.\n\n\"Aye, it was delicious. Thank you,\" Hamish replied.\n\n\"Hae a guid necht. Ye tois arh a brammer coople.\"\n\nAfter Wally walked away, Gayle pushed her chair back, but Hamish's harsh glare made her stop so he could once again pull out her chair. She had never been treated like a lady before, and she admired him for it. \n\nHer face contorted as she slowly stood up and moaned. \"May I run to the bathroom before we do any walking?\"\n\n\"Certainly. I'll meet you out front.\"\n\nA few minutes later, she found him standing on the curb, and if she didn't know who he was, she would have thought he was good looking. The sun had already set, but it was still somewhat light out. One last waning stream of light shown upon him.\n\nForcing herself to breathe, she approached him. \"Sir,\" she whispered, \"Just to let you know, punishment received very well.\"\n\nHe gave her a crooked smile and reached out to her. Looking at his hand like it was a snake, she finally took it; his grip was firm, his hands soft, and the look in his eyes were tender. She smiled back and stepped closer to him.\n\n\"Thank you for dinner, Hamish. It was the best meal I think I've ever had.\"\n\n\"You're welcome. I knew you would enjoy it.\"\n\n\"No, you didn't,\" she objected.\n\nAs they started to walk through the market place toward the street, he replied, rather tersely, \"Yes, I did.\"\n\nPlaying along, she told him, \"No, you di - ow, ow, ow!\" she screeched. He'd tightened his grip on her hand, and it was painful. \"Okay, okay! You win.\"\n\n\"Oh, lass,\" he chuckled. \"You never learn.\"\n\n\"I do, I'm just slow.\" He smiled down on her, and she smiled back. \"Sir? What did Wally say as we left?\"\n\n\"Nothing,\" he replied curtly.\n\n\"I understood the couple part. He was talking about us.\"\n\n\"No, he wasn't.\"\n\n\"Yes, he -\"\n\n\"Are you going to let it go?\" he asked.\n\n\"Nope.\"\n\nHe sighed and shook his head. \"He said we were an attractive couple.\"\n\nGayle remained silent and kept on walking. Sometimes it was best to keep her mouth shut. Maybe she would never learn.\n\nA few minutes later...\n\nAfter Hamish let Gayle out of the car, he again took her hand and they walked down the street. She could hear the soft caress of small waves lapping gently at the shore and grew excited knowing they would be walking on the beach. To her left were very posh and, more than likely high-priced row houses. \n\nLooking toward the right at the shoreline, she was a little surprised at the strips of rocks jetting out the shallows; it almost looked like claws' prints. On a cliff overlooking that was the ruin of a fortress above the beach, a tower built of ancient-looking rocks, as was the rest of the fortress. Spotlights shown on four corners of the property, giving the ruin a haunted look.\n\n\"Oh, my god. That is unbelievable,\" Gayle gushed as they walked closer to the end wall. \"Do you think it's closed?\" \n\nThen she saw the sign and read it out loud. \n\n'St Andrews Castle consists of the ruins of the castle of the Archbishops of St. Andrews, dating in part from the 13th century.' \n\n\"What a bastard King Henry the 8th destroyed everything. What a waste.\" \n\nSuddenly, she shuddered and wrapped her arms around her. \"Here,\" he said, taking off his jacket. \"I don't need you getting ill.\"\n\nSmiling, she accepted it as he put it on her. \n\n\"No, I'm afraid they're closed,\" he said as they approached the gate, where he pulled out his cellphone and made a call. \"Scott, we're here.\" Ending the call, he looked at Gayle. \"But I do have a wee bit surprise for you.\"\n\nShe looked at him suspiciously until she saw a tall, lean man walk toward them from inside the ruins. \"Old man! Young lady! Right on time, I see!\" \n\nScott unlocked the gate and stepped aside so they could enter. After Scott closed and locked the gate, Hamish said, \"Scottie, this is Gayle. She's working for me for a few more months. She's from Washington, D.C.\"\n\n\"Is that right? Welcome. Let me show you around.\"\n\nTwenty minutes later as the three stood at the remnants of the tower right beside the cliff, an eerie glow coming from inside the still-standing structure, Gayle thanked Scott for showing them around on their private tour. \n\nScott replied, \"It was my pleasure. With it being Friday the 13th, there's an all-night watch to keep any hooligans away. So I must leave you two on your own, now.\"\n\nHamish shook Scott's hand. \"Thanks, mate. We won't be long.\" \n\nPutting his hand in the small of Gayle's back, Hamish escorted her inside the tower, which was lit by two torches on the walls. She saw an uneven four-by-four foot opening, presumably a window, and over that hung a single sword.\n\n\"Okay,\" she said, \"This is kinda creepy.\"\n\n\"I shall protect thee, fair maiden,\" he said as he bowed.\n\nShe smiled at his playfulness and curtsied. \"Why, thank you, kind sir. My brave knight in shining armor.\" \n\nHe then walked to the opening, turned and leaned against it. \"Come here.\"\n\n\"Hamish, I didn't mean to make you angry!\" she cried out, purposefully changing her accent as a southern belle in distress. \"Please don't throw me out the window! I'm profoundly sorry!\"\n\n\"For God's sake, woman!\" he snapped then burst out laughing. \n\nLaughing along with him, she stepped beside him and looked out. \"Oh, my god. Look at this view.\"\n\n\"Sorry, but it appears to be high tide now, so we can't walk on the beach.\"\n\n\"That's a relief. The last time we were you tricked me to walk naked.\" \n\n\"You liked it, lass, and you know it.\"\n\n\"Yeah,\" she said with a grin. \"I did.\"\n\nA strong, cold breeze blew into the small space, making her shiver. Hamish took notice and wrapped his arm around her waist, and she accepted him by doing the same. \n\nResting her head on his shoulder, she whispered, \"Hamish, this was very thoughtful of you. And I've had a really good ti -\"\n\nShe was cut off when he pushed her against the wall gently, took a hold of her hands, held them above her head and gave her the hottest kiss he had ever given her. It was so intense, so yearning and so warm she melted into him with a soft moan. Slipping of a pump, she slid her foot up his leg just as his tongue traced along her bottom lip.\n\n\"Hmm,\" he mumbled as he pulled away and brought her arms down, holding her hands. \"You know... no one's around. Care to have a shag?\"\n\n\"What?! No! Well... sure, why not?\" she replied.\n\n\"Damn, you called my bluff.\" He chuckled and shook his head.\n\n\"I don't think Scott would appreciate his generosity in the private tour by catching us. But you do look gorgeous in candlelight, Ham... Sir.\"\n\nHis eyes flew open. Stepping back, he looked over her face like she'd just slapped him. He didn't know what to say. Never in his almost thirty years had any woman made him speechless. \n\n\"Don't you think it's time to go?\" she asked, hoping it would break the spell he was under.\n\n\"Thank you, Gayle,\" he finally stammered. I just wanted to take you out to let you know how much I appreciate everything you've done for me.\"\n\n\"Hey, all I do is fold your underwear and keep crumbs off your floor. No biggie.\"\n\n\"Okay, no more wine. You're getting blootered.\" Taking her hand, he led her out of the tower. \n\n\"Nah, fine I'm, Sir. Drunk not, am I.\"\n\nHe laughed again then kissed her forehead. \"I love how you make me laugh.\"\n\n\"Well, you do give me a lot of ammo.\" \n\nHe narrowed his eyes at her. \"Do you want to amend that comment?\"\n\n\"Oh, right. I forgot to say Sir?\"\n\nLetting go of her hand, he slipped his hand under the jacket on her back and pulled at the rope, which made it grind harshly against her clit. She groaned loudly.\n\n\"I'm sorry! Enough said,\" she squeaked, standing on her toes. \"I'll watch what I say.\"\n\n\"You'd better,\" he replied and they continued walking.\n\nHowever, Gayle didn't see the smirk on Hamish's lips.\n\nLater that night...\n\nGayle lay in her bed with her head on her hands and had been staring at the ceiling for what felt like hours, a sleeping Bessie at her feet. She'd been trying to piece together all that happened. \n\nAfter they got home, Gayle went to her bedroom and Hamish went into his, while Bessie stood in the hallway looking between her master and Gayle. \n\n\"Don't you do it,\" he'd warned Bessie.\n\nHer ears had perked up, she gave a very wet and snotty sneeze then trotted into Gayle's room.\n\n\"Turncoat,\" he mumbled then went into his room.\n\n\"Us girls have to stick together, Sir,\" Gayle teased as the canine jumped on her bed. \"Good girl,\" she whispered as she scratched Bessie behind her ears.\n\n\"Good night, Ms. Boyce. Good night, you hairy mutt.\" Bessie barked her farewells.\n\nSoon enough, Gayle's thoughts wandered to the previous Sunday morning when she'd caught him playing the piano in the dining hall. If she'd really thought about it, she should have walked into the room, stood between the bench and the piano and they would have had a very hot, sexy Pretty Woman moment. She started giggling, which turned into a loud laughter. \n\n\"Would you kindly tell me what is so funny, Ms. Boyce?\" Hamish hollered out from his bedroom; his light was still on, which was why she'd probably thought about being Julia Roberts.\n\n\"Nothing, Sir,\" she answered loudly and seriously.\n\n\"Don't lie to me, lass.\"\n\nWhen she'd told him, he was quiet for several moments. \"Good night, Ms. Boyce,\" he finally replied, and she could hear the smile on his lips as he spoke.\n\n\"Sleep well, Edward.\"\n\n\"Who?\"\n\n\"Richard Gere's role in Pretty Woman.\"\n\nA very loud and heavy sigh came from her boss.\n\nThey both fell to sleep with smiles on their faces.\n\nSaturday, September 14th, 2013\n\nIt turned out to be a beautiful day. It was in the mid-60s, the sun was warm and there wasn't a cloud in the sky. She had been working at St. Athernase all morning recording the findings with the sizes, shapes and other details of pieces that were found on the grounds. \n\nHamish crossed her mind a few times when she had a quiet moment, and more than once she found herself smiling like a teenager with a high school crush. She hadn't forgotten the fact that he was out on another date. \n\nMichael, one of the excavators, had asked her to a pub for a drink since they'd finished up a little earlier than expected, but - and this shocked the living shit out of her - she was really looking forward to spending the afternoon with Hamish. \n\nAs Gayle pulled into the driveway, there was a car parked that she didn't recognize, but Hamish's car wasn't there. Putting the car in park and stepping out, David approached her from the side door carrying a basket of fruits and vegetables.\n\n\"David!\" Gayle gushed as she met up with him. \"How have you been? I haven't seen you in weeks.\"\n\n\"I've been fine, Ms. Boyce. How about yourself?\"\n\nShaking her head, she said, \"Please call me Gayle. Hamish is... out right now. Would you like to come in for coffee or tea?\"\n\n\"No, thank you, Miss. I've just come to give you these.\"\n\nLooking inside, she smiled at the apples, pears and plums, even some fruit she didn't recognize, potatoes, squash and mushrooms. \"These look great! The apples are perfect for a pie. I've not made one for Hamish yet. Come in, please, just for a few minutes,\" she pleaded.\n\nHe smiled warmly. \"Alright. That would be lovely.\"\n\nAs they walked to the side door leading to the kitchen, David asked, \"So, Gayle, tell me. How are you liking working here thus far?\"\n\n\"It's been great, really, more than I ever expected it to be.\"\n\nDavid looked at her, one eyebrow raised from curiosity, but he didn't say anything.\n\nA few minutes later, she set a steaming cup of tea in front of David and sat down across from him. Telling Bessie she'd let her out soon, she looked into the basket at the fruit she didn't know. \"What are these?\"\n\n\"Elderberry. Phil's fianc\u00e9 makes wonderful medicinal creams from it. She sells them at the market. Makes quite a bit of money off them from jams and her delicious muffins, but she makes more from the tea.\"\n\n\"Really? Hamish said he'd take me to the market one weekend. I wanted to get some jam for my family.\"\n\n\"If you don't make it, Emma makes great gift baskets. I'll see if she can prepare one for you.\"\n\n\"That's not nec...\" Something suddenly crossed her mind. \"You said Phil's fianc\u00e9? Phil isn't your fianc\u00e9?\"\n\nHe frowned, his eyebrows deeply wrinkled, then a smile slowly grew on his lips. \"No, lass. Phil's my brother.\"\n\n\"Your... brother...\" Then it dawned on her all the things she'd said to him, referring to their wedding plans - David's plans with his brother. \"Oh, David! I'm am so sorry about all the things I said! Hamish told me -\" \n\nHis chuckle surprised her. \"We thought so, and I should have said something earlier.\"\n\n\"No, he should have told me the truth,\" she said angrily, rising. ",
        "Reaching across the table, David put his hand over hers in a friendly manner, not sexual at all. \"Please, don't be embarrassed. I'm a little surprised he... misled you, but it wasn't your fault.\"\n\n\"There's no justification for lying. He made me think you were gay! I was... I was naked in front of you! I've never been so...\" She sighed heavily and ran her free hand through her hair out of frustration.\n\nDavid suddenly looked over her shoulder and pulled his hand back quickly; his face was taut with tension, as were his shoulders. But he knew their hands couldn't have been seen.\n\nStanding up, David said, \"Hello, Mr. McDougal. I was just leaving.\"\n\nOh, my God! How much did he hear? Gayle wondered, though she didn't look over her shoulder.\n\n\"Nonsense, Hodges,\" Hamish said as he walked in, threw his keys on the counter and approached the table. \"Hello Gayle. What's this?\"\n\nDavid cleared his throat. \"I brought you two some fruits and vegetables I picked these morning.\"\n\n\"That was kind of you. Thank you, Hodges.\"\n\n\"You're welcome. Gayle, thank you for the tea. Have a good afternoon.\"\n\nAs Hamish walked David to the door, Gayle called out for Bessie to take her outside, and she entered the hallway on the way to the back door.\n\n\"Gayle, wait. We need to talk.\"\n\nShe paid him no mind. She was so irate, beyond pissed, she was afraid to say anything for fear of what she would say, though she didn't care less if he sent her back home for her disrespecting him.\n\nWhen he caught up to her, she said, \"No! Nothing you say can -\"\n\nHe grabbed her arm rather roughly and forced her to stop just as she opened the French door; neither paid attention to Bessie when she bolted outside right away. \n\n\"Did you forget who you're talking to?\" he asked tersely.\n\n\"No, I didn't,\" she replied, her voice full of venom. \n\nHe was at a momentary loss for words at her disrespect, and he knew she was angry with him. But he certainly wasn't used to being spoken to like this. He wanted to defend himself, to be honest and open with her, but that wasn't very easy for him at all. He never had to explain his actions to anyone, except his father, but now...\n\nPulling her arm away, she walked through the door and past the fountain on the way to the Tithe barn, where Hamish practically had to run to stand in front of her to block her.\n\n\"Gayle! You will listen to me!\"\n\n\"No! I am really pissed at you right now!\" \n\n\"I understand that. Just let me explain.\"\n\n\"I don't give a flying monkey's ass! Leave me alone.\" \n\nShe tried to walk past him, but he held onto her shoulders tightly. Giving him a look of disgust and rage, he finally relented and let go of her. She promptly headed to the far end of the property. \n\n\"Ms. Boyce!\" he shouted, not willing to allow her to just walk away from him.\n\nAbruptly, she stopped, turned around and took a few steps back to him. Bessie had been running after her but stopped, sat on her hind legs and looked between Gayle and Hamish, wondering what the hell was going on between the two.\n\n\"You know what?! I am getting so tired of you barking orders at me! You want me to be open with you, yet here you are lying to me, humiliating me and made me look like a fucking idiot with David and his brother! Why would you do that?\"\n\nHamish opened his mouth to say something, but he didn't get the chance.\n\nLowering her voice, though it was still harsh, she spat, \"I am not your property, Mr. McDougal. I am your employee. You pay me, I work, among other things when you're in the mood. When you do something nice, I get whiplash the next day when you act a dick! I... You can't keep... I don't want...\" \n\nShe ran her hand through her hair and looked away to gather her thoughts, but she had run out of steam at that point. She sighed exasperatingly and walked away, Bessie in tow to comfort her human sister.\n\nWatching her, he cursed under his breath. He fucked up, he knew that. He fucked up big time. He turned around and headed to his office, where at least he could see her when she came back in... whenever that would be. What he was going to say was another story.\n\nIn the Tithe barn and garden...\n\nGayle paced back and forth in the grass of the ruins of the Tithe barn, cursing angrily. Occasionally she'd kick a flower or a stray rock in the ground, not even feeling the pain in her toes from the hard surface of the rock, even though she still wore her sneakers. Her breathing was rapid, and she felt a sickening headache coming on. Her thoughts went manic, almost irrational, and she couldn't stop them. Her PMS didn't help, but she had every damn right to be upset. \n\n\"Okay, okay. Breathe. Relax.\"\n\nThat did nothing to calm her, and she threw herself down in the grass and cried, rocking back and forth with her head in her hands. She wasn't even aware of Bessie licking the back of her hands from the salty treat as she tried to soothe the distress away. Finally giving up, the dog sat down as close to Gayle as she could and placed her chin on her thigh.\n\nNot knowing how much time went by, she felt something warm yet heavy over her shoulders and looked down on the blanket. She hadn't realized she was then sitting in the shade from the trees. The sun hadn't set yet, and it had grown chilly from a light breeze. \n\nLooking up to just about knee level, she saw Hamish standing a foot away holding a bottle of water. She had long since stopped crying, and she wasn't as angry as she was at first, but she was still holding onto some of it. Finally taking the bottle, she took a sip, as if that would magically help her find the right words. She found none.\n\nHamish stepped back and sat on a three foot high brick wall of the ruin. \"Gayle, I am truly sorry for lying to you. It was stupid. I'm a glaikit.\"\n\nI'm not going to argue with you there, whatever glaikit is.\n\n\"I can't explain to you why, but yes, when you first asked about Hodges I was jealous. I've never been a jealous man. But I'm finding I enjoy your company... and I'm feeling... The first time I saw you, I was... You were... Fuck.\" He threw his head back and looked up at the sky. \n\n\"Hamish, it's not just that you lied. You had me parading around him like I was a... My god, do you realize how mortified I was? You agreed there would be no humiliation.\"\n\nHe could no longer look Gayle in her eyes, but she had her eyes locked on his face, which was laden with shame. Her eyes were red and swollen, and it killed him knowing he'd caused her to be so upset. You are shutting off the cameras tonight.\n\nGetting back with the topic at hand, he told her, \"I have already spoken with Hodges and apologized. It will never happen again.\"\n\n\"How can I know that? You know how hard trust is for me.\"\n\n\"I more than fucked up, Gayle. I realize that now. I should have told you the truth earlier, but I... I couldn't. For now, all I can do is ask for your forgiveness.\"\n\n\"Oh, and I'm just supposed to accept your apology like it never happened?\"\n\nHe sighed. \"I never said that. I can't take back what I did to you. I wish I could, but I can't.\"\n\n\"Why, Hamish?\"\n\nHis eyebrows furled deeply, causing creases on his forehead that she had never seen before from her boss. \"Why what?\"\n\n\"Why are you jealous?\"\n\n\"I have no fucking idea. When I thought of taking in a maid, I had no idea I would feel...\" He turned around so she couldn't read his facial expression.\n\nNow it was Gayle's turn to be confused. But then it hit her. She was becoming jealous of him going on dates, just as he was of her looking at the men at the pubs and being asked out by a man at the church. \n\n\"Hamish, what's happening between us?\" She didn't want to ask, but she had to.\n\nHe shook his head, paused then knelt in front of her. \"Gayle, I'm not used to this, to... Scots don't carry their hearts on their sleeves. They protect it to the death. But once they're in... With you, I've found...\" He sat down hard, looking like a lost puppy. \"I've never been this happy before.\"\n\nThe pain in his eyes was unbearable to see, and she knew, felt that he was truly remorseful. She could have cried with his admission, but she would never allow him to see her.\n\n\"I need some time, Hamish.\" He nodded, stood then put out his hand to help her up. \"I'm not forgiving you yet,\" she sneered up at him.\n\n\"I hope you will, eventually.\"\n\nSunday, September 15th, 2013\n\nGayle finally arrived home around three o'clock after spending most of the morning looking for an evening gown with Jessie and her daughter Kelsey in St. Andrews. Kelsey's friend, Olivia Thompson, had her own shop and was an up-and-coming fashion designer. Gayle wanted to buy a genuine pearl necklace, earrings and bracelet set just to piss Hamish off, but she decided against it, though she was really, really tempted.\n\nHamish. Her boss hadn't been out of her head since the night before. She'd barely slept the night before and felt like death. She hadn't forgiven him, but she had to be honest with herself. There was something changing between them, but she didn't want to admit it. She just couldn't. \n\nPractically dragging herself up the stairs to her bedroom, she smelled a fire burning and saw Hamish's bedroom door was open. As she reached the end of the hall, Bessie tore out of Hamish's bedroom and greeted her, her tail wagging crazily. He called out after the dog but as usual was ignored. She grinned as she walked into her bedroom and closed the door. \n\nMaid: One. Boss: Zero.\n\nShe was so focused on putting the bags on her bed that she hadn't noticed her personal items on the nightstand were missing until she opened the wardrobe and found... nothing. Not one apron was hung up. Confused, she went to the dresser and pulled open the drawers - her jeans and sweaters were also missing.\n\nHe's sending me home! He's probably got a suitcase packed in the kitchen and David's waiting to drive me to the airport. For fuck's sake!\n\nSuddenly fuming, she put the garment bag on her bed and stormed out into the hallway to Hamish's bedroom. Not controlling her voice, she asked, rather snottily, \"Sir? Where are my clothes and my things?!\"\n\n\"Welcome home,\" he said cockily from the sofa. Putting the book he'd been reading down, he approached her with a smile on his face. \"Were you successful in -\"\n\n\"Are you sending me home?!\" she asked angrily.\n\n\"What?\" he asked. \"Of course not, Gayle.\" He went to the doorway. \"Follow me.\"\n\n\"No! I will not follow you. What the hell is going on?!\"\n\nWithout a reply, he walked into her bedroom then walked out carrying her dress. She stood in his doorway with her arms crossed over her chest as he passed the hallway bathroom into the spare bedroom at the top of the stairs.\n\n\"Come hither, woman!\" he called out, his voice much softer.\n\nGiving him a dirty look, not in the playing mood, she stepped through the doorway but then stopped when she saw him by the armoire with the doors open, and hanging there were her aprons and the garment bag with her dress. She looked around the room and saw a huge bouquet of freshly-picked flowers on the dresser, her books and alarm clock on the nightstand. A blazing fire was burning in the fireplace, and her cheeks blushed, from embarrassment or the heat from the fire, she didn't know. \n\nFrowning, she looked at him dumfounded. \"What is this? What's going on?\"\n\n\"I told you that you'd be in here by the end of September, so I lost that bet as well.\"\n\nShe didn't smile. She didn't thank him. She just stood there staring at him.\n\nClosing the armoire door, he stepped to her. \"I was planning on giving this room to you before... everything went to shit. But you deserve it.\"\n\nShe sighed heavily. \"Well, I do appreciate the thought, but this won't make everything right between us.\"\n\n\"What will?\" he asked.\n\nShaking her head, she answered, \"I have no idea.\""
    ],
    "authorname": "Addicted2Writing",
    "tags": [
        "bondage",
        "domination",
        "gayle"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/aprons-for-gayle-ch-17"
}